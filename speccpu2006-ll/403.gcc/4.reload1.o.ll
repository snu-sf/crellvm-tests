; ModuleID = 'reload1.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32 }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.insn_chain = type { %struct.insn_chain*, %struct.insn_chain*, %struct.insn_chain*, i32, %struct.rtx_def*, %struct.bitmap_head_def, %struct.bitmap_head_def, %struct.reload*, i32, i64, %struct.needs, i8 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.reload = type { %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, i32, i32, i32, i32, i8 }
%struct.needs = type { [2 x [25 x i16]], [25 x i16] }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon.0, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.2, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon.0 = type { i64 }
%union.anon.2 = type { %struct.function* }
%struct.lang_decl = type opaque
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.elim_table = type { i32, i32, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, %struct.rtx_def* }
%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.optab = type { i32, [59 x %struct.anon.4] }
%struct.anon.4 = type { i32, %struct.rtx_def* }
%struct.insn_data = type { i8*, i8*, %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.insn_operand_data*, i8, i8, i8, i8 }
%struct.insn_operand_data = type { i32 (%struct.rtx_def*, i32)*, i8*, i16, i8, i8 }
%struct.recog_data = type { [30 x %struct.rtx_def*], [30 x %struct.rtx_def**], [30 x i8*], [30 x i32], [30 x i32], [4 x %struct.rtx_def**], [4 x i8], i8, i8, i8, %struct.rtx_def* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.elim_table_1 = type { i32, i32 }
%struct.anon.5 = type { [6 x %struct.reg_use], i32, %struct.rtx_def*, i32, i32 }
%struct.reg_use = type { %struct.rtx_def*, %struct.rtx_def** }
%struct.basic_block_def = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %union.tree_node*, %struct.edge_def*, %struct.edge_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i8*, i32, i32, i64, i32, i32 }
%struct.edge_def = type { %struct.edge_def*, %struct.edge_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def*, i8*, i32, i32, i64 }
%struct.mem_attrs = type { i64, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.reg_info_def = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.cselib_val_struct = type { i32, %union.anon, %struct.elt_loc_list*, %struct.elt_list* }
%union.anon = type { %struct.rtx_def* }
%struct.elt_loc_list = type { %struct.elt_loc_list*, %struct.rtx_def*, %struct.rtx_def* }
%struct.elt_list = type { %struct.elt_list*, %struct.cselib_val_struct* }

@reload_in_progress = global i32 0, align 4
@target_flags = external global i32, align 4
@spill_indirect_levels = internal global i8 0, align 1
@.str = private unnamed_addr constant [4 x i8] c"foo\00", align 1
@indirect_symref_ok = common global i8 0, align 1
@double_reg_address_ok = common global i8 0, align 1
@reload_obstack = common global %struct.obstack zeroinitializer, align 8
@reload_startobj = common global i8* null, align 8
@spilled_pseudos = internal global %struct.bitmap_head_def zeroinitializer, align 8
@pseudos_counted = internal global %struct.bitmap_head_def zeroinitializer, align 8
@unused_insn_chains = internal global %struct.insn_chain* null, align 8
@reg_renumber = external global i16*, align 8
@reload_completed = external global i32, align 4
@.str.1 = private unnamed_addr constant [10 x i8] c"reload1.c\00", align 1
@__FUNCTION__.compute_use_by_pseudos = private unnamed_addr constant [23 x i8] c"compute_use_by_pseudos\00", align 1
@cfun = external global %struct.function*, align 8
@mode_class = external constant [59 x i32], align 16
@mode_size = external constant [59 x i8], align 16
@failure = internal global i32 0, align 4
@reload_firstobj = common global i8* null, align 8
@reload_first_uid = common global i32 0, align 4
@spill_stack_slot = internal global [53 x %struct.rtx_def*] zeroinitializer, align 16
@spill_stack_slot_width = internal global [53 x i32] zeroinitializer, align 16
@max_regno = external global i32, align 4
@call_used_regs = external global [53 x i8], align 16
@fixed_regs = external global [53 x i8], align 16
@regs_ever_live = external global [53 x i8], align 16
@reg_equiv_constant = common global %struct.rtx_def** null, align 8
@reg_equiv_mem = common global %struct.rtx_def** null, align 8
@reg_equiv_init = internal global %struct.rtx_def** null, align 8
@reg_equiv_address = common global %struct.rtx_def** null, align 8
@reg_max_ref_width = internal global i32* null, align 8
@reg_old_renumber = internal global i16* null, align 8
@pseudo_forbidden_regs = internal global i64* null, align 8
@pseudo_previous_regs = internal global i64* null, align 8
@bad_spill_regs_global = internal global i64 0, align 8
@num_eliminable_invariants = internal global i32 0, align 4
@rtx_class = external constant [153 x i8], align 16
@flag_pic = external global i32, align 4
@reg_equiv_memory_loc = common global %struct.rtx_def** null, align 8
@global_rtl = external global [11 x %struct.rtx_def*], align 16
@num_labels = internal global i32 0, align 4
@offsets_known_at = internal global i8* null, align 8
@offsets_at = internal global [4 x i32]* null, align 8
@num_eliminable = internal global i32 0, align 4
@insns_need_reload = internal global %struct.insn_chain* null, align 8
@something_needs_elimination = internal global i32 0, align 4
@last_spill_reg = internal global i32 0, align 4
@used_spill_regs = internal global i64 0, align 8
@reg_eliminate = internal global %struct.elim_table* null, align 8
@frame_pointer_needed = external global i32, align 4
@caller_save_needed = common global i32 0, align 4
@something_needs_operands_changed = common global i32 0, align 4
@__FUNCTION__.reload = private unnamed_addr constant [7 x i8] c"reload\00", align 1
@n_basic_blocks = external global i32, align 4
@basic_block_info = external global %struct.varray_head_tag*, align 8
@flag_stack_check = external global i32, align 4
@reload.verbose_warned = internal global i32 0, align 4
@.str.2 = private unnamed_addr constant [49 x i8] c"frame size too large for reliable stack checking\00", align 1
@.str.3 = private unnamed_addr constant [43 x i8] c"try reducing the number of local variables\00", align 1
@n_spills = internal global i32 0, align 4
@spill_regs = internal global [53 x i16] zeroinitializer, align 16
@current_function_decl = external global %union.tree_node*, align 8
@const_int_rtx = external global [129 x %struct.rtx_def*], align 16
@__FUNCTION__.eliminate_regs = private unnamed_addr constant [15 x i8] c"eliminate_regs\00", align 1
@rtx_format = external constant [153 x i8*], align 16
@rtx_length = external constant [153 x i8], align 16
@rld = external global [180 x %struct.reload], align 16
@__FUNCTION__.reloads_conflict = private unnamed_addr constant [17 x i8] c"reloads_conflict\00", align 1
@spill_reg_order = internal global [53 x i16] zeroinitializer, align 16
@reload_spill_index = common global [180 x i32] zeroinitializer, align 16
@optab_table = external global [49 x %struct.optab*], align 16
@insn_data = external constant [0 x %struct.insn_data], align 8
@regclass_map = external constant [53 x i32], align 16
@flag_expensive_optimizations = external global i32, align 4
@__FUNCTION__.fixup_abnormal_edges = private unnamed_addr constant [21 x i8] c"fixup_abnormal_edges\00", align 1
@reload_in_optab = common global [59 x i32] zeroinitializer, align 16
@reload_out_optab = common global [59 x i32] zeroinitializer, align 16
@reload_insn_chain = common global %struct.insn_chain* null, align 8
@num_not_at_initial_offset = common global i32 0, align 4
@reload_inherited = common global [180 x i8] zeroinitializer, align 16
@reload_inheritance_insn = common global [180 x %struct.rtx_def*] zeroinitializer, align 16
@reload_override_in = common global [180 x %struct.rtx_def*] zeroinitializer, align 16
@__FUNCTION__.replace_pseudos_in_call_usage = private unnamed_addr constant [30 x i8] c"replace_pseudos_in_call_usage\00", align 1
@recog_data = external global %struct.recog_data, align 8
@reg_class_contents = external global [25 x i64], align 16
@reg_class_subunion = external global [25 x [25 x i32]], align 16
@reload_insn_firstobj = internal global i8* null, align 8
@n_reloads = external global i32, align 4
@__FUNCTION__.eliminate_regs_in_insn = private unnamed_addr constant [23 x i8] c"eliminate_regs_in_insn\00", align 1
@__FUNCTION__.elimination_effects = private unnamed_addr constant [20 x i8] c"elimination_effects\00", align 1
@reload_order = internal global [180 x i16] zeroinitializer, align 16
@used_spill_regs_local = internal global i64 0, align 8
@rtl_dump_file = external global %struct._IO_FILE*, align 8
@.str.4 = private unnamed_addr constant [23 x i8] c"Spilling for insn %d.\0A\00", align 1
@reg_class_size = external global [25 x i32], align 16
@fixed_reg_set = external global i64, align 8
@bad_spill_regs = internal global i64 0, align 8
@spill_cost = internal global [53 x i32] zeroinitializer, align 16
@spill_add_cost = internal global [53 x i32] zeroinitializer, align 16
@reg_n_info = external global %struct.varray_head_tag*, align 8
@__FUNCTION__.count_pseudo = private unnamed_addr constant [13 x i8] c"count_pseudo\00", align 1
@inv_reg_alloc_order = external global [53 x i32], align 16
@.str.5 = private unnamed_addr constant [28 x i8] c"Using reg %d for reload %d\0A\00", align 1
@__FUNCTION__.find_reg = private unnamed_addr constant [9 x i8] c"find_reg\00", align 1
@spill_failure.reg_class_names = internal constant [25 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0)], align 16
@.str.6 = private unnamed_addr constant [8 x i8] c"NO_REGS\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"AREG\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"DREG\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"CREG\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"BREG\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"SIREG\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"DIREG\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"AD_REGS\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"Q_REGS\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"NON_Q_REGS\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"INDEX_REGS\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"LEGACY_REGS\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"GENERAL_REGS\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"FP_TOP_REG\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"FP_SECOND_REG\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"FLOAT_REGS\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"SSE_REGS\00", align 1
@.str.23 = private unnamed_addr constant [9 x i8] c"MMX_REGS\00", align 1
@.str.24 = private unnamed_addr constant [16 x i8] c"FP_TOP_SSE_REGS\00", align 1
@.str.25 = private unnamed_addr constant [19 x i8] c"FP_SECOND_SSE_REGS\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"FLOAT_SSE_REGS\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"FLOAT_INT_REGS\00", align 1
@.str.28 = private unnamed_addr constant [13 x i8] c"INT_SSE_REGS\00", align 1
@.str.29 = private unnamed_addr constant [19 x i8] c"FLOAT_INT_SSE_REGS\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"ALL_REGS\00", align 1
@.str.31 = private unnamed_addr constant [58 x i8] c"can't find a register in class `%s' while reloading `asm'\00", align 1
@.str.32 = private unnamed_addr constant [49 x i8] c"unable to find a register to spill in class `%s'\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"this is the insn:\00", align 1
@__FUNCTION__.spill_failure = private unnamed_addr constant [14 x i8] c"spill_failure\00", align 1
@__FUNCTION__.verify_initial_elim_offsets = private unnamed_addr constant [28 x i8] c"verify_initial_elim_offsets\00", align 1
@flag_omit_frame_pointer = external global i32, align 4
@reg_eliminate_1 = internal constant [4 x %struct.elim_table_1] [%struct.elim_table_1 { i32 16, i32 7 }, %struct.elim_table_1 { i32 16, i32 6 }, %struct.elim_table_1 { i32 20, i32 7 }, %struct.elim_table_1 { i32 20, i32 6 }], align 16
@__FUNCTION__.finish_spills = private unnamed_addr constant [14 x i8] c"finish_spills\00", align 1
@.str.34 = private unnamed_addr constant [29 x i8] c" Register %d now on stack.\0A\0A\00", align 1
@.str.35 = private unnamed_addr constant [26 x i8] c" Register %d now in %d.\0A\0A\00", align 1
@spill_reg_rtx = internal global [53 x %struct.rtx_def*] zeroinitializer, align 16
@spill_reg_store = internal global [53 x %struct.rtx_def*] zeroinitializer, align 16
@reg_last_reload_reg = internal global %struct.rtx_def** null, align 8
@reg_has_output_reload = internal global i8* null, align 8
@reg_reloaded_valid = internal global i64 0, align 8
@reg_is_output_reload = internal global i64 0, align 8
@.str.36 = private unnamed_addr constant [41 x i8] c"`asm' operand requires impossible reload\00", align 1
@call_used_reg_set = external global i64, align 8
@reg_class_superunion = external global [25 x [25 x i32]], align 16
@optimize = external global i32, align 4
@reg_reloaded_contents = internal global [53 x i32] zeroinitializer, align 16
@n_earlyclobbers = external global i32, align 4
@reload_earlyclobbers = external global [30 x %struct.rtx_def*], align 16
@reg_used_in_insn = internal global i64 0, align 8
@reg_reloaded_dead = internal global i64 0, align 8
@reg_reloaded_insn = internal global [53 x %struct.rtx_def*] zeroinitializer, align 16
@reload_reg_used_for_inherit = internal global i64 0, align 8
@__FUNCTION__.choose_reload_regs = private unnamed_addr constant [19 x i8] c"choose_reload_regs\00", align 1
@reload_reg_used_at_all = internal global i64 0, align 8
@reload_reg_used = internal global i64 0, align 8
@reload_reg_used_in_op_addr = internal global i64 0, align 8
@reload_reg_used_in_op_addr_reload = internal global i64 0, align 8
@reload_reg_used_in_insn = internal global i64 0, align 8
@reload_reg_used_in_other_addr = internal global i64 0, align 8
@reload_n_operands = external global i32, align 4
@reload_reg_used_in_output = internal global [30 x i64] zeroinitializer, align 16
@reload_reg_used_in_input = internal global [30 x i64] zeroinitializer, align 16
@reload_reg_used_in_input_addr = internal global [30 x i64] zeroinitializer, align 16
@reload_reg_used_in_inpaddr_addr = internal global [30 x i64] zeroinitializer, align 16
@reload_reg_used_in_output_addr = internal global [30 x i64] zeroinitializer, align 16
@reload_reg_used_in_outaddr_addr = internal global [30 x i64] zeroinitializer, align 16
@reload_reg_unavailable = internal global i64 0, align 8
@__FUNCTION__.reload_reg_free_p = private unnamed_addr constant [18 x i8] c"reload_reg_free_p\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"could not find a spill register\00", align 1
@__FUNCTION__.failed_reload = private unnamed_addr constant [14 x i8] c"failed_reload\00", align 1
@.str.38 = private unnamed_addr constant [56 x i8] c"`asm' operand constraint incompatible with operand size\00", align 1
@reg_reloaded_died = internal global i64 0, align 8
@other_output_reload_insns = internal global [30 x %struct.rtx_def*] zeroinitializer, align 16
@outaddr_address_reload_insns = internal global [30 x %struct.rtx_def*] zeroinitializer, align 16
@output_address_reload_insns = internal global [30 x %struct.rtx_def*] zeroinitializer, align 16
@output_reload_insns = internal global [30 x %struct.rtx_def*] zeroinitializer, align 16
@inpaddr_address_reload_insns = internal global [30 x %struct.rtx_def*] zeroinitializer, align 16
@input_address_reload_insns = internal global [30 x %struct.rtx_def*] zeroinitializer, align 16
@input_reload_insns = internal global [30 x %struct.rtx_def*] zeroinitializer, align 16
@other_input_address_reload_insns = internal global %struct.rtx_def* null, align 8
@other_input_reload_insns = internal global %struct.rtx_def* null, align 8
@operand_reload_insns = internal global %struct.rtx_def* null, align 8
@other_operand_reload_insns = internal global %struct.rtx_def* null, align 8
@.str.39 = private unnamed_addr constant [24 x i8] c"\0AReloads for insn # %d\0A\00", align 1
@new_spill_reg_store = internal global [53 x %struct.rtx_def*] zeroinitializer, align 16
@spill_reg_stored_to = internal global [53 x %struct.rtx_def*] zeroinitializer, align 16
@reg_raw_mode = external global [53 x i32], align 16
@__FUNCTION__.emit_input_reload_insns = private unnamed_addr constant [24 x i8] c"emit_input_reload_insns\00", align 1
@flag_non_call_exceptions = external global i32, align 4
@__FUNCTION__.do_output_reload = private unnamed_addr constant [17 x i8] c"do_output_reload\00", align 1
@.str.40 = private unnamed_addr constant [22 x i8] c"VOIDmode on an output\00", align 1
@__FUNCTION__.emit_output_reload_insns = private unnamed_addr constant [25 x i8] c"emit_output_reload_insns\00", align 1
@.str.41 = private unnamed_addr constant [36 x i8] c"output operand is constant in `asm'\00", align 1
@word_mode = external global i32, align 4
@__FUNCTION__.reload_reg_reaches_end_p = private unnamed_addr constant [25 x i8] c"reload_reg_reaches_end_p\00", align 1
@__FUNCTION__.clear_reload_reg_in_use = private unnamed_addr constant [24 x i8] c"clear_reload_reg_in_use\00", align 1
@basic_block_for_insn = external global %struct.varray_head_tag*, align 8
@__FUNCTION__.reload_cse_simplify_operands = private unnamed_addr constant [29 x i8] c"reload_cse_simplify_operands\00", align 1
@which_alternative = external global i32, align 4
@reload_combine_ruid = internal global i32 0, align 4
@reg_state = internal global [53 x %struct.anon.5] zeroinitializer, align 16
@__FUNCTION__.reload_combine_note_use = private unnamed_addr constant [24 x i8] c"reload_combine_note_use\00", align 1
@reg_set_luid = internal global [53 x i32] zeroinitializer, align 16
@move2add_last_label_luid = internal global i32 0, align 4
@move2add_luid = internal global i32 0, align 4
@reg_mode = internal global [53 x i32] zeroinitializer, align 16
@reg_base_reg = internal global [53 x i32] zeroinitializer, align 16
@reg_offset = internal global [53 x i64] zeroinitializer, align 16
@mode_mask_array = external constant [59 x i64], align 16
@mode_bitsize = external constant [59 x i16], align 16

; Function Attrs: nounwind uwtable
define void @init_reload() #0 {
entry:
  %i = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  %__h = alloca %struct.obstack*, align 8
  %__o = alloca %struct.obstack*, align 8
  %__len = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %__o1 = alloca %struct.obstack*, align 8
  %value = alloca i8*, align 8
  %tmp81 = alloca i8*, align 8
  %0 = load i32, i32* @target_flags, align 4
  %and = and i32 %0, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond = select i1 %tobool, i32 5, i32 4
  %1 = load i32, i32* @target_flags, align 4
  %and1 = and i32 %1, 33554432
  %tobool2 = icmp ne i32 %and1, 0
  %cond3 = select i1 %tobool2, i32 5, i32 4
  %2 = load i32, i32* @target_flags, align 4
  %and4 = and i32 %2, 33554432
  %tobool5 = icmp ne i32 %and4, 0
  %cond6 = select i1 %tobool5, i32 5, i32 4
  %call = call %struct.rtx_def* @gen_rtx_REG(i32 %cond6, i32 58)
  %call7 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4)
  %call8 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %cond3, %struct.rtx_def* %call, %struct.rtx_def* %call7)
  %call9 = call %struct.rtx_def* @gen_rtx_MEM(i32 %cond, %struct.rtx_def* %call8)
  store %struct.rtx_def* %call9, %struct.rtx_def** %tem, align 8
  store i8 0, i8* @spill_indirect_levels, align 1
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %call10 = call i32 @memory_address_p(i32 2, %struct.rtx_def* %3)
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i8, i8* @spill_indirect_levels, align 1
  %inc = add i8 %4, 1
  store i8 %inc, i8* @spill_indirect_levels, align 1
  %5 = load i32, i32* @target_flags, align 4
  %and12 = and i32 %5, 33554432
  %tobool13 = icmp ne i32 %and12, 0
  %cond14 = select i1 %tobool13, i32 5, i32 4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %call15 = call %struct.rtx_def* @gen_rtx_MEM(i32 %cond14, %struct.rtx_def* %6)
  store %struct.rtx_def* %call15, %struct.rtx_def** %tem, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %7 = load i32, i32* @target_flags, align 4
  %and16 = and i32 %7, 33554432
  %tobool17 = icmp ne i32 %and16, 0
  %cond18 = select i1 %tobool17, i32 5, i32 4
  %8 = load i32, i32* @target_flags, align 4
  %and19 = and i32 %8, 33554432
  %tobool20 = icmp ne i32 %and19, 0
  %cond21 = select i1 %tobool20, i32 5, i32 4
  %call22 = call %struct.rtx_def* @gen_rtx_fmt_s(i32 68, i32 %cond21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0))
  %call23 = call %struct.rtx_def* @gen_rtx_MEM(i32 %cond18, %struct.rtx_def* %call22)
  store %struct.rtx_def* %call23, %struct.rtx_def** %tem, align 8
  %9 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %call24 = call i32 @memory_address_p(i32 2, %struct.rtx_def* %9)
  %conv = trunc i32 %call24 to i8
  store i8 %conv, i8* @indirect_symref_ok, align 1
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.end
  %10 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %10, 53
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* @target_flags, align 4
  %and26 = and i32 %11, 33554432
  %tobool27 = icmp ne i32 %and26, 0
  %cond28 = select i1 %tobool27, i32 5, i32 4
  %12 = load i32, i32* @target_flags, align 4
  %and29 = and i32 %12, 33554432
  %tobool30 = icmp ne i32 %and29, 0
  %cond31 = select i1 %tobool30, i32 5, i32 4
  %call32 = call %struct.rtx_def* @gen_rtx_REG(i32 %cond31, i32 6)
  %13 = load i32, i32* @target_flags, align 4
  %and33 = and i32 %13, 33554432
  %tobool34 = icmp ne i32 %and33, 0
  %cond35 = select i1 %tobool34, i32 5, i32 4
  %14 = load i32, i32* %i, align 4
  %call36 = call %struct.rtx_def* @gen_rtx_REG(i32 %cond35, i32 %14)
  %call37 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %cond28, %struct.rtx_def* %call32, %struct.rtx_def* %call36)
  store %struct.rtx_def* %call37, %struct.rtx_def** %tem, align 8
  %15 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %call38 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %15, i64 4)
  store %struct.rtx_def* %call38, %struct.rtx_def** %tem, align 8
  %16 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %call39 = call i32 @memory_address_p(i32 2, %struct.rtx_def* %16)
  %tobool40 = icmp ne i32 %call39, 0
  br i1 %tobool40, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i8 1, i8* @double_reg_address_ok, align 1
  br label %for.end

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %17 = load i32, i32* %i, align 4
  %inc41 = add nsw i32 %17, 1
  store i32 %inc41, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  call void @gcc_obstack_init(%struct.obstack* @reload_obstack)
  store %struct.obstack* @reload_obstack, %struct.obstack** %__h, align 8
  %18 = load %struct.obstack*, %struct.obstack** %__h, align 8
  store %struct.obstack* %18, %struct.obstack** %__o, align 8
  store i32 0, i32* %__len, align 4
  %19 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %19, i32 0, i32 4
  %20 = load i8*, i8** %chunk_limit, align 8
  %21 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 3
  %22 = load i8*, i8** %next_free, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %20 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %22 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %23 = load i32, i32* %__len, align 4
  %conv42 = sext i32 %23 to i64
  %cmp43 = icmp slt i64 %sub.ptr.sub, %conv42
  br i1 %cmp43, label %if.then.45, label %if.end.46

if.then.45:                                       ; preds = %for.end
  %24 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %25 = load i32, i32* %__len, align 4
  call void @_obstack_newchunk(%struct.obstack* %24, i32 %25)
  br label %if.end.46

if.end.46:                                        ; preds = %if.then.45, %for.end
  %26 = load i32, i32* %__len, align 4
  %27 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %next_free47 = getelementptr inbounds %struct.obstack, %struct.obstack* %27, i32 0, i32 3
  %28 = load i8*, i8** %next_free47, align 8
  %idx.ext = sext i32 %26 to i64
  %add.ptr = getelementptr inbounds i8, i8* %28, i64 %idx.ext
  store i8* %add.ptr, i8** %next_free47, align 8
  %29 = load %struct.obstack*, %struct.obstack** %__h, align 8
  store %struct.obstack* %29, %struct.obstack** %__o1, align 8
  %30 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %30, i32 0, i32 2
  %31 = load i8*, i8** %object_base, align 8
  store i8* %31, i8** %value, align 8
  %32 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free50 = getelementptr inbounds %struct.obstack, %struct.obstack* %32, i32 0, i32 3
  %33 = load i8*, i8** %next_free50, align 8
  %34 = load i8*, i8** %value, align 8
  %cmp51 = icmp eq i8* %33, %34
  br i1 %cmp51, label %if.then.53, label %if.end.54

if.then.53:                                       ; preds = %if.end.46
  %35 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %35, i32 0, i32 10
  %bf.load = load i8, i8* %maybe_empty_object, align 8
  %bf.clear = and i8 %bf.load, -3
  %bf.set = or i8 %bf.clear, 2
  store i8 %bf.set, i8* %maybe_empty_object, align 8
  br label %if.end.54

if.end.54:                                        ; preds = %if.then.53, %if.end.46
  %36 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free55 = getelementptr inbounds %struct.obstack, %struct.obstack* %36, i32 0, i32 3
  %37 = load i8*, i8** %next_free55, align 8
  %sub.ptr.lhs.cast56 = ptrtoint i8* %37 to i64
  %sub.ptr.sub57 = sub i64 %sub.ptr.lhs.cast56, 0
  %38 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %38, i32 0, i32 6
  %39 = load i32, i32* %alignment_mask, align 4
  %conv58 = sext i32 %39 to i64
  %add = add nsw i64 %sub.ptr.sub57, %conv58
  %40 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %alignment_mask59 = getelementptr inbounds %struct.obstack, %struct.obstack* %40, i32 0, i32 6
  %41 = load i32, i32* %alignment_mask59, align 4
  %neg = xor i32 %41, -1
  %conv60 = sext i32 %neg to i64
  %and61 = and i64 %add, %conv60
  %add.ptr62 = getelementptr inbounds i8, i8* null, i64 %and61
  %42 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free63 = getelementptr inbounds %struct.obstack, %struct.obstack* %42, i32 0, i32 3
  store i8* %add.ptr62, i8** %next_free63, align 8
  %43 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free64 = getelementptr inbounds %struct.obstack, %struct.obstack* %43, i32 0, i32 3
  %44 = load i8*, i8** %next_free64, align 8
  %45 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %45, i32 0, i32 1
  %46 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8
  %47 = bitcast %struct._obstack_chunk* %46 to i8*
  %sub.ptr.lhs.cast65 = ptrtoint i8* %44 to i64
  %sub.ptr.rhs.cast66 = ptrtoint i8* %47 to i64
  %sub.ptr.sub67 = sub i64 %sub.ptr.lhs.cast65, %sub.ptr.rhs.cast66
  %48 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk_limit68 = getelementptr inbounds %struct.obstack, %struct.obstack* %48, i32 0, i32 4
  %49 = load i8*, i8** %chunk_limit68, align 8
  %50 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk69 = getelementptr inbounds %struct.obstack, %struct.obstack* %50, i32 0, i32 1
  %51 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk69, align 8
  %52 = bitcast %struct._obstack_chunk* %51 to i8*
  %sub.ptr.lhs.cast70 = ptrtoint i8* %49 to i64
  %sub.ptr.rhs.cast71 = ptrtoint i8* %52 to i64
  %sub.ptr.sub72 = sub i64 %sub.ptr.lhs.cast70, %sub.ptr.rhs.cast71
  %cmp73 = icmp sgt i64 %sub.ptr.sub67, %sub.ptr.sub72
  br i1 %cmp73, label %if.then.75, label %if.end.78

if.then.75:                                       ; preds = %if.end.54
  %53 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk_limit76 = getelementptr inbounds %struct.obstack, %struct.obstack* %53, i32 0, i32 4
  %54 = load i8*, i8** %chunk_limit76, align 8
  %55 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free77 = getelementptr inbounds %struct.obstack, %struct.obstack* %55, i32 0, i32 3
  store i8* %54, i8** %next_free77, align 8
  br label %if.end.78

if.end.78:                                        ; preds = %if.then.75, %if.end.54
  %56 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free79 = getelementptr inbounds %struct.obstack, %struct.obstack* %56, i32 0, i32 3
  %57 = load i8*, i8** %next_free79, align 8
  %58 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %object_base80 = getelementptr inbounds %struct.obstack, %struct.obstack* %58, i32 0, i32 2
  store i8* %57, i8** %object_base80, align 8
  %59 = load i8*, i8** %value, align 8
  store i8* %59, i8** %tmp81
  %60 = load i8*, i8** %tmp81
  store i8* %60, i8** %tmp
  %61 = load i8*, i8** %tmp
  store i8* %61, i8** @reload_startobj, align 8
  %call82 = call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* @spilled_pseudos)
  %call83 = call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* @pseudos_counted)
  ret void
}

declare %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_ee(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_REG(i32, i32) #1

declare %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #1

declare i32 @memory_address_p(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_s(i32, i32, i8*) #1

declare %struct.rtx_def* @plus_constant_wide(%struct.rtx_def*, i64) #1

declare void @gcc_obstack_init(%struct.obstack*) #1

declare void @_obstack_newchunk(%struct.obstack*, i32) #1

declare %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def*) #1

; Function Attrs: nounwind uwtable
define %struct.insn_chain* @new_insn_chain() #0 {
entry:
  %c = alloca %struct.insn_chain*, align 8
  %__h = alloca %struct.obstack*, align 8
  %__o = alloca %struct.obstack*, align 8
  %__len = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %__o1 = alloca %struct.obstack*, align 8
  %value = alloca i8*, align 8
  %tmp37 = alloca i8*, align 8
  %0 = load %struct.insn_chain*, %struct.insn_chain** @unused_insn_chains, align 8
  %cmp = icmp eq %struct.insn_chain* %0, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store %struct.obstack* @reload_obstack, %struct.obstack** %__h, align 8
  %1 = load %struct.obstack*, %struct.obstack** %__h, align 8
  store %struct.obstack* %1, %struct.obstack** %__o, align 8
  store i32 264, i32* %__len, align 4
  %2 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %2, i32 0, i32 4
  %3 = load i8*, i8** %chunk_limit, align 8
  %4 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 3
  %5 = load i8*, i8** %next_free, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %6 = load i32, i32* %__len, align 4
  %conv = sext i32 %6 to i64
  %cmp1 = icmp slt i64 %sub.ptr.sub, %conv
  br i1 %cmp1, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %if.then
  %7 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %8 = load i32, i32* %__len, align 4
  call void @_obstack_newchunk(%struct.obstack* %7, i32 %8)
  br label %if.end

if.end:                                           ; preds = %if.then.3, %if.then
  %9 = load i32, i32* %__len, align 4
  %10 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %next_free4 = getelementptr inbounds %struct.obstack, %struct.obstack* %10, i32 0, i32 3
  %11 = load i8*, i8** %next_free4, align 8
  %idx.ext = sext i32 %9 to i64
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext
  store i8* %add.ptr, i8** %next_free4, align 8
  %12 = load %struct.obstack*, %struct.obstack** %__h, align 8
  store %struct.obstack* %12, %struct.obstack** %__o1, align 8
  %13 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %13, i32 0, i32 2
  %14 = load i8*, i8** %object_base, align 8
  store i8* %14, i8** %value, align 8
  %15 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free7 = getelementptr inbounds %struct.obstack, %struct.obstack* %15, i32 0, i32 3
  %16 = load i8*, i8** %next_free7, align 8
  %17 = load i8*, i8** %value, align 8
  %cmp8 = icmp eq i8* %16, %17
  br i1 %cmp8, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %if.end
  %18 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %18, i32 0, i32 10
  %bf.load = load i8, i8* %maybe_empty_object, align 8
  %bf.clear = and i8 %bf.load, -3
  %bf.set = or i8 %bf.clear, 2
  store i8 %bf.set, i8* %maybe_empty_object, align 8
  br label %if.end.11

if.end.11:                                        ; preds = %if.then.10, %if.end
  %19 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free12 = getelementptr inbounds %struct.obstack, %struct.obstack* %19, i32 0, i32 3
  %20 = load i8*, i8** %next_free12, align 8
  %sub.ptr.lhs.cast13 = ptrtoint i8* %20 to i64
  %sub.ptr.sub14 = sub i64 %sub.ptr.lhs.cast13, 0
  %21 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 6
  %22 = load i32, i32* %alignment_mask, align 4
  %conv15 = sext i32 %22 to i64
  %add = add nsw i64 %sub.ptr.sub14, %conv15
  %23 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %alignment_mask16 = getelementptr inbounds %struct.obstack, %struct.obstack* %23, i32 0, i32 6
  %24 = load i32, i32* %alignment_mask16, align 4
  %neg = xor i32 %24, -1
  %conv17 = sext i32 %neg to i64
  %and = and i64 %add, %conv17
  %add.ptr18 = getelementptr inbounds i8, i8* null, i64 %and
  %25 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free19 = getelementptr inbounds %struct.obstack, %struct.obstack* %25, i32 0, i32 3
  store i8* %add.ptr18, i8** %next_free19, align 8
  %26 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free20 = getelementptr inbounds %struct.obstack, %struct.obstack* %26, i32 0, i32 3
  %27 = load i8*, i8** %next_free20, align 8
  %28 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %28, i32 0, i32 1
  %29 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8
  %30 = bitcast %struct._obstack_chunk* %29 to i8*
  %sub.ptr.lhs.cast21 = ptrtoint i8* %27 to i64
  %sub.ptr.rhs.cast22 = ptrtoint i8* %30 to i64
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22
  %31 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk_limit24 = getelementptr inbounds %struct.obstack, %struct.obstack* %31, i32 0, i32 4
  %32 = load i8*, i8** %chunk_limit24, align 8
  %33 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk25 = getelementptr inbounds %struct.obstack, %struct.obstack* %33, i32 0, i32 1
  %34 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk25, align 8
  %35 = bitcast %struct._obstack_chunk* %34 to i8*
  %sub.ptr.lhs.cast26 = ptrtoint i8* %32 to i64
  %sub.ptr.rhs.cast27 = ptrtoint i8* %35 to i64
  %sub.ptr.sub28 = sub i64 %sub.ptr.lhs.cast26, %sub.ptr.rhs.cast27
  %cmp29 = icmp sgt i64 %sub.ptr.sub23, %sub.ptr.sub28
  br i1 %cmp29, label %if.then.31, label %if.end.34

if.then.31:                                       ; preds = %if.end.11
  %36 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk_limit32 = getelementptr inbounds %struct.obstack, %struct.obstack* %36, i32 0, i32 4
  %37 = load i8*, i8** %chunk_limit32, align 8
  %38 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free33 = getelementptr inbounds %struct.obstack, %struct.obstack* %38, i32 0, i32 3
  store i8* %37, i8** %next_free33, align 8
  br label %if.end.34

if.end.34:                                        ; preds = %if.then.31, %if.end.11
  %39 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free35 = getelementptr inbounds %struct.obstack, %struct.obstack* %39, i32 0, i32 3
  %40 = load i8*, i8** %next_free35, align 8
  %41 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %object_base36 = getelementptr inbounds %struct.obstack, %struct.obstack* %41, i32 0, i32 2
  store i8* %40, i8** %object_base36, align 8
  %42 = load i8*, i8** %value, align 8
  store i8* %42, i8** %tmp37
  %43 = load i8*, i8** %tmp37
  store i8* %43, i8** %tmp
  %44 = load i8*, i8** %tmp
  %45 = bitcast i8* %44 to %struct.insn_chain*
  store %struct.insn_chain* %45, %struct.insn_chain** %c, align 8
  %46 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8
  %live_throughout = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %46, i32 0, i32 5
  %call = call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* %live_throughout)
  %47 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8
  %dead_or_set = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %47, i32 0, i32 6
  %call38 = call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* %dead_or_set)
  br label %if.end.39

if.else:                                          ; preds = %entry
  %48 = load %struct.insn_chain*, %struct.insn_chain** @unused_insn_chains, align 8
  store %struct.insn_chain* %48, %struct.insn_chain** %c, align 8
  %49 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8
  %next = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %49, i32 0, i32 0
  %50 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8
  store %struct.insn_chain* %50, %struct.insn_chain** @unused_insn_chains, align 8
  br label %if.end.39

if.end.39:                                        ; preds = %if.else, %if.end.34
  %51 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8
  %is_caller_save_insn = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %51, i32 0, i32 11
  %bf.load40 = load i8, i8* %is_caller_save_insn, align 2
  %bf.clear41 = and i8 %bf.load40, -9
  store i8 %bf.clear41, i8* %is_caller_save_insn, align 2
  %52 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8
  %need_operand_change = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %52, i32 0, i32 11
  %bf.load42 = load i8, i8* %need_operand_change, align 2
  %bf.clear43 = and i8 %bf.load42, -3
  store i8 %bf.clear43, i8* %need_operand_change, align 2
  %53 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8
  %need_reload = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %53, i32 0, i32 11
  %bf.load44 = load i8, i8* %need_reload, align 2
  %bf.clear45 = and i8 %bf.load44, -2
  store i8 %bf.clear45, i8* %need_reload, align 2
  %54 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8
  %need_elim = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %54, i32 0, i32 11
  %bf.load46 = load i8, i8* %need_elim, align 2
  %bf.clear47 = and i8 %bf.load46, -5
  store i8 %bf.clear47, i8* %need_elim, align 2
  %55 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8
  ret %struct.insn_chain* %55
}

; Function Attrs: nounwind uwtable
define void @compute_use_by_pseudos(i64* %to, %struct.bitmap_head_def* %from) #0 {
entry:
  %to.addr = alloca i64*, align 8
  %from.addr = alloca %struct.bitmap_head_def*, align 8
  %regno = alloca i32, align 4
  %ptr_ = alloca %struct.bitmap_element_def*, align 8
  %indx_ = alloca i32, align 4
  %bit_num_ = alloca i32, align 4
  %word_num_ = alloca i32, align 4
  %word_ = alloca i64, align 8
  %mask_ = alloca i64, align 8
  %r = alloca i32, align 4
  %nregs = alloca i32, align 4
  store i64* %to, i64** %to.addr, align 8
  store %struct.bitmap_head_def* %from, %struct.bitmap_head_def** %from.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %from.addr, align 8
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %0, i32 0, i32 0
  %1 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8
  store %struct.bitmap_element_def* %1, %struct.bitmap_element_def** %ptr_, align 8
  store i32 0, i32* %indx_, align 4
  store i32 53, i32* %bit_num_, align 4
  store i32 0, i32* %word_num_, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body
  %2 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %cmp = icmp ne %struct.bitmap_element_def* %2, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %3 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %3, i32 0, i32 2
  %4 = load i32, i32* %indx, align 4
  %5 = load i32, i32* %indx_, align 4
  %cmp1 = icmp ult i32 %4, %5
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %6, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %7 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %next = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %7, i32 0, i32 0
  %8 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next, align 8
  store %struct.bitmap_element_def* %8, %struct.bitmap_element_def** %ptr_, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %cmp2 = icmp ne %struct.bitmap_element_def* %9, null
  br i1 %cmp2, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %while.end
  %10 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %indx3 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %10, i32 0, i32 2
  %11 = load i32, i32* %indx3, align 4
  %12 = load i32, i32* %indx_, align 4
  %cmp4 = icmp ne i32 %11, %12
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %bit_num_, align 4
  store i32 0, i32* %word_num_, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %while.end
  br label %for.cond

for.cond:                                         ; preds = %for.inc.134, %if.end
  %13 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %cmp5 = icmp ne %struct.bitmap_element_def* %13, null
  br i1 %cmp5, label %for.body, label %for.end.136

for.body:                                         ; preds = %for.cond
  br label %for.cond.6

for.cond.6:                                       ; preds = %for.inc.131, %for.body
  %14 = load i32, i32* %word_num_, align 4
  %cmp7 = icmp ult i32 %14, 2
  br i1 %cmp7, label %for.body.8, label %for.end.133

for.body.8:                                       ; preds = %for.cond.6
  %15 = load i32, i32* %word_num_, align 4
  %idxprom = zext i32 %15 to i64
  %16 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %bits = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %16, i32 0, i32 3
  %arrayidx = getelementptr inbounds [2 x i64], [2 x i64]* %bits, i32 0, i64 %idxprom
  %17 = load i64, i64* %arrayidx, align 8
  store i64 %17, i64* %word_, align 8
  %18 = load i64, i64* %word_, align 8
  %cmp9 = icmp ne i64 %18, 0
  br i1 %cmp9, label %if.then.10, label %if.end.130

if.then.10:                                       ; preds = %for.body.8
  br label %for.cond.11

for.cond.11:                                      ; preds = %for.inc, %if.then.10
  %19 = load i32, i32* %bit_num_, align 4
  %cmp12 = icmp ult i32 %19, 64
  br i1 %cmp12, label %for.body.13, label %for.end

for.body.13:                                      ; preds = %for.cond.11
  %20 = load i32, i32* %bit_num_, align 4
  %sh_prom = zext i32 %20 to i64
  %shl = shl i64 1, %sh_prom
  store i64 %shl, i64* %mask_, align 8
  %21 = load i64, i64* %word_, align 8
  %22 = load i64, i64* %mask_, align 8
  %and = and i64 %21, %22
  %cmp14 = icmp ne i64 %and, 0
  br i1 %cmp14, label %if.then.15, label %if.end.129

if.then.15:                                       ; preds = %for.body.13
  %23 = load i64, i64* %mask_, align 8
  %neg = xor i64 %23, -1
  %24 = load i64, i64* %word_, align 8
  %and16 = and i64 %24, %neg
  store i64 %and16, i64* %word_, align 8
  %25 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %indx17 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %25, i32 0, i32 2
  %26 = load i32, i32* %indx17, align 4
  %mul = mul i32 %26, 128
  %27 = load i32, i32* %word_num_, align 4
  %mul18 = mul i32 %27, 64
  %add = add i32 %mul, %mul18
  %28 = load i32, i32* %bit_num_, align 4
  %add19 = add i32 %add, %28
  store i32 %add19, i32* %regno, align 4
  %29 = load i32, i32* %regno, align 4
  %idxprom20 = zext i32 %29 to i64
  %30 = load i16*, i16** @reg_renumber, align 8
  %arrayidx21 = getelementptr inbounds i16, i16* %30, i64 %idxprom20
  %31 = load i16, i16* %arrayidx21, align 2
  %conv = sext i16 %31 to i32
  store i32 %conv, i32* %r, align 4
  %32 = load i32, i32* %r, align 4
  %cmp22 = icmp slt i32 %32, 0
  br i1 %cmp22, label %if.then.24, label %if.else

if.then.24:                                       ; preds = %if.then.15
  %33 = load i32, i32* @reload_completed, align 4
  %tobool = icmp ne i32 %33, 0
  br i1 %tobool, label %if.end.26, label %if.then.25

if.then.25:                                       ; preds = %if.then.24
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 573, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.compute_use_by_pseudos, i32 0, i32 0)) #5
  unreachable

if.end.26:                                        ; preds = %if.then.24
  br label %if.end.124

if.else:                                          ; preds = %if.then.15
  %34 = load i32, i32* %r, align 4
  %cmp27 = icmp sge i32 %34, 8
  br i1 %cmp27, label %land.lhs.true.29, label %lor.lhs.false

land.lhs.true.29:                                 ; preds = %if.else
  %35 = load i32, i32* %r, align 4
  %cmp30 = icmp sle i32 %35, 15
  br i1 %cmp30, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.29, %if.else
  %36 = load i32, i32* %r, align 4
  %cmp32 = icmp sge i32 %36, 21
  br i1 %cmp32, label %land.lhs.true.34, label %lor.lhs.false.37

land.lhs.true.34:                                 ; preds = %lor.lhs.false
  %37 = load i32, i32* %r, align 4
  %cmp35 = icmp sle i32 %37, 28
  br i1 %cmp35, label %cond.true, label %lor.lhs.false.37

lor.lhs.false.37:                                 ; preds = %land.lhs.true.34, %lor.lhs.false
  %38 = load i32, i32* %r, align 4
  %cmp38 = icmp sge i32 %38, 45
  br i1 %cmp38, label %land.lhs.true.40, label %lor.lhs.false.43

land.lhs.true.40:                                 ; preds = %lor.lhs.false.37
  %39 = load i32, i32* %r, align 4
  %cmp41 = icmp sle i32 %39, 52
  br i1 %cmp41, label %cond.true, label %lor.lhs.false.43

lor.lhs.false.43:                                 ; preds = %land.lhs.true.40, %lor.lhs.false.37
  %40 = load i32, i32* %r, align 4
  %cmp44 = icmp sge i32 %40, 29
  br i1 %cmp44, label %land.lhs.true.46, label %cond.false

land.lhs.true.46:                                 ; preds = %lor.lhs.false.43
  %41 = load i32, i32* %r, align 4
  %cmp47 = icmp sle i32 %41, 36
  br i1 %cmp47, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.46, %land.lhs.true.40, %land.lhs.true.34, %land.lhs.true.29
  %42 = load i32, i32* %regno, align 4
  %idxprom49 = zext i32 %42 to i64
  %43 = load %struct.function*, %struct.function** @cfun, align 8
  %emit = getelementptr inbounds %struct.function, %struct.function* %43, i32 0, i32 3
  %44 = load %struct.emit_status*, %struct.emit_status** %emit, align 8
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status, %struct.emit_status* %44, i32 0, i32 12
  %45 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx, align 8
  %arrayidx50 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %45, i64 %idxprom49
  %46 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx50, align 8
  %47 = bitcast %struct.rtx_def* %46 to i32*
  %bf.load = load i32, i32* %47, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom51 = sext i32 %bf.clear to i64
  %arrayidx52 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom51
  %48 = load i32, i32* %arrayidx52, align 4
  %cmp53 = icmp eq i32 %48, 5
  br i1 %cmp53, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %49 = load i32, i32* %regno, align 4
  %idxprom55 = zext i32 %49 to i64
  %50 = load %struct.function*, %struct.function** @cfun, align 8
  %emit56 = getelementptr inbounds %struct.function, %struct.function* %50, i32 0, i32 3
  %51 = load %struct.emit_status*, %struct.emit_status** %emit56, align 8
  %x_regno_reg_rtx57 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %51, i32 0, i32 12
  %52 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx57, align 8
  %arrayidx58 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %52, i64 %idxprom55
  %53 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx58, align 8
  %54 = bitcast %struct.rtx_def* %53 to i32*
  %bf.load59 = load i32, i32* %54, align 8
  %bf.lshr60 = lshr i32 %bf.load59, 16
  %bf.clear61 = and i32 %bf.lshr60, 255
  %idxprom62 = sext i32 %bf.clear61 to i64
  %arrayidx63 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom62
  %55 = load i32, i32* %arrayidx63, align 4
  %cmp64 = icmp eq i32 %55, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %56 = phi i1 [ true, %cond.true ], [ %cmp64, %lor.rhs ]
  %cond = select i1 %56, i32 2, i32 1
  br label %cond.end.114

cond.false:                                       ; preds = %land.lhs.true.46, %lor.lhs.false.43
  %57 = load i32, i32* %regno, align 4
  %idxprom66 = zext i32 %57 to i64
  %58 = load %struct.function*, %struct.function** @cfun, align 8
  %emit67 = getelementptr inbounds %struct.function, %struct.function* %58, i32 0, i32 3
  %59 = load %struct.emit_status*, %struct.emit_status** %emit67, align 8
  %x_regno_reg_rtx68 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %59, i32 0, i32 12
  %60 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx68, align 8
  %arrayidx69 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %60, i64 %idxprom66
  %61 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx69, align 8
  %62 = bitcast %struct.rtx_def* %61 to i32*
  %bf.load70 = load i32, i32* %62, align 8
  %bf.lshr71 = lshr i32 %bf.load70, 16
  %bf.clear72 = and i32 %bf.lshr71, 255
  %cmp73 = icmp eq i32 %bf.clear72, 18
  br i1 %cmp73, label %cond.true.75, label %cond.false.79

cond.true.75:                                     ; preds = %cond.false
  %63 = load i32, i32* @target_flags, align 4
  %and76 = and i32 %63, 33554432
  %tobool77 = icmp ne i32 %and76, 0
  %cond78 = select i1 %tobool77, i32 2, i32 3
  br label %cond.end.112

cond.false.79:                                    ; preds = %cond.false
  %64 = load i32, i32* %regno, align 4
  %idxprom80 = zext i32 %64 to i64
  %65 = load %struct.function*, %struct.function** @cfun, align 8
  %emit81 = getelementptr inbounds %struct.function, %struct.function* %65, i32 0, i32 3
  %66 = load %struct.emit_status*, %struct.emit_status** %emit81, align 8
  %x_regno_reg_rtx82 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %66, i32 0, i32 12
  %67 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx82, align 8
  %arrayidx83 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %67, i64 %idxprom80
  %68 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx83, align 8
  %69 = bitcast %struct.rtx_def* %68 to i32*
  %bf.load84 = load i32, i32* %69, align 8
  %bf.lshr85 = lshr i32 %bf.load84, 16
  %bf.clear86 = and i32 %bf.lshr85, 255
  %cmp87 = icmp eq i32 %bf.clear86, 24
  br i1 %cmp87, label %cond.true.89, label %cond.false.93

cond.true.89:                                     ; preds = %cond.false.79
  %70 = load i32, i32* @target_flags, align 4
  %and90 = and i32 %70, 33554432
  %tobool91 = icmp ne i32 %and90, 0
  %cond92 = select i1 %tobool91, i32 4, i32 6
  br label %cond.end

cond.false.93:                                    ; preds = %cond.false.79
  %71 = load i32, i32* %regno, align 4
  %idxprom94 = zext i32 %71 to i64
  %72 = load %struct.function*, %struct.function** @cfun, align 8
  %emit95 = getelementptr inbounds %struct.function, %struct.function* %72, i32 0, i32 3
  %73 = load %struct.emit_status*, %struct.emit_status** %emit95, align 8
  %x_regno_reg_rtx96 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %73, i32 0, i32 12
  %74 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx96, align 8
  %arrayidx97 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %74, i64 %idxprom94
  %75 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx97, align 8
  %76 = bitcast %struct.rtx_def* %75 to i32*
  %bf.load98 = load i32, i32* %76, align 8
  %bf.lshr99 = lshr i32 %bf.load98, 16
  %bf.clear100 = and i32 %bf.lshr99, 255
  %idxprom101 = sext i32 %bf.clear100 to i64
  %arrayidx102 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom101
  %77 = load i8, i8* %arrayidx102, align 1
  %conv103 = zext i8 %77 to i32
  %78 = load i32, i32* @target_flags, align 4
  %and104 = and i32 %78, 33554432
  %tobool105 = icmp ne i32 %and104, 0
  %cond106 = select i1 %tobool105, i32 8, i32 4
  %add107 = add nsw i32 %conv103, %cond106
  %sub = sub nsw i32 %add107, 1
  %79 = load i32, i32* @target_flags, align 4
  %and108 = and i32 %79, 33554432
  %tobool109 = icmp ne i32 %and108, 0
  %cond110 = select i1 %tobool109, i32 8, i32 4
  %div = sdiv i32 %sub, %cond110
  br label %cond.end

cond.end:                                         ; preds = %cond.false.93, %cond.true.89
  %cond111 = phi i32 [ %cond92, %cond.true.89 ], [ %div, %cond.false.93 ]
  br label %cond.end.112

cond.end.112:                                     ; preds = %cond.end, %cond.true.75
  %cond113 = phi i32 [ %cond78, %cond.true.75 ], [ %cond111, %cond.end ]
  br label %cond.end.114

cond.end.114:                                     ; preds = %cond.end.112, %lor.end
  %cond115 = phi i32 [ %cond, %lor.end ], [ %cond113, %cond.end.112 ]
  store i32 %cond115, i32* %nregs, align 4
  br label %while.cond.116

while.cond.116:                                   ; preds = %while.body.119, %cond.end.114
  %80 = load i32, i32* %nregs, align 4
  %dec = add nsw i32 %80, -1
  store i32 %dec, i32* %nregs, align 4
  %cmp117 = icmp sgt i32 %80, 0
  br i1 %cmp117, label %while.body.119, label %while.end.123

while.body.119:                                   ; preds = %while.cond.116
  %81 = load i32, i32* %r, align 4
  %82 = load i32, i32* %nregs, align 4
  %add120 = add nsw i32 %81, %82
  %sh_prom121 = zext i32 %add120 to i64
  %shl122 = shl i64 1, %sh_prom121
  %83 = load i64*, i64** %to.addr, align 8
  %84 = load i64, i64* %83, align 8
  %or = or i64 %84, %shl122
  store i64 %or, i64* %83, align 8
  br label %while.cond.116

while.end.123:                                    ; preds = %while.cond.116
  br label %if.end.124

if.end.124:                                       ; preds = %while.end.123, %if.end.26
  %85 = load i64, i64* %word_, align 8
  %cmp125 = icmp eq i64 %85, 0
  br i1 %cmp125, label %if.then.127, label %if.end.128

if.then.127:                                      ; preds = %if.end.124
  br label %for.end

if.end.128:                                       ; preds = %if.end.124
  br label %if.end.129

if.end.129:                                       ; preds = %if.end.128, %for.body.13
  br label %for.inc

for.inc:                                          ; preds = %if.end.129
  %86 = load i32, i32* %bit_num_, align 4
  %inc = add i32 %86, 1
  store i32 %inc, i32* %bit_num_, align 4
  br label %for.cond.11

for.end:                                          ; preds = %if.then.127, %for.cond.11
  br label %if.end.130

if.end.130:                                       ; preds = %for.end, %for.body.8
  store i32 0, i32* %bit_num_, align 4
  br label %for.inc.131

for.inc.131:                                      ; preds = %if.end.130
  %87 = load i32, i32* %word_num_, align 4
  %inc132 = add i32 %87, 1
  store i32 %inc132, i32* %word_num_, align 4
  br label %for.cond.6

for.end.133:                                      ; preds = %for.cond.6
  store i32 0, i32* %word_num_, align 4
  br label %for.inc.134

for.inc.134:                                      ; preds = %for.end.133
  %88 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %next135 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %88, i32 0, i32 0
  %89 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next135, align 8
  store %struct.bitmap_element_def* %89, %struct.bitmap_element_def** %ptr_, align 8
  br label %for.cond

for.end.136:                                      ; preds = %for.cond
  br label %do.end

do.end:                                           ; preds = %for.end.136
  ret void
}

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #2

; Function Attrs: nounwind uwtable
define i32 @reload(%struct.rtx_def* %first, i32 %global) #0 {
entry:
  %first.addr = alloca %struct.rtx_def*, align 8
  %global.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %insn = alloca %struct.rtx_def*, align 8
  %ep = alloca %struct.elim_table*, align 8
  %real_known_ptr = alloca i8*, align 8
  %real_at_ptr = alloca [4 x i32]*, align 8
  %__h = alloca %struct.obstack*, align 8
  %__o = alloca %struct.obstack*, align 8
  %__len = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %__o1 = alloca %struct.obstack*, align 8
  %value = alloca i8*, align 8
  %tmp35 = alloca i8*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %note = alloca %struct.rtx_def*, align 8
  %x = alloca %struct.rtx_def*, align 8
  %something_changed = alloca i32, align 4
  %did_spill = alloca i32, align 4
  %starting_frame_size = alloca i64, align 8
  %x508 = alloca %struct.rtx_def*, align 8
  %__h757 = alloca %struct.obstack*, align 8
  %__o759 = alloca %struct.obstack*, align 8
  %__len761 = alloca i32, align 4
  %tmp775 = alloca i8*, align 8
  %__o1777 = alloca %struct.obstack*, align 8
  %value779 = alloca i8*, align 8
  %tmp820 = alloca i8*, align 8
  %to_spill = alloca i64, align 8
  %__o856 = alloca %struct.obstack*, align 8
  %__obj = alloca i8*, align 8
  %list = alloca %struct.rtx_def*, align 8
  %equiv_insn = alloca %struct.rtx_def*, align 8
  %old_frame_size = alloca i64, align 8
  %addr = alloca %struct.rtx_def*, align 8
  %reg = alloca %struct.rtx_def*, align 8
  %pnote = alloca %struct.rtx_def**, align 8
  %size = alloca i64, align 8
  %__o1306 = alloca %struct.obstack*, align 8
  %__obj1308 = alloca i8*, align 8
  store %struct.rtx_def* %first, %struct.rtx_def** %first.addr, align 8
  store i32 %global, i32* %global.addr, align 4
  store i8* null, i8** %real_known_ptr, align 8
  call void @init_recog()
  store i32 0, i32* @failure, align 4
  store %struct.obstack* @reload_obstack, %struct.obstack** %__h, align 8
  %0 = load %struct.obstack*, %struct.obstack** %__h, align 8
  store %struct.obstack* %0, %struct.obstack** %__o, align 8
  store i32 0, i32* %__len, align 4
  %1 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 4
  %2 = load i8*, i8** %chunk_limit, align 8
  %3 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 3
  %4 = load i8*, i8** %next_free, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %5 = load i32, i32* %__len, align 4
  %conv = sext i32 %5 to i64
  %cmp = icmp slt i64 %sub.ptr.sub, %conv
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %7 = load i32, i32* %__len, align 4
  call void @_obstack_newchunk(%struct.obstack* %6, i32 %7)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %__len, align 4
  %9 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %next_free2 = getelementptr inbounds %struct.obstack, %struct.obstack* %9, i32 0, i32 3
  %10 = load i8*, i8** %next_free2, align 8
  %idx.ext = sext i32 %8 to i64
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext
  store i8* %add.ptr, i8** %next_free2, align 8
  %11 = load %struct.obstack*, %struct.obstack** %__h, align 8
  store %struct.obstack* %11, %struct.obstack** %__o1, align 8
  %12 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %12, i32 0, i32 2
  %13 = load i8*, i8** %object_base, align 8
  store i8* %13, i8** %value, align 8
  %14 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free5 = getelementptr inbounds %struct.obstack, %struct.obstack* %14, i32 0, i32 3
  %15 = load i8*, i8** %next_free5, align 8
  %16 = load i8*, i8** %value, align 8
  %cmp6 = icmp eq i8* %15, %16
  br i1 %cmp6, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end
  %17 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 10
  %bf.load = load i8, i8* %maybe_empty_object, align 8
  %bf.clear = and i8 %bf.load, -3
  %bf.set = or i8 %bf.clear, 2
  store i8 %bf.set, i8* %maybe_empty_object, align 8
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.8, %if.end
  %18 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free10 = getelementptr inbounds %struct.obstack, %struct.obstack* %18, i32 0, i32 3
  %19 = load i8*, i8** %next_free10, align 8
  %sub.ptr.lhs.cast11 = ptrtoint i8* %19 to i64
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast11, 0
  %20 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %20, i32 0, i32 6
  %21 = load i32, i32* %alignment_mask, align 4
  %conv13 = sext i32 %21 to i64
  %add = add nsw i64 %sub.ptr.sub12, %conv13
  %22 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %alignment_mask14 = getelementptr inbounds %struct.obstack, %struct.obstack* %22, i32 0, i32 6
  %23 = load i32, i32* %alignment_mask14, align 4
  %neg = xor i32 %23, -1
  %conv15 = sext i32 %neg to i64
  %and = and i64 %add, %conv15
  %add.ptr16 = getelementptr inbounds i8, i8* null, i64 %and
  %24 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free17 = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0, i32 3
  store i8* %add.ptr16, i8** %next_free17, align 8
  %25 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free18 = getelementptr inbounds %struct.obstack, %struct.obstack* %25, i32 0, i32 3
  %26 = load i8*, i8** %next_free18, align 8
  %27 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %27, i32 0, i32 1
  %28 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8
  %29 = bitcast %struct._obstack_chunk* %28 to i8*
  %sub.ptr.lhs.cast19 = ptrtoint i8* %26 to i64
  %sub.ptr.rhs.cast20 = ptrtoint i8* %29 to i64
  %sub.ptr.sub21 = sub i64 %sub.ptr.lhs.cast19, %sub.ptr.rhs.cast20
  %30 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk_limit22 = getelementptr inbounds %struct.obstack, %struct.obstack* %30, i32 0, i32 4
  %31 = load i8*, i8** %chunk_limit22, align 8
  %32 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk23 = getelementptr inbounds %struct.obstack, %struct.obstack* %32, i32 0, i32 1
  %33 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk23, align 8
  %34 = bitcast %struct._obstack_chunk* %33 to i8*
  %sub.ptr.lhs.cast24 = ptrtoint i8* %31 to i64
  %sub.ptr.rhs.cast25 = ptrtoint i8* %34 to i64
  %sub.ptr.sub26 = sub i64 %sub.ptr.lhs.cast24, %sub.ptr.rhs.cast25
  %cmp27 = icmp sgt i64 %sub.ptr.sub21, %sub.ptr.sub26
  br i1 %cmp27, label %if.then.29, label %if.end.32

if.then.29:                                       ; preds = %if.end.9
  %35 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk_limit30 = getelementptr inbounds %struct.obstack, %struct.obstack* %35, i32 0, i32 4
  %36 = load i8*, i8** %chunk_limit30, align 8
  %37 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free31 = getelementptr inbounds %struct.obstack, %struct.obstack* %37, i32 0, i32 3
  store i8* %36, i8** %next_free31, align 8
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.29, %if.end.9
  %38 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free33 = getelementptr inbounds %struct.obstack, %struct.obstack* %38, i32 0, i32 3
  %39 = load i8*, i8** %next_free33, align 8
  %40 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %object_base34 = getelementptr inbounds %struct.obstack, %struct.obstack* %40, i32 0, i32 2
  store i8* %39, i8** %object_base34, align 8
  %41 = load i8*, i8** %value, align 8
  store i8* %41, i8** %tmp35
  %42 = load i8*, i8** %tmp35
  store i8* %42, i8** %tmp
  %43 = load i8*, i8** %tmp
  store i8* %43, i8** @reload_firstobj, align 8
  %call = call %struct.rtx_def* @emit_note(i8* null, i32 -99)
  %call36 = call i32 @get_max_uid()
  store i32 %call36, i32* @reload_first_uid, align 4
  call void @clear_secondary_mem()
  call void @llvm.memset.p0i8.i64(i8* bitcast ([53 x %struct.rtx_def*]* @spill_stack_slot to i8*), i8 0, i64 424, i32 1, i1 false)
  call void @llvm.memset.p0i8.i64(i8* bitcast ([53 x i32]* @spill_stack_slot_width to i8*), i8 0, i64 212, i32 1, i1 false)
  call void @init_save_areas()
  store i32 53, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.32
  %44 = load i32, i32* %i, align 4
  %45 = load i32, i32* @max_regno, align 4
  %cmp37 = icmp slt i32 %44, %45
  br i1 %cmp37, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %46 = load i32, i32* %i, align 4
  call void @mark_home_live(i32 %46)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %47 = load i32, i32* %i, align 4
  %inc = add nsw i32 %47, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %48 = load %struct.function*, %struct.function** @cfun, align 8
  %has_nonlocal_label = getelementptr inbounds %struct.function, %struct.function* %48, i32 0, i32 56
  %49 = bitcast i24* %has_nonlocal_label to i32*
  %bf.load39 = load i32, i32* %49, align 8
  %bf.lshr = lshr i32 %bf.load39, 8
  %bf.clear40 = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear40, 0
  br i1 %tobool, label %if.then.41, label %if.end.57

if.then.41:                                       ; preds = %for.end
  store i32 0, i32* %i, align 4
  br label %for.cond.42

for.cond.42:                                      ; preds = %for.inc.54, %if.then.41
  %50 = load i32, i32* %i, align 4
  %cmp43 = icmp slt i32 %50, 53
  br i1 %cmp43, label %for.body.45, label %for.end.56

for.body.45:                                      ; preds = %for.cond.42
  %51 = load i32, i32* %i, align 4
  %idxprom = sext i32 %51 to i64
  %arrayidx = getelementptr inbounds [53 x i8], [53 x i8]* @call_used_regs, i32 0, i64 %idxprom
  %52 = load i8, i8* %arrayidx, align 1
  %tobool46 = icmp ne i8 %52, 0
  br i1 %tobool46, label %if.end.53, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body.45
  %53 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %53 to i64
  %arrayidx48 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 %idxprom47
  %54 = load i8, i8* %arrayidx48, align 1
  %tobool49 = icmp ne i8 %54, 0
  br i1 %tobool49, label %if.end.53, label %if.then.50

if.then.50:                                       ; preds = %land.lhs.true
  %55 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %55 to i64
  %arrayidx52 = getelementptr inbounds [53 x i8], [53 x i8]* @regs_ever_live, i32 0, i64 %idxprom51
  store i8 1, i8* %arrayidx52, align 1
  br label %if.end.53

if.end.53:                                        ; preds = %if.then.50, %land.lhs.true, %for.body.45
  br label %for.inc.54

for.inc.54:                                       ; preds = %if.end.53
  %56 = load i32, i32* %i, align 4
  %inc55 = add nsw i32 %56, 1
  store i32 %inc55, i32* %i, align 4
  br label %for.cond.42

for.end.56:                                       ; preds = %for.cond.42
  br label %if.end.57

if.end.57:                                        ; preds = %for.end.56, %for.end
  %57 = load i32, i32* @max_regno, align 4
  %conv58 = sext i32 %57 to i64
  %call59 = call noalias i8* @xcalloc(i64 %conv58, i64 8)
  %58 = bitcast i8* %call59 to %struct.rtx_def**
  store %struct.rtx_def** %58, %struct.rtx_def*** @reg_equiv_constant, align 8
  %59 = load i32, i32* @max_regno, align 4
  %conv60 = sext i32 %59 to i64
  %call61 = call noalias i8* @xcalloc(i64 %conv60, i64 8)
  %60 = bitcast i8* %call61 to %struct.rtx_def**
  store %struct.rtx_def** %60, %struct.rtx_def*** @reg_equiv_mem, align 8
  %61 = load i32, i32* @max_regno, align 4
  %conv62 = sext i32 %61 to i64
  %call63 = call noalias i8* @xcalloc(i64 %conv62, i64 8)
  %62 = bitcast i8* %call63 to %struct.rtx_def**
  store %struct.rtx_def** %62, %struct.rtx_def*** @reg_equiv_init, align 8
  %63 = load i32, i32* @max_regno, align 4
  %conv64 = sext i32 %63 to i64
  %call65 = call noalias i8* @xcalloc(i64 %conv64, i64 8)
  %64 = bitcast i8* %call65 to %struct.rtx_def**
  store %struct.rtx_def** %64, %struct.rtx_def*** @reg_equiv_address, align 8
  %65 = load i32, i32* @max_regno, align 4
  %conv66 = sext i32 %65 to i64
  %call67 = call noalias i8* @xcalloc(i64 %conv66, i64 4)
  %66 = bitcast i8* %call67 to i32*
  store i32* %66, i32** @reg_max_ref_width, align 8
  %67 = load i32, i32* @max_regno, align 4
  %conv68 = sext i32 %67 to i64
  %call69 = call noalias i8* @xcalloc(i64 %conv68, i64 2)
  %68 = bitcast i8* %call69 to i16*
  store i16* %68, i16** @reg_old_renumber, align 8
  %69 = load i16*, i16** @reg_old_renumber, align 8
  %70 = bitcast i16* %69 to i8*
  %71 = load i16*, i16** @reg_renumber, align 8
  %72 = bitcast i16* %71 to i8*
  %73 = load i32, i32* @max_regno, align 4
  %conv70 = sext i32 %73 to i64
  %mul = mul i64 %conv70, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* %72, i64 %mul, i32 2, i1 false)
  %74 = load i32, i32* @max_regno, align 4
  %conv71 = sext i32 %74 to i64
  %mul72 = mul i64 %conv71, 8
  %call73 = call noalias i8* @xmalloc(i64 %mul72)
  %75 = bitcast i8* %call73 to i64*
  store i64* %75, i64** @pseudo_forbidden_regs, align 8
  %76 = load i32, i32* @max_regno, align 4
  %conv74 = sext i32 %76 to i64
  %call75 = call noalias i8* @xcalloc(i64 %conv74, i64 8)
  %77 = bitcast i8* %call75 to i64*
  store i64* %77, i64** @pseudo_previous_regs, align 8
  store i64 0, i64* @bad_spill_regs_global, align 8
  store i32 0, i32* @num_eliminable_invariants, align 4
  %78 = load %struct.rtx_def*, %struct.rtx_def** %first.addr, align 8
  store %struct.rtx_def* %78, %struct.rtx_def** %insn, align 8
  br label %for.cond.76

for.cond.76:                                      ; preds = %for.inc.414, %if.end.57
  %79 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %tobool77 = icmp ne %struct.rtx_def* %79, null
  br i1 %tobool77, label %for.body.78, label %for.end.418

for.body.78:                                      ; preds = %for.cond.76
  %80 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %81 = bitcast %struct.rtx_def* %80 to i32*
  %bf.load80 = load i32, i32* %81, align 8
  %bf.clear81 = and i32 %bf.load80, 65535
  %idxprom82 = sext i32 %bf.clear81 to i64
  %arrayidx83 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom82
  %82 = load i8, i8* %arrayidx83, align 1
  %conv84 = sext i8 %82 to i32
  %cmp85 = icmp eq i32 %conv84, 105
  br i1 %cmp85, label %cond.true, label %cond.false.100

cond.true:                                        ; preds = %for.body.78
  %83 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx87 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx87 to %struct.rtx_def**
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %85 = bitcast %struct.rtx_def* %84 to i32*
  %bf.load88 = load i32, i32* %85, align 8
  %bf.clear89 = and i32 %bf.load88, 65535
  %cmp90 = icmp eq i32 %bf.clear89, 47
  br i1 %cmp90, label %cond.true.92, label %cond.false

cond.true.92:                                     ; preds = %cond.true
  %86 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1
  %arrayidx94 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld93, i32 0, i64 3
  %rtx95 = bitcast %union.rtunion_def* %arrayidx94 to %struct.rtx_def**
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rtx95, align 8
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %88 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %89 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1
  %arrayidx97 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld96, i32 0, i64 3
  %rtx98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtx_def**
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rtx98, align 8
  %call99 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %88, %struct.rtx_def* %90)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.92
  %cond = phi %struct.rtx_def* [ %87, %cond.true.92 ], [ %call99, %cond.false ]
  br label %cond.end.101

cond.false.100:                                   ; preds = %for.body.78
  br label %cond.end.101

cond.end.101:                                     ; preds = %cond.false.100, %cond.end
  %cond102 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false.100 ]
  store %struct.rtx_def* %cond102, %struct.rtx_def** %set, align 8
  %91 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %92 = bitcast %struct.rtx_def* %91 to i32*
  %bf.load103 = load i32, i32* %92, align 8
  %bf.clear104 = and i32 %bf.load103, 65535
  %idxprom105 = sext i32 %bf.clear104 to i64
  %arrayidx106 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom105
  %93 = load i8, i8* %arrayidx106, align 1
  %conv107 = sext i8 %93 to i32
  %cmp108 = icmp eq i32 %conv107, 105
  br i1 %cmp108, label %land.lhs.true.110, label %if.end.127

land.lhs.true.110:                                ; preds = %cond.end.101
  %94 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1
  %arrayidx112 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld111, i32 0, i64 3
  %rtx113 = bitcast %union.rtunion_def* %arrayidx112 to %struct.rtx_def**
  %95 = load %struct.rtx_def*, %struct.rtx_def** %rtx113, align 8
  %96 = bitcast %struct.rtx_def* %95 to i32*
  %bf.load114 = load i32, i32* %96, align 8
  %bf.clear115 = and i32 %bf.load114, 65535
  %cmp116 = icmp eq i32 %bf.clear115, 48
  br i1 %cmp116, label %land.lhs.true.118, label %if.end.127

land.lhs.true.118:                                ; preds = %land.lhs.true.110
  %97 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %98 = bitcast %struct.rtx_def* %97 to i32*
  %bf.load119 = load i32, i32* %98, align 8
  %bf.lshr120 = lshr i32 %bf.load119, 16
  %bf.clear121 = and i32 %bf.lshr120, 255
  %cmp122 = icmp ne i32 %bf.clear121, 0
  br i1 %cmp122, label %if.then.124, label %if.end.127

if.then.124:                                      ; preds = %land.lhs.true.118
  %99 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %100 = bitcast %struct.rtx_def* %99 to i32*
  %bf.load125 = load i32, i32* %100, align 8
  %bf.clear126 = and i32 %bf.load125, -16711681
  store i32 %bf.clear126, i32* %100, align 8
  br label %if.end.127

if.end.127:                                       ; preds = %if.then.124, %land.lhs.true.118, %land.lhs.true.110, %cond.end.101
  %101 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %102 = bitcast %struct.rtx_def* %101 to i32*
  %bf.load128 = load i32, i32* %102, align 8
  %bf.clear129 = and i32 %bf.load128, 65535
  %cmp130 = icmp eq i32 %bf.clear129, 34
  br i1 %cmp130, label %land.lhs.true.132, label %if.end.150

land.lhs.true.132:                                ; preds = %if.end.127
  %103 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call133 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %103, i32 28, %struct.rtx_def* null)
  %tobool134 = icmp ne %struct.rtx_def* %call133, null
  br i1 %tobool134, label %if.then.135, label %if.end.150

if.then.135:                                      ; preds = %land.lhs.true.132
  store i32 0, i32* %i, align 4
  br label %for.cond.136

for.cond.136:                                     ; preds = %for.inc.147, %if.then.135
  %104 = load i32, i32* %i, align 4
  %cmp137 = icmp slt i32 %104, 53
  br i1 %cmp137, label %for.body.139, label %for.end.149

for.body.139:                                     ; preds = %for.cond.136
  %105 = load i32, i32* %i, align 4
  %idxprom140 = sext i32 %105 to i64
  %arrayidx141 = getelementptr inbounds [53 x i8], [53 x i8]* @call_used_regs, i32 0, i64 %idxprom140
  %106 = load i8, i8* %arrayidx141, align 1
  %tobool142 = icmp ne i8 %106, 0
  br i1 %tobool142, label %if.end.146, label %if.then.143

if.then.143:                                      ; preds = %for.body.139
  %107 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %107 to i64
  %arrayidx145 = getelementptr inbounds [53 x i8], [53 x i8]* @regs_ever_live, i32 0, i64 %idxprom144
  store i8 1, i8* %arrayidx145, align 1
  br label %if.end.146

if.end.146:                                       ; preds = %if.then.143, %for.body.139
  br label %for.inc.147

for.inc.147:                                      ; preds = %if.end.146
  %108 = load i32, i32* %i, align 4
  %inc148 = add nsw i32 %108, 1
  store i32 %inc148, i32* %i, align 4
  br label %for.cond.136

for.end.149:                                      ; preds = %for.cond.136
  br label %if.end.150

if.end.150:                                       ; preds = %for.end.149, %land.lhs.true.132, %if.end.127
  %109 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %cmp151 = icmp ne %struct.rtx_def* %109, null
  br i1 %cmp151, label %land.lhs.true.153, label %if.else.340

land.lhs.true.153:                                ; preds = %if.end.150
  %110 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %110, i32 0, i32 1
  %arrayidx155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld154, i32 0, i64 0
  %rtx156 = bitcast %union.rtunion_def* %arrayidx155 to %struct.rtx_def**
  %111 = load %struct.rtx_def*, %struct.rtx_def** %rtx156, align 8
  %112 = bitcast %struct.rtx_def* %111 to i32*
  %bf.load157 = load i32, i32* %112, align 8
  %bf.clear158 = and i32 %bf.load157, 65535
  %cmp159 = icmp eq i32 %bf.clear158, 61
  br i1 %cmp159, label %if.then.161, label %if.else.340

if.then.161:                                      ; preds = %land.lhs.true.153
  %113 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call163 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %113, i32 3, %struct.rtx_def* null)
  store %struct.rtx_def* %call163, %struct.rtx_def** %note, align 8
  %114 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %tobool164 = icmp ne %struct.rtx_def* %114, null
  br i1 %tobool164, label %land.lhs.true.165, label %if.end.339

land.lhs.true.165:                                ; preds = %if.then.161
  %115 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld166 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1
  %arrayidx167 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld166, i32 0, i64 0
  %rtx168 = bitcast %union.rtunion_def* %arrayidx167 to %struct.rtx_def**
  %116 = load %struct.rtx_def*, %struct.rtx_def** %rtx168, align 8
  %call169 = call i32 @function_invariant_p(%struct.rtx_def* %116)
  %tobool170 = icmp ne i32 %call169, 0
  br i1 %tobool170, label %lor.lhs.false, label %if.then.272

lor.lhs.false:                                    ; preds = %land.lhs.true.165
  %117 = load i32, i32* @flag_pic, align 4
  %tobool171 = icmp ne i32 %117, 0
  br i1 %tobool171, label %lor.lhs.false.172, label %if.then.272

lor.lhs.false.172:                                ; preds = %lor.lhs.false
  %118 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld173 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1
  %arrayidx174 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld173, i32 0, i64 0
  %rtx175 = bitcast %union.rtunion_def* %arrayidx174 to %struct.rtx_def**
  %119 = load %struct.rtx_def*, %struct.rtx_def** %rtx175, align 8
  %120 = bitcast %struct.rtx_def* %119 to i32*
  %bf.load176 = load i32, i32* %120, align 8
  %bf.clear177 = and i32 %bf.load176, 65535
  %cmp178 = icmp eq i32 %bf.clear177, 67
  br i1 %cmp178, label %land.lhs.true.236, label %lor.lhs.false.180

lor.lhs.false.180:                                ; preds = %lor.lhs.false.172
  %121 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld181 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %121, i32 0, i32 1
  %arrayidx182 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld181, i32 0, i64 0
  %rtx183 = bitcast %union.rtunion_def* %arrayidx182 to %struct.rtx_def**
  %122 = load %struct.rtx_def*, %struct.rtx_def** %rtx183, align 8
  %123 = bitcast %struct.rtx_def* %122 to i32*
  %bf.load184 = load i32, i32* %123, align 8
  %bf.clear185 = and i32 %bf.load184, 65535
  %cmp186 = icmp eq i32 %bf.clear185, 68
  br i1 %cmp186, label %land.lhs.true.236, label %lor.lhs.false.188

lor.lhs.false.188:                                ; preds = %lor.lhs.false.180
  %124 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld189 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1
  %arrayidx190 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld189, i32 0, i64 0
  %rtx191 = bitcast %union.rtunion_def* %arrayidx190 to %struct.rtx_def**
  %125 = load %struct.rtx_def*, %struct.rtx_def** %rtx191, align 8
  %126 = bitcast %struct.rtx_def* %125 to i32*
  %bf.load192 = load i32, i32* %126, align 8
  %bf.clear193 = and i32 %bf.load192, 65535
  %cmp194 = icmp eq i32 %bf.clear193, 54
  br i1 %cmp194, label %land.lhs.true.236, label %lor.lhs.false.196

lor.lhs.false.196:                                ; preds = %lor.lhs.false.188
  %127 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld197 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %127, i32 0, i32 1
  %arrayidx198 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld197, i32 0, i64 0
  %rtx199 = bitcast %union.rtunion_def* %arrayidx198 to %struct.rtx_def**
  %128 = load %struct.rtx_def*, %struct.rtx_def** %rtx199, align 8
  %129 = bitcast %struct.rtx_def* %128 to i32*
  %bf.load200 = load i32, i32* %129, align 8
  %bf.clear201 = and i32 %bf.load200, 65535
  %cmp202 = icmp eq i32 %bf.clear201, 55
  br i1 %cmp202, label %land.lhs.true.236, label %lor.lhs.false.204

lor.lhs.false.204:                                ; preds = %lor.lhs.false.196
  %130 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld205 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1
  %arrayidx206 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld205, i32 0, i64 0
  %rtx207 = bitcast %union.rtunion_def* %arrayidx206 to %struct.rtx_def**
  %131 = load %struct.rtx_def*, %struct.rtx_def** %rtx207, align 8
  %132 = bitcast %struct.rtx_def* %131 to i32*
  %bf.load208 = load i32, i32* %132, align 8
  %bf.clear209 = and i32 %bf.load208, 65535
  %cmp210 = icmp eq i32 %bf.clear209, 58
  br i1 %cmp210, label %land.lhs.true.236, label %lor.lhs.false.212

lor.lhs.false.212:                                ; preds = %lor.lhs.false.204
  %133 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld213 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %133, i32 0, i32 1
  %arrayidx214 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld213, i32 0, i64 0
  %rtx215 = bitcast %union.rtunion_def* %arrayidx214 to %struct.rtx_def**
  %134 = load %struct.rtx_def*, %struct.rtx_def** %rtx215, align 8
  %135 = bitcast %struct.rtx_def* %134 to i32*
  %bf.load216 = load i32, i32* %135, align 8
  %bf.clear217 = and i32 %bf.load216, 65535
  %cmp218 = icmp eq i32 %bf.clear217, 134
  br i1 %cmp218, label %land.lhs.true.236, label %lor.lhs.false.220

lor.lhs.false.220:                                ; preds = %lor.lhs.false.212
  %136 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld221 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1
  %arrayidx222 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld221, i32 0, i64 0
  %rtx223 = bitcast %union.rtunion_def* %arrayidx222 to %struct.rtx_def**
  %137 = load %struct.rtx_def*, %struct.rtx_def** %rtx223, align 8
  %138 = bitcast %struct.rtx_def* %137 to i32*
  %bf.load224 = load i32, i32* %138, align 8
  %bf.clear225 = and i32 %bf.load224, 65535
  %cmp226 = icmp eq i32 %bf.clear225, 56
  br i1 %cmp226, label %land.lhs.true.236, label %lor.lhs.false.228

lor.lhs.false.228:                                ; preds = %lor.lhs.false.220
  %139 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld229 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1
  %arrayidx230 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld229, i32 0, i64 0
  %rtx231 = bitcast %union.rtunion_def* %arrayidx230 to %struct.rtx_def**
  %140 = load %struct.rtx_def*, %struct.rtx_def** %rtx231, align 8
  %141 = bitcast %struct.rtx_def* %140 to i32*
  %bf.load232 = load i32, i32* %141, align 8
  %bf.clear233 = and i32 %bf.load232, 65535
  %cmp234 = icmp eq i32 %bf.clear233, 140
  br i1 %cmp234, label %land.lhs.true.236, label %if.end.339

land.lhs.true.236:                                ; preds = %lor.lhs.false.228, %lor.lhs.false.220, %lor.lhs.false.212, %lor.lhs.false.204, %lor.lhs.false.196, %lor.lhs.false.188, %lor.lhs.false.180, %lor.lhs.false.172
  %142 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld237 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i32 0, i32 1
  %arrayidx238 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld237, i32 0, i64 0
  %rtx239 = bitcast %union.rtunion_def* %arrayidx238 to %struct.rtx_def**
  %143 = load %struct.rtx_def*, %struct.rtx_def** %rtx239, align 8
  %144 = bitcast %struct.rtx_def* %143 to i32*
  %bf.load240 = load i32, i32* %144, align 8
  %bf.clear241 = and i32 %bf.load240, 65535
  %cmp242 = icmp eq i32 %bf.clear241, 68
  br i1 %cmp242, label %lor.lhs.false.266, label %lor.lhs.false.244

lor.lhs.false.244:                                ; preds = %land.lhs.true.236
  %145 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld245 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %145, i32 0, i32 1
  %arrayidx246 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld245, i32 0, i64 0
  %rtx247 = bitcast %union.rtunion_def* %arrayidx246 to %struct.rtx_def**
  %146 = load %struct.rtx_def*, %struct.rtx_def** %rtx247, align 8
  %147 = bitcast %struct.rtx_def* %146 to i32*
  %bf.load248 = load i32, i32* %147, align 8
  %bf.clear249 = and i32 %bf.load248, 65535
  %cmp250 = icmp eq i32 %bf.clear249, 67
  br i1 %cmp250, label %lor.lhs.false.266, label %lor.lhs.false.252

lor.lhs.false.252:                                ; preds = %lor.lhs.false.244
  %148 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld253 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %148, i32 0, i32 1
  %arrayidx254 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld253, i32 0, i64 0
  %rtx255 = bitcast %union.rtunion_def* %arrayidx254 to %struct.rtx_def**
  %149 = load %struct.rtx_def*, %struct.rtx_def** %rtx255, align 8
  %150 = bitcast %struct.rtx_def* %149 to i32*
  %bf.load256 = load i32, i32* %150, align 8
  %bf.clear257 = and i32 %bf.load256, 65535
  %cmp258 = icmp eq i32 %bf.clear257, 58
  br i1 %cmp258, label %land.lhs.true.260, label %if.then.272

land.lhs.true.260:                                ; preds = %lor.lhs.false.252
  %151 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld261 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %151, i32 0, i32 1
  %arrayidx262 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld261, i32 0, i64 0
  %rtx263 = bitcast %union.rtunion_def* %arrayidx262 to %struct.rtx_def**
  %152 = load %struct.rtx_def*, %struct.rtx_def** %rtx263, align 8
  %call264 = call i32 @symbolic_reference_mentioned_p(%struct.rtx_def* %152)
  %tobool265 = icmp ne i32 %call264, 0
  br i1 %tobool265, label %lor.lhs.false.266, label %if.then.272

lor.lhs.false.266:                                ; preds = %land.lhs.true.260, %lor.lhs.false.244, %land.lhs.true.236
  %153 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld267 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1
  %arrayidx268 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld267, i32 0, i64 0
  %rtx269 = bitcast %union.rtunion_def* %arrayidx268 to %struct.rtx_def**
  %154 = load %struct.rtx_def*, %struct.rtx_def** %rtx269, align 8
  %call270 = call i32 @legitimate_pic_address_disp_p(%struct.rtx_def* %154)
  %tobool271 = icmp ne i32 %call270, 0
  br i1 %tobool271, label %if.then.272, label %if.end.339

if.then.272:                                      ; preds = %lor.lhs.false.266, %land.lhs.true.260, %lor.lhs.false.252, %lor.lhs.false, %land.lhs.true.165
  %155 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld274 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %155, i32 0, i32 1
  %arrayidx275 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld274, i32 0, i64 0
  %rtx276 = bitcast %union.rtunion_def* %arrayidx275 to %struct.rtx_def**
  %156 = load %struct.rtx_def*, %struct.rtx_def** %rtx276, align 8
  store %struct.rtx_def* %156, %struct.rtx_def** %x, align 8
  %157 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld277 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %157, i32 0, i32 1
  %arrayidx278 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld277, i32 0, i64 0
  %rtx279 = bitcast %union.rtunion_def* %arrayidx278 to %struct.rtx_def**
  %158 = load %struct.rtx_def*, %struct.rtx_def** %rtx279, align 8
  %fld280 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %158, i32 0, i32 1
  %arrayidx281 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld280, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx281 to i32*
  %159 = load i32, i32* %rtuint, align 4
  store i32 %159, i32* %i, align 4
  %160 = load i32, i32* %i, align 4
  %cmp282 = icmp sgt i32 %160, 57
  br i1 %cmp282, label %if.then.284, label %if.end.338

if.then.284:                                      ; preds = %if.then.272
  %161 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %call285 = call i32 @memory_operand(%struct.rtx_def* %161, i32 0)
  %tobool286 = icmp ne i32 %call285, 0
  br i1 %tobool286, label %if.then.287, label %if.else

if.then.287:                                      ; preds = %if.then.284
  %162 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %call288 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %162)
  %163 = load i32, i32* %i, align 4
  %idxprom289 = sext i32 %163 to i64
  %164 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx290 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %164, i64 %idxprom289
  store %struct.rtx_def* %call288, %struct.rtx_def** %arrayidx290, align 8
  br label %if.end.320

if.else:                                          ; preds = %if.then.284
  %165 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %call291 = call i32 @function_invariant_p(%struct.rtx_def* %165)
  %tobool292 = icmp ne i32 %call291, 0
  br i1 %tobool292, label %if.then.293, label %if.else.318

if.then.293:                                      ; preds = %if.else
  %166 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %167 = bitcast %struct.rtx_def* %166 to i32*
  %bf.load294 = load i32, i32* %167, align 8
  %bf.clear295 = and i32 %bf.load294, 65535
  %cmp296 = icmp eq i32 %bf.clear295, 75
  br i1 %cmp296, label %if.then.298, label %if.else.303

if.then.298:                                      ; preds = %if.then.293
  %168 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %call299 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %168)
  %169 = load i32, i32* %i, align 4
  %idxprom300 = sext i32 %169 to i64
  %170 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx301 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %170, i64 %idxprom300
  store %struct.rtx_def* %call299, %struct.rtx_def** %arrayidx301, align 8
  %171 = load i32, i32* @num_eliminable_invariants, align 4
  %inc302 = add nsw i32 %171, 1
  store i32 %inc302, i32* @num_eliminable_invariants, align 4
  br label %if.end.317

if.else.303:                                      ; preds = %if.then.293
  %172 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %173 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 3), align 8
  %cmp304 = icmp eq %struct.rtx_def* %172, %173
  br i1 %cmp304, label %if.then.309, label %lor.lhs.false.306

lor.lhs.false.306:                                ; preds = %if.else.303
  %174 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %175 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 5), align 8
  %cmp307 = icmp eq %struct.rtx_def* %174, %175
  br i1 %cmp307, label %if.then.309, label %if.else.313

if.then.309:                                      ; preds = %lor.lhs.false.306, %if.else.303
  %176 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %177 = load i32, i32* %i, align 4
  %idxprom310 = sext i32 %177 to i64
  %178 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx311 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %178, i64 %idxprom310
  store %struct.rtx_def* %176, %struct.rtx_def** %arrayidx311, align 8
  %179 = load i32, i32* @num_eliminable_invariants, align 4
  %inc312 = add nsw i32 %179, 1
  store i32 %inc312, i32* @num_eliminable_invariants, align 4
  br label %if.end.316

if.else.313:                                      ; preds = %lor.lhs.false.306
  %180 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %181 = load i32, i32* %i, align 4
  %idxprom314 = sext i32 %181 to i64
  %182 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx315 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %182, i64 %idxprom314
  store %struct.rtx_def* %180, %struct.rtx_def** %arrayidx315, align 8
  br label %if.end.316

if.end.316:                                       ; preds = %if.else.313, %if.then.309
  br label %if.end.317

if.end.317:                                       ; preds = %if.end.316, %if.then.298
  br label %if.end.319

if.else.318:                                      ; preds = %if.else
  br label %for.inc.414

if.end.319:                                       ; preds = %if.end.317
  br label %if.end.320

if.end.320:                                       ; preds = %if.end.319, %if.then.287
  %183 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %184 = bitcast %struct.rtx_def* %183 to i32*
  %bf.load321 = load i32, i32* %184, align 8
  %bf.clear322 = and i32 %bf.load321, 65535
  %cmp323 = icmp ne i32 %bf.clear322, 66
  br i1 %cmp323, label %if.then.331, label %lor.lhs.false.325

lor.lhs.false.325:                                ; preds = %if.end.320
  %185 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld326 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %185, i32 0, i32 1
  %arrayidx327 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld326, i32 0, i64 1
  %rtx328 = bitcast %union.rtunion_def* %arrayidx327 to %struct.rtx_def**
  %186 = load %struct.rtx_def*, %struct.rtx_def** %rtx328, align 8
  %187 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %call329 = call i32 @rtx_equal_p(%struct.rtx_def* %186, %struct.rtx_def* %187)
  %tobool330 = icmp ne i32 %call329, 0
  br i1 %tobool330, label %if.then.331, label %if.end.337

if.then.331:                                      ; preds = %lor.lhs.false.325, %if.end.320
  %188 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %189 = load i32, i32* %i, align 4
  %idxprom332 = sext i32 %189 to i64
  %190 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8
  %arrayidx333 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %190, i64 %idxprom332
  %191 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx333, align 8
  %call334 = call %struct.rtx_def* @gen_rtx_fmt_ue(i32 4, i32 0, %struct.rtx_def* %188, %struct.rtx_def* %191)
  %192 = load i32, i32* %i, align 4
  %idxprom335 = sext i32 %192 to i64
  %193 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8
  %arrayidx336 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %193, i64 %idxprom335
  store %struct.rtx_def* %call334, %struct.rtx_def** %arrayidx336, align 8
  br label %if.end.337

if.end.337:                                       ; preds = %if.then.331, %lor.lhs.false.325
  br label %if.end.338

if.end.338:                                       ; preds = %if.end.337, %if.then.272
  br label %if.end.339

if.end.339:                                       ; preds = %if.end.338, %lor.lhs.false.266, %lor.lhs.false.228, %if.then.161
  br label %if.end.401

if.else.340:                                      ; preds = %land.lhs.true.153, %if.end.150
  %194 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %tobool341 = icmp ne %struct.rtx_def* %194, null
  br i1 %tobool341, label %land.lhs.true.342, label %if.end.400

land.lhs.true.342:                                ; preds = %if.else.340
  %195 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld343 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %195, i32 0, i32 1
  %arrayidx344 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld343, i32 0, i64 0
  %rtx345 = bitcast %union.rtunion_def* %arrayidx344 to %struct.rtx_def**
  %196 = load %struct.rtx_def*, %struct.rtx_def** %rtx345, align 8
  %197 = bitcast %struct.rtx_def* %196 to i32*
  %bf.load346 = load i32, i32* %197, align 8
  %bf.clear347 = and i32 %bf.load346, 65535
  %cmp348 = icmp eq i32 %bf.clear347, 66
  br i1 %cmp348, label %land.lhs.true.350, label %if.end.400

land.lhs.true.350:                                ; preds = %land.lhs.true.342
  %198 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld351 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %198, i32 0, i32 1
  %arrayidx352 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld351, i32 0, i64 1
  %rtx353 = bitcast %union.rtunion_def* %arrayidx352 to %struct.rtx_def**
  %199 = load %struct.rtx_def*, %struct.rtx_def** %rtx353, align 8
  %200 = bitcast %struct.rtx_def* %199 to i32*
  %bf.load354 = load i32, i32* %200, align 8
  %bf.clear355 = and i32 %bf.load354, 65535
  %cmp356 = icmp eq i32 %bf.clear355, 61
  br i1 %cmp356, label %land.lhs.true.358, label %if.end.400

land.lhs.true.358:                                ; preds = %land.lhs.true.350
  %201 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld359 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %201, i32 0, i32 1
  %arrayidx360 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld359, i32 0, i64 1
  %rtx361 = bitcast %union.rtunion_def* %arrayidx360 to %struct.rtx_def**
  %202 = load %struct.rtx_def*, %struct.rtx_def** %rtx361, align 8
  %fld362 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %202, i32 0, i32 1
  %arrayidx363 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld362, i32 0, i64 0
  %rtuint364 = bitcast %union.rtunion_def* %arrayidx363 to i32*
  %203 = load i32, i32* %rtuint364, align 4
  %idxprom365 = zext i32 %203 to i64
  %204 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx366 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %204, i64 %idxprom365
  %205 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx366, align 8
  %tobool367 = icmp ne %struct.rtx_def* %205, null
  br i1 %tobool367, label %land.lhs.true.368, label %if.end.400

land.lhs.true.368:                                ; preds = %land.lhs.true.358
  %206 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld369 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %206, i32 0, i32 1
  %arrayidx370 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld369, i32 0, i64 0
  %rtx371 = bitcast %union.rtunion_def* %arrayidx370 to %struct.rtx_def**
  %207 = load %struct.rtx_def*, %struct.rtx_def** %rtx371, align 8
  %208 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld372 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %208, i32 0, i32 1
  %arrayidx373 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld372, i32 0, i64 1
  %rtx374 = bitcast %union.rtunion_def* %arrayidx373 to %struct.rtx_def**
  %209 = load %struct.rtx_def*, %struct.rtx_def** %rtx374, align 8
  %fld375 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %209, i32 0, i32 1
  %arrayidx376 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld375, i32 0, i64 0
  %rtuint377 = bitcast %union.rtunion_def* %arrayidx376 to i32*
  %210 = load i32, i32* %rtuint377, align 4
  %idxprom378 = zext i32 %210 to i64
  %211 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx379 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %211, i64 %idxprom378
  %212 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx379, align 8
  %call380 = call i32 @rtx_equal_p(%struct.rtx_def* %207, %struct.rtx_def* %212)
  %tobool381 = icmp ne i32 %call380, 0
  br i1 %tobool381, label %if.then.382, label %if.end.400

if.then.382:                                      ; preds = %land.lhs.true.368
  %213 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %214 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld383 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %214, i32 0, i32 1
  %arrayidx384 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld383, i32 0, i64 1
  %rtx385 = bitcast %union.rtunion_def* %arrayidx384 to %struct.rtx_def**
  %215 = load %struct.rtx_def*, %struct.rtx_def** %rtx385, align 8
  %fld386 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %215, i32 0, i32 1
  %arrayidx387 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld386, i32 0, i64 0
  %rtuint388 = bitcast %union.rtunion_def* %arrayidx387 to i32*
  %216 = load i32, i32* %rtuint388, align 4
  %idxprom389 = zext i32 %216 to i64
  %217 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8
  %arrayidx390 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %217, i64 %idxprom389
  %218 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx390, align 8
  %call391 = call %struct.rtx_def* @gen_rtx_fmt_ue(i32 4, i32 0, %struct.rtx_def* %213, %struct.rtx_def* %218)
  %219 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld392 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %219, i32 0, i32 1
  %arrayidx393 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld392, i32 0, i64 1
  %rtx394 = bitcast %union.rtunion_def* %arrayidx393 to %struct.rtx_def**
  %220 = load %struct.rtx_def*, %struct.rtx_def** %rtx394, align 8
  %fld395 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %220, i32 0, i32 1
  %arrayidx396 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld395, i32 0, i64 0
  %rtuint397 = bitcast %union.rtunion_def* %arrayidx396 to i32*
  %221 = load i32, i32* %rtuint397, align 4
  %idxprom398 = zext i32 %221 to i64
  %222 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8
  %arrayidx399 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %222, i64 %idxprom398
  store %struct.rtx_def* %call391, %struct.rtx_def** %arrayidx399, align 8
  br label %if.end.400

if.end.400:                                       ; preds = %if.then.382, %land.lhs.true.368, %land.lhs.true.358, %land.lhs.true.350, %land.lhs.true.342, %if.else.340
  br label %if.end.401

if.end.401:                                       ; preds = %if.end.400, %if.end.339
  %223 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %224 = bitcast %struct.rtx_def* %223 to i32*
  %bf.load402 = load i32, i32* %224, align 8
  %bf.clear403 = and i32 %bf.load402, 65535
  %idxprom404 = sext i32 %bf.clear403 to i64
  %arrayidx405 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom404
  %225 = load i8, i8* %arrayidx405, align 1
  %conv406 = sext i8 %225 to i32
  %cmp407 = icmp eq i32 %conv406, 105
  br i1 %cmp407, label %if.then.409, label %if.end.413

if.then.409:                                      ; preds = %if.end.401
  %226 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld410 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %226, i32 0, i32 1
  %arrayidx411 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld410, i32 0, i64 3
  %rtx412 = bitcast %union.rtunion_def* %arrayidx411 to %struct.rtx_def**
  %227 = load %struct.rtx_def*, %struct.rtx_def** %rtx412, align 8
  call void @scan_paradoxical_subregs(%struct.rtx_def* %227)
  br label %if.end.413

if.end.413:                                       ; preds = %if.then.409, %if.end.401
  br label %for.inc.414

for.inc.414:                                      ; preds = %if.end.413, %if.else.318
  %228 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld415 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %228, i32 0, i32 1
  %arrayidx416 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld415, i32 0, i64 2
  %rtx417 = bitcast %union.rtunion_def* %arrayidx416 to %struct.rtx_def**
  %229 = load %struct.rtx_def*, %struct.rtx_def** %rtx417, align 8
  store %struct.rtx_def* %229, %struct.rtx_def** %insn, align 8
  br label %for.cond.76

for.end.418:                                      ; preds = %for.cond.76
  call void @init_elim_table()
  %call419 = call i32 @max_label_num()
  %call420 = call i32 @get_first_label_num()
  %sub = sub nsw i32 %call419, %call420
  store i32 %sub, i32* @num_labels, align 4
  %230 = load i32, i32* @num_labels, align 4
  %conv421 = sext i32 %230 to i64
  %call422 = call noalias i8* @xmalloc(i64 %conv421)
  store i8* %call422, i8** %real_known_ptr, align 8
  %231 = load i32, i32* @num_labels, align 4
  %conv423 = sext i32 %231 to i64
  %mul424 = mul i64 %conv423, 4
  %mul425 = mul i64 %mul424, 4
  %call426 = call noalias i8* @xmalloc(i64 %mul425)
  %232 = bitcast i8* %call426 to [4 x i32]*
  store [4 x i32]* %232, [4 x i32]** %real_at_ptr, align 8
  %233 = load i8*, i8** %real_known_ptr, align 8
  %call427 = call i32 @get_first_label_num()
  %idx.ext428 = sext i32 %call427 to i64
  %idx.neg = sub i64 0, %idx.ext428
  %add.ptr429 = getelementptr inbounds i8, i8* %233, i64 %idx.neg
  store i8* %add.ptr429, i8** @offsets_known_at, align 8
  %234 = load [4 x i32]*, [4 x i32]** %real_at_ptr, align 8
  %call430 = call i32 @get_first_label_num()
  %idx.ext431 = sext i32 %call430 to i64
  %idx.neg432 = sub i64 0, %idx.ext431
  %add.ptr433 = getelementptr inbounds [4 x i32], [4 x i32]* %234, i64 %idx.neg432
  store [4 x i32]* %add.ptr433, [4 x i32]** @offsets_at, align 8
  store i32 58, i32* %i, align 4
  br label %for.cond.434

for.cond.434:                                     ; preds = %for.inc.438, %for.end.418
  %235 = load i32, i32* %i, align 4
  %236 = load i32, i32* @max_regno, align 4
  %cmp435 = icmp slt i32 %235, %236
  br i1 %cmp435, label %for.body.437, label %for.end.440

for.body.437:                                     ; preds = %for.cond.434
  %237 = load i32, i32* %i, align 4
  call void @alter_reg(i32 %237, i32 -1)
  br label %for.inc.438

for.inc.438:                                      ; preds = %for.body.437
  %238 = load i32, i32* %i, align 4
  %inc439 = add nsw i32 %238, 1
  store i32 %inc439, i32* %i, align 4
  br label %for.cond.434

for.end.440:                                      ; preds = %for.cond.434
  %239 = load %struct.rtx_def*, %struct.rtx_def** %first.addr, align 8
  store %struct.rtx_def* %239, %struct.rtx_def** %insn, align 8
  br label %for.cond.441

for.cond.441:                                     ; preds = %for.inc.464, %for.end.440
  %240 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %tobool442 = icmp ne %struct.rtx_def* %240, null
  br i1 %tobool442, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond.441
  %241 = load i32, i32* @num_eliminable, align 4
  %tobool443 = icmp ne i32 %241, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond.441
  %242 = phi i1 [ false, %for.cond.441 ], [ %tobool443, %land.rhs ]
  br i1 %242, label %for.body.444, label %for.end.468

for.body.444:                                     ; preds = %land.end
  %243 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %244 = bitcast %struct.rtx_def* %243 to i32*
  %bf.load445 = load i32, i32* %244, align 8
  %bf.clear446 = and i32 %bf.load445, 65535
  %cmp447 = icmp eq i32 %bf.clear446, 32
  br i1 %cmp447, label %if.then.459, label %lor.lhs.false.449

lor.lhs.false.449:                                ; preds = %for.body.444
  %245 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %246 = bitcast %struct.rtx_def* %245 to i32*
  %bf.load450 = load i32, i32* %246, align 8
  %bf.clear451 = and i32 %bf.load450, 65535
  %cmp452 = icmp eq i32 %bf.clear451, 33
  br i1 %cmp452, label %if.then.459, label %lor.lhs.false.454

lor.lhs.false.454:                                ; preds = %lor.lhs.false.449
  %247 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %248 = bitcast %struct.rtx_def* %247 to i32*
  %bf.load455 = load i32, i32* %248, align 8
  %bf.clear456 = and i32 %bf.load455, 65535
  %cmp457 = icmp eq i32 %bf.clear456, 34
  br i1 %cmp457, label %if.then.459, label %if.end.463

if.then.459:                                      ; preds = %lor.lhs.false.454, %lor.lhs.false.449, %for.body.444
  %249 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld460 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %249, i32 0, i32 1
  %arrayidx461 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld460, i32 0, i64 3
  %rtx462 = bitcast %union.rtunion_def* %arrayidx461 to %struct.rtx_def**
  %250 = load %struct.rtx_def*, %struct.rtx_def** %rtx462, align 8
  call void @note_stores(%struct.rtx_def* %250, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @mark_not_eliminable, i8* null)
  br label %if.end.463

if.end.463:                                       ; preds = %if.then.459, %lor.lhs.false.454
  br label %for.inc.464

for.inc.464:                                      ; preds = %if.end.463
  %251 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld465 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %251, i32 0, i32 1
  %arrayidx466 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld465, i32 0, i64 2
  %rtx467 = bitcast %union.rtunion_def* %arrayidx466 to %struct.rtx_def**
  %252 = load %struct.rtx_def*, %struct.rtx_def** %rtx467, align 8
  store %struct.rtx_def* %252, %struct.rtx_def** %insn, align 8
  br label %for.cond.441

for.end.468:                                      ; preds = %land.end
  call void @maybe_fix_stack_asms()
  store %struct.insn_chain* null, %struct.insn_chain** @insns_need_reload, align 8
  store i32 0, i32* @something_needs_elimination, align 4
  store i32 -1, i32* @last_spill_reg, align 4
  store i64 0, i64* @used_spill_regs, align 8
  %253 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %253, %struct.elim_table** %ep, align 8
  br label %for.cond.469

for.cond.469:                                     ; preds = %for.inc.477, %for.end.468
  %254 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %255 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx470 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %255, i64 4
  %cmp471 = icmp ult %struct.elim_table* %254, %arrayidx470
  br i1 %cmp471, label %for.body.473, label %for.end.478

for.body.473:                                     ; preds = %for.cond.469
  %256 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate = getelementptr inbounds %struct.elim_table, %struct.elim_table* %256, i32 0, i32 3
  %257 = load i32, i32* %can_eliminate, align 4
  %tobool474 = icmp ne i32 %257, 0
  br i1 %tobool474, label %if.end.476, label %if.then.475

if.then.475:                                      ; preds = %for.body.473
  %258 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %from = getelementptr inbounds %struct.elim_table, %struct.elim_table* %258, i32 0, i32 0
  %259 = load i32, i32* %from, align 4
  call void @spill_hard_reg(i32 %259, i32 1)
  br label %if.end.476

if.end.476:                                       ; preds = %if.then.475, %for.body.473
  br label %for.inc.477

for.inc.477:                                      ; preds = %if.end.476
  %260 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %260, i32 1
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8
  br label %for.cond.469

for.end.478:                                      ; preds = %for.cond.469
  %261 = load i32, i32* @frame_pointer_needed, align 4
  %tobool479 = icmp ne i32 %261, 0
  br i1 %tobool479, label %if.then.480, label %if.end.481

if.then.480:                                      ; preds = %for.end.478
  call void @spill_hard_reg(i32 6, i32 1)
  br label %if.end.481

if.end.481:                                       ; preds = %if.then.480, %for.end.478
  %262 = load i32, i32* %global.addr, align 4
  %call482 = call i32 @finish_spills(i32 %262)
  store i32 1, i32* @reload_in_progress, align 4
  br label %for.cond.483

for.cond.483:                                     ; preds = %if.end.869, %if.then.752, %if.end.481
  %263 = load %struct.function*, %struct.function** @cfun, align 8
  %stack_alignment_needed = getelementptr inbounds %struct.function, %struct.function* %263, i32 0, i32 52
  %264 = load i32, i32* %stack_alignment_needed, align 4
  %tobool487 = icmp ne i32 %264, 0
  br i1 %tobool487, label %if.then.488, label %if.end.491

if.then.488:                                      ; preds = %for.cond.483
  %265 = load %struct.function*, %struct.function** @cfun, align 8
  %stack_alignment_needed489 = getelementptr inbounds %struct.function, %struct.function* %265, i32 0, i32 52
  %266 = load i32, i32* %stack_alignment_needed489, align 4
  %call490 = call %struct.rtx_def* @assign_stack_local(i32 51, i64 0, i32 %266)
  br label %if.end.491

if.end.491:                                       ; preds = %if.then.488, %for.cond.483
  %call492 = call i64 @get_frame_size()
  store i64 %call492, i64* %starting_frame_size, align 8
  call void @set_initial_elim_offsets()
  call void @set_initial_label_offsets()
  store i32 53, i32* %i, align 4
  br label %for.cond.493

for.cond.493:                                     ; preds = %for.inc.743, %if.end.491
  %267 = load i32, i32* %i, align 4
  %268 = load i32, i32* @max_regno, align 4
  %cmp494 = icmp slt i32 %267, %268
  br i1 %cmp494, label %for.body.496, label %for.end.745

for.body.496:                                     ; preds = %for.cond.493
  %269 = load i32, i32* %i, align 4
  %idxprom497 = sext i32 %269 to i64
  %270 = load i16*, i16** @reg_renumber, align 8
  %arrayidx498 = getelementptr inbounds i16, i16* %270, i64 %idxprom497
  %271 = load i16, i16* %arrayidx498, align 2
  %conv499 = sext i16 %271 to i32
  %cmp500 = icmp slt i32 %conv499, 0
  br i1 %cmp500, label %land.lhs.true.502, label %if.end.742

land.lhs.true.502:                                ; preds = %for.body.496
  %272 = load i32, i32* %i, align 4
  %idxprom503 = sext i32 %272 to i64
  %273 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx504 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %273, i64 %idxprom503
  %274 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx504, align 8
  %tobool505 = icmp ne %struct.rtx_def* %274, null
  br i1 %tobool505, label %if.then.506, label %if.end.742

if.then.506:                                      ; preds = %land.lhs.true.502
  %275 = load i32, i32* %i, align 4
  %idxprom509 = sext i32 %275 to i64
  %276 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx510 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %276, i64 %idxprom509
  %277 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx510, align 8
  %call511 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %277, i32 0, %struct.rtx_def* null)
  store %struct.rtx_def* %call511, %struct.rtx_def** %x508, align 8
  %278 = load i32, i32* %i, align 4
  %idxprom512 = sext i32 %278 to i64
  %279 = load %struct.function*, %struct.function** @cfun, align 8
  %emit = getelementptr inbounds %struct.function, %struct.function* %279, i32 0, i32 3
  %280 = load %struct.emit_status*, %struct.emit_status** %emit, align 8
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status, %struct.emit_status* %280, i32 0, i32 12
  %281 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx, align 8
  %arrayidx513 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %281, i64 %idxprom512
  %282 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx513, align 8
  %283 = bitcast %struct.rtx_def* %282 to i32*
  %bf.load514 = load i32, i32* %283, align 8
  %bf.lshr515 = lshr i32 %bf.load514, 16
  %bf.clear516 = and i32 %bf.lshr515, 255
  %284 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld517 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %284, i32 0, i32 1
  %arrayidx518 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld517, i32 0, i64 0
  %rtx519 = bitcast %union.rtunion_def* %arrayidx518 to %struct.rtx_def**
  %285 = load %struct.rtx_def*, %struct.rtx_def** %rtx519, align 8
  %call520 = call i32 @strict_memory_address_p(i32 %bf.clear516, %struct.rtx_def* %285)
  %tobool521 = icmp ne i32 %call520, 0
  br i1 %tobool521, label %if.then.522, label %if.else.527

if.then.522:                                      ; preds = %if.then.506
  %286 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %287 = load i32, i32* %i, align 4
  %idxprom523 = sext i32 %287 to i64
  %288 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx524 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %288, i64 %idxprom523
  store %struct.rtx_def* %286, %struct.rtx_def** %arrayidx524, align 8
  %289 = load i32, i32* %i, align 4
  %idxprom525 = sext i32 %289 to i64
  %290 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8
  %arrayidx526 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %290, i64 %idxprom525
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx526, align 8
  br label %if.end.741

if.else.527:                                      ; preds = %if.then.506
  %291 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld528 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %291, i32 0, i32 1
  %arrayidx529 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld528, i32 0, i64 0
  %rtx530 = bitcast %union.rtunion_def* %arrayidx529 to %struct.rtx_def**
  %292 = load %struct.rtx_def*, %struct.rtx_def** %rtx530, align 8
  %293 = bitcast %struct.rtx_def* %292 to i32*
  %bf.load531 = load i32, i32* %293, align 8
  %bf.clear532 = and i32 %bf.load531, 65535
  %cmp533 = icmp eq i32 %bf.clear532, 67
  br i1 %cmp533, label %if.then.727, label %lor.lhs.false.535

lor.lhs.false.535:                                ; preds = %if.else.527
  %294 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld536 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %294, i32 0, i32 1
  %arrayidx537 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld536, i32 0, i64 0
  %rtx538 = bitcast %union.rtunion_def* %arrayidx537 to %struct.rtx_def**
  %295 = load %struct.rtx_def*, %struct.rtx_def** %rtx538, align 8
  %296 = bitcast %struct.rtx_def* %295 to i32*
  %bf.load539 = load i32, i32* %296, align 8
  %bf.clear540 = and i32 %bf.load539, 65535
  %cmp541 = icmp eq i32 %bf.clear540, 68
  br i1 %cmp541, label %if.then.727, label %lor.lhs.false.543

lor.lhs.false.543:                                ; preds = %lor.lhs.false.535
  %297 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld544 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %297, i32 0, i32 1
  %arrayidx545 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld544, i32 0, i64 0
  %rtx546 = bitcast %union.rtunion_def* %arrayidx545 to %struct.rtx_def**
  %298 = load %struct.rtx_def*, %struct.rtx_def** %rtx546, align 8
  %299 = bitcast %struct.rtx_def* %298 to i32*
  %bf.load547 = load i32, i32* %299, align 8
  %bf.clear548 = and i32 %bf.load547, 65535
  %cmp549 = icmp eq i32 %bf.clear548, 54
  br i1 %cmp549, label %if.then.727, label %lor.lhs.false.551

lor.lhs.false.551:                                ; preds = %lor.lhs.false.543
  %300 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld552 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %300, i32 0, i32 1
  %arrayidx553 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld552, i32 0, i64 0
  %rtx554 = bitcast %union.rtunion_def* %arrayidx553 to %struct.rtx_def**
  %301 = load %struct.rtx_def*, %struct.rtx_def** %rtx554, align 8
  %302 = bitcast %struct.rtx_def* %301 to i32*
  %bf.load555 = load i32, i32* %302, align 8
  %bf.clear556 = and i32 %bf.load555, 65535
  %cmp557 = icmp eq i32 %bf.clear556, 55
  br i1 %cmp557, label %if.then.727, label %lor.lhs.false.559

lor.lhs.false.559:                                ; preds = %lor.lhs.false.551
  %303 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld560 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %303, i32 0, i32 1
  %arrayidx561 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld560, i32 0, i64 0
  %rtx562 = bitcast %union.rtunion_def* %arrayidx561 to %struct.rtx_def**
  %304 = load %struct.rtx_def*, %struct.rtx_def** %rtx562, align 8
  %305 = bitcast %struct.rtx_def* %304 to i32*
  %bf.load563 = load i32, i32* %305, align 8
  %bf.clear564 = and i32 %bf.load563, 65535
  %cmp565 = icmp eq i32 %bf.clear564, 58
  br i1 %cmp565, label %if.then.727, label %lor.lhs.false.567

lor.lhs.false.567:                                ; preds = %lor.lhs.false.559
  %306 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld568 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %306, i32 0, i32 1
  %arrayidx569 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld568, i32 0, i64 0
  %rtx570 = bitcast %union.rtunion_def* %arrayidx569 to %struct.rtx_def**
  %307 = load %struct.rtx_def*, %struct.rtx_def** %rtx570, align 8
  %308 = bitcast %struct.rtx_def* %307 to i32*
  %bf.load571 = load i32, i32* %308, align 8
  %bf.clear572 = and i32 %bf.load571, 65535
  %cmp573 = icmp eq i32 %bf.clear572, 134
  br i1 %cmp573, label %if.then.727, label %lor.lhs.false.575

lor.lhs.false.575:                                ; preds = %lor.lhs.false.567
  %309 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld576 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %309, i32 0, i32 1
  %arrayidx577 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld576, i32 0, i64 0
  %rtx578 = bitcast %union.rtunion_def* %arrayidx577 to %struct.rtx_def**
  %310 = load %struct.rtx_def*, %struct.rtx_def** %rtx578, align 8
  %311 = bitcast %struct.rtx_def* %310 to i32*
  %bf.load579 = load i32, i32* %311, align 8
  %bf.clear580 = and i32 %bf.load579, 65535
  %cmp581 = icmp eq i32 %bf.clear580, 56
  br i1 %cmp581, label %if.then.727, label %lor.lhs.false.583

lor.lhs.false.583:                                ; preds = %lor.lhs.false.575
  %312 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld584 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %312, i32 0, i32 1
  %arrayidx585 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld584, i32 0, i64 0
  %rtx586 = bitcast %union.rtunion_def* %arrayidx585 to %struct.rtx_def**
  %313 = load %struct.rtx_def*, %struct.rtx_def** %rtx586, align 8
  %314 = bitcast %struct.rtx_def* %313 to i32*
  %bf.load587 = load i32, i32* %314, align 8
  %bf.clear588 = and i32 %bf.load587, 65535
  %cmp589 = icmp eq i32 %bf.clear588, 140
  br i1 %cmp589, label %if.then.727, label %lor.lhs.false.591

lor.lhs.false.591:                                ; preds = %lor.lhs.false.583
  %315 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld592 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %315, i32 0, i32 1
  %arrayidx593 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld592, i32 0, i64 0
  %rtx594 = bitcast %union.rtunion_def* %arrayidx593 to %struct.rtx_def**
  %316 = load %struct.rtx_def*, %struct.rtx_def** %rtx594, align 8
  %317 = bitcast %struct.rtx_def* %316 to i32*
  %bf.load595 = load i32, i32* %317, align 8
  %bf.clear596 = and i32 %bf.load595, 65535
  %cmp597 = icmp eq i32 %bf.clear596, 61
  br i1 %cmp597, label %land.lhs.true.599, label %lor.lhs.false.608

land.lhs.true.599:                                ; preds = %lor.lhs.false.591
  %318 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld600 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %318, i32 0, i32 1
  %arrayidx601 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld600, i32 0, i64 0
  %rtx602 = bitcast %union.rtunion_def* %arrayidx601 to %struct.rtx_def**
  %319 = load %struct.rtx_def*, %struct.rtx_def** %rtx602, align 8
  %fld603 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %319, i32 0, i32 1
  %arrayidx604 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld603, i32 0, i64 0
  %rtuint605 = bitcast %union.rtunion_def* %arrayidx604 to i32*
  %320 = load i32, i32* %rtuint605, align 4
  %cmp606 = icmp ult i32 %320, 53
  br i1 %cmp606, label %if.then.727, label %lor.lhs.false.608

lor.lhs.false.608:                                ; preds = %land.lhs.true.599, %lor.lhs.false.591
  %321 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld609 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %321, i32 0, i32 1
  %arrayidx610 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld609, i32 0, i64 0
  %rtx611 = bitcast %union.rtunion_def* %arrayidx610 to %struct.rtx_def**
  %322 = load %struct.rtx_def*, %struct.rtx_def** %rtx611, align 8
  %323 = bitcast %struct.rtx_def* %322 to i32*
  %bf.load612 = load i32, i32* %323, align 8
  %bf.clear613 = and i32 %bf.load612, 65535
  %cmp614 = icmp eq i32 %bf.clear613, 75
  br i1 %cmp614, label %land.lhs.true.616, label %if.else.735

land.lhs.true.616:                                ; preds = %lor.lhs.false.608
  %324 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld617 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %324, i32 0, i32 1
  %arrayidx618 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld617, i32 0, i64 0
  %rtx619 = bitcast %union.rtunion_def* %arrayidx618 to %struct.rtx_def**
  %325 = load %struct.rtx_def*, %struct.rtx_def** %rtx619, align 8
  %fld620 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %325, i32 0, i32 1
  %arrayidx621 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld620, i32 0, i64 0
  %rtx622 = bitcast %union.rtunion_def* %arrayidx621 to %struct.rtx_def**
  %326 = load %struct.rtx_def*, %struct.rtx_def** %rtx622, align 8
  %327 = bitcast %struct.rtx_def* %326 to i32*
  %bf.load623 = load i32, i32* %327, align 8
  %bf.clear624 = and i32 %bf.load623, 65535
  %cmp625 = icmp eq i32 %bf.clear624, 61
  br i1 %cmp625, label %land.lhs.true.627, label %if.else.735

land.lhs.true.627:                                ; preds = %land.lhs.true.616
  %328 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld628 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %328, i32 0, i32 1
  %arrayidx629 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld628, i32 0, i64 0
  %rtx630 = bitcast %union.rtunion_def* %arrayidx629 to %struct.rtx_def**
  %329 = load %struct.rtx_def*, %struct.rtx_def** %rtx630, align 8
  %fld631 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %329, i32 0, i32 1
  %arrayidx632 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld631, i32 0, i64 0
  %rtx633 = bitcast %union.rtunion_def* %arrayidx632 to %struct.rtx_def**
  %330 = load %struct.rtx_def*, %struct.rtx_def** %rtx633, align 8
  %fld634 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %330, i32 0, i32 1
  %arrayidx635 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld634, i32 0, i64 0
  %rtuint636 = bitcast %union.rtunion_def* %arrayidx635 to i32*
  %331 = load i32, i32* %rtuint636, align 4
  %cmp637 = icmp ult i32 %331, 53
  br i1 %cmp637, label %land.lhs.true.639, label %if.else.735

land.lhs.true.639:                                ; preds = %land.lhs.true.627
  %332 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld640 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %332, i32 0, i32 1
  %arrayidx641 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld640, i32 0, i64 0
  %rtx642 = bitcast %union.rtunion_def* %arrayidx641 to %struct.rtx_def**
  %333 = load %struct.rtx_def*, %struct.rtx_def** %rtx642, align 8
  %fld643 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %333, i32 0, i32 1
  %arrayidx644 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld643, i32 0, i64 1
  %rtx645 = bitcast %union.rtunion_def* %arrayidx644 to %struct.rtx_def**
  %334 = load %struct.rtx_def*, %struct.rtx_def** %rtx645, align 8
  %335 = bitcast %struct.rtx_def* %334 to i32*
  %bf.load646 = load i32, i32* %335, align 8
  %bf.clear647 = and i32 %bf.load646, 65535
  %cmp648 = icmp eq i32 %bf.clear647, 67
  br i1 %cmp648, label %if.then.727, label %lor.lhs.false.650

lor.lhs.false.650:                                ; preds = %land.lhs.true.639
  %336 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld651 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %336, i32 0, i32 1
  %arrayidx652 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld651, i32 0, i64 0
  %rtx653 = bitcast %union.rtunion_def* %arrayidx652 to %struct.rtx_def**
  %337 = load %struct.rtx_def*, %struct.rtx_def** %rtx653, align 8
  %fld654 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %337, i32 0, i32 1
  %arrayidx655 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld654, i32 0, i64 1
  %rtx656 = bitcast %union.rtunion_def* %arrayidx655 to %struct.rtx_def**
  %338 = load %struct.rtx_def*, %struct.rtx_def** %rtx656, align 8
  %339 = bitcast %struct.rtx_def* %338 to i32*
  %bf.load657 = load i32, i32* %339, align 8
  %bf.clear658 = and i32 %bf.load657, 65535
  %cmp659 = icmp eq i32 %bf.clear658, 68
  br i1 %cmp659, label %if.then.727, label %lor.lhs.false.661

lor.lhs.false.661:                                ; preds = %lor.lhs.false.650
  %340 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld662 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %340, i32 0, i32 1
  %arrayidx663 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld662, i32 0, i64 0
  %rtx664 = bitcast %union.rtunion_def* %arrayidx663 to %struct.rtx_def**
  %341 = load %struct.rtx_def*, %struct.rtx_def** %rtx664, align 8
  %fld665 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %341, i32 0, i32 1
  %arrayidx666 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld665, i32 0, i64 1
  %rtx667 = bitcast %union.rtunion_def* %arrayidx666 to %struct.rtx_def**
  %342 = load %struct.rtx_def*, %struct.rtx_def** %rtx667, align 8
  %343 = bitcast %struct.rtx_def* %342 to i32*
  %bf.load668 = load i32, i32* %343, align 8
  %bf.clear669 = and i32 %bf.load668, 65535
  %cmp670 = icmp eq i32 %bf.clear669, 54
  br i1 %cmp670, label %if.then.727, label %lor.lhs.false.672

lor.lhs.false.672:                                ; preds = %lor.lhs.false.661
  %344 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld673 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %344, i32 0, i32 1
  %arrayidx674 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld673, i32 0, i64 0
  %rtx675 = bitcast %union.rtunion_def* %arrayidx674 to %struct.rtx_def**
  %345 = load %struct.rtx_def*, %struct.rtx_def** %rtx675, align 8
  %fld676 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %345, i32 0, i32 1
  %arrayidx677 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld676, i32 0, i64 1
  %rtx678 = bitcast %union.rtunion_def* %arrayidx677 to %struct.rtx_def**
  %346 = load %struct.rtx_def*, %struct.rtx_def** %rtx678, align 8
  %347 = bitcast %struct.rtx_def* %346 to i32*
  %bf.load679 = load i32, i32* %347, align 8
  %bf.clear680 = and i32 %bf.load679, 65535
  %cmp681 = icmp eq i32 %bf.clear680, 55
  br i1 %cmp681, label %if.then.727, label %lor.lhs.false.683

lor.lhs.false.683:                                ; preds = %lor.lhs.false.672
  %348 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld684 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %348, i32 0, i32 1
  %arrayidx685 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld684, i32 0, i64 0
  %rtx686 = bitcast %union.rtunion_def* %arrayidx685 to %struct.rtx_def**
  %349 = load %struct.rtx_def*, %struct.rtx_def** %rtx686, align 8
  %fld687 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %349, i32 0, i32 1
  %arrayidx688 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld687, i32 0, i64 1
  %rtx689 = bitcast %union.rtunion_def* %arrayidx688 to %struct.rtx_def**
  %350 = load %struct.rtx_def*, %struct.rtx_def** %rtx689, align 8
  %351 = bitcast %struct.rtx_def* %350 to i32*
  %bf.load690 = load i32, i32* %351, align 8
  %bf.clear691 = and i32 %bf.load690, 65535
  %cmp692 = icmp eq i32 %bf.clear691, 58
  br i1 %cmp692, label %if.then.727, label %lor.lhs.false.694

lor.lhs.false.694:                                ; preds = %lor.lhs.false.683
  %352 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld695 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %352, i32 0, i32 1
  %arrayidx696 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld695, i32 0, i64 0
  %rtx697 = bitcast %union.rtunion_def* %arrayidx696 to %struct.rtx_def**
  %353 = load %struct.rtx_def*, %struct.rtx_def** %rtx697, align 8
  %fld698 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %353, i32 0, i32 1
  %arrayidx699 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld698, i32 0, i64 1
  %rtx700 = bitcast %union.rtunion_def* %arrayidx699 to %struct.rtx_def**
  %354 = load %struct.rtx_def*, %struct.rtx_def** %rtx700, align 8
  %355 = bitcast %struct.rtx_def* %354 to i32*
  %bf.load701 = load i32, i32* %355, align 8
  %bf.clear702 = and i32 %bf.load701, 65535
  %cmp703 = icmp eq i32 %bf.clear702, 134
  br i1 %cmp703, label %if.then.727, label %lor.lhs.false.705

lor.lhs.false.705:                                ; preds = %lor.lhs.false.694
  %356 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld706 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %356, i32 0, i32 1
  %arrayidx707 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld706, i32 0, i64 0
  %rtx708 = bitcast %union.rtunion_def* %arrayidx707 to %struct.rtx_def**
  %357 = load %struct.rtx_def*, %struct.rtx_def** %rtx708, align 8
  %fld709 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %357, i32 0, i32 1
  %arrayidx710 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld709, i32 0, i64 1
  %rtx711 = bitcast %union.rtunion_def* %arrayidx710 to %struct.rtx_def**
  %358 = load %struct.rtx_def*, %struct.rtx_def** %rtx711, align 8
  %359 = bitcast %struct.rtx_def* %358 to i32*
  %bf.load712 = load i32, i32* %359, align 8
  %bf.clear713 = and i32 %bf.load712, 65535
  %cmp714 = icmp eq i32 %bf.clear713, 56
  br i1 %cmp714, label %if.then.727, label %lor.lhs.false.716

lor.lhs.false.716:                                ; preds = %lor.lhs.false.705
  %360 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld717 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %360, i32 0, i32 1
  %arrayidx718 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld717, i32 0, i64 0
  %rtx719 = bitcast %union.rtunion_def* %arrayidx718 to %struct.rtx_def**
  %361 = load %struct.rtx_def*, %struct.rtx_def** %rtx719, align 8
  %fld720 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %361, i32 0, i32 1
  %arrayidx721 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld720, i32 0, i64 1
  %rtx722 = bitcast %union.rtunion_def* %arrayidx721 to %struct.rtx_def**
  %362 = load %struct.rtx_def*, %struct.rtx_def** %rtx722, align 8
  %363 = bitcast %struct.rtx_def* %362 to i32*
  %bf.load723 = load i32, i32* %363, align 8
  %bf.clear724 = and i32 %bf.load723, 65535
  %cmp725 = icmp eq i32 %bf.clear724, 140
  br i1 %cmp725, label %if.then.727, label %if.else.735

if.then.727:                                      ; preds = %lor.lhs.false.716, %lor.lhs.false.705, %lor.lhs.false.694, %lor.lhs.false.683, %lor.lhs.false.672, %lor.lhs.false.661, %lor.lhs.false.650, %land.lhs.true.639, %land.lhs.true.599, %lor.lhs.false.583, %lor.lhs.false.575, %lor.lhs.false.567, %lor.lhs.false.559, %lor.lhs.false.551, %lor.lhs.false.543, %lor.lhs.false.535, %if.else.527
  %364 = load %struct.rtx_def*, %struct.rtx_def** %x508, align 8
  %fld728 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %364, i32 0, i32 1
  %arrayidx729 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld728, i32 0, i64 0
  %rtx730 = bitcast %union.rtunion_def* %arrayidx729 to %struct.rtx_def**
  %365 = load %struct.rtx_def*, %struct.rtx_def** %rtx730, align 8
  %366 = load i32, i32* %i, align 4
  %idxprom731 = sext i32 %366 to i64
  %367 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8
  %arrayidx732 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %367, i64 %idxprom731
  store %struct.rtx_def* %365, %struct.rtx_def** %arrayidx732, align 8
  %368 = load i32, i32* %i, align 4
  %idxprom733 = sext i32 %368 to i64
  %369 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx734 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %369, i64 %idxprom733
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx734, align 8
  br label %if.end.740

if.else.735:                                      ; preds = %lor.lhs.false.716, %land.lhs.true.627, %land.lhs.true.616, %lor.lhs.false.608
  %370 = load i32, i32* %i, align 4
  %idxprom736 = sext i32 %370 to i64
  %371 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx737 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %371, i64 %idxprom736
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx737, align 8
  %372 = load i32, i32* %i, align 4
  %idxprom738 = sext i32 %372 to i64
  %373 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8
  %arrayidx739 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %373, i64 %idxprom738
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx739, align 8
  %374 = load i32, i32* %i, align 4
  call void @alter_reg(i32 %374, i32 -1)
  br label %if.end.740

if.end.740:                                       ; preds = %if.else.735, %if.then.727
  br label %if.end.741

if.end.741:                                       ; preds = %if.end.740, %if.then.522
  br label %if.end.742

if.end.742:                                       ; preds = %if.end.741, %land.lhs.true.502, %for.body.496
  br label %for.inc.743

for.inc.743:                                      ; preds = %if.end.742
  %375 = load i32, i32* %i, align 4
  %inc744 = add nsw i32 %375, 1
  store i32 %inc744, i32* %i, align 4
  br label %for.cond.493

for.end.745:                                      ; preds = %for.cond.493
  %376 = load i32, i32* @caller_save_needed, align 4
  %tobool746 = icmp ne i32 %376, 0
  br i1 %tobool746, label %if.then.747, label %if.end.748

if.then.747:                                      ; preds = %for.end.745
  call void @setup_save_areas()
  br label %if.end.748

if.end.748:                                       ; preds = %if.then.747, %for.end.745
  %377 = load i64, i64* %starting_frame_size, align 8
  %call749 = call i64 @get_frame_size()
  %cmp750 = icmp ne i64 %377, %call749
  br i1 %cmp750, label %if.then.752, label %if.end.753

if.then.752:                                      ; preds = %if.end.748
  br label %for.cond.483

if.end.753:                                       ; preds = %if.end.748
  %378 = load i32, i32* @caller_save_needed, align 4
  %tobool754 = icmp ne i32 %378, 0
  br i1 %tobool754, label %if.then.755, label %if.end.821

if.then.755:                                      ; preds = %if.end.753
  call void @save_call_clobbered_regs()
  store %struct.obstack* @reload_obstack, %struct.obstack** %__h757, align 8
  %379 = load %struct.obstack*, %struct.obstack** %__h757, align 8
  store %struct.obstack* %379, %struct.obstack** %__o759, align 8
  store i32 0, i32* %__len761, align 4
  %380 = load %struct.obstack*, %struct.obstack** %__o759, align 8
  %chunk_limit762 = getelementptr inbounds %struct.obstack, %struct.obstack* %380, i32 0, i32 4
  %381 = load i8*, i8** %chunk_limit762, align 8
  %382 = load %struct.obstack*, %struct.obstack** %__o759, align 8
  %next_free763 = getelementptr inbounds %struct.obstack, %struct.obstack* %382, i32 0, i32 3
  %383 = load i8*, i8** %next_free763, align 8
  %sub.ptr.lhs.cast764 = ptrtoint i8* %381 to i64
  %sub.ptr.rhs.cast765 = ptrtoint i8* %383 to i64
  %sub.ptr.sub766 = sub i64 %sub.ptr.lhs.cast764, %sub.ptr.rhs.cast765
  %384 = load i32, i32* %__len761, align 4
  %conv767 = sext i32 %384 to i64
  %cmp768 = icmp slt i64 %sub.ptr.sub766, %conv767
  br i1 %cmp768, label %if.then.770, label %if.end.771

if.then.770:                                      ; preds = %if.then.755
  %385 = load %struct.obstack*, %struct.obstack** %__o759, align 8
  %386 = load i32, i32* %__len761, align 4
  call void @_obstack_newchunk(%struct.obstack* %385, i32 %386)
  br label %if.end.771

if.end.771:                                       ; preds = %if.then.770, %if.then.755
  %387 = load i32, i32* %__len761, align 4
  %388 = load %struct.obstack*, %struct.obstack** %__o759, align 8
  %next_free772 = getelementptr inbounds %struct.obstack, %struct.obstack* %388, i32 0, i32 3
  %389 = load i8*, i8** %next_free772, align 8
  %idx.ext773 = sext i32 %387 to i64
  %add.ptr774 = getelementptr inbounds i8, i8* %389, i64 %idx.ext773
  store i8* %add.ptr774, i8** %next_free772, align 8
  %390 = load %struct.obstack*, %struct.obstack** %__h757, align 8
  store %struct.obstack* %390, %struct.obstack** %__o1777, align 8
  %391 = load %struct.obstack*, %struct.obstack** %__o1777, align 8
  %object_base780 = getelementptr inbounds %struct.obstack, %struct.obstack* %391, i32 0, i32 2
  %392 = load i8*, i8** %object_base780, align 8
  store i8* %392, i8** %value779, align 8
  %393 = load %struct.obstack*, %struct.obstack** %__o1777, align 8
  %next_free781 = getelementptr inbounds %struct.obstack, %struct.obstack* %393, i32 0, i32 3
  %394 = load i8*, i8** %next_free781, align 8
  %395 = load i8*, i8** %value779, align 8
  %cmp782 = icmp eq i8* %394, %395
  br i1 %cmp782, label %if.then.784, label %if.end.789

if.then.784:                                      ; preds = %if.end.771
  %396 = load %struct.obstack*, %struct.obstack** %__o1777, align 8
  %maybe_empty_object785 = getelementptr inbounds %struct.obstack, %struct.obstack* %396, i32 0, i32 10
  %bf.load786 = load i8, i8* %maybe_empty_object785, align 8
  %bf.clear787 = and i8 %bf.load786, -3
  %bf.set788 = or i8 %bf.clear787, 2
  store i8 %bf.set788, i8* %maybe_empty_object785, align 8
  br label %if.end.789

if.end.789:                                       ; preds = %if.then.784, %if.end.771
  %397 = load %struct.obstack*, %struct.obstack** %__o1777, align 8
  %next_free790 = getelementptr inbounds %struct.obstack, %struct.obstack* %397, i32 0, i32 3
  %398 = load i8*, i8** %next_free790, align 8
  %sub.ptr.lhs.cast791 = ptrtoint i8* %398 to i64
  %sub.ptr.sub792 = sub i64 %sub.ptr.lhs.cast791, 0
  %399 = load %struct.obstack*, %struct.obstack** %__o1777, align 8
  %alignment_mask793 = getelementptr inbounds %struct.obstack, %struct.obstack* %399, i32 0, i32 6
  %400 = load i32, i32* %alignment_mask793, align 4
  %conv794 = sext i32 %400 to i64
  %add795 = add nsw i64 %sub.ptr.sub792, %conv794
  %401 = load %struct.obstack*, %struct.obstack** %__o1777, align 8
  %alignment_mask796 = getelementptr inbounds %struct.obstack, %struct.obstack* %401, i32 0, i32 6
  %402 = load i32, i32* %alignment_mask796, align 4
  %neg797 = xor i32 %402, -1
  %conv798 = sext i32 %neg797 to i64
  %and799 = and i64 %add795, %conv798
  %add.ptr800 = getelementptr inbounds i8, i8* null, i64 %and799
  %403 = load %struct.obstack*, %struct.obstack** %__o1777, align 8
  %next_free801 = getelementptr inbounds %struct.obstack, %struct.obstack* %403, i32 0, i32 3
  store i8* %add.ptr800, i8** %next_free801, align 8
  %404 = load %struct.obstack*, %struct.obstack** %__o1777, align 8
  %next_free802 = getelementptr inbounds %struct.obstack, %struct.obstack* %404, i32 0, i32 3
  %405 = load i8*, i8** %next_free802, align 8
  %406 = load %struct.obstack*, %struct.obstack** %__o1777, align 8
  %chunk803 = getelementptr inbounds %struct.obstack, %struct.obstack* %406, i32 0, i32 1
  %407 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk803, align 8
  %408 = bitcast %struct._obstack_chunk* %407 to i8*
  %sub.ptr.lhs.cast804 = ptrtoint i8* %405 to i64
  %sub.ptr.rhs.cast805 = ptrtoint i8* %408 to i64
  %sub.ptr.sub806 = sub i64 %sub.ptr.lhs.cast804, %sub.ptr.rhs.cast805
  %409 = load %struct.obstack*, %struct.obstack** %__o1777, align 8
  %chunk_limit807 = getelementptr inbounds %struct.obstack, %struct.obstack* %409, i32 0, i32 4
  %410 = load i8*, i8** %chunk_limit807, align 8
  %411 = load %struct.obstack*, %struct.obstack** %__o1777, align 8
  %chunk808 = getelementptr inbounds %struct.obstack, %struct.obstack* %411, i32 0, i32 1
  %412 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk808, align 8
  %413 = bitcast %struct._obstack_chunk* %412 to i8*
  %sub.ptr.lhs.cast809 = ptrtoint i8* %410 to i64
  %sub.ptr.rhs.cast810 = ptrtoint i8* %413 to i64
  %sub.ptr.sub811 = sub i64 %sub.ptr.lhs.cast809, %sub.ptr.rhs.cast810
  %cmp812 = icmp sgt i64 %sub.ptr.sub806, %sub.ptr.sub811
  br i1 %cmp812, label %if.then.814, label %if.end.817

if.then.814:                                      ; preds = %if.end.789
  %414 = load %struct.obstack*, %struct.obstack** %__o1777, align 8
  %chunk_limit815 = getelementptr inbounds %struct.obstack, %struct.obstack* %414, i32 0, i32 4
  %415 = load i8*, i8** %chunk_limit815, align 8
  %416 = load %struct.obstack*, %struct.obstack** %__o1777, align 8
  %next_free816 = getelementptr inbounds %struct.obstack, %struct.obstack* %416, i32 0, i32 3
  store i8* %415, i8** %next_free816, align 8
  br label %if.end.817

if.end.817:                                       ; preds = %if.then.814, %if.end.789
  %417 = load %struct.obstack*, %struct.obstack** %__o1777, align 8
  %next_free818 = getelementptr inbounds %struct.obstack, %struct.obstack* %417, i32 0, i32 3
  %418 = load i8*, i8** %next_free818, align 8
  %419 = load %struct.obstack*, %struct.obstack** %__o1777, align 8
  %object_base819 = getelementptr inbounds %struct.obstack, %struct.obstack* %419, i32 0, i32 2
  store i8* %418, i8** %object_base819, align 8
  %420 = load i8*, i8** %value779, align 8
  store i8* %420, i8** %tmp820
  %421 = load i8*, i8** %tmp820
  store i8* %421, i8** %tmp775
  %422 = load i8*, i8** %tmp775
  store i8* %422, i8** @reload_firstobj, align 8
  br label %if.end.821

if.end.821:                                       ; preds = %if.end.817, %if.end.753
  %423 = load i32, i32* %global.addr, align 4
  call void @calculate_needs_all_insns(i32 %423)
  call void @bitmap_clear(%struct.bitmap_head_def* @spilled_pseudos)
  store i32 0, i32* %did_spill, align 4
  store i32 0, i32* %something_changed, align 4
  %424 = load i64, i64* %starting_frame_size, align 8
  %call822 = call i64 @get_frame_size()
  %cmp823 = icmp ne i64 %424, %call822
  br i1 %cmp823, label %if.then.825, label %if.end.826

if.then.825:                                      ; preds = %if.end.821
  store i32 1, i32* %something_changed, align 4
  br label %if.end.826

if.end.826:                                       ; preds = %if.then.825, %if.end.821
  store i64 0, i64* %to_spill, align 8
  call void @update_eliminables(i64* %to_spill)
  store i32 0, i32* %i, align 4
  br label %for.cond.828

for.cond.828:                                     ; preds = %for.inc.836, %if.end.826
  %425 = load i32, i32* %i, align 4
  %cmp829 = icmp slt i32 %425, 53
  br i1 %cmp829, label %for.body.831, label %for.end.838

for.body.831:                                     ; preds = %for.cond.828
  %426 = load i64, i64* %to_spill, align 8
  %427 = load i32, i32* %i, align 4
  %sh_prom = zext i32 %427 to i64
  %shl = shl i64 1, %sh_prom
  %and832 = and i64 %426, %shl
  %tobool833 = icmp ne i64 %and832, 0
  br i1 %tobool833, label %if.then.834, label %if.end.835

if.then.834:                                      ; preds = %for.body.831
  %428 = load i32, i32* %i, align 4
  call void @spill_hard_reg(i32 %428, i32 1)
  store i32 1, i32* %did_spill, align 4
  store i32 1, i32* %something_changed, align 4
  br label %if.end.835

if.end.835:                                       ; preds = %if.then.834, %for.body.831
  br label %for.inc.836

for.inc.836:                                      ; preds = %if.end.835
  %429 = load i32, i32* %i, align 4
  %inc837 = add nsw i32 %429, 1
  store i32 %inc837, i32* %i, align 4
  br label %for.cond.828

for.end.838:                                      ; preds = %for.cond.828
  call void @select_reload_regs()
  %430 = load i32, i32* @failure, align 4
  %tobool839 = icmp ne i32 %430, 0
  br i1 %tobool839, label %if.then.840, label %if.end.841

if.then.840:                                      ; preds = %for.end.838
  br label %failed

if.end.841:                                       ; preds = %for.end.838
  %431 = load %struct.insn_chain*, %struct.insn_chain** @insns_need_reload, align 8
  %cmp842 = icmp ne %struct.insn_chain* %431, null
  br i1 %cmp842, label %if.then.846, label %lor.lhs.false.844

lor.lhs.false.844:                                ; preds = %if.end.841
  %432 = load i32, i32* %did_spill, align 4
  %tobool845 = icmp ne i32 %432, 0
  br i1 %tobool845, label %if.then.846, label %if.end.848

if.then.846:                                      ; preds = %lor.lhs.false.844, %if.end.841
  %433 = load i32, i32* %global.addr, align 4
  %call847 = call i32 @finish_spills(i32 %433)
  %434 = load i32, i32* %something_changed, align 4
  %or = or i32 %434, %call847
  store i32 %or, i32* %something_changed, align 4
  br label %if.end.848

if.end.848:                                       ; preds = %if.then.846, %lor.lhs.false.844
  %435 = load i32, i32* %something_changed, align 4
  %tobool849 = icmp ne i32 %435, 0
  br i1 %tobool849, label %if.end.851, label %if.then.850

if.then.850:                                      ; preds = %if.end.848
  br label %for.end.870

if.end.851:                                       ; preds = %if.end.848
  %436 = load i32, i32* @caller_save_needed, align 4
  %tobool852 = icmp ne i32 %436, 0
  br i1 %tobool852, label %if.then.853, label %if.end.854

if.then.853:                                      ; preds = %if.end.851
  call void @delete_caller_save_insns()
  br label %if.end.854

if.end.854:                                       ; preds = %if.then.853, %if.end.851
  store %struct.obstack* @reload_obstack, %struct.obstack** %__o856, align 8
  %437 = load i8*, i8** @reload_firstobj, align 8
  store i8* %437, i8** %__obj, align 8
  %438 = load i8*, i8** %__obj, align 8
  %439 = load %struct.obstack*, %struct.obstack** %__o856, align 8
  %chunk858 = getelementptr inbounds %struct.obstack, %struct.obstack* %439, i32 0, i32 1
  %440 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk858, align 8
  %441 = bitcast %struct._obstack_chunk* %440 to i8*
  %cmp859 = icmp ugt i8* %438, %441
  br i1 %cmp859, label %land.lhs.true.861, label %if.else.868

land.lhs.true.861:                                ; preds = %if.end.854
  %442 = load i8*, i8** %__obj, align 8
  %443 = load %struct.obstack*, %struct.obstack** %__o856, align 8
  %chunk_limit862 = getelementptr inbounds %struct.obstack, %struct.obstack* %443, i32 0, i32 4
  %444 = load i8*, i8** %chunk_limit862, align 8
  %cmp863 = icmp ult i8* %442, %444
  br i1 %cmp863, label %if.then.865, label %if.else.868

if.then.865:                                      ; preds = %land.lhs.true.861
  %445 = load i8*, i8** %__obj, align 8
  %446 = load %struct.obstack*, %struct.obstack** %__o856, align 8
  %object_base866 = getelementptr inbounds %struct.obstack, %struct.obstack* %446, i32 0, i32 2
  store i8* %445, i8** %object_base866, align 8
  %447 = load %struct.obstack*, %struct.obstack** %__o856, align 8
  %next_free867 = getelementptr inbounds %struct.obstack, %struct.obstack* %447, i32 0, i32 3
  store i8* %445, i8** %next_free867, align 8
  br label %if.end.869

if.else.868:                                      ; preds = %land.lhs.true.861, %if.end.854
  %448 = load %struct.obstack*, %struct.obstack** %__o856, align 8
  %449 = load i8*, i8** %__obj, align 8
  call void @obstack_free(%struct.obstack* %448, i8* %449)
  br label %if.end.869

if.end.869:                                       ; preds = %if.else.868, %if.then.865
  br label %for.cond.483

for.end.870:                                      ; preds = %if.then.850
  %450 = load i32, i32* %global.addr, align 4
  %tobool871 = icmp ne i32 %450, 0
  br i1 %tobool871, label %if.then.872, label %if.end.886

if.then.872:                                      ; preds = %for.end.870
  %451 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %451, %struct.elim_table** %ep, align 8
  br label %for.cond.873

for.cond.873:                                     ; preds = %for.inc.883, %if.then.872
  %452 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %453 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx874 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %453, i64 4
  %cmp875 = icmp ult %struct.elim_table* %452, %arrayidx874
  br i1 %cmp875, label %for.body.877, label %for.end.885

for.body.877:                                     ; preds = %for.cond.873
  %454 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate878 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %454, i32 0, i32 3
  %455 = load i32, i32* %can_eliminate878, align 4
  %tobool879 = icmp ne i32 %455, 0
  br i1 %tobool879, label %if.then.880, label %if.end.882

if.then.880:                                      ; preds = %for.body.877
  %456 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %from881 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %456, i32 0, i32 0
  %457 = load i32, i32* %from881, align 4
  %458 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to = getelementptr inbounds %struct.elim_table, %struct.elim_table* %458, i32 0, i32 1
  %459 = load i32, i32* %to, align 4
  call void @mark_elimination(i32 %457, i32 %459)
  br label %if.end.882

if.end.882:                                       ; preds = %if.then.880, %for.body.877
  br label %for.inc.883

for.inc.883:                                      ; preds = %if.end.882
  %460 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr884 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %460, i32 1
  store %struct.elim_table* %incdec.ptr884, %struct.elim_table** %ep, align 8
  br label %for.cond.873

for.end.885:                                      ; preds = %for.cond.873
  br label %if.end.886

if.end.886:                                       ; preds = %for.end.885, %for.end.870
  store i32 53, i32* %i, align 4
  br label %for.cond.887

for.cond.887:                                     ; preds = %for.inc.947, %if.end.886
  %461 = load i32, i32* %i, align 4
  %462 = load i32, i32* @max_regno, align 4
  %cmp888 = icmp slt i32 %461, %462
  br i1 %cmp888, label %for.body.890, label %for.end.949

for.body.890:                                     ; preds = %for.cond.887
  %463 = load i32, i32* %i, align 4
  %idxprom891 = sext i32 %463 to i64
  %464 = load i16*, i16** @reg_renumber, align 8
  %arrayidx892 = getelementptr inbounds i16, i16* %464, i64 %idxprom891
  %465 = load i16, i16* %arrayidx892, align 2
  %conv893 = sext i16 %465 to i32
  %cmp894 = icmp slt i32 %conv893, 0
  br i1 %cmp894, label %land.lhs.true.896, label %if.end.946

land.lhs.true.896:                                ; preds = %for.body.890
  %466 = load i32, i32* %i, align 4
  %idxprom897 = sext i32 %466 to i64
  %467 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8
  %arrayidx898 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %467, i64 %idxprom897
  %468 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx898, align 8
  %cmp899 = icmp ne %struct.rtx_def* %468, null
  br i1 %cmp899, label %if.then.901, label %if.end.946

if.then.901:                                      ; preds = %land.lhs.true.896
  %469 = load i32, i32* %i, align 4
  %idxprom903 = sext i32 %469 to i64
  %470 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8
  %arrayidx904 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %470, i64 %idxprom903
  %471 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx904, align 8
  store %struct.rtx_def* %471, %struct.rtx_def** %list, align 8
  br label %for.cond.905

for.cond.905:                                     ; preds = %for.inc.941, %if.then.901
  %472 = load %struct.rtx_def*, %struct.rtx_def** %list, align 8
  %tobool906 = icmp ne %struct.rtx_def* %472, null
  br i1 %tobool906, label %for.body.907, label %for.end.945

for.body.907:                                     ; preds = %for.cond.905
  %473 = load %struct.rtx_def*, %struct.rtx_def** %list, align 8
  %fld909 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %473, i32 0, i32 1
  %arrayidx910 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld909, i32 0, i64 0
  %rtx911 = bitcast %union.rtunion_def* %arrayidx910 to %struct.rtx_def**
  %474 = load %struct.rtx_def*, %struct.rtx_def** %rtx911, align 8
  store %struct.rtx_def* %474, %struct.rtx_def** %equiv_insn, align 8
  %475 = load %struct.rtx_def*, %struct.rtx_def** %equiv_insn, align 8
  %476 = bitcast %struct.rtx_def* %475 to i32*
  %bf.load912 = load i32, i32* %476, align 8
  %bf.clear913 = and i32 %bf.load912, 65535
  %cmp914 = icmp eq i32 %bf.clear913, 37
  br i1 %cmp914, label %if.then.919, label %lor.lhs.false.916

lor.lhs.false.916:                                ; preds = %for.body.907
  %477 = load %struct.rtx_def*, %struct.rtx_def** %equiv_insn, align 8
  %call917 = call zeroext i1 @can_throw_internal(%struct.rtx_def* %477)
  br i1 %call917, label %if.then.919, label %if.else.920

if.then.919:                                      ; preds = %lor.lhs.false.916, %for.body.907
  br label %if.end.940

if.else.920:                                      ; preds = %lor.lhs.false.916
  %478 = load i32, i32* %i, align 4
  %idxprom921 = sext i32 %478 to i64
  %479 = load %struct.function*, %struct.function** @cfun, align 8
  %emit922 = getelementptr inbounds %struct.function, %struct.function* %479, i32 0, i32 3
  %480 = load %struct.emit_status*, %struct.emit_status** %emit922, align 8
  %x_regno_reg_rtx923 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %480, i32 0, i32 12
  %481 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx923, align 8
  %arrayidx924 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %481, i64 %idxprom921
  %482 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx924, align 8
  %483 = load %struct.rtx_def*, %struct.rtx_def** %equiv_insn, align 8
  %fld925 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %483, i32 0, i32 1
  %arrayidx926 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld925, i32 0, i64 3
  %rtx927 = bitcast %union.rtunion_def* %arrayidx926 to %struct.rtx_def**
  %484 = load %struct.rtx_def*, %struct.rtx_def** %rtx927, align 8
  %call928 = call i32 @reg_set_p(%struct.rtx_def* %482, %struct.rtx_def* %484)
  %tobool929 = icmp ne i32 %call928, 0
  br i1 %tobool929, label %if.then.930, label %if.else.931

if.then.930:                                      ; preds = %if.else.920
  %485 = load %struct.rtx_def*, %struct.rtx_def** %equiv_insn, align 8
  call void @delete_dead_insn(%struct.rtx_def* %485)
  br label %if.end.939

if.else.931:                                      ; preds = %if.else.920
  %486 = load %struct.rtx_def*, %struct.rtx_def** %equiv_insn, align 8
  %487 = bitcast %struct.rtx_def* %486 to i32*
  %bf.load932 = load i32, i32* %487, align 8
  %bf.clear933 = and i32 %bf.load932, -65536
  %bf.set934 = or i32 %bf.clear933, 37
  store i32 %bf.set934, i32* %487, align 8
  %488 = load %struct.rtx_def*, %struct.rtx_def** %equiv_insn, align 8
  %fld935 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %488, i32 0, i32 1
  %arrayidx936 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld935, i32 0, i64 3
  %rtstr = bitcast %union.rtunion_def* %arrayidx936 to i8**
  store i8* null, i8** %rtstr, align 8
  %489 = load %struct.rtx_def*, %struct.rtx_def** %equiv_insn, align 8
  %fld937 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %489, i32 0, i32 1
  %arrayidx938 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld937, i32 0, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx938 to i32*
  store i32 -99, i32* %rtint, align 4
  br label %if.end.939

if.end.939:                                       ; preds = %if.else.931, %if.then.930
  br label %if.end.940

if.end.940:                                       ; preds = %if.end.939, %if.then.919
  br label %for.inc.941

for.inc.941:                                      ; preds = %if.end.940
  %490 = load %struct.rtx_def*, %struct.rtx_def** %list, align 8
  %fld942 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %490, i32 0, i32 1
  %arrayidx943 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld942, i32 0, i64 1
  %rtx944 = bitcast %union.rtunion_def* %arrayidx943 to %struct.rtx_def**
  %491 = load %struct.rtx_def*, %struct.rtx_def** %rtx944, align 8
  store %struct.rtx_def* %491, %struct.rtx_def** %list, align 8
  br label %for.cond.905

for.end.945:                                      ; preds = %for.cond.905
  br label %if.end.946

if.end.946:                                       ; preds = %for.end.945, %land.lhs.true.896, %for.body.890
  br label %for.inc.947

for.inc.947:                                      ; preds = %if.end.946
  %492 = load i32, i32* %i, align 4
  %inc948 = add nsw i32 %492, 1
  store i32 %inc948, i32* %i, align 4
  br label %for.cond.887

for.end.949:                                      ; preds = %for.cond.887
  %493 = load %struct.insn_chain*, %struct.insn_chain** @insns_need_reload, align 8
  %cmp950 = icmp ne %struct.insn_chain* %493, null
  br i1 %cmp950, label %if.then.956, label %lor.lhs.false.952

lor.lhs.false.952:                                ; preds = %for.end.949
  %494 = load i32, i32* @something_needs_elimination, align 4
  %tobool953 = icmp ne i32 %494, 0
  br i1 %tobool953, label %if.then.956, label %lor.lhs.false.954

lor.lhs.false.954:                                ; preds = %lor.lhs.false.952
  %495 = load i32, i32* @something_needs_operands_changed, align 4
  %tobool955 = icmp ne i32 %495, 0
  br i1 %tobool955, label %if.then.956, label %if.end.967

if.then.956:                                      ; preds = %lor.lhs.false.954, %lor.lhs.false.952, %for.end.949
  %call958 = call i64 @get_frame_size()
  store i64 %call958, i64* %old_frame_size, align 8
  %496 = load i32, i32* %global.addr, align 4
  call void @reload_as_needed(i32 %496)
  %497 = load i64, i64* %old_frame_size, align 8
  %call959 = call i64 @get_frame_size()
  %cmp960 = icmp ne i64 %497, %call959
  br i1 %cmp960, label %if.then.962, label %if.end.963

if.then.962:                                      ; preds = %if.then.956
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 1113, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__FUNCTION__.reload, i32 0, i32 0)) #5
  unreachable

if.end.963:                                       ; preds = %if.then.956
  %498 = load i32, i32* @num_eliminable, align 4
  %tobool964 = icmp ne i32 %498, 0
  br i1 %tobool964, label %if.then.965, label %if.end.966

if.then.965:                                      ; preds = %if.end.963
  call void @verify_initial_elim_offsets()
  br label %if.end.966

if.end.966:                                       ; preds = %if.then.965, %if.end.963
  br label %if.end.967

if.end.967:                                       ; preds = %if.end.966, %lor.lhs.false.954
  %499 = load i32, i32* @frame_pointer_needed, align 4
  %tobool968 = icmp ne i32 %499, 0
  br i1 %tobool968, label %if.end.979, label %if.then.969

if.then.969:                                      ; preds = %if.end.967
  store i32 0, i32* %i, align 4
  br label %for.cond.970

for.cond.970:                                     ; preds = %for.inc.976, %if.then.969
  %500 = load i32, i32* %i, align 4
  %501 = load i32, i32* @n_basic_blocks, align 4
  %cmp971 = icmp slt i32 %500, %501
  br i1 %cmp971, label %for.body.973, label %for.end.978

for.body.973:                                     ; preds = %for.cond.970
  %502 = load i32, i32* %i, align 4
  %idxprom974 = sext i32 %502 to i64
  %503 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %503, i32 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx975 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %bb, i32 0, i64 %idxprom974
  %504 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx975, align 8
  %global_live_at_start = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %504, i32 0, i32 8
  %505 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %global_live_at_start, align 8
  call void @bitmap_clear_bit(%struct.bitmap_head_def* %505, i32 6)
  br label %for.inc.976

for.inc.976:                                      ; preds = %for.body.973
  %506 = load i32, i32* %i, align 4
  %inc977 = add nsw i32 %506, 1
  store i32 %inc977, i32* %i, align 4
  br label %for.cond.970

for.end.978:                                      ; preds = %for.cond.970
  br label %if.end.979

if.end.979:                                       ; preds = %for.end.978, %if.end.967
  br label %failed

failed:                                           ; preds = %if.end.979, %if.then.840
  call void @bitmap_clear(%struct.bitmap_head_def* @spilled_pseudos)
  store i32 0, i32* @reload_in_progress, align 4
  store i32 53, i32* %i, align 4
  br label %for.cond.980

for.cond.980:                                     ; preds = %for.inc.1105, %failed
  %507 = load i32, i32* %i, align 4
  %508 = load i32, i32* @max_regno, align 4
  %cmp981 = icmp slt i32 %507, %508
  br i1 %cmp981, label %for.body.983, label %for.end.1107

for.body.983:                                     ; preds = %for.cond.980
  store %struct.rtx_def* null, %struct.rtx_def** %addr, align 8
  %509 = load i32, i32* %i, align 4
  %idxprom985 = sext i32 %509 to i64
  %510 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx986 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %510, i64 %idxprom985
  %511 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx986, align 8
  %tobool987 = icmp ne %struct.rtx_def* %511, null
  br i1 %tobool987, label %if.then.988, label %if.end.994

if.then.988:                                      ; preds = %for.body.983
  %512 = load i32, i32* %i, align 4
  %idxprom989 = sext i32 %512 to i64
  %513 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx990 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %513, i64 %idxprom989
  %514 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx990, align 8
  %fld991 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %514, i32 0, i32 1
  %arrayidx992 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld991, i32 0, i64 0
  %rtx993 = bitcast %union.rtunion_def* %arrayidx992 to %struct.rtx_def**
  %515 = load %struct.rtx_def*, %struct.rtx_def** %rtx993, align 8
  store %struct.rtx_def* %515, %struct.rtx_def** %addr, align 8
  br label %if.end.994

if.end.994:                                       ; preds = %if.then.988, %for.body.983
  %516 = load i32, i32* %i, align 4
  %idxprom995 = sext i32 %516 to i64
  %517 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8
  %arrayidx996 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %517, i64 %idxprom995
  %518 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx996, align 8
  %tobool997 = icmp ne %struct.rtx_def* %518, null
  br i1 %tobool997, label %if.then.998, label %if.end.1001

if.then.998:                                      ; preds = %if.end.994
  %519 = load i32, i32* %i, align 4
  %idxprom999 = sext i32 %519 to i64
  %520 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8
  %arrayidx1000 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %520, i64 %idxprom999
  %521 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1000, align 8
  store %struct.rtx_def* %521, %struct.rtx_def** %addr, align 8
  br label %if.end.1001

if.end.1001:                                      ; preds = %if.then.998, %if.end.994
  %522 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %tobool1002 = icmp ne %struct.rtx_def* %522, null
  br i1 %tobool1002, label %if.then.1003, label %if.end.1104

if.then.1003:                                     ; preds = %if.end.1001
  %523 = load i32, i32* %i, align 4
  %idxprom1004 = sext i32 %523 to i64
  %524 = load i16*, i16** @reg_renumber, align 8
  %arrayidx1005 = getelementptr inbounds i16, i16* %524, i64 %idxprom1004
  %525 = load i16, i16* %arrayidx1005, align 2
  %conv1006 = sext i16 %525 to i32
  %cmp1007 = icmp slt i32 %conv1006, 0
  br i1 %cmp1007, label %if.then.1009, label %if.else.1092

if.then.1009:                                     ; preds = %if.then.1003
  %526 = load i32, i32* %i, align 4
  %idxprom1011 = sext i32 %526 to i64
  %527 = load %struct.function*, %struct.function** @cfun, align 8
  %emit1012 = getelementptr inbounds %struct.function, %struct.function* %527, i32 0, i32 3
  %528 = load %struct.emit_status*, %struct.emit_status** %emit1012, align 8
  %x_regno_reg_rtx1013 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %528, i32 0, i32 12
  %529 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx1013, align 8
  %arrayidx1014 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %529, i64 %idxprom1011
  %530 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1014, align 8
  store %struct.rtx_def* %530, %struct.rtx_def** %reg, align 8
  %531 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %532 = bitcast %struct.rtx_def* %531 to i32*
  %bf.load1015 = load i32, i32* %532, align 8
  %bf.clear1016 = and i32 %bf.load1015, -65536
  %bf.set1017 = or i32 %bf.clear1016, 66
  store i32 %bf.set1017, i32* %532, align 8
  %533 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %534 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld1018 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %534, i32 0, i32 1
  %arrayidx1019 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1018, i32 0, i64 0
  %rtx1020 = bitcast %union.rtunion_def* %arrayidx1019 to %struct.rtx_def**
  store %struct.rtx_def* %533, %struct.rtx_def** %rtx1020, align 8
  %535 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %536 = bitcast %struct.rtx_def* %535 to i32*
  %bf.load1021 = load i32, i32* %536, align 8
  %bf.clear1022 = and i32 %bf.load1021, -134217729
  store i32 %bf.clear1022, i32* %536, align 8
  %537 = load i32, i32* %i, align 4
  %idxprom1023 = sext i32 %537 to i64
  %538 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx1024 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %538, i64 %idxprom1023
  %539 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1024, align 8
  %tobool1025 = icmp ne %struct.rtx_def* %539, null
  br i1 %tobool1025, label %if.then.1026, label %if.else.1081

if.then.1026:                                     ; preds = %if.then.1009
  %540 = load i32, i32* %i, align 4
  %idxprom1027 = sext i32 %540 to i64
  %541 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx1028 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %541, i64 %idxprom1027
  %542 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1028, align 8
  %543 = bitcast %struct.rtx_def* %542 to i32*
  %bf.load1029 = load i32, i32* %543, align 8
  %bf.lshr1030 = lshr i32 %bf.load1029, 27
  %bf.clear1031 = and i32 %bf.lshr1030, 1
  %544 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %545 = bitcast %struct.rtx_def* %544 to i32*
  %bf.load1032 = load i32, i32* %545, align 8
  %bf.value = and i32 %bf.clear1031, 1
  %bf.shl = shl i32 %bf.value, 27
  %bf.clear1033 = and i32 %bf.load1032, -134217729
  %bf.set1034 = or i32 %bf.clear1033, %bf.shl
  store i32 %bf.set1034, i32* %545, align 8
  %546 = load i32, i32* %i, align 4
  %idxprom1035 = sext i32 %546 to i64
  %547 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx1036 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %547, i64 %idxprom1035
  %548 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1036, align 8
  %549 = bitcast %struct.rtx_def* %548 to i32*
  %bf.load1037 = load i32, i32* %549, align 8
  %bf.lshr1038 = lshr i32 %bf.load1037, 28
  %bf.clear1039 = and i32 %bf.lshr1038, 1
  %550 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %551 = bitcast %struct.rtx_def* %550 to i32*
  %bf.load1040 = load i32, i32* %551, align 8
  %bf.value1041 = and i32 %bf.clear1039, 1
  %bf.shl1042 = shl i32 %bf.value1041, 28
  %bf.clear1043 = and i32 %bf.load1040, -268435457
  %bf.set1044 = or i32 %bf.clear1043, %bf.shl1042
  store i32 %bf.set1044, i32* %551, align 8
  %552 = load i32, i32* %i, align 4
  %idxprom1045 = sext i32 %552 to i64
  %553 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx1046 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %553, i64 %idxprom1045
  %554 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1046, align 8
  %555 = bitcast %struct.rtx_def* %554 to i32*
  %bf.load1047 = load i32, i32* %555, align 8
  %bf.lshr1048 = lshr i32 %bf.load1047, 31
  %556 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %557 = bitcast %struct.rtx_def* %556 to i32*
  %bf.load1049 = load i32, i32* %557, align 8
  %bf.value1050 = and i32 %bf.lshr1048, 1
  %bf.shl1051 = shl i32 %bf.value1050, 31
  %bf.clear1052 = and i32 %bf.load1049, 2147483647
  %bf.set1053 = or i32 %bf.clear1052, %bf.shl1051
  store i32 %bf.set1053, i32* %557, align 8
  %558 = load i32, i32* %i, align 4
  %idxprom1054 = sext i32 %558 to i64
  %559 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx1055 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %559, i64 %idxprom1054
  %560 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1055, align 8
  %561 = bitcast %struct.rtx_def* %560 to i32*
  %bf.load1056 = load i32, i32* %561, align 8
  %bf.lshr1057 = lshr i32 %bf.load1056, 26
  %bf.clear1058 = and i32 %bf.lshr1057, 1
  %562 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %563 = bitcast %struct.rtx_def* %562 to i32*
  %bf.load1059 = load i32, i32* %563, align 8
  %bf.value1060 = and i32 %bf.clear1058, 1
  %bf.shl1061 = shl i32 %bf.value1060, 26
  %bf.clear1062 = and i32 %bf.load1059, -67108865
  %bf.set1063 = or i32 %bf.clear1062, %bf.shl1061
  store i32 %bf.set1063, i32* %563, align 8
  %564 = load i32, i32* %i, align 4
  %idxprom1064 = sext i32 %564 to i64
  %565 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx1065 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %565, i64 %idxprom1064
  %566 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1065, align 8
  %567 = bitcast %struct.rtx_def* %566 to i32*
  %bf.load1066 = load i32, i32* %567, align 8
  %bf.lshr1067 = lshr i32 %bf.load1066, 24
  %bf.clear1068 = and i32 %bf.lshr1067, 1
  %568 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %569 = bitcast %struct.rtx_def* %568 to i32*
  %bf.load1069 = load i32, i32* %569, align 8
  %bf.value1070 = and i32 %bf.clear1068, 1
  %bf.shl1071 = shl i32 %bf.value1070, 24
  %bf.clear1072 = and i32 %bf.load1069, -16777217
  %bf.set1073 = or i32 %bf.clear1072, %bf.shl1071
  store i32 %bf.set1073, i32* %569, align 8
  %570 = load i32, i32* %i, align 4
  %idxprom1074 = sext i32 %570 to i64
  %571 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx1075 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %571, i64 %idxprom1074
  %572 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1075, align 8
  %fld1076 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %572, i32 0, i32 1
  %arrayidx1077 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1076, i32 0, i64 1
  %rtmem = bitcast %union.rtunion_def* %arrayidx1077 to %struct.mem_attrs**
  %573 = load %struct.mem_attrs*, %struct.mem_attrs** %rtmem, align 8
  %574 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld1078 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %574, i32 0, i32 1
  %arrayidx1079 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1078, i32 0, i64 1
  %rtmem1080 = bitcast %union.rtunion_def* %arrayidx1079 to %struct.mem_attrs**
  store %struct.mem_attrs* %573, %struct.mem_attrs** %rtmem1080, align 8
  br label %if.end.1091

if.else.1081:                                     ; preds = %if.then.1009
  %575 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %576 = bitcast %struct.rtx_def* %575 to i32*
  %bf.load1082 = load i32, i32* %576, align 8
  %bf.clear1083 = and i32 %bf.load1082, 2147483647
  store i32 %bf.clear1083, i32* %576, align 8
  %577 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %578 = bitcast %struct.rtx_def* %577 to i32*
  %bf.load1084 = load i32, i32* %578, align 8
  %bf.clear1085 = and i32 %bf.load1084, -268435457
  store i32 %bf.clear1085, i32* %578, align 8
  %579 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %580 = bitcast %struct.rtx_def* %579 to i32*
  %bf.load1086 = load i32, i32* %580, align 8
  %bf.clear1087 = and i32 %bf.load1086, -67108865
  store i32 %bf.clear1087, i32* %580, align 8
  %581 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld1088 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %581, i32 0, i32 1
  %arrayidx1089 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1088, i32 0, i64 1
  %rtmem1090 = bitcast %union.rtunion_def* %arrayidx1089 to %struct.mem_attrs**
  store %struct.mem_attrs* null, %struct.mem_attrs** %rtmem1090, align 8
  br label %if.end.1091

if.end.1091:                                      ; preds = %if.else.1081, %if.then.1026
  br label %if.end.1103

if.else.1092:                                     ; preds = %if.then.1003
  %582 = load i32, i32* %i, align 4
  %idxprom1093 = sext i32 %582 to i64
  %583 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx1094 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %583, i64 %idxprom1093
  %584 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1094, align 8
  %tobool1095 = icmp ne %struct.rtx_def* %584, null
  br i1 %tobool1095, label %if.then.1096, label %if.end.1102

if.then.1096:                                     ; preds = %if.else.1092
  %585 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %586 = load i32, i32* %i, align 4
  %idxprom1097 = sext i32 %586 to i64
  %587 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx1098 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %587, i64 %idxprom1097
  %588 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1098, align 8
  %fld1099 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %588, i32 0, i32 1
  %arrayidx1100 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1099, i32 0, i64 0
  %rtx1101 = bitcast %union.rtunion_def* %arrayidx1100 to %struct.rtx_def**
  store %struct.rtx_def* %585, %struct.rtx_def** %rtx1101, align 8
  br label %if.end.1102

if.end.1102:                                      ; preds = %if.then.1096, %if.else.1092
  br label %if.end.1103

if.end.1103:                                      ; preds = %if.end.1102, %if.end.1091
  br label %if.end.1104

if.end.1104:                                      ; preds = %if.end.1103, %if.end.1001
  br label %for.inc.1105

for.inc.1105:                                     ; preds = %if.end.1104
  %589 = load i32, i32* %i, align 4
  %inc1106 = add nsw i32 %589, 1
  store i32 %inc1106, i32* %i, align 4
  br label %for.cond.980

for.end.1107:                                     ; preds = %for.cond.980
  store i32 1, i32* @reload_completed, align 4
  %590 = load %struct.rtx_def*, %struct.rtx_def** %first.addr, align 8
  store %struct.rtx_def* %590, %struct.rtx_def** %insn, align 8
  br label %for.cond.1108

for.cond.1108:                                    ; preds = %for.inc.1225, %for.end.1107
  %591 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %tobool1109 = icmp ne %struct.rtx_def* %591, null
  br i1 %tobool1109, label %for.body.1110, label %for.end.1229

for.body.1110:                                    ; preds = %for.cond.1108
  %592 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %593 = bitcast %struct.rtx_def* %592 to i32*
  %bf.load1111 = load i32, i32* %593, align 8
  %bf.clear1112 = and i32 %bf.load1111, 65535
  %idxprom1113 = sext i32 %bf.clear1112 to i64
  %arrayidx1114 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom1113
  %594 = load i8, i8* %arrayidx1114, align 1
  %conv1115 = sext i8 %594 to i32
  %cmp1116 = icmp eq i32 %conv1115, 105
  br i1 %cmp1116, label %if.then.1118, label %if.end.1224

if.then.1118:                                     ; preds = %for.body.1110
  %595 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %596 = bitcast %struct.rtx_def* %595 to i32*
  %bf.load1120 = load i32, i32* %596, align 8
  %bf.clear1121 = and i32 %bf.load1120, 65535
  %cmp1122 = icmp eq i32 %bf.clear1121, 34
  br i1 %cmp1122, label %if.then.1124, label %if.end.1131

if.then.1124:                                     ; preds = %if.then.1118
  %597 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld1125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %597, i32 0, i32 1
  %arrayidx1126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1125, i32 0, i64 7
  %rtx1127 = bitcast %union.rtunion_def* %arrayidx1126 to %struct.rtx_def**
  %598 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld1128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %598, i32 0, i32 1
  %arrayidx1129 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1128, i32 0, i64 7
  %rtx1130 = bitcast %union.rtunion_def* %arrayidx1129 to %struct.rtx_def**
  %599 = load %struct.rtx_def*, %struct.rtx_def** %rtx1130, align 8
  call void @replace_pseudos_in_call_usage(%struct.rtx_def** %rtx1127, i32 0, %struct.rtx_def* %599)
  br label %if.end.1131

if.end.1131:                                      ; preds = %if.then.1124, %if.then.1118
  %600 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld1132 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %600, i32 0, i32 1
  %arrayidx1133 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1132, i32 0, i64 3
  %rtx1134 = bitcast %union.rtunion_def* %arrayidx1133 to %struct.rtx_def**
  %601 = load %struct.rtx_def*, %struct.rtx_def** %rtx1134, align 8
  %602 = bitcast %struct.rtx_def* %601 to i32*
  %bf.load1135 = load i32, i32* %602, align 8
  %bf.clear1136 = and i32 %bf.load1135, 65535
  %cmp1137 = icmp eq i32 %bf.clear1136, 48
  br i1 %cmp1137, label %land.lhs.true.1139, label %lor.lhs.false.1148

land.lhs.true.1139:                               ; preds = %if.end.1131
  %603 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %604 = bitcast %struct.rtx_def* %603 to i32*
  %bf.load1140 = load i32, i32* %604, align 8
  %bf.lshr1141 = lshr i32 %bf.load1140, 16
  %bf.clear1142 = and i32 %bf.lshr1141, 255
  %cmp1143 = icmp eq i32 %bf.clear1142, 2
  br i1 %cmp1143, label %if.then.1178, label %lor.lhs.false.1145

lor.lhs.false.1145:                               ; preds = %land.lhs.true.1139
  %605 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call1146 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %605, i32 4, %struct.rtx_def* null)
  %tobool1147 = icmp ne %struct.rtx_def* %call1146, null
  br i1 %tobool1147, label %if.then.1178, label %lor.lhs.false.1148

lor.lhs.false.1148:                               ; preds = %lor.lhs.false.1145, %if.end.1131
  %606 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld1149 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %606, i32 0, i32 1
  %arrayidx1150 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1149, i32 0, i64 3
  %rtx1151 = bitcast %union.rtunion_def* %arrayidx1150 to %struct.rtx_def**
  %607 = load %struct.rtx_def*, %struct.rtx_def** %rtx1151, align 8
  %608 = bitcast %struct.rtx_def* %607 to i32*
  %bf.load1152 = load i32, i32* %608, align 8
  %bf.clear1153 = and i32 %bf.load1152, 65535
  %cmp1154 = icmp eq i32 %bf.clear1153, 49
  br i1 %cmp1154, label %land.lhs.true.1156, label %if.end.1180

land.lhs.true.1156:                               ; preds = %lor.lhs.false.1148
  %609 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld1157 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %609, i32 0, i32 1
  %arrayidx1158 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1157, i32 0, i64 3
  %rtx1159 = bitcast %union.rtunion_def* %arrayidx1158 to %struct.rtx_def**
  %610 = load %struct.rtx_def*, %struct.rtx_def** %rtx1159, align 8
  %fld1160 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %610, i32 0, i32 1
  %arrayidx1161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1160, i32 0, i64 0
  %rtx1162 = bitcast %union.rtunion_def* %arrayidx1161 to %struct.rtx_def**
  %611 = load %struct.rtx_def*, %struct.rtx_def** %rtx1162, align 8
  %612 = bitcast %struct.rtx_def* %611 to i32*
  %bf.load1163 = load i32, i32* %612, align 8
  %bf.clear1164 = and i32 %bf.load1163, 65535
  %cmp1165 = icmp ne i32 %bf.clear1164, 61
  br i1 %cmp1165, label %if.then.1178, label %lor.lhs.false.1167

lor.lhs.false.1167:                               ; preds = %land.lhs.true.1156
  %613 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld1168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %613, i32 0, i32 1
  %arrayidx1169 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1168, i32 0, i64 3
  %rtx1170 = bitcast %union.rtunion_def* %arrayidx1169 to %struct.rtx_def**
  %614 = load %struct.rtx_def*, %struct.rtx_def** %rtx1170, align 8
  %fld1171 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %614, i32 0, i32 1
  %arrayidx1172 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1171, i32 0, i64 0
  %rtx1173 = bitcast %union.rtunion_def* %arrayidx1172 to %struct.rtx_def**
  %615 = load %struct.rtx_def*, %struct.rtx_def** %rtx1173, align 8
  %616 = bitcast %struct.rtx_def* %615 to i32*
  %bf.load1174 = load i32, i32* %616, align 8
  %bf.lshr1175 = lshr i32 %bf.load1174, 30
  %bf.clear1176 = and i32 %bf.lshr1175, 1
  %tobool1177 = icmp ne i32 %bf.clear1176, 0
  br i1 %tobool1177, label %if.end.1180, label %if.then.1178

if.then.1178:                                     ; preds = %lor.lhs.false.1167, %land.lhs.true.1156, %lor.lhs.false.1145, %land.lhs.true.1139
  %617 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call1179 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %617)
  br label %for.inc.1225

if.end.1180:                                      ; preds = %lor.lhs.false.1167, %lor.lhs.false.1148
  %618 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld1181 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %618, i32 0, i32 1
  %arrayidx1182 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1181, i32 0, i64 6
  %rtx1183 = bitcast %union.rtunion_def* %arrayidx1182 to %struct.rtx_def**
  store %struct.rtx_def** %rtx1183, %struct.rtx_def*** %pnote, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end.1223, %if.end.1180
  %619 = load %struct.rtx_def**, %struct.rtx_def*** %pnote, align 8
  %620 = load %struct.rtx_def*, %struct.rtx_def** %619, align 8
  %cmp1184 = icmp ne %struct.rtx_def* %620, null
  br i1 %cmp1184, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %621 = load %struct.rtx_def**, %struct.rtx_def*** %pnote, align 8
  %622 = load %struct.rtx_def*, %struct.rtx_def** %621, align 8
  %623 = bitcast %struct.rtx_def* %622 to i32*
  %bf.load1186 = load i32, i32* %623, align 8
  %bf.lshr1187 = lshr i32 %bf.load1186, 16
  %bf.clear1188 = and i32 %bf.lshr1187, 255
  %cmp1189 = icmp eq i32 %bf.clear1188, 1
  br i1 %cmp1189, label %if.then.1215, label %lor.lhs.false.1191

lor.lhs.false.1191:                               ; preds = %while.body
  %624 = load %struct.rtx_def**, %struct.rtx_def*** %pnote, align 8
  %625 = load %struct.rtx_def*, %struct.rtx_def** %624, align 8
  %626 = bitcast %struct.rtx_def* %625 to i32*
  %bf.load1192 = load i32, i32* %626, align 8
  %bf.lshr1193 = lshr i32 %bf.load1192, 16
  %bf.clear1194 = and i32 %bf.lshr1193, 255
  %cmp1195 = icmp eq i32 %bf.clear1194, 10
  br i1 %cmp1195, label %if.then.1215, label %lor.lhs.false.1197

lor.lhs.false.1197:                               ; preds = %lor.lhs.false.1191
  %627 = load %struct.rtx_def**, %struct.rtx_def*** %pnote, align 8
  %628 = load %struct.rtx_def*, %struct.rtx_def** %627, align 8
  %629 = bitcast %struct.rtx_def* %628 to i32*
  %bf.load1198 = load i32, i32* %629, align 8
  %bf.lshr1199 = lshr i32 %bf.load1198, 16
  %bf.clear1200 = and i32 %bf.lshr1199, 255
  %cmp1201 = icmp eq i32 %bf.clear1200, 2
  br i1 %cmp1201, label %if.then.1215, label %lor.lhs.false.1203

lor.lhs.false.1203:                               ; preds = %lor.lhs.false.1197
  %630 = load %struct.rtx_def**, %struct.rtx_def*** %pnote, align 8
  %631 = load %struct.rtx_def*, %struct.rtx_def** %630, align 8
  %632 = bitcast %struct.rtx_def* %631 to i32*
  %bf.load1204 = load i32, i32* %632, align 8
  %bf.lshr1205 = lshr i32 %bf.load1204, 16
  %bf.clear1206 = and i32 %bf.lshr1205, 255
  %cmp1207 = icmp eq i32 %bf.clear1206, 6
  br i1 %cmp1207, label %if.then.1215, label %lor.lhs.false.1209

lor.lhs.false.1209:                               ; preds = %lor.lhs.false.1203
  %633 = load %struct.rtx_def**, %struct.rtx_def*** %pnote, align 8
  %634 = load %struct.rtx_def*, %struct.rtx_def** %633, align 8
  %635 = bitcast %struct.rtx_def* %634 to i32*
  %bf.load1210 = load i32, i32* %635, align 8
  %bf.lshr1211 = lshr i32 %bf.load1210, 16
  %bf.clear1212 = and i32 %bf.lshr1211, 255
  %cmp1213 = icmp eq i32 %bf.clear1212, 7
  br i1 %cmp1213, label %if.then.1215, label %if.else.1219

if.then.1215:                                     ; preds = %lor.lhs.false.1209, %lor.lhs.false.1203, %lor.lhs.false.1197, %lor.lhs.false.1191, %while.body
  %636 = load %struct.rtx_def**, %struct.rtx_def*** %pnote, align 8
  %637 = load %struct.rtx_def*, %struct.rtx_def** %636, align 8
  %fld1216 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %637, i32 0, i32 1
  %arrayidx1217 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1216, i32 0, i64 1
  %rtx1218 = bitcast %union.rtunion_def* %arrayidx1217 to %struct.rtx_def**
  %638 = load %struct.rtx_def*, %struct.rtx_def** %rtx1218, align 8
  %639 = load %struct.rtx_def**, %struct.rtx_def*** %pnote, align 8
  store %struct.rtx_def* %638, %struct.rtx_def** %639, align 8
  br label %if.end.1223

if.else.1219:                                     ; preds = %lor.lhs.false.1209
  %640 = load %struct.rtx_def**, %struct.rtx_def*** %pnote, align 8
  %641 = load %struct.rtx_def*, %struct.rtx_def** %640, align 8
  %fld1220 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %641, i32 0, i32 1
  %arrayidx1221 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1220, i32 0, i64 1
  %rtx1222 = bitcast %union.rtunion_def* %arrayidx1221 to %struct.rtx_def**
  store %struct.rtx_def** %rtx1222, %struct.rtx_def*** %pnote, align 8
  br label %if.end.1223

if.end.1223:                                      ; preds = %if.else.1219, %if.then.1215
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %642 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  call void @cleanup_subreg_operands(%struct.rtx_def* %642)
  br label %if.end.1224

if.end.1224:                                      ; preds = %while.end, %for.body.1110
  br label %for.inc.1225

for.inc.1225:                                     ; preds = %if.end.1224, %if.then.1178
  %643 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld1226 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %643, i32 0, i32 1
  %arrayidx1227 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1226, i32 0, i64 2
  %rtx1228 = bitcast %union.rtunion_def* %arrayidx1227 to %struct.rtx_def**
  %644 = load %struct.rtx_def*, %struct.rtx_def** %rtx1228, align 8
  store %struct.rtx_def* %644, %struct.rtx_def** %insn, align 8
  br label %for.cond.1108

for.end.1229:                                     ; preds = %for.cond.1108
  %645 = load i32, i32* @flag_stack_check, align 4
  %tobool1230 = icmp ne i32 %645, 0
  br i1 %tobool1230, label %if.then.1231, label %if.end.1279

if.then.1231:                                     ; preds = %for.end.1229
  %call1233 = call i64 @get_frame_size()
  %646 = load i32, i32* @target_flags, align 4
  %and1234 = and i32 %646, 33554432
  %tobool1235 = icmp ne i32 %and1234, 0
  %cond1236 = select i1 %tobool1235, i32 8, i32 4
  %mul1237 = mul nsw i32 4, %cond1236
  %conv1238 = sext i32 %mul1237 to i64
  %add1239 = add nsw i64 %call1233, %conv1238
  store i64 %add1239, i64* %size, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.1240

for.cond.1240:                                    ; preds = %for.inc.1264, %if.then.1231
  %647 = load i32, i32* %i, align 4
  %cmp1241 = icmp slt i32 %647, 53
  br i1 %cmp1241, label %for.body.1243, label %for.end.1266

for.body.1243:                                    ; preds = %for.cond.1240
  %648 = load i32, i32* %i, align 4
  %idxprom1244 = sext i32 %648 to i64
  %arrayidx1245 = getelementptr inbounds [53 x i8], [53 x i8]* @regs_ever_live, i32 0, i64 %idxprom1244
  %649 = load i8, i8* %arrayidx1245, align 1
  %conv1246 = sext i8 %649 to i32
  %tobool1247 = icmp ne i32 %conv1246, 0
  br i1 %tobool1247, label %land.lhs.true.1248, label %if.end.1263

land.lhs.true.1248:                               ; preds = %for.body.1243
  %650 = load i32, i32* %i, align 4
  %idxprom1249 = sext i32 %650 to i64
  %arrayidx1250 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 %idxprom1249
  %651 = load i8, i8* %arrayidx1250, align 1
  %tobool1251 = icmp ne i8 %651, 0
  br i1 %tobool1251, label %if.end.1263, label %land.lhs.true.1252

land.lhs.true.1252:                               ; preds = %land.lhs.true.1248
  %652 = load i32, i32* %i, align 4
  %idxprom1253 = sext i32 %652 to i64
  %arrayidx1254 = getelementptr inbounds [53 x i8], [53 x i8]* @call_used_regs, i32 0, i64 %idxprom1253
  %653 = load i8, i8* %arrayidx1254, align 1
  %conv1255 = sext i8 %653 to i32
  %tobool1256 = icmp ne i32 %conv1255, 0
  br i1 %tobool1256, label %if.then.1257, label %if.end.1263

if.then.1257:                                     ; preds = %land.lhs.true.1252
  %654 = load i32, i32* @target_flags, align 4
  %and1258 = and i32 %654, 33554432
  %tobool1259 = icmp ne i32 %and1258, 0
  %cond1260 = select i1 %tobool1259, i32 8, i32 4
  %conv1261 = sext i32 %cond1260 to i64
  %655 = load i64, i64* %size, align 8
  %add1262 = add nsw i64 %655, %conv1261
  store i64 %add1262, i64* %size, align 8
  br label %if.end.1263

if.end.1263:                                      ; preds = %if.then.1257, %land.lhs.true.1252, %land.lhs.true.1248, %for.body.1243
  br label %for.inc.1264

for.inc.1264:                                     ; preds = %if.end.1263
  %656 = load i32, i32* %i, align 4
  %inc1265 = add nsw i32 %656, 1
  store i32 %inc1265, i32* %i, align 4
  br label %for.cond.1240

for.end.1266:                                     ; preds = %for.cond.1240
  %657 = load i64, i64* %size, align 8
  %658 = load i32, i32* @target_flags, align 4
  %and1267 = and i32 %658, 33554432
  %tobool1268 = icmp ne i32 %and1267, 0
  %cond1269 = select i1 %tobool1268, i32 8, i32 4
  %sub1270 = sub nsw i32 4096, %cond1269
  %conv1271 = sext i32 %sub1270 to i64
  %cmp1272 = icmp sgt i64 %657, %conv1271
  br i1 %cmp1272, label %if.then.1274, label %if.end.1278

if.then.1274:                                     ; preds = %for.end.1266
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i32 0, i32 0))
  %659 = load i32, i32* @reload.verbose_warned, align 4
  %tobool1275 = icmp ne i32 %659, 0
  br i1 %tobool1275, label %if.end.1277, label %if.then.1276

if.then.1276:                                     ; preds = %if.then.1274
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i32 0, i32 0))
  store i32 1, i32* @reload.verbose_warned, align 4
  br label %if.end.1277

if.end.1277:                                      ; preds = %if.then.1276, %if.then.1274
  br label %if.end.1278

if.end.1278:                                      ; preds = %if.end.1277, %for.end.1266
  br label %if.end.1279

if.end.1279:                                      ; preds = %if.end.1278, %for.end.1229
  %660 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %tobool1280 = icmp ne %struct.rtx_def** %660, null
  br i1 %tobool1280, label %if.then.1281, label %if.end.1282

if.then.1281:                                     ; preds = %if.end.1279
  %661 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %662 = bitcast %struct.rtx_def** %661 to i8*
  call void @free(i8* %662) #3
  br label %if.end.1282

if.end.1282:                                      ; preds = %if.then.1281, %if.end.1279
  store %struct.rtx_def** null, %struct.rtx_def*** @reg_equiv_constant, align 8
  %663 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %tobool1283 = icmp ne %struct.rtx_def** %663, null
  br i1 %tobool1283, label %if.then.1284, label %if.end.1285

if.then.1284:                                     ; preds = %if.end.1282
  %664 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %665 = bitcast %struct.rtx_def** %664 to i8*
  call void @free(i8* %665) #3
  br label %if.end.1285

if.end.1285:                                      ; preds = %if.then.1284, %if.end.1282
  store %struct.rtx_def** null, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %666 = load i8*, i8** %real_known_ptr, align 8
  %tobool1286 = icmp ne i8* %666, null
  br i1 %tobool1286, label %if.then.1287, label %if.end.1288

if.then.1287:                                     ; preds = %if.end.1285
  %667 = load i8*, i8** %real_known_ptr, align 8
  call void @free(i8* %667) #3
  br label %if.end.1288

if.end.1288:                                      ; preds = %if.then.1287, %if.end.1285
  %668 = load [4 x i32]*, [4 x i32]** %real_at_ptr, align 8
  %tobool1289 = icmp ne [4 x i32]* %668, null
  br i1 %tobool1289, label %if.then.1290, label %if.end.1291

if.then.1290:                                     ; preds = %if.end.1288
  %669 = load [4 x i32]*, [4 x i32]** %real_at_ptr, align 8
  %670 = bitcast [4 x i32]* %669 to i8*
  call void @free(i8* %670) #3
  br label %if.end.1291

if.end.1291:                                      ; preds = %if.then.1290, %if.end.1288
  %671 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %672 = bitcast %struct.rtx_def** %671 to i8*
  call void @free(i8* %672) #3
  %673 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8
  %674 = bitcast %struct.rtx_def** %673 to i8*
  call void @free(i8* %674) #3
  %675 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8
  %676 = bitcast %struct.rtx_def** %675 to i8*
  call void @free(i8* %676) #3
  %677 = load i32*, i32** @reg_max_ref_width, align 8
  %678 = bitcast i32* %677 to i8*
  call void @free(i8* %678) #3
  %679 = load i16*, i16** @reg_old_renumber, align 8
  %680 = bitcast i16* %679 to i8*
  call void @free(i8* %680) #3
  %681 = load i64*, i64** @pseudo_previous_regs, align 8
  %682 = bitcast i64* %681 to i8*
  call void @free(i8* %682) #3
  %683 = load i64*, i64** @pseudo_forbidden_regs, align 8
  %684 = bitcast i64* %683 to i8*
  call void @free(i8* %684) #3
  store i64 0, i64* @used_spill_regs, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.1292

for.cond.1292:                                    ; preds = %for.inc.1302, %if.end.1291
  %685 = load i32, i32* %i, align 4
  %686 = load i32, i32* @n_spills, align 4
  %cmp1293 = icmp slt i32 %685, %686
  br i1 %cmp1293, label %for.body.1295, label %for.end.1304

for.body.1295:                                    ; preds = %for.cond.1292
  %687 = load i32, i32* %i, align 4
  %idxprom1296 = sext i32 %687 to i64
  %arrayidx1297 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_regs, i32 0, i64 %idxprom1296
  %688 = load i16, i16* %arrayidx1297, align 2
  %conv1298 = sext i16 %688 to i32
  %sh_prom1299 = zext i32 %conv1298 to i64
  %shl1300 = shl i64 1, %sh_prom1299
  %689 = load i64, i64* @used_spill_regs, align 8
  %or1301 = or i64 %689, %shl1300
  store i64 %or1301, i64* @used_spill_regs, align 8
  br label %for.inc.1302

for.inc.1302:                                     ; preds = %for.body.1295
  %690 = load i32, i32* %i, align 4
  %inc1303 = add nsw i32 %690, 1
  store i32 %inc1303, i32* %i, align 4
  br label %for.cond.1292

for.end.1304:                                     ; preds = %for.cond.1292
  store %struct.obstack* @reload_obstack, %struct.obstack** %__o1306, align 8
  %691 = load i8*, i8** @reload_startobj, align 8
  store i8* %691, i8** %__obj1308, align 8
  %692 = load i8*, i8** %__obj1308, align 8
  %693 = load %struct.obstack*, %struct.obstack** %__o1306, align 8
  %chunk1309 = getelementptr inbounds %struct.obstack, %struct.obstack* %693, i32 0, i32 1
  %694 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk1309, align 8
  %695 = bitcast %struct._obstack_chunk* %694 to i8*
  %cmp1310 = icmp ugt i8* %692, %695
  br i1 %cmp1310, label %land.lhs.true.1312, label %if.else.1319

land.lhs.true.1312:                               ; preds = %for.end.1304
  %696 = load i8*, i8** %__obj1308, align 8
  %697 = load %struct.obstack*, %struct.obstack** %__o1306, align 8
  %chunk_limit1313 = getelementptr inbounds %struct.obstack, %struct.obstack* %697, i32 0, i32 4
  %698 = load i8*, i8** %chunk_limit1313, align 8
  %cmp1314 = icmp ult i8* %696, %698
  br i1 %cmp1314, label %if.then.1316, label %if.else.1319

if.then.1316:                                     ; preds = %land.lhs.true.1312
  %699 = load i8*, i8** %__obj1308, align 8
  %700 = load %struct.obstack*, %struct.obstack** %__o1306, align 8
  %object_base1317 = getelementptr inbounds %struct.obstack, %struct.obstack* %700, i32 0, i32 2
  store i8* %699, i8** %object_base1317, align 8
  %701 = load %struct.obstack*, %struct.obstack** %__o1306, align 8
  %next_free1318 = getelementptr inbounds %struct.obstack, %struct.obstack* %701, i32 0, i32 3
  store i8* %699, i8** %next_free1318, align 8
  br label %if.end.1320

if.else.1319:                                     ; preds = %land.lhs.true.1312, %for.end.1304
  %702 = load %struct.obstack*, %struct.obstack** %__o1306, align 8
  %703 = load i8*, i8** %__obj1308, align 8
  call void @obstack_free(%struct.obstack* %702, i8* %703)
  br label %if.end.1320

if.end.1320:                                      ; preds = %if.else.1319, %if.then.1316
  store %struct.insn_chain* null, %struct.insn_chain** @unused_insn_chains, align 8
  call void @fixup_abnormal_edges()
  %704 = load %struct.rtx_def*, %struct.rtx_def** %first.addr, align 8
  call void @unshare_all_rtl_again(%struct.rtx_def* %704)
  %705 = load i32, i32* @failure, align 4
  ret i32 %705
}

declare void @init_recog() #1

declare %struct.rtx_def* @emit_note(i8*, i32) #1

declare i32 @get_max_uid() #1

declare void @clear_secondary_mem() #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #3

declare void @init_save_areas() #1

; Function Attrs: nounwind uwtable
define void @mark_home_live(i32 %regno) #0 {
entry:
  %regno.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %lim = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  %0 = load i32, i32* %regno.addr, align 4
  %idxprom = sext i32 %0 to i64
  %1 = load i16*, i16** @reg_renumber, align 8
  %arrayidx = getelementptr inbounds i16, i16* %1, i64 %idxprom
  %2 = load i16, i16* %arrayidx, align 2
  %conv = sext i16 %2 to i32
  store i32 %conv, i32* %i, align 4
  %3 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %3, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %while.end

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %i, align 4
  %5 = load i32, i32* %i, align 4
  %cmp2 = icmp sge i32 %5, 8
  br i1 %cmp2, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.end
  %6 = load i32, i32* %i, align 4
  %cmp4 = icmp sle i32 %6, 15
  br i1 %cmp4, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end
  %7 = load i32, i32* %i, align 4
  %cmp6 = icmp sge i32 %7, 21
  br i1 %cmp6, label %land.lhs.true.8, label %lor.lhs.false.11

land.lhs.true.8:                                  ; preds = %lor.lhs.false
  %8 = load i32, i32* %i, align 4
  %cmp9 = icmp sle i32 %8, 28
  br i1 %cmp9, label %cond.true, label %lor.lhs.false.11

lor.lhs.false.11:                                 ; preds = %land.lhs.true.8, %lor.lhs.false
  %9 = load i32, i32* %i, align 4
  %cmp12 = icmp sge i32 %9, 45
  br i1 %cmp12, label %land.lhs.true.14, label %lor.lhs.false.17

land.lhs.true.14:                                 ; preds = %lor.lhs.false.11
  %10 = load i32, i32* %i, align 4
  %cmp15 = icmp sle i32 %10, 52
  br i1 %cmp15, label %cond.true, label %lor.lhs.false.17

lor.lhs.false.17:                                 ; preds = %land.lhs.true.14, %lor.lhs.false.11
  %11 = load i32, i32* %i, align 4
  %cmp18 = icmp sge i32 %11, 29
  br i1 %cmp18, label %land.lhs.true.20, label %cond.false

land.lhs.true.20:                                 ; preds = %lor.lhs.false.17
  %12 = load i32, i32* %i, align 4
  %cmp21 = icmp sle i32 %12, 36
  br i1 %cmp21, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.20, %land.lhs.true.14, %land.lhs.true.8, %land.lhs.true
  %13 = load i32, i32* %regno.addr, align 4
  %idxprom23 = sext i32 %13 to i64
  %14 = load %struct.function*, %struct.function** @cfun, align 8
  %emit = getelementptr inbounds %struct.function, %struct.function* %14, i32 0, i32 3
  %15 = load %struct.emit_status*, %struct.emit_status** %emit, align 8
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status, %struct.emit_status* %15, i32 0, i32 12
  %16 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx, align 8
  %arrayidx24 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %16, i64 %idxprom23
  %17 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx24, align 8
  %18 = bitcast %struct.rtx_def* %17 to i32*
  %bf.load = load i32, i32* %18, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom25 = sext i32 %bf.clear to i64
  %arrayidx26 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom25
  %19 = load i32, i32* %arrayidx26, align 4
  %cmp27 = icmp eq i32 %19, 5
  br i1 %cmp27, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %20 = load i32, i32* %regno.addr, align 4
  %idxprom29 = sext i32 %20 to i64
  %21 = load %struct.function*, %struct.function** @cfun, align 8
  %emit30 = getelementptr inbounds %struct.function, %struct.function* %21, i32 0, i32 3
  %22 = load %struct.emit_status*, %struct.emit_status** %emit30, align 8
  %x_regno_reg_rtx31 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %22, i32 0, i32 12
  %23 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx31, align 8
  %arrayidx32 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %23, i64 %idxprom29
  %24 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx32, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load33 = load i32, i32* %25, align 8
  %bf.lshr34 = lshr i32 %bf.load33, 16
  %bf.clear35 = and i32 %bf.lshr34, 255
  %idxprom36 = sext i32 %bf.clear35 to i64
  %arrayidx37 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom36
  %26 = load i32, i32* %arrayidx37, align 4
  %cmp38 = icmp eq i32 %26, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %27 = phi i1 [ true, %cond.true ], [ %cmp38, %lor.rhs ]
  %cond = select i1 %27, i32 2, i32 1
  br label %cond.end.85

cond.false:                                       ; preds = %land.lhs.true.20, %lor.lhs.false.17
  %28 = load i32, i32* %regno.addr, align 4
  %idxprom40 = sext i32 %28 to i64
  %29 = load %struct.function*, %struct.function** @cfun, align 8
  %emit41 = getelementptr inbounds %struct.function, %struct.function* %29, i32 0, i32 3
  %30 = load %struct.emit_status*, %struct.emit_status** %emit41, align 8
  %x_regno_reg_rtx42 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %30, i32 0, i32 12
  %31 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx42, align 8
  %arrayidx43 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %31, i64 %idxprom40
  %32 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx43, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load44 = load i32, i32* %33, align 8
  %bf.lshr45 = lshr i32 %bf.load44, 16
  %bf.clear46 = and i32 %bf.lshr45, 255
  %cmp47 = icmp eq i32 %bf.clear46, 18
  br i1 %cmp47, label %cond.true.49, label %cond.false.51

cond.true.49:                                     ; preds = %cond.false
  %34 = load i32, i32* @target_flags, align 4
  %and = and i32 %34, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond50 = select i1 %tobool, i32 2, i32 3
  br label %cond.end.83

cond.false.51:                                    ; preds = %cond.false
  %35 = load i32, i32* %regno.addr, align 4
  %idxprom52 = sext i32 %35 to i64
  %36 = load %struct.function*, %struct.function** @cfun, align 8
  %emit53 = getelementptr inbounds %struct.function, %struct.function* %36, i32 0, i32 3
  %37 = load %struct.emit_status*, %struct.emit_status** %emit53, align 8
  %x_regno_reg_rtx54 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %37, i32 0, i32 12
  %38 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx54, align 8
  %arrayidx55 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %38, i64 %idxprom52
  %39 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx55, align 8
  %40 = bitcast %struct.rtx_def* %39 to i32*
  %bf.load56 = load i32, i32* %40, align 8
  %bf.lshr57 = lshr i32 %bf.load56, 16
  %bf.clear58 = and i32 %bf.lshr57, 255
  %cmp59 = icmp eq i32 %bf.clear58, 24
  br i1 %cmp59, label %cond.true.61, label %cond.false.65

cond.true.61:                                     ; preds = %cond.false.51
  %41 = load i32, i32* @target_flags, align 4
  %and62 = and i32 %41, 33554432
  %tobool63 = icmp ne i32 %and62, 0
  %cond64 = select i1 %tobool63, i32 4, i32 6
  br label %cond.end

cond.false.65:                                    ; preds = %cond.false.51
  %42 = load i32, i32* %regno.addr, align 4
  %idxprom66 = sext i32 %42 to i64
  %43 = load %struct.function*, %struct.function** @cfun, align 8
  %emit67 = getelementptr inbounds %struct.function, %struct.function* %43, i32 0, i32 3
  %44 = load %struct.emit_status*, %struct.emit_status** %emit67, align 8
  %x_regno_reg_rtx68 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %44, i32 0, i32 12
  %45 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx68, align 8
  %arrayidx69 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %45, i64 %idxprom66
  %46 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx69, align 8
  %47 = bitcast %struct.rtx_def* %46 to i32*
  %bf.load70 = load i32, i32* %47, align 8
  %bf.lshr71 = lshr i32 %bf.load70, 16
  %bf.clear72 = and i32 %bf.lshr71, 255
  %idxprom73 = sext i32 %bf.clear72 to i64
  %arrayidx74 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom73
  %48 = load i8, i8* %arrayidx74, align 1
  %conv75 = zext i8 %48 to i32
  %49 = load i32, i32* @target_flags, align 4
  %and76 = and i32 %49, 33554432
  %tobool77 = icmp ne i32 %and76, 0
  %cond78 = select i1 %tobool77, i32 8, i32 4
  %add = add nsw i32 %conv75, %cond78
  %sub = sub nsw i32 %add, 1
  %50 = load i32, i32* @target_flags, align 4
  %and79 = and i32 %50, 33554432
  %tobool80 = icmp ne i32 %and79, 0
  %cond81 = select i1 %tobool80, i32 8, i32 4
  %div = sdiv i32 %sub, %cond81
  br label %cond.end

cond.end:                                         ; preds = %cond.false.65, %cond.true.61
  %cond82 = phi i32 [ %cond64, %cond.true.61 ], [ %div, %cond.false.65 ]
  br label %cond.end.83

cond.end.83:                                      ; preds = %cond.end, %cond.true.49
  %cond84 = phi i32 [ %cond50, %cond.true.49 ], [ %cond82, %cond.end ]
  br label %cond.end.85

cond.end.85:                                      ; preds = %cond.end.83, %lor.end
  %cond86 = phi i32 [ %cond, %lor.end ], [ %cond84, %cond.end.83 ]
  %add87 = add nsw i32 %4, %cond86
  store i32 %add87, i32* %lim, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %cond.end.85
  %51 = load i32, i32* %i, align 4
  %52 = load i32, i32* %lim, align 4
  %cmp88 = icmp slt i32 %51, %52
  br i1 %cmp88, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %53 = load i32, i32* %i, align 4
  %inc = add nsw i32 %53, 1
  store i32 %inc, i32* %i, align 4
  %idxprom90 = sext i32 %53 to i64
  %arrayidx91 = getelementptr inbounds [53 x i8], [53 x i8]* @regs_ever_live, i32 0, i64 %idxprom90
  store i8 1, i8* %arrayidx91, align 1
  br label %while.cond

while.end:                                        ; preds = %if.then, %while.cond
  ret void
}

declare noalias i8* @xcalloc(i64, i64) #1

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #3

declare noalias i8* @xmalloc(i64) #1

declare %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #1

declare i32 @function_invariant_p(%struct.rtx_def*) #1

declare i32 @symbolic_reference_mentioned_p(%struct.rtx_def*) #1

declare i32 @legitimate_pic_address_disp_p(%struct.rtx_def*) #1

declare i32 @memory_operand(%struct.rtx_def*, i32) #1

declare %struct.rtx_def* @copy_rtx(%struct.rtx_def*) #1

declare i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_ue(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @scan_paradoxical_subregs(%struct.rtx_def* %x) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %code = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %2 = load i32, i32* %code, align 4
  switch i32 %2, label %sw.default [
    i32 61, label %sw.bb
    i32 54, label %sw.bb.1
    i32 58, label %sw.bb.1
    i32 68, label %sw.bb.1
    i32 67, label %sw.bb.1
    i32 55, label %sw.bb.1
    i32 56, label %sw.bb.1
    i32 69, label %sw.bb.1
    i32 59, label %sw.bb.1
    i32 48, label %sw.bb.1
    i32 49, label %sw.bb.1
    i32 63, label %sw.bb.2
  ]

sw.bb:                                            ; preds = %entry
  br label %for.end.73

sw.bb.1:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %for.end.73

sw.bb.2:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load3 = load i32, i32* %5, align 8
  %bf.clear4 = and i32 %bf.load3, 65535
  %cmp = icmp eq i32 %bf.clear4, 61
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %sw.bb.2
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load5 = load i32, i32* %7, align 8
  %bf.lshr = lshr i32 %bf.load5, 16
  %bf.clear6 = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear6 to i64
  %arrayidx7 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom
  %8 = load i8, i8* %arrayidx7, align 1
  %conv = zext i8 %8 to i32
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i32 0, i64 0
  %rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rtx10, align 8
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load11 = load i32, i32* %11, align 8
  %bf.lshr12 = lshr i32 %bf.load11, 16
  %bf.clear13 = and i32 %bf.lshr12, 255
  %idxprom14 = sext i32 %bf.clear13 to i64
  %arrayidx15 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom14
  %12 = load i8, i8* %arrayidx15, align 1
  %conv16 = zext i8 %12 to i32
  %cmp17 = icmp sgt i32 %conv, %conv16
  br i1 %cmp17, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load19 = load i32, i32* %14, align 8
  %bf.lshr20 = lshr i32 %bf.load19, 16
  %bf.clear21 = and i32 %bf.lshr20, 255
  %idxprom22 = sext i32 %bf.clear21 to i64
  %arrayidx23 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom22
  %15 = load i8, i8* %arrayidx23, align 1
  %conv24 = zext i8 %15 to i32
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i32 0, i64 0
  %rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rtx27, align 8
  %fld28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx29 to i32*
  %18 = load i32, i32* %rtuint, align 4
  %idxprom30 = zext i32 %18 to i64
  %19 = load i32*, i32** @reg_max_ref_width, align 8
  %arrayidx31 = getelementptr inbounds i32, i32* %19, i64 %idxprom30
  store i32 %conv24, i32* %arrayidx31, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %sw.bb.2
  br label %for.end.73

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  %20 = load i32, i32* %code, align 4
  %idxprom32 = sext i32 %20 to i64
  %arrayidx33 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom32
  %21 = load i8*, i8** %arrayidx33, align 8
  store i8* %21, i8** %fmt, align 8
  %22 = load i32, i32* %code, align 4
  %idxprom34 = sext i32 %22 to i64
  %arrayidx35 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom34
  %23 = load i8, i8* %arrayidx35, align 1
  %conv36 = zext i8 %23 to i32
  %sub = sub nsw i32 %conv36, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.71, %sw.epilog
  %24 = load i32, i32* %i, align 4
  %cmp37 = icmp sge i32 %24, 0
  br i1 %cmp37, label %for.body, label %for.end.73

for.body:                                         ; preds = %for.cond
  %25 = load i32, i32* %i, align 4
  %idxprom39 = sext i32 %25 to i64
  %26 = load i8*, i8** %fmt, align 8
  %arrayidx40 = getelementptr inbounds i8, i8* %26, i64 %idxprom39
  %27 = load i8, i8* %arrayidx40, align 1
  %conv41 = sext i8 %27 to i32
  %cmp42 = icmp eq i32 %conv41, 101
  br i1 %cmp42, label %if.then.44, label %if.else

if.then.44:                                       ; preds = %for.body
  %28 = load i32, i32* %i, align 4
  %idxprom45 = sext i32 %28 to i64
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i32 0, i64 %idxprom45
  %rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rtx48, align 8
  call void @scan_paradoxical_subregs(%struct.rtx_def* %30)
  br label %if.end.70

if.else:                                          ; preds = %for.body
  %31 = load i32, i32* %i, align 4
  %idxprom49 = sext i32 %31 to i64
  %32 = load i8*, i8** %fmt, align 8
  %arrayidx50 = getelementptr inbounds i8, i8* %32, i64 %idxprom49
  %33 = load i8, i8* %arrayidx50, align 1
  %conv51 = sext i8 %33 to i32
  %cmp52 = icmp eq i32 %conv51, 69
  br i1 %cmp52, label %if.then.54, label %if.end.69

if.then.54:                                       ; preds = %if.else
  %34 = load i32, i32* %i, align 4
  %idxprom55 = sext i32 %34 to i64
  %35 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i32 0, i64 %idxprom55
  %rtvec = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtvec_def**
  %36 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %36, i32 0, i32 0
  %37 = load i32, i32* %num_elem, align 4
  %sub58 = sub nsw i32 %37, 1
  store i32 %sub58, i32* %j, align 4
  br label %for.cond.59

for.cond.59:                                      ; preds = %for.inc, %if.then.54
  %38 = load i32, i32* %j, align 4
  %cmp60 = icmp sge i32 %38, 0
  br i1 %cmp60, label %for.body.62, label %for.end

for.body.62:                                      ; preds = %for.cond.59
  %39 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %39 to i64
  %40 = load i32, i32* %i, align 4
  %idxprom64 = sext i32 %40 to i64
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i32 0, i64 %idxprom64
  %rtvec67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtvec_def**
  %42 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec67, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %42, i32 0, i32 1
  %arrayidx68 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom63
  %43 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx68, align 8
  call void @scan_paradoxical_subregs(%struct.rtx_def* %43)
  br label %for.inc

for.inc:                                          ; preds = %for.body.62
  %44 = load i32, i32* %j, align 4
  %dec = add nsw i32 %44, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond.59

for.end:                                          ; preds = %for.cond.59
  br label %if.end.69

if.end.69:                                        ; preds = %for.end, %if.else
  br label %if.end.70

if.end.70:                                        ; preds = %if.end.69, %if.then.44
  br label %for.inc.71

for.inc.71:                                       ; preds = %if.end.70
  %45 = load i32, i32* %i, align 4
  %dec72 = add nsw i32 %45, -1
  store i32 %dec72, i32* %i, align 4
  br label %for.cond

for.end.73:                                       ; preds = %sw.bb, %sw.bb.1, %if.end, %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @init_elim_table() #0 {
entry:
  %ep = alloca %struct.elim_table*, align 8
  %ep1 = alloca %struct.elim_table_1*, align 8
  %0 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %tobool = icmp ne %struct.elim_table* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = call noalias i8* @xcalloc(i64 48, i64 4)
  %1 = bitcast i8* %call to %struct.elim_table*
  store %struct.elim_table* %1, %struct.elim_table** @reg_eliminate, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* @flag_omit_frame_pointer, align 4
  %tobool1 = icmp ne i32 %2, 0
  br i1 %tobool1, label %lor.lhs.false, label %lor.end

lor.lhs.false:                                    ; preds = %if.end
  %3 = load %struct.function*, %struct.function** @cfun, align 8
  %calls_alloca = getelementptr inbounds %struct.function, %struct.function* %3, i32 0, i32 56
  %4 = bitcast i24* %calls_alloca to i32*
  %bf.load = load i32, i32* %4, align 8
  %bf.lshr = lshr i32 %bf.load, 6
  %bf.clear = and i32 %bf.lshr, 1
  %tobool2 = icmp ne i32 %bf.clear, 0
  br i1 %tobool2, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false
  %call3 = call i32 @ix86_frame_pointer_required()
  %tobool4 = icmp ne i32 %call3, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %if.end
  %5 = phi i1 [ true, %lor.lhs.false ], [ true, %if.end ], [ %tobool4, %lor.rhs ]
  %lor.ext = zext i1 %5 to i32
  store i32 %lor.ext, i32* @frame_pointer_needed, align 4
  store i32 0, i32* @num_eliminable, align 4
  %6 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %6, %struct.elim_table** %ep, align 8
  store %struct.elim_table_1* getelementptr inbounds ([4 x %struct.elim_table_1], [4 x %struct.elim_table_1]* @reg_eliminate_1, i32 0, i32 0), %struct.elim_table_1** %ep1, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %lor.end
  %7 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %8 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %8, i64 4
  %cmp = icmp ult %struct.elim_table* %7, %arrayidx
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load %struct.elim_table_1*, %struct.elim_table_1** %ep1, align 8
  %from = getelementptr inbounds %struct.elim_table_1, %struct.elim_table_1* %9, i32 0, i32 0
  %10 = load i32, i32* %from, align 4
  %11 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %from5 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %11, i32 0, i32 0
  store i32 %10, i32* %from5, align 4
  %12 = load %struct.elim_table_1*, %struct.elim_table_1** %ep1, align 8
  %to = getelementptr inbounds %struct.elim_table_1, %struct.elim_table_1* %12, i32 0, i32 1
  %13 = load i32, i32* %to, align 4
  %14 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to6 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %14, i32 0, i32 1
  store i32 %13, i32* %to6, align 4
  %15 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to7 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %15, i32 0, i32 1
  %16 = load i32, i32* %to7, align 4
  %cmp8 = icmp eq i32 %16, 7
  br i1 %cmp8, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %17 = load i32, i32* @frame_pointer_needed, align 4
  %tobool9 = icmp ne i32 %17, 0
  br i1 %tobool9, label %land.end.14, label %land.rhs

cond.false:                                       ; preds = %for.body
  br i1 true, label %land.rhs, label %land.end.14

land.rhs:                                         ; preds = %cond.false, %cond.true
  %18 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to10 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %18, i32 0, i32 1
  %19 = load i32, i32* %to10, align 4
  %cmp11 = icmp eq i32 %19, 7
  br i1 %cmp11, label %land.rhs.12, label %land.end

land.rhs.12:                                      ; preds = %land.rhs
  %20 = load i32, i32* @frame_pointer_needed, align 4
  %tobool13 = icmp ne i32 %20, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs.12, %land.rhs
  %21 = phi i1 [ false, %land.rhs ], [ %tobool13, %land.rhs.12 ]
  %lnot = xor i1 %21, true
  br label %land.end.14

land.end.14:                                      ; preds = %land.end, %cond.false, %cond.true
  %22 = phi i1 [ false, %cond.false ], [ false, %cond.true ], [ %lnot, %land.end ]
  %land.ext = zext i1 %22 to i32
  %23 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate_previous = getelementptr inbounds %struct.elim_table, %struct.elim_table* %23, i32 0, i32 4
  store i32 %land.ext, i32* %can_eliminate_previous, align 4
  %24 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate = getelementptr inbounds %struct.elim_table, %struct.elim_table* %24, i32 0, i32 3
  store i32 %land.ext, i32* %can_eliminate, align 4
  br label %for.inc

for.inc:                                          ; preds = %land.end.14
  %25 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %25, i32 1
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8
  %26 = load %struct.elim_table_1*, %struct.elim_table_1** %ep1, align 8
  %incdec.ptr15 = getelementptr inbounds %struct.elim_table_1, %struct.elim_table_1* %26, i32 1
  store %struct.elim_table_1* %incdec.ptr15, %struct.elim_table_1** %ep1, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %27 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %27, %struct.elim_table** %ep, align 8
  br label %for.cond.16

for.cond.16:                                      ; preds = %for.inc.29, %for.end
  %28 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %29 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx17 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %29, i64 4
  %cmp18 = icmp ult %struct.elim_table* %28, %arrayidx17
  br i1 %cmp18, label %for.body.19, label %for.end.31

for.body.19:                                      ; preds = %for.cond.16
  %30 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate20 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %30, i32 0, i32 3
  %31 = load i32, i32* %can_eliminate20, align 4
  %32 = load i32, i32* @num_eliminable, align 4
  %add = add nsw i32 %32, %31
  store i32 %add, i32* @num_eliminable, align 4
  %33 = load i32, i32* @target_flags, align 4
  %and = and i32 %33, 33554432
  %tobool21 = icmp ne i32 %and, 0
  %cond = select i1 %tobool21, i32 5, i32 4
  %34 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %from22 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %34, i32 0, i32 0
  %35 = load i32, i32* %from22, align 4
  %call23 = call %struct.rtx_def* @gen_rtx_REG(i32 %cond, i32 %35)
  %36 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %from_rtx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %36, i32 0, i32 8
  store %struct.rtx_def* %call23, %struct.rtx_def** %from_rtx, align 8
  %37 = load i32, i32* @target_flags, align 4
  %and24 = and i32 %37, 33554432
  %tobool25 = icmp ne i32 %and24, 0
  %cond26 = select i1 %tobool25, i32 5, i32 4
  %38 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to27 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %38, i32 0, i32 1
  %39 = load i32, i32* %to27, align 4
  %call28 = call %struct.rtx_def* @gen_rtx_REG(i32 %cond26, i32 %39)
  %40 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to_rtx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %40, i32 0, i32 9
  store %struct.rtx_def* %call28, %struct.rtx_def** %to_rtx, align 8
  br label %for.inc.29

for.inc.29:                                       ; preds = %for.body.19
  %41 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr30 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %41, i32 1
  store %struct.elim_table* %incdec.ptr30, %struct.elim_table** %ep, align 8
  br label %for.cond.16

for.end.31:                                       ; preds = %for.cond.16
  ret void
}

declare i32 @max_label_num() #1

declare i32 @get_first_label_num() #1

; Function Attrs: nounwind uwtable
define internal void @alter_reg(i32 %i, i32 %from_reg) #0 {
entry:
  %i.addr = alloca i32, align 4
  %from_reg.addr = alloca i32, align 4
  %x = alloca %struct.rtx_def*, align 8
  %inherent_size = alloca i32, align 4
  %total_size = alloca i32, align 4
  %adjust = alloca i32, align 4
  %mode = alloca i32, align 4
  %stack_slot = alloca %struct.rtx_def*, align 8
  %decl = alloca %struct.rtx_def*, align 8
  store i32 %i, i32* %i.addr, align 4
  store i32 %from_reg, i32* %from_reg.addr, align 4
  %0 = load i32, i32* %i.addr, align 4
  %idxprom = sext i32 %0 to i64
  %1 = load %struct.function*, %struct.function** @cfun, align 8
  %emit = getelementptr inbounds %struct.function, %struct.function* %1, i32 0, i32 3
  %2 = load %struct.emit_status*, %struct.emit_status** %emit, align 8
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status, %struct.emit_status* %2, i32 0, i32 12
  %3 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx, align 8
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %3, i64 %idxprom
  %4 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8
  %cmp = icmp eq %struct.rtx_def* %4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end.259

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %i.addr, align 4
  %idxprom1 = sext i32 %5 to i64
  %6 = load %struct.function*, %struct.function** @cfun, align 8
  %emit2 = getelementptr inbounds %struct.function, %struct.function* %6, i32 0, i32 3
  %7 = load %struct.emit_status*, %struct.emit_status** %emit2, align 8
  %x_regno_reg_rtx3 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %7, i32 0, i32 12
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx3, align 8
  %arrayidx4 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %8, i64 %idxprom1
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load = load i32, i32* %10, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp5 = icmp ne i32 %bf.clear, 61
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.end
  br label %if.end.259

if.end.7:                                         ; preds = %if.end
  %11 = load i32, i32* %i.addr, align 4
  %idxprom8 = sext i32 %11 to i64
  %12 = load i16*, i16** @reg_renumber, align 8
  %arrayidx9 = getelementptr inbounds i16, i16* %12, i64 %idxprom8
  %13 = load i16, i16* %arrayidx9, align 2
  %conv = sext i16 %13 to i32
  %cmp10 = icmp sge i32 %conv, 0
  br i1 %cmp10, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.7
  %14 = load i32, i32* %i.addr, align 4
  %idxprom12 = sext i32 %14 to i64
  %15 = load i16*, i16** @reg_renumber, align 8
  %arrayidx13 = getelementptr inbounds i16, i16* %15, i64 %idxprom12
  %16 = load i16, i16* %arrayidx13, align 2
  %conv14 = sext i16 %16 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.end.7
  %17 = load i32, i32* %i.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv14, %cond.true ], [ %17, %cond.false ]
  %18 = load i32, i32* %i.addr, align 4
  %idxprom15 = sext i32 %18 to i64
  %19 = load %struct.function*, %struct.function** @cfun, align 8
  %emit16 = getelementptr inbounds %struct.function, %struct.function* %19, i32 0, i32 3
  %20 = load %struct.emit_status*, %struct.emit_status** %emit16, align 8
  %x_regno_reg_rtx17 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %20, i32 0, i32 12
  %21 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx17, align 8
  %arrayidx18 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %21, i64 %idxprom15
  %22 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx18, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx19 to i32*
  store i32 %cond, i32* %rtuint, align 4
  %23 = load i32, i32* %i.addr, align 4
  %idxprom20 = sext i32 %23 to i64
  %24 = load i16*, i16** @reg_renumber, align 8
  %arrayidx21 = getelementptr inbounds i16, i16* %24, i64 %idxprom20
  %25 = load i16, i16* %arrayidx21, align 2
  %conv22 = sext i16 %25 to i32
  %cmp23 = icmp slt i32 %conv22, 0
  br i1 %cmp23, label %land.lhs.true, label %if.end.259

land.lhs.true:                                    ; preds = %cond.end
  %26 = load i32, i32* %i.addr, align 4
  %idxprom25 = sext i32 %26 to i64
  %27 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %27, i32 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx26 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg, i32 0, i64 %idxprom25
  %28 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx26, align 8
  %refs = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %28, i32 0, i32 4
  %29 = load i32, i32* %refs, align 4
  %cmp27 = icmp sgt i32 %29, 0
  br i1 %cmp27, label %land.lhs.true.29, label %if.end.259

land.lhs.true.29:                                 ; preds = %land.lhs.true
  %30 = load i32, i32* %i.addr, align 4
  %idxprom30 = sext i32 %30 to i64
  %31 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx31 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %31, i64 %idxprom30
  %32 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx31, align 8
  %cmp32 = icmp eq %struct.rtx_def* %32, null
  br i1 %cmp32, label %land.lhs.true.34, label %if.end.259

land.lhs.true.34:                                 ; preds = %land.lhs.true.29
  %33 = load i32, i32* %i.addr, align 4
  %idxprom35 = sext i32 %33 to i64
  %34 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx36 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %34, i64 %idxprom35
  %35 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx36, align 8
  %cmp37 = icmp eq %struct.rtx_def* %35, null
  br i1 %cmp37, label %if.then.39, label %if.end.259

if.then.39:                                       ; preds = %land.lhs.true.34
  %36 = load i32, i32* %i.addr, align 4
  %idxprom40 = sext i32 %36 to i64
  %37 = load %struct.function*, %struct.function** @cfun, align 8
  %emit41 = getelementptr inbounds %struct.function, %struct.function* %37, i32 0, i32 3
  %38 = load %struct.emit_status*, %struct.emit_status** %emit41, align 8
  %x_regno_reg_rtx42 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %38, i32 0, i32 12
  %39 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx42, align 8
  %arrayidx43 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %39, i64 %idxprom40
  %40 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx43, align 8
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load44 = load i32, i32* %41, align 8
  %bf.lshr = lshr i32 %bf.load44, 16
  %bf.clear45 = and i32 %bf.lshr, 255
  %idxprom46 = sext i32 %bf.clear45 to i64
  %arrayidx47 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom46
  %42 = load i8, i8* %arrayidx47, align 1
  %conv48 = zext i8 %42 to i32
  store i32 %conv48, i32* %inherent_size, align 4
  %43 = load i32, i32* %inherent_size, align 4
  %44 = load i32, i32* %i.addr, align 4
  %idxprom49 = sext i32 %44 to i64
  %45 = load i32*, i32** @reg_max_ref_width, align 8
  %arrayidx50 = getelementptr inbounds i32, i32* %45, i64 %idxprom49
  %46 = load i32, i32* %arrayidx50, align 4
  %cmp51 = icmp ugt i32 %43, %46
  br i1 %cmp51, label %cond.true.53, label %cond.false.54

cond.true.53:                                     ; preds = %if.then.39
  %47 = load i32, i32* %inherent_size, align 4
  br label %cond.end.57

cond.false.54:                                    ; preds = %if.then.39
  %48 = load i32, i32* %i.addr, align 4
  %idxprom55 = sext i32 %48 to i64
  %49 = load i32*, i32** @reg_max_ref_width, align 8
  %arrayidx56 = getelementptr inbounds i32, i32* %49, i64 %idxprom55
  %50 = load i32, i32* %arrayidx56, align 4
  br label %cond.end.57

cond.end.57:                                      ; preds = %cond.false.54, %cond.true.53
  %cond58 = phi i32 [ %47, %cond.true.53 ], [ %50, %cond.false.54 ]
  store i32 %cond58, i32* %total_size, align 4
  store i32 0, i32* %adjust, align 4
  %51 = load i32, i32* %from_reg.addr, align 4
  %cmp59 = icmp eq i32 %51, -1
  br i1 %cmp59, label %if.then.61, label %if.else

if.then.61:                                       ; preds = %cond.end.57
  %52 = load i32, i32* %i.addr, align 4
  %idxprom62 = sext i32 %52 to i64
  %53 = load %struct.function*, %struct.function** @cfun, align 8
  %emit63 = getelementptr inbounds %struct.function, %struct.function* %53, i32 0, i32 3
  %54 = load %struct.emit_status*, %struct.emit_status** %emit63, align 8
  %x_regno_reg_rtx64 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %54, i32 0, i32 12
  %55 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx64, align 8
  %arrayidx65 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %55, i64 %idxprom62
  %56 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx65, align 8
  %57 = bitcast %struct.rtx_def* %56 to i32*
  %bf.load66 = load i32, i32* %57, align 8
  %bf.lshr67 = lshr i32 %bf.load66, 16
  %bf.clear68 = and i32 %bf.lshr67, 255
  %58 = load i32, i32* %total_size, align 4
  %conv69 = zext i32 %58 to i64
  %59 = load i32, i32* %inherent_size, align 4
  %60 = load i32, i32* %total_size, align 4
  %cmp70 = icmp eq i32 %59, %60
  %cond72 = select i1 %cmp70, i32 0, i32 -1
  %call = call %struct.rtx_def* @assign_stack_local(i32 %bf.clear68, i64 %conv69, i32 %cond72)
  store %struct.rtx_def* %call, %struct.rtx_def** %x, align 8
  %61 = load i32, i32* %i.addr, align 4
  %idxprom73 = sext i32 %61 to i64
  %62 = load %struct.function*, %struct.function** @cfun, align 8
  %emit74 = getelementptr inbounds %struct.function, %struct.function* %62, i32 0, i32 3
  %63 = load %struct.emit_status*, %struct.emit_status** %emit74, align 8
  %x_regno_reg_rtx75 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %63, i32 0, i32 12
  %64 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx75, align 8
  %arrayidx76 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %64, i64 %idxprom73
  %65 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx76, align 8
  %66 = bitcast %struct.rtx_def* %65 to i32*
  %bf.load77 = load i32, i32* %66, align 8
  %bf.lshr78 = lshr i32 %bf.load77, 26
  %bf.clear79 = and i32 %bf.lshr78, 1
  %67 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %68 = bitcast %struct.rtx_def* %67 to i32*
  %bf.load80 = load i32, i32* %68, align 8
  %bf.value = and i32 %bf.clear79, 1
  %bf.shl = shl i32 %bf.value, 26
  %bf.clear81 = and i32 %bf.load80, -67108865
  %bf.set = or i32 %bf.clear81, %bf.shl
  store i32 %bf.set, i32* %68, align 8
  %69 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %call82 = call i64 @new_alias_set()
  call void @set_mem_alias_set(%struct.rtx_def* %69, i64 %call82)
  br label %if.end.175

if.else:                                          ; preds = %cond.end.57
  %70 = load i32, i32* %from_reg.addr, align 4
  %idxprom83 = sext i32 %70 to i64
  %arrayidx84 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i32 0, i64 %idxprom83
  %71 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx84, align 8
  %cmp85 = icmp ne %struct.rtx_def* %71, null
  br i1 %cmp85, label %land.lhs.true.87, label %if.else.106

land.lhs.true.87:                                 ; preds = %if.else
  %72 = load i32, i32* %from_reg.addr, align 4
  %idxprom88 = sext i32 %72 to i64
  %arrayidx89 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_stack_slot_width, i32 0, i64 %idxprom88
  %73 = load i32, i32* %arrayidx89, align 4
  %74 = load i32, i32* %total_size, align 4
  %cmp90 = icmp uge i32 %73, %74
  br i1 %cmp90, label %land.lhs.true.92, label %if.else.106

land.lhs.true.92:                                 ; preds = %land.lhs.true.87
  %75 = load i32, i32* %from_reg.addr, align 4
  %idxprom93 = sext i32 %75 to i64
  %arrayidx94 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i32 0, i64 %idxprom93
  %76 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx94, align 8
  %77 = bitcast %struct.rtx_def* %76 to i32*
  %bf.load95 = load i32, i32* %77, align 8
  %bf.lshr96 = lshr i32 %bf.load95, 16
  %bf.clear97 = and i32 %bf.lshr96, 255
  %idxprom98 = sext i32 %bf.clear97 to i64
  %arrayidx99 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom98
  %78 = load i8, i8* %arrayidx99, align 1
  %conv100 = zext i8 %78 to i32
  %79 = load i32, i32* %inherent_size, align 4
  %cmp101 = icmp uge i32 %conv100, %79
  br i1 %cmp101, label %if.then.103, label %if.else.106

if.then.103:                                      ; preds = %land.lhs.true.92
  %80 = load i32, i32* %from_reg.addr, align 4
  %idxprom104 = sext i32 %80 to i64
  %arrayidx105 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i32 0, i64 %idxprom104
  %81 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx105, align 8
  store %struct.rtx_def* %81, %struct.rtx_def** %x, align 8
  br label %if.end.174

if.else.106:                                      ; preds = %land.lhs.true.92, %land.lhs.true.87, %if.else
  %82 = load i32, i32* %i.addr, align 4
  %idxprom107 = sext i32 %82 to i64
  %83 = load %struct.function*, %struct.function** @cfun, align 8
  %emit108 = getelementptr inbounds %struct.function, %struct.function* %83, i32 0, i32 3
  %84 = load %struct.emit_status*, %struct.emit_status** %emit108, align 8
  %x_regno_reg_rtx109 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %84, i32 0, i32 12
  %85 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx109, align 8
  %arrayidx110 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %85, i64 %idxprom107
  %86 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx110, align 8
  %87 = bitcast %struct.rtx_def* %86 to i32*
  %bf.load111 = load i32, i32* %87, align 8
  %bf.lshr112 = lshr i32 %bf.load111, 16
  %bf.clear113 = and i32 %bf.lshr112, 255
  store i32 %bf.clear113, i32* %mode, align 4
  %88 = load i32, i32* %from_reg.addr, align 4
  %idxprom114 = sext i32 %88 to i64
  %arrayidx115 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i32 0, i64 %idxprom114
  %89 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx115, align 8
  %tobool = icmp ne %struct.rtx_def* %89, null
  br i1 %tobool, label %if.then.116, label %if.end.142

if.then.116:                                      ; preds = %if.else.106
  %90 = load i32, i32* %from_reg.addr, align 4
  %idxprom117 = sext i32 %90 to i64
  %arrayidx118 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i32 0, i64 %idxprom117
  %91 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx118, align 8
  %92 = bitcast %struct.rtx_def* %91 to i32*
  %bf.load119 = load i32, i32* %92, align 8
  %bf.lshr120 = lshr i32 %bf.load119, 16
  %bf.clear121 = and i32 %bf.lshr120, 255
  %idxprom122 = sext i32 %bf.clear121 to i64
  %arrayidx123 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom122
  %93 = load i8, i8* %arrayidx123, align 1
  %conv124 = zext i8 %93 to i32
  %94 = load i32, i32* %inherent_size, align 4
  %cmp125 = icmp ugt i32 %conv124, %94
  br i1 %cmp125, label %if.then.127, label %if.end.133

if.then.127:                                      ; preds = %if.then.116
  %95 = load i32, i32* %from_reg.addr, align 4
  %idxprom128 = sext i32 %95 to i64
  %arrayidx129 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i32 0, i64 %idxprom128
  %96 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx129, align 8
  %97 = bitcast %struct.rtx_def* %96 to i32*
  %bf.load130 = load i32, i32* %97, align 8
  %bf.lshr131 = lshr i32 %bf.load130, 16
  %bf.clear132 = and i32 %bf.lshr131, 255
  store i32 %bf.clear132, i32* %mode, align 4
  br label %if.end.133

if.end.133:                                       ; preds = %if.then.127, %if.then.116
  %98 = load i32, i32* %from_reg.addr, align 4
  %idxprom134 = sext i32 %98 to i64
  %arrayidx135 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_stack_slot_width, i32 0, i64 %idxprom134
  %99 = load i32, i32* %arrayidx135, align 4
  %100 = load i32, i32* %total_size, align 4
  %cmp136 = icmp ugt i32 %99, %100
  br i1 %cmp136, label %if.then.138, label %if.end.141

if.then.138:                                      ; preds = %if.end.133
  %101 = load i32, i32* %from_reg.addr, align 4
  %idxprom139 = sext i32 %101 to i64
  %arrayidx140 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_stack_slot_width, i32 0, i64 %idxprom139
  %102 = load i32, i32* %arrayidx140, align 4
  store i32 %102, i32* %total_size, align 4
  br label %if.end.141

if.end.141:                                       ; preds = %if.then.138, %if.end.133
  br label %if.end.142

if.end.142:                                       ; preds = %if.end.141, %if.else.106
  %103 = load i32, i32* %mode, align 4
  %104 = load i32, i32* %total_size, align 4
  %conv143 = zext i32 %104 to i64
  %105 = load i32, i32* %inherent_size, align 4
  %106 = load i32, i32* %total_size, align 4
  %cmp144 = icmp eq i32 %105, %106
  %cond146 = select i1 %cmp144, i32 0, i32 -1
  %call147 = call %struct.rtx_def* @assign_stack_local(i32 %103, i64 %conv143, i32 %cond146)
  store %struct.rtx_def* %call147, %struct.rtx_def** %x, align 8
  %107 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  store %struct.rtx_def* %107, %struct.rtx_def** %stack_slot, align 8
  %108 = load i32, i32* %from_reg.addr, align 4
  %idxprom148 = sext i32 %108 to i64
  %arrayidx149 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i32 0, i64 %idxprom148
  %109 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx149, align 8
  %tobool150 = icmp ne %struct.rtx_def* %109, null
  br i1 %tobool150, label %if.then.151, label %if.else.167

if.then.151:                                      ; preds = %if.end.142
  %110 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %111 = load i32, i32* %from_reg.addr, align 4
  %idxprom152 = sext i32 %111 to i64
  %arrayidx153 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i32 0, i64 %idxprom152
  %112 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx153, align 8
  %fld154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1
  %arrayidx155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld154, i32 0, i64 1
  %rtmem = bitcast %union.rtunion_def* %arrayidx155 to %struct.mem_attrs**
  %113 = load %struct.mem_attrs*, %struct.mem_attrs** %rtmem, align 8
  %cmp156 = icmp eq %struct.mem_attrs* %113, null
  br i1 %cmp156, label %cond.true.158, label %cond.false.159

cond.true.158:                                    ; preds = %if.then.151
  br label %cond.end.165

cond.false.159:                                   ; preds = %if.then.151
  %114 = load i32, i32* %from_reg.addr, align 4
  %idxprom160 = sext i32 %114 to i64
  %arrayidx161 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i32 0, i64 %idxprom160
  %115 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx161, align 8
  %fld162 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1
  %arrayidx163 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld162, i32 0, i64 1
  %rtmem164 = bitcast %union.rtunion_def* %arrayidx163 to %struct.mem_attrs**
  %116 = load %struct.mem_attrs*, %struct.mem_attrs** %rtmem164, align 8
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %116, i32 0, i32 0
  %117 = load i64, i64* %alias, align 8
  br label %cond.end.165

cond.end.165:                                     ; preds = %cond.false.159, %cond.true.158
  %cond166 = phi i64 [ 0, %cond.true.158 ], [ %117, %cond.false.159 ]
  call void @set_mem_alias_set(%struct.rtx_def* %110, i64 %cond166)
  br label %if.end.169

if.else.167:                                      ; preds = %if.end.142
  %118 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %call168 = call i64 @new_alias_set()
  call void @set_mem_alias_set(%struct.rtx_def* %118, i64 %call168)
  br label %if.end.169

if.end.169:                                       ; preds = %if.else.167, %cond.end.165
  %119 = load %struct.rtx_def*, %struct.rtx_def** %stack_slot, align 8
  %120 = load i32, i32* %from_reg.addr, align 4
  %idxprom170 = sext i32 %120 to i64
  %arrayidx171 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i32 0, i64 %idxprom170
  store %struct.rtx_def* %119, %struct.rtx_def** %arrayidx171, align 8
  %121 = load i32, i32* %total_size, align 4
  %122 = load i32, i32* %from_reg.addr, align 4
  %idxprom172 = sext i32 %122 to i64
  %arrayidx173 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_stack_slot_width, i32 0, i64 %idxprom172
  store i32 %121, i32* %arrayidx173, align 4
  br label %if.end.174

if.end.174:                                       ; preds = %if.end.169, %if.then.103
  br label %if.end.175

if.end.175:                                       ; preds = %if.end.174, %if.then.61
  %123 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %124 = load i32, i32* %i.addr, align 4
  %idxprom176 = sext i32 %124 to i64
  %125 = load %struct.function*, %struct.function** @cfun, align 8
  %emit177 = getelementptr inbounds %struct.function, %struct.function* %125, i32 0, i32 3
  %126 = load %struct.emit_status*, %struct.emit_status** %emit177, align 8
  %x_regno_reg_rtx178 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %126, i32 0, i32 12
  %127 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx178, align 8
  %arrayidx179 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %127, i64 %idxprom176
  %128 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx179, align 8
  %129 = bitcast %struct.rtx_def* %128 to i32*
  %bf.load180 = load i32, i32* %129, align 8
  %bf.lshr181 = lshr i32 %bf.load180, 16
  %bf.clear182 = and i32 %bf.lshr181, 255
  %130 = load i32, i32* %adjust, align 4
  %conv183 = sext i32 %130 to i64
  %call184 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %123, i32 %bf.clear182, i64 %conv183, i32 0, i32 1)
  store %struct.rtx_def* %call184, %struct.rtx_def** %x, align 8
  %131 = load i32, i32* %i.addr, align 4
  %idxprom185 = sext i32 %131 to i64
  %132 = load %struct.function*, %struct.function** @cfun, align 8
  %emit186 = getelementptr inbounds %struct.function, %struct.function* %132, i32 0, i32 3
  %133 = load %struct.emit_status*, %struct.emit_status** %emit186, align 8
  %regno_decl = getelementptr inbounds %struct.emit_status, %struct.emit_status* %133, i32 0, i32 11
  %134 = load %union.tree_node**, %union.tree_node*** %regno_decl, align 8
  %arrayidx187 = getelementptr inbounds %union.tree_node*, %union.tree_node** %134, i64 %idxprom185
  %135 = load %union.tree_node*, %union.tree_node** %arrayidx187, align 8
  %tobool188 = icmp ne %union.tree_node* %135, null
  br i1 %tobool188, label %if.then.189, label %if.end.256

if.then.189:                                      ; preds = %if.end.175
  %136 = load i32, i32* %i.addr, align 4
  %idxprom190 = sext i32 %136 to i64
  %137 = load %struct.function*, %struct.function** @cfun, align 8
  %emit191 = getelementptr inbounds %struct.function, %struct.function* %137, i32 0, i32 3
  %138 = load %struct.emit_status*, %struct.emit_status** %emit191, align 8
  %regno_decl192 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %138, i32 0, i32 11
  %139 = load %union.tree_node**, %union.tree_node*** %regno_decl192, align 8
  %arrayidx193 = getelementptr inbounds %union.tree_node*, %union.tree_node** %139, i64 %idxprom190
  %140 = load %union.tree_node*, %union.tree_node** %arrayidx193, align 8
  %decl194 = bitcast %union.tree_node* %140 to %struct.tree_decl*
  %rtl = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl194, i32 0, i32 17
  %141 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8
  %cmp195 = icmp ne %struct.rtx_def* %141, null
  br i1 %cmp195, label %cond.true.197, label %cond.false.225

cond.true.197:                                    ; preds = %if.then.189
  %142 = load i32, i32* %i.addr, align 4
  %idxprom198 = sext i32 %142 to i64
  %143 = load %struct.function*, %struct.function** @cfun, align 8
  %emit199 = getelementptr inbounds %struct.function, %struct.function* %143, i32 0, i32 3
  %144 = load %struct.emit_status*, %struct.emit_status** %emit199, align 8
  %regno_decl200 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %144, i32 0, i32 11
  %145 = load %union.tree_node**, %union.tree_node*** %regno_decl200, align 8
  %arrayidx201 = getelementptr inbounds %union.tree_node*, %union.tree_node** %145, i64 %idxprom198
  %146 = load %union.tree_node*, %union.tree_node** %arrayidx201, align 8
  %decl202 = bitcast %union.tree_node* %146 to %struct.tree_decl*
  %rtl203 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl202, i32 0, i32 17
  %147 = load %struct.rtx_def*, %struct.rtx_def** %rtl203, align 8
  %tobool204 = icmp ne %struct.rtx_def* %147, null
  br i1 %tobool204, label %cond.true.205, label %cond.false.212

cond.true.205:                                    ; preds = %cond.true.197
  %148 = load i32, i32* %i.addr, align 4
  %idxprom206 = sext i32 %148 to i64
  %149 = load %struct.function*, %struct.function** @cfun, align 8
  %emit207 = getelementptr inbounds %struct.function, %struct.function* %149, i32 0, i32 3
  %150 = load %struct.emit_status*, %struct.emit_status** %emit207, align 8
  %regno_decl208 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %150, i32 0, i32 11
  %151 = load %union.tree_node**, %union.tree_node*** %regno_decl208, align 8
  %arrayidx209 = getelementptr inbounds %union.tree_node*, %union.tree_node** %151, i64 %idxprom206
  %152 = load %union.tree_node*, %union.tree_node** %arrayidx209, align 8
  %decl210 = bitcast %union.tree_node* %152 to %struct.tree_decl*
  %rtl211 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl210, i32 0, i32 17
  %153 = load %struct.rtx_def*, %struct.rtx_def** %rtl211, align 8
  br label %cond.end.223

cond.false.212:                                   ; preds = %cond.true.197
  %154 = load i32, i32* %i.addr, align 4
  %idxprom213 = sext i32 %154 to i64
  %155 = load %struct.function*, %struct.function** @cfun, align 8
  %emit214 = getelementptr inbounds %struct.function, %struct.function* %155, i32 0, i32 3
  %156 = load %struct.emit_status*, %struct.emit_status** %emit214, align 8
  %regno_decl215 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %156, i32 0, i32 11
  %157 = load %union.tree_node**, %union.tree_node*** %regno_decl215, align 8
  %arrayidx216 = getelementptr inbounds %union.tree_node*, %union.tree_node** %157, i64 %idxprom213
  %158 = load %union.tree_node*, %union.tree_node** %arrayidx216, align 8
  call void @make_decl_rtl(%union.tree_node* %158, i8* null)
  %159 = load i32, i32* %i.addr, align 4
  %idxprom217 = sext i32 %159 to i64
  %160 = load %struct.function*, %struct.function** @cfun, align 8
  %emit218 = getelementptr inbounds %struct.function, %struct.function* %160, i32 0, i32 3
  %161 = load %struct.emit_status*, %struct.emit_status** %emit218, align 8
  %regno_decl219 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %161, i32 0, i32 11
  %162 = load %union.tree_node**, %union.tree_node*** %regno_decl219, align 8
  %arrayidx220 = getelementptr inbounds %union.tree_node*, %union.tree_node** %162, i64 %idxprom217
  %163 = load %union.tree_node*, %union.tree_node** %arrayidx220, align 8
  %decl221 = bitcast %union.tree_node* %163 to %struct.tree_decl*
  %rtl222 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl221, i32 0, i32 17
  %164 = load %struct.rtx_def*, %struct.rtx_def** %rtl222, align 8
  br label %cond.end.223

cond.end.223:                                     ; preds = %cond.false.212, %cond.true.205
  %cond224 = phi %struct.rtx_def* [ %153, %cond.true.205 ], [ %164, %cond.false.212 ]
  br label %cond.end.226

cond.false.225:                                   ; preds = %if.then.189
  br label %cond.end.226

cond.end.226:                                     ; preds = %cond.false.225, %cond.end.223
  %cond227 = phi %struct.rtx_def* [ %cond224, %cond.end.223 ], [ null, %cond.false.225 ]
  store %struct.rtx_def* %cond227, %struct.rtx_def** %decl, align 8
  %165 = load %struct.rtx_def*, %struct.rtx_def** %decl, align 8
  %tobool228 = icmp ne %struct.rtx_def* %165, null
  br i1 %tobool228, label %land.lhs.true.229, label %if.end.255

land.lhs.true.229:                                ; preds = %cond.end.226
  %166 = load %struct.rtx_def*, %struct.rtx_def** %decl, align 8
  %167 = bitcast %struct.rtx_def* %166 to i32*
  %bf.load230 = load i32, i32* %167, align 8
  %bf.clear231 = and i32 %bf.load230, 65535
  %cmp232 = icmp eq i32 %bf.clear231, 61
  br i1 %cmp232, label %land.lhs.true.234, label %if.end.255

land.lhs.true.234:                                ; preds = %land.lhs.true.229
  %168 = load %struct.rtx_def*, %struct.rtx_def** %decl, align 8
  %fld235 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %168, i32 0, i32 1
  %arrayidx236 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld235, i32 0, i64 0
  %rtuint237 = bitcast %union.rtunion_def* %arrayidx236 to i32*
  %169 = load i32, i32* %rtuint237, align 4
  %170 = load i32, i32* %i.addr, align 4
  %cmp238 = icmp eq i32 %169, %170
  br i1 %cmp238, label %if.then.240, label %if.end.255

if.then.240:                                      ; preds = %land.lhs.true.234
  %171 = load i32, i32* %from_reg.addr, align 4
  %cmp241 = icmp ne i32 %171, -1
  br i1 %cmp241, label %land.lhs.true.243, label %if.end.250

land.lhs.true.243:                                ; preds = %if.then.240
  %172 = load i32, i32* %from_reg.addr, align 4
  %idxprom244 = sext i32 %172 to i64
  %arrayidx245 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i32 0, i64 %idxprom244
  %173 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx245, align 8
  %174 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %cmp246 = icmp eq %struct.rtx_def* %173, %174
  br i1 %cmp246, label %if.then.248, label %if.end.250

if.then.248:                                      ; preds = %land.lhs.true.243
  %175 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %call249 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %175)
  store %struct.rtx_def* %call249, %struct.rtx_def** %x, align 8
  br label %if.end.250

if.end.250:                                       ; preds = %if.then.248, %land.lhs.true.243, %if.then.240
  %176 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %177 = load i32, i32* %i.addr, align 4
  %idxprom251 = sext i32 %177 to i64
  %178 = load %struct.function*, %struct.function** @cfun, align 8
  %emit252 = getelementptr inbounds %struct.function, %struct.function* %178, i32 0, i32 3
  %179 = load %struct.emit_status*, %struct.emit_status** %emit252, align 8
  %regno_decl253 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %179, i32 0, i32 11
  %180 = load %union.tree_node**, %union.tree_node*** %regno_decl253, align 8
  %arrayidx254 = getelementptr inbounds %union.tree_node*, %union.tree_node** %180, i64 %idxprom251
  %181 = load %union.tree_node*, %union.tree_node** %arrayidx254, align 8
  call void @set_mem_expr(%struct.rtx_def* %176, %union.tree_node* %181)
  br label %if.end.255

if.end.255:                                       ; preds = %if.end.250, %land.lhs.true.234, %land.lhs.true.229, %cond.end.226
  br label %if.end.256

if.end.256:                                       ; preds = %if.end.255, %if.end.175
  %182 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %183 = load i32, i32* %i.addr, align 4
  %idxprom257 = sext i32 %183 to i64
  %184 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx258 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %184, i64 %idxprom257
  store %struct.rtx_def* %182, %struct.rtx_def** %arrayidx258, align 8
  br label %if.end.259

if.end.259:                                       ; preds = %if.then, %if.then.6, %if.end.256, %land.lhs.true.34, %land.lhs.true.29, %land.lhs.true, %cond.end
  ret void
}

declare void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) #1

; Function Attrs: nounwind uwtable
define internal void @mark_not_eliminable(%struct.rtx_def* %dest, %struct.rtx_def* %x, i8* %data) #0 {
entry:
  %dest.addr = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %data.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.rtx_def* %dest, %struct.rtx_def** %dest.addr, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i8* %data, i8** %data.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 63
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %dest.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %5 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 4), align 8
  %cmp1 = icmp eq %struct.rtx_def* %4, %5
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  br label %for.end

if.end.3:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.3
  %6 = load i32, i32* %i, align 4
  %conv = zext i32 %6 to i64
  %cmp4 = icmp ult i64 %conv, 4
  br i1 %cmp4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %i, align 4
  %idxprom = zext i32 %7 to i64
  %8 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx6 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %8, i64 %idxprom
  %can_eliminate = getelementptr inbounds %struct.elim_table, %struct.elim_table* %arrayidx6, i32 0, i32 3
  %9 = load i32, i32* %can_eliminate, align 4
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %land.lhs.true, label %if.end.49

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %11 = load i32, i32* %i, align 4
  %idxprom7 = zext i32 %11 to i64
  %12 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx8 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %12, i64 %idxprom7
  %to_rtx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %arrayidx8, i32 0, i32 9
  %13 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx, align 8
  %cmp9 = icmp eq %struct.rtx_def* %10, %13
  br i1 %cmp9, label %land.lhs.true.11, label %if.end.49

land.lhs.true.11:                                 ; preds = %land.lhs.true
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %15 = bitcast %struct.rtx_def* %14 to i32*
  %bf.load12 = load i32, i32* %15, align 8
  %bf.clear13 = and i32 %bf.load12, 65535
  %cmp14 = icmp ne i32 %bf.clear13, 47
  br i1 %cmp14, label %if.then.43, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.11
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i32 0, i64 1
  %rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rtx18, align 8
  %18 = bitcast %struct.rtx_def* %17 to i32*
  %bf.load19 = load i32, i32* %18, align 8
  %bf.clear20 = and i32 %bf.load19, 65535
  %cmp21 = icmp ne i32 %bf.clear20, 75
  br i1 %cmp21, label %if.then.43, label %lor.lhs.false.23

lor.lhs.false.23:                                 ; preds = %lor.lhs.false
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i32 0, i64 1
  %rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rtx26, align 8
  %fld27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i32 0, i64 0
  %rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rtx29, align 8
  %22 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %cmp30 = icmp ne %struct.rtx_def* %21, %22
  br i1 %cmp30, label %if.then.43, label %lor.lhs.false.32

lor.lhs.false.32:                                 ; preds = %lor.lhs.false.23
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx34 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld33, i32 0, i64 1
  %rtx35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rtx35, align 8
  %fld36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i32 0, i64 1
  %rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rtx38, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load39 = load i32, i32* %26, align 8
  %bf.clear40 = and i32 %bf.load39, 65535
  %cmp41 = icmp ne i32 %bf.clear40, 54
  br i1 %cmp41, label %if.then.43, label %if.end.49

if.then.43:                                       ; preds = %lor.lhs.false.32, %lor.lhs.false.23, %lor.lhs.false, %land.lhs.true.11
  %27 = load i32, i32* %i, align 4
  %idxprom44 = zext i32 %27 to i64
  %28 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx45 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %28, i64 %idxprom44
  %can_eliminate46 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %arrayidx45, i32 0, i32 3
  store i32 0, i32* %can_eliminate46, align 4
  %29 = load i32, i32* %i, align 4
  %idxprom47 = zext i32 %29 to i64
  %30 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx48 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %30, i64 %idxprom47
  %can_eliminate_previous = getelementptr inbounds %struct.elim_table, %struct.elim_table* %arrayidx48, i32 0, i32 4
  store i32 0, i32* %can_eliminate_previous, align 4
  %31 = load i32, i32* @num_eliminable, align 4
  %dec = add nsw i32 %31, -1
  store i32 %dec, i32* @num_eliminable, align 4
  br label %if.end.49

if.end.49:                                        ; preds = %if.then.43, %lor.lhs.false.32, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.49
  %32 = load i32, i32* %i, align 4
  %inc = add i32 %32, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then.2, %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @maybe_fix_stack_asms() #0 {
entry:
  %constraints = alloca [30 x i8*], align 16
  %operand_mode = alloca [30 x i32], align 16
  %chain = alloca %struct.insn_chain*, align 8
  %i = alloca i32, align 4
  %noperands = alloca i32, align 4
  %clobbered = alloca i64, align 8
  %allowed = alloca i64, align 8
  %pat = alloca %struct.rtx_def*, align 8
  %t = alloca %struct.rtx_def*, align 8
  %p = alloca i8*, align 8
  %cls = alloca i32, align 4
  %c = alloca i8, align 1
  %0 = load %struct.insn_chain*, %struct.insn_chain** @reload_insn_chain, align 8
  store %struct.insn_chain* %0, %struct.insn_chain** %chain, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc.281, %entry
  %1 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %cmp = icmp ne %struct.insn_chain* %1, null
  br i1 %cmp, label %for.body, label %for.end.282

for.body:                                         ; preds = %for.cond
  %2 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %insn = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %2, i32 0, i32 4
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load = load i32, i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom = sext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %5 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %5 to i32
  %cmp1 = icmp eq i32 %conv, 105
  br i1 %cmp1, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %for.body
  %6 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %insn3 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %6, i32 0, i32 4
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn3, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %call = call i32 @asm_noperands(%struct.rtx_def* %8)
  store i32 %call, i32* %noperands, align 4
  %cmp5 = icmp slt i32 %call, 0
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc.281

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %insn7 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %9, i32 0, i32 4
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn7, align 8
  %fld8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i32 0, i64 3
  %rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rtx10, align 8
  store %struct.rtx_def* %11, %struct.rtx_def** %pat, align 8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load11 = load i32, i32* %13, align 8
  %bf.clear12 = and i32 %bf.load11, 65535
  %cmp13 = icmp ne i32 %bf.clear12, 39
  br i1 %cmp13, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.end
  br label %for.inc.281

if.end.16:                                        ; preds = %if.end
  store i64 0, i64* %clobbered, align 8
  store i64 0, i64* %allowed, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.17

for.cond.17:                                      ; preds = %for.inc, %if.end.16
  %14 = load i32, i32* %i, align 4
  %15 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i32 0, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtvec_def**
  %16 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %16, i32 0, i32 0
  %17 = load i32, i32* %num_elem, align 4
  %cmp20 = icmp slt i32 %14, %17
  br i1 %cmp20, label %for.body.22, label %for.end

for.body.22:                                      ; preds = %for.cond.17
  %18 = load i32, i32* %i, align 4
  %idxprom23 = sext i32 %18 to i64
  %19 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i32 0, i64 0
  %rtvec26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtvec_def**
  %20 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec26, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %20, i32 0, i32 1
  %arrayidx27 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom23
  %21 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx27, align 8
  store %struct.rtx_def* %21, %struct.rtx_def** %t, align 8
  %22 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %23 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load28 = load i32, i32* %23, align 8
  %bf.clear29 = and i32 %bf.load28, 65535
  %cmp30 = icmp eq i32 %bf.clear29, 49
  br i1 %cmp30, label %land.lhs.true, label %if.end.63

land.lhs.true:                                    ; preds = %for.body.22
  %24 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i32 0, i64 0
  %rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rtx34, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load35 = load i32, i32* %26, align 8
  %bf.clear36 = and i32 %bf.load35, 65535
  %cmp37 = icmp eq i32 %bf.clear36, 61
  br i1 %cmp37, label %land.lhs.true.39, label %if.end.63

land.lhs.true.39:                                 ; preds = %land.lhs.true
  %27 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i32 0, i64 0
  %rtx42 = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rtx42, align 8
  %fld43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx44 to i32*
  %29 = load i32, i32* %rtuint, align 4
  %cmp45 = icmp uge i32 %29, 8
  br i1 %cmp45, label %land.lhs.true.47, label %if.end.63

land.lhs.true.47:                                 ; preds = %land.lhs.true.39
  %30 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i32 0, i64 0
  %rtx50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rtx50, align 8
  %fld51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i32 0, i64 0
  %rtuint53 = bitcast %union.rtunion_def* %arrayidx52 to i32*
  %32 = load i32, i32* %rtuint53, align 4
  %cmp54 = icmp ule i32 %32, 15
  br i1 %cmp54, label %if.then.56, label %if.end.63

if.then.56:                                       ; preds = %land.lhs.true.47
  %33 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %arrayidx58 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld57, i32 0, i64 0
  %rtx59 = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rtx59, align 8
  %fld60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i32 0, i64 0
  %rtuint62 = bitcast %union.rtunion_def* %arrayidx61 to i32*
  %35 = load i32, i32* %rtuint62, align 4
  %sh_prom = zext i32 %35 to i64
  %shl = shl i64 1, %sh_prom
  %36 = load i64, i64* %clobbered, align 8
  %or = or i64 %36, %shl
  store i64 %or, i64* %clobbered, align 8
  br label %if.end.63

if.end.63:                                        ; preds = %if.then.56, %land.lhs.true.47, %land.lhs.true.39, %land.lhs.true, %for.body.22
  br label %for.inc

for.inc:                                          ; preds = %if.end.63
  %37 = load i32, i32* %i, align 4
  %inc = add nsw i32 %37, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.17

for.end:                                          ; preds = %for.cond.17
  %38 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %arraydecay = getelementptr inbounds [30 x i8*], [30 x i8*]* %constraints, i32 0, i32 0
  %arraydecay64 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_mode, i32 0, i32 0
  %call65 = call i8* @decode_asm_operands(%struct.rtx_def* %38, %struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0, i32 0), %struct.rtx_def*** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1, i32 0), i8** %arraydecay, i32* %arraydecay64)
  store i32 0, i32* %i, align 4
  br label %for.cond.66

for.cond.66:                                      ; preds = %for.inc.264, %for.end
  %39 = load i32, i32* %i, align 4
  %40 = load i32, i32* %noperands, align 4
  %cmp67 = icmp slt i32 %39, %40
  br i1 %cmp67, label %for.body.69, label %for.end.266

for.body.69:                                      ; preds = %for.cond.66
  %41 = load i32, i32* %i, align 4
  %idxprom70 = sext i32 %41 to i64
  %arrayidx71 = getelementptr inbounds [30 x i8*], [30 x i8*]* %constraints, i32 0, i64 %idxprom70
  %42 = load i8*, i8** %arrayidx71, align 8
  store i8* %42, i8** %p, align 8
  store i32 0, i32* %cls, align 4
  br label %for.cond.72

for.cond.72:                                      ; preds = %sw.epilog, %if.end.104, %for.body.69
  %43 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %43, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  %44 = load i8, i8* %43, align 1
  store i8 %44, i8* %c, align 1
  %45 = load i8, i8* %c, align 1
  %conv73 = sext i8 %45 to i32
  %cmp74 = icmp eq i32 %conv73, 0
  br i1 %cmp74, label %if.then.84, label %lor.lhs.false.76

lor.lhs.false.76:                                 ; preds = %for.cond.72
  %46 = load i8, i8* %c, align 1
  %conv77 = sext i8 %46 to i32
  %cmp78 = icmp eq i32 %conv77, 44
  br i1 %cmp78, label %if.then.84, label %lor.lhs.false.80

lor.lhs.false.80:                                 ; preds = %lor.lhs.false.76
  %47 = load i8, i8* %c, align 1
  %conv81 = sext i8 %47 to i32
  %cmp82 = icmp eq i32 %conv81, 35
  br i1 %cmp82, label %if.then.84, label %if.end.105

if.then.84:                                       ; preds = %lor.lhs.false.80, %lor.lhs.false.76, %for.cond.72
  %48 = load i32, i32* %cls, align 4
  %idxprom85 = sext i32 %48 to i64
  %arrayidx86 = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom85
  %49 = load i64, i64* %arrayidx86, align 8
  %50 = load i64, i64* %allowed, align 8
  %or87 = or i64 %50, %49
  store i64 %or87, i64* %allowed, align 8
  store i32 0, i32* %cls, align 4
  %51 = load i8, i8* %c, align 1
  %conv88 = sext i8 %51 to i32
  %cmp89 = icmp eq i32 %conv88, 35
  br i1 %cmp89, label %if.then.91, label %if.end.99

if.then.91:                                       ; preds = %if.then.84
  br label %do.body

do.body:                                          ; preds = %land.end, %if.then.91
  %52 = load i8*, i8** %p, align 8
  %incdec.ptr92 = getelementptr inbounds i8, i8* %52, i32 1
  store i8* %incdec.ptr92, i8** %p, align 8
  %53 = load i8, i8* %52, align 1
  store i8 %53, i8* %c, align 1
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %54 = load i8, i8* %c, align 1
  %conv93 = sext i8 %54 to i32
  %cmp94 = icmp ne i32 %conv93, 0
  br i1 %cmp94, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %do.cond
  %55 = load i8, i8* %c, align 1
  %conv96 = sext i8 %55 to i32
  %cmp97 = icmp ne i32 %conv96, 44
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %56 = phi i1 [ false, %do.cond ], [ %cmp97, %land.rhs ]
  br i1 %56, label %do.body, label %do.end

do.end:                                           ; preds = %land.end
  br label %if.end.99

if.end.99:                                        ; preds = %do.end, %if.then.84
  %57 = load i8, i8* %c, align 1
  %conv100 = sext i8 %57 to i32
  %cmp101 = icmp eq i32 %conv100, 0
  br i1 %cmp101, label %if.then.103, label %if.end.104

if.then.103:                                      ; preds = %if.end.99
  br label %for.end.263

if.end.104:                                       ; preds = %if.end.99
  br label %for.cond.72

if.end.105:                                       ; preds = %lor.lhs.false.80
  %58 = load i8, i8* %c, align 1
  %conv106 = sext i8 %58 to i32
  switch i32 %conv106, label %sw.default [
    i32 61, label %sw.bb
    i32 43, label %sw.bb
    i32 42, label %sw.bb
    i32 37, label %sw.bb
    i32 63, label %sw.bb
    i32 33, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 109, label %sw.bb
    i32 60, label %sw.bb
    i32 62, label %sw.bb
    i32 86, label %sw.bb
    i32 111, label %sw.bb
    i32 38, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 115, label %sw.bb
    i32 105, label %sw.bb
    i32 110, label %sw.bb
    i32 88, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 112, label %sw.bb.107
    i32 103, label %sw.bb.111
    i32 114, label %sw.bb.111
  ]

sw.bb:                                            ; preds = %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105, %if.end.105
  br label %sw.epilog

sw.bb.107:                                        ; preds = %if.end.105
  %59 = load i32, i32* %cls, align 4
  %idxprom108 = sext i32 %59 to i64
  %arrayidx109 = getelementptr inbounds [25 x [25 x i32]], [25 x [25 x i32]]* @reg_class_subunion, i32 0, i64 %idxprom108
  %arrayidx110 = getelementptr inbounds [25 x i32], [25 x i32]* %arrayidx109, i32 0, i64 12
  %60 = load i32, i32* %arrayidx110, align 4
  store i32 %60, i32* %cls, align 4
  br label %sw.epilog

sw.bb.111:                                        ; preds = %if.end.105, %if.end.105
  %61 = load i32, i32* %cls, align 4
  %idxprom112 = sext i32 %61 to i64
  %arrayidx113 = getelementptr inbounds [25 x [25 x i32]], [25 x [25 x i32]]* @reg_class_subunion, i32 0, i64 %idxprom112
  %arrayidx114 = getelementptr inbounds [25 x i32], [25 x i32]* %arrayidx113, i32 0, i64 12
  %62 = load i32, i32* %arrayidx114, align 4
  store i32 %62, i32* %cls, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.105
  %63 = load i8, i8* %c, align 1
  %conv115 = sext i8 %63 to i32
  %cmp116 = icmp eq i32 %conv115, 114
  br i1 %cmp116, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.default
  br label %cond.end.257

cond.false:                                       ; preds = %sw.default
  %64 = load i8, i8* %c, align 1
  %conv118 = sext i8 %64 to i32
  %cmp119 = icmp eq i32 %conv118, 82
  br i1 %cmp119, label %cond.true.121, label %cond.false.122

cond.true.121:                                    ; preds = %cond.false
  br label %cond.end.255

cond.false.122:                                   ; preds = %cond.false
  %65 = load i8, i8* %c, align 1
  %conv123 = sext i8 %65 to i32
  %cmp124 = icmp eq i32 %conv123, 113
  br i1 %cmp124, label %cond.true.126, label %cond.false.127

cond.true.126:                                    ; preds = %cond.false.122
  %66 = load i32, i32* @target_flags, align 4
  %and = and i32 %66, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond = select i1 %tobool, i32 12, i32 8
  br label %cond.end.253

cond.false.127:                                   ; preds = %cond.false.122
  %67 = load i8, i8* %c, align 1
  %conv128 = sext i8 %67 to i32
  %cmp129 = icmp eq i32 %conv128, 81
  br i1 %cmp129, label %cond.true.131, label %cond.false.132

cond.true.131:                                    ; preds = %cond.false.127
  br label %cond.end.251

cond.false.132:                                   ; preds = %cond.false.127
  %68 = load i8, i8* %c, align 1
  %conv133 = sext i8 %68 to i32
  %cmp134 = icmp eq i32 %conv133, 102
  br i1 %cmp134, label %cond.true.136, label %cond.false.142

cond.true.136:                                    ; preds = %cond.false.132
  %69 = load i32, i32* @target_flags, align 4
  %and137 = and i32 %69, 1
  %tobool138 = icmp ne i32 %and137, 0
  br i1 %tobool138, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.136
  %70 = load i32, i32* @target_flags, align 4
  %and139 = and i32 %70, 32
  %tobool140 = icmp ne i32 %and139, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.136
  %71 = phi i1 [ true, %cond.true.136 ], [ %tobool140, %lor.rhs ]
  %cond141 = select i1 %71, i32 15, i32 0
  br label %cond.end.249

cond.false.142:                                   ; preds = %cond.false.132
  %72 = load i8, i8* %c, align 1
  %conv143 = sext i8 %72 to i32
  %cmp144 = icmp eq i32 %conv143, 116
  br i1 %cmp144, label %cond.true.146, label %cond.false.154

cond.true.146:                                    ; preds = %cond.false.142
  %73 = load i32, i32* @target_flags, align 4
  %and147 = and i32 %73, 1
  %tobool148 = icmp ne i32 %and147, 0
  br i1 %tobool148, label %lor.end.152, label %lor.rhs.149

lor.rhs.149:                                      ; preds = %cond.true.146
  %74 = load i32, i32* @target_flags, align 4
  %and150 = and i32 %74, 32
  %tobool151 = icmp ne i32 %and150, 0
  br label %lor.end.152

lor.end.152:                                      ; preds = %lor.rhs.149, %cond.true.146
  %75 = phi i1 [ true, %cond.true.146 ], [ %tobool151, %lor.rhs.149 ]
  %cond153 = select i1 %75, i32 13, i32 0
  br label %cond.end.247

cond.false.154:                                   ; preds = %cond.false.142
  %76 = load i8, i8* %c, align 1
  %conv155 = sext i8 %76 to i32
  %cmp156 = icmp eq i32 %conv155, 117
  br i1 %cmp156, label %cond.true.158, label %cond.false.166

cond.true.158:                                    ; preds = %cond.false.154
  %77 = load i32, i32* @target_flags, align 4
  %and159 = and i32 %77, 1
  %tobool160 = icmp ne i32 %and159, 0
  br i1 %tobool160, label %lor.end.164, label %lor.rhs.161

lor.rhs.161:                                      ; preds = %cond.true.158
  %78 = load i32, i32* @target_flags, align 4
  %and162 = and i32 %78, 32
  %tobool163 = icmp ne i32 %and162, 0
  br label %lor.end.164

lor.end.164:                                      ; preds = %lor.rhs.161, %cond.true.158
  %79 = phi i1 [ true, %cond.true.158 ], [ %tobool163, %lor.rhs.161 ]
  %cond165 = select i1 %79, i32 14, i32 0
  br label %cond.end.245

cond.false.166:                                   ; preds = %cond.false.154
  %80 = load i8, i8* %c, align 1
  %conv167 = sext i8 %80 to i32
  %cmp168 = icmp eq i32 %conv167, 97
  br i1 %cmp168, label %cond.true.170, label %cond.false.171

cond.true.170:                                    ; preds = %cond.false.166
  br label %cond.end.243

cond.false.171:                                   ; preds = %cond.false.166
  %81 = load i8, i8* %c, align 1
  %conv172 = sext i8 %81 to i32
  %cmp173 = icmp eq i32 %conv172, 98
  br i1 %cmp173, label %cond.true.175, label %cond.false.176

cond.true.175:                                    ; preds = %cond.false.171
  br label %cond.end.241

cond.false.176:                                   ; preds = %cond.false.171
  %82 = load i8, i8* %c, align 1
  %conv177 = sext i8 %82 to i32
  %cmp178 = icmp eq i32 %conv177, 99
  br i1 %cmp178, label %cond.true.180, label %cond.false.181

cond.true.180:                                    ; preds = %cond.false.176
  br label %cond.end.239

cond.false.181:                                   ; preds = %cond.false.176
  %83 = load i8, i8* %c, align 1
  %conv182 = sext i8 %83 to i32
  %cmp183 = icmp eq i32 %conv182, 100
  br i1 %cmp183, label %cond.true.185, label %cond.false.186

cond.true.185:                                    ; preds = %cond.false.181
  br label %cond.end.237

cond.false.186:                                   ; preds = %cond.false.181
  %84 = load i8, i8* %c, align 1
  %conv187 = sext i8 %84 to i32
  %cmp188 = icmp eq i32 %conv187, 120
  br i1 %cmp188, label %cond.true.190, label %cond.false.195

cond.true.190:                                    ; preds = %cond.false.186
  %85 = load i32, i32* @target_flags, align 4
  %and191 = and i32 %85, 327680
  %cmp192 = icmp ne i32 %and191, 0
  %cond194 = select i1 %cmp192, i32 16, i32 0
  br label %cond.end.235

cond.false.195:                                   ; preds = %cond.false.186
  %86 = load i8, i8* %c, align 1
  %conv196 = sext i8 %86 to i32
  %cmp197 = icmp eq i32 %conv196, 89
  br i1 %cmp197, label %cond.true.199, label %cond.false.204

cond.true.199:                                    ; preds = %cond.false.195
  %87 = load i32, i32* @target_flags, align 4
  %and200 = and i32 %87, 262144
  %cmp201 = icmp ne i32 %and200, 0
  %cond203 = select i1 %cmp201, i32 16, i32 0
  br label %cond.end.233

cond.false.204:                                   ; preds = %cond.false.195
  %88 = load i8, i8* %c, align 1
  %conv205 = sext i8 %88 to i32
  %cmp206 = icmp eq i32 %conv205, 121
  br i1 %cmp206, label %cond.true.208, label %cond.false.213

cond.true.208:                                    ; preds = %cond.false.204
  %89 = load i32, i32* @target_flags, align 4
  %and209 = and i32 %89, 16384
  %cmp210 = icmp ne i32 %and209, 0
  %cond212 = select i1 %cmp210, i32 17, i32 0
  br label %cond.end.231

cond.false.213:                                   ; preds = %cond.false.204
  %90 = load i8, i8* %c, align 1
  %conv214 = sext i8 %90 to i32
  %cmp215 = icmp eq i32 %conv214, 65
  br i1 %cmp215, label %cond.true.217, label %cond.false.218

cond.true.217:                                    ; preds = %cond.false.213
  br label %cond.end.229

cond.false.218:                                   ; preds = %cond.false.213
  %91 = load i8, i8* %c, align 1
  %conv219 = sext i8 %91 to i32
  %cmp220 = icmp eq i32 %conv219, 68
  br i1 %cmp220, label %cond.true.222, label %cond.false.223

cond.true.222:                                    ; preds = %cond.false.218
  br label %cond.end

cond.false.223:                                   ; preds = %cond.false.218
  %92 = load i8, i8* %c, align 1
  %conv224 = sext i8 %92 to i32
  %cmp225 = icmp eq i32 %conv224, 83
  %cond227 = select i1 %cmp225, i32 5, i32 0
  br label %cond.end

cond.end:                                         ; preds = %cond.false.223, %cond.true.222
  %cond228 = phi i32 [ 6, %cond.true.222 ], [ %cond227, %cond.false.223 ]
  br label %cond.end.229

cond.end.229:                                     ; preds = %cond.end, %cond.true.217
  %cond230 = phi i32 [ 7, %cond.true.217 ], [ %cond228, %cond.end ]
  br label %cond.end.231

cond.end.231:                                     ; preds = %cond.end.229, %cond.true.208
  %cond232 = phi i32 [ %cond212, %cond.true.208 ], [ %cond230, %cond.end.229 ]
  br label %cond.end.233

cond.end.233:                                     ; preds = %cond.end.231, %cond.true.199
  %cond234 = phi i32 [ %cond203, %cond.true.199 ], [ %cond232, %cond.end.231 ]
  br label %cond.end.235

cond.end.235:                                     ; preds = %cond.end.233, %cond.true.190
  %cond236 = phi i32 [ %cond194, %cond.true.190 ], [ %cond234, %cond.end.233 ]
  br label %cond.end.237

cond.end.237:                                     ; preds = %cond.end.235, %cond.true.185
  %cond238 = phi i32 [ 2, %cond.true.185 ], [ %cond236, %cond.end.235 ]
  br label %cond.end.239

cond.end.239:                                     ; preds = %cond.end.237, %cond.true.180
  %cond240 = phi i32 [ 3, %cond.true.180 ], [ %cond238, %cond.end.237 ]
  br label %cond.end.241

cond.end.241:                                     ; preds = %cond.end.239, %cond.true.175
  %cond242 = phi i32 [ 4, %cond.true.175 ], [ %cond240, %cond.end.239 ]
  br label %cond.end.243

cond.end.243:                                     ; preds = %cond.end.241, %cond.true.170
  %cond244 = phi i32 [ 1, %cond.true.170 ], [ %cond242, %cond.end.241 ]
  br label %cond.end.245

cond.end.245:                                     ; preds = %cond.end.243, %lor.end.164
  %cond246 = phi i32 [ %cond165, %lor.end.164 ], [ %cond244, %cond.end.243 ]
  br label %cond.end.247

cond.end.247:                                     ; preds = %cond.end.245, %lor.end.152
  %cond248 = phi i32 [ %cond153, %lor.end.152 ], [ %cond246, %cond.end.245 ]
  br label %cond.end.249

cond.end.249:                                     ; preds = %cond.end.247, %lor.end
  %cond250 = phi i32 [ %cond141, %lor.end ], [ %cond248, %cond.end.247 ]
  br label %cond.end.251

cond.end.251:                                     ; preds = %cond.end.249, %cond.true.131
  %cond252 = phi i32 [ 8, %cond.true.131 ], [ %cond250, %cond.end.249 ]
  br label %cond.end.253

cond.end.253:                                     ; preds = %cond.end.251, %cond.true.126
  %cond254 = phi i32 [ %cond, %cond.true.126 ], [ %cond252, %cond.end.251 ]
  br label %cond.end.255

cond.end.255:                                     ; preds = %cond.end.253, %cond.true.121
  %cond256 = phi i32 [ 11, %cond.true.121 ], [ %cond254, %cond.end.253 ]
  br label %cond.end.257

cond.end.257:                                     ; preds = %cond.end.255, %cond.true
  %cond258 = phi i32 [ 12, %cond.true ], [ %cond256, %cond.end.255 ]
  %idxprom259 = sext i32 %cond258 to i64
  %93 = load i32, i32* %cls, align 4
  %idxprom260 = sext i32 %93 to i64
  %arrayidx261 = getelementptr inbounds [25 x [25 x i32]], [25 x [25 x i32]]* @reg_class_subunion, i32 0, i64 %idxprom260
  %arrayidx262 = getelementptr inbounds [25 x i32], [25 x i32]* %arrayidx261, i32 0, i64 %idxprom259
  %94 = load i32, i32* %arrayidx262, align 4
  store i32 %94, i32* %cls, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %cond.end.257, %sw.bb.111, %sw.bb.107, %sw.bb
  br label %for.cond.72

for.end.263:                                      ; preds = %if.then.103
  br label %for.inc.264

for.inc.264:                                      ; preds = %for.end.263
  %95 = load i32, i32* %i, align 4
  %inc265 = add nsw i32 %95, 1
  store i32 %inc265, i32* %i, align 4
  br label %for.cond.66

for.end.266:                                      ; preds = %for.cond.66
  %96 = load i64, i64* %clobbered, align 8
  %97 = load i64, i64* %allowed, align 8
  %and267 = and i64 %97, %96
  store i64 %and267, i64* %allowed, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.268

for.cond.268:                                     ; preds = %for.inc.278, %for.end.266
  %98 = load i32, i32* %i, align 4
  %cmp269 = icmp slt i32 %98, 53
  br i1 %cmp269, label %for.body.271, label %for.end.280

for.body.271:                                     ; preds = %for.cond.268
  %99 = load i64, i64* %allowed, align 8
  %100 = load i32, i32* %i, align 4
  %sh_prom272 = zext i32 %100 to i64
  %shl273 = shl i64 1, %sh_prom272
  %and274 = and i64 %99, %shl273
  %tobool275 = icmp ne i64 %and274, 0
  br i1 %tobool275, label %if.then.276, label %if.end.277

if.then.276:                                      ; preds = %for.body.271
  %101 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %live_throughout = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %101, i32 0, i32 5
  %102 = load i32, i32* %i, align 4
  call void @bitmap_clear_bit(%struct.bitmap_head_def* %live_throughout, i32 %102)
  %103 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %dead_or_set = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %103, i32 0, i32 6
  %104 = load i32, i32* %i, align 4
  call void @bitmap_clear_bit(%struct.bitmap_head_def* %dead_or_set, i32 %104)
  br label %if.end.277

if.end.277:                                       ; preds = %if.then.276, %for.body.271
  br label %for.inc.278

for.inc.278:                                      ; preds = %if.end.277
  %105 = load i32, i32* %i, align 4
  %inc279 = add nsw i32 %105, 1
  store i32 %inc279, i32* %i, align 4
  br label %for.cond.268

for.end.280:                                      ; preds = %for.cond.268
  br label %for.inc.281

for.inc.281:                                      ; preds = %for.end.280, %if.then.15, %if.then
  %106 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %next = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %106, i32 0, i32 0
  %107 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8
  store %struct.insn_chain* %107, %struct.insn_chain** %chain, align 8
  br label %for.cond

for.end.282:                                      ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @spill_hard_reg(i32 %regno, i32 %cant_eliminate) #0 {
entry:
  %regno.addr = alloca i32, align 4
  %cant_eliminate.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  store i32 %cant_eliminate, i32* %cant_eliminate.addr, align 4
  %0 = load i32, i32* %cant_eliminate.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %regno.addr, align 4
  %sh_prom = zext i32 %1 to i64
  %shl = shl i64 1, %sh_prom
  %2 = load i64, i64* @bad_spill_regs_global, align 8
  %or = or i64 %2, %shl
  store i64 %or, i64* @bad_spill_regs_global, align 8
  %3 = load i32, i32* %regno.addr, align 4
  %idxprom = zext i32 %3 to i64
  %arrayidx = getelementptr inbounds [53 x i8], [53 x i8]* @regs_ever_live, i32 0, i64 %idxprom
  store i8 1, i8* %arrayidx, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 53, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4
  %5 = load i32, i32* @max_regno, align 4
  %cmp = icmp slt i32 %4, %5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %6 to i64
  %7 = load i16*, i16** @reg_renumber, align 8
  %arrayidx2 = getelementptr inbounds i16, i16* %7, i64 %idxprom1
  %8 = load i16, i16* %arrayidx2, align 2
  %conv = sext i16 %8 to i32
  %cmp3 = icmp sge i32 %conv, 0
  br i1 %cmp3, label %land.lhs.true, label %if.end.129

land.lhs.true:                                    ; preds = %for.body
  %9 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %9 to i64
  %10 = load i16*, i16** @reg_renumber, align 8
  %arrayidx6 = getelementptr inbounds i16, i16* %10, i64 %idxprom5
  %11 = load i16, i16* %arrayidx6, align 2
  %conv7 = sext i16 %11 to i32
  %12 = load i32, i32* %regno.addr, align 4
  %cmp8 = icmp ule i32 %conv7, %12
  br i1 %cmp8, label %land.lhs.true.10, label %if.end.129

land.lhs.true.10:                                 ; preds = %land.lhs.true
  %13 = load i32, i32* %i, align 4
  %idxprom11 = sext i32 %13 to i64
  %14 = load i16*, i16** @reg_renumber, align 8
  %arrayidx12 = getelementptr inbounds i16, i16* %14, i64 %idxprom11
  %15 = load i16, i16* %arrayidx12, align 2
  %conv13 = sext i16 %15 to i32
  %16 = load i32, i32* %i, align 4
  %idxprom14 = sext i32 %16 to i64
  %17 = load i16*, i16** @reg_renumber, align 8
  %arrayidx15 = getelementptr inbounds i16, i16* %17, i64 %idxprom14
  %18 = load i16, i16* %arrayidx15, align 2
  %conv16 = sext i16 %18 to i32
  %cmp17 = icmp uge i32 %conv16, 8
  br i1 %cmp17, label %land.lhs.true.19, label %lor.lhs.false

land.lhs.true.19:                                 ; preds = %land.lhs.true.10
  %19 = load i32, i32* %i, align 4
  %idxprom20 = sext i32 %19 to i64
  %20 = load i16*, i16** @reg_renumber, align 8
  %arrayidx21 = getelementptr inbounds i16, i16* %20, i64 %idxprom20
  %21 = load i16, i16* %arrayidx21, align 2
  %conv22 = sext i16 %21 to i32
  %cmp23 = icmp ule i32 %conv22, 15
  br i1 %cmp23, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.19, %land.lhs.true.10
  %22 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %22 to i64
  %23 = load i16*, i16** @reg_renumber, align 8
  %arrayidx26 = getelementptr inbounds i16, i16* %23, i64 %idxprom25
  %24 = load i16, i16* %arrayidx26, align 2
  %conv27 = sext i16 %24 to i32
  %cmp28 = icmp uge i32 %conv27, 21
  br i1 %cmp28, label %land.lhs.true.30, label %lor.lhs.false.36

land.lhs.true.30:                                 ; preds = %lor.lhs.false
  %25 = load i32, i32* %i, align 4
  %idxprom31 = sext i32 %25 to i64
  %26 = load i16*, i16** @reg_renumber, align 8
  %arrayidx32 = getelementptr inbounds i16, i16* %26, i64 %idxprom31
  %27 = load i16, i16* %arrayidx32, align 2
  %conv33 = sext i16 %27 to i32
  %cmp34 = icmp ule i32 %conv33, 28
  br i1 %cmp34, label %cond.true, label %lor.lhs.false.36

lor.lhs.false.36:                                 ; preds = %land.lhs.true.30, %lor.lhs.false
  %28 = load i32, i32* %i, align 4
  %idxprom37 = sext i32 %28 to i64
  %29 = load i16*, i16** @reg_renumber, align 8
  %arrayidx38 = getelementptr inbounds i16, i16* %29, i64 %idxprom37
  %30 = load i16, i16* %arrayidx38, align 2
  %conv39 = sext i16 %30 to i32
  %cmp40 = icmp uge i32 %conv39, 45
  br i1 %cmp40, label %land.lhs.true.42, label %lor.lhs.false.48

land.lhs.true.42:                                 ; preds = %lor.lhs.false.36
  %31 = load i32, i32* %i, align 4
  %idxprom43 = sext i32 %31 to i64
  %32 = load i16*, i16** @reg_renumber, align 8
  %arrayidx44 = getelementptr inbounds i16, i16* %32, i64 %idxprom43
  %33 = load i16, i16* %arrayidx44, align 2
  %conv45 = sext i16 %33 to i32
  %cmp46 = icmp ule i32 %conv45, 52
  br i1 %cmp46, label %cond.true, label %lor.lhs.false.48

lor.lhs.false.48:                                 ; preds = %land.lhs.true.42, %lor.lhs.false.36
  %34 = load i32, i32* %i, align 4
  %idxprom49 = sext i32 %34 to i64
  %35 = load i16*, i16** @reg_renumber, align 8
  %arrayidx50 = getelementptr inbounds i16, i16* %35, i64 %idxprom49
  %36 = load i16, i16* %arrayidx50, align 2
  %conv51 = sext i16 %36 to i32
  %cmp52 = icmp uge i32 %conv51, 29
  br i1 %cmp52, label %land.lhs.true.54, label %cond.false

land.lhs.true.54:                                 ; preds = %lor.lhs.false.48
  %37 = load i32, i32* %i, align 4
  %idxprom55 = sext i32 %37 to i64
  %38 = load i16*, i16** @reg_renumber, align 8
  %arrayidx56 = getelementptr inbounds i16, i16* %38, i64 %idxprom55
  %39 = load i16, i16* %arrayidx56, align 2
  %conv57 = sext i16 %39 to i32
  %cmp58 = icmp ule i32 %conv57, 36
  br i1 %cmp58, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.54, %land.lhs.true.42, %land.lhs.true.30, %land.lhs.true.19
  %40 = load i32, i32* %i, align 4
  %idxprom60 = sext i32 %40 to i64
  %41 = load %struct.function*, %struct.function** @cfun, align 8
  %emit = getelementptr inbounds %struct.function, %struct.function* %41, i32 0, i32 3
  %42 = load %struct.emit_status*, %struct.emit_status** %emit, align 8
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status, %struct.emit_status* %42, i32 0, i32 12
  %43 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx, align 8
  %arrayidx61 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %43, i64 %idxprom60
  %44 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx61, align 8
  %45 = bitcast %struct.rtx_def* %44 to i32*
  %bf.load = load i32, i32* %45, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom62 = sext i32 %bf.clear to i64
  %arrayidx63 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom62
  %46 = load i32, i32* %arrayidx63, align 4
  %cmp64 = icmp eq i32 %46, 5
  br i1 %cmp64, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %47 = load i32, i32* %i, align 4
  %idxprom66 = sext i32 %47 to i64
  %48 = load %struct.function*, %struct.function** @cfun, align 8
  %emit67 = getelementptr inbounds %struct.function, %struct.function* %48, i32 0, i32 3
  %49 = load %struct.emit_status*, %struct.emit_status** %emit67, align 8
  %x_regno_reg_rtx68 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %49, i32 0, i32 12
  %50 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx68, align 8
  %arrayidx69 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %50, i64 %idxprom66
  %51 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx69, align 8
  %52 = bitcast %struct.rtx_def* %51 to i32*
  %bf.load70 = load i32, i32* %52, align 8
  %bf.lshr71 = lshr i32 %bf.load70, 16
  %bf.clear72 = and i32 %bf.lshr71, 255
  %idxprom73 = sext i32 %bf.clear72 to i64
  %arrayidx74 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom73
  %53 = load i32, i32* %arrayidx74, align 4
  %cmp75 = icmp eq i32 %53, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %54 = phi i1 [ true, %cond.true ], [ %cmp75, %lor.rhs ]
  %cond = select i1 %54, i32 2, i32 1
  br label %cond.end.123

cond.false:                                       ; preds = %land.lhs.true.54, %lor.lhs.false.48
  %55 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %55 to i64
  %56 = load %struct.function*, %struct.function** @cfun, align 8
  %emit78 = getelementptr inbounds %struct.function, %struct.function* %56, i32 0, i32 3
  %57 = load %struct.emit_status*, %struct.emit_status** %emit78, align 8
  %x_regno_reg_rtx79 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %57, i32 0, i32 12
  %58 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx79, align 8
  %arrayidx80 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %58, i64 %idxprom77
  %59 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx80, align 8
  %60 = bitcast %struct.rtx_def* %59 to i32*
  %bf.load81 = load i32, i32* %60, align 8
  %bf.lshr82 = lshr i32 %bf.load81, 16
  %bf.clear83 = and i32 %bf.lshr82, 255
  %cmp84 = icmp eq i32 %bf.clear83, 18
  br i1 %cmp84, label %cond.true.86, label %cond.false.89

cond.true.86:                                     ; preds = %cond.false
  %61 = load i32, i32* @target_flags, align 4
  %and = and i32 %61, 33554432
  %tobool87 = icmp ne i32 %and, 0
  %cond88 = select i1 %tobool87, i32 2, i32 3
  br label %cond.end.121

cond.false.89:                                    ; preds = %cond.false
  %62 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %62 to i64
  %63 = load %struct.function*, %struct.function** @cfun, align 8
  %emit91 = getelementptr inbounds %struct.function, %struct.function* %63, i32 0, i32 3
  %64 = load %struct.emit_status*, %struct.emit_status** %emit91, align 8
  %x_regno_reg_rtx92 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %64, i32 0, i32 12
  %65 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx92, align 8
  %arrayidx93 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %65, i64 %idxprom90
  %66 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx93, align 8
  %67 = bitcast %struct.rtx_def* %66 to i32*
  %bf.load94 = load i32, i32* %67, align 8
  %bf.lshr95 = lshr i32 %bf.load94, 16
  %bf.clear96 = and i32 %bf.lshr95, 255
  %cmp97 = icmp eq i32 %bf.clear96, 24
  br i1 %cmp97, label %cond.true.99, label %cond.false.103

cond.true.99:                                     ; preds = %cond.false.89
  %68 = load i32, i32* @target_flags, align 4
  %and100 = and i32 %68, 33554432
  %tobool101 = icmp ne i32 %and100, 0
  %cond102 = select i1 %tobool101, i32 4, i32 6
  br label %cond.end

cond.false.103:                                   ; preds = %cond.false.89
  %69 = load i32, i32* %i, align 4
  %idxprom104 = sext i32 %69 to i64
  %70 = load %struct.function*, %struct.function** @cfun, align 8
  %emit105 = getelementptr inbounds %struct.function, %struct.function* %70, i32 0, i32 3
  %71 = load %struct.emit_status*, %struct.emit_status** %emit105, align 8
  %x_regno_reg_rtx106 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %71, i32 0, i32 12
  %72 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx106, align 8
  %arrayidx107 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %72, i64 %idxprom104
  %73 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx107, align 8
  %74 = bitcast %struct.rtx_def* %73 to i32*
  %bf.load108 = load i32, i32* %74, align 8
  %bf.lshr109 = lshr i32 %bf.load108, 16
  %bf.clear110 = and i32 %bf.lshr109, 255
  %idxprom111 = sext i32 %bf.clear110 to i64
  %arrayidx112 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom111
  %75 = load i8, i8* %arrayidx112, align 1
  %conv113 = zext i8 %75 to i32
  %76 = load i32, i32* @target_flags, align 4
  %and114 = and i32 %76, 33554432
  %tobool115 = icmp ne i32 %and114, 0
  %cond116 = select i1 %tobool115, i32 8, i32 4
  %add = add nsw i32 %conv113, %cond116
  %sub = sub nsw i32 %add, 1
  %77 = load i32, i32* @target_flags, align 4
  %and117 = and i32 %77, 33554432
  %tobool118 = icmp ne i32 %and117, 0
  %cond119 = select i1 %tobool118, i32 8, i32 4
  %div = sdiv i32 %sub, %cond119
  br label %cond.end

cond.end:                                         ; preds = %cond.false.103, %cond.true.99
  %cond120 = phi i32 [ %cond102, %cond.true.99 ], [ %div, %cond.false.103 ]
  br label %cond.end.121

cond.end.121:                                     ; preds = %cond.end, %cond.true.86
  %cond122 = phi i32 [ %cond88, %cond.true.86 ], [ %cond120, %cond.end ]
  br label %cond.end.123

cond.end.123:                                     ; preds = %cond.end.121, %lor.end
  %cond124 = phi i32 [ %cond, %lor.end ], [ %cond122, %cond.end.121 ]
  %add125 = add i32 %conv13, %cond124
  %78 = load i32, i32* %regno.addr, align 4
  %cmp126 = icmp ugt i32 %add125, %78
  br i1 %cmp126, label %if.then.128, label %if.end.129

if.then.128:                                      ; preds = %cond.end.123
  %79 = load i32, i32* %i, align 4
  call void @bitmap_set_bit(%struct.bitmap_head_def* @spilled_pseudos, i32 %79)
  br label %if.end.129

if.end.129:                                       ; preds = %if.then.128, %cond.end.123, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.129
  %80 = load i32, i32* %i, align 4
  %inc = add nsw i32 %80, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @finish_spills(i32 %global) #0 {
entry:
  %global.addr = alloca i32, align 4
  %chain = alloca %struct.insn_chain*, align 8
  %something_changed = alloca i32, align 4
  %i = alloca i32, align 4
  %ptr_ = alloca %struct.bitmap_element_def*, align 8
  %indx_ = alloca i32, align 4
  %bit_num_ = alloca i32, align 4
  %word_num_ = alloca i32, align 4
  %word_ = alloca i64, align 8
  %mask_ = alloca i64, align 8
  %ptr_93 = alloca %struct.bitmap_element_def*, align 8
  %indx_94 = alloca i32, align 4
  %bit_num_95 = alloca i32, align 4
  %word_num_96 = alloca i32, align 4
  %word_124 = alloca i64, align 8
  %mask_135 = alloca i64, align 8
  %ptr_166 = alloca %struct.bitmap_element_def*, align 8
  %indx_168 = alloca i32, align 4
  %bit_num_169 = alloca i32, align 4
  %word_num_170 = alloca i32, align 4
  %word_198 = alloca i64, align 8
  %mask_209 = alloca i64, align 8
  %forbidden = alloca i64, align 8
  %used_by_pseudos = alloca i64, align 8
  %used_by_pseudos2 = alloca i64, align 8
  %regno = alloca i32, align 4
  store i32 %global, i32* %global.addr, align 4
  store i32 0, i32* %something_changed, align 4
  store i32 0, i32* @n_spills, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 53
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i64, i64* @used_spill_regs, align 8
  %2 = load i32, i32* %i, align 4
  %sh_prom = zext i32 %2 to i64
  %shl = shl i64 1, %sh_prom
  %and = and i64 %1, %shl
  %tobool = icmp ne i64 %and, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %3 = load i32, i32* @n_spills, align 4
  %conv = trunc i32 %3 to i16
  %4 = load i32, i32* %i, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [53 x i16], [53 x i16]* @spill_reg_order, i32 0, i64 %idxprom
  store i16 %conv, i16* %arrayidx, align 2
  %5 = load i32, i32* %i, align 4
  %conv1 = trunc i32 %5 to i16
  %6 = load i32, i32* @n_spills, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* @n_spills, align 4
  %idxprom2 = sext i32 %6 to i64
  %arrayidx3 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_regs, i32 0, i64 %idxprom2
  store i16 %conv1, i16* %arrayidx3, align 2
  %7 = load i32, i32* @num_eliminable, align 4
  %tobool4 = icmp ne i32 %7, 0
  br i1 %tobool4, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %8 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %8 to i64
  %arrayidx6 = getelementptr inbounds [53 x i8], [53 x i8]* @regs_ever_live, i32 0, i64 %idxprom5
  %9 = load i8, i8* %arrayidx6, align 1
  %tobool7 = icmp ne i8 %9, 0
  br i1 %tobool7, label %if.end, label %if.then.8

if.then.8:                                        ; preds = %land.lhs.true
  store i32 1, i32* %something_changed, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.8, %land.lhs.true, %if.then
  %10 = load i32, i32* %i, align 4
  %idxprom9 = sext i32 %10 to i64
  %arrayidx10 = getelementptr inbounds [53 x i8], [53 x i8]* @regs_ever_live, i32 0, i64 %idxprom9
  store i8 1, i8* %arrayidx10, align 1
  br label %if.end.13

if.else:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4
  %idxprom11 = sext i32 %11 to i64
  %arrayidx12 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_reg_order, i32 0, i64 %idxprom11
  store i16 -1, i16* %arrayidx12, align 2
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.end
  br label %for.inc

for.inc:                                          ; preds = %if.end.13
  %12 = load i32, i32* %i, align 4
  %inc14 = add nsw i32 %12, 1
  store i32 %inc14, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %do.body

do.body:                                          ; preds = %for.end
  %13 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** getelementptr inbounds (%struct.bitmap_head_def, %struct.bitmap_head_def* @spilled_pseudos, i32 0, i32 0), align 8
  store %struct.bitmap_element_def* %13, %struct.bitmap_element_def** %ptr_, align 8
  store i32 0, i32* %indx_, align 4
  store i32 53, i32* %bit_num_, align 4
  store i32 0, i32* %word_num_, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body
  %14 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %cmp15 = icmp ne %struct.bitmap_element_def* %14, null
  br i1 %cmp15, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %15 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i32 0, i32 2
  %16 = load i32, i32* %indx, align 4
  %17 = load i32, i32* %indx_, align 4
  %cmp17 = icmp ult i32 %16, %17
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %18 = phi i1 [ false, %while.cond ], [ %cmp17, %land.rhs ]
  br i1 %18, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %19 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %next = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %19, i32 0, i32 0
  %20 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next, align 8
  store %struct.bitmap_element_def* %20, %struct.bitmap_element_def** %ptr_, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %21 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %cmp19 = icmp ne %struct.bitmap_element_def* %21, null
  br i1 %cmp19, label %land.lhs.true.21, label %if.end.26

land.lhs.true.21:                                 ; preds = %while.end
  %22 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %indx22 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %22, i32 0, i32 2
  %23 = load i32, i32* %indx22, align 4
  %24 = load i32, i32* %indx_, align 4
  %cmp23 = icmp ne i32 %23, %24
  br i1 %cmp23, label %if.then.25, label %if.end.26

if.then.25:                                       ; preds = %land.lhs.true.21
  store i32 0, i32* %bit_num_, align 4
  store i32 0, i32* %word_num_, align 4
  br label %if.end.26

if.end.26:                                        ; preds = %if.then.25, %land.lhs.true.21, %while.end
  br label %for.cond.27

for.cond.27:                                      ; preds = %for.inc.82, %if.end.26
  %25 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %cmp28 = icmp ne %struct.bitmap_element_def* %25, null
  br i1 %cmp28, label %for.body.30, label %for.end.84

for.body.30:                                      ; preds = %for.cond.27
  br label %for.cond.31

for.cond.31:                                      ; preds = %for.inc.79, %for.body.30
  %26 = load i32, i32* %word_num_, align 4
  %cmp32 = icmp ult i32 %26, 2
  br i1 %cmp32, label %for.body.34, label %for.end.81

for.body.34:                                      ; preds = %for.cond.31
  %27 = load i32, i32* %word_num_, align 4
  %idxprom35 = zext i32 %27 to i64
  %28 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %bits = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %28, i32 0, i32 3
  %arrayidx36 = getelementptr inbounds [2 x i64], [2 x i64]* %bits, i32 0, i64 %idxprom35
  %29 = load i64, i64* %arrayidx36, align 8
  store i64 %29, i64* %word_, align 8
  %30 = load i64, i64* %word_, align 8
  %cmp37 = icmp ne i64 %30, 0
  br i1 %cmp37, label %if.then.39, label %if.end.78

if.then.39:                                       ; preds = %for.body.34
  br label %for.cond.40

for.cond.40:                                      ; preds = %for.inc.75, %if.then.39
  %31 = load i32, i32* %bit_num_, align 4
  %cmp41 = icmp ult i32 %31, 64
  br i1 %cmp41, label %for.body.43, label %for.end.77

for.body.43:                                      ; preds = %for.cond.40
  %32 = load i32, i32* %bit_num_, align 4
  %sh_prom44 = zext i32 %32 to i64
  %shl45 = shl i64 1, %sh_prom44
  store i64 %shl45, i64* %mask_, align 8
  %33 = load i64, i64* %word_, align 8
  %34 = load i64, i64* %mask_, align 8
  %and46 = and i64 %33, %34
  %cmp47 = icmp ne i64 %and46, 0
  br i1 %cmp47, label %if.then.49, label %if.end.74

if.then.49:                                       ; preds = %for.body.43
  %35 = load i64, i64* %mask_, align 8
  %neg = xor i64 %35, -1
  %36 = load i64, i64* %word_, align 8
  %and50 = and i64 %36, %neg
  store i64 %and50, i64* %word_, align 8
  %37 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %indx51 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %37, i32 0, i32 2
  %38 = load i32, i32* %indx51, align 4
  %mul = mul i32 %38, 128
  %39 = load i32, i32* %word_num_, align 4
  %mul52 = mul i32 %39, 64
  %add = add i32 %mul, %mul52
  %40 = load i32, i32* %bit_num_, align 4
  %add53 = add i32 %add, %40
  store i32 %add53, i32* %i, align 4
  %41 = load i32, i32* %i, align 4
  %idxprom54 = sext i32 %41 to i64
  %42 = load i16*, i16** @reg_renumber, align 8
  %arrayidx55 = getelementptr inbounds i16, i16* %42, i64 %idxprom54
  %43 = load i16, i16* %arrayidx55, align 2
  %conv56 = sext i16 %43 to i32
  %cmp57 = icmp slt i32 %conv56, 0
  br i1 %cmp57, label %if.then.59, label %if.end.60

if.then.59:                                       ; preds = %if.then.49
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 3642, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.finish_spills, i32 0, i32 0)) #5
  unreachable

if.end.60:                                        ; preds = %if.then.49
  %44 = load i32, i32* %i, align 4
  %idxprom61 = sext i32 %44 to i64
  %45 = load i16*, i16** @reg_renumber, align 8
  %arrayidx62 = getelementptr inbounds i16, i16* %45, i64 %idxprom61
  %46 = load i16, i16* %arrayidx62, align 2
  %conv63 = sext i16 %46 to i32
  %sh_prom64 = zext i32 %conv63 to i64
  %shl65 = shl i64 1, %sh_prom64
  %47 = load i32, i32* %i, align 4
  %idxprom66 = sext i32 %47 to i64
  %48 = load i64*, i64** @pseudo_previous_regs, align 8
  %arrayidx67 = getelementptr inbounds i64, i64* %48, i64 %idxprom66
  %49 = load i64, i64* %arrayidx67, align 8
  %or = or i64 %49, %shl65
  store i64 %or, i64* %arrayidx67, align 8
  %50 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %50 to i64
  %51 = load i16*, i16** @reg_renumber, align 8
  %arrayidx69 = getelementptr inbounds i16, i16* %51, i64 %idxprom68
  store i16 -1, i16* %arrayidx69, align 2
  store i32 1, i32* %something_changed, align 4
  %52 = load i64, i64* %word_, align 8
  %cmp70 = icmp eq i64 %52, 0
  br i1 %cmp70, label %if.then.72, label %if.end.73

if.then.72:                                       ; preds = %if.end.60
  br label %for.end.77

if.end.73:                                        ; preds = %if.end.60
  br label %if.end.74

if.end.74:                                        ; preds = %if.end.73, %for.body.43
  br label %for.inc.75

for.inc.75:                                       ; preds = %if.end.74
  %53 = load i32, i32* %bit_num_, align 4
  %inc76 = add i32 %53, 1
  store i32 %inc76, i32* %bit_num_, align 4
  br label %for.cond.40

for.end.77:                                       ; preds = %if.then.72, %for.cond.40
  br label %if.end.78

if.end.78:                                        ; preds = %for.end.77, %for.body.34
  store i32 0, i32* %bit_num_, align 4
  br label %for.inc.79

for.inc.79:                                       ; preds = %if.end.78
  %54 = load i32, i32* %word_num_, align 4
  %inc80 = add i32 %54, 1
  store i32 %inc80, i32* %word_num_, align 4
  br label %for.cond.31

for.end.81:                                       ; preds = %for.cond.31
  store i32 0, i32* %word_num_, align 4
  br label %for.inc.82

for.inc.82:                                       ; preds = %for.end.81
  %55 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %next83 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %55, i32 0, i32 0
  %56 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next83, align 8
  store %struct.bitmap_element_def* %56, %struct.bitmap_element_def** %ptr_, align 8
  br label %for.cond.27

for.end.84:                                       ; preds = %for.cond.27
  br label %do.end

do.end:                                           ; preds = %for.end.84
  %57 = load i32, i32* %global.addr, align 4
  %tobool85 = icmp ne i32 %57, 0
  br i1 %tobool85, label %if.then.86, label %if.end.274

if.then.86:                                       ; preds = %do.end
  %58 = load i64*, i64** @pseudo_forbidden_regs, align 8
  %59 = bitcast i64* %58 to i8*
  %60 = load i32, i32* @max_regno, align 4
  %conv87 = sext i32 %60 to i64
  %mul88 = mul i64 %conv87, 8
  call void @llvm.memset.p0i8.i64(i8* %59, i8 0, i64 %mul88, i32 1, i1 false)
  %61 = load %struct.insn_chain*, %struct.insn_chain** @insns_need_reload, align 8
  store %struct.insn_chain* %61, %struct.insn_chain** %chain, align 8
  br label %for.cond.89

for.cond.89:                                      ; preds = %for.inc.242, %if.then.86
  %62 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %tobool90 = icmp ne %struct.insn_chain* %62, null
  br i1 %tobool90, label %for.body.91, label %for.end.243

for.body.91:                                      ; preds = %for.cond.89
  br label %do.body.92

do.body.92:                                       ; preds = %for.body.91
  %63 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %live_throughout = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %63, i32 0, i32 5
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %live_throughout, i32 0, i32 0
  %64 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8
  store %struct.bitmap_element_def* %64, %struct.bitmap_element_def** %ptr_93, align 8
  store i32 0, i32* %indx_94, align 4
  store i32 53, i32* %bit_num_95, align 4
  store i32 0, i32* %word_num_96, align 4
  br label %while.cond.97

while.cond.97:                                    ; preds = %while.body.105, %do.body.92
  %65 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_93, align 8
  %cmp98 = icmp ne %struct.bitmap_element_def* %65, null
  br i1 %cmp98, label %land.rhs.100, label %land.end.104

land.rhs.100:                                     ; preds = %while.cond.97
  %66 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_93, align 8
  %indx101 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %66, i32 0, i32 2
  %67 = load i32, i32* %indx101, align 4
  %68 = load i32, i32* %indx_94, align 4
  %cmp102 = icmp ult i32 %67, %68
  br label %land.end.104

land.end.104:                                     ; preds = %land.rhs.100, %while.cond.97
  %69 = phi i1 [ false, %while.cond.97 ], [ %cmp102, %land.rhs.100 ]
  br i1 %69, label %while.body.105, label %while.end.107

while.body.105:                                   ; preds = %land.end.104
  %70 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_93, align 8
  %next106 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %70, i32 0, i32 0
  %71 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next106, align 8
  store %struct.bitmap_element_def* %71, %struct.bitmap_element_def** %ptr_93, align 8
  br label %while.cond.97

while.end.107:                                    ; preds = %land.end.104
  %72 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_93, align 8
  %cmp108 = icmp ne %struct.bitmap_element_def* %72, null
  br i1 %cmp108, label %land.lhs.true.110, label %if.end.115

land.lhs.true.110:                                ; preds = %while.end.107
  %73 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_93, align 8
  %indx111 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %73, i32 0, i32 2
  %74 = load i32, i32* %indx111, align 4
  %75 = load i32, i32* %indx_94, align 4
  %cmp112 = icmp ne i32 %74, %75
  br i1 %cmp112, label %if.then.114, label %if.end.115

if.then.114:                                      ; preds = %land.lhs.true.110
  store i32 0, i32* %bit_num_95, align 4
  store i32 0, i32* %word_num_96, align 4
  br label %if.end.115

if.end.115:                                       ; preds = %if.then.114, %land.lhs.true.110, %while.end.107
  br label %for.cond.116

for.cond.116:                                     ; preds = %for.inc.161, %if.end.115
  %76 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_93, align 8
  %cmp117 = icmp ne %struct.bitmap_element_def* %76, null
  br i1 %cmp117, label %for.body.119, label %for.end.163

for.body.119:                                     ; preds = %for.cond.116
  br label %for.cond.120

for.cond.120:                                     ; preds = %for.inc.158, %for.body.119
  %77 = load i32, i32* %word_num_96, align 4
  %cmp121 = icmp ult i32 %77, 2
  br i1 %cmp121, label %for.body.123, label %for.end.160

for.body.123:                                     ; preds = %for.cond.120
  %78 = load i32, i32* %word_num_96, align 4
  %idxprom125 = zext i32 %78 to i64
  %79 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_93, align 8
  %bits126 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %79, i32 0, i32 3
  %arrayidx127 = getelementptr inbounds [2 x i64], [2 x i64]* %bits126, i32 0, i64 %idxprom125
  %80 = load i64, i64* %arrayidx127, align 8
  store i64 %80, i64* %word_124, align 8
  %81 = load i64, i64* %word_124, align 8
  %cmp128 = icmp ne i64 %81, 0
  br i1 %cmp128, label %if.then.130, label %if.end.157

if.then.130:                                      ; preds = %for.body.123
  br label %for.cond.131

for.cond.131:                                     ; preds = %for.inc.154, %if.then.130
  %82 = load i32, i32* %bit_num_95, align 4
  %cmp132 = icmp ult i32 %82, 64
  br i1 %cmp132, label %for.body.134, label %for.end.156

for.body.134:                                     ; preds = %for.cond.131
  %83 = load i32, i32* %bit_num_95, align 4
  %sh_prom136 = zext i32 %83 to i64
  %shl137 = shl i64 1, %sh_prom136
  store i64 %shl137, i64* %mask_135, align 8
  %84 = load i64, i64* %word_124, align 8
  %85 = load i64, i64* %mask_135, align 8
  %and138 = and i64 %84, %85
  %cmp139 = icmp ne i64 %and138, 0
  br i1 %cmp139, label %if.then.141, label %if.end.153

if.then.141:                                      ; preds = %for.body.134
  %86 = load i64, i64* %mask_135, align 8
  %neg142 = xor i64 %86, -1
  %87 = load i64, i64* %word_124, align 8
  %and143 = and i64 %87, %neg142
  store i64 %and143, i64* %word_124, align 8
  %88 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_93, align 8
  %indx144 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %88, i32 0, i32 2
  %89 = load i32, i32* %indx144, align 4
  %mul145 = mul i32 %89, 128
  %90 = load i32, i32* %word_num_96, align 4
  %mul146 = mul i32 %90, 64
  %add147 = add i32 %mul145, %mul146
  %91 = load i32, i32* %bit_num_95, align 4
  %add148 = add i32 %add147, %91
  store i32 %add148, i32* %i, align 4
  %92 = load i64*, i64** @pseudo_forbidden_regs, align 8
  %93 = load i32, i32* %i, align 4
  %idx.ext = sext i32 %93 to i64
  %add.ptr = getelementptr inbounds i64, i64* %92, i64 %idx.ext
  %94 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %used_spill_regs = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %94, i32 0, i32 9
  call void @ior_hard_reg_set(i64* %add.ptr, i64* %used_spill_regs)
  %95 = load i64, i64* %word_124, align 8
  %cmp149 = icmp eq i64 %95, 0
  br i1 %cmp149, label %if.then.151, label %if.end.152

if.then.151:                                      ; preds = %if.then.141
  br label %for.end.156

if.end.152:                                       ; preds = %if.then.141
  br label %if.end.153

if.end.153:                                       ; preds = %if.end.152, %for.body.134
  br label %for.inc.154

for.inc.154:                                      ; preds = %if.end.153
  %96 = load i32, i32* %bit_num_95, align 4
  %inc155 = add i32 %96, 1
  store i32 %inc155, i32* %bit_num_95, align 4
  br label %for.cond.131

for.end.156:                                      ; preds = %if.then.151, %for.cond.131
  br label %if.end.157

if.end.157:                                       ; preds = %for.end.156, %for.body.123
  store i32 0, i32* %bit_num_95, align 4
  br label %for.inc.158

for.inc.158:                                      ; preds = %if.end.157
  %97 = load i32, i32* %word_num_96, align 4
  %inc159 = add i32 %97, 1
  store i32 %inc159, i32* %word_num_96, align 4
  br label %for.cond.120

for.end.160:                                      ; preds = %for.cond.120
  store i32 0, i32* %word_num_96, align 4
  br label %for.inc.161

for.inc.161:                                      ; preds = %for.end.160
  %98 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_93, align 8
  %next162 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %98, i32 0, i32 0
  %99 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next162, align 8
  store %struct.bitmap_element_def* %99, %struct.bitmap_element_def** %ptr_93, align 8
  br label %for.cond.116

for.end.163:                                      ; preds = %for.cond.116
  br label %do.end.164

do.end.164:                                       ; preds = %for.end.163
  br label %do.body.165

do.body.165:                                      ; preds = %do.end.164
  %100 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %dead_or_set = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %100, i32 0, i32 6
  %first167 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %dead_or_set, i32 0, i32 0
  %101 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first167, align 8
  store %struct.bitmap_element_def* %101, %struct.bitmap_element_def** %ptr_166, align 8
  store i32 0, i32* %indx_168, align 4
  store i32 53, i32* %bit_num_169, align 4
  store i32 0, i32* %word_num_170, align 4
  br label %while.cond.171

while.cond.171:                                   ; preds = %while.body.179, %do.body.165
  %102 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_166, align 8
  %cmp172 = icmp ne %struct.bitmap_element_def* %102, null
  br i1 %cmp172, label %land.rhs.174, label %land.end.178

land.rhs.174:                                     ; preds = %while.cond.171
  %103 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_166, align 8
  %indx175 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %103, i32 0, i32 2
  %104 = load i32, i32* %indx175, align 4
  %105 = load i32, i32* %indx_168, align 4
  %cmp176 = icmp ult i32 %104, %105
  br label %land.end.178

land.end.178:                                     ; preds = %land.rhs.174, %while.cond.171
  %106 = phi i1 [ false, %while.cond.171 ], [ %cmp176, %land.rhs.174 ]
  br i1 %106, label %while.body.179, label %while.end.181

while.body.179:                                   ; preds = %land.end.178
  %107 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_166, align 8
  %next180 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %107, i32 0, i32 0
  %108 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next180, align 8
  store %struct.bitmap_element_def* %108, %struct.bitmap_element_def** %ptr_166, align 8
  br label %while.cond.171

while.end.181:                                    ; preds = %land.end.178
  %109 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_166, align 8
  %cmp182 = icmp ne %struct.bitmap_element_def* %109, null
  br i1 %cmp182, label %land.lhs.true.184, label %if.end.189

land.lhs.true.184:                                ; preds = %while.end.181
  %110 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_166, align 8
  %indx185 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %110, i32 0, i32 2
  %111 = load i32, i32* %indx185, align 4
  %112 = load i32, i32* %indx_168, align 4
  %cmp186 = icmp ne i32 %111, %112
  br i1 %cmp186, label %if.then.188, label %if.end.189

if.then.188:                                      ; preds = %land.lhs.true.184
  store i32 0, i32* %bit_num_169, align 4
  store i32 0, i32* %word_num_170, align 4
  br label %if.end.189

if.end.189:                                       ; preds = %if.then.188, %land.lhs.true.184, %while.end.181
  br label %for.cond.190

for.cond.190:                                     ; preds = %for.inc.238, %if.end.189
  %113 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_166, align 8
  %cmp191 = icmp ne %struct.bitmap_element_def* %113, null
  br i1 %cmp191, label %for.body.193, label %for.end.240

for.body.193:                                     ; preds = %for.cond.190
  br label %for.cond.194

for.cond.194:                                     ; preds = %for.inc.235, %for.body.193
  %114 = load i32, i32* %word_num_170, align 4
  %cmp195 = icmp ult i32 %114, 2
  br i1 %cmp195, label %for.body.197, label %for.end.237

for.body.197:                                     ; preds = %for.cond.194
  %115 = load i32, i32* %word_num_170, align 4
  %idxprom199 = zext i32 %115 to i64
  %116 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_166, align 8
  %bits200 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %116, i32 0, i32 3
  %arrayidx201 = getelementptr inbounds [2 x i64], [2 x i64]* %bits200, i32 0, i64 %idxprom199
  %117 = load i64, i64* %arrayidx201, align 8
  store i64 %117, i64* %word_198, align 8
  %118 = load i64, i64* %word_198, align 8
  %cmp202 = icmp ne i64 %118, 0
  br i1 %cmp202, label %if.then.204, label %if.end.234

if.then.204:                                      ; preds = %for.body.197
  br label %for.cond.205

for.cond.205:                                     ; preds = %for.inc.231, %if.then.204
  %119 = load i32, i32* %bit_num_169, align 4
  %cmp206 = icmp ult i32 %119, 64
  br i1 %cmp206, label %for.body.208, label %for.end.233

for.body.208:                                     ; preds = %for.cond.205
  %120 = load i32, i32* %bit_num_169, align 4
  %sh_prom210 = zext i32 %120 to i64
  %shl211 = shl i64 1, %sh_prom210
  store i64 %shl211, i64* %mask_209, align 8
  %121 = load i64, i64* %word_198, align 8
  %122 = load i64, i64* %mask_209, align 8
  %and212 = and i64 %121, %122
  %cmp213 = icmp ne i64 %and212, 0
  br i1 %cmp213, label %if.then.215, label %if.end.230

if.then.215:                                      ; preds = %for.body.208
  %123 = load i64, i64* %mask_209, align 8
  %neg216 = xor i64 %123, -1
  %124 = load i64, i64* %word_198, align 8
  %and217 = and i64 %124, %neg216
  store i64 %and217, i64* %word_198, align 8
  %125 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_166, align 8
  %indx218 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %125, i32 0, i32 2
  %126 = load i32, i32* %indx218, align 4
  %mul219 = mul i32 %126, 128
  %127 = load i32, i32* %word_num_170, align 4
  %mul220 = mul i32 %127, 64
  %add221 = add i32 %mul219, %mul220
  %128 = load i32, i32* %bit_num_169, align 4
  %add222 = add i32 %add221, %128
  store i32 %add222, i32* %i, align 4
  %129 = load i64*, i64** @pseudo_forbidden_regs, align 8
  %130 = load i32, i32* %i, align 4
  %idx.ext223 = sext i32 %130 to i64
  %add.ptr224 = getelementptr inbounds i64, i64* %129, i64 %idx.ext223
  %131 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %used_spill_regs225 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %131, i32 0, i32 9
  call void @ior_hard_reg_set(i64* %add.ptr224, i64* %used_spill_regs225)
  %132 = load i64, i64* %word_198, align 8
  %cmp226 = icmp eq i64 %132, 0
  br i1 %cmp226, label %if.then.228, label %if.end.229

if.then.228:                                      ; preds = %if.then.215
  br label %for.end.233

if.end.229:                                       ; preds = %if.then.215
  br label %if.end.230

if.end.230:                                       ; preds = %if.end.229, %for.body.208
  br label %for.inc.231

for.inc.231:                                      ; preds = %if.end.230
  %133 = load i32, i32* %bit_num_169, align 4
  %inc232 = add i32 %133, 1
  store i32 %inc232, i32* %bit_num_169, align 4
  br label %for.cond.205

for.end.233:                                      ; preds = %if.then.228, %for.cond.205
  br label %if.end.234

if.end.234:                                       ; preds = %for.end.233, %for.body.197
  store i32 0, i32* %bit_num_169, align 4
  br label %for.inc.235

for.inc.235:                                      ; preds = %if.end.234
  %134 = load i32, i32* %word_num_170, align 4
  %inc236 = add i32 %134, 1
  store i32 %inc236, i32* %word_num_170, align 4
  br label %for.cond.194

for.end.237:                                      ; preds = %for.cond.194
  store i32 0, i32* %word_num_170, align 4
  br label %for.inc.238

for.inc.238:                                      ; preds = %for.end.237
  %135 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_166, align 8
  %next239 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %135, i32 0, i32 0
  %136 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next239, align 8
  store %struct.bitmap_element_def* %136, %struct.bitmap_element_def** %ptr_166, align 8
  br label %for.cond.190

for.end.240:                                      ; preds = %for.cond.190
  br label %do.end.241

do.end.241:                                       ; preds = %for.end.240
  br label %for.inc.242

for.inc.242:                                      ; preds = %do.end.241
  %137 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %next_need_reload = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %137, i32 0, i32 2
  %138 = load %struct.insn_chain*, %struct.insn_chain** %next_need_reload, align 8
  store %struct.insn_chain* %138, %struct.insn_chain** %chain, align 8
  br label %for.cond.89

for.end.243:                                      ; preds = %for.cond.89
  store i32 53, i32* %i, align 4
  br label %for.cond.244

for.cond.244:                                     ; preds = %for.inc.271, %for.end.243
  %139 = load i32, i32* %i, align 4
  %140 = load i32, i32* @max_regno, align 4
  %cmp245 = icmp slt i32 %139, %140
  br i1 %cmp245, label %for.body.247, label %for.end.273

for.body.247:                                     ; preds = %for.cond.244
  %141 = load i32, i32* %i, align 4
  %idxprom248 = sext i32 %141 to i64
  %142 = load i16*, i16** @reg_old_renumber, align 8
  %arrayidx249 = getelementptr inbounds i16, i16* %142, i64 %idxprom248
  %143 = load i16, i16* %arrayidx249, align 2
  %conv250 = sext i16 %143 to i32
  %144 = load i32, i32* %i, align 4
  %idxprom251 = sext i32 %144 to i64
  %145 = load i16*, i16** @reg_renumber, align 8
  %arrayidx252 = getelementptr inbounds i16, i16* %145, i64 %idxprom251
  %146 = load i16, i16* %arrayidx252, align 2
  %conv253 = sext i16 %146 to i32
  %cmp254 = icmp ne i32 %conv250, %conv253
  br i1 %cmp254, label %if.then.256, label %if.end.270

if.then.256:                                      ; preds = %for.body.247
  %147 = load i64, i64* @bad_spill_regs_global, align 8
  store i64 %147, i64* %forbidden, align 8
  %148 = load i32, i32* %i, align 4
  %idxprom257 = sext i32 %148 to i64
  %149 = load i64*, i64** @pseudo_forbidden_regs, align 8
  %arrayidx258 = getelementptr inbounds i64, i64* %149, i64 %idxprom257
  %150 = load i64, i64* %arrayidx258, align 8
  %151 = load i64, i64* %forbidden, align 8
  %or259 = or i64 %151, %150
  store i64 %or259, i64* %forbidden, align 8
  %152 = load i32, i32* %i, align 4
  %idxprom260 = sext i32 %152 to i64
  %153 = load i64*, i64** @pseudo_previous_regs, align 8
  %arrayidx261 = getelementptr inbounds i64, i64* %153, i64 %idxprom260
  %154 = load i64, i64* %arrayidx261, align 8
  %155 = load i64, i64* %forbidden, align 8
  %or262 = or i64 %155, %154
  store i64 %or262, i64* %forbidden, align 8
  %156 = load i32, i32* %i, align 4
  %157 = load i64, i64* %forbidden, align 8
  call void @retry_global_alloc(i32 %156, i64 %157)
  %158 = load i32, i32* %i, align 4
  %idxprom263 = sext i32 %158 to i64
  %159 = load i16*, i16** @reg_renumber, align 8
  %arrayidx264 = getelementptr inbounds i16, i16* %159, i64 %idxprom263
  %160 = load i16, i16* %arrayidx264, align 2
  %conv265 = sext i16 %160 to i32
  %cmp266 = icmp sge i32 %conv265, 0
  br i1 %cmp266, label %if.then.268, label %if.end.269

if.then.268:                                      ; preds = %if.then.256
  %161 = load i32, i32* %i, align 4
  call void @bitmap_clear_bit(%struct.bitmap_head_def* @spilled_pseudos, i32 %161)
  br label %if.end.269

if.end.269:                                       ; preds = %if.then.268, %if.then.256
  br label %if.end.270

if.end.270:                                       ; preds = %if.end.269, %for.body.247
  br label %for.inc.271

for.inc.271:                                      ; preds = %if.end.270
  %162 = load i32, i32* %i, align 4
  %inc272 = add nsw i32 %162, 1
  store i32 %inc272, i32* %i, align 4
  br label %for.cond.244

for.end.273:                                      ; preds = %for.cond.244
  br label %if.end.274

if.end.274:                                       ; preds = %for.end.273, %do.end
  %163 = load %struct.insn_chain*, %struct.insn_chain** @reload_insn_chain, align 8
  store %struct.insn_chain* %163, %struct.insn_chain** %chain, align 8
  br label %for.cond.275

for.cond.275:                                     ; preds = %for.inc.307, %if.end.274
  %164 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %tobool276 = icmp ne %struct.insn_chain* %164, null
  br i1 %tobool276, label %for.body.277, label %for.end.309

for.body.277:                                     ; preds = %for.cond.275
  %165 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %live_throughout278 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %165, i32 0, i32 5
  %166 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %live_throughout279 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %166, i32 0, i32 5
  %call = call i32 @bitmap_operation(%struct.bitmap_head_def* %live_throughout278, %struct.bitmap_head_def* %live_throughout279, %struct.bitmap_head_def* @spilled_pseudos, i32 1)
  %167 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %dead_or_set280 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %167, i32 0, i32 6
  %168 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %dead_or_set281 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %168, i32 0, i32 6
  %call282 = call i32 @bitmap_operation(%struct.bitmap_head_def* %dead_or_set280, %struct.bitmap_head_def* %dead_or_set281, %struct.bitmap_head_def* @spilled_pseudos, i32 1)
  %169 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %need_reload = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %169, i32 0, i32 11
  %bf.load = load i8, i8* %need_reload, align 2
  %bf.clear = and i8 %bf.load, 1
  %bf.cast = zext i8 %bf.clear to i32
  %tobool283 = icmp ne i32 %bf.cast, 0
  br i1 %tobool283, label %if.then.284, label %if.end.306

if.then.284:                                      ; preds = %for.body.277
  br label %do.body.285

do.body.285:                                      ; preds = %if.then.284
  store i64 0, i64* %used_by_pseudos, align 8
  %170 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %live_throughout286 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %170, i32 0, i32 5
  call void @reg_set_to_hard_reg_set(i64* %used_by_pseudos, %struct.bitmap_head_def* %live_throughout286)
  br label %do.end.287

do.end.287:                                       ; preds = %do.body.285
  br label %do.body.288

do.body.288:                                      ; preds = %do.end.287
  store i64 0, i64* %used_by_pseudos2, align 8
  %171 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %dead_or_set289 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %171, i32 0, i32 6
  call void @reg_set_to_hard_reg_set(i64* %used_by_pseudos2, %struct.bitmap_head_def* %dead_or_set289)
  br label %do.end.290

do.end.290:                                       ; preds = %do.body.288
  %172 = load i64, i64* %used_by_pseudos2, align 8
  %173 = load i64, i64* %used_by_pseudos, align 8
  %or291 = or i64 %173, %172
  store i64 %or291, i64* %used_by_pseudos, align 8
  %174 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %used_spill_regs292 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %174, i32 0, i32 9
  %175 = load i64, i64* %used_spill_regs292, align 8
  store i64 %175, i64* %used_by_pseudos2, align 8
  %176 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %live_throughout293 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %176, i32 0, i32 5
  call void @compute_use_by_pseudos(i64* %used_by_pseudos, %struct.bitmap_head_def* %live_throughout293)
  %177 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %dead_or_set294 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %177, i32 0, i32 6
  call void @compute_use_by_pseudos(i64* %used_by_pseudos, %struct.bitmap_head_def* %dead_or_set294)
  %178 = load i64, i64* %used_by_pseudos, align 8
  %neg295 = xor i64 %178, -1
  %179 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %used_spill_regs296 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %179, i32 0, i32 9
  store i64 %neg295, i64* %used_spill_regs296, align 8
  %180 = load i64, i64* @used_spill_regs, align 8
  %181 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %used_spill_regs297 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %181, i32 0, i32 9
  %182 = load i64, i64* %used_spill_regs297, align 8
  %and298 = and i64 %182, %180
  store i64 %and298, i64* %used_spill_regs297, align 8
  %183 = load i64, i64* %used_by_pseudos2, align 8
  %184 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %used_spill_regs299 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %184, i32 0, i32 9
  %185 = load i64, i64* %used_spill_regs299, align 8
  %neg300 = xor i64 %185, -1
  %and301 = and i64 %183, %neg300
  %cmp302 = icmp eq i64 0, %and301
  br i1 %cmp302, label %if.then.304, label %if.end.305

if.then.304:                                      ; preds = %do.end.290
  br label %ok

if.end.305:                                       ; preds = %do.end.290
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 3721, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.finish_spills, i32 0, i32 0)) #5
  unreachable

ok:                                               ; preds = %if.then.304
  br label %if.end.306

if.end.306:                                       ; preds = %ok, %for.body.277
  br label %for.inc.307

for.inc.307:                                      ; preds = %if.end.306
  %186 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %next308 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %186, i32 0, i32 0
  %187 = load %struct.insn_chain*, %struct.insn_chain** %next308, align 8
  store %struct.insn_chain* %187, %struct.insn_chain** %chain, align 8
  br label %for.cond.275

for.end.309:                                      ; preds = %for.cond.275
  store i32 53, i32* %i, align 4
  br label %for.cond.310

for.cond.310:                                     ; preds = %for.inc.343, %for.end.309
  %188 = load i32, i32* %i, align 4
  %189 = load i32, i32* @max_regno, align 4
  %cmp311 = icmp slt i32 %188, %189
  br i1 %cmp311, label %for.body.313, label %for.end.345

for.body.313:                                     ; preds = %for.cond.310
  %190 = load i32, i32* %i, align 4
  %idxprom314 = sext i32 %190 to i64
  %191 = load i16*, i16** @reg_renumber, align 8
  %arrayidx315 = getelementptr inbounds i16, i16* %191, i64 %idxprom314
  %192 = load i16, i16* %arrayidx315, align 2
  %conv316 = sext i16 %192 to i32
  store i32 %conv316, i32* %regno, align 4
  %193 = load i32, i32* %i, align 4
  %idxprom317 = sext i32 %193 to i64
  %194 = load i16*, i16** @reg_old_renumber, align 8
  %arrayidx318 = getelementptr inbounds i16, i16* %194, i64 %idxprom317
  %195 = load i16, i16* %arrayidx318, align 2
  %conv319 = sext i16 %195 to i32
  %196 = load i32, i32* %regno, align 4
  %cmp320 = icmp eq i32 %conv319, %196
  br i1 %cmp320, label %if.then.322, label %if.end.323

if.then.322:                                      ; preds = %for.body.313
  br label %for.inc.343

if.end.323:                                       ; preds = %for.body.313
  %197 = load i32, i32* %i, align 4
  %198 = load i32, i32* %i, align 4
  %idxprom324 = sext i32 %198 to i64
  %199 = load i16*, i16** @reg_old_renumber, align 8
  %arrayidx325 = getelementptr inbounds i16, i16* %199, i64 %idxprom324
  %200 = load i16, i16* %arrayidx325, align 2
  %conv326 = sext i16 %200 to i32
  call void @alter_reg(i32 %197, i32 %conv326)
  %201 = load i32, i32* %regno, align 4
  %conv327 = trunc i32 %201 to i16
  %202 = load i32, i32* %i, align 4
  %idxprom328 = sext i32 %202 to i64
  %203 = load i16*, i16** @reg_old_renumber, align 8
  %arrayidx329 = getelementptr inbounds i16, i16* %203, i64 %idxprom328
  store i16 %conv327, i16* %arrayidx329, align 2
  %204 = load %struct._IO_FILE*, %struct._IO_FILE** @rtl_dump_file, align 8
  %tobool330 = icmp ne %struct._IO_FILE* %204, null
  br i1 %tobool330, label %if.then.331, label %if.end.342

if.then.331:                                      ; preds = %if.end.323
  %205 = load i32, i32* %regno, align 4
  %cmp332 = icmp eq i32 %205, -1
  br i1 %cmp332, label %if.then.334, label %if.else.336

if.then.334:                                      ; preds = %if.then.331
  %206 = load %struct._IO_FILE*, %struct._IO_FILE** @rtl_dump_file, align 8
  %207 = load i32, i32* %i, align 4
  %call335 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %206, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.34, i32 0, i32 0), i32 %207)
  br label %if.end.341

if.else.336:                                      ; preds = %if.then.331
  %208 = load %struct._IO_FILE*, %struct._IO_FILE** @rtl_dump_file, align 8
  %209 = load i32, i32* %i, align 4
  %210 = load i32, i32* %i, align 4
  %idxprom337 = sext i32 %210 to i64
  %211 = load i16*, i16** @reg_renumber, align 8
  %arrayidx338 = getelementptr inbounds i16, i16* %211, i64 %idxprom337
  %212 = load i16, i16* %arrayidx338, align 2
  %conv339 = sext i16 %212 to i32
  %call340 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %208, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.35, i32 0, i32 0), i32 %209, i32 %conv339)
  br label %if.end.341

if.end.341:                                       ; preds = %if.else.336, %if.then.334
  br label %if.end.342

if.end.342:                                       ; preds = %if.end.341, %if.end.323
  br label %for.inc.343

for.inc.343:                                      ; preds = %if.end.342, %if.then.322
  %213 = load i32, i32* %i, align 4
  %inc344 = add nsw i32 %213, 1
  store i32 %inc344, i32* %i, align 4
  br label %for.cond.310

for.end.345:                                      ; preds = %for.cond.310
  %214 = load i32, i32* %something_changed, align 4
  ret i32 %214
}

declare %struct.rtx_def* @assign_stack_local(i32, i64, i32) #1

declare i64 @get_frame_size() #1

; Function Attrs: nounwind uwtable
define internal void @set_initial_elim_offsets() #0 {
entry:
  %ep = alloca %struct.elim_table*, align 8
  %0 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %0, %struct.elim_table** %ep, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %2 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %2, i64 4
  %cmp = icmp ult %struct.elim_table* %1, %arrayidx
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %from = getelementptr inbounds %struct.elim_table, %struct.elim_table* %3, i32 0, i32 0
  %4 = load i32, i32* %from, align 4
  %5 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to = getelementptr inbounds %struct.elim_table, %struct.elim_table* %5, i32 0, i32 1
  %6 = load i32, i32* %to, align 4
  %call = call i64 @ix86_initial_elimination_offset(i32 %4, i32 %6)
  %conv = trunc i64 %call to i32
  %7 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %initial_offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %7, i32 0, i32 2
  store i32 %conv, i32* %initial_offset, align 4
  %8 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %initial_offset1 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %8, i32 0, i32 2
  %9 = load i32, i32* %initial_offset1, align 4
  %10 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %10, i32 0, i32 5
  store i32 %9, i32* %offset, align 4
  %11 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %previous_offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %11, i32 0, i32 6
  store i32 %9, i32* %previous_offset, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %12, i32 1
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* @num_not_at_initial_offset, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @set_initial_label_offsets() #0 {
entry:
  %x = alloca %struct.rtx_def*, align 8
  %call = call i32 @get_first_label_num()
  %idxprom = sext i32 %call to i64
  %0 = load i8*, i8** @offsets_known_at, align 8
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 %idxprom
  %1 = load i32, i32* @num_labels, align 4
  %conv = sext i32 %1 to i64
  call void @llvm.memset.p0i8.i64(i8* %arrayidx, i8 0, i64 %conv, i32 1, i1 false)
  %2 = load %struct.function*, %struct.function** @cfun, align 8
  %expr = getelementptr inbounds %struct.function, %struct.function* %2, i32 0, i32 2
  %3 = load %struct.expr_status*, %struct.expr_status** %expr, align 8
  %x_forced_labels = getelementptr inbounds %struct.expr_status, %struct.expr_status* %3, i32 0, i32 5
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x_forced_labels, align 8
  store %struct.rtx_def* %4, %struct.rtx_def** %x, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %tobool = icmp ne %struct.rtx_def* %5, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx1 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx1 to %struct.rtx_def**
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %tobool2 = icmp ne %struct.rtx_def* %7, null
  br i1 %tobool2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i32 0, i64 0
  %rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rtx5, align 8
  call void @set_label_offsets(%struct.rtx_def* %9, %struct.rtx_def* null, i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i32 0, i64 1
  %rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rtx8, align 8
  store %struct.rtx_def* %11, %struct.rtx_def** %x, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %x, i32 %mem_mode, %struct.rtx_def* %insn) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %mem_mode.addr = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %ep = alloca %struct.elim_table*, align 8
  %regno = alloca i32, align 4
  %new = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %copied = alloca i32, align 4
  %new0 = alloca %struct.rtx_def*, align 8
  %new1 = alloca %struct.rtx_def*, align 8
  %new0426 = alloca %struct.rtx_def*, align 8
  %new1431 = alloca %struct.rtx_def*, align 8
  %x_size = alloca i32, align 4
  %new_size = alloca i32, align 4
  %new_x = alloca %struct.rtx_def*, align 8
  %copied_vec = alloca i32, align 4
  %new_v = alloca %struct.rtvec_def*, align 8
  %new_x764 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %mem_mode, i32* %mem_mode.addr, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  store i32 0, i32* %copied, align 4
  %2 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %tobool = icmp ne %union.tree_node* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %code, align 4
  switch i32 %4, label %sw.default [
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 58, label %sw.bb
    i32 68, label %sw.bb
    i32 36, label %sw.bb
    i32 59, label %sw.bb
    i32 69, label %sw.bb
    i32 40, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 51, label %sw.bb
    i32 70, label %sw.bb.1
    i32 61, label %sw.bb.9
    i32 75, label %sw.bb.95
    i32 78, label %sw.bb.346
    i32 50, label %sw.bb.425
    i32 74, label %sw.bb.425
    i32 76, label %sw.bb.425
    i32 79, label %sw.bb.425
    i32 81, label %sw.bb.425
    i32 80, label %sw.bb.425
    i32 82, label %sw.bb.425
    i32 83, label %sw.bb.425
    i32 84, label %sw.bb.425
    i32 85, label %sw.bb.425
    i32 91, label %sw.bb.425
    i32 88, label %sw.bb.425
    i32 89, label %sw.bb.425
    i32 90, label %sw.bb.425
    i32 87, label %sw.bb.425
    i32 102, label %sw.bb.425
    i32 103, label %sw.bb.425
    i32 104, label %sw.bb.425
    i32 105, label %sw.bb.425
    i32 108, label %sw.bb.425
    i32 109, label %sw.bb.425
    i32 106, label %sw.bb.425
    i32 107, label %sw.bb.425
    i32 110, label %sw.bb.425
    i32 111, label %sw.bb.425
    i32 3, label %sw.bb.458
    i32 4, label %sw.bb.502
    i32 97, label %sw.bb.529
    i32 99, label %sw.bb.529
    i32 96, label %sw.bb.529
    i32 98, label %sw.bb.529
    i32 64, label %sw.bb.529
    i32 77, label %sw.bb.529
    i32 86, label %sw.bb.529
    i32 120, label %sw.bb.529
    i32 121, label %sw.bb.529
    i32 122, label %sw.bb.529
    i32 123, label %sw.bb.529
    i32 124, label %sw.bb.529
    i32 125, label %sw.bb.529
    i32 126, label %sw.bb.529
    i32 128, label %sw.bb.529
    i32 127, label %sw.bb.529
    i32 129, label %sw.bb.529
    i32 130, label %sw.bb.529
    i32 131, label %sw.bb.529
    i32 63, label %sw.bb.545
    i32 66, label %sw.bb.641
    i32 48, label %sw.bb.666
    i32 49, label %sw.bb.682
    i32 41, label %sw.bb.682
    i32 47, label %sw.bb.682
  ]

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %5, %struct.rtx_def** %retval
  br label %return

sw.bb.1:                                          ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %7, i32 0, %struct.rtx_def* %8)
  store %struct.rtx_def* %call, %struct.rtx_def** %new, align 8
  %9 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load2 = load i32, i32* %10, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  %cmp = icmp eq i32 %bf.clear3, 66
  br i1 %cmp, label %if.then.4, label %if.end.8

if.then.4:                                        ; preds = %sw.bb.1
  %11 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %fld5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i32 0, i64 0
  %rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rtx7, align 8
  store %struct.rtx_def* %12, %struct.rtx_def** %retval
  br label %return

if.end.8:                                         ; preds = %sw.bb.1
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %13, %struct.rtx_def** %retval
  br label %return

sw.bb.9:                                          ; preds = %if.end
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx11 to i32*
  %15 = load i32, i32* %rtuint, align 4
  store i32 %15, i32* %regno, align 4
  %16 = load i32, i32* %regno, align 4
  %cmp12 = icmp slt i32 %16, 53
  br i1 %cmp12, label %if.then.13, label %if.else

if.then.13:                                       ; preds = %sw.bb.9
  %17 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %17, %struct.elim_table** %ep, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.13
  %18 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %19 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx14 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %19, i64 4
  %cmp15 = icmp ult %struct.elim_table* %18, %arrayidx14
  br i1 %cmp15, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %20 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %from_rtx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %20, i32 0, i32 8
  %21 = load %struct.rtx_def*, %struct.rtx_def** %from_rtx, align 8
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %cmp16 = icmp eq %struct.rtx_def* %21, %22
  br i1 %cmp16, label %land.lhs.true, label %if.end.20

land.lhs.true:                                    ; preds = %for.body
  %23 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate = getelementptr inbounds %struct.elim_table, %struct.elim_table* %23, i32 0, i32 3
  %24 = load i32, i32* %can_eliminate, align 4
  %tobool17 = icmp ne i32 %24, 0
  br i1 %tobool17, label %if.then.18, label %if.end.20

if.then.18:                                       ; preds = %land.lhs.true
  %25 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to_rtx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %25, i32 0, i32 9
  %26 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx, align 8
  %27 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %previous_offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %27, i32 0, i32 6
  %28 = load i32, i32* %previous_offset, align 4
  %conv = sext i32 %28 to i64
  %call19 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %26, i64 %conv)
  store %struct.rtx_def* %call19, %struct.rtx_def** %retval
  br label %return

if.end.20:                                        ; preds = %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.20
  %29 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %29, i32 1
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.94

if.else:                                          ; preds = %sw.bb.9
  %30 = load i16*, i16** @reg_renumber, align 8
  %tobool21 = icmp ne i16* %30, null
  br i1 %tobool21, label %land.lhs.true.22, label %if.end.93

land.lhs.true.22:                                 ; preds = %if.else
  %31 = load i32, i32* %regno, align 4
  %idxprom = sext i32 %31 to i64
  %32 = load i16*, i16** @reg_renumber, align 8
  %arrayidx23 = getelementptr inbounds i16, i16* %32, i64 %idxprom
  %33 = load i16, i16* %arrayidx23, align 2
  %conv24 = sext i16 %33 to i32
  %cmp25 = icmp slt i32 %conv24, 0
  br i1 %cmp25, label %land.lhs.true.27, label %if.end.93

land.lhs.true.27:                                 ; preds = %land.lhs.true.22
  %34 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %tobool28 = icmp ne %struct.rtx_def** %34, null
  br i1 %tobool28, label %land.lhs.true.29, label %if.end.93

land.lhs.true.29:                                 ; preds = %land.lhs.true.27
  %35 = load i32, i32* %regno, align 4
  %idxprom30 = sext i32 %35 to i64
  %36 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx31 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %36, i64 %idxprom30
  %37 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx31, align 8
  %tobool32 = icmp ne %struct.rtx_def* %37, null
  br i1 %tobool32, label %land.lhs.true.33, label %if.end.93

land.lhs.true.33:                                 ; preds = %land.lhs.true.29
  %38 = load i32, i32* %regno, align 4
  %idxprom34 = sext i32 %38 to i64
  %39 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx35 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %39, i64 %idxprom34
  %40 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx35, align 8
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load36 = load i32, i32* %41, align 8
  %bf.clear37 = and i32 %bf.load36, 65535
  %cmp38 = icmp eq i32 %bf.clear37, 67
  br i1 %cmp38, label %if.end.93, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.33
  %42 = load i32, i32* %regno, align 4
  %idxprom40 = sext i32 %42 to i64
  %43 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx41 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %43, i64 %idxprom40
  %44 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx41, align 8
  %45 = bitcast %struct.rtx_def* %44 to i32*
  %bf.load42 = load i32, i32* %45, align 8
  %bf.clear43 = and i32 %bf.load42, 65535
  %cmp44 = icmp eq i32 %bf.clear43, 68
  br i1 %cmp44, label %if.end.93, label %lor.lhs.false.46

lor.lhs.false.46:                                 ; preds = %lor.lhs.false
  %46 = load i32, i32* %regno, align 4
  %idxprom47 = sext i32 %46 to i64
  %47 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx48 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %47, i64 %idxprom47
  %48 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx48, align 8
  %49 = bitcast %struct.rtx_def* %48 to i32*
  %bf.load49 = load i32, i32* %49, align 8
  %bf.clear50 = and i32 %bf.load49, 65535
  %cmp51 = icmp eq i32 %bf.clear50, 54
  br i1 %cmp51, label %if.end.93, label %lor.lhs.false.53

lor.lhs.false.53:                                 ; preds = %lor.lhs.false.46
  %50 = load i32, i32* %regno, align 4
  %idxprom54 = sext i32 %50 to i64
  %51 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx55 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %51, i64 %idxprom54
  %52 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx55, align 8
  %53 = bitcast %struct.rtx_def* %52 to i32*
  %bf.load56 = load i32, i32* %53, align 8
  %bf.clear57 = and i32 %bf.load56, 65535
  %cmp58 = icmp eq i32 %bf.clear57, 55
  br i1 %cmp58, label %if.end.93, label %lor.lhs.false.60

lor.lhs.false.60:                                 ; preds = %lor.lhs.false.53
  %54 = load i32, i32* %regno, align 4
  %idxprom61 = sext i32 %54 to i64
  %55 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx62 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %55, i64 %idxprom61
  %56 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx62, align 8
  %57 = bitcast %struct.rtx_def* %56 to i32*
  %bf.load63 = load i32, i32* %57, align 8
  %bf.clear64 = and i32 %bf.load63, 65535
  %cmp65 = icmp eq i32 %bf.clear64, 58
  br i1 %cmp65, label %if.end.93, label %lor.lhs.false.67

lor.lhs.false.67:                                 ; preds = %lor.lhs.false.60
  %58 = load i32, i32* %regno, align 4
  %idxprom68 = sext i32 %58 to i64
  %59 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx69 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %59, i64 %idxprom68
  %60 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx69, align 8
  %61 = bitcast %struct.rtx_def* %60 to i32*
  %bf.load70 = load i32, i32* %61, align 8
  %bf.clear71 = and i32 %bf.load70, 65535
  %cmp72 = icmp eq i32 %bf.clear71, 134
  br i1 %cmp72, label %if.end.93, label %lor.lhs.false.74

lor.lhs.false.74:                                 ; preds = %lor.lhs.false.67
  %62 = load i32, i32* %regno, align 4
  %idxprom75 = sext i32 %62 to i64
  %63 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx76 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %63, i64 %idxprom75
  %64 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx76, align 8
  %65 = bitcast %struct.rtx_def* %64 to i32*
  %bf.load77 = load i32, i32* %65, align 8
  %bf.clear78 = and i32 %bf.load77, 65535
  %cmp79 = icmp eq i32 %bf.clear78, 56
  br i1 %cmp79, label %if.end.93, label %lor.lhs.false.81

lor.lhs.false.81:                                 ; preds = %lor.lhs.false.74
  %66 = load i32, i32* %regno, align 4
  %idxprom82 = sext i32 %66 to i64
  %67 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx83 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %67, i64 %idxprom82
  %68 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx83, align 8
  %69 = bitcast %struct.rtx_def* %68 to i32*
  %bf.load84 = load i32, i32* %69, align 8
  %bf.clear85 = and i32 %bf.load84, 65535
  %cmp86 = icmp eq i32 %bf.clear85, 140
  br i1 %cmp86, label %if.end.93, label %if.then.88

if.then.88:                                       ; preds = %lor.lhs.false.81
  %70 = load i32, i32* %regno, align 4
  %idxprom89 = sext i32 %70 to i64
  %71 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx90 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %71, i64 %idxprom89
  %72 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx90, align 8
  %call91 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %72)
  %73 = load i32, i32* %mem_mode.addr, align 4
  %74 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call92 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %call91, i32 %73, %struct.rtx_def* %74)
  store %struct.rtx_def* %call92, %struct.rtx_def** %retval
  br label %return

if.end.93:                                        ; preds = %lor.lhs.false.81, %lor.lhs.false.74, %lor.lhs.false.67, %lor.lhs.false.60, %lor.lhs.false.53, %lor.lhs.false.46, %lor.lhs.false, %land.lhs.true.33, %land.lhs.true.29, %land.lhs.true.27, %land.lhs.true.22, %if.else
  br label %if.end.94

if.end.94:                                        ; preds = %if.end.93, %for.end
  %75 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %75, %struct.rtx_def** %retval
  br label %return

sw.bb.95:                                         ; preds = %if.end
  %76 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %arrayidx97 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld96, i32 0, i64 0
  %rtx98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtx_def**
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rtx98, align 8
  %78 = bitcast %struct.rtx_def* %77 to i32*
  %bf.load99 = load i32, i32* %78, align 8
  %bf.clear100 = and i32 %bf.load99, 65535
  %cmp101 = icmp eq i32 %bf.clear100, 61
  br i1 %cmp101, label %land.lhs.true.103, label %if.end.228

land.lhs.true.103:                                ; preds = %sw.bb.95
  %79 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1
  %arrayidx105 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld104, i32 0, i64 0
  %rtx106 = bitcast %union.rtunion_def* %arrayidx105 to %struct.rtx_def**
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rtx106, align 8
  %fld107 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1
  %arrayidx108 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld107, i32 0, i64 0
  %rtuint109 = bitcast %union.rtunion_def* %arrayidx108 to i32*
  %81 = load i32, i32* %rtuint109, align 4
  %cmp110 = icmp ult i32 %81, 53
  br i1 %cmp110, label %land.lhs.true.112, label %if.end.228

land.lhs.true.112:                                ; preds = %land.lhs.true.103
  %82 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1
  %arrayidx114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld113, i32 0, i64 1
  %rtx115 = bitcast %union.rtunion_def* %arrayidx114 to %struct.rtx_def**
  %83 = load %struct.rtx_def*, %struct.rtx_def** %rtx115, align 8
  %84 = bitcast %struct.rtx_def* %83 to i32*
  %bf.load116 = load i32, i32* %84, align 8
  %bf.clear117 = and i32 %bf.load116, 65535
  %cmp118 = icmp eq i32 %bf.clear117, 67
  br i1 %cmp118, label %if.then.176, label %lor.lhs.false.120

lor.lhs.false.120:                                ; preds = %land.lhs.true.112
  %85 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1
  %arrayidx122 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld121, i32 0, i64 1
  %rtx123 = bitcast %union.rtunion_def* %arrayidx122 to %struct.rtx_def**
  %86 = load %struct.rtx_def*, %struct.rtx_def** %rtx123, align 8
  %87 = bitcast %struct.rtx_def* %86 to i32*
  %bf.load124 = load i32, i32* %87, align 8
  %bf.clear125 = and i32 %bf.load124, 65535
  %cmp126 = icmp eq i32 %bf.clear125, 68
  br i1 %cmp126, label %if.then.176, label %lor.lhs.false.128

lor.lhs.false.128:                                ; preds = %lor.lhs.false.120
  %88 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld129 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1
  %arrayidx130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld129, i32 0, i64 1
  %rtx131 = bitcast %union.rtunion_def* %arrayidx130 to %struct.rtx_def**
  %89 = load %struct.rtx_def*, %struct.rtx_def** %rtx131, align 8
  %90 = bitcast %struct.rtx_def* %89 to i32*
  %bf.load132 = load i32, i32* %90, align 8
  %bf.clear133 = and i32 %bf.load132, 65535
  %cmp134 = icmp eq i32 %bf.clear133, 54
  br i1 %cmp134, label %if.then.176, label %lor.lhs.false.136

lor.lhs.false.136:                                ; preds = %lor.lhs.false.128
  %91 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1
  %arrayidx138 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld137, i32 0, i64 1
  %rtx139 = bitcast %union.rtunion_def* %arrayidx138 to %struct.rtx_def**
  %92 = load %struct.rtx_def*, %struct.rtx_def** %rtx139, align 8
  %93 = bitcast %struct.rtx_def* %92 to i32*
  %bf.load140 = load i32, i32* %93, align 8
  %bf.clear141 = and i32 %bf.load140, 65535
  %cmp142 = icmp eq i32 %bf.clear141, 55
  br i1 %cmp142, label %if.then.176, label %lor.lhs.false.144

lor.lhs.false.144:                                ; preds = %lor.lhs.false.136
  %94 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1
  %arrayidx146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld145, i32 0, i64 1
  %rtx147 = bitcast %union.rtunion_def* %arrayidx146 to %struct.rtx_def**
  %95 = load %struct.rtx_def*, %struct.rtx_def** %rtx147, align 8
  %96 = bitcast %struct.rtx_def* %95 to i32*
  %bf.load148 = load i32, i32* %96, align 8
  %bf.clear149 = and i32 %bf.load148, 65535
  %cmp150 = icmp eq i32 %bf.clear149, 58
  br i1 %cmp150, label %if.then.176, label %lor.lhs.false.152

lor.lhs.false.152:                                ; preds = %lor.lhs.false.144
  %97 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld153 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %97, i32 0, i32 1
  %arrayidx154 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld153, i32 0, i64 1
  %rtx155 = bitcast %union.rtunion_def* %arrayidx154 to %struct.rtx_def**
  %98 = load %struct.rtx_def*, %struct.rtx_def** %rtx155, align 8
  %99 = bitcast %struct.rtx_def* %98 to i32*
  %bf.load156 = load i32, i32* %99, align 8
  %bf.clear157 = and i32 %bf.load156, 65535
  %cmp158 = icmp eq i32 %bf.clear157, 134
  br i1 %cmp158, label %if.then.176, label %lor.lhs.false.160

lor.lhs.false.160:                                ; preds = %lor.lhs.false.152
  %100 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld161 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1
  %arrayidx162 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld161, i32 0, i64 1
  %rtx163 = bitcast %union.rtunion_def* %arrayidx162 to %struct.rtx_def**
  %101 = load %struct.rtx_def*, %struct.rtx_def** %rtx163, align 8
  %102 = bitcast %struct.rtx_def* %101 to i32*
  %bf.load164 = load i32, i32* %102, align 8
  %bf.clear165 = and i32 %bf.load164, 65535
  %cmp166 = icmp eq i32 %bf.clear165, 56
  br i1 %cmp166, label %if.then.176, label %lor.lhs.false.168

lor.lhs.false.168:                                ; preds = %lor.lhs.false.160
  %103 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1
  %arrayidx170 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld169, i32 0, i64 1
  %rtx171 = bitcast %union.rtunion_def* %arrayidx170 to %struct.rtx_def**
  %104 = load %struct.rtx_def*, %struct.rtx_def** %rtx171, align 8
  %105 = bitcast %struct.rtx_def* %104 to i32*
  %bf.load172 = load i32, i32* %105, align 8
  %bf.clear173 = and i32 %bf.load172, 65535
  %cmp174 = icmp eq i32 %bf.clear173, 140
  br i1 %cmp174, label %if.then.176, label %if.end.228

if.then.176:                                      ; preds = %lor.lhs.false.168, %lor.lhs.false.160, %lor.lhs.false.152, %lor.lhs.false.144, %lor.lhs.false.136, %lor.lhs.false.128, %lor.lhs.false.120, %land.lhs.true.112
  %106 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %106, %struct.elim_table** %ep, align 8
  br label %for.cond.177

for.cond.177:                                     ; preds = %for.inc.225, %if.then.176
  %107 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %108 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx178 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %108, i64 4
  %cmp179 = icmp ult %struct.elim_table* %107, %arrayidx178
  br i1 %cmp179, label %for.body.181, label %for.end.227

for.body.181:                                     ; preds = %for.cond.177
  %109 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %from_rtx182 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %109, i32 0, i32 8
  %110 = load %struct.rtx_def*, %struct.rtx_def** %from_rtx182, align 8
  %111 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld183 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i32 0, i32 1
  %arrayidx184 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld183, i32 0, i64 0
  %rtx185 = bitcast %union.rtunion_def* %arrayidx184 to %struct.rtx_def**
  %112 = load %struct.rtx_def*, %struct.rtx_def** %rtx185, align 8
  %cmp186 = icmp eq %struct.rtx_def* %110, %112
  br i1 %cmp186, label %land.lhs.true.188, label %if.end.224

land.lhs.true.188:                                ; preds = %for.body.181
  %113 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate189 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %113, i32 0, i32 3
  %114 = load i32, i32* %can_eliminate189, align 4
  %tobool190 = icmp ne i32 %114, 0
  br i1 %tobool190, label %if.then.191, label %if.end.224

if.then.191:                                      ; preds = %land.lhs.true.188
  %115 = load i32, i32* %mem_mode.addr, align 4
  %cmp192 = icmp ne i32 %115, 0
  br i1 %cmp192, label %land.lhs.true.194, label %if.else.214

land.lhs.true.194:                                ; preds = %if.then.191
  %116 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld195 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i32 0, i32 1
  %arrayidx196 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld195, i32 0, i64 1
  %rtx197 = bitcast %union.rtunion_def* %arrayidx196 to %struct.rtx_def**
  %117 = load %struct.rtx_def*, %struct.rtx_def** %rtx197, align 8
  %118 = bitcast %struct.rtx_def* %117 to i32*
  %bf.load198 = load i32, i32* %118, align 8
  %bf.clear199 = and i32 %bf.load198, 65535
  %cmp200 = icmp eq i32 %bf.clear199, 54
  br i1 %cmp200, label %land.lhs.true.202, label %if.else.214

land.lhs.true.202:                                ; preds = %land.lhs.true.194
  %119 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld203 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %119, i32 0, i32 1
  %arrayidx204 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld203, i32 0, i64 1
  %rtx205 = bitcast %union.rtunion_def* %arrayidx204 to %struct.rtx_def**
  %120 = load %struct.rtx_def*, %struct.rtx_def** %rtx205, align 8
  %fld206 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1
  %arrayidx207 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld206, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx207 to i64*
  %121 = load i64, i64* %rtwint, align 8
  %122 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %previous_offset208 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %122, i32 0, i32 6
  %123 = load i32, i32* %previous_offset208, align 4
  %sub = sub nsw i32 0, %123
  %conv209 = sext i32 %sub to i64
  %cmp210 = icmp eq i64 %121, %conv209
  br i1 %cmp210, label %if.then.212, label %if.else.214

if.then.212:                                      ; preds = %land.lhs.true.202
  %124 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to_rtx213 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %124, i32 0, i32 9
  %125 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx213, align 8
  store %struct.rtx_def* %125, %struct.rtx_def** %retval
  br label %return

if.else.214:                                      ; preds = %land.lhs.true.202, %land.lhs.true.194, %if.then.191
  %126 = load i32, i32* @target_flags, align 4
  %and = and i32 %126, 33554432
  %tobool215 = icmp ne i32 %and, 0
  %cond = select i1 %tobool215, i32 5, i32 4
  %127 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to_rtx216 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %127, i32 0, i32 9
  %128 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx216, align 8
  %129 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld217 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %129, i32 0, i32 1
  %arrayidx218 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld217, i32 0, i64 1
  %rtx219 = bitcast %union.rtunion_def* %arrayidx218 to %struct.rtx_def**
  %130 = load %struct.rtx_def*, %struct.rtx_def** %rtx219, align 8
  %131 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %previous_offset220 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %131, i32 0, i32 6
  %132 = load i32, i32* %previous_offset220, align 4
  %conv221 = sext i32 %132 to i64
  %call222 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %130, i64 %conv221)
  %call223 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %cond, %struct.rtx_def* %128, %struct.rtx_def* %call222)
  store %struct.rtx_def* %call223, %struct.rtx_def** %retval
  br label %return

if.end.224:                                       ; preds = %land.lhs.true.188, %for.body.181
  br label %for.inc.225

for.inc.225:                                      ; preds = %if.end.224
  %133 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr226 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %133, i32 1
  store %struct.elim_table* %incdec.ptr226, %struct.elim_table** %ep, align 8
  br label %for.cond.177

for.end.227:                                      ; preds = %for.cond.177
  %134 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %134, %struct.rtx_def** %retval
  br label %return

if.end.228:                                       ; preds = %lor.lhs.false.168, %land.lhs.true.103, %sw.bb.95
  %135 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld229 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %135, i32 0, i32 1
  %arrayidx230 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld229, i32 0, i64 0
  %rtx231 = bitcast %union.rtunion_def* %arrayidx230 to %struct.rtx_def**
  %136 = load %struct.rtx_def*, %struct.rtx_def** %rtx231, align 8
  %137 = load i32, i32* %mem_mode.addr, align 4
  %138 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call232 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %136, i32 %137, %struct.rtx_def* %138)
  store %struct.rtx_def* %call232, %struct.rtx_def** %new0, align 8
  %139 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld233 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1
  %arrayidx234 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld233, i32 0, i64 1
  %rtx235 = bitcast %union.rtunion_def* %arrayidx234 to %struct.rtx_def**
  %140 = load %struct.rtx_def*, %struct.rtx_def** %rtx235, align 8
  %141 = load i32, i32* %mem_mode.addr, align 4
  %142 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call236 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %140, i32 %141, %struct.rtx_def* %142)
  store %struct.rtx_def* %call236, %struct.rtx_def** %new1, align 8
  %143 = load i16*, i16** @reg_renumber, align 8
  %tobool237 = icmp ne i16* %143, null
  br i1 %tobool237, label %land.lhs.true.238, label %if.end.345

land.lhs.true.238:                                ; preds = %if.end.228
  %144 = load %struct.rtx_def*, %struct.rtx_def** %new0, align 8
  %145 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld239 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %145, i32 0, i32 1
  %arrayidx240 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld239, i32 0, i64 0
  %rtx241 = bitcast %union.rtunion_def* %arrayidx240 to %struct.rtx_def**
  %146 = load %struct.rtx_def*, %struct.rtx_def** %rtx241, align 8
  %cmp242 = icmp ne %struct.rtx_def* %144, %146
  br i1 %cmp242, label %if.then.250, label %lor.lhs.false.244

lor.lhs.false.244:                                ; preds = %land.lhs.true.238
  %147 = load %struct.rtx_def*, %struct.rtx_def** %new1, align 8
  %148 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld245 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %148, i32 0, i32 1
  %arrayidx246 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld245, i32 0, i64 1
  %rtx247 = bitcast %union.rtunion_def* %arrayidx246 to %struct.rtx_def**
  %149 = load %struct.rtx_def*, %struct.rtx_def** %rtx247, align 8
  %cmp248 = icmp ne %struct.rtx_def* %147, %149
  br i1 %cmp248, label %if.then.250, label %if.end.345

if.then.250:                                      ; preds = %lor.lhs.false.244, %land.lhs.true.238
  %150 = load %struct.rtx_def*, %struct.rtx_def** %new0, align 8
  %151 = bitcast %struct.rtx_def* %150 to i32*
  %bf.load251 = load i32, i32* %151, align 8
  %bf.clear252 = and i32 %bf.load251, 65535
  %cmp253 = icmp eq i32 %bf.clear252, 75
  br i1 %cmp253, label %land.lhs.true.255, label %if.else.292

land.lhs.true.255:                                ; preds = %if.then.250
  %152 = load %struct.rtx_def*, %struct.rtx_def** %new1, align 8
  %153 = bitcast %struct.rtx_def* %152 to i32*
  %bf.load256 = load i32, i32* %153, align 8
  %bf.clear257 = and i32 %bf.load256, 65535
  %cmp258 = icmp eq i32 %bf.clear257, 61
  br i1 %cmp258, label %land.lhs.true.260, label %if.else.292

land.lhs.true.260:                                ; preds = %land.lhs.true.255
  %154 = load %struct.rtx_def*, %struct.rtx_def** %new1, align 8
  %fld261 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %154, i32 0, i32 1
  %arrayidx262 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld261, i32 0, i64 0
  %rtuint263 = bitcast %union.rtunion_def* %arrayidx262 to i32*
  %155 = load i32, i32* %rtuint263, align 4
  %cmp264 = icmp uge i32 %155, 53
  br i1 %cmp264, label %land.lhs.true.266, label %if.else.292

land.lhs.true.266:                                ; preds = %land.lhs.true.260
  %156 = load %struct.rtx_def*, %struct.rtx_def** %new1, align 8
  %fld267 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %156, i32 0, i32 1
  %arrayidx268 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld267, i32 0, i64 0
  %rtuint269 = bitcast %union.rtunion_def* %arrayidx268 to i32*
  %157 = load i32, i32* %rtuint269, align 4
  %idxprom270 = zext i32 %157 to i64
  %158 = load i16*, i16** @reg_renumber, align 8
  %arrayidx271 = getelementptr inbounds i16, i16* %158, i64 %idxprom270
  %159 = load i16, i16* %arrayidx271, align 2
  %conv272 = sext i16 %159 to i32
  %cmp273 = icmp slt i32 %conv272, 0
  br i1 %cmp273, label %land.lhs.true.275, label %if.else.292

land.lhs.true.275:                                ; preds = %land.lhs.true.266
  %160 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %cmp276 = icmp ne %struct.rtx_def** %160, null
  br i1 %cmp276, label %land.lhs.true.278, label %if.else.292

land.lhs.true.278:                                ; preds = %land.lhs.true.275
  %161 = load %struct.rtx_def*, %struct.rtx_def** %new1, align 8
  %fld279 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %161, i32 0, i32 1
  %arrayidx280 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld279, i32 0, i64 0
  %rtuint281 = bitcast %union.rtunion_def* %arrayidx280 to i32*
  %162 = load i32, i32* %rtuint281, align 4
  %idxprom282 = zext i32 %162 to i64
  %163 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx283 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %163, i64 %idxprom282
  %164 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx283, align 8
  %cmp284 = icmp ne %struct.rtx_def* %164, null
  br i1 %cmp284, label %if.then.286, label %if.else.292

if.then.286:                                      ; preds = %land.lhs.true.278
  %165 = load %struct.rtx_def*, %struct.rtx_def** %new1, align 8
  %fld287 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %165, i32 0, i32 1
  %arrayidx288 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld287, i32 0, i64 0
  %rtuint289 = bitcast %union.rtunion_def* %arrayidx288 to i32*
  %166 = load i32, i32* %rtuint289, align 4
  %idxprom290 = zext i32 %166 to i64
  %167 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx291 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %167, i64 %idxprom290
  %168 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx291, align 8
  store %struct.rtx_def* %168, %struct.rtx_def** %new1, align 8
  br label %if.end.332

if.else.292:                                      ; preds = %land.lhs.true.278, %land.lhs.true.275, %land.lhs.true.266, %land.lhs.true.260, %land.lhs.true.255, %if.then.250
  %169 = load %struct.rtx_def*, %struct.rtx_def** %new1, align 8
  %170 = bitcast %struct.rtx_def* %169 to i32*
  %bf.load293 = load i32, i32* %170, align 8
  %bf.clear294 = and i32 %bf.load293, 65535
  %cmp295 = icmp eq i32 %bf.clear294, 75
  br i1 %cmp295, label %land.lhs.true.297, label %if.end.331

land.lhs.true.297:                                ; preds = %if.else.292
  %171 = load %struct.rtx_def*, %struct.rtx_def** %new0, align 8
  %172 = bitcast %struct.rtx_def* %171 to i32*
  %bf.load298 = load i32, i32* %172, align 8
  %bf.clear299 = and i32 %bf.load298, 65535
  %cmp300 = icmp eq i32 %bf.clear299, 61
  br i1 %cmp300, label %land.lhs.true.302, label %if.end.331

land.lhs.true.302:                                ; preds = %land.lhs.true.297
  %173 = load %struct.rtx_def*, %struct.rtx_def** %new0, align 8
  %fld303 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %173, i32 0, i32 1
  %arrayidx304 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld303, i32 0, i64 0
  %rtuint305 = bitcast %union.rtunion_def* %arrayidx304 to i32*
  %174 = load i32, i32* %rtuint305, align 4
  %cmp306 = icmp uge i32 %174, 53
  br i1 %cmp306, label %land.lhs.true.308, label %if.end.331

land.lhs.true.308:                                ; preds = %land.lhs.true.302
  %175 = load %struct.rtx_def*, %struct.rtx_def** %new0, align 8
  %fld309 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %175, i32 0, i32 1
  %arrayidx310 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld309, i32 0, i64 0
  %rtuint311 = bitcast %union.rtunion_def* %arrayidx310 to i32*
  %176 = load i32, i32* %rtuint311, align 4
  %idxprom312 = zext i32 %176 to i64
  %177 = load i16*, i16** @reg_renumber, align 8
  %arrayidx313 = getelementptr inbounds i16, i16* %177, i64 %idxprom312
  %178 = load i16, i16* %arrayidx313, align 2
  %conv314 = sext i16 %178 to i32
  %cmp315 = icmp slt i32 %conv314, 0
  br i1 %cmp315, label %land.lhs.true.317, label %if.end.331

land.lhs.true.317:                                ; preds = %land.lhs.true.308
  %179 = load %struct.rtx_def*, %struct.rtx_def** %new0, align 8
  %fld318 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %179, i32 0, i32 1
  %arrayidx319 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld318, i32 0, i64 0
  %rtuint320 = bitcast %union.rtunion_def* %arrayidx319 to i32*
  %180 = load i32, i32* %rtuint320, align 4
  %idxprom321 = zext i32 %180 to i64
  %181 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx322 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %181, i64 %idxprom321
  %182 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx322, align 8
  %cmp323 = icmp ne %struct.rtx_def* %182, null
  br i1 %cmp323, label %if.then.325, label %if.end.331

if.then.325:                                      ; preds = %land.lhs.true.317
  %183 = load %struct.rtx_def*, %struct.rtx_def** %new0, align 8
  %fld326 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %183, i32 0, i32 1
  %arrayidx327 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld326, i32 0, i64 0
  %rtuint328 = bitcast %union.rtunion_def* %arrayidx327 to i32*
  %184 = load i32, i32* %rtuint328, align 4
  %idxprom329 = zext i32 %184 to i64
  %185 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx330 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %185, i64 %idxprom329
  %186 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx330, align 8
  store %struct.rtx_def* %186, %struct.rtx_def** %new0, align 8
  br label %if.end.331

if.end.331:                                       ; preds = %if.then.325, %land.lhs.true.317, %land.lhs.true.308, %land.lhs.true.302, %land.lhs.true.297, %if.else.292
  br label %if.end.332

if.end.332:                                       ; preds = %if.end.331, %if.then.286
  %187 = load %struct.rtx_def*, %struct.rtx_def** %new0, align 8
  %188 = load %struct.rtx_def*, %struct.rtx_def** %new1, align 8
  %call333 = call %struct.rtx_def* @form_sum(%struct.rtx_def* %187, %struct.rtx_def* %188)
  store %struct.rtx_def* %call333, %struct.rtx_def** %new, align 8
  %189 = load i32, i32* %mem_mode.addr, align 4
  %tobool334 = icmp ne i32 %189, 0
  br i1 %tobool334, label %if.else.344, label %land.lhs.true.335

land.lhs.true.335:                                ; preds = %if.end.332
  %190 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %191 = bitcast %struct.rtx_def* %190 to i32*
  %bf.load336 = load i32, i32* %191, align 8
  %bf.clear337 = and i32 %bf.load336, 65535
  %cmp338 = icmp ne i32 %bf.clear337, 75
  br i1 %cmp338, label %if.then.340, label %if.else.344

if.then.340:                                      ; preds = %land.lhs.true.335
  %192 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %193 = bitcast %struct.rtx_def* %192 to i32*
  %bf.load341 = load i32, i32* %193, align 8
  %bf.lshr = lshr i32 %bf.load341, 16
  %bf.clear342 = and i32 %bf.lshr, 255
  %194 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %195 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %call343 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear342, %struct.rtx_def* %194, %struct.rtx_def* %195)
  store %struct.rtx_def* %call343, %struct.rtx_def** %retval
  br label %return

if.else.344:                                      ; preds = %land.lhs.true.335, %if.end.332
  %196 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  store %struct.rtx_def* %196, %struct.rtx_def** %retval
  br label %return

if.end.345:                                       ; preds = %lor.lhs.false.244, %if.end.228
  %197 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %197, %struct.rtx_def** %retval
  br label %return

sw.bb.346:                                        ; preds = %if.end
  %198 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld347 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %198, i32 0, i32 1
  %arrayidx348 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld347, i32 0, i64 0
  %rtx349 = bitcast %union.rtunion_def* %arrayidx348 to %struct.rtx_def**
  %199 = load %struct.rtx_def*, %struct.rtx_def** %rtx349, align 8
  %200 = bitcast %struct.rtx_def* %199 to i32*
  %bf.load350 = load i32, i32* %200, align 8
  %bf.clear351 = and i32 %bf.load350, 65535
  %cmp352 = icmp eq i32 %bf.clear351, 61
  br i1 %cmp352, label %land.lhs.true.354, label %if.end.424

land.lhs.true.354:                                ; preds = %sw.bb.346
  %201 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld355 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %201, i32 0, i32 1
  %arrayidx356 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld355, i32 0, i64 0
  %rtx357 = bitcast %union.rtunion_def* %arrayidx356 to %struct.rtx_def**
  %202 = load %struct.rtx_def*, %struct.rtx_def** %rtx357, align 8
  %fld358 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %202, i32 0, i32 1
  %arrayidx359 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld358, i32 0, i64 0
  %rtuint360 = bitcast %union.rtunion_def* %arrayidx359 to i32*
  %203 = load i32, i32* %rtuint360, align 4
  %cmp361 = icmp ult i32 %203, 53
  br i1 %cmp361, label %land.lhs.true.363, label %if.end.424

land.lhs.true.363:                                ; preds = %land.lhs.true.354
  %204 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld364 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %204, i32 0, i32 1
  %arrayidx365 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld364, i32 0, i64 1
  %rtx366 = bitcast %union.rtunion_def* %arrayidx365 to %struct.rtx_def**
  %205 = load %struct.rtx_def*, %struct.rtx_def** %rtx366, align 8
  %206 = bitcast %struct.rtx_def* %205 to i32*
  %bf.load367 = load i32, i32* %206, align 8
  %bf.clear368 = and i32 %bf.load367, 65535
  %cmp369 = icmp eq i32 %bf.clear368, 54
  br i1 %cmp369, label %if.then.371, label %if.end.424

if.then.371:                                      ; preds = %land.lhs.true.363
  %207 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %207, %struct.elim_table** %ep, align 8
  br label %for.cond.372

for.cond.372:                                     ; preds = %for.inc.421, %if.then.371
  %208 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %209 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx373 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %209, i64 4
  %cmp374 = icmp ult %struct.elim_table* %208, %arrayidx373
  br i1 %cmp374, label %for.body.376, label %for.end.423

for.body.376:                                     ; preds = %for.cond.372
  %210 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %from_rtx377 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %210, i32 0, i32 8
  %211 = load %struct.rtx_def*, %struct.rtx_def** %from_rtx377, align 8
  %212 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld378 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %212, i32 0, i32 1
  %arrayidx379 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld378, i32 0, i64 0
  %rtx380 = bitcast %union.rtunion_def* %arrayidx379 to %struct.rtx_def**
  %213 = load %struct.rtx_def*, %struct.rtx_def** %rtx380, align 8
  %cmp381 = icmp eq %struct.rtx_def* %211, %213
  br i1 %cmp381, label %land.lhs.true.383, label %if.end.420

land.lhs.true.383:                                ; preds = %for.body.376
  %214 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate384 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %214, i32 0, i32 3
  %215 = load i32, i32* %can_eliminate384, align 4
  %tobool385 = icmp ne i32 %215, 0
  br i1 %tobool385, label %if.then.386, label %if.end.420

if.then.386:                                      ; preds = %land.lhs.true.383
  %216 = load i32, i32* %mem_mode.addr, align 4
  %tobool387 = icmp ne i32 %216, 0
  br i1 %tobool387, label %if.end.402, label %land.lhs.true.388

land.lhs.true.388:                                ; preds = %if.then.386
  %217 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %cmp389 = icmp ne %struct.rtx_def* %217, null
  br i1 %cmp389, label %land.lhs.true.391, label %if.then.401

land.lhs.true.391:                                ; preds = %land.lhs.true.388
  %218 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %219 = bitcast %struct.rtx_def* %218 to i32*
  %bf.load392 = load i32, i32* %219, align 8
  %bf.clear393 = and i32 %bf.load392, 65535
  %cmp394 = icmp eq i32 %bf.clear393, 3
  br i1 %cmp394, label %if.end.402, label %lor.lhs.false.396

lor.lhs.false.396:                                ; preds = %land.lhs.true.391
  %220 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %221 = bitcast %struct.rtx_def* %220 to i32*
  %bf.load397 = load i32, i32* %221, align 8
  %bf.clear398 = and i32 %bf.load397, 65535
  %cmp399 = icmp eq i32 %bf.clear398, 4
  br i1 %cmp399, label %if.end.402, label %if.then.401

if.then.401:                                      ; preds = %lor.lhs.false.396, %land.lhs.true.388
  %222 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %ref_outside_mem = getelementptr inbounds %struct.elim_table, %struct.elim_table* %222, i32 0, i32 7
  store i32 1, i32* %ref_outside_mem, align 4
  br label %if.end.402

if.end.402:                                       ; preds = %if.then.401, %lor.lhs.false.396, %land.lhs.true.391, %if.then.386
  %223 = load i32, i32* @target_flags, align 4
  %and403 = and i32 %223, 33554432
  %tobool404 = icmp ne i32 %and403, 0
  %cond405 = select i1 %tobool404, i32 5, i32 4
  %224 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to_rtx406 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %224, i32 0, i32 9
  %225 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx406, align 8
  %226 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld407 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %226, i32 0, i32 1
  %arrayidx408 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld407, i32 0, i64 1
  %rtx409 = bitcast %union.rtunion_def* %arrayidx408 to %struct.rtx_def**
  %227 = load %struct.rtx_def*, %struct.rtx_def** %rtx409, align 8
  %call410 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %cond405, %struct.rtx_def* %225, %struct.rtx_def* %227)
  %228 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %previous_offset411 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %228, i32 0, i32 6
  %229 = load i32, i32* %previous_offset411, align 4
  %conv412 = sext i32 %229 to i64
  %230 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld413 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %230, i32 0, i32 1
  %arrayidx414 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld413, i32 0, i64 1
  %rtx415 = bitcast %union.rtunion_def* %arrayidx414 to %struct.rtx_def**
  %231 = load %struct.rtx_def*, %struct.rtx_def** %rtx415, align 8
  %fld416 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %231, i32 0, i32 1
  %arrayidx417 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld416, i32 0, i64 0
  %rtwint418 = bitcast %union.rtunion_def* %arrayidx417 to i64*
  %232 = load i64, i64* %rtwint418, align 8
  %mul = mul nsw i64 %conv412, %232
  %call419 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call410, i64 %mul)
  store %struct.rtx_def* %call419, %struct.rtx_def** %retval
  br label %return

if.end.420:                                       ; preds = %land.lhs.true.383, %for.body.376
  br label %for.inc.421

for.inc.421:                                      ; preds = %if.end.420
  %233 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr422 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %233, i32 1
  store %struct.elim_table* %incdec.ptr422, %struct.elim_table** %ep, align 8
  br label %for.cond.372

for.end.423:                                      ; preds = %for.cond.372
  br label %if.end.424

if.end.424:                                       ; preds = %for.end.423, %land.lhs.true.363, %land.lhs.true.354, %sw.bb.346
  br label %sw.bb.425

sw.bb.425:                                        ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end.424
  %234 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld427 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %234, i32 0, i32 1
  %arrayidx428 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld427, i32 0, i64 0
  %rtx429 = bitcast %union.rtunion_def* %arrayidx428 to %struct.rtx_def**
  %235 = load %struct.rtx_def*, %struct.rtx_def** %rtx429, align 8
  %236 = load i32, i32* %mem_mode.addr, align 4
  %237 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call430 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %235, i32 %236, %struct.rtx_def* %237)
  store %struct.rtx_def* %call430, %struct.rtx_def** %new0426, align 8
  %238 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld432 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %238, i32 0, i32 1
  %arrayidx433 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld432, i32 0, i64 1
  %rtx434 = bitcast %union.rtunion_def* %arrayidx433 to %struct.rtx_def**
  %239 = load %struct.rtx_def*, %struct.rtx_def** %rtx434, align 8
  %tobool435 = icmp ne %struct.rtx_def* %239, null
  br i1 %tobool435, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.bb.425
  %240 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld436 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %240, i32 0, i32 1
  %arrayidx437 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld436, i32 0, i64 1
  %rtx438 = bitcast %union.rtunion_def* %arrayidx437 to %struct.rtx_def**
  %241 = load %struct.rtx_def*, %struct.rtx_def** %rtx438, align 8
  %242 = load i32, i32* %mem_mode.addr, align 4
  %243 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call439 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %241, i32 %242, %struct.rtx_def* %243)
  br label %cond.end

cond.false:                                       ; preds = %sw.bb.425
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond440 = phi %struct.rtx_def* [ %call439, %cond.true ], [ null, %cond.false ]
  store %struct.rtx_def* %cond440, %struct.rtx_def** %new1431, align 8
  %244 = load %struct.rtx_def*, %struct.rtx_def** %new0426, align 8
  %245 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld441 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %245, i32 0, i32 1
  %arrayidx442 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld441, i32 0, i64 0
  %rtx443 = bitcast %union.rtunion_def* %arrayidx442 to %struct.rtx_def**
  %246 = load %struct.rtx_def*, %struct.rtx_def** %rtx443, align 8
  %cmp444 = icmp ne %struct.rtx_def* %244, %246
  br i1 %cmp444, label %if.then.452, label %lor.lhs.false.446

lor.lhs.false.446:                                ; preds = %cond.end
  %247 = load %struct.rtx_def*, %struct.rtx_def** %new1431, align 8
  %248 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld447 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %248, i32 0, i32 1
  %arrayidx448 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld447, i32 0, i64 1
  %rtx449 = bitcast %union.rtunion_def* %arrayidx448 to %struct.rtx_def**
  %249 = load %struct.rtx_def*, %struct.rtx_def** %rtx449, align 8
  %cmp450 = icmp ne %struct.rtx_def* %247, %249
  br i1 %cmp450, label %if.then.452, label %if.end.457

if.then.452:                                      ; preds = %lor.lhs.false.446, %cond.end
  %250 = load i32, i32* %code, align 4
  %251 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %252 = bitcast %struct.rtx_def* %251 to i32*
  %bf.load453 = load i32, i32* %252, align 8
  %bf.lshr454 = lshr i32 %bf.load453, 16
  %bf.clear455 = and i32 %bf.lshr454, 255
  %253 = load %struct.rtx_def*, %struct.rtx_def** %new0426, align 8
  %254 = load %struct.rtx_def*, %struct.rtx_def** %new1431, align 8
  %call456 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %250, i32 %bf.clear455, %struct.rtx_def* %253, %struct.rtx_def* %254)
  store %struct.rtx_def* %call456, %struct.rtx_def** %retval
  br label %return

if.end.457:                                       ; preds = %lor.lhs.false.446
  %255 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %255, %struct.rtx_def** %retval
  br label %return

sw.bb.458:                                        ; preds = %if.end
  %256 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld459 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %256, i32 0, i32 1
  %arrayidx460 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld459, i32 0, i64 0
  %rtx461 = bitcast %union.rtunion_def* %arrayidx460 to %struct.rtx_def**
  %257 = load %struct.rtx_def*, %struct.rtx_def** %rtx461, align 8
  %tobool462 = icmp ne %struct.rtx_def* %257, null
  br i1 %tobool462, label %if.then.463, label %if.end.501

if.then.463:                                      ; preds = %sw.bb.458
  %258 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld464 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %258, i32 0, i32 1
  %arrayidx465 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld464, i32 0, i64 0
  %rtx466 = bitcast %union.rtunion_def* %arrayidx465 to %struct.rtx_def**
  %259 = load %struct.rtx_def*, %struct.rtx_def** %rtx466, align 8
  %260 = load i32, i32* %mem_mode.addr, align 4
  %261 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call467 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %259, i32 %260, %struct.rtx_def* %261)
  store %struct.rtx_def* %call467, %struct.rtx_def** %new, align 8
  %262 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %263 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld468 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %263, i32 0, i32 1
  %arrayidx469 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld468, i32 0, i64 0
  %rtx470 = bitcast %union.rtunion_def* %arrayidx469 to %struct.rtx_def**
  %264 = load %struct.rtx_def*, %struct.rtx_def** %rtx470, align 8
  %cmp471 = icmp ne %struct.rtx_def* %262, %264
  br i1 %cmp471, label %if.then.473, label %if.end.500

if.then.473:                                      ; preds = %if.then.463
  %265 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %266 = bitcast %struct.rtx_def* %265 to i32*
  %bf.load474 = load i32, i32* %266, align 8
  %bf.lshr475 = lshr i32 %bf.load474, 16
  %bf.clear476 = and i32 %bf.lshr475, 255
  %cmp477 = icmp eq i32 %bf.clear476, 1
  br i1 %cmp477, label %if.then.479, label %if.end.492

if.then.479:                                      ; preds = %if.then.473
  %267 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld480 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %267, i32 0, i32 1
  %arrayidx481 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld480, i32 0, i64 1
  %rtx482 = bitcast %union.rtunion_def* %arrayidx481 to %struct.rtx_def**
  %268 = load %struct.rtx_def*, %struct.rtx_def** %rtx482, align 8
  %tobool483 = icmp ne %struct.rtx_def* %268, null
  br i1 %tobool483, label %cond.true.484, label %cond.false.489

cond.true.484:                                    ; preds = %if.then.479
  %269 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld485 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %269, i32 0, i32 1
  %arrayidx486 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld485, i32 0, i64 1
  %rtx487 = bitcast %union.rtunion_def* %arrayidx486 to %struct.rtx_def**
  %270 = load %struct.rtx_def*, %struct.rtx_def** %rtx487, align 8
  %271 = load i32, i32* %mem_mode.addr, align 4
  %272 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call488 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %270, i32 %271, %struct.rtx_def* %272)
  br label %cond.end.490

cond.false.489:                                   ; preds = %if.then.479
  br label %cond.end.490

cond.end.490:                                     ; preds = %cond.false.489, %cond.true.484
  %cond491 = phi %struct.rtx_def* [ %call488, %cond.true.484 ], [ null, %cond.false.489 ]
  store %struct.rtx_def* %cond491, %struct.rtx_def** %retval
  br label %return

if.end.492:                                       ; preds = %if.then.473
  %273 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %274 = bitcast %struct.rtx_def* %273 to i32*
  %bf.load493 = load i32, i32* %274, align 8
  %bf.lshr494 = lshr i32 %bf.load493, 16
  %bf.clear495 = and i32 %bf.lshr494, 255
  %275 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %276 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld496 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %276, i32 0, i32 1
  %arrayidx497 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld496, i32 0, i64 1
  %rtx498 = bitcast %union.rtunion_def* %arrayidx497 to %struct.rtx_def**
  %277 = load %struct.rtx_def*, %struct.rtx_def** %rtx498, align 8
  %call499 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 %bf.clear495, %struct.rtx_def* %275, %struct.rtx_def* %277)
  store %struct.rtx_def* %call499, %struct.rtx_def** %x.addr, align 8
  br label %if.end.500

if.end.500:                                       ; preds = %if.end.492, %if.then.463
  br label %if.end.501

if.end.501:                                       ; preds = %if.end.500, %sw.bb.458
  br label %sw.bb.502

sw.bb.502:                                        ; preds = %if.end, %if.end.501
  %278 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld503 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %278, i32 0, i32 1
  %arrayidx504 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld503, i32 0, i64 1
  %rtx505 = bitcast %union.rtunion_def* %arrayidx504 to %struct.rtx_def**
  %279 = load %struct.rtx_def*, %struct.rtx_def** %rtx505, align 8
  %tobool506 = icmp ne %struct.rtx_def* %279, null
  br i1 %tobool506, label %if.then.507, label %if.end.528

if.then.507:                                      ; preds = %sw.bb.502
  %280 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld508 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %280, i32 0, i32 1
  %arrayidx509 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld508, i32 0, i64 1
  %rtx510 = bitcast %union.rtunion_def* %arrayidx509 to %struct.rtx_def**
  %281 = load %struct.rtx_def*, %struct.rtx_def** %rtx510, align 8
  %282 = load i32, i32* %mem_mode.addr, align 4
  %283 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call511 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %281, i32 %282, %struct.rtx_def* %283)
  store %struct.rtx_def* %call511, %struct.rtx_def** %new, align 8
  %284 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %285 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld512 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %285, i32 0, i32 1
  %arrayidx513 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld512, i32 0, i64 1
  %rtx514 = bitcast %union.rtunion_def* %arrayidx513 to %struct.rtx_def**
  %286 = load %struct.rtx_def*, %struct.rtx_def** %rtx514, align 8
  %cmp515 = icmp ne %struct.rtx_def* %284, %286
  br i1 %cmp515, label %if.then.517, label %if.end.527

if.then.517:                                      ; preds = %if.then.507
  %287 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %288 = bitcast %struct.rtx_def* %287 to i32*
  %bf.load518 = load i32, i32* %288, align 8
  %bf.clear519 = and i32 %bf.load518, 65535
  %289 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %290 = bitcast %struct.rtx_def* %289 to i32*
  %bf.load520 = load i32, i32* %290, align 8
  %bf.lshr521 = lshr i32 %bf.load520, 16
  %bf.clear522 = and i32 %bf.lshr521, 255
  %291 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld523 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %291, i32 0, i32 1
  %arrayidx524 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld523, i32 0, i64 0
  %rtx525 = bitcast %union.rtunion_def* %arrayidx524 to %struct.rtx_def**
  %292 = load %struct.rtx_def*, %struct.rtx_def** %rtx525, align 8
  %293 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %call526 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %bf.clear519, i32 %bf.clear522, %struct.rtx_def* %292, %struct.rtx_def* %293)
  store %struct.rtx_def* %call526, %struct.rtx_def** %retval
  br label %return

if.end.527:                                       ; preds = %if.then.507
  br label %if.end.528

if.end.528:                                       ; preds = %if.end.527, %sw.bb.502
  %294 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %294, %struct.rtx_def** %retval
  br label %return

sw.bb.529:                                        ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %295 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld530 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %295, i32 0, i32 1
  %arrayidx531 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld530, i32 0, i64 0
  %rtx532 = bitcast %union.rtunion_def* %arrayidx531 to %struct.rtx_def**
  %296 = load %struct.rtx_def*, %struct.rtx_def** %rtx532, align 8
  %297 = load i32, i32* %mem_mode.addr, align 4
  %298 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call533 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %296, i32 %297, %struct.rtx_def* %298)
  store %struct.rtx_def* %call533, %struct.rtx_def** %new, align 8
  %299 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %300 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld534 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %300, i32 0, i32 1
  %arrayidx535 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld534, i32 0, i64 0
  %rtx536 = bitcast %union.rtunion_def* %arrayidx535 to %struct.rtx_def**
  %301 = load %struct.rtx_def*, %struct.rtx_def** %rtx536, align 8
  %cmp537 = icmp ne %struct.rtx_def* %299, %301
  br i1 %cmp537, label %if.then.539, label %if.end.544

if.then.539:                                      ; preds = %sw.bb.529
  %302 = load i32, i32* %code, align 4
  %303 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %304 = bitcast %struct.rtx_def* %303 to i32*
  %bf.load540 = load i32, i32* %304, align 8
  %bf.lshr541 = lshr i32 %bf.load540, 16
  %bf.clear542 = and i32 %bf.lshr541, 255
  %305 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %call543 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 %302, i32 %bf.clear542, %struct.rtx_def* %305)
  store %struct.rtx_def* %call543, %struct.rtx_def** %retval
  br label %return

if.end.544:                                       ; preds = %sw.bb.529
  %306 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %306, %struct.rtx_def** %retval
  br label %return

sw.bb.545:                                        ; preds = %if.end
  %307 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld546 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %307, i32 0, i32 1
  %arrayidx547 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld546, i32 0, i64 0
  %rtx548 = bitcast %union.rtunion_def* %arrayidx547 to %struct.rtx_def**
  %308 = load %struct.rtx_def*, %struct.rtx_def** %rtx548, align 8
  %309 = bitcast %struct.rtx_def* %308 to i32*
  %bf.load549 = load i32, i32* %309, align 8
  %bf.clear550 = and i32 %bf.load549, 65535
  %cmp551 = icmp eq i32 %bf.clear550, 61
  br i1 %cmp551, label %land.lhs.true.553, label %if.else.589

land.lhs.true.553:                                ; preds = %sw.bb.545
  %310 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %311 = bitcast %struct.rtx_def* %310 to i32*
  %bf.load554 = load i32, i32* %311, align 8
  %bf.lshr555 = lshr i32 %bf.load554, 16
  %bf.clear556 = and i32 %bf.lshr555, 255
  %idxprom557 = sext i32 %bf.clear556 to i64
  %arrayidx558 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom557
  %312 = load i8, i8* %arrayidx558, align 1
  %conv559 = zext i8 %312 to i32
  %313 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld560 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %313, i32 0, i32 1
  %arrayidx561 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld560, i32 0, i64 0
  %rtx562 = bitcast %union.rtunion_def* %arrayidx561 to %struct.rtx_def**
  %314 = load %struct.rtx_def*, %struct.rtx_def** %rtx562, align 8
  %315 = bitcast %struct.rtx_def* %314 to i32*
  %bf.load563 = load i32, i32* %315, align 8
  %bf.lshr564 = lshr i32 %bf.load563, 16
  %bf.clear565 = and i32 %bf.lshr564, 255
  %idxprom566 = sext i32 %bf.clear565 to i64
  %arrayidx567 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom566
  %316 = load i8, i8* %arrayidx567, align 1
  %conv568 = zext i8 %316 to i32
  %cmp569 = icmp sle i32 %conv559, %conv568
  br i1 %cmp569, label %land.lhs.true.571, label %if.else.589

land.lhs.true.571:                                ; preds = %land.lhs.true.553
  %317 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %cmp572 = icmp ne %struct.rtx_def** %317, null
  br i1 %cmp572, label %land.lhs.true.574, label %if.else.589

land.lhs.true.574:                                ; preds = %land.lhs.true.571
  %318 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld575 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %318, i32 0, i32 1
  %arrayidx576 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld575, i32 0, i64 0
  %rtx577 = bitcast %union.rtunion_def* %arrayidx576 to %struct.rtx_def**
  %319 = load %struct.rtx_def*, %struct.rtx_def** %rtx577, align 8
  %fld578 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %319, i32 0, i32 1
  %arrayidx579 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld578, i32 0, i64 0
  %rtuint580 = bitcast %union.rtunion_def* %arrayidx579 to i32*
  %320 = load i32, i32* %rtuint580, align 4
  %idxprom581 = zext i32 %320 to i64
  %321 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx582 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %321, i64 %idxprom581
  %322 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx582, align 8
  %cmp583 = icmp ne %struct.rtx_def* %322, null
  br i1 %cmp583, label %if.then.585, label %if.else.589

if.then.585:                                      ; preds = %land.lhs.true.574
  %323 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld586 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %323, i32 0, i32 1
  %arrayidx587 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld586, i32 0, i64 0
  %rtx588 = bitcast %union.rtunion_def* %arrayidx587 to %struct.rtx_def**
  %324 = load %struct.rtx_def*, %struct.rtx_def** %rtx588, align 8
  store %struct.rtx_def* %324, %struct.rtx_def** %new, align 8
  br label %if.end.594

if.else.589:                                      ; preds = %land.lhs.true.574, %land.lhs.true.571, %land.lhs.true.553, %sw.bb.545
  %325 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld590 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %325, i32 0, i32 1
  %arrayidx591 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld590, i32 0, i64 0
  %rtx592 = bitcast %union.rtunion_def* %arrayidx591 to %struct.rtx_def**
  %326 = load %struct.rtx_def*, %struct.rtx_def** %rtx592, align 8
  %327 = load i32, i32* %mem_mode.addr, align 4
  %328 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call593 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %326, i32 %327, %struct.rtx_def* %328)
  store %struct.rtx_def* %call593, %struct.rtx_def** %new, align 8
  br label %if.end.594

if.end.594:                                       ; preds = %if.else.589, %if.then.585
  %329 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %330 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld595 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %330, i32 0, i32 1
  %arrayidx596 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld595, i32 0, i64 0
  %rtx597 = bitcast %union.rtunion_def* %arrayidx596 to %struct.rtx_def**
  %331 = load %struct.rtx_def*, %struct.rtx_def** %rtx597, align 8
  %cmp598 = icmp ne %struct.rtx_def* %329, %331
  br i1 %cmp598, label %if.then.600, label %if.end.640

if.then.600:                                      ; preds = %if.end.594
  %332 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %333 = bitcast %struct.rtx_def* %332 to i32*
  %bf.load601 = load i32, i32* %333, align 8
  %bf.lshr602 = lshr i32 %bf.load601, 16
  %bf.clear603 = and i32 %bf.lshr602, 255
  %idxprom604 = sext i32 %bf.clear603 to i64
  %arrayidx605 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom604
  %334 = load i8, i8* %arrayidx605, align 1
  %conv606 = zext i8 %334 to i32
  store i32 %conv606, i32* %x_size, align 4
  %335 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %336 = bitcast %struct.rtx_def* %335 to i32*
  %bf.load607 = load i32, i32* %336, align 8
  %bf.lshr608 = lshr i32 %bf.load607, 16
  %bf.clear609 = and i32 %bf.lshr608, 255
  %idxprom610 = sext i32 %bf.clear609 to i64
  %arrayidx611 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom610
  %337 = load i8, i8* %arrayidx611, align 1
  %conv612 = zext i8 %337 to i32
  store i32 %conv612, i32* %new_size, align 4
  %338 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %339 = bitcast %struct.rtx_def* %338 to i32*
  %bf.load613 = load i32, i32* %339, align 8
  %bf.clear614 = and i32 %bf.load613, 65535
  %cmp615 = icmp eq i32 %bf.clear614, 66
  br i1 %cmp615, label %land.lhs.true.617, label %if.else.632

land.lhs.true.617:                                ; preds = %if.then.600
  %340 = load i32, i32* %x_size, align 4
  %341 = load i32, i32* %new_size, align 4
  %cmp618 = icmp slt i32 %340, %341
  br i1 %cmp618, label %if.then.623, label %lor.lhs.false.620

lor.lhs.false.620:                                ; preds = %land.lhs.true.617
  %342 = load i32, i32* %x_size, align 4
  %343 = load i32, i32* %new_size, align 4
  %cmp621 = icmp eq i32 %342, %343
  br i1 %cmp621, label %if.then.623, label %if.else.632

if.then.623:                                      ; preds = %lor.lhs.false.620, %land.lhs.true.617
  %344 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %345 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %346 = bitcast %struct.rtx_def* %345 to i32*
  %bf.load624 = load i32, i32* %346, align 8
  %bf.lshr625 = lshr i32 %bf.load624, 16
  %bf.clear626 = and i32 %bf.lshr625, 255
  %347 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld627 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %347, i32 0, i32 1
  %arrayidx628 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld627, i32 0, i64 1
  %rtuint629 = bitcast %union.rtunion_def* %arrayidx628 to i32*
  %348 = load i32, i32* %rtuint629, align 4
  %conv630 = zext i32 %348 to i64
  %call631 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %344, i32 %bf.clear626, i64 %conv630, i32 0, i32 1)
  store %struct.rtx_def* %call631, %struct.rtx_def** %retval
  br label %return

if.else.632:                                      ; preds = %lor.lhs.false.620, %if.then.600
  %349 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %350 = bitcast %struct.rtx_def* %349 to i32*
  %bf.load633 = load i32, i32* %350, align 8
  %bf.lshr634 = lshr i32 %bf.load633, 16
  %bf.clear635 = and i32 %bf.lshr634, 255
  %351 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %352 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld636 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %352, i32 0, i32 1
  %arrayidx637 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld636, i32 0, i64 1
  %rtuint638 = bitcast %union.rtunion_def* %arrayidx637 to i32*
  %353 = load i32, i32* %rtuint638, align 4
  %call639 = call %struct.rtx_def* @gen_rtx_SUBREG(i32 %bf.clear635, %struct.rtx_def* %351, i32 %353)
  store %struct.rtx_def* %call639, %struct.rtx_def** %retval
  br label %return

if.end.640:                                       ; preds = %if.end.594
  %354 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %354, %struct.rtx_def** %retval
  br label %return

sw.bb.641:                                        ; preds = %if.end
  %355 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld642 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %355, i32 0, i32 1
  %arrayidx643 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld642, i32 0, i64 0
  %rtx644 = bitcast %union.rtunion_def* %arrayidx643 to %struct.rtx_def**
  %356 = load %struct.rtx_def*, %struct.rtx_def** %rtx644, align 8
  %357 = bitcast %struct.rtx_def* %356 to i32*
  %bf.load645 = load i32, i32* %357, align 8
  %bf.clear646 = and i32 %bf.load645, 65535
  %cmp647 = icmp eq i32 %bf.clear646, 70
  br i1 %cmp647, label %if.then.649, label %if.end.657

if.then.649:                                      ; preds = %sw.bb.641
  %358 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld650 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %358, i32 0, i32 1
  %arrayidx651 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld650, i32 0, i64 0
  %rtx652 = bitcast %union.rtunion_def* %arrayidx651 to %struct.rtx_def**
  %359 = load %struct.rtx_def*, %struct.rtx_def** %rtx652, align 8
  %fld653 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %359, i32 0, i32 1
  %arrayidx654 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld653, i32 0, i64 0
  %rtx655 = bitcast %union.rtunion_def* %arrayidx654 to %struct.rtx_def**
  %360 = load %struct.rtx_def*, %struct.rtx_def** %rtx655, align 8
  %361 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call656 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %360, i32 0, %struct.rtx_def* %361)
  store %struct.rtx_def* %call656, %struct.rtx_def** %retval
  br label %return

if.end.657:                                       ; preds = %sw.bb.641
  %362 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %363 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld658 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %363, i32 0, i32 1
  %arrayidx659 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld658, i32 0, i64 0
  %rtx660 = bitcast %union.rtunion_def* %arrayidx659 to %struct.rtx_def**
  %364 = load %struct.rtx_def*, %struct.rtx_def** %rtx660, align 8
  %365 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %366 = bitcast %struct.rtx_def* %365 to i32*
  %bf.load661 = load i32, i32* %366, align 8
  %bf.lshr662 = lshr i32 %bf.load661, 16
  %bf.clear663 = and i32 %bf.lshr662, 255
  %367 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call664 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %364, i32 %bf.clear663, %struct.rtx_def* %367)
  %call665 = call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %362, %struct.rtx_def* %call664)
  store %struct.rtx_def* %call665, %struct.rtx_def** %retval
  br label %return

sw.bb.666:                                        ; preds = %if.end
  %368 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld667 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %368, i32 0, i32 1
  %arrayidx668 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld667, i32 0, i64 0
  %rtx669 = bitcast %union.rtunion_def* %arrayidx668 to %struct.rtx_def**
  %369 = load %struct.rtx_def*, %struct.rtx_def** %rtx669, align 8
  %370 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call670 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %369, i32 0, %struct.rtx_def* %370)
  store %struct.rtx_def* %call670, %struct.rtx_def** %new, align 8
  %371 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %372 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld671 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %372, i32 0, i32 1
  %arrayidx672 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld671, i32 0, i64 0
  %rtx673 = bitcast %union.rtunion_def* %arrayidx672 to %struct.rtx_def**
  %373 = load %struct.rtx_def*, %struct.rtx_def** %rtx673, align 8
  %cmp674 = icmp ne %struct.rtx_def* %371, %373
  br i1 %cmp674, label %if.then.676, label %if.end.681

if.then.676:                                      ; preds = %sw.bb.666
  %374 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %375 = bitcast %struct.rtx_def* %374 to i32*
  %bf.load677 = load i32, i32* %375, align 8
  %bf.lshr678 = lshr i32 %bf.load677, 16
  %bf.clear679 = and i32 %bf.lshr678, 255
  %376 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %call680 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 %bf.clear679, %struct.rtx_def* %376)
  store %struct.rtx_def* %call680, %struct.rtx_def** %retval
  br label %return

if.end.681:                                       ; preds = %sw.bb.666
  %377 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %377, %struct.rtx_def** %retval
  br label %return

sw.bb.682:                                        ; preds = %if.end, %if.end, %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 2609, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.eliminate_regs, i32 0, i32 0)) #5
  unreachable

sw.default:                                       ; preds = %if.end
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  %378 = load i32, i32* %code, align 4
  %idxprom683 = sext i32 %378 to i64
  %arrayidx684 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom683
  %379 = load i8*, i8** %arrayidx684, align 8
  store i8* %379, i8** %fmt, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.685

for.cond.685:                                     ; preds = %for.inc.788, %sw.epilog
  %380 = load i32, i32* %i, align 4
  %381 = load i32, i32* %code, align 4
  %idxprom686 = sext i32 %381 to i64
  %arrayidx687 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom686
  %382 = load i8, i8* %arrayidx687, align 1
  %conv688 = zext i8 %382 to i32
  %cmp689 = icmp slt i32 %380, %conv688
  br i1 %cmp689, label %for.body.691, label %for.end.791

for.body.691:                                     ; preds = %for.cond.685
  %383 = load i8*, i8** %fmt, align 8
  %384 = load i8, i8* %383, align 1
  %conv692 = sext i8 %384 to i32
  %cmp693 = icmp eq i32 %conv692, 101
  br i1 %cmp693, label %if.then.695, label %if.else.720

if.then.695:                                      ; preds = %for.body.691
  %385 = load i32, i32* %i, align 4
  %idxprom696 = sext i32 %385 to i64
  %386 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld697 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %386, i32 0, i32 1
  %arrayidx698 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld697, i32 0, i64 %idxprom696
  %rtx699 = bitcast %union.rtunion_def* %arrayidx698 to %struct.rtx_def**
  %387 = load %struct.rtx_def*, %struct.rtx_def** %rtx699, align 8
  %388 = load i32, i32* %mem_mode.addr, align 4
  %389 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call700 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %387, i32 %388, %struct.rtx_def* %389)
  store %struct.rtx_def* %call700, %struct.rtx_def** %new, align 8
  %390 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %391 = load i32, i32* %i, align 4
  %idxprom701 = sext i32 %391 to i64
  %392 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld702 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %392, i32 0, i32 1
  %arrayidx703 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld702, i32 0, i64 %idxprom701
  %rtx704 = bitcast %union.rtunion_def* %arrayidx703 to %struct.rtx_def**
  %393 = load %struct.rtx_def*, %struct.rtx_def** %rtx704, align 8
  %cmp705 = icmp ne %struct.rtx_def* %390, %393
  br i1 %cmp705, label %land.lhs.true.707, label %if.end.715

land.lhs.true.707:                                ; preds = %if.then.695
  %394 = load i32, i32* %copied, align 4
  %tobool708 = icmp ne i32 %394, 0
  br i1 %tobool708, label %if.end.715, label %if.then.709

if.then.709:                                      ; preds = %land.lhs.true.707
  %395 = load i32, i32* %code, align 4
  %call710 = call %struct.rtx_def* @rtx_alloc(i32 %395)
  store %struct.rtx_def* %call710, %struct.rtx_def** %new_x, align 8
  %396 = load %struct.rtx_def*, %struct.rtx_def** %new_x, align 8
  %397 = bitcast %struct.rtx_def* %396 to i8*
  %398 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %399 = bitcast %struct.rtx_def* %398 to i8*
  %400 = load i32, i32* %code, align 4
  %idxprom711 = sext i32 %400 to i64
  %arrayidx712 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom711
  %401 = load i8, i8* %arrayidx712, align 1
  %conv713 = zext i8 %401 to i64
  %mul714 = mul i64 8, %conv713
  %add = add i64 8, %mul714
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %397, i8* %399, i64 %add, i32 8, i1 false)
  %402 = load %struct.rtx_def*, %struct.rtx_def** %new_x, align 8
  store %struct.rtx_def* %402, %struct.rtx_def** %x.addr, align 8
  store i32 1, i32* %copied, align 4
  br label %if.end.715

if.end.715:                                       ; preds = %if.then.709, %land.lhs.true.707, %if.then.695
  %403 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %404 = load i32, i32* %i, align 4
  %idxprom716 = sext i32 %404 to i64
  %405 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld717 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %405, i32 0, i32 1
  %arrayidx718 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld717, i32 0, i64 %idxprom716
  %rtx719 = bitcast %union.rtunion_def* %arrayidx718 to %struct.rtx_def**
  store %struct.rtx_def* %403, %struct.rtx_def** %rtx719, align 8
  br label %if.end.787

if.else.720:                                      ; preds = %for.body.691
  %406 = load i8*, i8** %fmt, align 8
  %407 = load i8, i8* %406, align 1
  %conv721 = sext i8 %407 to i32
  %cmp722 = icmp eq i32 %conv721, 69
  br i1 %cmp722, label %if.then.724, label %if.end.786

if.then.724:                                      ; preds = %if.else.720
  store i32 0, i32* %copied_vec, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.725

for.cond.725:                                     ; preds = %for.inc.784, %if.then.724
  %408 = load i32, i32* %j, align 4
  %409 = load i32, i32* %i, align 4
  %idxprom726 = sext i32 %409 to i64
  %410 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld727 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %410, i32 0, i32 1
  %arrayidx728 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld727, i32 0, i64 %idxprom726
  %rtvec = bitcast %union.rtunion_def* %arrayidx728 to %struct.rtvec_def**
  %411 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %411, i32 0, i32 0
  %412 = load i32, i32* %num_elem, align 4
  %cmp729 = icmp slt i32 %408, %412
  br i1 %cmp729, label %for.body.731, label %for.end.785

for.body.731:                                     ; preds = %for.cond.725
  %413 = load i32, i32* %j, align 4
  %idxprom732 = sext i32 %413 to i64
  %414 = load i32, i32* %i, align 4
  %idxprom733 = sext i32 %414 to i64
  %415 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld734 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %415, i32 0, i32 1
  %arrayidx735 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld734, i32 0, i64 %idxprom733
  %rtvec736 = bitcast %union.rtunion_def* %arrayidx735 to %struct.rtvec_def**
  %416 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec736, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %416, i32 0, i32 1
  %arrayidx737 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom732
  %417 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx737, align 8
  %418 = load i32, i32* %mem_mode.addr, align 4
  %419 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call738 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %417, i32 %418, %struct.rtx_def* %419)
  store %struct.rtx_def* %call738, %struct.rtx_def** %new, align 8
  %420 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %421 = load i32, i32* %j, align 4
  %idxprom739 = sext i32 %421 to i64
  %422 = load i32, i32* %i, align 4
  %idxprom740 = sext i32 %422 to i64
  %423 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld741 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %423, i32 0, i32 1
  %arrayidx742 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld741, i32 0, i64 %idxprom740
  %rtvec743 = bitcast %union.rtunion_def* %arrayidx742 to %struct.rtvec_def**
  %424 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec743, align 8
  %elem744 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %424, i32 0, i32 1
  %arrayidx745 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem744, i32 0, i64 %idxprom739
  %425 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx745, align 8
  %cmp746 = icmp ne %struct.rtx_def* %420, %425
  br i1 %cmp746, label %land.lhs.true.748, label %if.end.776

land.lhs.true.748:                                ; preds = %for.body.731
  %426 = load i32, i32* %copied_vec, align 4
  %tobool749 = icmp ne i32 %426, 0
  br i1 %tobool749, label %if.end.776, label %if.then.750

if.then.750:                                      ; preds = %land.lhs.true.748
  %427 = load i32, i32* %i, align 4
  %idxprom751 = sext i32 %427 to i64
  %428 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld752 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %428, i32 0, i32 1
  %arrayidx753 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld752, i32 0, i64 %idxprom751
  %rtvec754 = bitcast %union.rtunion_def* %arrayidx753 to %struct.rtvec_def**
  %429 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec754, align 8
  %num_elem755 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %429, i32 0, i32 0
  %430 = load i32, i32* %num_elem755, align 4
  %431 = load i32, i32* %i, align 4
  %idxprom756 = sext i32 %431 to i64
  %432 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld757 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %432, i32 0, i32 1
  %arrayidx758 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld757, i32 0, i64 %idxprom756
  %rtvec759 = bitcast %union.rtunion_def* %arrayidx758 to %struct.rtvec_def**
  %433 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec759, align 8
  %elem760 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %433, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem760, i32 0, i32 0
  %call761 = call %struct.rtvec_def* @gen_rtvec_v(i32 %430, %struct.rtx_def** %arraydecay)
  store %struct.rtvec_def* %call761, %struct.rtvec_def** %new_v, align 8
  %434 = load i32, i32* %copied, align 4
  %tobool762 = icmp ne i32 %434, 0
  br i1 %tobool762, label %if.end.771, label %if.then.763

if.then.763:                                      ; preds = %if.then.750
  %435 = load i32, i32* %code, align 4
  %call765 = call %struct.rtx_def* @rtx_alloc(i32 %435)
  store %struct.rtx_def* %call765, %struct.rtx_def** %new_x764, align 8
  %436 = load %struct.rtx_def*, %struct.rtx_def** %new_x764, align 8
  %437 = bitcast %struct.rtx_def* %436 to i8*
  %438 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %439 = bitcast %struct.rtx_def* %438 to i8*
  %440 = load i32, i32* %code, align 4
  %idxprom766 = sext i32 %440 to i64
  %arrayidx767 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom766
  %441 = load i8, i8* %arrayidx767, align 1
  %conv768 = zext i8 %441 to i64
  %mul769 = mul i64 8, %conv768
  %add770 = add i64 8, %mul769
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %437, i8* %439, i64 %add770, i32 8, i1 false)
  %442 = load %struct.rtx_def*, %struct.rtx_def** %new_x764, align 8
  store %struct.rtx_def* %442, %struct.rtx_def** %x.addr, align 8
  store i32 1, i32* %copied, align 4
  br label %if.end.771

if.end.771:                                       ; preds = %if.then.763, %if.then.750
  %443 = load %struct.rtvec_def*, %struct.rtvec_def** %new_v, align 8
  %444 = load i32, i32* %i, align 4
  %idxprom772 = sext i32 %444 to i64
  %445 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld773 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %445, i32 0, i32 1
  %arrayidx774 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld773, i32 0, i64 %idxprom772
  %rtvec775 = bitcast %union.rtunion_def* %arrayidx774 to %struct.rtvec_def**
  store %struct.rtvec_def* %443, %struct.rtvec_def** %rtvec775, align 8
  store i32 1, i32* %copied_vec, align 4
  br label %if.end.776

if.end.776:                                       ; preds = %if.end.771, %land.lhs.true.748, %for.body.731
  %446 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %447 = load i32, i32* %j, align 4
  %idxprom777 = sext i32 %447 to i64
  %448 = load i32, i32* %i, align 4
  %idxprom778 = sext i32 %448 to i64
  %449 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld779 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %449, i32 0, i32 1
  %arrayidx780 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld779, i32 0, i64 %idxprom778
  %rtvec781 = bitcast %union.rtunion_def* %arrayidx780 to %struct.rtvec_def**
  %450 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec781, align 8
  %elem782 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %450, i32 0, i32 1
  %arrayidx783 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem782, i32 0, i64 %idxprom777
  store %struct.rtx_def* %446, %struct.rtx_def** %arrayidx783, align 8
  br label %for.inc.784

for.inc.784:                                      ; preds = %if.end.776
  %451 = load i32, i32* %j, align 4
  %inc = add nsw i32 %451, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond.725

for.end.785:                                      ; preds = %for.cond.725
  br label %if.end.786

if.end.786:                                       ; preds = %for.end.785, %if.else.720
  br label %if.end.787

if.end.787:                                       ; preds = %if.end.786, %if.end.715
  br label %for.inc.788

for.inc.788:                                      ; preds = %if.end.787
  %452 = load i32, i32* %i, align 4
  %inc789 = add nsw i32 %452, 1
  store i32 %inc789, i32* %i, align 4
  %453 = load i8*, i8** %fmt, align 8
  %incdec.ptr790 = getelementptr inbounds i8, i8* %453, i32 1
  store i8* %incdec.ptr790, i8** %fmt, align 8
  br label %for.cond.685

for.end.791:                                      ; preds = %for.cond.685
  %454 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %454, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %for.end.791, %if.end.681, %if.then.676, %if.end.657, %if.then.649, %if.end.640, %if.else.632, %if.then.623, %if.end.544, %if.then.539, %if.end.528, %if.then.517, %cond.end.490, %if.end.457, %if.then.452, %if.end.402, %if.end.345, %if.else.344, %if.then.340, %for.end.227, %if.else.214, %if.then.212, %if.end.94, %if.then.88, %if.then.18, %if.end.8, %if.then.4, %sw.bb, %if.then
  %455 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %455
}

declare i32 @strict_memory_address_p(i32, %struct.rtx_def*) #1

declare void @setup_save_areas() #1

declare void @save_call_clobbered_regs() #1

; Function Attrs: nounwind uwtable
define internal void @calculate_needs_all_insns(i32 %global) #0 {
entry:
  %global.addr = alloca i32, align 4
  %pprev_reload = alloca %struct.insn_chain**, align 8
  %chain = alloca %struct.insn_chain*, align 8
  %next = alloca %struct.insn_chain*, align 8
  %__h = alloca %struct.obstack*, align 8
  %__o = alloca %struct.obstack*, align 8
  %__len = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %__o1 = alloca %struct.obstack*, align 8
  %value = alloca i8*, align 8
  %tmp35 = alloca i8*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %old_body = alloca %struct.rtx_def*, align 8
  %old_code = alloca i32, align 4
  %old_notes = alloca %struct.rtx_def*, align 8
  %did_elimination = alloca i32, align 4
  %operands_changed = alloca i32, align 4
  %set = alloca %struct.rtx_def*, align 8
  %set157 = alloca %struct.rtx_def*, align 8
  %__o254 = alloca %struct.obstack*, align 8
  %__obj = alloca i8*, align 8
  store i32 %global, i32* %global.addr, align 4
  store %struct.insn_chain** @insns_need_reload, %struct.insn_chain*** %pprev_reload, align 8
  store %struct.insn_chain* null, %struct.insn_chain** %next, align 8
  store i32 0, i32* @something_needs_elimination, align 4
  store %struct.obstack* @reload_obstack, %struct.obstack** %__h, align 8
  %0 = load %struct.obstack*, %struct.obstack** %__h, align 8
  store %struct.obstack* %0, %struct.obstack** %__o, align 8
  store i32 0, i32* %__len, align 4
  %1 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 4
  %2 = load i8*, i8** %chunk_limit, align 8
  %3 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 3
  %4 = load i8*, i8** %next_free, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %5 = load i32, i32* %__len, align 4
  %conv = sext i32 %5 to i64
  %cmp = icmp slt i64 %sub.ptr.sub, %conv
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %7 = load i32, i32* %__len, align 4
  call void @_obstack_newchunk(%struct.obstack* %6, i32 %7)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %__len, align 4
  %9 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %next_free2 = getelementptr inbounds %struct.obstack, %struct.obstack* %9, i32 0, i32 3
  %10 = load i8*, i8** %next_free2, align 8
  %idx.ext = sext i32 %8 to i64
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext
  store i8* %add.ptr, i8** %next_free2, align 8
  %11 = load %struct.obstack*, %struct.obstack** %__h, align 8
  store %struct.obstack* %11, %struct.obstack** %__o1, align 8
  %12 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %12, i32 0, i32 2
  %13 = load i8*, i8** %object_base, align 8
  store i8* %13, i8** %value, align 8
  %14 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free5 = getelementptr inbounds %struct.obstack, %struct.obstack* %14, i32 0, i32 3
  %15 = load i8*, i8** %next_free5, align 8
  %16 = load i8*, i8** %value, align 8
  %cmp6 = icmp eq i8* %15, %16
  br i1 %cmp6, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end
  %17 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 10
  %bf.load = load i8, i8* %maybe_empty_object, align 8
  %bf.clear = and i8 %bf.load, -3
  %bf.set = or i8 %bf.clear, 2
  store i8 %bf.set, i8* %maybe_empty_object, align 8
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.8, %if.end
  %18 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free10 = getelementptr inbounds %struct.obstack, %struct.obstack* %18, i32 0, i32 3
  %19 = load i8*, i8** %next_free10, align 8
  %sub.ptr.lhs.cast11 = ptrtoint i8* %19 to i64
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast11, 0
  %20 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %20, i32 0, i32 6
  %21 = load i32, i32* %alignment_mask, align 4
  %conv13 = sext i32 %21 to i64
  %add = add nsw i64 %sub.ptr.sub12, %conv13
  %22 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %alignment_mask14 = getelementptr inbounds %struct.obstack, %struct.obstack* %22, i32 0, i32 6
  %23 = load i32, i32* %alignment_mask14, align 4
  %neg = xor i32 %23, -1
  %conv15 = sext i32 %neg to i64
  %and = and i64 %add, %conv15
  %add.ptr16 = getelementptr inbounds i8, i8* null, i64 %and
  %24 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free17 = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0, i32 3
  store i8* %add.ptr16, i8** %next_free17, align 8
  %25 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free18 = getelementptr inbounds %struct.obstack, %struct.obstack* %25, i32 0, i32 3
  %26 = load i8*, i8** %next_free18, align 8
  %27 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %27, i32 0, i32 1
  %28 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8
  %29 = bitcast %struct._obstack_chunk* %28 to i8*
  %sub.ptr.lhs.cast19 = ptrtoint i8* %26 to i64
  %sub.ptr.rhs.cast20 = ptrtoint i8* %29 to i64
  %sub.ptr.sub21 = sub i64 %sub.ptr.lhs.cast19, %sub.ptr.rhs.cast20
  %30 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk_limit22 = getelementptr inbounds %struct.obstack, %struct.obstack* %30, i32 0, i32 4
  %31 = load i8*, i8** %chunk_limit22, align 8
  %32 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk23 = getelementptr inbounds %struct.obstack, %struct.obstack* %32, i32 0, i32 1
  %33 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk23, align 8
  %34 = bitcast %struct._obstack_chunk* %33 to i8*
  %sub.ptr.lhs.cast24 = ptrtoint i8* %31 to i64
  %sub.ptr.rhs.cast25 = ptrtoint i8* %34 to i64
  %sub.ptr.sub26 = sub i64 %sub.ptr.lhs.cast24, %sub.ptr.rhs.cast25
  %cmp27 = icmp sgt i64 %sub.ptr.sub21, %sub.ptr.sub26
  br i1 %cmp27, label %if.then.29, label %if.end.32

if.then.29:                                       ; preds = %if.end.9
  %35 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk_limit30 = getelementptr inbounds %struct.obstack, %struct.obstack* %35, i32 0, i32 4
  %36 = load i8*, i8** %chunk_limit30, align 8
  %37 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free31 = getelementptr inbounds %struct.obstack, %struct.obstack* %37, i32 0, i32 3
  store i8* %36, i8** %next_free31, align 8
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.29, %if.end.9
  %38 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free33 = getelementptr inbounds %struct.obstack, %struct.obstack* %38, i32 0, i32 3
  %39 = load i8*, i8** %next_free33, align 8
  %40 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %object_base34 = getelementptr inbounds %struct.obstack, %struct.obstack* %40, i32 0, i32 2
  store i8* %39, i8** %object_base34, align 8
  %41 = load i8*, i8** %value, align 8
  store i8* %41, i8** %tmp35
  %42 = load i8*, i8** %tmp35
  store i8* %42, i8** %tmp
  %43 = load i8*, i8** %tmp
  store i8* %43, i8** @reload_insn_firstobj, align 8
  %44 = load %struct.insn_chain*, %struct.insn_chain** @reload_insn_chain, align 8
  store %struct.insn_chain* %44, %struct.insn_chain** %chain, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.32
  %45 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %cmp36 = icmp ne %struct.insn_chain* %45, null
  br i1 %cmp36, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %46 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %insn39 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %46, i32 0, i32 4
  %47 = load %struct.rtx_def*, %struct.rtx_def** %insn39, align 8
  store %struct.rtx_def* %47, %struct.rtx_def** %insn, align 8
  %48 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %next40 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %48, i32 0, i32 0
  %49 = load %struct.insn_chain*, %struct.insn_chain** %next40, align 8
  store %struct.insn_chain* %49, %struct.insn_chain** %next, align 8
  %50 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %n_reloads = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %50, i32 0, i32 8
  store i32 0, i32* %n_reloads, align 4
  %51 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %need_elim = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %51, i32 0, i32 11
  %bf.load41 = load i8, i8* %need_elim, align 2
  %bf.clear42 = and i8 %bf.load41, -5
  store i8 %bf.clear42, i8* %need_elim, align 2
  %52 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %need_reload = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %52, i32 0, i32 11
  %bf.load43 = load i8, i8* %need_reload, align 2
  %bf.clear44 = and i8 %bf.load43, -2
  store i8 %bf.clear44, i8* %need_reload, align 2
  %53 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %need_operand_change = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %53, i32 0, i32 11
  %bf.load45 = load i8, i8* %need_operand_change, align 2
  %bf.clear46 = and i8 %bf.load45, -3
  store i8 %bf.clear46, i8* %need_operand_change, align 2
  %54 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %55 = bitcast %struct.rtx_def* %54 to i32*
  %bf.load47 = load i32, i32* %55, align 8
  %bf.clear48 = and i32 %bf.load47, 65535
  %cmp49 = icmp eq i32 %bf.clear48, 36
  br i1 %cmp49, label %if.then.64, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %56 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %57 = bitcast %struct.rtx_def* %56 to i32*
  %bf.load51 = load i32, i32* %57, align 8
  %bf.clear52 = and i32 %bf.load51, 65535
  %cmp53 = icmp eq i32 %bf.clear52, 33
  br i1 %cmp53, label %if.then.64, label %lor.lhs.false.55

lor.lhs.false.55:                                 ; preds = %lor.lhs.false
  %58 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %59 = bitcast %struct.rtx_def* %58 to i32*
  %bf.load56 = load i32, i32* %59, align 8
  %bf.clear57 = and i32 %bf.load56, 65535
  %idxprom = sext i32 %bf.clear57 to i64
  %arrayidx = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %60 = load i8, i8* %arrayidx, align 1
  %conv58 = sext i8 %60 to i32
  %cmp59 = icmp eq i32 %conv58, 105
  br i1 %cmp59, label %land.lhs.true, label %if.end.65

land.lhs.true:                                    ; preds = %lor.lhs.false.55
  %61 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 6
  %rtx = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %cmp62 = icmp ne %struct.rtx_def* %62, null
  br i1 %cmp62, label %if.then.64, label %if.end.65

if.then.64:                                       ; preds = %land.lhs.true, %lor.lhs.false, %for.body
  %63 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %64 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  call void @set_label_offsets(%struct.rtx_def* %63, %struct.rtx_def* %64, i32 0)
  br label %if.end.65

if.end.65:                                        ; preds = %if.then.64, %land.lhs.true, %lor.lhs.false.55
  %65 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %66 = bitcast %struct.rtx_def* %65 to i32*
  %bf.load66 = load i32, i32* %66, align 8
  %bf.clear67 = and i32 %bf.load66, 65535
  %idxprom68 = sext i32 %bf.clear67 to i64
  %arrayidx69 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom68
  %67 = load i8, i8* %arrayidx69, align 1
  %conv70 = sext i8 %67 to i32
  %cmp71 = icmp eq i32 %conv70, 105
  br i1 %cmp71, label %if.then.73, label %if.end.282

if.then.73:                                       ; preds = %if.end.65
  %68 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1
  %arrayidx76 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld75, i32 0, i64 3
  %rtx77 = bitcast %union.rtunion_def* %arrayidx76 to %struct.rtx_def**
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rtx77, align 8
  store %struct.rtx_def* %69, %struct.rtx_def** %old_body, align 8
  %70 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx80 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld79, i32 0, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx80 to i32*
  %71 = load i32, i32* %rtint, align 4
  store i32 %71, i32* %old_code, align 4
  %72 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1
  %arrayidx83 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld82, i32 0, i64 6
  %rtx84 = bitcast %union.rtunion_def* %arrayidx83 to %struct.rtx_def**
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rtx84, align 8
  store %struct.rtx_def* %73, %struct.rtx_def** %old_notes, align 8
  store i32 0, i32* %did_elimination, align 4
  store i32 0, i32* %operands_changed, align 4
  %74 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %75 = bitcast %struct.rtx_def* %74 to i32*
  %bf.load88 = load i32, i32* %75, align 8
  %bf.clear89 = and i32 %bf.load88, 65535
  %idxprom90 = sext i32 %bf.clear89 to i64
  %arrayidx91 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom90
  %76 = load i8, i8* %arrayidx91, align 1
  %conv92 = sext i8 %76 to i32
  %cmp93 = icmp eq i32 %conv92, 105
  br i1 %cmp93, label %cond.true, label %cond.false.109

cond.true:                                        ; preds = %if.then.73
  %77 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1
  %arrayidx96 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld95, i32 0, i64 3
  %rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**
  %78 = load %struct.rtx_def*, %struct.rtx_def** %rtx97, align 8
  %79 = bitcast %struct.rtx_def* %78 to i32*
  %bf.load98 = load i32, i32* %79, align 8
  %bf.clear99 = and i32 %bf.load98, 65535
  %cmp100 = icmp eq i32 %bf.clear99, 47
  br i1 %cmp100, label %cond.true.102, label %cond.false

cond.true.102:                                    ; preds = %cond.true
  %80 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1
  %arrayidx104 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld103, i32 0, i64 3
  %rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rtx105, align 8
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %82 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %83 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx107 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld106, i32 0, i64 3
  %rtx108 = bitcast %union.rtunion_def* %arrayidx107 to %struct.rtx_def**
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rtx108, align 8
  %call = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %82, %struct.rtx_def* %84)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.102
  %cond = phi %struct.rtx_def* [ %81, %cond.true.102 ], [ %call, %cond.false ]
  br label %cond.end.110

cond.false.109:                                   ; preds = %if.then.73
  br label %cond.end.110

cond.end.110:                                     ; preds = %cond.false.109, %cond.end
  %cond111 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false.109 ]
  store %struct.rtx_def* %cond111, %struct.rtx_def** %set, align 8
  %85 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %tobool = icmp ne %struct.rtx_def* %85, null
  br i1 %tobool, label %land.lhs.true.112, label %if.end.142

land.lhs.true.112:                                ; preds = %cond.end.110
  %86 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1
  %arrayidx114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld113, i32 0, i64 0
  %rtx115 = bitcast %union.rtunion_def* %arrayidx114 to %struct.rtx_def**
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rtx115, align 8
  %88 = bitcast %struct.rtx_def* %87 to i32*
  %bf.load116 = load i32, i32* %88, align 8
  %bf.clear117 = and i32 %bf.load116, 65535
  %cmp118 = icmp eq i32 %bf.clear117, 61
  br i1 %cmp118, label %land.lhs.true.120, label %if.end.142

land.lhs.true.120:                                ; preds = %land.lhs.true.112
  %89 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1
  %arrayidx122 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld121, i32 0, i64 0
  %rtx123 = bitcast %union.rtunion_def* %arrayidx122 to %struct.rtx_def**
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rtx123, align 8
  %fld124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1
  %arrayidx125 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld124, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx125 to i32*
  %91 = load i32, i32* %rtuint, align 4
  %idxprom126 = zext i32 %91 to i64
  %92 = load i16*, i16** @reg_renumber, align 8
  %arrayidx127 = getelementptr inbounds i16, i16* %92, i64 %idxprom126
  %93 = load i16, i16* %arrayidx127, align 2
  %conv128 = sext i16 %93 to i32
  %cmp129 = icmp slt i32 %conv128, 0
  br i1 %cmp129, label %land.lhs.true.131, label %if.end.142

land.lhs.true.131:                                ; preds = %land.lhs.true.120
  %94 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld132 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1
  %arrayidx133 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld132, i32 0, i64 0
  %rtx134 = bitcast %union.rtunion_def* %arrayidx133 to %struct.rtx_def**
  %95 = load %struct.rtx_def*, %struct.rtx_def** %rtx134, align 8
  %fld135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1
  %arrayidx136 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld135, i32 0, i64 0
  %rtuint137 = bitcast %union.rtunion_def* %arrayidx136 to i32*
  %96 = load i32, i32* %rtuint137, align 4
  %idxprom138 = zext i32 %96 to i64
  %97 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx139 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %97, i64 %idxprom138
  %98 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx139, align 8
  %tobool140 = icmp ne %struct.rtx_def* %98, null
  br i1 %tobool140, label %if.then.141, label %if.end.142

if.then.141:                                      ; preds = %land.lhs.true.131
  br label %for.inc

if.end.142:                                       ; preds = %land.lhs.true.131, %land.lhs.true.120, %land.lhs.true.112, %cond.end.110
  %99 = load i32, i32* @num_eliminable, align 4
  %tobool143 = icmp ne i32 %99, 0
  br i1 %tobool143, label %if.then.146, label %lor.lhs.false.144

lor.lhs.false.144:                                ; preds = %if.end.142
  %100 = load i32, i32* @num_eliminable_invariants, align 4
  %tobool145 = icmp ne i32 %100, 0
  br i1 %tobool145, label %if.then.146, label %if.end.148

if.then.146:                                      ; preds = %lor.lhs.false.144, %if.end.142
  %101 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call147 = call i32 @eliminate_regs_in_insn(%struct.rtx_def* %101, i32 0)
  store i32 %call147, i32* %did_elimination, align 4
  br label %if.end.148

if.end.148:                                       ; preds = %if.then.146, %lor.lhs.false.144
  %102 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %103 = load i8, i8* @spill_indirect_levels, align 1
  %conv149 = sext i8 %103 to i32
  %104 = load i32, i32* %global.addr, align 4
  %call150 = call i32 @find_reloads(%struct.rtx_def* %102, i32 0, i32 %conv149, i32 %104, i16* getelementptr inbounds ([53 x i16], [53 x i16]* @spill_reg_order, i32 0, i32 0))
  store i32 %call150, i32* %operands_changed, align 4
  %105 = load i32, i32* @flag_expensive_optimizations, align 4
  %tobool151 = icmp ne i32 %105, 0
  br i1 %tobool151, label %land.lhs.true.152, label %if.end.228

land.lhs.true.152:                                ; preds = %if.end.148
  %106 = load i32, i32* @n_reloads, align 4
  %cmp153 = icmp sgt i32 %106, 1
  br i1 %cmp153, label %if.then.155, label %if.end.228

if.then.155:                                      ; preds = %land.lhs.true.152
  %107 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %108 = bitcast %struct.rtx_def* %107 to i32*
  %bf.load158 = load i32, i32* %108, align 8
  %bf.clear159 = and i32 %bf.load158, 65535
  %idxprom160 = sext i32 %bf.clear159 to i64
  %arrayidx161 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom160
  %109 = load i8, i8* %arrayidx161, align 1
  %conv162 = sext i8 %109 to i32
  %cmp163 = icmp eq i32 %conv162, 105
  br i1 %cmp163, label %cond.true.165, label %cond.false.184

cond.true.165:                                    ; preds = %if.then.155
  %110 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld166 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %110, i32 0, i32 1
  %arrayidx167 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld166, i32 0, i64 3
  %rtx168 = bitcast %union.rtunion_def* %arrayidx167 to %struct.rtx_def**
  %111 = load %struct.rtx_def*, %struct.rtx_def** %rtx168, align 8
  %112 = bitcast %struct.rtx_def* %111 to i32*
  %bf.load169 = load i32, i32* %112, align 8
  %bf.clear170 = and i32 %bf.load169, 65535
  %cmp171 = icmp eq i32 %bf.clear170, 47
  br i1 %cmp171, label %cond.true.173, label %cond.false.177

cond.true.173:                                    ; preds = %cond.true.165
  %113 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld174 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %113, i32 0, i32 1
  %arrayidx175 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld174, i32 0, i64 3
  %rtx176 = bitcast %union.rtunion_def* %arrayidx175 to %struct.rtx_def**
  %114 = load %struct.rtx_def*, %struct.rtx_def** %rtx176, align 8
  br label %cond.end.182

cond.false.177:                                   ; preds = %cond.true.165
  %115 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %116 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld178 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i32 0, i32 1
  %arrayidx179 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld178, i32 0, i64 3
  %rtx180 = bitcast %union.rtunion_def* %arrayidx179 to %struct.rtx_def**
  %117 = load %struct.rtx_def*, %struct.rtx_def** %rtx180, align 8
  %call181 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %115, %struct.rtx_def* %117)
  br label %cond.end.182

cond.end.182:                                     ; preds = %cond.false.177, %cond.true.173
  %cond183 = phi %struct.rtx_def* [ %114, %cond.true.173 ], [ %call181, %cond.false.177 ]
  br label %cond.end.185

cond.false.184:                                   ; preds = %if.then.155
  br label %cond.end.185

cond.end.185:                                     ; preds = %cond.false.184, %cond.end.182
  %cond186 = phi %struct.rtx_def* [ %cond183, %cond.end.182 ], [ null, %cond.false.184 ]
  store %struct.rtx_def* %cond186, %struct.rtx_def** %set157, align 8
  %118 = load %struct.rtx_def*, %struct.rtx_def** %set157, align 8
  %tobool187 = icmp ne %struct.rtx_def* %118, null
  br i1 %tobool187, label %land.lhs.true.188, label %if.end.227

land.lhs.true.188:                                ; preds = %cond.end.185
  %119 = load %struct.rtx_def*, %struct.rtx_def** %set157, align 8
  %fld189 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %119, i32 0, i32 1
  %arrayidx190 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld189, i32 0, i64 1
  %rtx191 = bitcast %union.rtunion_def* %arrayidx190 to %struct.rtx_def**
  %120 = load %struct.rtx_def*, %struct.rtx_def** %rtx191, align 8
  %121 = load %struct.rtx_def*, %struct.rtx_def** %set157, align 8
  %fld192 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %121, i32 0, i32 1
  %arrayidx193 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld192, i32 0, i64 0
  %rtx194 = bitcast %union.rtunion_def* %arrayidx193 to %struct.rtx_def**
  %122 = load %struct.rtx_def*, %struct.rtx_def** %rtx194, align 8
  %cmp195 = icmp eq %struct.rtx_def* %120, %122
  br i1 %cmp195, label %land.lhs.true.197, label %if.end.227

land.lhs.true.197:                                ; preds = %land.lhs.true.188
  %123 = load %struct.rtx_def*, %struct.rtx_def** %set157, align 8
  %fld198 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %123, i32 0, i32 1
  %arrayidx199 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld198, i32 0, i64 1
  %rtx200 = bitcast %union.rtunion_def* %arrayidx199 to %struct.rtx_def**
  %124 = load %struct.rtx_def*, %struct.rtx_def** %rtx200, align 8
  %125 = bitcast %struct.rtx_def* %124 to i32*
  %bf.load201 = load i32, i32* %125, align 8
  %bf.clear202 = and i32 %bf.load201, 65535
  %cmp203 = icmp eq i32 %bf.clear202, 61
  br i1 %cmp203, label %land.lhs.true.205, label %if.end.227

land.lhs.true.205:                                ; preds = %land.lhs.true.197
  %126 = load %struct.rtx_def*, %struct.rtx_def** %set157, align 8
  %fld206 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1
  %arrayidx207 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld206, i32 0, i64 1
  %rtx208 = bitcast %union.rtunion_def* %arrayidx207 to %struct.rtx_def**
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rtx208, align 8
  %fld209 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %127, i32 0, i32 1
  %arrayidx210 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld209, i32 0, i64 0
  %rtuint211 = bitcast %union.rtunion_def* %arrayidx210 to i32*
  %128 = load i32, i32* %rtuint211, align 4
  %cmp212 = icmp uge i32 %128, 53
  br i1 %cmp212, label %if.then.214, label %if.end.227

if.then.214:                                      ; preds = %land.lhs.true.205
  %129 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call215 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %129)
  %130 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %prev = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %130, i32 0, i32 1
  %131 = load %struct.insn_chain*, %struct.insn_chain** %prev, align 8
  %tobool216 = icmp ne %struct.insn_chain* %131, null
  br i1 %tobool216, label %if.then.217, label %if.else

if.then.217:                                      ; preds = %if.then.214
  %132 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8
  %133 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %prev218 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %133, i32 0, i32 1
  %134 = load %struct.insn_chain*, %struct.insn_chain** %prev218, align 8
  %next219 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %134, i32 0, i32 0
  store %struct.insn_chain* %132, %struct.insn_chain** %next219, align 8
  br label %if.end.220

if.else:                                          ; preds = %if.then.214
  %135 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8
  store %struct.insn_chain* %135, %struct.insn_chain** @reload_insn_chain, align 8
  br label %if.end.220

if.end.220:                                       ; preds = %if.else, %if.then.217
  %136 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8
  %tobool221 = icmp ne %struct.insn_chain* %136, null
  br i1 %tobool221, label %if.then.222, label %if.end.225

if.then.222:                                      ; preds = %if.end.220
  %137 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %prev223 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %137, i32 0, i32 1
  %138 = load %struct.insn_chain*, %struct.insn_chain** %prev223, align 8
  %139 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8
  %prev224 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %139, i32 0, i32 1
  store %struct.insn_chain* %138, %struct.insn_chain** %prev224, align 8
  br label %if.end.225

if.end.225:                                       ; preds = %if.then.222, %if.end.220
  %140 = load %struct.insn_chain*, %struct.insn_chain** @unused_insn_chains, align 8
  %141 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %next226 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %141, i32 0, i32 0
  store %struct.insn_chain* %140, %struct.insn_chain** %next226, align 8
  %142 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  store %struct.insn_chain* %142, %struct.insn_chain** @unused_insn_chains, align 8
  br label %for.inc

if.end.227:                                       ; preds = %land.lhs.true.205, %land.lhs.true.197, %land.lhs.true.188, %cond.end.185
  br label %if.end.228

if.end.228:                                       ; preds = %if.end.227, %land.lhs.true.152, %if.end.148
  %143 = load i32, i32* @num_eliminable, align 4
  %tobool229 = icmp ne i32 %143, 0
  br i1 %tobool229, label %if.then.230, label %if.end.231

if.then.230:                                      ; preds = %if.end.228
  call void @update_eliminable_offsets()
  br label %if.end.231

if.end.231:                                       ; preds = %if.then.230, %if.end.228
  %144 = load i32, i32* %did_elimination, align 4
  %145 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %need_elim232 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %145, i32 0, i32 11
  %146 = trunc i32 %144 to i8
  %bf.load233 = load i8, i8* %need_elim232, align 2
  %bf.value = and i8 %146, 1
  %bf.shl = shl i8 %bf.value, 2
  %bf.clear234 = and i8 %bf.load233, -5
  %bf.set235 = or i8 %bf.clear234, %bf.shl
  store i8 %bf.set235, i8* %need_elim232, align 2
  %bf.result.cast = zext i8 %bf.value to i32
  %147 = load i32, i32* @n_reloads, align 4
  %cmp236 = icmp sgt i32 %147, 0
  %conv237 = zext i1 %cmp236 to i32
  %148 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %need_reload238 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %148, i32 0, i32 11
  %149 = trunc i32 %conv237 to i8
  %bf.load239 = load i8, i8* %need_reload238, align 2
  %bf.value240 = and i8 %149, 1
  %bf.clear241 = and i8 %bf.load239, -2
  %bf.set242 = or i8 %bf.clear241, %bf.value240
  store i8 %bf.set242, i8* %need_reload238, align 2
  %bf.result.cast243 = zext i8 %bf.value240 to i32
  %150 = load i32, i32* %operands_changed, align 4
  %151 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %need_operand_change244 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %151, i32 0, i32 11
  %152 = trunc i32 %150 to i8
  %bf.load245 = load i8, i8* %need_operand_change244, align 2
  %bf.value246 = and i8 %152, 1
  %bf.shl247 = shl i8 %bf.value246, 1
  %bf.clear248 = and i8 %bf.load245, -3
  %bf.set249 = or i8 %bf.clear248, %bf.shl247
  store i8 %bf.set249, i8* %need_operand_change244, align 2
  %bf.result.cast250 = zext i8 %bf.value246 to i32
  %153 = load i32, i32* %did_elimination, align 4
  %tobool251 = icmp ne i32 %153, 0
  br i1 %tobool251, label %if.then.252, label %if.end.277

if.then.252:                                      ; preds = %if.end.231
  store %struct.obstack* @reload_obstack, %struct.obstack** %__o254, align 8
  %154 = load i8*, i8** @reload_insn_firstobj, align 8
  store i8* %154, i8** %__obj, align 8
  %155 = load i8*, i8** %__obj, align 8
  %156 = load %struct.obstack*, %struct.obstack** %__o254, align 8
  %chunk256 = getelementptr inbounds %struct.obstack, %struct.obstack* %156, i32 0, i32 1
  %157 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk256, align 8
  %158 = bitcast %struct._obstack_chunk* %157 to i8*
  %cmp257 = icmp ugt i8* %155, %158
  br i1 %cmp257, label %land.lhs.true.259, label %if.else.266

land.lhs.true.259:                                ; preds = %if.then.252
  %159 = load i8*, i8** %__obj, align 8
  %160 = load %struct.obstack*, %struct.obstack** %__o254, align 8
  %chunk_limit260 = getelementptr inbounds %struct.obstack, %struct.obstack* %160, i32 0, i32 4
  %161 = load i8*, i8** %chunk_limit260, align 8
  %cmp261 = icmp ult i8* %159, %161
  br i1 %cmp261, label %if.then.263, label %if.else.266

if.then.263:                                      ; preds = %land.lhs.true.259
  %162 = load i8*, i8** %__obj, align 8
  %163 = load %struct.obstack*, %struct.obstack** %__o254, align 8
  %object_base264 = getelementptr inbounds %struct.obstack, %struct.obstack* %163, i32 0, i32 2
  store i8* %162, i8** %object_base264, align 8
  %164 = load %struct.obstack*, %struct.obstack** %__o254, align 8
  %next_free265 = getelementptr inbounds %struct.obstack, %struct.obstack* %164, i32 0, i32 3
  store i8* %162, i8** %next_free265, align 8
  br label %if.end.267

if.else.266:                                      ; preds = %land.lhs.true.259, %if.then.252
  %165 = load %struct.obstack*, %struct.obstack** %__o254, align 8
  %166 = load i8*, i8** %__obj, align 8
  call void @obstack_free(%struct.obstack* %165, i8* %166)
  br label %if.end.267

if.end.267:                                       ; preds = %if.else.266, %if.then.263
  %167 = load %struct.rtx_def*, %struct.rtx_def** %old_body, align 8
  %168 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld268 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %168, i32 0, i32 1
  %arrayidx269 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld268, i32 0, i64 3
  %rtx270 = bitcast %union.rtunion_def* %arrayidx269 to %struct.rtx_def**
  store %struct.rtx_def* %167, %struct.rtx_def** %rtx270, align 8
  %169 = load i32, i32* %old_code, align 4
  %170 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld271 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %170, i32 0, i32 1
  %arrayidx272 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld271, i32 0, i64 4
  %rtint273 = bitcast %union.rtunion_def* %arrayidx272 to i32*
  store i32 %169, i32* %rtint273, align 4
  %171 = load %struct.rtx_def*, %struct.rtx_def** %old_notes, align 8
  %172 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld274 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %172, i32 0, i32 1
  %arrayidx275 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld274, i32 0, i64 6
  %rtx276 = bitcast %union.rtunion_def* %arrayidx275 to %struct.rtx_def**
  store %struct.rtx_def* %171, %struct.rtx_def** %rtx276, align 8
  store i32 1, i32* @something_needs_elimination, align 4
  br label %if.end.277

if.end.277:                                       ; preds = %if.end.267, %if.end.231
  %173 = load i32, i32* %operands_changed, align 4
  %174 = load i32, i32* @something_needs_operands_changed, align 4
  %or = or i32 %174, %173
  store i32 %or, i32* @something_needs_operands_changed, align 4
  %175 = load i32, i32* @n_reloads, align 4
  %cmp278 = icmp ne i32 %175, 0
  br i1 %cmp278, label %if.then.280, label %if.end.281

if.then.280:                                      ; preds = %if.end.277
  %176 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  call void @copy_reloads(%struct.insn_chain* %176)
  %177 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %178 = load %struct.insn_chain**, %struct.insn_chain*** %pprev_reload, align 8
  store %struct.insn_chain* %177, %struct.insn_chain** %178, align 8
  %179 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %next_need_reload = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %179, i32 0, i32 2
  store %struct.insn_chain** %next_need_reload, %struct.insn_chain*** %pprev_reload, align 8
  br label %if.end.281

if.end.281:                                       ; preds = %if.then.280, %if.end.277
  br label %if.end.282

if.end.282:                                       ; preds = %if.end.281, %if.end.65
  br label %for.inc

for.inc:                                          ; preds = %if.end.282, %if.end.225, %if.then.141
  %180 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8
  store %struct.insn_chain* %180, %struct.insn_chain** %chain, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %181 = load %struct.insn_chain**, %struct.insn_chain*** %pprev_reload, align 8
  store %struct.insn_chain* null, %struct.insn_chain** %181, align 8
  ret void
}

declare void @bitmap_clear(%struct.bitmap_head_def*) #1

; Function Attrs: nounwind uwtable
define internal void @update_eliminables(i64* %pset) #0 {
entry:
  %pset.addr = alloca i64*, align 8
  %previous_frame_pointer_needed = alloca i32, align 4
  %ep = alloca %struct.elim_table*, align 8
  %op = alloca %struct.elim_table*, align 8
  %new_to = alloca i32, align 4
  store i64* %pset, i64** %pset.addr, align 8
  %0 = load i32, i32* @frame_pointer_needed, align 4
  store i32 %0, i32* %previous_frame_pointer_needed, align 4
  %1 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %1, %struct.elim_table** %ep, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %3 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %3, i64 4
  %cmp = icmp ult %struct.elim_table* %2, %arrayidx
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %from = getelementptr inbounds %struct.elim_table, %struct.elim_table* %4, i32 0, i32 0
  %5 = load i32, i32* %from, align 4
  %cmp1 = icmp eq i32 %5, 6
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %for.body
  %call = call i32 @ix86_frame_pointer_required()
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %for.body
  %6 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to = getelementptr inbounds %struct.elim_table, %struct.elim_table* %6, i32 0, i32 1
  %7 = load i32, i32* %to, align 4
  %cmp2 = icmp eq i32 %7, 7
  br i1 %cmp2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false
  %8 = load i32, i32* @frame_pointer_needed, align 4
  %tobool3 = icmp ne i32 %8, 0
  br i1 %tobool3, label %if.then, label %if.end

cond.false:                                       ; preds = %lor.lhs.false
  br i1 true, label %if.end, label %if.then

if.then:                                          ; preds = %cond.false, %cond.true, %land.lhs.true
  %9 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate = getelementptr inbounds %struct.elim_table, %struct.elim_table* %9, i32 0, i32 3
  store i32 0, i32* %can_eliminate, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false, %cond.true
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %10, i32 1
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %11 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %11, %struct.elim_table** %ep, align 8
  br label %for.cond.4

for.cond.4:                                       ; preds = %for.inc.46, %for.end
  %12 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %13 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx5 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %13, i64 4
  %cmp6 = icmp ult %struct.elim_table* %12, %arrayidx5
  br i1 %cmp6, label %for.body.7, label %for.end.48

for.body.7:                                       ; preds = %for.cond.4
  store i32 -1, i32* %new_to, align 4
  %14 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate8 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %14, i32 0, i32 3
  %15 = load i32, i32* %can_eliminate8, align 4
  %tobool9 = icmp ne i32 %15, 0
  br i1 %tobool9, label %if.end.45, label %land.lhs.true.10

land.lhs.true.10:                                 ; preds = %for.body.7
  %16 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate_previous = getelementptr inbounds %struct.elim_table, %struct.elim_table* %16, i32 0, i32 4
  %17 = load i32, i32* %can_eliminate_previous, align 4
  %tobool11 = icmp ne i32 %17, 0
  br i1 %tobool11, label %if.then.12, label %if.end.45

if.then.12:                                       ; preds = %land.lhs.true.10
  %18 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %18, %struct.elim_table** %op, align 8
  br label %for.cond.13

for.cond.13:                                      ; preds = %for.inc.26, %if.then.12
  %19 = load %struct.elim_table*, %struct.elim_table** %op, align 8
  %20 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx14 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %20, i64 4
  %cmp15 = icmp ult %struct.elim_table* %19, %arrayidx14
  br i1 %cmp15, label %for.body.16, label %for.end.28

for.body.16:                                      ; preds = %for.cond.13
  %21 = load %struct.elim_table*, %struct.elim_table** %op, align 8
  %from17 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %21, i32 0, i32 0
  %22 = load i32, i32* %from17, align 4
  %23 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %from18 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %23, i32 0, i32 0
  %24 = load i32, i32* %from18, align 4
  %cmp19 = icmp eq i32 %22, %24
  br i1 %cmp19, label %land.lhs.true.20, label %if.end.25

land.lhs.true.20:                                 ; preds = %for.body.16
  %25 = load %struct.elim_table*, %struct.elim_table** %op, align 8
  %can_eliminate21 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %25, i32 0, i32 3
  %26 = load i32, i32* %can_eliminate21, align 4
  %tobool22 = icmp ne i32 %26, 0
  br i1 %tobool22, label %if.then.23, label %if.end.25

if.then.23:                                       ; preds = %land.lhs.true.20
  %27 = load %struct.elim_table*, %struct.elim_table** %op, align 8
  %to24 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %27, i32 0, i32 1
  %28 = load i32, i32* %to24, align 4
  store i32 %28, i32* %new_to, align 4
  br label %for.end.28

if.end.25:                                        ; preds = %land.lhs.true.20, %for.body.16
  br label %for.inc.26

for.inc.26:                                       ; preds = %if.end.25
  %29 = load %struct.elim_table*, %struct.elim_table** %op, align 8
  %incdec.ptr27 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %29, i32 1
  store %struct.elim_table* %incdec.ptr27, %struct.elim_table** %op, align 8
  br label %for.cond.13

for.end.28:                                       ; preds = %if.then.23, %for.cond.13
  %30 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %30, %struct.elim_table** %op, align 8
  br label %for.cond.29

for.cond.29:                                      ; preds = %for.inc.42, %for.end.28
  %31 = load %struct.elim_table*, %struct.elim_table** %op, align 8
  %32 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx30 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %32, i64 4
  %cmp31 = icmp ult %struct.elim_table* %31, %arrayidx30
  br i1 %cmp31, label %for.body.32, label %for.end.44

for.body.32:                                      ; preds = %for.cond.29
  %33 = load %struct.elim_table*, %struct.elim_table** %op, align 8
  %from33 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %33, i32 0, i32 0
  %34 = load i32, i32* %from33, align 4
  %35 = load i32, i32* %new_to, align 4
  %cmp34 = icmp eq i32 %34, %35
  br i1 %cmp34, label %land.lhs.true.35, label %if.end.41

land.lhs.true.35:                                 ; preds = %for.body.32
  %36 = load %struct.elim_table*, %struct.elim_table** %op, align 8
  %to36 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %36, i32 0, i32 1
  %37 = load i32, i32* %to36, align 4
  %38 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to37 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %38, i32 0, i32 1
  %39 = load i32, i32* %to37, align 4
  %cmp38 = icmp eq i32 %37, %39
  br i1 %cmp38, label %if.then.39, label %if.end.41

if.then.39:                                       ; preds = %land.lhs.true.35
  %40 = load %struct.elim_table*, %struct.elim_table** %op, align 8
  %can_eliminate40 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %40, i32 0, i32 3
  store i32 0, i32* %can_eliminate40, align 4
  br label %if.end.41

if.end.41:                                        ; preds = %if.then.39, %land.lhs.true.35, %for.body.32
  br label %for.inc.42

for.inc.42:                                       ; preds = %if.end.41
  %41 = load %struct.elim_table*, %struct.elim_table** %op, align 8
  %incdec.ptr43 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %41, i32 1
  store %struct.elim_table* %incdec.ptr43, %struct.elim_table** %op, align 8
  br label %for.cond.29

for.end.44:                                       ; preds = %for.cond.29
  br label %if.end.45

if.end.45:                                        ; preds = %for.end.44, %land.lhs.true.10, %for.body.7
  br label %for.inc.46

for.inc.46:                                       ; preds = %if.end.45
  %42 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr47 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %42, i32 1
  store %struct.elim_table* %incdec.ptr47, %struct.elim_table** %ep, align 8
  br label %for.cond.4

for.end.48:                                       ; preds = %for.cond.4
  store i32 1, i32* @frame_pointer_needed, align 4
  %43 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %43, %struct.elim_table** %ep, align 8
  br label %for.cond.49

for.cond.49:                                      ; preds = %for.inc.72, %for.end.48
  %44 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %45 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx50 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %45, i64 4
  %cmp51 = icmp ult %struct.elim_table* %44, %arrayidx50
  br i1 %cmp51, label %for.body.52, label %for.end.74

for.body.52:                                      ; preds = %for.cond.49
  %46 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate53 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %46, i32 0, i32 3
  %47 = load i32, i32* %can_eliminate53, align 4
  %tobool54 = icmp ne i32 %47, 0
  br i1 %tobool54, label %land.lhs.true.55, label %if.end.62

land.lhs.true.55:                                 ; preds = %for.body.52
  %48 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %from56 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %48, i32 0, i32 0
  %49 = load i32, i32* %from56, align 4
  %cmp57 = icmp eq i32 %49, 20
  br i1 %cmp57, label %land.lhs.true.58, label %if.end.62

land.lhs.true.58:                                 ; preds = %land.lhs.true.55
  %50 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to59 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %50, i32 0, i32 1
  %51 = load i32, i32* %to59, align 4
  %cmp60 = icmp ne i32 %51, 6
  br i1 %cmp60, label %if.then.61, label %if.end.62

if.then.61:                                       ; preds = %land.lhs.true.58
  store i32 0, i32* @frame_pointer_needed, align 4
  br label %if.end.62

if.end.62:                                        ; preds = %if.then.61, %land.lhs.true.58, %land.lhs.true.55, %for.body.52
  %52 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate63 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %52, i32 0, i32 3
  %53 = load i32, i32* %can_eliminate63, align 4
  %tobool64 = icmp ne i32 %53, 0
  br i1 %tobool64, label %if.end.71, label %land.lhs.true.65

land.lhs.true.65:                                 ; preds = %if.end.62
  %54 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate_previous66 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %54, i32 0, i32 4
  %55 = load i32, i32* %can_eliminate_previous66, align 4
  %tobool67 = icmp ne i32 %55, 0
  br i1 %tobool67, label %if.then.68, label %if.end.71

if.then.68:                                       ; preds = %land.lhs.true.65
  %56 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate_previous69 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %56, i32 0, i32 4
  store i32 0, i32* %can_eliminate_previous69, align 4
  %57 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %from70 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %57, i32 0, i32 0
  %58 = load i32, i32* %from70, align 4
  %sh_prom = zext i32 %58 to i64
  %shl = shl i64 1, %sh_prom
  %59 = load i64*, i64** %pset.addr, align 8
  %60 = load i64, i64* %59, align 8
  %or = or i64 %60, %shl
  store i64 %or, i64* %59, align 8
  %61 = load i32, i32* @num_eliminable, align 4
  %dec = add nsw i32 %61, -1
  store i32 %dec, i32* @num_eliminable, align 4
  br label %if.end.71

if.end.71:                                        ; preds = %if.then.68, %land.lhs.true.65, %if.end.62
  br label %for.inc.72

for.inc.72:                                       ; preds = %if.end.71
  %62 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr73 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %62, i32 1
  store %struct.elim_table* %incdec.ptr73, %struct.elim_table** %ep, align 8
  br label %for.cond.49

for.end.74:                                       ; preds = %for.cond.49
  %63 = load i32, i32* @frame_pointer_needed, align 4
  %tobool75 = icmp ne i32 %63, 0
  br i1 %tobool75, label %land.lhs.true.76, label %if.end.80

land.lhs.true.76:                                 ; preds = %for.end.74
  %64 = load i32, i32* %previous_frame_pointer_needed, align 4
  %tobool77 = icmp ne i32 %64, 0
  br i1 %tobool77, label %if.end.80, label %if.then.78

if.then.78:                                       ; preds = %land.lhs.true.76
  %65 = load i64*, i64** %pset.addr, align 8
  %66 = load i64, i64* %65, align 8
  %or79 = or i64 %66, 64
  store i64 %or79, i64* %65, align 8
  br label %if.end.80

if.end.80:                                        ; preds = %if.then.78, %land.lhs.true.76, %for.end.74
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @select_reload_regs() #0 {
entry:
  %chain = alloca %struct.insn_chain*, align 8
  %0 = load %struct.insn_chain*, %struct.insn_chain** @insns_need_reload, align 8
  store %struct.insn_chain* %0, %struct.insn_chain** %chain, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %cmp = icmp ne %struct.insn_chain* %1, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  call void @find_reload_regs(%struct.insn_chain* %2)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %3 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %next_need_reload = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %3, i32 0, i32 2
  %4 = load %struct.insn_chain*, %struct.insn_chain** %next_need_reload, align 8
  store %struct.insn_chain* %4, %struct.insn_chain** %chain, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @delete_caller_save_insns() #0 {
entry:
  %c = alloca %struct.insn_chain*, align 8
  %next = alloca %struct.insn_chain*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %0 = load %struct.insn_chain*, %struct.insn_chain** @reload_insn_chain, align 8
  store %struct.insn_chain* %0, %struct.insn_chain** %c, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end.21, %entry
  %1 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8
  %cmp = icmp ne %struct.insn_chain* %1, null
  br i1 %cmp, label %while.body, label %while.end.22

while.body:                                       ; preds = %while.cond
  br label %while.cond.1

while.cond.1:                                     ; preds = %if.end.16, %while.body
  %2 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8
  %cmp2 = icmp ne %struct.insn_chain* %2, null
  br i1 %cmp2, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.1
  %3 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8
  %is_caller_save_insn = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %3, i32 0, i32 11
  %bf.load = load i8, i8* %is_caller_save_insn, align 2
  %bf.lshr = lshr i8 %bf.load, 3
  %bf.clear = and i8 %bf.lshr, 1
  %bf.cast = zext i8 %bf.clear to i32
  %tobool = icmp ne i32 %bf.cast, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.1
  %4 = phi i1 [ false, %while.cond.1 ], [ %tobool, %land.rhs ]
  br i1 %4, label %while.body.3, label %while.end

while.body.3:                                     ; preds = %land.end
  %5 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8
  %next4 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %5, i32 0, i32 0
  %6 = load %struct.insn_chain*, %struct.insn_chain** %next4, align 8
  store %struct.insn_chain* %6, %struct.insn_chain** %next, align 8
  %7 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8
  %insn5 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %7, i32 0, i32 4
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn5, align 8
  store %struct.rtx_def* %8, %struct.rtx_def** %insn, align 8
  %9 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8
  %10 = load %struct.insn_chain*, %struct.insn_chain** @reload_insn_chain, align 8
  %cmp6 = icmp eq %struct.insn_chain* %9, %10
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %while.body.3
  %11 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8
  store %struct.insn_chain* %11, %struct.insn_chain** @reload_insn_chain, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body.3
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %12)
  %13 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8
  %tobool7 = icmp ne %struct.insn_chain* %13, null
  br i1 %tobool7, label %if.then.8, label %if.end.10

if.then.8:                                        ; preds = %if.end
  %14 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8
  %prev = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %14, i32 0, i32 1
  %15 = load %struct.insn_chain*, %struct.insn_chain** %prev, align 8
  %16 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8
  %prev9 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %16, i32 0, i32 1
  store %struct.insn_chain* %15, %struct.insn_chain** %prev9, align 8
  br label %if.end.10

if.end.10:                                        ; preds = %if.then.8, %if.end
  %17 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8
  %prev11 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %17, i32 0, i32 1
  %18 = load %struct.insn_chain*, %struct.insn_chain** %prev11, align 8
  %tobool12 = icmp ne %struct.insn_chain* %18, null
  br i1 %tobool12, label %if.then.13, label %if.end.16

if.then.13:                                       ; preds = %if.end.10
  %19 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8
  %20 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8
  %prev14 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %20, i32 0, i32 1
  %21 = load %struct.insn_chain*, %struct.insn_chain** %prev14, align 8
  %next15 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %21, i32 0, i32 0
  store %struct.insn_chain* %19, %struct.insn_chain** %next15, align 8
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.13, %if.end.10
  %22 = load %struct.insn_chain*, %struct.insn_chain** @unused_insn_chains, align 8
  %23 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8
  %next17 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %23, i32 0, i32 0
  store %struct.insn_chain* %22, %struct.insn_chain** %next17, align 8
  %24 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8
  store %struct.insn_chain* %24, %struct.insn_chain** @unused_insn_chains, align 8
  %25 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8
  store %struct.insn_chain* %25, %struct.insn_chain** %c, align 8
  br label %while.cond.1

while.end:                                        ; preds = %land.end
  %26 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8
  %cmp18 = icmp ne %struct.insn_chain* %26, null
  br i1 %cmp18, label %if.then.19, label %if.end.21

if.then.19:                                       ; preds = %while.end
  %27 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8
  %next20 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %27, i32 0, i32 0
  %28 = load %struct.insn_chain*, %struct.insn_chain** %next20, align 8
  store %struct.insn_chain* %28, %struct.insn_chain** %c, align 8
  br label %if.end.21

if.end.21:                                        ; preds = %if.then.19, %while.end
  br label %while.cond

while.end.22:                                     ; preds = %while.cond
  ret void
}

declare void @obstack_free(%struct.obstack*, i8*) #1

declare void @mark_elimination(i32, i32) #1

declare zeroext i1 @can_throw_internal(%struct.rtx_def*) #1

declare i32 @reg_set_p(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @delete_dead_insn(%struct.rtx_def* %insn) #0 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %prev = alloca %struct.rtx_def*, align 8
  %prev_dest = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call = call %struct.rtx_def* @prev_real_insn(%struct.rtx_def* %0)
  store %struct.rtx_def* %call, %struct.rtx_def** %prev, align 8
  %1 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %tobool = icmp ne %struct.rtx_def* %1, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load = load i32, i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 47
  br i1 %cmp, label %land.lhs.true.1, label %if.end

land.lhs.true.1:                                  ; preds = %land.lhs.true
  %5 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i32 0, i64 3
  %rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtx4, align 8
  %fld5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i32 0, i64 0
  %rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtx7, align 8
  store %struct.rtx_def* %7, %struct.rtx_def** %prev_dest, align 8
  %8 = load %struct.rtx_def*, %struct.rtx_def** %prev_dest, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load8 = load i32, i32* %9, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  %cmp10 = icmp eq i32 %bf.clear9, 61
  br i1 %cmp10, label %land.lhs.true.11, label %if.end

land.lhs.true.11:                                 ; preds = %land.lhs.true.1
  %10 = load %struct.rtx_def*, %struct.rtx_def** %prev_dest, align 8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i32 0, i64 3
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rtx14, align 8
  %call15 = call i32 @reg_mentioned_p(%struct.rtx_def* %10, %struct.rtx_def* %12)
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %land.lhs.true.17, label %if.end

land.lhs.true.17:                                 ; preds = %land.lhs.true.11
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %14 = load %struct.rtx_def*, %struct.rtx_def** %prev_dest, align 8
  %fld18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx19 to i32*
  %15 = load i32, i32* %rtuint, align 4
  %call20 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %13, i32 1, i32 %15)
  %tobool21 = icmp ne %struct.rtx_def* %call20, null
  br i1 %tobool21, label %land.lhs.true.22, label %if.end

land.lhs.true.22:                                 ; preds = %land.lhs.true.17
  %16 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1
  %arrayidx24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i32 0, i64 3
  %rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rtx25, align 8
  %fld26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i32 0, i64 1
  %rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rtx28, align 8
  %call29 = call i32 @side_effects_p(%struct.rtx_def* %18)
  %tobool30 = icmp ne i32 %call29, 0
  br i1 %tobool30, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true.22
  %19 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  call void @delete_dead_insn(%struct.rtx_def* %19)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.22, %land.lhs.true.17, %land.lhs.true.11, %land.lhs.true.1, %land.lhs.true, %entry
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load31 = load i32, i32* %21, align 8
  %bf.clear32 = and i32 %bf.load31, -65536
  %bf.set = or i32 %bf.clear32, 37
  store i32 %bf.set, i32* %21, align 8
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %arrayidx34 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld33, i32 0, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx34 to i32*
  store i32 -99, i32* %rtint, align 4
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i32 0, i64 3
  %rtstr = bitcast %union.rtunion_def* %arrayidx36 to i8**
  store i8* null, i8** %rtstr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @reload_as_needed(i32 %live_known) #0 {
entry:
  %live_known.addr = alloca i32, align 4
  %chain = alloca %struct.insn_chain*, align 8
  %x = alloca %struct.rtx_def*, align 8
  %prev = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %old_next = alloca %struct.rtx_def*, align 8
  %oldpat = alloca %struct.rtx_def*, align 8
  %next = alloca %struct.rtx_def*, align 8
  %p = alloca %struct.rtx_def*, align 8
  store i32 %live_known, i32* %live_known.addr, align 4
  call void @llvm.memset.p0i8.i64(i8* bitcast ([53 x %struct.rtx_def*]* @spill_reg_rtx to i8*), i8 0, i64 424, i32 1, i1 false)
  call void @llvm.memset.p0i8.i64(i8* bitcast ([53 x %struct.rtx_def*]* @spill_reg_store to i8*), i8 0, i64 424, i32 1, i1 false)
  %0 = load i32, i32* @max_regno, align 4
  %conv = sext i32 %0 to i64
  %call = call noalias i8* @xcalloc(i64 %conv, i64 8)
  %1 = bitcast i8* %call to %struct.rtx_def**
  store %struct.rtx_def** %1, %struct.rtx_def*** @reg_last_reload_reg, align 8
  %2 = load i32, i32* @max_regno, align 4
  %conv1 = sext i32 %2 to i64
  %call2 = call noalias i8* @xmalloc(i64 %conv1)
  store i8* %call2, i8** @reg_has_output_reload, align 8
  store i64 0, i64* @reg_reloaded_valid, align 8
  call void @set_initial_elim_offsets()
  %3 = load %struct.insn_chain*, %struct.insn_chain** @reload_insn_chain, align 8
  store %struct.insn_chain* %3, %struct.insn_chain** %chain, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc.216, %entry
  %4 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %tobool = icmp ne %struct.insn_chain* %4, null
  br i1 %tobool, label %for.body, label %for.end.218

for.body:                                         ; preds = %for.cond
  %5 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %insn3 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %5, i32 0, i32 4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn3, align 8
  store %struct.rtx_def* %6, %struct.rtx_def** %insn, align 8
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %8, %struct.rtx_def** %old_next, align 8
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load = load i32, i32* %10, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 36
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  call void @set_offsets_for_label(%struct.rtx_def* %11)
  br label %if.end.202

if.else:                                          ; preds = %for.body
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load5 = load i32, i32* %13, align 8
  %bf.clear6 = and i32 %bf.load5, 65535
  %idxprom = sext i32 %bf.clear6 to i64
  %arrayidx7 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %14 = load i8, i8* %arrayidx7, align 1
  %conv8 = sext i8 %14 to i32
  %cmp9 = icmp eq i32 %conv8, 105
  br i1 %cmp9, label %if.then.11, label %if.end.201

if.then.11:                                       ; preds = %if.else
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i32 0, i64 3
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rtx14, align 8
  store %struct.rtx_def* %16, %struct.rtx_def** %oldpat, align 8
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i32 0, i64 3
  %rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rtx17, align 8
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load18 = load i32, i32* %19, align 8
  %bf.clear19 = and i32 %bf.load18, 65535
  %cmp20 = icmp eq i32 %bf.clear19, 48
  br i1 %cmp20, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.11
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i32 0, i64 3
  %rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rtx24, align 8
  %22 = bitcast %struct.rtx_def* %21 to i32*
  %bf.load25 = load i32, i32* %22, align 8
  %bf.clear26 = and i32 %bf.load25, 65535
  %cmp27 = icmp eq i32 %bf.clear26, 49
  br i1 %cmp27, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.then.11
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i32 0, i64 3
  %rtx31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rtx31, align 8
  %fld32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i32 0, i64 0
  %rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rtx34, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load35 = load i32, i32* %26, align 8
  %bf.clear36 = and i32 %bf.load35, 65535
  %cmp37 = icmp eq i32 %bf.clear36, 66
  br i1 %cmp37, label %if.then.39, label %if.end

if.then.39:                                       ; preds = %land.lhs.true
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i32 0, i64 3
  %rtx42 = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rtx42, align 8
  %fld43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i32 0, i64 0
  %rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rtx45, align 8
  %fld46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i32 0, i64 0
  %rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rtx48, align 8
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i32 0, i64 3
  %rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rtx51, align 8
  %fld52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld52, i32 0, i64 0
  %rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rtx54, align 8
  %34 = bitcast %struct.rtx_def* %33 to i32*
  %bf.load55 = load i32, i32* %34, align 8
  %bf.lshr = lshr i32 %bf.load55, 16
  %bf.clear56 = and i32 %bf.lshr, 255
  %call57 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %30, i32 %bf.clear56, %struct.rtx_def* null)
  %35 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i32 0, i64 3
  %rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rtx60, align 8
  %fld61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i32 0, i64 0
  %rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rtx63, align 8
  %fld64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld64, i32 0, i64 0
  %rtx66 = bitcast %union.rtunion_def* %arrayidx65 to %struct.rtx_def**
  store %struct.rtx_def* %call57, %struct.rtx_def** %rtx66, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.39, %land.lhs.true, %lor.lhs.false
  %38 = load i32, i32* @num_eliminable, align 4
  %tobool67 = icmp ne i32 %38, 0
  br i1 %tobool67, label %land.lhs.true.70, label %lor.lhs.false.68

lor.lhs.false.68:                                 ; preds = %if.end
  %39 = load i32, i32* @num_eliminable_invariants, align 4
  %tobool69 = icmp ne i32 %39, 0
  br i1 %tobool69, label %land.lhs.true.70, label %if.end.83

land.lhs.true.70:                                 ; preds = %lor.lhs.false.68, %if.end
  %40 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %need_elim = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %40, i32 0, i32 11
  %bf.load71 = load i8, i8* %need_elim, align 2
  %bf.lshr72 = lshr i8 %bf.load71, 2
  %bf.clear73 = and i8 %bf.lshr72, 1
  %bf.cast = zext i8 %bf.clear73 to i32
  %tobool74 = icmp ne i32 %bf.cast, 0
  br i1 %tobool74, label %if.then.75, label %if.end.83

if.then.75:                                       ; preds = %land.lhs.true.70
  %41 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call76 = call i32 @eliminate_regs_in_insn(%struct.rtx_def* %41, i32 1)
  %42 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %43 = bitcast %struct.rtx_def* %42 to i32*
  %bf.load77 = load i32, i32* %43, align 8
  %bf.clear78 = and i32 %bf.load77, 65535
  %cmp79 = icmp eq i32 %bf.clear78, 37
  br i1 %cmp79, label %if.then.81, label %if.end.82

if.then.81:                                       ; preds = %if.then.75
  call void @update_eliminable_offsets()
  br label %for.inc.216

if.end.82:                                        ; preds = %if.then.75
  br label %if.end.83

if.end.83:                                        ; preds = %if.end.82, %land.lhs.true.70, %lor.lhs.false.68
  %44 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %need_elim84 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %44, i32 0, i32 11
  %bf.load85 = load i8, i8* %need_elim84, align 2
  %bf.lshr86 = lshr i8 %bf.load85, 2
  %bf.clear87 = and i8 %bf.lshr86, 1
  %bf.cast88 = zext i8 %bf.clear87 to i32
  %tobool89 = icmp ne i32 %bf.cast88, 0
  br i1 %tobool89, label %if.else.102, label %land.lhs.true.90

land.lhs.true.90:                                 ; preds = %if.end.83
  %45 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %need_reload = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %45, i32 0, i32 11
  %bf.load91 = load i8, i8* %need_reload, align 2
  %bf.clear92 = and i8 %bf.load91, 1
  %bf.cast93 = zext i8 %bf.clear92 to i32
  %tobool94 = icmp ne i32 %bf.cast93, 0
  br i1 %tobool94, label %if.else.102, label %land.lhs.true.95

land.lhs.true.95:                                 ; preds = %land.lhs.true.90
  %46 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %need_operand_change = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %46, i32 0, i32 11
  %bf.load96 = load i8, i8* %need_operand_change, align 2
  %bf.lshr97 = lshr i8 %bf.load96, 1
  %bf.clear98 = and i8 %bf.lshr97, 1
  %bf.cast99 = zext i8 %bf.clear98 to i32
  %tobool100 = icmp ne i32 %bf.cast99, 0
  br i1 %tobool100, label %if.else.102, label %if.then.101

if.then.101:                                      ; preds = %land.lhs.true.95
  store i32 0, i32* @n_reloads, align 4
  br label %if.end.106

if.else.102:                                      ; preds = %land.lhs.true.95, %land.lhs.true.90, %if.end.83
  %47 = load i8*, i8** @reg_has_output_reload, align 8
  %48 = load i32, i32* @max_regno, align 4
  %conv103 = sext i32 %48 to i64
  call void @llvm.memset.p0i8.i64(i8* %47, i8 0, i64 %conv103, i32 1, i1 false)
  store i64 0, i64* @reg_is_output_reload, align 8
  %49 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %50 = load i8, i8* @spill_indirect_levels, align 1
  %conv104 = sext i8 %50 to i32
  %51 = load i32, i32* %live_known.addr, align 4
  %call105 = call i32 @find_reloads(%struct.rtx_def* %49, i32 1, i32 %conv104, i32 %51, i16* getelementptr inbounds ([53 x i16], [53 x i16]* @spill_reg_order, i32 0, i32 0))
  br label %if.end.106

if.end.106:                                       ; preds = %if.else.102, %if.then.101
  %52 = load i32, i32* @n_reloads, align 4
  %cmp107 = icmp sgt i32 %52, 0
  br i1 %cmp107, label %if.then.109, label %if.end.161

if.then.109:                                      ; preds = %if.end.106
  %53 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld110, i32 0, i64 2
  %rtx112 = bitcast %union.rtunion_def* %arrayidx111 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx112, align 8
  store %struct.rtx_def* %54, %struct.rtx_def** %next, align 8
  %55 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1
  %arrayidx114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld113, i32 0, i64 1
  %rtx115 = bitcast %union.rtunion_def* %arrayidx114 to %struct.rtx_def**
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rtx115, align 8
  store %struct.rtx_def* %56, %struct.rtx_def** %prev, align 8
  %57 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  call void @choose_reload_regs(%struct.insn_chain* %57)
  %58 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  call void @merge_assigned_reloads(%struct.rtx_def* %58)
  %59 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  call void @emit_reload_insns(%struct.insn_chain* %59)
  %60 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  call void @subst_reloads(%struct.rtx_def* %60)
  %61 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld116 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1
  %arrayidx117 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld116, i32 0, i64 3
  %rtx118 = bitcast %union.rtunion_def* %arrayidx117 to %struct.rtx_def**
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rtx118, align 8
  %call119 = call i32 @asm_noperands(%struct.rtx_def* %62)
  %cmp120 = icmp sge i32 %call119, 0
  br i1 %cmp120, label %if.then.122, label %if.end.160

if.then.122:                                      ; preds = %if.then.109
  %63 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld123 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1
  %arrayidx124 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld123, i32 0, i64 2
  %rtx125 = bitcast %union.rtunion_def* %arrayidx124 to %struct.rtx_def**
  %64 = load %struct.rtx_def*, %struct.rtx_def** %rtx125, align 8
  store %struct.rtx_def* %64, %struct.rtx_def** %p, align 8
  br label %for.cond.126

for.cond.126:                                     ; preds = %for.inc, %if.then.122
  %65 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %66 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %cmp127 = icmp ne %struct.rtx_def* %65, %66
  br i1 %cmp127, label %for.body.129, label %for.end

for.body.129:                                     ; preds = %for.cond.126
  %67 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %68 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %cmp130 = icmp ne %struct.rtx_def* %67, %68
  br i1 %cmp130, label %land.lhs.true.132, label %if.end.156

land.lhs.true.132:                                ; preds = %for.body.129
  %69 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %70 = bitcast %struct.rtx_def* %69 to i32*
  %bf.load133 = load i32, i32* %70, align 8
  %bf.clear134 = and i32 %bf.load133, 65535
  %idxprom135 = sext i32 %bf.clear134 to i64
  %arrayidx136 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom135
  %71 = load i8, i8* %arrayidx136, align 1
  %conv137 = sext i8 %71 to i32
  %cmp138 = icmp eq i32 %conv137, 105
  br i1 %cmp138, label %land.lhs.true.140, label %if.end.156

land.lhs.true.140:                                ; preds = %land.lhs.true.132
  %72 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld141 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1
  %arrayidx142 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld141, i32 0, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx142 to i32*
  %73 = load i32, i32* %rtint, align 4
  %cmp143 = icmp sge i32 %73, 0
  br i1 %cmp143, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.140
  %74 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1
  %arrayidx146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld145, i32 0, i64 4
  %rtint147 = bitcast %union.rtunion_def* %arrayidx146 to i32*
  %75 = load i32, i32* %rtint147, align 4
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.140
  %76 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %call148 = call i32 @recog_memoized_1(%struct.rtx_def* %76)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %75, %cond.true ], [ %call148, %cond.false ]
  %cmp149 = icmp slt i32 %cond, 0
  br i1 %cmp149, label %if.then.154, label %lor.lhs.false.151

lor.lhs.false.151:                                ; preds = %cond.end
  %77 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  call void @extract_insn(%struct.rtx_def* %77)
  %call152 = call i32 @constrain_operands(i32 1)
  %tobool153 = icmp ne i32 %call152, 0
  %lnot = xor i1 %tobool153, true
  br i1 %lnot, label %if.then.154, label %if.end.156

if.then.154:                                      ; preds = %lor.lhs.false.151, %cond.end
  %78 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  call void (%struct.rtx_def*, i8*, ...) @error_for_asm(%struct.rtx_def* %78, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.36, i32 0, i32 0))
  %79 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %call155 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %79)
  br label %if.end.156

if.end.156:                                       ; preds = %if.then.154, %lor.lhs.false.151, %land.lhs.true.132, %for.body.129
  br label %for.inc

for.inc:                                          ; preds = %if.end.156
  %80 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld157 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1
  %arrayidx158 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld157, i32 0, i64 2
  %rtx159 = bitcast %union.rtunion_def* %arrayidx158 to %struct.rtx_def**
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rtx159, align 8
  store %struct.rtx_def* %81, %struct.rtx_def** %p, align 8
  br label %for.cond.126

for.end:                                          ; preds = %for.cond.126
  br label %if.end.160

if.end.160:                                       ; preds = %for.end, %if.then.109
  br label %if.end.161

if.end.161:                                       ; preds = %if.end.160, %if.end.106
  %82 = load i32, i32* @num_eliminable, align 4
  %tobool162 = icmp ne i32 %82, 0
  br i1 %tobool162, label %land.lhs.true.163, label %if.end.171

land.lhs.true.163:                                ; preds = %if.end.161
  %83 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %need_elim164 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %83, i32 0, i32 11
  %bf.load165 = load i8, i8* %need_elim164, align 2
  %bf.lshr166 = lshr i8 %bf.load165, 2
  %bf.clear167 = and i8 %bf.lshr166, 1
  %bf.cast168 = zext i8 %bf.clear167 to i32
  %tobool169 = icmp ne i32 %bf.cast168, 0
  br i1 %tobool169, label %if.then.170, label %if.end.171

if.then.170:                                      ; preds = %land.lhs.true.163
  call void @update_eliminable_offsets()
  br label %if.end.171

if.end.171:                                       ; preds = %if.then.170, %land.lhs.true.163, %if.end.161
  %84 = load %struct.rtx_def*, %struct.rtx_def** %oldpat, align 8
  call void @note_stores(%struct.rtx_def* %84, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @forget_old_reloads_1, i8* null)
  %85 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld172 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1
  %arrayidx173 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld172, i32 0, i64 2
  %rtx174 = bitcast %union.rtunion_def* %arrayidx173 to %struct.rtx_def**
  %86 = load %struct.rtx_def*, %struct.rtx_def** %rtx174, align 8
  store %struct.rtx_def* %86, %struct.rtx_def** %x, align 8
  br label %for.cond.175

for.cond.175:                                     ; preds = %for.inc.196, %if.end.171
  %87 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %88 = load %struct.rtx_def*, %struct.rtx_def** %old_next, align 8
  %cmp176 = icmp ne %struct.rtx_def* %87, %88
  br i1 %cmp176, label %for.body.178, label %for.end.200

for.body.178:                                     ; preds = %for.cond.175
  %89 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %90 = bitcast %struct.rtx_def* %89 to i32*
  %bf.load179 = load i32, i32* %90, align 8
  %bf.clear180 = and i32 %bf.load179, 65535
  %cmp181 = icmp eq i32 %bf.clear180, 32
  br i1 %cmp181, label %land.lhs.true.183, label %if.end.195

land.lhs.true.183:                                ; preds = %for.body.178
  %91 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1
  %arrayidx185 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld184, i32 0, i64 3
  %rtx186 = bitcast %union.rtunion_def* %arrayidx185 to %struct.rtx_def**
  %92 = load %struct.rtx_def*, %struct.rtx_def** %rtx186, align 8
  %93 = bitcast %struct.rtx_def* %92 to i32*
  %bf.load187 = load i32, i32* %93, align 8
  %bf.clear188 = and i32 %bf.load187, 65535
  %cmp189 = icmp eq i32 %bf.clear188, 49
  br i1 %cmp189, label %if.then.191, label %if.end.195

if.then.191:                                      ; preds = %land.lhs.true.183
  %94 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld192 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1
  %arrayidx193 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld192, i32 0, i64 3
  %rtx194 = bitcast %union.rtunion_def* %arrayidx193 to %struct.rtx_def**
  %95 = load %struct.rtx_def*, %struct.rtx_def** %rtx194, align 8
  call void @note_stores(%struct.rtx_def* %95, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @forget_old_reloads_1, i8* null)
  br label %if.end.195

if.end.195:                                       ; preds = %if.then.191, %land.lhs.true.183, %for.body.178
  br label %for.inc.196

for.inc.196:                                      ; preds = %if.end.195
  %96 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld197 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1
  %arrayidx198 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld197, i32 0, i64 2
  %rtx199 = bitcast %union.rtunion_def* %arrayidx198 to %struct.rtx_def**
  %97 = load %struct.rtx_def*, %struct.rtx_def** %rtx199, align 8
  store %struct.rtx_def* %97, %struct.rtx_def** %x, align 8
  br label %for.cond.175

for.end.200:                                      ; preds = %for.cond.175
  br label %if.end.201

if.end.201:                                       ; preds = %for.end.200, %if.else
  br label %if.end.202

if.end.202:                                       ; preds = %if.end.201, %if.then
  %98 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %99 = bitcast %struct.rtx_def* %98 to i32*
  %bf.load203 = load i32, i32* %99, align 8
  %bf.clear204 = and i32 %bf.load203, 65535
  %cmp205 = icmp eq i32 %bf.clear204, 36
  br i1 %cmp205, label %if.then.207, label %if.else.208

if.then.207:                                      ; preds = %if.end.202
  store i64 0, i64* @reg_reloaded_valid, align 8
  br label %if.end.215

if.else.208:                                      ; preds = %if.end.202
  %100 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %101 = bitcast %struct.rtx_def* %100 to i32*
  %bf.load209 = load i32, i32* %101, align 8
  %bf.clear210 = and i32 %bf.load209, 65535
  %cmp211 = icmp eq i32 %bf.clear210, 34
  br i1 %cmp211, label %if.then.213, label %if.end.214

if.then.213:                                      ; preds = %if.else.208
  %102 = load i64, i64* @call_used_reg_set, align 8
  %neg = xor i64 %102, -1
  %103 = load i64, i64* @reg_reloaded_valid, align 8
  %and = and i64 %103, %neg
  store i64 %and, i64* @reg_reloaded_valid, align 8
  br label %if.end.214

if.end.214:                                       ; preds = %if.then.213, %if.else.208
  br label %if.end.215

if.end.215:                                       ; preds = %if.end.214, %if.then.207
  br label %for.inc.216

for.inc.216:                                      ; preds = %if.end.215, %if.then.81
  %104 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8
  %next217 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %104, i32 0, i32 0
  %105 = load %struct.insn_chain*, %struct.insn_chain** %next217, align 8
  store %struct.insn_chain* %105, %struct.insn_chain** %chain, align 8
  br label %for.cond

for.end.218:                                      ; preds = %for.cond
  %106 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8
  %107 = bitcast %struct.rtx_def** %106 to i8*
  call void @free(i8* %107) #3
  %108 = load i8*, i8** @reg_has_output_reload, align 8
  call void @free(i8* %108) #3
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @verify_initial_elim_offsets() #0 {
entry:
  %t = alloca i32, align 4
  %ep = alloca %struct.elim_table*, align 8
  %0 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %0, %struct.elim_table** %ep, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %2 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %2, i64 4
  %cmp = icmp ult %struct.elim_table* %1, %arrayidx
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %from = getelementptr inbounds %struct.elim_table, %struct.elim_table* %3, i32 0, i32 0
  %4 = load i32, i32* %from, align 4
  %5 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to = getelementptr inbounds %struct.elim_table, %struct.elim_table* %5, i32 0, i32 1
  %6 = load i32, i32* %to, align 4
  %call = call i64 @ix86_initial_elimination_offset(i32 %4, i32 %6)
  %conv = trunc i64 %call to i32
  store i32 %conv, i32* %t, align 4
  %7 = load i32, i32* %t, align 4
  %8 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %initial_offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %8, i32 0, i32 2
  %9 = load i32, i32* %initial_offset, align 4
  %cmp1 = icmp ne i32 %7, %9
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 3339, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.verify_initial_elim_offsets, i32 0, i32 0)) #5
  unreachable

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %10, i32 1
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

declare void @bitmap_clear_bit(%struct.bitmap_head_def*, i32) #1

; Function Attrs: nounwind uwtable
define internal void @replace_pseudos_in_call_usage(%struct.rtx_def** %loc, i32 %mem_mode, %struct.rtx_def* %usage) #0 {
entry:
  %loc.addr = alloca %struct.rtx_def**, align 8
  %mem_mode.addr = alloca i32, align 4
  %usage.addr = alloca %struct.rtx_def*, align 8
  %x = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %regno = alloca i32, align 4
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  store i32 %mem_mode, i32* %mem_mode.addr, align 4
  store %struct.rtx_def* %usage, %struct.rtx_def** %usage.addr, align 8
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %x, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %tobool = icmp ne %struct.rtx_def* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %for.end.99

if.end:                                           ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load = load i32, i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %5 = load i32, i32* %code, align 4
  %cmp = icmp eq i32 %5, 61
  br i1 %cmp, label %if.then.1, label %if.else.53

if.then.1:                                        ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %7 = load i32, i32* %rtuint, align 4
  store i32 %7, i32* %regno, align 4
  %8 = load i32, i32* %regno, align 4
  %cmp2 = icmp ult i32 %8, 53
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.then.1
  br label %for.end.99

if.end.4:                                         ; preds = %if.then.1
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %10 = load i32, i32* %mem_mode.addr, align 4
  %11 = load %struct.rtx_def*, %struct.rtx_def** %usage.addr, align 8
  %call = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %9, i32 %10, %struct.rtx_def* %11)
  store %struct.rtx_def* %call, %struct.rtx_def** %x, align 8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %13 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %14 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %cmp5 = icmp ne %struct.rtx_def* %12, %14
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.end.4
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %16 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  store %struct.rtx_def* %15, %struct.rtx_def** %16, align 8
  %17 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %18 = load i32, i32* %mem_mode.addr, align 4
  %19 = load %struct.rtx_def*, %struct.rtx_def** %usage.addr, align 8
  call void @replace_pseudos_in_call_usage(%struct.rtx_def** %17, i32 %18, %struct.rtx_def* %19)
  br label %for.end.99

if.end.7:                                         ; preds = %if.end.4
  %20 = load i32, i32* %regno, align 4
  %idxprom = zext i32 %20 to i64
  %21 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx8 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %21, i64 %idxprom
  %22 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx8, align 8
  %tobool9 = icmp ne %struct.rtx_def* %22, null
  br i1 %tobool9, label %if.then.10, label %if.else

if.then.10:                                       ; preds = %if.end.7
  %23 = load i32, i32* %regno, align 4
  %idxprom11 = zext i32 %23 to i64
  %24 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx12 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %24, i64 %idxprom11
  %25 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx12, align 8
  %26 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  store %struct.rtx_def* %25, %struct.rtx_def** %26, align 8
  br label %if.end.52

if.else:                                          ; preds = %if.end.7
  %27 = load i32, i32* %regno, align 4
  %idxprom13 = zext i32 %27 to i64
  %28 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx14 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %28, i64 %idxprom13
  %29 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx14, align 8
  %tobool15 = icmp ne %struct.rtx_def* %29, null
  br i1 %tobool15, label %if.then.16, label %if.else.19

if.then.16:                                       ; preds = %if.else
  %30 = load i32, i32* %regno, align 4
  %idxprom17 = zext i32 %30 to i64
  %31 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx18 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %31, i64 %idxprom17
  %32 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx18, align 8
  %33 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  store %struct.rtx_def* %32, %struct.rtx_def** %33, align 8
  br label %if.end.51

if.else.19:                                       ; preds = %if.else
  %34 = load i32, i32* %regno, align 4
  %idxprom20 = zext i32 %34 to i64
  %35 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8
  %arrayidx21 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %35, i64 %idxprom20
  %36 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx21, align 8
  %tobool22 = icmp ne %struct.rtx_def* %36, null
  br i1 %tobool22, label %if.then.23, label %if.else.29

if.then.23:                                       ; preds = %if.else.19
  %37 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load24 = load i32, i32* %38, align 8
  %bf.lshr = lshr i32 %bf.load24, 16
  %bf.clear25 = and i32 %bf.lshr, 255
  %39 = load i32, i32* %regno, align 4
  %idxprom26 = zext i32 %39 to i64
  %40 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8
  %arrayidx27 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %40, i64 %idxprom26
  %41 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx27, align 8
  %call28 = call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.clear25, %struct.rtx_def* %41)
  %42 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  store %struct.rtx_def* %call28, %struct.rtx_def** %42, align 8
  br label %if.end.50

if.else.29:                                       ; preds = %if.else.19
  %43 = load i32, i32* %regno, align 4
  %idxprom30 = zext i32 %43 to i64
  %44 = load %struct.function*, %struct.function** @cfun, align 8
  %emit = getelementptr inbounds %struct.function, %struct.function* %44, i32 0, i32 3
  %45 = load %struct.emit_status*, %struct.emit_status** %emit, align 8
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status, %struct.emit_status* %45, i32 0, i32 12
  %46 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx, align 8
  %arrayidx31 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %46, i64 %idxprom30
  %47 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx31, align 8
  %48 = bitcast %struct.rtx_def* %47 to i32*
  %bf.load32 = load i32, i32* %48, align 8
  %bf.clear33 = and i32 %bf.load32, 65535
  %cmp34 = icmp ne i32 %bf.clear33, 61
  br i1 %cmp34, label %if.then.43, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else.29
  %49 = load i32, i32* %regno, align 4
  %idxprom35 = zext i32 %49 to i64
  %50 = load %struct.function*, %struct.function** @cfun, align 8
  %emit36 = getelementptr inbounds %struct.function, %struct.function* %50, i32 0, i32 3
  %51 = load %struct.emit_status*, %struct.emit_status** %emit36, align 8
  %x_regno_reg_rtx37 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %51, i32 0, i32 12
  %52 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx37, align 8
  %arrayidx38 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %52, i64 %idxprom35
  %53 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx38, align 8
  %fld39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i32 0, i64 0
  %rtuint41 = bitcast %union.rtunion_def* %arrayidx40 to i32*
  %54 = load i32, i32* %rtuint41, align 4
  %55 = load i32, i32* %regno, align 4
  %cmp42 = icmp ne i32 %54, %55
  br i1 %cmp42, label %if.then.43, label %if.else.48

if.then.43:                                       ; preds = %lor.lhs.false, %if.else.29
  %56 = load i32, i32* %regno, align 4
  %idxprom44 = zext i32 %56 to i64
  %57 = load %struct.function*, %struct.function** @cfun, align 8
  %emit45 = getelementptr inbounds %struct.function, %struct.function* %57, i32 0, i32 3
  %58 = load %struct.emit_status*, %struct.emit_status** %emit45, align 8
  %x_regno_reg_rtx46 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %58, i32 0, i32 12
  %59 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx46, align 8
  %arrayidx47 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %59, i64 %idxprom44
  %60 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx47, align 8
  %61 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  store %struct.rtx_def* %60, %struct.rtx_def** %61, align 8
  br label %if.end.49

if.else.48:                                       ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 627, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__FUNCTION__.replace_pseudos_in_call_usage, i32 0, i32 0)) #5
  unreachable

if.end.49:                                        ; preds = %if.then.43
  br label %if.end.50

if.end.50:                                        ; preds = %if.end.49, %if.then.23
  br label %if.end.51

if.end.51:                                        ; preds = %if.end.50, %if.then.16
  br label %if.end.52

if.end.52:                                        ; preds = %if.end.51, %if.then.10
  br label %for.end.99

if.else.53:                                       ; preds = %if.end
  %62 = load i32, i32* %code, align 4
  %cmp54 = icmp eq i32 %62, 66
  br i1 %cmp54, label %if.then.55, label %if.end.61

if.then.55:                                       ; preds = %if.else.53
  %63 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**
  %64 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %65 = bitcast %struct.rtx_def* %64 to i32*
  %bf.load58 = load i32, i32* %65, align 8
  %bf.lshr59 = lshr i32 %bf.load58, 16
  %bf.clear60 = and i32 %bf.lshr59, 255
  %66 = load %struct.rtx_def*, %struct.rtx_def** %usage.addr, align 8
  call void @replace_pseudos_in_call_usage(%struct.rtx_def** %rtx, i32 %bf.clear60, %struct.rtx_def* %66)
  br label %for.end.99

if.end.61:                                        ; preds = %if.else.53
  br label %if.end.62

if.end.62:                                        ; preds = %if.end.61
  %67 = load i32, i32* %code, align 4
  %idxprom63 = sext i32 %67 to i64
  %arrayidx64 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom63
  %68 = load i8*, i8** %arrayidx64, align 8
  store i8* %68, i8** %fmt, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.97, %if.end.62
  %69 = load i32, i32* %i, align 4
  %70 = load i32, i32* %code, align 4
  %idxprom65 = sext i32 %70 to i64
  %arrayidx66 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom65
  %71 = load i8, i8* %arrayidx66, align 1
  %conv = zext i8 %71 to i32
  %cmp67 = icmp slt i32 %69, %conv
  br i1 %cmp67, label %for.body, label %for.end.99

for.body:                                         ; preds = %for.cond
  %72 = load i8*, i8** %fmt, align 8
  %73 = load i8, i8* %72, align 1
  %conv69 = sext i8 %73 to i32
  %cmp70 = icmp eq i32 %conv69, 101
  br i1 %cmp70, label %if.then.72, label %if.else.77

if.then.72:                                       ; preds = %for.body
  %74 = load i32, i32* %i, align 4
  %idxprom73 = sext i32 %74 to i64
  %75 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx75 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld74, i32 0, i64 %idxprom73
  %rtx76 = bitcast %union.rtunion_def* %arrayidx75 to %struct.rtx_def**
  %76 = load i32, i32* %mem_mode.addr, align 4
  %77 = load %struct.rtx_def*, %struct.rtx_def** %usage.addr, align 8
  call void @replace_pseudos_in_call_usage(%struct.rtx_def** %rtx76, i32 %76, %struct.rtx_def* %77)
  br label %if.end.96

if.else.77:                                       ; preds = %for.body
  %78 = load i8*, i8** %fmt, align 8
  %79 = load i8, i8* %78, align 1
  %conv78 = sext i8 %79 to i32
  %cmp79 = icmp eq i32 %conv78, 69
  br i1 %cmp79, label %if.then.81, label %if.end.95

if.then.81:                                       ; preds = %if.else.77
  store i32 0, i32* %j, align 4
  br label %for.cond.82

for.cond.82:                                      ; preds = %for.inc, %if.then.81
  %80 = load i32, i32* %j, align 4
  %81 = load i32, i32* %i, align 4
  %idxprom83 = sext i32 %81 to i64
  %82 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1
  %arrayidx85 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld84, i32 0, i64 %idxprom83
  %rtvec = bitcast %union.rtunion_def* %arrayidx85 to %struct.rtvec_def**
  %83 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %83, i32 0, i32 0
  %84 = load i32, i32* %num_elem, align 4
  %cmp86 = icmp slt i32 %80, %84
  br i1 %cmp86, label %for.body.88, label %for.end

for.body.88:                                      ; preds = %for.cond.82
  %85 = load i32, i32* %j, align 4
  %idxprom89 = sext i32 %85 to i64
  %86 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %86 to i64
  %87 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1
  %arrayidx92 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld91, i32 0, i64 %idxprom90
  %rtvec93 = bitcast %union.rtunion_def* %arrayidx92 to %struct.rtvec_def**
  %88 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec93, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %88, i32 0, i32 1
  %arrayidx94 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom89
  %89 = load i32, i32* %mem_mode.addr, align 4
  %90 = load %struct.rtx_def*, %struct.rtx_def** %usage.addr, align 8
  call void @replace_pseudos_in_call_usage(%struct.rtx_def** %arrayidx94, i32 %89, %struct.rtx_def* %90)
  br label %for.inc

for.inc:                                          ; preds = %for.body.88
  %91 = load i32, i32* %j, align 4
  %inc = add nsw i32 %91, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond.82

for.end:                                          ; preds = %for.cond.82
  br label %if.end.95

if.end.95:                                        ; preds = %for.end, %if.else.77
  br label %if.end.96

if.end.96:                                        ; preds = %if.end.95, %if.then.72
  br label %for.inc.97

for.inc.97:                                       ; preds = %if.end.96
  %92 = load i32, i32* %i, align 4
  %inc98 = add nsw i32 %92, 1
  store i32 %inc98, i32* %i, align 4
  %93 = load i8*, i8** %fmt, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %93, i32 1
  store i8* %incdec.ptr, i8** %fmt, align 8
  br label %for.cond

for.end.99:                                       ; preds = %if.then, %if.then.3, %if.then.6, %if.end.52, %if.then.55, %for.cond
  ret void
}

declare %struct.rtx_def* @delete_insn(%struct.rtx_def*) #1

declare void @cleanup_subreg_operands(%struct.rtx_def*) #1

declare void @warning(i8*, ...) #1

; Function Attrs: nounwind
declare void @free(i8*) #4

; Function Attrs: nounwind uwtable
define void @fixup_abnormal_edges() #0 {
entry:
  %i = alloca i32, align 4
  %inserted = alloca i8, align 1
  %bb = alloca %struct.basic_block_def*, align 8
  %e = alloca %struct.edge_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %stop = alloca %struct.rtx_def*, align 8
  %next = alloca %struct.rtx_def*, align 8
  %seq = alloca %struct.rtx_def*, align 8
  store i8 0, i8* %inserted, align 1
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.77, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @n_basic_blocks, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end.78

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %3, i32 0, i32 4
  %bb1 = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %bb1, i32 0, i64 %idxprom
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8
  store %struct.basic_block_def* %4, %struct.basic_block_def** %bb, align 8
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8
  %succ = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i32 0, i32 5
  %6 = load %struct.edge_def*, %struct.edge_def** %succ, align 8
  store %struct.edge_def* %6, %struct.edge_def** %e, align 8
  br label %for.cond.2

for.cond.2:                                       ; preds = %for.inc, %for.body
  %7 = load %struct.edge_def*, %struct.edge_def** %e, align 8
  %tobool = icmp ne %struct.edge_def* %7, null
  br i1 %tobool, label %for.body.3, label %for.end

for.body.3:                                       ; preds = %for.cond.2
  %8 = load %struct.edge_def*, %struct.edge_def** %e, align 8
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %8, i32 0, i32 6
  %9 = load i32, i32* %flags, align 4
  %and = and i32 %9, 4
  %tobool4 = icmp ne i32 %and, 0
  br i1 %tobool4, label %if.then, label %if.end

if.then:                                          ; preds = %for.body.3
  br label %for.end

if.end:                                           ; preds = %for.body.3
  %10 = load %struct.edge_def*, %struct.edge_def** %e, align 8
  %flags5 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %10, i32 0, i32 6
  %11 = load i32, i32* %flags5, align 4
  %and6 = and i32 %11, 10
  %cmp7 = icmp eq i32 %and6, 10
  br i1 %cmp7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end
  br label %for.end

if.end.9:                                         ; preds = %if.end
  br label %for.inc

for.inc:                                          ; preds = %if.end.9
  %12 = load %struct.edge_def*, %struct.edge_def** %e, align 8
  %succ_next = getelementptr inbounds %struct.edge_def, %struct.edge_def* %12, i32 0, i32 1
  %13 = load %struct.edge_def*, %struct.edge_def** %succ_next, align 8
  store %struct.edge_def* %13, %struct.edge_def** %e, align 8
  br label %for.cond.2

for.end:                                          ; preds = %if.then.8, %if.then, %for.cond.2
  %14 = load %struct.edge_def*, %struct.edge_def** %e, align 8
  %tobool10 = icmp ne %struct.edge_def* %14, null
  br i1 %tobool10, label %land.lhs.true, label %if.end.76

land.lhs.true:                                    ; preds = %for.end
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8
  %end = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i32 0, i32 1
  %16 = load %struct.rtx_def*, %struct.rtx_def** %end, align 8
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load = load i32, i32* %17, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp11 = icmp ne i32 %bf.clear, 34
  br i1 %cmp11, label %land.lhs.true.12, label %if.end.76

land.lhs.true.12:                                 ; preds = %land.lhs.true
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8
  %end13 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %18, i32 0, i32 1
  %19 = load %struct.rtx_def*, %struct.rtx_def** %end13, align 8
  %call = call zeroext i1 @can_throw_internal(%struct.rtx_def* %19)
  br i1 %call, label %if.end.76, label %if.then.14

if.then.14:                                       ; preds = %land.lhs.true.12
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8
  %end15 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %20, i32 0, i32 1
  %21 = load %struct.rtx_def*, %struct.rtx_def** %end15, align 8
  store %struct.rtx_def* %21, %struct.rtx_def** %insn, align 8
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8
  %end16 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %22, i32 0, i32 1
  %23 = load %struct.rtx_def*, %struct.rtx_def** %end16, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %24, %struct.rtx_def** %stop, align 8
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8
  %succ18 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %25, i32 0, i32 5
  %26 = load %struct.edge_def*, %struct.edge_def** %succ18, align 8
  store %struct.edge_def* %26, %struct.edge_def** %e, align 8
  br label %for.cond.19

for.cond.19:                                      ; preds = %for.inc.27, %if.then.14
  %27 = load %struct.edge_def*, %struct.edge_def** %e, align 8
  %tobool20 = icmp ne %struct.edge_def* %27, null
  br i1 %tobool20, label %for.body.21, label %for.end.29

for.body.21:                                      ; preds = %for.cond.19
  %28 = load %struct.edge_def*, %struct.edge_def** %e, align 8
  %flags22 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %28, i32 0, i32 6
  %29 = load i32, i32* %flags22, align 4
  %and23 = and i32 %29, 1
  %tobool24 = icmp ne i32 %and23, 0
  br i1 %tobool24, label %if.then.25, label %if.end.26

if.then.25:                                       ; preds = %for.body.21
  br label %for.end.29

if.end.26:                                        ; preds = %for.body.21
  br label %for.inc.27

for.inc.27:                                       ; preds = %if.end.26
  %30 = load %struct.edge_def*, %struct.edge_def** %e, align 8
  %succ_next28 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %30, i32 0, i32 1
  %31 = load %struct.edge_def*, %struct.edge_def** %succ_next28, align 8
  store %struct.edge_def* %31, %struct.edge_def** %e, align 8
  br label %for.cond.19

for.end.29:                                       ; preds = %if.then.25, %for.cond.19
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.end.29
  %32 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load30 = load i32, i32* %33, align 8
  %bf.clear31 = and i32 %bf.load30, 65535
  %cmp32 = icmp eq i32 %bf.clear31, 32
  br i1 %cmp32, label %land.lhs.true.36, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.cond
  %34 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %35 = bitcast %struct.rtx_def* %34 to i32*
  %bf.load33 = load i32, i32* %35, align 8
  %bf.clear34 = and i32 %bf.load33, 65535
  %cmp35 = icmp eq i32 %bf.clear34, 37
  br i1 %cmp35, label %land.lhs.true.36, label %land.end

land.lhs.true.36:                                 ; preds = %lor.lhs.false, %while.cond
  %36 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call37 = call zeroext i1 @can_throw_internal(%struct.rtx_def* %36)
  br i1 %call37, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true.36
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8
  %head = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %38, i32 0, i32 0
  %39 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8
  %cmp38 = icmp ne %struct.rtx_def* %37, %39
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.36, %lor.lhs.false
  %40 = phi i1 [ false, %land.lhs.true.36 ], [ false, %lor.lhs.false ], [ %cmp38, %land.rhs ]
  br i1 %40, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %41 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i32 0, i64 1
  %rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rtx41, align 8
  store %struct.rtx_def* %42, %struct.rtx_def** %insn, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %43 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %44 = bitcast %struct.rtx_def* %43 to i32*
  %bf.load42 = load i32, i32* %44, align 8
  %bf.clear43 = and i32 %bf.load42, 65535
  %cmp44 = icmp ne i32 %bf.clear43, 34
  br i1 %cmp44, label %land.lhs.true.45, label %if.end.48

land.lhs.true.45:                                 ; preds = %while.end
  %45 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call46 = call zeroext i1 @can_throw_internal(%struct.rtx_def* %45)
  br i1 %call46, label %if.end.48, label %if.then.47

if.then.47:                                       ; preds = %land.lhs.true.45
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 9527, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.fixup_abnormal_edges, i32 0, i32 0)) #5
  unreachable

if.end.48:                                        ; preds = %land.lhs.true.45, %while.end
  %46 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %47 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8
  %end49 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %47, i32 0, i32 1
  store %struct.rtx_def* %46, %struct.rtx_def** %end49, align 8
  store i8 1, i8* %inserted, align 1
  %48 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i32 0, i64 2
  %rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rtx52, align 8
  store %struct.rtx_def* %49, %struct.rtx_def** %insn, align 8
  br label %while.cond.53

while.cond.53:                                    ; preds = %if.end.74, %if.end.48
  %50 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %tobool54 = icmp ne %struct.rtx_def* %50, null
  br i1 %tobool54, label %land.rhs.55, label %land.end.57

land.rhs.55:                                      ; preds = %while.cond.53
  %51 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %52 = load %struct.rtx_def*, %struct.rtx_def** %stop, align 8
  %cmp56 = icmp ne %struct.rtx_def* %51, %52
  br label %land.end.57

land.end.57:                                      ; preds = %land.rhs.55, %while.cond.53
  %53 = phi i1 [ false, %while.cond.53 ], [ %cmp56, %land.rhs.55 ]
  br i1 %53, label %while.body.58, label %while.end.75

while.body.58:                                    ; preds = %land.end.57
  %54 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i32 0, i64 2
  %rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rtx61, align 8
  store %struct.rtx_def* %55, %struct.rtx_def** %next, align 8
  %56 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %57 = bitcast %struct.rtx_def* %56 to i32*
  %bf.load62 = load i32, i32* %57, align 8
  %bf.clear63 = and i32 %bf.load62, 65535
  %idxprom64 = sext i32 %bf.clear63 to i64
  %arrayidx65 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom64
  %58 = load i8, i8* %arrayidx65, align 1
  %conv = sext i8 %58 to i32
  %cmp66 = icmp eq i32 %conv, 105
  br i1 %cmp66, label %if.then.68, label %if.end.74

if.then.68:                                       ; preds = %while.body.58
  %59 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call69 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %59)
  %60 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %61 = bitcast %struct.rtx_def* %60 to i32*
  %bf.load70 = load i32, i32* %61, align 8
  %bf.clear71 = and i32 %bf.load70, -134217729
  store i32 %bf.clear71, i32* %61, align 8
  %62 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call72 = call %struct.rtvec_def* (i32, ...) @gen_rtvec(i32 1, %struct.rtx_def* %62)
  %call73 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 24, i32 0, %struct.rtvec_def* %call72)
  store %struct.rtx_def* %call73, %struct.rtx_def** %seq, align 8
  %63 = load %struct.rtx_def*, %struct.rtx_def** %seq, align 8
  %64 = load %struct.edge_def*, %struct.edge_def** %e, align 8
  call void @insert_insn_on_edge(%struct.rtx_def* %63, %struct.edge_def* %64)
  br label %if.end.74

if.end.74:                                        ; preds = %if.then.68, %while.body.58
  %65 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  store %struct.rtx_def* %65, %struct.rtx_def** %insn, align 8
  br label %while.cond.53

while.end.75:                                     ; preds = %land.end.57
  br label %if.end.76

if.end.76:                                        ; preds = %while.end.75, %land.lhs.true.12, %land.lhs.true, %for.end
  br label %for.inc.77

for.inc.77:                                       ; preds = %if.end.76
  %66 = load i32, i32* %i, align 4
  %inc = add nsw i32 %66, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end.78:                                       ; preds = %for.cond
  %67 = load i8, i8* %inserted, align 1
  %tobool79 = trunc i8 %67 to i1
  br i1 %tobool79, label %if.then.80, label %if.end.81

if.then.80:                                       ; preds = %for.end.78
  call void @commit_edge_insertions()
  br label %if.end.81

if.end.81:                                        ; preds = %if.then.80, %for.end.78
  ret void
}

declare void @unshare_all_rtl_again(%struct.rtx_def*) #1

declare %struct.rtx_def* @form_sum(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_e(i32, i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) #1

declare %struct.rtx_def* @gen_rtx_SUBREG(i32, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @rtx_alloc(i32) #1

declare %struct.rtvec_def* @gen_rtvec_v(i32, %struct.rtx_def**) #1

; Function Attrs: nounwind uwtable
define i32 @reloads_conflict(i32 %r1, i32 %r2) #0 {
entry:
  %retval = alloca i32, align 4
  %r1.addr = alloca i32, align 4
  %r2.addr = alloca i32, align 4
  %r1_type = alloca i32, align 4
  %r2_type = alloca i32, align 4
  %r1_opnum = alloca i32, align 4
  %r2_opnum = alloca i32, align 4
  store i32 %r1, i32* %r1.addr, align 4
  store i32 %r2, i32* %r2.addr, align 4
  %0 = load i32, i32* %r1.addr, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx, i32 0, i32 17
  %1 = load i32, i32* %when_needed, align 4
  store i32 %1, i32* %r1_type, align 4
  %2 = load i32, i32* %r2.addr, align 4
  %idxprom1 = sext i32 %2 to i64
  %arrayidx2 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1
  %when_needed3 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx2, i32 0, i32 17
  %3 = load i32, i32* %when_needed3, align 4
  store i32 %3, i32* %r2_type, align 4
  %4 = load i32, i32* %r1.addr, align 4
  %idxprom4 = sext i32 %4 to i64
  %arrayidx5 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx5, i32 0, i32 12
  %5 = load i32, i32* %opnum, align 4
  store i32 %5, i32* %r1_opnum, align 4
  %6 = load i32, i32* %r2.addr, align 4
  %idxprom6 = sext i32 %6 to i64
  %arrayidx7 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom6
  %opnum8 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx7, i32 0, i32 12
  %7 = load i32, i32* %opnum8, align 4
  store i32 %7, i32* %r2_opnum, align 4
  %8 = load i32, i32* %r2_type, align 4
  %cmp = icmp eq i32 %8, 9
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %r1_type, align 4
  switch i32 %9, label %sw.default [
    i32 0, label %sw.bb
    i32 3, label %sw.bb.19
    i32 4, label %sw.bb.29
    i32 5, label %sw.bb.40
    i32 6, label %sw.bb.51
    i32 7, label %sw.bb.62
    i32 8, label %sw.bb.70
    i32 1, label %sw.bb.76
    i32 2, label %sw.bb.89
    i32 10, label %sw.bb.99
    i32 9, label %sw.bb.101
  ]

sw.bb:                                            ; preds = %if.end
  %10 = load i32, i32* %r2_type, align 4
  %cmp9 = icmp eq i32 %10, 2
  br i1 %cmp9, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb
  %11 = load i32, i32* %r2_type, align 4
  %cmp10 = icmp eq i32 %11, 7
  br i1 %cmp10, label %lor.end, label %lor.lhs.false.11

lor.lhs.false.11:                                 ; preds = %lor.lhs.false
  %12 = load i32, i32* %r2_type, align 4
  %cmp12 = icmp eq i32 %12, 8
  br i1 %cmp12, label %lor.end, label %lor.lhs.false.13

lor.lhs.false.13:                                 ; preds = %lor.lhs.false.11
  %13 = load i32, i32* %r2_type, align 4
  %cmp14 = icmp eq i32 %13, 0
  br i1 %cmp14, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.13
  %14 = load i32, i32* %r2_type, align 4
  %cmp15 = icmp eq i32 %14, 3
  br i1 %cmp15, label %land.rhs, label %lor.lhs.false.16

lor.lhs.false.16:                                 ; preds = %lor.rhs
  %15 = load i32, i32* %r2_type, align 4
  %cmp17 = icmp eq i32 %15, 4
  br i1 %cmp17, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.lhs.false.16, %lor.rhs
  %16 = load i32, i32* %r2_opnum, align 4
  %17 = load i32, i32* %r1_opnum, align 4
  %cmp18 = icmp sgt i32 %16, %17
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false.16
  %18 = phi i1 [ false, %lor.lhs.false.16 ], [ %cmp18, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %lor.lhs.false.13, %lor.lhs.false.11, %lor.lhs.false, %sw.bb
  %19 = phi i1 [ true, %lor.lhs.false.13 ], [ true, %lor.lhs.false.11 ], [ true, %lor.lhs.false ], [ true, %sw.bb ], [ %18, %land.end ]
  %lor.ext = zext i1 %19 to i32
  store i32 %lor.ext, i32* %retval
  br label %return

sw.bb.19:                                         ; preds = %if.end
  %20 = load i32, i32* %r2_type, align 4
  %cmp20 = icmp eq i32 %20, 3
  br i1 %cmp20, label %land.lhs.true, label %lor.rhs.22

land.lhs.true:                                    ; preds = %sw.bb.19
  %21 = load i32, i32* %r1_opnum, align 4
  %22 = load i32, i32* %r2_opnum, align 4
  %cmp21 = icmp eq i32 %21, %22
  br i1 %cmp21, label %lor.end.27, label %lor.rhs.22

lor.rhs.22:                                       ; preds = %land.lhs.true, %sw.bb.19
  %23 = load i32, i32* %r2_type, align 4
  %cmp23 = icmp eq i32 %23, 0
  br i1 %cmp23, label %land.rhs.24, label %land.end.26

land.rhs.24:                                      ; preds = %lor.rhs.22
  %24 = load i32, i32* %r2_opnum, align 4
  %25 = load i32, i32* %r1_opnum, align 4
  %cmp25 = icmp slt i32 %24, %25
  br label %land.end.26

land.end.26:                                      ; preds = %land.rhs.24, %lor.rhs.22
  %26 = phi i1 [ false, %lor.rhs.22 ], [ %cmp25, %land.rhs.24 ]
  br label %lor.end.27

lor.end.27:                                       ; preds = %land.end.26, %land.lhs.true
  %27 = phi i1 [ true, %land.lhs.true ], [ %26, %land.end.26 ]
  %lor.ext28 = zext i1 %27 to i32
  store i32 %lor.ext28, i32* %retval
  br label %return

sw.bb.29:                                         ; preds = %if.end
  %28 = load i32, i32* %r2_type, align 4
  %cmp30 = icmp eq i32 %28, 4
  br i1 %cmp30, label %land.lhs.true.31, label %lor.rhs.33

land.lhs.true.31:                                 ; preds = %sw.bb.29
  %29 = load i32, i32* %r1_opnum, align 4
  %30 = load i32, i32* %r2_opnum, align 4
  %cmp32 = icmp eq i32 %29, %30
  br i1 %cmp32, label %lor.end.38, label %lor.rhs.33

lor.rhs.33:                                       ; preds = %land.lhs.true.31, %sw.bb.29
  %31 = load i32, i32* %r2_type, align 4
  %cmp34 = icmp eq i32 %31, 0
  br i1 %cmp34, label %land.rhs.35, label %land.end.37

land.rhs.35:                                      ; preds = %lor.rhs.33
  %32 = load i32, i32* %r2_opnum, align 4
  %33 = load i32, i32* %r1_opnum, align 4
  %cmp36 = icmp slt i32 %32, %33
  br label %land.end.37

land.end.37:                                      ; preds = %land.rhs.35, %lor.rhs.33
  %34 = phi i1 [ false, %lor.rhs.33 ], [ %cmp36, %land.rhs.35 ]
  br label %lor.end.38

lor.end.38:                                       ; preds = %land.end.37, %land.lhs.true.31
  %35 = phi i1 [ true, %land.lhs.true.31 ], [ %34, %land.end.37 ]
  %lor.ext39 = zext i1 %35 to i32
  store i32 %lor.ext39, i32* %retval
  br label %return

sw.bb.40:                                         ; preds = %if.end
  %36 = load i32, i32* %r2_type, align 4
  %cmp41 = icmp eq i32 %36, 5
  br i1 %cmp41, label %land.lhs.true.42, label %lor.rhs.44

land.lhs.true.42:                                 ; preds = %sw.bb.40
  %37 = load i32, i32* %r2_opnum, align 4
  %38 = load i32, i32* %r1_opnum, align 4
  %cmp43 = icmp eq i32 %37, %38
  br i1 %cmp43, label %lor.end.49, label %lor.rhs.44

lor.rhs.44:                                       ; preds = %land.lhs.true.42, %sw.bb.40
  %39 = load i32, i32* %r2_type, align 4
  %cmp45 = icmp eq i32 %39, 1
  br i1 %cmp45, label %land.rhs.46, label %land.end.48

land.rhs.46:                                      ; preds = %lor.rhs.44
  %40 = load i32, i32* %r2_opnum, align 4
  %41 = load i32, i32* %r1_opnum, align 4
  %cmp47 = icmp sle i32 %40, %41
  br label %land.end.48

land.end.48:                                      ; preds = %land.rhs.46, %lor.rhs.44
  %42 = phi i1 [ false, %lor.rhs.44 ], [ %cmp47, %land.rhs.46 ]
  br label %lor.end.49

lor.end.49:                                       ; preds = %land.end.48, %land.lhs.true.42
  %43 = phi i1 [ true, %land.lhs.true.42 ], [ %42, %land.end.48 ]
  %lor.ext50 = zext i1 %43 to i32
  store i32 %lor.ext50, i32* %retval
  br label %return

sw.bb.51:                                         ; preds = %if.end
  %44 = load i32, i32* %r2_type, align 4
  %cmp52 = icmp eq i32 %44, 6
  br i1 %cmp52, label %land.lhs.true.53, label %lor.rhs.55

land.lhs.true.53:                                 ; preds = %sw.bb.51
  %45 = load i32, i32* %r2_opnum, align 4
  %46 = load i32, i32* %r1_opnum, align 4
  %cmp54 = icmp eq i32 %45, %46
  br i1 %cmp54, label %lor.end.60, label %lor.rhs.55

lor.rhs.55:                                       ; preds = %land.lhs.true.53, %sw.bb.51
  %47 = load i32, i32* %r2_type, align 4
  %cmp56 = icmp eq i32 %47, 1
  br i1 %cmp56, label %land.rhs.57, label %land.end.59

land.rhs.57:                                      ; preds = %lor.rhs.55
  %48 = load i32, i32* %r2_opnum, align 4
  %49 = load i32, i32* %r1_opnum, align 4
  %cmp58 = icmp sle i32 %48, %49
  br label %land.end.59

land.end.59:                                      ; preds = %land.rhs.57, %lor.rhs.55
  %50 = phi i1 [ false, %lor.rhs.55 ], [ %cmp58, %land.rhs.57 ]
  br label %lor.end.60

lor.end.60:                                       ; preds = %land.end.59, %land.lhs.true.53
  %51 = phi i1 [ true, %land.lhs.true.53 ], [ %50, %land.end.59 ]
  %lor.ext61 = zext i1 %51 to i32
  store i32 %lor.ext61, i32* %retval
  br label %return

sw.bb.62:                                         ; preds = %if.end
  %52 = load i32, i32* %r2_type, align 4
  %cmp63 = icmp eq i32 %52, 0
  br i1 %cmp63, label %lor.end.68, label %lor.lhs.false.64

lor.lhs.false.64:                                 ; preds = %sw.bb.62
  %53 = load i32, i32* %r2_type, align 4
  %cmp65 = icmp eq i32 %53, 2
  br i1 %cmp65, label %lor.end.68, label %lor.rhs.66

lor.rhs.66:                                       ; preds = %lor.lhs.false.64
  %54 = load i32, i32* %r2_type, align 4
  %cmp67 = icmp eq i32 %54, 7
  br label %lor.end.68

lor.end.68:                                       ; preds = %lor.rhs.66, %lor.lhs.false.64, %sw.bb.62
  %55 = phi i1 [ true, %lor.lhs.false.64 ], [ true, %sw.bb.62 ], [ %cmp67, %lor.rhs.66 ]
  %lor.ext69 = zext i1 %55 to i32
  store i32 %lor.ext69, i32* %retval
  br label %return

sw.bb.70:                                         ; preds = %if.end
  %56 = load i32, i32* %r2_type, align 4
  %cmp71 = icmp eq i32 %56, 0
  br i1 %cmp71, label %lor.end.74, label %lor.rhs.72

lor.rhs.72:                                       ; preds = %sw.bb.70
  %57 = load i32, i32* %r2_type, align 4
  %cmp73 = icmp eq i32 %57, 8
  br label %lor.end.74

lor.end.74:                                       ; preds = %lor.rhs.72, %sw.bb.70
  %58 = phi i1 [ true, %sw.bb.70 ], [ %cmp73, %lor.rhs.72 ]
  %lor.ext75 = zext i1 %58 to i32
  store i32 %lor.ext75, i32* %retval
  br label %return

sw.bb.76:                                         ; preds = %if.end
  %59 = load i32, i32* %r2_type, align 4
  %cmp77 = icmp eq i32 %59, 2
  br i1 %cmp77, label %lor.end.87, label %lor.lhs.false.78

lor.lhs.false.78:                                 ; preds = %sw.bb.76
  %60 = load i32, i32* %r2_type, align 4
  %cmp79 = icmp eq i32 %60, 1
  br i1 %cmp79, label %lor.end.87, label %lor.rhs.80

lor.rhs.80:                                       ; preds = %lor.lhs.false.78
  %61 = load i32, i32* %r2_type, align 4
  %cmp81 = icmp eq i32 %61, 5
  br i1 %cmp81, label %land.rhs.84, label %lor.lhs.false.82

lor.lhs.false.82:                                 ; preds = %lor.rhs.80
  %62 = load i32, i32* %r2_type, align 4
  %cmp83 = icmp eq i32 %62, 6
  br i1 %cmp83, label %land.rhs.84, label %land.end.86

land.rhs.84:                                      ; preds = %lor.lhs.false.82, %lor.rhs.80
  %63 = load i32, i32* %r2_opnum, align 4
  %64 = load i32, i32* %r1_opnum, align 4
  %cmp85 = icmp sge i32 %63, %64
  br label %land.end.86

land.end.86:                                      ; preds = %land.rhs.84, %lor.lhs.false.82
  %65 = phi i1 [ false, %lor.lhs.false.82 ], [ %cmp85, %land.rhs.84 ]
  br label %lor.end.87

lor.end.87:                                       ; preds = %land.end.86, %lor.lhs.false.78, %sw.bb.76
  %66 = phi i1 [ true, %lor.lhs.false.78 ], [ true, %sw.bb.76 ], [ %65, %land.end.86 ]
  %lor.ext88 = zext i1 %66 to i32
  store i32 %lor.ext88, i32* %retval
  br label %return

sw.bb.89:                                         ; preds = %if.end
  %67 = load i32, i32* %r2_type, align 4
  %cmp90 = icmp eq i32 %67, 0
  br i1 %cmp90, label %lor.end.97, label %lor.lhs.false.91

lor.lhs.false.91:                                 ; preds = %sw.bb.89
  %68 = load i32, i32* %r2_type, align 4
  %cmp92 = icmp eq i32 %68, 1
  br i1 %cmp92, label %lor.end.97, label %lor.lhs.false.93

lor.lhs.false.93:                                 ; preds = %lor.lhs.false.91
  %69 = load i32, i32* %r2_type, align 4
  %cmp94 = icmp eq i32 %69, 2
  br i1 %cmp94, label %lor.end.97, label %lor.rhs.95

lor.rhs.95:                                       ; preds = %lor.lhs.false.93
  %70 = load i32, i32* %r2_type, align 4
  %cmp96 = icmp eq i32 %70, 7
  br label %lor.end.97

lor.end.97:                                       ; preds = %lor.rhs.95, %lor.lhs.false.93, %lor.lhs.false.91, %sw.bb.89
  %71 = phi i1 [ true, %lor.lhs.false.93 ], [ true, %lor.lhs.false.91 ], [ true, %sw.bb.89 ], [ %cmp96, %lor.rhs.95 ]
  %lor.ext98 = zext i1 %71 to i32
  store i32 %lor.ext98, i32* %retval
  br label %return

sw.bb.99:                                         ; preds = %if.end
  %72 = load i32, i32* %r2_type, align 4
  %cmp100 = icmp eq i32 %72, 10
  %conv = zext i1 %cmp100 to i32
  store i32 %conv, i32* %retval
  br label %return

sw.bb.101:                                        ; preds = %if.end
  store i32 1, i32* %retval
  br label %return

sw.default:                                       ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 4739, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__FUNCTION__.reloads_conflict, i32 0, i32 0)) #5
  unreachable

return:                                           ; preds = %sw.bb.101, %sw.bb.99, %lor.end.97, %lor.end.87, %lor.end.74, %lor.end.68, %lor.end.60, %lor.end.49, %lor.end.38, %lor.end.27, %lor.end, %if.then
  %73 = load i32, i32* %retval
  ret i32 %73
}

; Function Attrs: nounwind uwtable
define void @deallocate_reload_reg(i32 %r) #0 {
entry:
  %r.addr = alloca i32, align 4
  %regno = alloca i32, align 4
  store i32 %r, i32* %r.addr, align 4
  %0 = load i32, i32* %r.addr, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx, i32 0, i32 11
  %1 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8
  %tobool = icmp ne %struct.rtx_def* %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %r.addr, align 4
  %idxprom1 = sext i32 %2 to i64
  %arrayidx2 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1
  %reg_rtx3 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx2, i32 0, i32 11
  %3 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx3, align 8
  %call = call i32 @true_regnum(%struct.rtx_def* %3)
  store i32 %call, i32* %regno, align 4
  %4 = load i32, i32* %r.addr, align 4
  %idxprom4 = sext i32 %4 to i64
  %arrayidx5 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4
  %reg_rtx6 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx5, i32 0, i32 11
  store %struct.rtx_def* null, %struct.rtx_def** %reg_rtx6, align 8
  %5 = load i32, i32* %regno, align 4
  %idxprom7 = sext i32 %5 to i64
  %arrayidx8 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_reg_order, i32 0, i64 %idxprom7
  %6 = load i16, i16* %arrayidx8, align 2
  %conv = sext i16 %6 to i32
  %cmp = icmp sge i32 %conv, 0
  br i1 %cmp, label %if.then.10, label %if.end.17

if.then.10:                                       ; preds = %if.end
  %7 = load i32, i32* %regno, align 4
  %8 = load i32, i32* %r.addr, align 4
  %idxprom11 = sext i32 %8 to i64
  %arrayidx12 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom11
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx12, i32 0, i32 12
  %9 = load i32, i32* %opnum, align 4
  %10 = load i32, i32* %r.addr, align 4
  %idxprom13 = sext i32 %10 to i64
  %arrayidx14 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom13
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx14, i32 0, i32 17
  %11 = load i32, i32* %when_needed, align 4
  %12 = load i32, i32* %r.addr, align 4
  %idxprom15 = sext i32 %12 to i64
  %arrayidx16 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom15
  %mode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx16, i32 0, i32 5
  %13 = load i32, i32* %mode, align 4
  call void @clear_reload_reg_in_use(i32 %7, i32 %9, i32 %11, i32 %13)
  br label %if.end.17

if.end.17:                                        ; preds = %if.then.10, %if.end
  %14 = load i32, i32* %r.addr, align 4
  %idxprom18 = sext i32 %14 to i64
  %arrayidx19 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i32 0, i64 %idxprom18
  store i32 -1, i32* %arrayidx19, align 4
  br label %return

return:                                           ; preds = %if.end.17, %if.then
  ret void
}

declare i32 @true_regnum(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @clear_reload_reg_in_use(i32 %regno, i32 %opnum, i32 %type, i32 %mode) #0 {
entry:
  %regno.addr = alloca i32, align 4
  %opnum.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %nregs = alloca i32, align 4
  %start_regno = alloca i32, align 4
  %end_regno = alloca i32, align 4
  %r = alloca i32, align 4
  %i = alloca i32, align 4
  %check_opnum = alloca i32, align 4
  %check_any = alloca i32, align 4
  %used_in_set = alloca i64*, align 8
  %conflict_start = alloca i32, align 4
  %conflict_end = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  store i32 %opnum, i32* %opnum.addr, align 4
  store i32 %type, i32* %type.addr, align 4
  store i32 %mode, i32* %mode.addr, align 4
  %0 = load i32, i32* %regno.addr, align 4
  %cmp = icmp uge i32 %0, 8
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %regno.addr, align 4
  %cmp1 = icmp ule i32 %1, 15
  br i1 %cmp1, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %2 = load i32, i32* %regno.addr, align 4
  %cmp2 = icmp uge i32 %2, 21
  br i1 %cmp2, label %land.lhs.true.3, label %lor.lhs.false.5

land.lhs.true.3:                                  ; preds = %lor.lhs.false
  %3 = load i32, i32* %regno.addr, align 4
  %cmp4 = icmp ule i32 %3, 28
  br i1 %cmp4, label %cond.true, label %lor.lhs.false.5

lor.lhs.false.5:                                  ; preds = %land.lhs.true.3, %lor.lhs.false
  %4 = load i32, i32* %regno.addr, align 4
  %cmp6 = icmp uge i32 %4, 45
  br i1 %cmp6, label %land.lhs.true.7, label %lor.lhs.false.9

land.lhs.true.7:                                  ; preds = %lor.lhs.false.5
  %5 = load i32, i32* %regno.addr, align 4
  %cmp8 = icmp ule i32 %5, 52
  br i1 %cmp8, label %cond.true, label %lor.lhs.false.9

lor.lhs.false.9:                                  ; preds = %land.lhs.true.7, %lor.lhs.false.5
  %6 = load i32, i32* %regno.addr, align 4
  %cmp10 = icmp uge i32 %6, 29
  br i1 %cmp10, label %land.lhs.true.11, label %cond.false

land.lhs.true.11:                                 ; preds = %lor.lhs.false.9
  %7 = load i32, i32* %regno.addr, align 4
  %cmp12 = icmp ule i32 %7, 36
  br i1 %cmp12, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.11, %land.lhs.true.7, %land.lhs.true.3, %land.lhs.true
  %8 = load i32, i32* %mode.addr, align 4
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %9 = load i32, i32* %arrayidx, align 4
  %cmp13 = icmp eq i32 %9, 5
  br i1 %cmp13, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %10 = load i32, i32* %mode.addr, align 4
  %idxprom14 = sext i32 %10 to i64
  %arrayidx15 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom14
  %11 = load i32, i32* %arrayidx15, align 4
  %cmp16 = icmp eq i32 %11, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %12 = phi i1 [ true, %cond.true ], [ %cmp16, %lor.rhs ]
  %cond = select i1 %12, i32 2, i32 1
  br label %cond.end.38

cond.false:                                       ; preds = %land.lhs.true.11, %lor.lhs.false.9
  %13 = load i32, i32* %mode.addr, align 4
  %cmp17 = icmp eq i32 %13, 18
  br i1 %cmp17, label %cond.true.18, label %cond.false.20

cond.true.18:                                     ; preds = %cond.false
  %14 = load i32, i32* @target_flags, align 4
  %and = and i32 %14, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond19 = select i1 %tobool, i32 2, i32 3
  br label %cond.end.36

cond.false.20:                                    ; preds = %cond.false
  %15 = load i32, i32* %mode.addr, align 4
  %cmp21 = icmp eq i32 %15, 24
  br i1 %cmp21, label %cond.true.22, label %cond.false.26

cond.true.22:                                     ; preds = %cond.false.20
  %16 = load i32, i32* @target_flags, align 4
  %and23 = and i32 %16, 33554432
  %tobool24 = icmp ne i32 %and23, 0
  %cond25 = select i1 %tobool24, i32 4, i32 6
  br label %cond.end

cond.false.26:                                    ; preds = %cond.false.20
  %17 = load i32, i32* %mode.addr, align 4
  %idxprom27 = sext i32 %17 to i64
  %arrayidx28 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom27
  %18 = load i8, i8* %arrayidx28, align 1
  %conv = zext i8 %18 to i32
  %19 = load i32, i32* @target_flags, align 4
  %and29 = and i32 %19, 33554432
  %tobool30 = icmp ne i32 %and29, 0
  %cond31 = select i1 %tobool30, i32 8, i32 4
  %add = add nsw i32 %conv, %cond31
  %sub = sub nsw i32 %add, 1
  %20 = load i32, i32* @target_flags, align 4
  %and32 = and i32 %20, 33554432
  %tobool33 = icmp ne i32 %and32, 0
  %cond34 = select i1 %tobool33, i32 8, i32 4
  %div = sdiv i32 %sub, %cond34
  br label %cond.end

cond.end:                                         ; preds = %cond.false.26, %cond.true.22
  %cond35 = phi i32 [ %cond25, %cond.true.22 ], [ %div, %cond.false.26 ]
  br label %cond.end.36

cond.end.36:                                      ; preds = %cond.end, %cond.true.18
  %cond37 = phi i32 [ %cond19, %cond.true.18 ], [ %cond35, %cond.end ]
  br label %cond.end.38

cond.end.38:                                      ; preds = %cond.end.36, %lor.end
  %cond39 = phi i32 [ %cond, %lor.end ], [ %cond37, %cond.end.36 ]
  store i32 %cond39, i32* %nregs, align 4
  store i32 0, i32* %check_opnum, align 4
  store i32 0, i32* %check_any, align 4
  %21 = load i32, i32* %type.addr, align 4
  switch i32 %21, label %sw.default [
    i32 9, label %sw.bb
    i32 3, label %sw.bb.40
    i32 4, label %sw.bb.43
    i32 5, label %sw.bb.46
    i32 6, label %sw.bb.49
    i32 7, label %sw.bb.52
    i32 8, label %sw.bb.53
    i32 10, label %sw.bb.54
    i32 0, label %sw.bb.55
    i32 1, label %sw.bb.58
    i32 2, label %sw.bb.61
  ]

sw.bb:                                            ; preds = %cond.end.38
  store i64* @reload_reg_used, i64** %used_in_set, align 8
  br label %sw.epilog

sw.bb.40:                                         ; preds = %cond.end.38
  %22 = load i32, i32* %opnum.addr, align 4
  %idxprom41 = sext i32 %22 to i64
  %arrayidx42 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input_addr, i32 0, i64 %idxprom41
  store i64* %arrayidx42, i64** %used_in_set, align 8
  br label %sw.epilog

sw.bb.43:                                         ; preds = %cond.end.38
  store i32 1, i32* %check_opnum, align 4
  %23 = load i32, i32* %opnum.addr, align 4
  %idxprom44 = sext i32 %23 to i64
  %arrayidx45 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_inpaddr_addr, i32 0, i64 %idxprom44
  store i64* %arrayidx45, i64** %used_in_set, align 8
  br label %sw.epilog

sw.bb.46:                                         ; preds = %cond.end.38
  %24 = load i32, i32* %opnum.addr, align 4
  %idxprom47 = sext i32 %24 to i64
  %arrayidx48 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output_addr, i32 0, i64 %idxprom47
  store i64* %arrayidx48, i64** %used_in_set, align 8
  br label %sw.epilog

sw.bb.49:                                         ; preds = %cond.end.38
  store i32 1, i32* %check_opnum, align 4
  %25 = load i32, i32* %opnum.addr, align 4
  %idxprom50 = sext i32 %25 to i64
  %arrayidx51 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_outaddr_addr, i32 0, i64 %idxprom50
  store i64* %arrayidx51, i64** %used_in_set, align 8
  br label %sw.epilog

sw.bb.52:                                         ; preds = %cond.end.38
  store i64* @reload_reg_used_in_op_addr, i64** %used_in_set, align 8
  br label %sw.epilog

sw.bb.53:                                         ; preds = %cond.end.38
  store i32 1, i32* %check_any, align 4
  store i64* @reload_reg_used_in_op_addr_reload, i64** %used_in_set, align 8
  br label %sw.epilog

sw.bb.54:                                         ; preds = %cond.end.38
  store i64* @reload_reg_used_in_other_addr, i64** %used_in_set, align 8
  store i32 1, i32* %check_any, align 4
  br label %sw.epilog

sw.bb.55:                                         ; preds = %cond.end.38
  %26 = load i32, i32* %opnum.addr, align 4
  %idxprom56 = sext i32 %26 to i64
  %arrayidx57 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i32 0, i64 %idxprom56
  store i64* %arrayidx57, i64** %used_in_set, align 8
  br label %sw.epilog

sw.bb.58:                                         ; preds = %cond.end.38
  %27 = load i32, i32* %opnum.addr, align 4
  %idxprom59 = sext i32 %27 to i64
  %arrayidx60 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i32 0, i64 %idxprom59
  store i64* %arrayidx60, i64** %used_in_set, align 8
  br label %sw.epilog

sw.bb.61:                                         ; preds = %cond.end.38
  store i64* @reload_reg_used_in_insn, i64** %used_in_set, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %cond.end.38
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 4328, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.clear_reload_reg_in_use, i32 0, i32 0)) #5
  unreachable

sw.epilog:                                        ; preds = %sw.bb.61, %sw.bb.58, %sw.bb.55, %sw.bb.54, %sw.bb.53, %sw.bb.52, %sw.bb.49, %sw.bb.46, %sw.bb.43, %sw.bb.40, %sw.bb
  %28 = load i32, i32* %regno.addr, align 4
  store i32 %28, i32* %start_regno, align 4
  %29 = load i32, i32* %regno.addr, align 4
  %30 = load i32, i32* %nregs, align 4
  %add62 = add i32 %29, %30
  store i32 %add62, i32* %end_regno, align 4
  %31 = load i32, i32* %check_opnum, align 4
  %tobool63 = icmp ne i32 %31, 0
  br i1 %tobool63, label %if.then, label %lor.lhs.false.64

lor.lhs.false.64:                                 ; preds = %sw.epilog
  %32 = load i32, i32* %check_any, align 4
  %tobool65 = icmp ne i32 %32, 0
  br i1 %tobool65, label %if.then, label %if.end.187

if.then:                                          ; preds = %lor.lhs.false.64, %sw.epilog
  %33 = load i32, i32* @n_reloads, align 4
  %sub66 = sub nsw i32 %33, 1
  store i32 %sub66, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %34 = load i32, i32* %i, align 4
  %cmp67 = icmp sge i32 %34, 0
  br i1 %cmp67, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %35 = load i32, i32* %i, align 4
  %idxprom69 = sext i32 %35 to i64
  %arrayidx70 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom69
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx70, i32 0, i32 17
  %36 = load i32, i32* %when_needed, align 4
  %37 = load i32, i32* %type.addr, align 4
  %cmp71 = icmp eq i32 %36, %37
  br i1 %cmp71, label %land.lhs.true.73, label %if.end.186

land.lhs.true.73:                                 ; preds = %for.body
  %38 = load i32, i32* %check_any, align 4
  %tobool74 = icmp ne i32 %38, 0
  br i1 %tobool74, label %land.lhs.true.81, label %lor.lhs.false.75

lor.lhs.false.75:                                 ; preds = %land.lhs.true.73
  %39 = load i32, i32* %i, align 4
  %idxprom76 = sext i32 %39 to i64
  %arrayidx77 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom76
  %opnum78 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx77, i32 0, i32 12
  %40 = load i32, i32* %opnum78, align 4
  %41 = load i32, i32* %opnum.addr, align 4
  %cmp79 = icmp eq i32 %40, %41
  br i1 %cmp79, label %land.lhs.true.81, label %if.end.186

land.lhs.true.81:                                 ; preds = %lor.lhs.false.75, %land.lhs.true.73
  %42 = load i32, i32* %i, align 4
  %idxprom82 = sext i32 %42 to i64
  %arrayidx83 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom82
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx83, i32 0, i32 11
  %43 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8
  %tobool84 = icmp ne %struct.rtx_def* %43, null
  br i1 %tobool84, label %if.then.85, label %if.end.186

if.then.85:                                       ; preds = %land.lhs.true.81
  %44 = load i32, i32* %i, align 4
  %idxprom86 = sext i32 %44 to i64
  %arrayidx87 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom86
  %reg_rtx88 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx87, i32 0, i32 11
  %45 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx88, align 8
  %call = call i32 @true_regnum(%struct.rtx_def* %45)
  store i32 %call, i32* %conflict_start, align 4
  %46 = load i32, i32* %conflict_start, align 4
  %47 = load i32, i32* %conflict_start, align 4
  %cmp89 = icmp uge i32 %47, 8
  br i1 %cmp89, label %land.lhs.true.91, label %lor.lhs.false.94

land.lhs.true.91:                                 ; preds = %if.then.85
  %48 = load i32, i32* %conflict_start, align 4
  %cmp92 = icmp ule i32 %48, 15
  br i1 %cmp92, label %cond.true.112, label %lor.lhs.false.94

lor.lhs.false.94:                                 ; preds = %land.lhs.true.91, %if.then.85
  %49 = load i32, i32* %conflict_start, align 4
  %cmp95 = icmp uge i32 %49, 21
  br i1 %cmp95, label %land.lhs.true.97, label %lor.lhs.false.100

land.lhs.true.97:                                 ; preds = %lor.lhs.false.94
  %50 = load i32, i32* %conflict_start, align 4
  %cmp98 = icmp ule i32 %50, 28
  br i1 %cmp98, label %cond.true.112, label %lor.lhs.false.100

lor.lhs.false.100:                                ; preds = %land.lhs.true.97, %lor.lhs.false.94
  %51 = load i32, i32* %conflict_start, align 4
  %cmp101 = icmp uge i32 %51, 45
  br i1 %cmp101, label %land.lhs.true.103, label %lor.lhs.false.106

land.lhs.true.103:                                ; preds = %lor.lhs.false.100
  %52 = load i32, i32* %conflict_start, align 4
  %cmp104 = icmp ule i32 %52, 52
  br i1 %cmp104, label %cond.true.112, label %lor.lhs.false.106

lor.lhs.false.106:                                ; preds = %land.lhs.true.103, %lor.lhs.false.100
  %53 = load i32, i32* %conflict_start, align 4
  %cmp107 = icmp uge i32 %53, 29
  br i1 %cmp107, label %land.lhs.true.109, label %cond.false.130

land.lhs.true.109:                                ; preds = %lor.lhs.false.106
  %54 = load i32, i32* %conflict_start, align 4
  %cmp110 = icmp ule i32 %54, 36
  br i1 %cmp110, label %cond.true.112, label %cond.false.130

cond.true.112:                                    ; preds = %land.lhs.true.109, %land.lhs.true.103, %land.lhs.true.97, %land.lhs.true.91
  %55 = load i32, i32* %i, align 4
  %idxprom113 = sext i32 %55 to i64
  %arrayidx114 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom113
  %mode115 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx114, i32 0, i32 5
  %56 = load i32, i32* %mode115, align 4
  %idxprom116 = sext i32 %56 to i64
  %arrayidx117 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom116
  %57 = load i32, i32* %arrayidx117, align 4
  %cmp118 = icmp eq i32 %57, 5
  br i1 %cmp118, label %lor.end.128, label %lor.rhs.120

lor.rhs.120:                                      ; preds = %cond.true.112
  %58 = load i32, i32* %i, align 4
  %idxprom121 = sext i32 %58 to i64
  %arrayidx122 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom121
  %mode123 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx122, i32 0, i32 5
  %59 = load i32, i32* %mode123, align 4
  %idxprom124 = sext i32 %59 to i64
  %arrayidx125 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom124
  %60 = load i32, i32* %arrayidx125, align 4
  %cmp126 = icmp eq i32 %60, 6
  br label %lor.end.128

lor.end.128:                                      ; preds = %lor.rhs.120, %cond.true.112
  %61 = phi i1 [ true, %cond.true.112 ], [ %cmp126, %lor.rhs.120 ]
  %cond129 = select i1 %61, i32 2, i32 1
  br label %cond.end.170

cond.false.130:                                   ; preds = %land.lhs.true.109, %lor.lhs.false.106
  %62 = load i32, i32* %i, align 4
  %idxprom131 = sext i32 %62 to i64
  %arrayidx132 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom131
  %mode133 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx132, i32 0, i32 5
  %63 = load i32, i32* %mode133, align 4
  %cmp134 = icmp eq i32 %63, 18
  br i1 %cmp134, label %cond.true.136, label %cond.false.140

cond.true.136:                                    ; preds = %cond.false.130
  %64 = load i32, i32* @target_flags, align 4
  %and137 = and i32 %64, 33554432
  %tobool138 = icmp ne i32 %and137, 0
  %cond139 = select i1 %tobool138, i32 2, i32 3
  br label %cond.end.168

cond.false.140:                                   ; preds = %cond.false.130
  %65 = load i32, i32* %i, align 4
  %idxprom141 = sext i32 %65 to i64
  %arrayidx142 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom141
  %mode143 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx142, i32 0, i32 5
  %66 = load i32, i32* %mode143, align 4
  %cmp144 = icmp eq i32 %66, 24
  br i1 %cmp144, label %cond.true.146, label %cond.false.150

cond.true.146:                                    ; preds = %cond.false.140
  %67 = load i32, i32* @target_flags, align 4
  %and147 = and i32 %67, 33554432
  %tobool148 = icmp ne i32 %and147, 0
  %cond149 = select i1 %tobool148, i32 4, i32 6
  br label %cond.end.166

cond.false.150:                                   ; preds = %cond.false.140
  %68 = load i32, i32* %i, align 4
  %idxprom151 = sext i32 %68 to i64
  %arrayidx152 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom151
  %mode153 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx152, i32 0, i32 5
  %69 = load i32, i32* %mode153, align 4
  %idxprom154 = sext i32 %69 to i64
  %arrayidx155 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom154
  %70 = load i8, i8* %arrayidx155, align 1
  %conv156 = zext i8 %70 to i32
  %71 = load i32, i32* @target_flags, align 4
  %and157 = and i32 %71, 33554432
  %tobool158 = icmp ne i32 %and157, 0
  %cond159 = select i1 %tobool158, i32 8, i32 4
  %add160 = add nsw i32 %conv156, %cond159
  %sub161 = sub nsw i32 %add160, 1
  %72 = load i32, i32* @target_flags, align 4
  %and162 = and i32 %72, 33554432
  %tobool163 = icmp ne i32 %and162, 0
  %cond164 = select i1 %tobool163, i32 8, i32 4
  %div165 = sdiv i32 %sub161, %cond164
  br label %cond.end.166

cond.end.166:                                     ; preds = %cond.false.150, %cond.true.146
  %cond167 = phi i32 [ %cond149, %cond.true.146 ], [ %div165, %cond.false.150 ]
  br label %cond.end.168

cond.end.168:                                     ; preds = %cond.end.166, %cond.true.136
  %cond169 = phi i32 [ %cond139, %cond.true.136 ], [ %cond167, %cond.end.166 ]
  br label %cond.end.170

cond.end.170:                                     ; preds = %cond.end.168, %lor.end.128
  %cond171 = phi i32 [ %cond129, %lor.end.128 ], [ %cond169, %cond.end.168 ]
  %add172 = add i32 %46, %cond171
  store i32 %add172, i32* %conflict_end, align 4
  %73 = load i32, i32* %conflict_start, align 4
  %74 = load i32, i32* %start_regno, align 4
  %cmp173 = icmp ule i32 %73, %74
  br i1 %cmp173, label %land.lhs.true.175, label %if.end

land.lhs.true.175:                                ; preds = %cond.end.170
  %75 = load i32, i32* %conflict_end, align 4
  %76 = load i32, i32* %start_regno, align 4
  %cmp176 = icmp ugt i32 %75, %76
  br i1 %cmp176, label %if.then.178, label %if.end

if.then.178:                                      ; preds = %land.lhs.true.175
  %77 = load i32, i32* %conflict_end, align 4
  store i32 %77, i32* %start_regno, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.178, %land.lhs.true.175, %cond.end.170
  %78 = load i32, i32* %conflict_start, align 4
  %79 = load i32, i32* %start_regno, align 4
  %cmp179 = icmp ugt i32 %78, %79
  br i1 %cmp179, label %land.lhs.true.181, label %if.end.185

land.lhs.true.181:                                ; preds = %if.end
  %80 = load i32, i32* %conflict_start, align 4
  %81 = load i32, i32* %end_regno, align 4
  %cmp182 = icmp ult i32 %80, %81
  br i1 %cmp182, label %if.then.184, label %if.end.185

if.then.184:                                      ; preds = %land.lhs.true.181
  %82 = load i32, i32* %conflict_start, align 4
  store i32 %82, i32* %end_regno, align 4
  br label %if.end.185

if.end.185:                                       ; preds = %if.then.184, %land.lhs.true.181, %if.end
  br label %if.end.186

if.end.186:                                       ; preds = %if.end.185, %land.lhs.true.81, %lor.lhs.false.75, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.186
  %83 = load i32, i32* %i, align 4
  %dec = add nsw i32 %83, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.187

if.end.187:                                       ; preds = %for.end, %lor.lhs.false.64
  %84 = load i32, i32* %start_regno, align 4
  store i32 %84, i32* %r, align 4
  br label %for.cond.188

for.cond.188:                                     ; preds = %for.inc.193, %if.end.187
  %85 = load i32, i32* %r, align 4
  %86 = load i32, i32* %end_regno, align 4
  %cmp189 = icmp ult i32 %85, %86
  br i1 %cmp189, label %for.body.191, label %for.end.194

for.body.191:                                     ; preds = %for.cond.188
  %87 = load i32, i32* %r, align 4
  %sh_prom = zext i32 %87 to i64
  %shl = shl i64 1, %sh_prom
  %neg = xor i64 %shl, -1
  %88 = load i64*, i64** %used_in_set, align 8
  %89 = load i64, i64* %88, align 8
  %and192 = and i64 %89, %neg
  store i64 %and192, i64* %88, align 8
  br label %for.inc.193

for.inc.193:                                      ; preds = %for.body.191
  %90 = load i32, i32* %r, align 4
  %inc = add i32 %90, 1
  store i32 %inc, i32* %r, align 4
  br label %for.cond.188

for.end.194:                                      ; preds = %for.cond.188
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_reload(%struct.rtx_def* %out, %struct.rtx_def* %in, i32 %opnum, i32 %type) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %out.addr = alloca %struct.rtx_def*, align 8
  %in.addr = alloca %struct.rtx_def*, align 8
  %opnum.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %last = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  %op0 = alloca %struct.rtx_def*, align 8
  %op1 = alloca %struct.rtx_def*, align 8
  %tem178 = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %loc = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %out, %struct.rtx_def** %out.addr, align 8
  store %struct.rtx_def* %in, %struct.rtx_def** %in.addr, align 8
  store i32 %opnum, i32* %opnum.addr, align 4
  store i32 %type, i32* %type.addr, align 4
  %call = call %struct.rtx_def* @get_last_insn()
  store %struct.rtx_def* %call, %struct.rtx_def** %last, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 63
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load1 = load i32, i32* %3, align 8
  %bf.lshr = lshr i32 %bf.load1, 16
  %bf.clear2 = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear2 to i64
  %arrayidx = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom
  %4 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %4 to i32
  %5 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load4 = load i32, i32* %7, align 8
  %bf.lshr5 = lshr i32 %bf.load4, 16
  %bf.clear6 = and i32 %bf.lshr5, 255
  %idxprom7 = sext i32 %bf.clear6 to i64
  %arrayidx8 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom7
  %8 = load i8, i8* %arrayidx8, align 1
  %conv9 = zext i8 %8 to i32
  %cmp10 = icmp sgt i32 %conv, %conv9
  br i1 %cmp10, label %land.lhs.true.12, label %if.else

land.lhs.true.12:                                 ; preds = %land.lhs.true
  %9 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i32 0, i64 0
  %rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rtx15, align 8
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load16 = load i32, i32* %11, align 8
  %bf.lshr17 = lshr i32 %bf.load16, 16
  %bf.clear18 = and i32 %bf.lshr17, 255
  %12 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %call19 = call %struct.rtx_def* @gen_lowpart_common(i32 %bf.clear18, %struct.rtx_def* %12)
  store %struct.rtx_def* %call19, %struct.rtx_def** %tem, align 8
  %cmp20 = icmp ne %struct.rtx_def* %call19, null
  br i1 %cmp20, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true.12
  %13 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i32 0, i64 0
  %rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rtx24, align 8
  store %struct.rtx_def* %14, %struct.rtx_def** %in.addr, align 8
  %15 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %15, %struct.rtx_def** %out.addr, align 8
  br label %if.end.61

if.else:                                          ; preds = %land.lhs.true.12, %land.lhs.true, %entry
  %16 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load25 = load i32, i32* %17, align 8
  %bf.clear26 = and i32 %bf.load25, 65535
  %cmp27 = icmp eq i32 %bf.clear26, 63
  br i1 %cmp27, label %land.lhs.true.29, label %if.end

land.lhs.true.29:                                 ; preds = %if.else
  %18 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load30 = load i32, i32* %19, align 8
  %bf.lshr31 = lshr i32 %bf.load30, 16
  %bf.clear32 = and i32 %bf.lshr31, 255
  %idxprom33 = sext i32 %bf.clear32 to i64
  %arrayidx34 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom33
  %20 = load i8, i8* %arrayidx34, align 1
  %conv35 = zext i8 %20 to i32
  %21 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i32 0, i64 0
  %rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rtx38, align 8
  %23 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load39 = load i32, i32* %23, align 8
  %bf.lshr40 = lshr i32 %bf.load39, 16
  %bf.clear41 = and i32 %bf.lshr40, 255
  %idxprom42 = sext i32 %bf.clear41 to i64
  %arrayidx43 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom42
  %24 = load i8, i8* %arrayidx43, align 1
  %conv44 = zext i8 %24 to i32
  %cmp45 = icmp sgt i32 %conv35, %conv44
  br i1 %cmp45, label %land.lhs.true.47, label %if.end

land.lhs.true.47:                                 ; preds = %land.lhs.true.29
  %25 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i32 0, i64 0
  %rtx50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rtx50, align 8
  %27 = bitcast %struct.rtx_def* %26 to i32*
  %bf.load51 = load i32, i32* %27, align 8
  %bf.lshr52 = lshr i32 %bf.load51, 16
  %bf.clear53 = and i32 %bf.lshr52, 255
  %28 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %call54 = call %struct.rtx_def* @gen_lowpart_common(i32 %bf.clear53, %struct.rtx_def* %28)
  store %struct.rtx_def* %call54, %struct.rtx_def** %tem, align 8
  %cmp55 = icmp ne %struct.rtx_def* %call54, null
  br i1 %cmp55, label %if.then.57, label %if.end

if.then.57:                                       ; preds = %land.lhs.true.47
  %29 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i32 0, i64 0
  %rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rtx60, align 8
  store %struct.rtx_def* %30, %struct.rtx_def** %out.addr, align 8
  %31 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %31, %struct.rtx_def** %in.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.57, %land.lhs.true.47, %land.lhs.true.29, %if.else
  br label %if.end.61

if.end.61:                                        ; preds = %if.end, %if.then
  %32 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load62 = load i32, i32* %33, align 8
  %bf.clear63 = and i32 %bf.load62, 65535
  %cmp64 = icmp eq i32 %bf.clear63, 75
  br i1 %cmp64, label %land.lhs.true.66, label %if.else.367

land.lhs.true.66:                                 ; preds = %if.end.61
  %34 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i32 0, i64 0
  %rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rtx69, align 8
  %36 = bitcast %struct.rtx_def* %35 to i32*
  %bf.load70 = load i32, i32* %36, align 8
  %bf.clear71 = and i32 %bf.load70, 65535
  %cmp72 = icmp eq i32 %bf.clear71, 61
  br i1 %cmp72, label %land.lhs.true.89, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.66
  %37 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1
  %arrayidx75 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld74, i32 0, i64 0
  %rtx76 = bitcast %union.rtunion_def* %arrayidx75 to %struct.rtx_def**
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rtx76, align 8
  %39 = bitcast %struct.rtx_def* %38 to i32*
  %bf.load77 = load i32, i32* %39, align 8
  %bf.clear78 = and i32 %bf.load77, 65535
  %cmp79 = icmp eq i32 %bf.clear78, 63
  br i1 %cmp79, label %land.lhs.true.89, label %lor.lhs.false.81

lor.lhs.false.81:                                 ; preds = %lor.lhs.false
  %40 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1
  %arrayidx83 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld82, i32 0, i64 0
  %rtx84 = bitcast %union.rtunion_def* %arrayidx83 to %struct.rtx_def**
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rtx84, align 8
  %42 = bitcast %struct.rtx_def* %41 to i32*
  %bf.load85 = load i32, i32* %42, align 8
  %bf.clear86 = and i32 %bf.load85, 65535
  %cmp87 = icmp eq i32 %bf.clear86, 66
  br i1 %cmp87, label %land.lhs.true.89, label %if.else.367

land.lhs.true.89:                                 ; preds = %lor.lhs.false.81, %lor.lhs.false, %land.lhs.true.66
  %43 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx91 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld90, i32 0, i64 1
  %rtx92 = bitcast %union.rtunion_def* %arrayidx91 to %struct.rtx_def**
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rtx92, align 8
  %45 = bitcast %struct.rtx_def* %44 to i32*
  %bf.load93 = load i32, i32* %45, align 8
  %bf.clear94 = and i32 %bf.load93, 65535
  %cmp95 = icmp eq i32 %bf.clear94, 61
  br i1 %cmp95, label %if.then.177, label %lor.lhs.false.97

lor.lhs.false.97:                                 ; preds = %land.lhs.true.89
  %46 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld98 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx99 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld98, i32 0, i64 1
  %rtx100 = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtx_def**
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rtx100, align 8
  %48 = bitcast %struct.rtx_def* %47 to i32*
  %bf.load101 = load i32, i32* %48, align 8
  %bf.clear102 = and i32 %bf.load101, 65535
  %cmp103 = icmp eq i32 %bf.clear102, 63
  br i1 %cmp103, label %if.then.177, label %lor.lhs.false.105

lor.lhs.false.105:                                ; preds = %lor.lhs.false.97
  %49 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1
  %arrayidx107 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld106, i32 0, i64 1
  %rtx108 = bitcast %union.rtunion_def* %arrayidx107 to %struct.rtx_def**
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rtx108, align 8
  %51 = bitcast %struct.rtx_def* %50 to i32*
  %bf.load109 = load i32, i32* %51, align 8
  %bf.clear110 = and i32 %bf.load109, 65535
  %cmp111 = icmp eq i32 %bf.clear110, 67
  br i1 %cmp111, label %if.then.177, label %lor.lhs.false.113

lor.lhs.false.113:                                ; preds = %lor.lhs.false.105
  %52 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1
  %arrayidx115 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld114, i32 0, i64 1
  %rtx116 = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtx_def**
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rtx116, align 8
  %54 = bitcast %struct.rtx_def* %53 to i32*
  %bf.load117 = load i32, i32* %54, align 8
  %bf.clear118 = and i32 %bf.load117, 65535
  %cmp119 = icmp eq i32 %bf.clear118, 68
  br i1 %cmp119, label %if.then.177, label %lor.lhs.false.121

lor.lhs.false.121:                                ; preds = %lor.lhs.false.113
  %55 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld122 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1
  %arrayidx123 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld122, i32 0, i64 1
  %rtx124 = bitcast %union.rtunion_def* %arrayidx123 to %struct.rtx_def**
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rtx124, align 8
  %57 = bitcast %struct.rtx_def* %56 to i32*
  %bf.load125 = load i32, i32* %57, align 8
  %bf.clear126 = and i32 %bf.load125, 65535
  %cmp127 = icmp eq i32 %bf.clear126, 54
  br i1 %cmp127, label %if.then.177, label %lor.lhs.false.129

lor.lhs.false.129:                                ; preds = %lor.lhs.false.121
  %58 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1
  %arrayidx131 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld130, i32 0, i64 1
  %rtx132 = bitcast %union.rtunion_def* %arrayidx131 to %struct.rtx_def**
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rtx132, align 8
  %60 = bitcast %struct.rtx_def* %59 to i32*
  %bf.load133 = load i32, i32* %60, align 8
  %bf.clear134 = and i32 %bf.load133, 65535
  %cmp135 = icmp eq i32 %bf.clear134, 55
  br i1 %cmp135, label %if.then.177, label %lor.lhs.false.137

lor.lhs.false.137:                                ; preds = %lor.lhs.false.129
  %61 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld138 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1
  %arrayidx139 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld138, i32 0, i64 1
  %rtx140 = bitcast %union.rtunion_def* %arrayidx139 to %struct.rtx_def**
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rtx140, align 8
  %63 = bitcast %struct.rtx_def* %62 to i32*
  %bf.load141 = load i32, i32* %63, align 8
  %bf.clear142 = and i32 %bf.load141, 65535
  %cmp143 = icmp eq i32 %bf.clear142, 58
  br i1 %cmp143, label %if.then.177, label %lor.lhs.false.145

lor.lhs.false.145:                                ; preds = %lor.lhs.false.137
  %64 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld146 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1
  %arrayidx147 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld146, i32 0, i64 1
  %rtx148 = bitcast %union.rtunion_def* %arrayidx147 to %struct.rtx_def**
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rtx148, align 8
  %66 = bitcast %struct.rtx_def* %65 to i32*
  %bf.load149 = load i32, i32* %66, align 8
  %bf.clear150 = and i32 %bf.load149, 65535
  %cmp151 = icmp eq i32 %bf.clear150, 134
  br i1 %cmp151, label %if.then.177, label %lor.lhs.false.153

lor.lhs.false.153:                                ; preds = %lor.lhs.false.145
  %67 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1
  %arrayidx155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld154, i32 0, i64 1
  %rtx156 = bitcast %union.rtunion_def* %arrayidx155 to %struct.rtx_def**
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rtx156, align 8
  %69 = bitcast %struct.rtx_def* %68 to i32*
  %bf.load157 = load i32, i32* %69, align 8
  %bf.clear158 = and i32 %bf.load157, 65535
  %cmp159 = icmp eq i32 %bf.clear158, 56
  br i1 %cmp159, label %if.then.177, label %lor.lhs.false.161

lor.lhs.false.161:                                ; preds = %lor.lhs.false.153
  %70 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld162 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx163 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld162, i32 0, i64 1
  %rtx164 = bitcast %union.rtunion_def* %arrayidx163 to %struct.rtx_def**
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rtx164, align 8
  %72 = bitcast %struct.rtx_def* %71 to i32*
  %bf.load165 = load i32, i32* %72, align 8
  %bf.clear166 = and i32 %bf.load165, 65535
  %cmp167 = icmp eq i32 %bf.clear166, 140
  br i1 %cmp167, label %if.then.177, label %lor.lhs.false.169

lor.lhs.false.169:                                ; preds = %lor.lhs.false.161
  %73 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1
  %arrayidx171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld170, i32 0, i64 1
  %rtx172 = bitcast %union.rtunion_def* %arrayidx171 to %struct.rtx_def**
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rtx172, align 8
  %75 = bitcast %struct.rtx_def* %74 to i32*
  %bf.load173 = load i32, i32* %75, align 8
  %bf.clear174 = and i32 %bf.load173, 65535
  %cmp175 = icmp eq i32 %bf.clear174, 66
  br i1 %cmp175, label %if.then.177, label %if.else.367

if.then.177:                                      ; preds = %lor.lhs.false.169, %lor.lhs.false.161, %lor.lhs.false.153, %lor.lhs.false.145, %lor.lhs.false.137, %lor.lhs.false.129, %lor.lhs.false.121, %lor.lhs.false.113, %lor.lhs.false.105, %lor.lhs.false.97, %land.lhs.true.89
  %76 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld179 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %arrayidx180 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld179, i32 0, i64 0
  %rtx181 = bitcast %union.rtunion_def* %arrayidx180 to %struct.rtx_def**
  %call182 = call %struct.rtx_def* @find_replacement(%struct.rtx_def** %rtx181)
  store %struct.rtx_def* %call182, %struct.rtx_def** %op0, align 8
  %77 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld183 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1
  %arrayidx184 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld183, i32 0, i64 1
  %rtx185 = bitcast %union.rtunion_def* %arrayidx184 to %struct.rtx_def**
  %call186 = call %struct.rtx_def* @find_replacement(%struct.rtx_def** %rtx185)
  store %struct.rtx_def* %call186, %struct.rtx_def** %op1, align 8
  %78 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld187 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx188 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld187, i32 0, i64 1
  %rtx189 = bitcast %union.rtunion_def* %arrayidx188 to %struct.rtx_def**
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rtx189, align 8
  %80 = bitcast %struct.rtx_def* %79 to i32*
  %bf.load190 = load i32, i32* %80, align 8
  %bf.clear191 = and i32 %bf.load190, 65535
  %cmp192 = icmp eq i32 %bf.clear191, 61
  br i1 %cmp192, label %land.lhs.true.194, label %if.end.206

land.lhs.true.194:                                ; preds = %if.then.177
  %81 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld195 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1
  %arrayidx196 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld195, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx196 to i32*
  %82 = load i32, i32* %rtuint, align 4
  %83 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld197 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx198 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld197, i32 0, i64 1
  %rtx199 = bitcast %union.rtunion_def* %arrayidx198 to %struct.rtx_def**
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rtx199, align 8
  %fld200 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1
  %arrayidx201 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld200, i32 0, i64 0
  %rtuint202 = bitcast %union.rtunion_def* %arrayidx201 to i32*
  %85 = load i32, i32* %rtuint202, align 4
  %cmp203 = icmp eq i32 %82, %85
  br i1 %cmp203, label %if.then.205, label %if.end.206

if.then.205:                                      ; preds = %land.lhs.true.194
  %86 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  store %struct.rtx_def* %86, %struct.rtx_def** %tem178, align 8
  %87 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  store %struct.rtx_def* %87, %struct.rtx_def** %op0, align 8
  %88 = load %struct.rtx_def*, %struct.rtx_def** %tem178, align 8
  store %struct.rtx_def* %88, %struct.rtx_def** %op1, align 8
  br label %if.end.206

if.end.206:                                       ; preds = %if.then.205, %land.lhs.true.194, %if.then.177
  %89 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %90 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld207 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1
  %arrayidx208 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld207, i32 0, i64 0
  %rtx209 = bitcast %union.rtunion_def* %arrayidx208 to %struct.rtx_def**
  %91 = load %struct.rtx_def*, %struct.rtx_def** %rtx209, align 8
  %cmp210 = icmp ne %struct.rtx_def* %89, %91
  br i1 %cmp210, label %if.then.218, label %lor.lhs.false.212

lor.lhs.false.212:                                ; preds = %if.end.206
  %92 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %93 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld213 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %93, i32 0, i32 1
  %arrayidx214 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld213, i32 0, i64 1
  %rtx215 = bitcast %union.rtunion_def* %arrayidx214 to %struct.rtx_def**
  %94 = load %struct.rtx_def*, %struct.rtx_def** %rtx215, align 8
  %cmp216 = icmp ne %struct.rtx_def* %92, %94
  br i1 %cmp216, label %if.then.218, label %if.end.223

if.then.218:                                      ; preds = %lor.lhs.false.212, %if.end.206
  %95 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %96 = bitcast %struct.rtx_def* %95 to i32*
  %bf.load219 = load i32, i32* %96, align 8
  %bf.lshr220 = lshr i32 %bf.load219, 16
  %bf.clear221 = and i32 %bf.lshr220, 255
  %97 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %98 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call222 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear221, %struct.rtx_def* %97, %struct.rtx_def* %98)
  store %struct.rtx_def* %call222, %struct.rtx_def** %in.addr, align 8
  br label %if.end.223

if.end.223:                                       ; preds = %if.then.218, %lor.lhs.false.212
  %99 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %100 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %call224 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %99, %struct.rtx_def* %100)
  %call225 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call224)
  store %struct.rtx_def* %call225, %struct.rtx_def** %insn, align 8
  %101 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld226 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i32 0, i32 1
  %arrayidx227 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld226, i32 0, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx227 to i32*
  %102 = load i32, i32* %rtint, align 4
  %cmp228 = icmp sge i32 %102, 0
  br i1 %cmp228, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.223
  %103 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld230 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1
  %arrayidx231 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld230, i32 0, i64 4
  %rtint232 = bitcast %union.rtunion_def* %arrayidx231 to i32*
  %104 = load i32, i32* %rtint232, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end.223
  %105 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call233 = call i32 @recog_memoized_1(%struct.rtx_def* %105)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %104, %cond.true ], [ %call233, %cond.false ]
  store i32 %cond, i32* %code, align 4
  %106 = load i32, i32* %code, align 4
  %cmp234 = icmp sge i32 %106, 0
  br i1 %cmp234, label %if.then.236, label %if.end.240

if.then.236:                                      ; preds = %cond.end
  %107 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  call void @extract_insn(%struct.rtx_def* %107)
  %call237 = call i32 @constrain_operands(i32 1)
  %tobool = icmp ne i32 %call237, 0
  br i1 %tobool, label %if.then.238, label %if.end.239

if.then.238:                                      ; preds = %if.then.236
  %108 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  store %struct.rtx_def* %108, %struct.rtx_def** %retval
  br label %return

if.end.239:                                       ; preds = %if.then.236
  br label %if.end.240

if.end.240:                                       ; preds = %if.end.239, %cond.end
  %109 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8
  call void @delete_insns_since(%struct.rtx_def* %109)
  %110 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %111 = bitcast %struct.rtx_def* %110 to i32*
  %bf.load241 = load i32, i32* %111, align 8
  %bf.lshr242 = lshr i32 %bf.load241, 16
  %bf.clear243 = and i32 %bf.lshr242, 255
  %idxprom244 = sext i32 %bf.clear243 to i64
  %112 = load %struct.optab*, %struct.optab** getelementptr inbounds ([49 x %struct.optab*], [49 x %struct.optab*]* @optab_table, i32 0, i64 0), align 8
  %handlers = getelementptr inbounds %struct.optab, %struct.optab* %112, i32 0, i32 1
  %arrayidx245 = getelementptr inbounds [59 x %struct.anon.4], [59 x %struct.anon.4]* %handlers, i32 0, i64 %idxprom244
  %insn_code = getelementptr inbounds %struct.anon.4, %struct.anon.4* %arrayidx245, i32 0, i32 0
  %113 = load i32, i32* %insn_code, align 4
  store i32 %113, i32* %code, align 4
  %114 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %115 = bitcast %struct.rtx_def* %114 to i32*
  %bf.load246 = load i32, i32* %115, align 8
  %bf.clear247 = and i32 %bf.load246, 65535
  %cmp248 = icmp eq i32 %bf.clear247, 67
  br i1 %cmp248, label %if.then.320, label %lor.lhs.false.250

lor.lhs.false.250:                                ; preds = %if.end.240
  %116 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %117 = bitcast %struct.rtx_def* %116 to i32*
  %bf.load251 = load i32, i32* %117, align 8
  %bf.clear252 = and i32 %bf.load251, 65535
  %cmp253 = icmp eq i32 %bf.clear252, 68
  br i1 %cmp253, label %if.then.320, label %lor.lhs.false.255

lor.lhs.false.255:                                ; preds = %lor.lhs.false.250
  %118 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %119 = bitcast %struct.rtx_def* %118 to i32*
  %bf.load256 = load i32, i32* %119, align 8
  %bf.clear257 = and i32 %bf.load256, 65535
  %cmp258 = icmp eq i32 %bf.clear257, 54
  br i1 %cmp258, label %if.then.320, label %lor.lhs.false.260

lor.lhs.false.260:                                ; preds = %lor.lhs.false.255
  %120 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %121 = bitcast %struct.rtx_def* %120 to i32*
  %bf.load261 = load i32, i32* %121, align 8
  %bf.clear262 = and i32 %bf.load261, 65535
  %cmp263 = icmp eq i32 %bf.clear262, 55
  br i1 %cmp263, label %if.then.320, label %lor.lhs.false.265

lor.lhs.false.265:                                ; preds = %lor.lhs.false.260
  %122 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %123 = bitcast %struct.rtx_def* %122 to i32*
  %bf.load266 = load i32, i32* %123, align 8
  %bf.clear267 = and i32 %bf.load266, 65535
  %cmp268 = icmp eq i32 %bf.clear267, 58
  br i1 %cmp268, label %if.then.320, label %lor.lhs.false.270

lor.lhs.false.270:                                ; preds = %lor.lhs.false.265
  %124 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %125 = bitcast %struct.rtx_def* %124 to i32*
  %bf.load271 = load i32, i32* %125, align 8
  %bf.clear272 = and i32 %bf.load271, 65535
  %cmp273 = icmp eq i32 %bf.clear272, 134
  br i1 %cmp273, label %if.then.320, label %lor.lhs.false.275

lor.lhs.false.275:                                ; preds = %lor.lhs.false.270
  %126 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %127 = bitcast %struct.rtx_def* %126 to i32*
  %bf.load276 = load i32, i32* %127, align 8
  %bf.clear277 = and i32 %bf.load276, 65535
  %cmp278 = icmp eq i32 %bf.clear277, 56
  br i1 %cmp278, label %if.then.320, label %lor.lhs.false.280

lor.lhs.false.280:                                ; preds = %lor.lhs.false.275
  %128 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %129 = bitcast %struct.rtx_def* %128 to i32*
  %bf.load281 = load i32, i32* %129, align 8
  %bf.clear282 = and i32 %bf.load281, 65535
  %cmp283 = icmp eq i32 %bf.clear282, 140
  br i1 %cmp283, label %if.then.320, label %lor.lhs.false.285

lor.lhs.false.285:                                ; preds = %lor.lhs.false.280
  %130 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %131 = bitcast %struct.rtx_def* %130 to i32*
  %bf.load286 = load i32, i32* %131, align 8
  %bf.clear287 = and i32 %bf.load286, 65535
  %cmp288 = icmp eq i32 %bf.clear287, 66
  br i1 %cmp288, label %if.then.320, label %lor.lhs.false.290

lor.lhs.false.290:                                ; preds = %lor.lhs.false.285
  %132 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %133 = bitcast %struct.rtx_def* %132 to i32*
  %bf.load291 = load i32, i32* %133, align 8
  %bf.clear292 = and i32 %bf.load291, 65535
  %cmp293 = icmp eq i32 %bf.clear292, 63
  br i1 %cmp293, label %if.then.320, label %lor.lhs.false.295

lor.lhs.false.295:                                ; preds = %lor.lhs.false.290
  %134 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %135 = bitcast %struct.rtx_def* %134 to i32*
  %bf.load296 = load i32, i32* %135, align 8
  %bf.clear297 = and i32 %bf.load296, 65535
  %cmp298 = icmp eq i32 %bf.clear297, 61
  br i1 %cmp298, label %land.lhs.true.300, label %lor.lhs.false.306

land.lhs.true.300:                                ; preds = %lor.lhs.false.295
  %136 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld301 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1
  %arrayidx302 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld301, i32 0, i64 0
  %rtuint303 = bitcast %union.rtunion_def* %arrayidx302 to i32*
  %137 = load i32, i32* %rtuint303, align 4
  %cmp304 = icmp uge i32 %137, 53
  br i1 %cmp304, label %if.then.320, label %lor.lhs.false.306

lor.lhs.false.306:                                ; preds = %land.lhs.true.300, %lor.lhs.false.295
  %138 = load i32, i32* %code, align 4
  %cmp307 = icmp ne i32 %138, 1317
  br i1 %cmp307, label %land.lhs.true.309, label %if.end.321

land.lhs.true.309:                                ; preds = %lor.lhs.false.306
  %139 = load i32, i32* %code, align 4
  %idxprom310 = sext i32 %139 to i64
  %arrayidx311 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom310
  %operand = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx311, i32 0, i32 3
  %140 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8
  %arrayidx312 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %140, i64 2
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx312, i32 0, i32 0
  %141 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8
  %142 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %143 = load i32, i32* %code, align 4
  %idxprom313 = sext i32 %143 to i64
  %arrayidx314 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom313
  %operand315 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx314, i32 0, i32 3
  %144 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand315, align 8
  %arrayidx316 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %144, i64 2
  %mode = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx316, i32 0, i32 2
  %bf.load317 = load i16, i16* %mode, align 8
  %bf.cast = zext i16 %bf.load317 to i32
  %call318 = call i32 %141(%struct.rtx_def* %142, i32 %bf.cast)
  %tobool319 = icmp ne i32 %call318, 0
  br i1 %tobool319, label %if.end.321, label %if.then.320

if.then.320:                                      ; preds = %land.lhs.true.309, %land.lhs.true.300, %lor.lhs.false.290, %lor.lhs.false.285, %lor.lhs.false.280, %lor.lhs.false.275, %lor.lhs.false.270, %lor.lhs.false.265, %lor.lhs.false.260, %lor.lhs.false.255, %lor.lhs.false.250, %if.end.240
  %145 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  store %struct.rtx_def* %145, %struct.rtx_def** %tem178, align 8
  %146 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  store %struct.rtx_def* %146, %struct.rtx_def** %op0, align 8
  %147 = load %struct.rtx_def*, %struct.rtx_def** %tem178, align 8
  store %struct.rtx_def* %147, %struct.rtx_def** %op1, align 8
  br label %if.end.321

if.end.321:                                       ; preds = %if.then.320, %land.lhs.true.309, %lor.lhs.false.306
  %148 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %149 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %150 = load i32, i32* %opnum.addr, align 4
  %151 = load i32, i32* %type.addr, align 4
  %call322 = call %struct.rtx_def* @gen_reload(%struct.rtx_def* %148, %struct.rtx_def* %149, i32 %150, i32 %151)
  %152 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %153 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call323 = call i32 @rtx_equal_p(%struct.rtx_def* %152, %struct.rtx_def* %153)
  %tobool324 = icmp ne i32 %call323, 0
  br i1 %tobool324, label %if.then.325, label %if.end.326

if.then.325:                                      ; preds = %if.end.321
  %154 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  store %struct.rtx_def* %154, %struct.rtx_def** %op1, align 8
  br label %if.end.326

if.end.326:                                       ; preds = %if.then.325, %if.end.321
  %155 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %156 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call327 = call %struct.rtx_def* @gen_add2_insn(%struct.rtx_def* %155, %struct.rtx_def* %156)
  %call328 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call327)
  store %struct.rtx_def* %call328, %struct.rtx_def** %insn, align 8
  %157 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld329 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %157, i32 0, i32 1
  %arrayidx330 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld329, i32 0, i64 4
  %rtint331 = bitcast %union.rtunion_def* %arrayidx330 to i32*
  %158 = load i32, i32* %rtint331, align 4
  %cmp332 = icmp sge i32 %158, 0
  br i1 %cmp332, label %cond.true.334, label %cond.false.338

cond.true.334:                                    ; preds = %if.end.326
  %159 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld335 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1
  %arrayidx336 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld335, i32 0, i64 4
  %rtint337 = bitcast %union.rtunion_def* %arrayidx336 to i32*
  %160 = load i32, i32* %rtint337, align 4
  br label %cond.end.340

cond.false.338:                                   ; preds = %if.end.326
  %161 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call339 = call i32 @recog_memoized_1(%struct.rtx_def* %161)
  br label %cond.end.340

cond.end.340:                                     ; preds = %cond.false.338, %cond.true.334
  %cond341 = phi i32 [ %160, %cond.true.334 ], [ %call339, %cond.false.338 ]
  store i32 %cond341, i32* %code, align 4
  %162 = load i32, i32* %code, align 4
  %cmp342 = icmp sge i32 %162, 0
  br i1 %cmp342, label %if.then.344, label %if.end.356

if.then.344:                                      ; preds = %cond.end.340
  %163 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  call void @extract_insn(%struct.rtx_def* %163)
  %call345 = call i32 @constrain_operands(i32 1)
  %tobool346 = icmp ne i32 %call345, 0
  br i1 %tobool346, label %if.then.347, label %if.end.355

if.then.347:                                      ; preds = %if.then.344
  %164 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %165 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld348 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %165, i32 0, i32 1
  %arrayidx349 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld348, i32 0, i64 6
  %rtx350 = bitcast %union.rtunion_def* %arrayidx349 to %struct.rtx_def**
  %166 = load %struct.rtx_def*, %struct.rtx_def** %rtx350, align 8
  %call351 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 3, %struct.rtx_def* %164, %struct.rtx_def* %166)
  %167 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld352 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %167, i32 0, i32 1
  %arrayidx353 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld352, i32 0, i64 6
  %rtx354 = bitcast %union.rtunion_def* %arrayidx353 to %struct.rtx_def**
  store %struct.rtx_def* %call351, %struct.rtx_def** %rtx354, align 8
  %168 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  store %struct.rtx_def* %168, %struct.rtx_def** %retval
  br label %return

if.end.355:                                       ; preds = %if.then.344
  br label %if.end.356

if.end.356:                                       ; preds = %if.end.355, %cond.end.340
  %169 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8
  call void @delete_insns_since(%struct.rtx_def* %169)
  %170 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %171 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %172 = load i32, i32* %opnum.addr, align 4
  %173 = load i32, i32* %type.addr, align 4
  %call357 = call %struct.rtx_def* @gen_reload(%struct.rtx_def* %170, %struct.rtx_def* %171, i32 %172, i32 %173)
  %174 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %175 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call358 = call %struct.rtx_def* @gen_add2_insn(%struct.rtx_def* %174, %struct.rtx_def* %175)
  %call359 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call358)
  store %struct.rtx_def* %call359, %struct.rtx_def** %insn, align 8
  %176 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %177 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld360 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %177, i32 0, i32 1
  %arrayidx361 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld360, i32 0, i64 6
  %rtx362 = bitcast %union.rtunion_def* %arrayidx361 to %struct.rtx_def**
  %178 = load %struct.rtx_def*, %struct.rtx_def** %rtx362, align 8
  %call363 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 3, %struct.rtx_def* %176, %struct.rtx_def* %178)
  %179 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld364 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %179, i32 0, i32 1
  %arrayidx365 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld364, i32 0, i64 6
  %rtx366 = bitcast %union.rtunion_def* %arrayidx365 to %struct.rtx_def**
  store %struct.rtx_def* %call363, %struct.rtx_def** %rtx366, align 8
  br label %if.end.467

if.else.367:                                      ; preds = %lor.lhs.false.169, %lor.lhs.false.81, %if.end.61
  %180 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %181 = bitcast %struct.rtx_def* %180 to i32*
  %bf.load368 = load i32, i32* %181, align 8
  %bf.clear369 = and i32 %bf.load368, 65535
  %cmp370 = icmp eq i32 %bf.clear369, 61
  br i1 %cmp370, label %land.lhs.true.372, label %if.else.446

land.lhs.true.372:                                ; preds = %if.else.367
  %182 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld373 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %182, i32 0, i32 1
  %arrayidx374 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld373, i32 0, i64 0
  %rtuint375 = bitcast %union.rtunion_def* %arrayidx374 to i32*
  %183 = load i32, i32* %rtuint375, align 4
  %cmp376 = icmp ult i32 %183, 53
  br i1 %cmp376, label %land.lhs.true.378, label %if.else.446

land.lhs.true.378:                                ; preds = %land.lhs.true.372
  %184 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %185 = bitcast %struct.rtx_def* %184 to i32*
  %bf.load379 = load i32, i32* %185, align 8
  %bf.clear380 = and i32 %bf.load379, 65535
  %cmp381 = icmp eq i32 %bf.clear380, 61
  br i1 %cmp381, label %land.lhs.true.383, label %if.else.446

land.lhs.true.383:                                ; preds = %land.lhs.true.378
  %186 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld384 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %186, i32 0, i32 1
  %arrayidx385 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld384, i32 0, i64 0
  %rtuint386 = bitcast %union.rtunion_def* %arrayidx385 to i32*
  %187 = load i32, i32* %rtuint386, align 4
  %cmp387 = icmp ult i32 %187, 53
  br i1 %cmp387, label %land.lhs.true.389, label %if.else.446

land.lhs.true.389:                                ; preds = %land.lhs.true.383
  %188 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld390 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %188, i32 0, i32 1
  %arrayidx391 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld390, i32 0, i64 0
  %rtuint392 = bitcast %union.rtunion_def* %arrayidx391 to i32*
  %189 = load i32, i32* %rtuint392, align 4
  %idxprom393 = zext i32 %189 to i64
  %arrayidx394 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i32 0, i64 %idxprom393
  %190 = load i32, i32* %arrayidx394, align 4
  %191 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld395 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %191, i32 0, i32 1
  %arrayidx396 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld395, i32 0, i64 0
  %rtuint397 = bitcast %union.rtunion_def* %arrayidx396 to i32*
  %192 = load i32, i32* %rtuint397, align 4
  %idxprom398 = zext i32 %192 to i64
  %arrayidx399 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i32 0, i64 %idxprom398
  %193 = load i32, i32* %arrayidx399, align 4
  %194 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %195 = bitcast %struct.rtx_def* %194 to i32*
  %bf.load400 = load i32, i32* %195, align 8
  %bf.lshr401 = lshr i32 %bf.load400, 16
  %bf.clear402 = and i32 %bf.lshr401, 255
  %call403 = call i32 @ix86_secondary_memory_needed(i32 %190, i32 %193, i32 %bf.clear402, i32 1)
  %tobool404 = icmp ne i32 %call403, 0
  br i1 %tobool404, label %if.then.405, label %if.else.446

if.then.405:                                      ; preds = %land.lhs.true.389
  %196 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %197 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %198 = bitcast %struct.rtx_def* %197 to i32*
  %bf.load406 = load i32, i32* %198, align 8
  %bf.lshr407 = lshr i32 %bf.load406, 16
  %bf.clear408 = and i32 %bf.lshr407, 255
  %199 = load i32, i32* %opnum.addr, align 4
  %200 = load i32, i32* %type.addr, align 4
  %call409 = call %struct.rtx_def* @get_secondary_mem(%struct.rtx_def* %196, i32 %bf.clear408, i32 %199, i32 %200)
  store %struct.rtx_def* %call409, %struct.rtx_def** %loc, align 8
  %201 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8
  %202 = bitcast %struct.rtx_def* %201 to i32*
  %bf.load410 = load i32, i32* %202, align 8
  %bf.lshr411 = lshr i32 %bf.load410, 16
  %bf.clear412 = and i32 %bf.lshr411, 255
  %203 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %204 = bitcast %struct.rtx_def* %203 to i32*
  %bf.load413 = load i32, i32* %204, align 8
  %bf.lshr414 = lshr i32 %bf.load413, 16
  %bf.clear415 = and i32 %bf.lshr414, 255
  %cmp416 = icmp ne i32 %bf.clear412, %bf.clear415
  br i1 %cmp416, label %if.then.418, label %if.end.426

if.then.418:                                      ; preds = %if.then.405
  %205 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8
  %206 = bitcast %struct.rtx_def* %205 to i32*
  %bf.load419 = load i32, i32* %206, align 8
  %bf.lshr420 = lshr i32 %bf.load419, 16
  %bf.clear421 = and i32 %bf.lshr420, 255
  %207 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld422 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %207, i32 0, i32 1
  %arrayidx423 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld422, i32 0, i64 0
  %rtuint424 = bitcast %union.rtunion_def* %arrayidx423 to i32*
  %208 = load i32, i32* %rtuint424, align 4
  %call425 = call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear421, i32 %208)
  store %struct.rtx_def* %call425, %struct.rtx_def** %out.addr, align 8
  br label %if.end.426

if.end.426:                                       ; preds = %if.then.418, %if.then.405
  %209 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8
  %210 = bitcast %struct.rtx_def* %209 to i32*
  %bf.load427 = load i32, i32* %210, align 8
  %bf.lshr428 = lshr i32 %bf.load427, 16
  %bf.clear429 = and i32 %bf.lshr428, 255
  %211 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %212 = bitcast %struct.rtx_def* %211 to i32*
  %bf.load430 = load i32, i32* %212, align 8
  %bf.lshr431 = lshr i32 %bf.load430, 16
  %bf.clear432 = and i32 %bf.lshr431, 255
  %cmp433 = icmp ne i32 %bf.clear429, %bf.clear432
  br i1 %cmp433, label %if.then.435, label %if.end.443

if.then.435:                                      ; preds = %if.end.426
  %213 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8
  %214 = bitcast %struct.rtx_def* %213 to i32*
  %bf.load436 = load i32, i32* %214, align 8
  %bf.lshr437 = lshr i32 %bf.load436, 16
  %bf.clear438 = and i32 %bf.lshr437, 255
  %215 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld439 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %215, i32 0, i32 1
  %arrayidx440 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld439, i32 0, i64 0
  %rtuint441 = bitcast %union.rtunion_def* %arrayidx440 to i32*
  %216 = load i32, i32* %rtuint441, align 4
  %call442 = call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear438, i32 %216)
  store %struct.rtx_def* %call442, %struct.rtx_def** %in.addr, align 8
  br label %if.end.443

if.end.443:                                       ; preds = %if.then.435, %if.end.426
  %217 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8
  %218 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %219 = load i32, i32* %opnum.addr, align 4
  %220 = load i32, i32* %type.addr, align 4
  %call444 = call %struct.rtx_def* @gen_reload(%struct.rtx_def* %217, %struct.rtx_def* %218, i32 %219, i32 %220)
  %221 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %222 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8
  %223 = load i32, i32* %opnum.addr, align 4
  %224 = load i32, i32* %type.addr, align 4
  %call445 = call %struct.rtx_def* @gen_reload(%struct.rtx_def* %221, %struct.rtx_def* %222, i32 %223, i32 %224)
  br label %if.end.466

if.else.446:                                      ; preds = %land.lhs.true.389, %land.lhs.true.383, %land.lhs.true.378, %land.lhs.true.372, %if.else.367
  %225 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %226 = bitcast %struct.rtx_def* %225 to i32*
  %bf.load447 = load i32, i32* %226, align 8
  %bf.clear448 = and i32 %bf.load447, 65535
  %idxprom449 = sext i32 %bf.clear448 to i64
  %arrayidx450 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom449
  %227 = load i8, i8* %arrayidx450, align 1
  %conv451 = sext i8 %227 to i32
  %cmp452 = icmp eq i32 %conv451, 111
  br i1 %cmp452, label %if.then.459, label %lor.lhs.false.454

lor.lhs.false.454:                                ; preds = %if.else.446
  %228 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %229 = bitcast %struct.rtx_def* %228 to i32*
  %bf.load455 = load i32, i32* %229, align 8
  %bf.clear456 = and i32 %bf.load455, 65535
  %cmp457 = icmp eq i32 %bf.clear456, 63
  br i1 %cmp457, label %if.then.459, label %if.else.462

if.then.459:                                      ; preds = %lor.lhs.false.454, %if.else.446
  %230 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %231 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %call460 = call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %230, %struct.rtx_def* %231)
  %call461 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call460)
  br label %if.end.465

if.else.462:                                      ; preds = %lor.lhs.false.454
  %232 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %233 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %call463 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %232, %struct.rtx_def* %233)
  %call464 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call463)
  br label %if.end.465

if.end.465:                                       ; preds = %if.else.462, %if.then.459
  br label %if.end.466

if.end.466:                                       ; preds = %if.end.465, %if.end.443
  br label %if.end.467

if.end.467:                                       ; preds = %if.end.466, %if.end.356
  %234 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8
  %tobool468 = icmp ne %struct.rtx_def* %234, null
  br i1 %tobool468, label %cond.true.469, label %cond.false.473

cond.true.469:                                    ; preds = %if.end.467
  %235 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8
  %fld470 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %235, i32 0, i32 1
  %arrayidx471 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld470, i32 0, i64 2
  %rtx472 = bitcast %union.rtunion_def* %arrayidx471 to %struct.rtx_def**
  %236 = load %struct.rtx_def*, %struct.rtx_def** %rtx472, align 8
  br label %cond.end.475

cond.false.473:                                   ; preds = %if.end.467
  %call474 = call %struct.rtx_def* @get_insns()
  br label %cond.end.475

cond.end.475:                                     ; preds = %cond.false.473, %cond.true.469
  %cond476 = phi %struct.rtx_def* [ %236, %cond.true.469 ], [ %call474, %cond.false.473 ]
  store %struct.rtx_def* %cond476, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %cond.end.475, %if.then.347, %if.then.238
  %237 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %237
}

declare %struct.rtx_def* @get_last_insn() #1

declare %struct.rtx_def* @gen_lowpart_common(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @find_replacement(%struct.rtx_def**) #1

declare %struct.rtx_def* @emit_insn(%struct.rtx_def*) #1

declare i32 @recog_memoized_1(%struct.rtx_def*) #1

declare void @extract_insn(%struct.rtx_def*) #1

declare i32 @constrain_operands(i32) #1

declare void @delete_insns_since(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_add2_insn(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @ix86_secondary_memory_needed(i32, i32, i32, i32) #1

declare %struct.rtx_def* @get_secondary_mem(%struct.rtx_def*, i32, i32, i32) #1

declare %struct.rtx_def* @gen_move_insn(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @get_insns() #1

; Function Attrs: nounwind uwtable
define void @reload_cse_regs(%struct.rtx_def* %first) #0 {
entry:
  %first.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %first, %struct.rtx_def** %first.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %first.addr, align 8
  call void @reload_cse_regs_1(%struct.rtx_def* %0)
  call void @reload_combine()
  %1 = load %struct.rtx_def*, %struct.rtx_def** %first.addr, align 8
  call void @reload_cse_move2add(%struct.rtx_def* %1)
  %2 = load i32, i32* @flag_expensive_optimizations, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %first.addr, align 8
  call void @reload_cse_regs_1(%struct.rtx_def* %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @reload_cse_regs_1(%struct.rtx_def* %first) #0 {
entry:
  %first.addr = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %first, %struct.rtx_def** %first.addr, align 8
  call void @cselib_init()
  call void @init_alias_analysis()
  %0 = load %struct.rtx_def*, %struct.rtx_def** %first.addr, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %insn, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %tobool = icmp ne %struct.rtx_def* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load = load i32, i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom = sext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %4 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %4 to i32
  %cmp = icmp eq i32 %conv, 105
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  call void @reload_cse_simplify(%struct.rtx_def* %5)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  call void @cselib_process_insn(%struct.rtx_def* %6)
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %8, %struct.rtx_def** %insn, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  call void @end_alias_analysis()
  call void @cselib_finish()
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @reload_combine() #0 {
entry:
  %insn = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %first_index_reg = alloca i32, align 4
  %last_index_reg = alloca i32, align 4
  %i = alloca i32, align 4
  %r = alloca i32, align 4
  %last_label_ruid = alloca i32, align 4
  %min_labelno = alloca i32, align 4
  %n_labels = alloca i32, align 4
  %ever_live_at_start = alloca i64, align 8
  %label_live = alloca i64*, align 8
  %live = alloca i64, align 8
  %note = alloca %struct.rtx_def*, align 8
  %reg = alloca %struct.rtx_def*, align 8
  %plus = alloca %struct.rtx_def*, align 8
  %base = alloca %struct.rtx_def*, align 8
  %prev = alloca %struct.rtx_def*, align 8
  %prev_set = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %const_reg = alloca %struct.rtx_def*, align 8
  %reg_sum = alloca %struct.rtx_def*, align 8
  %index_reg = alloca %struct.rtx_def*, align 8
  %i541 = alloca i32, align 4
  %np = alloca %struct.rtx_def**, align 8
  %link = alloca %struct.rtx_def*, align 8
  %usage_rtx = alloca %struct.rtx_def*, align 8
  %i684 = alloca i32, align 4
  %start_reg = alloca i32, align 4
  %num_regs = alloca i32, align 4
  %end_reg = alloca i32, align 4
  %live819 = alloca i64*, align 8
  %regno883 = alloca i32, align 4
  store i32 -1, i32* %first_index_reg, align 4
  store i32 0, i32* %last_index_reg, align 4
  %0 = load i8, i8* @double_reg_address_ok, align 1
  %conv = sext i8 %0 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  store i32 0, i32* %r, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, i32* %r, align 4
  %cmp = icmp ult i32 %1, 53
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* getelementptr inbounds ([25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 10), align 8
  %3 = load i32, i32* %r, align 4
  %sh_prom = zext i32 %3 to i64
  %shl = shl i64 1, %sh_prom
  %and = and i64 %2, %shl
  %tobool2 = icmp ne i64 %and, 0
  br i1 %tobool2, label %if.then.3, label %if.end.8

if.then.3:                                        ; preds = %for.body
  %4 = load i32, i32* %first_index_reg, align 4
  %cmp4 = icmp eq i32 %4, -1
  br i1 %cmp4, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.then.3
  %5 = load i32, i32* %r, align 4
  store i32 %5, i32* %first_index_reg, align 4
  br label %if.end.7

if.end.7:                                         ; preds = %if.then.6, %if.then.3
  %6 = load i32, i32* %r, align 4
  store i32 %6, i32* %last_index_reg, align 4
  br label %if.end.8

if.end.8:                                         ; preds = %if.end.7, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.8
  %7 = load i32, i32* %r, align 4
  %inc = add i32 %7, 1
  store i32 %inc, i32* %r, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %8 = load i32, i32* %first_index_reg, align 4
  %cmp9 = icmp eq i32 %8, -1
  br i1 %cmp9, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %for.end
  br label %return

if.end.12:                                        ; preds = %for.end
  %call = call i32 @get_first_label_num()
  store i32 %call, i32* %min_labelno, align 4
  %call13 = call i32 @max_label_num()
  %9 = load i32, i32* %min_labelno, align 4
  %sub = sub nsw i32 %call13, %9
  store i32 %sub, i32* %n_labels, align 4
  %10 = load i32, i32* %n_labels, align 4
  %conv14 = sext i32 %10 to i64
  %mul = mul i64 %conv14, 8
  %call15 = call noalias i8* @xmalloc(i64 %mul)
  %11 = bitcast i8* %call15 to i64*
  store i64* %11, i64** %label_live, align 8
  store i64 0, i64* %ever_live_at_start, align 8
  %12 = load i32, i32* @n_basic_blocks, align 4
  %sub16 = sub nsw i32 %12, 1
  store i32 %sub16, i32* %i, align 4
  br label %for.cond.17

for.cond.17:                                      ; preds = %for.inc.38, %if.end.12
  %13 = load i32, i32* %i, align 4
  %cmp18 = icmp sge i32 %13, 0
  br i1 %cmp18, label %for.body.20, label %for.end.39

for.body.20:                                      ; preds = %for.cond.17
  %14 = load i32, i32* %i, align 4
  %idxprom = sext i32 %14 to i64
  %15 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %15, i32 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %bb, i32 0, i64 %idxprom
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8
  %head = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i32 0, i32 0
  %17 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8
  store %struct.rtx_def* %17, %struct.rtx_def** %insn, align 8
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load = load i32, i32* %19, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp21 = icmp eq i32 %bf.clear, 36
  br i1 %cmp21, label %if.then.23, label %if.end.37

if.then.23:                                       ; preds = %for.body.20
  br label %do.body

do.body:                                          ; preds = %if.then.23
  store i64 0, i64* %live, align 8
  %20 = load i32, i32* %i, align 4
  %idxprom24 = sext i32 %20 to i64
  %21 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %data25 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %21, i32 0, i32 4
  %bb26 = bitcast %union.varray_data_tag* %data25 to [1 x %struct.basic_block_def*]*
  %arrayidx27 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %bb26, i32 0, i64 %idxprom24
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx27, align 8
  %global_live_at_start = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %22, i32 0, i32 8
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %global_live_at_start, align 8
  call void @reg_set_to_hard_reg_set(i64* %live, %struct.bitmap_head_def* %23)
  br label %do.end

do.end:                                           ; preds = %do.body
  %24 = load i32, i32* %i, align 4
  %idxprom28 = sext i32 %24 to i64
  %25 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %data29 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %25, i32 0, i32 4
  %bb30 = bitcast %union.varray_data_tag* %data29 to [1 x %struct.basic_block_def*]*
  %arrayidx31 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %bb30, i32 0, i64 %idxprom28
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx31, align 8
  %global_live_at_start32 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %26, i32 0, i32 8
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %global_live_at_start32, align 8
  call void @compute_use_by_pseudos(i64* %live, %struct.bitmap_head_def* %27)
  %28 = load i64, i64* %live, align 8
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 5
  %rtint = bitcast %union.rtunion_def* %arrayidx33 to i32*
  %30 = load i32, i32* %rtint, align 4
  %31 = load i32, i32* %min_labelno, align 4
  %sub34 = sub nsw i32 %30, %31
  %idxprom35 = sext i32 %sub34 to i64
  %32 = load i64*, i64** %label_live, align 8
  %arrayidx36 = getelementptr inbounds i64, i64* %32, i64 %idxprom35
  store i64 %28, i64* %arrayidx36, align 8
  %33 = load i64, i64* %live, align 8
  %34 = load i64, i64* %ever_live_at_start, align 8
  %or = or i64 %34, %33
  store i64 %or, i64* %ever_live_at_start, align 8
  br label %if.end.37

if.end.37:                                        ; preds = %do.end, %for.body.20
  br label %for.inc.38

for.inc.38:                                       ; preds = %if.end.37
  %35 = load i32, i32* %i, align 4
  %dec = add nsw i32 %35, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond.17

for.end.39:                                       ; preds = %for.cond.17
  store i32 0, i32* @reload_combine_ruid, align 4
  store i32 0, i32* %last_label_ruid, align 4
  store i32 0, i32* %r, align 4
  br label %for.cond.40

for.cond.40:                                      ; preds = %for.inc.56, %for.end.39
  %36 = load i32, i32* %r, align 4
  %cmp41 = icmp ult i32 %36, 53
  br i1 %cmp41, label %for.body.43, label %for.end.58

for.body.43:                                      ; preds = %for.cond.40
  %37 = load i32, i32* @reload_combine_ruid, align 4
  %38 = load i32, i32* %r, align 4
  %idxprom44 = zext i32 %38 to i64
  %arrayidx45 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom44
  %store_ruid = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx45, i32 0, i32 3
  store i32 %37, i32* %store_ruid, align 4
  %39 = load i32, i32* %r, align 4
  %idxprom46 = zext i32 %39 to i64
  %arrayidx47 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 %idxprom46
  %40 = load i8, i8* %arrayidx47, align 1
  %tobool48 = icmp ne i8 %40, 0
  br i1 %tobool48, label %if.then.49, label %if.else

if.then.49:                                       ; preds = %for.body.43
  %41 = load i32, i32* %r, align 4
  %idxprom50 = zext i32 %41 to i64
  %arrayidx51 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom50
  %use_index = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx51, i32 0, i32 1
  store i32 -1, i32* %use_index, align 4
  br label %if.end.55

if.else:                                          ; preds = %for.body.43
  %42 = load i32, i32* %r, align 4
  %idxprom52 = zext i32 %42 to i64
  %arrayidx53 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom52
  %use_index54 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx53, i32 0, i32 1
  store i32 6, i32* %use_index54, align 4
  br label %if.end.55

if.end.55:                                        ; preds = %if.else, %if.then.49
  br label %for.inc.56

for.inc.56:                                       ; preds = %if.end.55
  %43 = load i32, i32* %r, align 4
  %inc57 = add i32 %43, 1
  store i32 %inc57, i32* %r, align 4
  br label %for.cond.40

for.end.58:                                       ; preds = %for.cond.40
  %call59 = call %struct.rtx_def* @get_last_insn()
  store %struct.rtx_def* %call59, %struct.rtx_def** %insn, align 8
  br label %for.cond.60

for.cond.60:                                      ; preds = %for.inc.902, %for.end.58
  %44 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %tobool61 = icmp ne %struct.rtx_def* %44, null
  br i1 %tobool61, label %for.body.62, label %for.end.906

for.body.62:                                      ; preds = %for.cond.60
  %45 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %46 = bitcast %struct.rtx_def* %45 to i32*
  %bf.load63 = load i32, i32* %46, align 8
  %bf.clear64 = and i32 %bf.load63, 65535
  %cmp65 = icmp eq i32 %bf.clear64, 36
  br i1 %cmp65, label %if.then.67, label %if.else.68

if.then.67:                                       ; preds = %for.body.62
  %47 = load i32, i32* @reload_combine_ruid, align 4
  store i32 %47, i32* %last_label_ruid, align 4
  br label %if.end.90

if.else.68:                                       ; preds = %for.body.62
  %48 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %49 = bitcast %struct.rtx_def* %48 to i32*
  %bf.load69 = load i32, i32* %49, align 8
  %bf.clear70 = and i32 %bf.load69, 65535
  %cmp71 = icmp eq i32 %bf.clear70, 35
  br i1 %cmp71, label %if.then.73, label %if.end.89

if.then.73:                                       ; preds = %if.else.68
  store i32 0, i32* %r, align 4
  br label %for.cond.74

for.cond.74:                                      ; preds = %for.inc.86, %if.then.73
  %50 = load i32, i32* %r, align 4
  %cmp75 = icmp ult i32 %50, 53
  br i1 %cmp75, label %for.body.77, label %for.end.88

for.body.77:                                      ; preds = %for.cond.74
  %51 = load i32, i32* %r, align 4
  %idxprom78 = zext i32 %51 to i64
  %arrayidx79 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 %idxprom78
  %52 = load i8, i8* %arrayidx79, align 1
  %tobool80 = icmp ne i8 %52, 0
  br i1 %tobool80, label %if.end.85, label %if.then.81

if.then.81:                                       ; preds = %for.body.77
  %53 = load i32, i32* %r, align 4
  %idxprom82 = zext i32 %53 to i64
  %arrayidx83 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom82
  %use_index84 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx83, i32 0, i32 1
  store i32 6, i32* %use_index84, align 4
  br label %if.end.85

if.end.85:                                        ; preds = %if.then.81, %for.body.77
  br label %for.inc.86

for.inc.86:                                       ; preds = %if.end.85
  %54 = load i32, i32* %r, align 4
  %inc87 = add i32 %54, 1
  store i32 %inc87, i32* %r, align 4
  br label %for.cond.74

for.end.88:                                       ; preds = %for.cond.74
  br label %if.end.89

if.end.89:                                        ; preds = %for.end.88, %if.else.68
  br label %if.end.90

if.end.90:                                        ; preds = %if.end.89, %if.then.67
  %55 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %56 = bitcast %struct.rtx_def* %55 to i32*
  %bf.load91 = load i32, i32* %56, align 8
  %bf.clear92 = and i32 %bf.load91, 65535
  %idxprom93 = sext i32 %bf.clear92 to i64
  %arrayidx94 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom93
  %57 = load i8, i8* %arrayidx94, align 1
  %conv95 = sext i8 %57 to i32
  %cmp96 = icmp eq i32 %conv95, 105
  br i1 %cmp96, label %if.end.99, label %if.then.98

if.then.98:                                       ; preds = %if.end.90
  br label %for.inc.902

if.end.99:                                        ; preds = %if.end.90
  %58 = load i32, i32* @reload_combine_ruid, align 4
  %inc100 = add nsw i32 %58, 1
  store i32 %inc100, i32* @reload_combine_ruid, align 4
  %59 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %60 = bitcast %struct.rtx_def* %59 to i32*
  %bf.load101 = load i32, i32* %60, align 8
  %bf.clear102 = and i32 %bf.load101, 65535
  %idxprom103 = sext i32 %bf.clear102 to i64
  %arrayidx104 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom103
  %61 = load i8, i8* %arrayidx104, align 1
  %conv105 = sext i8 %61 to i32
  %cmp106 = icmp eq i32 %conv105, 105
  br i1 %cmp106, label %cond.true, label %cond.false.122

cond.true:                                        ; preds = %if.end.99
  %62 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld108, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**
  %63 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %64 = bitcast %struct.rtx_def* %63 to i32*
  %bf.load110 = load i32, i32* %64, align 8
  %bf.clear111 = and i32 %bf.load110, 65535
  %cmp112 = icmp eq i32 %bf.clear111, 47
  br i1 %cmp112, label %cond.true.114, label %cond.false

cond.true.114:                                    ; preds = %cond.true
  %65 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1
  %arrayidx116 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld115, i32 0, i64 3
  %rtx117 = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtx_def**
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rtx117, align 8
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %67 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %68 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld118 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1
  %arrayidx119 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld118, i32 0, i64 3
  %rtx120 = bitcast %union.rtunion_def* %arrayidx119 to %struct.rtx_def**
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rtx120, align 8
  %call121 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %67, %struct.rtx_def* %69)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.114
  %cond = phi %struct.rtx_def* [ %66, %cond.true.114 ], [ %call121, %cond.false ]
  br label %cond.end.123

cond.false.122:                                   ; preds = %if.end.99
  br label %cond.end.123

cond.end.123:                                     ; preds = %cond.false.122, %cond.end
  %cond124 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false.122 ]
  store %struct.rtx_def* %cond124, %struct.rtx_def** %set, align 8
  %70 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %cmp125 = icmp ne %struct.rtx_def* %70, null
  br i1 %cmp125, label %land.lhs.true, label %if.end.640

land.lhs.true:                                    ; preds = %cond.end.123
  %71 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1
  %arrayidx128 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld127, i32 0, i64 0
  %rtx129 = bitcast %union.rtunion_def* %arrayidx128 to %struct.rtx_def**
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rtx129, align 8
  %73 = bitcast %struct.rtx_def* %72 to i32*
  %bf.load130 = load i32, i32* %73, align 8
  %bf.clear131 = and i32 %bf.load130, 65535
  %cmp132 = icmp eq i32 %bf.clear131, 61
  br i1 %cmp132, label %land.lhs.true.134, label %if.end.640

land.lhs.true.134:                                ; preds = %land.lhs.true
  %74 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1
  %arrayidx136 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld135, i32 0, i64 0
  %rtx137 = bitcast %union.rtunion_def* %arrayidx136 to %struct.rtx_def**
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rtx137, align 8
  %fld138 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx139 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld138, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx139 to i32*
  %76 = load i32, i32* %rtuint, align 4
  %cmp140 = icmp uge i32 %76, 8
  br i1 %cmp140, label %land.lhs.true.142, label %lor.lhs.false

land.lhs.true.142:                                ; preds = %land.lhs.true.134
  %77 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1
  %arrayidx144 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld143, i32 0, i64 0
  %rtx145 = bitcast %union.rtunion_def* %arrayidx144 to %struct.rtx_def**
  %78 = load %struct.rtx_def*, %struct.rtx_def** %rtx145, align 8
  %fld146 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx147 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld146, i32 0, i64 0
  %rtuint148 = bitcast %union.rtunion_def* %arrayidx147 to i32*
  %79 = load i32, i32* %rtuint148, align 4
  %cmp149 = icmp ule i32 %79, 15
  br i1 %cmp149, label %cond.true.204, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.142, %land.lhs.true.134
  %80 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld151 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1
  %arrayidx152 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld151, i32 0, i64 0
  %rtx153 = bitcast %union.rtunion_def* %arrayidx152 to %struct.rtx_def**
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rtx153, align 8
  %fld154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1
  %arrayidx155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld154, i32 0, i64 0
  %rtuint156 = bitcast %union.rtunion_def* %arrayidx155 to i32*
  %82 = load i32, i32* %rtuint156, align 4
  %cmp157 = icmp uge i32 %82, 21
  br i1 %cmp157, label %land.lhs.true.159, label %lor.lhs.false.168

land.lhs.true.159:                                ; preds = %lor.lhs.false
  %83 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld160 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld160, i32 0, i64 0
  %rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rtx162, align 8
  %fld163 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1
  %arrayidx164 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld163, i32 0, i64 0
  %rtuint165 = bitcast %union.rtunion_def* %arrayidx164 to i32*
  %85 = load i32, i32* %rtuint165, align 4
  %cmp166 = icmp ule i32 %85, 28
  br i1 %cmp166, label %cond.true.204, label %lor.lhs.false.168

lor.lhs.false.168:                                ; preds = %land.lhs.true.159, %lor.lhs.false
  %86 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1
  %arrayidx170 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld169, i32 0, i64 0
  %rtx171 = bitcast %union.rtunion_def* %arrayidx170 to %struct.rtx_def**
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rtx171, align 8
  %fld172 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1
  %arrayidx173 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld172, i32 0, i64 0
  %rtuint174 = bitcast %union.rtunion_def* %arrayidx173 to i32*
  %88 = load i32, i32* %rtuint174, align 4
  %cmp175 = icmp uge i32 %88, 45
  br i1 %cmp175, label %land.lhs.true.177, label %lor.lhs.false.186

land.lhs.true.177:                                ; preds = %lor.lhs.false.168
  %89 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld178 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1
  %arrayidx179 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld178, i32 0, i64 0
  %rtx180 = bitcast %union.rtunion_def* %arrayidx179 to %struct.rtx_def**
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rtx180, align 8
  %fld181 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1
  %arrayidx182 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld181, i32 0, i64 0
  %rtuint183 = bitcast %union.rtunion_def* %arrayidx182 to i32*
  %91 = load i32, i32* %rtuint183, align 4
  %cmp184 = icmp ule i32 %91, 52
  br i1 %cmp184, label %cond.true.204, label %lor.lhs.false.186

lor.lhs.false.186:                                ; preds = %land.lhs.true.177, %lor.lhs.false.168
  %92 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld187 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1
  %arrayidx188 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld187, i32 0, i64 0
  %rtx189 = bitcast %union.rtunion_def* %arrayidx188 to %struct.rtx_def**
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rtx189, align 8
  %fld190 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %93, i32 0, i32 1
  %arrayidx191 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld190, i32 0, i64 0
  %rtuint192 = bitcast %union.rtunion_def* %arrayidx191 to i32*
  %94 = load i32, i32* %rtuint192, align 4
  %cmp193 = icmp uge i32 %94, 29
  br i1 %cmp193, label %land.lhs.true.195, label %cond.false.225

land.lhs.true.195:                                ; preds = %lor.lhs.false.186
  %95 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld196 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1
  %arrayidx197 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld196, i32 0, i64 0
  %rtx198 = bitcast %union.rtunion_def* %arrayidx197 to %struct.rtx_def**
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rtx198, align 8
  %fld199 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1
  %arrayidx200 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld199, i32 0, i64 0
  %rtuint201 = bitcast %union.rtunion_def* %arrayidx200 to i32*
  %97 = load i32, i32* %rtuint201, align 4
  %cmp202 = icmp ule i32 %97, 36
  br i1 %cmp202, label %cond.true.204, label %cond.false.225

cond.true.204:                                    ; preds = %land.lhs.true.195, %land.lhs.true.177, %land.lhs.true.159, %land.lhs.true.142
  %98 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld205 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %98, i32 0, i32 1
  %arrayidx206 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld205, i32 0, i64 0
  %rtx207 = bitcast %union.rtunion_def* %arrayidx206 to %struct.rtx_def**
  %99 = load %struct.rtx_def*, %struct.rtx_def** %rtx207, align 8
  %100 = bitcast %struct.rtx_def* %99 to i32*
  %bf.load208 = load i32, i32* %100, align 8
  %bf.lshr = lshr i32 %bf.load208, 16
  %bf.clear209 = and i32 %bf.lshr, 255
  %idxprom210 = sext i32 %bf.clear209 to i64
  %arrayidx211 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom210
  %101 = load i32, i32* %arrayidx211, align 4
  %cmp212 = icmp eq i32 %101, 5
  br i1 %cmp212, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.204
  %102 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld214 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1
  %arrayidx215 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld214, i32 0, i64 0
  %rtx216 = bitcast %union.rtunion_def* %arrayidx215 to %struct.rtx_def**
  %103 = load %struct.rtx_def*, %struct.rtx_def** %rtx216, align 8
  %104 = bitcast %struct.rtx_def* %103 to i32*
  %bf.load217 = load i32, i32* %104, align 8
  %bf.lshr218 = lshr i32 %bf.load217, 16
  %bf.clear219 = and i32 %bf.lshr218, 255
  %idxprom220 = sext i32 %bf.clear219 to i64
  %arrayidx221 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom220
  %105 = load i32, i32* %arrayidx221, align 4
  %cmp222 = icmp eq i32 %105, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.204
  %106 = phi i1 [ true, %cond.true.204 ], [ %cmp222, %lor.rhs ]
  %cond224 = select i1 %106, i32 2, i32 1
  br label %cond.end.272

cond.false.225:                                   ; preds = %land.lhs.true.195, %lor.lhs.false.186
  %107 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld226 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1
  %arrayidx227 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld226, i32 0, i64 0
  %rtx228 = bitcast %union.rtunion_def* %arrayidx227 to %struct.rtx_def**
  %108 = load %struct.rtx_def*, %struct.rtx_def** %rtx228, align 8
  %109 = bitcast %struct.rtx_def* %108 to i32*
  %bf.load229 = load i32, i32* %109, align 8
  %bf.lshr230 = lshr i32 %bf.load229, 16
  %bf.clear231 = and i32 %bf.lshr230, 255
  %cmp232 = icmp eq i32 %bf.clear231, 18
  br i1 %cmp232, label %cond.true.234, label %cond.false.238

cond.true.234:                                    ; preds = %cond.false.225
  %110 = load i32, i32* @target_flags, align 4
  %and235 = and i32 %110, 33554432
  %tobool236 = icmp ne i32 %and235, 0
  %cond237 = select i1 %tobool236, i32 2, i32 3
  br label %cond.end.270

cond.false.238:                                   ; preds = %cond.false.225
  %111 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld239 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i32 0, i32 1
  %arrayidx240 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld239, i32 0, i64 0
  %rtx241 = bitcast %union.rtunion_def* %arrayidx240 to %struct.rtx_def**
  %112 = load %struct.rtx_def*, %struct.rtx_def** %rtx241, align 8
  %113 = bitcast %struct.rtx_def* %112 to i32*
  %bf.load242 = load i32, i32* %113, align 8
  %bf.lshr243 = lshr i32 %bf.load242, 16
  %bf.clear244 = and i32 %bf.lshr243, 255
  %cmp245 = icmp eq i32 %bf.clear244, 24
  br i1 %cmp245, label %cond.true.247, label %cond.false.251

cond.true.247:                                    ; preds = %cond.false.238
  %114 = load i32, i32* @target_flags, align 4
  %and248 = and i32 %114, 33554432
  %tobool249 = icmp ne i32 %and248, 0
  %cond250 = select i1 %tobool249, i32 4, i32 6
  br label %cond.end.268

cond.false.251:                                   ; preds = %cond.false.238
  %115 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld252 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1
  %arrayidx253 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld252, i32 0, i64 0
  %rtx254 = bitcast %union.rtunion_def* %arrayidx253 to %struct.rtx_def**
  %116 = load %struct.rtx_def*, %struct.rtx_def** %rtx254, align 8
  %117 = bitcast %struct.rtx_def* %116 to i32*
  %bf.load255 = load i32, i32* %117, align 8
  %bf.lshr256 = lshr i32 %bf.load255, 16
  %bf.clear257 = and i32 %bf.lshr256, 255
  %idxprom258 = sext i32 %bf.clear257 to i64
  %arrayidx259 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom258
  %118 = load i8, i8* %arrayidx259, align 1
  %conv260 = zext i8 %118 to i32
  %119 = load i32, i32* @target_flags, align 4
  %and261 = and i32 %119, 33554432
  %tobool262 = icmp ne i32 %and261, 0
  %cond263 = select i1 %tobool262, i32 8, i32 4
  %add = add nsw i32 %conv260, %cond263
  %sub264 = sub nsw i32 %add, 1
  %120 = load i32, i32* @target_flags, align 4
  %and265 = and i32 %120, 33554432
  %tobool266 = icmp ne i32 %and265, 0
  %cond267 = select i1 %tobool266, i32 8, i32 4
  %div = sdiv i32 %sub264, %cond267
  br label %cond.end.268

cond.end.268:                                     ; preds = %cond.false.251, %cond.true.247
  %cond269 = phi i32 [ %cond250, %cond.true.247 ], [ %div, %cond.false.251 ]
  br label %cond.end.270

cond.end.270:                                     ; preds = %cond.end.268, %cond.true.234
  %cond271 = phi i32 [ %cond237, %cond.true.234 ], [ %cond269, %cond.end.268 ]
  br label %cond.end.272

cond.end.272:                                     ; preds = %cond.end.270, %lor.end
  %cond273 = phi i32 [ %cond224, %lor.end ], [ %cond271, %cond.end.270 ]
  %cmp274 = icmp eq i32 %cond273, 1
  br i1 %cmp274, label %land.lhs.true.276, label %if.end.640

land.lhs.true.276:                                ; preds = %cond.end.272
  %121 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld277 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %121, i32 0, i32 1
  %arrayidx278 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld277, i32 0, i64 1
  %rtx279 = bitcast %union.rtunion_def* %arrayidx278 to %struct.rtx_def**
  %122 = load %struct.rtx_def*, %struct.rtx_def** %rtx279, align 8
  %123 = bitcast %struct.rtx_def* %122 to i32*
  %bf.load280 = load i32, i32* %123, align 8
  %bf.clear281 = and i32 %bf.load280, 65535
  %cmp282 = icmp eq i32 %bf.clear281, 75
  br i1 %cmp282, label %land.lhs.true.284, label %if.end.640

land.lhs.true.284:                                ; preds = %land.lhs.true.276
  %124 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld285 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1
  %arrayidx286 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld285, i32 0, i64 1
  %rtx287 = bitcast %union.rtunion_def* %arrayidx286 to %struct.rtx_def**
  %125 = load %struct.rtx_def*, %struct.rtx_def** %rtx287, align 8
  %fld288 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %125, i32 0, i32 1
  %arrayidx289 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld288, i32 0, i64 1
  %rtx290 = bitcast %union.rtunion_def* %arrayidx289 to %struct.rtx_def**
  %126 = load %struct.rtx_def*, %struct.rtx_def** %rtx290, align 8
  %127 = bitcast %struct.rtx_def* %126 to i32*
  %bf.load291 = load i32, i32* %127, align 8
  %bf.clear292 = and i32 %bf.load291, 65535
  %cmp293 = icmp eq i32 %bf.clear292, 61
  br i1 %cmp293, label %land.lhs.true.295, label %if.end.640

land.lhs.true.295:                                ; preds = %land.lhs.true.284
  %128 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld296 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1
  %arrayidx297 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld296, i32 0, i64 1
  %rtx298 = bitcast %union.rtunion_def* %arrayidx297 to %struct.rtx_def**
  %129 = load %struct.rtx_def*, %struct.rtx_def** %rtx298, align 8
  %fld299 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %129, i32 0, i32 1
  %arrayidx300 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld299, i32 0, i64 0
  %rtx301 = bitcast %union.rtunion_def* %arrayidx300 to %struct.rtx_def**
  %130 = load %struct.rtx_def*, %struct.rtx_def** %rtx301, align 8
  %131 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld302 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i32 0, i32 1
  %arrayidx303 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld302, i32 0, i64 0
  %rtx304 = bitcast %union.rtunion_def* %arrayidx303 to %struct.rtx_def**
  %132 = load %struct.rtx_def*, %struct.rtx_def** %rtx304, align 8
  %call305 = call i32 @rtx_equal_p(%struct.rtx_def* %130, %struct.rtx_def* %132)
  %tobool306 = icmp ne i32 %call305, 0
  br i1 %tobool306, label %land.lhs.true.307, label %if.end.640

land.lhs.true.307:                                ; preds = %land.lhs.true.295
  %133 = load i32, i32* %last_label_ruid, align 4
  %134 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld308 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %134, i32 0, i32 1
  %arrayidx309 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld308, i32 0, i64 0
  %rtx310 = bitcast %union.rtunion_def* %arrayidx309 to %struct.rtx_def**
  %135 = load %struct.rtx_def*, %struct.rtx_def** %rtx310, align 8
  %fld311 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %135, i32 0, i32 1
  %arrayidx312 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld311, i32 0, i64 0
  %rtuint313 = bitcast %union.rtunion_def* %arrayidx312 to i32*
  %136 = load i32, i32* %rtuint313, align 4
  %idxprom314 = zext i32 %136 to i64
  %arrayidx315 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom314
  %use_ruid = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx315, i32 0, i32 4
  %137 = load i32, i32* %use_ruid, align 4
  %cmp316 = icmp slt i32 %133, %137
  br i1 %cmp316, label %if.then.318, label %if.end.640

if.then.318:                                      ; preds = %land.lhs.true.307
  %138 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld319 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %138, i32 0, i32 1
  %arrayidx320 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld319, i32 0, i64 0
  %rtx321 = bitcast %union.rtunion_def* %arrayidx320 to %struct.rtx_def**
  %139 = load %struct.rtx_def*, %struct.rtx_def** %rtx321, align 8
  store %struct.rtx_def* %139, %struct.rtx_def** %reg, align 8
  %140 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld322 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %140, i32 0, i32 1
  %arrayidx323 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld322, i32 0, i64 1
  %rtx324 = bitcast %union.rtunion_def* %arrayidx323 to %struct.rtx_def**
  %141 = load %struct.rtx_def*, %struct.rtx_def** %rtx324, align 8
  store %struct.rtx_def* %141, %struct.rtx_def** %plus, align 8
  %142 = load %struct.rtx_def*, %struct.rtx_def** %plus, align 8
  %fld325 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i32 0, i32 1
  %arrayidx326 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld325, i32 0, i64 1
  %rtx327 = bitcast %union.rtunion_def* %arrayidx326 to %struct.rtx_def**
  %143 = load %struct.rtx_def*, %struct.rtx_def** %rtx327, align 8
  store %struct.rtx_def* %143, %struct.rtx_def** %base, align 8
  %144 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call328 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %144)
  store %struct.rtx_def* %call328, %struct.rtx_def** %prev, align 8
  %145 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %tobool329 = icmp ne %struct.rtx_def* %145, null
  br i1 %tobool329, label %cond.true.330, label %cond.false.360

cond.true.330:                                    ; preds = %if.then.318
  %146 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %147 = bitcast %struct.rtx_def* %146 to i32*
  %bf.load331 = load i32, i32* %147, align 8
  %bf.clear332 = and i32 %bf.load331, 65535
  %idxprom333 = sext i32 %bf.clear332 to i64
  %arrayidx334 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom333
  %148 = load i8, i8* %arrayidx334, align 1
  %conv335 = sext i8 %148 to i32
  %cmp336 = icmp eq i32 %conv335, 105
  br i1 %cmp336, label %cond.true.338, label %cond.false.357

cond.true.338:                                    ; preds = %cond.true.330
  %149 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld339 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %149, i32 0, i32 1
  %arrayidx340 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld339, i32 0, i64 3
  %rtx341 = bitcast %union.rtunion_def* %arrayidx340 to %struct.rtx_def**
  %150 = load %struct.rtx_def*, %struct.rtx_def** %rtx341, align 8
  %151 = bitcast %struct.rtx_def* %150 to i32*
  %bf.load342 = load i32, i32* %151, align 8
  %bf.clear343 = and i32 %bf.load342, 65535
  %cmp344 = icmp eq i32 %bf.clear343, 47
  br i1 %cmp344, label %cond.true.346, label %cond.false.350

cond.true.346:                                    ; preds = %cond.true.338
  %152 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld347 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %152, i32 0, i32 1
  %arrayidx348 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld347, i32 0, i64 3
  %rtx349 = bitcast %union.rtunion_def* %arrayidx348 to %struct.rtx_def**
  %153 = load %struct.rtx_def*, %struct.rtx_def** %rtx349, align 8
  br label %cond.end.355

cond.false.350:                                   ; preds = %cond.true.338
  %154 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %155 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld351 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %155, i32 0, i32 1
  %arrayidx352 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld351, i32 0, i64 3
  %rtx353 = bitcast %union.rtunion_def* %arrayidx352 to %struct.rtx_def**
  %156 = load %struct.rtx_def*, %struct.rtx_def** %rtx353, align 8
  %call354 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %154, %struct.rtx_def* %156)
  br label %cond.end.355

cond.end.355:                                     ; preds = %cond.false.350, %cond.true.346
  %cond356 = phi %struct.rtx_def* [ %153, %cond.true.346 ], [ %call354, %cond.false.350 ]
  br label %cond.end.358

cond.false.357:                                   ; preds = %cond.true.330
  br label %cond.end.358

cond.end.358:                                     ; preds = %cond.false.357, %cond.end.355
  %cond359 = phi %struct.rtx_def* [ %cond356, %cond.end.355 ], [ null, %cond.false.357 ]
  br label %cond.end.361

cond.false.360:                                   ; preds = %if.then.318
  br label %cond.end.361

cond.end.361:                                     ; preds = %cond.false.360, %cond.end.358
  %cond362 = phi %struct.rtx_def* [ %cond359, %cond.end.358 ], [ null, %cond.false.360 ]
  store %struct.rtx_def* %cond362, %struct.rtx_def** %prev_set, align 8
  %157 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld363 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %157, i32 0, i32 1
  %arrayidx364 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld363, i32 0, i64 0
  %rtuint365 = bitcast %union.rtunion_def* %arrayidx364 to i32*
  %158 = load i32, i32* %rtuint365, align 4
  store i32 %158, i32* %regno, align 4
  store %struct.rtx_def* null, %struct.rtx_def** %const_reg, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %reg_sum, align 8
  %159 = load i64, i64* getelementptr inbounds ([25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 10), align 8
  %160 = load i32, i32* %regno, align 4
  %sh_prom366 = zext i32 %160 to i64
  %shl367 = shl i64 1, %sh_prom366
  %and368 = and i64 %159, %shl367
  %tobool369 = icmp ne i64 %and368, 0
  br i1 %tobool369, label %if.then.378, label %lor.lhs.false.370

lor.lhs.false.370:                                ; preds = %cond.end.361
  %161 = load i64, i64* getelementptr inbounds ([25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 10), align 8
  %162 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %fld371 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %162, i32 0, i32 1
  %arrayidx372 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld371, i32 0, i64 0
  %rtuint373 = bitcast %union.rtunion_def* %arrayidx372 to i32*
  %163 = load i32, i32* %rtuint373, align 4
  %sh_prom374 = zext i32 %163 to i64
  %shl375 = shl i64 1, %sh_prom374
  %and376 = and i64 %161, %shl375
  %tobool377 = icmp ne i64 %and376, 0
  br i1 %tobool377, label %if.then.378, label %if.else.379

if.then.378:                                      ; preds = %lor.lhs.false.370, %cond.end.361
  %164 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  store %struct.rtx_def* %164, %struct.rtx_def** %const_reg, align 8
  %165 = load %struct.rtx_def*, %struct.rtx_def** %plus, align 8
  store %struct.rtx_def* %165, %struct.rtx_def** %reg_sum, align 8
  br label %if.end.502

if.else.379:                                      ; preds = %lor.lhs.false.370
  %166 = load i32, i32* %first_index_reg, align 4
  store i32 %166, i32* %i, align 4
  br label %for.cond.380

for.cond.380:                                     ; preds = %for.inc.499, %if.else.379
  %167 = load i32, i32* %i, align 4
  %168 = load i32, i32* %last_index_reg, align 4
  %cmp381 = icmp sle i32 %167, %168
  br i1 %cmp381, label %for.body.383, label %for.end.501

for.body.383:                                     ; preds = %for.cond.380
  %169 = load i64, i64* getelementptr inbounds ([25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 10), align 8
  %170 = load i32, i32* %i, align 4
  %sh_prom384 = zext i32 %170 to i64
  %shl385 = shl i64 1, %sh_prom384
  %and386 = and i64 %169, %shl385
  %tobool387 = icmp ne i64 %and386, 0
  br i1 %tobool387, label %land.lhs.true.388, label %if.end.498

land.lhs.true.388:                                ; preds = %for.body.383
  %171 = load i32, i32* %i, align 4
  %idxprom389 = sext i32 %171 to i64
  %arrayidx390 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom389
  %use_index391 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx390, i32 0, i32 1
  %172 = load i32, i32* %use_index391, align 4
  %cmp392 = icmp eq i32 %172, 6
  br i1 %cmp392, label %land.lhs.true.394, label %if.end.498

land.lhs.true.394:                                ; preds = %land.lhs.true.388
  %173 = load i32, i32* %i, align 4
  %idxprom395 = sext i32 %173 to i64
  %arrayidx396 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom395
  %store_ruid397 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx396, i32 0, i32 3
  %174 = load i32, i32* %store_ruid397, align 4
  %175 = load i32, i32* %regno, align 4
  %idxprom398 = zext i32 %175 to i64
  %arrayidx399 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom398
  %use_ruid400 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx399, i32 0, i32 4
  %176 = load i32, i32* %use_ruid400, align 4
  %cmp401 = icmp sle i32 %174, %176
  br i1 %cmp401, label %land.lhs.true.403, label %if.end.498

land.lhs.true.403:                                ; preds = %land.lhs.true.394
  %177 = load i32, i32* %i, align 4
  %cmp404 = icmp sge i32 %177, 8
  br i1 %cmp404, label %land.lhs.true.406, label %lor.lhs.false.409

land.lhs.true.406:                                ; preds = %land.lhs.true.403
  %178 = load i32, i32* %i, align 4
  %cmp407 = icmp sle i32 %178, 15
  br i1 %cmp407, label %cond.true.427, label %lor.lhs.false.409

lor.lhs.false.409:                                ; preds = %land.lhs.true.406, %land.lhs.true.403
  %179 = load i32, i32* %i, align 4
  %cmp410 = icmp sge i32 %179, 21
  br i1 %cmp410, label %land.lhs.true.412, label %lor.lhs.false.415

land.lhs.true.412:                                ; preds = %lor.lhs.false.409
  %180 = load i32, i32* %i, align 4
  %cmp413 = icmp sle i32 %180, 28
  br i1 %cmp413, label %cond.true.427, label %lor.lhs.false.415

lor.lhs.false.415:                                ; preds = %land.lhs.true.412, %lor.lhs.false.409
  %181 = load i32, i32* %i, align 4
  %cmp416 = icmp sge i32 %181, 45
  br i1 %cmp416, label %land.lhs.true.418, label %lor.lhs.false.421

land.lhs.true.418:                                ; preds = %lor.lhs.false.415
  %182 = load i32, i32* %i, align 4
  %cmp419 = icmp sle i32 %182, 52
  br i1 %cmp419, label %cond.true.427, label %lor.lhs.false.421

lor.lhs.false.421:                                ; preds = %land.lhs.true.418, %lor.lhs.false.415
  %183 = load i32, i32* %i, align 4
  %cmp422 = icmp sge i32 %183, 29
  br i1 %cmp422, label %land.lhs.true.424, label %cond.false.445

land.lhs.true.424:                                ; preds = %lor.lhs.false.421
  %184 = load i32, i32* %i, align 4
  %cmp425 = icmp sle i32 %184, 36
  br i1 %cmp425, label %cond.true.427, label %cond.false.445

cond.true.427:                                    ; preds = %land.lhs.true.424, %land.lhs.true.418, %land.lhs.true.412, %land.lhs.true.406
  %185 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %186 = bitcast %struct.rtx_def* %185 to i32*
  %bf.load428 = load i32, i32* %186, align 8
  %bf.lshr429 = lshr i32 %bf.load428, 16
  %bf.clear430 = and i32 %bf.lshr429, 255
  %idxprom431 = sext i32 %bf.clear430 to i64
  %arrayidx432 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom431
  %187 = load i32, i32* %arrayidx432, align 4
  %cmp433 = icmp eq i32 %187, 5
  br i1 %cmp433, label %lor.end.443, label %lor.rhs.435

lor.rhs.435:                                      ; preds = %cond.true.427
  %188 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %189 = bitcast %struct.rtx_def* %188 to i32*
  %bf.load436 = load i32, i32* %189, align 8
  %bf.lshr437 = lshr i32 %bf.load436, 16
  %bf.clear438 = and i32 %bf.lshr437, 255
  %idxprom439 = sext i32 %bf.clear438 to i64
  %arrayidx440 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom439
  %190 = load i32, i32* %arrayidx440, align 4
  %cmp441 = icmp eq i32 %190, 6
  br label %lor.end.443

lor.end.443:                                      ; preds = %lor.rhs.435, %cond.true.427
  %191 = phi i1 [ true, %cond.true.427 ], [ %cmp441, %lor.rhs.435 ]
  %cond444 = select i1 %191, i32 2, i32 1
  br label %cond.end.485

cond.false.445:                                   ; preds = %land.lhs.true.424, %lor.lhs.false.421
  %192 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %193 = bitcast %struct.rtx_def* %192 to i32*
  %bf.load446 = load i32, i32* %193, align 8
  %bf.lshr447 = lshr i32 %bf.load446, 16
  %bf.clear448 = and i32 %bf.lshr447, 255
  %cmp449 = icmp eq i32 %bf.clear448, 18
  br i1 %cmp449, label %cond.true.451, label %cond.false.455

cond.true.451:                                    ; preds = %cond.false.445
  %194 = load i32, i32* @target_flags, align 4
  %and452 = and i32 %194, 33554432
  %tobool453 = icmp ne i32 %and452, 0
  %cond454 = select i1 %tobool453, i32 2, i32 3
  br label %cond.end.483

cond.false.455:                                   ; preds = %cond.false.445
  %195 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %196 = bitcast %struct.rtx_def* %195 to i32*
  %bf.load456 = load i32, i32* %196, align 8
  %bf.lshr457 = lshr i32 %bf.load456, 16
  %bf.clear458 = and i32 %bf.lshr457, 255
  %cmp459 = icmp eq i32 %bf.clear458, 24
  br i1 %cmp459, label %cond.true.461, label %cond.false.465

cond.true.461:                                    ; preds = %cond.false.455
  %197 = load i32, i32* @target_flags, align 4
  %and462 = and i32 %197, 33554432
  %tobool463 = icmp ne i32 %and462, 0
  %cond464 = select i1 %tobool463, i32 4, i32 6
  br label %cond.end.481

cond.false.465:                                   ; preds = %cond.false.455
  %198 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %199 = bitcast %struct.rtx_def* %198 to i32*
  %bf.load466 = load i32, i32* %199, align 8
  %bf.lshr467 = lshr i32 %bf.load466, 16
  %bf.clear468 = and i32 %bf.lshr467, 255
  %idxprom469 = sext i32 %bf.clear468 to i64
  %arrayidx470 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom469
  %200 = load i8, i8* %arrayidx470, align 1
  %conv471 = zext i8 %200 to i32
  %201 = load i32, i32* @target_flags, align 4
  %and472 = and i32 %201, 33554432
  %tobool473 = icmp ne i32 %and472, 0
  %cond474 = select i1 %tobool473, i32 8, i32 4
  %add475 = add nsw i32 %conv471, %cond474
  %sub476 = sub nsw i32 %add475, 1
  %202 = load i32, i32* @target_flags, align 4
  %and477 = and i32 %202, 33554432
  %tobool478 = icmp ne i32 %and477, 0
  %cond479 = select i1 %tobool478, i32 8, i32 4
  %div480 = sdiv i32 %sub476, %cond479
  br label %cond.end.481

cond.end.481:                                     ; preds = %cond.false.465, %cond.true.461
  %cond482 = phi i32 [ %cond464, %cond.true.461 ], [ %div480, %cond.false.465 ]
  br label %cond.end.483

cond.end.483:                                     ; preds = %cond.end.481, %cond.true.451
  %cond484 = phi i32 [ %cond454, %cond.true.451 ], [ %cond482, %cond.end.481 ]
  br label %cond.end.485

cond.end.485:                                     ; preds = %cond.end.483, %lor.end.443
  %cond486 = phi i32 [ %cond444, %lor.end.443 ], [ %cond484, %cond.end.483 ]
  %cmp487 = icmp eq i32 %cond486, 1
  br i1 %cmp487, label %if.then.489, label %if.end.498

if.then.489:                                      ; preds = %cond.end.485
  %203 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %204 = bitcast %struct.rtx_def* %203 to i32*
  %bf.load490 = load i32, i32* %204, align 8
  %bf.lshr491 = lshr i32 %bf.load490, 16
  %bf.clear492 = and i32 %bf.lshr491, 255
  %205 = load i32, i32* %i, align 4
  %call493 = call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear492, i32 %205)
  store %struct.rtx_def* %call493, %struct.rtx_def** %index_reg, align 8
  %206 = load %struct.rtx_def*, %struct.rtx_def** %index_reg, align 8
  store %struct.rtx_def* %206, %struct.rtx_def** %const_reg, align 8
  %207 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %208 = bitcast %struct.rtx_def* %207 to i32*
  %bf.load494 = load i32, i32* %208, align 8
  %bf.lshr495 = lshr i32 %bf.load494, 16
  %bf.clear496 = and i32 %bf.lshr495, 255
  %209 = load %struct.rtx_def*, %struct.rtx_def** %index_reg, align 8
  %210 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %call497 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear496, %struct.rtx_def* %209, %struct.rtx_def* %210)
  store %struct.rtx_def* %call497, %struct.rtx_def** %reg_sum, align 8
  br label %for.end.501

if.end.498:                                       ; preds = %cond.end.485, %land.lhs.true.394, %land.lhs.true.388, %for.body.383
  br label %for.inc.499

for.inc.499:                                      ; preds = %if.end.498
  %211 = load i32, i32* %i, align 4
  %inc500 = add nsw i32 %211, 1
  store i32 %inc500, i32* %i, align 4
  br label %for.cond.380

for.end.501:                                      ; preds = %if.then.489, %for.cond.380
  br label %if.end.502

if.end.502:                                       ; preds = %for.end.501, %if.then.378
  %212 = load %struct.rtx_def*, %struct.rtx_def** %prev_set, align 8
  %cmp503 = icmp ne %struct.rtx_def* %212, null
  br i1 %cmp503, label %land.lhs.true.505, label %if.end.639

land.lhs.true.505:                                ; preds = %if.end.502
  %213 = load %struct.rtx_def*, %struct.rtx_def** %prev_set, align 8
  %fld506 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %213, i32 0, i32 1
  %arrayidx507 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld506, i32 0, i64 1
  %rtx508 = bitcast %union.rtunion_def* %arrayidx507 to %struct.rtx_def**
  %214 = load %struct.rtx_def*, %struct.rtx_def** %rtx508, align 8
  %215 = bitcast %struct.rtx_def* %214 to i32*
  %bf.load509 = load i32, i32* %215, align 8
  %bf.clear510 = and i32 %bf.load509, 65535
  %cmp511 = icmp eq i32 %bf.clear510, 54
  br i1 %cmp511, label %land.lhs.true.513, label %if.end.639

land.lhs.true.513:                                ; preds = %land.lhs.true.505
  %216 = load %struct.rtx_def*, %struct.rtx_def** %prev_set, align 8
  %fld514 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %216, i32 0, i32 1
  %arrayidx515 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld514, i32 0, i64 0
  %rtx516 = bitcast %union.rtunion_def* %arrayidx515 to %struct.rtx_def**
  %217 = load %struct.rtx_def*, %struct.rtx_def** %rtx516, align 8
  %218 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %call517 = call i32 @rtx_equal_p(%struct.rtx_def* %217, %struct.rtx_def* %218)
  %tobool518 = icmp ne i32 %call517, 0
  br i1 %tobool518, label %land.lhs.true.519, label %if.end.639

land.lhs.true.519:                                ; preds = %land.lhs.true.513
  %219 = load i32, i32* %regno, align 4
  %idxprom520 = zext i32 %219 to i64
  %arrayidx521 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom520
  %use_index522 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx521, i32 0, i32 1
  %220 = load i32, i32* %use_index522, align 4
  %cmp523 = icmp sge i32 %220, 0
  br i1 %cmp523, label %land.lhs.true.525, label %if.end.639

land.lhs.true.525:                                ; preds = %land.lhs.true.519
  %221 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %fld526 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %221, i32 0, i32 1
  %arrayidx527 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld526, i32 0, i64 0
  %rtuint528 = bitcast %union.rtunion_def* %arrayidx527 to i32*
  %222 = load i32, i32* %rtuint528, align 4
  %idxprom529 = zext i32 %222 to i64
  %arrayidx530 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom529
  %store_ruid531 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx530, i32 0, i32 3
  %223 = load i32, i32* %store_ruid531, align 4
  %224 = load i32, i32* %regno, align 4
  %idxprom532 = zext i32 %224 to i64
  %arrayidx533 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom532
  %use_ruid534 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx533, i32 0, i32 4
  %225 = load i32, i32* %use_ruid534, align 4
  %cmp535 = icmp sle i32 %223, %225
  br i1 %cmp535, label %land.lhs.true.537, label %if.end.639

land.lhs.true.537:                                ; preds = %land.lhs.true.525
  %226 = load %struct.rtx_def*, %struct.rtx_def** %reg_sum, align 8
  %cmp538 = icmp ne %struct.rtx_def* %226, null
  br i1 %cmp538, label %if.then.540, label %if.end.639

if.then.540:                                      ; preds = %land.lhs.true.537
  %227 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %228 = load %struct.rtx_def*, %struct.rtx_def** %prev_set, align 8
  %fld542 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %228, i32 0, i32 1
  %arrayidx543 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld542, i32 0, i64 0
  %rtx544 = bitcast %union.rtunion_def* %arrayidx543 to %struct.rtx_def**
  %229 = load %struct.rtx_def*, %struct.rtx_def** %const_reg, align 8
  %call545 = call i32 @validate_change(%struct.rtx_def* %227, %struct.rtx_def** %rtx544, %struct.rtx_def* %229, i32 1)
  %230 = load i32, i32* %regno, align 4
  %idxprom546 = zext i32 %230 to i64
  %arrayidx547 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom546
  %offset = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx547, i32 0, i32 2
  %231 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8
  %232 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp548 = icmp ne %struct.rtx_def* %231, %232
  br i1 %cmp548, label %if.then.550, label %if.end.568

if.then.550:                                      ; preds = %if.then.540
  %233 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %234 = load %struct.rtx_def*, %struct.rtx_def** %prev_set, align 8
  %fld551 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %234, i32 0, i32 1
  %arrayidx552 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld551, i32 0, i64 1
  %rtx553 = bitcast %union.rtunion_def* %arrayidx552 to %struct.rtx_def**
  %235 = load %struct.rtx_def*, %struct.rtx_def** %prev_set, align 8
  %fld554 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %235, i32 0, i32 1
  %arrayidx555 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld554, i32 0, i64 1
  %rtx556 = bitcast %union.rtunion_def* %arrayidx555 to %struct.rtx_def**
  %236 = load %struct.rtx_def*, %struct.rtx_def** %rtx556, align 8
  %fld557 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %236, i32 0, i32 1
  %arrayidx558 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld557, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx558 to i64*
  %237 = load i64, i64* %rtwint, align 8
  %238 = load i32, i32* %regno, align 4
  %idxprom559 = zext i32 %238 to i64
  %arrayidx560 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom559
  %offset561 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx560, i32 0, i32 2
  %239 = load %struct.rtx_def*, %struct.rtx_def** %offset561, align 8
  %fld562 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %239, i32 0, i32 1
  %arrayidx563 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld562, i32 0, i64 0
  %rtwint564 = bitcast %union.rtunion_def* %arrayidx563 to i64*
  %240 = load i64, i64* %rtwint564, align 8
  %add565 = add nsw i64 %237, %240
  %call566 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %add565)
  %call567 = call i32 @validate_change(%struct.rtx_def* %233, %struct.rtx_def** %rtx553, %struct.rtx_def* %call566, i32 1)
  br label %if.end.568

if.end.568:                                       ; preds = %if.then.550, %if.then.540
  %241 = load i32, i32* %regno, align 4
  %idxprom569 = zext i32 %241 to i64
  %arrayidx570 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom569
  %use_index571 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx570, i32 0, i32 1
  %242 = load i32, i32* %use_index571, align 4
  store i32 %242, i32* %i541, align 4
  br label %for.cond.572

for.cond.572:                                     ; preds = %for.inc.588, %if.end.568
  %243 = load i32, i32* %i541, align 4
  %cmp573 = icmp slt i32 %243, 6
  br i1 %cmp573, label %for.body.575, label %for.end.590

for.body.575:                                     ; preds = %for.cond.572
  %244 = load i32, i32* %i541, align 4
  %idxprom576 = sext i32 %244 to i64
  %245 = load i32, i32* %regno, align 4
  %idxprom577 = zext i32 %245 to i64
  %arrayidx578 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom577
  %reg_use = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx578, i32 0, i32 0
  %arrayidx579 = getelementptr inbounds [6 x %struct.reg_use], [6 x %struct.reg_use]* %reg_use, i32 0, i64 %idxprom576
  %insn580 = getelementptr inbounds %struct.reg_use, %struct.reg_use* %arrayidx579, i32 0, i32 0
  %246 = load %struct.rtx_def*, %struct.rtx_def** %insn580, align 8
  %247 = load i32, i32* %i541, align 4
  %idxprom581 = sext i32 %247 to i64
  %248 = load i32, i32* %regno, align 4
  %idxprom582 = zext i32 %248 to i64
  %arrayidx583 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom582
  %reg_use584 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx583, i32 0, i32 0
  %arrayidx585 = getelementptr inbounds [6 x %struct.reg_use], [6 x %struct.reg_use]* %reg_use584, i32 0, i64 %idxprom581
  %usep = getelementptr inbounds %struct.reg_use, %struct.reg_use* %arrayidx585, i32 0, i32 1
  %249 = load %struct.rtx_def**, %struct.rtx_def*** %usep, align 8
  %250 = load %struct.rtx_def*, %struct.rtx_def** %reg_sum, align 8
  %call586 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %250)
  %call587 = call i32 @validate_change(%struct.rtx_def* %246, %struct.rtx_def** %249, %struct.rtx_def* %call586, i32 1)
  br label %for.inc.588

for.inc.588:                                      ; preds = %for.body.575
  %251 = load i32, i32* %i541, align 4
  %inc589 = add nsw i32 %251, 1
  store i32 %inc589, i32* %i541, align 4
  br label %for.cond.572

for.end.590:                                      ; preds = %for.cond.572
  %call591 = call i32 @apply_change_group()
  %tobool592 = icmp ne i32 %call591, 0
  br i1 %tobool592, label %if.then.593, label %if.end.638

if.then.593:                                      ; preds = %for.end.590
  %252 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call594 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %252)
  %253 = load i32, i32* %regno, align 4
  %idxprom595 = zext i32 %253 to i64
  %arrayidx596 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom595
  %offset597 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx596, i32 0, i32 2
  %254 = load %struct.rtx_def*, %struct.rtx_def** %offset597, align 8
  %255 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp598 = icmp ne %struct.rtx_def* %254, %255
  br i1 %cmp598, label %if.then.600, label %if.end.628

if.then.600:                                      ; preds = %if.then.593
  %256 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld601 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %256, i32 0, i32 1
  %arrayidx602 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld601, i32 0, i64 6
  %rtx603 = bitcast %union.rtunion_def* %arrayidx602 to %struct.rtx_def**
  store %struct.rtx_def** %rtx603, %struct.rtx_def*** %np, align 8
  br label %for.cond.604

for.cond.604:                                     ; preds = %if.end.626, %if.then.600
  %257 = load %struct.rtx_def**, %struct.rtx_def*** %np, align 8
  %258 = load %struct.rtx_def*, %struct.rtx_def** %257, align 8
  %tobool605 = icmp ne %struct.rtx_def* %258, null
  br i1 %tobool605, label %for.body.606, label %for.end.627

for.body.606:                                     ; preds = %for.cond.604
  %259 = load %struct.rtx_def**, %struct.rtx_def*** %np, align 8
  %260 = load %struct.rtx_def*, %struct.rtx_def** %259, align 8
  %261 = bitcast %struct.rtx_def* %260 to i32*
  %bf.load607 = load i32, i32* %261, align 8
  %bf.lshr608 = lshr i32 %bf.load607, 16
  %bf.clear609 = and i32 %bf.lshr608, 255
  %cmp610 = icmp eq i32 %bf.clear609, 4
  br i1 %cmp610, label %if.then.618, label %lor.lhs.false.612

lor.lhs.false.612:                                ; preds = %for.body.606
  %262 = load %struct.rtx_def**, %struct.rtx_def*** %np, align 8
  %263 = load %struct.rtx_def*, %struct.rtx_def** %262, align 8
  %264 = bitcast %struct.rtx_def* %263 to i32*
  %bf.load613 = load i32, i32* %264, align 8
  %bf.lshr614 = lshr i32 %bf.load613, 16
  %bf.clear615 = and i32 %bf.lshr614, 255
  %cmp616 = icmp eq i32 %bf.clear615, 3
  br i1 %cmp616, label %if.then.618, label %if.else.622

if.then.618:                                      ; preds = %lor.lhs.false.612, %for.body.606
  %265 = load %struct.rtx_def**, %struct.rtx_def*** %np, align 8
  %266 = load %struct.rtx_def*, %struct.rtx_def** %265, align 8
  %fld619 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %266, i32 0, i32 1
  %arrayidx620 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld619, i32 0, i64 1
  %rtx621 = bitcast %union.rtunion_def* %arrayidx620 to %struct.rtx_def**
  %267 = load %struct.rtx_def*, %struct.rtx_def** %rtx621, align 8
  %268 = load %struct.rtx_def**, %struct.rtx_def*** %np, align 8
  store %struct.rtx_def* %267, %struct.rtx_def** %268, align 8
  br label %if.end.626

if.else.622:                                      ; preds = %lor.lhs.false.612
  %269 = load %struct.rtx_def**, %struct.rtx_def*** %np, align 8
  %270 = load %struct.rtx_def*, %struct.rtx_def** %269, align 8
  %fld623 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %270, i32 0, i32 1
  %arrayidx624 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld623, i32 0, i64 1
  %rtx625 = bitcast %union.rtunion_def* %arrayidx624 to %struct.rtx_def**
  store %struct.rtx_def** %rtx625, %struct.rtx_def*** %np, align 8
  br label %if.end.626

if.end.626:                                       ; preds = %if.else.622, %if.then.618
  br label %for.cond.604

for.end.627:                                      ; preds = %for.cond.604
  br label %if.end.628

if.end.628:                                       ; preds = %for.end.627, %if.then.593
  %271 = load i32, i32* %regno, align 4
  %idxprom629 = zext i32 %271 to i64
  %arrayidx630 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom629
  %use_index631 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx630, i32 0, i32 1
  store i32 6, i32* %use_index631, align 4
  %272 = load i32, i32* @reload_combine_ruid, align 4
  %273 = load %struct.rtx_def*, %struct.rtx_def** %const_reg, align 8
  %fld632 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %273, i32 0, i32 1
  %arrayidx633 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld632, i32 0, i64 0
  %rtuint634 = bitcast %union.rtunion_def* %arrayidx633 to i32*
  %274 = load i32, i32* %rtuint634, align 4
  %idxprom635 = zext i32 %274 to i64
  %arrayidx636 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom635
  %store_ruid637 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx636, i32 0, i32 3
  store i32 %272, i32* %store_ruid637, align 4
  br label %for.inc.902

if.end.638:                                       ; preds = %for.end.590
  br label %if.end.639

if.end.639:                                       ; preds = %if.end.638, %land.lhs.true.537, %land.lhs.true.525, %land.lhs.true.519, %land.lhs.true.513, %land.lhs.true.505, %if.end.502
  br label %if.end.640

if.end.640:                                       ; preds = %if.end.639, %land.lhs.true.307, %land.lhs.true.295, %land.lhs.true.284, %land.lhs.true.276, %cond.end.272, %land.lhs.true, %cond.end.123
  %275 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld641 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %275, i32 0, i32 1
  %arrayidx642 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld641, i32 0, i64 3
  %rtx643 = bitcast %union.rtunion_def* %arrayidx642 to %struct.rtx_def**
  %276 = load %struct.rtx_def*, %struct.rtx_def** %rtx643, align 8
  call void @note_stores(%struct.rtx_def* %276, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @reload_combine_note_store, i8* null)
  %277 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %278 = bitcast %struct.rtx_def* %277 to i32*
  %bf.load644 = load i32, i32* %278, align 8
  %bf.clear645 = and i32 %bf.load644, 65535
  %cmp646 = icmp eq i32 %bf.clear645, 34
  br i1 %cmp646, label %if.then.648, label %if.else.805

if.then.648:                                      ; preds = %if.end.640
  store i32 0, i32* %r, align 4
  br label %for.cond.649

for.cond.649:                                     ; preds = %for.inc.664, %if.then.648
  %279 = load i32, i32* %r, align 4
  %cmp650 = icmp ult i32 %279, 53
  br i1 %cmp650, label %for.body.652, label %for.end.666

for.body.652:                                     ; preds = %for.cond.649
  %280 = load i32, i32* %r, align 4
  %idxprom653 = zext i32 %280 to i64
  %arrayidx654 = getelementptr inbounds [53 x i8], [53 x i8]* @call_used_regs, i32 0, i64 %idxprom653
  %281 = load i8, i8* %arrayidx654, align 1
  %tobool655 = icmp ne i8 %281, 0
  br i1 %tobool655, label %if.then.656, label %if.end.663

if.then.656:                                      ; preds = %for.body.652
  %282 = load i32, i32* %r, align 4
  %idxprom657 = zext i32 %282 to i64
  %arrayidx658 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom657
  %use_index659 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx658, i32 0, i32 1
  store i32 6, i32* %use_index659, align 4
  %283 = load i32, i32* @reload_combine_ruid, align 4
  %284 = load i32, i32* %r, align 4
  %idxprom660 = zext i32 %284 to i64
  %arrayidx661 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom660
  %store_ruid662 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx661, i32 0, i32 3
  store i32 %283, i32* %store_ruid662, align 4
  br label %if.end.663

if.end.663:                                       ; preds = %if.then.656, %for.body.652
  br label %for.inc.664

for.inc.664:                                      ; preds = %if.end.663
  %285 = load i32, i32* %r, align 4
  %inc665 = add i32 %285, 1
  store i32 %inc665, i32* %r, align 4
  br label %for.cond.649

for.end.666:                                      ; preds = %for.cond.649
  %286 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld667 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %286, i32 0, i32 1
  %arrayidx668 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld667, i32 0, i64 7
  %rtx669 = bitcast %union.rtunion_def* %arrayidx668 to %struct.rtx_def**
  %287 = load %struct.rtx_def*, %struct.rtx_def** %rtx669, align 8
  store %struct.rtx_def* %287, %struct.rtx_def** %link, align 8
  br label %for.cond.670

for.cond.670:                                     ; preds = %for.inc.800, %for.end.666
  %288 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %tobool671 = icmp ne %struct.rtx_def* %288, null
  br i1 %tobool671, label %for.body.672, label %for.end.804

for.body.672:                                     ; preds = %for.cond.670
  %289 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld673 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %289, i32 0, i32 1
  %arrayidx674 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld673, i32 0, i64 0
  %rtx675 = bitcast %union.rtunion_def* %arrayidx674 to %struct.rtx_def**
  %290 = load %struct.rtx_def*, %struct.rtx_def** %rtx675, align 8
  %fld676 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %290, i32 0, i32 1
  %arrayidx677 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld676, i32 0, i64 0
  %rtx678 = bitcast %union.rtunion_def* %arrayidx677 to %struct.rtx_def**
  %291 = load %struct.rtx_def*, %struct.rtx_def** %rtx678, align 8
  store %struct.rtx_def* %291, %struct.rtx_def** %usage_rtx, align 8
  %292 = load %struct.rtx_def*, %struct.rtx_def** %usage_rtx, align 8
  %293 = bitcast %struct.rtx_def* %292 to i32*
  %bf.load679 = load i32, i32* %293, align 8
  %bf.clear680 = and i32 %bf.load679, 65535
  %cmp681 = icmp eq i32 %bf.clear680, 61
  br i1 %cmp681, label %if.then.683, label %if.end.799

if.then.683:                                      ; preds = %for.body.672
  %294 = load %struct.rtx_def*, %struct.rtx_def** %usage_rtx, align 8
  %fld685 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %294, i32 0, i32 1
  %arrayidx686 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld685, i32 0, i64 0
  %rtuint687 = bitcast %union.rtunion_def* %arrayidx686 to i32*
  %295 = load i32, i32* %rtuint687, align 4
  store i32 %295, i32* %start_reg, align 4
  %296 = load i32, i32* %start_reg, align 4
  %cmp688 = icmp uge i32 %296, 8
  br i1 %cmp688, label %land.lhs.true.690, label %lor.lhs.false.693

land.lhs.true.690:                                ; preds = %if.then.683
  %297 = load i32, i32* %start_reg, align 4
  %cmp691 = icmp ule i32 %297, 15
  br i1 %cmp691, label %cond.true.711, label %lor.lhs.false.693

lor.lhs.false.693:                                ; preds = %land.lhs.true.690, %if.then.683
  %298 = load i32, i32* %start_reg, align 4
  %cmp694 = icmp uge i32 %298, 21
  br i1 %cmp694, label %land.lhs.true.696, label %lor.lhs.false.699

land.lhs.true.696:                                ; preds = %lor.lhs.false.693
  %299 = load i32, i32* %start_reg, align 4
  %cmp697 = icmp ule i32 %299, 28
  br i1 %cmp697, label %cond.true.711, label %lor.lhs.false.699

lor.lhs.false.699:                                ; preds = %land.lhs.true.696, %lor.lhs.false.693
  %300 = load i32, i32* %start_reg, align 4
  %cmp700 = icmp uge i32 %300, 45
  br i1 %cmp700, label %land.lhs.true.702, label %lor.lhs.false.705

land.lhs.true.702:                                ; preds = %lor.lhs.false.699
  %301 = load i32, i32* %start_reg, align 4
  %cmp703 = icmp ule i32 %301, 52
  br i1 %cmp703, label %cond.true.711, label %lor.lhs.false.705

lor.lhs.false.705:                                ; preds = %land.lhs.true.702, %lor.lhs.false.699
  %302 = load i32, i32* %start_reg, align 4
  %cmp706 = icmp uge i32 %302, 29
  br i1 %cmp706, label %land.lhs.true.708, label %cond.false.729

land.lhs.true.708:                                ; preds = %lor.lhs.false.705
  %303 = load i32, i32* %start_reg, align 4
  %cmp709 = icmp ule i32 %303, 36
  br i1 %cmp709, label %cond.true.711, label %cond.false.729

cond.true.711:                                    ; preds = %land.lhs.true.708, %land.lhs.true.702, %land.lhs.true.696, %land.lhs.true.690
  %304 = load %struct.rtx_def*, %struct.rtx_def** %usage_rtx, align 8
  %305 = bitcast %struct.rtx_def* %304 to i32*
  %bf.load712 = load i32, i32* %305, align 8
  %bf.lshr713 = lshr i32 %bf.load712, 16
  %bf.clear714 = and i32 %bf.lshr713, 255
  %idxprom715 = sext i32 %bf.clear714 to i64
  %arrayidx716 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom715
  %306 = load i32, i32* %arrayidx716, align 4
  %cmp717 = icmp eq i32 %306, 5
  br i1 %cmp717, label %lor.end.727, label %lor.rhs.719

lor.rhs.719:                                      ; preds = %cond.true.711
  %307 = load %struct.rtx_def*, %struct.rtx_def** %usage_rtx, align 8
  %308 = bitcast %struct.rtx_def* %307 to i32*
  %bf.load720 = load i32, i32* %308, align 8
  %bf.lshr721 = lshr i32 %bf.load720, 16
  %bf.clear722 = and i32 %bf.lshr721, 255
  %idxprom723 = sext i32 %bf.clear722 to i64
  %arrayidx724 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom723
  %309 = load i32, i32* %arrayidx724, align 4
  %cmp725 = icmp eq i32 %309, 6
  br label %lor.end.727

lor.end.727:                                      ; preds = %lor.rhs.719, %cond.true.711
  %310 = phi i1 [ true, %cond.true.711 ], [ %cmp725, %lor.rhs.719 ]
  %cond728 = select i1 %310, i32 2, i32 1
  br label %cond.end.769

cond.false.729:                                   ; preds = %land.lhs.true.708, %lor.lhs.false.705
  %311 = load %struct.rtx_def*, %struct.rtx_def** %usage_rtx, align 8
  %312 = bitcast %struct.rtx_def* %311 to i32*
  %bf.load730 = load i32, i32* %312, align 8
  %bf.lshr731 = lshr i32 %bf.load730, 16
  %bf.clear732 = and i32 %bf.lshr731, 255
  %cmp733 = icmp eq i32 %bf.clear732, 18
  br i1 %cmp733, label %cond.true.735, label %cond.false.739

cond.true.735:                                    ; preds = %cond.false.729
  %313 = load i32, i32* @target_flags, align 4
  %and736 = and i32 %313, 33554432
  %tobool737 = icmp ne i32 %and736, 0
  %cond738 = select i1 %tobool737, i32 2, i32 3
  br label %cond.end.767

cond.false.739:                                   ; preds = %cond.false.729
  %314 = load %struct.rtx_def*, %struct.rtx_def** %usage_rtx, align 8
  %315 = bitcast %struct.rtx_def* %314 to i32*
  %bf.load740 = load i32, i32* %315, align 8
  %bf.lshr741 = lshr i32 %bf.load740, 16
  %bf.clear742 = and i32 %bf.lshr741, 255
  %cmp743 = icmp eq i32 %bf.clear742, 24
  br i1 %cmp743, label %cond.true.745, label %cond.false.749

cond.true.745:                                    ; preds = %cond.false.739
  %316 = load i32, i32* @target_flags, align 4
  %and746 = and i32 %316, 33554432
  %tobool747 = icmp ne i32 %and746, 0
  %cond748 = select i1 %tobool747, i32 4, i32 6
  br label %cond.end.765

cond.false.749:                                   ; preds = %cond.false.739
  %317 = load %struct.rtx_def*, %struct.rtx_def** %usage_rtx, align 8
  %318 = bitcast %struct.rtx_def* %317 to i32*
  %bf.load750 = load i32, i32* %318, align 8
  %bf.lshr751 = lshr i32 %bf.load750, 16
  %bf.clear752 = and i32 %bf.lshr751, 255
  %idxprom753 = sext i32 %bf.clear752 to i64
  %arrayidx754 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom753
  %319 = load i8, i8* %arrayidx754, align 1
  %conv755 = zext i8 %319 to i32
  %320 = load i32, i32* @target_flags, align 4
  %and756 = and i32 %320, 33554432
  %tobool757 = icmp ne i32 %and756, 0
  %cond758 = select i1 %tobool757, i32 8, i32 4
  %add759 = add nsw i32 %conv755, %cond758
  %sub760 = sub nsw i32 %add759, 1
  %321 = load i32, i32* @target_flags, align 4
  %and761 = and i32 %321, 33554432
  %tobool762 = icmp ne i32 %and761, 0
  %cond763 = select i1 %tobool762, i32 8, i32 4
  %div764 = sdiv i32 %sub760, %cond763
  br label %cond.end.765

cond.end.765:                                     ; preds = %cond.false.749, %cond.true.745
  %cond766 = phi i32 [ %cond748, %cond.true.745 ], [ %div764, %cond.false.749 ]
  br label %cond.end.767

cond.end.767:                                     ; preds = %cond.end.765, %cond.true.735
  %cond768 = phi i32 [ %cond738, %cond.true.735 ], [ %cond766, %cond.end.765 ]
  br label %cond.end.769

cond.end.769:                                     ; preds = %cond.end.767, %lor.end.727
  %cond770 = phi i32 [ %cond728, %lor.end.727 ], [ %cond768, %cond.end.767 ]
  store i32 %cond770, i32* %num_regs, align 4
  %322 = load i32, i32* %start_reg, align 4
  %323 = load i32, i32* %num_regs, align 4
  %add771 = add i32 %322, %323
  %sub772 = sub i32 %add771, 1
  store i32 %sub772, i32* %end_reg, align 4
  %324 = load i32, i32* %start_reg, align 4
  store i32 %324, i32* %i684, align 4
  br label %for.cond.773

for.cond.773:                                     ; preds = %for.inc.796, %cond.end.769
  %325 = load i32, i32* %i684, align 4
  %326 = load i32, i32* %end_reg, align 4
  %cmp774 = icmp ule i32 %325, %326
  br i1 %cmp774, label %for.body.776, label %for.end.798

for.body.776:                                     ; preds = %for.cond.773
  %327 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld777 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %327, i32 0, i32 1
  %arrayidx778 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld777, i32 0, i64 0
  %rtx779 = bitcast %union.rtunion_def* %arrayidx778 to %struct.rtx_def**
  %328 = load %struct.rtx_def*, %struct.rtx_def** %rtx779, align 8
  %329 = bitcast %struct.rtx_def* %328 to i32*
  %bf.load780 = load i32, i32* %329, align 8
  %bf.clear781 = and i32 %bf.load780, 65535
  %cmp782 = icmp eq i32 %bf.clear781, 49
  br i1 %cmp782, label %if.then.784, label %if.else.791

if.then.784:                                      ; preds = %for.body.776
  %330 = load i32, i32* %i684, align 4
  %idxprom785 = zext i32 %330 to i64
  %arrayidx786 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom785
  %use_index787 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx786, i32 0, i32 1
  store i32 6, i32* %use_index787, align 4
  %331 = load i32, i32* @reload_combine_ruid, align 4
  %332 = load i32, i32* %i684, align 4
  %idxprom788 = zext i32 %332 to i64
  %arrayidx789 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom788
  %store_ruid790 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx789, i32 0, i32 3
  store i32 %331, i32* %store_ruid790, align 4
  br label %if.end.795

if.else.791:                                      ; preds = %for.body.776
  %333 = load i32, i32* %i684, align 4
  %idxprom792 = zext i32 %333 to i64
  %arrayidx793 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom792
  %use_index794 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx793, i32 0, i32 1
  store i32 -1, i32* %use_index794, align 4
  br label %if.end.795

if.end.795:                                       ; preds = %if.else.791, %if.then.784
  br label %for.inc.796

for.inc.796:                                      ; preds = %if.end.795
  %334 = load i32, i32* %i684, align 4
  %inc797 = add i32 %334, 1
  store i32 %inc797, i32* %i684, align 4
  br label %for.cond.773

for.end.798:                                      ; preds = %for.cond.773
  br label %if.end.799

if.end.799:                                       ; preds = %for.end.798, %for.body.672
  br label %for.inc.800

for.inc.800:                                      ; preds = %if.end.799
  %335 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld801 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %335, i32 0, i32 1
  %arrayidx802 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld801, i32 0, i64 1
  %rtx803 = bitcast %union.rtunion_def* %arrayidx802 to %struct.rtx_def**
  %336 = load %struct.rtx_def*, %struct.rtx_def** %rtx803, align 8
  store %struct.rtx_def* %336, %struct.rtx_def** %link, align 8
  br label %for.cond.670

for.end.804:                                      ; preds = %for.cond.670
  br label %if.end.859

if.else.805:                                      ; preds = %if.end.640
  %337 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %338 = bitcast %struct.rtx_def* %337 to i32*
  %bf.load806 = load i32, i32* %338, align 8
  %bf.clear807 = and i32 %bf.load806, 65535
  %cmp808 = icmp eq i32 %bf.clear807, 33
  br i1 %cmp808, label %land.lhs.true.810, label %if.end.858

land.lhs.true.810:                                ; preds = %if.else.805
  %339 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld811 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %339, i32 0, i32 1
  %arrayidx812 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld811, i32 0, i64 3
  %rtx813 = bitcast %union.rtunion_def* %arrayidx812 to %struct.rtx_def**
  %340 = load %struct.rtx_def*, %struct.rtx_def** %rtx813, align 8
  %341 = bitcast %struct.rtx_def* %340 to i32*
  %bf.load814 = load i32, i32* %341, align 8
  %bf.clear815 = and i32 %bf.load814, 65535
  %cmp816 = icmp ne i32 %bf.clear815, 51
  br i1 %cmp816, label %if.then.818, label %if.end.858

if.then.818:                                      ; preds = %land.lhs.true.810
  %342 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call820 = call i32 @condjump_p(%struct.rtx_def* %342)
  %tobool821 = icmp ne i32 %call820, 0
  br i1 %tobool821, label %land.lhs.true.825, label %lor.lhs.false.822

lor.lhs.false.822:                                ; preds = %if.then.818
  %343 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call823 = call i32 @condjump_in_parallel_p(%struct.rtx_def* %343)
  %tobool824 = icmp ne i32 %call823, 0
  br i1 %tobool824, label %land.lhs.true.825, label %if.else.840

land.lhs.true.825:                                ; preds = %lor.lhs.false.822, %if.then.818
  %344 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld826 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %344, i32 0, i32 1
  %arrayidx827 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld826, i32 0, i64 7
  %rtx828 = bitcast %union.rtunion_def* %arrayidx827 to %struct.rtx_def**
  %345 = load %struct.rtx_def*, %struct.rtx_def** %rtx828, align 8
  %tobool829 = icmp ne %struct.rtx_def* %345, null
  br i1 %tobool829, label %if.then.830, label %if.else.840

if.then.830:                                      ; preds = %land.lhs.true.825
  %346 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld831 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %346, i32 0, i32 1
  %arrayidx832 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld831, i32 0, i64 7
  %rtx833 = bitcast %union.rtunion_def* %arrayidx832 to %struct.rtx_def**
  %347 = load %struct.rtx_def*, %struct.rtx_def** %rtx833, align 8
  %fld834 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %347, i32 0, i32 1
  %arrayidx835 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld834, i32 0, i64 5
  %rtint836 = bitcast %union.rtunion_def* %arrayidx835 to i32*
  %348 = load i32, i32* %rtint836, align 4
  %349 = load i32, i32* %min_labelno, align 4
  %sub837 = sub nsw i32 %348, %349
  %idxprom838 = sext i32 %sub837 to i64
  %350 = load i64*, i64** %label_live, align 8
  %arrayidx839 = getelementptr inbounds i64, i64* %350, i64 %idxprom838
  store i64* %arrayidx839, i64** %live819, align 8
  br label %if.end.841

if.else.840:                                      ; preds = %land.lhs.true.825, %lor.lhs.false.822
  store i64* %ever_live_at_start, i64** %live819, align 8
  br label %if.end.841

if.end.841:                                       ; preds = %if.else.840, %if.then.830
  store i32 52, i32* %i, align 4
  br label %for.cond.842

for.cond.842:                                     ; preds = %for.inc.855, %if.end.841
  %351 = load i32, i32* %i, align 4
  %cmp843 = icmp sge i32 %351, 0
  br i1 %cmp843, label %for.body.845, label %for.end.857

for.body.845:                                     ; preds = %for.cond.842
  %352 = load i64*, i64** %live819, align 8
  %353 = load i64, i64* %352, align 8
  %354 = load i32, i32* %i, align 4
  %sh_prom846 = zext i32 %354 to i64
  %shl847 = shl i64 1, %sh_prom846
  %and848 = and i64 %353, %shl847
  %tobool849 = icmp ne i64 %and848, 0
  br i1 %tobool849, label %if.then.850, label %if.end.854

if.then.850:                                      ; preds = %for.body.845
  %355 = load i32, i32* %i, align 4
  %idxprom851 = sext i32 %355 to i64
  %arrayidx852 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom851
  %use_index853 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx852, i32 0, i32 1
  store i32 -1, i32* %use_index853, align 4
  br label %if.end.854

if.end.854:                                       ; preds = %if.then.850, %for.body.845
  br label %for.inc.855

for.inc.855:                                      ; preds = %if.end.854
  %356 = load i32, i32* %i, align 4
  %dec856 = add nsw i32 %356, -1
  store i32 %dec856, i32* %i, align 4
  br label %for.cond.842

for.end.857:                                      ; preds = %for.cond.842
  br label %if.end.858

if.end.858:                                       ; preds = %for.end.857, %land.lhs.true.810, %if.else.805
  br label %if.end.859

if.end.859:                                       ; preds = %if.end.858, %for.end.804
  %357 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld860 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %357, i32 0, i32 1
  %arrayidx861 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld860, i32 0, i64 3
  %rtx862 = bitcast %union.rtunion_def* %arrayidx861 to %struct.rtx_def**
  %358 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  call void @reload_combine_note_use(%struct.rtx_def** %rtx862, %struct.rtx_def* %358)
  %359 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld863 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %359, i32 0, i32 1
  %arrayidx864 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld863, i32 0, i64 6
  %rtx865 = bitcast %union.rtunion_def* %arrayidx864 to %struct.rtx_def**
  %360 = load %struct.rtx_def*, %struct.rtx_def** %rtx865, align 8
  store %struct.rtx_def* %360, %struct.rtx_def** %note, align 8
  br label %for.cond.866

for.cond.866:                                     ; preds = %for.inc.897, %if.end.859
  %361 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %tobool867 = icmp ne %struct.rtx_def* %361, null
  br i1 %tobool867, label %for.body.868, label %for.end.901

for.body.868:                                     ; preds = %for.cond.866
  %362 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %363 = bitcast %struct.rtx_def* %362 to i32*
  %bf.load869 = load i32, i32* %363, align 8
  %bf.lshr870 = lshr i32 %bf.load869, 16
  %bf.clear871 = and i32 %bf.lshr870, 255
  %cmp872 = icmp eq i32 %bf.clear871, 2
  br i1 %cmp872, label %land.lhs.true.874, label %if.end.896

land.lhs.true.874:                                ; preds = %for.body.868
  %364 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld875 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %364, i32 0, i32 1
  %arrayidx876 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld875, i32 0, i64 0
  %rtx877 = bitcast %union.rtunion_def* %arrayidx876 to %struct.rtx_def**
  %365 = load %struct.rtx_def*, %struct.rtx_def** %rtx877, align 8
  %366 = bitcast %struct.rtx_def* %365 to i32*
  %bf.load878 = load i32, i32* %366, align 8
  %bf.clear879 = and i32 %bf.load878, 65535
  %cmp880 = icmp eq i32 %bf.clear879, 61
  br i1 %cmp880, label %if.then.882, label %if.end.896

if.then.882:                                      ; preds = %land.lhs.true.874
  %367 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld884 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %367, i32 0, i32 1
  %arrayidx885 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld884, i32 0, i64 0
  %rtx886 = bitcast %union.rtunion_def* %arrayidx885 to %struct.rtx_def**
  %368 = load %struct.rtx_def*, %struct.rtx_def** %rtx886, align 8
  %fld887 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %368, i32 0, i32 1
  %arrayidx888 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld887, i32 0, i64 0
  %rtuint889 = bitcast %union.rtunion_def* %arrayidx888 to i32*
  %369 = load i32, i32* %rtuint889, align 4
  store i32 %369, i32* %regno883, align 4
  %370 = load i32, i32* @reload_combine_ruid, align 4
  %371 = load i32, i32* %regno883, align 4
  %idxprom890 = sext i32 %371 to i64
  %arrayidx891 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom890
  %store_ruid892 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx891, i32 0, i32 3
  store i32 %370, i32* %store_ruid892, align 4
  %372 = load i32, i32* %regno883, align 4
  %idxprom893 = sext i32 %372 to i64
  %arrayidx894 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom893
  %use_index895 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx894, i32 0, i32 1
  store i32 -1, i32* %use_index895, align 4
  br label %if.end.896

if.end.896:                                       ; preds = %if.then.882, %land.lhs.true.874, %for.body.868
  br label %for.inc.897

for.inc.897:                                      ; preds = %if.end.896
  %373 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld898 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %373, i32 0, i32 1
  %arrayidx899 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld898, i32 0, i64 1
  %rtx900 = bitcast %union.rtunion_def* %arrayidx899 to %struct.rtx_def**
  %374 = load %struct.rtx_def*, %struct.rtx_def** %rtx900, align 8
  store %struct.rtx_def* %374, %struct.rtx_def** %note, align 8
  br label %for.cond.866

for.end.901:                                      ; preds = %for.cond.866
  br label %for.inc.902

for.inc.902:                                      ; preds = %for.end.901, %if.end.628, %if.then.98
  %375 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld903 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %375, i32 0, i32 1
  %arrayidx904 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld903, i32 0, i64 1
  %rtx905 = bitcast %union.rtunion_def* %arrayidx904 to %struct.rtx_def**
  %376 = load %struct.rtx_def*, %struct.rtx_def** %rtx905, align 8
  store %struct.rtx_def* %376, %struct.rtx_def** %insn, align 8
  br label %for.cond.60

for.end.906:                                      ; preds = %for.cond.60
  %377 = load i64*, i64** %label_live, align 8
  %378 = bitcast i64* %377 to i8*
  call void @free(i8* %378) #3
  br label %return

return:                                           ; preds = %for.end.906, %if.then.11, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @reload_cse_move2add(%struct.rtx_def* %first) #0 {
entry:
  %first.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %insn = alloca %struct.rtx_def*, align 8
  %pat = alloca %struct.rtx_def*, align 8
  %note = alloca %struct.rtx_def*, align 8
  %reg = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %src = alloca %struct.rtx_def*, align 8
  %success = alloca i32, align 4
  %new_src = alloca %struct.rtx_def*, align 8
  %next = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %src3 = alloca %struct.rtx_def*, align 8
  %added_offset = alloca i64, align 8
  %base_offset = alloca i64, align 8
  %regno_offset = alloca i64, align 8
  %new_src257 = alloca %struct.rtx_def*, align 8
  %success264 = alloca i32, align 4
  %regno330 = alloca i32, align 4
  store %struct.rtx_def* %first, %struct.rtx_def** %first.addr, align 8
  store i32 52, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp sge i32 %0, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [53 x i32], [53 x i32]* @reg_set_luid, i32 0, i64 %idxprom
  store i32 0, i32* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %2 = load i32, i32* %i, align 4
  %dec = add nsw i32 %2, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* @move2add_last_label_luid, align 4
  store i32 2, i32* @move2add_luid, align 4
  %3 = load %struct.rtx_def*, %struct.rtx_def** %first.addr, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %insn, align 8
  br label %for.cond.1

for.cond.1:                                       ; preds = %for.inc.372, %for.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %tobool = icmp ne %struct.rtx_def* %4, null
  br i1 %tobool, label %for.body.2, label %for.end.377

for.body.2:                                       ; preds = %for.cond.1
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load = load i32, i32* %6, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp3 = icmp eq i32 %bf.clear, 36
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %for.body.2
  %7 = load i32, i32* @move2add_luid, align 4
  store i32 %7, i32* @move2add_last_label_luid, align 4
  %8 = load i32, i32* @move2add_luid, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* @move2add_luid, align 4
  br label %for.inc.372

if.end:                                           ; preds = %for.body.2
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load4 = load i32, i32* %10, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %idxprom6 = sext i32 %bf.clear5 to i64
  %arrayidx7 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom6
  %11 = load i8, i8* %arrayidx7, align 1
  %conv = sext i8 %11 to i32
  %cmp8 = icmp eq i32 %conv, 105
  br i1 %cmp8, label %if.end.11, label %if.then.10

if.then.10:                                       ; preds = %if.end
  br label %for.inc.372

if.end.11:                                        ; preds = %if.end
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %13, %struct.rtx_def** %pat, align 8
  %14 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %15 = bitcast %struct.rtx_def* %14 to i32*
  %bf.load13 = load i32, i32* %15, align 8
  %bf.clear14 = and i32 %bf.load13, 65535
  %cmp15 = icmp eq i32 %bf.clear14, 47
  br i1 %cmp15, label %land.lhs.true, label %if.end.309

land.lhs.true:                                    ; preds = %if.end.11
  %16 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i32 0, i64 0
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rtx19, align 8
  %18 = bitcast %struct.rtx_def* %17 to i32*
  %bf.load20 = load i32, i32* %18, align 8
  %bf.clear21 = and i32 %bf.load20, 65535
  %cmp22 = icmp eq i32 %bf.clear21, 61
  br i1 %cmp22, label %if.then.24, label %if.end.309

if.then.24:                                       ; preds = %land.lhs.true
  %19 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i32 0, i64 0
  %rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rtx27, align 8
  store %struct.rtx_def* %20, %struct.rtx_def** %reg, align 8
  %21 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx29 to i32*
  %22 = load i32, i32* %rtuint, align 4
  store i32 %22, i32* %regno, align 4
  %23 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i32 0, i64 1
  %rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rtx32, align 8
  store %struct.rtx_def* %24, %struct.rtx_def** %src, align 8
  %25 = load i32, i32* %regno, align 4
  %idxprom33 = sext i32 %25 to i64
  %arrayidx34 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_set_luid, i32 0, i64 %idxprom33
  %26 = load i32, i32* %arrayidx34, align 4
  %27 = load i32, i32* @move2add_last_label_luid, align 4
  %cmp35 = icmp sgt i32 %26, %27
  br i1 %cmp35, label %land.lhs.true.37, label %if.end.308

land.lhs.true.37:                                 ; preds = %if.then.24
  %28 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load38 = load i32, i32* %29, align 8
  %bf.lshr = lshr i32 %bf.load38, 16
  %bf.clear39 = and i32 %bf.lshr, 255
  %idxprom40 = sext i32 %bf.clear39 to i64
  %arrayidx41 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom40
  %30 = load i8, i8* %arrayidx41, align 1
  %conv42 = zext i8 %30 to i32
  %31 = load i32, i32* %regno, align 4
  %idxprom43 = sext i32 %31 to i64
  %arrayidx44 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_mode, i32 0, i64 %idxprom43
  %32 = load i32, i32* %arrayidx44, align 4
  %idxprom45 = sext i32 %32 to i64
  %arrayidx46 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom45
  %33 = load i8, i8* %arrayidx46, align 1
  %conv47 = zext i8 %33 to i32
  %cmp48 = icmp eq i32 %conv42, %conv47
  br i1 %cmp48, label %if.then.63, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.37
  %34 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %35 = bitcast %struct.rtx_def* %34 to i32*
  %bf.load50 = load i32, i32* %35, align 8
  %bf.lshr51 = lshr i32 %bf.load50, 16
  %bf.clear52 = and i32 %bf.lshr51, 255
  %idxprom53 = sext i32 %bf.clear52 to i64
  %arrayidx54 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom53
  %36 = load i8, i8* %arrayidx54, align 1
  %conv55 = zext i8 %36 to i32
  %37 = load i32, i32* %regno, align 4
  %idxprom56 = sext i32 %37 to i64
  %arrayidx57 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_mode, i32 0, i64 %idxprom56
  %38 = load i32, i32* %arrayidx57, align 4
  %idxprom58 = sext i32 %38 to i64
  %arrayidx59 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom58
  %39 = load i8, i8* %arrayidx59, align 1
  %conv60 = zext i8 %39 to i32
  %cmp61 = icmp sle i32 %conv55, %conv60
  br i1 %cmp61, label %if.then.63, label %if.end.308

if.then.63:                                       ; preds = %lor.lhs.false, %land.lhs.true.37
  %40 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load64 = load i32, i32* %41, align 8
  %bf.clear65 = and i32 %bf.load64, 65535
  %cmp66 = icmp eq i32 %bf.clear65, 54
  br i1 %cmp66, label %land.lhs.true.68, label %if.else.116

land.lhs.true.68:                                 ; preds = %if.then.63
  %42 = load i32, i32* %regno, align 4
  %idxprom69 = sext i32 %42 to i64
  %arrayidx70 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_base_reg, i32 0, i64 %idxprom69
  %43 = load i32, i32* %arrayidx70, align 4
  %cmp71 = icmp slt i32 %43, 0
  br i1 %cmp71, label %if.then.73, label %if.else.116

if.then.73:                                       ; preds = %land.lhs.true.68
  store i32 0, i32* %success, align 4
  %44 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %45 = bitcast %struct.rtx_def* %44 to i32*
  %bf.load74 = load i32, i32* %45, align 8
  %bf.lshr75 = lshr i32 %bf.load74, 16
  %bf.clear76 = and i32 %bf.lshr75, 255
  %46 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx78 to i64*
  %47 = load i64, i64* %rtwint, align 8
  %48 = load i32, i32* %regno, align 4
  %idxprom79 = sext i32 %48 to i64
  %arrayidx80 = getelementptr inbounds [53 x i64], [53 x i64]* @reg_offset, i32 0, i64 %idxprom79
  %49 = load i64, i64* %arrayidx80, align 8
  %sub = sub nsw i64 %47, %49
  %call = call i64 @sext_for_mode(i32 %bf.clear76, i64 %sub)
  %call81 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call)
  store %struct.rtx_def* %call81, %struct.rtx_def** %new_src, align 8
  %50 = load %struct.rtx_def*, %struct.rtx_def** %new_src, align 8
  %51 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp82 = icmp eq %struct.rtx_def* %50, %51
  br i1 %cmp82, label %if.then.84, label %if.else

if.then.84:                                       ; preds = %if.then.73
  %52 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %53 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx86 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld85, i32 0, i64 1
  %rtx87 = bitcast %union.rtunion_def* %arrayidx86 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %call88 = call i32 @validate_change(%struct.rtx_def* %52, %struct.rtx_def** %rtx87, %struct.rtx_def* %54, i32 0)
  store i32 %call88, i32* %success, align 4
  br label %if.end.103

if.else:                                          ; preds = %if.then.73
  %55 = load %struct.rtx_def*, %struct.rtx_def** %new_src, align 8
  %call89 = call i32 @rtx_cost(%struct.rtx_def* %55, i32 75)
  %56 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %call90 = call i32 @rtx_cost(%struct.rtx_def* %56, i32 47)
  %cmp91 = icmp slt i32 %call89, %call90
  br i1 %cmp91, label %land.lhs.true.93, label %if.end.102

land.lhs.true.93:                                 ; preds = %if.else
  %57 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %58 = load %struct.rtx_def*, %struct.rtx_def** %new_src, align 8
  %call94 = call i32 @have_add2_insn(%struct.rtx_def* %57, %struct.rtx_def* %58)
  %tobool95 = icmp ne i32 %call94, 0
  br i1 %tobool95, label %if.then.96, label %if.end.102

if.then.96:                                       ; preds = %land.lhs.true.93
  %59 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %60 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld97, i32 0, i64 3
  %rtx99 = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtx_def**
  %61 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %62 = load %struct.rtx_def*, %struct.rtx_def** %new_src, align 8
  %call100 = call %struct.rtx_def* @gen_add2_insn(%struct.rtx_def* %61, %struct.rtx_def* %62)
  %call101 = call i32 @validate_change(%struct.rtx_def* %59, %struct.rtx_def** %rtx99, %struct.rtx_def* %call100, i32 0)
  store i32 %call101, i32* %success, align 4
  br label %if.end.102

if.end.102:                                       ; preds = %if.then.96, %land.lhs.true.93, %if.else
  br label %if.end.103

if.end.103:                                       ; preds = %if.end.102, %if.then.84
  %63 = load i32, i32* @move2add_luid, align 4
  %64 = load i32, i32* %regno, align 4
  %idxprom104 = sext i32 %64 to i64
  %arrayidx105 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_set_luid, i32 0, i64 %idxprom104
  store i32 %63, i32* %arrayidx105, align 4
  %65 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %66 = bitcast %struct.rtx_def* %65 to i32*
  %bf.load106 = load i32, i32* %66, align 8
  %bf.lshr107 = lshr i32 %bf.load106, 16
  %bf.clear108 = and i32 %bf.lshr107, 255
  %67 = load i32, i32* %regno, align 4
  %idxprom109 = sext i32 %67 to i64
  %arrayidx110 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_mode, i32 0, i64 %idxprom109
  store i32 %bf.clear108, i32* %arrayidx110, align 4
  %68 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1
  %arrayidx112 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld111, i32 0, i64 0
  %rtwint113 = bitcast %union.rtunion_def* %arrayidx112 to i64*
  %69 = load i64, i64* %rtwint113, align 8
  %70 = load i32, i32* %regno, align 4
  %idxprom114 = sext i32 %70 to i64
  %arrayidx115 = getelementptr inbounds [53 x i64], [53 x i64]* @reg_offset, i32 0, i64 %idxprom114
  store i64 %69, i64* %arrayidx115, align 8
  br label %for.inc.372

if.else.116:                                      ; preds = %land.lhs.true.68, %if.then.63
  %71 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %72 = bitcast %struct.rtx_def* %71 to i32*
  %bf.load117 = load i32, i32* %72, align 8
  %bf.clear118 = and i32 %bf.load117, 65535
  %cmp119 = icmp eq i32 %bf.clear118, 61
  br i1 %cmp119, label %land.lhs.true.121, label %if.end.306

land.lhs.true.121:                                ; preds = %if.else.116
  %73 = load i32, i32* %regno, align 4
  %idxprom122 = sext i32 %73 to i64
  %arrayidx123 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_set_luid, i32 0, i64 %idxprom122
  %74 = load i32, i32* %arrayidx123, align 4
  %75 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx125 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld124, i32 0, i64 0
  %rtuint126 = bitcast %union.rtunion_def* %arrayidx125 to i32*
  %76 = load i32, i32* %rtuint126, align 4
  %idxprom127 = zext i32 %76 to i64
  %arrayidx128 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_set_luid, i32 0, i64 %idxprom127
  %77 = load i32, i32* %arrayidx128, align 4
  %cmp129 = icmp eq i32 %74, %77
  br i1 %cmp129, label %land.lhs.true.131, label %if.end.306

land.lhs.true.131:                                ; preds = %land.lhs.true.121
  %78 = load i32, i32* %regno, align 4
  %idxprom132 = sext i32 %78 to i64
  %arrayidx133 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_base_reg, i32 0, i64 %idxprom132
  %79 = load i32, i32* %arrayidx133, align 4
  %80 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1
  %arrayidx135 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld134, i32 0, i64 0
  %rtuint136 = bitcast %union.rtunion_def* %arrayidx135 to i32*
  %81 = load i32, i32* %rtuint136, align 4
  %idxprom137 = zext i32 %81 to i64
  %arrayidx138 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_base_reg, i32 0, i64 %idxprom137
  %82 = load i32, i32* %arrayidx138, align 4
  %cmp139 = icmp eq i32 %79, %82
  br i1 %cmp139, label %land.lhs.true.141, label %if.end.306

land.lhs.true.141:                                ; preds = %land.lhs.true.131
  %83 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %84 = bitcast %struct.rtx_def* %83 to i32*
  %bf.load142 = load i32, i32* %84, align 8
  %bf.lshr143 = lshr i32 %bf.load142, 16
  %bf.clear144 = and i32 %bf.lshr143, 255
  %idxprom145 = sext i32 %bf.clear144 to i64
  %arrayidx146 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom145
  %85 = load i8, i8* %arrayidx146, align 1
  %conv147 = zext i8 %85 to i32
  %86 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld148 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1
  %arrayidx149 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld148, i32 0, i64 0
  %rtuint150 = bitcast %union.rtunion_def* %arrayidx149 to i32*
  %87 = load i32, i32* %rtuint150, align 4
  %idxprom151 = zext i32 %87 to i64
  %arrayidx152 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_mode, i32 0, i64 %idxprom151
  %88 = load i32, i32* %arrayidx152, align 4
  %idxprom153 = sext i32 %88 to i64
  %arrayidx154 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom153
  %89 = load i8, i8* %arrayidx154, align 1
  %conv155 = zext i8 %89 to i32
  %cmp156 = icmp eq i32 %conv147, %conv155
  br i1 %cmp156, label %if.then.175, label %lor.lhs.false.158

lor.lhs.false.158:                                ; preds = %land.lhs.true.141
  %90 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %91 = bitcast %struct.rtx_def* %90 to i32*
  %bf.load159 = load i32, i32* %91, align 8
  %bf.lshr160 = lshr i32 %bf.load159, 16
  %bf.clear161 = and i32 %bf.lshr160, 255
  %idxprom162 = sext i32 %bf.clear161 to i64
  %arrayidx163 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom162
  %92 = load i8, i8* %arrayidx163, align 1
  %conv164 = zext i8 %92 to i32
  %93 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld165 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %93, i32 0, i32 1
  %arrayidx166 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld165, i32 0, i64 0
  %rtuint167 = bitcast %union.rtunion_def* %arrayidx166 to i32*
  %94 = load i32, i32* %rtuint167, align 4
  %idxprom168 = zext i32 %94 to i64
  %arrayidx169 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_mode, i32 0, i64 %idxprom168
  %95 = load i32, i32* %arrayidx169, align 4
  %idxprom170 = sext i32 %95 to i64
  %arrayidx171 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom170
  %96 = load i8, i8* %arrayidx171, align 1
  %conv172 = zext i8 %96 to i32
  %cmp173 = icmp sle i32 %conv164, %conv172
  br i1 %cmp173, label %if.then.175, label %if.end.306

if.then.175:                                      ; preds = %lor.lhs.false.158, %land.lhs.true.141
  %97 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call176 = call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %97)
  store %struct.rtx_def* %call176, %struct.rtx_def** %next, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %set, align 8
  %98 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %tobool177 = icmp ne %struct.rtx_def* %98, null
  br i1 %tobool177, label %if.then.178, label %if.end.204

if.then.178:                                      ; preds = %if.then.175
  %99 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %100 = bitcast %struct.rtx_def* %99 to i32*
  %bf.load179 = load i32, i32* %100, align 8
  %bf.clear180 = and i32 %bf.load179, 65535
  %idxprom181 = sext i32 %bf.clear180 to i64
  %arrayidx182 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom181
  %101 = load i8, i8* %arrayidx182, align 1
  %conv183 = sext i8 %101 to i32
  %cmp184 = icmp eq i32 %conv183, 105
  br i1 %cmp184, label %cond.true, label %cond.false.201

cond.true:                                        ; preds = %if.then.178
  %102 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %fld186 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1
  %arrayidx187 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld186, i32 0, i64 3
  %rtx188 = bitcast %union.rtunion_def* %arrayidx187 to %struct.rtx_def**
  %103 = load %struct.rtx_def*, %struct.rtx_def** %rtx188, align 8
  %104 = bitcast %struct.rtx_def* %103 to i32*
  %bf.load189 = load i32, i32* %104, align 8
  %bf.clear190 = and i32 %bf.load189, 65535
  %cmp191 = icmp eq i32 %bf.clear190, 47
  br i1 %cmp191, label %cond.true.193, label %cond.false

cond.true.193:                                    ; preds = %cond.true
  %105 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %fld194 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1
  %arrayidx195 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld194, i32 0, i64 3
  %rtx196 = bitcast %union.rtunion_def* %arrayidx195 to %struct.rtx_def**
  %106 = load %struct.rtx_def*, %struct.rtx_def** %rtx196, align 8
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %107 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %108 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %fld197 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1
  %arrayidx198 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld197, i32 0, i64 3
  %rtx199 = bitcast %union.rtunion_def* %arrayidx198 to %struct.rtx_def**
  %109 = load %struct.rtx_def*, %struct.rtx_def** %rtx199, align 8
  %call200 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %107, %struct.rtx_def* %109)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.193
  %cond = phi %struct.rtx_def* [ %106, %cond.true.193 ], [ %call200, %cond.false ]
  br label %cond.end.202

cond.false.201:                                   ; preds = %if.then.178
  br label %cond.end.202

cond.end.202:                                     ; preds = %cond.false.201, %cond.end
  %cond203 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false.201 ]
  store %struct.rtx_def* %cond203, %struct.rtx_def** %set, align 8
  br label %if.end.204

if.end.204:                                       ; preds = %cond.end.202, %if.then.175
  %110 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %tobool205 = icmp ne %struct.rtx_def* %110, null
  br i1 %tobool205, label %land.lhs.true.206, label %if.end.305

land.lhs.true.206:                                ; preds = %if.end.204
  %111 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld207 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i32 0, i32 1
  %arrayidx208 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld207, i32 0, i64 0
  %rtx209 = bitcast %union.rtunion_def* %arrayidx208 to %struct.rtx_def**
  %112 = load %struct.rtx_def*, %struct.rtx_def** %rtx209, align 8
  %113 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %cmp210 = icmp eq %struct.rtx_def* %112, %113
  br i1 %cmp210, label %land.lhs.true.212, label %if.end.305

land.lhs.true.212:                                ; preds = %land.lhs.true.206
  %114 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld213 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %114, i32 0, i32 1
  %arrayidx214 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld213, i32 0, i64 1
  %rtx215 = bitcast %union.rtunion_def* %arrayidx214 to %struct.rtx_def**
  %115 = load %struct.rtx_def*, %struct.rtx_def** %rtx215, align 8
  %116 = bitcast %struct.rtx_def* %115 to i32*
  %bf.load216 = load i32, i32* %116, align 8
  %bf.clear217 = and i32 %bf.load216, 65535
  %cmp218 = icmp eq i32 %bf.clear217, 75
  br i1 %cmp218, label %land.lhs.true.220, label %if.end.305

land.lhs.true.220:                                ; preds = %land.lhs.true.212
  %117 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld221 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %117, i32 0, i32 1
  %arrayidx222 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld221, i32 0, i64 1
  %rtx223 = bitcast %union.rtunion_def* %arrayidx222 to %struct.rtx_def**
  %118 = load %struct.rtx_def*, %struct.rtx_def** %rtx223, align 8
  %fld224 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1
  %arrayidx225 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld224, i32 0, i64 0
  %rtx226 = bitcast %union.rtunion_def* %arrayidx225 to %struct.rtx_def**
  %119 = load %struct.rtx_def*, %struct.rtx_def** %rtx226, align 8
  %120 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %cmp227 = icmp eq %struct.rtx_def* %119, %120
  br i1 %cmp227, label %land.lhs.true.229, label %if.end.305

land.lhs.true.229:                                ; preds = %land.lhs.true.220
  %121 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld230 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %121, i32 0, i32 1
  %arrayidx231 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld230, i32 0, i64 1
  %rtx232 = bitcast %union.rtunion_def* %arrayidx231 to %struct.rtx_def**
  %122 = load %struct.rtx_def*, %struct.rtx_def** %rtx232, align 8
  %fld233 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i32 0, i32 1
  %arrayidx234 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld233, i32 0, i64 1
  %rtx235 = bitcast %union.rtunion_def* %arrayidx234 to %struct.rtx_def**
  %123 = load %struct.rtx_def*, %struct.rtx_def** %rtx235, align 8
  %124 = bitcast %struct.rtx_def* %123 to i32*
  %bf.load236 = load i32, i32* %124, align 8
  %bf.clear237 = and i32 %bf.load236, 65535
  %cmp238 = icmp eq i32 %bf.clear237, 54
  br i1 %cmp238, label %if.then.240, label %if.end.305

if.then.240:                                      ; preds = %land.lhs.true.229
  %125 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld241 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %125, i32 0, i32 1
  %arrayidx242 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld241, i32 0, i64 1
  %rtx243 = bitcast %union.rtunion_def* %arrayidx242 to %struct.rtx_def**
  %126 = load %struct.rtx_def*, %struct.rtx_def** %rtx243, align 8
  %fld244 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1
  %arrayidx245 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld244, i32 0, i64 1
  %rtx246 = bitcast %union.rtunion_def* %arrayidx245 to %struct.rtx_def**
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rtx246, align 8
  store %struct.rtx_def* %127, %struct.rtx_def** %src3, align 8
  %128 = load %struct.rtx_def*, %struct.rtx_def** %src3, align 8
  %fld247 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1
  %arrayidx248 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld247, i32 0, i64 0
  %rtwint249 = bitcast %union.rtunion_def* %arrayidx248 to i64*
  %129 = load i64, i64* %rtwint249, align 8
  store i64 %129, i64* %added_offset, align 8
  %130 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld250 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1
  %arrayidx251 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld250, i32 0, i64 0
  %rtuint252 = bitcast %union.rtunion_def* %arrayidx251 to i32*
  %131 = load i32, i32* %rtuint252, align 4
  %idxprom253 = zext i32 %131 to i64
  %arrayidx254 = getelementptr inbounds [53 x i64], [53 x i64]* @reg_offset, i32 0, i64 %idxprom253
  %132 = load i64, i64* %arrayidx254, align 8
  store i64 %132, i64* %base_offset, align 8
  %133 = load i32, i32* %regno, align 4
  %idxprom255 = sext i32 %133 to i64
  %arrayidx256 = getelementptr inbounds [53 x i64], [53 x i64]* @reg_offset, i32 0, i64 %idxprom255
  %134 = load i64, i64* %arrayidx256, align 8
  store i64 %134, i64* %regno_offset, align 8
  %135 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %136 = bitcast %struct.rtx_def* %135 to i32*
  %bf.load258 = load i32, i32* %136, align 8
  %bf.lshr259 = lshr i32 %bf.load258, 16
  %bf.clear260 = and i32 %bf.lshr259, 255
  %137 = load i64, i64* %added_offset, align 8
  %138 = load i64, i64* %base_offset, align 8
  %add = add nsw i64 %137, %138
  %139 = load i64, i64* %regno_offset, align 8
  %sub261 = sub nsw i64 %add, %139
  %call262 = call i64 @sext_for_mode(i32 %bf.clear260, i64 %sub261)
  %call263 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call262)
  store %struct.rtx_def* %call263, %struct.rtx_def** %new_src257, align 8
  store i32 0, i32* %success264, align 4
  %140 = load %struct.rtx_def*, %struct.rtx_def** %new_src257, align 8
  %141 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp265 = icmp eq %struct.rtx_def* %140, %141
  br i1 %cmp265, label %if.then.267, label %if.else.272

if.then.267:                                      ; preds = %if.then.240
  %142 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %143 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld268 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1
  %arrayidx269 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld268, i32 0, i64 1
  %rtx270 = bitcast %union.rtunion_def* %arrayidx269 to %struct.rtx_def**
  %144 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %call271 = call i32 @validate_change(%struct.rtx_def* %142, %struct.rtx_def** %rtx270, %struct.rtx_def* %144, i32 0)
  store i32 %call271, i32* %success264, align 4
  br label %if.end.288

if.else.272:                                      ; preds = %if.then.240
  %145 = load %struct.rtx_def*, %struct.rtx_def** %new_src257, align 8
  %call273 = call i32 @rtx_cost(%struct.rtx_def* %145, i32 75)
  %146 = load %struct.rtx_def*, %struct.rtx_def** %src3, align 8
  %call274 = call i32 @rtx_cost(%struct.rtx_def* %146, i32 47)
  %add275 = add nsw i32 4, %call274
  %cmp276 = icmp slt i32 %call273, %add275
  br i1 %cmp276, label %land.lhs.true.278, label %if.end.287

land.lhs.true.278:                                ; preds = %if.else.272
  %147 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %148 = load %struct.rtx_def*, %struct.rtx_def** %new_src257, align 8
  %call279 = call i32 @have_add2_insn(%struct.rtx_def* %147, %struct.rtx_def* %148)
  %tobool280 = icmp ne i32 %call279, 0
  br i1 %tobool280, label %if.then.281, label %if.end.287

if.then.281:                                      ; preds = %land.lhs.true.278
  %149 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %150 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %fld282 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %150, i32 0, i32 1
  %arrayidx283 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld282, i32 0, i64 3
  %rtx284 = bitcast %union.rtunion_def* %arrayidx283 to %struct.rtx_def**
  %151 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %152 = load %struct.rtx_def*, %struct.rtx_def** %new_src257, align 8
  %call285 = call %struct.rtx_def* @gen_add2_insn(%struct.rtx_def* %151, %struct.rtx_def* %152)
  %call286 = call i32 @validate_change(%struct.rtx_def* %149, %struct.rtx_def** %rtx284, %struct.rtx_def* %call285, i32 0)
  store i32 %call286, i32* %success264, align 4
  br label %if.end.287

if.end.287:                                       ; preds = %if.then.281, %land.lhs.true.278, %if.else.272
  br label %if.end.288

if.end.288:                                       ; preds = %if.end.287, %if.then.267
  %153 = load i32, i32* %success264, align 4
  %tobool289 = icmp ne i32 %153, 0
  br i1 %tobool289, label %if.then.290, label %if.end.292

if.then.290:                                      ; preds = %if.end.288
  %154 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call291 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %154)
  br label %if.end.292

if.end.292:                                       ; preds = %if.then.290, %if.end.288
  %155 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  store %struct.rtx_def* %155, %struct.rtx_def** %insn, align 8
  %156 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %157 = bitcast %struct.rtx_def* %156 to i32*
  %bf.load293 = load i32, i32* %157, align 8
  %bf.lshr294 = lshr i32 %bf.load293, 16
  %bf.clear295 = and i32 %bf.lshr294, 255
  %158 = load i32, i32* %regno, align 4
  %idxprom296 = sext i32 %158 to i64
  %arrayidx297 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_mode, i32 0, i64 %idxprom296
  store i32 %bf.clear295, i32* %arrayidx297, align 4
  %159 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %160 = bitcast %struct.rtx_def* %159 to i32*
  %bf.load298 = load i32, i32* %160, align 8
  %bf.lshr299 = lshr i32 %bf.load298, 16
  %bf.clear300 = and i32 %bf.lshr299, 255
  %161 = load i64, i64* %added_offset, align 8
  %162 = load i64, i64* %base_offset, align 8
  %add301 = add nsw i64 %161, %162
  %call302 = call i64 @sext_for_mode(i32 %bf.clear300, i64 %add301)
  %163 = load i32, i32* %regno, align 4
  %idxprom303 = sext i32 %163 to i64
  %arrayidx304 = getelementptr inbounds [53 x i64], [53 x i64]* @reg_offset, i32 0, i64 %idxprom303
  store i64 %call302, i64* %arrayidx304, align 8
  br label %for.inc.372

if.end.305:                                       ; preds = %land.lhs.true.229, %land.lhs.true.220, %land.lhs.true.212, %land.lhs.true.206, %if.end.204
  br label %if.end.306

if.end.306:                                       ; preds = %if.end.305, %lor.lhs.false.158, %land.lhs.true.131, %land.lhs.true.121, %if.else.116
  br label %if.end.307

if.end.307:                                       ; preds = %if.end.306
  br label %if.end.308

if.end.308:                                       ; preds = %if.end.307, %lor.lhs.false, %if.then.24
  br label %if.end.309

if.end.309:                                       ; preds = %if.end.308, %land.lhs.true, %if.end.11
  %164 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld310 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %164, i32 0, i32 1
  %arrayidx311 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld310, i32 0, i64 6
  %rtx312 = bitcast %union.rtunion_def* %arrayidx311 to %struct.rtx_def**
  %165 = load %struct.rtx_def*, %struct.rtx_def** %rtx312, align 8
  store %struct.rtx_def* %165, %struct.rtx_def** %note, align 8
  br label %for.cond.313

for.cond.313:                                     ; preds = %for.inc.344, %if.end.309
  %166 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %tobool314 = icmp ne %struct.rtx_def* %166, null
  br i1 %tobool314, label %for.body.315, label %for.end.348

for.body.315:                                     ; preds = %for.cond.313
  %167 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %168 = bitcast %struct.rtx_def* %167 to i32*
  %bf.load316 = load i32, i32* %168, align 8
  %bf.lshr317 = lshr i32 %bf.load316, 16
  %bf.clear318 = and i32 %bf.lshr317, 255
  %cmp319 = icmp eq i32 %bf.clear318, 2
  br i1 %cmp319, label %land.lhs.true.321, label %if.end.343

land.lhs.true.321:                                ; preds = %for.body.315
  %169 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld322 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %169, i32 0, i32 1
  %arrayidx323 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld322, i32 0, i64 0
  %rtx324 = bitcast %union.rtunion_def* %arrayidx323 to %struct.rtx_def**
  %170 = load %struct.rtx_def*, %struct.rtx_def** %rtx324, align 8
  %171 = bitcast %struct.rtx_def* %170 to i32*
  %bf.load325 = load i32, i32* %171, align 8
  %bf.clear326 = and i32 %bf.load325, 65535
  %cmp327 = icmp eq i32 %bf.clear326, 61
  br i1 %cmp327, label %if.then.329, label %if.end.343

if.then.329:                                      ; preds = %land.lhs.true.321
  %172 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld331 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %172, i32 0, i32 1
  %arrayidx332 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld331, i32 0, i64 0
  %rtx333 = bitcast %union.rtunion_def* %arrayidx332 to %struct.rtx_def**
  %173 = load %struct.rtx_def*, %struct.rtx_def** %rtx333, align 8
  %fld334 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %173, i32 0, i32 1
  %arrayidx335 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld334, i32 0, i64 0
  %rtuint336 = bitcast %union.rtunion_def* %arrayidx335 to i32*
  %174 = load i32, i32* %rtuint336, align 4
  store i32 %174, i32* %regno330, align 4
  %175 = load i32, i32* %regno330, align 4
  %cmp337 = icmp slt i32 %175, 53
  br i1 %cmp337, label %if.then.339, label %if.end.342

if.then.339:                                      ; preds = %if.then.329
  %176 = load i32, i32* %regno330, align 4
  %idxprom340 = sext i32 %176 to i64
  %arrayidx341 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_set_luid, i32 0, i64 %idxprom340
  store i32 0, i32* %arrayidx341, align 4
  br label %if.end.342

if.end.342:                                       ; preds = %if.then.339, %if.then.329
  br label %if.end.343

if.end.343:                                       ; preds = %if.end.342, %land.lhs.true.321, %for.body.315
  br label %for.inc.344

for.inc.344:                                      ; preds = %if.end.343
  %177 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld345 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %177, i32 0, i32 1
  %arrayidx346 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld345, i32 0, i64 1
  %rtx347 = bitcast %union.rtunion_def* %arrayidx346 to %struct.rtx_def**
  %178 = load %struct.rtx_def*, %struct.rtx_def** %rtx347, align 8
  store %struct.rtx_def* %178, %struct.rtx_def** %note, align 8
  br label %for.cond.313

for.end.348:                                      ; preds = %for.cond.313
  %179 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld349 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %179, i32 0, i32 1
  %arrayidx350 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld349, i32 0, i64 3
  %rtx351 = bitcast %union.rtunion_def* %arrayidx350 to %struct.rtx_def**
  %180 = load %struct.rtx_def*, %struct.rtx_def** %rtx351, align 8
  call void @note_stores(%struct.rtx_def* %180, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @move2add_note_store, i8* null)
  %181 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %182 = bitcast %struct.rtx_def* %181 to i32*
  %bf.load352 = load i32, i32* %182, align 8
  %bf.clear353 = and i32 %bf.load352, 65535
  %cmp354 = icmp eq i32 %bf.clear353, 34
  br i1 %cmp354, label %if.then.356, label %if.end.371

if.then.356:                                      ; preds = %for.end.348
  store i32 52, i32* %i, align 4
  br label %for.cond.357

for.cond.357:                                     ; preds = %for.inc.368, %if.then.356
  %183 = load i32, i32* %i, align 4
  %cmp358 = icmp sge i32 %183, 0
  br i1 %cmp358, label %for.body.360, label %for.end.370

for.body.360:                                     ; preds = %for.cond.357
  %184 = load i32, i32* %i, align 4
  %idxprom361 = sext i32 %184 to i64
  %arrayidx362 = getelementptr inbounds [53 x i8], [53 x i8]* @call_used_regs, i32 0, i64 %idxprom361
  %185 = load i8, i8* %arrayidx362, align 1
  %tobool363 = icmp ne i8 %185, 0
  br i1 %tobool363, label %if.then.364, label %if.end.367

if.then.364:                                      ; preds = %for.body.360
  %186 = load i32, i32* %i, align 4
  %idxprom365 = sext i32 %186 to i64
  %arrayidx366 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_set_luid, i32 0, i64 %idxprom365
  store i32 0, i32* %arrayidx366, align 4
  br label %if.end.367

if.end.367:                                       ; preds = %if.then.364, %for.body.360
  br label %for.inc.368

for.inc.368:                                      ; preds = %if.end.367
  %187 = load i32, i32* %i, align 4
  %dec369 = add nsw i32 %187, -1
  store i32 %dec369, i32* %i, align 4
  br label %for.cond.357

for.end.370:                                      ; preds = %for.cond.357
  br label %if.end.371

if.end.371:                                       ; preds = %for.end.370, %for.end.348
  br label %for.inc.372

for.inc.372:                                      ; preds = %if.end.371, %if.end.292, %if.end.103, %if.then.10, %if.then
  %188 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld373 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %188, i32 0, i32 1
  %arrayidx374 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld373, i32 0, i64 2
  %rtx375 = bitcast %union.rtunion_def* %arrayidx374 to %struct.rtx_def**
  %189 = load %struct.rtx_def*, %struct.rtx_def** %rtx375, align 8
  store %struct.rtx_def* %189, %struct.rtx_def** %insn, align 8
  %190 = load i32, i32* @move2add_luid, align 4
  %inc376 = add nsw i32 %190, 1
  store i32 %inc376, i32* @move2add_luid, align 4
  br label %for.cond.1

for.end.377:                                      ; preds = %for.cond.1
  ret void
}

declare %struct.rtx_def* @gen_rtx_fmt_E(i32, i32, %struct.rtvec_def*) #1

declare %struct.rtvec_def* @gen_rtvec(i32, ...) #1

declare void @insert_insn_on_edge(%struct.rtx_def*, %struct.edge_def*) #1

declare void @commit_edge_insertions() #1

declare i32 @asm_noperands(%struct.rtx_def*) #1

declare i8* @decode_asm_operands(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def***, i8**, i32*) #1

; Function Attrs: nounwind uwtable
define internal void @set_label_offsets(%struct.rtx_def* %x, %struct.rtx_def* %insn, i32 %initial_p) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %initial_p.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %p = alloca %struct.elim_table*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store i32 %initial_p, i32* %initial_p.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %2 = load i32, i32* %code, align 4
  switch i32 %2, label %sw.default.209 [
    i32 67, label %sw.bb
    i32 36, label %sw.bb.3
    i32 33, label %sw.bb.72
    i32 32, label %sw.bb.76
    i32 34, label %sw.bb.76
    i32 39, label %sw.bb.98
    i32 44, label %sw.bb.98
    i32 45, label %sw.bb.98
    i32 47, label %sw.bb.119
  ]

sw.bb:                                            ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load1 = load i32, i32* %4, align 8
  %bf.lshr = lshr i32 %bf.load1, 27
  %bf.clear2 = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb
  br label %sw.epilog.210

if.end:                                           ; preds = %sw.bb
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %6, %struct.rtx_def** %x.addr, align 8
  br label %sw.bb.3

sw.bb.3:                                          ; preds = %entry, %if.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i32 0, i64 5
  %rtint = bitcast %union.rtunion_def* %arrayidx5 to i32*
  %8 = load i32, i32* %rtint, align 4
  %idxprom = sext i32 %8 to i64
  %9 = load i8*, i8** @offsets_known_at, align 8
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 %idxprom
  %10 = load i8, i8* %arrayidx6, align 1
  %tobool7 = icmp ne i8 %10, 0
  br i1 %tobool7, label %if.else, label %if.then.8

if.then.8:                                        ; preds = %sw.bb.3
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.8
  %11 = load i32, i32* %i, align 4
  %conv = zext i32 %11 to i64
  %cmp = icmp ult i64 %conv, 4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %initial_p.addr, align 4
  %tobool10 = icmp ne i32 %12, 0
  br i1 %tobool10, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %13 = load i32, i32* %i, align 4
  %idxprom11 = zext i32 %13 to i64
  %14 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx12 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %14, i64 %idxprom11
  %initial_offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %arrayidx12, i32 0, i32 2
  %15 = load i32, i32* %initial_offset, align 4
  br label %cond.end

cond.false:                                       ; preds = %for.body
  %16 = load i32, i32* %i, align 4
  %idxprom13 = zext i32 %16 to i64
  %17 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx14 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %17, i64 %idxprom13
  %offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %arrayidx14, i32 0, i32 5
  %18 = load i32, i32* %offset, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %15, %cond.true ], [ %18, %cond.false ]
  %19 = load i32, i32* %i, align 4
  %idxprom15 = zext i32 %19 to i64
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i32 0, i64 5
  %rtint18 = bitcast %union.rtunion_def* %arrayidx17 to i32*
  %21 = load i32, i32* %rtint18, align 4
  %idxprom19 = sext i32 %21 to i64
  %22 = load [4 x i32]*, [4 x i32]** @offsets_at, align 8
  %arrayidx20 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 %idxprom19
  %arrayidx21 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx20, i32 0, i64 %idxprom15
  store i32 %cond, i32* %arrayidx21, align 4
  br label %for.inc

for.inc:                                          ; preds = %cond.end
  %23 = load i32, i32* %i, align 4
  %inc = add i32 %23, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i32 0, i64 5
  %rtint24 = bitcast %union.rtunion_def* %arrayidx23 to i32*
  %25 = load i32, i32* %rtint24, align 4
  %idxprom25 = sext i32 %25 to i64
  %26 = load i8*, i8** @offsets_known_at, align 8
  %arrayidx26 = getelementptr inbounds i8, i8* %26, i64 %idxprom25
  store i8 1, i8* %arrayidx26, align 1
  br label %if.end.71

if.else:                                          ; preds = %sw.bb.3
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %28 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %cmp27 = icmp eq %struct.rtx_def* %27, %28
  br i1 %cmp27, label %land.lhs.true, label %if.else.37

land.lhs.true:                                    ; preds = %if.else
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %29)
  store %struct.rtx_def* %call, %struct.rtx_def** %tem, align 8
  %cmp29 = icmp ne %struct.rtx_def* %call, null
  br i1 %cmp29, label %land.lhs.true.31, label %if.else.37

land.lhs.true.31:                                 ; preds = %land.lhs.true
  %30 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load32 = load i32, i32* %31, align 8
  %bf.clear33 = and i32 %bf.load32, 65535
  %cmp34 = icmp eq i32 %bf.clear33, 35
  br i1 %cmp34, label %if.then.36, label %if.else.37

if.then.36:                                       ; preds = %land.lhs.true.31
  %32 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  call void @set_offsets_for_label(%struct.rtx_def* %32)
  br label %if.end.70

if.else.37:                                       ; preds = %land.lhs.true.31, %land.lhs.true, %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond.38

for.cond.38:                                      ; preds = %for.inc.67, %if.else.37
  %33 = load i32, i32* %i, align 4
  %conv39 = zext i32 %33 to i64
  %cmp40 = icmp ult i64 %conv39, 4
  br i1 %cmp40, label %for.body.42, label %for.end.69

for.body.42:                                      ; preds = %for.cond.38
  %34 = load i32, i32* %i, align 4
  %idxprom43 = zext i32 %34 to i64
  %35 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i32 0, i64 5
  %rtint46 = bitcast %union.rtunion_def* %arrayidx45 to i32*
  %36 = load i32, i32* %rtint46, align 4
  %idxprom47 = sext i32 %36 to i64
  %37 = load [4 x i32]*, [4 x i32]** @offsets_at, align 8
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %37, i64 %idxprom47
  %arrayidx49 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx48, i32 0, i64 %idxprom43
  %38 = load i32, i32* %arrayidx49, align 4
  %39 = load i32, i32* %initial_p.addr, align 4
  %tobool50 = icmp ne i32 %39, 0
  br i1 %tobool50, label %cond.true.51, label %cond.false.55

cond.true.51:                                     ; preds = %for.body.42
  %40 = load i32, i32* %i, align 4
  %idxprom52 = zext i32 %40 to i64
  %41 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx53 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %41, i64 %idxprom52
  %initial_offset54 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %arrayidx53, i32 0, i32 2
  %42 = load i32, i32* %initial_offset54, align 4
  br label %cond.end.59

cond.false.55:                                    ; preds = %for.body.42
  %43 = load i32, i32* %i, align 4
  %idxprom56 = zext i32 %43 to i64
  %44 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx57 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %44, i64 %idxprom56
  %offset58 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %arrayidx57, i32 0, i32 5
  %45 = load i32, i32* %offset58, align 4
  br label %cond.end.59

cond.end.59:                                      ; preds = %cond.false.55, %cond.true.51
  %cond60 = phi i32 [ %42, %cond.true.51 ], [ %45, %cond.false.55 ]
  %cmp61 = icmp ne i32 %38, %cond60
  br i1 %cmp61, label %if.then.63, label %if.end.66

if.then.63:                                       ; preds = %cond.end.59
  %46 = load i32, i32* %i, align 4
  %idxprom64 = zext i32 %46 to i64
  %47 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx65 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %47, i64 %idxprom64
  %can_eliminate = getelementptr inbounds %struct.elim_table, %struct.elim_table* %arrayidx65, i32 0, i32 3
  store i32 0, i32* %can_eliminate, align 4
  br label %if.end.66

if.end.66:                                        ; preds = %if.then.63, %cond.end.59
  br label %for.inc.67

for.inc.67:                                       ; preds = %if.end.66
  %48 = load i32, i32* %i, align 4
  %inc68 = add i32 %48, 1
  store i32 %inc68, i32* %i, align 4
  br label %for.cond.38

for.end.69:                                       ; preds = %for.cond.38
  br label %if.end.70

if.end.70:                                        ; preds = %for.end.69, %if.then.36
  br label %if.end.71

if.end.71:                                        ; preds = %if.end.70, %for.end
  br label %sw.epilog.210

sw.bb.72:                                         ; preds = %entry
  %49 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i32 0, i64 3
  %rtx75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rtx75, align 8
  %51 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %52 = load i32, i32* %initial_p.addr, align 4
  call void @set_label_offsets(%struct.rtx_def* %50, %struct.rtx_def* %51, i32 %52)
  br label %sw.bb.76

sw.bb.76:                                         ; preds = %entry, %entry, %sw.bb.72
  %53 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i32 0, i64 6
  %rtx79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx79, align 8
  store %struct.rtx_def* %54, %struct.rtx_def** %tem, align 8
  br label %for.cond.80

for.cond.80:                                      ; preds = %for.inc.93, %sw.bb.76
  %55 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %tobool81 = icmp ne %struct.rtx_def* %55, null
  br i1 %tobool81, label %for.body.82, label %for.end.97

for.body.82:                                      ; preds = %for.cond.80
  %56 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %57 = bitcast %struct.rtx_def* %56 to i32*
  %bf.load83 = load i32, i32* %57, align 8
  %bf.lshr84 = lshr i32 %bf.load83, 16
  %bf.clear85 = and i32 %bf.lshr84, 255
  %cmp86 = icmp eq i32 %bf.clear85, 13
  br i1 %cmp86, label %if.then.88, label %if.end.92

if.then.88:                                       ; preds = %for.body.82
  %58 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i32 0, i64 0
  %rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rtx91, align 8
  %60 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  call void @set_label_offsets(%struct.rtx_def* %59, %struct.rtx_def* %60, i32 1)
  br label %if.end.92

if.end.92:                                        ; preds = %if.then.88, %for.body.82
  br label %for.inc.93

for.inc.93:                                       ; preds = %if.end.92
  %61 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1
  %arrayidx95 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i32 0, i64 1
  %rtx96 = bitcast %union.rtunion_def* %arrayidx95 to %struct.rtx_def**
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rtx96, align 8
  store %struct.rtx_def* %62, %struct.rtx_def** %tem, align 8
  br label %for.cond.80

for.end.97:                                       ; preds = %for.cond.80
  br label %sw.epilog.210

sw.bb.98:                                         ; preds = %entry, %entry, %entry
  store i32 0, i32* %i, align 4
  br label %for.cond.99

for.cond.99:                                      ; preds = %for.inc.116, %sw.bb.98
  %63 = load i32, i32* %i, align 4
  %64 = load i32, i32* %code, align 4
  %cmp100 = icmp eq i32 %64, 45
  %conv101 = zext i1 %cmp100 to i32
  %idxprom102 = sext i32 %conv101 to i64
  %65 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1
  %arrayidx104 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld103, i32 0, i64 %idxprom102
  %rtvec = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtvec_def**
  %66 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %66, i32 0, i32 0
  %67 = load i32, i32* %num_elem, align 4
  %cmp105 = icmp ult i32 %63, %67
  br i1 %cmp105, label %for.body.107, label %for.end.118

for.body.107:                                     ; preds = %for.cond.99
  %68 = load i32, i32* %i, align 4
  %idxprom108 = zext i32 %68 to i64
  %69 = load i32, i32* %code, align 4
  %cmp109 = icmp eq i32 %69, 45
  %conv110 = zext i1 %cmp109 to i32
  %idxprom111 = sext i32 %conv110 to i64
  %70 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx113 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld112, i32 0, i64 %idxprom111
  %rtvec114 = bitcast %union.rtunion_def* %arrayidx113 to %struct.rtvec_def**
  %71 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec114, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %71, i32 0, i32 1
  %arrayidx115 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom108
  %72 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx115, align 8
  %73 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %74 = load i32, i32* %initial_p.addr, align 4
  call void @set_label_offsets(%struct.rtx_def* %72, %struct.rtx_def* %73, i32 %74)
  br label %for.inc.116

for.inc.116:                                      ; preds = %for.body.107
  %75 = load i32, i32* %i, align 4
  %inc117 = add i32 %75, 1
  store i32 %inc117, i32* %i, align 4
  br label %for.cond.99

for.end.118:                                      ; preds = %for.cond.99
  br label %sw.epilog.210

sw.bb.119:                                        ; preds = %entry
  %76 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %arrayidx121 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld120, i32 0, i64 0
  %rtx122 = bitcast %union.rtunion_def* %arrayidx121 to %struct.rtx_def**
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rtx122, align 8
  %78 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %cmp123 = icmp ne %struct.rtx_def* %77, %78
  br i1 %cmp123, label %if.then.125, label %if.end.126

if.then.125:                                      ; preds = %sw.bb.119
  br label %sw.epilog.210

if.end.126:                                       ; preds = %sw.bb.119
  %79 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1
  %arrayidx128 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld127, i32 0, i64 1
  %rtx129 = bitcast %union.rtunion_def* %arrayidx128 to %struct.rtx_def**
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rtx129, align 8
  %81 = bitcast %struct.rtx_def* %80 to i32*
  %bf.load130 = load i32, i32* %81, align 8
  %bf.clear131 = and i32 %bf.load130, 65535
  switch i32 %bf.clear131, label %sw.default [
    i32 59, label %sw.bb.132
    i32 51, label %sw.bb.132
    i32 67, label %sw.bb.133
    i32 72, label %sw.bb.140
  ]

sw.bb.132:                                        ; preds = %if.end.126, %if.end.126
  br label %sw.epilog.210

sw.bb.133:                                        ; preds = %if.end.126
  %82 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1
  %arrayidx135 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld134, i32 0, i64 1
  %rtx136 = bitcast %union.rtunion_def* %arrayidx135 to %struct.rtx_def**
  %83 = load %struct.rtx_def*, %struct.rtx_def** %rtx136, align 8
  %fld137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx138 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld137, i32 0, i64 0
  %rtx139 = bitcast %union.rtunion_def* %arrayidx138 to %struct.rtx_def**
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rtx139, align 8
  %85 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %86 = load i32, i32* %initial_p.addr, align 4
  call void @set_label_offsets(%struct.rtx_def* %84, %struct.rtx_def* %85, i32 %86)
  br label %sw.epilog.210

sw.bb.140:                                        ; preds = %if.end.126
  %87 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld141 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1
  %arrayidx142 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld141, i32 0, i64 1
  %rtx143 = bitcast %union.rtunion_def* %arrayidx142 to %struct.rtx_def**
  %88 = load %struct.rtx_def*, %struct.rtx_def** %rtx143, align 8
  %fld144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1
  %arrayidx145 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld144, i32 0, i64 1
  %rtx146 = bitcast %union.rtunion_def* %arrayidx145 to %struct.rtx_def**
  %89 = load %struct.rtx_def*, %struct.rtx_def** %rtx146, align 8
  store %struct.rtx_def* %89, %struct.rtx_def** %tem, align 8
  %90 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %91 = bitcast %struct.rtx_def* %90 to i32*
  %bf.load147 = load i32, i32* %91, align 8
  %bf.clear148 = and i32 %bf.load147, 65535
  %cmp149 = icmp eq i32 %bf.clear148, 67
  br i1 %cmp149, label %if.then.151, label %if.else.155

if.then.151:                                      ; preds = %sw.bb.140
  %92 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1
  %arrayidx153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld152, i32 0, i64 0
  %rtx154 = bitcast %union.rtunion_def* %arrayidx153 to %struct.rtx_def**
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rtx154, align 8
  %94 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %95 = load i32, i32* %initial_p.addr, align 4
  call void @set_label_offsets(%struct.rtx_def* %93, %struct.rtx_def* %94, i32 %95)
  br label %if.end.167

if.else.155:                                      ; preds = %sw.bb.140
  %96 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %97 = bitcast %struct.rtx_def* %96 to i32*
  %bf.load156 = load i32, i32* %97, align 8
  %bf.clear157 = and i32 %bf.load156, 65535
  %cmp158 = icmp ne i32 %bf.clear157, 59
  br i1 %cmp158, label %land.lhs.true.160, label %if.end.166

land.lhs.true.160:                                ; preds = %if.else.155
  %98 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %99 = bitcast %struct.rtx_def* %98 to i32*
  %bf.load161 = load i32, i32* %99, align 8
  %bf.clear162 = and i32 %bf.load161, 65535
  %cmp163 = icmp ne i32 %bf.clear162, 51
  br i1 %cmp163, label %if.then.165, label %if.end.166

if.then.165:                                      ; preds = %land.lhs.true.160
  br label %sw.epilog

if.end.166:                                       ; preds = %land.lhs.true.160, %if.else.155
  br label %if.end.167

if.end.167:                                       ; preds = %if.end.166, %if.then.151
  %100 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1
  %arrayidx169 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld168, i32 0, i64 1
  %rtx170 = bitcast %union.rtunion_def* %arrayidx169 to %struct.rtx_def**
  %101 = load %struct.rtx_def*, %struct.rtx_def** %rtx170, align 8
  %fld171 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i32 0, i32 1
  %arrayidx172 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld171, i32 0, i64 2
  %rtx173 = bitcast %union.rtunion_def* %arrayidx172 to %struct.rtx_def**
  %102 = load %struct.rtx_def*, %struct.rtx_def** %rtx173, align 8
  store %struct.rtx_def* %102, %struct.rtx_def** %tem, align 8
  %103 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %104 = bitcast %struct.rtx_def* %103 to i32*
  %bf.load174 = load i32, i32* %104, align 8
  %bf.clear175 = and i32 %bf.load174, 65535
  %cmp176 = icmp eq i32 %bf.clear175, 67
  br i1 %cmp176, label %if.then.178, label %if.else.182

if.then.178:                                      ; preds = %if.end.167
  %105 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld179 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1
  %arrayidx180 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld179, i32 0, i64 0
  %rtx181 = bitcast %union.rtunion_def* %arrayidx180 to %struct.rtx_def**
  %106 = load %struct.rtx_def*, %struct.rtx_def** %rtx181, align 8
  %107 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %108 = load i32, i32* %initial_p.addr, align 4
  call void @set_label_offsets(%struct.rtx_def* %106, %struct.rtx_def* %107, i32 %108)
  br label %if.end.194

if.else.182:                                      ; preds = %if.end.167
  %109 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %110 = bitcast %struct.rtx_def* %109 to i32*
  %bf.load183 = load i32, i32* %110, align 8
  %bf.clear184 = and i32 %bf.load183, 65535
  %cmp185 = icmp ne i32 %bf.clear184, 59
  br i1 %cmp185, label %land.lhs.true.187, label %if.end.193

land.lhs.true.187:                                ; preds = %if.else.182
  %111 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %112 = bitcast %struct.rtx_def* %111 to i32*
  %bf.load188 = load i32, i32* %112, align 8
  %bf.clear189 = and i32 %bf.load188, 65535
  %cmp190 = icmp ne i32 %bf.clear189, 51
  br i1 %cmp190, label %if.then.192, label %if.end.193

if.then.192:                                      ; preds = %land.lhs.true.187
  br label %sw.epilog

if.end.193:                                       ; preds = %land.lhs.true.187, %if.else.182
  br label %if.end.194

if.end.194:                                       ; preds = %if.end.193, %if.then.178
  br label %sw.epilog.210

sw.default:                                       ; preds = %if.end.126
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.then.192, %if.then.165
  %113 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %113, %struct.elim_table** %p, align 8
  br label %for.cond.195

for.cond.195:                                     ; preds = %for.inc.207, %sw.epilog
  %114 = load %struct.elim_table*, %struct.elim_table** %p, align 8
  %115 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx196 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %115, i64 4
  %cmp197 = icmp ult %struct.elim_table* %114, %arrayidx196
  br i1 %cmp197, label %for.body.199, label %for.end.208

for.body.199:                                     ; preds = %for.cond.195
  %116 = load %struct.elim_table*, %struct.elim_table** %p, align 8
  %offset200 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %116, i32 0, i32 5
  %117 = load i32, i32* %offset200, align 4
  %118 = load %struct.elim_table*, %struct.elim_table** %p, align 8
  %initial_offset201 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %118, i32 0, i32 2
  %119 = load i32, i32* %initial_offset201, align 4
  %cmp202 = icmp ne i32 %117, %119
  br i1 %cmp202, label %if.then.204, label %if.end.206

if.then.204:                                      ; preds = %for.body.199
  %120 = load %struct.elim_table*, %struct.elim_table** %p, align 8
  %can_eliminate205 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %120, i32 0, i32 3
  store i32 0, i32* %can_eliminate205, align 4
  br label %if.end.206

if.end.206:                                       ; preds = %if.then.204, %for.body.199
  br label %for.inc.207

for.inc.207:                                      ; preds = %if.end.206
  %121 = load %struct.elim_table*, %struct.elim_table** %p, align 8
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %121, i32 1
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %p, align 8
  br label %for.cond.195

for.end.208:                                      ; preds = %for.cond.195
  br label %sw.epilog.210

sw.default.209:                                   ; preds = %entry
  br label %sw.epilog.210

sw.epilog.210:                                    ; preds = %if.then, %if.end.71, %for.end.97, %for.end.118, %if.then.125, %sw.bb.132, %sw.bb.133, %if.end.194, %sw.default.209, %for.end.208
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @eliminate_regs_in_insn(%struct.rtx_def* %insn, i32 %replace) #0 {
entry:
  %retval = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %replace.addr = alloca i32, align 4
  %icode = alloca i32, align 4
  %old_body = alloca %struct.rtx_def*, align 8
  %insn_is_asm = alloca i32, align 4
  %old_set = alloca %struct.rtx_def*, align 8
  %new_body = alloca %struct.rtx_def*, align 8
  %val = alloca i32, align 4
  %i = alloca i32, align 4
  %any_changes = alloca i32, align 4
  %substed_operand = alloca [30 x %struct.rtx_def*], align 16
  %orig_operand = alloca [30 x %struct.rtx_def*], align 16
  %ep = alloca %struct.elim_table*, align 8
  %base = alloca %struct.rtx_def*, align 8
  %base_insn = alloca %struct.rtx_def*, align 8
  %offset = alloca i32, align 4
  %prev_insn = alloca %struct.rtx_def*, align 8
  %prev_set = alloca %struct.rtx_def*, align 8
  %src = alloca %struct.rtx_def*, align 8
  %reg = alloca %struct.rtx_def*, align 8
  %offset330 = alloca i32, align 4
  %num_clobbers = alloca i32, align 4
  %vec = alloca %struct.rtvec_def*, align 8
  %new_icode = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store i32 %replace, i32* %replace.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32, i32* %rtint, align 4
  %cmp = icmp sge i32 %1, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1, i32 0, i64 4
  %rtint3 = bitcast %union.rtunion_def* %arrayidx2 to i32*
  %3 = load i32, i32* %rtint3, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call = call i32 @recog_memoized_1(%struct.rtx_def* %4)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ %call, %cond.false ]
  store i32 %cond, i32* %icode, align 4
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %6, %struct.rtx_def** %old_body, align 8
  %7 = load %struct.rtx_def*, %struct.rtx_def** %old_body, align 8
  %call6 = call i32 @asm_noperands(%struct.rtx_def* %7)
  %cmp7 = icmp sge i32 %call6, 0
  %conv = zext i1 %cmp7 to i32
  store i32 %conv, i32* %insn_is_asm, align 4
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load = load i32, i32* %9, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom = sext i32 %bf.clear to i64
  %arrayidx8 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %10 = load i8, i8* %arrayidx8, align 1
  %conv9 = sext i8 %10 to i32
  %cmp10 = icmp eq i32 %conv9, 105
  br i1 %cmp10, label %cond.true.12, label %cond.false.31

cond.true.12:                                     ; preds = %cond.end
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i32 0, i64 3
  %rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rtx15, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load16 = load i32, i32* %13, align 8
  %bf.clear17 = and i32 %bf.load16, 65535
  %cmp18 = icmp eq i32 %bf.clear17, 47
  br i1 %cmp18, label %cond.true.20, label %cond.false.24

cond.true.20:                                     ; preds = %cond.true.12
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i32 0, i64 3
  %rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rtx23, align 8
  br label %cond.end.29

cond.false.24:                                    ; preds = %cond.true.12
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i32 0, i64 3
  %rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rtx27, align 8
  %call28 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %16, %struct.rtx_def* %18)
  br label %cond.end.29

cond.end.29:                                      ; preds = %cond.false.24, %cond.true.20
  %cond30 = phi %struct.rtx_def* [ %15, %cond.true.20 ], [ %call28, %cond.false.24 ]
  br label %cond.end.32

cond.false.31:                                    ; preds = %cond.end
  br label %cond.end.32

cond.end.32:                                      ; preds = %cond.false.31, %cond.end.29
  %cond33 = phi %struct.rtx_def* [ %cond30, %cond.end.29 ], [ null, %cond.false.31 ]
  store %struct.rtx_def* %cond33, %struct.rtx_def** %old_set, align 8
  store i32 0, i32* %val, align 4
  %19 = load i32, i32* %insn_is_asm, align 4
  %tobool = icmp ne i32 %19, 0
  br i1 %tobool, label %if.end.75, label %land.lhs.true

land.lhs.true:                                    ; preds = %cond.end.32
  %20 = load i32, i32* %icode, align 4
  %cmp34 = icmp slt i32 %20, 0
  br i1 %cmp34, label %if.then, label %if.end.75

if.then:                                          ; preds = %land.lhs.true
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i32 0, i64 3
  %rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rtx38, align 8
  %23 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load39 = load i32, i32* %23, align 8
  %bf.clear40 = and i32 %bf.load39, 65535
  %cmp41 = icmp eq i32 %bf.clear40, 48
  br i1 %cmp41, label %if.then.74, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i32 0, i64 3
  %rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rtx45, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load46 = load i32, i32* %26, align 8
  %bf.clear47 = and i32 %bf.load46, 65535
  %cmp48 = icmp eq i32 %bf.clear47, 49
  br i1 %cmp48, label %if.then.74, label %lor.lhs.false.50

lor.lhs.false.50:                                 ; preds = %lor.lhs.false
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i32 0, i64 3
  %rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rtx53, align 8
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load54 = load i32, i32* %29, align 8
  %bf.clear55 = and i32 %bf.load54, 65535
  %cmp56 = icmp eq i32 %bf.clear55, 44
  br i1 %cmp56, label %if.then.74, label %lor.lhs.false.58

lor.lhs.false.58:                                 ; preds = %lor.lhs.false.50
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i32 0, i64 3
  %rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rtx61, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load62 = load i32, i32* %32, align 8
  %bf.clear63 = and i32 %bf.load62, 65535
  %cmp64 = icmp eq i32 %bf.clear63, 45
  br i1 %cmp64, label %if.then.74, label %lor.lhs.false.66

lor.lhs.false.66:                                 ; preds = %lor.lhs.false.58
  %33 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i32 0, i64 3
  %rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rtx69, align 8
  %35 = bitcast %struct.rtx_def* %34 to i32*
  %bf.load70 = load i32, i32* %35, align 8
  %bf.clear71 = and i32 %bf.load70, 65535
  %cmp72 = icmp eq i32 %bf.clear71, 40
  br i1 %cmp72, label %if.then.74, label %if.end

if.then.74:                                       ; preds = %lor.lhs.false.66, %lor.lhs.false.58, %lor.lhs.false.50, %lor.lhs.false, %if.then
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.66
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 2939, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.eliminate_regs_in_insn, i32 0, i32 0)) #5
  unreachable

if.end.75:                                        ; preds = %land.lhs.true, %cond.end.32
  %36 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %cmp76 = icmp ne %struct.rtx_def* %36, null
  br i1 %cmp76, label %land.lhs.true.78, label %if.end.271

land.lhs.true.78:                                 ; preds = %if.end.75
  %37 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1
  %arrayidx80 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld79, i32 0, i64 0
  %rtx81 = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rtx81, align 8
  %39 = bitcast %struct.rtx_def* %38 to i32*
  %bf.load82 = load i32, i32* %39, align 8
  %bf.clear83 = and i32 %bf.load82, 65535
  %cmp84 = icmp eq i32 %bf.clear83, 61
  br i1 %cmp84, label %land.lhs.true.86, label %if.end.271

land.lhs.true.86:                                 ; preds = %land.lhs.true.78
  %40 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1
  %arrayidx88 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld87, i32 0, i64 0
  %rtx89 = bitcast %union.rtunion_def* %arrayidx88 to %struct.rtx_def**
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rtx89, align 8
  %fld90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx91 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld90, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx91 to i32*
  %42 = load i32, i32* %rtuint, align 4
  %cmp92 = icmp ult i32 %42, 53
  br i1 %cmp92, label %if.then.94, label %if.end.271

if.then.94:                                       ; preds = %land.lhs.true.86
  %43 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %43, %struct.elim_table** %ep, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.94
  %44 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %45 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx95 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %45, i64 4
  %cmp96 = icmp ult %struct.elim_table* %44, %arrayidx95
  br i1 %cmp96, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %46 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %from_rtx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %46, i32 0, i32 8
  %47 = load %struct.rtx_def*, %struct.rtx_def** %from_rtx, align 8
  %48 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld98 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1
  %arrayidx99 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld98, i32 0, i64 0
  %rtx100 = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtx_def**
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rtx100, align 8
  %cmp101 = icmp eq %struct.rtx_def* %47, %49
  br i1 %cmp101, label %land.lhs.true.103, label %if.end.270

land.lhs.true.103:                                ; preds = %for.body
  %50 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate = getelementptr inbounds %struct.elim_table, %struct.elim_table* %50, i32 0, i32 3
  %51 = load i32, i32* %can_eliminate, align 4
  %tobool104 = icmp ne i32 %51, 0
  br i1 %tobool104, label %if.then.105, label %if.end.270

if.then.105:                                      ; preds = %land.lhs.true.103
  %52 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %from = getelementptr inbounds %struct.elim_table, %struct.elim_table* %52, i32 0, i32 0
  %53 = load i32, i32* %from, align 4
  %cmp106 = icmp eq i32 %53, 20
  br i1 %cmp106, label %land.lhs.true.108, label %if.end.266

land.lhs.true.108:                                ; preds = %if.then.105
  %54 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to = getelementptr inbounds %struct.elim_table, %struct.elim_table* %54, i32 0, i32 1
  %55 = load i32, i32* %to, align 4
  %cmp109 = icmp eq i32 %55, 6
  br i1 %cmp109, label %if.then.111, label %if.end.266

if.then.111:                                      ; preds = %land.lhs.true.108
  %56 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1
  %arrayidx113 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld112, i32 0, i64 1
  %rtx114 = bitcast %union.rtunion_def* %arrayidx113 to %struct.rtx_def**
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rtx114, align 8
  store %struct.rtx_def* %57, %struct.rtx_def** %base, align 8
  %58 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  store %struct.rtx_def* %58, %struct.rtx_def** %base_insn, align 8
  store i32 0, i32* %offset, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end.187, %if.then.111
  %59 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %60 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to_rtx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %60, i32 0, i32 9
  %61 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx, align 8
  %cmp115 = icmp ne %struct.rtx_def* %59, %61
  br i1 %cmp115, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %62 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %63 = bitcast %struct.rtx_def* %62 to i32*
  %bf.load117 = load i32, i32* %63, align 8
  %bf.clear118 = and i32 %bf.load117, 65535
  %cmp119 = icmp eq i32 %bf.clear118, 75
  br i1 %cmp119, label %land.lhs.true.121, label %if.else

land.lhs.true.121:                                ; preds = %while.body
  %64 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %fld122 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1
  %arrayidx123 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld122, i32 0, i64 1
  %rtx124 = bitcast %union.rtunion_def* %arrayidx123 to %struct.rtx_def**
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rtx124, align 8
  %66 = bitcast %struct.rtx_def* %65 to i32*
  %bf.load125 = load i32, i32* %66, align 8
  %bf.clear126 = and i32 %bf.load125, 65535
  %cmp127 = icmp eq i32 %bf.clear126, 54
  br i1 %cmp127, label %if.then.129, label %if.else

if.then.129:                                      ; preds = %land.lhs.true.121
  %67 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %fld130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1
  %arrayidx131 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld130, i32 0, i64 1
  %rtx132 = bitcast %union.rtunion_def* %arrayidx131 to %struct.rtx_def**
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rtx132, align 8
  %fld133 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1
  %arrayidx134 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld133, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx134 to i64*
  %69 = load i64, i64* %rtwint, align 8
  %70 = load i32, i32* %offset, align 4
  %conv135 = sext i32 %70 to i64
  %add = add nsw i64 %conv135, %69
  %conv136 = trunc i64 %add to i32
  store i32 %conv136, i32* %offset, align 4
  %71 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %fld137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1
  %arrayidx138 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld137, i32 0, i64 0
  %rtx139 = bitcast %union.rtunion_def* %arrayidx138 to %struct.rtx_def**
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rtx139, align 8
  store %struct.rtx_def* %72, %struct.rtx_def** %base, align 8
  br label %if.end.187

if.else:                                          ; preds = %land.lhs.true.121, %while.body
  %73 = load %struct.rtx_def*, %struct.rtx_def** %base_insn, align 8
  %call140 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %73)
  store %struct.rtx_def* %call140, %struct.rtx_def** %prev_insn, align 8
  %cmp141 = icmp ne %struct.rtx_def* %call140, null
  br i1 %cmp141, label %land.lhs.true.143, label %if.else.185

land.lhs.true.143:                                ; preds = %if.else
  %74 = load %struct.rtx_def*, %struct.rtx_def** %prev_insn, align 8
  %75 = bitcast %struct.rtx_def* %74 to i32*
  %bf.load144 = load i32, i32* %75, align 8
  %bf.clear145 = and i32 %bf.load144, 65535
  %idxprom146 = sext i32 %bf.clear145 to i64
  %arrayidx147 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom146
  %76 = load i8, i8* %arrayidx147, align 1
  %conv148 = sext i8 %76 to i32
  %cmp149 = icmp eq i32 %conv148, 105
  br i1 %cmp149, label %cond.true.151, label %cond.false.170

cond.true.151:                                    ; preds = %land.lhs.true.143
  %77 = load %struct.rtx_def*, %struct.rtx_def** %prev_insn, align 8
  %fld152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1
  %arrayidx153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld152, i32 0, i64 3
  %rtx154 = bitcast %union.rtunion_def* %arrayidx153 to %struct.rtx_def**
  %78 = load %struct.rtx_def*, %struct.rtx_def** %rtx154, align 8
  %79 = bitcast %struct.rtx_def* %78 to i32*
  %bf.load155 = load i32, i32* %79, align 8
  %bf.clear156 = and i32 %bf.load155, 65535
  %cmp157 = icmp eq i32 %bf.clear156, 47
  br i1 %cmp157, label %cond.true.159, label %cond.false.163

cond.true.159:                                    ; preds = %cond.true.151
  %80 = load %struct.rtx_def*, %struct.rtx_def** %prev_insn, align 8
  %fld160 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1
  %arrayidx161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld160, i32 0, i64 3
  %rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rtx162, align 8
  br label %cond.end.168

cond.false.163:                                   ; preds = %cond.true.151
  %82 = load %struct.rtx_def*, %struct.rtx_def** %prev_insn, align 8
  %83 = load %struct.rtx_def*, %struct.rtx_def** %prev_insn, align 8
  %fld164 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx165 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld164, i32 0, i64 3
  %rtx166 = bitcast %union.rtunion_def* %arrayidx165 to %struct.rtx_def**
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rtx166, align 8
  %call167 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %82, %struct.rtx_def* %84)
  br label %cond.end.168

cond.end.168:                                     ; preds = %cond.false.163, %cond.true.159
  %cond169 = phi %struct.rtx_def* [ %81, %cond.true.159 ], [ %call167, %cond.false.163 ]
  br label %cond.end.171

cond.false.170:                                   ; preds = %land.lhs.true.143
  br label %cond.end.171

cond.end.171:                                     ; preds = %cond.false.170, %cond.end.168
  %cond172 = phi %struct.rtx_def* [ %cond169, %cond.end.168 ], [ null, %cond.false.170 ]
  store %struct.rtx_def* %cond172, %struct.rtx_def** %prev_set, align 8
  %cmp173 = icmp ne %struct.rtx_def* %cond172, null
  br i1 %cmp173, label %land.lhs.true.175, label %if.else.185

land.lhs.true.175:                                ; preds = %cond.end.171
  %85 = load %struct.rtx_def*, %struct.rtx_def** %prev_set, align 8
  %fld176 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1
  %arrayidx177 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld176, i32 0, i64 0
  %rtx178 = bitcast %union.rtunion_def* %arrayidx177 to %struct.rtx_def**
  %86 = load %struct.rtx_def*, %struct.rtx_def** %rtx178, align 8
  %87 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %call179 = call i32 @rtx_equal_p(%struct.rtx_def* %86, %struct.rtx_def* %87)
  %tobool180 = icmp ne i32 %call179, 0
  br i1 %tobool180, label %if.then.181, label %if.else.185

if.then.181:                                      ; preds = %land.lhs.true.175
  %88 = load %struct.rtx_def*, %struct.rtx_def** %prev_set, align 8
  %fld182 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1
  %arrayidx183 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld182, i32 0, i64 1
  %rtx184 = bitcast %union.rtunion_def* %arrayidx183 to %struct.rtx_def**
  %89 = load %struct.rtx_def*, %struct.rtx_def** %rtx184, align 8
  store %struct.rtx_def* %89, %struct.rtx_def** %base, align 8
  %90 = load %struct.rtx_def*, %struct.rtx_def** %prev_insn, align 8
  store %struct.rtx_def* %90, %struct.rtx_def** %base_insn, align 8
  br label %if.end.186

if.else.185:                                      ; preds = %land.lhs.true.175, %cond.end.171, %if.else
  br label %while.end

if.end.186:                                       ; preds = %if.then.181
  br label %if.end.187

if.end.187:                                       ; preds = %if.end.186, %if.then.129
  br label %while.cond

while.end:                                        ; preds = %if.else.185, %while.cond
  %91 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %92 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to_rtx188 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %92, i32 0, i32 9
  %93 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx188, align 8
  %cmp189 = icmp eq %struct.rtx_def* %91, %93
  br i1 %cmp189, label %if.then.191, label %if.end.265

if.then.191:                                      ; preds = %while.end
  %94 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to_rtx192 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %94, i32 0, i32 9
  %95 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx192, align 8
  %96 = load i32, i32* %offset, align 4
  %97 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %offset193 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %97, i32 0, i32 5
  %98 = load i32, i32* %offset193, align 4
  %sub = sub nsw i32 %96, %98
  %conv194 = sext i32 %sub to i64
  %call195 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %95, i64 %conv194)
  store %struct.rtx_def* %call195, %struct.rtx_def** %src, align 8
  %99 = load %struct.rtx_def*, %struct.rtx_def** %old_body, align 8
  store %struct.rtx_def* %99, %struct.rtx_def** %new_body, align 8
  %100 = load i32, i32* %replace.addr, align 4
  %tobool196 = icmp ne i32 %100, 0
  br i1 %tobool196, label %if.end.212, label %if.then.197

if.then.197:                                      ; preds = %if.then.191
  %101 = load %struct.rtx_def*, %struct.rtx_def** %old_body, align 8
  %call198 = call %struct.rtx_def* @copy_insn(%struct.rtx_def* %101)
  store %struct.rtx_def* %call198, %struct.rtx_def** %new_body, align 8
  %102 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld199 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1
  %arrayidx200 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld199, i32 0, i64 6
  %rtx201 = bitcast %union.rtunion_def* %arrayidx200 to %struct.rtx_def**
  %103 = load %struct.rtx_def*, %struct.rtx_def** %rtx201, align 8
  %tobool202 = icmp ne %struct.rtx_def* %103, null
  br i1 %tobool202, label %if.then.203, label %if.end.211

if.then.203:                                      ; preds = %if.then.197
  %104 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld204 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %104, i32 0, i32 1
  %arrayidx205 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld204, i32 0, i64 6
  %rtx206 = bitcast %union.rtunion_def* %arrayidx205 to %struct.rtx_def**
  %105 = load %struct.rtx_def*, %struct.rtx_def** %rtx206, align 8
  %call207 = call %struct.rtx_def* @copy_insn_1(%struct.rtx_def* %105)
  %106 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld208 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %106, i32 0, i32 1
  %arrayidx209 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld208, i32 0, i64 6
  %rtx210 = bitcast %union.rtunion_def* %arrayidx209 to %struct.rtx_def**
  store %struct.rtx_def* %call207, %struct.rtx_def** %rtx210, align 8
  br label %if.end.211

if.end.211:                                       ; preds = %if.then.203, %if.then.197
  br label %if.end.212

if.end.212:                                       ; preds = %if.end.211, %if.then.191
  %107 = load %struct.rtx_def*, %struct.rtx_def** %new_body, align 8
  %108 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld213 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1
  %arrayidx214 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld213, i32 0, i64 3
  %rtx215 = bitcast %union.rtunion_def* %arrayidx214 to %struct.rtx_def**
  store %struct.rtx_def* %107, %struct.rtx_def** %rtx215, align 8
  %109 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %110 = bitcast %struct.rtx_def* %109 to i32*
  %bf.load216 = load i32, i32* %110, align 8
  %bf.clear217 = and i32 %bf.load216, 65535
  %idxprom218 = sext i32 %bf.clear217 to i64
  %arrayidx219 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom218
  %111 = load i8, i8* %arrayidx219, align 1
  %conv220 = sext i8 %111 to i32
  %cmp221 = icmp eq i32 %conv220, 105
  br i1 %cmp221, label %cond.true.223, label %cond.false.242

cond.true.223:                                    ; preds = %if.end.212
  %112 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld224 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1
  %arrayidx225 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld224, i32 0, i64 3
  %rtx226 = bitcast %union.rtunion_def* %arrayidx225 to %struct.rtx_def**
  %113 = load %struct.rtx_def*, %struct.rtx_def** %rtx226, align 8
  %114 = bitcast %struct.rtx_def* %113 to i32*
  %bf.load227 = load i32, i32* %114, align 8
  %bf.clear228 = and i32 %bf.load227, 65535
  %cmp229 = icmp eq i32 %bf.clear228, 47
  br i1 %cmp229, label %cond.true.231, label %cond.false.235

cond.true.231:                                    ; preds = %cond.true.223
  %115 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld232 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1
  %arrayidx233 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld232, i32 0, i64 3
  %rtx234 = bitcast %union.rtunion_def* %arrayidx233 to %struct.rtx_def**
  %116 = load %struct.rtx_def*, %struct.rtx_def** %rtx234, align 8
  br label %cond.end.240

cond.false.235:                                   ; preds = %cond.true.223
  %117 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %118 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1
  %arrayidx237 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld236, i32 0, i64 3
  %rtx238 = bitcast %union.rtunion_def* %arrayidx237 to %struct.rtx_def**
  %119 = load %struct.rtx_def*, %struct.rtx_def** %rtx238, align 8
  %call239 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %117, %struct.rtx_def* %119)
  br label %cond.end.240

cond.end.240:                                     ; preds = %cond.false.235, %cond.true.231
  %cond241 = phi %struct.rtx_def* [ %116, %cond.true.231 ], [ %call239, %cond.false.235 ]
  br label %cond.end.243

cond.false.242:                                   ; preds = %if.end.212
  br label %cond.end.243

cond.end.243:                                     ; preds = %cond.false.242, %cond.end.240
  %cond244 = phi %struct.rtx_def* [ %cond241, %cond.end.240 ], [ null, %cond.false.242 ]
  store %struct.rtx_def* %cond244, %struct.rtx_def** %old_set, align 8
  %120 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %121 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld245 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %121, i32 0, i32 1
  %arrayidx246 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld245, i32 0, i64 1
  %rtx247 = bitcast %union.rtunion_def* %arrayidx246 to %struct.rtx_def**
  %122 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %call248 = call i32 @validate_change(%struct.rtx_def* %120, %struct.rtx_def** %rtx247, %struct.rtx_def* %122, i32 1)
  %123 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %124 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld249 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1
  %arrayidx250 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld249, i32 0, i64 0
  %rtx251 = bitcast %union.rtunion_def* %arrayidx250 to %struct.rtx_def**
  %125 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to_rtx252 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %125, i32 0, i32 9
  %126 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx252, align 8
  %call253 = call i32 @validate_change(%struct.rtx_def* %123, %struct.rtx_def** %rtx251, %struct.rtx_def* %126, i32 1)
  %call254 = call i32 @apply_change_group()
  %tobool255 = icmp ne i32 %call254, 0
  br i1 %tobool255, label %if.end.264, label %if.then.256

if.then.256:                                      ; preds = %cond.end.243
  %127 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %128 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld257 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1
  %arrayidx258 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld257, i32 0, i64 1
  %rtx259 = bitcast %union.rtunion_def* %arrayidx258 to %struct.rtx_def**
  store %struct.rtx_def* %127, %struct.rtx_def** %rtx259, align 8
  %129 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to_rtx260 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %129, i32 0, i32 9
  %130 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx260, align 8
  %131 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld261 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i32 0, i32 1
  %arrayidx262 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld261, i32 0, i64 0
  %rtx263 = bitcast %union.rtunion_def* %arrayidx262 to %struct.rtx_def**
  store %struct.rtx_def* %130, %struct.rtx_def** %rtx263, align 8
  br label %if.end.264

if.end.264:                                       ; preds = %if.then.256, %cond.end.243
  store i32 1, i32* %val, align 4
  br label %done

if.end.265:                                       ; preds = %while.end
  br label %if.end.266

if.end.266:                                       ; preds = %if.end.265, %land.lhs.true.108, %if.then.105
  %132 = load i32, i32* %replace.addr, align 4
  %tobool267 = icmp ne i32 %132, 0
  br i1 %tobool267, label %if.then.268, label %if.end.269

if.then.268:                                      ; preds = %if.end.266
  %133 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  call void @delete_dead_insn(%struct.rtx_def* %133)
  store i32 1, i32* %retval
  br label %return

if.end.269:                                       ; preds = %if.end.266
  store i32 1, i32* %val, align 4
  br label %done

if.end.270:                                       ; preds = %land.lhs.true.103, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.270
  %134 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %134, i32 1
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.271

if.end.271:                                       ; preds = %for.end, %land.lhs.true.86, %land.lhs.true.78, %if.end.75
  %135 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %tobool272 = icmp ne %struct.rtx_def* %135, null
  br i1 %tobool272, label %land.lhs.true.273, label %if.end.469

land.lhs.true.273:                                ; preds = %if.end.271
  %136 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld274 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1
  %arrayidx275 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld274, i32 0, i64 0
  %rtx276 = bitcast %union.rtunion_def* %arrayidx275 to %struct.rtx_def**
  %137 = load %struct.rtx_def*, %struct.rtx_def** %rtx276, align 8
  %138 = bitcast %struct.rtx_def* %137 to i32*
  %bf.load277 = load i32, i32* %138, align 8
  %bf.clear278 = and i32 %bf.load277, 65535
  %cmp279 = icmp eq i32 %bf.clear278, 61
  br i1 %cmp279, label %land.lhs.true.281, label %if.end.469

land.lhs.true.281:                                ; preds = %land.lhs.true.273
  %139 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld282 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1
  %arrayidx283 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld282, i32 0, i64 1
  %rtx284 = bitcast %union.rtunion_def* %arrayidx283 to %struct.rtx_def**
  %140 = load %struct.rtx_def*, %struct.rtx_def** %rtx284, align 8
  %141 = bitcast %struct.rtx_def* %140 to i32*
  %bf.load285 = load i32, i32* %141, align 8
  %bf.clear286 = and i32 %bf.load285, 65535
  %cmp287 = icmp eq i32 %bf.clear286, 75
  br i1 %cmp287, label %land.lhs.true.289, label %if.end.469

land.lhs.true.289:                                ; preds = %land.lhs.true.281
  %142 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld290 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i32 0, i32 1
  %arrayidx291 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld290, i32 0, i64 1
  %rtx292 = bitcast %union.rtunion_def* %arrayidx291 to %struct.rtx_def**
  %143 = load %struct.rtx_def*, %struct.rtx_def** %rtx292, align 8
  %fld293 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1
  %arrayidx294 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld293, i32 0, i64 0
  %rtx295 = bitcast %union.rtunion_def* %arrayidx294 to %struct.rtx_def**
  %144 = load %struct.rtx_def*, %struct.rtx_def** %rtx295, align 8
  %145 = bitcast %struct.rtx_def* %144 to i32*
  %bf.load296 = load i32, i32* %145, align 8
  %bf.clear297 = and i32 %bf.load296, 65535
  %cmp298 = icmp eq i32 %bf.clear297, 61
  br i1 %cmp298, label %land.lhs.true.300, label %if.end.469

land.lhs.true.300:                                ; preds = %land.lhs.true.289
  %146 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld301 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %146, i32 0, i32 1
  %arrayidx302 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld301, i32 0, i64 1
  %rtx303 = bitcast %union.rtunion_def* %arrayidx302 to %struct.rtx_def**
  %147 = load %struct.rtx_def*, %struct.rtx_def** %rtx303, align 8
  %fld304 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %147, i32 0, i32 1
  %arrayidx305 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld304, i32 0, i64 1
  %rtx306 = bitcast %union.rtunion_def* %arrayidx305 to %struct.rtx_def**
  %148 = load %struct.rtx_def*, %struct.rtx_def** %rtx306, align 8
  %149 = bitcast %struct.rtx_def* %148 to i32*
  %bf.load307 = load i32, i32* %149, align 8
  %bf.clear308 = and i32 %bf.load307, 65535
  %cmp309 = icmp eq i32 %bf.clear308, 54
  br i1 %cmp309, label %land.lhs.true.311, label %if.end.469

land.lhs.true.311:                                ; preds = %land.lhs.true.300
  %150 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld312 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %150, i32 0, i32 1
  %arrayidx313 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld312, i32 0, i64 1
  %rtx314 = bitcast %union.rtunion_def* %arrayidx313 to %struct.rtx_def**
  %151 = load %struct.rtx_def*, %struct.rtx_def** %rtx314, align 8
  %fld315 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %151, i32 0, i32 1
  %arrayidx316 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld315, i32 0, i64 0
  %rtx317 = bitcast %union.rtunion_def* %arrayidx316 to %struct.rtx_def**
  %152 = load %struct.rtx_def*, %struct.rtx_def** %rtx317, align 8
  %fld318 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %152, i32 0, i32 1
  %arrayidx319 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld318, i32 0, i64 0
  %rtuint320 = bitcast %union.rtunion_def* %arrayidx319 to i32*
  %153 = load i32, i32* %rtuint320, align 4
  %cmp321 = icmp ult i32 %153, 53
  br i1 %cmp321, label %if.then.323, label %if.end.469

if.then.323:                                      ; preds = %land.lhs.true.311
  %154 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld324 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %154, i32 0, i32 1
  %arrayidx325 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld324, i32 0, i64 1
  %rtx326 = bitcast %union.rtunion_def* %arrayidx325 to %struct.rtx_def**
  %155 = load %struct.rtx_def*, %struct.rtx_def** %rtx326, align 8
  %fld327 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %155, i32 0, i32 1
  %arrayidx328 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld327, i32 0, i64 0
  %rtx329 = bitcast %union.rtunion_def* %arrayidx328 to %struct.rtx_def**
  %156 = load %struct.rtx_def*, %struct.rtx_def** %rtx329, align 8
  store %struct.rtx_def* %156, %struct.rtx_def** %reg, align 8
  %157 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld331 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %157, i32 0, i32 1
  %arrayidx332 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld331, i32 0, i64 1
  %rtx333 = bitcast %union.rtunion_def* %arrayidx332 to %struct.rtx_def**
  %158 = load %struct.rtx_def*, %struct.rtx_def** %rtx333, align 8
  %fld334 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %158, i32 0, i32 1
  %arrayidx335 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld334, i32 0, i64 1
  %rtx336 = bitcast %union.rtunion_def* %arrayidx335 to %struct.rtx_def**
  %159 = load %struct.rtx_def*, %struct.rtx_def** %rtx336, align 8
  %fld337 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1
  %arrayidx338 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld337, i32 0, i64 0
  %rtwint339 = bitcast %union.rtunion_def* %arrayidx338 to i64*
  %160 = load i64, i64* %rtwint339, align 8
  %conv340 = trunc i64 %160 to i32
  store i32 %conv340, i32* %offset330, align 4
  %161 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %161, %struct.elim_table** %ep, align 8
  br label %for.cond.341

for.cond.341:                                     ; preds = %for.inc.466, %if.then.323
  %162 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %163 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx342 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %163, i64 4
  %cmp343 = icmp ult %struct.elim_table* %162, %arrayidx342
  br i1 %cmp343, label %for.body.345, label %for.end.468

for.body.345:                                     ; preds = %for.cond.341
  %164 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %from_rtx346 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %164, i32 0, i32 8
  %165 = load %struct.rtx_def*, %struct.rtx_def** %from_rtx346, align 8
  %166 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %cmp347 = icmp eq %struct.rtx_def* %165, %166
  br i1 %cmp347, label %land.lhs.true.349, label %if.end.465

land.lhs.true.349:                                ; preds = %for.body.345
  %167 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate350 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %167, i32 0, i32 3
  %168 = load i32, i32* %can_eliminate350, align 4
  %tobool351 = icmp ne i32 %168, 0
  br i1 %tobool351, label %if.then.352, label %if.end.465

if.then.352:                                      ; preds = %land.lhs.true.349
  %169 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %offset353 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %169, i32 0, i32 5
  %170 = load i32, i32* %offset353, align 4
  %171 = load i32, i32* %offset330, align 4
  %add354 = add nsw i32 %171, %170
  store i32 %add354, i32* %offset330, align 4
  %172 = load i32, i32* %offset330, align 4
  %cmp355 = icmp eq i32 %172, 0
  br i1 %cmp355, label %if.then.357, label %if.else.399

if.then.357:                                      ; preds = %if.then.352
  %173 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld358 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %173, i32 0, i32 1
  %arrayidx359 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld358, i32 0, i64 0
  %rtx360 = bitcast %union.rtunion_def* %arrayidx359 to %struct.rtx_def**
  %174 = load %struct.rtx_def*, %struct.rtx_def** %rtx360, align 8
  %175 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to_rtx361 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %175, i32 0, i32 9
  %176 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx361, align 8
  %call362 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %174, %struct.rtx_def* %176)
  %177 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld363 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %177, i32 0, i32 1
  %arrayidx364 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld363, i32 0, i64 3
  %rtx365 = bitcast %union.rtunion_def* %arrayidx364 to %struct.rtx_def**
  store %struct.rtx_def* %call362, %struct.rtx_def** %rtx365, align 8
  store i32 0, i32* %num_clobbers, align 4
  %178 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld366 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %178, i32 0, i32 1
  %arrayidx367 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld366, i32 0, i64 3
  %rtx368 = bitcast %union.rtunion_def* %arrayidx367 to %struct.rtx_def**
  %179 = load %struct.rtx_def*, %struct.rtx_def** %rtx368, align 8
  %180 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call369 = call i32 @recog(%struct.rtx_def* %179, %struct.rtx_def* %180, i32* %num_clobbers)
  %181 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld370 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %181, i32 0, i32 1
  %arrayidx371 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld370, i32 0, i64 4
  %rtint372 = bitcast %union.rtunion_def* %arrayidx371 to i32*
  store i32 %call369, i32* %rtint372, align 4
  %182 = load i32, i32* %num_clobbers, align 4
  %tobool373 = icmp ne i32 %182, 0
  br i1 %tobool373, label %if.then.374, label %if.end.391

if.then.374:                                      ; preds = %if.then.357
  %183 = load i32, i32* %num_clobbers, align 4
  %add375 = add nsw i32 %183, 1
  %call376 = call %struct.rtvec_def* @rtvec_alloc(i32 %add375)
  store %struct.rtvec_def* %call376, %struct.rtvec_def** %vec, align 8
  %184 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld377 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %184, i32 0, i32 1
  %arrayidx378 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld377, i32 0, i64 3
  %rtx379 = bitcast %union.rtunion_def* %arrayidx378 to %struct.rtx_def**
  %185 = load %struct.rtx_def*, %struct.rtx_def** %rtx379, align 8
  %186 = load %struct.rtvec_def*, %struct.rtvec_def** %vec, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %186, i32 0, i32 1
  %arrayidx380 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 0
  store %struct.rtx_def* %185, %struct.rtx_def** %arrayidx380, align 8
  %187 = load %struct.rtvec_def*, %struct.rtvec_def** %vec, align 8
  %call381 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %187)
  %188 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld382 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %188, i32 0, i32 1
  %arrayidx383 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld382, i32 0, i64 3
  %rtx384 = bitcast %union.rtunion_def* %arrayidx383 to %struct.rtx_def**
  store %struct.rtx_def* %call381, %struct.rtx_def** %rtx384, align 8
  %189 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld385 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %189, i32 0, i32 1
  %arrayidx386 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld385, i32 0, i64 3
  %rtx387 = bitcast %union.rtunion_def* %arrayidx386 to %struct.rtx_def**
  %190 = load %struct.rtx_def*, %struct.rtx_def** %rtx387, align 8
  %191 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld388 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %191, i32 0, i32 1
  %arrayidx389 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld388, i32 0, i64 4
  %rtint390 = bitcast %union.rtunion_def* %arrayidx389 to i32*
  %192 = load i32, i32* %rtint390, align 4
  call void @add_clobbers(%struct.rtx_def* %190, i32 %192)
  br label %if.end.391

if.end.391:                                       ; preds = %if.then.374, %if.then.357
  %193 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld392 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %193, i32 0, i32 1
  %arrayidx393 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld392, i32 0, i64 4
  %rtint394 = bitcast %union.rtunion_def* %arrayidx393 to i32*
  %194 = load i32, i32* %rtint394, align 4
  %cmp395 = icmp slt i32 %194, 0
  br i1 %cmp395, label %if.then.397, label %if.end.398

if.then.397:                                      ; preds = %if.end.391
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 3071, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.eliminate_regs_in_insn, i32 0, i32 0)) #5
  unreachable

if.end.398:                                       ; preds = %if.end.391
  br label %if.end.464

if.else.399:                                      ; preds = %if.then.352
  %195 = load %struct.rtx_def*, %struct.rtx_def** %old_body, align 8
  store %struct.rtx_def* %195, %struct.rtx_def** %new_body, align 8
  %196 = load i32, i32* %replace.addr, align 4
  %tobool400 = icmp ne i32 %196, 0
  br i1 %tobool400, label %if.end.416, label %if.then.401

if.then.401:                                      ; preds = %if.else.399
  %197 = load %struct.rtx_def*, %struct.rtx_def** %old_body, align 8
  %call402 = call %struct.rtx_def* @copy_insn(%struct.rtx_def* %197)
  store %struct.rtx_def* %call402, %struct.rtx_def** %new_body, align 8
  %198 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld403 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %198, i32 0, i32 1
  %arrayidx404 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld403, i32 0, i64 6
  %rtx405 = bitcast %union.rtunion_def* %arrayidx404 to %struct.rtx_def**
  %199 = load %struct.rtx_def*, %struct.rtx_def** %rtx405, align 8
  %tobool406 = icmp ne %struct.rtx_def* %199, null
  br i1 %tobool406, label %if.then.407, label %if.end.415

if.then.407:                                      ; preds = %if.then.401
  %200 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld408 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %200, i32 0, i32 1
  %arrayidx409 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld408, i32 0, i64 6
  %rtx410 = bitcast %union.rtunion_def* %arrayidx409 to %struct.rtx_def**
  %201 = load %struct.rtx_def*, %struct.rtx_def** %rtx410, align 8
  %call411 = call %struct.rtx_def* @copy_insn_1(%struct.rtx_def* %201)
  %202 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld412 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %202, i32 0, i32 1
  %arrayidx413 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld412, i32 0, i64 6
  %rtx414 = bitcast %union.rtunion_def* %arrayidx413 to %struct.rtx_def**
  store %struct.rtx_def* %call411, %struct.rtx_def** %rtx414, align 8
  br label %if.end.415

if.end.415:                                       ; preds = %if.then.407, %if.then.401
  br label %if.end.416

if.end.416:                                       ; preds = %if.end.415, %if.else.399
  %203 = load %struct.rtx_def*, %struct.rtx_def** %new_body, align 8
  %204 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld417 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %204, i32 0, i32 1
  %arrayidx418 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld417, i32 0, i64 3
  %rtx419 = bitcast %union.rtunion_def* %arrayidx418 to %struct.rtx_def**
  store %struct.rtx_def* %203, %struct.rtx_def** %rtx419, align 8
  %205 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %206 = bitcast %struct.rtx_def* %205 to i32*
  %bf.load420 = load i32, i32* %206, align 8
  %bf.clear421 = and i32 %bf.load420, 65535
  %idxprom422 = sext i32 %bf.clear421 to i64
  %arrayidx423 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom422
  %207 = load i8, i8* %arrayidx423, align 1
  %conv424 = sext i8 %207 to i32
  %cmp425 = icmp eq i32 %conv424, 105
  br i1 %cmp425, label %cond.true.427, label %cond.false.446

cond.true.427:                                    ; preds = %if.end.416
  %208 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld428 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %208, i32 0, i32 1
  %arrayidx429 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld428, i32 0, i64 3
  %rtx430 = bitcast %union.rtunion_def* %arrayidx429 to %struct.rtx_def**
  %209 = load %struct.rtx_def*, %struct.rtx_def** %rtx430, align 8
  %210 = bitcast %struct.rtx_def* %209 to i32*
  %bf.load431 = load i32, i32* %210, align 8
  %bf.clear432 = and i32 %bf.load431, 65535
  %cmp433 = icmp eq i32 %bf.clear432, 47
  br i1 %cmp433, label %cond.true.435, label %cond.false.439

cond.true.435:                                    ; preds = %cond.true.427
  %211 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld436 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %211, i32 0, i32 1
  %arrayidx437 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld436, i32 0, i64 3
  %rtx438 = bitcast %union.rtunion_def* %arrayidx437 to %struct.rtx_def**
  %212 = load %struct.rtx_def*, %struct.rtx_def** %rtx438, align 8
  br label %cond.end.444

cond.false.439:                                   ; preds = %cond.true.427
  %213 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %214 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld440 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %214, i32 0, i32 1
  %arrayidx441 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld440, i32 0, i64 3
  %rtx442 = bitcast %union.rtunion_def* %arrayidx441 to %struct.rtx_def**
  %215 = load %struct.rtx_def*, %struct.rtx_def** %rtx442, align 8
  %call443 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %213, %struct.rtx_def* %215)
  br label %cond.end.444

cond.end.444:                                     ; preds = %cond.false.439, %cond.true.435
  %cond445 = phi %struct.rtx_def* [ %212, %cond.true.435 ], [ %call443, %cond.false.439 ]
  br label %cond.end.447

cond.false.446:                                   ; preds = %if.end.416
  br label %cond.end.447

cond.end.447:                                     ; preds = %cond.false.446, %cond.end.444
  %cond448 = phi %struct.rtx_def* [ %cond445, %cond.end.444 ], [ null, %cond.false.446 ]
  store %struct.rtx_def* %cond448, %struct.rtx_def** %old_set, align 8
  %216 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to_rtx449 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %216, i32 0, i32 9
  %217 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx449, align 8
  %218 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld450 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %218, i32 0, i32 1
  %arrayidx451 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld450, i32 0, i64 1
  %rtx452 = bitcast %union.rtunion_def* %arrayidx451 to %struct.rtx_def**
  %219 = load %struct.rtx_def*, %struct.rtx_def** %rtx452, align 8
  %fld453 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %219, i32 0, i32 1
  %arrayidx454 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld453, i32 0, i64 0
  %rtx455 = bitcast %union.rtunion_def* %arrayidx454 to %struct.rtx_def**
  store %struct.rtx_def* %217, %struct.rtx_def** %rtx455, align 8
  %220 = load i32, i32* %offset330, align 4
  %conv456 = sext i32 %220 to i64
  %call457 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv456)
  %221 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld458 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %221, i32 0, i32 1
  %arrayidx459 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld458, i32 0, i64 1
  %rtx460 = bitcast %union.rtunion_def* %arrayidx459 to %struct.rtx_def**
  %222 = load %struct.rtx_def*, %struct.rtx_def** %rtx460, align 8
  %fld461 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %222, i32 0, i32 1
  %arrayidx462 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld461, i32 0, i64 1
  %rtx463 = bitcast %union.rtunion_def* %arrayidx462 to %struct.rtx_def**
  store %struct.rtx_def* %call457, %struct.rtx_def** %rtx463, align 8
  br label %if.end.464

if.end.464:                                       ; preds = %cond.end.447, %if.end.398
  store i32 1, i32* %val, align 4
  br label %done

if.end.465:                                       ; preds = %land.lhs.true.349, %for.body.345
  br label %for.inc.466

for.inc.466:                                      ; preds = %if.end.465
  %223 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr467 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %223, i32 1
  store %struct.elim_table* %incdec.ptr467, %struct.elim_table** %ep, align 8
  br label %for.cond.341

for.end.468:                                      ; preds = %for.cond.341
  br label %if.end.469

if.end.469:                                       ; preds = %for.end.468, %land.lhs.true.311, %land.lhs.true.300, %land.lhs.true.289, %land.lhs.true.281, %land.lhs.true.273, %if.end.271
  %224 = load %struct.rtx_def*, %struct.rtx_def** %old_body, align 8
  call void @elimination_effects(%struct.rtx_def* %224, i32 0)
  %225 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  call void @extract_insn(%struct.rtx_def* %225)
  store i32 0, i32* %any_changes, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.470

for.cond.470:                                     ; preds = %for.inc.571, %if.end.469
  %226 = load i32, i32* %i, align 4
  %227 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 1
  %conv471 = sext i8 %227 to i32
  %cmp472 = icmp slt i32 %226, %conv471
  br i1 %cmp472, label %for.body.474, label %for.end.572

for.body.474:                                     ; preds = %for.cond.470
  %228 = load i32, i32* %i, align 4
  %idxprom475 = sext i32 %228 to i64
  %arrayidx476 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom475
  %229 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx476, align 8
  %230 = load i32, i32* %i, align 4
  %idxprom477 = sext i32 %230 to i64
  %arrayidx478 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %orig_operand, i32 0, i64 %idxprom477
  store %struct.rtx_def* %229, %struct.rtx_def** %arrayidx478, align 8
  %231 = load i32, i32* %i, align 4
  %idxprom479 = sext i32 %231 to i64
  %arrayidx480 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom479
  %232 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx480, align 8
  %233 = load i32, i32* %i, align 4
  %idxprom481 = sext i32 %233 to i64
  %arrayidx482 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom481
  store %struct.rtx_def* %232, %struct.rtx_def** %arrayidx482, align 8
  %234 = load i32, i32* %insn_is_asm, align 4
  %tobool483 = icmp ne i32 %234, 0
  br i1 %tobool483, label %if.then.491, label %lor.lhs.false.484

lor.lhs.false.484:                                ; preds = %for.body.474
  %235 = load i32, i32* %i, align 4
  %idxprom485 = sext i32 %235 to i64
  %236 = load i32, i32* %icode, align 4
  %idxprom486 = sext i32 %236 to i64
  %arrayidx487 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom486
  %operand = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx487, i32 0, i32 3
  %237 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8
  %arrayidx488 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %237, i64 %idxprom485
  %eliminable = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx488, i32 0, i32 4
  %238 = load i8, i8* %eliminable, align 1
  %conv489 = sext i8 %238 to i32
  %tobool490 = icmp ne i32 %conv489, 0
  br i1 %tobool490, label %if.then.491, label %if.end.570

if.then.491:                                      ; preds = %lor.lhs.false.484, %for.body.474
  %239 = load i32, i32* %i, align 4
  %idxprom492 = sext i32 %239 to i64
  %arrayidx493 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 4), i32 0, i64 %idxprom492
  %240 = load i32, i32* %arrayidx493, align 4
  %cmp494 = icmp ne i32 %240, 0
  br i1 %cmp494, label %land.lhs.true.496, label %if.end.523

land.lhs.true.496:                                ; preds = %if.then.491
  %241 = load i32, i32* %i, align 4
  %idxprom497 = sext i32 %241 to i64
  %arrayidx498 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %orig_operand, i32 0, i64 %idxprom497
  %242 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx498, align 8
  %243 = bitcast %struct.rtx_def* %242 to i32*
  %bf.load499 = load i32, i32* %243, align 8
  %bf.clear500 = and i32 %bf.load499, 65535
  %cmp501 = icmp eq i32 %bf.clear500, 61
  br i1 %cmp501, label %if.then.503, label %if.end.523

if.then.503:                                      ; preds = %land.lhs.true.496
  %244 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %244, %struct.elim_table** %ep, align 8
  br label %for.cond.504

for.cond.504:                                     ; preds = %for.inc.520, %if.then.503
  %245 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %246 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx505 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %246, i64 4
  %cmp506 = icmp ult %struct.elim_table* %245, %arrayidx505
  br i1 %cmp506, label %for.body.508, label %for.end.522

for.body.508:                                     ; preds = %for.cond.504
  %247 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %from_rtx509 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %247, i32 0, i32 8
  %248 = load %struct.rtx_def*, %struct.rtx_def** %from_rtx509, align 8
  %249 = load i32, i32* %i, align 4
  %idxprom510 = sext i32 %249 to i64
  %arrayidx511 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %orig_operand, i32 0, i64 %idxprom510
  %250 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx511, align 8
  %cmp512 = icmp eq %struct.rtx_def* %248, %250
  br i1 %cmp512, label %land.lhs.true.514, label %if.end.519

land.lhs.true.514:                                ; preds = %for.body.508
  %251 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate515 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %251, i32 0, i32 3
  %252 = load i32, i32* %can_eliminate515, align 4
  %tobool516 = icmp ne i32 %252, 0
  br i1 %tobool516, label %if.then.517, label %if.end.519

if.then.517:                                      ; preds = %land.lhs.true.514
  %253 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate518 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %253, i32 0, i32 3
  store i32 0, i32* %can_eliminate518, align 4
  br label %if.end.519

if.end.519:                                       ; preds = %if.then.517, %land.lhs.true.514, %for.body.508
  br label %for.inc.520

for.inc.520:                                      ; preds = %if.end.519
  %254 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr521 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %254, i32 1
  store %struct.elim_table* %incdec.ptr521, %struct.elim_table** %ep, align 8
  br label %for.cond.504

for.end.522:                                      ; preds = %for.cond.504
  br label %if.end.523

if.end.523:                                       ; preds = %for.end.522, %land.lhs.true.496, %if.then.491
  %255 = load i32, i32* %i, align 4
  %idxprom524 = sext i32 %255 to i64
  %arrayidx525 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom524
  %256 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx525, align 8
  %257 = load i32, i32* %replace.addr, align 4
  %tobool526 = icmp ne i32 %257, 0
  br i1 %tobool526, label %cond.true.527, label %cond.false.528

cond.true.527:                                    ; preds = %if.end.523
  %258 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  br label %cond.end.529

cond.false.528:                                   ; preds = %if.end.523
  br label %cond.end.529

cond.end.529:                                     ; preds = %cond.false.528, %cond.true.527
  %cond530 = phi %struct.rtx_def* [ %258, %cond.true.527 ], [ null, %cond.false.528 ]
  %call531 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %256, i32 0, %struct.rtx_def* %cond530)
  %259 = load i32, i32* %i, align 4
  %idxprom532 = sext i32 %259 to i64
  %arrayidx533 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom532
  store %struct.rtx_def* %call531, %struct.rtx_def** %arrayidx533, align 8
  %260 = load i32, i32* %i, align 4
  %idxprom534 = sext i32 %260 to i64
  %arrayidx535 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom534
  %261 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx535, align 8
  %262 = load i32, i32* %i, align 4
  %idxprom536 = sext i32 %262 to i64
  %arrayidx537 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %orig_operand, i32 0, i64 %idxprom536
  %263 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx537, align 8
  %cmp538 = icmp ne %struct.rtx_def* %261, %263
  br i1 %cmp538, label %if.then.540, label %if.end.541

if.then.540:                                      ; preds = %cond.end.529
  store i32 1, i32* %any_changes, align 4
  store i32 1, i32* %val, align 4
  br label %if.end.541

if.end.541:                                       ; preds = %if.then.540, %cond.end.529
  %264 = load i32, i32* %i, align 4
  %idxprom542 = sext i32 %264 to i64
  %arrayidx543 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom542
  %265 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx543, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %265, align 8
  %266 = load i32, i32* %i, align 4
  %idxprom544 = sext i32 %266 to i64
  %arrayidx545 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 4), i32 0, i64 %idxprom544
  %267 = load i32, i32* %arrayidx545, align 4
  %cmp546 = icmp ne i32 %267, 0
  br i1 %cmp546, label %land.lhs.true.548, label %if.end.569

land.lhs.true.548:                                ; preds = %if.end.541
  %268 = load i32, i32* %i, align 4
  %idxprom549 = sext i32 %268 to i64
  %arrayidx550 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %orig_operand, i32 0, i64 %idxprom549
  %269 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx550, align 8
  %270 = bitcast %struct.rtx_def* %269 to i32*
  %bf.load551 = load i32, i32* %270, align 8
  %bf.clear552 = and i32 %bf.load551, 65535
  %cmp553 = icmp eq i32 %bf.clear552, 61
  br i1 %cmp553, label %land.lhs.true.555, label %if.end.569

land.lhs.true.555:                                ; preds = %land.lhs.true.548
  %271 = load i32, i32* %i, align 4
  %idxprom556 = sext i32 %271 to i64
  %arrayidx557 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom556
  %272 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx557, align 8
  %273 = bitcast %struct.rtx_def* %272 to i32*
  %bf.load558 = load i32, i32* %273, align 8
  %bf.clear559 = and i32 %bf.load558, 65535
  %cmp560 = icmp eq i32 %bf.clear559, 66
  br i1 %cmp560, label %land.lhs.true.562, label %if.end.569

land.lhs.true.562:                                ; preds = %land.lhs.true.555
  %274 = load i32, i32* %replace.addr, align 4
  %tobool563 = icmp ne i32 %274, 0
  br i1 %tobool563, label %if.then.564, label %if.end.569

if.then.564:                                      ; preds = %land.lhs.true.562
  %275 = load i32, i32* %i, align 4
  %idxprom565 = sext i32 %275 to i64
  %arrayidx566 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %orig_operand, i32 0, i64 %idxprom565
  %276 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx566, align 8
  %call567 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %276)
  %277 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call568 = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call567, %struct.rtx_def* %277)
  br label %if.end.569

if.end.569:                                       ; preds = %if.then.564, %land.lhs.true.562, %land.lhs.true.555, %land.lhs.true.548, %if.end.541
  br label %if.end.570

if.end.570:                                       ; preds = %if.end.569, %lor.lhs.false.484
  br label %for.inc.571

for.inc.571:                                      ; preds = %if.end.570
  %278 = load i32, i32* %i, align 4
  %inc = add nsw i32 %278, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.470

for.end.572:                                      ; preds = %for.cond.470
  store i32 0, i32* %i, align 4
  br label %for.cond.573

for.cond.573:                                     ; preds = %for.inc.585, %for.end.572
  %279 = load i32, i32* %i, align 4
  %280 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 8), align 1
  %conv574 = sext i8 %280 to i32
  %cmp575 = icmp slt i32 %279, %conv574
  br i1 %cmp575, label %for.body.577, label %for.end.587

for.body.577:                                     ; preds = %for.cond.573
  %281 = load i32, i32* %i, align 4
  %idxprom578 = sext i32 %281 to i64
  %arrayidx579 = getelementptr inbounds [4 x i8], [4 x i8]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 6), i32 0, i64 %idxprom578
  %282 = load i8, i8* %arrayidx579, align 1
  %conv580 = sext i8 %282 to i32
  %idxprom581 = sext i32 %conv580 to i64
  %arrayidx582 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom581
  %283 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx582, align 8
  %284 = load %struct.rtx_def*, %struct.rtx_def** %283, align 8
  %285 = load i32, i32* %i, align 4
  %idxprom583 = sext i32 %285 to i64
  %arrayidx584 = getelementptr inbounds [4 x %struct.rtx_def**], [4 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 5), i32 0, i64 %idxprom583
  %286 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx584, align 8
  store %struct.rtx_def* %284, %struct.rtx_def** %286, align 8
  br label %for.inc.585

for.inc.585:                                      ; preds = %for.body.577
  %287 = load i32, i32* %i, align 4
  %inc586 = add nsw i32 %287, 1
  store i32 %inc586, i32* %i, align 4
  br label %for.cond.573

for.end.587:                                      ; preds = %for.cond.573
  %288 = load %struct.rtx_def*, %struct.rtx_def** %old_body, align 8
  call void @check_eliminable_occurrences(%struct.rtx_def* %288)
  store i32 0, i32* %i, align 4
  br label %for.cond.588

for.cond.588:                                     ; preds = %for.inc.597, %for.end.587
  %289 = load i32, i32* %i, align 4
  %290 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 1
  %conv589 = sext i8 %290 to i32
  %cmp590 = icmp slt i32 %289, %conv589
  br i1 %cmp590, label %for.body.592, label %for.end.599

for.body.592:                                     ; preds = %for.cond.588
  %291 = load i32, i32* %i, align 4
  %idxprom593 = sext i32 %291 to i64
  %arrayidx594 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom593
  %292 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx594, align 8
  %293 = load i32, i32* %i, align 4
  %idxprom595 = sext i32 %293 to i64
  %arrayidx596 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom595
  %294 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx596, align 8
  store %struct.rtx_def* %292, %struct.rtx_def** %294, align 8
  br label %for.inc.597

for.inc.597:                                      ; preds = %for.body.592
  %295 = load i32, i32* %i, align 4
  %inc598 = add nsw i32 %295, 1
  store i32 %inc598, i32* %i, align 4
  br label %for.cond.588

for.end.599:                                      ; preds = %for.cond.588
  store i32 0, i32* %i, align 4
  br label %for.cond.600

for.cond.600:                                     ; preds = %for.inc.612, %for.end.599
  %296 = load i32, i32* %i, align 4
  %297 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 8), align 1
  %conv601 = sext i8 %297 to i32
  %cmp602 = icmp slt i32 %296, %conv601
  br i1 %cmp602, label %for.body.604, label %for.end.614

for.body.604:                                     ; preds = %for.cond.600
  %298 = load i32, i32* %i, align 4
  %idxprom605 = sext i32 %298 to i64
  %arrayidx606 = getelementptr inbounds [4 x i8], [4 x i8]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 6), i32 0, i64 %idxprom605
  %299 = load i8, i8* %arrayidx606, align 1
  %conv607 = sext i8 %299 to i32
  %idxprom608 = sext i32 %conv607 to i64
  %arrayidx609 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom608
  %300 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx609, align 8
  %301 = load i32, i32* %i, align 4
  %idxprom610 = sext i32 %301 to i64
  %arrayidx611 = getelementptr inbounds [4 x %struct.rtx_def**], [4 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 5), i32 0, i64 %idxprom610
  %302 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx611, align 8
  store %struct.rtx_def* %300, %struct.rtx_def** %302, align 8
  br label %for.inc.612

for.inc.612:                                      ; preds = %for.body.604
  %303 = load i32, i32* %i, align 4
  %inc613 = add nsw i32 %303, 1
  store i32 %inc613, i32* %i, align 4
  br label %for.cond.600

for.end.614:                                      ; preds = %for.cond.600
  %304 = load i32, i32* %val, align 4
  %tobool615 = icmp ne i32 %304, 0
  br i1 %tobool615, label %if.then.616, label %if.end.714

if.then.616:                                      ; preds = %for.end.614
  %305 = load %struct.rtx_def*, %struct.rtx_def** %old_body, align 8
  store %struct.rtx_def* %305, %struct.rtx_def** %new_body, align 8
  %306 = load i32, i32* %replace.addr, align 4
  %tobool617 = icmp ne i32 %306, 0
  br i1 %tobool617, label %if.end.633, label %if.then.618

if.then.618:                                      ; preds = %if.then.616
  %307 = load %struct.rtx_def*, %struct.rtx_def** %old_body, align 8
  %call619 = call %struct.rtx_def* @copy_insn(%struct.rtx_def* %307)
  store %struct.rtx_def* %call619, %struct.rtx_def** %new_body, align 8
  %308 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld620 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %308, i32 0, i32 1
  %arrayidx621 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld620, i32 0, i64 6
  %rtx622 = bitcast %union.rtunion_def* %arrayidx621 to %struct.rtx_def**
  %309 = load %struct.rtx_def*, %struct.rtx_def** %rtx622, align 8
  %tobool623 = icmp ne %struct.rtx_def* %309, null
  br i1 %tobool623, label %if.then.624, label %if.end.632

if.then.624:                                      ; preds = %if.then.618
  %310 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld625 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %310, i32 0, i32 1
  %arrayidx626 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld625, i32 0, i64 6
  %rtx627 = bitcast %union.rtunion_def* %arrayidx626 to %struct.rtx_def**
  %311 = load %struct.rtx_def*, %struct.rtx_def** %rtx627, align 8
  %call628 = call %struct.rtx_def* @copy_insn_1(%struct.rtx_def* %311)
  %312 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld629 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %312, i32 0, i32 1
  %arrayidx630 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld629, i32 0, i64 6
  %rtx631 = bitcast %union.rtunion_def* %arrayidx630 to %struct.rtx_def**
  store %struct.rtx_def* %call628, %struct.rtx_def** %rtx631, align 8
  br label %if.end.632

if.end.632:                                       ; preds = %if.then.624, %if.then.618
  br label %if.end.633

if.end.633:                                       ; preds = %if.end.632, %if.then.616
  %313 = load %struct.rtx_def*, %struct.rtx_def** %new_body, align 8
  %314 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld634 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %314, i32 0, i32 1
  %arrayidx635 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld634, i32 0, i64 3
  %rtx636 = bitcast %union.rtunion_def* %arrayidx635 to %struct.rtx_def**
  store %struct.rtx_def* %313, %struct.rtx_def** %rtx636, align 8
  %315 = load i32, i32* %insn_is_asm, align 4
  %tobool637 = icmp ne i32 %315, 0
  br i1 %tobool637, label %if.end.713, label %land.lhs.true.638

land.lhs.true.638:                                ; preds = %if.end.633
  %316 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %cmp639 = icmp ne %struct.rtx_def* %316, null
  br i1 %cmp639, label %land.lhs.true.641, label %if.end.713

land.lhs.true.641:                                ; preds = %land.lhs.true.638
  %317 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld642 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %317, i32 0, i32 1
  %arrayidx643 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld642, i32 0, i64 1
  %rtx644 = bitcast %union.rtunion_def* %arrayidx643 to %struct.rtx_def**
  %318 = load %struct.rtx_def*, %struct.rtx_def** %rtx644, align 8
  %319 = bitcast %struct.rtx_def* %318 to i32*
  %bf.load645 = load i32, i32* %319, align 8
  %bf.clear646 = and i32 %bf.load645, 65535
  %cmp647 = icmp eq i32 %bf.clear646, 61
  br i1 %cmp647, label %land.lhs.true.649, label %lor.lhs.false.662

land.lhs.true.649:                                ; preds = %land.lhs.true.641
  %320 = load %struct.rtx_def*, %struct.rtx_def** %new_body, align 8
  %321 = bitcast %struct.rtx_def* %320 to i32*
  %bf.load650 = load i32, i32* %321, align 8
  %bf.clear651 = and i32 %bf.load650, 65535
  %cmp652 = icmp ne i32 %bf.clear651, 47
  br i1 %cmp652, label %if.then.701, label %lor.lhs.false.654

lor.lhs.false.654:                                ; preds = %land.lhs.true.649
  %322 = load %struct.rtx_def*, %struct.rtx_def** %new_body, align 8
  %fld655 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %322, i32 0, i32 1
  %arrayidx656 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld655, i32 0, i64 1
  %rtx657 = bitcast %union.rtunion_def* %arrayidx656 to %struct.rtx_def**
  %323 = load %struct.rtx_def*, %struct.rtx_def** %rtx657, align 8
  %324 = bitcast %struct.rtx_def* %323 to i32*
  %bf.load658 = load i32, i32* %324, align 8
  %bf.clear659 = and i32 %bf.load658, 65535
  %cmp660 = icmp ne i32 %bf.clear659, 61
  br i1 %cmp660, label %if.then.701, label %lor.lhs.false.662

lor.lhs.false.662:                                ; preds = %lor.lhs.false.654, %land.lhs.true.641
  %325 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %cmp663 = icmp ne %struct.rtx_def* %325, null
  br i1 %cmp663, label %land.lhs.true.665, label %lor.lhs.false.693

land.lhs.true.665:                                ; preds = %lor.lhs.false.662
  %326 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld666 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %326, i32 0, i32 1
  %arrayidx667 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld666, i32 0, i64 1
  %rtx668 = bitcast %union.rtunion_def* %arrayidx667 to %struct.rtx_def**
  %327 = load %struct.rtx_def*, %struct.rtx_def** %rtx668, align 8
  %328 = bitcast %struct.rtx_def* %327 to i32*
  %bf.load669 = load i32, i32* %328, align 8
  %bf.clear670 = and i32 %bf.load669, 65535
  %cmp671 = icmp eq i32 %bf.clear670, 66
  br i1 %cmp671, label %land.lhs.true.673, label %lor.lhs.false.679

land.lhs.true.673:                                ; preds = %land.lhs.true.665
  %329 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld674 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %329, i32 0, i32 1
  %arrayidx675 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld674, i32 0, i64 1
  %rtx676 = bitcast %union.rtunion_def* %arrayidx675 to %struct.rtx_def**
  %330 = load %struct.rtx_def*, %struct.rtx_def** %rtx676, align 8
  %331 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0, i64 1), align 8
  %cmp677 = icmp ne %struct.rtx_def* %330, %331
  br i1 %cmp677, label %if.then.701, label %lor.lhs.false.679

lor.lhs.false.679:                                ; preds = %land.lhs.true.673, %land.lhs.true.665
  %332 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld680 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %332, i32 0, i32 1
  %arrayidx681 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld680, i32 0, i64 0
  %rtx682 = bitcast %union.rtunion_def* %arrayidx681 to %struct.rtx_def**
  %333 = load %struct.rtx_def*, %struct.rtx_def** %rtx682, align 8
  %334 = bitcast %struct.rtx_def* %333 to i32*
  %bf.load683 = load i32, i32* %334, align 8
  %bf.clear684 = and i32 %bf.load683, 65535
  %cmp685 = icmp eq i32 %bf.clear684, 66
  br i1 %cmp685, label %land.lhs.true.687, label %lor.lhs.false.693

land.lhs.true.687:                                ; preds = %lor.lhs.false.679
  %335 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld688 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %335, i32 0, i32 1
  %arrayidx689 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld688, i32 0, i64 0
  %rtx690 = bitcast %union.rtunion_def* %arrayidx689 to %struct.rtx_def**
  %336 = load %struct.rtx_def*, %struct.rtx_def** %rtx690, align 8
  %337 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0, i64 0), align 8
  %cmp691 = icmp ne %struct.rtx_def* %336, %337
  br i1 %cmp691, label %if.then.701, label %lor.lhs.false.693

lor.lhs.false.693:                                ; preds = %land.lhs.true.687, %lor.lhs.false.679, %lor.lhs.false.662
  %338 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8
  %fld694 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %338, i32 0, i32 1
  %arrayidx695 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld694, i32 0, i64 1
  %rtx696 = bitcast %union.rtunion_def* %arrayidx695 to %struct.rtx_def**
  %339 = load %struct.rtx_def*, %struct.rtx_def** %rtx696, align 8
  %340 = bitcast %struct.rtx_def* %339 to i32*
  %bf.load697 = load i32, i32* %340, align 8
  %bf.clear698 = and i32 %bf.load697, 65535
  %cmp699 = icmp eq i32 %bf.clear698, 75
  br i1 %cmp699, label %if.then.701, label %if.end.713

if.then.701:                                      ; preds = %lor.lhs.false.693, %land.lhs.true.687, %land.lhs.true.673, %lor.lhs.false.654, %land.lhs.true.649
  %341 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld702 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %341, i32 0, i32 1
  %arrayidx703 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld702, i32 0, i64 3
  %rtx704 = bitcast %union.rtunion_def* %arrayidx703 to %struct.rtx_def**
  %342 = load %struct.rtx_def*, %struct.rtx_def** %rtx704, align 8
  %343 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call705 = call i32 @recog(%struct.rtx_def* %342, %struct.rtx_def* %343, i32* null)
  store i32 %call705, i32* %new_icode, align 4
  %344 = load i32, i32* %new_icode, align 4
  %cmp706 = icmp slt i32 %344, 0
  br i1 %cmp706, label %if.then.708, label %if.end.712

if.then.708:                                      ; preds = %if.then.701
  %345 = load i32, i32* %icode, align 4
  %346 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld709 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %346, i32 0, i32 1
  %arrayidx710 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld709, i32 0, i64 4
  %rtint711 = bitcast %union.rtunion_def* %arrayidx710 to i32*
  store i32 %345, i32* %rtint711, align 4
  br label %if.end.712

if.end.712:                                       ; preds = %if.then.708, %if.then.701
  br label %if.end.713

if.end.713:                                       ; preds = %if.end.712, %lor.lhs.false.693, %land.lhs.true.638, %if.end.633
  br label %if.end.714

if.end.714:                                       ; preds = %if.end.713, %for.end.614
  %347 = load i32, i32* %replace.addr, align 4
  %tobool715 = icmp ne i32 %347, 0
  br i1 %tobool715, label %if.end.744, label %if.then.716

if.then.716:                                      ; preds = %if.end.714
  store i32 0, i32* %i, align 4
  br label %for.cond.717

for.cond.717:                                     ; preds = %for.inc.726, %if.then.716
  %348 = load i32, i32* %i, align 4
  %349 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 1
  %conv718 = sext i8 %349 to i32
  %cmp719 = icmp slt i32 %348, %conv718
  br i1 %cmp719, label %for.body.721, label %for.end.728

for.body.721:                                     ; preds = %for.cond.717
  %350 = load i32, i32* %i, align 4
  %idxprom722 = sext i32 %350 to i64
  %arrayidx723 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %orig_operand, i32 0, i64 %idxprom722
  %351 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx723, align 8
  %352 = load i32, i32* %i, align 4
  %idxprom724 = sext i32 %352 to i64
  %arrayidx725 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom724
  %353 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx725, align 8
  store %struct.rtx_def* %351, %struct.rtx_def** %353, align 8
  br label %for.inc.726

for.inc.726:                                      ; preds = %for.body.721
  %354 = load i32, i32* %i, align 4
  %inc727 = add nsw i32 %354, 1
  store i32 %inc727, i32* %i, align 4
  br label %for.cond.717

for.end.728:                                      ; preds = %for.cond.717
  store i32 0, i32* %i, align 4
  br label %for.cond.729

for.cond.729:                                     ; preds = %for.inc.741, %for.end.728
  %355 = load i32, i32* %i, align 4
  %356 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 8), align 1
  %conv730 = sext i8 %356 to i32
  %cmp731 = icmp slt i32 %355, %conv730
  br i1 %cmp731, label %for.body.733, label %for.end.743

for.body.733:                                     ; preds = %for.cond.729
  %357 = load i32, i32* %i, align 4
  %idxprom734 = sext i32 %357 to i64
  %arrayidx735 = getelementptr inbounds [4 x i8], [4 x i8]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 6), i32 0, i64 %idxprom734
  %358 = load i8, i8* %arrayidx735, align 1
  %conv736 = sext i8 %358 to i32
  %idxprom737 = sext i32 %conv736 to i64
  %arrayidx738 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %orig_operand, i32 0, i64 %idxprom737
  %359 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx738, align 8
  %360 = load i32, i32* %i, align 4
  %idxprom739 = sext i32 %360 to i64
  %arrayidx740 = getelementptr inbounds [4 x %struct.rtx_def**], [4 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 5), i32 0, i64 %idxprom739
  %361 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx740, align 8
  store %struct.rtx_def* %359, %struct.rtx_def** %361, align 8
  br label %for.inc.741

for.inc.741:                                      ; preds = %for.body.733
  %362 = load i32, i32* %i, align 4
  %inc742 = add nsw i32 %362, 1
  store i32 %inc742, i32* %i, align 4
  br label %for.cond.729

for.end.743:                                      ; preds = %for.cond.729
  br label %if.end.744

if.end.744:                                       ; preds = %for.end.743, %if.end.714
  %363 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %363, %struct.elim_table** %ep, align 8
  br label %for.cond.745

for.cond.745:                                     ; preds = %for.inc.765, %if.end.744
  %364 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %365 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx746 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %365, i64 4
  %cmp747 = icmp ult %struct.elim_table* %364, %arrayidx746
  br i1 %cmp747, label %for.body.749, label %for.end.767

for.body.749:                                     ; preds = %for.cond.745
  %366 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %previous_offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %366, i32 0, i32 6
  %367 = load i32, i32* %previous_offset, align 4
  %368 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %offset750 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %368, i32 0, i32 5
  %369 = load i32, i32* %offset750, align 4
  %cmp751 = icmp ne i32 %367, %369
  br i1 %cmp751, label %land.lhs.true.753, label %if.end.757

land.lhs.true.753:                                ; preds = %for.body.749
  %370 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %ref_outside_mem = getelementptr inbounds %struct.elim_table, %struct.elim_table* %370, i32 0, i32 7
  %371 = load i32, i32* %ref_outside_mem, align 4
  %tobool754 = icmp ne i32 %371, 0
  br i1 %tobool754, label %if.then.755, label %if.end.757

if.then.755:                                      ; preds = %land.lhs.true.753
  %372 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate756 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %372, i32 0, i32 3
  store i32 0, i32* %can_eliminate756, align 4
  br label %if.end.757

if.end.757:                                       ; preds = %if.then.755, %land.lhs.true.753, %for.body.749
  %373 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %ref_outside_mem758 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %373, i32 0, i32 7
  store i32 0, i32* %ref_outside_mem758, align 4
  %374 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %previous_offset759 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %374, i32 0, i32 6
  %375 = load i32, i32* %previous_offset759, align 4
  %376 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %offset760 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %376, i32 0, i32 5
  %377 = load i32, i32* %offset760, align 4
  %cmp761 = icmp ne i32 %375, %377
  br i1 %cmp761, label %if.then.763, label %if.end.764

if.then.763:                                      ; preds = %if.end.757
  store i32 1, i32* %val, align 4
  br label %if.end.764

if.end.764:                                       ; preds = %if.then.763, %if.end.757
  br label %for.inc.765

for.inc.765:                                      ; preds = %if.end.764
  %378 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr766 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %378, i32 1
  store %struct.elim_table* %incdec.ptr766, %struct.elim_table** %ep, align 8
  br label %for.cond.745

for.end.767:                                      ; preds = %for.cond.745
  br label %done

done:                                             ; preds = %for.end.767, %if.end.464, %if.end.269, %if.end.264
  %379 = load i32, i32* %val, align 4
  %tobool768 = icmp ne i32 %379, 0
  br i1 %tobool768, label %land.lhs.true.769, label %if.end.786

land.lhs.true.769:                                ; preds = %done
  %380 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld770 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %380, i32 0, i32 1
  %arrayidx771 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld770, i32 0, i64 6
  %rtx772 = bitcast %union.rtunion_def* %arrayidx771 to %struct.rtx_def**
  %381 = load %struct.rtx_def*, %struct.rtx_def** %rtx772, align 8
  %cmp773 = icmp ne %struct.rtx_def* %381, null
  br i1 %cmp773, label %if.then.775, label %if.end.786

if.then.775:                                      ; preds = %land.lhs.true.769
  %382 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld776 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %382, i32 0, i32 1
  %arrayidx777 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld776, i32 0, i64 6
  %rtx778 = bitcast %union.rtunion_def* %arrayidx777 to %struct.rtx_def**
  %383 = load %struct.rtx_def*, %struct.rtx_def** %rtx778, align 8
  %384 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld779 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %384, i32 0, i32 1
  %arrayidx780 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld779, i32 0, i64 6
  %rtx781 = bitcast %union.rtunion_def* %arrayidx780 to %struct.rtx_def**
  %385 = load %struct.rtx_def*, %struct.rtx_def** %rtx781, align 8
  %call782 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %383, i32 0, %struct.rtx_def* %385)
  %386 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld783 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %386, i32 0, i32 1
  %arrayidx784 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld783, i32 0, i64 6
  %rtx785 = bitcast %union.rtunion_def* %arrayidx784 to %struct.rtx_def**
  store %struct.rtx_def* %call782, %struct.rtx_def** %rtx785, align 8
  br label %if.end.786

if.end.786:                                       ; preds = %if.then.775, %land.lhs.true.769, %done
  %387 = load i32, i32* %val, align 4
  store i32 %387, i32* %retval
  br label %return

return:                                           ; preds = %if.end.786, %if.then.268, %if.then.74
  %388 = load i32, i32* %retval
  ret i32 %388
}

declare i32 @find_reloads(%struct.rtx_def*, i32, i32, i32, i16*) #1

; Function Attrs: nounwind uwtable
define internal void @update_eliminable_offsets() #0 {
entry:
  %ep = alloca %struct.elim_table*, align 8
  store i32 0, i32* @num_not_at_initial_offset, align 4
  %0 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %0, %struct.elim_table** %ep, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %2 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %2, i64 4
  %cmp = icmp ult %struct.elim_table* %1, %arrayidx
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %3, i32 0, i32 5
  %4 = load i32, i32* %offset, align 4
  %5 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %previous_offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %5, i32 0, i32 6
  store i32 %4, i32* %previous_offset, align 4
  %6 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate = getelementptr inbounds %struct.elim_table, %struct.elim_table* %6, i32 0, i32 3
  %7 = load i32, i32* %can_eliminate, align 4
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %offset1 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %8, i32 0, i32 5
  %9 = load i32, i32* %offset1, align 4
  %10 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %initial_offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %10, i32 0, i32 2
  %11 = load i32, i32* %initial_offset, align 4
  %cmp2 = icmp ne i32 %9, %11
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %12 = load i32, i32* @num_not_at_initial_offset, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* @num_not_at_initial_offset, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %13 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %13, i32 1
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @copy_reloads(%struct.insn_chain* %chain) #0 {
entry:
  %chain.addr = alloca %struct.insn_chain*, align 8
  %__h = alloca %struct.obstack*, align 8
  %__o = alloca %struct.obstack*, align 8
  %__len = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %__o1 = alloca %struct.obstack*, align 8
  %value = alloca i8*, align 8
  %tmp37 = alloca i8*, align 8
  %__h42 = alloca %struct.obstack*, align 8
  %__o44 = alloca %struct.obstack*, align 8
  %__len46 = alloca i32, align 4
  %tmp60 = alloca i8*, align 8
  %__o162 = alloca %struct.obstack*, align 8
  %value64 = alloca i8*, align 8
  %tmp105 = alloca i8*, align 8
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  %0 = load i32, i32* @n_reloads, align 4
  %1 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %n_reloads = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %1, i32 0, i32 8
  store i32 %0, i32* %n_reloads, align 4
  store %struct.obstack* @reload_obstack, %struct.obstack** %__h, align 8
  %2 = load %struct.obstack*, %struct.obstack** %__h, align 8
  store %struct.obstack* %2, %struct.obstack** %__o, align 8
  %3 = load i32, i32* @n_reloads, align 4
  %conv = sext i32 %3 to i64
  %mul = mul i64 %conv, 104
  %conv1 = trunc i64 %mul to i32
  store i32 %conv1, i32* %__len, align 4
  %4 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 4
  %5 = load i8*, i8** %chunk_limit, align 8
  %6 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 3
  %7 = load i8*, i8** %next_free, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %8 = load i32, i32* %__len, align 4
  %conv2 = sext i32 %8 to i64
  %cmp = icmp slt i64 %sub.ptr.sub, %conv2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %9 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %10 = load i32, i32* %__len, align 4
  call void @_obstack_newchunk(%struct.obstack* %9, i32 %10)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %11 = load i32, i32* %__len, align 4
  %12 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %next_free4 = getelementptr inbounds %struct.obstack, %struct.obstack* %12, i32 0, i32 3
  %13 = load i8*, i8** %next_free4, align 8
  %idx.ext = sext i32 %11 to i64
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 %idx.ext
  store i8* %add.ptr, i8** %next_free4, align 8
  %14 = load %struct.obstack*, %struct.obstack** %__h, align 8
  store %struct.obstack* %14, %struct.obstack** %__o1, align 8
  %15 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %15, i32 0, i32 2
  %16 = load i8*, i8** %object_base, align 8
  store i8* %16, i8** %value, align 8
  %17 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free7 = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 3
  %18 = load i8*, i8** %next_free7, align 8
  %19 = load i8*, i8** %value, align 8
  %cmp8 = icmp eq i8* %18, %19
  br i1 %cmp8, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %if.end
  %20 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %20, i32 0, i32 10
  %bf.load = load i8, i8* %maybe_empty_object, align 8
  %bf.clear = and i8 %bf.load, -3
  %bf.set = or i8 %bf.clear, 2
  store i8 %bf.set, i8* %maybe_empty_object, align 8
  br label %if.end.11

if.end.11:                                        ; preds = %if.then.10, %if.end
  %21 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free12 = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 3
  %22 = load i8*, i8** %next_free12, align 8
  %sub.ptr.lhs.cast13 = ptrtoint i8* %22 to i64
  %sub.ptr.sub14 = sub i64 %sub.ptr.lhs.cast13, 0
  %23 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %23, i32 0, i32 6
  %24 = load i32, i32* %alignment_mask, align 4
  %conv15 = sext i32 %24 to i64
  %add = add nsw i64 %sub.ptr.sub14, %conv15
  %25 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %alignment_mask16 = getelementptr inbounds %struct.obstack, %struct.obstack* %25, i32 0, i32 6
  %26 = load i32, i32* %alignment_mask16, align 4
  %neg = xor i32 %26, -1
  %conv17 = sext i32 %neg to i64
  %and = and i64 %add, %conv17
  %add.ptr18 = getelementptr inbounds i8, i8* null, i64 %and
  %27 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free19 = getelementptr inbounds %struct.obstack, %struct.obstack* %27, i32 0, i32 3
  store i8* %add.ptr18, i8** %next_free19, align 8
  %28 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free20 = getelementptr inbounds %struct.obstack, %struct.obstack* %28, i32 0, i32 3
  %29 = load i8*, i8** %next_free20, align 8
  %30 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %30, i32 0, i32 1
  %31 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8
  %32 = bitcast %struct._obstack_chunk* %31 to i8*
  %sub.ptr.lhs.cast21 = ptrtoint i8* %29 to i64
  %sub.ptr.rhs.cast22 = ptrtoint i8* %32 to i64
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22
  %33 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk_limit24 = getelementptr inbounds %struct.obstack, %struct.obstack* %33, i32 0, i32 4
  %34 = load i8*, i8** %chunk_limit24, align 8
  %35 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk25 = getelementptr inbounds %struct.obstack, %struct.obstack* %35, i32 0, i32 1
  %36 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk25, align 8
  %37 = bitcast %struct._obstack_chunk* %36 to i8*
  %sub.ptr.lhs.cast26 = ptrtoint i8* %34 to i64
  %sub.ptr.rhs.cast27 = ptrtoint i8* %37 to i64
  %sub.ptr.sub28 = sub i64 %sub.ptr.lhs.cast26, %sub.ptr.rhs.cast27
  %cmp29 = icmp sgt i64 %sub.ptr.sub23, %sub.ptr.sub28
  br i1 %cmp29, label %if.then.31, label %if.end.34

if.then.31:                                       ; preds = %if.end.11
  %38 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk_limit32 = getelementptr inbounds %struct.obstack, %struct.obstack* %38, i32 0, i32 4
  %39 = load i8*, i8** %chunk_limit32, align 8
  %40 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free33 = getelementptr inbounds %struct.obstack, %struct.obstack* %40, i32 0, i32 3
  store i8* %39, i8** %next_free33, align 8
  br label %if.end.34

if.end.34:                                        ; preds = %if.then.31, %if.end.11
  %41 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free35 = getelementptr inbounds %struct.obstack, %struct.obstack* %41, i32 0, i32 3
  %42 = load i8*, i8** %next_free35, align 8
  %43 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %object_base36 = getelementptr inbounds %struct.obstack, %struct.obstack* %43, i32 0, i32 2
  store i8* %42, i8** %object_base36, align 8
  %44 = load i8*, i8** %value, align 8
  store i8* %44, i8** %tmp37
  %45 = load i8*, i8** %tmp37
  store i8* %45, i8** %tmp
  %46 = load i8*, i8** %tmp
  %47 = bitcast i8* %46 to %struct.reload*
  %48 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %rld = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %48, i32 0, i32 7
  store %struct.reload* %47, %struct.reload** %rld, align 8
  %49 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %rld38 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %49, i32 0, i32 7
  %50 = load %struct.reload*, %struct.reload** %rld38, align 8
  %51 = bitcast %struct.reload* %50 to i8*
  %52 = load i32, i32* @n_reloads, align 4
  %conv39 = sext i32 %52 to i64
  %mul40 = mul i64 %conv39, 104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* bitcast ([180 x %struct.reload]* @rld to i8*), i64 %mul40, i32 8, i1 false)
  store %struct.obstack* @reload_obstack, %struct.obstack** %__h42, align 8
  %53 = load %struct.obstack*, %struct.obstack** %__h42, align 8
  store %struct.obstack* %53, %struct.obstack** %__o44, align 8
  store i32 0, i32* %__len46, align 4
  %54 = load %struct.obstack*, %struct.obstack** %__o44, align 8
  %chunk_limit47 = getelementptr inbounds %struct.obstack, %struct.obstack* %54, i32 0, i32 4
  %55 = load i8*, i8** %chunk_limit47, align 8
  %56 = load %struct.obstack*, %struct.obstack** %__o44, align 8
  %next_free48 = getelementptr inbounds %struct.obstack, %struct.obstack* %56, i32 0, i32 3
  %57 = load i8*, i8** %next_free48, align 8
  %sub.ptr.lhs.cast49 = ptrtoint i8* %55 to i64
  %sub.ptr.rhs.cast50 = ptrtoint i8* %57 to i64
  %sub.ptr.sub51 = sub i64 %sub.ptr.lhs.cast49, %sub.ptr.rhs.cast50
  %58 = load i32, i32* %__len46, align 4
  %conv52 = sext i32 %58 to i64
  %cmp53 = icmp slt i64 %sub.ptr.sub51, %conv52
  br i1 %cmp53, label %if.then.55, label %if.end.56

if.then.55:                                       ; preds = %if.end.34
  %59 = load %struct.obstack*, %struct.obstack** %__o44, align 8
  %60 = load i32, i32* %__len46, align 4
  call void @_obstack_newchunk(%struct.obstack* %59, i32 %60)
  br label %if.end.56

if.end.56:                                        ; preds = %if.then.55, %if.end.34
  %61 = load i32, i32* %__len46, align 4
  %62 = load %struct.obstack*, %struct.obstack** %__o44, align 8
  %next_free57 = getelementptr inbounds %struct.obstack, %struct.obstack* %62, i32 0, i32 3
  %63 = load i8*, i8** %next_free57, align 8
  %idx.ext58 = sext i32 %61 to i64
  %add.ptr59 = getelementptr inbounds i8, i8* %63, i64 %idx.ext58
  store i8* %add.ptr59, i8** %next_free57, align 8
  %64 = load %struct.obstack*, %struct.obstack** %__h42, align 8
  store %struct.obstack* %64, %struct.obstack** %__o162, align 8
  %65 = load %struct.obstack*, %struct.obstack** %__o162, align 8
  %object_base65 = getelementptr inbounds %struct.obstack, %struct.obstack* %65, i32 0, i32 2
  %66 = load i8*, i8** %object_base65, align 8
  store i8* %66, i8** %value64, align 8
  %67 = load %struct.obstack*, %struct.obstack** %__o162, align 8
  %next_free66 = getelementptr inbounds %struct.obstack, %struct.obstack* %67, i32 0, i32 3
  %68 = load i8*, i8** %next_free66, align 8
  %69 = load i8*, i8** %value64, align 8
  %cmp67 = icmp eq i8* %68, %69
  br i1 %cmp67, label %if.then.69, label %if.end.74

if.then.69:                                       ; preds = %if.end.56
  %70 = load %struct.obstack*, %struct.obstack** %__o162, align 8
  %maybe_empty_object70 = getelementptr inbounds %struct.obstack, %struct.obstack* %70, i32 0, i32 10
  %bf.load71 = load i8, i8* %maybe_empty_object70, align 8
  %bf.clear72 = and i8 %bf.load71, -3
  %bf.set73 = or i8 %bf.clear72, 2
  store i8 %bf.set73, i8* %maybe_empty_object70, align 8
  br label %if.end.74

if.end.74:                                        ; preds = %if.then.69, %if.end.56
  %71 = load %struct.obstack*, %struct.obstack** %__o162, align 8
  %next_free75 = getelementptr inbounds %struct.obstack, %struct.obstack* %71, i32 0, i32 3
  %72 = load i8*, i8** %next_free75, align 8
  %sub.ptr.lhs.cast76 = ptrtoint i8* %72 to i64
  %sub.ptr.sub77 = sub i64 %sub.ptr.lhs.cast76, 0
  %73 = load %struct.obstack*, %struct.obstack** %__o162, align 8
  %alignment_mask78 = getelementptr inbounds %struct.obstack, %struct.obstack* %73, i32 0, i32 6
  %74 = load i32, i32* %alignment_mask78, align 4
  %conv79 = sext i32 %74 to i64
  %add80 = add nsw i64 %sub.ptr.sub77, %conv79
  %75 = load %struct.obstack*, %struct.obstack** %__o162, align 8
  %alignment_mask81 = getelementptr inbounds %struct.obstack, %struct.obstack* %75, i32 0, i32 6
  %76 = load i32, i32* %alignment_mask81, align 4
  %neg82 = xor i32 %76, -1
  %conv83 = sext i32 %neg82 to i64
  %and84 = and i64 %add80, %conv83
  %add.ptr85 = getelementptr inbounds i8, i8* null, i64 %and84
  %77 = load %struct.obstack*, %struct.obstack** %__o162, align 8
  %next_free86 = getelementptr inbounds %struct.obstack, %struct.obstack* %77, i32 0, i32 3
  store i8* %add.ptr85, i8** %next_free86, align 8
  %78 = load %struct.obstack*, %struct.obstack** %__o162, align 8
  %next_free87 = getelementptr inbounds %struct.obstack, %struct.obstack* %78, i32 0, i32 3
  %79 = load i8*, i8** %next_free87, align 8
  %80 = load %struct.obstack*, %struct.obstack** %__o162, align 8
  %chunk88 = getelementptr inbounds %struct.obstack, %struct.obstack* %80, i32 0, i32 1
  %81 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk88, align 8
  %82 = bitcast %struct._obstack_chunk* %81 to i8*
  %sub.ptr.lhs.cast89 = ptrtoint i8* %79 to i64
  %sub.ptr.rhs.cast90 = ptrtoint i8* %82 to i64
  %sub.ptr.sub91 = sub i64 %sub.ptr.lhs.cast89, %sub.ptr.rhs.cast90
  %83 = load %struct.obstack*, %struct.obstack** %__o162, align 8
  %chunk_limit92 = getelementptr inbounds %struct.obstack, %struct.obstack* %83, i32 0, i32 4
  %84 = load i8*, i8** %chunk_limit92, align 8
  %85 = load %struct.obstack*, %struct.obstack** %__o162, align 8
  %chunk93 = getelementptr inbounds %struct.obstack, %struct.obstack* %85, i32 0, i32 1
  %86 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk93, align 8
  %87 = bitcast %struct._obstack_chunk* %86 to i8*
  %sub.ptr.lhs.cast94 = ptrtoint i8* %84 to i64
  %sub.ptr.rhs.cast95 = ptrtoint i8* %87 to i64
  %sub.ptr.sub96 = sub i64 %sub.ptr.lhs.cast94, %sub.ptr.rhs.cast95
  %cmp97 = icmp sgt i64 %sub.ptr.sub91, %sub.ptr.sub96
  br i1 %cmp97, label %if.then.99, label %if.end.102

if.then.99:                                       ; preds = %if.end.74
  %88 = load %struct.obstack*, %struct.obstack** %__o162, align 8
  %chunk_limit100 = getelementptr inbounds %struct.obstack, %struct.obstack* %88, i32 0, i32 4
  %89 = load i8*, i8** %chunk_limit100, align 8
  %90 = load %struct.obstack*, %struct.obstack** %__o162, align 8
  %next_free101 = getelementptr inbounds %struct.obstack, %struct.obstack* %90, i32 0, i32 3
  store i8* %89, i8** %next_free101, align 8
  br label %if.end.102

if.end.102:                                       ; preds = %if.then.99, %if.end.74
  %91 = load %struct.obstack*, %struct.obstack** %__o162, align 8
  %next_free103 = getelementptr inbounds %struct.obstack, %struct.obstack* %91, i32 0, i32 3
  %92 = load i8*, i8** %next_free103, align 8
  %93 = load %struct.obstack*, %struct.obstack** %__o162, align 8
  %object_base104 = getelementptr inbounds %struct.obstack, %struct.obstack* %93, i32 0, i32 2
  store i8* %92, i8** %object_base104, align 8
  %94 = load i8*, i8** %value64, align 8
  store i8* %94, i8** %tmp105
  %95 = load i8*, i8** %tmp105
  store i8* %95, i8** %tmp60
  %96 = load i8*, i8** %tmp60
  store i8* %96, i8** @reload_insn_firstobj, align 8
  ret void
}

declare %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @set_offsets_for_label(%struct.rtx_def* %insn) #0 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %label_nr = alloca i32, align 4
  %ep = alloca %struct.elim_table*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 5
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32, i32* %rtint, align 4
  store i32 %1, i32* %label_nr, align 4
  store i32 0, i32* @num_not_at_initial_offset, align 4
  store i32 0, i32* %i, align 4
  %2 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %2, %struct.elim_table** %ep, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4
  %conv = zext i32 %3 to i64
  %cmp = icmp ult i64 %conv, 4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4
  %idxprom = zext i32 %4 to i64
  %5 = load i32, i32* %label_nr, align 4
  %idxprom2 = sext i32 %5 to i64
  %6 = load [4 x i32]*, [4 x i32]** @offsets_at, align 8
  %arrayidx3 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 %idxprom2
  %arrayidx4 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx3, i32 0, i64 %idxprom
  %7 = load i32, i32* %arrayidx4, align 4
  %8 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %previous_offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %8, i32 0, i32 6
  store i32 %7, i32* %previous_offset, align 4
  %9 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %9, i32 0, i32 5
  store i32 %7, i32* %offset, align 4
  %10 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate = getelementptr inbounds %struct.elim_table, %struct.elim_table* %10, i32 0, i32 3
  %11 = load i32, i32* %can_eliminate, align 4
  %tobool = icmp ne i32 %11, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %12 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %offset5 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %12, i32 0, i32 5
  %13 = load i32, i32* %offset5, align 4
  %14 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %initial_offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %14, i32 0, i32 2
  %15 = load i32, i32* %initial_offset, align 4
  %cmp6 = icmp ne i32 %13, %15
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %16 = load i32, i32* @num_not_at_initial_offset, align 4
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* @num_not_at_initial_offset, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %17 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %17, i32 1
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8
  %18 = load i32, i32* %i, align 4
  %inc8 = add i32 %18, 1
  store i32 %inc8, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

declare %struct.rtx_def* @copy_insn(%struct.rtx_def*) #1

declare %struct.rtx_def* @copy_insn_1(%struct.rtx_def*) #1

declare i32 @validate_change(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def*, i32) #1

declare i32 @apply_change_group() #1

declare i32 @recog(%struct.rtx_def*, %struct.rtx_def*, i32*) #1

declare %struct.rtvec_def* @rtvec_alloc(i32) #1

declare void @add_clobbers(%struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define internal void @elimination_effects(%struct.rtx_def* %x, i32 %mem_mode) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %mem_mode.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %ep = alloca %struct.elim_table*, align 8
  %regno = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %size = alloca i32, align 4
  %src = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %mem_mode, i32* %mem_mode.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %2 = load i32, i32* %code, align 4
  switch i32 %2, label %sw.default [
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 58, label %sw.bb
    i32 68, label %sw.bb
    i32 36, label %sw.bb
    i32 59, label %sw.bb
    i32 69, label %sw.bb
    i32 40, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 51, label %sw.bb
    i32 70, label %sw.bb.1
    i32 61, label %sw.bb.2
    i32 97, label %sw.bb.28
    i32 99, label %sw.bb.28
    i32 96, label %sw.bb.28
    i32 98, label %sw.bb.28
    i32 101, label %sw.bb.28
    i32 100, label %sw.bb.28
    i32 64, label %sw.bb.206
    i32 77, label %sw.bb.206
    i32 86, label %sw.bb.206
    i32 120, label %sw.bb.206
    i32 121, label %sw.bb.206
    i32 122, label %sw.bb.206
    i32 123, label %sw.bb.206
    i32 124, label %sw.bb.206
    i32 125, label %sw.bb.206
    i32 126, label %sw.bb.206
    i32 128, label %sw.bb.206
    i32 127, label %sw.bb.206
    i32 129, label %sw.bb.206
    i32 130, label %sw.bb.206
    i32 131, label %sw.bb.206
    i32 63, label %sw.bb.210
    i32 48, label %sw.bb.254
    i32 49, label %sw.bb.275
    i32 47, label %sw.bb.296
    i32 66, label %sw.bb.372
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %for.end.430

sw.bb.1:                                          ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 2698, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.elimination_effects, i32 0, i32 0)) #5
  unreachable

sw.bb.2:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %4 = load i32, i32* %rtuint, align 4
  store i32 %4, i32* %regno, align 4
  %5 = load i32, i32* %regno, align 4
  %cmp = icmp slt i32 %5, 53
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb.2
  %6 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %6, %struct.elim_table** %ep, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %8 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx3 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %8, i64 4
  %cmp4 = icmp ult %struct.elim_table* %7, %arrayidx3
  br i1 %cmp4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %from_rtx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %9, i32 0, i32 8
  %10 = load %struct.rtx_def*, %struct.rtx_def** %from_rtx, align 8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %cmp5 = icmp eq %struct.rtx_def* %10, %11
  br i1 %cmp5, label %land.lhs.true, label %if.end.9

land.lhs.true:                                    ; preds = %for.body
  %12 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate = getelementptr inbounds %struct.elim_table, %struct.elim_table* %12, i32 0, i32 3
  %13 = load i32, i32* %can_eliminate, align 4
  %tobool = icmp ne i32 %13, 0
  br i1 %tobool, label %if.then.6, label %if.end.9

if.then.6:                                        ; preds = %land.lhs.true
  %14 = load i32, i32* %mem_mode.addr, align 4
  %tobool7 = icmp ne i32 %14, 0
  br i1 %tobool7, label %if.end, label %if.then.8

if.then.8:                                        ; preds = %if.then.6
  %15 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %ref_outside_mem = getelementptr inbounds %struct.elim_table, %struct.elim_table* %15, i32 0, i32 7
  store i32 1, i32* %ref_outside_mem, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.8, %if.then.6
  br label %for.end.430

if.end.9:                                         ; preds = %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.9
  %16 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %16, i32 1
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.27

if.else:                                          ; preds = %sw.bb.2
  %17 = load i32, i32* %regno, align 4
  %idxprom = sext i32 %17 to i64
  %18 = load i16*, i16** @reg_renumber, align 8
  %arrayidx10 = getelementptr inbounds i16, i16* %18, i64 %idxprom
  %19 = load i16, i16* %arrayidx10, align 2
  %conv = sext i16 %19 to i32
  %cmp11 = icmp slt i32 %conv, 0
  br i1 %cmp11, label %land.lhs.true.13, label %if.end.26

land.lhs.true.13:                                 ; preds = %if.else
  %20 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %tobool14 = icmp ne %struct.rtx_def** %20, null
  br i1 %tobool14, label %land.lhs.true.15, label %if.end.26

land.lhs.true.15:                                 ; preds = %land.lhs.true.13
  %21 = load i32, i32* %regno, align 4
  %idxprom16 = sext i32 %21 to i64
  %22 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx17 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %22, i64 %idxprom16
  %23 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx17, align 8
  %tobool18 = icmp ne %struct.rtx_def* %23, null
  br i1 %tobool18, label %land.lhs.true.19, label %if.end.26

land.lhs.true.19:                                 ; preds = %land.lhs.true.15
  %24 = load i32, i32* %regno, align 4
  %idxprom20 = sext i32 %24 to i64
  %25 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx21 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %25, i64 %idxprom20
  %26 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx21, align 8
  %call = call i32 @function_invariant_p(%struct.rtx_def* %26)
  %tobool22 = icmp ne i32 %call, 0
  br i1 %tobool22, label %if.end.26, label %if.then.23

if.then.23:                                       ; preds = %land.lhs.true.19
  %27 = load i32, i32* %regno, align 4
  %idxprom24 = sext i32 %27 to i64
  %28 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx25 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %28, i64 %idxprom24
  %29 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx25, align 8
  %30 = load i32, i32* %mem_mode.addr, align 4
  call void @elimination_effects(%struct.rtx_def* %29, i32 %30)
  br label %if.end.26

if.end.26:                                        ; preds = %if.then.23, %land.lhs.true.19, %land.lhs.true.15, %land.lhs.true.13, %if.else
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.26, %for.end
  br label %for.end.430

sw.bb.28:                                         ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %31 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %31, %struct.elim_table** %ep, align 8
  br label %for.cond.29

for.cond.29:                                      ; preds = %for.inc.196, %sw.bb.28
  %32 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %33 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx30 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %33, i64 4
  %cmp31 = icmp ult %struct.elim_table* %32, %arrayidx30
  br i1 %cmp31, label %for.body.33, label %for.end.198

for.body.33:                                      ; preds = %for.cond.29
  %34 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to_rtx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %34, i32 0, i32 9
  %35 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx, align 8
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtx_def**
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %cmp36 = icmp eq %struct.rtx_def* %35, %37
  br i1 %cmp36, label %if.then.38, label %if.end.195

if.then.38:                                       ; preds = %for.body.33
  %38 = load i32, i32* %mem_mode.addr, align 4
  %idxprom39 = sext i32 %38 to i64
  %arrayidx40 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom39
  %39 = load i8, i8* %arrayidx40, align 1
  %conv41 = zext i8 %39 to i32
  store i32 %conv41, i32* %size, align 4
  %40 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to_rtx42 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %40, i32 0, i32 9
  %41 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx42, align 8
  %42 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 2), align 8
  %cmp43 = icmp eq %struct.rtx_def* %41, %42
  br i1 %cmp43, label %if.then.45, label %if.end.50

if.then.45:                                       ; preds = %if.then.38
  %43 = load i32, i32* @target_flags, align 4
  %and = and i32 %43, 33554432
  %tobool46 = icmp ne i32 %and, 0
  br i1 %tobool46, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.45
  %44 = load i32, i32* %size, align 4
  %add = add nsw i32 %44, 7
  %and47 = and i32 %add, -8
  br label %cond.end

cond.false:                                       ; preds = %if.then.45
  %45 = load i32, i32* %size, align 4
  %add48 = add nsw i32 %45, 1
  %and49 = and i32 %add48, -2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and47, %cond.true ], [ %and49, %cond.false ]
  store i32 %cond, i32* %size, align 4
  br label %if.end.50

if.end.50:                                        ; preds = %cond.end, %if.then.38
  %46 = load i32, i32* %code, align 4
  %cmp51 = icmp eq i32 %46, 96
  br i1 %cmp51, label %if.then.55, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.50
  %47 = load i32, i32* %code, align 4
  %cmp53 = icmp eq i32 %47, 98
  br i1 %cmp53, label %if.then.55, label %if.else.57

if.then.55:                                       ; preds = %lor.lhs.false, %if.end.50
  %48 = load i32, i32* %size, align 4
  %49 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %49, i32 0, i32 5
  %50 = load i32, i32* %offset, align 4
  %add56 = add nsw i32 %50, %48
  store i32 %add56, i32* %offset, align 4
  br label %if.end.194

if.else.57:                                       ; preds = %lor.lhs.false
  %51 = load i32, i32* %code, align 4
  %cmp58 = icmp eq i32 %51, 97
  br i1 %cmp58, label %if.then.63, label %lor.lhs.false.60

lor.lhs.false.60:                                 ; preds = %if.else.57
  %52 = load i32, i32* %code, align 4
  %cmp61 = icmp eq i32 %52, 99
  br i1 %cmp61, label %if.then.63, label %if.else.65

if.then.63:                                       ; preds = %lor.lhs.false.60, %if.else.57
  %53 = load i32, i32* %size, align 4
  %54 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %offset64 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %54, i32 0, i32 5
  %55 = load i32, i32* %offset64, align 4
  %sub = sub nsw i32 %55, %53
  store i32 %sub, i32* %offset64, align 4
  br label %if.end.193

if.else.65:                                       ; preds = %lor.lhs.false.60
  %56 = load i32, i32* %code, align 4
  %cmp66 = icmp eq i32 %56, 100
  br i1 %cmp66, label %land.lhs.true.71, label %lor.lhs.false.68

lor.lhs.false.68:                                 ; preds = %if.else.65
  %57 = load i32, i32* %code, align 4
  %cmp69 = icmp eq i32 %57, 101
  br i1 %cmp69, label %land.lhs.true.71, label %if.end.192

land.lhs.true.71:                                 ; preds = %lor.lhs.false.68, %if.else.65
  %58 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1
  %arrayidx73 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld72, i32 0, i64 1
  %rtx74 = bitcast %union.rtunion_def* %arrayidx73 to %struct.rtx_def**
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rtx74, align 8
  %60 = bitcast %struct.rtx_def* %59 to i32*
  %bf.load75 = load i32, i32* %60, align 8
  %bf.clear76 = and i32 %bf.load75, 65535
  %cmp77 = icmp eq i32 %bf.clear76, 75
  br i1 %cmp77, label %land.lhs.true.79, label %if.end.192

land.lhs.true.79:                                 ; preds = %land.lhs.true.71
  %61 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1
  %arrayidx81 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld80, i32 0, i64 0
  %rtx82 = bitcast %union.rtunion_def* %arrayidx81 to %struct.rtx_def**
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rtx82, align 8
  %63 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i32 0, i64 1
  %rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**
  %64 = load %struct.rtx_def*, %struct.rtx_def** %rtx85, align 8
  %fld86 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1
  %arrayidx87 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld86, i32 0, i64 0
  %rtx88 = bitcast %union.rtunion_def* %arrayidx87 to %struct.rtx_def**
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rtx88, align 8
  %cmp89 = icmp eq %struct.rtx_def* %62, %65
  br i1 %cmp89, label %land.lhs.true.91, label %if.end.192

land.lhs.true.91:                                 ; preds = %land.lhs.true.79
  %66 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld92 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1
  %arrayidx93 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld92, i32 0, i64 1
  %rtx94 = bitcast %union.rtunion_def* %arrayidx93 to %struct.rtx_def**
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rtx94, align 8
  %fld95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1
  %arrayidx96 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld95, i32 0, i64 1
  %rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rtx97, align 8
  %69 = bitcast %struct.rtx_def* %68 to i32*
  %bf.load98 = load i32, i32* %69, align 8
  %bf.clear99 = and i32 %bf.load98, 65535
  %cmp100 = icmp eq i32 %bf.clear99, 67
  br i1 %cmp100, label %if.then.179, label %lor.lhs.false.102

lor.lhs.false.102:                                ; preds = %land.lhs.true.91
  %70 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx104 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld103, i32 0, i64 1
  %rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rtx105, align 8
  %fld106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1
  %arrayidx107 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld106, i32 0, i64 1
  %rtx108 = bitcast %union.rtunion_def* %arrayidx107 to %struct.rtx_def**
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rtx108, align 8
  %73 = bitcast %struct.rtx_def* %72 to i32*
  %bf.load109 = load i32, i32* %73, align 8
  %bf.clear110 = and i32 %bf.load109, 65535
  %cmp111 = icmp eq i32 %bf.clear110, 68
  br i1 %cmp111, label %if.then.179, label %lor.lhs.false.113

lor.lhs.false.113:                                ; preds = %lor.lhs.false.102
  %74 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1
  %arrayidx115 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld114, i32 0, i64 1
  %rtx116 = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtx_def**
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rtx116, align 8
  %fld117 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx118 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld117, i32 0, i64 1
  %rtx119 = bitcast %union.rtunion_def* %arrayidx118 to %struct.rtx_def**
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rtx119, align 8
  %77 = bitcast %struct.rtx_def* %76 to i32*
  %bf.load120 = load i32, i32* %77, align 8
  %bf.clear121 = and i32 %bf.load120, 65535
  %cmp122 = icmp eq i32 %bf.clear121, 54
  br i1 %cmp122, label %if.then.179, label %lor.lhs.false.124

lor.lhs.false.124:                                ; preds = %lor.lhs.false.113
  %78 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i32 0, i64 1
  %rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rtx127, align 8
  %fld128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1
  %arrayidx129 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld128, i32 0, i64 1
  %rtx130 = bitcast %union.rtunion_def* %arrayidx129 to %struct.rtx_def**
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rtx130, align 8
  %81 = bitcast %struct.rtx_def* %80 to i32*
  %bf.load131 = load i32, i32* %81, align 8
  %bf.clear132 = and i32 %bf.load131, 65535
  %cmp133 = icmp eq i32 %bf.clear132, 55
  br i1 %cmp133, label %if.then.179, label %lor.lhs.false.135

lor.lhs.false.135:                                ; preds = %lor.lhs.false.124
  %82 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld136 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1
  %arrayidx137 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld136, i32 0, i64 1
  %rtx138 = bitcast %union.rtunion_def* %arrayidx137 to %struct.rtx_def**
  %83 = load %struct.rtx_def*, %struct.rtx_def** %rtx138, align 8
  %fld139 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx140 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld139, i32 0, i64 1
  %rtx141 = bitcast %union.rtunion_def* %arrayidx140 to %struct.rtx_def**
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rtx141, align 8
  %85 = bitcast %struct.rtx_def* %84 to i32*
  %bf.load142 = load i32, i32* %85, align 8
  %bf.clear143 = and i32 %bf.load142, 65535
  %cmp144 = icmp eq i32 %bf.clear143, 58
  br i1 %cmp144, label %if.then.179, label %lor.lhs.false.146

lor.lhs.false.146:                                ; preds = %lor.lhs.false.135
  %86 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld147 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1
  %arrayidx148 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld147, i32 0, i64 1
  %rtx149 = bitcast %union.rtunion_def* %arrayidx148 to %struct.rtx_def**
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rtx149, align 8
  %fld150 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1
  %arrayidx151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld150, i32 0, i64 1
  %rtx152 = bitcast %union.rtunion_def* %arrayidx151 to %struct.rtx_def**
  %88 = load %struct.rtx_def*, %struct.rtx_def** %rtx152, align 8
  %89 = bitcast %struct.rtx_def* %88 to i32*
  %bf.load153 = load i32, i32* %89, align 8
  %bf.clear154 = and i32 %bf.load153, 65535
  %cmp155 = icmp eq i32 %bf.clear154, 134
  br i1 %cmp155, label %if.then.179, label %lor.lhs.false.157

lor.lhs.false.157:                                ; preds = %lor.lhs.false.146
  %90 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld158 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1
  %arrayidx159 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld158, i32 0, i64 1
  %rtx160 = bitcast %union.rtunion_def* %arrayidx159 to %struct.rtx_def**
  %91 = load %struct.rtx_def*, %struct.rtx_def** %rtx160, align 8
  %fld161 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1
  %arrayidx162 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld161, i32 0, i64 1
  %rtx163 = bitcast %union.rtunion_def* %arrayidx162 to %struct.rtx_def**
  %92 = load %struct.rtx_def*, %struct.rtx_def** %rtx163, align 8
  %93 = bitcast %struct.rtx_def* %92 to i32*
  %bf.load164 = load i32, i32* %93, align 8
  %bf.clear165 = and i32 %bf.load164, 65535
  %cmp166 = icmp eq i32 %bf.clear165, 56
  br i1 %cmp166, label %if.then.179, label %lor.lhs.false.168

lor.lhs.false.168:                                ; preds = %lor.lhs.false.157
  %94 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1
  %arrayidx170 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld169, i32 0, i64 1
  %rtx171 = bitcast %union.rtunion_def* %arrayidx170 to %struct.rtx_def**
  %95 = load %struct.rtx_def*, %struct.rtx_def** %rtx171, align 8
  %fld172 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1
  %arrayidx173 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld172, i32 0, i64 1
  %rtx174 = bitcast %union.rtunion_def* %arrayidx173 to %struct.rtx_def**
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rtx174, align 8
  %97 = bitcast %struct.rtx_def* %96 to i32*
  %bf.load175 = load i32, i32* %97, align 8
  %bf.clear176 = and i32 %bf.load175, 65535
  %cmp177 = icmp eq i32 %bf.clear176, 140
  br i1 %cmp177, label %if.then.179, label %if.end.192

if.then.179:                                      ; preds = %lor.lhs.false.168, %lor.lhs.false.157, %lor.lhs.false.146, %lor.lhs.false.135, %lor.lhs.false.124, %lor.lhs.false.113, %lor.lhs.false.102, %land.lhs.true.91
  %98 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld180 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %98, i32 0, i32 1
  %arrayidx181 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld180, i32 0, i64 1
  %rtx182 = bitcast %union.rtunion_def* %arrayidx181 to %struct.rtx_def**
  %99 = load %struct.rtx_def*, %struct.rtx_def** %rtx182, align 8
  %fld183 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %99, i32 0, i32 1
  %arrayidx184 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld183, i32 0, i64 1
  %rtx185 = bitcast %union.rtunion_def* %arrayidx184 to %struct.rtx_def**
  %100 = load %struct.rtx_def*, %struct.rtx_def** %rtx185, align 8
  %fld186 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1
  %arrayidx187 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld186, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx187 to i64*
  %101 = load i64, i64* %rtwint, align 8
  %102 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %offset188 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %102, i32 0, i32 5
  %103 = load i32, i32* %offset188, align 4
  %conv189 = sext i32 %103 to i64
  %sub190 = sub nsw i64 %conv189, %101
  %conv191 = trunc i64 %sub190 to i32
  store i32 %conv191, i32* %offset188, align 4
  br label %if.end.192

if.end.192:                                       ; preds = %if.then.179, %lor.lhs.false.168, %land.lhs.true.79, %land.lhs.true.71, %lor.lhs.false.68
  br label %if.end.193

if.end.193:                                       ; preds = %if.end.192, %if.then.63
  br label %if.end.194

if.end.194:                                       ; preds = %if.end.193, %if.then.55
  br label %if.end.195

if.end.195:                                       ; preds = %if.end.194, %for.body.33
  br label %for.inc.196

for.inc.196:                                      ; preds = %if.end.195
  %104 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr197 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %104, i32 1
  store %struct.elim_table* %incdec.ptr197, %struct.elim_table** %ep, align 8
  br label %for.cond.29

for.end.198:                                      ; preds = %for.cond.29
  %105 = load i32, i32* %code, align 4
  %cmp199 = icmp eq i32 %105, 101
  br i1 %cmp199, label %if.then.204, label %lor.lhs.false.201

lor.lhs.false.201:                                ; preds = %for.end.198
  %106 = load i32, i32* %code, align 4
  %cmp202 = icmp eq i32 %106, 100
  br i1 %cmp202, label %if.then.204, label %if.end.205

if.then.204:                                      ; preds = %lor.lhs.false.201, %for.end.198
  br label %sw.epilog

if.end.205:                                       ; preds = %lor.lhs.false.201
  br label %sw.bb.206

sw.bb.206:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %if.end.205
  %107 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld207 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1
  %arrayidx208 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld207, i32 0, i64 0
  %rtx209 = bitcast %union.rtunion_def* %arrayidx208 to %struct.rtx_def**
  %108 = load %struct.rtx_def*, %struct.rtx_def** %rtx209, align 8
  %109 = load i32, i32* %mem_mode.addr, align 4
  call void @elimination_effects(%struct.rtx_def* %108, i32 %109)
  br label %for.end.430

sw.bb.210:                                        ; preds = %entry
  %110 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld211 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %110, i32 0, i32 1
  %arrayidx212 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld211, i32 0, i64 0
  %rtx213 = bitcast %union.rtunion_def* %arrayidx212 to %struct.rtx_def**
  %111 = load %struct.rtx_def*, %struct.rtx_def** %rtx213, align 8
  %112 = bitcast %struct.rtx_def* %111 to i32*
  %bf.load214 = load i32, i32* %112, align 8
  %bf.clear215 = and i32 %bf.load214, 65535
  %cmp216 = icmp eq i32 %bf.clear215, 61
  br i1 %cmp216, label %land.lhs.true.218, label %if.end.250

land.lhs.true.218:                                ; preds = %sw.bb.210
  %113 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %114 = bitcast %struct.rtx_def* %113 to i32*
  %bf.load219 = load i32, i32* %114, align 8
  %bf.lshr = lshr i32 %bf.load219, 16
  %bf.clear220 = and i32 %bf.lshr, 255
  %idxprom221 = sext i32 %bf.clear220 to i64
  %arrayidx222 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom221
  %115 = load i8, i8* %arrayidx222, align 1
  %conv223 = zext i8 %115 to i32
  %116 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld224 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i32 0, i32 1
  %arrayidx225 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld224, i32 0, i64 0
  %rtx226 = bitcast %union.rtunion_def* %arrayidx225 to %struct.rtx_def**
  %117 = load %struct.rtx_def*, %struct.rtx_def** %rtx226, align 8
  %118 = bitcast %struct.rtx_def* %117 to i32*
  %bf.load227 = load i32, i32* %118, align 8
  %bf.lshr228 = lshr i32 %bf.load227, 16
  %bf.clear229 = and i32 %bf.lshr228, 255
  %idxprom230 = sext i32 %bf.clear229 to i64
  %arrayidx231 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom230
  %119 = load i8, i8* %arrayidx231, align 1
  %conv232 = zext i8 %119 to i32
  %cmp233 = icmp sle i32 %conv223, %conv232
  br i1 %cmp233, label %land.lhs.true.235, label %if.end.250

land.lhs.true.235:                                ; preds = %land.lhs.true.218
  %120 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %cmp236 = icmp ne %struct.rtx_def** %120, null
  br i1 %cmp236, label %land.lhs.true.238, label %if.end.250

land.lhs.true.238:                                ; preds = %land.lhs.true.235
  %121 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld239 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %121, i32 0, i32 1
  %arrayidx240 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld239, i32 0, i64 0
  %rtx241 = bitcast %union.rtunion_def* %arrayidx240 to %struct.rtx_def**
  %122 = load %struct.rtx_def*, %struct.rtx_def** %rtx241, align 8
  %fld242 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i32 0, i32 1
  %arrayidx243 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld242, i32 0, i64 0
  %rtuint244 = bitcast %union.rtunion_def* %arrayidx243 to i32*
  %123 = load i32, i32* %rtuint244, align 4
  %idxprom245 = zext i32 %123 to i64
  %124 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx246 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %124, i64 %idxprom245
  %125 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx246, align 8
  %cmp247 = icmp ne %struct.rtx_def* %125, null
  br i1 %cmp247, label %if.then.249, label %if.end.250

if.then.249:                                      ; preds = %land.lhs.true.238
  br label %for.end.430

if.end.250:                                       ; preds = %land.lhs.true.238, %land.lhs.true.235, %land.lhs.true.218, %sw.bb.210
  %126 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld251 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1
  %arrayidx252 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld251, i32 0, i64 0
  %rtx253 = bitcast %union.rtunion_def* %arrayidx252 to %struct.rtx_def**
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rtx253, align 8
  %128 = load i32, i32* %mem_mode.addr, align 4
  call void @elimination_effects(%struct.rtx_def* %127, i32 %128)
  br label %for.end.430

sw.bb.254:                                        ; preds = %entry
  %129 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %129, %struct.elim_table** %ep, align 8
  br label %for.cond.255

for.cond.255:                                     ; preds = %for.inc.269, %sw.bb.254
  %130 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %131 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx256 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %131, i64 4
  %cmp257 = icmp ult %struct.elim_table* %130, %arrayidx256
  br i1 %cmp257, label %for.body.259, label %for.end.271

for.body.259:                                     ; preds = %for.cond.255
  %132 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %from_rtx260 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %132, i32 0, i32 8
  %133 = load %struct.rtx_def*, %struct.rtx_def** %from_rtx260, align 8
  %134 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld261 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %134, i32 0, i32 1
  %arrayidx262 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld261, i32 0, i64 0
  %rtx263 = bitcast %union.rtunion_def* %arrayidx262 to %struct.rtx_def**
  %135 = load %struct.rtx_def*, %struct.rtx_def** %rtx263, align 8
  %cmp264 = icmp eq %struct.rtx_def* %133, %135
  br i1 %cmp264, label %if.then.266, label %if.end.268

if.then.266:                                      ; preds = %for.body.259
  %136 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate267 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %136, i32 0, i32 3
  store i32 0, i32* %can_eliminate267, align 4
  br label %if.end.268

if.end.268:                                       ; preds = %if.then.266, %for.body.259
  br label %for.inc.269

for.inc.269:                                      ; preds = %if.end.268
  %137 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr270 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %137, i32 1
  store %struct.elim_table* %incdec.ptr270, %struct.elim_table** %ep, align 8
  br label %for.cond.255

for.end.271:                                      ; preds = %for.cond.255
  %138 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld272 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %138, i32 0, i32 1
  %arrayidx273 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld272, i32 0, i64 0
  %rtx274 = bitcast %union.rtunion_def* %arrayidx273 to %struct.rtx_def**
  %139 = load %struct.rtx_def*, %struct.rtx_def** %rtx274, align 8
  %140 = load i32, i32* %mem_mode.addr, align 4
  call void @elimination_effects(%struct.rtx_def* %139, i32 %140)
  br label %for.end.430

sw.bb.275:                                        ; preds = %entry
  %141 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %141, %struct.elim_table** %ep, align 8
  br label %for.cond.276

for.cond.276:                                     ; preds = %for.inc.290, %sw.bb.275
  %142 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %143 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx277 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %143, i64 4
  %cmp278 = icmp ult %struct.elim_table* %142, %arrayidx277
  br i1 %cmp278, label %for.body.280, label %for.end.292

for.body.280:                                     ; preds = %for.cond.276
  %144 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to_rtx281 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %144, i32 0, i32 9
  %145 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx281, align 8
  %146 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld282 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %146, i32 0, i32 1
  %arrayidx283 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld282, i32 0, i64 0
  %rtx284 = bitcast %union.rtunion_def* %arrayidx283 to %struct.rtx_def**
  %147 = load %struct.rtx_def*, %struct.rtx_def** %rtx284, align 8
  %cmp285 = icmp eq %struct.rtx_def* %145, %147
  br i1 %cmp285, label %if.then.287, label %if.end.289

if.then.287:                                      ; preds = %for.body.280
  %148 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate288 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %148, i32 0, i32 3
  store i32 0, i32* %can_eliminate288, align 4
  br label %if.end.289

if.end.289:                                       ; preds = %if.then.287, %for.body.280
  br label %for.inc.290

for.inc.290:                                      ; preds = %if.end.289
  %149 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr291 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %149, i32 1
  store %struct.elim_table* %incdec.ptr291, %struct.elim_table** %ep, align 8
  br label %for.cond.276

for.end.292:                                      ; preds = %for.cond.276
  %150 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld293 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %150, i32 0, i32 1
  %arrayidx294 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld293, i32 0, i64 0
  %rtx295 = bitcast %union.rtunion_def* %arrayidx294 to %struct.rtx_def**
  %151 = load %struct.rtx_def*, %struct.rtx_def** %rtx295, align 8
  %152 = load i32, i32* %mem_mode.addr, align 4
  call void @elimination_effects(%struct.rtx_def* %151, i32 %152)
  br label %for.end.430

sw.bb.296:                                        ; preds = %entry
  %153 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld297 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1
  %arrayidx298 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld297, i32 0, i64 0
  %rtx299 = bitcast %union.rtunion_def* %arrayidx298 to %struct.rtx_def**
  %154 = load %struct.rtx_def*, %struct.rtx_def** %rtx299, align 8
  %155 = bitcast %struct.rtx_def* %154 to i32*
  %bf.load300 = load i32, i32* %155, align 8
  %bf.clear301 = and i32 %bf.load300, 65535
  %cmp302 = icmp eq i32 %bf.clear301, 61
  br i1 %cmp302, label %if.then.304, label %if.end.365

if.then.304:                                      ; preds = %sw.bb.296
  %156 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %156, %struct.elim_table** %ep, align 8
  br label %for.cond.305

for.cond.305:                                     ; preds = %for.inc.362, %if.then.304
  %157 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %158 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx306 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %158, i64 4
  %cmp307 = icmp ult %struct.elim_table* %157, %arrayidx306
  br i1 %cmp307, label %for.body.309, label %for.end.364

for.body.309:                                     ; preds = %for.cond.305
  %159 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %to_rtx310 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %159, i32 0, i32 9
  %160 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx310, align 8
  %161 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld311 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %161, i32 0, i32 1
  %arrayidx312 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld311, i32 0, i64 0
  %rtx313 = bitcast %union.rtunion_def* %arrayidx312 to %struct.rtx_def**
  %162 = load %struct.rtx_def*, %struct.rtx_def** %rtx313, align 8
  %cmp314 = icmp eq %struct.rtx_def* %160, %162
  br i1 %cmp314, label %land.lhs.true.316, label %if.end.361

land.lhs.true.316:                                ; preds = %for.body.309
  %163 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld317 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %163, i32 0, i32 1
  %arrayidx318 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld317, i32 0, i64 0
  %rtx319 = bitcast %union.rtunion_def* %arrayidx318 to %struct.rtx_def**
  %164 = load %struct.rtx_def*, %struct.rtx_def** %rtx319, align 8
  %165 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 4), align 8
  %cmp320 = icmp ne %struct.rtx_def* %164, %165
  br i1 %cmp320, label %if.then.322, label %if.end.361

if.then.322:                                      ; preds = %land.lhs.true.316
  %166 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld323 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %166, i32 0, i32 1
  %arrayidx324 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld323, i32 0, i64 1
  %rtx325 = bitcast %union.rtunion_def* %arrayidx324 to %struct.rtx_def**
  %167 = load %struct.rtx_def*, %struct.rtx_def** %rtx325, align 8
  store %struct.rtx_def* %167, %struct.rtx_def** %src, align 8
  %168 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %169 = bitcast %struct.rtx_def* %168 to i32*
  %bf.load326 = load i32, i32* %169, align 8
  %bf.clear327 = and i32 %bf.load326, 65535
  %cmp328 = icmp eq i32 %bf.clear327, 75
  br i1 %cmp328, label %land.lhs.true.330, label %if.else.358

land.lhs.true.330:                                ; preds = %if.then.322
  %170 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld331 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %170, i32 0, i32 1
  %arrayidx332 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld331, i32 0, i64 0
  %rtx333 = bitcast %union.rtunion_def* %arrayidx332 to %struct.rtx_def**
  %171 = load %struct.rtx_def*, %struct.rtx_def** %rtx333, align 8
  %172 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld334 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %172, i32 0, i32 1
  %arrayidx335 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld334, i32 0, i64 0
  %rtx336 = bitcast %union.rtunion_def* %arrayidx335 to %struct.rtx_def**
  %173 = load %struct.rtx_def*, %struct.rtx_def** %rtx336, align 8
  %cmp337 = icmp eq %struct.rtx_def* %171, %173
  br i1 %cmp337, label %land.lhs.true.339, label %if.else.358

land.lhs.true.339:                                ; preds = %land.lhs.true.330
  %174 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld340 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %174, i32 0, i32 1
  %arrayidx341 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld340, i32 0, i64 1
  %rtx342 = bitcast %union.rtunion_def* %arrayidx341 to %struct.rtx_def**
  %175 = load %struct.rtx_def*, %struct.rtx_def** %rtx342, align 8
  %176 = bitcast %struct.rtx_def* %175 to i32*
  %bf.load343 = load i32, i32* %176, align 8
  %bf.clear344 = and i32 %bf.load343, 65535
  %cmp345 = icmp eq i32 %bf.clear344, 54
  br i1 %cmp345, label %if.then.347, label %if.else.358

if.then.347:                                      ; preds = %land.lhs.true.339
  %177 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld348 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %177, i32 0, i32 1
  %arrayidx349 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld348, i32 0, i64 1
  %rtx350 = bitcast %union.rtunion_def* %arrayidx349 to %struct.rtx_def**
  %178 = load %struct.rtx_def*, %struct.rtx_def** %rtx350, align 8
  %fld351 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %178, i32 0, i32 1
  %arrayidx352 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld351, i32 0, i64 0
  %rtwint353 = bitcast %union.rtunion_def* %arrayidx352 to i64*
  %179 = load i64, i64* %rtwint353, align 8
  %180 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %offset354 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %180, i32 0, i32 5
  %181 = load i32, i32* %offset354, align 4
  %conv355 = sext i32 %181 to i64
  %sub356 = sub nsw i64 %conv355, %179
  %conv357 = trunc i64 %sub356 to i32
  store i32 %conv357, i32* %offset354, align 4
  br label %if.end.360

if.else.358:                                      ; preds = %land.lhs.true.339, %land.lhs.true.330, %if.then.322
  %182 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate359 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %182, i32 0, i32 3
  store i32 0, i32* %can_eliminate359, align 4
  br label %if.end.360

if.end.360:                                       ; preds = %if.else.358, %if.then.347
  br label %if.end.361

if.end.361:                                       ; preds = %if.end.360, %land.lhs.true.316, %for.body.309
  br label %for.inc.362

for.inc.362:                                      ; preds = %if.end.361
  %183 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr363 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %183, i32 1
  store %struct.elim_table* %incdec.ptr363, %struct.elim_table** %ep, align 8
  br label %for.cond.305

for.end.364:                                      ; preds = %for.cond.305
  br label %if.end.365

if.end.365:                                       ; preds = %for.end.364, %sw.bb.296
  %184 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld366 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %184, i32 0, i32 1
  %arrayidx367 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld366, i32 0, i64 0
  %rtx368 = bitcast %union.rtunion_def* %arrayidx367 to %struct.rtx_def**
  %185 = load %struct.rtx_def*, %struct.rtx_def** %rtx368, align 8
  call void @elimination_effects(%struct.rtx_def* %185, i32 0)
  %186 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld369 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %186, i32 0, i32 1
  %arrayidx370 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld369, i32 0, i64 1
  %rtx371 = bitcast %union.rtunion_def* %arrayidx370 to %struct.rtx_def**
  %187 = load %struct.rtx_def*, %struct.rtx_def** %rtx371, align 8
  call void @elimination_effects(%struct.rtx_def* %187, i32 0)
  br label %for.end.430

sw.bb.372:                                        ; preds = %entry
  %188 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld373 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %188, i32 0, i32 1
  %arrayidx374 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld373, i32 0, i64 0
  %rtx375 = bitcast %union.rtunion_def* %arrayidx374 to %struct.rtx_def**
  %189 = load %struct.rtx_def*, %struct.rtx_def** %rtx375, align 8
  %190 = bitcast %struct.rtx_def* %189 to i32*
  %bf.load376 = load i32, i32* %190, align 8
  %bf.clear377 = and i32 %bf.load376, 65535
  %cmp378 = icmp eq i32 %bf.clear377, 70
  br i1 %cmp378, label %if.then.380, label %if.end.381

if.then.380:                                      ; preds = %sw.bb.372
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 2839, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.elimination_effects, i32 0, i32 0)) #5
  unreachable

if.end.381:                                       ; preds = %sw.bb.372
  %191 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld382 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %191, i32 0, i32 1
  %arrayidx383 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld382, i32 0, i64 0
  %rtx384 = bitcast %union.rtunion_def* %arrayidx383 to %struct.rtx_def**
  %192 = load %struct.rtx_def*, %struct.rtx_def** %rtx384, align 8
  %193 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %194 = bitcast %struct.rtx_def* %193 to i32*
  %bf.load385 = load i32, i32* %194, align 8
  %bf.lshr386 = lshr i32 %bf.load385, 16
  %bf.clear387 = and i32 %bf.lshr386, 255
  call void @elimination_effects(%struct.rtx_def* %192, i32 %bf.clear387)
  br label %for.end.430

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.then.204
  %195 = load i32, i32* %code, align 4
  %idxprom388 = sext i32 %195 to i64
  %arrayidx389 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom388
  %196 = load i8*, i8** %arrayidx389, align 8
  store i8* %196, i8** %fmt, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.390

for.cond.390:                                     ; preds = %for.inc.427, %sw.epilog
  %197 = load i32, i32* %i, align 4
  %198 = load i32, i32* %code, align 4
  %idxprom391 = sext i32 %198 to i64
  %arrayidx392 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom391
  %199 = load i8, i8* %arrayidx392, align 1
  %conv393 = zext i8 %199 to i32
  %cmp394 = icmp slt i32 %197, %conv393
  br i1 %cmp394, label %for.body.396, label %for.end.430

for.body.396:                                     ; preds = %for.cond.390
  %200 = load i8*, i8** %fmt, align 8
  %201 = load i8, i8* %200, align 1
  %conv397 = sext i8 %201 to i32
  %cmp398 = icmp eq i32 %conv397, 101
  br i1 %cmp398, label %if.then.400, label %if.else.405

if.then.400:                                      ; preds = %for.body.396
  %202 = load i32, i32* %i, align 4
  %idxprom401 = sext i32 %202 to i64
  %203 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld402 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %203, i32 0, i32 1
  %arrayidx403 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld402, i32 0, i64 %idxprom401
  %rtx404 = bitcast %union.rtunion_def* %arrayidx403 to %struct.rtx_def**
  %204 = load %struct.rtx_def*, %struct.rtx_def** %rtx404, align 8
  %205 = load i32, i32* %mem_mode.addr, align 4
  call void @elimination_effects(%struct.rtx_def* %204, i32 %205)
  br label %if.end.426

if.else.405:                                      ; preds = %for.body.396
  %206 = load i8*, i8** %fmt, align 8
  %207 = load i8, i8* %206, align 1
  %conv406 = sext i8 %207 to i32
  %cmp407 = icmp eq i32 %conv406, 69
  br i1 %cmp407, label %if.then.409, label %if.end.425

if.then.409:                                      ; preds = %if.else.405
  store i32 0, i32* %j, align 4
  br label %for.cond.410

for.cond.410:                                     ; preds = %for.inc.423, %if.then.409
  %208 = load i32, i32* %j, align 4
  %209 = load i32, i32* %i, align 4
  %idxprom411 = sext i32 %209 to i64
  %210 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld412 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %210, i32 0, i32 1
  %arrayidx413 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld412, i32 0, i64 %idxprom411
  %rtvec = bitcast %union.rtunion_def* %arrayidx413 to %struct.rtvec_def**
  %211 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %211, i32 0, i32 0
  %212 = load i32, i32* %num_elem, align 4
  %cmp414 = icmp slt i32 %208, %212
  br i1 %cmp414, label %for.body.416, label %for.end.424

for.body.416:                                     ; preds = %for.cond.410
  %213 = load i32, i32* %j, align 4
  %idxprom417 = sext i32 %213 to i64
  %214 = load i32, i32* %i, align 4
  %idxprom418 = sext i32 %214 to i64
  %215 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld419 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %215, i32 0, i32 1
  %arrayidx420 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld419, i32 0, i64 %idxprom418
  %rtvec421 = bitcast %union.rtunion_def* %arrayidx420 to %struct.rtvec_def**
  %216 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec421, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %216, i32 0, i32 1
  %arrayidx422 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom417
  %217 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx422, align 8
  %218 = load i32, i32* %mem_mode.addr, align 4
  call void @elimination_effects(%struct.rtx_def* %217, i32 %218)
  br label %for.inc.423

for.inc.423:                                      ; preds = %for.body.416
  %219 = load i32, i32* %j, align 4
  %inc = add nsw i32 %219, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond.410

for.end.424:                                      ; preds = %for.cond.410
  br label %if.end.425

if.end.425:                                       ; preds = %for.end.424, %if.else.405
  br label %if.end.426

if.end.426:                                       ; preds = %if.end.425, %if.then.400
  br label %for.inc.427

for.inc.427:                                      ; preds = %if.end.426
  %220 = load i32, i32* %i, align 4
  %inc428 = add nsw i32 %220, 1
  store i32 %inc428, i32* %i, align 4
  %221 = load i8*, i8** %fmt, align 8
  %incdec.ptr429 = getelementptr inbounds i8, i8* %221, i32 1
  store i8* %incdec.ptr429, i8** %fmt, align 8
  br label %for.cond.390

for.end.430:                                      ; preds = %sw.bb, %if.end, %if.end.27, %sw.bb.206, %if.then.249, %if.end.250, %for.end.271, %for.end.292, %if.end.365, %if.end.381, %for.cond.390
  ret void
}

declare %struct.rtx_def* @emit_insn_after(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @check_eliminable_occurrences(%struct.rtx_def* %x) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %ep = alloca %struct.elim_table*, align 8
  %j = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %cmp = icmp eq %struct.rtx_def* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %for.end.50

if.end:                                           ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load = load i32, i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %3 = load i32, i32* %code, align 4
  %cmp1 = icmp eq i32 %3, 61
  br i1 %cmp1, label %land.lhs.true, label %if.end.11

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %5 = load i32, i32* %rtuint, align 4
  %cmp2 = icmp ult i32 %5, 53
  br i1 %cmp2, label %if.then.3, label %if.end.11

if.then.3:                                        ; preds = %land.lhs.true
  %6 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  store %struct.elim_table* %6, %struct.elim_table** %ep, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.3
  %7 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %8 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8
  %arrayidx4 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %8, i64 4
  %cmp5 = icmp ult %struct.elim_table* %7, %arrayidx4
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %from_rtx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %9, i32 0, i32 8
  %10 = load %struct.rtx_def*, %struct.rtx_def** %from_rtx, align 8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %cmp6 = icmp eq %struct.rtx_def* %10, %11
  br i1 %cmp6, label %land.lhs.true.7, label %if.end.10

land.lhs.true.7:                                  ; preds = %for.body
  %12 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate = getelementptr inbounds %struct.elim_table, %struct.elim_table* %12, i32 0, i32 3
  %13 = load i32, i32* %can_eliminate, align 4
  %tobool = icmp ne i32 %13, 0
  br i1 %tobool, label %if.then.8, label %if.end.10

if.then.8:                                        ; preds = %land.lhs.true.7
  %14 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %can_eliminate9 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %14, i32 0, i32 3
  store i32 0, i32* %can_eliminate9, align 4
  br label %if.end.10

if.end.10:                                        ; preds = %if.then.8, %land.lhs.true.7, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.10
  %15 = load %struct.elim_table*, %struct.elim_table** %ep, align 8
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %15, i32 1
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %for.end.50

if.end.11:                                        ; preds = %land.lhs.true, %if.end
  %16 = load i32, i32* %code, align 4
  %idxprom = sext i32 %16 to i64
  %arrayidx12 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom
  %17 = load i8*, i8** %arrayidx12, align 8
  store i8* %17, i8** %fmt, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.13

for.cond.13:                                      ; preds = %for.inc.47, %if.end.11
  %18 = load i32, i32* %i, align 4
  %19 = load i32, i32* %code, align 4
  %idxprom14 = sext i32 %19 to i64
  %arrayidx15 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom14
  %20 = load i8, i8* %arrayidx15, align 1
  %conv = zext i8 %20 to i32
  %cmp16 = icmp slt i32 %18, %conv
  br i1 %cmp16, label %for.body.18, label %for.end.50

for.body.18:                                      ; preds = %for.cond.13
  %21 = load i8*, i8** %fmt, align 8
  %22 = load i8, i8* %21, align 1
  %conv19 = sext i8 %22 to i32
  %cmp20 = icmp eq i32 %conv19, 101
  br i1 %cmp20, label %if.then.22, label %if.else

if.then.22:                                       ; preds = %for.body.18
  %23 = load i32, i32* %i, align 4
  %idxprom23 = sext i32 %23 to i64
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i32 0, i64 %idxprom23
  %rtx = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  call void @check_eliminable_occurrences(%struct.rtx_def* %25)
  br label %if.end.46

if.else:                                          ; preds = %for.body.18
  %26 = load i8*, i8** %fmt, align 8
  %27 = load i8, i8* %26, align 1
  %conv26 = sext i8 %27 to i32
  %cmp27 = icmp eq i32 %conv26, 69
  br i1 %cmp27, label %if.then.29, label %if.end.45

if.then.29:                                       ; preds = %if.else
  store i32 0, i32* %j, align 4
  br label %for.cond.30

for.cond.30:                                      ; preds = %for.inc.43, %if.then.29
  %28 = load i32, i32* %j, align 4
  %29 = load i32, i32* %i, align 4
  %idxprom31 = sext i32 %29 to i64
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i32 0, i64 %idxprom31
  %rtvec = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtvec_def**
  %31 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %31, i32 0, i32 0
  %32 = load i32, i32* %num_elem, align 4
  %cmp34 = icmp slt i32 %28, %32
  br i1 %cmp34, label %for.body.36, label %for.end.44

for.body.36:                                      ; preds = %for.cond.30
  %33 = load i32, i32* %j, align 4
  %idxprom37 = sext i32 %33 to i64
  %34 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %34 to i64
  %35 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i32 0, i64 %idxprom38
  %rtvec41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtvec_def**
  %36 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec41, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %36, i32 0, i32 1
  %arrayidx42 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom37
  %37 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx42, align 8
  call void @check_eliminable_occurrences(%struct.rtx_def* %37)
  br label %for.inc.43

for.inc.43:                                       ; preds = %for.body.36
  %38 = load i32, i32* %j, align 4
  %inc = add nsw i32 %38, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond.30

for.end.44:                                       ; preds = %for.cond.30
  br label %if.end.45

if.end.45:                                        ; preds = %for.end.44, %if.else
  br label %if.end.46

if.end.46:                                        ; preds = %if.end.45, %if.then.22
  br label %for.inc.47

for.inc.47:                                       ; preds = %if.end.46
  %39 = load i32, i32* %i, align 4
  %inc48 = add nsw i32 %39, 1
  store i32 %inc48, i32* %i, align 4
  %40 = load i8*, i8** %fmt, align 8
  %incdec.ptr49 = getelementptr inbounds i8, i8* %40, i32 1
  store i8* %incdec.ptr49, i8** %fmt, align 8
  br label %for.cond.13

for.end.50:                                       ; preds = %if.then, %for.end, %for.cond.13
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @find_reload_regs(%struct.insn_chain* %chain) #0 {
entry:
  %chain.addr = alloca %struct.insn_chain*, align 8
  %i = alloca i32, align 4
  %regno = alloca i32, align 4
  %r = alloca i32, align 4
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %n_reloads = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %1, i32 0, i32 8
  %2 = load i32, i32* %n_reloads, align 4
  %cmp = icmp slt i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %4 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %rld = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %4, i32 0, i32 7
  %5 = load %struct.reload*, %struct.reload** %rld, align 8
  %arrayidx = getelementptr inbounds %struct.reload, %struct.reload* %5, i64 %idxprom
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx, i32 0, i32 11
  %6 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8
  %tobool = icmp ne %struct.rtx_def* %6, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %7 to i64
  %8 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %rld2 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %8, i32 0, i32 7
  %9 = load %struct.reload*, %struct.reload** %rld2, align 8
  %arrayidx3 = getelementptr inbounds %struct.reload, %struct.reload* %9, i64 %idxprom1
  %reg_rtx4 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3, i32 0, i32 11
  %10 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx4, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx5 to i32*
  %11 = load i32, i32* %rtuint, align 4
  store i32 %11, i32* %regno, align 4
  %12 = load i32, i32* %regno, align 4
  %13 = load i32, i32* %i, align 4
  %idxprom6 = sext i32 %13 to i64
  %14 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %rld7 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %14, i32 0, i32 7
  %15 = load %struct.reload*, %struct.reload** %rld7, align 8
  %arrayidx8 = getelementptr inbounds %struct.reload, %struct.reload* %15, i64 %idxprom6
  %regno9 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx8, i32 0, i32 10
  store i32 %12, i32* %regno9, align 4
  %16 = load i32, i32* %regno, align 4
  %cmp10 = icmp sge i32 %16, 8
  br i1 %cmp10, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.then
  %17 = load i32, i32* %regno, align 4
  %cmp11 = icmp sle i32 %17, 15
  br i1 %cmp11, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.then
  %18 = load i32, i32* %regno, align 4
  %cmp12 = icmp sge i32 %18, 21
  br i1 %cmp12, label %land.lhs.true.13, label %lor.lhs.false.15

land.lhs.true.13:                                 ; preds = %lor.lhs.false
  %19 = load i32, i32* %regno, align 4
  %cmp14 = icmp sle i32 %19, 28
  br i1 %cmp14, label %cond.true, label %lor.lhs.false.15

lor.lhs.false.15:                                 ; preds = %land.lhs.true.13, %lor.lhs.false
  %20 = load i32, i32* %regno, align 4
  %cmp16 = icmp sge i32 %20, 45
  br i1 %cmp16, label %land.lhs.true.17, label %lor.lhs.false.19

land.lhs.true.17:                                 ; preds = %lor.lhs.false.15
  %21 = load i32, i32* %regno, align 4
  %cmp18 = icmp sle i32 %21, 52
  br i1 %cmp18, label %cond.true, label %lor.lhs.false.19

lor.lhs.false.19:                                 ; preds = %land.lhs.true.17, %lor.lhs.false.15
  %22 = load i32, i32* %regno, align 4
  %cmp20 = icmp sge i32 %22, 29
  br i1 %cmp20, label %land.lhs.true.21, label %cond.false

land.lhs.true.21:                                 ; preds = %lor.lhs.false.19
  %23 = load i32, i32* %regno, align 4
  %cmp22 = icmp sle i32 %23, 36
  br i1 %cmp22, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.21, %land.lhs.true.17, %land.lhs.true.13, %land.lhs.true
  %24 = load i32, i32* %i, align 4
  %idxprom23 = sext i32 %24 to i64
  %25 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %rld24 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %25, i32 0, i32 7
  %26 = load %struct.reload*, %struct.reload** %rld24, align 8
  %arrayidx25 = getelementptr inbounds %struct.reload, %struct.reload* %26, i64 %idxprom23
  %reg_rtx26 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx25, i32 0, i32 11
  %27 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx26, align 8
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load = load i32, i32* %28, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom27 = sext i32 %bf.clear to i64
  %arrayidx28 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom27
  %29 = load i32, i32* %arrayidx28, align 4
  %cmp29 = icmp eq i32 %29, 5
  br i1 %cmp29, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %30 = load i32, i32* %i, align 4
  %idxprom30 = sext i32 %30 to i64
  %31 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %rld31 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %31, i32 0, i32 7
  %32 = load %struct.reload*, %struct.reload** %rld31, align 8
  %arrayidx32 = getelementptr inbounds %struct.reload, %struct.reload* %32, i64 %idxprom30
  %reg_rtx33 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx32, i32 0, i32 11
  %33 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx33, align 8
  %34 = bitcast %struct.rtx_def* %33 to i32*
  %bf.load34 = load i32, i32* %34, align 8
  %bf.lshr35 = lshr i32 %bf.load34, 16
  %bf.clear36 = and i32 %bf.lshr35, 255
  %idxprom37 = sext i32 %bf.clear36 to i64
  %arrayidx38 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom37
  %35 = load i32, i32* %arrayidx38, align 4
  %cmp39 = icmp eq i32 %35, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %36 = phi i1 [ true, %cond.true ], [ %cmp39, %lor.rhs ]
  %cond = select i1 %36, i32 2, i32 1
  br label %cond.end.83

cond.false:                                       ; preds = %land.lhs.true.21, %lor.lhs.false.19
  %37 = load i32, i32* %i, align 4
  %idxprom40 = sext i32 %37 to i64
  %38 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %rld41 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %38, i32 0, i32 7
  %39 = load %struct.reload*, %struct.reload** %rld41, align 8
  %arrayidx42 = getelementptr inbounds %struct.reload, %struct.reload* %39, i64 %idxprom40
  %reg_rtx43 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx42, i32 0, i32 11
  %40 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx43, align 8
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load44 = load i32, i32* %41, align 8
  %bf.lshr45 = lshr i32 %bf.load44, 16
  %bf.clear46 = and i32 %bf.lshr45, 255
  %cmp47 = icmp eq i32 %bf.clear46, 18
  br i1 %cmp47, label %cond.true.48, label %cond.false.51

cond.true.48:                                     ; preds = %cond.false
  %42 = load i32, i32* @target_flags, align 4
  %and = and i32 %42, 33554432
  %tobool49 = icmp ne i32 %and, 0
  %cond50 = select i1 %tobool49, i32 2, i32 3
  br label %cond.end.81

cond.false.51:                                    ; preds = %cond.false
  %43 = load i32, i32* %i, align 4
  %idxprom52 = sext i32 %43 to i64
  %44 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %rld53 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %44, i32 0, i32 7
  %45 = load %struct.reload*, %struct.reload** %rld53, align 8
  %arrayidx54 = getelementptr inbounds %struct.reload, %struct.reload* %45, i64 %idxprom52
  %reg_rtx55 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx54, i32 0, i32 11
  %46 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx55, align 8
  %47 = bitcast %struct.rtx_def* %46 to i32*
  %bf.load56 = load i32, i32* %47, align 8
  %bf.lshr57 = lshr i32 %bf.load56, 16
  %bf.clear58 = and i32 %bf.lshr57, 255
  %cmp59 = icmp eq i32 %bf.clear58, 24
  br i1 %cmp59, label %cond.true.60, label %cond.false.64

cond.true.60:                                     ; preds = %cond.false.51
  %48 = load i32, i32* @target_flags, align 4
  %and61 = and i32 %48, 33554432
  %tobool62 = icmp ne i32 %and61, 0
  %cond63 = select i1 %tobool62, i32 4, i32 6
  br label %cond.end

cond.false.64:                                    ; preds = %cond.false.51
  %49 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %49 to i64
  %50 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %rld66 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %50, i32 0, i32 7
  %51 = load %struct.reload*, %struct.reload** %rld66, align 8
  %arrayidx67 = getelementptr inbounds %struct.reload, %struct.reload* %51, i64 %idxprom65
  %reg_rtx68 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx67, i32 0, i32 11
  %52 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx68, align 8
  %53 = bitcast %struct.rtx_def* %52 to i32*
  %bf.load69 = load i32, i32* %53, align 8
  %bf.lshr70 = lshr i32 %bf.load69, 16
  %bf.clear71 = and i32 %bf.lshr70, 255
  %idxprom72 = sext i32 %bf.clear71 to i64
  %arrayidx73 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom72
  %54 = load i8, i8* %arrayidx73, align 1
  %conv = zext i8 %54 to i32
  %55 = load i32, i32* @target_flags, align 4
  %and74 = and i32 %55, 33554432
  %tobool75 = icmp ne i32 %and74, 0
  %cond76 = select i1 %tobool75, i32 8, i32 4
  %add = add nsw i32 %conv, %cond76
  %sub = sub nsw i32 %add, 1
  %56 = load i32, i32* @target_flags, align 4
  %and77 = and i32 %56, 33554432
  %tobool78 = icmp ne i32 %and77, 0
  %cond79 = select i1 %tobool78, i32 8, i32 4
  %div = sdiv i32 %sub, %cond79
  br label %cond.end

cond.end:                                         ; preds = %cond.false.64, %cond.true.60
  %cond80 = phi i32 [ %cond63, %cond.true.60 ], [ %div, %cond.false.64 ]
  br label %cond.end.81

cond.end.81:                                      ; preds = %cond.end, %cond.true.48
  %cond82 = phi i32 [ %cond50, %cond.true.48 ], [ %cond80, %cond.end ]
  br label %cond.end.83

cond.end.83:                                      ; preds = %cond.end.81, %lor.end
  %cond84 = phi i32 [ %cond, %lor.end ], [ %cond82, %cond.end.81 ]
  %57 = load i32, i32* %i, align 4
  %idxprom85 = sext i32 %57 to i64
  %58 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %rld86 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %58, i32 0, i32 7
  %59 = load %struct.reload*, %struct.reload** %rld86, align 8
  %arrayidx87 = getelementptr inbounds %struct.reload, %struct.reload* %59, i64 %idxprom85
  %nregs = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx87, i32 0, i32 6
  store i32 %cond84, i32* %nregs, align 4
  br label %if.end

if.else:                                          ; preds = %for.body
  %60 = load i32, i32* %i, align 4
  %idxprom88 = sext i32 %60 to i64
  %61 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %rld89 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %61, i32 0, i32 7
  %62 = load %struct.reload*, %struct.reload** %rld89, align 8
  %arrayidx90 = getelementptr inbounds %struct.reload, %struct.reload* %62, i64 %idxprom88
  %regno91 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx90, i32 0, i32 10
  store i32 -1, i32* %regno91, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end.83
  %63 = load i32, i32* %i, align 4
  %conv92 = trunc i32 %63 to i16
  %64 = load i32, i32* %i, align 4
  %idxprom93 = sext i32 %64 to i64
  %arrayidx94 = getelementptr inbounds [180 x i16], [180 x i16]* @reload_order, i32 0, i64 %idxprom93
  store i16 %conv92, i16* %arrayidx94, align 2
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %65 = load i32, i32* %i, align 4
  %inc = add nsw i32 %65, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %66 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %n_reloads95 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %66, i32 0, i32 8
  %67 = load i32, i32* %n_reloads95, align 4
  store i32 %67, i32* @n_reloads, align 4
  %68 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %rld96 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %68, i32 0, i32 7
  %69 = load %struct.reload*, %struct.reload** %rld96, align 8
  %70 = bitcast %struct.reload* %69 to i8*
  %71 = load i32, i32* @n_reloads, align 4
  %conv97 = sext i32 %71 to i64
  %mul = mul i64 %conv97, 104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([180 x %struct.reload]* @rld to i8*), i8* %70, i64 %mul, i32 8, i1 false)
  store i64 0, i64* @used_spill_regs_local, align 8
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @rtl_dump_file, align 8
  %tobool98 = icmp ne %struct._IO_FILE* %72, null
  br i1 %tobool98, label %if.then.99, label %if.end.102

if.then.99:                                       ; preds = %for.end
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** @rtl_dump_file, align 8
  %74 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %insn = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %74, i32 0, i32 4
  %75 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx101 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld100, i32 0, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx101 to i32*
  %76 = load i32, i32* %rtint, align 4
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0), i32 %76)
  br label %if.end.102

if.end.102:                                       ; preds = %if.then.99, %for.end
  %77 = load i32, i32* @n_reloads, align 4
  call void @specqsort(i8* bitcast ([180 x i16]* @reload_order to i8*), i32 %77, i32 2, i32 (...)* bitcast (i32 (i8*, i8*)* @reload_reg_class_lower to i32 (...)*))
  %78 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  call void @order_regs_for_reload(%struct.insn_chain* %78)
  store i32 0, i32* %i, align 4
  br label %for.cond.103

for.cond.103:                                     ; preds = %for.inc.148, %if.end.102
  %79 = load i32, i32* %i, align 4
  %80 = load i32, i32* @n_reloads, align 4
  %cmp104 = icmp slt i32 %79, %80
  br i1 %cmp104, label %for.body.106, label %for.end.150

for.body.106:                                     ; preds = %for.cond.103
  %81 = load i32, i32* %i, align 4
  %idxprom107 = sext i32 %81 to i64
  %arrayidx108 = getelementptr inbounds [180 x i16], [180 x i16]* @reload_order, i32 0, i64 %idxprom107
  %82 = load i16, i16* %arrayidx108, align 2
  %conv109 = sext i16 %82 to i32
  store i32 %conv109, i32* %r, align 4
  %83 = load i32, i32* %r, align 4
  %idxprom110 = sext i32 %83 to i64
  %arrayidx111 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom110
  %out = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx111, i32 0, i32 1
  %84 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %cmp112 = icmp ne %struct.rtx_def* %84, null
  br i1 %cmp112, label %land.lhs.true.126, label %lor.lhs.false.114

lor.lhs.false.114:                                ; preds = %for.body.106
  %85 = load i32, i32* %r, align 4
  %idxprom115 = sext i32 %85 to i64
  %arrayidx116 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom115
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx116, i32 0, i32 0
  %86 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %cmp117 = icmp ne %struct.rtx_def* %86, null
  br i1 %cmp117, label %land.lhs.true.126, label %lor.lhs.false.119

lor.lhs.false.119:                                ; preds = %lor.lhs.false.114
  %87 = load i32, i32* %r, align 4
  %idxprom120 = sext i32 %87 to i64
  %arrayidx121 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom120
  %secondary_p = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx121, i32 0, i32 18
  %bf.load122 = load i8, i8* %secondary_p, align 8
  %bf.lshr123 = lshr i8 %bf.load122, 2
  %bf.clear124 = and i8 %bf.lshr123, 1
  %bf.cast = zext i8 %bf.clear124 to i32
  %tobool125 = icmp ne i32 %bf.cast, 0
  br i1 %tobool125, label %land.lhs.true.126, label %if.end.147

land.lhs.true.126:                                ; preds = %lor.lhs.false.119, %lor.lhs.false.114, %for.body.106
  %88 = load i32, i32* %r, align 4
  %idxprom127 = sext i32 %88 to i64
  %arrayidx128 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom127
  %optional = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx128, i32 0, i32 18
  %bf.load129 = load i8, i8* %optional, align 8
  %bf.clear130 = and i8 %bf.load129, 1
  %bf.cast131 = zext i8 %bf.clear130 to i32
  %tobool132 = icmp ne i32 %bf.cast131, 0
  br i1 %tobool132, label %if.end.147, label %land.lhs.true.133

land.lhs.true.133:                                ; preds = %land.lhs.true.126
  %89 = load i32, i32* %r, align 4
  %idxprom134 = sext i32 %89 to i64
  %arrayidx135 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom134
  %regno136 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx135, i32 0, i32 10
  %90 = load i32, i32* %regno136, align 4
  %cmp137 = icmp eq i32 %90, -1
  br i1 %cmp137, label %if.then.139, label %if.end.147

if.then.139:                                      ; preds = %land.lhs.true.133
  %91 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %92 = load i32, i32* %i, align 4
  %call140 = call i32 @find_reg(%struct.insn_chain* %91, i32 %92)
  %tobool141 = icmp ne i32 %call140, 0
  br i1 %tobool141, label %if.end.146, label %if.then.142

if.then.142:                                      ; preds = %if.then.139
  %93 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %insn143 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %93, i32 0, i32 4
  %94 = load %struct.rtx_def*, %struct.rtx_def** %insn143, align 8
  %95 = load i32, i32* %r, align 4
  %idxprom144 = sext i32 %95 to i64
  %arrayidx145 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom144
  %class = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx145, i32 0, i32 2
  %96 = load i32, i32* %class, align 4
  call void @spill_failure(%struct.rtx_def* %94, i32 %96)
  store i32 1, i32* @failure, align 4
  br label %return

if.end.146:                                       ; preds = %if.then.139
  br label %if.end.147

if.end.147:                                       ; preds = %if.end.146, %land.lhs.true.133, %land.lhs.true.126, %lor.lhs.false.119
  br label %for.inc.148

for.inc.148:                                      ; preds = %if.end.147
  %97 = load i32, i32* %i, align 4
  %inc149 = add nsw i32 %97, 1
  store i32 %inc149, i32* %i, align 4
  br label %for.cond.103

for.end.150:                                      ; preds = %for.cond.103
  %98 = load i64, i64* @used_spill_regs_local, align 8
  %99 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %used_spill_regs = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %99, i32 0, i32 9
  store i64 %98, i64* %used_spill_regs, align 8
  %100 = load i64, i64* @used_spill_regs_local, align 8
  %101 = load i64, i64* @used_spill_regs, align 8
  %or = or i64 %101, %100
  store i64 %or, i64* @used_spill_regs, align 8
  %102 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %rld151 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %102, i32 0, i32 7
  %103 = load %struct.reload*, %struct.reload** %rld151, align 8
  %104 = bitcast %struct.reload* %103 to i8*
  %105 = load i32, i32* @n_reloads, align 4
  %conv152 = sext i32 %105 to i64
  %mul153 = mul i64 %conv152, 104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %104, i8* bitcast ([180 x %struct.reload]* @rld to i8*), i64 %mul153, i32 8, i1 false)
  br label %return

return:                                           ; preds = %for.end.150, %if.then.142
  ret void
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

declare void @specqsort(i8*, i32, i32, i32 (...)*) #1

; Function Attrs: nounwind uwtable
define internal i32 @reload_reg_class_lower(i8* %r1p, i8* %r2p) #0 {
entry:
  %retval = alloca i32, align 4
  %r1p.addr = alloca i8*, align 8
  %r2p.addr = alloca i8*, align 8
  %r1 = alloca i32, align 4
  %r2 = alloca i32, align 4
  %t = alloca i32, align 4
  store i8* %r1p, i8** %r1p.addr, align 8
  store i8* %r2p, i8** %r2p.addr, align 8
  %0 = load i8*, i8** %r1p.addr, align 8
  %1 = bitcast i8* %0 to i16*
  %2 = load i16, i16* %1, align 2
  %conv = sext i16 %2 to i32
  store i32 %conv, i32* %r1, align 4
  %3 = load i8*, i8** %r2p.addr, align 8
  %4 = bitcast i8* %3 to i16*
  %5 = load i16, i16* %4, align 2
  %conv1 = sext i16 %5 to i32
  store i32 %conv1, i32* %r2, align 4
  %6 = load i32, i32* %r1, align 4
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom
  %optional = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx, i32 0, i32 18
  %bf.load = load i8, i8* %optional, align 8
  %bf.clear = and i8 %bf.load, 1
  %bf.cast = zext i8 %bf.clear to i32
  %7 = load i32, i32* %r2, align 4
  %idxprom2 = sext i32 %7 to i64
  %arrayidx3 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom2
  %optional4 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3, i32 0, i32 18
  %bf.load5 = load i8, i8* %optional4, align 8
  %bf.clear6 = and i8 %bf.load5, 1
  %bf.cast7 = zext i8 %bf.clear6 to i32
  %sub = sub nsw i32 %bf.cast, %bf.cast7
  store i32 %sub, i32* %t, align 4
  %8 = load i32, i32* %t, align 4
  %cmp = icmp ne i32 %8, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %t, align 4
  store i32 %9, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %10 = load i32, i32* %r2, align 4
  %idxprom9 = sext i32 %10 to i64
  %arrayidx10 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom9
  %class = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx10, i32 0, i32 2
  %11 = load i32, i32* %class, align 4
  %idxprom11 = sext i32 %11 to i64
  %arrayidx12 = getelementptr inbounds [25 x i32], [25 x i32]* @reg_class_size, i32 0, i64 %idxprom11
  %12 = load i32, i32* %arrayidx12, align 4
  %cmp13 = icmp eq i32 %12, 1
  %conv14 = zext i1 %cmp13 to i32
  %13 = load i32, i32* %r1, align 4
  %idxprom15 = sext i32 %13 to i64
  %arrayidx16 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom15
  %class17 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx16, i32 0, i32 2
  %14 = load i32, i32* %class17, align 4
  %idxprom18 = sext i32 %14 to i64
  %arrayidx19 = getelementptr inbounds [25 x i32], [25 x i32]* @reg_class_size, i32 0, i64 %idxprom18
  %15 = load i32, i32* %arrayidx19, align 4
  %cmp20 = icmp eq i32 %15, 1
  %conv21 = zext i1 %cmp20 to i32
  %sub22 = sub nsw i32 %conv14, %conv21
  store i32 %sub22, i32* %t, align 4
  %16 = load i32, i32* %t, align 4
  %cmp23 = icmp ne i32 %16, 0
  br i1 %cmp23, label %if.then.25, label %if.end.26

if.then.25:                                       ; preds = %if.end
  %17 = load i32, i32* %t, align 4
  store i32 %17, i32* %retval
  br label %return

if.end.26:                                        ; preds = %if.end
  %18 = load i32, i32* %r2, align 4
  %idxprom27 = sext i32 %18 to i64
  %arrayidx28 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom27
  %nregs = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx28, i32 0, i32 6
  %19 = load i32, i32* %nregs, align 4
  %20 = load i32, i32* %r1, align 4
  %idxprom29 = sext i32 %20 to i64
  %arrayidx30 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom29
  %nregs31 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx30, i32 0, i32 6
  %21 = load i32, i32* %nregs31, align 4
  %sub32 = sub i32 %19, %21
  store i32 %sub32, i32* %t, align 4
  %22 = load i32, i32* %t, align 4
  %cmp33 = icmp ne i32 %22, 0
  br i1 %cmp33, label %if.then.35, label %if.end.36

if.then.35:                                       ; preds = %if.end.26
  %23 = load i32, i32* %t, align 4
  store i32 %23, i32* %retval
  br label %return

if.end.36:                                        ; preds = %if.end.26
  %24 = load i32, i32* %r1, align 4
  %idxprom37 = sext i32 %24 to i64
  %arrayidx38 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom37
  %class39 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx38, i32 0, i32 2
  %25 = load i32, i32* %class39, align 4
  %26 = load i32, i32* %r2, align 4
  %idxprom40 = sext i32 %26 to i64
  %arrayidx41 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom40
  %class42 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx41, i32 0, i32 2
  %27 = load i32, i32* %class42, align 4
  %sub43 = sub nsw i32 %25, %27
  store i32 %sub43, i32* %t, align 4
  %28 = load i32, i32* %t, align 4
  %cmp44 = icmp ne i32 %28, 0
  br i1 %cmp44, label %if.then.46, label %if.end.47

if.then.46:                                       ; preds = %if.end.36
  %29 = load i32, i32* %t, align 4
  store i32 %29, i32* %retval
  br label %return

if.end.47:                                        ; preds = %if.end.36
  %30 = load i32, i32* %r1, align 4
  %31 = load i32, i32* %r2, align 4
  %sub48 = sub nsw i32 %30, %31
  store i32 %sub48, i32* %retval
  br label %return

return:                                           ; preds = %if.end.47, %if.then.46, %if.then.35, %if.then.25, %if.then
  %32 = load i32, i32* %retval
  ret i32 %32
}

; Function Attrs: nounwind uwtable
define internal void @order_regs_for_reload(%struct.insn_chain* %chain) #0 {
entry:
  %chain.addr = alloca %struct.insn_chain*, align 8
  %i = alloca i32, align 4
  %used_by_pseudos = alloca i64, align 8
  %used_by_pseudos2 = alloca i64, align 8
  %ptr_ = alloca %struct.bitmap_element_def*, align 8
  %indx_ = alloca i32, align 4
  %bit_num_ = alloca i32, align 4
  %word_num_ = alloca i32, align 4
  %word_ = alloca i64, align 8
  %mask_ = alloca i64, align 8
  %ptr_38 = alloca %struct.bitmap_element_def*, align 8
  %indx_41 = alloca i32, align 4
  %bit_num_42 = alloca i32, align 4
  %word_num_43 = alloca i32, align 4
  %word_65 = alloca i64, align 8
  %mask_74 = alloca i64, align 8
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  %0 = load i64, i64* @fixed_reg_set, align 8
  store i64 %0, i64* @bad_spill_regs, align 8
  call void @llvm.memset.p0i8.i64(i8* bitcast ([53 x i32]* @spill_cost to i8*), i8 0, i64 212, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* bitcast ([53 x i32]* @spill_add_cost to i8*), i8 0, i64 212, i32 16, i1 false)
  br label %do.body

do.body:                                          ; preds = %entry
  store i64 0, i64* %used_by_pseudos, align 8
  %1 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %live_throughout = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %1, i32 0, i32 5
  call void @reg_set_to_hard_reg_set(i64* %used_by_pseudos, %struct.bitmap_head_def* %live_throughout)
  br label %do.end

do.end:                                           ; preds = %do.body
  br label %do.body.1

do.body.1:                                        ; preds = %do.end
  store i64 0, i64* %used_by_pseudos2, align 8
  %2 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %dead_or_set = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %2, i32 0, i32 6
  call void @reg_set_to_hard_reg_set(i64* %used_by_pseudos2, %struct.bitmap_head_def* %dead_or_set)
  br label %do.end.2

do.end.2:                                         ; preds = %do.body.1
  %3 = load i64, i64* %used_by_pseudos, align 8
  %4 = load i64, i64* @bad_spill_regs, align 8
  %or = or i64 %4, %3
  store i64 %or, i64* @bad_spill_regs, align 8
  %5 = load i64, i64* %used_by_pseudos2, align 8
  %6 = load i64, i64* @bad_spill_regs, align 8
  %or3 = or i64 %6, %5
  store i64 %or3, i64* @bad_spill_regs, align 8
  call void @bitmap_clear(%struct.bitmap_head_def* @pseudos_counted)
  br label %do.body.4

do.body.4:                                        ; preds = %do.end.2
  %7 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %live_throughout5 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %7, i32 0, i32 5
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %live_throughout5, i32 0, i32 0
  %8 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8
  store %struct.bitmap_element_def* %8, %struct.bitmap_element_def** %ptr_, align 8
  store i32 0, i32* %indx_, align 4
  store i32 53, i32* %bit_num_, align 4
  store i32 0, i32* %word_num_, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body.4
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %cmp = icmp ne %struct.bitmap_element_def* %9, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %10 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %10, i32 0, i32 2
  %11 = load i32, i32* %indx, align 4
  %12 = load i32, i32* %indx_, align 4
  %cmp6 = icmp ult i32 %11, %12
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %13 = phi i1 [ false, %while.cond ], [ %cmp6, %land.rhs ]
  br i1 %13, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %14 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %next = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %14, i32 0, i32 0
  %15 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next, align 8
  store %struct.bitmap_element_def* %15, %struct.bitmap_element_def** %ptr_, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %16 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %cmp7 = icmp ne %struct.bitmap_element_def* %16, null
  br i1 %cmp7, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %while.end
  %17 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %indx8 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %17, i32 0, i32 2
  %18 = load i32, i32* %indx8, align 4
  %19 = load i32, i32* %indx_, align 4
  %cmp9 = icmp ne i32 %18, %19
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %bit_num_, align 4
  store i32 0, i32* %word_num_, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %while.end
  br label %for.cond

for.cond:                                         ; preds = %for.inc.33, %if.end
  %20 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %cmp10 = icmp ne %struct.bitmap_element_def* %20, null
  br i1 %cmp10, label %for.body, label %for.end.35

for.body:                                         ; preds = %for.cond
  br label %for.cond.11

for.cond.11:                                      ; preds = %for.inc.30, %for.body
  %21 = load i32, i32* %word_num_, align 4
  %cmp12 = icmp ult i32 %21, 2
  br i1 %cmp12, label %for.body.13, label %for.end.32

for.body.13:                                      ; preds = %for.cond.11
  %22 = load i32, i32* %word_num_, align 4
  %idxprom = zext i32 %22 to i64
  %23 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %bits = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %23, i32 0, i32 3
  %arrayidx = getelementptr inbounds [2 x i64], [2 x i64]* %bits, i32 0, i64 %idxprom
  %24 = load i64, i64* %arrayidx, align 8
  store i64 %24, i64* %word_, align 8
  %25 = load i64, i64* %word_, align 8
  %cmp14 = icmp ne i64 %25, 0
  br i1 %cmp14, label %if.then.15, label %if.end.29

if.then.15:                                       ; preds = %for.body.13
  br label %for.cond.16

for.cond.16:                                      ; preds = %for.inc, %if.then.15
  %26 = load i32, i32* %bit_num_, align 4
  %cmp17 = icmp ult i32 %26, 64
  br i1 %cmp17, label %for.body.18, label %for.end

for.body.18:                                      ; preds = %for.cond.16
  %27 = load i32, i32* %bit_num_, align 4
  %sh_prom = zext i32 %27 to i64
  %shl = shl i64 1, %sh_prom
  store i64 %shl, i64* %mask_, align 8
  %28 = load i64, i64* %word_, align 8
  %29 = load i64, i64* %mask_, align 8
  %and = and i64 %28, %29
  %cmp19 = icmp ne i64 %and, 0
  br i1 %cmp19, label %if.then.20, label %if.end.28

if.then.20:                                       ; preds = %for.body.18
  %30 = load i64, i64* %mask_, align 8
  %neg = xor i64 %30, -1
  %31 = load i64, i64* %word_, align 8
  %and21 = and i64 %31, %neg
  store i64 %and21, i64* %word_, align 8
  %32 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %indx22 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %32, i32 0, i32 2
  %33 = load i32, i32* %indx22, align 4
  %mul = mul i32 %33, 128
  %34 = load i32, i32* %word_num_, align 4
  %mul23 = mul i32 %34, 64
  %add = add i32 %mul, %mul23
  %35 = load i32, i32* %bit_num_, align 4
  %add24 = add i32 %add, %35
  store i32 %add24, i32* %i, align 4
  %36 = load i32, i32* %i, align 4
  call void @count_pseudo(i32 %36)
  %37 = load i64, i64* %word_, align 8
  %cmp25 = icmp eq i64 %37, 0
  br i1 %cmp25, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %if.then.20
  br label %for.end

if.end.27:                                        ; preds = %if.then.20
  br label %if.end.28

if.end.28:                                        ; preds = %if.end.27, %for.body.18
  br label %for.inc

for.inc:                                          ; preds = %if.end.28
  %38 = load i32, i32* %bit_num_, align 4
  %inc = add i32 %38, 1
  store i32 %inc, i32* %bit_num_, align 4
  br label %for.cond.16

for.end:                                          ; preds = %if.then.26, %for.cond.16
  br label %if.end.29

if.end.29:                                        ; preds = %for.end, %for.body.13
  store i32 0, i32* %bit_num_, align 4
  br label %for.inc.30

for.inc.30:                                       ; preds = %if.end.29
  %39 = load i32, i32* %word_num_, align 4
  %inc31 = add i32 %39, 1
  store i32 %inc31, i32* %word_num_, align 4
  br label %for.cond.11

for.end.32:                                       ; preds = %for.cond.11
  store i32 0, i32* %word_num_, align 4
  br label %for.inc.33

for.inc.33:                                       ; preds = %for.end.32
  %40 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %next34 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %40, i32 0, i32 0
  %41 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next34, align 8
  store %struct.bitmap_element_def* %41, %struct.bitmap_element_def** %ptr_, align 8
  br label %for.cond

for.end.35:                                       ; preds = %for.cond
  br label %do.end.36

do.end.36:                                        ; preds = %for.end.35
  br label %do.body.37

do.body.37:                                       ; preds = %do.end.36
  %42 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %dead_or_set39 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %42, i32 0, i32 6
  %first40 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %dead_or_set39, i32 0, i32 0
  %43 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first40, align 8
  store %struct.bitmap_element_def* %43, %struct.bitmap_element_def** %ptr_38, align 8
  store i32 0, i32* %indx_41, align 4
  store i32 53, i32* %bit_num_42, align 4
  store i32 0, i32* %word_num_43, align 4
  br label %while.cond.44

while.cond.44:                                    ; preds = %while.body.50, %do.body.37
  %44 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_38, align 8
  %cmp45 = icmp ne %struct.bitmap_element_def* %44, null
  br i1 %cmp45, label %land.rhs.46, label %land.end.49

land.rhs.46:                                      ; preds = %while.cond.44
  %45 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_38, align 8
  %indx47 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %45, i32 0, i32 2
  %46 = load i32, i32* %indx47, align 4
  %47 = load i32, i32* %indx_41, align 4
  %cmp48 = icmp ult i32 %46, %47
  br label %land.end.49

land.end.49:                                      ; preds = %land.rhs.46, %while.cond.44
  %48 = phi i1 [ false, %while.cond.44 ], [ %cmp48, %land.rhs.46 ]
  br i1 %48, label %while.body.50, label %while.end.52

while.body.50:                                    ; preds = %land.end.49
  %49 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_38, align 8
  %next51 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %49, i32 0, i32 0
  %50 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next51, align 8
  store %struct.bitmap_element_def* %50, %struct.bitmap_element_def** %ptr_38, align 8
  br label %while.cond.44

while.end.52:                                     ; preds = %land.end.49
  %51 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_38, align 8
  %cmp53 = icmp ne %struct.bitmap_element_def* %51, null
  br i1 %cmp53, label %land.lhs.true.54, label %if.end.58

land.lhs.true.54:                                 ; preds = %while.end.52
  %52 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_38, align 8
  %indx55 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %52, i32 0, i32 2
  %53 = load i32, i32* %indx55, align 4
  %54 = load i32, i32* %indx_41, align 4
  %cmp56 = icmp ne i32 %53, %54
  br i1 %cmp56, label %if.then.57, label %if.end.58

if.then.57:                                       ; preds = %land.lhs.true.54
  store i32 0, i32* %bit_num_42, align 4
  store i32 0, i32* %word_num_43, align 4
  br label %if.end.58

if.end.58:                                        ; preds = %if.then.57, %land.lhs.true.54, %while.end.52
  br label %for.cond.59

for.cond.59:                                      ; preds = %for.inc.98, %if.end.58
  %55 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_38, align 8
  %cmp60 = icmp ne %struct.bitmap_element_def* %55, null
  br i1 %cmp60, label %for.body.61, label %for.end.100

for.body.61:                                      ; preds = %for.cond.59
  br label %for.cond.62

for.cond.62:                                      ; preds = %for.inc.95, %for.body.61
  %56 = load i32, i32* %word_num_43, align 4
  %cmp63 = icmp ult i32 %56, 2
  br i1 %cmp63, label %for.body.64, label %for.end.97

for.body.64:                                      ; preds = %for.cond.62
  %57 = load i32, i32* %word_num_43, align 4
  %idxprom66 = zext i32 %57 to i64
  %58 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_38, align 8
  %bits67 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %58, i32 0, i32 3
  %arrayidx68 = getelementptr inbounds [2 x i64], [2 x i64]* %bits67, i32 0, i64 %idxprom66
  %59 = load i64, i64* %arrayidx68, align 8
  store i64 %59, i64* %word_65, align 8
  %60 = load i64, i64* %word_65, align 8
  %cmp69 = icmp ne i64 %60, 0
  br i1 %cmp69, label %if.then.70, label %if.end.94

if.then.70:                                       ; preds = %for.body.64
  br label %for.cond.71

for.cond.71:                                      ; preds = %for.inc.91, %if.then.70
  %61 = load i32, i32* %bit_num_42, align 4
  %cmp72 = icmp ult i32 %61, 64
  br i1 %cmp72, label %for.body.73, label %for.end.93

for.body.73:                                      ; preds = %for.cond.71
  %62 = load i32, i32* %bit_num_42, align 4
  %sh_prom75 = zext i32 %62 to i64
  %shl76 = shl i64 1, %sh_prom75
  store i64 %shl76, i64* %mask_74, align 8
  %63 = load i64, i64* %word_65, align 8
  %64 = load i64, i64* %mask_74, align 8
  %and77 = and i64 %63, %64
  %cmp78 = icmp ne i64 %and77, 0
  br i1 %cmp78, label %if.then.79, label %if.end.90

if.then.79:                                       ; preds = %for.body.73
  %65 = load i64, i64* %mask_74, align 8
  %neg80 = xor i64 %65, -1
  %66 = load i64, i64* %word_65, align 8
  %and81 = and i64 %66, %neg80
  store i64 %and81, i64* %word_65, align 8
  %67 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_38, align 8
  %indx82 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %67, i32 0, i32 2
  %68 = load i32, i32* %indx82, align 4
  %mul83 = mul i32 %68, 128
  %69 = load i32, i32* %word_num_43, align 4
  %mul84 = mul i32 %69, 64
  %add85 = add i32 %mul83, %mul84
  %70 = load i32, i32* %bit_num_42, align 4
  %add86 = add i32 %add85, %70
  store i32 %add86, i32* %i, align 4
  %71 = load i32, i32* %i, align 4
  call void @count_pseudo(i32 %71)
  %72 = load i64, i64* %word_65, align 8
  %cmp87 = icmp eq i64 %72, 0
  br i1 %cmp87, label %if.then.88, label %if.end.89

if.then.88:                                       ; preds = %if.then.79
  br label %for.end.93

if.end.89:                                        ; preds = %if.then.79
  br label %if.end.90

if.end.90:                                        ; preds = %if.end.89, %for.body.73
  br label %for.inc.91

for.inc.91:                                       ; preds = %if.end.90
  %73 = load i32, i32* %bit_num_42, align 4
  %inc92 = add i32 %73, 1
  store i32 %inc92, i32* %bit_num_42, align 4
  br label %for.cond.71

for.end.93:                                       ; preds = %if.then.88, %for.cond.71
  br label %if.end.94

if.end.94:                                        ; preds = %for.end.93, %for.body.64
  store i32 0, i32* %bit_num_42, align 4
  br label %for.inc.95

for.inc.95:                                       ; preds = %if.end.94
  %74 = load i32, i32* %word_num_43, align 4
  %inc96 = add i32 %74, 1
  store i32 %inc96, i32* %word_num_43, align 4
  br label %for.cond.62

for.end.97:                                       ; preds = %for.cond.62
  store i32 0, i32* %word_num_43, align 4
  br label %for.inc.98

for.inc.98:                                       ; preds = %for.end.97
  %75 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_38, align 8
  %next99 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %75, i32 0, i32 0
  %76 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next99, align 8
  store %struct.bitmap_element_def* %76, %struct.bitmap_element_def** %ptr_38, align 8
  br label %for.cond.59

for.end.100:                                      ; preds = %for.cond.59
  br label %do.end.101

do.end.101:                                       ; preds = %for.end.100
  call void @bitmap_clear(%struct.bitmap_head_def* @pseudos_counted)
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @find_reg(%struct.insn_chain* %chain, i32 %order) #0 {
entry:
  %retval = alloca i32, align 4
  %chain.addr = alloca %struct.insn_chain*, align 8
  %order.addr = alloca i32, align 4
  %rnum = alloca i32, align 4
  %rl = alloca %struct.reload*, align 8
  %best_cost = alloca i32, align 4
  %best_reg = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %not_usable = alloca i64, align 8
  %used_by_other_reload = alloca i64, align 8
  %other = alloca i32, align 4
  %regno29 = alloca i32, align 4
  %this_cost = alloca i32, align 4
  %ok = alloca i32, align 4
  %this_nregs = alloca i32, align 4
  %ptr_ = alloca %struct.bitmap_element_def*, align 8
  %indx_ = alloca i32, align 4
  %bit_num_ = alloca i32, align 4
  %word_num_ = alloca i32, align 4
  %word_ = alloca i64, align 8
  %mask_ = alloca i64, align 8
  %ptr_323 = alloca %struct.bitmap_element_def*, align 8
  %indx_325 = alloca i32, align 4
  %bit_num_326 = alloca i32, align 4
  %word_num_327 = alloca i32, align 4
  %word_355 = alloca i64, align 8
  %mask_366 = alloca i64, align 8
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  store i32 %order, i32* %order.addr, align 4
  %0 = load i32, i32* %order.addr, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [180 x i16], [180 x i16]* @reload_order, i32 0, i64 %idxprom
  %1 = load i16, i16* %arrayidx, align 2
  %conv = sext i16 %1 to i32
  store i32 %conv, i32* %rnum, align 4
  %2 = load i32, i32* %rnum, align 4
  %idx.ext = sext i32 %2 to i64
  %add.ptr = getelementptr inbounds %struct.reload, %struct.reload* getelementptr inbounds ([180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i32 0), i64 %idx.ext
  store %struct.reload* %add.ptr, %struct.reload** %rl, align 8
  store i32 2147483647, i32* %best_cost, align 4
  store i32 -1, i32* %best_reg, align 4
  %3 = load i64, i64* @bad_spill_regs, align 8
  store i64 %3, i64* %not_usable, align 8
  %4 = load i64, i64* @bad_spill_regs_global, align 8
  %5 = load i64, i64* %not_usable, align 8
  %or = or i64 %5, %4
  store i64 %or, i64* %not_usable, align 8
  %6 = load %struct.reload*, %struct.reload** %rl, align 8
  %class = getelementptr inbounds %struct.reload, %struct.reload* %6, i32 0, i32 2
  %7 = load i32, i32* %class, align 4
  %idxprom1 = zext i32 %7 to i64
  %arrayidx2 = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom1
  %8 = load i64, i64* %arrayidx2, align 8
  %neg = xor i64 %8, -1
  %9 = load i64, i64* %not_usable, align 8
  %or3 = or i64 %9, %neg
  store i64 %or3, i64* %not_usable, align 8
  store i64 0, i64* %used_by_other_reload, align 8
  store i32 0, i32* %k, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.22, %entry
  %10 = load i32, i32* %k, align 4
  %11 = load i32, i32* %order.addr, align 4
  %cmp = icmp slt i32 %10, %11
  br i1 %cmp, label %for.body, label %for.end.24

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %k, align 4
  %idxprom5 = sext i32 %12 to i64
  %arrayidx6 = getelementptr inbounds [180 x i16], [180 x i16]* @reload_order, i32 0, i64 %idxprom5
  %13 = load i16, i16* %arrayidx6, align 2
  %conv7 = sext i16 %13 to i32
  store i32 %conv7, i32* %other, align 4
  %14 = load i32, i32* %other, align 4
  %idxprom8 = sext i32 %14 to i64
  %arrayidx9 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom8
  %regno = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx9, i32 0, i32 10
  %15 = load i32, i32* %regno, align 4
  %cmp10 = icmp sge i32 %15, 0
  br i1 %cmp10, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %16 = load i32, i32* %other, align 4
  %17 = load i32, i32* %rnum, align 4
  %call = call i32 @reloads_conflict(i32 %16, i32 %17)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %j, align 4
  br label %for.cond.12

for.cond.12:                                      ; preds = %for.inc, %if.then
  %18 = load i32, i32* %j, align 4
  %19 = load i32, i32* %other, align 4
  %idxprom13 = sext i32 %19 to i64
  %arrayidx14 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom13
  %nregs = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx14, i32 0, i32 6
  %20 = load i32, i32* %nregs, align 4
  %cmp15 = icmp ult i32 %18, %20
  br i1 %cmp15, label %for.body.17, label %for.end

for.body.17:                                      ; preds = %for.cond.12
  %21 = load i32, i32* %other, align 4
  %idxprom18 = sext i32 %21 to i64
  %arrayidx19 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom18
  %regno20 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx19, i32 0, i32 10
  %22 = load i32, i32* %regno20, align 4
  %23 = load i32, i32* %j, align 4
  %add = add i32 %22, %23
  %sh_prom = zext i32 %add to i64
  %shl = shl i64 1, %sh_prom
  %24 = load i64, i64* %used_by_other_reload, align 8
  %or21 = or i64 %24, %shl
  store i64 %or21, i64* %used_by_other_reload, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body.17
  %25 = load i32, i32* %j, align 4
  %inc = add i32 %25, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond.12

for.end:                                          ; preds = %for.cond.12
  br label %if.end

if.end:                                           ; preds = %for.end, %land.lhs.true, %for.body
  br label %for.inc.22

for.inc.22:                                       ; preds = %if.end
  %26 = load i32, i32* %k, align 4
  %inc23 = add nsw i32 %26, 1
  store i32 %inc23, i32* %k, align 4
  br label %for.cond

for.end.24:                                       ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.25

for.cond.25:                                      ; preds = %for.inc.179, %for.end.24
  %27 = load i32, i32* %i, align 4
  %cmp26 = icmp ult i32 %27, 53
  br i1 %cmp26, label %for.body.28, label %for.end.181

for.body.28:                                      ; preds = %for.cond.25
  %28 = load i32, i32* %i, align 4
  store i32 %28, i32* %regno29, align 4
  %29 = load i64, i64* %not_usable, align 8
  %30 = load i32, i32* %regno29, align 4
  %sh_prom30 = zext i32 %30 to i64
  %shl31 = shl i64 1, %sh_prom30
  %and = and i64 %29, %shl31
  %tobool32 = icmp ne i64 %and, 0
  br i1 %tobool32, label %if.end.178, label %land.lhs.true.33

land.lhs.true.33:                                 ; preds = %for.body.28
  %31 = load i64, i64* %used_by_other_reload, align 8
  %32 = load i32, i32* %regno29, align 4
  %sh_prom34 = zext i32 %32 to i64
  %shl35 = shl i64 1, %sh_prom34
  %and36 = and i64 %31, %shl35
  %tobool37 = icmp ne i64 %and36, 0
  br i1 %tobool37, label %if.end.178, label %land.lhs.true.38

land.lhs.true.38:                                 ; preds = %land.lhs.true.33
  %33 = load i32, i32* %regno29, align 4
  %34 = load %struct.reload*, %struct.reload** %rl, align 8
  %mode = getelementptr inbounds %struct.reload, %struct.reload* %34, i32 0, i32 5
  %35 = load i32, i32* %mode, align 4
  %call39 = call i32 @ix86_hard_regno_mode_ok(i32 %33, i32 %35)
  %tobool40 = icmp ne i32 %call39, 0
  br i1 %tobool40, label %if.then.41, label %if.end.178

if.then.41:                                       ; preds = %land.lhs.true.38
  %36 = load i32, i32* %regno29, align 4
  %idxprom42 = zext i32 %36 to i64
  %arrayidx43 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_cost, i32 0, i64 %idxprom42
  %37 = load i32, i32* %arrayidx43, align 4
  store i32 %37, i32* %this_cost, align 4
  store i32 1, i32* %ok, align 4
  %38 = load i32, i32* %regno29, align 4
  %cmp44 = icmp uge i32 %38, 8
  br i1 %cmp44, label %land.lhs.true.46, label %lor.lhs.false

land.lhs.true.46:                                 ; preds = %if.then.41
  %39 = load i32, i32* %regno29, align 4
  %cmp47 = icmp ule i32 %39, 15
  br i1 %cmp47, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.46, %if.then.41
  %40 = load i32, i32* %regno29, align 4
  %cmp49 = icmp uge i32 %40, 21
  br i1 %cmp49, label %land.lhs.true.51, label %lor.lhs.false.54

land.lhs.true.51:                                 ; preds = %lor.lhs.false
  %41 = load i32, i32* %regno29, align 4
  %cmp52 = icmp ule i32 %41, 28
  br i1 %cmp52, label %cond.true, label %lor.lhs.false.54

lor.lhs.false.54:                                 ; preds = %land.lhs.true.51, %lor.lhs.false
  %42 = load i32, i32* %regno29, align 4
  %cmp55 = icmp uge i32 %42, 45
  br i1 %cmp55, label %land.lhs.true.57, label %lor.lhs.false.60

land.lhs.true.57:                                 ; preds = %lor.lhs.false.54
  %43 = load i32, i32* %regno29, align 4
  %cmp58 = icmp ule i32 %43, 52
  br i1 %cmp58, label %cond.true, label %lor.lhs.false.60

lor.lhs.false.60:                                 ; preds = %land.lhs.true.57, %lor.lhs.false.54
  %44 = load i32, i32* %regno29, align 4
  %cmp61 = icmp uge i32 %44, 29
  br i1 %cmp61, label %land.lhs.true.63, label %cond.false

land.lhs.true.63:                                 ; preds = %lor.lhs.false.60
  %45 = load i32, i32* %regno29, align 4
  %cmp64 = icmp ule i32 %45, 36
  br i1 %cmp64, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.63, %land.lhs.true.57, %land.lhs.true.51, %land.lhs.true.46
  %46 = load %struct.reload*, %struct.reload** %rl, align 8
  %mode66 = getelementptr inbounds %struct.reload, %struct.reload* %46, i32 0, i32 5
  %47 = load i32, i32* %mode66, align 4
  %idxprom67 = sext i32 %47 to i64
  %arrayidx68 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom67
  %48 = load i32, i32* %arrayidx68, align 4
  %cmp69 = icmp eq i32 %48, 5
  br i1 %cmp69, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %49 = load %struct.reload*, %struct.reload** %rl, align 8
  %mode71 = getelementptr inbounds %struct.reload, %struct.reload* %49, i32 0, i32 5
  %50 = load i32, i32* %mode71, align 4
  %idxprom72 = sext i32 %50 to i64
  %arrayidx73 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom72
  %51 = load i32, i32* %arrayidx73, align 4
  %cmp74 = icmp eq i32 %51, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %52 = phi i1 [ true, %cond.true ], [ %cmp74, %lor.rhs ]
  %cond = select i1 %52, i32 2, i32 1
  br label %cond.end.106

cond.false:                                       ; preds = %land.lhs.true.63, %lor.lhs.false.60
  %53 = load %struct.reload*, %struct.reload** %rl, align 8
  %mode76 = getelementptr inbounds %struct.reload, %struct.reload* %53, i32 0, i32 5
  %54 = load i32, i32* %mode76, align 4
  %cmp77 = icmp eq i32 %54, 18
  br i1 %cmp77, label %cond.true.79, label %cond.false.83

cond.true.79:                                     ; preds = %cond.false
  %55 = load i32, i32* @target_flags, align 4
  %and80 = and i32 %55, 33554432
  %tobool81 = icmp ne i32 %and80, 0
  %cond82 = select i1 %tobool81, i32 2, i32 3
  br label %cond.end.104

cond.false.83:                                    ; preds = %cond.false
  %56 = load %struct.reload*, %struct.reload** %rl, align 8
  %mode84 = getelementptr inbounds %struct.reload, %struct.reload* %56, i32 0, i32 5
  %57 = load i32, i32* %mode84, align 4
  %cmp85 = icmp eq i32 %57, 24
  br i1 %cmp85, label %cond.true.87, label %cond.false.91

cond.true.87:                                     ; preds = %cond.false.83
  %58 = load i32, i32* @target_flags, align 4
  %and88 = and i32 %58, 33554432
  %tobool89 = icmp ne i32 %and88, 0
  %cond90 = select i1 %tobool89, i32 4, i32 6
  br label %cond.end

cond.false.91:                                    ; preds = %cond.false.83
  %59 = load %struct.reload*, %struct.reload** %rl, align 8
  %mode92 = getelementptr inbounds %struct.reload, %struct.reload* %59, i32 0, i32 5
  %60 = load i32, i32* %mode92, align 4
  %idxprom93 = sext i32 %60 to i64
  %arrayidx94 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom93
  %61 = load i8, i8* %arrayidx94, align 1
  %conv95 = zext i8 %61 to i32
  %62 = load i32, i32* @target_flags, align 4
  %and96 = and i32 %62, 33554432
  %tobool97 = icmp ne i32 %and96, 0
  %cond98 = select i1 %tobool97, i32 8, i32 4
  %add99 = add nsw i32 %conv95, %cond98
  %sub = sub nsw i32 %add99, 1
  %63 = load i32, i32* @target_flags, align 4
  %and100 = and i32 %63, 33554432
  %tobool101 = icmp ne i32 %and100, 0
  %cond102 = select i1 %tobool101, i32 8, i32 4
  %div = sdiv i32 %sub, %cond102
  br label %cond.end

cond.end:                                         ; preds = %cond.false.91, %cond.true.87
  %cond103 = phi i32 [ %cond90, %cond.true.87 ], [ %div, %cond.false.91 ]
  br label %cond.end.104

cond.end.104:                                     ; preds = %cond.end, %cond.true.79
  %cond105 = phi i32 [ %cond82, %cond.true.79 ], [ %cond103, %cond.end ]
  br label %cond.end.106

cond.end.106:                                     ; preds = %cond.end.104, %lor.end
  %cond107 = phi i32 [ %cond, %lor.end ], [ %cond105, %cond.end.104 ]
  store i32 %cond107, i32* %this_nregs, align 4
  store i32 1, i32* %j, align 4
  br label %for.cond.108

for.cond.108:                                     ; preds = %for.inc.129, %cond.end.106
  %64 = load i32, i32* %j, align 4
  %65 = load i32, i32* %this_nregs, align 4
  %cmp109 = icmp ult i32 %64, %65
  br i1 %cmp109, label %for.body.111, label %for.end.131

for.body.111:                                     ; preds = %for.cond.108
  %66 = load i32, i32* %regno29, align 4
  %67 = load i32, i32* %j, align 4
  %add112 = add i32 %66, %67
  %idxprom113 = zext i32 %add112 to i64
  %arrayidx114 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_add_cost, i32 0, i64 %idxprom113
  %68 = load i32, i32* %arrayidx114, align 4
  %69 = load i32, i32* %this_cost, align 4
  %add115 = add nsw i32 %69, %68
  store i32 %add115, i32* %this_cost, align 4
  %70 = load i64, i64* %not_usable, align 8
  %71 = load i32, i32* %regno29, align 4
  %72 = load i32, i32* %j, align 4
  %add116 = add i32 %71, %72
  %sh_prom117 = zext i32 %add116 to i64
  %shl118 = shl i64 1, %sh_prom117
  %and119 = and i64 %70, %shl118
  %tobool120 = icmp ne i64 %and119, 0
  br i1 %tobool120, label %if.then.127, label %lor.lhs.false.121

lor.lhs.false.121:                                ; preds = %for.body.111
  %73 = load i64, i64* %used_by_other_reload, align 8
  %74 = load i32, i32* %regno29, align 4
  %75 = load i32, i32* %j, align 4
  %add122 = add i32 %74, %75
  %sh_prom123 = zext i32 %add122 to i64
  %shl124 = shl i64 1, %sh_prom123
  %and125 = and i64 %73, %shl124
  %tobool126 = icmp ne i64 %and125, 0
  br i1 %tobool126, label %if.then.127, label %if.end.128

if.then.127:                                      ; preds = %lor.lhs.false.121, %for.body.111
  store i32 0, i32* %ok, align 4
  br label %if.end.128

if.end.128:                                       ; preds = %if.then.127, %lor.lhs.false.121
  br label %for.inc.129

for.inc.129:                                      ; preds = %if.end.128
  %76 = load i32, i32* %j, align 4
  %inc130 = add i32 %76, 1
  store i32 %inc130, i32* %j, align 4
  br label %for.cond.108

for.end.131:                                      ; preds = %for.cond.108
  %77 = load i32, i32* %ok, align 4
  %tobool132 = icmp ne i32 %77, 0
  br i1 %tobool132, label %if.end.134, label %if.then.133

if.then.133:                                      ; preds = %for.end.131
  br label %for.inc.179

if.end.134:                                       ; preds = %for.end.131
  %78 = load %struct.reload*, %struct.reload** %rl, align 8
  %in = getelementptr inbounds %struct.reload, %struct.reload* %78, i32 0, i32 0
  %79 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %tobool135 = icmp ne %struct.rtx_def* %79, null
  br i1 %tobool135, label %land.lhs.true.136, label %if.end.146

land.lhs.true.136:                                ; preds = %if.end.134
  %80 = load %struct.reload*, %struct.reload** %rl, align 8
  %in137 = getelementptr inbounds %struct.reload, %struct.reload* %80, i32 0, i32 0
  %81 = load %struct.rtx_def*, %struct.rtx_def** %in137, align 8
  %82 = bitcast %struct.rtx_def* %81 to i32*
  %bf.load = load i32, i32* %82, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp138 = icmp eq i32 %bf.clear, 61
  br i1 %cmp138, label %land.lhs.true.140, label %if.end.146

land.lhs.true.140:                                ; preds = %land.lhs.true.136
  %83 = load %struct.reload*, %struct.reload** %rl, align 8
  %in141 = getelementptr inbounds %struct.reload, %struct.reload* %83, i32 0, i32 0
  %84 = load %struct.rtx_def*, %struct.rtx_def** %in141, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1
  %arrayidx142 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx142 to i32*
  %85 = load i32, i32* %rtuint, align 4
  %86 = load i32, i32* %regno29, align 4
  %cmp143 = icmp eq i32 %85, %86
  br i1 %cmp143, label %if.then.145, label %if.end.146

if.then.145:                                      ; preds = %land.lhs.true.140
  %87 = load i32, i32* %this_cost, align 4
  %dec = add nsw i32 %87, -1
  store i32 %dec, i32* %this_cost, align 4
  br label %if.end.146

if.end.146:                                       ; preds = %if.then.145, %land.lhs.true.140, %land.lhs.true.136, %if.end.134
  %88 = load %struct.reload*, %struct.reload** %rl, align 8
  %out = getelementptr inbounds %struct.reload, %struct.reload* %88, i32 0, i32 1
  %89 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %tobool147 = icmp ne %struct.rtx_def* %89, null
  br i1 %tobool147, label %land.lhs.true.148, label %if.end.163

land.lhs.true.148:                                ; preds = %if.end.146
  %90 = load %struct.reload*, %struct.reload** %rl, align 8
  %out149 = getelementptr inbounds %struct.reload, %struct.reload* %90, i32 0, i32 1
  %91 = load %struct.rtx_def*, %struct.rtx_def** %out149, align 8
  %92 = bitcast %struct.rtx_def* %91 to i32*
  %bf.load150 = load i32, i32* %92, align 8
  %bf.clear151 = and i32 %bf.load150, 65535
  %cmp152 = icmp eq i32 %bf.clear151, 61
  br i1 %cmp152, label %land.lhs.true.154, label %if.end.163

land.lhs.true.154:                                ; preds = %land.lhs.true.148
  %93 = load %struct.reload*, %struct.reload** %rl, align 8
  %out155 = getelementptr inbounds %struct.reload, %struct.reload* %93, i32 0, i32 1
  %94 = load %struct.rtx_def*, %struct.rtx_def** %out155, align 8
  %fld156 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1
  %arrayidx157 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld156, i32 0, i64 0
  %rtuint158 = bitcast %union.rtunion_def* %arrayidx157 to i32*
  %95 = load i32, i32* %rtuint158, align 4
  %96 = load i32, i32* %regno29, align 4
  %cmp159 = icmp eq i32 %95, %96
  br i1 %cmp159, label %if.then.161, label %if.end.163

if.then.161:                                      ; preds = %land.lhs.true.154
  %97 = load i32, i32* %this_cost, align 4
  %dec162 = add nsw i32 %97, -1
  store i32 %dec162, i32* %this_cost, align 4
  br label %if.end.163

if.end.163:                                       ; preds = %if.then.161, %land.lhs.true.154, %land.lhs.true.148, %if.end.146
  %98 = load i32, i32* %this_cost, align 4
  %99 = load i32, i32* %best_cost, align 4
  %cmp164 = icmp slt i32 %98, %99
  br i1 %cmp164, label %if.then.176, label %lor.lhs.false.166

lor.lhs.false.166:                                ; preds = %if.end.163
  %100 = load i32, i32* %this_cost, align 4
  %101 = load i32, i32* %best_cost, align 4
  %cmp167 = icmp eq i32 %100, %101
  br i1 %cmp167, label %land.lhs.true.169, label %if.end.177

land.lhs.true.169:                                ; preds = %lor.lhs.false.166
  %102 = load i32, i32* %regno29, align 4
  %idxprom170 = zext i32 %102 to i64
  %arrayidx171 = getelementptr inbounds [53 x i32], [53 x i32]* @inv_reg_alloc_order, i32 0, i64 %idxprom170
  %103 = load i32, i32* %arrayidx171, align 4
  %104 = load i32, i32* %best_reg, align 4
  %idxprom172 = sext i32 %104 to i64
  %arrayidx173 = getelementptr inbounds [53 x i32], [53 x i32]* @inv_reg_alloc_order, i32 0, i64 %idxprom172
  %105 = load i32, i32* %arrayidx173, align 4
  %cmp174 = icmp slt i32 %103, %105
  br i1 %cmp174, label %if.then.176, label %if.end.177

if.then.176:                                      ; preds = %land.lhs.true.169, %if.end.163
  %106 = load i32, i32* %regno29, align 4
  store i32 %106, i32* %best_reg, align 4
  %107 = load i32, i32* %this_cost, align 4
  store i32 %107, i32* %best_cost, align 4
  br label %if.end.177

if.end.177:                                       ; preds = %if.then.176, %land.lhs.true.169, %lor.lhs.false.166
  br label %if.end.178

if.end.178:                                       ; preds = %if.end.177, %land.lhs.true.38, %land.lhs.true.33, %for.body.28
  br label %for.inc.179

for.inc.179:                                      ; preds = %if.end.178, %if.then.133
  %108 = load i32, i32* %i, align 4
  %inc180 = add i32 %108, 1
  store i32 %inc180, i32* %i, align 4
  br label %for.cond.25

for.end.181:                                      ; preds = %for.cond.25
  %109 = load i32, i32* %best_reg, align 4
  %cmp182 = icmp eq i32 %109, -1
  br i1 %cmp182, label %if.then.184, label %if.end.185

if.then.184:                                      ; preds = %for.end.181
  store i32 0, i32* %retval
  br label %return

if.end.185:                                       ; preds = %for.end.181
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** @rtl_dump_file, align 8
  %tobool186 = icmp ne %struct._IO_FILE* %110, null
  br i1 %tobool186, label %if.then.187, label %if.end.189

if.then.187:                                      ; preds = %if.end.185
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** @rtl_dump_file, align 8
  %112 = load i32, i32* %best_reg, align 4
  %113 = load i32, i32* %rnum, align 4
  %call188 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %111, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i32 0, i32 0), i32 %112, i32 %113)
  br label %if.end.189

if.end.189:                                       ; preds = %if.then.187, %if.end.185
  %114 = load i32, i32* %best_reg, align 4
  %cmp190 = icmp sge i32 %114, 8
  br i1 %cmp190, label %land.lhs.true.192, label %lor.lhs.false.195

land.lhs.true.192:                                ; preds = %if.end.189
  %115 = load i32, i32* %best_reg, align 4
  %cmp193 = icmp sle i32 %115, 15
  br i1 %cmp193, label %cond.true.213, label %lor.lhs.false.195

lor.lhs.false.195:                                ; preds = %land.lhs.true.192, %if.end.189
  %116 = load i32, i32* %best_reg, align 4
  %cmp196 = icmp sge i32 %116, 21
  br i1 %cmp196, label %land.lhs.true.198, label %lor.lhs.false.201

land.lhs.true.198:                                ; preds = %lor.lhs.false.195
  %117 = load i32, i32* %best_reg, align 4
  %cmp199 = icmp sle i32 %117, 28
  br i1 %cmp199, label %cond.true.213, label %lor.lhs.false.201

lor.lhs.false.201:                                ; preds = %land.lhs.true.198, %lor.lhs.false.195
  %118 = load i32, i32* %best_reg, align 4
  %cmp202 = icmp sge i32 %118, 45
  br i1 %cmp202, label %land.lhs.true.204, label %lor.lhs.false.207

land.lhs.true.204:                                ; preds = %lor.lhs.false.201
  %119 = load i32, i32* %best_reg, align 4
  %cmp205 = icmp sle i32 %119, 52
  br i1 %cmp205, label %cond.true.213, label %lor.lhs.false.207

lor.lhs.false.207:                                ; preds = %land.lhs.true.204, %lor.lhs.false.201
  %120 = load i32, i32* %best_reg, align 4
  %cmp208 = icmp sge i32 %120, 29
  br i1 %cmp208, label %land.lhs.true.210, label %cond.false.227

land.lhs.true.210:                                ; preds = %lor.lhs.false.207
  %121 = load i32, i32* %best_reg, align 4
  %cmp211 = icmp sle i32 %121, 36
  br i1 %cmp211, label %cond.true.213, label %cond.false.227

cond.true.213:                                    ; preds = %land.lhs.true.210, %land.lhs.true.204, %land.lhs.true.198, %land.lhs.true.192
  %122 = load %struct.reload*, %struct.reload** %rl, align 8
  %mode214 = getelementptr inbounds %struct.reload, %struct.reload* %122, i32 0, i32 5
  %123 = load i32, i32* %mode214, align 4
  %idxprom215 = sext i32 %123 to i64
  %arrayidx216 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom215
  %124 = load i32, i32* %arrayidx216, align 4
  %cmp217 = icmp eq i32 %124, 5
  br i1 %cmp217, label %lor.end.225, label %lor.rhs.219

lor.rhs.219:                                      ; preds = %cond.true.213
  %125 = load %struct.reload*, %struct.reload** %rl, align 8
  %mode220 = getelementptr inbounds %struct.reload, %struct.reload* %125, i32 0, i32 5
  %126 = load i32, i32* %mode220, align 4
  %idxprom221 = sext i32 %126 to i64
  %arrayidx222 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom221
  %127 = load i32, i32* %arrayidx222, align 4
  %cmp223 = icmp eq i32 %127, 6
  br label %lor.end.225

lor.end.225:                                      ; preds = %lor.rhs.219, %cond.true.213
  %128 = phi i1 [ true, %cond.true.213 ], [ %cmp223, %lor.rhs.219 ]
  %cond226 = select i1 %128, i32 2, i32 1
  br label %cond.end.261

cond.false.227:                                   ; preds = %land.lhs.true.210, %lor.lhs.false.207
  %129 = load %struct.reload*, %struct.reload** %rl, align 8
  %mode228 = getelementptr inbounds %struct.reload, %struct.reload* %129, i32 0, i32 5
  %130 = load i32, i32* %mode228, align 4
  %cmp229 = icmp eq i32 %130, 18
  br i1 %cmp229, label %cond.true.231, label %cond.false.235

cond.true.231:                                    ; preds = %cond.false.227
  %131 = load i32, i32* @target_flags, align 4
  %and232 = and i32 %131, 33554432
  %tobool233 = icmp ne i32 %and232, 0
  %cond234 = select i1 %tobool233, i32 2, i32 3
  br label %cond.end.259

cond.false.235:                                   ; preds = %cond.false.227
  %132 = load %struct.reload*, %struct.reload** %rl, align 8
  %mode236 = getelementptr inbounds %struct.reload, %struct.reload* %132, i32 0, i32 5
  %133 = load i32, i32* %mode236, align 4
  %cmp237 = icmp eq i32 %133, 24
  br i1 %cmp237, label %cond.true.239, label %cond.false.243

cond.true.239:                                    ; preds = %cond.false.235
  %134 = load i32, i32* @target_flags, align 4
  %and240 = and i32 %134, 33554432
  %tobool241 = icmp ne i32 %and240, 0
  %cond242 = select i1 %tobool241, i32 4, i32 6
  br label %cond.end.257

cond.false.243:                                   ; preds = %cond.false.235
  %135 = load %struct.reload*, %struct.reload** %rl, align 8
  %mode244 = getelementptr inbounds %struct.reload, %struct.reload* %135, i32 0, i32 5
  %136 = load i32, i32* %mode244, align 4
  %idxprom245 = sext i32 %136 to i64
  %arrayidx246 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom245
  %137 = load i8, i8* %arrayidx246, align 1
  %conv247 = zext i8 %137 to i32
  %138 = load i32, i32* @target_flags, align 4
  %and248 = and i32 %138, 33554432
  %tobool249 = icmp ne i32 %and248, 0
  %cond250 = select i1 %tobool249, i32 8, i32 4
  %add251 = add nsw i32 %conv247, %cond250
  %sub252 = sub nsw i32 %add251, 1
  %139 = load i32, i32* @target_flags, align 4
  %and253 = and i32 %139, 33554432
  %tobool254 = icmp ne i32 %and253, 0
  %cond255 = select i1 %tobool254, i32 8, i32 4
  %div256 = sdiv i32 %sub252, %cond255
  br label %cond.end.257

cond.end.257:                                     ; preds = %cond.false.243, %cond.true.239
  %cond258 = phi i32 [ %cond242, %cond.true.239 ], [ %div256, %cond.false.243 ]
  br label %cond.end.259

cond.end.259:                                     ; preds = %cond.end.257, %cond.true.231
  %cond260 = phi i32 [ %cond234, %cond.true.231 ], [ %cond258, %cond.end.257 ]
  br label %cond.end.261

cond.end.261:                                     ; preds = %cond.end.259, %lor.end.225
  %cond262 = phi i32 [ %cond226, %lor.end.225 ], [ %cond260, %cond.end.259 ]
  %140 = load %struct.reload*, %struct.reload** %rl, align 8
  %nregs263 = getelementptr inbounds %struct.reload, %struct.reload* %140, i32 0, i32 6
  store i32 %cond262, i32* %nregs263, align 4
  %141 = load i32, i32* %best_reg, align 4
  %142 = load %struct.reload*, %struct.reload** %rl, align 8
  %regno264 = getelementptr inbounds %struct.reload, %struct.reload* %142, i32 0, i32 10
  store i32 %141, i32* %regno264, align 4
  br label %do.body

do.body:                                          ; preds = %cond.end.261
  %143 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %live_throughout = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %143, i32 0, i32 5
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %live_throughout, i32 0, i32 0
  %144 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8
  store %struct.bitmap_element_def* %144, %struct.bitmap_element_def** %ptr_, align 8
  store i32 0, i32* %indx_, align 4
  store i32 53, i32* %bit_num_, align 4
  store i32 0, i32* %word_num_, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body
  %145 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %cmp265 = icmp ne %struct.bitmap_element_def* %145, null
  br i1 %cmp265, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %146 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %146, i32 0, i32 2
  %147 = load i32, i32* %indx, align 4
  %148 = load i32, i32* %indx_, align 4
  %cmp267 = icmp ult i32 %147, %148
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %149 = phi i1 [ false, %while.cond ], [ %cmp267, %land.rhs ]
  br i1 %149, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %150 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %next = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %150, i32 0, i32 0
  %151 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next, align 8
  store %struct.bitmap_element_def* %151, %struct.bitmap_element_def** %ptr_, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %152 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %cmp269 = icmp ne %struct.bitmap_element_def* %152, null
  br i1 %cmp269, label %land.lhs.true.271, label %if.end.276

land.lhs.true.271:                                ; preds = %while.end
  %153 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %indx272 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %153, i32 0, i32 2
  %154 = load i32, i32* %indx272, align 4
  %155 = load i32, i32* %indx_, align 4
  %cmp273 = icmp ne i32 %154, %155
  br i1 %cmp273, label %if.then.275, label %if.end.276

if.then.275:                                      ; preds = %land.lhs.true.271
  store i32 0, i32* %bit_num_, align 4
  store i32 0, i32* %word_num_, align 4
  br label %if.end.276

if.end.276:                                       ; preds = %if.then.275, %land.lhs.true.271, %while.end
  br label %for.cond.277

for.cond.277:                                     ; preds = %for.inc.319, %if.end.276
  %156 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %cmp278 = icmp ne %struct.bitmap_element_def* %156, null
  br i1 %cmp278, label %for.body.280, label %for.end.321

for.body.280:                                     ; preds = %for.cond.277
  br label %for.cond.281

for.cond.281:                                     ; preds = %for.inc.316, %for.body.280
  %157 = load i32, i32* %word_num_, align 4
  %cmp282 = icmp ult i32 %157, 2
  br i1 %cmp282, label %for.body.284, label %for.end.318

for.body.284:                                     ; preds = %for.cond.281
  %158 = load i32, i32* %word_num_, align 4
  %idxprom285 = zext i32 %158 to i64
  %159 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %bits = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %159, i32 0, i32 3
  %arrayidx286 = getelementptr inbounds [2 x i64], [2 x i64]* %bits, i32 0, i64 %idxprom285
  %160 = load i64, i64* %arrayidx286, align 8
  store i64 %160, i64* %word_, align 8
  %161 = load i64, i64* %word_, align 8
  %cmp287 = icmp ne i64 %161, 0
  br i1 %cmp287, label %if.then.289, label %if.end.315

if.then.289:                                      ; preds = %for.body.284
  br label %for.cond.290

for.cond.290:                                     ; preds = %for.inc.312, %if.then.289
  %162 = load i32, i32* %bit_num_, align 4
  %cmp291 = icmp ult i32 %162, 64
  br i1 %cmp291, label %for.body.293, label %for.end.314

for.body.293:                                     ; preds = %for.cond.290
  %163 = load i32, i32* %bit_num_, align 4
  %sh_prom294 = zext i32 %163 to i64
  %shl295 = shl i64 1, %sh_prom294
  store i64 %shl295, i64* %mask_, align 8
  %164 = load i64, i64* %word_, align 8
  %165 = load i64, i64* %mask_, align 8
  %and296 = and i64 %164, %165
  %cmp297 = icmp ne i64 %and296, 0
  br i1 %cmp297, label %if.then.299, label %if.end.311

if.then.299:                                      ; preds = %for.body.293
  %166 = load i64, i64* %mask_, align 8
  %neg300 = xor i64 %166, -1
  %167 = load i64, i64* %word_, align 8
  %and301 = and i64 %167, %neg300
  store i64 %and301, i64* %word_, align 8
  %168 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %indx302 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %168, i32 0, i32 2
  %169 = load i32, i32* %indx302, align 4
  %mul = mul i32 %169, 128
  %170 = load i32, i32* %word_num_, align 4
  %mul303 = mul i32 %170, 64
  %add304 = add i32 %mul, %mul303
  %171 = load i32, i32* %bit_num_, align 4
  %add305 = add i32 %add304, %171
  store i32 %add305, i32* %j, align 4
  %172 = load i32, i32* %best_reg, align 4
  %173 = load %struct.reload*, %struct.reload** %rl, align 8
  %nregs306 = getelementptr inbounds %struct.reload, %struct.reload* %173, i32 0, i32 6
  %174 = load i32, i32* %nregs306, align 4
  %175 = load i32, i32* %j, align 4
  call void @count_spilled_pseudo(i32 %172, i32 %174, i32 %175)
  %176 = load i64, i64* %word_, align 8
  %cmp307 = icmp eq i64 %176, 0
  br i1 %cmp307, label %if.then.309, label %if.end.310

if.then.309:                                      ; preds = %if.then.299
  br label %for.end.314

if.end.310:                                       ; preds = %if.then.299
  br label %if.end.311

if.end.311:                                       ; preds = %if.end.310, %for.body.293
  br label %for.inc.312

for.inc.312:                                      ; preds = %if.end.311
  %177 = load i32, i32* %bit_num_, align 4
  %inc313 = add i32 %177, 1
  store i32 %inc313, i32* %bit_num_, align 4
  br label %for.cond.290

for.end.314:                                      ; preds = %if.then.309, %for.cond.290
  br label %if.end.315

if.end.315:                                       ; preds = %for.end.314, %for.body.284
  store i32 0, i32* %bit_num_, align 4
  br label %for.inc.316

for.inc.316:                                      ; preds = %if.end.315
  %178 = load i32, i32* %word_num_, align 4
  %inc317 = add i32 %178, 1
  store i32 %inc317, i32* %word_num_, align 4
  br label %for.cond.281

for.end.318:                                      ; preds = %for.cond.281
  store i32 0, i32* %word_num_, align 4
  br label %for.inc.319

for.inc.319:                                      ; preds = %for.end.318
  %179 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %next320 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %179, i32 0, i32 0
  %180 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next320, align 8
  store %struct.bitmap_element_def* %180, %struct.bitmap_element_def** %ptr_, align 8
  br label %for.cond.277

for.end.321:                                      ; preds = %for.cond.277
  br label %do.end

do.end:                                           ; preds = %for.end.321
  br label %do.body.322

do.body.322:                                      ; preds = %do.end
  %181 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %dead_or_set = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %181, i32 0, i32 6
  %first324 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %dead_or_set, i32 0, i32 0
  %182 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first324, align 8
  store %struct.bitmap_element_def* %182, %struct.bitmap_element_def** %ptr_323, align 8
  store i32 0, i32* %indx_325, align 4
  store i32 53, i32* %bit_num_326, align 4
  store i32 0, i32* %word_num_327, align 4
  br label %while.cond.328

while.cond.328:                                   ; preds = %while.body.336, %do.body.322
  %183 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_323, align 8
  %cmp329 = icmp ne %struct.bitmap_element_def* %183, null
  br i1 %cmp329, label %land.rhs.331, label %land.end.335

land.rhs.331:                                     ; preds = %while.cond.328
  %184 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_323, align 8
  %indx332 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %184, i32 0, i32 2
  %185 = load i32, i32* %indx332, align 4
  %186 = load i32, i32* %indx_325, align 4
  %cmp333 = icmp ult i32 %185, %186
  br label %land.end.335

land.end.335:                                     ; preds = %land.rhs.331, %while.cond.328
  %187 = phi i1 [ false, %while.cond.328 ], [ %cmp333, %land.rhs.331 ]
  br i1 %187, label %while.body.336, label %while.end.338

while.body.336:                                   ; preds = %land.end.335
  %188 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_323, align 8
  %next337 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %188, i32 0, i32 0
  %189 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next337, align 8
  store %struct.bitmap_element_def* %189, %struct.bitmap_element_def** %ptr_323, align 8
  br label %while.cond.328

while.end.338:                                    ; preds = %land.end.335
  %190 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_323, align 8
  %cmp339 = icmp ne %struct.bitmap_element_def* %190, null
  br i1 %cmp339, label %land.lhs.true.341, label %if.end.346

land.lhs.true.341:                                ; preds = %while.end.338
  %191 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_323, align 8
  %indx342 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %191, i32 0, i32 2
  %192 = load i32, i32* %indx342, align 4
  %193 = load i32, i32* %indx_325, align 4
  %cmp343 = icmp ne i32 %192, %193
  br i1 %cmp343, label %if.then.345, label %if.end.346

if.then.345:                                      ; preds = %land.lhs.true.341
  store i32 0, i32* %bit_num_326, align 4
  store i32 0, i32* %word_num_327, align 4
  br label %if.end.346

if.end.346:                                       ; preds = %if.then.345, %land.lhs.true.341, %while.end.338
  br label %for.cond.347

for.cond.347:                                     ; preds = %for.inc.393, %if.end.346
  %194 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_323, align 8
  %cmp348 = icmp ne %struct.bitmap_element_def* %194, null
  br i1 %cmp348, label %for.body.350, label %for.end.395

for.body.350:                                     ; preds = %for.cond.347
  br label %for.cond.351

for.cond.351:                                     ; preds = %for.inc.390, %for.body.350
  %195 = load i32, i32* %word_num_327, align 4
  %cmp352 = icmp ult i32 %195, 2
  br i1 %cmp352, label %for.body.354, label %for.end.392

for.body.354:                                     ; preds = %for.cond.351
  %196 = load i32, i32* %word_num_327, align 4
  %idxprom356 = zext i32 %196 to i64
  %197 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_323, align 8
  %bits357 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %197, i32 0, i32 3
  %arrayidx358 = getelementptr inbounds [2 x i64], [2 x i64]* %bits357, i32 0, i64 %idxprom356
  %198 = load i64, i64* %arrayidx358, align 8
  store i64 %198, i64* %word_355, align 8
  %199 = load i64, i64* %word_355, align 8
  %cmp359 = icmp ne i64 %199, 0
  br i1 %cmp359, label %if.then.361, label %if.end.389

if.then.361:                                      ; preds = %for.body.354
  br label %for.cond.362

for.cond.362:                                     ; preds = %for.inc.386, %if.then.361
  %200 = load i32, i32* %bit_num_326, align 4
  %cmp363 = icmp ult i32 %200, 64
  br i1 %cmp363, label %for.body.365, label %for.end.388

for.body.365:                                     ; preds = %for.cond.362
  %201 = load i32, i32* %bit_num_326, align 4
  %sh_prom367 = zext i32 %201 to i64
  %shl368 = shl i64 1, %sh_prom367
  store i64 %shl368, i64* %mask_366, align 8
  %202 = load i64, i64* %word_355, align 8
  %203 = load i64, i64* %mask_366, align 8
  %and369 = and i64 %202, %203
  %cmp370 = icmp ne i64 %and369, 0
  br i1 %cmp370, label %if.then.372, label %if.end.385

if.then.372:                                      ; preds = %for.body.365
  %204 = load i64, i64* %mask_366, align 8
  %neg373 = xor i64 %204, -1
  %205 = load i64, i64* %word_355, align 8
  %and374 = and i64 %205, %neg373
  store i64 %and374, i64* %word_355, align 8
  %206 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_323, align 8
  %indx375 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %206, i32 0, i32 2
  %207 = load i32, i32* %indx375, align 4
  %mul376 = mul i32 %207, 128
  %208 = load i32, i32* %word_num_327, align 4
  %mul377 = mul i32 %208, 64
  %add378 = add i32 %mul376, %mul377
  %209 = load i32, i32* %bit_num_326, align 4
  %add379 = add i32 %add378, %209
  store i32 %add379, i32* %j, align 4
  %210 = load i32, i32* %best_reg, align 4
  %211 = load %struct.reload*, %struct.reload** %rl, align 8
  %nregs380 = getelementptr inbounds %struct.reload, %struct.reload* %211, i32 0, i32 6
  %212 = load i32, i32* %nregs380, align 4
  %213 = load i32, i32* %j, align 4
  call void @count_spilled_pseudo(i32 %210, i32 %212, i32 %213)
  %214 = load i64, i64* %word_355, align 8
  %cmp381 = icmp eq i64 %214, 0
  br i1 %cmp381, label %if.then.383, label %if.end.384

if.then.383:                                      ; preds = %if.then.372
  br label %for.end.388

if.end.384:                                       ; preds = %if.then.372
  br label %if.end.385

if.end.385:                                       ; preds = %if.end.384, %for.body.365
  br label %for.inc.386

for.inc.386:                                      ; preds = %if.end.385
  %215 = load i32, i32* %bit_num_326, align 4
  %inc387 = add i32 %215, 1
  store i32 %inc387, i32* %bit_num_326, align 4
  br label %for.cond.362

for.end.388:                                      ; preds = %if.then.383, %for.cond.362
  br label %if.end.389

if.end.389:                                       ; preds = %for.end.388, %for.body.354
  store i32 0, i32* %bit_num_326, align 4
  br label %for.inc.390

for.inc.390:                                      ; preds = %if.end.389
  %216 = load i32, i32* %word_num_327, align 4
  %inc391 = add i32 %216, 1
  store i32 %inc391, i32* %word_num_327, align 4
  br label %for.cond.351

for.end.392:                                      ; preds = %for.cond.351
  store i32 0, i32* %word_num_327, align 4
  br label %for.inc.393

for.inc.393:                                      ; preds = %for.end.392
  %217 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_323, align 8
  %next394 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %217, i32 0, i32 0
  %218 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next394, align 8
  store %struct.bitmap_element_def* %218, %struct.bitmap_element_def** %ptr_323, align 8
  br label %for.cond.347

for.end.395:                                      ; preds = %for.cond.347
  br label %do.end.396

do.end.396:                                       ; preds = %for.end.395
  store i32 0, i32* %i, align 4
  br label %for.cond.397

for.cond.397:                                     ; preds = %for.inc.419, %do.end.396
  %219 = load i32, i32* %i, align 4
  %220 = load %struct.reload*, %struct.reload** %rl, align 8
  %nregs398 = getelementptr inbounds %struct.reload, %struct.reload* %220, i32 0, i32 6
  %221 = load i32, i32* %nregs398, align 4
  %cmp399 = icmp ult i32 %219, %221
  br i1 %cmp399, label %for.body.401, label %for.end.421

for.body.401:                                     ; preds = %for.cond.397
  %222 = load i32, i32* %best_reg, align 4
  %223 = load i32, i32* %i, align 4
  %add402 = add i32 %222, %223
  %idxprom403 = zext i32 %add402 to i64
  %arrayidx404 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_cost, i32 0, i64 %idxprom403
  %224 = load i32, i32* %arrayidx404, align 4
  %cmp405 = icmp ne i32 %224, 0
  br i1 %cmp405, label %if.then.413, label %lor.lhs.false.407

lor.lhs.false.407:                                ; preds = %for.body.401
  %225 = load i32, i32* %best_reg, align 4
  %226 = load i32, i32* %i, align 4
  %add408 = add i32 %225, %226
  %idxprom409 = zext i32 %add408 to i64
  %arrayidx410 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_add_cost, i32 0, i64 %idxprom409
  %227 = load i32, i32* %arrayidx410, align 4
  %cmp411 = icmp ne i32 %227, 0
  br i1 %cmp411, label %if.then.413, label %if.end.414

if.then.413:                                      ; preds = %lor.lhs.false.407, %for.body.401
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 1778, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.find_reg, i32 0, i32 0)) #5
  unreachable

if.end.414:                                       ; preds = %lor.lhs.false.407
  %228 = load i32, i32* %best_reg, align 4
  %229 = load i32, i32* %i, align 4
  %add415 = add i32 %228, %229
  %sh_prom416 = zext i32 %add415 to i64
  %shl417 = shl i64 1, %sh_prom416
  %230 = load i64, i64* @used_spill_regs_local, align 8
  %or418 = or i64 %230, %shl417
  store i64 %or418, i64* @used_spill_regs_local, align 8
  br label %for.inc.419

for.inc.419:                                      ; preds = %if.end.414
  %231 = load i32, i32* %i, align 4
  %inc420 = add i32 %231, 1
  store i32 %inc420, i32* %i, align 4
  br label %for.cond.397

for.end.421:                                      ; preds = %for.cond.397
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %for.end.421, %if.then.184
  %232 = load i32, i32* %retval
  ret i32 %232
}

; Function Attrs: nounwind uwtable
define internal void @spill_failure(%struct.rtx_def* %insn, i32 %class) #0 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %class.addr = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store i32 %class, i32* %class.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %call = call i32 @asm_noperands(%struct.rtx_def* %1)
  %cmp = icmp sge i32 %call, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %3 = load i32, i32* %class.addr, align 4
  %idxprom = zext i32 %3 to i64
  %arrayidx1 = getelementptr inbounds [25 x i8*], [25 x i8*]* @spill_failure.reg_class_names, i32 0, i64 %idxprom
  %4 = load i8*, i8** %arrayidx1, align 8
  call void (%struct.rtx_def*, i8*, ...) @error_for_asm(%struct.rtx_def* %2, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.31, i32 0, i32 0), i8* %4)
  br label %if.end

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %class.addr, align 4
  %idxprom2 = zext i32 %5 to i64
  %arrayidx3 = getelementptr inbounds [25 x i8*], [25 x i8*]* @spill_failure.reg_class_names, i32 0, i64 %idxprom2
  %6 = load i8*, i8** %arrayidx3, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.32, i32 0, i32 0), i8* %6)
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  call void @_fatal_insn(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i32 0, i32 0), %struct.rtx_def* %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 1910, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.spill_failure, i32 0, i32 0)) #5
  unreachable

if.end:                                           ; preds = %if.then
  ret void
}

declare void @reg_set_to_hard_reg_set(i64*, %struct.bitmap_head_def*) #1

; Function Attrs: nounwind uwtable
define internal void @count_pseudo(i32 %reg) #0 {
entry:
  %reg.addr = alloca i32, align 4
  %freq = alloca i32, align 4
  %r = alloca i32, align 4
  %nregs = alloca i32, align 4
  store i32 %reg, i32* %reg.addr, align 4
  %0 = load i32, i32* %reg.addr, align 4
  %idxprom = sext i32 %0 to i64
  %1 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %1, i32 0, i32 4
  %reg1 = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg1, i32 0, i64 %idxprom
  %2 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx, align 8
  %freq2 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2, i32 0, i32 5
  %3 = load i32, i32* %freq2, align 4
  store i32 %3, i32* %freq, align 4
  %4 = load i32, i32* %reg.addr, align 4
  %idxprom3 = sext i32 %4 to i64
  %5 = load i16*, i16** @reg_renumber, align 8
  %arrayidx4 = getelementptr inbounds i16, i16* %5, i64 %idxprom3
  %6 = load i16, i16* %arrayidx4, align 2
  %conv = sext i16 %6 to i32
  store i32 %conv, i32* %r, align 4
  %7 = load i32, i32* %reg.addr, align 4
  %call = call i32 @bitmap_bit_p(%struct.bitmap_head_def* @pseudos_counted, i32 %7)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %8 = load i32, i32* %reg.addr, align 4
  %call5 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* @spilled_pseudos, i32 %8)
  %tobool6 = icmp ne i32 %call5, 0
  br i1 %tobool6, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %while.end

if.end:                                           ; preds = %lor.lhs.false
  %9 = load i32, i32* %reg.addr, align 4
  call void @bitmap_set_bit(%struct.bitmap_head_def* @pseudos_counted, i32 %9)
  %10 = load i32, i32* %r, align 4
  %cmp = icmp slt i32 %10, 0
  br i1 %cmp, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 1599, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.count_pseudo, i32 0, i32 0)) #5
  unreachable

if.end.9:                                         ; preds = %if.end
  %11 = load i32, i32* %freq, align 4
  %12 = load i32, i32* %r, align 4
  %idxprom10 = sext i32 %12 to i64
  %arrayidx11 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_add_cost, i32 0, i64 %idxprom10
  %13 = load i32, i32* %arrayidx11, align 4
  %add = add nsw i32 %13, %11
  store i32 %add, i32* %arrayidx11, align 4
  %14 = load i32, i32* %r, align 4
  %cmp12 = icmp sge i32 %14, 8
  br i1 %cmp12, label %land.lhs.true, label %lor.lhs.false.16

land.lhs.true:                                    ; preds = %if.end.9
  %15 = load i32, i32* %r, align 4
  %cmp14 = icmp sle i32 %15, 15
  br i1 %cmp14, label %cond.true, label %lor.lhs.false.16

lor.lhs.false.16:                                 ; preds = %land.lhs.true, %if.end.9
  %16 = load i32, i32* %r, align 4
  %cmp17 = icmp sge i32 %16, 21
  br i1 %cmp17, label %land.lhs.true.19, label %lor.lhs.false.22

land.lhs.true.19:                                 ; preds = %lor.lhs.false.16
  %17 = load i32, i32* %r, align 4
  %cmp20 = icmp sle i32 %17, 28
  br i1 %cmp20, label %cond.true, label %lor.lhs.false.22

lor.lhs.false.22:                                 ; preds = %land.lhs.true.19, %lor.lhs.false.16
  %18 = load i32, i32* %r, align 4
  %cmp23 = icmp sge i32 %18, 45
  br i1 %cmp23, label %land.lhs.true.25, label %lor.lhs.false.28

land.lhs.true.25:                                 ; preds = %lor.lhs.false.22
  %19 = load i32, i32* %r, align 4
  %cmp26 = icmp sle i32 %19, 52
  br i1 %cmp26, label %cond.true, label %lor.lhs.false.28

lor.lhs.false.28:                                 ; preds = %land.lhs.true.25, %lor.lhs.false.22
  %20 = load i32, i32* %r, align 4
  %cmp29 = icmp sge i32 %20, 29
  br i1 %cmp29, label %land.lhs.true.31, label %cond.false

land.lhs.true.31:                                 ; preds = %lor.lhs.false.28
  %21 = load i32, i32* %r, align 4
  %cmp32 = icmp sle i32 %21, 36
  br i1 %cmp32, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.31, %land.lhs.true.25, %land.lhs.true.19, %land.lhs.true
  %22 = load i32, i32* %reg.addr, align 4
  %idxprom34 = sext i32 %22 to i64
  %23 = load %struct.function*, %struct.function** @cfun, align 8
  %emit = getelementptr inbounds %struct.function, %struct.function* %23, i32 0, i32 3
  %24 = load %struct.emit_status*, %struct.emit_status** %emit, align 8
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status, %struct.emit_status* %24, i32 0, i32 12
  %25 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx, align 8
  %arrayidx35 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %25, i64 %idxprom34
  %26 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx35, align 8
  %27 = bitcast %struct.rtx_def* %26 to i32*
  %bf.load = load i32, i32* %27, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom36 = sext i32 %bf.clear to i64
  %arrayidx37 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom36
  %28 = load i32, i32* %arrayidx37, align 4
  %cmp38 = icmp eq i32 %28, 5
  br i1 %cmp38, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %29 = load i32, i32* %reg.addr, align 4
  %idxprom40 = sext i32 %29 to i64
  %30 = load %struct.function*, %struct.function** @cfun, align 8
  %emit41 = getelementptr inbounds %struct.function, %struct.function* %30, i32 0, i32 3
  %31 = load %struct.emit_status*, %struct.emit_status** %emit41, align 8
  %x_regno_reg_rtx42 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %31, i32 0, i32 12
  %32 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx42, align 8
  %arrayidx43 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %32, i64 %idxprom40
  %33 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx43, align 8
  %34 = bitcast %struct.rtx_def* %33 to i32*
  %bf.load44 = load i32, i32* %34, align 8
  %bf.lshr45 = lshr i32 %bf.load44, 16
  %bf.clear46 = and i32 %bf.lshr45, 255
  %idxprom47 = sext i32 %bf.clear46 to i64
  %arrayidx48 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom47
  %35 = load i32, i32* %arrayidx48, align 4
  %cmp49 = icmp eq i32 %35, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %36 = phi i1 [ true, %cond.true ], [ %cmp49, %lor.rhs ]
  %cond = select i1 %36, i32 2, i32 1
  br label %cond.end.98

cond.false:                                       ; preds = %land.lhs.true.31, %lor.lhs.false.28
  %37 = load i32, i32* %reg.addr, align 4
  %idxprom51 = sext i32 %37 to i64
  %38 = load %struct.function*, %struct.function** @cfun, align 8
  %emit52 = getelementptr inbounds %struct.function, %struct.function* %38, i32 0, i32 3
  %39 = load %struct.emit_status*, %struct.emit_status** %emit52, align 8
  %x_regno_reg_rtx53 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %39, i32 0, i32 12
  %40 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx53, align 8
  %arrayidx54 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %40, i64 %idxprom51
  %41 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx54, align 8
  %42 = bitcast %struct.rtx_def* %41 to i32*
  %bf.load55 = load i32, i32* %42, align 8
  %bf.lshr56 = lshr i32 %bf.load55, 16
  %bf.clear57 = and i32 %bf.lshr56, 255
  %cmp58 = icmp eq i32 %bf.clear57, 18
  br i1 %cmp58, label %cond.true.60, label %cond.false.63

cond.true.60:                                     ; preds = %cond.false
  %43 = load i32, i32* @target_flags, align 4
  %and = and i32 %43, 33554432
  %tobool61 = icmp ne i32 %and, 0
  %cond62 = select i1 %tobool61, i32 2, i32 3
  br label %cond.end.96

cond.false.63:                                    ; preds = %cond.false
  %44 = load i32, i32* %reg.addr, align 4
  %idxprom64 = sext i32 %44 to i64
  %45 = load %struct.function*, %struct.function** @cfun, align 8
  %emit65 = getelementptr inbounds %struct.function, %struct.function* %45, i32 0, i32 3
  %46 = load %struct.emit_status*, %struct.emit_status** %emit65, align 8
  %x_regno_reg_rtx66 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %46, i32 0, i32 12
  %47 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx66, align 8
  %arrayidx67 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %47, i64 %idxprom64
  %48 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx67, align 8
  %49 = bitcast %struct.rtx_def* %48 to i32*
  %bf.load68 = load i32, i32* %49, align 8
  %bf.lshr69 = lshr i32 %bf.load68, 16
  %bf.clear70 = and i32 %bf.lshr69, 255
  %cmp71 = icmp eq i32 %bf.clear70, 24
  br i1 %cmp71, label %cond.true.73, label %cond.false.77

cond.true.73:                                     ; preds = %cond.false.63
  %50 = load i32, i32* @target_flags, align 4
  %and74 = and i32 %50, 33554432
  %tobool75 = icmp ne i32 %and74, 0
  %cond76 = select i1 %tobool75, i32 4, i32 6
  br label %cond.end

cond.false.77:                                    ; preds = %cond.false.63
  %51 = load i32, i32* %reg.addr, align 4
  %idxprom78 = sext i32 %51 to i64
  %52 = load %struct.function*, %struct.function** @cfun, align 8
  %emit79 = getelementptr inbounds %struct.function, %struct.function* %52, i32 0, i32 3
  %53 = load %struct.emit_status*, %struct.emit_status** %emit79, align 8
  %x_regno_reg_rtx80 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %53, i32 0, i32 12
  %54 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx80, align 8
  %arrayidx81 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %54, i64 %idxprom78
  %55 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx81, align 8
  %56 = bitcast %struct.rtx_def* %55 to i32*
  %bf.load82 = load i32, i32* %56, align 8
  %bf.lshr83 = lshr i32 %bf.load82, 16
  %bf.clear84 = and i32 %bf.lshr83, 255
  %idxprom85 = sext i32 %bf.clear84 to i64
  %arrayidx86 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom85
  %57 = load i8, i8* %arrayidx86, align 1
  %conv87 = zext i8 %57 to i32
  %58 = load i32, i32* @target_flags, align 4
  %and88 = and i32 %58, 33554432
  %tobool89 = icmp ne i32 %and88, 0
  %cond90 = select i1 %tobool89, i32 8, i32 4
  %add91 = add nsw i32 %conv87, %cond90
  %sub = sub nsw i32 %add91, 1
  %59 = load i32, i32* @target_flags, align 4
  %and92 = and i32 %59, 33554432
  %tobool93 = icmp ne i32 %and92, 0
  %cond94 = select i1 %tobool93, i32 8, i32 4
  %div = sdiv i32 %sub, %cond94
  br label %cond.end

cond.end:                                         ; preds = %cond.false.77, %cond.true.73
  %cond95 = phi i32 [ %cond76, %cond.true.73 ], [ %div, %cond.false.77 ]
  br label %cond.end.96

cond.end.96:                                      ; preds = %cond.end, %cond.true.60
  %cond97 = phi i32 [ %cond62, %cond.true.60 ], [ %cond95, %cond.end ]
  br label %cond.end.98

cond.end.98:                                      ; preds = %cond.end.96, %lor.end
  %cond99 = phi i32 [ %cond, %lor.end ], [ %cond97, %cond.end.96 ]
  store i32 %cond99, i32* %nregs, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %cond.end.98
  %60 = load i32, i32* %nregs, align 4
  %dec = add nsw i32 %60, -1
  store i32 %dec, i32* %nregs, align 4
  %cmp100 = icmp sgt i32 %60, 0
  br i1 %cmp100, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %61 = load i32, i32* %freq, align 4
  %62 = load i32, i32* %r, align 4
  %63 = load i32, i32* %nregs, align 4
  %add102 = add nsw i32 %62, %63
  %idxprom103 = sext i32 %add102 to i64
  %arrayidx104 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_cost, i32 0, i64 %idxprom103
  %64 = load i32, i32* %arrayidx104, align 4
  %add105 = add nsw i32 %64, %61
  store i32 %add105, i32* %arrayidx104, align 4
  br label %while.cond

while.end:                                        ; preds = %if.then, %while.cond
  ret void
}

declare i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) #1

declare void @bitmap_set_bit(%struct.bitmap_head_def*, i32) #1

declare i32 @ix86_hard_regno_mode_ok(i32, i32) #1

; Function Attrs: nounwind uwtable
define internal void @count_spilled_pseudo(i32 %spilled, i32 %spilled_nregs, i32 %reg) #0 {
entry:
  %spilled.addr = alloca i32, align 4
  %spilled_nregs.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  %r = alloca i32, align 4
  %nregs = alloca i32, align 4
  store i32 %spilled, i32* %spilled.addr, align 4
  store i32 %spilled_nregs, i32* %spilled_nregs.addr, align 4
  store i32 %reg, i32* %reg.addr, align 4
  %0 = load i32, i32* %reg.addr, align 4
  %idxprom = sext i32 %0 to i64
  %1 = load i16*, i16** @reg_renumber, align 8
  %arrayidx = getelementptr inbounds i16, i16* %1, i64 %idxprom
  %2 = load i16, i16* %arrayidx, align 2
  %conv = sext i16 %2 to i32
  store i32 %conv, i32* %r, align 4
  %3 = load i32, i32* %r, align 4
  %cmp = icmp sge i32 %3, 8
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %entry
  %4 = load i32, i32* %r, align 4
  %cmp2 = icmp sle i32 %4, 15
  br i1 %cmp2, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %5 = load i32, i32* %r, align 4
  %cmp4 = icmp sge i32 %5, 21
  br i1 %cmp4, label %land.lhs.true.6, label %lor.lhs.false.9

land.lhs.true.6:                                  ; preds = %lor.lhs.false
  %6 = load i32, i32* %r, align 4
  %cmp7 = icmp sle i32 %6, 28
  br i1 %cmp7, label %cond.true, label %lor.lhs.false.9

lor.lhs.false.9:                                  ; preds = %land.lhs.true.6, %lor.lhs.false
  %7 = load i32, i32* %r, align 4
  %cmp10 = icmp sge i32 %7, 45
  br i1 %cmp10, label %land.lhs.true.12, label %lor.lhs.false.15

land.lhs.true.12:                                 ; preds = %lor.lhs.false.9
  %8 = load i32, i32* %r, align 4
  %cmp13 = icmp sle i32 %8, 52
  br i1 %cmp13, label %cond.true, label %lor.lhs.false.15

lor.lhs.false.15:                                 ; preds = %land.lhs.true.12, %lor.lhs.false.9
  %9 = load i32, i32* %r, align 4
  %cmp16 = icmp sge i32 %9, 29
  br i1 %cmp16, label %land.lhs.true.18, label %cond.false

land.lhs.true.18:                                 ; preds = %lor.lhs.false.15
  %10 = load i32, i32* %r, align 4
  %cmp19 = icmp sle i32 %10, 36
  br i1 %cmp19, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.18, %land.lhs.true.12, %land.lhs.true.6, %land.lhs.true
  %11 = load i32, i32* %reg.addr, align 4
  %idxprom21 = sext i32 %11 to i64
  %12 = load %struct.function*, %struct.function** @cfun, align 8
  %emit = getelementptr inbounds %struct.function, %struct.function* %12, i32 0, i32 3
  %13 = load %struct.emit_status*, %struct.emit_status** %emit, align 8
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status, %struct.emit_status* %13, i32 0, i32 12
  %14 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx, align 8
  %arrayidx22 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %14, i64 %idxprom21
  %15 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx22, align 8
  %16 = bitcast %struct.rtx_def* %15 to i32*
  %bf.load = load i32, i32* %16, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom23 = sext i32 %bf.clear to i64
  %arrayidx24 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom23
  %17 = load i32, i32* %arrayidx24, align 4
  %cmp25 = icmp eq i32 %17, 5
  br i1 %cmp25, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %18 = load i32, i32* %reg.addr, align 4
  %idxprom27 = sext i32 %18 to i64
  %19 = load %struct.function*, %struct.function** @cfun, align 8
  %emit28 = getelementptr inbounds %struct.function, %struct.function* %19, i32 0, i32 3
  %20 = load %struct.emit_status*, %struct.emit_status** %emit28, align 8
  %x_regno_reg_rtx29 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %20, i32 0, i32 12
  %21 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx29, align 8
  %arrayidx30 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %21, i64 %idxprom27
  %22 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx30, align 8
  %23 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load31 = load i32, i32* %23, align 8
  %bf.lshr32 = lshr i32 %bf.load31, 16
  %bf.clear33 = and i32 %bf.lshr32, 255
  %idxprom34 = sext i32 %bf.clear33 to i64
  %arrayidx35 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom34
  %24 = load i32, i32* %arrayidx35, align 4
  %cmp36 = icmp eq i32 %24, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %25 = phi i1 [ true, %cond.true ], [ %cmp36, %lor.rhs ]
  %cond = select i1 %25, i32 2, i32 1
  br label %cond.end.83

cond.false:                                       ; preds = %land.lhs.true.18, %lor.lhs.false.15
  %26 = load i32, i32* %reg.addr, align 4
  %idxprom38 = sext i32 %26 to i64
  %27 = load %struct.function*, %struct.function** @cfun, align 8
  %emit39 = getelementptr inbounds %struct.function, %struct.function* %27, i32 0, i32 3
  %28 = load %struct.emit_status*, %struct.emit_status** %emit39, align 8
  %x_regno_reg_rtx40 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %28, i32 0, i32 12
  %29 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx40, align 8
  %arrayidx41 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %29, i64 %idxprom38
  %30 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx41, align 8
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load42 = load i32, i32* %31, align 8
  %bf.lshr43 = lshr i32 %bf.load42, 16
  %bf.clear44 = and i32 %bf.lshr43, 255
  %cmp45 = icmp eq i32 %bf.clear44, 18
  br i1 %cmp45, label %cond.true.47, label %cond.false.49

cond.true.47:                                     ; preds = %cond.false
  %32 = load i32, i32* @target_flags, align 4
  %and = and i32 %32, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond48 = select i1 %tobool, i32 2, i32 3
  br label %cond.end.81

cond.false.49:                                    ; preds = %cond.false
  %33 = load i32, i32* %reg.addr, align 4
  %idxprom50 = sext i32 %33 to i64
  %34 = load %struct.function*, %struct.function** @cfun, align 8
  %emit51 = getelementptr inbounds %struct.function, %struct.function* %34, i32 0, i32 3
  %35 = load %struct.emit_status*, %struct.emit_status** %emit51, align 8
  %x_regno_reg_rtx52 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %35, i32 0, i32 12
  %36 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx52, align 8
  %arrayidx53 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %36, i64 %idxprom50
  %37 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx53, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load54 = load i32, i32* %38, align 8
  %bf.lshr55 = lshr i32 %bf.load54, 16
  %bf.clear56 = and i32 %bf.lshr55, 255
  %cmp57 = icmp eq i32 %bf.clear56, 24
  br i1 %cmp57, label %cond.true.59, label %cond.false.63

cond.true.59:                                     ; preds = %cond.false.49
  %39 = load i32, i32* @target_flags, align 4
  %and60 = and i32 %39, 33554432
  %tobool61 = icmp ne i32 %and60, 0
  %cond62 = select i1 %tobool61, i32 4, i32 6
  br label %cond.end

cond.false.63:                                    ; preds = %cond.false.49
  %40 = load i32, i32* %reg.addr, align 4
  %idxprom64 = sext i32 %40 to i64
  %41 = load %struct.function*, %struct.function** @cfun, align 8
  %emit65 = getelementptr inbounds %struct.function, %struct.function* %41, i32 0, i32 3
  %42 = load %struct.emit_status*, %struct.emit_status** %emit65, align 8
  %x_regno_reg_rtx66 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %42, i32 0, i32 12
  %43 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx66, align 8
  %arrayidx67 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %43, i64 %idxprom64
  %44 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx67, align 8
  %45 = bitcast %struct.rtx_def* %44 to i32*
  %bf.load68 = load i32, i32* %45, align 8
  %bf.lshr69 = lshr i32 %bf.load68, 16
  %bf.clear70 = and i32 %bf.lshr69, 255
  %idxprom71 = sext i32 %bf.clear70 to i64
  %arrayidx72 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom71
  %46 = load i8, i8* %arrayidx72, align 1
  %conv73 = zext i8 %46 to i32
  %47 = load i32, i32* @target_flags, align 4
  %and74 = and i32 %47, 33554432
  %tobool75 = icmp ne i32 %and74, 0
  %cond76 = select i1 %tobool75, i32 8, i32 4
  %add = add nsw i32 %conv73, %cond76
  %sub = sub nsw i32 %add, 1
  %48 = load i32, i32* @target_flags, align 4
  %and77 = and i32 %48, 33554432
  %tobool78 = icmp ne i32 %and77, 0
  %cond79 = select i1 %tobool78, i32 8, i32 4
  %div = sdiv i32 %sub, %cond79
  br label %cond.end

cond.end:                                         ; preds = %cond.false.63, %cond.true.59
  %cond80 = phi i32 [ %cond62, %cond.true.59 ], [ %div, %cond.false.63 ]
  br label %cond.end.81

cond.end.81:                                      ; preds = %cond.end, %cond.true.47
  %cond82 = phi i32 [ %cond48, %cond.true.47 ], [ %cond80, %cond.end ]
  br label %cond.end.83

cond.end.83:                                      ; preds = %cond.end.81, %lor.end
  %cond84 = phi i32 [ %cond, %lor.end ], [ %cond82, %cond.end.81 ]
  store i32 %cond84, i32* %nregs, align 4
  %49 = load i32, i32* %reg.addr, align 4
  %call = call i32 @bitmap_bit_p(%struct.bitmap_head_def* @spilled_pseudos, i32 %49)
  %tobool85 = icmp ne i32 %call, 0
  br i1 %tobool85, label %if.then, label %lor.lhs.false.86

lor.lhs.false.86:                                 ; preds = %cond.end.83
  %50 = load i32, i32* %spilled.addr, align 4
  %51 = load i32, i32* %spilled_nregs.addr, align 4
  %add87 = add nsw i32 %50, %51
  %52 = load i32, i32* %r, align 4
  %cmp88 = icmp sle i32 %add87, %52
  br i1 %cmp88, label %if.then, label %lor.lhs.false.90

lor.lhs.false.90:                                 ; preds = %lor.lhs.false.86
  %53 = load i32, i32* %r, align 4
  %54 = load i32, i32* %nregs, align 4
  %add91 = add nsw i32 %53, %54
  %55 = load i32, i32* %spilled.addr, align 4
  %cmp92 = icmp sle i32 %add91, %55
  br i1 %cmp92, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.90, %lor.lhs.false.86, %cond.end.83
  br label %while.end

if.end:                                           ; preds = %lor.lhs.false.90
  %56 = load i32, i32* %reg.addr, align 4
  call void @bitmap_set_bit(%struct.bitmap_head_def* @spilled_pseudos, i32 %56)
  %57 = load i32, i32* %reg.addr, align 4
  %idxprom94 = sext i32 %57 to i64
  %58 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %58, i32 0, i32 4
  %reg95 = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx96 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg95, i32 0, i64 %idxprom94
  %59 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx96, align 8
  %freq = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %59, i32 0, i32 5
  %60 = load i32, i32* %freq, align 4
  %61 = load i32, i32* %r, align 4
  %idxprom97 = sext i32 %61 to i64
  %arrayidx98 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_add_cost, i32 0, i64 %idxprom97
  %62 = load i32, i32* %arrayidx98, align 4
  %sub99 = sub nsw i32 %62, %60
  store i32 %sub99, i32* %arrayidx98, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %63 = load i32, i32* %nregs, align 4
  %dec = add nsw i32 %63, -1
  store i32 %dec, i32* %nregs, align 4
  %cmp100 = icmp sgt i32 %63, 0
  br i1 %cmp100, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %64 = load i32, i32* %reg.addr, align 4
  %idxprom102 = sext i32 %64 to i64
  %65 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data103 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %65, i32 0, i32 4
  %reg104 = bitcast %union.varray_data_tag* %data103 to [1 x %struct.reg_info_def*]*
  %arrayidx105 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg104, i32 0, i64 %idxprom102
  %66 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx105, align 8
  %freq106 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %66, i32 0, i32 5
  %67 = load i32, i32* %freq106, align 4
  %68 = load i32, i32* %r, align 4
  %69 = load i32, i32* %nregs, align 4
  %add107 = add nsw i32 %68, %69
  %idxprom108 = sext i32 %add107 to i64
  %arrayidx109 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_cost, i32 0, i64 %idxprom108
  %70 = load i32, i32* %arrayidx109, align 4
  %sub110 = sub nsw i32 %70, %67
  store i32 %sub110, i32* %arrayidx109, align 4
  br label %while.cond

while.end:                                        ; preds = %if.then, %while.cond
  ret void
}

declare void @error_for_asm(%struct.rtx_def*, i8*, ...) #1

declare void @error(i8*, ...) #1

; Function Attrs: noreturn
declare void @_fatal_insn(i8*, %struct.rtx_def*, i8*, i32, i8*) #2

declare %struct.rtx_def* @prev_real_insn(%struct.rtx_def*) #1

declare i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @find_regno_note(%struct.rtx_def*, i32, i32) #1

declare i32 @side_effects_p(%struct.rtx_def*) #1

declare void @set_mem_alias_set(%struct.rtx_def*, i64) #1

declare i64 @new_alias_set() #1

declare void @make_decl_rtl(%union.tree_node*, i8*) #1

declare void @set_mem_expr(%struct.rtx_def*, %union.tree_node*) #1

declare i64 @ix86_initial_elimination_offset(i32, i32) #1

declare i32 @ix86_frame_pointer_required() #1

; Function Attrs: nounwind uwtable
define internal void @ior_hard_reg_set(i64* %set1, i64* %set2) #0 {
entry:
  %set1.addr = alloca i64*, align 8
  %set2.addr = alloca i64*, align 8
  store i64* %set1, i64** %set1.addr, align 8
  store i64* %set2, i64** %set2.addr, align 8
  %0 = load i64*, i64** %set2.addr, align 8
  %1 = load i64, i64* %0, align 8
  %2 = load i64*, i64** %set1.addr, align 8
  %3 = load i64, i64* %2, align 8
  %or = or i64 %3, %1
  store i64 %or, i64* %2, align 8
  ret void
}

declare void @retry_global_alloc(i32, i64) #1

declare i32 @bitmap_operation(%struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32) #1

; Function Attrs: nounwind uwtable
define internal void @choose_reload_regs(%struct.insn_chain* %chain) #0 {
entry:
  %chain.addr = alloca %struct.insn_chain*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %max_group_size = alloca i32, align 4
  %group_class = alloca i32, align 4
  %pass = alloca i32, align 4
  %win = alloca i32, align 4
  %inheritance = alloca i32, align 4
  %save_reload_reg_rtx = alloca [180 x %struct.rtx_def*], align 16
  %r = alloca i32, align 4
  %search_equiv = alloca %struct.rtx_def*, align 8
  %byte = alloca i32, align 4
  %regno = alloca i32, align 4
  %mode = alloca i32, align 4
  %class206 = alloca i32, align 4
  %last_class = alloca i32, align 4
  %last_reg = alloca %struct.rtx_def*, align 8
  %need_mode = alloca i32, align 4
  %nr = alloca i32, align 4
  %k = alloca i32, align 4
  %i1 = alloca i32, align 4
  %bad_for_class = alloca i32, align 4
  %k537 = alloca i32, align 4
  %set = alloca %struct.rtx_def*, align 8
  %equiv = alloca %struct.rtx_def*, align 8
  %regno829 = alloca i32, align 4
  %nr991 = alloca i32, align 4
  %k1075 = alloca i32, align 4
  %r1142 = alloca i32, align 4
  %r1270 = alloca i32, align 4
  %check_reg = alloca %struct.rtx_def*, align 8
  %regno1436 = alloca i32, align 4
  %r1470 = alloca i32, align 4
  %nregno = alloca i32, align 4
  %nr1501 = alloca i32, align 4
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  %0 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %insn1 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %0, i32 0, i32 4
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn1, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %insn, align 8
  store i32 1, i32* %max_group_size, align 4
  store i32 0, i32* %group_class, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %j, align 4
  %3 = load i32, i32* @n_reloads, align 4
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %j, align 4
  %conv = trunc i32 %4 to i16
  %5 = load i32, i32* %j, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds [180 x i16], [180 x i16]* @reload_order, i32 0, i64 %idxprom
  store i16 %conv, i16* %arrayidx, align 2
  %6 = load i32, i32* %j, align 4
  %idxprom2 = sext i32 %6 to i64
  %arrayidx3 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i32 0, i64 %idxprom2
  store i32 -1, i32* %arrayidx3, align 4
  %7 = load i32, i32* %j, align 4
  %idxprom4 = sext i32 %7 to i64
  %arrayidx5 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4
  %nregs = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx5, i32 0, i32 6
  %8 = load i32, i32* %nregs, align 4
  %cmp6 = icmp ugt i32 %8, 1
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %9 = load i32, i32* %j, align 4
  %idxprom8 = sext i32 %9 to i64
  %arrayidx9 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom8
  %nregs10 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx9, i32 0, i32 6
  %10 = load i32, i32* %nregs10, align 4
  %11 = load i32, i32* %max_group_size, align 4
  %cmp11 = icmp ugt i32 %10, %11
  br i1 %cmp11, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %12 = load i32, i32* %j, align 4
  %idxprom13 = sext i32 %12 to i64
  %arrayidx14 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom13
  %nregs15 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx14, i32 0, i32 6
  %13 = load i32, i32* %nregs15, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %14 = load i32, i32* %max_group_size, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %13, %cond.true ], [ %14, %cond.false ]
  store i32 %cond, i32* %max_group_size, align 4
  %15 = load i32, i32* %group_class, align 4
  %idxprom16 = sext i32 %15 to i64
  %16 = load i32, i32* %j, align 4
  %idxprom17 = sext i32 %16 to i64
  %arrayidx18 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom17
  %class = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx18, i32 0, i32 2
  %17 = load i32, i32* %class, align 4
  %idxprom19 = sext i32 %17 to i64
  %arrayidx20 = getelementptr inbounds [25 x [25 x i32]], [25 x [25 x i32]]* @reg_class_superunion, i32 0, i64 %idxprom19
  %arrayidx21 = getelementptr inbounds [25 x i32], [25 x i32]* %arrayidx20, i32 0, i64 %idxprom16
  %18 = load i32, i32* %arrayidx21, align 4
  store i32 %18, i32* %group_class, align 4
  br label %if.end

if.end:                                           ; preds = %cond.end, %for.body
  %19 = load i32, i32* %j, align 4
  %idxprom22 = sext i32 %19 to i64
  %arrayidx23 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom22
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx23, i32 0, i32 11
  %20 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8
  %21 = load i32, i32* %j, align 4
  %idxprom24 = sext i32 %21 to i64
  %arrayidx25 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* %save_reload_reg_rtx, i32 0, i64 %idxprom24
  store %struct.rtx_def* %20, %struct.rtx_def** %arrayidx25, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %22 = load i32, i32* %j, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %23 = load i32, i32* @n_reloads, align 4
  %cmp26 = icmp sgt i32 %23, 1
  br i1 %cmp26, label %if.then.28, label %if.end.29

if.then.28:                                       ; preds = %for.end
  %24 = load i32, i32* @n_reloads, align 4
  call void @specqsort(i8* bitcast ([180 x i16]* @reload_order to i8*), i32 %24, i32 2, i32 (...)* bitcast (i32 (i8*, i8*)* @reload_reg_class_lower to i32 (...)*))
  br label %if.end.29

if.end.29:                                        ; preds = %if.then.28, %for.end
  store i32 0, i32* %win, align 4
  %25 = load i32, i32* @optimize, align 4
  %cmp30 = icmp sgt i32 %25, 0
  %conv31 = zext i1 %cmp30 to i32
  store i32 %conv31, i32* %inheritance, align 4
  br label %for.cond.32

for.cond.32:                                      ; preds = %for.inc.1197, %if.end.29
  %26 = load i32, i32* %inheritance, align 4
  %cmp33 = icmp sge i32 %26, 0
  br i1 %cmp33, label %for.body.35, label %for.end.1198

for.body.35:                                      ; preds = %for.cond.32
  %27 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %arraydecay = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* %save_reload_reg_rtx, i32 0, i32 0
  call void @choose_reload_regs_init(%struct.insn_chain* %27, %struct.rtx_def** %arraydecay)
  store i32 0, i32* %j, align 4
  br label %for.cond.36

for.cond.36:                                      ; preds = %for.inc.1135, %for.body.35
  %28 = load i32, i32* %j, align 4
  %29 = load i32, i32* @n_reloads, align 4
  %cmp37 = icmp slt i32 %28, %29
  br i1 %cmp37, label %for.body.39, label %for.end.1137

for.body.39:                                      ; preds = %for.cond.36
  %30 = load i32, i32* %j, align 4
  %idxprom40 = sext i32 %30 to i64
  %arrayidx41 = getelementptr inbounds [180 x i16], [180 x i16]* @reload_order, i32 0, i64 %idxprom40
  %31 = load i16, i16* %arrayidx41, align 2
  %conv42 = sext i16 %31 to i32
  store i32 %conv42, i32* %r, align 4
  store %struct.rtx_def* null, %struct.rtx_def** %search_equiv, align 8
  %32 = load i32, i32* %r, align 4
  %idxprom43 = sext i32 %32 to i64
  %arrayidx44 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom43
  %out = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx44, i32 0, i32 1
  %33 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %cmp45 = icmp eq %struct.rtx_def* %33, null
  br i1 %cmp45, label %land.lhs.true, label %if.end.55

land.lhs.true:                                    ; preds = %for.body.39
  %34 = load i32, i32* %r, align 4
  %idxprom47 = sext i32 %34 to i64
  %arrayidx48 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom47
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx48, i32 0, i32 0
  %35 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %cmp49 = icmp eq %struct.rtx_def* %35, null
  br i1 %cmp49, label %land.lhs.true.51, label %if.end.55

land.lhs.true.51:                                 ; preds = %land.lhs.true
  %36 = load i32, i32* %r, align 4
  %idxprom52 = sext i32 %36 to i64
  %arrayidx53 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom52
  %secondary_p = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx53, i32 0, i32 18
  %bf.load = load i8, i8* %secondary_p, align 8
  %bf.lshr = lshr i8 %bf.load, 2
  %bf.clear = and i8 %bf.lshr, 1
  %bf.cast = zext i8 %bf.clear to i32
  %tobool = icmp ne i32 %bf.cast, 0
  br i1 %tobool, label %if.end.55, label %if.then.54

if.then.54:                                       ; preds = %land.lhs.true.51
  br label %for.inc.1135

if.end.55:                                        ; preds = %land.lhs.true.51, %land.lhs.true, %for.body.39
  %37 = load i32, i32* %r, align 4
  %idxprom56 = sext i32 %37 to i64
  %arrayidx57 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom56
  %in58 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx57, i32 0, i32 0
  %38 = load %struct.rtx_def*, %struct.rtx_def** %in58, align 8
  %cmp59 = icmp ne %struct.rtx_def* %38, null
  br i1 %cmp59, label %land.lhs.true.61, label %if.end.99

land.lhs.true.61:                                 ; preds = %if.end.55
  %39 = load i32, i32* %r, align 4
  %idxprom62 = sext i32 %39 to i64
  %arrayidx63 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom62
  %reg_rtx64 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx63, i32 0, i32 11
  %40 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx64, align 8
  %cmp65 = icmp ne %struct.rtx_def* %40, null
  br i1 %cmp65, label %land.lhs.true.67, label %if.end.99

land.lhs.true.67:                                 ; preds = %land.lhs.true.61
  %41 = load i32, i32* %r, align 4
  %idxprom68 = sext i32 %41 to i64
  %arrayidx69 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom68
  %in70 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx69, i32 0, i32 0
  %42 = load %struct.rtx_def*, %struct.rtx_def** %in70, align 8
  %43 = load i32, i32* %r, align 4
  %idxprom71 = sext i32 %43 to i64
  %arrayidx72 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom71
  %reg_rtx73 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx72, i32 0, i32 11
  %44 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx73, align 8
  %call = call i32 @rtx_equal_p(%struct.rtx_def* %42, %struct.rtx_def* %44)
  %tobool74 = icmp ne i32 %call, 0
  br i1 %tobool74, label %if.then.98, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.67
  %45 = load i32, i32* %r, align 4
  %idxprom75 = sext i32 %45 to i64
  %arrayidx76 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom75
  %out77 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx76, i32 0, i32 1
  %46 = load %struct.rtx_def*, %struct.rtx_def** %out77, align 8
  %47 = load i32, i32* %r, align 4
  %idxprom78 = sext i32 %47 to i64
  %arrayidx79 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom78
  %reg_rtx80 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx79, i32 0, i32 11
  %48 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx80, align 8
  %call81 = call i32 @rtx_equal_p(%struct.rtx_def* %46, %struct.rtx_def* %48)
  %tobool82 = icmp ne i32 %call81, 0
  br i1 %tobool82, label %land.lhs.true.83, label %if.end.99

land.lhs.true.83:                                 ; preds = %lor.lhs.false
  %49 = load i32, i32* %r, align 4
  %idxprom84 = sext i32 %49 to i64
  %arrayidx85 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom84
  %in86 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx85, i32 0, i32 0
  %50 = load %struct.rtx_def*, %struct.rtx_def** %in86, align 8
  %51 = bitcast %struct.rtx_def* %50 to i32*
  %bf.load87 = load i32, i32* %51, align 8
  %bf.clear88 = and i32 %bf.load87, 65535
  %cmp89 = icmp ne i32 %bf.clear88, 66
  br i1 %cmp89, label %land.lhs.true.91, label %if.end.99

land.lhs.true.91:                                 ; preds = %land.lhs.true.83
  %52 = load i32, i32* %r, align 4
  %idxprom92 = sext i32 %52 to i64
  %arrayidx93 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom92
  %in94 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx93, i32 0, i32 0
  %53 = load %struct.rtx_def*, %struct.rtx_def** %in94, align 8
  %call95 = call i32 @true_regnum(%struct.rtx_def* %53)
  %cmp96 = icmp slt i32 %call95, 53
  br i1 %cmp96, label %if.then.98, label %if.end.99

if.then.98:                                       ; preds = %land.lhs.true.91, %land.lhs.true.67
  br label %for.inc.1135

if.end.99:                                        ; preds = %land.lhs.true.91, %land.lhs.true.83, %lor.lhs.false, %land.lhs.true.61, %if.end.55
  %54 = load i32, i32* %inheritance, align 4
  %tobool100 = icmp ne i32 %54, 0
  br i1 %tobool100, label %if.then.101, label %if.end.573

if.then.101:                                      ; preds = %if.end.99
  store i32 0, i32* %byte, align 4
  store i32 -1, i32* %regno, align 4
  store i32 0, i32* %mode, align 4
  %55 = load i32, i32* %r, align 4
  %idxprom102 = sext i32 %55 to i64
  %arrayidx103 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom102
  %in104 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx103, i32 0, i32 0
  %56 = load %struct.rtx_def*, %struct.rtx_def** %in104, align 8
  %cmp105 = icmp eq %struct.rtx_def* %56, null
  br i1 %cmp105, label %if.then.107, label %if.else

if.then.107:                                      ; preds = %if.then.101
  br label %if.end.197

if.else:                                          ; preds = %if.then.101
  %57 = load i32, i32* %r, align 4
  %idxprom108 = sext i32 %57 to i64
  %arrayidx109 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom108
  %in110 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx109, i32 0, i32 0
  %58 = load %struct.rtx_def*, %struct.rtx_def** %in110, align 8
  %59 = bitcast %struct.rtx_def* %58 to i32*
  %bf.load111 = load i32, i32* %59, align 8
  %bf.clear112 = and i32 %bf.load111, 65535
  %cmp113 = icmp eq i32 %bf.clear112, 61
  br i1 %cmp113, label %if.then.115, label %if.else.126

if.then.115:                                      ; preds = %if.else
  %60 = load i32, i32* %r, align 4
  %idxprom116 = sext i32 %60 to i64
  %arrayidx117 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom116
  %in118 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx117, i32 0, i32 0
  %61 = load %struct.rtx_def*, %struct.rtx_def** %in118, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1
  %arrayidx119 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx119 to i32*
  %62 = load i32, i32* %rtuint, align 4
  store i32 %62, i32* %regno, align 4
  %63 = load i32, i32* %r, align 4
  %idxprom120 = sext i32 %63 to i64
  %arrayidx121 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom120
  %in122 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx121, i32 0, i32 0
  %64 = load %struct.rtx_def*, %struct.rtx_def** %in122, align 8
  %65 = bitcast %struct.rtx_def* %64 to i32*
  %bf.load123 = load i32, i32* %65, align 8
  %bf.lshr124 = lshr i32 %bf.load123, 16
  %bf.clear125 = and i32 %bf.lshr124, 255
  store i32 %bf.clear125, i32* %mode, align 4
  br label %if.end.196

if.else.126:                                      ; preds = %if.else
  %66 = load i32, i32* %r, align 4
  %idxprom127 = sext i32 %66 to i64
  %arrayidx128 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom127
  %in_reg = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx128, i32 0, i32 8
  %67 = load %struct.rtx_def*, %struct.rtx_def** %in_reg, align 8
  %68 = bitcast %struct.rtx_def* %67 to i32*
  %bf.load129 = load i32, i32* %68, align 8
  %bf.clear130 = and i32 %bf.load129, 65535
  %cmp131 = icmp eq i32 %bf.clear130, 61
  br i1 %cmp131, label %if.then.133, label %if.else.146

if.then.133:                                      ; preds = %if.else.126
  %69 = load i32, i32* %r, align 4
  %idxprom134 = sext i32 %69 to i64
  %arrayidx135 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom134
  %in_reg136 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx135, i32 0, i32 8
  %70 = load %struct.rtx_def*, %struct.rtx_def** %in_reg136, align 8
  %fld137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx138 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld137, i32 0, i64 0
  %rtuint139 = bitcast %union.rtunion_def* %arrayidx138 to i32*
  %71 = load i32, i32* %rtuint139, align 4
  store i32 %71, i32* %regno, align 4
  %72 = load i32, i32* %r, align 4
  %idxprom140 = sext i32 %72 to i64
  %arrayidx141 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom140
  %in_reg142 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx141, i32 0, i32 8
  %73 = load %struct.rtx_def*, %struct.rtx_def** %in_reg142, align 8
  %74 = bitcast %struct.rtx_def* %73 to i32*
  %bf.load143 = load i32, i32* %74, align 8
  %bf.lshr144 = lshr i32 %bf.load143, 16
  %bf.clear145 = and i32 %bf.lshr144, 255
  store i32 %bf.clear145, i32* %mode, align 4
  br label %if.end.195

if.else.146:                                      ; preds = %if.else.126
  %75 = load i32, i32* %r, align 4
  %idxprom147 = sext i32 %75 to i64
  %arrayidx148 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom147
  %in_reg149 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx148, i32 0, i32 8
  %76 = load %struct.rtx_def*, %struct.rtx_def** %in_reg149, align 8
  %77 = bitcast %struct.rtx_def* %76 to i32*
  %bf.load150 = load i32, i32* %77, align 8
  %bf.clear151 = and i32 %bf.load150, 65535
  %cmp152 = icmp eq i32 %bf.clear151, 63
  br i1 %cmp152, label %land.lhs.true.154, label %if.end.194

land.lhs.true.154:                                ; preds = %if.else.146
  %78 = load i32, i32* %r, align 4
  %idxprom155 = sext i32 %78 to i64
  %arrayidx156 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom155
  %in_reg157 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx156, i32 0, i32 8
  %79 = load %struct.rtx_def*, %struct.rtx_def** %in_reg157, align 8
  %fld158 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1
  %arrayidx159 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld158, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx159 to %struct.rtx_def**
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %81 = bitcast %struct.rtx_def* %80 to i32*
  %bf.load160 = load i32, i32* %81, align 8
  %bf.clear161 = and i32 %bf.load160, 65535
  %cmp162 = icmp eq i32 %bf.clear161, 61
  br i1 %cmp162, label %if.then.164, label %if.end.194

if.then.164:                                      ; preds = %land.lhs.true.154
  %82 = load i32, i32* %r, align 4
  %idxprom165 = sext i32 %82 to i64
  %arrayidx166 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom165
  %in_reg167 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx166, i32 0, i32 8
  %83 = load %struct.rtx_def*, %struct.rtx_def** %in_reg167, align 8
  %fld168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx169 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld168, i32 0, i64 1
  %rtuint170 = bitcast %union.rtunion_def* %arrayidx169 to i32*
  %84 = load i32, i32* %rtuint170, align 4
  store i32 %84, i32* %byte, align 4
  %85 = load i32, i32* %r, align 4
  %idxprom171 = sext i32 %85 to i64
  %arrayidx172 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom171
  %in_reg173 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx172, i32 0, i32 8
  %86 = load %struct.rtx_def*, %struct.rtx_def** %in_reg173, align 8
  %fld174 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1
  %arrayidx175 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld174, i32 0, i64 0
  %rtx176 = bitcast %union.rtunion_def* %arrayidx175 to %struct.rtx_def**
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rtx176, align 8
  %fld177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1
  %arrayidx178 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld177, i32 0, i64 0
  %rtuint179 = bitcast %union.rtunion_def* %arrayidx178 to i32*
  %88 = load i32, i32* %rtuint179, align 4
  store i32 %88, i32* %regno, align 4
  %89 = load i32, i32* %regno, align 4
  %cmp180 = icmp slt i32 %89, 53
  br i1 %cmp180, label %if.then.182, label %if.end.187

if.then.182:                                      ; preds = %if.then.164
  %90 = load i32, i32* %r, align 4
  %idxprom183 = sext i32 %90 to i64
  %arrayidx184 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom183
  %in_reg185 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx184, i32 0, i32 8
  %91 = load %struct.rtx_def*, %struct.rtx_def** %in_reg185, align 8
  %call186 = call i32 @subreg_regno(%struct.rtx_def* %91)
  store i32 %call186, i32* %regno, align 4
  br label %if.end.187

if.end.187:                                       ; preds = %if.then.182, %if.then.164
  %92 = load i32, i32* %r, align 4
  %idxprom188 = sext i32 %92 to i64
  %arrayidx189 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom188
  %in_reg190 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx189, i32 0, i32 8
  %93 = load %struct.rtx_def*, %struct.rtx_def** %in_reg190, align 8
  %94 = bitcast %struct.rtx_def* %93 to i32*
  %bf.load191 = load i32, i32* %94, align 8
  %bf.lshr192 = lshr i32 %bf.load191, 16
  %bf.clear193 = and i32 %bf.lshr192, 255
  store i32 %bf.clear193, i32* %mode, align 4
  br label %if.end.194

if.end.194:                                       ; preds = %if.end.187, %land.lhs.true.154, %if.else.146
  br label %if.end.195

if.end.195:                                       ; preds = %if.end.194, %if.then.133
  br label %if.end.196

if.end.196:                                       ; preds = %if.end.195, %if.then.115
  br label %if.end.197

if.end.197:                                       ; preds = %if.end.196, %if.then.107
  %95 = load i32, i32* %regno, align 4
  %cmp198 = icmp sge i32 %95, 0
  br i1 %cmp198, label %land.lhs.true.200, label %if.end.572

land.lhs.true.200:                                ; preds = %if.end.197
  %96 = load i32, i32* %regno, align 4
  %idxprom201 = sext i32 %96 to i64
  %97 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8
  %arrayidx202 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %97, i64 %idxprom201
  %98 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx202, align 8
  %cmp203 = icmp ne %struct.rtx_def* %98, null
  br i1 %cmp203, label %if.then.205, label %if.end.572

if.then.205:                                      ; preds = %land.lhs.true.200
  %99 = load i32, i32* %r, align 4
  %idxprom207 = sext i32 %99 to i64
  %arrayidx208 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom207
  %class209 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx208, i32 0, i32 2
  %100 = load i32, i32* %class209, align 4
  store i32 %100, i32* %class206, align 4
  %101 = load i32, i32* %regno, align 4
  %idxprom210 = sext i32 %101 to i64
  %102 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8
  %arrayidx211 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %102, i64 %idxprom210
  %103 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx211, align 8
  store %struct.rtx_def* %103, %struct.rtx_def** %last_reg, align 8
  %104 = load %struct.rtx_def*, %struct.rtx_def** %last_reg, align 8
  %fld212 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %104, i32 0, i32 1
  %arrayidx213 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld212, i32 0, i64 0
  %rtuint214 = bitcast %union.rtunion_def* %arrayidx213 to i32*
  %105 = load i32, i32* %rtuint214, align 4
  store i32 %105, i32* %i, align 4
  %106 = load i32, i32* %i, align 4
  %107 = load %struct.rtx_def*, %struct.rtx_def** %last_reg, align 8
  %108 = bitcast %struct.rtx_def* %107 to i32*
  %bf.load215 = load i32, i32* %108, align 8
  %bf.lshr216 = lshr i32 %bf.load215, 16
  %bf.clear217 = and i32 %bf.lshr216, 255
  %109 = load i32, i32* %byte, align 4
  %110 = load i32, i32* %mode, align 4
  %call218 = call i32 @subreg_regno_offset(i32 %106, i32 %bf.clear217, i32 %109, i32 %110)
  %111 = load i32, i32* %i, align 4
  %add = add i32 %111, %call218
  store i32 %add, i32* %i, align 4
  %112 = load i32, i32* %i, align 4
  %idxprom219 = sext i32 %112 to i64
  %arrayidx220 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i32 0, i64 %idxprom219
  %113 = load i32, i32* %arrayidx220, align 4
  store i32 %113, i32* %last_class, align 4
  %114 = load i32, i32* %byte, align 4
  %cmp221 = icmp eq i32 %114, 0
  br i1 %cmp221, label %if.then.223, label %if.else.224

if.then.223:                                      ; preds = %if.then.205
  %115 = load i32, i32* %mode, align 4
  store i32 %115, i32* %need_mode, align 4
  br label %if.end.232

if.else.224:                                      ; preds = %if.then.205
  %116 = load i32, i32* %mode, align 4
  %idxprom225 = sext i32 %116 to i64
  %arrayidx226 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom225
  %117 = load i8, i8* %arrayidx226, align 1
  %conv227 = zext i8 %117 to i32
  %118 = load i32, i32* %byte, align 4
  %add228 = add nsw i32 %conv227, %118
  %119 = load i32, i32* %mode, align 4
  %idxprom229 = sext i32 %119 to i64
  %arrayidx230 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom229
  %120 = load i32, i32* %arrayidx230, align 4
  %call231 = call i32 @smallest_mode_for_size(i32 %add228, i32 %120)
  store i32 %call231, i32* %need_mode, align 4
  br label %if.end.232

if.end.232:                                       ; preds = %if.else.224, %if.then.223
  %121 = load %struct.rtx_def*, %struct.rtx_def** %last_reg, align 8
  %122 = bitcast %struct.rtx_def* %121 to i32*
  %bf.load233 = load i32, i32* %122, align 8
  %bf.lshr234 = lshr i32 %bf.load233, 16
  %bf.clear235 = and i32 %bf.lshr234, 255
  %idxprom236 = sext i32 %bf.clear235 to i64
  %arrayidx237 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom236
  %123 = load i8, i8* %arrayidx237, align 1
  %conv238 = zext i8 %123 to i32
  %124 = load i32, i32* %need_mode, align 4
  %idxprom239 = sext i32 %124 to i64
  %arrayidx240 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom239
  %125 = load i8, i8* %arrayidx240, align 1
  %conv241 = zext i8 %125 to i32
  %cmp242 = icmp sge i32 %conv238, %conv241
  br i1 %cmp242, label %land.lhs.true.244, label %if.end.571

land.lhs.true.244:                                ; preds = %if.end.232
  %126 = load i32, i32* %i, align 4
  %idxprom245 = sext i32 %126 to i64
  %arrayidx246 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_reloaded_contents, i32 0, i64 %idxprom245
  %127 = load i32, i32* %arrayidx246, align 4
  %128 = load i32, i32* %regno, align 4
  %cmp247 = icmp eq i32 %127, %128
  br i1 %cmp247, label %land.lhs.true.249, label %if.end.571

land.lhs.true.249:                                ; preds = %land.lhs.true.244
  %129 = load i64, i64* @reg_reloaded_valid, align 8
  %130 = load i32, i32* %i, align 4
  %sh_prom = zext i32 %130 to i64
  %shl = shl i64 1, %sh_prom
  %and = and i64 %129, %shl
  %tobool250 = icmp ne i64 %and, 0
  br i1 %tobool250, label %land.lhs.true.251, label %if.end.571

land.lhs.true.251:                                ; preds = %land.lhs.true.249
  %131 = load i32, i32* %i, align 4
  %132 = load i32, i32* %r, align 4
  %idxprom252 = sext i32 %132 to i64
  %arrayidx253 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom252
  %mode254 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx253, i32 0, i32 5
  %133 = load i32, i32* %mode254, align 4
  %call255 = call i32 @ix86_hard_regno_mode_ok(i32 %131, i32 %133)
  %tobool256 = icmp ne i32 %call255, 0
  br i1 %tobool256, label %land.lhs.true.257, label %if.end.571

land.lhs.true.257:                                ; preds = %land.lhs.true.251
  %134 = load i32, i32* %class206, align 4
  %idxprom258 = sext i32 %134 to i64
  %arrayidx259 = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom258
  %135 = load i64, i64* %arrayidx259, align 8
  %136 = load i32, i32* %i, align 4
  %sh_prom260 = zext i32 %136 to i64
  %shl261 = shl i64 1, %sh_prom260
  %and262 = and i64 %135, %shl261
  %tobool263 = icmp ne i64 %and262, 0
  br i1 %tobool263, label %land.lhs.true.272, label %lor.lhs.false.264

lor.lhs.false.264:                                ; preds = %land.lhs.true.257
  %137 = load i32, i32* %mode, align 4
  %138 = load i32, i32* %last_class, align 4
  %139 = load i32, i32* %class206, align 4
  %call265 = call i32 @ix86_register_move_cost(i32 %137, i32 %138, i32 %139)
  %140 = load i32, i32* %mode, align 4
  %141 = load i32, i32* %class206, align 4
  %call266 = call i32 @ix86_memory_move_cost(i32 %140, i32 %141, i32 1)
  %cmp267 = icmp slt i32 %call265, %call266
  br i1 %cmp267, label %land.lhs.true.269, label %if.end.571

land.lhs.true.269:                                ; preds = %lor.lhs.false.264
  %142 = load i32, i32* %last_class, align 4
  %143 = load i32, i32* %class206, align 4
  %144 = load i32, i32* %mode, align 4
  %call270 = call i32 @ix86_secondary_memory_needed(i32 %142, i32 %143, i32 %144, i32 1)
  %tobool271 = icmp ne i32 %call270, 0
  br i1 %tobool271, label %if.end.571, label %land.lhs.true.272

land.lhs.true.272:                                ; preds = %land.lhs.true.269, %land.lhs.true.257
  %145 = load i32, i32* %r, align 4
  %idxprom273 = sext i32 %145 to i64
  %arrayidx274 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom273
  %nregs275 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx274, i32 0, i32 6
  %146 = load i32, i32* %nregs275, align 4
  %147 = load i32, i32* %max_group_size, align 4
  %cmp276 = icmp eq i32 %146, %147
  br i1 %cmp276, label %land.lhs.true.285, label %lor.lhs.false.278

lor.lhs.false.278:                                ; preds = %land.lhs.true.272
  %148 = load i32, i32* %group_class, align 4
  %idxprom279 = sext i32 %148 to i64
  %arrayidx280 = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom279
  %149 = load i64, i64* %arrayidx280, align 8
  %150 = load i32, i32* %i, align 4
  %sh_prom281 = zext i32 %150 to i64
  %shl282 = shl i64 1, %sh_prom281
  %and283 = and i64 %149, %shl282
  %tobool284 = icmp ne i64 %and283, 0
  br i1 %tobool284, label %if.end.571, label %land.lhs.true.285

land.lhs.true.285:                                ; preds = %lor.lhs.false.278, %land.lhs.true.272
  %151 = load i32, i32* %i, align 4
  %152 = load i32, i32* %r, align 4
  %idxprom286 = sext i32 %152 to i64
  %arrayidx287 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom286
  %mode288 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx287, i32 0, i32 5
  %153 = load i32, i32* %mode288, align 4
  %154 = load i32, i32* %r, align 4
  %idxprom289 = sext i32 %154 to i64
  %arrayidx290 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom289
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx290, i32 0, i32 12
  %155 = load i32, i32* %opnum, align 4
  %156 = load i32, i32* %r, align 4
  %idxprom291 = sext i32 %156 to i64
  %arrayidx292 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom291
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx292, i32 0, i32 17
  %157 = load i32, i32* %when_needed, align 4
  %158 = load i32, i32* %r, align 4
  %idxprom293 = sext i32 %158 to i64
  %arrayidx294 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom293
  %in295 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx294, i32 0, i32 0
  %159 = load %struct.rtx_def*, %struct.rtx_def** %in295, align 8
  %160 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %161 = load i32, i32* %r, align 4
  %call296 = call i32 @free_for_value_p(i32 %151, i32 %153, i32 %155, i32 %157, %struct.rtx_def* %159, %struct.rtx_def* %160, i32 %161, i32 1)
  %tobool297 = icmp ne i32 %call296, 0
  br i1 %tobool297, label %if.then.298, label %if.end.571

if.then.298:                                      ; preds = %land.lhs.true.285
  %162 = load i32, i32* %i, align 4
  %cmp299 = icmp sge i32 %162, 8
  br i1 %cmp299, label %land.lhs.true.301, label %lor.lhs.false.304

land.lhs.true.301:                                ; preds = %if.then.298
  %163 = load i32, i32* %i, align 4
  %cmp302 = icmp sle i32 %163, 15
  br i1 %cmp302, label %cond.true.322, label %lor.lhs.false.304

lor.lhs.false.304:                                ; preds = %land.lhs.true.301, %if.then.298
  %164 = load i32, i32* %i, align 4
  %cmp305 = icmp sge i32 %164, 21
  br i1 %cmp305, label %land.lhs.true.307, label %lor.lhs.false.310

land.lhs.true.307:                                ; preds = %lor.lhs.false.304
  %165 = load i32, i32* %i, align 4
  %cmp308 = icmp sle i32 %165, 28
  br i1 %cmp308, label %cond.true.322, label %lor.lhs.false.310

lor.lhs.false.310:                                ; preds = %land.lhs.true.307, %lor.lhs.false.304
  %166 = load i32, i32* %i, align 4
  %cmp311 = icmp sge i32 %166, 45
  br i1 %cmp311, label %land.lhs.true.313, label %lor.lhs.false.316

land.lhs.true.313:                                ; preds = %lor.lhs.false.310
  %167 = load i32, i32* %i, align 4
  %cmp314 = icmp sle i32 %167, 52
  br i1 %cmp314, label %cond.true.322, label %lor.lhs.false.316

lor.lhs.false.316:                                ; preds = %land.lhs.true.313, %lor.lhs.false.310
  %168 = load i32, i32* %i, align 4
  %cmp317 = icmp sge i32 %168, 29
  br i1 %cmp317, label %land.lhs.true.319, label %cond.false.338

land.lhs.true.319:                                ; preds = %lor.lhs.false.316
  %169 = load i32, i32* %i, align 4
  %cmp320 = icmp sle i32 %169, 36
  br i1 %cmp320, label %cond.true.322, label %cond.false.338

cond.true.322:                                    ; preds = %land.lhs.true.319, %land.lhs.true.313, %land.lhs.true.307, %land.lhs.true.301
  %170 = load i32, i32* %r, align 4
  %idxprom323 = sext i32 %170 to i64
  %arrayidx324 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom323
  %mode325 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx324, i32 0, i32 5
  %171 = load i32, i32* %mode325, align 4
  %idxprom326 = sext i32 %171 to i64
  %arrayidx327 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom326
  %172 = load i32, i32* %arrayidx327, align 4
  %cmp328 = icmp eq i32 %172, 5
  br i1 %cmp328, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.322
  %173 = load i32, i32* %r, align 4
  %idxprom330 = sext i32 %173 to i64
  %arrayidx331 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom330
  %mode332 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx331, i32 0, i32 5
  %174 = load i32, i32* %mode332, align 4
  %idxprom333 = sext i32 %174 to i64
  %arrayidx334 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom333
  %175 = load i32, i32* %arrayidx334, align 4
  %cmp335 = icmp eq i32 %175, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.322
  %176 = phi i1 [ true, %cond.true.322 ], [ %cmp335, %lor.rhs ]
  %cond337 = select i1 %176, i32 2, i32 1
  br label %cond.end.376

cond.false.338:                                   ; preds = %land.lhs.true.319, %lor.lhs.false.316
  %177 = load i32, i32* %r, align 4
  %idxprom339 = sext i32 %177 to i64
  %arrayidx340 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom339
  %mode341 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx340, i32 0, i32 5
  %178 = load i32, i32* %mode341, align 4
  %cmp342 = icmp eq i32 %178, 18
  br i1 %cmp342, label %cond.true.344, label %cond.false.348

cond.true.344:                                    ; preds = %cond.false.338
  %179 = load i32, i32* @target_flags, align 4
  %and345 = and i32 %179, 33554432
  %tobool346 = icmp ne i32 %and345, 0
  %cond347 = select i1 %tobool346, i32 2, i32 3
  br label %cond.end.374

cond.false.348:                                   ; preds = %cond.false.338
  %180 = load i32, i32* %r, align 4
  %idxprom349 = sext i32 %180 to i64
  %arrayidx350 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom349
  %mode351 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx350, i32 0, i32 5
  %181 = load i32, i32* %mode351, align 4
  %cmp352 = icmp eq i32 %181, 24
  br i1 %cmp352, label %cond.true.354, label %cond.false.358

cond.true.354:                                    ; preds = %cond.false.348
  %182 = load i32, i32* @target_flags, align 4
  %and355 = and i32 %182, 33554432
  %tobool356 = icmp ne i32 %and355, 0
  %cond357 = select i1 %tobool356, i32 4, i32 6
  br label %cond.end.372

cond.false.358:                                   ; preds = %cond.false.348
  %183 = load i32, i32* %r, align 4
  %idxprom359 = sext i32 %183 to i64
  %arrayidx360 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom359
  %mode361 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx360, i32 0, i32 5
  %184 = load i32, i32* %mode361, align 4
  %idxprom362 = sext i32 %184 to i64
  %arrayidx363 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom362
  %185 = load i8, i8* %arrayidx363, align 1
  %conv364 = zext i8 %185 to i32
  %186 = load i32, i32* @target_flags, align 4
  %and365 = and i32 %186, 33554432
  %tobool366 = icmp ne i32 %and365, 0
  %cond367 = select i1 %tobool366, i32 8, i32 4
  %add368 = add nsw i32 %conv364, %cond367
  %sub = sub nsw i32 %add368, 1
  %187 = load i32, i32* @target_flags, align 4
  %and369 = and i32 %187, 33554432
  %tobool370 = icmp ne i32 %and369, 0
  %cond371 = select i1 %tobool370, i32 8, i32 4
  %div = sdiv i32 %sub, %cond371
  br label %cond.end.372

cond.end.372:                                     ; preds = %cond.false.358, %cond.true.354
  %cond373 = phi i32 [ %cond357, %cond.true.354 ], [ %div, %cond.false.358 ]
  br label %cond.end.374

cond.end.374:                                     ; preds = %cond.end.372, %cond.true.344
  %cond375 = phi i32 [ %cond347, %cond.true.344 ], [ %cond373, %cond.end.372 ]
  br label %cond.end.376

cond.end.376:                                     ; preds = %cond.end.374, %lor.end
  %cond377 = phi i32 [ %cond337, %lor.end ], [ %cond375, %cond.end.374 ]
  store i32 %cond377, i32* %nr, align 4
  store i32 1, i32* %k, align 4
  br label %for.cond.378

for.cond.378:                                     ; preds = %for.inc.395, %cond.end.376
  %188 = load i32, i32* %k, align 4
  %189 = load i32, i32* %nr, align 4
  %cmp379 = icmp slt i32 %188, %189
  br i1 %cmp379, label %for.body.381, label %for.end.397

for.body.381:                                     ; preds = %for.cond.378
  %190 = load i32, i32* %i, align 4
  %191 = load i32, i32* %k, align 4
  %add382 = add nsw i32 %190, %191
  %idxprom383 = sext i32 %add382 to i64
  %arrayidx384 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_reloaded_contents, i32 0, i64 %idxprom383
  %192 = load i32, i32* %arrayidx384, align 4
  %193 = load i32, i32* %regno, align 4
  %cmp385 = icmp ne i32 %192, %193
  br i1 %cmp385, label %if.then.393, label %lor.lhs.false.387

lor.lhs.false.387:                                ; preds = %for.body.381
  %194 = load i64, i64* @reg_reloaded_valid, align 8
  %195 = load i32, i32* %i, align 4
  %196 = load i32, i32* %k, align 4
  %add388 = add nsw i32 %195, %196
  %sh_prom389 = zext i32 %add388 to i64
  %shl390 = shl i64 1, %sh_prom389
  %and391 = and i64 %194, %shl390
  %tobool392 = icmp ne i64 %and391, 0
  br i1 %tobool392, label %if.end.394, label %if.then.393

if.then.393:                                      ; preds = %lor.lhs.false.387, %for.body.381
  br label %for.end.397

if.end.394:                                       ; preds = %lor.lhs.false.387
  br label %for.inc.395

for.inc.395:                                      ; preds = %if.end.394
  %197 = load i32, i32* %k, align 4
  %inc396 = add nsw i32 %197, 1
  store i32 %inc396, i32* %k, align 4
  br label %for.cond.378

for.end.397:                                      ; preds = %if.then.393, %for.cond.378
  %198 = load i32, i32* %k, align 4
  %199 = load i32, i32* %nr, align 4
  %cmp398 = icmp eq i32 %198, %199
  br i1 %cmp398, label %if.then.400, label %if.end.570

if.then.400:                                      ; preds = %for.end.397
  %200 = load %struct.rtx_def*, %struct.rtx_def** %last_reg, align 8
  %201 = bitcast %struct.rtx_def* %200 to i32*
  %bf.load401 = load i32, i32* %201, align 8
  %bf.lshr402 = lshr i32 %bf.load401, 16
  %bf.clear403 = and i32 %bf.lshr402, 255
  %202 = load i32, i32* %mode, align 4
  %cmp404 = icmp eq i32 %bf.clear403, %202
  br i1 %cmp404, label %cond.true.406, label %cond.false.407

cond.true.406:                                    ; preds = %if.then.400
  %203 = load %struct.rtx_def*, %struct.rtx_def** %last_reg, align 8
  br label %cond.end.409

cond.false.407:                                   ; preds = %if.then.400
  %204 = load i32, i32* %mode, align 4
  %205 = load i32, i32* %i, align 4
  %call408 = call %struct.rtx_def* @gen_rtx_REG(i32 %204, i32 %205)
  br label %cond.end.409

cond.end.409:                                     ; preds = %cond.false.407, %cond.true.406
  %cond410 = phi %struct.rtx_def* [ %203, %cond.true.406 ], [ %call408, %cond.false.407 ]
  store %struct.rtx_def* %cond410, %struct.rtx_def** %last_reg, align 8
  store i32 0, i32* %bad_for_class, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond.411

for.cond.411:                                     ; preds = %for.inc.425, %cond.end.409
  %206 = load i32, i32* %k, align 4
  %207 = load i32, i32* %nr, align 4
  %cmp412 = icmp slt i32 %206, %207
  br i1 %cmp412, label %for.body.414, label %for.end.427

for.body.414:                                     ; preds = %for.cond.411
  %208 = load i32, i32* %r, align 4
  %idxprom415 = sext i32 %208 to i64
  %arrayidx416 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom415
  %class417 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx416, i32 0, i32 2
  %209 = load i32, i32* %class417, align 4
  %idxprom418 = sext i32 %209 to i64
  %arrayidx419 = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom418
  %210 = load i64, i64* %arrayidx419, align 8
  %211 = load i32, i32* %i, align 4
  %212 = load i32, i32* %k, align 4
  %add420 = add nsw i32 %211, %212
  %sh_prom421 = zext i32 %add420 to i64
  %shl422 = shl i64 1, %sh_prom421
  %and423 = and i64 %210, %shl422
  %tobool424 = icmp ne i64 %and423, 0
  %lnot = xor i1 %tobool424, true
  %lnot.ext = zext i1 %lnot to i32
  %213 = load i32, i32* %bad_for_class, align 4
  %or = or i32 %213, %lnot.ext
  store i32 %or, i32* %bad_for_class, align 4
  br label %for.inc.425

for.inc.425:                                      ; preds = %for.body.414
  %214 = load i32, i32* %k, align 4
  %inc426 = add nsw i32 %214, 1
  store i32 %inc426, i32* %k, align 4
  br label %for.cond.411

for.end.427:                                      ; preds = %for.cond.411
  store i32 0, i32* %i1, align 4
  br label %for.cond.428

for.cond.428:                                     ; preds = %for.inc.440, %for.end.427
  %215 = load i32, i32* %i1, align 4
  %216 = load i32, i32* @n_earlyclobbers, align 4
  %cmp429 = icmp slt i32 %215, %216
  br i1 %cmp429, label %for.body.431, label %for.end.442

for.body.431:                                     ; preds = %for.cond.428
  %217 = load i32, i32* %regno, align 4
  %idxprom432 = sext i32 %217 to i64
  %218 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8
  %arrayidx433 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %218, i64 %idxprom432
  %219 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx433, align 8
  %220 = load i32, i32* %i1, align 4
  %idxprom434 = sext i32 %220 to i64
  %arrayidx435 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @reload_earlyclobbers, i32 0, i64 %idxprom434
  %221 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx435, align 8
  %call436 = call i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %219, %struct.rtx_def* %221)
  %tobool437 = icmp ne i32 %call436, 0
  br i1 %tobool437, label %if.then.438, label %if.end.439

if.then.438:                                      ; preds = %for.body.431
  br label %for.end.442

if.end.439:                                       ; preds = %for.body.431
  br label %for.inc.440

for.inc.440:                                      ; preds = %if.end.439
  %222 = load i32, i32* %i1, align 4
  %inc441 = add nsw i32 %222, 1
  store i32 %inc441, i32* %i1, align 4
  br label %for.cond.428

for.end.442:                                      ; preds = %if.then.438, %for.cond.428
  %223 = load i32, i32* %i1, align 4
  %224 = load i32, i32* @n_earlyclobbers, align 4
  %cmp443 = icmp ne i32 %223, %224
  br i1 %cmp443, label %if.then.521, label %lor.lhs.false.445

lor.lhs.false.445:                                ; preds = %for.end.442
  %225 = load i32, i32* %i, align 4
  %226 = load i32, i32* %r, align 4
  %idxprom446 = sext i32 %226 to i64
  %arrayidx447 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom446
  %mode448 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx447, i32 0, i32 5
  %227 = load i32, i32* %mode448, align 4
  %228 = load i32, i32* %r, align 4
  %idxprom449 = sext i32 %228 to i64
  %arrayidx450 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom449
  %opnum451 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx450, i32 0, i32 12
  %229 = load i32, i32* %opnum451, align 4
  %230 = load i32, i32* %r, align 4
  %idxprom452 = sext i32 %230 to i64
  %arrayidx453 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom452
  %when_needed454 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx453, i32 0, i32 17
  %231 = load i32, i32* %when_needed454, align 4
  %232 = load i32, i32* %r, align 4
  %idxprom455 = sext i32 %232 to i64
  %arrayidx456 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom455
  %in457 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx456, i32 0, i32 0
  %233 = load %struct.rtx_def*, %struct.rtx_def** %in457, align 8
  %234 = load i32, i32* %r, align 4
  %idxprom458 = sext i32 %234 to i64
  %arrayidx459 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom458
  %out460 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx459, i32 0, i32 1
  %235 = load %struct.rtx_def*, %struct.rtx_def** %out460, align 8
  %236 = load i32, i32* %r, align 4
  %call461 = call i32 @free_for_value_p(i32 %225, i32 %227, i32 %229, i32 %231, %struct.rtx_def* %233, %struct.rtx_def* %235, i32 %236, i32 1)
  %tobool462 = icmp ne i32 %call461, 0
  br i1 %tobool462, label %lor.lhs.false.463, label %if.then.521

lor.lhs.false.463:                                ; preds = %lor.lhs.false.445
  %237 = load i64, i64* @reg_used_in_insn, align 8
  %238 = load i32, i32* %i, align 4
  %sh_prom464 = zext i32 %238 to i64
  %shl465 = shl i64 1, %sh_prom464
  %and466 = and i64 %237, %shl465
  %tobool467 = icmp ne i64 %and466, 0
  br i1 %tobool467, label %land.lhs.true.468, label %lor.lhs.false.478

land.lhs.true.468:                                ; preds = %lor.lhs.false.463
  %239 = load i32, i32* %r, align 4
  %idxprom469 = sext i32 %239 to i64
  %arrayidx470 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom469
  %out471 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx470, i32 0, i32 1
  %240 = load %struct.rtx_def*, %struct.rtx_def** %out471, align 8
  %tobool472 = icmp ne %struct.rtx_def* %240, null
  br i1 %tobool472, label %land.lhs.true.473, label %lor.lhs.false.478

land.lhs.true.473:                                ; preds = %land.lhs.true.468
  %241 = load i64, i64* @reg_reloaded_dead, align 8
  %242 = load i32, i32* %i, align 4
  %sh_prom474 = zext i32 %242 to i64
  %shl475 = shl i64 1, %sh_prom474
  %and476 = and i64 %241, %shl475
  %tobool477 = icmp ne i64 %and476, 0
  br i1 %tobool477, label %lor.lhs.false.478, label %if.then.521

lor.lhs.false.478:                                ; preds = %land.lhs.true.473, %land.lhs.true.468, %lor.lhs.false.463
  %243 = load i32, i32* %i, align 4
  %cmp479 = icmp eq i32 %243, 6
  br i1 %cmp479, label %land.lhs.true.481, label %lor.lhs.false.488

land.lhs.true.481:                                ; preds = %lor.lhs.false.478
  %244 = load i32, i32* @frame_pointer_needed, align 4
  %tobool482 = icmp ne i32 %244, 0
  br i1 %tobool482, label %land.lhs.true.483, label %lor.lhs.false.488

land.lhs.true.483:                                ; preds = %land.lhs.true.481
  %245 = load i32, i32* %r, align 4
  %idxprom484 = sext i32 %245 to i64
  %arrayidx485 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom484
  %out486 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx485, i32 0, i32 1
  %246 = load %struct.rtx_def*, %struct.rtx_def** %out486, align 8
  %tobool487 = icmp ne %struct.rtx_def* %246, null
  br i1 %tobool487, label %if.then.521, label %lor.lhs.false.488

lor.lhs.false.488:                                ; preds = %land.lhs.true.483, %land.lhs.true.481, %lor.lhs.false.478
  %247 = load i32, i32* %r, align 4
  %idxprom489 = sext i32 %247 to i64
  %arrayidx490 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom489
  %mode491 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx490, i32 0, i32 5
  %248 = load i32, i32* %mode491, align 4
  %idxprom492 = sext i32 %248 to i64
  %arrayidx493 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom492
  %249 = load i8, i8* %arrayidx493, align 1
  %conv494 = zext i8 %249 to i32
  %250 = load i32, i32* %mode, align 4
  %idxprom495 = sext i32 %250 to i64
  %arrayidx496 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom495
  %251 = load i8, i8* %arrayidx496, align 1
  %conv497 = zext i8 %251 to i32
  %cmp498 = icmp sgt i32 %conv494, %conv497
  br i1 %cmp498, label %if.then.521, label %lor.lhs.false.500

lor.lhs.false.500:                                ; preds = %lor.lhs.false.488
  %252 = load i32, i32* %bad_for_class, align 4
  %tobool501 = icmp ne i32 %252, 0
  br i1 %tobool501, label %if.then.521, label %lor.lhs.false.502

lor.lhs.false.502:                                ; preds = %lor.lhs.false.500
  %253 = load i32, i32* %r, align 4
  %idxprom503 = sext i32 %253 to i64
  %arrayidx504 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom503
  %out505 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx504, i32 0, i32 1
  %254 = load %struct.rtx_def*, %struct.rtx_def** %out505, align 8
  %tobool506 = icmp ne %struct.rtx_def* %254, null
  br i1 %tobool506, label %land.lhs.true.507, label %if.else.536

land.lhs.true.507:                                ; preds = %lor.lhs.false.502
  %255 = load i32, i32* %r, align 4
  %idxprom508 = sext i32 %255 to i64
  %arrayidx509 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom508
  %reg_rtx510 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx509, i32 0, i32 11
  %256 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx510, align 8
  %tobool511 = icmp ne %struct.rtx_def* %256, null
  br i1 %tobool511, label %land.lhs.true.512, label %if.else.536

land.lhs.true.512:                                ; preds = %land.lhs.true.507
  %257 = load i32, i32* %r, align 4
  %idxprom513 = sext i32 %257 to i64
  %arrayidx514 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom513
  %out515 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx514, i32 0, i32 1
  %258 = load %struct.rtx_def*, %struct.rtx_def** %out515, align 8
  %259 = load i32, i32* %r, align 4
  %idxprom516 = sext i32 %259 to i64
  %arrayidx517 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom516
  %reg_rtx518 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx517, i32 0, i32 11
  %260 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx518, align 8
  %call519 = call i32 @rtx_equal_p(%struct.rtx_def* %258, %struct.rtx_def* %260)
  %tobool520 = icmp ne i32 %call519, 0
  br i1 %tobool520, label %if.then.521, label %if.else.536

if.then.521:                                      ; preds = %land.lhs.true.512, %lor.lhs.false.500, %lor.lhs.false.488, %land.lhs.true.483, %land.lhs.true.473, %lor.lhs.false.445, %for.end.442
  %261 = load i32, i32* %r, align 4
  %idxprom522 = sext i32 %261 to i64
  %arrayidx523 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom522
  %optional = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx523, i32 0, i32 18
  %bf.load524 = load i8, i8* %optional, align 8
  %bf.clear525 = and i8 %bf.load524, 1
  %bf.cast526 = zext i8 %bf.clear525 to i32
  %tobool527 = icmp ne i32 %bf.cast526, 0
  br i1 %tobool527, label %if.end.535, label %if.then.528

if.then.528:                                      ; preds = %if.then.521
  %262 = load %struct.rtx_def*, %struct.rtx_def** %last_reg, align 8
  %263 = load i32, i32* %r, align 4
  %idxprom529 = sext i32 %263 to i64
  %arrayidx530 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i32 0, i64 %idxprom529
  store %struct.rtx_def* %262, %struct.rtx_def** %arrayidx530, align 8
  %264 = load i32, i32* %i, align 4
  %idxprom531 = sext i32 %264 to i64
  %arrayidx532 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @reg_reloaded_insn, i32 0, i64 %idxprom531
  %265 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx532, align 8
  %266 = load i32, i32* %r, align 4
  %idxprom533 = sext i32 %266 to i64
  %arrayidx534 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_inheritance_insn, i32 0, i64 %idxprom533
  store %struct.rtx_def* %265, %struct.rtx_def** %arrayidx534, align 8
  br label %if.end.535

if.end.535:                                       ; preds = %if.then.528, %if.then.521
  br label %if.end.569

if.else.536:                                      ; preds = %land.lhs.true.512, %land.lhs.true.507, %lor.lhs.false.502
  %267 = load i32, i32* %i, align 4
  %268 = load i32, i32* %r, align 4
  %idxprom538 = sext i32 %268 to i64
  %arrayidx539 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom538
  %opnum540 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx539, i32 0, i32 12
  %269 = load i32, i32* %opnum540, align 4
  %270 = load i32, i32* %r, align 4
  %idxprom541 = sext i32 %270 to i64
  %arrayidx542 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom541
  %when_needed543 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx542, i32 0, i32 17
  %271 = load i32, i32* %when_needed543, align 4
  %272 = load i32, i32* %r, align 4
  %idxprom544 = sext i32 %272 to i64
  %arrayidx545 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom544
  %mode546 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx545, i32 0, i32 5
  %273 = load i32, i32* %mode546, align 4
  call void @mark_reload_reg_in_use(i32 %267, i32 %269, i32 %271, i32 %273)
  %274 = load %struct.rtx_def*, %struct.rtx_def** %last_reg, align 8
  %275 = load i32, i32* %r, align 4
  %idxprom547 = sext i32 %275 to i64
  %arrayidx548 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom547
  %reg_rtx549 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx548, i32 0, i32 11
  store %struct.rtx_def* %274, %struct.rtx_def** %reg_rtx549, align 8
  %276 = load i32, i32* %r, align 4
  %idxprom550 = sext i32 %276 to i64
  %arrayidx551 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i32 0, i64 %idxprom550
  store i8 1, i8* %arrayidx551, align 1
  %277 = load i32, i32* %i, align 4
  %idxprom552 = sext i32 %277 to i64
  %arrayidx553 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @reg_reloaded_insn, i32 0, i64 %idxprom552
  %278 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx553, align 8
  %279 = load i32, i32* %r, align 4
  %idxprom554 = sext i32 %279 to i64
  %arrayidx555 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_inheritance_insn, i32 0, i64 %idxprom554
  store %struct.rtx_def* %278, %struct.rtx_def** %arrayidx555, align 8
  %280 = load i32, i32* %i, align 4
  %281 = load i32, i32* %r, align 4
  %idxprom556 = sext i32 %281 to i64
  %arrayidx557 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i32 0, i64 %idxprom556
  store i32 %280, i32* %arrayidx557, align 4
  store i32 0, i32* %k537, align 4
  br label %for.cond.558

for.cond.558:                                     ; preds = %for.inc.566, %if.else.536
  %282 = load i32, i32* %k537, align 4
  %283 = load i32, i32* %nr, align 4
  %cmp559 = icmp slt i32 %282, %283
  br i1 %cmp559, label %for.body.561, label %for.end.568

for.body.561:                                     ; preds = %for.cond.558
  %284 = load i32, i32* %i, align 4
  %285 = load i32, i32* %k537, align 4
  %add562 = add nsw i32 %284, %285
  %sh_prom563 = zext i32 %add562 to i64
  %shl564 = shl i64 1, %sh_prom563
  %286 = load i64, i64* @reload_reg_used_for_inherit, align 8
  %or565 = or i64 %286, %shl564
  store i64 %or565, i64* @reload_reg_used_for_inherit, align 8
  br label %for.inc.566

for.inc.566:                                      ; preds = %for.body.561
  %287 = load i32, i32* %k537, align 4
  %inc567 = add nsw i32 %287, 1
  store i32 %inc567, i32* %k537, align 4
  br label %for.cond.558

for.end.568:                                      ; preds = %for.cond.558
  br label %if.end.569

if.end.569:                                       ; preds = %for.end.568, %if.end.535
  br label %if.end.570

if.end.570:                                       ; preds = %if.end.569, %for.end.397
  br label %if.end.571

if.end.571:                                       ; preds = %if.end.570, %land.lhs.true.285, %lor.lhs.false.278, %land.lhs.true.269, %lor.lhs.false.264, %land.lhs.true.251, %land.lhs.true.249, %land.lhs.true.244, %if.end.232
  br label %if.end.572

if.end.572:                                       ; preds = %if.end.571, %land.lhs.true.200, %if.end.197
  br label %if.end.573

if.end.573:                                       ; preds = %if.end.572, %if.end.99
  %288 = load i32, i32* %inheritance, align 4
  %tobool574 = icmp ne i32 %288, 0
  br i1 %tobool574, label %land.lhs.true.575, label %if.else.695

land.lhs.true.575:                                ; preds = %if.end.573
  %289 = load i32, i32* %r, align 4
  %idxprom576 = sext i32 %289 to i64
  %arrayidx577 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom576
  %in578 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx577, i32 0, i32 0
  %290 = load %struct.rtx_def*, %struct.rtx_def** %in578, align 8
  %cmp579 = icmp ne %struct.rtx_def* %290, null
  br i1 %cmp579, label %land.lhs.true.581, label %if.else.695

land.lhs.true.581:                                ; preds = %land.lhs.true.575
  %291 = load i32, i32* %r, align 4
  %idxprom582 = sext i32 %291 to i64
  %arrayidx583 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i32 0, i64 %idxprom582
  %292 = load i8, i8* %arrayidx583, align 1
  %tobool584 = icmp ne i8 %292, 0
  br i1 %tobool584, label %if.else.695, label %land.lhs.true.585

land.lhs.true.585:                                ; preds = %land.lhs.true.581
  %293 = load i32, i32* %r, align 4
  %idxprom586 = sext i32 %293 to i64
  %arrayidx587 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom586
  %out588 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx587, i32 0, i32 1
  %294 = load %struct.rtx_def*, %struct.rtx_def** %out588, align 8
  %cmp589 = icmp eq %struct.rtx_def* %294, null
  br i1 %cmp589, label %land.lhs.true.591, label %if.else.695

land.lhs.true.591:                                ; preds = %land.lhs.true.585
  %295 = load i32, i32* %r, align 4
  %idxprom592 = sext i32 %295 to i64
  %arrayidx593 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom592
  %in594 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx593, i32 0, i32 0
  %296 = load %struct.rtx_def*, %struct.rtx_def** %in594, align 8
  %297 = bitcast %struct.rtx_def* %296 to i32*
  %bf.load595 = load i32, i32* %297, align 8
  %bf.clear596 = and i32 %bf.load595, 65535
  %cmp597 = icmp eq i32 %bf.clear596, 67
  br i1 %cmp597, label %land.lhs.true.679, label %lor.lhs.false.599

lor.lhs.false.599:                                ; preds = %land.lhs.true.591
  %298 = load i32, i32* %r, align 4
  %idxprom600 = sext i32 %298 to i64
  %arrayidx601 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom600
  %in602 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx601, i32 0, i32 0
  %299 = load %struct.rtx_def*, %struct.rtx_def** %in602, align 8
  %300 = bitcast %struct.rtx_def* %299 to i32*
  %bf.load603 = load i32, i32* %300, align 8
  %bf.clear604 = and i32 %bf.load603, 65535
  %cmp605 = icmp eq i32 %bf.clear604, 68
  br i1 %cmp605, label %land.lhs.true.679, label %lor.lhs.false.607

lor.lhs.false.607:                                ; preds = %lor.lhs.false.599
  %301 = load i32, i32* %r, align 4
  %idxprom608 = sext i32 %301 to i64
  %arrayidx609 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom608
  %in610 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx609, i32 0, i32 0
  %302 = load %struct.rtx_def*, %struct.rtx_def** %in610, align 8
  %303 = bitcast %struct.rtx_def* %302 to i32*
  %bf.load611 = load i32, i32* %303, align 8
  %bf.clear612 = and i32 %bf.load611, 65535
  %cmp613 = icmp eq i32 %bf.clear612, 54
  br i1 %cmp613, label %land.lhs.true.679, label %lor.lhs.false.615

lor.lhs.false.615:                                ; preds = %lor.lhs.false.607
  %304 = load i32, i32* %r, align 4
  %idxprom616 = sext i32 %304 to i64
  %arrayidx617 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom616
  %in618 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx617, i32 0, i32 0
  %305 = load %struct.rtx_def*, %struct.rtx_def** %in618, align 8
  %306 = bitcast %struct.rtx_def* %305 to i32*
  %bf.load619 = load i32, i32* %306, align 8
  %bf.clear620 = and i32 %bf.load619, 65535
  %cmp621 = icmp eq i32 %bf.clear620, 55
  br i1 %cmp621, label %land.lhs.true.679, label %lor.lhs.false.623

lor.lhs.false.623:                                ; preds = %lor.lhs.false.615
  %307 = load i32, i32* %r, align 4
  %idxprom624 = sext i32 %307 to i64
  %arrayidx625 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom624
  %in626 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx625, i32 0, i32 0
  %308 = load %struct.rtx_def*, %struct.rtx_def** %in626, align 8
  %309 = bitcast %struct.rtx_def* %308 to i32*
  %bf.load627 = load i32, i32* %309, align 8
  %bf.clear628 = and i32 %bf.load627, 65535
  %cmp629 = icmp eq i32 %bf.clear628, 58
  br i1 %cmp629, label %land.lhs.true.679, label %lor.lhs.false.631

lor.lhs.false.631:                                ; preds = %lor.lhs.false.623
  %310 = load i32, i32* %r, align 4
  %idxprom632 = sext i32 %310 to i64
  %arrayidx633 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom632
  %in634 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx633, i32 0, i32 0
  %311 = load %struct.rtx_def*, %struct.rtx_def** %in634, align 8
  %312 = bitcast %struct.rtx_def* %311 to i32*
  %bf.load635 = load i32, i32* %312, align 8
  %bf.clear636 = and i32 %bf.load635, 65535
  %cmp637 = icmp eq i32 %bf.clear636, 134
  br i1 %cmp637, label %land.lhs.true.679, label %lor.lhs.false.639

lor.lhs.false.639:                                ; preds = %lor.lhs.false.631
  %313 = load i32, i32* %r, align 4
  %idxprom640 = sext i32 %313 to i64
  %arrayidx641 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom640
  %in642 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx641, i32 0, i32 0
  %314 = load %struct.rtx_def*, %struct.rtx_def** %in642, align 8
  %315 = bitcast %struct.rtx_def* %314 to i32*
  %bf.load643 = load i32, i32* %315, align 8
  %bf.clear644 = and i32 %bf.load643, 65535
  %cmp645 = icmp eq i32 %bf.clear644, 56
  br i1 %cmp645, label %land.lhs.true.679, label %lor.lhs.false.647

lor.lhs.false.647:                                ; preds = %lor.lhs.false.639
  %316 = load i32, i32* %r, align 4
  %idxprom648 = sext i32 %316 to i64
  %arrayidx649 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom648
  %in650 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx649, i32 0, i32 0
  %317 = load %struct.rtx_def*, %struct.rtx_def** %in650, align 8
  %318 = bitcast %struct.rtx_def* %317 to i32*
  %bf.load651 = load i32, i32* %318, align 8
  %bf.clear652 = and i32 %bf.load651, 65535
  %cmp653 = icmp eq i32 %bf.clear652, 140
  br i1 %cmp653, label %land.lhs.true.679, label %lor.lhs.false.655

lor.lhs.false.655:                                ; preds = %lor.lhs.false.647
  %319 = load i32, i32* %r, align 4
  %idxprom656 = sext i32 %319 to i64
  %arrayidx657 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom656
  %in658 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx657, i32 0, i32 0
  %320 = load %struct.rtx_def*, %struct.rtx_def** %in658, align 8
  %321 = bitcast %struct.rtx_def* %320 to i32*
  %bf.load659 = load i32, i32* %321, align 8
  %bf.clear660 = and i32 %bf.load659, 65535
  %cmp661 = icmp eq i32 %bf.clear660, 75
  br i1 %cmp661, label %land.lhs.true.679, label %lor.lhs.false.663

lor.lhs.false.663:                                ; preds = %lor.lhs.false.655
  %322 = load i32, i32* %r, align 4
  %idxprom664 = sext i32 %322 to i64
  %arrayidx665 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom664
  %in666 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx665, i32 0, i32 0
  %323 = load %struct.rtx_def*, %struct.rtx_def** %in666, align 8
  %324 = bitcast %struct.rtx_def* %323 to i32*
  %bf.load667 = load i32, i32* %324, align 8
  %bf.clear668 = and i32 %bf.load667, 65535
  %cmp669 = icmp eq i32 %bf.clear668, 61
  br i1 %cmp669, label %land.lhs.true.679, label %lor.lhs.false.671

lor.lhs.false.671:                                ; preds = %lor.lhs.false.663
  %325 = load i32, i32* %r, align 4
  %idxprom672 = sext i32 %325 to i64
  %arrayidx673 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom672
  %in674 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx673, i32 0, i32 0
  %326 = load %struct.rtx_def*, %struct.rtx_def** %in674, align 8
  %327 = bitcast %struct.rtx_def* %326 to i32*
  %bf.load675 = load i32, i32* %327, align 8
  %bf.clear676 = and i32 %bf.load675, 65535
  %cmp677 = icmp eq i32 %bf.clear676, 66
  br i1 %cmp677, label %land.lhs.true.679, label %if.else.695

land.lhs.true.679:                                ; preds = %lor.lhs.false.671, %lor.lhs.false.663, %lor.lhs.false.655, %lor.lhs.false.647, %lor.lhs.false.639, %lor.lhs.false.631, %lor.lhs.false.623, %lor.lhs.false.615, %lor.lhs.false.607, %lor.lhs.false.599, %land.lhs.true.591
  %328 = load i32, i32* %r, align 4
  %idxprom680 = sext i32 %328 to i64
  %arrayidx681 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom680
  %nregs682 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx681, i32 0, i32 6
  %329 = load i32, i32* %nregs682, align 4
  %330 = load i32, i32* %max_group_size, align 4
  %cmp683 = icmp eq i32 %329, %330
  br i1 %cmp683, label %if.then.691, label %lor.lhs.false.685

lor.lhs.false.685:                                ; preds = %land.lhs.true.679
  %331 = load i32, i32* %r, align 4
  %idxprom686 = sext i32 %331 to i64
  %arrayidx687 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom686
  %class688 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx687, i32 0, i32 2
  %332 = load i32, i32* %class688, align 4
  %333 = load i32, i32* %group_class, align 4
  %call689 = call i32 @reg_classes_intersect_p(i32 %332, i32 %333)
  %tobool690 = icmp ne i32 %call689, 0
  br i1 %tobool690, label %if.else.695, label %if.then.691

if.then.691:                                      ; preds = %lor.lhs.false.685, %land.lhs.true.679
  %334 = load i32, i32* %r, align 4
  %idxprom692 = sext i32 %334 to i64
  %arrayidx693 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom692
  %in694 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx693, i32 0, i32 0
  %335 = load %struct.rtx_def*, %struct.rtx_def** %in694, align 8
  store %struct.rtx_def* %335, %struct.rtx_def** %search_equiv, align 8
  br label %if.end.819

if.else.695:                                      ; preds = %lor.lhs.false.685, %lor.lhs.false.671, %land.lhs.true.585, %land.lhs.true.581, %land.lhs.true.575, %if.end.573
  %336 = load i32, i32* %inheritance, align 4
  %tobool696 = icmp ne i32 %336, 0
  br i1 %tobool696, label %land.lhs.true.697, label %if.end.818

land.lhs.true.697:                                ; preds = %if.else.695
  %337 = load i32, i32* %r, align 4
  %idxprom698 = sext i32 %337 to i64
  %arrayidx699 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom698
  %in700 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx699, i32 0, i32 0
  %338 = load %struct.rtx_def*, %struct.rtx_def** %in700, align 8
  %cmp701 = icmp eq %struct.rtx_def* %338, null
  br i1 %cmp701, label %land.lhs.true.703, label %if.end.818

land.lhs.true.703:                                ; preds = %land.lhs.true.697
  %339 = load i32, i32* %r, align 4
  %idxprom704 = sext i32 %339 to i64
  %arrayidx705 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom704
  %out706 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx705, i32 0, i32 1
  %340 = load %struct.rtx_def*, %struct.rtx_def** %out706, align 8
  %cmp707 = icmp ne %struct.rtx_def* %340, null
  br i1 %cmp707, label %if.then.709, label %if.end.818

if.then.709:                                      ; preds = %land.lhs.true.703
  %341 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %342 = bitcast %struct.rtx_def* %341 to i32*
  %bf.load710 = load i32, i32* %342, align 8
  %bf.clear711 = and i32 %bf.load710, 65535
  %idxprom712 = sext i32 %bf.clear711 to i64
  %arrayidx713 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom712
  %343 = load i8, i8* %arrayidx713, align 1
  %conv714 = sext i8 %343 to i32
  %cmp715 = icmp eq i32 %conv714, 105
  br i1 %cmp715, label %cond.true.717, label %cond.false.736

cond.true.717:                                    ; preds = %if.then.709
  %344 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld718 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %344, i32 0, i32 1
  %arrayidx719 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld718, i32 0, i64 3
  %rtx720 = bitcast %union.rtunion_def* %arrayidx719 to %struct.rtx_def**
  %345 = load %struct.rtx_def*, %struct.rtx_def** %rtx720, align 8
  %346 = bitcast %struct.rtx_def* %345 to i32*
  %bf.load721 = load i32, i32* %346, align 8
  %bf.clear722 = and i32 %bf.load721, 65535
  %cmp723 = icmp eq i32 %bf.clear722, 47
  br i1 %cmp723, label %cond.true.725, label %cond.false.729

cond.true.725:                                    ; preds = %cond.true.717
  %347 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld726 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %347, i32 0, i32 1
  %arrayidx727 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld726, i32 0, i64 3
  %rtx728 = bitcast %union.rtunion_def* %arrayidx727 to %struct.rtx_def**
  %348 = load %struct.rtx_def*, %struct.rtx_def** %rtx728, align 8
  br label %cond.end.734

cond.false.729:                                   ; preds = %cond.true.717
  %349 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %350 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld730 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %350, i32 0, i32 1
  %arrayidx731 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld730, i32 0, i64 3
  %rtx732 = bitcast %union.rtunion_def* %arrayidx731 to %struct.rtx_def**
  %351 = load %struct.rtx_def*, %struct.rtx_def** %rtx732, align 8
  %call733 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %349, %struct.rtx_def* %351)
  br label %cond.end.734

cond.end.734:                                     ; preds = %cond.false.729, %cond.true.725
  %cond735 = phi %struct.rtx_def* [ %348, %cond.true.725 ], [ %call733, %cond.false.729 ]
  br label %cond.end.737

cond.false.736:                                   ; preds = %if.then.709
  br label %cond.end.737

cond.end.737:                                     ; preds = %cond.false.736, %cond.end.734
  %cond738 = phi %struct.rtx_def* [ %cond735, %cond.end.734 ], [ null, %cond.false.736 ]
  store %struct.rtx_def* %cond738, %struct.rtx_def** %set, align 8
  %352 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %tobool739 = icmp ne %struct.rtx_def* %352, null
  br i1 %tobool739, label %land.lhs.true.740, label %if.end.817

land.lhs.true.740:                                ; preds = %cond.end.737
  %353 = load i32, i32* %r, align 4
  %idxprom741 = sext i32 %353 to i64
  %arrayidx742 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom741
  %out743 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx742, i32 0, i32 1
  %354 = load %struct.rtx_def*, %struct.rtx_def** %out743, align 8
  %355 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld744 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %355, i32 0, i32 1
  %arrayidx745 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld744, i32 0, i64 0
  %rtx746 = bitcast %union.rtunion_def* %arrayidx745 to %struct.rtx_def**
  %356 = load %struct.rtx_def*, %struct.rtx_def** %rtx746, align 8
  %call747 = call i32 @rtx_equal_p(%struct.rtx_def* %354, %struct.rtx_def* %356)
  %tobool748 = icmp ne i32 %call747, 0
  br i1 %tobool748, label %land.lhs.true.749, label %if.end.817

land.lhs.true.749:                                ; preds = %land.lhs.true.740
  %357 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld750 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %357, i32 0, i32 1
  %arrayidx751 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld750, i32 0, i64 1
  %rtx752 = bitcast %union.rtunion_def* %arrayidx751 to %struct.rtx_def**
  %358 = load %struct.rtx_def*, %struct.rtx_def** %rtx752, align 8
  %359 = bitcast %struct.rtx_def* %358 to i32*
  %bf.load753 = load i32, i32* %359, align 8
  %bf.clear754 = and i32 %bf.load753, 65535
  %cmp755 = icmp eq i32 %bf.clear754, 67
  br i1 %cmp755, label %if.then.813, label %lor.lhs.false.757

lor.lhs.false.757:                                ; preds = %land.lhs.true.749
  %360 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld758 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %360, i32 0, i32 1
  %arrayidx759 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld758, i32 0, i64 1
  %rtx760 = bitcast %union.rtunion_def* %arrayidx759 to %struct.rtx_def**
  %361 = load %struct.rtx_def*, %struct.rtx_def** %rtx760, align 8
  %362 = bitcast %struct.rtx_def* %361 to i32*
  %bf.load761 = load i32, i32* %362, align 8
  %bf.clear762 = and i32 %bf.load761, 65535
  %cmp763 = icmp eq i32 %bf.clear762, 68
  br i1 %cmp763, label %if.then.813, label %lor.lhs.false.765

lor.lhs.false.765:                                ; preds = %lor.lhs.false.757
  %363 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld766 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %363, i32 0, i32 1
  %arrayidx767 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld766, i32 0, i64 1
  %rtx768 = bitcast %union.rtunion_def* %arrayidx767 to %struct.rtx_def**
  %364 = load %struct.rtx_def*, %struct.rtx_def** %rtx768, align 8
  %365 = bitcast %struct.rtx_def* %364 to i32*
  %bf.load769 = load i32, i32* %365, align 8
  %bf.clear770 = and i32 %bf.load769, 65535
  %cmp771 = icmp eq i32 %bf.clear770, 54
  br i1 %cmp771, label %if.then.813, label %lor.lhs.false.773

lor.lhs.false.773:                                ; preds = %lor.lhs.false.765
  %366 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld774 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %366, i32 0, i32 1
  %arrayidx775 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld774, i32 0, i64 1
  %rtx776 = bitcast %union.rtunion_def* %arrayidx775 to %struct.rtx_def**
  %367 = load %struct.rtx_def*, %struct.rtx_def** %rtx776, align 8
  %368 = bitcast %struct.rtx_def* %367 to i32*
  %bf.load777 = load i32, i32* %368, align 8
  %bf.clear778 = and i32 %bf.load777, 65535
  %cmp779 = icmp eq i32 %bf.clear778, 55
  br i1 %cmp779, label %if.then.813, label %lor.lhs.false.781

lor.lhs.false.781:                                ; preds = %lor.lhs.false.773
  %369 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld782 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %369, i32 0, i32 1
  %arrayidx783 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld782, i32 0, i64 1
  %rtx784 = bitcast %union.rtunion_def* %arrayidx783 to %struct.rtx_def**
  %370 = load %struct.rtx_def*, %struct.rtx_def** %rtx784, align 8
  %371 = bitcast %struct.rtx_def* %370 to i32*
  %bf.load785 = load i32, i32* %371, align 8
  %bf.clear786 = and i32 %bf.load785, 65535
  %cmp787 = icmp eq i32 %bf.clear786, 58
  br i1 %cmp787, label %if.then.813, label %lor.lhs.false.789

lor.lhs.false.789:                                ; preds = %lor.lhs.false.781
  %372 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld790 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %372, i32 0, i32 1
  %arrayidx791 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld790, i32 0, i64 1
  %rtx792 = bitcast %union.rtunion_def* %arrayidx791 to %struct.rtx_def**
  %373 = load %struct.rtx_def*, %struct.rtx_def** %rtx792, align 8
  %374 = bitcast %struct.rtx_def* %373 to i32*
  %bf.load793 = load i32, i32* %374, align 8
  %bf.clear794 = and i32 %bf.load793, 65535
  %cmp795 = icmp eq i32 %bf.clear794, 134
  br i1 %cmp795, label %if.then.813, label %lor.lhs.false.797

lor.lhs.false.797:                                ; preds = %lor.lhs.false.789
  %375 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld798 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %375, i32 0, i32 1
  %arrayidx799 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld798, i32 0, i64 1
  %rtx800 = bitcast %union.rtunion_def* %arrayidx799 to %struct.rtx_def**
  %376 = load %struct.rtx_def*, %struct.rtx_def** %rtx800, align 8
  %377 = bitcast %struct.rtx_def* %376 to i32*
  %bf.load801 = load i32, i32* %377, align 8
  %bf.clear802 = and i32 %bf.load801, 65535
  %cmp803 = icmp eq i32 %bf.clear802, 56
  br i1 %cmp803, label %if.then.813, label %lor.lhs.false.805

lor.lhs.false.805:                                ; preds = %lor.lhs.false.797
  %378 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld806 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %378, i32 0, i32 1
  %arrayidx807 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld806, i32 0, i64 1
  %rtx808 = bitcast %union.rtunion_def* %arrayidx807 to %struct.rtx_def**
  %379 = load %struct.rtx_def*, %struct.rtx_def** %rtx808, align 8
  %380 = bitcast %struct.rtx_def* %379 to i32*
  %bf.load809 = load i32, i32* %380, align 8
  %bf.clear810 = and i32 %bf.load809, 65535
  %cmp811 = icmp eq i32 %bf.clear810, 140
  br i1 %cmp811, label %if.then.813, label %if.end.817

if.then.813:                                      ; preds = %lor.lhs.false.805, %lor.lhs.false.797, %lor.lhs.false.789, %lor.lhs.false.781, %lor.lhs.false.773, %lor.lhs.false.765, %lor.lhs.false.757, %land.lhs.true.749
  %381 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld814 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %381, i32 0, i32 1
  %arrayidx815 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld814, i32 0, i64 1
  %rtx816 = bitcast %union.rtunion_def* %arrayidx815 to %struct.rtx_def**
  %382 = load %struct.rtx_def*, %struct.rtx_def** %rtx816, align 8
  store %struct.rtx_def* %382, %struct.rtx_def** %search_equiv, align 8
  br label %if.end.817

if.end.817:                                       ; preds = %if.then.813, %lor.lhs.false.805, %land.lhs.true.740, %cond.end.737
  br label %if.end.818

if.end.818:                                       ; preds = %if.end.817, %land.lhs.true.703, %land.lhs.true.697, %if.else.695
  br label %if.end.819

if.end.819:                                       ; preds = %if.end.818, %if.then.691
  %383 = load %struct.rtx_def*, %struct.rtx_def** %search_equiv, align 8
  %tobool820 = icmp ne %struct.rtx_def* %383, null
  br i1 %tobool820, label %if.then.821, label %if.end.1118

if.then.821:                                      ; preds = %if.end.819
  %384 = load %struct.rtx_def*, %struct.rtx_def** %search_equiv, align 8
  %385 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %386 = load i32, i32* %r, align 4
  %idxprom822 = sext i32 %386 to i64
  %arrayidx823 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom822
  %class824 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx823, i32 0, i32 2
  %387 = load i32, i32* %class824, align 4
  %388 = load i32, i32* %r, align 4
  %idxprom825 = sext i32 %388 to i64
  %arrayidx826 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom825
  %mode827 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx826, i32 0, i32 5
  %389 = load i32, i32* %mode827, align 4
  %call828 = call %struct.rtx_def* @find_equiv_reg(%struct.rtx_def* %384, %struct.rtx_def* %385, i32 %387, i32 -1, i16* null, i32 0, i32 %389)
  store %struct.rtx_def* %call828, %struct.rtx_def** %equiv, align 8
  store i32 0, i32* %regno829, align 4
  %390 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8
  %cmp830 = icmp ne %struct.rtx_def* %390, null
  br i1 %cmp830, label %if.then.832, label %if.end.855

if.then.832:                                      ; preds = %if.then.821
  %391 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8
  %392 = bitcast %struct.rtx_def* %391 to i32*
  %bf.load833 = load i32, i32* %392, align 8
  %bf.clear834 = and i32 %bf.load833, 65535
  %cmp835 = icmp eq i32 %bf.clear834, 61
  br i1 %cmp835, label %if.then.837, label %if.else.841

if.then.837:                                      ; preds = %if.then.832
  %393 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8
  %fld838 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %393, i32 0, i32 1
  %arrayidx839 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld838, i32 0, i64 0
  %rtuint840 = bitcast %union.rtunion_def* %arrayidx839 to i32*
  %394 = load i32, i32* %rtuint840, align 4
  store i32 %394, i32* %regno829, align 4
  br label %if.end.854

if.else.841:                                      ; preds = %if.then.832
  %395 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8
  %396 = bitcast %struct.rtx_def* %395 to i32*
  %bf.load842 = load i32, i32* %396, align 8
  %bf.clear843 = and i32 %bf.load842, 65535
  %cmp844 = icmp eq i32 %bf.clear843, 63
  br i1 %cmp844, label %if.then.846, label %if.else.852

if.then.846:                                      ; preds = %if.else.841
  %397 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8
  %call847 = call i32 @subreg_regno(%struct.rtx_def* %397)
  store i32 %call847, i32* %regno829, align 4
  %398 = load i32, i32* %r, align 4
  %idxprom848 = sext i32 %398 to i64
  %arrayidx849 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom848
  %mode850 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx849, i32 0, i32 5
  %399 = load i32, i32* %mode850, align 4
  %400 = load i32, i32* %regno829, align 4
  %call851 = call %struct.rtx_def* @gen_rtx_REG(i32 %399, i32 %400)
  store %struct.rtx_def* %call851, %struct.rtx_def** %equiv, align 8
  br label %if.end.853

if.else.852:                                      ; preds = %if.else.841
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 5670, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.choose_reload_regs, i32 0, i32 0)) #5
  unreachable

if.end.853:                                       ; preds = %if.then.846
  br label %if.end.854

if.end.854:                                       ; preds = %if.end.853, %if.then.837
  br label %if.end.855

if.end.855:                                       ; preds = %if.end.854, %if.then.821
  %401 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8
  %cmp856 = icmp ne %struct.rtx_def* %401, null
  br i1 %cmp856, label %land.lhs.true.858, label %if.end.892

land.lhs.true.858:                                ; preds = %if.end.855
  %402 = load i64, i64* @reload_reg_used_at_all, align 8
  %403 = load i32, i32* %regno829, align 4
  %sh_prom859 = zext i32 %403 to i64
  %shl860 = shl i64 1, %sh_prom859
  %and861 = and i64 %402, %shl860
  %tobool862 = icmp ne i64 %and861, 0
  br i1 %tobool862, label %land.lhs.true.863, label %lor.lhs.false.881

land.lhs.true.863:                                ; preds = %land.lhs.true.858
  %404 = load i32, i32* %regno829, align 4
  %405 = load i32, i32* %r, align 4
  %idxprom864 = sext i32 %405 to i64
  %arrayidx865 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom864
  %mode866 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx865, i32 0, i32 5
  %406 = load i32, i32* %mode866, align 4
  %407 = load i32, i32* %r, align 4
  %idxprom867 = sext i32 %407 to i64
  %arrayidx868 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom867
  %opnum869 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx868, i32 0, i32 12
  %408 = load i32, i32* %opnum869, align 4
  %409 = load i32, i32* %r, align 4
  %idxprom870 = sext i32 %409 to i64
  %arrayidx871 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom870
  %when_needed872 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx871, i32 0, i32 17
  %410 = load i32, i32* %when_needed872, align 4
  %411 = load i32, i32* %r, align 4
  %idxprom873 = sext i32 %411 to i64
  %arrayidx874 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom873
  %in875 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx874, i32 0, i32 0
  %412 = load %struct.rtx_def*, %struct.rtx_def** %in875, align 8
  %413 = load i32, i32* %r, align 4
  %idxprom876 = sext i32 %413 to i64
  %arrayidx877 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom876
  %out878 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx877, i32 0, i32 1
  %414 = load %struct.rtx_def*, %struct.rtx_def** %out878, align 8
  %415 = load i32, i32* %r, align 4
  %call879 = call i32 @free_for_value_p(i32 %404, i32 %406, i32 %408, i32 %410, %struct.rtx_def* %412, %struct.rtx_def* %414, i32 %415, i32 1)
  %tobool880 = icmp ne i32 %call879, 0
  br i1 %tobool880, label %lor.lhs.false.881, label %if.then.891

lor.lhs.false.881:                                ; preds = %land.lhs.true.863, %land.lhs.true.858
  %416 = load i32, i32* %r, align 4
  %idxprom882 = sext i32 %416 to i64
  %arrayidx883 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom882
  %class884 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx883, i32 0, i32 2
  %417 = load i32, i32* %class884, align 4
  %idxprom885 = sext i32 %417 to i64
  %arrayidx886 = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom885
  %418 = load i64, i64* %arrayidx886, align 8
  %419 = load i32, i32* %regno829, align 4
  %sh_prom887 = zext i32 %419 to i64
  %shl888 = shl i64 1, %sh_prom887
  %and889 = and i64 %418, %shl888
  %tobool890 = icmp ne i64 %and889, 0
  br i1 %tobool890, label %if.end.892, label %if.then.891

if.then.891:                                      ; preds = %lor.lhs.false.881, %land.lhs.true.863
  store %struct.rtx_def* null, %struct.rtx_def** %equiv, align 8
  br label %if.end.892

if.end.892:                                       ; preds = %if.then.891, %lor.lhs.false.881, %if.end.855
  %420 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8
  %cmp893 = icmp ne %struct.rtx_def* %420, null
  br i1 %cmp893, label %land.lhs.true.895, label %if.end.902

land.lhs.true.895:                                ; preds = %if.end.892
  %421 = load i32, i32* %regno829, align 4
  %422 = load i32, i32* %r, align 4
  %idxprom896 = sext i32 %422 to i64
  %arrayidx897 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom896
  %mode898 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx897, i32 0, i32 5
  %423 = load i32, i32* %mode898, align 4
  %call899 = call i32 @ix86_hard_regno_mode_ok(i32 %421, i32 %423)
  %tobool900 = icmp ne i32 %call899, 0
  br i1 %tobool900, label %if.end.902, label %if.then.901

if.then.901:                                      ; preds = %land.lhs.true.895
  store %struct.rtx_def* null, %struct.rtx_def** %equiv, align 8
  br label %if.end.902

if.end.902:                                       ; preds = %if.then.901, %land.lhs.true.895, %if.end.892
  %424 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8
  %cmp903 = icmp ne %struct.rtx_def* %424, null
  br i1 %cmp903, label %if.then.905, label %if.end.930

if.then.905:                                      ; preds = %if.end.902
  store i32 0, i32* %i, align 4
  br label %for.cond.906

for.cond.906:                                     ; preds = %for.inc.927, %if.then.905
  %425 = load i32, i32* %i, align 4
  %426 = load i32, i32* @n_earlyclobbers, align 4
  %cmp907 = icmp slt i32 %425, %426
  br i1 %cmp907, label %for.body.909, label %for.end.929

for.body.909:                                     ; preds = %for.cond.906
  %427 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8
  %428 = load i32, i32* %i, align 4
  %idxprom910 = sext i32 %428 to i64
  %arrayidx911 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @reload_earlyclobbers, i32 0, i64 %idxprom910
  %429 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx911, align 8
  %call912 = call i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %427, %struct.rtx_def* %429)
  %tobool913 = icmp ne i32 %call912, 0
  br i1 %tobool913, label %if.then.914, label %if.end.926

if.then.914:                                      ; preds = %for.body.909
  %430 = load i32, i32* %r, align 4
  %idxprom915 = sext i32 %430 to i64
  %arrayidx916 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom915
  %optional917 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx916, i32 0, i32 18
  %bf.load918 = load i8, i8* %optional917, align 8
  %bf.clear919 = and i8 %bf.load918, 1
  %bf.cast920 = zext i8 %bf.clear919 to i32
  %tobool921 = icmp ne i32 %bf.cast920, 0
  br i1 %tobool921, label %if.end.925, label %if.then.922

if.then.922:                                      ; preds = %if.then.914
  %431 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8
  %432 = load i32, i32* %r, align 4
  %idxprom923 = sext i32 %432 to i64
  %arrayidx924 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i32 0, i64 %idxprom923
  store %struct.rtx_def* %431, %struct.rtx_def** %arrayidx924, align 8
  br label %if.end.925

if.end.925:                                       ; preds = %if.then.922, %if.then.914
  store %struct.rtx_def* null, %struct.rtx_def** %equiv, align 8
  br label %for.end.929

if.end.926:                                       ; preds = %for.body.909
  br label %for.inc.927

for.inc.927:                                      ; preds = %if.end.926
  %433 = load i32, i32* %i, align 4
  %inc928 = add nsw i32 %433, 1
  store i32 %inc928, i32* %i, align 4
  br label %for.cond.906

for.end.929:                                      ; preds = %if.end.925, %for.cond.906
  br label %if.end.930

if.end.930:                                       ; preds = %for.end.929, %if.end.902
  %434 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8
  %cmp931 = icmp ne %struct.rtx_def* %434, null
  br i1 %cmp931, label %if.then.933, label %if.end.982

if.then.933:                                      ; preds = %if.end.930
  %435 = load i32, i32* %regno829, align 4
  %436 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %437 = load i32, i32* %r, align 4
  %idxprom934 = sext i32 %437 to i64
  %arrayidx935 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom934
  %mode936 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx935, i32 0, i32 5
  %438 = load i32, i32* %mode936, align 4
  %call937 = call i32 @regno_clobbered_p(i32 %435, %struct.rtx_def* %436, i32 %438, i32 0)
  %tobool938 = icmp ne i32 %call937, 0
  br i1 %tobool938, label %if.then.939, label %if.else.955

if.then.939:                                      ; preds = %if.then.933
  %439 = load i32, i32* %r, align 4
  %idxprom940 = sext i32 %439 to i64
  %arrayidx941 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom940
  %when_needed942 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx941, i32 0, i32 17
  %440 = load i32, i32* %when_needed942, align 4
  switch i32 %440, label %sw.default [
    i32 10, label %sw.bb
    i32 4, label %sw.bb
    i32 3, label %sw.bb
    i32 8, label %sw.bb
    i32 9, label %sw.bb.943
    i32 0, label %sw.bb.943
    i32 7, label %sw.bb.943
  ]

sw.bb:                                            ; preds = %if.then.939, %if.then.939, %if.then.939, %if.then.939
  br label %sw.epilog

sw.bb.943:                                        ; preds = %if.then.939, %if.then.939, %if.then.939
  %441 = load i32, i32* %r, align 4
  %idxprom944 = sext i32 %441 to i64
  %arrayidx945 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom944
  %optional946 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx945, i32 0, i32 18
  %bf.load947 = load i8, i8* %optional946, align 8
  %bf.clear948 = and i8 %bf.load947, 1
  %bf.cast949 = zext i8 %bf.clear948 to i32
  %tobool950 = icmp ne i32 %bf.cast949, 0
  br i1 %tobool950, label %if.end.954, label %if.then.951

if.then.951:                                      ; preds = %sw.bb.943
  %442 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8
  %443 = load i32, i32* %r, align 4
  %idxprom952 = sext i32 %443 to i64
  %arrayidx953 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i32 0, i64 %idxprom952
  store %struct.rtx_def* %442, %struct.rtx_def** %arrayidx953, align 8
  br label %if.end.954

if.end.954:                                       ; preds = %if.then.951, %sw.bb.943
  br label %sw.default

sw.default:                                       ; preds = %if.then.939, %if.end.954
  store %struct.rtx_def* null, %struct.rtx_def** %equiv, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  br label %if.end.981

if.else.955:                                      ; preds = %if.then.933
  %444 = load i32, i32* %regno829, align 4
  %445 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %446 = load i32, i32* %r, align 4
  %idxprom956 = sext i32 %446 to i64
  %arrayidx957 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom956
  %mode958 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx957, i32 0, i32 5
  %447 = load i32, i32* %mode958, align 4
  %call959 = call i32 @regno_clobbered_p(i32 %444, %struct.rtx_def* %445, i32 %447, i32 1)
  %tobool960 = icmp ne i32 %call959, 0
  br i1 %tobool960, label %if.then.961, label %if.end.980

if.then.961:                                      ; preds = %if.else.955
  %448 = load i32, i32* %r, align 4
  %idxprom962 = sext i32 %448 to i64
  %arrayidx963 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom962
  %when_needed964 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx963, i32 0, i32 17
  %449 = load i32, i32* %when_needed964, align 4
  switch i32 %449, label %sw.default.978 [
    i32 10, label %sw.bb.965
    i32 4, label %sw.bb.965
    i32 3, label %sw.bb.965
    i32 8, label %sw.bb.965
    i32 7, label %sw.bb.965
    i32 0, label %sw.bb.965
    i32 9, label %sw.bb.966
  ]

sw.bb.965:                                        ; preds = %if.then.961, %if.then.961, %if.then.961, %if.then.961, %if.then.961, %if.then.961
  br label %sw.epilog.979

sw.bb.966:                                        ; preds = %if.then.961
  %450 = load i32, i32* %r, align 4
  %idxprom967 = sext i32 %450 to i64
  %arrayidx968 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom967
  %optional969 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx968, i32 0, i32 18
  %bf.load970 = load i8, i8* %optional969, align 8
  %bf.clear971 = and i8 %bf.load970, 1
  %bf.cast972 = zext i8 %bf.clear971 to i32
  %tobool973 = icmp ne i32 %bf.cast972, 0
  br i1 %tobool973, label %if.end.977, label %if.then.974

if.then.974:                                      ; preds = %sw.bb.966
  %451 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8
  %452 = load i32, i32* %r, align 4
  %idxprom975 = sext i32 %452 to i64
  %arrayidx976 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i32 0, i64 %idxprom975
  store %struct.rtx_def* %451, %struct.rtx_def** %arrayidx976, align 8
  br label %if.end.977

if.end.977:                                       ; preds = %if.then.974, %sw.bb.966
  br label %sw.default.978

sw.default.978:                                   ; preds = %if.then.961, %if.end.977
  store %struct.rtx_def* null, %struct.rtx_def** %equiv, align 8
  br label %sw.epilog.979

sw.epilog.979:                                    ; preds = %sw.default.978, %sw.bb.965
  br label %if.end.980

if.end.980:                                       ; preds = %sw.epilog.979, %if.else.955
  br label %if.end.981

if.end.981:                                       ; preds = %if.end.980, %sw.epilog
  br label %if.end.982

if.end.982:                                       ; preds = %if.end.981, %if.end.930
  %453 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8
  %cmp983 = icmp ne %struct.rtx_def* %453, null
  br i1 %cmp983, label %land.lhs.true.985, label %if.end.1117

land.lhs.true.985:                                ; preds = %if.end.982
  %454 = load i32, i32* %regno829, align 4
  %cmp986 = icmp ne i32 %454, 6
  br i1 %cmp986, label %if.then.990, label %lor.lhs.false.988

lor.lhs.false.988:                                ; preds = %land.lhs.true.985
  %455 = load i32, i32* @frame_pointer_needed, align 4
  %tobool989 = icmp ne i32 %455, 0
  br i1 %tobool989, label %if.end.1117, label %if.then.990

if.then.990:                                      ; preds = %lor.lhs.false.988, %land.lhs.true.985
  %456 = load i32, i32* %regno829, align 4
  %cmp992 = icmp sge i32 %456, 8
  br i1 %cmp992, label %land.lhs.true.994, label %lor.lhs.false.997

land.lhs.true.994:                                ; preds = %if.then.990
  %457 = load i32, i32* %regno829, align 4
  %cmp995 = icmp sle i32 %457, 15
  br i1 %cmp995, label %cond.true.1015, label %lor.lhs.false.997

lor.lhs.false.997:                                ; preds = %land.lhs.true.994, %if.then.990
  %458 = load i32, i32* %regno829, align 4
  %cmp998 = icmp sge i32 %458, 21
  br i1 %cmp998, label %land.lhs.true.1000, label %lor.lhs.false.1003

land.lhs.true.1000:                               ; preds = %lor.lhs.false.997
  %459 = load i32, i32* %regno829, align 4
  %cmp1001 = icmp sle i32 %459, 28
  br i1 %cmp1001, label %cond.true.1015, label %lor.lhs.false.1003

lor.lhs.false.1003:                               ; preds = %land.lhs.true.1000, %lor.lhs.false.997
  %460 = load i32, i32* %regno829, align 4
  %cmp1004 = icmp sge i32 %460, 45
  br i1 %cmp1004, label %land.lhs.true.1006, label %lor.lhs.false.1009

land.lhs.true.1006:                               ; preds = %lor.lhs.false.1003
  %461 = load i32, i32* %regno829, align 4
  %cmp1007 = icmp sle i32 %461, 52
  br i1 %cmp1007, label %cond.true.1015, label %lor.lhs.false.1009

lor.lhs.false.1009:                               ; preds = %land.lhs.true.1006, %lor.lhs.false.1003
  %462 = load i32, i32* %regno829, align 4
  %cmp1010 = icmp sge i32 %462, 29
  br i1 %cmp1010, label %land.lhs.true.1012, label %cond.false.1033

land.lhs.true.1012:                               ; preds = %lor.lhs.false.1009
  %463 = load i32, i32* %regno829, align 4
  %cmp1013 = icmp sle i32 %463, 36
  br i1 %cmp1013, label %cond.true.1015, label %cond.false.1033

cond.true.1015:                                   ; preds = %land.lhs.true.1012, %land.lhs.true.1006, %land.lhs.true.1000, %land.lhs.true.994
  %464 = load i32, i32* %r, align 4
  %idxprom1016 = sext i32 %464 to i64
  %arrayidx1017 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1016
  %mode1018 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1017, i32 0, i32 5
  %465 = load i32, i32* %mode1018, align 4
  %idxprom1019 = sext i32 %465 to i64
  %arrayidx1020 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1019
  %466 = load i32, i32* %arrayidx1020, align 4
  %cmp1021 = icmp eq i32 %466, 5
  br i1 %cmp1021, label %lor.end.1031, label %lor.rhs.1023

lor.rhs.1023:                                     ; preds = %cond.true.1015
  %467 = load i32, i32* %r, align 4
  %idxprom1024 = sext i32 %467 to i64
  %arrayidx1025 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1024
  %mode1026 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1025, i32 0, i32 5
  %468 = load i32, i32* %mode1026, align 4
  %idxprom1027 = sext i32 %468 to i64
  %arrayidx1028 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1027
  %469 = load i32, i32* %arrayidx1028, align 4
  %cmp1029 = icmp eq i32 %469, 6
  br label %lor.end.1031

lor.end.1031:                                     ; preds = %lor.rhs.1023, %cond.true.1015
  %470 = phi i1 [ true, %cond.true.1015 ], [ %cmp1029, %lor.rhs.1023 ]
  %cond1032 = select i1 %470, i32 2, i32 1
  br label %cond.end.1073

cond.false.1033:                                  ; preds = %land.lhs.true.1012, %lor.lhs.false.1009
  %471 = load i32, i32* %r, align 4
  %idxprom1034 = sext i32 %471 to i64
  %arrayidx1035 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1034
  %mode1036 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1035, i32 0, i32 5
  %472 = load i32, i32* %mode1036, align 4
  %cmp1037 = icmp eq i32 %472, 18
  br i1 %cmp1037, label %cond.true.1039, label %cond.false.1043

cond.true.1039:                                   ; preds = %cond.false.1033
  %473 = load i32, i32* @target_flags, align 4
  %and1040 = and i32 %473, 33554432
  %tobool1041 = icmp ne i32 %and1040, 0
  %cond1042 = select i1 %tobool1041, i32 2, i32 3
  br label %cond.end.1071

cond.false.1043:                                  ; preds = %cond.false.1033
  %474 = load i32, i32* %r, align 4
  %idxprom1044 = sext i32 %474 to i64
  %arrayidx1045 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1044
  %mode1046 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1045, i32 0, i32 5
  %475 = load i32, i32* %mode1046, align 4
  %cmp1047 = icmp eq i32 %475, 24
  br i1 %cmp1047, label %cond.true.1049, label %cond.false.1053

cond.true.1049:                                   ; preds = %cond.false.1043
  %476 = load i32, i32* @target_flags, align 4
  %and1050 = and i32 %476, 33554432
  %tobool1051 = icmp ne i32 %and1050, 0
  %cond1052 = select i1 %tobool1051, i32 4, i32 6
  br label %cond.end.1069

cond.false.1053:                                  ; preds = %cond.false.1043
  %477 = load i32, i32* %r, align 4
  %idxprom1054 = sext i32 %477 to i64
  %arrayidx1055 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1054
  %mode1056 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1055, i32 0, i32 5
  %478 = load i32, i32* %mode1056, align 4
  %idxprom1057 = sext i32 %478 to i64
  %arrayidx1058 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1057
  %479 = load i8, i8* %arrayidx1058, align 1
  %conv1059 = zext i8 %479 to i32
  %480 = load i32, i32* @target_flags, align 4
  %and1060 = and i32 %480, 33554432
  %tobool1061 = icmp ne i32 %and1060, 0
  %cond1062 = select i1 %tobool1061, i32 8, i32 4
  %add1063 = add nsw i32 %conv1059, %cond1062
  %sub1064 = sub nsw i32 %add1063, 1
  %481 = load i32, i32* @target_flags, align 4
  %and1065 = and i32 %481, 33554432
  %tobool1066 = icmp ne i32 %and1065, 0
  %cond1067 = select i1 %tobool1066, i32 8, i32 4
  %div1068 = sdiv i32 %sub1064, %cond1067
  br label %cond.end.1069

cond.end.1069:                                    ; preds = %cond.false.1053, %cond.true.1049
  %cond1070 = phi i32 [ %cond1052, %cond.true.1049 ], [ %div1068, %cond.false.1053 ]
  br label %cond.end.1071

cond.end.1071:                                    ; preds = %cond.end.1069, %cond.true.1039
  %cond1072 = phi i32 [ %cond1042, %cond.true.1039 ], [ %cond1070, %cond.end.1069 ]
  br label %cond.end.1073

cond.end.1073:                                    ; preds = %cond.end.1071, %lor.end.1031
  %cond1074 = phi i32 [ %cond1032, %lor.end.1031 ], [ %cond1072, %cond.end.1071 ]
  store i32 %cond1074, i32* %nr991, align 4
  %482 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8
  %483 = load i32, i32* %r, align 4
  %idxprom1076 = sext i32 %483 to i64
  %arrayidx1077 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1076
  %reg_rtx1078 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1077, i32 0, i32 11
  store %struct.rtx_def* %482, %struct.rtx_def** %reg_rtx1078, align 8
  %484 = load i32, i32* %r, align 4
  %idxprom1079 = sext i32 %484 to i64
  %arrayidx1080 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i32 0, i64 %idxprom1079
  store i8 1, i8* %arrayidx1080, align 1
  %485 = load i64, i64* @reg_reloaded_valid, align 8
  %486 = load i32, i32* %regno829, align 4
  %sh_prom1081 = zext i32 %486 to i64
  %shl1082 = shl i64 1, %sh_prom1081
  %and1083 = and i64 %485, %shl1082
  %tobool1084 = icmp ne i64 %and1083, 0
  br i1 %tobool1084, label %if.end.1088, label %if.then.1085

if.then.1085:                                     ; preds = %cond.end.1073
  %487 = load i32, i32* %regno829, align 4
  %idxprom1086 = sext i32 %487 to i64
  %arrayidx1087 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i32 0, i64 %idxprom1086
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx1087, align 8
  br label %if.end.1088

if.end.1088:                                      ; preds = %if.then.1085, %cond.end.1073
  store i32 0, i32* %k1075, align 4
  br label %for.cond.1089

for.cond.1089:                                    ; preds = %for.inc.1114, %if.end.1088
  %488 = load i32, i32* %k1075, align 4
  %489 = load i32, i32* %nr991, align 4
  %cmp1090 = icmp slt i32 %488, %489
  br i1 %cmp1090, label %for.body.1092, label %for.end.1116

for.body.1092:                                    ; preds = %for.cond.1089
  %490 = load i32, i32* %regno829, align 4
  %491 = load i32, i32* %k1075, align 4
  %add1093 = add nsw i32 %490, %491
  %idxprom1094 = sext i32 %add1093 to i64
  %arrayidx1095 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_reg_order, i32 0, i64 %idxprom1094
  %492 = load i16, i16* %arrayidx1095, align 2
  %conv1096 = sext i16 %492 to i32
  store i32 %conv1096, i32* %i, align 4
  %493 = load i32, i32* %i, align 4
  %cmp1097 = icmp sge i32 %493, 0
  br i1 %cmp1097, label %if.then.1099, label %if.end.1113

if.then.1099:                                     ; preds = %for.body.1092
  %494 = load i32, i32* %regno829, align 4
  %495 = load i32, i32* %r, align 4
  %idxprom1100 = sext i32 %495 to i64
  %arrayidx1101 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1100
  %opnum1102 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1101, i32 0, i32 12
  %496 = load i32, i32* %opnum1102, align 4
  %497 = load i32, i32* %r, align 4
  %idxprom1103 = sext i32 %497 to i64
  %arrayidx1104 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1103
  %when_needed1105 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1104, i32 0, i32 17
  %498 = load i32, i32* %when_needed1105, align 4
  %499 = load i32, i32* %r, align 4
  %idxprom1106 = sext i32 %499 to i64
  %arrayidx1107 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1106
  %mode1108 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1107, i32 0, i32 5
  %500 = load i32, i32* %mode1108, align 4
  call void @mark_reload_reg_in_use(i32 %494, i32 %496, i32 %498, i32 %500)
  %501 = load i32, i32* %regno829, align 4
  %502 = load i32, i32* %k1075, align 4
  %add1109 = add nsw i32 %501, %502
  %sh_prom1110 = zext i32 %add1109 to i64
  %shl1111 = shl i64 1, %sh_prom1110
  %503 = load i64, i64* @reload_reg_used_for_inherit, align 8
  %or1112 = or i64 %503, %shl1111
  store i64 %or1112, i64* @reload_reg_used_for_inherit, align 8
  br label %if.end.1113

if.end.1113:                                      ; preds = %if.then.1099, %for.body.1092
  br label %for.inc.1114

for.inc.1114:                                     ; preds = %if.end.1113
  %504 = load i32, i32* %k1075, align 4
  %inc1115 = add nsw i32 %504, 1
  store i32 %inc1115, i32* %k1075, align 4
  br label %for.cond.1089

for.end.1116:                                     ; preds = %for.cond.1089
  br label %if.end.1117

if.end.1117:                                      ; preds = %for.end.1116, %lor.lhs.false.988, %if.end.982
  br label %if.end.1118

if.end.1118:                                      ; preds = %if.end.1117, %if.end.819
  %505 = load i32, i32* %r, align 4
  %idxprom1119 = sext i32 %505 to i64
  %arrayidx1120 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1119
  %reg_rtx1121 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1120, i32 0, i32 11
  %506 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1121, align 8
  %cmp1122 = icmp ne %struct.rtx_def* %506, null
  br i1 %cmp1122, label %if.then.1133, label %lor.lhs.false.1124

lor.lhs.false.1124:                               ; preds = %if.end.1118
  %507 = load i32, i32* %r, align 4
  %idxprom1125 = sext i32 %507 to i64
  %arrayidx1126 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1125
  %optional1127 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1126, i32 0, i32 18
  %bf.load1128 = load i8, i8* %optional1127, align 8
  %bf.clear1129 = and i8 %bf.load1128, 1
  %bf.cast1130 = zext i8 %bf.clear1129 to i32
  %cmp1131 = icmp ne i32 %bf.cast1130, 0
  br i1 %cmp1131, label %if.then.1133, label %if.end.1134

if.then.1133:                                     ; preds = %lor.lhs.false.1124, %if.end.1118
  br label %for.inc.1135

if.end.1134:                                      ; preds = %lor.lhs.false.1124
  br label %for.inc.1135

for.inc.1135:                                     ; preds = %if.end.1134, %if.then.1133, %if.then.98, %if.then.54
  %508 = load i32, i32* %j, align 4
  %inc1136 = add nsw i32 %508, 1
  store i32 %inc1136, i32* %j, align 4
  br label %for.cond.36

for.end.1137:                                     ; preds = %for.cond.36
  store i32 0, i32* %j, align 4
  br label %for.cond.1138

for.cond.1138:                                    ; preds = %for.inc.1190, %for.end.1137
  %509 = load i32, i32* %j, align 4
  %510 = load i32, i32* @n_reloads, align 4
  %cmp1139 = icmp slt i32 %509, %510
  br i1 %cmp1139, label %for.body.1141, label %for.end.1192

for.body.1141:                                    ; preds = %for.cond.1138
  %511 = load i32, i32* %j, align 4
  %idxprom1143 = sext i32 %511 to i64
  %arrayidx1144 = getelementptr inbounds [180 x i16], [180 x i16]* @reload_order, i32 0, i64 %idxprom1143
  %512 = load i16, i16* %arrayidx1144, align 2
  %conv1145 = sext i16 %512 to i32
  store i32 %conv1145, i32* %r1142, align 4
  %513 = load i32, i32* %r1142, align 4
  %idxprom1146 = sext i32 %513 to i64
  %arrayidx1147 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1146
  %out1148 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1147, i32 0, i32 1
  %514 = load %struct.rtx_def*, %struct.rtx_def** %out1148, align 8
  %cmp1149 = icmp eq %struct.rtx_def* %514, null
  br i1 %cmp1149, label %land.lhs.true.1151, label %if.end.1167

land.lhs.true.1151:                               ; preds = %for.body.1141
  %515 = load i32, i32* %r1142, align 4
  %idxprom1152 = sext i32 %515 to i64
  %arrayidx1153 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1152
  %in1154 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1153, i32 0, i32 0
  %516 = load %struct.rtx_def*, %struct.rtx_def** %in1154, align 8
  %cmp1155 = icmp eq %struct.rtx_def* %516, null
  br i1 %cmp1155, label %land.lhs.true.1157, label %if.end.1167

land.lhs.true.1157:                               ; preds = %land.lhs.true.1151
  %517 = load i32, i32* %r1142, align 4
  %idxprom1158 = sext i32 %517 to i64
  %arrayidx1159 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1158
  %secondary_p1160 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1159, i32 0, i32 18
  %bf.load1161 = load i8, i8* %secondary_p1160, align 8
  %bf.lshr1162 = lshr i8 %bf.load1161, 2
  %bf.clear1163 = and i8 %bf.lshr1162, 1
  %bf.cast1164 = zext i8 %bf.clear1163 to i32
  %tobool1165 = icmp ne i32 %bf.cast1164, 0
  br i1 %tobool1165, label %if.end.1167, label %if.then.1166

if.then.1166:                                     ; preds = %land.lhs.true.1157
  br label %for.inc.1190

if.end.1167:                                      ; preds = %land.lhs.true.1157, %land.lhs.true.1151, %for.body.1141
  %518 = load i32, i32* %r1142, align 4
  %idxprom1168 = sext i32 %518 to i64
  %arrayidx1169 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1168
  %reg_rtx1170 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1169, i32 0, i32 11
  %519 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1170, align 8
  %cmp1171 = icmp ne %struct.rtx_def* %519, null
  br i1 %cmp1171, label %if.then.1181, label %lor.lhs.false.1173

lor.lhs.false.1173:                               ; preds = %if.end.1167
  %520 = load i32, i32* %r1142, align 4
  %idxprom1174 = sext i32 %520 to i64
  %arrayidx1175 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1174
  %optional1176 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1175, i32 0, i32 18
  %bf.load1177 = load i8, i8* %optional1176, align 8
  %bf.clear1178 = and i8 %bf.load1177, 1
  %bf.cast1179 = zext i8 %bf.clear1178 to i32
  %tobool1180 = icmp ne i32 %bf.cast1179, 0
  br i1 %tobool1180, label %if.then.1181, label %if.end.1182

if.then.1181:                                     ; preds = %lor.lhs.false.1173, %if.end.1167
  br label %for.inc.1190

if.end.1182:                                      ; preds = %lor.lhs.false.1173
  %521 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %522 = load i32, i32* %r1142, align 4
  %523 = load i32, i32* %j, align 4
  %524 = load i32, i32* @n_reloads, align 4
  %sub1183 = sub nsw i32 %524, 1
  %cmp1184 = icmp eq i32 %523, %sub1183
  %conv1185 = zext i1 %cmp1184 to i32
  %call1186 = call i32 @allocate_reload_reg(%struct.insn_chain* %521, i32 %522, i32 %conv1185)
  %tobool1187 = icmp ne i32 %call1186, 0
  br i1 %tobool1187, label %if.end.1189, label %if.then.1188

if.then.1188:                                     ; preds = %if.end.1182
  br label %for.end.1192

if.end.1189:                                      ; preds = %if.end.1182
  br label %for.inc.1190

for.inc.1190:                                     ; preds = %if.end.1189, %if.then.1181, %if.then.1166
  %525 = load i32, i32* %j, align 4
  %inc1191 = add nsw i32 %525, 1
  store i32 %inc1191, i32* %j, align 4
  br label %for.cond.1138

for.end.1192:                                     ; preds = %if.then.1188, %for.cond.1138
  %526 = load i32, i32* %j, align 4
  %527 = load i32, i32* @n_reloads, align 4
  %cmp1193 = icmp eq i32 %526, %527
  br i1 %cmp1193, label %if.then.1195, label %if.end.1196

if.then.1195:                                     ; preds = %for.end.1192
  store i32 1, i32* %win, align 4
  br label %for.end.1198

if.end.1196:                                      ; preds = %for.end.1192
  br label %for.inc.1197

for.inc.1197:                                     ; preds = %if.end.1196
  %528 = load i32, i32* %inheritance, align 4
  %dec = add nsw i32 %528, -1
  store i32 %dec, i32* %inheritance, align 4
  br label %for.cond.32

for.end.1198:                                     ; preds = %if.then.1195, %for.cond.32
  %529 = load i32, i32* %win, align 4
  %tobool1199 = icmp ne i32 %529, 0
  br i1 %tobool1199, label %if.end.1261, label %if.then.1200

if.then.1200:                                     ; preds = %for.end.1198
  %530 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %arraydecay1201 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* %save_reload_reg_rtx, i32 0, i32 0
  call void @choose_reload_regs_init(%struct.insn_chain* %530, %struct.rtx_def** %arraydecay1201)
  %531 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %n_reloads = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %531, i32 0, i32 8
  %532 = load i32, i32* %n_reloads, align 4
  %533 = load i32, i32* @n_reloads, align 4
  %cmp1202 = icmp ne i32 %532, %533
  br i1 %cmp1202, label %if.then.1204, label %if.end.1205

if.then.1204:                                     ; preds = %if.then.1200
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 5862, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.choose_reload_regs, i32 0, i32 0)) #5
  unreachable

if.end.1205:                                      ; preds = %if.then.1200
  store i32 0, i32* %i, align 4
  br label %for.cond.1206

for.cond.1206:                                    ; preds = %for.inc.1258, %if.end.1205
  %534 = load i32, i32* %i, align 4
  %535 = load i32, i32* @n_reloads, align 4
  %cmp1207 = icmp slt i32 %534, %535
  br i1 %cmp1207, label %for.body.1209, label %for.end.1260

for.body.1209:                                    ; preds = %for.cond.1206
  %536 = load i32, i32* %i, align 4
  %idxprom1210 = sext i32 %536 to i64
  %537 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %rld = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %537, i32 0, i32 7
  %538 = load %struct.reload*, %struct.reload** %rld, align 8
  %arrayidx1211 = getelementptr inbounds %struct.reload, %struct.reload* %538, i64 %idxprom1210
  %regno1212 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1211, i32 0, i32 10
  %539 = load i32, i32* %regno1212, align 4
  %cmp1213 = icmp slt i32 %539, 0
  br i1 %cmp1213, label %if.then.1222, label %lor.lhs.false.1215

lor.lhs.false.1215:                               ; preds = %for.body.1209
  %540 = load i32, i32* %i, align 4
  %idxprom1216 = sext i32 %540 to i64
  %541 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %rld1217 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %541, i32 0, i32 7
  %542 = load %struct.reload*, %struct.reload** %rld1217, align 8
  %arrayidx1218 = getelementptr inbounds %struct.reload, %struct.reload* %542, i64 %idxprom1216
  %reg_rtx1219 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1218, i32 0, i32 11
  %543 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1219, align 8
  %cmp1220 = icmp ne %struct.rtx_def* %543, null
  br i1 %cmp1220, label %if.then.1222, label %if.end.1223

if.then.1222:                                     ; preds = %lor.lhs.false.1215, %for.body.1209
  br label %for.inc.1258

if.end.1223:                                      ; preds = %lor.lhs.false.1215
  %544 = load i32, i32* %i, align 4
  %idxprom1224 = sext i32 %544 to i64
  %545 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %rld1225 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %545, i32 0, i32 7
  %546 = load %struct.reload*, %struct.reload** %rld1225, align 8
  %arrayidx1226 = getelementptr inbounds %struct.reload, %struct.reload* %546, i64 %idxprom1224
  %when_needed1227 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1226, i32 0, i32 17
  %547 = load i32, i32* %when_needed1227, align 4
  %548 = load i32, i32* %i, align 4
  %idxprom1228 = sext i32 %548 to i64
  %arrayidx1229 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1228
  %when_needed1230 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1229, i32 0, i32 17
  %549 = load i32, i32* %when_needed1230, align 4
  %cmp1231 = icmp ne i32 %547, %549
  br i1 %cmp1231, label %if.then.1233, label %if.end.1234

if.then.1233:                                     ; preds = %if.end.1223
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 5869, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.choose_reload_regs, i32 0, i32 0)) #5
  unreachable

if.end.1234:                                      ; preds = %if.end.1223
  store i32 0, i32* %j, align 4
  br label %for.cond.1235

for.cond.1235:                                    ; preds = %for.inc.1255, %if.end.1234
  %550 = load i32, i32* %j, align 4
  %551 = load i32, i32* @n_spills, align 4
  %cmp1236 = icmp slt i32 %550, %551
  br i1 %cmp1236, label %for.body.1238, label %for.end.1257

for.body.1238:                                    ; preds = %for.cond.1235
  %552 = load i32, i32* %j, align 4
  %idxprom1239 = sext i32 %552 to i64
  %arrayidx1240 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_regs, i32 0, i64 %idxprom1239
  %553 = load i16, i16* %arrayidx1240, align 2
  %conv1241 = sext i16 %553 to i32
  %554 = load i32, i32* %i, align 4
  %idxprom1242 = sext i32 %554 to i64
  %555 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %rld1243 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %555, i32 0, i32 7
  %556 = load %struct.reload*, %struct.reload** %rld1243, align 8
  %arrayidx1244 = getelementptr inbounds %struct.reload, %struct.reload* %556, i64 %idxprom1242
  %regno1245 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1244, i32 0, i32 10
  %557 = load i32, i32* %regno1245, align 4
  %cmp1246 = icmp eq i32 %conv1241, %557
  br i1 %cmp1246, label %if.then.1248, label %if.end.1254

if.then.1248:                                     ; preds = %for.body.1238
  %558 = load i32, i32* %j, align 4
  %559 = load i32, i32* %i, align 4
  %call1249 = call i32 @set_reload_reg(i32 %558, i32 %559)
  %tobool1250 = icmp ne i32 %call1249, 0
  br i1 %tobool1250, label %if.end.1253, label %if.then.1251

if.then.1251:                                     ; preds = %if.then.1248
  %560 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %insn1252 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %560, i32 0, i32 4
  %561 = load %struct.rtx_def*, %struct.rtx_def** %insn1252, align 8
  %562 = load i32, i32* %i, align 4
  call void @failed_reload(%struct.rtx_def* %561, i32 %562)
  br label %if.end.1253

if.end.1253:                                      ; preds = %if.then.1251, %if.then.1248
  br label %if.end.1254

if.end.1254:                                      ; preds = %if.end.1253, %for.body.1238
  br label %for.inc.1255

for.inc.1255:                                     ; preds = %if.end.1254
  %563 = load i32, i32* %j, align 4
  %inc1256 = add nsw i32 %563, 1
  store i32 %inc1256, i32* %j, align 4
  br label %for.cond.1235

for.end.1257:                                     ; preds = %for.cond.1235
  br label %for.inc.1258

for.inc.1258:                                     ; preds = %for.end.1257, %if.then.1222
  %564 = load i32, i32* %i, align 4
  %inc1259 = add nsw i32 %564, 1
  store i32 %inc1259, i32* %i, align 4
  br label %for.cond.1206

for.end.1260:                                     ; preds = %for.cond.1206
  br label %if.end.1261

if.end.1261:                                      ; preds = %for.end.1260, %for.end.1198
  %565 = load i32, i32* @flag_expensive_optimizations, align 4
  store i32 %565, i32* %pass, align 4
  br label %for.cond.1262

for.cond.1262:                                    ; preds = %for.inc.1373, %if.end.1261
  %566 = load i32, i32* %pass, align 4
  %cmp1263 = icmp sge i32 %566, 0
  br i1 %cmp1263, label %for.body.1265, label %for.end.1375

for.body.1265:                                    ; preds = %for.cond.1262
  store i32 0, i32* %j, align 4
  br label %for.cond.1266

for.cond.1266:                                    ; preds = %for.inc.1370, %for.body.1265
  %567 = load i32, i32* %j, align 4
  %568 = load i32, i32* @n_reloads, align 4
  %cmp1267 = icmp slt i32 %567, %568
  br i1 %cmp1267, label %for.body.1269, label %for.end.1372

for.body.1269:                                    ; preds = %for.cond.1266
  %569 = load i32, i32* %j, align 4
  %idxprom1271 = sext i32 %569 to i64
  %arrayidx1272 = getelementptr inbounds [180 x i16], [180 x i16]* @reload_order, i32 0, i64 %idxprom1271
  %570 = load i16, i16* %arrayidx1272, align 2
  %conv1273 = sext i16 %570 to i32
  store i32 %conv1273, i32* %r1270, align 4
  %571 = load i32, i32* %r1270, align 4
  %idxprom1274 = sext i32 %571 to i64
  %arrayidx1275 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i32 0, i64 %idxprom1274
  %572 = load i8, i8* %arrayidx1275, align 1
  %conv1276 = sext i8 %572 to i32
  %tobool1277 = icmp ne i32 %conv1276, 0
  br i1 %tobool1277, label %land.lhs.true.1278, label %if.else.1287

land.lhs.true.1278:                               ; preds = %for.body.1269
  %573 = load i32, i32* %r1270, align 4
  %idxprom1279 = sext i32 %573 to i64
  %arrayidx1280 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1279
  %reg_rtx1281 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1280, i32 0, i32 11
  %574 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1281, align 8
  %tobool1282 = icmp ne %struct.rtx_def* %574, null
  br i1 %tobool1282, label %if.then.1283, label %if.else.1287

if.then.1283:                                     ; preds = %land.lhs.true.1278
  %575 = load i32, i32* %r1270, align 4
  %idxprom1284 = sext i32 %575 to i64
  %arrayidx1285 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1284
  %reg_rtx1286 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1285, i32 0, i32 11
  %576 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1286, align 8
  store %struct.rtx_def* %576, %struct.rtx_def** %check_reg, align 8
  br label %if.end.1310

if.else.1287:                                     ; preds = %land.lhs.true.1278, %for.body.1269
  %577 = load i32, i32* %r1270, align 4
  %idxprom1288 = sext i32 %577 to i64
  %arrayidx1289 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i32 0, i64 %idxprom1288
  %578 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1289, align 8
  %tobool1290 = icmp ne %struct.rtx_def* %578, null
  br i1 %tobool1290, label %land.lhs.true.1291, label %if.else.1308

land.lhs.true.1291:                               ; preds = %if.else.1287
  %579 = load i32, i32* %r1270, align 4
  %idxprom1292 = sext i32 %579 to i64
  %arrayidx1293 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i32 0, i64 %idxprom1292
  %580 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1293, align 8
  %581 = bitcast %struct.rtx_def* %580 to i32*
  %bf.load1294 = load i32, i32* %581, align 8
  %bf.clear1295 = and i32 %bf.load1294, 65535
  %cmp1296 = icmp eq i32 %bf.clear1295, 61
  br i1 %cmp1296, label %if.then.1305, label %lor.lhs.false.1298

lor.lhs.false.1298:                               ; preds = %land.lhs.true.1291
  %582 = load i32, i32* %r1270, align 4
  %idxprom1299 = sext i32 %582 to i64
  %arrayidx1300 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i32 0, i64 %idxprom1299
  %583 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1300, align 8
  %584 = bitcast %struct.rtx_def* %583 to i32*
  %bf.load1301 = load i32, i32* %584, align 8
  %bf.clear1302 = and i32 %bf.load1301, 65535
  %cmp1303 = icmp eq i32 %bf.clear1302, 63
  br i1 %cmp1303, label %if.then.1305, label %if.else.1308

if.then.1305:                                     ; preds = %lor.lhs.false.1298, %land.lhs.true.1291
  %585 = load i32, i32* %r1270, align 4
  %idxprom1306 = sext i32 %585 to i64
  %arrayidx1307 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i32 0, i64 %idxprom1306
  %586 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1307, align 8
  store %struct.rtx_def* %586, %struct.rtx_def** %check_reg, align 8
  br label %if.end.1309

if.else.1308:                                     ; preds = %lor.lhs.false.1298, %if.else.1287
  br label %for.inc.1370

if.end.1309:                                      ; preds = %if.then.1305
  br label %if.end.1310

if.end.1310:                                      ; preds = %if.end.1309, %if.then.1283
  %587 = load %struct.rtx_def*, %struct.rtx_def** %check_reg, align 8
  %call1311 = call i32 @true_regnum(%struct.rtx_def* %587)
  %588 = load i32, i32* %r1270, align 4
  %idxprom1312 = sext i32 %588 to i64
  %arrayidx1313 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1312
  %mode1314 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1313, i32 0, i32 5
  %589 = load i32, i32* %mode1314, align 4
  %590 = load i32, i32* %r1270, align 4
  %idxprom1315 = sext i32 %590 to i64
  %arrayidx1316 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1315
  %opnum1317 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1316, i32 0, i32 12
  %591 = load i32, i32* %opnum1317, align 4
  %592 = load i32, i32* %r1270, align 4
  %idxprom1318 = sext i32 %592 to i64
  %arrayidx1319 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1318
  %when_needed1320 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1319, i32 0, i32 17
  %593 = load i32, i32* %when_needed1320, align 4
  %594 = load i32, i32* %r1270, align 4
  %idxprom1321 = sext i32 %594 to i64
  %arrayidx1322 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1321
  %in1323 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1322, i32 0, i32 0
  %595 = load %struct.rtx_def*, %struct.rtx_def** %in1323, align 8
  %596 = load i32, i32* %r1270, align 4
  %idxprom1324 = sext i32 %596 to i64
  %arrayidx1325 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i32 0, i64 %idxprom1324
  %597 = load i8, i8* %arrayidx1325, align 1
  %conv1326 = sext i8 %597 to i32
  %tobool1327 = icmp ne i32 %conv1326, 0
  br i1 %tobool1327, label %cond.true.1328, label %cond.false.1332

cond.true.1328:                                   ; preds = %if.end.1310
  %598 = load i32, i32* %r1270, align 4
  %idxprom1329 = sext i32 %598 to i64
  %arrayidx1330 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1329
  %out1331 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1330, i32 0, i32 1
  %599 = load %struct.rtx_def*, %struct.rtx_def** %out1331, align 8
  br label %cond.end.1333

cond.false.1332:                                  ; preds = %if.end.1310
  %600 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  br label %cond.end.1333

cond.end.1333:                                    ; preds = %cond.false.1332, %cond.true.1328
  %cond1334 = phi %struct.rtx_def* [ %599, %cond.true.1328 ], [ %600, %cond.false.1332 ]
  %601 = load i32, i32* %r1270, align 4
  %call1335 = call i32 @free_for_value_p(i32 %call1311, i32 %589, i32 %591, i32 %593, %struct.rtx_def* %595, %struct.rtx_def* %cond1334, i32 %601, i32 1)
  %tobool1336 = icmp ne i32 %call1335, 0
  br i1 %tobool1336, label %if.else.1345, label %if.then.1337

if.then.1337:                                     ; preds = %cond.end.1333
  %602 = load i32, i32* %pass, align 4
  %tobool1338 = icmp ne i32 %602, 0
  br i1 %tobool1338, label %if.then.1339, label %if.end.1340

if.then.1339:                                     ; preds = %if.then.1337
  br label %for.inc.1370

if.end.1340:                                      ; preds = %if.then.1337
  %603 = load i32, i32* %r1270, align 4
  %idxprom1341 = sext i32 %603 to i64
  %arrayidx1342 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i32 0, i64 %idxprom1341
  store i8 0, i8* %arrayidx1342, align 1
  %604 = load i32, i32* %r1270, align 4
  %idxprom1343 = sext i32 %604 to i64
  %arrayidx1344 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i32 0, i64 %idxprom1343
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx1344, align 8
  br label %if.end.1369

if.else.1345:                                     ; preds = %cond.end.1333
  %605 = load i32, i32* %r1270, align 4
  %idxprom1346 = sext i32 %605 to i64
  %arrayidx1347 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1346
  %in1348 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1347, i32 0, i32 0
  %606 = load %struct.rtx_def*, %struct.rtx_def** %in1348, align 8
  %tobool1349 = icmp ne %struct.rtx_def* %606, null
  br i1 %tobool1349, label %land.lhs.true.1350, label %if.end.1368

land.lhs.true.1350:                               ; preds = %if.else.1345
  %607 = load i32, i32* %r1270, align 4
  %idxprom1351 = sext i32 %607 to i64
  %arrayidx1352 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1351
  %out1353 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1352, i32 0, i32 1
  %608 = load %struct.rtx_def*, %struct.rtx_def** %out1353, align 8
  %609 = load i32, i32* %r1270, align 4
  %idxprom1354 = sext i32 %609 to i64
  %arrayidx1355 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1354
  %in1356 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1355, i32 0, i32 0
  %610 = load %struct.rtx_def*, %struct.rtx_def** %in1356, align 8
  %cmp1357 = icmp ne %struct.rtx_def* %608, %610
  br i1 %cmp1357, label %land.lhs.true.1359, label %if.end.1368

land.lhs.true.1359:                               ; preds = %land.lhs.true.1350
  %611 = load i32, i32* %r1270, align 4
  %idxprom1360 = sext i32 %611 to i64
  %arrayidx1361 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1360
  %in1362 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1361, i32 0, i32 0
  %612 = load %struct.rtx_def*, %struct.rtx_def** %in1362, align 8
  %call1363 = call i32 @remove_address_replacements(%struct.rtx_def* %612)
  %tobool1364 = icmp ne i32 %call1363, 0
  br i1 %tobool1364, label %land.lhs.true.1365, label %if.end.1368

land.lhs.true.1365:                               ; preds = %land.lhs.true.1359
  %613 = load i32, i32* %pass, align 4
  %tobool1366 = icmp ne i32 %613, 0
  br i1 %tobool1366, label %if.then.1367, label %if.end.1368

if.then.1367:                                     ; preds = %land.lhs.true.1365
  store i32 2, i32* %pass, align 4
  br label %if.end.1368

if.end.1368:                                      ; preds = %if.then.1367, %land.lhs.true.1365, %land.lhs.true.1359, %land.lhs.true.1350, %if.else.1345
  br label %if.end.1369

if.end.1369:                                      ; preds = %if.end.1368, %if.end.1340
  br label %for.inc.1370

for.inc.1370:                                     ; preds = %if.end.1369, %if.then.1339, %if.else.1308
  %614 = load i32, i32* %j, align 4
  %inc1371 = add nsw i32 %614, 1
  store i32 %inc1371, i32* %j, align 4
  br label %for.cond.1266

for.end.1372:                                     ; preds = %for.cond.1266
  br label %for.inc.1373

for.inc.1373:                                     ; preds = %for.end.1372
  %615 = load i32, i32* %pass, align 4
  %dec1374 = add nsw i32 %615, -1
  store i32 %dec1374, i32* %pass, align 4
  br label %for.cond.1262

for.end.1375:                                     ; preds = %for.cond.1262
  store i32 0, i32* %j, align 4
  br label %for.cond.1376

for.cond.1376:                                    ; preds = %for.inc.1390, %for.end.1375
  %616 = load i32, i32* %j, align 4
  %617 = load i32, i32* @n_reloads, align 4
  %cmp1377 = icmp slt i32 %616, %617
  br i1 %cmp1377, label %for.body.1379, label %for.end.1392

for.body.1379:                                    ; preds = %for.cond.1376
  %618 = load i32, i32* %j, align 4
  %idxprom1380 = sext i32 %618 to i64
  %arrayidx1381 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i32 0, i64 %idxprom1380
  %619 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1381, align 8
  %tobool1382 = icmp ne %struct.rtx_def* %619, null
  br i1 %tobool1382, label %if.then.1383, label %if.end.1389

if.then.1383:                                     ; preds = %for.body.1379
  %620 = load i32, i32* %j, align 4
  %idxprom1384 = sext i32 %620 to i64
  %arrayidx1385 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i32 0, i64 %idxprom1384
  %621 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1385, align 8
  %622 = load i32, i32* %j, align 4
  %idxprom1386 = sext i32 %622 to i64
  %arrayidx1387 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1386
  %in1388 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1387, i32 0, i32 0
  store %struct.rtx_def* %621, %struct.rtx_def** %in1388, align 8
  br label %if.end.1389

if.end.1389:                                      ; preds = %if.then.1383, %for.body.1379
  br label %for.inc.1390

for.inc.1390:                                     ; preds = %if.end.1389
  %623 = load i32, i32* %j, align 4
  %inc1391 = add nsw i32 %623, 1
  store i32 %inc1391, i32* %j, align 4
  br label %for.cond.1376

for.end.1392:                                     ; preds = %for.cond.1376
  store i32 0, i32* %j, align 4
  br label %for.cond.1393

for.cond.1393:                                    ; preds = %for.inc.1463, %for.end.1392
  %624 = load i32, i32* %j, align 4
  %625 = load i32, i32* @n_reloads, align 4
  %cmp1394 = icmp slt i32 %624, %625
  br i1 %cmp1394, label %for.body.1396, label %for.end.1465

for.body.1396:                                    ; preds = %for.cond.1393
  %626 = load i32, i32* %j, align 4
  %idxprom1397 = sext i32 %626 to i64
  %arrayidx1398 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1397
  %reg_rtx1399 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1398, i32 0, i32 11
  %627 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1399, align 8
  %cmp1400 = icmp ne %struct.rtx_def* %627, null
  br i1 %cmp1400, label %land.lhs.true.1402, label %if.end.1462

land.lhs.true.1402:                               ; preds = %for.body.1396
  %628 = load i32, i32* %j, align 4
  %idxprom1403 = sext i32 %628 to i64
  %arrayidx1404 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1403
  %optional1405 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1404, i32 0, i32 18
  %bf.load1406 = load i8, i8* %optional1405, align 8
  %bf.clear1407 = and i8 %bf.load1406, 1
  %bf.cast1408 = zext i8 %bf.clear1407 to i32
  %tobool1409 = icmp ne i32 %bf.cast1408, 0
  br i1 %tobool1409, label %land.lhs.true.1410, label %lor.lhs.false.1414

land.lhs.true.1410:                               ; preds = %land.lhs.true.1402
  %629 = load i32, i32* %j, align 4
  %idxprom1411 = sext i32 %629 to i64
  %arrayidx1412 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i32 0, i64 %idxprom1411
  %630 = load i8, i8* %arrayidx1412, align 1
  %tobool1413 = icmp ne i8 %630, 0
  br i1 %tobool1413, label %lor.lhs.false.1414, label %if.then.1435

lor.lhs.false.1414:                               ; preds = %land.lhs.true.1410, %land.lhs.true.1402
  %631 = load i32, i32* %j, align 4
  %idxprom1415 = sext i32 %631 to i64
  %arrayidx1416 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1415
  %in1417 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1416, i32 0, i32 0
  %632 = load %struct.rtx_def*, %struct.rtx_def** %in1417, align 8
  %cmp1418 = icmp eq %struct.rtx_def* %632, null
  br i1 %cmp1418, label %land.lhs.true.1420, label %if.end.1462

land.lhs.true.1420:                               ; preds = %lor.lhs.false.1414
  %633 = load i32, i32* %j, align 4
  %idxprom1421 = sext i32 %633 to i64
  %arrayidx1422 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1421
  %out1423 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1422, i32 0, i32 1
  %634 = load %struct.rtx_def*, %struct.rtx_def** %out1423, align 8
  %cmp1424 = icmp eq %struct.rtx_def* %634, null
  br i1 %cmp1424, label %land.lhs.true.1426, label %if.end.1462

land.lhs.true.1426:                               ; preds = %land.lhs.true.1420
  %635 = load i32, i32* %j, align 4
  %idxprom1427 = sext i32 %635 to i64
  %arrayidx1428 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1427
  %secondary_p1429 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1428, i32 0, i32 18
  %bf.load1430 = load i8, i8* %secondary_p1429, align 8
  %bf.lshr1431 = lshr i8 %bf.load1430, 2
  %bf.clear1432 = and i8 %bf.lshr1431, 1
  %bf.cast1433 = zext i8 %bf.clear1432 to i32
  %tobool1434 = icmp ne i32 %bf.cast1433, 0
  br i1 %tobool1434, label %if.end.1462, label %if.then.1435

if.then.1435:                                     ; preds = %land.lhs.true.1426, %land.lhs.true.1410
  %636 = load i32, i32* %j, align 4
  %idxprom1437 = sext i32 %636 to i64
  %arrayidx1438 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1437
  %reg_rtx1439 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1438, i32 0, i32 11
  %637 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1439, align 8
  %call1440 = call i32 @true_regnum(%struct.rtx_def* %637)
  store i32 %call1440, i32* %regno1436, align 4
  %638 = load i32, i32* %regno1436, align 4
  %idxprom1441 = sext i32 %638 to i64
  %arrayidx1442 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_reg_order, i32 0, i64 %idxprom1441
  %639 = load i16, i16* %arrayidx1442, align 2
  %conv1443 = sext i16 %639 to i32
  %cmp1444 = icmp sge i32 %conv1443, 0
  br i1 %cmp1444, label %if.then.1446, label %if.end.1456

if.then.1446:                                     ; preds = %if.then.1435
  %640 = load i32, i32* %regno1436, align 4
  %641 = load i32, i32* %j, align 4
  %idxprom1447 = sext i32 %641 to i64
  %arrayidx1448 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1447
  %opnum1449 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1448, i32 0, i32 12
  %642 = load i32, i32* %opnum1449, align 4
  %643 = load i32, i32* %j, align 4
  %idxprom1450 = sext i32 %643 to i64
  %arrayidx1451 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1450
  %when_needed1452 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1451, i32 0, i32 17
  %644 = load i32, i32* %when_needed1452, align 4
  %645 = load i32, i32* %j, align 4
  %idxprom1453 = sext i32 %645 to i64
  %arrayidx1454 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1453
  %mode1455 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1454, i32 0, i32 5
  %646 = load i32, i32* %mode1455, align 4
  call void @clear_reload_reg_in_use(i32 %640, i32 %642, i32 %644, i32 %646)
  br label %if.end.1456

if.end.1456:                                      ; preds = %if.then.1446, %if.then.1435
  %647 = load i32, i32* %j, align 4
  %idxprom1457 = sext i32 %647 to i64
  %arrayidx1458 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1457
  %reg_rtx1459 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1458, i32 0, i32 11
  store %struct.rtx_def* null, %struct.rtx_def** %reg_rtx1459, align 8
  %648 = load i32, i32* %j, align 4
  %idxprom1460 = sext i32 %648 to i64
  %arrayidx1461 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i32 0, i64 %idxprom1460
  store i32 -1, i32* %arrayidx1461, align 4
  br label %if.end.1462

if.end.1462:                                      ; preds = %if.end.1456, %land.lhs.true.1426, %land.lhs.true.1420, %lor.lhs.false.1414, %for.body.1396
  br label %for.inc.1463

for.inc.1463:                                     ; preds = %if.end.1462
  %649 = load i32, i32* %j, align 4
  %inc1464 = add nsw i32 %649, 1
  store i32 %inc1464, i32* %j, align 4
  br label %for.cond.1393

for.end.1465:                                     ; preds = %for.cond.1393
  store i32 0, i32* %j, align 4
  br label %for.cond.1466

for.cond.1466:                                    ; preds = %for.inc.1712, %for.end.1465
  %650 = load i32, i32* %j, align 4
  %651 = load i32, i32* @n_reloads, align 4
  %cmp1467 = icmp slt i32 %650, %651
  br i1 %cmp1467, label %for.body.1469, label %for.end.1714

for.body.1469:                                    ; preds = %for.cond.1466
  %652 = load i32, i32* %j, align 4
  %idxprom1471 = sext i32 %652 to i64
  %arrayidx1472 = getelementptr inbounds [180 x i16], [180 x i16]* @reload_order, i32 0, i64 %idxprom1471
  %653 = load i16, i16* %arrayidx1472, align 2
  %conv1473 = sext i16 %653 to i32
  store i32 %conv1473, i32* %r1470, align 4
  %654 = load i32, i32* %r1470, align 4
  %idxprom1474 = sext i32 %654 to i64
  %arrayidx1475 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i32 0, i64 %idxprom1474
  %655 = load i32, i32* %arrayidx1475, align 4
  store i32 %655, i32* %i, align 4
  %656 = load i32, i32* %r1470, align 4
  %idxprom1476 = sext i32 %656 to i64
  %arrayidx1477 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1476
  %out_reg = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1477, i32 0, i32 9
  %657 = load %struct.rtx_def*, %struct.rtx_def** %out_reg, align 8
  %cmp1478 = icmp ne %struct.rtx_def* %657, null
  br i1 %cmp1478, label %land.lhs.true.1480, label %if.end.1711

land.lhs.true.1480:                               ; preds = %for.body.1469
  %658 = load i32, i32* %r1470, align 4
  %idxprom1481 = sext i32 %658 to i64
  %arrayidx1482 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1481
  %out_reg1483 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1482, i32 0, i32 9
  %659 = load %struct.rtx_def*, %struct.rtx_def** %out_reg1483, align 8
  %660 = bitcast %struct.rtx_def* %659 to i32*
  %bf.load1484 = load i32, i32* %660, align 8
  %bf.clear1485 = and i32 %bf.load1484, 65535
  %cmp1486 = icmp eq i32 %bf.clear1485, 61
  br i1 %cmp1486, label %land.lhs.true.1488, label %if.end.1711

land.lhs.true.1488:                               ; preds = %land.lhs.true.1480
  %661 = load i32, i32* %r1470, align 4
  %idxprom1489 = sext i32 %661 to i64
  %arrayidx1490 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1489
  %reg_rtx1491 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1490, i32 0, i32 11
  %662 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1491, align 8
  %cmp1492 = icmp ne %struct.rtx_def* %662, null
  br i1 %cmp1492, label %if.then.1494, label %if.end.1711

if.then.1494:                                     ; preds = %land.lhs.true.1488
  %663 = load i32, i32* %r1470, align 4
  %idxprom1495 = sext i32 %663 to i64
  %arrayidx1496 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1495
  %out_reg1497 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1496, i32 0, i32 9
  %664 = load %struct.rtx_def*, %struct.rtx_def** %out_reg1497, align 8
  %fld1498 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %664, i32 0, i32 1
  %arrayidx1499 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1498, i32 0, i64 0
  %rtuint1500 = bitcast %union.rtunion_def* %arrayidx1499 to i32*
  %665 = load i32, i32* %rtuint1500, align 4
  store i32 %665, i32* %nregno, align 4
  store i32 1, i32* %nr1501, align 4
  %666 = load i32, i32* %nregno, align 4
  %cmp1502 = icmp slt i32 %666, 53
  br i1 %cmp1502, label %if.then.1504, label %if.end.1588

if.then.1504:                                     ; preds = %if.then.1494
  %667 = load i32, i32* %nregno, align 4
  %cmp1505 = icmp sge i32 %667, 8
  br i1 %cmp1505, label %land.lhs.true.1507, label %lor.lhs.false.1510

land.lhs.true.1507:                               ; preds = %if.then.1504
  %668 = load i32, i32* %nregno, align 4
  %cmp1508 = icmp sle i32 %668, 15
  br i1 %cmp1508, label %cond.true.1528, label %lor.lhs.false.1510

lor.lhs.false.1510:                               ; preds = %land.lhs.true.1507, %if.then.1504
  %669 = load i32, i32* %nregno, align 4
  %cmp1511 = icmp sge i32 %669, 21
  br i1 %cmp1511, label %land.lhs.true.1513, label %lor.lhs.false.1516

land.lhs.true.1513:                               ; preds = %lor.lhs.false.1510
  %670 = load i32, i32* %nregno, align 4
  %cmp1514 = icmp sle i32 %670, 28
  br i1 %cmp1514, label %cond.true.1528, label %lor.lhs.false.1516

lor.lhs.false.1516:                               ; preds = %land.lhs.true.1513, %lor.lhs.false.1510
  %671 = load i32, i32* %nregno, align 4
  %cmp1517 = icmp sge i32 %671, 45
  br i1 %cmp1517, label %land.lhs.true.1519, label %lor.lhs.false.1522

land.lhs.true.1519:                               ; preds = %lor.lhs.false.1516
  %672 = load i32, i32* %nregno, align 4
  %cmp1520 = icmp sle i32 %672, 52
  br i1 %cmp1520, label %cond.true.1528, label %lor.lhs.false.1522

lor.lhs.false.1522:                               ; preds = %land.lhs.true.1519, %lor.lhs.false.1516
  %673 = load i32, i32* %nregno, align 4
  %cmp1523 = icmp sge i32 %673, 29
  br i1 %cmp1523, label %land.lhs.true.1525, label %cond.false.1546

land.lhs.true.1525:                               ; preds = %lor.lhs.false.1522
  %674 = load i32, i32* %nregno, align 4
  %cmp1526 = icmp sle i32 %674, 36
  br i1 %cmp1526, label %cond.true.1528, label %cond.false.1546

cond.true.1528:                                   ; preds = %land.lhs.true.1525, %land.lhs.true.1519, %land.lhs.true.1513, %land.lhs.true.1507
  %675 = load i32, i32* %r1470, align 4
  %idxprom1529 = sext i32 %675 to i64
  %arrayidx1530 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1529
  %mode1531 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1530, i32 0, i32 5
  %676 = load i32, i32* %mode1531, align 4
  %idxprom1532 = sext i32 %676 to i64
  %arrayidx1533 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1532
  %677 = load i32, i32* %arrayidx1533, align 4
  %cmp1534 = icmp eq i32 %677, 5
  br i1 %cmp1534, label %lor.end.1544, label %lor.rhs.1536

lor.rhs.1536:                                     ; preds = %cond.true.1528
  %678 = load i32, i32* %r1470, align 4
  %idxprom1537 = sext i32 %678 to i64
  %arrayidx1538 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1537
  %mode1539 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1538, i32 0, i32 5
  %679 = load i32, i32* %mode1539, align 4
  %idxprom1540 = sext i32 %679 to i64
  %arrayidx1541 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1540
  %680 = load i32, i32* %arrayidx1541, align 4
  %cmp1542 = icmp eq i32 %680, 6
  br label %lor.end.1544

lor.end.1544:                                     ; preds = %lor.rhs.1536, %cond.true.1528
  %681 = phi i1 [ true, %cond.true.1528 ], [ %cmp1542, %lor.rhs.1536 ]
  %cond1545 = select i1 %681, i32 2, i32 1
  br label %cond.end.1586

cond.false.1546:                                  ; preds = %land.lhs.true.1525, %lor.lhs.false.1522
  %682 = load i32, i32* %r1470, align 4
  %idxprom1547 = sext i32 %682 to i64
  %arrayidx1548 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1547
  %mode1549 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1548, i32 0, i32 5
  %683 = load i32, i32* %mode1549, align 4
  %cmp1550 = icmp eq i32 %683, 18
  br i1 %cmp1550, label %cond.true.1552, label %cond.false.1556

cond.true.1552:                                   ; preds = %cond.false.1546
  %684 = load i32, i32* @target_flags, align 4
  %and1553 = and i32 %684, 33554432
  %tobool1554 = icmp ne i32 %and1553, 0
  %cond1555 = select i1 %tobool1554, i32 2, i32 3
  br label %cond.end.1584

cond.false.1556:                                  ; preds = %cond.false.1546
  %685 = load i32, i32* %r1470, align 4
  %idxprom1557 = sext i32 %685 to i64
  %arrayidx1558 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1557
  %mode1559 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1558, i32 0, i32 5
  %686 = load i32, i32* %mode1559, align 4
  %cmp1560 = icmp eq i32 %686, 24
  br i1 %cmp1560, label %cond.true.1562, label %cond.false.1566

cond.true.1562:                                   ; preds = %cond.false.1556
  %687 = load i32, i32* @target_flags, align 4
  %and1563 = and i32 %687, 33554432
  %tobool1564 = icmp ne i32 %and1563, 0
  %cond1565 = select i1 %tobool1564, i32 4, i32 6
  br label %cond.end.1582

cond.false.1566:                                  ; preds = %cond.false.1556
  %688 = load i32, i32* %r1470, align 4
  %idxprom1567 = sext i32 %688 to i64
  %arrayidx1568 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1567
  %mode1569 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1568, i32 0, i32 5
  %689 = load i32, i32* %mode1569, align 4
  %idxprom1570 = sext i32 %689 to i64
  %arrayidx1571 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1570
  %690 = load i8, i8* %arrayidx1571, align 1
  %conv1572 = zext i8 %690 to i32
  %691 = load i32, i32* @target_flags, align 4
  %and1573 = and i32 %691, 33554432
  %tobool1574 = icmp ne i32 %and1573, 0
  %cond1575 = select i1 %tobool1574, i32 8, i32 4
  %add1576 = add nsw i32 %conv1572, %cond1575
  %sub1577 = sub nsw i32 %add1576, 1
  %692 = load i32, i32* @target_flags, align 4
  %and1578 = and i32 %692, 33554432
  %tobool1579 = icmp ne i32 %and1578, 0
  %cond1580 = select i1 %tobool1579, i32 8, i32 4
  %div1581 = sdiv i32 %sub1577, %cond1580
  br label %cond.end.1582

cond.end.1582:                                    ; preds = %cond.false.1566, %cond.true.1562
  %cond1583 = phi i32 [ %cond1565, %cond.true.1562 ], [ %div1581, %cond.false.1566 ]
  br label %cond.end.1584

cond.end.1584:                                    ; preds = %cond.end.1582, %cond.true.1552
  %cond1585 = phi i32 [ %cond1555, %cond.true.1552 ], [ %cond1583, %cond.end.1582 ]
  br label %cond.end.1586

cond.end.1586:                                    ; preds = %cond.end.1584, %lor.end.1544
  %cond1587 = phi i32 [ %cond1545, %lor.end.1544 ], [ %cond1585, %cond.end.1584 ]
  store i32 %cond1587, i32* %nr1501, align 4
  br label %if.end.1588

if.end.1588:                                      ; preds = %cond.end.1586, %if.then.1494
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end.1588
  %693 = load i32, i32* %nr1501, align 4
  %dec1589 = add nsw i32 %693, -1
  store i32 %dec1589, i32* %nr1501, align 4
  %cmp1590 = icmp sge i32 %dec1589, 0
  br i1 %cmp1590, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %694 = load i32, i32* %nregno, align 4
  %695 = load i32, i32* %nr1501, align 4
  %add1592 = add nsw i32 %694, %695
  %idxprom1593 = sext i32 %add1592 to i64
  %696 = load i8*, i8** @reg_has_output_reload, align 8
  %arrayidx1594 = getelementptr inbounds i8, i8* %696, i64 %idxprom1593
  store i8 1, i8* %arrayidx1594, align 1
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %697 = load i32, i32* %i, align 4
  %cmp1595 = icmp sge i32 %697, 0
  br i1 %cmp1595, label %if.then.1597, label %if.end.1691

if.then.1597:                                     ; preds = %while.end
  %698 = load i32, i32* %i, align 4
  %cmp1598 = icmp sge i32 %698, 8
  br i1 %cmp1598, label %land.lhs.true.1600, label %lor.lhs.false.1603

land.lhs.true.1600:                               ; preds = %if.then.1597
  %699 = load i32, i32* %i, align 4
  %cmp1601 = icmp sle i32 %699, 15
  br i1 %cmp1601, label %cond.true.1621, label %lor.lhs.false.1603

lor.lhs.false.1603:                               ; preds = %land.lhs.true.1600, %if.then.1597
  %700 = load i32, i32* %i, align 4
  %cmp1604 = icmp sge i32 %700, 21
  br i1 %cmp1604, label %land.lhs.true.1606, label %lor.lhs.false.1609

land.lhs.true.1606:                               ; preds = %lor.lhs.false.1603
  %701 = load i32, i32* %i, align 4
  %cmp1607 = icmp sle i32 %701, 28
  br i1 %cmp1607, label %cond.true.1621, label %lor.lhs.false.1609

lor.lhs.false.1609:                               ; preds = %land.lhs.true.1606, %lor.lhs.false.1603
  %702 = load i32, i32* %i, align 4
  %cmp1610 = icmp sge i32 %702, 45
  br i1 %cmp1610, label %land.lhs.true.1612, label %lor.lhs.false.1615

land.lhs.true.1612:                               ; preds = %lor.lhs.false.1609
  %703 = load i32, i32* %i, align 4
  %cmp1613 = icmp sle i32 %703, 52
  br i1 %cmp1613, label %cond.true.1621, label %lor.lhs.false.1615

lor.lhs.false.1615:                               ; preds = %land.lhs.true.1612, %lor.lhs.false.1609
  %704 = load i32, i32* %i, align 4
  %cmp1616 = icmp sge i32 %704, 29
  br i1 %cmp1616, label %land.lhs.true.1618, label %cond.false.1639

land.lhs.true.1618:                               ; preds = %lor.lhs.false.1615
  %705 = load i32, i32* %i, align 4
  %cmp1619 = icmp sle i32 %705, 36
  br i1 %cmp1619, label %cond.true.1621, label %cond.false.1639

cond.true.1621:                                   ; preds = %land.lhs.true.1618, %land.lhs.true.1612, %land.lhs.true.1606, %land.lhs.true.1600
  %706 = load i32, i32* %r1470, align 4
  %idxprom1622 = sext i32 %706 to i64
  %arrayidx1623 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1622
  %mode1624 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1623, i32 0, i32 5
  %707 = load i32, i32* %mode1624, align 4
  %idxprom1625 = sext i32 %707 to i64
  %arrayidx1626 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1625
  %708 = load i32, i32* %arrayidx1626, align 4
  %cmp1627 = icmp eq i32 %708, 5
  br i1 %cmp1627, label %lor.end.1637, label %lor.rhs.1629

lor.rhs.1629:                                     ; preds = %cond.true.1621
  %709 = load i32, i32* %r1470, align 4
  %idxprom1630 = sext i32 %709 to i64
  %arrayidx1631 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1630
  %mode1632 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1631, i32 0, i32 5
  %710 = load i32, i32* %mode1632, align 4
  %idxprom1633 = sext i32 %710 to i64
  %arrayidx1634 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1633
  %711 = load i32, i32* %arrayidx1634, align 4
  %cmp1635 = icmp eq i32 %711, 6
  br label %lor.end.1637

lor.end.1637:                                     ; preds = %lor.rhs.1629, %cond.true.1621
  %712 = phi i1 [ true, %cond.true.1621 ], [ %cmp1635, %lor.rhs.1629 ]
  %cond1638 = select i1 %712, i32 2, i32 1
  br label %cond.end.1679

cond.false.1639:                                  ; preds = %land.lhs.true.1618, %lor.lhs.false.1615
  %713 = load i32, i32* %r1470, align 4
  %idxprom1640 = sext i32 %713 to i64
  %arrayidx1641 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1640
  %mode1642 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1641, i32 0, i32 5
  %714 = load i32, i32* %mode1642, align 4
  %cmp1643 = icmp eq i32 %714, 18
  br i1 %cmp1643, label %cond.true.1645, label %cond.false.1649

cond.true.1645:                                   ; preds = %cond.false.1639
  %715 = load i32, i32* @target_flags, align 4
  %and1646 = and i32 %715, 33554432
  %tobool1647 = icmp ne i32 %and1646, 0
  %cond1648 = select i1 %tobool1647, i32 2, i32 3
  br label %cond.end.1677

cond.false.1649:                                  ; preds = %cond.false.1639
  %716 = load i32, i32* %r1470, align 4
  %idxprom1650 = sext i32 %716 to i64
  %arrayidx1651 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1650
  %mode1652 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1651, i32 0, i32 5
  %717 = load i32, i32* %mode1652, align 4
  %cmp1653 = icmp eq i32 %717, 24
  br i1 %cmp1653, label %cond.true.1655, label %cond.false.1659

cond.true.1655:                                   ; preds = %cond.false.1649
  %718 = load i32, i32* @target_flags, align 4
  %and1656 = and i32 %718, 33554432
  %tobool1657 = icmp ne i32 %and1656, 0
  %cond1658 = select i1 %tobool1657, i32 4, i32 6
  br label %cond.end.1675

cond.false.1659:                                  ; preds = %cond.false.1649
  %719 = load i32, i32* %r1470, align 4
  %idxprom1660 = sext i32 %719 to i64
  %arrayidx1661 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1660
  %mode1662 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1661, i32 0, i32 5
  %720 = load i32, i32* %mode1662, align 4
  %idxprom1663 = sext i32 %720 to i64
  %arrayidx1664 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1663
  %721 = load i8, i8* %arrayidx1664, align 1
  %conv1665 = zext i8 %721 to i32
  %722 = load i32, i32* @target_flags, align 4
  %and1666 = and i32 %722, 33554432
  %tobool1667 = icmp ne i32 %and1666, 0
  %cond1668 = select i1 %tobool1667, i32 8, i32 4
  %add1669 = add nsw i32 %conv1665, %cond1668
  %sub1670 = sub nsw i32 %add1669, 1
  %723 = load i32, i32* @target_flags, align 4
  %and1671 = and i32 %723, 33554432
  %tobool1672 = icmp ne i32 %and1671, 0
  %cond1673 = select i1 %tobool1672, i32 8, i32 4
  %div1674 = sdiv i32 %sub1670, %cond1673
  br label %cond.end.1675

cond.end.1675:                                    ; preds = %cond.false.1659, %cond.true.1655
  %cond1676 = phi i32 [ %cond1658, %cond.true.1655 ], [ %div1674, %cond.false.1659 ]
  br label %cond.end.1677

cond.end.1677:                                    ; preds = %cond.end.1675, %cond.true.1645
  %cond1678 = phi i32 [ %cond1648, %cond.true.1645 ], [ %cond1676, %cond.end.1675 ]
  br label %cond.end.1679

cond.end.1679:                                    ; preds = %cond.end.1677, %lor.end.1637
  %cond1680 = phi i32 [ %cond1638, %lor.end.1637 ], [ %cond1678, %cond.end.1677 ]
  store i32 %cond1680, i32* %nr1501, align 4
  br label %while.cond.1681

while.cond.1681:                                  ; preds = %while.body.1685, %cond.end.1679
  %724 = load i32, i32* %nr1501, align 4
  %dec1682 = add nsw i32 %724, -1
  store i32 %dec1682, i32* %nr1501, align 4
  %cmp1683 = icmp sge i32 %dec1682, 0
  br i1 %cmp1683, label %while.body.1685, label %while.end.1690

while.body.1685:                                  ; preds = %while.cond.1681
  %725 = load i32, i32* %i, align 4
  %726 = load i32, i32* %nr1501, align 4
  %add1686 = add nsw i32 %725, %726
  %sh_prom1687 = zext i32 %add1686 to i64
  %shl1688 = shl i64 1, %sh_prom1687
  %727 = load i64, i64* @reg_is_output_reload, align 8
  %or1689 = or i64 %727, %shl1688
  store i64 %or1689, i64* @reg_is_output_reload, align 8
  br label %while.cond.1681

while.end.1690:                                   ; preds = %while.cond.1681
  br label %if.end.1691

if.end.1691:                                      ; preds = %while.end.1690, %while.end
  %728 = load i32, i32* %r1470, align 4
  %idxprom1692 = sext i32 %728 to i64
  %arrayidx1693 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1692
  %when_needed1694 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1693, i32 0, i32 17
  %729 = load i32, i32* %when_needed1694, align 4
  %cmp1695 = icmp ne i32 %729, 9
  br i1 %cmp1695, label %land.lhs.true.1697, label %if.end.1710

land.lhs.true.1697:                               ; preds = %if.end.1691
  %730 = load i32, i32* %r1470, align 4
  %idxprom1698 = sext i32 %730 to i64
  %arrayidx1699 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1698
  %when_needed1700 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1699, i32 0, i32 17
  %731 = load i32, i32* %when_needed1700, align 4
  %cmp1701 = icmp ne i32 %731, 1
  br i1 %cmp1701, label %land.lhs.true.1703, label %if.end.1710

land.lhs.true.1703:                               ; preds = %land.lhs.true.1697
  %732 = load i32, i32* %r1470, align 4
  %idxprom1704 = sext i32 %732 to i64
  %arrayidx1705 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1704
  %when_needed1706 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1705, i32 0, i32 17
  %733 = load i32, i32* %when_needed1706, align 4
  %cmp1707 = icmp ne i32 %733, 2
  br i1 %cmp1707, label %if.then.1709, label %if.end.1710

if.then.1709:                                     ; preds = %land.lhs.true.1703
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 5985, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.choose_reload_regs, i32 0, i32 0)) #5
  unreachable

if.end.1710:                                      ; preds = %land.lhs.true.1703, %land.lhs.true.1697, %if.end.1691
  br label %if.end.1711

if.end.1711:                                      ; preds = %if.end.1710, %land.lhs.true.1488, %land.lhs.true.1480, %for.body.1469
  br label %for.inc.1712

for.inc.1712:                                     ; preds = %if.end.1711
  %734 = load i32, i32* %j, align 4
  %inc1713 = add nsw i32 %734, 1
  store i32 %inc1713, i32* %j, align 4
  br label %for.cond.1466

for.end.1714:                                     ; preds = %for.cond.1466
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @merge_assigned_reloads(%struct.rtx_def* %insn) #0 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %conflicting_input = alloca i32, align 4
  %max_input_address_opnum = alloca i32, align 4
  %min_conflicting_input_opnum = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.202, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @n_reloads, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end.204

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %conflicting_input, align 4
  store i32 -1, i32* %max_input_address_opnum, align 4
  store i32 30, i32* %min_conflicting_input_opnum, align 4
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx, i32 0, i32 0
  %3 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %cmp1 = icmp eq %struct.rtx_def* %3, null
  br i1 %cmp1, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %4 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom2
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3, i32 0, i32 17
  %5 = load i32, i32* %when_needed, align 4
  %cmp4 = icmp eq i32 %5, 9
  br i1 %cmp4, label %if.then, label %lor.lhs.false.5

lor.lhs.false.5:                                  ; preds = %lor.lhs.false
  %6 = load i32, i32* %i, align 4
  %idxprom6 = sext i32 %6 to i64
  %arrayidx7 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom6
  %out = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx7, i32 0, i32 1
  %7 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %cmp8 = icmp ne %struct.rtx_def* %7, null
  br i1 %cmp8, label %if.then, label %lor.lhs.false.9

lor.lhs.false.9:                                  ; preds = %lor.lhs.false.5
  %8 = load i32, i32* %i, align 4
  %idxprom10 = sext i32 %8 to i64
  %arrayidx11 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom10
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx11, i32 0, i32 11
  %9 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8
  %cmp12 = icmp eq %struct.rtx_def* %9, null
  br i1 %cmp12, label %if.then, label %lor.lhs.false.13

lor.lhs.false.13:                                 ; preds = %lor.lhs.false.9
  %10 = load i32, i32* %i, align 4
  %idxprom14 = sext i32 %10 to i64
  %arrayidx15 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom14
  %reg_rtx16 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx15, i32 0, i32 11
  %11 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx16, align 8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call = call i32 @reg_set_p(%struct.rtx_def* %11, %struct.rtx_def* %12)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.13, %lor.lhs.false.9, %lor.lhs.false.5, %lor.lhs.false, %for.body
  br label %for.inc.202

if.end:                                           ; preds = %lor.lhs.false.13
  store i32 0, i32* %j, align 4
  br label %for.cond.17

for.cond.17:                                      ; preds = %for.inc, %if.end
  %13 = load i32, i32* %j, align 4
  %14 = load i32, i32* @n_reloads, align 4
  %cmp18 = icmp slt i32 %13, %14
  br i1 %cmp18, label %for.body.19, label %for.end

for.body.19:                                      ; preds = %for.cond.17
  %15 = load i32, i32* %i, align 4
  %16 = load i32, i32* %j, align 4
  %cmp20 = icmp eq i32 %15, %16
  br i1 %cmp20, label %if.then.35, label %lor.lhs.false.21

lor.lhs.false.21:                                 ; preds = %for.body.19
  %17 = load i32, i32* %j, align 4
  %idxprom22 = sext i32 %17 to i64
  %arrayidx23 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom22
  %reg_rtx24 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx23, i32 0, i32 11
  %18 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx24, align 8
  %cmp25 = icmp eq %struct.rtx_def* %18, null
  br i1 %cmp25, label %if.then.35, label %lor.lhs.false.26

lor.lhs.false.26:                                 ; preds = %lor.lhs.false.21
  %19 = load i32, i32* %j, align 4
  %idxprom27 = sext i32 %19 to i64
  %arrayidx28 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom27
  %reg_rtx29 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx28, i32 0, i32 11
  %20 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx29, align 8
  %21 = load i32, i32* %i, align 4
  %idxprom30 = sext i32 %21 to i64
  %arrayidx31 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom30
  %reg_rtx32 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx31, i32 0, i32 11
  %22 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx32, align 8
  %call33 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %20, %struct.rtx_def* %22)
  %tobool34 = icmp ne i32 %call33, 0
  br i1 %tobool34, label %if.end.36, label %if.then.35

if.then.35:                                       ; preds = %lor.lhs.false.26, %lor.lhs.false.21, %for.body.19
  br label %for.inc

if.end.36:                                        ; preds = %lor.lhs.false.26
  %23 = load i32, i32* %j, align 4
  %idxprom37 = sext i32 %23 to i64
  %arrayidx38 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom37
  %when_needed39 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx38, i32 0, i32 17
  %24 = load i32, i32* %when_needed39, align 4
  %cmp40 = icmp eq i32 %24, 3
  br i1 %cmp40, label %land.lhs.true, label %if.end.48

land.lhs.true:                                    ; preds = %if.end.36
  %25 = load i32, i32* %j, align 4
  %idxprom41 = sext i32 %25 to i64
  %arrayidx42 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom41
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx42, i32 0, i32 12
  %26 = load i32, i32* %opnum, align 4
  %27 = load i32, i32* %max_input_address_opnum, align 4
  %cmp43 = icmp sgt i32 %26, %27
  br i1 %cmp43, label %if.then.44, label %if.end.48

if.then.44:                                       ; preds = %land.lhs.true
  %28 = load i32, i32* %j, align 4
  %idxprom45 = sext i32 %28 to i64
  %arrayidx46 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom45
  %opnum47 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx46, i32 0, i32 12
  %29 = load i32, i32* %opnum47, align 4
  store i32 %29, i32* %max_input_address_opnum, align 4
  br label %if.end.48

if.end.48:                                        ; preds = %if.then.44, %land.lhs.true, %if.end.36
  %30 = load i32, i32* %i, align 4
  %idxprom49 = sext i32 %30 to i64
  %arrayidx50 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom49
  %reg_rtx51 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx50, i32 0, i32 11
  %31 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx51, align 8
  %32 = load i32, i32* %j, align 4
  %idxprom52 = sext i32 %32 to i64
  %arrayidx53 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom52
  %reg_rtx54 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx53, i32 0, i32 11
  %33 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx54, align 8
  %call55 = call i32 @rtx_equal_p(%struct.rtx_def* %31, %struct.rtx_def* %33)
  %tobool56 = icmp ne i32 %call55, 0
  br i1 %tobool56, label %lor.lhs.false.57, label %if.then.76

lor.lhs.false.57:                                 ; preds = %if.end.48
  %34 = load i32, i32* %j, align 4
  %idxprom58 = sext i32 %34 to i64
  %arrayidx59 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom58
  %out60 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx59, i32 0, i32 1
  %35 = load %struct.rtx_def*, %struct.rtx_def** %out60, align 8
  %cmp61 = icmp ne %struct.rtx_def* %35, null
  br i1 %cmp61, label %if.then.76, label %lor.lhs.false.62

lor.lhs.false.62:                                 ; preds = %lor.lhs.false.57
  %36 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %36 to i64
  %arrayidx64 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom63
  %in65 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx64, i32 0, i32 0
  %37 = load %struct.rtx_def*, %struct.rtx_def** %in65, align 8
  %cmp66 = icmp eq %struct.rtx_def* %37, null
  br i1 %cmp66, label %if.then.76, label %lor.lhs.false.67

lor.lhs.false.67:                                 ; preds = %lor.lhs.false.62
  %38 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %38 to i64
  %arrayidx69 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom68
  %in70 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx69, i32 0, i32 0
  %39 = load %struct.rtx_def*, %struct.rtx_def** %in70, align 8
  %40 = load i32, i32* %j, align 4
  %idxprom71 = sext i32 %40 to i64
  %arrayidx72 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom71
  %in73 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx72, i32 0, i32 0
  %41 = load %struct.rtx_def*, %struct.rtx_def** %in73, align 8
  %call74 = call i32 @rtx_equal_p(%struct.rtx_def* %39, %struct.rtx_def* %41)
  %tobool75 = icmp ne i32 %call74, 0
  br i1 %tobool75, label %if.end.110, label %if.then.76

if.then.76:                                       ; preds = %lor.lhs.false.67, %lor.lhs.false.62, %lor.lhs.false.57, %if.end.48
  %42 = load i32, i32* %j, align 4
  %idxprom77 = sext i32 %42 to i64
  %arrayidx78 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom77
  %when_needed79 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx78, i32 0, i32 17
  %43 = load i32, i32* %when_needed79, align 4
  %cmp80 = icmp ne i32 %43, 0
  br i1 %cmp80, label %if.then.99, label %lor.lhs.false.81

lor.lhs.false.81:                                 ; preds = %if.then.76
  %44 = load i32, i32* %i, align 4
  %idxprom82 = sext i32 %44 to i64
  %arrayidx83 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom82
  %when_needed84 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx83, i32 0, i32 17
  %45 = load i32, i32* %when_needed84, align 4
  %cmp85 = icmp ne i32 %45, 3
  br i1 %cmp85, label %land.lhs.true.94, label %lor.lhs.false.86

lor.lhs.false.86:                                 ; preds = %lor.lhs.false.81
  %46 = load i32, i32* %i, align 4
  %idxprom87 = sext i32 %46 to i64
  %arrayidx88 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom87
  %opnum89 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx88, i32 0, i32 12
  %47 = load i32, i32* %opnum89, align 4
  %48 = load i32, i32* %j, align 4
  %idxprom90 = sext i32 %48 to i64
  %arrayidx91 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom90
  %opnum92 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx91, i32 0, i32 12
  %49 = load i32, i32* %opnum92, align 4
  %cmp93 = icmp sgt i32 %47, %49
  br i1 %cmp93, label %land.lhs.true.94, label %if.end.100

land.lhs.true.94:                                 ; preds = %lor.lhs.false.86, %lor.lhs.false.81
  %50 = load i32, i32* %i, align 4
  %idxprom95 = sext i32 %50 to i64
  %arrayidx96 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom95
  %when_needed97 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx96, i32 0, i32 17
  %51 = load i32, i32* %when_needed97, align 4
  %cmp98 = icmp ne i32 %51, 10
  br i1 %cmp98, label %if.then.99, label %if.end.100

if.then.99:                                       ; preds = %land.lhs.true.94, %if.then.76
  br label %for.end

if.end.100:                                       ; preds = %land.lhs.true.94, %lor.lhs.false.86
  store i32 1, i32* %conflicting_input, align 4
  %52 = load i32, i32* %min_conflicting_input_opnum, align 4
  %53 = load i32, i32* %j, align 4
  %idxprom101 = sext i32 %53 to i64
  %arrayidx102 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom101
  %opnum103 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx102, i32 0, i32 12
  %54 = load i32, i32* %opnum103, align 4
  %cmp104 = icmp sgt i32 %52, %54
  br i1 %cmp104, label %if.then.105, label %if.end.109

if.then.105:                                      ; preds = %if.end.100
  %55 = load i32, i32* %j, align 4
  %idxprom106 = sext i32 %55 to i64
  %arrayidx107 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom106
  %opnum108 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx107, i32 0, i32 12
  %56 = load i32, i32* %opnum108, align 4
  store i32 %56, i32* %min_conflicting_input_opnum, align 4
  br label %if.end.109

if.end.109:                                       ; preds = %if.then.105, %if.end.100
  br label %if.end.110

if.end.110:                                       ; preds = %if.end.109, %lor.lhs.false.67
  br label %for.inc

for.inc:                                          ; preds = %if.end.110, %if.then.35
  %57 = load i32, i32* %j, align 4
  %inc = add nsw i32 %57, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond.17

for.end:                                          ; preds = %if.then.99, %for.cond.17
  %58 = load i32, i32* %j, align 4
  %59 = load i32, i32* @n_reloads, align 4
  %cmp111 = icmp eq i32 %58, %59
  br i1 %cmp111, label %land.lhs.true.112, label %if.end.201

land.lhs.true.112:                                ; preds = %for.end
  %60 = load i32, i32* %max_input_address_opnum, align 4
  %61 = load i32, i32* %min_conflicting_input_opnum, align 4
  %cmp113 = icmp sle i32 %60, %61
  br i1 %cmp113, label %if.then.114, label %if.end.201

if.then.114:                                      ; preds = %land.lhs.true.112
  store i32 0, i32* %j, align 4
  br label %for.cond.115

for.cond.115:                                     ; preds = %for.inc.155, %if.then.114
  %62 = load i32, i32* %j, align 4
  %63 = load i32, i32* @n_reloads, align 4
  %cmp116 = icmp slt i32 %62, %63
  br i1 %cmp116, label %for.body.117, label %for.end.157

for.body.117:                                     ; preds = %for.cond.115
  %64 = load i32, i32* %i, align 4
  %65 = load i32, i32* %j, align 4
  %cmp118 = icmp ne i32 %64, %65
  br i1 %cmp118, label %land.lhs.true.119, label %if.end.154

land.lhs.true.119:                                ; preds = %for.body.117
  %66 = load i32, i32* %j, align 4
  %idxprom120 = sext i32 %66 to i64
  %arrayidx121 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom120
  %reg_rtx122 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx121, i32 0, i32 11
  %67 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx122, align 8
  %cmp123 = icmp ne %struct.rtx_def* %67, null
  br i1 %cmp123, label %land.lhs.true.124, label %if.end.154

land.lhs.true.124:                                ; preds = %land.lhs.true.119
  %68 = load i32, i32* %i, align 4
  %idxprom125 = sext i32 %68 to i64
  %arrayidx126 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom125
  %reg_rtx127 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx126, i32 0, i32 11
  %69 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx127, align 8
  %70 = load i32, i32* %j, align 4
  %idxprom128 = sext i32 %70 to i64
  %arrayidx129 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom128
  %reg_rtx130 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx129, i32 0, i32 11
  %71 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx130, align 8
  %call131 = call i32 @rtx_equal_p(%struct.rtx_def* %69, %struct.rtx_def* %71)
  %tobool132 = icmp ne i32 %call131, 0
  br i1 %tobool132, label %land.lhs.true.133, label %if.end.154

land.lhs.true.133:                                ; preds = %land.lhs.true.124
  %72 = load i32, i32* %conflicting_input, align 4
  %tobool134 = icmp ne i32 %72, 0
  br i1 %tobool134, label %lor.lhs.false.135, label %if.then.145

lor.lhs.false.135:                                ; preds = %land.lhs.true.133
  %73 = load i32, i32* %j, align 4
  %idxprom136 = sext i32 %73 to i64
  %arrayidx137 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom136
  %when_needed138 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx137, i32 0, i32 17
  %74 = load i32, i32* %when_needed138, align 4
  %cmp139 = icmp eq i32 %74, 3
  br i1 %cmp139, label %if.then.145, label %lor.lhs.false.140

lor.lhs.false.140:                                ; preds = %lor.lhs.false.135
  %75 = load i32, i32* %j, align 4
  %idxprom141 = sext i32 %75 to i64
  %arrayidx142 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom141
  %when_needed143 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx142, i32 0, i32 17
  %76 = load i32, i32* %when_needed143, align 4
  %cmp144 = icmp eq i32 %76, 10
  br i1 %cmp144, label %if.then.145, label %if.end.154

if.then.145:                                      ; preds = %lor.lhs.false.140, %lor.lhs.false.135, %land.lhs.true.133
  %77 = load i32, i32* %i, align 4
  %idxprom146 = sext i32 %77 to i64
  %arrayidx147 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom146
  %when_needed148 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx147, i32 0, i32 17
  store i32 9, i32* %when_needed148, align 4
  %78 = load i32, i32* %j, align 4
  %idxprom149 = sext i32 %78 to i64
  %arrayidx150 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom149
  %in151 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx150, i32 0, i32 0
  store %struct.rtx_def* null, %struct.rtx_def** %in151, align 8
  %79 = load i32, i32* %j, align 4
  %idxprom152 = sext i32 %79 to i64
  %arrayidx153 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i32 0, i64 %idxprom152
  store i32 -1, i32* %arrayidx153, align 4
  %80 = load i32, i32* %i, align 4
  %81 = load i32, i32* %j, align 4
  call void @transfer_replacements(i32 %80, i32 %81)
  br label %if.end.154

if.end.154:                                       ; preds = %if.then.145, %lor.lhs.false.140, %land.lhs.true.124, %land.lhs.true.119, %for.body.117
  br label %for.inc.155

for.inc.155:                                      ; preds = %if.end.154
  %82 = load i32, i32* %j, align 4
  %inc156 = add nsw i32 %82, 1
  store i32 %inc156, i32* %j, align 4
  br label %for.cond.115

for.end.157:                                      ; preds = %for.cond.115
  %83 = load i32, i32* %i, align 4
  %idxprom158 = sext i32 %83 to i64
  %arrayidx159 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom158
  %when_needed160 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx159, i32 0, i32 17
  %84 = load i32, i32* %when_needed160, align 4
  %cmp161 = icmp eq i32 %84, 9
  br i1 %cmp161, label %if.then.162, label %if.end.200

if.then.162:                                      ; preds = %for.end.157
  store i32 0, i32* %j, align 4
  br label %for.cond.163

for.cond.163:                                     ; preds = %for.inc.197, %if.then.162
  %85 = load i32, i32* %j, align 4
  %86 = load i32, i32* @n_reloads, align 4
  %cmp164 = icmp slt i32 %85, %86
  br i1 %cmp164, label %for.body.165, label %for.end.199

for.body.165:                                     ; preds = %for.cond.163
  %87 = load i32, i32* %j, align 4
  %idxprom166 = sext i32 %87 to i64
  %arrayidx167 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom166
  %in168 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx167, i32 0, i32 0
  %88 = load %struct.rtx_def*, %struct.rtx_def** %in168, align 8
  %cmp169 = icmp ne %struct.rtx_def* %88, null
  br i1 %cmp169, label %land.lhs.true.170, label %if.end.196

land.lhs.true.170:                                ; preds = %for.body.165
  %89 = load i32, i32* %j, align 4
  %idxprom171 = sext i32 %89 to i64
  %arrayidx172 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom171
  %when_needed173 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx172, i32 0, i32 17
  %90 = load i32, i32* %when_needed173, align 4
  %cmp174 = icmp ne i32 %90, 9
  br i1 %cmp174, label %land.lhs.true.175, label %if.end.196

land.lhs.true.175:                                ; preds = %land.lhs.true.170
  %91 = load i32, i32* %j, align 4
  %idxprom176 = sext i32 %91 to i64
  %arrayidx177 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom176
  %in178 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx177, i32 0, i32 0
  %92 = load %struct.rtx_def*, %struct.rtx_def** %in178, align 8
  %93 = load i32, i32* %i, align 4
  %idxprom179 = sext i32 %93 to i64
  %arrayidx180 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom179
  %in181 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx180, i32 0, i32 0
  %94 = load %struct.rtx_def*, %struct.rtx_def** %in181, align 8
  %call182 = call i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %92, %struct.rtx_def* %94)
  %tobool183 = icmp ne i32 %call182, 0
  br i1 %tobool183, label %if.then.184, label %if.end.196

if.then.184:                                      ; preds = %land.lhs.true.175
  %95 = load i32, i32* %j, align 4
  %idxprom185 = sext i32 %95 to i64
  %arrayidx186 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom185
  %when_needed187 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx186, i32 0, i32 17
  %96 = load i32, i32* %when_needed187, align 4
  %cmp188 = icmp eq i32 %96, 3
  br i1 %cmp188, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then.184
  %97 = load i32, i32* %j, align 4
  %idxprom189 = sext i32 %97 to i64
  %arrayidx190 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom189
  %when_needed191 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx190, i32 0, i32 17
  %98 = load i32, i32* %when_needed191, align 4
  %cmp192 = icmp eq i32 %98, 4
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.then.184
  %99 = phi i1 [ true, %if.then.184 ], [ %cmp192, %lor.rhs ]
  %cond = select i1 %99, i32 10, i32 9
  %100 = load i32, i32* %j, align 4
  %idxprom193 = sext i32 %100 to i64
  %arrayidx194 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom193
  %when_needed195 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx194, i32 0, i32 17
  store i32 %cond, i32* %when_needed195, align 4
  br label %if.end.196

if.end.196:                                       ; preds = %lor.end, %land.lhs.true.175, %land.lhs.true.170, %for.body.165
  br label %for.inc.197

for.inc.197:                                      ; preds = %if.end.196
  %101 = load i32, i32* %j, align 4
  %inc198 = add nsw i32 %101, 1
  store i32 %inc198, i32* %j, align 4
  br label %for.cond.163

for.end.199:                                      ; preds = %for.cond.163
  br label %if.end.200

if.end.200:                                       ; preds = %for.end.199, %for.end.157
  br label %if.end.201

if.end.201:                                       ; preds = %if.end.200, %land.lhs.true.112, %for.end
  br label %for.inc.202

for.inc.202:                                      ; preds = %if.end.201, %if.then
  %102 = load i32, i32* %i, align 4
  %inc203 = add nsw i32 %102, 1
  store i32 %inc203, i32* %i, align 4
  br label %for.cond

for.end.204:                                      ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @emit_reload_insns(%struct.insn_chain* %chain) #0 {
entry:
  %chain.addr = alloca %struct.insn_chain*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %j = alloca i32, align 4
  %x = alloca %struct.rtx_def*, align 8
  %r = alloca i32, align 4
  %i = alloca i32, align 4
  %reg = alloca %struct.rtx_def*, align 8
  %nregno = alloca i32, align 4
  %last_regno = alloca i32, align 4
  %nr = alloca i32, align 4
  %k = alloca i32, align 4
  %part_reaches_end = alloca i32, align 4
  %all_reaches_end = alloca i32, align 4
  %out292 = alloca %struct.rtx_def*, align 8
  %nregno324 = alloca i32, align 4
  %nnr = alloca i32, align 4
  %nregno577 = alloca i32, align 4
  %nnr578 = alloca i32, align 4
  %out888 = alloca %struct.rtx_def*, align 8
  %nregno906 = alloca i32, align 4
  %src_reg = alloca %struct.rtx_def*, align 8
  %store_insn = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %k960 = alloca i32, align 4
  %src_regno = alloca i32, align 4
  %nr1005 = alloca i32, align 4
  %note = alloca %struct.rtx_def*, align 8
  %num_regs = alloca i32, align 4
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  %0 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %insn1 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %0, i32 0, i32 4
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn1, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %insn, align 8
  store i64 0, i64* @reg_reloaded_died, align 8
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %j, align 4
  %3 = load i32, i32* @reload_n_operands, align 4
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %j, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @other_output_reload_insns, i32 0, i64 %idxprom
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx, align 8
  %5 = load i32, i32* %j, align 4
  %idxprom2 = sext i32 %5 to i64
  %arrayidx3 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @outaddr_address_reload_insns, i32 0, i64 %idxprom2
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx3, align 8
  %6 = load i32, i32* %j, align 4
  %idxprom4 = sext i32 %6 to i64
  %arrayidx5 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @output_address_reload_insns, i32 0, i64 %idxprom4
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx5, align 8
  %7 = load i32, i32* %j, align 4
  %idxprom6 = sext i32 %7 to i64
  %arrayidx7 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @output_reload_insns, i32 0, i64 %idxprom6
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx7, align 8
  %8 = load i32, i32* %j, align 4
  %idxprom8 = sext i32 %8 to i64
  %arrayidx9 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @inpaddr_address_reload_insns, i32 0, i64 %idxprom8
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx9, align 8
  %9 = load i32, i32* %j, align 4
  %idxprom10 = sext i32 %9 to i64
  %arrayidx11 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @input_address_reload_insns, i32 0, i64 %idxprom10
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx11, align 8
  %10 = load i32, i32* %j, align 4
  %idxprom12 = sext i32 %10 to i64
  %arrayidx13 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @input_reload_insns, i32 0, i64 %idxprom12
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx13, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %j, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store %struct.rtx_def* null, %struct.rtx_def** @other_input_address_reload_insns, align 8
  store %struct.rtx_def* null, %struct.rtx_def** @other_input_reload_insns, align 8
  store %struct.rtx_def* null, %struct.rtx_def** @operand_reload_insns, align 8
  store %struct.rtx_def* null, %struct.rtx_def** @other_operand_reload_insns, align 8
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @rtl_dump_file, align 8
  %tobool = icmp ne %struct._IO_FILE* %12, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.end
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @rtl_dump_file, align 8
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx14 to i32*
  %15 = load i32, i32* %rtint, align 4
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.39, i32 0, i32 0), i32 %15)
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @rtl_dump_file, align 8
  call void @debug_reload_to_stream(%struct._IO_FILE* %16)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end
  store i32 0, i32* %j, align 4
  br label %for.cond.15

for.cond.15:                                      ; preds = %for.inc.39, %if.end
  %17 = load i32, i32* %j, align 4
  %18 = load i32, i32* @n_reloads, align 4
  %cmp16 = icmp slt i32 %17, %18
  br i1 %cmp16, label %for.body.17, label %for.end.41

for.body.17:                                      ; preds = %for.cond.15
  %19 = load i32, i32* %j, align 4
  %idxprom18 = sext i32 %19 to i64
  %arrayidx19 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom18
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx19, i32 0, i32 11
  %20 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8
  %tobool20 = icmp ne %struct.rtx_def* %20, null
  br i1 %tobool20, label %land.lhs.true, label %if.end.36

land.lhs.true:                                    ; preds = %for.body.17
  %21 = load i32, i32* %j, align 4
  %idxprom21 = sext i32 %21 to i64
  %arrayidx22 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom21
  %reg_rtx23 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx22, i32 0, i32 11
  %22 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx23, align 8
  %fld24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx25 to i32*
  %23 = load i32, i32* %rtuint, align 4
  %cmp26 = icmp ult i32 %23, 53
  br i1 %cmp26, label %if.then.27, label %if.end.36

if.then.27:                                       ; preds = %land.lhs.true
  %24 = load i32, i32* %j, align 4
  %idxprom28 = sext i32 %24 to i64
  %arrayidx29 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom28
  %reg_rtx30 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx29, i32 0, i32 11
  %25 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx30, align 8
  %fld31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i32 0, i64 0
  %rtuint33 = bitcast %union.rtunion_def* %arrayidx32 to i32*
  %26 = load i32, i32* %rtuint33, align 4
  %idxprom34 = zext i32 %26 to i64
  %arrayidx35 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @new_spill_reg_store, i32 0, i64 %idxprom34
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx35, align 8
  br label %if.end.36

if.end.36:                                        ; preds = %if.then.27, %land.lhs.true, %for.body.17
  %27 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %28 = load i32, i32* %j, align 4
  %idx.ext = sext i32 %28 to i64
  %add.ptr = getelementptr inbounds %struct.reload, %struct.reload* getelementptr inbounds ([180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i32 0), i64 %idx.ext
  %29 = load i32, i32* %j, align 4
  call void @do_input_reload(%struct.insn_chain* %27, %struct.reload* %add.ptr, i32 %29)
  %30 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %31 = load i32, i32* %j, align 4
  %idx.ext37 = sext i32 %31 to i64
  %add.ptr38 = getelementptr inbounds %struct.reload, %struct.reload* getelementptr inbounds ([180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i32 0), i64 %idx.ext37
  %32 = load i32, i32* %j, align 4
  call void @do_output_reload(%struct.insn_chain* %30, %struct.reload* %add.ptr38, i32 %32)
  br label %for.inc.39

for.inc.39:                                       ; preds = %if.end.36
  %33 = load i32, i32* %j, align 4
  %inc40 = add nsw i32 %33, 1
  store i32 %inc40, i32* %j, align 4
  br label %for.cond.15

for.end.41:                                       ; preds = %for.cond.15
  %34 = load %struct.rtx_def*, %struct.rtx_def** @other_input_address_reload_insns, align 8
  %35 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call42 = call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %34, %struct.rtx_def* %35)
  %36 = load %struct.rtx_def*, %struct.rtx_def** @other_input_reload_insns, align 8
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call43 = call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %36, %struct.rtx_def* %37)
  store i32 0, i32* %j, align 4
  br label %for.cond.44

for.cond.44:                                      ; preds = %for.inc.56, %for.end.41
  %38 = load i32, i32* %j, align 4
  %39 = load i32, i32* @reload_n_operands, align 4
  %cmp45 = icmp slt i32 %38, %39
  br i1 %cmp45, label %for.body.46, label %for.end.58

for.body.46:                                      ; preds = %for.cond.44
  %40 = load i32, i32* %j, align 4
  %idxprom47 = sext i32 %40 to i64
  %arrayidx48 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @inpaddr_address_reload_insns, i32 0, i64 %idxprom47
  %41 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx48, align 8
  %42 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call49 = call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %41, %struct.rtx_def* %42)
  %43 = load i32, i32* %j, align 4
  %idxprom50 = sext i32 %43 to i64
  %arrayidx51 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @input_address_reload_insns, i32 0, i64 %idxprom50
  %44 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx51, align 8
  %45 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call52 = call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %44, %struct.rtx_def* %45)
  %46 = load i32, i32* %j, align 4
  %idxprom53 = sext i32 %46 to i64
  %arrayidx54 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @input_reload_insns, i32 0, i64 %idxprom53
  %47 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx54, align 8
  %48 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call55 = call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %47, %struct.rtx_def* %48)
  br label %for.inc.56

for.inc.56:                                       ; preds = %for.body.46
  %49 = load i32, i32* %j, align 4
  %inc57 = add nsw i32 %49, 1
  store i32 %inc57, i32* %j, align 4
  br label %for.cond.44

for.end.58:                                       ; preds = %for.cond.44
  %50 = load %struct.rtx_def*, %struct.rtx_def** @other_operand_reload_insns, align 8
  %51 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call59 = call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %50, %struct.rtx_def* %51)
  %52 = load %struct.rtx_def*, %struct.rtx_def** @operand_reload_insns, align 8
  %53 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call60 = call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %52, %struct.rtx_def* %53)
  store i32 0, i32* %j, align 4
  br label %for.cond.61

for.cond.61:                                      ; preds = %for.inc.76, %for.end.58
  %54 = load i32, i32* %j, align 4
  %55 = load i32, i32* @reload_n_operands, align 4
  %cmp62 = icmp slt i32 %54, %55
  br i1 %cmp62, label %for.body.63, label %for.end.78

for.body.63:                                      ; preds = %for.cond.61
  %56 = load i32, i32* %j, align 4
  %idxprom64 = sext i32 %56 to i64
  %arrayidx65 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @outaddr_address_reload_insns, i32 0, i64 %idxprom64
  %57 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx65, align 8
  %58 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call66 = call %struct.rtx_def* @emit_insns_after(%struct.rtx_def* %57, %struct.rtx_def* %58)
  store %struct.rtx_def* %call66, %struct.rtx_def** %x, align 8
  %59 = load i32, i32* %j, align 4
  %idxprom67 = sext i32 %59 to i64
  %arrayidx68 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @output_address_reload_insns, i32 0, i64 %idxprom67
  %60 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx68, align 8
  %61 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %call69 = call %struct.rtx_def* @emit_insns_after(%struct.rtx_def* %60, %struct.rtx_def* %61)
  store %struct.rtx_def* %call69, %struct.rtx_def** %x, align 8
  %62 = load i32, i32* %j, align 4
  %idxprom70 = sext i32 %62 to i64
  %arrayidx71 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @output_reload_insns, i32 0, i64 %idxprom70
  %63 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx71, align 8
  %64 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %call72 = call %struct.rtx_def* @emit_insns_after(%struct.rtx_def* %63, %struct.rtx_def* %64)
  store %struct.rtx_def* %call72, %struct.rtx_def** %x, align 8
  %65 = load i32, i32* %j, align 4
  %idxprom73 = sext i32 %65 to i64
  %arrayidx74 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @other_output_reload_insns, i32 0, i64 %idxprom73
  %66 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx74, align 8
  %67 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %call75 = call %struct.rtx_def* @emit_insns_after(%struct.rtx_def* %66, %struct.rtx_def* %67)
  br label %for.inc.76

for.inc.76:                                       ; preds = %for.body.63
  %68 = load i32, i32* %j, align 4
  %inc77 = add nsw i32 %68, 1
  store i32 %inc77, i32* %j, align 4
  br label %for.cond.61

for.end.78:                                       ; preds = %for.cond.61
  store i32 0, i32* %j, align 4
  br label %for.cond.79

for.cond.79:                                      ; preds = %for.inc.1246, %for.end.78
  %69 = load i32, i32* %j, align 4
  %70 = load i32, i32* @n_reloads, align 4
  %cmp80 = icmp slt i32 %69, %70
  br i1 %cmp80, label %for.body.81, label %for.end.1248

for.body.81:                                      ; preds = %for.cond.79
  %71 = load i32, i32* %j, align 4
  %idxprom82 = sext i32 %71 to i64
  %arrayidx83 = getelementptr inbounds [180 x i16], [180 x i16]* @reload_order, i32 0, i64 %idxprom82
  %72 = load i16, i16* %arrayidx83, align 2
  %conv = sext i16 %72 to i32
  store i32 %conv, i32* %r, align 4
  %73 = load i32, i32* %r, align 4
  %idxprom84 = sext i32 %73 to i64
  %arrayidx85 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i32 0, i64 %idxprom84
  %74 = load i32, i32* %arrayidx85, align 4
  store i32 %74, i32* %i, align 4
  %75 = load i32, i32* %r, align 4
  %idxprom86 = sext i32 %75 to i64
  %arrayidx87 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom86
  %in_reg = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx87, i32 0, i32 8
  %76 = load %struct.rtx_def*, %struct.rtx_def** %in_reg, align 8
  %cmp88 = icmp ne %struct.rtx_def* %76, null
  br i1 %cmp88, label %land.lhs.true.90, label %if.end.148

land.lhs.true.90:                                 ; preds = %for.body.81
  %77 = load i32, i32* %r, align 4
  %idxprom91 = sext i32 %77 to i64
  %arrayidx92 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i32 0, i64 %idxprom91
  %78 = load i8, i8* %arrayidx92, align 1
  %conv93 = sext i8 %78 to i32
  %tobool94 = icmp ne i32 %conv93, 0
  br i1 %tobool94, label %if.end.148, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.90
  %79 = load i32, i32* %r, align 4
  %idxprom95 = sext i32 %79 to i64
  %arrayidx96 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i32 0, i64 %idxprom95
  %80 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx96, align 8
  %tobool97 = icmp ne %struct.rtx_def* %80, null
  br i1 %tobool97, label %if.end.148, label %if.then.98

if.then.98:                                       ; preds = %lor.lhs.false
  %81 = load i32, i32* %r, align 4
  %idxprom99 = sext i32 %81 to i64
  %arrayidx100 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom99
  %in_reg101 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx100, i32 0, i32 8
  %82 = load %struct.rtx_def*, %struct.rtx_def** %in_reg101, align 8
  store %struct.rtx_def* %82, %struct.rtx_def** %reg, align 8
  %83 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %84 = bitcast %struct.rtx_def* %83 to i32*
  %bf.load = load i32, i32* %84, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp102 = icmp eq i32 %bf.clear, 63
  br i1 %cmp102, label %if.then.104, label %if.end.107

if.then.104:                                      ; preds = %if.then.98
  %85 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld105 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1
  %arrayidx106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld105, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**
  %86 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %86, %struct.rtx_def** %reg, align 8
  br label %if.end.107

if.end.107:                                       ; preds = %if.then.104, %if.then.98
  %87 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %88 = bitcast %struct.rtx_def* %87 to i32*
  %bf.load108 = load i32, i32* %88, align 8
  %bf.clear109 = and i32 %bf.load108, 65535
  %cmp110 = icmp eq i32 %bf.clear109, 61
  br i1 %cmp110, label %land.lhs.true.112, label %if.end.147

land.lhs.true.112:                                ; preds = %if.end.107
  %89 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1
  %arrayidx114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld113, i32 0, i64 0
  %rtuint115 = bitcast %union.rtunion_def* %arrayidx114 to i32*
  %90 = load i32, i32* %rtuint115, align 4
  %cmp116 = icmp uge i32 %90, 53
  br i1 %cmp116, label %land.lhs.true.118, label %if.end.147

land.lhs.true.118:                                ; preds = %land.lhs.true.112
  %91 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1
  %arrayidx120 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld119, i32 0, i64 0
  %rtuint121 = bitcast %union.rtunion_def* %arrayidx120 to i32*
  %92 = load i32, i32* %rtuint121, align 4
  %idxprom122 = zext i32 %92 to i64
  %93 = load i8*, i8** @reg_has_output_reload, align 8
  %arrayidx123 = getelementptr inbounds i8, i8* %93, i64 %idxprom122
  %94 = load i8, i8* %arrayidx123, align 1
  %tobool124 = icmp ne i8 %94, 0
  br i1 %tobool124, label %if.end.147, label %if.then.125

if.then.125:                                      ; preds = %land.lhs.true.118
  %95 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld126 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1
  %arrayidx127 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld126, i32 0, i64 0
  %rtuint128 = bitcast %union.rtunion_def* %arrayidx127 to i32*
  %96 = load i32, i32* %rtuint128, align 4
  store i32 %96, i32* %nregno, align 4
  %97 = load i32, i32* %nregno, align 4
  %idxprom129 = sext i32 %97 to i64
  %98 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8
  %arrayidx130 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %98, i64 %idxprom129
  %99 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx130, align 8
  %tobool131 = icmp ne %struct.rtx_def* %99, null
  br i1 %tobool131, label %if.then.132, label %if.end.146

if.then.132:                                      ; preds = %if.then.125
  %100 = load i32, i32* %nregno, align 4
  %idxprom133 = sext i32 %100 to i64
  %101 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8
  %arrayidx134 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %101, i64 %idxprom133
  %102 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx134, align 8
  %fld135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1
  %arrayidx136 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld135, i32 0, i64 0
  %rtuint137 = bitcast %union.rtunion_def* %arrayidx136 to i32*
  %103 = load i32, i32* %rtuint137, align 4
  store i32 %103, i32* %last_regno, align 4
  %104 = load i32, i32* %last_regno, align 4
  %idxprom138 = sext i32 %104 to i64
  %arrayidx139 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_reloaded_contents, i32 0, i64 %idxprom138
  %105 = load i32, i32* %arrayidx139, align 4
  %106 = load i32, i32* %nregno, align 4
  %cmp140 = icmp eq i32 %105, %106
  br i1 %cmp140, label %if.then.142, label %if.end.145

if.then.142:                                      ; preds = %if.then.132
  %107 = load i32, i32* %last_regno, align 4
  %idxprom143 = sext i32 %107 to i64
  %arrayidx144 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i32 0, i64 %idxprom143
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx144, align 8
  br label %if.end.145

if.end.145:                                       ; preds = %if.then.142, %if.then.132
  br label %if.end.146

if.end.146:                                       ; preds = %if.end.145, %if.then.125
  br label %if.end.147

if.end.147:                                       ; preds = %if.end.146, %land.lhs.true.118, %land.lhs.true.112, %if.end.107
  br label %if.end.148

if.end.148:                                       ; preds = %if.end.147, %lor.lhs.false, %land.lhs.true.90, %for.body.81
  %108 = load i32, i32* %i, align 4
  %cmp149 = icmp sge i32 %108, 0
  br i1 %cmp149, label %land.lhs.true.151, label %if.end.854

land.lhs.true.151:                                ; preds = %if.end.148
  %109 = load i32, i32* %r, align 4
  %idxprom152 = sext i32 %109 to i64
  %arrayidx153 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom152
  %reg_rtx154 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx153, i32 0, i32 11
  %110 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx154, align 8
  %cmp155 = icmp ne %struct.rtx_def* %110, null
  br i1 %cmp155, label %if.then.157, label %if.end.854

if.then.157:                                      ; preds = %land.lhs.true.151
  %111 = load i32, i32* %i, align 4
  %cmp158 = icmp sge i32 %111, 8
  br i1 %cmp158, label %land.lhs.true.160, label %lor.lhs.false.163

land.lhs.true.160:                                ; preds = %if.then.157
  %112 = load i32, i32* %i, align 4
  %cmp161 = icmp sle i32 %112, 15
  br i1 %cmp161, label %cond.true, label %lor.lhs.false.163

lor.lhs.false.163:                                ; preds = %land.lhs.true.160, %if.then.157
  %113 = load i32, i32* %i, align 4
  %cmp164 = icmp sge i32 %113, 21
  br i1 %cmp164, label %land.lhs.true.166, label %lor.lhs.false.169

land.lhs.true.166:                                ; preds = %lor.lhs.false.163
  %114 = load i32, i32* %i, align 4
  %cmp167 = icmp sle i32 %114, 28
  br i1 %cmp167, label %cond.true, label %lor.lhs.false.169

lor.lhs.false.169:                                ; preds = %land.lhs.true.166, %lor.lhs.false.163
  %115 = load i32, i32* %i, align 4
  %cmp170 = icmp sge i32 %115, 45
  br i1 %cmp170, label %land.lhs.true.172, label %lor.lhs.false.175

land.lhs.true.172:                                ; preds = %lor.lhs.false.169
  %116 = load i32, i32* %i, align 4
  %cmp173 = icmp sle i32 %116, 52
  br i1 %cmp173, label %cond.true, label %lor.lhs.false.175

lor.lhs.false.175:                                ; preds = %land.lhs.true.172, %lor.lhs.false.169
  %117 = load i32, i32* %i, align 4
  %cmp176 = icmp sge i32 %117, 29
  br i1 %cmp176, label %land.lhs.true.178, label %cond.false

land.lhs.true.178:                                ; preds = %lor.lhs.false.175
  %118 = load i32, i32* %i, align 4
  %cmp179 = icmp sle i32 %118, 36
  br i1 %cmp179, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.178, %land.lhs.true.172, %land.lhs.true.166, %land.lhs.true.160
  %119 = load i32, i32* %r, align 4
  %idxprom181 = sext i32 %119 to i64
  %arrayidx182 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom181
  %reg_rtx183 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx182, i32 0, i32 11
  %120 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx183, align 8
  %121 = bitcast %struct.rtx_def* %120 to i32*
  %bf.load184 = load i32, i32* %121, align 8
  %bf.lshr = lshr i32 %bf.load184, 16
  %bf.clear185 = and i32 %bf.lshr, 255
  %idxprom186 = sext i32 %bf.clear185 to i64
  %arrayidx187 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom186
  %122 = load i32, i32* %arrayidx187, align 4
  %cmp188 = icmp eq i32 %122, 5
  br i1 %cmp188, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %123 = load i32, i32* %r, align 4
  %idxprom190 = sext i32 %123 to i64
  %arrayidx191 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom190
  %reg_rtx192 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx191, i32 0, i32 11
  %124 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx192, align 8
  %125 = bitcast %struct.rtx_def* %124 to i32*
  %bf.load193 = load i32, i32* %125, align 8
  %bf.lshr194 = lshr i32 %bf.load193, 16
  %bf.clear195 = and i32 %bf.lshr194, 255
  %idxprom196 = sext i32 %bf.clear195 to i64
  %arrayidx197 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom196
  %126 = load i32, i32* %arrayidx197, align 4
  %cmp198 = icmp eq i32 %126, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %127 = phi i1 [ true, %cond.true ], [ %cmp198, %lor.rhs ]
  %cond = select i1 %127, i32 2, i32 1
  br label %cond.end.243

cond.false:                                       ; preds = %land.lhs.true.178, %lor.lhs.false.175
  %128 = load i32, i32* %r, align 4
  %idxprom200 = sext i32 %128 to i64
  %arrayidx201 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom200
  %reg_rtx202 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx201, i32 0, i32 11
  %129 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx202, align 8
  %130 = bitcast %struct.rtx_def* %129 to i32*
  %bf.load203 = load i32, i32* %130, align 8
  %bf.lshr204 = lshr i32 %bf.load203, 16
  %bf.clear205 = and i32 %bf.lshr204, 255
  %cmp206 = icmp eq i32 %bf.clear205, 18
  br i1 %cmp206, label %cond.true.208, label %cond.false.211

cond.true.208:                                    ; preds = %cond.false
  %131 = load i32, i32* @target_flags, align 4
  %and = and i32 %131, 33554432
  %tobool209 = icmp ne i32 %and, 0
  %cond210 = select i1 %tobool209, i32 2, i32 3
  br label %cond.end.241

cond.false.211:                                   ; preds = %cond.false
  %132 = load i32, i32* %r, align 4
  %idxprom212 = sext i32 %132 to i64
  %arrayidx213 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom212
  %reg_rtx214 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx213, i32 0, i32 11
  %133 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx214, align 8
  %134 = bitcast %struct.rtx_def* %133 to i32*
  %bf.load215 = load i32, i32* %134, align 8
  %bf.lshr216 = lshr i32 %bf.load215, 16
  %bf.clear217 = and i32 %bf.lshr216, 255
  %cmp218 = icmp eq i32 %bf.clear217, 24
  br i1 %cmp218, label %cond.true.220, label %cond.false.224

cond.true.220:                                    ; preds = %cond.false.211
  %135 = load i32, i32* @target_flags, align 4
  %and221 = and i32 %135, 33554432
  %tobool222 = icmp ne i32 %and221, 0
  %cond223 = select i1 %tobool222, i32 4, i32 6
  br label %cond.end

cond.false.224:                                   ; preds = %cond.false.211
  %136 = load i32, i32* %r, align 4
  %idxprom225 = sext i32 %136 to i64
  %arrayidx226 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom225
  %reg_rtx227 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx226, i32 0, i32 11
  %137 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx227, align 8
  %138 = bitcast %struct.rtx_def* %137 to i32*
  %bf.load228 = load i32, i32* %138, align 8
  %bf.lshr229 = lshr i32 %bf.load228, 16
  %bf.clear230 = and i32 %bf.lshr229, 255
  %idxprom231 = sext i32 %bf.clear230 to i64
  %arrayidx232 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom231
  %139 = load i8, i8* %arrayidx232, align 1
  %conv233 = zext i8 %139 to i32
  %140 = load i32, i32* @target_flags, align 4
  %and234 = and i32 %140, 33554432
  %tobool235 = icmp ne i32 %and234, 0
  %cond236 = select i1 %tobool235, i32 8, i32 4
  %add = add nsw i32 %conv233, %cond236
  %sub = sub nsw i32 %add, 1
  %141 = load i32, i32* @target_flags, align 4
  %and237 = and i32 %141, 33554432
  %tobool238 = icmp ne i32 %and237, 0
  %cond239 = select i1 %tobool238, i32 8, i32 4
  %div = sdiv i32 %sub, %cond239
  br label %cond.end

cond.end:                                         ; preds = %cond.false.224, %cond.true.220
  %cond240 = phi i32 [ %cond223, %cond.true.220 ], [ %div, %cond.false.224 ]
  br label %cond.end.241

cond.end.241:                                     ; preds = %cond.end, %cond.true.208
  %cond242 = phi i32 [ %cond210, %cond.true.208 ], [ %cond240, %cond.end ]
  br label %cond.end.243

cond.end.243:                                     ; preds = %cond.end.241, %lor.end
  %cond244 = phi i32 [ %cond, %lor.end ], [ %cond242, %cond.end.241 ]
  store i32 %cond244, i32* %nr, align 4
  store i32 0, i32* %part_reaches_end, align 4
  store i32 1, i32* %all_reaches_end, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond.245

for.cond.245:                                     ; preds = %for.inc.258, %cond.end.243
  %142 = load i32, i32* %k, align 4
  %143 = load i32, i32* %nr, align 4
  %cmp246 = icmp slt i32 %142, %143
  br i1 %cmp246, label %for.body.248, label %for.end.260

for.body.248:                                     ; preds = %for.cond.245
  %144 = load i32, i32* %i, align 4
  %145 = load i32, i32* %k, align 4
  %add249 = add nsw i32 %144, %145
  %146 = load i32, i32* %r, align 4
  %idxprom250 = sext i32 %146 to i64
  %arrayidx251 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom250
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx251, i32 0, i32 12
  %147 = load i32, i32* %opnum, align 4
  %148 = load i32, i32* %r, align 4
  %idxprom252 = sext i32 %148 to i64
  %arrayidx253 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom252
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx253, i32 0, i32 17
  %149 = load i32, i32* %when_needed, align 4
  %call254 = call i32 @reload_reg_reaches_end_p(i32 %add249, i32 %147, i32 %149)
  %tobool255 = icmp ne i32 %call254, 0
  br i1 %tobool255, label %if.then.256, label %if.else

if.then.256:                                      ; preds = %for.body.248
  store i32 1, i32* %part_reaches_end, align 4
  br label %if.end.257

if.else:                                          ; preds = %for.body.248
  store i32 0, i32* %all_reaches_end, align 4
  br label %if.end.257

if.end.257:                                       ; preds = %if.else, %if.then.256
  br label %for.inc.258

for.inc.258:                                      ; preds = %if.end.257
  %150 = load i32, i32* %k, align 4
  %inc259 = add nsw i32 %150, 1
  store i32 %inc259, i32* %k, align 4
  br label %for.cond.245

for.end.260:                                      ; preds = %for.cond.245
  %151 = load i32, i32* %all_reaches_end, align 4
  %tobool261 = icmp ne i32 %151, 0
  br i1 %tobool261, label %if.then.262, label %if.else.826

if.then.262:                                      ; preds = %for.end.260
  store i32 0, i32* %k, align 4
  br label %for.cond.263

for.cond.263:                                     ; preds = %for.inc.269, %if.then.262
  %152 = load i32, i32* %k, align 4
  %153 = load i32, i32* %nr, align 4
  %cmp264 = icmp slt i32 %152, %153
  br i1 %cmp264, label %for.body.266, label %for.end.271

for.body.266:                                     ; preds = %for.cond.263
  %154 = load i32, i32* %i, align 4
  %155 = load i32, i32* %k, align 4
  %add267 = add nsw i32 %154, %155
  %sh_prom = zext i32 %add267 to i64
  %shl = shl i64 1, %sh_prom
  %neg = xor i64 %shl, -1
  %156 = load i64, i64* @reg_reloaded_valid, align 8
  %and268 = and i64 %156, %neg
  store i64 %and268, i64* @reg_reloaded_valid, align 8
  br label %for.inc.269

for.inc.269:                                      ; preds = %for.body.266
  %157 = load i32, i32* %k, align 4
  %inc270 = add nsw i32 %157, 1
  store i32 %inc270, i32* %k, align 4
  br label %for.cond.263

for.end.271:                                      ; preds = %for.cond.263
  %158 = load i32, i32* %r, align 4
  %idxprom272 = sext i32 %158 to i64
  %arrayidx273 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom272
  %out = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx273, i32 0, i32 1
  %159 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %cmp274 = icmp ne %struct.rtx_def* %159, null
  br i1 %cmp274, label %land.lhs.true.276, label %if.else.511

land.lhs.true.276:                                ; preds = %for.end.271
  %160 = load i32, i32* %r, align 4
  %idxprom277 = sext i32 %160 to i64
  %arrayidx278 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom277
  %out279 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx278, i32 0, i32 1
  %161 = load %struct.rtx_def*, %struct.rtx_def** %out279, align 8
  %162 = bitcast %struct.rtx_def* %161 to i32*
  %bf.load280 = load i32, i32* %162, align 8
  %bf.clear281 = and i32 %bf.load280, 65535
  %cmp282 = icmp eq i32 %bf.clear281, 61
  br i1 %cmp282, label %if.then.291, label %lor.lhs.false.284

lor.lhs.false.284:                                ; preds = %land.lhs.true.276
  %163 = load i32, i32* %r, align 4
  %idxprom285 = sext i32 %163 to i64
  %arrayidx286 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom285
  %out_reg = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx286, i32 0, i32 9
  %164 = load %struct.rtx_def*, %struct.rtx_def** %out_reg, align 8
  %165 = bitcast %struct.rtx_def* %164 to i32*
  %bf.load287 = load i32, i32* %165, align 8
  %bf.clear288 = and i32 %bf.load287, 65535
  %cmp289 = icmp eq i32 %bf.clear288, 61
  br i1 %cmp289, label %if.then.291, label %if.else.511

if.then.291:                                      ; preds = %lor.lhs.false.284, %land.lhs.true.276
  %166 = load i32, i32* %r, align 4
  %idxprom293 = sext i32 %166 to i64
  %arrayidx294 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom293
  %out295 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx294, i32 0, i32 1
  %167 = load %struct.rtx_def*, %struct.rtx_def** %out295, align 8
  %168 = bitcast %struct.rtx_def* %167 to i32*
  %bf.load296 = load i32, i32* %168, align 8
  %bf.clear297 = and i32 %bf.load296, 65535
  %cmp298 = icmp eq i32 %bf.clear297, 61
  br i1 %cmp298, label %cond.true.300, label %cond.false.304

cond.true.300:                                    ; preds = %if.then.291
  %169 = load i32, i32* %r, align 4
  %idxprom301 = sext i32 %169 to i64
  %arrayidx302 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom301
  %out303 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx302, i32 0, i32 1
  %170 = load %struct.rtx_def*, %struct.rtx_def** %out303, align 8
  br label %cond.end.322

cond.false.304:                                   ; preds = %if.then.291
  %171 = load i32, i32* %r, align 4
  %idxprom305 = sext i32 %171 to i64
  %arrayidx306 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom305
  %out_reg307 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx306, i32 0, i32 9
  %172 = load %struct.rtx_def*, %struct.rtx_def** %out_reg307, align 8
  %tobool308 = icmp ne %struct.rtx_def* %172, null
  br i1 %tobool308, label %cond.true.309, label %cond.false.313

cond.true.309:                                    ; preds = %cond.false.304
  %173 = load i32, i32* %r, align 4
  %idxprom310 = sext i32 %173 to i64
  %arrayidx311 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom310
  %out_reg312 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx311, i32 0, i32 9
  %174 = load %struct.rtx_def*, %struct.rtx_def** %out_reg312, align 8
  br label %cond.end.320

cond.false.313:                                   ; preds = %cond.false.304
  %175 = load i32, i32* %r, align 4
  %idxprom314 = sext i32 %175 to i64
  %arrayidx315 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom314
  %in_reg316 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx315, i32 0, i32 8
  %176 = load %struct.rtx_def*, %struct.rtx_def** %in_reg316, align 8
  %fld317 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %176, i32 0, i32 1
  %arrayidx318 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld317, i32 0, i64 0
  %rtx319 = bitcast %union.rtunion_def* %arrayidx318 to %struct.rtx_def**
  %177 = load %struct.rtx_def*, %struct.rtx_def** %rtx319, align 8
  br label %cond.end.320

cond.end.320:                                     ; preds = %cond.false.313, %cond.true.309
  %cond321 = phi %struct.rtx_def* [ %174, %cond.true.309 ], [ %177, %cond.false.313 ]
  br label %cond.end.322

cond.end.322:                                     ; preds = %cond.end.320, %cond.true.300
  %cond323 = phi %struct.rtx_def* [ %170, %cond.true.300 ], [ %cond321, %cond.end.320 ]
  store %struct.rtx_def* %cond323, %struct.rtx_def** %out292, align 8
  %178 = load %struct.rtx_def*, %struct.rtx_def** %out292, align 8
  %fld325 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %178, i32 0, i32 1
  %arrayidx326 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld325, i32 0, i64 0
  %rtuint327 = bitcast %union.rtunion_def* %arrayidx326 to i32*
  %179 = load i32, i32* %rtuint327, align 4
  store i32 %179, i32* %nregno324, align 4
  %180 = load i32, i32* %nregno324, align 4
  %cmp328 = icmp sge i32 %180, 53
  br i1 %cmp328, label %cond.true.330, label %cond.false.331

cond.true.330:                                    ; preds = %cond.end.322
  br label %cond.end.430

cond.false.331:                                   ; preds = %cond.end.322
  %181 = load i32, i32* %nregno324, align 4
  %cmp332 = icmp sge i32 %181, 8
  br i1 %cmp332, label %land.lhs.true.334, label %lor.lhs.false.337

land.lhs.true.334:                                ; preds = %cond.false.331
  %182 = load i32, i32* %nregno324, align 4
  %cmp335 = icmp sle i32 %182, 15
  br i1 %cmp335, label %cond.true.355, label %lor.lhs.false.337

lor.lhs.false.337:                                ; preds = %land.lhs.true.334, %cond.false.331
  %183 = load i32, i32* %nregno324, align 4
  %cmp338 = icmp sge i32 %183, 21
  br i1 %cmp338, label %land.lhs.true.340, label %lor.lhs.false.343

land.lhs.true.340:                                ; preds = %lor.lhs.false.337
  %184 = load i32, i32* %nregno324, align 4
  %cmp341 = icmp sle i32 %184, 28
  br i1 %cmp341, label %cond.true.355, label %lor.lhs.false.343

lor.lhs.false.343:                                ; preds = %land.lhs.true.340, %lor.lhs.false.337
  %185 = load i32, i32* %nregno324, align 4
  %cmp344 = icmp sge i32 %185, 45
  br i1 %cmp344, label %land.lhs.true.346, label %lor.lhs.false.349

land.lhs.true.346:                                ; preds = %lor.lhs.false.343
  %186 = load i32, i32* %nregno324, align 4
  %cmp347 = icmp sle i32 %186, 52
  br i1 %cmp347, label %cond.true.355, label %lor.lhs.false.349

lor.lhs.false.349:                                ; preds = %land.lhs.true.346, %lor.lhs.false.343
  %187 = load i32, i32* %nregno324, align 4
  %cmp350 = icmp sge i32 %187, 29
  br i1 %cmp350, label %land.lhs.true.352, label %cond.false.379

land.lhs.true.352:                                ; preds = %lor.lhs.false.349
  %188 = load i32, i32* %nregno324, align 4
  %cmp353 = icmp sle i32 %188, 36
  br i1 %cmp353, label %cond.true.355, label %cond.false.379

cond.true.355:                                    ; preds = %land.lhs.true.352, %land.lhs.true.346, %land.lhs.true.340, %land.lhs.true.334
  %189 = load i32, i32* %r, align 4
  %idxprom356 = sext i32 %189 to i64
  %arrayidx357 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom356
  %reg_rtx358 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx357, i32 0, i32 11
  %190 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx358, align 8
  %191 = bitcast %struct.rtx_def* %190 to i32*
  %bf.load359 = load i32, i32* %191, align 8
  %bf.lshr360 = lshr i32 %bf.load359, 16
  %bf.clear361 = and i32 %bf.lshr360, 255
  %idxprom362 = sext i32 %bf.clear361 to i64
  %arrayidx363 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom362
  %192 = load i32, i32* %arrayidx363, align 4
  %cmp364 = icmp eq i32 %192, 5
  br i1 %cmp364, label %lor.end.377, label %lor.rhs.366

lor.rhs.366:                                      ; preds = %cond.true.355
  %193 = load i32, i32* %r, align 4
  %idxprom367 = sext i32 %193 to i64
  %arrayidx368 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom367
  %reg_rtx369 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx368, i32 0, i32 11
  %194 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx369, align 8
  %195 = bitcast %struct.rtx_def* %194 to i32*
  %bf.load370 = load i32, i32* %195, align 8
  %bf.lshr371 = lshr i32 %bf.load370, 16
  %bf.clear372 = and i32 %bf.lshr371, 255
  %idxprom373 = sext i32 %bf.clear372 to i64
  %arrayidx374 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom373
  %196 = load i32, i32* %arrayidx374, align 4
  %cmp375 = icmp eq i32 %196, 6
  br label %lor.end.377

lor.end.377:                                      ; preds = %lor.rhs.366, %cond.true.355
  %197 = phi i1 [ true, %cond.true.355 ], [ %cmp375, %lor.rhs.366 ]
  %cond378 = select i1 %197, i32 2, i32 1
  br label %cond.end.428

cond.false.379:                                   ; preds = %land.lhs.true.352, %lor.lhs.false.349
  %198 = load i32, i32* %r, align 4
  %idxprom380 = sext i32 %198 to i64
  %arrayidx381 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom380
  %reg_rtx382 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx381, i32 0, i32 11
  %199 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx382, align 8
  %200 = bitcast %struct.rtx_def* %199 to i32*
  %bf.load383 = load i32, i32* %200, align 8
  %bf.lshr384 = lshr i32 %bf.load383, 16
  %bf.clear385 = and i32 %bf.lshr384, 255
  %cmp386 = icmp eq i32 %bf.clear385, 18
  br i1 %cmp386, label %cond.true.388, label %cond.false.392

cond.true.388:                                    ; preds = %cond.false.379
  %201 = load i32, i32* @target_flags, align 4
  %and389 = and i32 %201, 33554432
  %tobool390 = icmp ne i32 %and389, 0
  %cond391 = select i1 %tobool390, i32 2, i32 3
  br label %cond.end.426

cond.false.392:                                   ; preds = %cond.false.379
  %202 = load i32, i32* %r, align 4
  %idxprom393 = sext i32 %202 to i64
  %arrayidx394 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom393
  %reg_rtx395 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx394, i32 0, i32 11
  %203 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx395, align 8
  %204 = bitcast %struct.rtx_def* %203 to i32*
  %bf.load396 = load i32, i32* %204, align 8
  %bf.lshr397 = lshr i32 %bf.load396, 16
  %bf.clear398 = and i32 %bf.lshr397, 255
  %cmp399 = icmp eq i32 %bf.clear398, 24
  br i1 %cmp399, label %cond.true.401, label %cond.false.405

cond.true.401:                                    ; preds = %cond.false.392
  %205 = load i32, i32* @target_flags, align 4
  %and402 = and i32 %205, 33554432
  %tobool403 = icmp ne i32 %and402, 0
  %cond404 = select i1 %tobool403, i32 4, i32 6
  br label %cond.end.424

cond.false.405:                                   ; preds = %cond.false.392
  %206 = load i32, i32* %r, align 4
  %idxprom406 = sext i32 %206 to i64
  %arrayidx407 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom406
  %reg_rtx408 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx407, i32 0, i32 11
  %207 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx408, align 8
  %208 = bitcast %struct.rtx_def* %207 to i32*
  %bf.load409 = load i32, i32* %208, align 8
  %bf.lshr410 = lshr i32 %bf.load409, 16
  %bf.clear411 = and i32 %bf.lshr410, 255
  %idxprom412 = sext i32 %bf.clear411 to i64
  %arrayidx413 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom412
  %209 = load i8, i8* %arrayidx413, align 1
  %conv414 = zext i8 %209 to i32
  %210 = load i32, i32* @target_flags, align 4
  %and415 = and i32 %210, 33554432
  %tobool416 = icmp ne i32 %and415, 0
  %cond417 = select i1 %tobool416, i32 8, i32 4
  %add418 = add nsw i32 %conv414, %cond417
  %sub419 = sub nsw i32 %add418, 1
  %211 = load i32, i32* @target_flags, align 4
  %and420 = and i32 %211, 33554432
  %tobool421 = icmp ne i32 %and420, 0
  %cond422 = select i1 %tobool421, i32 8, i32 4
  %div423 = sdiv i32 %sub419, %cond422
  br label %cond.end.424

cond.end.424:                                     ; preds = %cond.false.405, %cond.true.401
  %cond425 = phi i32 [ %cond404, %cond.true.401 ], [ %div423, %cond.false.405 ]
  br label %cond.end.426

cond.end.426:                                     ; preds = %cond.end.424, %cond.true.388
  %cond427 = phi i32 [ %cond391, %cond.true.388 ], [ %cond425, %cond.end.424 ]
  br label %cond.end.428

cond.end.428:                                     ; preds = %cond.end.426, %lor.end.377
  %cond429 = phi i32 [ %cond378, %lor.end.377 ], [ %cond427, %cond.end.426 ]
  br label %cond.end.430

cond.end.430:                                     ; preds = %cond.end.428, %cond.true.330
  %cond431 = phi i32 [ 1, %cond.true.330 ], [ %cond429, %cond.end.428 ]
  store i32 %cond431, i32* %nnr, align 4
  %212 = load i32, i32* %i, align 4
  %idxprom432 = sext i32 %212 to i64
  %arrayidx433 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @new_spill_reg_store, i32 0, i64 %idxprom432
  %213 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx433, align 8
  %214 = load i32, i32* %i, align 4
  %idxprom434 = sext i32 %214 to i64
  %arrayidx435 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i32 0, i64 %idxprom434
  store %struct.rtx_def* %213, %struct.rtx_def** %arrayidx435, align 8
  %215 = load %struct.rtx_def*, %struct.rtx_def** %out292, align 8
  %216 = load i32, i32* %i, align 4
  %idxprom436 = sext i32 %216 to i64
  %arrayidx437 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i32 0, i64 %idxprom436
  store %struct.rtx_def* %215, %struct.rtx_def** %arrayidx437, align 8
  %217 = load i32, i32* %r, align 4
  %idxprom438 = sext i32 %217 to i64
  %arrayidx439 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom438
  %reg_rtx440 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx439, i32 0, i32 11
  %218 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx440, align 8
  %219 = load i32, i32* %nregno324, align 4
  %idxprom441 = sext i32 %219 to i64
  %220 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8
  %arrayidx442 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %220, i64 %idxprom441
  store %struct.rtx_def* %218, %struct.rtx_def** %arrayidx442, align 8
  %221 = load i32, i32* %nregno324, align 4
  %cmp443 = icmp slt i32 %221, 53
  br i1 %cmp443, label %if.then.445, label %if.end.479

if.then.445:                                      ; preds = %cond.end.430
  store i32 1, i32* %k, align 4
  br label %for.cond.446

for.cond.446:                                     ; preds = %for.inc.476, %if.then.445
  %222 = load i32, i32* %k, align 4
  %223 = load i32, i32* %nnr, align 4
  %cmp447 = icmp slt i32 %222, %223
  br i1 %cmp447, label %for.body.449, label %for.end.478

for.body.449:                                     ; preds = %for.cond.446
  %224 = load i32, i32* %nr, align 4
  %225 = load i32, i32* %nnr, align 4
  %cmp450 = icmp eq i32 %224, %225
  br i1 %cmp450, label %cond.true.452, label %cond.false.470

cond.true.452:                                    ; preds = %for.body.449
  %226 = load i32, i32* %r, align 4
  %idxprom453 = sext i32 %226 to i64
  %arrayidx454 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom453
  %reg_rtx455 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx454, i32 0, i32 11
  %227 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx455, align 8
  %fld456 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %227, i32 0, i32 1
  %arrayidx457 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld456, i32 0, i64 0
  %rtuint458 = bitcast %union.rtunion_def* %arrayidx457 to i32*
  %228 = load i32, i32* %rtuint458, align 4
  %229 = load i32, i32* %k, align 4
  %add459 = add i32 %228, %229
  %idxprom460 = zext i32 %add459 to i64
  %arrayidx461 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_raw_mode, i32 0, i64 %idxprom460
  %230 = load i32, i32* %arrayidx461, align 4
  %231 = load i32, i32* %r, align 4
  %idxprom462 = sext i32 %231 to i64
  %arrayidx463 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom462
  %reg_rtx464 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx463, i32 0, i32 11
  %232 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx464, align 8
  %fld465 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %232, i32 0, i32 1
  %arrayidx466 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld465, i32 0, i64 0
  %rtuint467 = bitcast %union.rtunion_def* %arrayidx466 to i32*
  %233 = load i32, i32* %rtuint467, align 4
  %234 = load i32, i32* %k, align 4
  %add468 = add i32 %233, %234
  %call469 = call %struct.rtx_def* @gen_rtx_REG(i32 %230, i32 %add468)
  br label %cond.end.471

cond.false.470:                                   ; preds = %for.body.449
  br label %cond.end.471

cond.end.471:                                     ; preds = %cond.false.470, %cond.true.452
  %cond472 = phi %struct.rtx_def* [ %call469, %cond.true.452 ], [ null, %cond.false.470 ]
  %235 = load i32, i32* %nregno324, align 4
  %236 = load i32, i32* %k, align 4
  %add473 = add nsw i32 %235, %236
  %idxprom474 = sext i32 %add473 to i64
  %237 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8
  %arrayidx475 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %237, i64 %idxprom474
  store %struct.rtx_def* %cond472, %struct.rtx_def** %arrayidx475, align 8
  br label %for.inc.476

for.inc.476:                                      ; preds = %cond.end.471
  %238 = load i32, i32* %k, align 4
  %inc477 = add nsw i32 %238, 1
  store i32 %inc477, i32* %k, align 4
  br label %for.cond.446

for.end.478:                                      ; preds = %for.cond.446
  br label %if.end.479

if.end.479:                                       ; preds = %for.end.478, %cond.end.430
  store i32 0, i32* %k, align 4
  br label %for.cond.480

for.cond.480:                                     ; preds = %for.inc.508, %if.end.479
  %239 = load i32, i32* %k, align 4
  %240 = load i32, i32* %nr, align 4
  %cmp481 = icmp slt i32 %239, %240
  br i1 %cmp481, label %for.body.483, label %for.end.510

for.body.483:                                     ; preds = %for.cond.480
  %241 = load i32, i32* %i, align 4
  %242 = load i32, i32* %k, align 4
  %add484 = add nsw i32 %241, %242
  %sh_prom485 = zext i32 %add484 to i64
  %shl486 = shl i64 1, %sh_prom485
  %neg487 = xor i64 %shl486, -1
  %243 = load i64, i64* @reg_reloaded_dead, align 8
  %and488 = and i64 %243, %neg487
  store i64 %and488, i64* @reg_reloaded_dead, align 8
  %244 = load i32, i32* %nregno324, align 4
  %cmp489 = icmp sge i32 %244, 53
  br i1 %cmp489, label %cond.true.494, label %lor.lhs.false.491

lor.lhs.false.491:                                ; preds = %for.body.483
  %245 = load i32, i32* %nr, align 4
  %246 = load i32, i32* %nnr, align 4
  %cmp492 = icmp ne i32 %245, %246
  br i1 %cmp492, label %cond.true.494, label %cond.false.495

cond.true.494:                                    ; preds = %lor.lhs.false.491, %for.body.483
  %247 = load i32, i32* %nregno324, align 4
  br label %cond.end.497

cond.false.495:                                   ; preds = %lor.lhs.false.491
  %248 = load i32, i32* %nregno324, align 4
  %249 = load i32, i32* %k, align 4
  %add496 = add nsw i32 %248, %249
  br label %cond.end.497

cond.end.497:                                     ; preds = %cond.false.495, %cond.true.494
  %cond498 = phi i32 [ %247, %cond.true.494 ], [ %add496, %cond.false.495 ]
  %250 = load i32, i32* %i, align 4
  %251 = load i32, i32* %k, align 4
  %add499 = add nsw i32 %250, %251
  %idxprom500 = sext i32 %add499 to i64
  %arrayidx501 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_reloaded_contents, i32 0, i64 %idxprom500
  store i32 %cond498, i32* %arrayidx501, align 4
  %252 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %253 = load i32, i32* %i, align 4
  %254 = load i32, i32* %k, align 4
  %add502 = add nsw i32 %253, %254
  %idxprom503 = sext i32 %add502 to i64
  %arrayidx504 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @reg_reloaded_insn, i32 0, i64 %idxprom503
  store %struct.rtx_def* %252, %struct.rtx_def** %arrayidx504, align 8
  %255 = load i32, i32* %i, align 4
  %256 = load i32, i32* %k, align 4
  %add505 = add nsw i32 %255, %256
  %sh_prom506 = zext i32 %add505 to i64
  %shl507 = shl i64 1, %sh_prom506
  %257 = load i64, i64* @reg_reloaded_valid, align 8
  %or = or i64 %257, %shl507
  store i64 %or, i64* @reg_reloaded_valid, align 8
  br label %for.inc.508

for.inc.508:                                      ; preds = %cond.end.497
  %258 = load i32, i32* %k, align 4
  %inc509 = add nsw i32 %258, 1
  store i32 %inc509, i32* %k, align 4
  br label %for.cond.480

for.end.510:                                      ; preds = %for.cond.480
  br label %if.end.825

if.else.511:                                      ; preds = %lor.lhs.false.284, %for.end.271
  %259 = load i32, i32* %r, align 4
  %idxprom512 = sext i32 %259 to i64
  %arrayidx513 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom512
  %out_reg514 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx513, i32 0, i32 9
  %260 = load %struct.rtx_def*, %struct.rtx_def** %out_reg514, align 8
  %cmp515 = icmp eq %struct.rtx_def* %260, null
  br i1 %cmp515, label %land.lhs.true.517, label %if.end.824

land.lhs.true.517:                                ; preds = %if.else.511
  %261 = load i32, i32* %r, align 4
  %idxprom518 = sext i32 %261 to i64
  %arrayidx519 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom518
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx519, i32 0, i32 0
  %262 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %cmp520 = icmp ne %struct.rtx_def* %262, null
  br i1 %cmp520, label %land.lhs.true.522, label %if.end.824

land.lhs.true.522:                                ; preds = %land.lhs.true.517
  %263 = load i32, i32* %r, align 4
  %idxprom523 = sext i32 %263 to i64
  %arrayidx524 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom523
  %in525 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx524, i32 0, i32 0
  %264 = load %struct.rtx_def*, %struct.rtx_def** %in525, align 8
  %265 = bitcast %struct.rtx_def* %264 to i32*
  %bf.load526 = load i32, i32* %265, align 8
  %bf.clear527 = and i32 %bf.load526, 65535
  %cmp528 = icmp eq i32 %bf.clear527, 61
  br i1 %cmp528, label %land.lhs.true.530, label %lor.lhs.false.549

land.lhs.true.530:                                ; preds = %land.lhs.true.522
  %266 = load i32, i32* %r, align 4
  %idxprom531 = sext i32 %266 to i64
  %arrayidx532 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom531
  %in533 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx532, i32 0, i32 0
  %267 = load %struct.rtx_def*, %struct.rtx_def** %in533, align 8
  %fld534 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %267, i32 0, i32 1
  %arrayidx535 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld534, i32 0, i64 0
  %rtuint536 = bitcast %union.rtunion_def* %arrayidx535 to i32*
  %268 = load i32, i32* %rtuint536, align 4
  %cmp537 = icmp uge i32 %268, 53
  br i1 %cmp537, label %land.lhs.true.539, label %lor.lhs.false.549

land.lhs.true.539:                                ; preds = %land.lhs.true.530
  %269 = load i32, i32* %r, align 4
  %idxprom540 = sext i32 %269 to i64
  %arrayidx541 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom540
  %in542 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx541, i32 0, i32 0
  %270 = load %struct.rtx_def*, %struct.rtx_def** %in542, align 8
  %fld543 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %270, i32 0, i32 1
  %arrayidx544 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld543, i32 0, i64 0
  %rtuint545 = bitcast %union.rtunion_def* %arrayidx544 to i32*
  %271 = load i32, i32* %rtuint545, align 4
  %idxprom546 = zext i32 %271 to i64
  %272 = load i8*, i8** @reg_has_output_reload, align 8
  %arrayidx547 = getelementptr inbounds i8, i8* %272, i64 %idxprom546
  %273 = load i8, i8* %arrayidx547, align 1
  %tobool548 = icmp ne i8 %273, 0
  br i1 %tobool548, label %lor.lhs.false.549, label %land.lhs.true.567

lor.lhs.false.549:                                ; preds = %land.lhs.true.539, %land.lhs.true.530, %land.lhs.true.522
  %274 = load i32, i32* %r, align 4
  %idxprom550 = sext i32 %274 to i64
  %arrayidx551 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom550
  %in_reg552 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx551, i32 0, i32 8
  %275 = load %struct.rtx_def*, %struct.rtx_def** %in_reg552, align 8
  %276 = bitcast %struct.rtx_def* %275 to i32*
  %bf.load553 = load i32, i32* %276, align 8
  %bf.clear554 = and i32 %bf.load553, 65535
  %cmp555 = icmp eq i32 %bf.clear554, 61
  br i1 %cmp555, label %land.lhs.true.557, label %if.end.824

land.lhs.true.557:                                ; preds = %lor.lhs.false.549
  %277 = load i32, i32* %r, align 4
  %idxprom558 = sext i32 %277 to i64
  %arrayidx559 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom558
  %in_reg560 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx559, i32 0, i32 8
  %278 = load %struct.rtx_def*, %struct.rtx_def** %in_reg560, align 8
  %fld561 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %278, i32 0, i32 1
  %arrayidx562 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld561, i32 0, i64 0
  %rtuint563 = bitcast %union.rtunion_def* %arrayidx562 to i32*
  %279 = load i32, i32* %rtuint563, align 4
  %idxprom564 = zext i32 %279 to i64
  %280 = load i8*, i8** @reg_has_output_reload, align 8
  %arrayidx565 = getelementptr inbounds i8, i8* %280, i64 %idxprom564
  %281 = load i8, i8* %arrayidx565, align 1
  %tobool566 = icmp ne i8 %281, 0
  br i1 %tobool566, label %if.end.824, label %land.lhs.true.567

land.lhs.true.567:                                ; preds = %land.lhs.true.557, %land.lhs.true.539
  %282 = load i32, i32* %r, align 4
  %idxprom568 = sext i32 %282 to i64
  %arrayidx569 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom568
  %reg_rtx570 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx569, i32 0, i32 11
  %283 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx570, align 8
  %284 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld571 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %284, i32 0, i32 1
  %arrayidx572 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld571, i32 0, i64 3
  %rtx573 = bitcast %union.rtunion_def* %arrayidx572 to %struct.rtx_def**
  %285 = load %struct.rtx_def*, %struct.rtx_def** %rtx573, align 8
  %call574 = call i32 @reg_set_p(%struct.rtx_def* %283, %struct.rtx_def* %285)
  %tobool575 = icmp ne i32 %call574, 0
  br i1 %tobool575, label %if.end.824, label %if.then.576

if.then.576:                                      ; preds = %land.lhs.true.567
  %286 = load i32, i32* %r, align 4
  %idxprom579 = sext i32 %286 to i64
  %arrayidx580 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom579
  %in581 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx580, i32 0, i32 0
  %287 = load %struct.rtx_def*, %struct.rtx_def** %in581, align 8
  %288 = bitcast %struct.rtx_def* %287 to i32*
  %bf.load582 = load i32, i32* %288, align 8
  %bf.clear583 = and i32 %bf.load582, 65535
  %cmp584 = icmp eq i32 %bf.clear583, 61
  br i1 %cmp584, label %land.lhs.true.586, label %if.else.602

land.lhs.true.586:                                ; preds = %if.then.576
  %289 = load i32, i32* %r, align 4
  %idxprom587 = sext i32 %289 to i64
  %arrayidx588 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom587
  %in589 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx588, i32 0, i32 0
  %290 = load %struct.rtx_def*, %struct.rtx_def** %in589, align 8
  %fld590 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %290, i32 0, i32 1
  %arrayidx591 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld590, i32 0, i64 0
  %rtuint592 = bitcast %union.rtunion_def* %arrayidx591 to i32*
  %291 = load i32, i32* %rtuint592, align 4
  %cmp593 = icmp uge i32 %291, 53
  br i1 %cmp593, label %if.then.595, label %if.else.602

if.then.595:                                      ; preds = %land.lhs.true.586
  %292 = load i32, i32* %r, align 4
  %idxprom596 = sext i32 %292 to i64
  %arrayidx597 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom596
  %in598 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx597, i32 0, i32 0
  %293 = load %struct.rtx_def*, %struct.rtx_def** %in598, align 8
  %fld599 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %293, i32 0, i32 1
  %arrayidx600 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld599, i32 0, i64 0
  %rtuint601 = bitcast %union.rtunion_def* %arrayidx600 to i32*
  %294 = load i32, i32* %rtuint601, align 4
  store i32 %294, i32* %nregno577, align 4
  br label %if.end.628

if.else.602:                                      ; preds = %land.lhs.true.586, %if.then.576
  %295 = load i32, i32* %r, align 4
  %idxprom603 = sext i32 %295 to i64
  %arrayidx604 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom603
  %in_reg605 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx604, i32 0, i32 8
  %296 = load %struct.rtx_def*, %struct.rtx_def** %in_reg605, align 8
  %297 = bitcast %struct.rtx_def* %296 to i32*
  %bf.load606 = load i32, i32* %297, align 8
  %bf.clear607 = and i32 %bf.load606, 65535
  %cmp608 = icmp eq i32 %bf.clear607, 61
  br i1 %cmp608, label %if.then.610, label %if.else.617

if.then.610:                                      ; preds = %if.else.602
  %298 = load i32, i32* %r, align 4
  %idxprom611 = sext i32 %298 to i64
  %arrayidx612 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom611
  %in_reg613 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx612, i32 0, i32 8
  %299 = load %struct.rtx_def*, %struct.rtx_def** %in_reg613, align 8
  %fld614 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %299, i32 0, i32 1
  %arrayidx615 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld614, i32 0, i64 0
  %rtuint616 = bitcast %union.rtunion_def* %arrayidx615 to i32*
  %300 = load i32, i32* %rtuint616, align 4
  store i32 %300, i32* %nregno577, align 4
  br label %if.end.627

if.else.617:                                      ; preds = %if.else.602
  %301 = load i32, i32* %r, align 4
  %idxprom618 = sext i32 %301 to i64
  %arrayidx619 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom618
  %in_reg620 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx619, i32 0, i32 8
  %302 = load %struct.rtx_def*, %struct.rtx_def** %in_reg620, align 8
  %fld621 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %302, i32 0, i32 1
  %arrayidx622 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld621, i32 0, i64 0
  %rtx623 = bitcast %union.rtunion_def* %arrayidx622 to %struct.rtx_def**
  %303 = load %struct.rtx_def*, %struct.rtx_def** %rtx623, align 8
  %fld624 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %303, i32 0, i32 1
  %arrayidx625 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld624, i32 0, i64 0
  %rtuint626 = bitcast %union.rtunion_def* %arrayidx625 to i32*
  %304 = load i32, i32* %rtuint626, align 4
  store i32 %304, i32* %nregno577, align 4
  br label %if.end.627

if.end.627:                                       ; preds = %if.else.617, %if.then.610
  br label %if.end.628

if.end.628:                                       ; preds = %if.end.627, %if.then.595
  %305 = load i32, i32* %nregno577, align 4
  %cmp629 = icmp sge i32 %305, 53
  br i1 %cmp629, label %cond.true.631, label %cond.false.632

cond.true.631:                                    ; preds = %if.end.628
  br label %cond.end.731

cond.false.632:                                   ; preds = %if.end.628
  %306 = load i32, i32* %nregno577, align 4
  %cmp633 = icmp sge i32 %306, 8
  br i1 %cmp633, label %land.lhs.true.635, label %lor.lhs.false.638

land.lhs.true.635:                                ; preds = %cond.false.632
  %307 = load i32, i32* %nregno577, align 4
  %cmp636 = icmp sle i32 %307, 15
  br i1 %cmp636, label %cond.true.656, label %lor.lhs.false.638

lor.lhs.false.638:                                ; preds = %land.lhs.true.635, %cond.false.632
  %308 = load i32, i32* %nregno577, align 4
  %cmp639 = icmp sge i32 %308, 21
  br i1 %cmp639, label %land.lhs.true.641, label %lor.lhs.false.644

land.lhs.true.641:                                ; preds = %lor.lhs.false.638
  %309 = load i32, i32* %nregno577, align 4
  %cmp642 = icmp sle i32 %309, 28
  br i1 %cmp642, label %cond.true.656, label %lor.lhs.false.644

lor.lhs.false.644:                                ; preds = %land.lhs.true.641, %lor.lhs.false.638
  %310 = load i32, i32* %nregno577, align 4
  %cmp645 = icmp sge i32 %310, 45
  br i1 %cmp645, label %land.lhs.true.647, label %lor.lhs.false.650

land.lhs.true.647:                                ; preds = %lor.lhs.false.644
  %311 = load i32, i32* %nregno577, align 4
  %cmp648 = icmp sle i32 %311, 52
  br i1 %cmp648, label %cond.true.656, label %lor.lhs.false.650

lor.lhs.false.650:                                ; preds = %land.lhs.true.647, %lor.lhs.false.644
  %312 = load i32, i32* %nregno577, align 4
  %cmp651 = icmp sge i32 %312, 29
  br i1 %cmp651, label %land.lhs.true.653, label %cond.false.680

land.lhs.true.653:                                ; preds = %lor.lhs.false.650
  %313 = load i32, i32* %nregno577, align 4
  %cmp654 = icmp sle i32 %313, 36
  br i1 %cmp654, label %cond.true.656, label %cond.false.680

cond.true.656:                                    ; preds = %land.lhs.true.653, %land.lhs.true.647, %land.lhs.true.641, %land.lhs.true.635
  %314 = load i32, i32* %r, align 4
  %idxprom657 = sext i32 %314 to i64
  %arrayidx658 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom657
  %reg_rtx659 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx658, i32 0, i32 11
  %315 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx659, align 8
  %316 = bitcast %struct.rtx_def* %315 to i32*
  %bf.load660 = load i32, i32* %316, align 8
  %bf.lshr661 = lshr i32 %bf.load660, 16
  %bf.clear662 = and i32 %bf.lshr661, 255
  %idxprom663 = sext i32 %bf.clear662 to i64
  %arrayidx664 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom663
  %317 = load i32, i32* %arrayidx664, align 4
  %cmp665 = icmp eq i32 %317, 5
  br i1 %cmp665, label %lor.end.678, label %lor.rhs.667

lor.rhs.667:                                      ; preds = %cond.true.656
  %318 = load i32, i32* %r, align 4
  %idxprom668 = sext i32 %318 to i64
  %arrayidx669 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom668
  %reg_rtx670 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx669, i32 0, i32 11
  %319 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx670, align 8
  %320 = bitcast %struct.rtx_def* %319 to i32*
  %bf.load671 = load i32, i32* %320, align 8
  %bf.lshr672 = lshr i32 %bf.load671, 16
  %bf.clear673 = and i32 %bf.lshr672, 255
  %idxprom674 = sext i32 %bf.clear673 to i64
  %arrayidx675 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom674
  %321 = load i32, i32* %arrayidx675, align 4
  %cmp676 = icmp eq i32 %321, 6
  br label %lor.end.678

lor.end.678:                                      ; preds = %lor.rhs.667, %cond.true.656
  %322 = phi i1 [ true, %cond.true.656 ], [ %cmp676, %lor.rhs.667 ]
  %cond679 = select i1 %322, i32 2, i32 1
  br label %cond.end.729

cond.false.680:                                   ; preds = %land.lhs.true.653, %lor.lhs.false.650
  %323 = load i32, i32* %r, align 4
  %idxprom681 = sext i32 %323 to i64
  %arrayidx682 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom681
  %reg_rtx683 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx682, i32 0, i32 11
  %324 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx683, align 8
  %325 = bitcast %struct.rtx_def* %324 to i32*
  %bf.load684 = load i32, i32* %325, align 8
  %bf.lshr685 = lshr i32 %bf.load684, 16
  %bf.clear686 = and i32 %bf.lshr685, 255
  %cmp687 = icmp eq i32 %bf.clear686, 18
  br i1 %cmp687, label %cond.true.689, label %cond.false.693

cond.true.689:                                    ; preds = %cond.false.680
  %326 = load i32, i32* @target_flags, align 4
  %and690 = and i32 %326, 33554432
  %tobool691 = icmp ne i32 %and690, 0
  %cond692 = select i1 %tobool691, i32 2, i32 3
  br label %cond.end.727

cond.false.693:                                   ; preds = %cond.false.680
  %327 = load i32, i32* %r, align 4
  %idxprom694 = sext i32 %327 to i64
  %arrayidx695 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom694
  %reg_rtx696 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx695, i32 0, i32 11
  %328 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx696, align 8
  %329 = bitcast %struct.rtx_def* %328 to i32*
  %bf.load697 = load i32, i32* %329, align 8
  %bf.lshr698 = lshr i32 %bf.load697, 16
  %bf.clear699 = and i32 %bf.lshr698, 255
  %cmp700 = icmp eq i32 %bf.clear699, 24
  br i1 %cmp700, label %cond.true.702, label %cond.false.706

cond.true.702:                                    ; preds = %cond.false.693
  %330 = load i32, i32* @target_flags, align 4
  %and703 = and i32 %330, 33554432
  %tobool704 = icmp ne i32 %and703, 0
  %cond705 = select i1 %tobool704, i32 4, i32 6
  br label %cond.end.725

cond.false.706:                                   ; preds = %cond.false.693
  %331 = load i32, i32* %r, align 4
  %idxprom707 = sext i32 %331 to i64
  %arrayidx708 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom707
  %reg_rtx709 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx708, i32 0, i32 11
  %332 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx709, align 8
  %333 = bitcast %struct.rtx_def* %332 to i32*
  %bf.load710 = load i32, i32* %333, align 8
  %bf.lshr711 = lshr i32 %bf.load710, 16
  %bf.clear712 = and i32 %bf.lshr711, 255
  %idxprom713 = sext i32 %bf.clear712 to i64
  %arrayidx714 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom713
  %334 = load i8, i8* %arrayidx714, align 1
  %conv715 = zext i8 %334 to i32
  %335 = load i32, i32* @target_flags, align 4
  %and716 = and i32 %335, 33554432
  %tobool717 = icmp ne i32 %and716, 0
  %cond718 = select i1 %tobool717, i32 8, i32 4
  %add719 = add nsw i32 %conv715, %cond718
  %sub720 = sub nsw i32 %add719, 1
  %336 = load i32, i32* @target_flags, align 4
  %and721 = and i32 %336, 33554432
  %tobool722 = icmp ne i32 %and721, 0
  %cond723 = select i1 %tobool722, i32 8, i32 4
  %div724 = sdiv i32 %sub720, %cond723
  br label %cond.end.725

cond.end.725:                                     ; preds = %cond.false.706, %cond.true.702
  %cond726 = phi i32 [ %cond705, %cond.true.702 ], [ %div724, %cond.false.706 ]
  br label %cond.end.727

cond.end.727:                                     ; preds = %cond.end.725, %cond.true.689
  %cond728 = phi i32 [ %cond692, %cond.true.689 ], [ %cond726, %cond.end.725 ]
  br label %cond.end.729

cond.end.729:                                     ; preds = %cond.end.727, %lor.end.678
  %cond730 = phi i32 [ %cond679, %lor.end.678 ], [ %cond728, %cond.end.727 ]
  br label %cond.end.731

cond.end.731:                                     ; preds = %cond.end.729, %cond.true.631
  %cond732 = phi i32 [ 1, %cond.true.631 ], [ %cond730, %cond.end.729 ]
  store i32 %cond732, i32* %nnr578, align 4
  %337 = load i32, i32* %r, align 4
  %idxprom733 = sext i32 %337 to i64
  %arrayidx734 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom733
  %reg_rtx735 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx734, i32 0, i32 11
  %338 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx735, align 8
  %339 = load i32, i32* %nregno577, align 4
  %idxprom736 = sext i32 %339 to i64
  %340 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8
  %arrayidx737 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %340, i64 %idxprom736
  store %struct.rtx_def* %338, %struct.rtx_def** %arrayidx737, align 8
  %341 = load i32, i32* %nregno577, align 4
  %cmp738 = icmp slt i32 %341, 53
  br i1 %cmp738, label %if.then.740, label %if.end.774

if.then.740:                                      ; preds = %cond.end.731
  store i32 1, i32* %k, align 4
  br label %for.cond.741

for.cond.741:                                     ; preds = %for.inc.771, %if.then.740
  %342 = load i32, i32* %k, align 4
  %343 = load i32, i32* %nnr578, align 4
  %cmp742 = icmp slt i32 %342, %343
  br i1 %cmp742, label %for.body.744, label %for.end.773

for.body.744:                                     ; preds = %for.cond.741
  %344 = load i32, i32* %nr, align 4
  %345 = load i32, i32* %nnr578, align 4
  %cmp745 = icmp eq i32 %344, %345
  br i1 %cmp745, label %cond.true.747, label %cond.false.765

cond.true.747:                                    ; preds = %for.body.744
  %346 = load i32, i32* %r, align 4
  %idxprom748 = sext i32 %346 to i64
  %arrayidx749 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom748
  %reg_rtx750 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx749, i32 0, i32 11
  %347 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx750, align 8
  %fld751 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %347, i32 0, i32 1
  %arrayidx752 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld751, i32 0, i64 0
  %rtuint753 = bitcast %union.rtunion_def* %arrayidx752 to i32*
  %348 = load i32, i32* %rtuint753, align 4
  %349 = load i32, i32* %k, align 4
  %add754 = add i32 %348, %349
  %idxprom755 = zext i32 %add754 to i64
  %arrayidx756 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_raw_mode, i32 0, i64 %idxprom755
  %350 = load i32, i32* %arrayidx756, align 4
  %351 = load i32, i32* %r, align 4
  %idxprom757 = sext i32 %351 to i64
  %arrayidx758 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom757
  %reg_rtx759 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx758, i32 0, i32 11
  %352 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx759, align 8
  %fld760 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %352, i32 0, i32 1
  %arrayidx761 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld760, i32 0, i64 0
  %rtuint762 = bitcast %union.rtunion_def* %arrayidx761 to i32*
  %353 = load i32, i32* %rtuint762, align 4
  %354 = load i32, i32* %k, align 4
  %add763 = add i32 %353, %354
  %call764 = call %struct.rtx_def* @gen_rtx_REG(i32 %350, i32 %add763)
  br label %cond.end.766

cond.false.765:                                   ; preds = %for.body.744
  br label %cond.end.766

cond.end.766:                                     ; preds = %cond.false.765, %cond.true.747
  %cond767 = phi %struct.rtx_def* [ %call764, %cond.true.747 ], [ null, %cond.false.765 ]
  %355 = load i32, i32* %nregno577, align 4
  %356 = load i32, i32* %k, align 4
  %add768 = add nsw i32 %355, %356
  %idxprom769 = sext i32 %add768 to i64
  %357 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8
  %arrayidx770 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %357, i64 %idxprom769
  store %struct.rtx_def* %cond767, %struct.rtx_def** %arrayidx770, align 8
  br label %for.inc.771

for.inc.771:                                      ; preds = %cond.end.766
  %358 = load i32, i32* %k, align 4
  %inc772 = add nsw i32 %358, 1
  store i32 %inc772, i32* %k, align 4
  br label %for.cond.741

for.end.773:                                      ; preds = %for.cond.741
  br label %if.end.774

if.end.774:                                       ; preds = %for.end.773, %cond.end.731
  %359 = load i32, i32* %r, align 4
  %idxprom775 = sext i32 %359 to i64
  %arrayidx776 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i32 0, i64 %idxprom775
  %360 = load i8, i8* %arrayidx776, align 1
  %tobool777 = icmp ne i8 %360, 0
  br i1 %tobool777, label %lor.lhs.false.778, label %if.then.788

lor.lhs.false.778:                                ; preds = %if.end.774
  %361 = load i32, i32* %r, align 4
  %idxprom779 = sext i32 %361 to i64
  %arrayidx780 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom779
  %out781 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx780, i32 0, i32 1
  %362 = load %struct.rtx_def*, %struct.rtx_def** %out781, align 8
  %tobool782 = icmp ne %struct.rtx_def* %362, null
  br i1 %tobool782, label %land.lhs.true.783, label %if.end.791

land.lhs.true.783:                                ; preds = %lor.lhs.false.778
  %363 = load i32, i32* %r, align 4
  %idxprom784 = sext i32 %363 to i64
  %arrayidx785 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom784
  %out_reg786 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx785, i32 0, i32 9
  %364 = load %struct.rtx_def*, %struct.rtx_def** %out_reg786, align 8
  %tobool787 = icmp ne %struct.rtx_def* %364, null
  br i1 %tobool787, label %if.end.791, label %if.then.788

if.then.788:                                      ; preds = %land.lhs.true.783, %if.end.774
  %365 = load i32, i32* %i, align 4
  %idxprom789 = sext i32 %365 to i64
  %arrayidx790 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i32 0, i64 %idxprom789
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx790, align 8
  br label %if.end.791

if.end.791:                                       ; preds = %if.then.788, %land.lhs.true.783, %lor.lhs.false.778
  store i32 0, i32* %k, align 4
  br label %for.cond.792

for.cond.792:                                     ; preds = %for.inc.821, %if.end.791
  %366 = load i32, i32* %k, align 4
  %367 = load i32, i32* %nr, align 4
  %cmp793 = icmp slt i32 %366, %367
  br i1 %cmp793, label %for.body.795, label %for.end.823

for.body.795:                                     ; preds = %for.cond.792
  %368 = load i32, i32* %i, align 4
  %369 = load i32, i32* %k, align 4
  %add796 = add nsw i32 %368, %369
  %sh_prom797 = zext i32 %add796 to i64
  %shl798 = shl i64 1, %sh_prom797
  %neg799 = xor i64 %shl798, -1
  %370 = load i64, i64* @reg_reloaded_dead, align 8
  %and800 = and i64 %370, %neg799
  store i64 %and800, i64* @reg_reloaded_dead, align 8
  %371 = load i32, i32* %nregno577, align 4
  %cmp801 = icmp sge i32 %371, 53
  br i1 %cmp801, label %cond.true.806, label %lor.lhs.false.803

lor.lhs.false.803:                                ; preds = %for.body.795
  %372 = load i32, i32* %nr, align 4
  %373 = load i32, i32* %nnr578, align 4
  %cmp804 = icmp ne i32 %372, %373
  br i1 %cmp804, label %cond.true.806, label %cond.false.807

cond.true.806:                                    ; preds = %lor.lhs.false.803, %for.body.795
  %374 = load i32, i32* %nregno577, align 4
  br label %cond.end.809

cond.false.807:                                   ; preds = %lor.lhs.false.803
  %375 = load i32, i32* %nregno577, align 4
  %376 = load i32, i32* %k, align 4
  %add808 = add nsw i32 %375, %376
  br label %cond.end.809

cond.end.809:                                     ; preds = %cond.false.807, %cond.true.806
  %cond810 = phi i32 [ %374, %cond.true.806 ], [ %add808, %cond.false.807 ]
  %377 = load i32, i32* %i, align 4
  %378 = load i32, i32* %k, align 4
  %add811 = add nsw i32 %377, %378
  %idxprom812 = sext i32 %add811 to i64
  %arrayidx813 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_reloaded_contents, i32 0, i64 %idxprom812
  store i32 %cond810, i32* %arrayidx813, align 4
  %379 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %380 = load i32, i32* %i, align 4
  %381 = load i32, i32* %k, align 4
  %add814 = add nsw i32 %380, %381
  %idxprom815 = sext i32 %add814 to i64
  %arrayidx816 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @reg_reloaded_insn, i32 0, i64 %idxprom815
  store %struct.rtx_def* %379, %struct.rtx_def** %arrayidx816, align 8
  %382 = load i32, i32* %i, align 4
  %383 = load i32, i32* %k, align 4
  %add817 = add nsw i32 %382, %383
  %sh_prom818 = zext i32 %add817 to i64
  %shl819 = shl i64 1, %sh_prom818
  %384 = load i64, i64* @reg_reloaded_valid, align 8
  %or820 = or i64 %384, %shl819
  store i64 %or820, i64* @reg_reloaded_valid, align 8
  br label %for.inc.821

for.inc.821:                                      ; preds = %cond.end.809
  %385 = load i32, i32* %k, align 4
  %inc822 = add nsw i32 %385, 1
  store i32 %inc822, i32* %k, align 4
  br label %for.cond.792

for.end.823:                                      ; preds = %for.cond.792
  br label %if.end.824

if.end.824:                                       ; preds = %for.end.823, %land.lhs.true.567, %land.lhs.true.557, %lor.lhs.false.549, %land.lhs.true.517, %if.else.511
  br label %if.end.825

if.end.825:                                       ; preds = %if.end.824, %for.end.510
  br label %if.end.853

if.else.826:                                      ; preds = %for.end.260
  %386 = load i32, i32* %part_reaches_end, align 4
  %tobool827 = icmp ne i32 %386, 0
  br i1 %tobool827, label %if.then.828, label %if.end.852

if.then.828:                                      ; preds = %if.else.826
  store i32 0, i32* %k, align 4
  br label %for.cond.829

for.cond.829:                                     ; preds = %for.inc.849, %if.then.828
  %387 = load i32, i32* %k, align 4
  %388 = load i32, i32* %nr, align 4
  %cmp830 = icmp slt i32 %387, %388
  br i1 %cmp830, label %for.body.832, label %for.end.851

for.body.832:                                     ; preds = %for.cond.829
  %389 = load i32, i32* %i, align 4
  %390 = load i32, i32* %k, align 4
  %add833 = add nsw i32 %389, %390
  %391 = load i32, i32* %r, align 4
  %idxprom834 = sext i32 %391 to i64
  %arrayidx835 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom834
  %opnum836 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx835, i32 0, i32 12
  %392 = load i32, i32* %opnum836, align 4
  %393 = load i32, i32* %r, align 4
  %idxprom837 = sext i32 %393 to i64
  %arrayidx838 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom837
  %when_needed839 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx838, i32 0, i32 17
  %394 = load i32, i32* %when_needed839, align 4
  %call840 = call i32 @reload_reg_reaches_end_p(i32 %add833, i32 %392, i32 %394)
  %tobool841 = icmp ne i32 %call840, 0
  br i1 %tobool841, label %if.then.842, label %if.end.848

if.then.842:                                      ; preds = %for.body.832
  %395 = load i32, i32* %i, align 4
  %396 = load i32, i32* %k, align 4
  %add843 = add nsw i32 %395, %396
  %sh_prom844 = zext i32 %add843 to i64
  %shl845 = shl i64 1, %sh_prom844
  %neg846 = xor i64 %shl845, -1
  %397 = load i64, i64* @reg_reloaded_valid, align 8
  %and847 = and i64 %397, %neg846
  store i64 %and847, i64* @reg_reloaded_valid, align 8
  br label %if.end.848

if.end.848:                                       ; preds = %if.then.842, %for.body.832
  br label %for.inc.849

for.inc.849:                                      ; preds = %if.end.848
  %398 = load i32, i32* %k, align 4
  %inc850 = add nsw i32 %398, 1
  store i32 %inc850, i32* %k, align 4
  br label %for.cond.829

for.end.851:                                      ; preds = %for.cond.829
  br label %if.end.852

if.end.852:                                       ; preds = %for.end.851, %if.else.826
  br label %if.end.853

if.end.853:                                       ; preds = %if.end.852, %if.end.825
  br label %if.end.854

if.end.854:                                       ; preds = %if.end.853, %land.lhs.true.151, %if.end.148
  %399 = load i32, i32* %i, align 4
  %cmp855 = icmp slt i32 %399, 0
  br i1 %cmp855, label %land.lhs.true.857, label %if.end.1245

land.lhs.true.857:                                ; preds = %if.end.854
  %400 = load i32, i32* %r, align 4
  %idxprom858 = sext i32 %400 to i64
  %arrayidx859 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom858
  %out860 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx859, i32 0, i32 1
  %401 = load %struct.rtx_def*, %struct.rtx_def** %out860, align 8
  %cmp861 = icmp ne %struct.rtx_def* %401, null
  br i1 %cmp861, label %land.lhs.true.863, label %if.end.1245

land.lhs.true.863:                                ; preds = %land.lhs.true.857
  %402 = load i32, i32* %r, align 4
  %idxprom864 = sext i32 %402 to i64
  %arrayidx865 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom864
  %out866 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx865, i32 0, i32 1
  %403 = load %struct.rtx_def*, %struct.rtx_def** %out866, align 8
  %404 = bitcast %struct.rtx_def* %403 to i32*
  %bf.load867 = load i32, i32* %404, align 8
  %bf.clear868 = and i32 %bf.load867, 65535
  %cmp869 = icmp eq i32 %bf.clear868, 61
  br i1 %cmp869, label %if.then.887, label %lor.lhs.false.871

lor.lhs.false.871:                                ; preds = %land.lhs.true.863
  %405 = load i32, i32* %r, align 4
  %idxprom872 = sext i32 %405 to i64
  %arrayidx873 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom872
  %out874 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx873, i32 0, i32 1
  %406 = load %struct.rtx_def*, %struct.rtx_def** %out874, align 8
  %407 = bitcast %struct.rtx_def* %406 to i32*
  %bf.load875 = load i32, i32* %407, align 8
  %bf.clear876 = and i32 %bf.load875, 65535
  %cmp877 = icmp eq i32 %bf.clear876, 66
  br i1 %cmp877, label %land.lhs.true.879, label %if.end.1245

land.lhs.true.879:                                ; preds = %lor.lhs.false.871
  %408 = load i32, i32* %r, align 4
  %idxprom880 = sext i32 %408 to i64
  %arrayidx881 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom880
  %out_reg882 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx881, i32 0, i32 9
  %409 = load %struct.rtx_def*, %struct.rtx_def** %out_reg882, align 8
  %410 = bitcast %struct.rtx_def* %409 to i32*
  %bf.load883 = load i32, i32* %410, align 8
  %bf.clear884 = and i32 %bf.load883, 65535
  %cmp885 = icmp eq i32 %bf.clear884, 61
  br i1 %cmp885, label %if.then.887, label %if.end.1245

if.then.887:                                      ; preds = %land.lhs.true.879, %land.lhs.true.863
  %411 = load i32, i32* %r, align 4
  %idxprom889 = sext i32 %411 to i64
  %arrayidx890 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom889
  %out891 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx890, i32 0, i32 1
  %412 = load %struct.rtx_def*, %struct.rtx_def** %out891, align 8
  %413 = bitcast %struct.rtx_def* %412 to i32*
  %bf.load892 = load i32, i32* %413, align 8
  %bf.clear893 = and i32 %bf.load892, 65535
  %cmp894 = icmp eq i32 %bf.clear893, 61
  br i1 %cmp894, label %cond.true.896, label %cond.false.900

cond.true.896:                                    ; preds = %if.then.887
  %414 = load i32, i32* %r, align 4
  %idxprom897 = sext i32 %414 to i64
  %arrayidx898 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom897
  %out899 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx898, i32 0, i32 1
  %415 = load %struct.rtx_def*, %struct.rtx_def** %out899, align 8
  br label %cond.end.904

cond.false.900:                                   ; preds = %if.then.887
  %416 = load i32, i32* %r, align 4
  %idxprom901 = sext i32 %416 to i64
  %arrayidx902 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom901
  %out_reg903 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx902, i32 0, i32 9
  %417 = load %struct.rtx_def*, %struct.rtx_def** %out_reg903, align 8
  br label %cond.end.904

cond.end.904:                                     ; preds = %cond.false.900, %cond.true.896
  %cond905 = phi %struct.rtx_def* [ %415, %cond.true.896 ], [ %417, %cond.false.900 ]
  store %struct.rtx_def* %cond905, %struct.rtx_def** %out888, align 8
  %418 = load %struct.rtx_def*, %struct.rtx_def** %out888, align 8
  %fld907 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %418, i32 0, i32 1
  %arrayidx908 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld907, i32 0, i64 0
  %rtuint909 = bitcast %union.rtunion_def* %arrayidx908 to i32*
  %419 = load i32, i32* %rtuint909, align 4
  store i32 %419, i32* %nregno906, align 4
  %420 = load i32, i32* %nregno906, align 4
  %cmp910 = icmp sge i32 %420, 53
  br i1 %cmp910, label %if.then.912, label %if.else.1136

if.then.912:                                      ; preds = %cond.end.904
  store %struct.rtx_def* null, %struct.rtx_def** %store_insn, align 8
  %421 = load i32, i32* %nregno906, align 4
  %idxprom913 = sext i32 %421 to i64
  %422 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8
  %arrayidx914 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %422, i64 %idxprom913
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx914, align 8
  %423 = load i32, i32* %r, align 4
  %idxprom915 = sext i32 %423 to i64
  %arrayidx916 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom915
  %reg_rtx917 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx916, i32 0, i32 11
  %424 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx917, align 8
  store %struct.rtx_def* %424, %struct.rtx_def** %src_reg, align 8
  %425 = load %struct.rtx_def*, %struct.rtx_def** %src_reg, align 8
  %tobool918 = icmp ne %struct.rtx_def* %425, null
  br i1 %tobool918, label %if.else.982, label %if.then.919

if.then.919:                                      ; preds = %if.then.912
  %426 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %427 = bitcast %struct.rtx_def* %426 to i32*
  %bf.load920 = load i32, i32* %427, align 8
  %bf.clear921 = and i32 %bf.load920, 65535
  %idxprom922 = sext i32 %bf.clear921 to i64
  %arrayidx923 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom922
  %428 = load i8, i8* %arrayidx923, align 1
  %conv924 = sext i8 %428 to i32
  %cmp925 = icmp eq i32 %conv924, 105
  br i1 %cmp925, label %cond.true.927, label %cond.false.946

cond.true.927:                                    ; preds = %if.then.919
  %429 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld928 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %429, i32 0, i32 1
  %arrayidx929 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld928, i32 0, i64 3
  %rtx930 = bitcast %union.rtunion_def* %arrayidx929 to %struct.rtx_def**
  %430 = load %struct.rtx_def*, %struct.rtx_def** %rtx930, align 8
  %431 = bitcast %struct.rtx_def* %430 to i32*
  %bf.load931 = load i32, i32* %431, align 8
  %bf.clear932 = and i32 %bf.load931, 65535
  %cmp933 = icmp eq i32 %bf.clear932, 47
  br i1 %cmp933, label %cond.true.935, label %cond.false.939

cond.true.935:                                    ; preds = %cond.true.927
  %432 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld936 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %432, i32 0, i32 1
  %arrayidx937 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld936, i32 0, i64 3
  %rtx938 = bitcast %union.rtunion_def* %arrayidx937 to %struct.rtx_def**
  %433 = load %struct.rtx_def*, %struct.rtx_def** %rtx938, align 8
  br label %cond.end.944

cond.false.939:                                   ; preds = %cond.true.927
  %434 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %435 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld940 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %435, i32 0, i32 1
  %arrayidx941 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld940, i32 0, i64 3
  %rtx942 = bitcast %union.rtunion_def* %arrayidx941 to %struct.rtx_def**
  %436 = load %struct.rtx_def*, %struct.rtx_def** %rtx942, align 8
  %call943 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %434, %struct.rtx_def* %436)
  br label %cond.end.944

cond.end.944:                                     ; preds = %cond.false.939, %cond.true.935
  %cond945 = phi %struct.rtx_def* [ %433, %cond.true.935 ], [ %call943, %cond.false.939 ]
  br label %cond.end.947

cond.false.946:                                   ; preds = %if.then.919
  br label %cond.end.947

cond.end.947:                                     ; preds = %cond.false.946, %cond.end.944
  %cond948 = phi %struct.rtx_def* [ %cond945, %cond.end.944 ], [ null, %cond.false.946 ]
  store %struct.rtx_def* %cond948, %struct.rtx_def** %set, align 8
  %437 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %tobool949 = icmp ne %struct.rtx_def* %437, null
  br i1 %tobool949, label %land.lhs.true.950, label %if.end.981

land.lhs.true.950:                                ; preds = %cond.end.947
  %438 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld951 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %438, i32 0, i32 1
  %arrayidx952 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld951, i32 0, i64 0
  %rtx953 = bitcast %union.rtunion_def* %arrayidx952 to %struct.rtx_def**
  %439 = load %struct.rtx_def*, %struct.rtx_def** %rtx953, align 8
  %440 = load i32, i32* %r, align 4
  %idxprom954 = sext i32 %440 to i64
  %arrayidx955 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom954
  %out956 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx955, i32 0, i32 1
  %441 = load %struct.rtx_def*, %struct.rtx_def** %out956, align 8
  %cmp957 = icmp eq %struct.rtx_def* %439, %441
  br i1 %cmp957, label %if.then.959, label %if.end.981

if.then.959:                                      ; preds = %land.lhs.true.950
  %442 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld961 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %442, i32 0, i32 1
  %arrayidx962 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld961, i32 0, i64 1
  %rtx963 = bitcast %union.rtunion_def* %arrayidx962 to %struct.rtx_def**
  %443 = load %struct.rtx_def*, %struct.rtx_def** %rtx963, align 8
  store %struct.rtx_def* %443, %struct.rtx_def** %src_reg, align 8
  %444 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  store %struct.rtx_def* %444, %struct.rtx_def** %store_insn, align 8
  store i32 0, i32* %k960, align 4
  br label %for.cond.964

for.cond.964:                                     ; preds = %for.inc.978, %if.then.959
  %445 = load i32, i32* %k960, align 4
  %446 = load i32, i32* @n_reloads, align 4
  %cmp965 = icmp slt i32 %445, %446
  br i1 %cmp965, label %for.body.967, label %for.end.980

for.body.967:                                     ; preds = %for.cond.964
  %447 = load i32, i32* %k960, align 4
  %idxprom968 = sext i32 %447 to i64
  %arrayidx969 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom968
  %in970 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx969, i32 0, i32 0
  %448 = load %struct.rtx_def*, %struct.rtx_def** %in970, align 8
  %449 = load %struct.rtx_def*, %struct.rtx_def** %src_reg, align 8
  %cmp971 = icmp eq %struct.rtx_def* %448, %449
  br i1 %cmp971, label %if.then.973, label %if.end.977

if.then.973:                                      ; preds = %for.body.967
  %450 = load i32, i32* %k960, align 4
  %idxprom974 = sext i32 %450 to i64
  %arrayidx975 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom974
  %reg_rtx976 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx975, i32 0, i32 11
  %451 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx976, align 8
  store %struct.rtx_def* %451, %struct.rtx_def** %src_reg, align 8
  br label %for.end.980

if.end.977:                                       ; preds = %for.body.967
  br label %for.inc.978

for.inc.978:                                      ; preds = %if.end.977
  %452 = load i32, i32* %k960, align 4
  %inc979 = add nsw i32 %452, 1
  store i32 %inc979, i32* %k960, align 4
  br label %for.cond.964

for.end.980:                                      ; preds = %if.then.973, %for.cond.964
  br label %if.end.981

if.end.981:                                       ; preds = %for.end.980, %land.lhs.true.950, %cond.end.947
  br label %if.end.988

if.else.982:                                      ; preds = %if.then.912
  %453 = load %struct.rtx_def*, %struct.rtx_def** %src_reg, align 8
  %fld983 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %453, i32 0, i32 1
  %arrayidx984 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld983, i32 0, i64 0
  %rtuint985 = bitcast %union.rtunion_def* %arrayidx984 to i32*
  %454 = load i32, i32* %rtuint985, align 4
  %idxprom986 = zext i32 %454 to i64
  %arrayidx987 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @new_spill_reg_store, i32 0, i64 %idxprom986
  %455 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx987, align 8
  store %struct.rtx_def* %455, %struct.rtx_def** %store_insn, align 8
  br label %if.end.988

if.end.988:                                       ; preds = %if.else.982, %if.end.981
  %456 = load %struct.rtx_def*, %struct.rtx_def** %src_reg, align 8
  %tobool989 = icmp ne %struct.rtx_def* %456, null
  br i1 %tobool989, label %land.lhs.true.990, label %if.end.1135

land.lhs.true.990:                                ; preds = %if.end.988
  %457 = load %struct.rtx_def*, %struct.rtx_def** %src_reg, align 8
  %458 = bitcast %struct.rtx_def* %457 to i32*
  %bf.load991 = load i32, i32* %458, align 8
  %bf.clear992 = and i32 %bf.load991, 65535
  %cmp993 = icmp eq i32 %bf.clear992, 61
  br i1 %cmp993, label %land.lhs.true.995, label %if.end.1135

land.lhs.true.995:                                ; preds = %land.lhs.true.990
  %459 = load %struct.rtx_def*, %struct.rtx_def** %src_reg, align 8
  %fld996 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %459, i32 0, i32 1
  %arrayidx997 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld996, i32 0, i64 0
  %rtuint998 = bitcast %union.rtunion_def* %arrayidx997 to i32*
  %460 = load i32, i32* %rtuint998, align 4
  %cmp999 = icmp ult i32 %460, 53
  br i1 %cmp999, label %if.then.1001, label %if.end.1135

if.then.1001:                                     ; preds = %land.lhs.true.995
  %461 = load %struct.rtx_def*, %struct.rtx_def** %src_reg, align 8
  %fld1002 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %461, i32 0, i32 1
  %arrayidx1003 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1002, i32 0, i64 0
  %rtuint1004 = bitcast %union.rtunion_def* %arrayidx1003 to i32*
  %462 = load i32, i32* %rtuint1004, align 4
  store i32 %462, i32* %src_regno, align 4
  %463 = load i32, i32* %src_regno, align 4
  %cmp1006 = icmp sge i32 %463, 8
  br i1 %cmp1006, label %land.lhs.true.1008, label %lor.lhs.false.1011

land.lhs.true.1008:                               ; preds = %if.then.1001
  %464 = load i32, i32* %src_regno, align 4
  %cmp1009 = icmp sle i32 %464, 15
  br i1 %cmp1009, label %cond.true.1029, label %lor.lhs.false.1011

lor.lhs.false.1011:                               ; preds = %land.lhs.true.1008, %if.then.1001
  %465 = load i32, i32* %src_regno, align 4
  %cmp1012 = icmp sge i32 %465, 21
  br i1 %cmp1012, label %land.lhs.true.1014, label %lor.lhs.false.1017

land.lhs.true.1014:                               ; preds = %lor.lhs.false.1011
  %466 = load i32, i32* %src_regno, align 4
  %cmp1015 = icmp sle i32 %466, 28
  br i1 %cmp1015, label %cond.true.1029, label %lor.lhs.false.1017

lor.lhs.false.1017:                               ; preds = %land.lhs.true.1014, %lor.lhs.false.1011
  %467 = load i32, i32* %src_regno, align 4
  %cmp1018 = icmp sge i32 %467, 45
  br i1 %cmp1018, label %land.lhs.true.1020, label %lor.lhs.false.1023

land.lhs.true.1020:                               ; preds = %lor.lhs.false.1017
  %468 = load i32, i32* %src_regno, align 4
  %cmp1021 = icmp sle i32 %468, 52
  br i1 %cmp1021, label %cond.true.1029, label %lor.lhs.false.1023

lor.lhs.false.1023:                               ; preds = %land.lhs.true.1020, %lor.lhs.false.1017
  %469 = load i32, i32* %src_regno, align 4
  %cmp1024 = icmp sge i32 %469, 29
  br i1 %cmp1024, label %land.lhs.true.1026, label %cond.false.1046

land.lhs.true.1026:                               ; preds = %lor.lhs.false.1023
  %470 = load i32, i32* %src_regno, align 4
  %cmp1027 = icmp sle i32 %470, 36
  br i1 %cmp1027, label %cond.true.1029, label %cond.false.1046

cond.true.1029:                                   ; preds = %land.lhs.true.1026, %land.lhs.true.1020, %land.lhs.true.1014, %land.lhs.true.1008
  %471 = load i32, i32* %r, align 4
  %idxprom1030 = sext i32 %471 to i64
  %arrayidx1031 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1030
  %mode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1031, i32 0, i32 5
  %472 = load i32, i32* %mode, align 4
  %idxprom1032 = sext i32 %472 to i64
  %arrayidx1033 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1032
  %473 = load i32, i32* %arrayidx1033, align 4
  %cmp1034 = icmp eq i32 %473, 5
  br i1 %cmp1034, label %lor.end.1044, label %lor.rhs.1036

lor.rhs.1036:                                     ; preds = %cond.true.1029
  %474 = load i32, i32* %r, align 4
  %idxprom1037 = sext i32 %474 to i64
  %arrayidx1038 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1037
  %mode1039 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1038, i32 0, i32 5
  %475 = load i32, i32* %mode1039, align 4
  %idxprom1040 = sext i32 %475 to i64
  %arrayidx1041 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1040
  %476 = load i32, i32* %arrayidx1041, align 4
  %cmp1042 = icmp eq i32 %476, 6
  br label %lor.end.1044

lor.end.1044:                                     ; preds = %lor.rhs.1036, %cond.true.1029
  %477 = phi i1 [ true, %cond.true.1029 ], [ %cmp1042, %lor.rhs.1036 ]
  %cond1045 = select i1 %477, i32 2, i32 1
  br label %cond.end.1086

cond.false.1046:                                  ; preds = %land.lhs.true.1026, %lor.lhs.false.1023
  %478 = load i32, i32* %r, align 4
  %idxprom1047 = sext i32 %478 to i64
  %arrayidx1048 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1047
  %mode1049 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1048, i32 0, i32 5
  %479 = load i32, i32* %mode1049, align 4
  %cmp1050 = icmp eq i32 %479, 18
  br i1 %cmp1050, label %cond.true.1052, label %cond.false.1056

cond.true.1052:                                   ; preds = %cond.false.1046
  %480 = load i32, i32* @target_flags, align 4
  %and1053 = and i32 %480, 33554432
  %tobool1054 = icmp ne i32 %and1053, 0
  %cond1055 = select i1 %tobool1054, i32 2, i32 3
  br label %cond.end.1084

cond.false.1056:                                  ; preds = %cond.false.1046
  %481 = load i32, i32* %r, align 4
  %idxprom1057 = sext i32 %481 to i64
  %arrayidx1058 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1057
  %mode1059 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1058, i32 0, i32 5
  %482 = load i32, i32* %mode1059, align 4
  %cmp1060 = icmp eq i32 %482, 24
  br i1 %cmp1060, label %cond.true.1062, label %cond.false.1066

cond.true.1062:                                   ; preds = %cond.false.1056
  %483 = load i32, i32* @target_flags, align 4
  %and1063 = and i32 %483, 33554432
  %tobool1064 = icmp ne i32 %and1063, 0
  %cond1065 = select i1 %tobool1064, i32 4, i32 6
  br label %cond.end.1082

cond.false.1066:                                  ; preds = %cond.false.1056
  %484 = load i32, i32* %r, align 4
  %idxprom1067 = sext i32 %484 to i64
  %arrayidx1068 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1067
  %mode1069 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1068, i32 0, i32 5
  %485 = load i32, i32* %mode1069, align 4
  %idxprom1070 = sext i32 %485 to i64
  %arrayidx1071 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1070
  %486 = load i8, i8* %arrayidx1071, align 1
  %conv1072 = zext i8 %486 to i32
  %487 = load i32, i32* @target_flags, align 4
  %and1073 = and i32 %487, 33554432
  %tobool1074 = icmp ne i32 %and1073, 0
  %cond1075 = select i1 %tobool1074, i32 8, i32 4
  %add1076 = add nsw i32 %conv1072, %cond1075
  %sub1077 = sub nsw i32 %add1076, 1
  %488 = load i32, i32* @target_flags, align 4
  %and1078 = and i32 %488, 33554432
  %tobool1079 = icmp ne i32 %and1078, 0
  %cond1080 = select i1 %tobool1079, i32 8, i32 4
  %div1081 = sdiv i32 %sub1077, %cond1080
  br label %cond.end.1082

cond.end.1082:                                    ; preds = %cond.false.1066, %cond.true.1062
  %cond1083 = phi i32 [ %cond1065, %cond.true.1062 ], [ %div1081, %cond.false.1066 ]
  br label %cond.end.1084

cond.end.1084:                                    ; preds = %cond.end.1082, %cond.true.1052
  %cond1085 = phi i32 [ %cond1055, %cond.true.1052 ], [ %cond1083, %cond.end.1082 ]
  br label %cond.end.1086

cond.end.1086:                                    ; preds = %cond.end.1084, %lor.end.1044
  %cond1087 = phi i32 [ %cond1045, %lor.end.1044 ], [ %cond1085, %cond.end.1084 ]
  store i32 %cond1087, i32* %nr1005, align 4
  %489 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %490 = load i32, i32* %src_regno, align 4
  %call1088 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %489, i32 1, i32 %490)
  store %struct.rtx_def* %call1088, %struct.rtx_def** %note, align 8
  %491 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %tobool1089 = icmp ne %struct.rtx_def* %491, null
  br i1 %tobool1089, label %if.end.1094, label %land.lhs.true.1090

land.lhs.true.1090:                               ; preds = %cond.end.1086
  %492 = load %struct.rtx_def*, %struct.rtx_def** %store_insn, align 8
  %tobool1091 = icmp ne %struct.rtx_def* %492, null
  br i1 %tobool1091, label %if.then.1092, label %if.end.1094

if.then.1092:                                     ; preds = %land.lhs.true.1090
  %493 = load %struct.rtx_def*, %struct.rtx_def** %store_insn, align 8
  %494 = load i32, i32* %src_regno, align 4
  %call1093 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %493, i32 1, i32 %494)
  store %struct.rtx_def* %call1093, %struct.rtx_def** %note, align 8
  br label %if.end.1094

if.end.1094:                                      ; preds = %if.then.1092, %land.lhs.true.1090, %cond.end.1086
  br label %while.cond

while.cond:                                       ; preds = %if.end.1132, %if.end.1094
  %495 = load i32, i32* %nr1005, align 4
  %dec = add nsw i32 %495, -1
  store i32 %dec, i32* %nr1005, align 4
  %cmp1095 = icmp sgt i32 %495, 0
  br i1 %cmp1095, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %496 = load %struct.rtx_def*, %struct.rtx_def** %store_insn, align 8
  %497 = load i32, i32* %src_regno, align 4
  %498 = load i32, i32* %nr1005, align 4
  %add1097 = add nsw i32 %497, %498
  %idxprom1098 = sext i32 %add1097 to i64
  %arrayidx1099 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i32 0, i64 %idxprom1098
  store %struct.rtx_def* %496, %struct.rtx_def** %arrayidx1099, align 8
  %499 = load %struct.rtx_def*, %struct.rtx_def** %out888, align 8
  %500 = load i32, i32* %src_regno, align 4
  %501 = load i32, i32* %nr1005, align 4
  %add1100 = add nsw i32 %500, %501
  %idxprom1101 = sext i32 %add1100 to i64
  %arrayidx1102 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i32 0, i64 %idxprom1101
  store %struct.rtx_def* %499, %struct.rtx_def** %arrayidx1102, align 8
  %502 = load i32, i32* %nregno906, align 4
  %503 = load i32, i32* %src_regno, align 4
  %504 = load i32, i32* %nr1005, align 4
  %add1103 = add nsw i32 %503, %504
  %idxprom1104 = sext i32 %add1103 to i64
  %arrayidx1105 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_reloaded_contents, i32 0, i64 %idxprom1104
  store i32 %502, i32* %arrayidx1105, align 4
  %505 = load %struct.rtx_def*, %struct.rtx_def** %store_insn, align 8
  %506 = load i32, i32* %src_regno, align 4
  %507 = load i32, i32* %nr1005, align 4
  %add1106 = add nsw i32 %506, %507
  %idxprom1107 = sext i32 %add1106 to i64
  %arrayidx1108 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @reg_reloaded_insn, i32 0, i64 %idxprom1107
  store %struct.rtx_def* %505, %struct.rtx_def** %arrayidx1108, align 8
  %508 = load i32, i32* %src_regno, align 4
  %509 = load i32, i32* %nr1005, align 4
  %add1109 = add nsw i32 %508, %509
  %sh_prom1110 = zext i32 %add1109 to i64
  %shl1111 = shl i64 1, %sh_prom1110
  %neg1112 = xor i64 %shl1111, -1
  %510 = load i64, i64* @reg_reloaded_dead, align 8
  %and1113 = and i64 %510, %neg1112
  store i64 %and1113, i64* @reg_reloaded_dead, align 8
  %511 = load i32, i32* %src_regno, align 4
  %512 = load i32, i32* %nr1005, align 4
  %add1114 = add nsw i32 %511, %512
  %sh_prom1115 = zext i32 %add1114 to i64
  %shl1116 = shl i64 1, %sh_prom1115
  %513 = load i64, i64* @reg_reloaded_valid, align 8
  %or1117 = or i64 %513, %shl1116
  store i64 %or1117, i64* @reg_reloaded_valid, align 8
  %514 = load i32, i32* %src_regno, align 4
  %515 = load i32, i32* %nr1005, align 4
  %add1118 = add nsw i32 %514, %515
  %sh_prom1119 = zext i32 %add1118 to i64
  %shl1120 = shl i64 1, %sh_prom1119
  %516 = load i64, i64* @reg_is_output_reload, align 8
  %or1121 = or i64 %516, %shl1120
  store i64 %or1121, i64* @reg_is_output_reload, align 8
  %517 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %tobool1122 = icmp ne %struct.rtx_def* %517, null
  br i1 %tobool1122, label %if.then.1123, label %if.else.1127

if.then.1123:                                     ; preds = %while.body
  %518 = load i32, i32* %src_regno, align 4
  %sh_prom1124 = zext i32 %518 to i64
  %shl1125 = shl i64 1, %sh_prom1124
  %519 = load i64, i64* @reg_reloaded_died, align 8
  %or1126 = or i64 %519, %shl1125
  store i64 %or1126, i64* @reg_reloaded_died, align 8
  br label %if.end.1132

if.else.1127:                                     ; preds = %while.body
  %520 = load i32, i32* %src_regno, align 4
  %sh_prom1128 = zext i32 %520 to i64
  %shl1129 = shl i64 1, %sh_prom1128
  %neg1130 = xor i64 %shl1129, -1
  %521 = load i64, i64* @reg_reloaded_died, align 8
  %and1131 = and i64 %521, %neg1130
  store i64 %and1131, i64* @reg_reloaded_died, align 8
  br label %if.end.1132

if.end.1132:                                      ; preds = %if.else.1127, %if.then.1123
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %522 = load %struct.rtx_def*, %struct.rtx_def** %src_reg, align 8
  %523 = load i32, i32* %nregno906, align 4
  %idxprom1133 = sext i32 %523 to i64
  %524 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8
  %arrayidx1134 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %524, i64 %idxprom1133
  store %struct.rtx_def* %522, %struct.rtx_def** %arrayidx1134, align 8
  br label %if.end.1135

if.end.1135:                                      ; preds = %while.end, %land.lhs.true.995, %land.lhs.true.990, %if.end.988
  br label %if.end.1244

if.else.1136:                                     ; preds = %cond.end.904
  %525 = load i32, i32* %nregno906, align 4
  %cmp1137 = icmp sge i32 %525, 8
  br i1 %cmp1137, label %land.lhs.true.1139, label %lor.lhs.false.1142

land.lhs.true.1139:                               ; preds = %if.else.1136
  %526 = load i32, i32* %nregno906, align 4
  %cmp1140 = icmp sle i32 %526, 15
  br i1 %cmp1140, label %cond.true.1160, label %lor.lhs.false.1142

lor.lhs.false.1142:                               ; preds = %land.lhs.true.1139, %if.else.1136
  %527 = load i32, i32* %nregno906, align 4
  %cmp1143 = icmp sge i32 %527, 21
  br i1 %cmp1143, label %land.lhs.true.1145, label %lor.lhs.false.1148

land.lhs.true.1145:                               ; preds = %lor.lhs.false.1142
  %528 = load i32, i32* %nregno906, align 4
  %cmp1146 = icmp sle i32 %528, 28
  br i1 %cmp1146, label %cond.true.1160, label %lor.lhs.false.1148

lor.lhs.false.1148:                               ; preds = %land.lhs.true.1145, %lor.lhs.false.1142
  %529 = load i32, i32* %nregno906, align 4
  %cmp1149 = icmp sge i32 %529, 45
  br i1 %cmp1149, label %land.lhs.true.1151, label %lor.lhs.false.1154

land.lhs.true.1151:                               ; preds = %lor.lhs.false.1148
  %530 = load i32, i32* %nregno906, align 4
  %cmp1152 = icmp sle i32 %530, 52
  br i1 %cmp1152, label %cond.true.1160, label %lor.lhs.false.1154

lor.lhs.false.1154:                               ; preds = %land.lhs.true.1151, %lor.lhs.false.1148
  %531 = load i32, i32* %nregno906, align 4
  %cmp1155 = icmp sge i32 %531, 29
  br i1 %cmp1155, label %land.lhs.true.1157, label %cond.false.1184

land.lhs.true.1157:                               ; preds = %lor.lhs.false.1154
  %532 = load i32, i32* %nregno906, align 4
  %cmp1158 = icmp sle i32 %532, 36
  br i1 %cmp1158, label %cond.true.1160, label %cond.false.1184

cond.true.1160:                                   ; preds = %land.lhs.true.1157, %land.lhs.true.1151, %land.lhs.true.1145, %land.lhs.true.1139
  %533 = load i32, i32* %r, align 4
  %idxprom1161 = sext i32 %533 to i64
  %arrayidx1162 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1161
  %out1163 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1162, i32 0, i32 1
  %534 = load %struct.rtx_def*, %struct.rtx_def** %out1163, align 8
  %535 = bitcast %struct.rtx_def* %534 to i32*
  %bf.load1164 = load i32, i32* %535, align 8
  %bf.lshr1165 = lshr i32 %bf.load1164, 16
  %bf.clear1166 = and i32 %bf.lshr1165, 255
  %idxprom1167 = sext i32 %bf.clear1166 to i64
  %arrayidx1168 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1167
  %536 = load i32, i32* %arrayidx1168, align 4
  %cmp1169 = icmp eq i32 %536, 5
  br i1 %cmp1169, label %lor.end.1182, label %lor.rhs.1171

lor.rhs.1171:                                     ; preds = %cond.true.1160
  %537 = load i32, i32* %r, align 4
  %idxprom1172 = sext i32 %537 to i64
  %arrayidx1173 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1172
  %out1174 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1173, i32 0, i32 1
  %538 = load %struct.rtx_def*, %struct.rtx_def** %out1174, align 8
  %539 = bitcast %struct.rtx_def* %538 to i32*
  %bf.load1175 = load i32, i32* %539, align 8
  %bf.lshr1176 = lshr i32 %bf.load1175, 16
  %bf.clear1177 = and i32 %bf.lshr1176, 255
  %idxprom1178 = sext i32 %bf.clear1177 to i64
  %arrayidx1179 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1178
  %540 = load i32, i32* %arrayidx1179, align 4
  %cmp1180 = icmp eq i32 %540, 6
  br label %lor.end.1182

lor.end.1182:                                     ; preds = %lor.rhs.1171, %cond.true.1160
  %541 = phi i1 [ true, %cond.true.1160 ], [ %cmp1180, %lor.rhs.1171 ]
  %cond1183 = select i1 %541, i32 2, i32 1
  br label %cond.end.1233

cond.false.1184:                                  ; preds = %land.lhs.true.1157, %lor.lhs.false.1154
  %542 = load i32, i32* %r, align 4
  %idxprom1185 = sext i32 %542 to i64
  %arrayidx1186 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1185
  %out1187 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1186, i32 0, i32 1
  %543 = load %struct.rtx_def*, %struct.rtx_def** %out1187, align 8
  %544 = bitcast %struct.rtx_def* %543 to i32*
  %bf.load1188 = load i32, i32* %544, align 8
  %bf.lshr1189 = lshr i32 %bf.load1188, 16
  %bf.clear1190 = and i32 %bf.lshr1189, 255
  %cmp1191 = icmp eq i32 %bf.clear1190, 18
  br i1 %cmp1191, label %cond.true.1193, label %cond.false.1197

cond.true.1193:                                   ; preds = %cond.false.1184
  %545 = load i32, i32* @target_flags, align 4
  %and1194 = and i32 %545, 33554432
  %tobool1195 = icmp ne i32 %and1194, 0
  %cond1196 = select i1 %tobool1195, i32 2, i32 3
  br label %cond.end.1231

cond.false.1197:                                  ; preds = %cond.false.1184
  %546 = load i32, i32* %r, align 4
  %idxprom1198 = sext i32 %546 to i64
  %arrayidx1199 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1198
  %out1200 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1199, i32 0, i32 1
  %547 = load %struct.rtx_def*, %struct.rtx_def** %out1200, align 8
  %548 = bitcast %struct.rtx_def* %547 to i32*
  %bf.load1201 = load i32, i32* %548, align 8
  %bf.lshr1202 = lshr i32 %bf.load1201, 16
  %bf.clear1203 = and i32 %bf.lshr1202, 255
  %cmp1204 = icmp eq i32 %bf.clear1203, 24
  br i1 %cmp1204, label %cond.true.1206, label %cond.false.1210

cond.true.1206:                                   ; preds = %cond.false.1197
  %549 = load i32, i32* @target_flags, align 4
  %and1207 = and i32 %549, 33554432
  %tobool1208 = icmp ne i32 %and1207, 0
  %cond1209 = select i1 %tobool1208, i32 4, i32 6
  br label %cond.end.1229

cond.false.1210:                                  ; preds = %cond.false.1197
  %550 = load i32, i32* %r, align 4
  %idxprom1211 = sext i32 %550 to i64
  %arrayidx1212 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1211
  %out1213 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1212, i32 0, i32 1
  %551 = load %struct.rtx_def*, %struct.rtx_def** %out1213, align 8
  %552 = bitcast %struct.rtx_def* %551 to i32*
  %bf.load1214 = load i32, i32* %552, align 8
  %bf.lshr1215 = lshr i32 %bf.load1214, 16
  %bf.clear1216 = and i32 %bf.lshr1215, 255
  %idxprom1217 = sext i32 %bf.clear1216 to i64
  %arrayidx1218 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1217
  %553 = load i8, i8* %arrayidx1218, align 1
  %conv1219 = zext i8 %553 to i32
  %554 = load i32, i32* @target_flags, align 4
  %and1220 = and i32 %554, 33554432
  %tobool1221 = icmp ne i32 %and1220, 0
  %cond1222 = select i1 %tobool1221, i32 8, i32 4
  %add1223 = add nsw i32 %conv1219, %cond1222
  %sub1224 = sub nsw i32 %add1223, 1
  %555 = load i32, i32* @target_flags, align 4
  %and1225 = and i32 %555, 33554432
  %tobool1226 = icmp ne i32 %and1225, 0
  %cond1227 = select i1 %tobool1226, i32 8, i32 4
  %div1228 = sdiv i32 %sub1224, %cond1227
  br label %cond.end.1229

cond.end.1229:                                    ; preds = %cond.false.1210, %cond.true.1206
  %cond1230 = phi i32 [ %cond1209, %cond.true.1206 ], [ %div1228, %cond.false.1210 ]
  br label %cond.end.1231

cond.end.1231:                                    ; preds = %cond.end.1229, %cond.true.1193
  %cond1232 = phi i32 [ %cond1196, %cond.true.1193 ], [ %cond1230, %cond.end.1229 ]
  br label %cond.end.1233

cond.end.1233:                                    ; preds = %cond.end.1231, %lor.end.1182
  %cond1234 = phi i32 [ %cond1183, %lor.end.1182 ], [ %cond1232, %cond.end.1231 ]
  store i32 %cond1234, i32* %num_regs, align 4
  br label %while.cond.1235

while.cond.1235:                                  ; preds = %while.body.1239, %cond.end.1233
  %556 = load i32, i32* %num_regs, align 4
  %dec1236 = add nsw i32 %556, -1
  store i32 %dec1236, i32* %num_regs, align 4
  %cmp1237 = icmp sgt i32 %556, 0
  br i1 %cmp1237, label %while.body.1239, label %while.end.1243

while.body.1239:                                  ; preds = %while.cond.1235
  %557 = load i32, i32* %nregno906, align 4
  %558 = load i32, i32* %num_regs, align 4
  %add1240 = add nsw i32 %557, %558
  %idxprom1241 = sext i32 %add1240 to i64
  %559 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8
  %arrayidx1242 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %559, i64 %idxprom1241
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx1242, align 8
  br label %while.cond.1235

while.end.1243:                                   ; preds = %while.cond.1235
  br label %if.end.1244

if.end.1244:                                      ; preds = %while.end.1243, %if.end.1135
  br label %if.end.1245

if.end.1245:                                      ; preds = %if.end.1244, %land.lhs.true.879, %lor.lhs.false.871, %land.lhs.true.857, %if.end.854
  br label %for.inc.1246

for.inc.1246:                                     ; preds = %if.end.1245
  %560 = load i32, i32* %j, align 4
  %inc1247 = add nsw i32 %560, 1
  store i32 %inc1247, i32* %j, align 4
  br label %for.cond.79

for.end.1248:                                     ; preds = %for.cond.79
  %561 = load i64, i64* @reg_reloaded_died, align 8
  %562 = load i64, i64* @reg_reloaded_dead, align 8
  %or1249 = or i64 %562, %561
  store i64 %or1249, i64* @reg_reloaded_dead, align 8
  ret void
}

declare void @subst_reloads(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @forget_old_reloads_1(%struct.rtx_def* %x, %struct.rtx_def* %ignored, i8* %data) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %ignored.addr = alloca %struct.rtx_def*, align 8
  %data.addr = alloca i8*, align 8
  %regno = alloca i32, align 4
  %nr = alloca i32, align 4
  %offset = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %ignored, %struct.rtx_def** %ignored.addr, align 8
  store i8* %data, i8** %data.addr, align 8
  store i32 0, i32* %offset, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 63
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %fld1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx2 to i32*
  %4 = load i32, i32* %rtuint, align 4
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i32 0, i64 0
  %rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtx5, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load6 = load i32, i32* %7, align 8
  %bf.lshr = lshr i32 %bf.load6, 16
  %bf.clear7 = and i32 %bf.lshr, 255
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i32 0, i64 1
  %rtuint10 = bitcast %union.rtunion_def* %arrayidx9 to i32*
  %9 = load i32, i32* %rtuint10, align 4
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load11 = load i32, i32* %11, align 8
  %bf.lshr12 = lshr i32 %bf.load11, 16
  %bf.clear13 = and i32 %bf.lshr12, 255
  %call = call i32 @subreg_regno_offset(i32 %4, i32 %bf.clear7, i32 %9, i32 %bf.clear13)
  %12 = load i32, i32* %offset, align 4
  %add = add i32 %12, %call
  store i32 %add, i32* %offset, align 4
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i32 0, i64 0
  %rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rtx16, align 8
  store %struct.rtx_def* %14, %struct.rtx_def** %x.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %16 = bitcast %struct.rtx_def* %15 to i32*
  %bf.load17 = load i32, i32* %16, align 8
  %bf.clear18 = and i32 %bf.load17, 65535
  %cmp19 = icmp ne i32 %bf.clear18, 61
  br i1 %cmp19, label %if.then, label %if.end

if.then:                                          ; preds = %while.end
  br label %while.end.119

if.end:                                           ; preds = %while.end
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i32 0, i64 0
  %rtuint22 = bitcast %union.rtunion_def* %arrayidx21 to i32*
  %18 = load i32, i32* %rtuint22, align 4
  %19 = load i32, i32* %offset, align 4
  %add23 = add i32 %18, %19
  store i32 %add23, i32* %regno, align 4
  %20 = load i32, i32* %regno, align 4
  %cmp24 = icmp uge i32 %20, 53
  br i1 %cmp24, label %if.then.25, label %if.else

if.then.25:                                       ; preds = %if.end
  store i32 1, i32* %nr, align 4
  br label %if.end.100

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* %regno, align 4
  %cmp26 = icmp uge i32 %21, 8
  br i1 %cmp26, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.else
  %22 = load i32, i32* %regno, align 4
  %cmp27 = icmp ule i32 %22, 15
  br i1 %cmp27, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.else
  %23 = load i32, i32* %regno, align 4
  %cmp28 = icmp uge i32 %23, 21
  br i1 %cmp28, label %land.lhs.true.29, label %lor.lhs.false.31

land.lhs.true.29:                                 ; preds = %lor.lhs.false
  %24 = load i32, i32* %regno, align 4
  %cmp30 = icmp ule i32 %24, 28
  br i1 %cmp30, label %cond.true, label %lor.lhs.false.31

lor.lhs.false.31:                                 ; preds = %land.lhs.true.29, %lor.lhs.false
  %25 = load i32, i32* %regno, align 4
  %cmp32 = icmp uge i32 %25, 45
  br i1 %cmp32, label %land.lhs.true.33, label %lor.lhs.false.35

land.lhs.true.33:                                 ; preds = %lor.lhs.false.31
  %26 = load i32, i32* %regno, align 4
  %cmp34 = icmp ule i32 %26, 52
  br i1 %cmp34, label %cond.true, label %lor.lhs.false.35

lor.lhs.false.35:                                 ; preds = %land.lhs.true.33, %lor.lhs.false.31
  %27 = load i32, i32* %regno, align 4
  %cmp36 = icmp uge i32 %27, 29
  br i1 %cmp36, label %land.lhs.true.37, label %cond.false

land.lhs.true.37:                                 ; preds = %lor.lhs.false.35
  %28 = load i32, i32* %regno, align 4
  %cmp38 = icmp ule i32 %28, 36
  br i1 %cmp38, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.37, %land.lhs.true.33, %land.lhs.true.29, %land.lhs.true
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load39 = load i32, i32* %30, align 8
  %bf.lshr40 = lshr i32 %bf.load39, 16
  %bf.clear41 = and i32 %bf.lshr40, 255
  %idxprom = sext i32 %bf.clear41 to i64
  %arrayidx42 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %31 = load i32, i32* %arrayidx42, align 4
  %cmp43 = icmp eq i32 %31, 5
  br i1 %cmp43, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %32 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load44 = load i32, i32* %33, align 8
  %bf.lshr45 = lshr i32 %bf.load44, 16
  %bf.clear46 = and i32 %bf.lshr45, 255
  %idxprom47 = sext i32 %bf.clear46 to i64
  %arrayidx48 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom47
  %34 = load i32, i32* %arrayidx48, align 4
  %cmp49 = icmp eq i32 %34, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %35 = phi i1 [ true, %cond.true ], [ %cmp49, %lor.rhs ]
  %cond = select i1 %35, i32 2, i32 1
  br label %cond.end.81

cond.false:                                       ; preds = %land.lhs.true.37, %lor.lhs.false.35
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %37 = bitcast %struct.rtx_def* %36 to i32*
  %bf.load50 = load i32, i32* %37, align 8
  %bf.lshr51 = lshr i32 %bf.load50, 16
  %bf.clear52 = and i32 %bf.lshr51, 255
  %cmp53 = icmp eq i32 %bf.clear52, 18
  br i1 %cmp53, label %cond.true.54, label %cond.false.56

cond.true.54:                                     ; preds = %cond.false
  %38 = load i32, i32* @target_flags, align 4
  %and = and i32 %38, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond55 = select i1 %tobool, i32 2, i32 3
  br label %cond.end.79

cond.false.56:                                    ; preds = %cond.false
  %39 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %40 = bitcast %struct.rtx_def* %39 to i32*
  %bf.load57 = load i32, i32* %40, align 8
  %bf.lshr58 = lshr i32 %bf.load57, 16
  %bf.clear59 = and i32 %bf.lshr58, 255
  %cmp60 = icmp eq i32 %bf.clear59, 24
  br i1 %cmp60, label %cond.true.61, label %cond.false.65

cond.true.61:                                     ; preds = %cond.false.56
  %41 = load i32, i32* @target_flags, align 4
  %and62 = and i32 %41, 33554432
  %tobool63 = icmp ne i32 %and62, 0
  %cond64 = select i1 %tobool63, i32 4, i32 6
  br label %cond.end

cond.false.65:                                    ; preds = %cond.false.56
  %42 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %43 = bitcast %struct.rtx_def* %42 to i32*
  %bf.load66 = load i32, i32* %43, align 8
  %bf.lshr67 = lshr i32 %bf.load66, 16
  %bf.clear68 = and i32 %bf.lshr67, 255
  %idxprom69 = sext i32 %bf.clear68 to i64
  %arrayidx70 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom69
  %44 = load i8, i8* %arrayidx70, align 1
  %conv = zext i8 %44 to i32
  %45 = load i32, i32* @target_flags, align 4
  %and71 = and i32 %45, 33554432
  %tobool72 = icmp ne i32 %and71, 0
  %cond73 = select i1 %tobool72, i32 8, i32 4
  %add74 = add nsw i32 %conv, %cond73
  %sub = sub nsw i32 %add74, 1
  %46 = load i32, i32* @target_flags, align 4
  %and75 = and i32 %46, 33554432
  %tobool76 = icmp ne i32 %and75, 0
  %cond77 = select i1 %tobool76, i32 8, i32 4
  %div = sdiv i32 %sub, %cond77
  br label %cond.end

cond.end:                                         ; preds = %cond.false.65, %cond.true.61
  %cond78 = phi i32 [ %cond64, %cond.true.61 ], [ %div, %cond.false.65 ]
  br label %cond.end.79

cond.end.79:                                      ; preds = %cond.end, %cond.true.54
  %cond80 = phi i32 [ %cond55, %cond.true.54 ], [ %cond78, %cond.end ]
  br label %cond.end.81

cond.end.81:                                      ; preds = %cond.end.79, %lor.end
  %cond82 = phi i32 [ %cond, %lor.end ], [ %cond80, %cond.end.79 ]
  store i32 %cond82, i32* %nr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.81
  %47 = load i32, i32* %i, align 4
  %48 = load i32, i32* %nr, align 4
  %cmp83 = icmp ult i32 %47, %48
  br i1 %cmp83, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %49 = load i32, i32* @n_reloads, align 4
  %cmp85 = icmp eq i32 %49, 0
  br i1 %cmp85, label %if.then.91, label %lor.lhs.false.87

lor.lhs.false.87:                                 ; preds = %for.body
  %50 = load i64, i64* @reg_is_output_reload, align 8
  %51 = load i32, i32* %regno, align 4
  %52 = load i32, i32* %i, align 4
  %add88 = add i32 %51, %52
  %sh_prom = zext i32 %add88 to i64
  %shl = shl i64 1, %sh_prom
  %and89 = and i64 %50, %shl
  %tobool90 = icmp ne i64 %and89, 0
  br i1 %tobool90, label %if.end.99, label %if.then.91

if.then.91:                                       ; preds = %lor.lhs.false.87, %for.body
  %53 = load i32, i32* %regno, align 4
  %54 = load i32, i32* %i, align 4
  %add92 = add i32 %53, %54
  %sh_prom93 = zext i32 %add92 to i64
  %shl94 = shl i64 1, %sh_prom93
  %neg = xor i64 %shl94, -1
  %55 = load i64, i64* @reg_reloaded_valid, align 8
  %and95 = and i64 %55, %neg
  store i64 %and95, i64* @reg_reloaded_valid, align 8
  %56 = load i32, i32* %regno, align 4
  %57 = load i32, i32* %i, align 4
  %add96 = add i32 %56, %57
  %idxprom97 = zext i32 %add96 to i64
  %arrayidx98 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i32 0, i64 %idxprom97
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx98, align 8
  br label %if.end.99

if.end.99:                                        ; preds = %if.then.91, %lor.lhs.false.87
  br label %for.inc

for.inc:                                          ; preds = %if.end.99
  %58 = load i32, i32* %i, align 4
  %inc = add i32 %58, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.100

if.end.100:                                       ; preds = %for.end, %if.then.25
  br label %while.cond.101

while.cond.101:                                   ; preds = %if.end.118, %if.end.100
  %59 = load i32, i32* %nr, align 4
  %dec = add i32 %59, -1
  store i32 %dec, i32* %nr, align 4
  %cmp102 = icmp ugt i32 %59, 0
  br i1 %cmp102, label %while.body.104, label %while.end.119

while.body.104:                                   ; preds = %while.cond.101
  %60 = load i32, i32* @n_reloads, align 4
  %cmp105 = icmp eq i32 %60, 0
  br i1 %cmp105, label %if.then.114, label %lor.lhs.false.107

lor.lhs.false.107:                                ; preds = %while.body.104
  %61 = load i32, i32* %regno, align 4
  %62 = load i32, i32* %nr, align 4
  %add108 = add i32 %61, %62
  %idxprom109 = zext i32 %add108 to i64
  %63 = load i8*, i8** @reg_has_output_reload, align 8
  %arrayidx110 = getelementptr inbounds i8, i8* %63, i64 %idxprom109
  %64 = load i8, i8* %arrayidx110, align 1
  %conv111 = sext i8 %64 to i32
  %cmp112 = icmp eq i32 %conv111, 0
  br i1 %cmp112, label %if.then.114, label %if.end.118

if.then.114:                                      ; preds = %lor.lhs.false.107, %while.body.104
  %65 = load i32, i32* %regno, align 4
  %66 = load i32, i32* %nr, align 4
  %add115 = add i32 %65, %66
  %idxprom116 = zext i32 %add115 to i64
  %67 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8
  %arrayidx117 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %67, i64 %idxprom116
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx117, align 8
  br label %if.end.118

if.end.118:                                       ; preds = %if.then.114, %lor.lhs.false.107
  br label %while.cond.101

while.end.119:                                    ; preds = %if.then, %while.cond.101
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @choose_reload_regs_init(%struct.insn_chain* %chain, %struct.rtx_def** %save_reload_reg_rtx) #0 {
entry:
  %chain.addr = alloca %struct.insn_chain*, align 8
  %save_reload_reg_rtx.addr = alloca %struct.rtx_def**, align 8
  %i = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  store %struct.rtx_def** %save_reload_reg_rtx, %struct.rtx_def*** %save_reload_reg_rtx.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @n_reloads, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load %struct.rtx_def**, %struct.rtx_def*** %save_reload_reg_rtx.addr, align 8
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %3, i64 %idxprom
  %4 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %5 to i64
  %arrayidx2 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx2, i32 0, i32 11
  store %struct.rtx_def* %4, %struct.rtx_def** %reg_rtx, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([180 x i8], [180 x i8]* @reload_inherited, i32 0, i32 0), i8 0, i64 180, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* bitcast ([180 x %struct.rtx_def*]* @reload_inheritance_insn to i8*), i8 0, i64 1440, i32 1, i1 false)
  call void @llvm.memset.p0i8.i64(i8* bitcast ([180 x %struct.rtx_def*]* @reload_override_in to i8*), i8 0, i64 1440, i32 1, i1 false)
  store i64 0, i64* @reload_reg_used, align 8
  store i64 0, i64* @reload_reg_used_at_all, align 8
  store i64 0, i64* @reload_reg_used_in_op_addr, align 8
  store i64 0, i64* @reload_reg_used_in_op_addr_reload, align 8
  store i64 0, i64* @reload_reg_used_in_insn, align 8
  store i64 0, i64* @reload_reg_used_in_other_addr, align 8
  store i64 0, i64* @reg_used_in_insn, align 8
  br label %do.body

do.body:                                          ; preds = %for.end
  store i64 0, i64* %tmp, align 8
  %7 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %live_throughout = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %7, i32 0, i32 5
  call void @reg_set_to_hard_reg_set(i64* %tmp, %struct.bitmap_head_def* %live_throughout)
  br label %do.end

do.end:                                           ; preds = %do.body
  %8 = load i64, i64* %tmp, align 8
  %9 = load i64, i64* @reg_used_in_insn, align 8
  %or = or i64 %9, %8
  store i64 %or, i64* @reg_used_in_insn, align 8
  br label %do.body.3

do.body.3:                                        ; preds = %do.end
  store i64 0, i64* %tmp, align 8
  %10 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %dead_or_set = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %10, i32 0, i32 6
  call void @reg_set_to_hard_reg_set(i64* %tmp, %struct.bitmap_head_def* %dead_or_set)
  br label %do.end.4

do.end.4:                                         ; preds = %do.body.3
  %11 = load i64, i64* %tmp, align 8
  %12 = load i64, i64* @reg_used_in_insn, align 8
  %or5 = or i64 %12, %11
  store i64 %or5, i64* @reg_used_in_insn, align 8
  %13 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %live_throughout6 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %13, i32 0, i32 5
  call void @compute_use_by_pseudos(i64* @reg_used_in_insn, %struct.bitmap_head_def* %live_throughout6)
  %14 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %dead_or_set7 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %14, i32 0, i32 6
  call void @compute_use_by_pseudos(i64* @reg_used_in_insn, %struct.bitmap_head_def* %dead_or_set7)
  store i32 0, i32* %i, align 4
  br label %for.cond.8

for.cond.8:                                       ; preds = %for.inc.23, %do.end.4
  %15 = load i32, i32* %i, align 4
  %16 = load i32, i32* @reload_n_operands, align 4
  %cmp9 = icmp slt i32 %15, %16
  br i1 %cmp9, label %for.body.10, label %for.end.25

for.body.10:                                      ; preds = %for.cond.8
  %17 = load i32, i32* %i, align 4
  %idxprom11 = sext i32 %17 to i64
  %arrayidx12 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i32 0, i64 %idxprom11
  store i64 0, i64* %arrayidx12, align 8
  %18 = load i32, i32* %i, align 4
  %idxprom13 = sext i32 %18 to i64
  %arrayidx14 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i32 0, i64 %idxprom13
  store i64 0, i64* %arrayidx14, align 8
  %19 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %19 to i64
  %arrayidx16 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input_addr, i32 0, i64 %idxprom15
  store i64 0, i64* %arrayidx16, align 8
  %20 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %20 to i64
  %arrayidx18 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_inpaddr_addr, i32 0, i64 %idxprom17
  store i64 0, i64* %arrayidx18, align 8
  %21 = load i32, i32* %i, align 4
  %idxprom19 = sext i32 %21 to i64
  %arrayidx20 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output_addr, i32 0, i64 %idxprom19
  store i64 0, i64* %arrayidx20, align 8
  %22 = load i32, i32* %i, align 4
  %idxprom21 = sext i32 %22 to i64
  %arrayidx22 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_outaddr_addr, i32 0, i64 %idxprom21
  store i64 0, i64* %arrayidx22, align 8
  br label %for.inc.23

for.inc.23:                                       ; preds = %for.body.10
  %23 = load i32, i32* %i, align 4
  %inc24 = add nsw i32 %23, 1
  store i32 %inc24, i32* %i, align 4
  br label %for.cond.8

for.end.25:                                       ; preds = %for.cond.8
  %24 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %used_spill_regs = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %24, i32 0, i32 9
  %25 = load i64, i64* %used_spill_regs, align 8
  %neg = xor i64 %25, -1
  store i64 %neg, i64* @reload_reg_unavailable, align 8
  store i64 0, i64* @reload_reg_used_for_inherit, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.26

for.cond.26:                                      ; preds = %for.inc.42, %for.end.25
  %26 = load i32, i32* %i, align 4
  %27 = load i32, i32* @n_reloads, align 4
  %cmp27 = icmp slt i32 %26, %27
  br i1 %cmp27, label %for.body.28, label %for.end.44

for.body.28:                                      ; preds = %for.cond.26
  %28 = load i32, i32* %i, align 4
  %idxprom29 = sext i32 %28 to i64
  %arrayidx30 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom29
  %reg_rtx31 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx30, i32 0, i32 11
  %29 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx31, align 8
  %tobool = icmp ne %struct.rtx_def* %29, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body.28
  %30 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %30 to i64
  %arrayidx33 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom32
  %reg_rtx34 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx33, i32 0, i32 11
  %31 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx34, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx35 to i32*
  %32 = load i32, i32* %rtuint, align 4
  %33 = load i32, i32* %i, align 4
  %idxprom36 = sext i32 %33 to i64
  %arrayidx37 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom36
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx37, i32 0, i32 12
  %34 = load i32, i32* %opnum, align 4
  %35 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %35 to i64
  %arrayidx39 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom38
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx39, i32 0, i32 17
  %36 = load i32, i32* %when_needed, align 4
  %37 = load i32, i32* %i, align 4
  %idxprom40 = sext i32 %37 to i64
  %arrayidx41 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom40
  %mode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx41, i32 0, i32 5
  %38 = load i32, i32* %mode, align 4
  call void @mark_reload_reg_in_use(i32 %32, i32 %34, i32 %36, i32 %38)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body.28
  br label %for.inc.42

for.inc.42:                                       ; preds = %if.end
  %39 = load i32, i32* %i, align 4
  %inc43 = add nsw i32 %39, 1
  store i32 %inc43, i32* %i, align 4
  br label %for.cond.26

for.end.44:                                       ; preds = %for.cond.26
  ret void
}

declare i32 @subreg_regno(%struct.rtx_def*) #1

declare i32 @subreg_regno_offset(i32, i32, i32, i32) #1

declare i32 @smallest_mode_for_size(i32, i32) #1

declare i32 @ix86_register_move_cost(i32, i32, i32) #1

declare i32 @ix86_memory_move_cost(i32, i32, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @free_for_value_p(i32 %regno, i32 %mode, i32 %opnum, i32 %type, %struct.rtx_def* %value, %struct.rtx_def* %out, i32 %reloadnum, i32 %ignore_address_reloads) #0 {
entry:
  %retval = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %opnum.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %value.addr = alloca %struct.rtx_def*, align 8
  %out.addr = alloca %struct.rtx_def*, align 8
  %reloadnum.addr = alloca i32, align 4
  %ignore_address_reloads.addr = alloca i32, align 4
  %nregs = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  store i32 %mode, i32* %mode.addr, align 4
  store i32 %opnum, i32* %opnum.addr, align 4
  store i32 %type, i32* %type.addr, align 4
  store %struct.rtx_def* %value, %struct.rtx_def** %value.addr, align 8
  store %struct.rtx_def* %out, %struct.rtx_def** %out.addr, align 8
  store i32 %reloadnum, i32* %reloadnum.addr, align 4
  store i32 %ignore_address_reloads, i32* %ignore_address_reloads.addr, align 4
  %0 = load i32, i32* %regno.addr, align 4
  %cmp = icmp sge i32 %0, 8
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %regno.addr, align 4
  %cmp1 = icmp sle i32 %1, 15
  br i1 %cmp1, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %2 = load i32, i32* %regno.addr, align 4
  %cmp2 = icmp sge i32 %2, 21
  br i1 %cmp2, label %land.lhs.true.3, label %lor.lhs.false.5

land.lhs.true.3:                                  ; preds = %lor.lhs.false
  %3 = load i32, i32* %regno.addr, align 4
  %cmp4 = icmp sle i32 %3, 28
  br i1 %cmp4, label %cond.true, label %lor.lhs.false.5

lor.lhs.false.5:                                  ; preds = %land.lhs.true.3, %lor.lhs.false
  %4 = load i32, i32* %regno.addr, align 4
  %cmp6 = icmp sge i32 %4, 45
  br i1 %cmp6, label %land.lhs.true.7, label %lor.lhs.false.9

land.lhs.true.7:                                  ; preds = %lor.lhs.false.5
  %5 = load i32, i32* %regno.addr, align 4
  %cmp8 = icmp sle i32 %5, 52
  br i1 %cmp8, label %cond.true, label %lor.lhs.false.9

lor.lhs.false.9:                                  ; preds = %land.lhs.true.7, %lor.lhs.false.5
  %6 = load i32, i32* %regno.addr, align 4
  %cmp10 = icmp sge i32 %6, 29
  br i1 %cmp10, label %land.lhs.true.11, label %cond.false

land.lhs.true.11:                                 ; preds = %lor.lhs.false.9
  %7 = load i32, i32* %regno.addr, align 4
  %cmp12 = icmp sle i32 %7, 36
  br i1 %cmp12, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.11, %land.lhs.true.7, %land.lhs.true.3, %land.lhs.true
  %8 = load i32, i32* %mode.addr, align 4
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %9 = load i32, i32* %arrayidx, align 4
  %cmp13 = icmp eq i32 %9, 5
  br i1 %cmp13, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %10 = load i32, i32* %mode.addr, align 4
  %idxprom14 = sext i32 %10 to i64
  %arrayidx15 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom14
  %11 = load i32, i32* %arrayidx15, align 4
  %cmp16 = icmp eq i32 %11, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %12 = phi i1 [ true, %cond.true ], [ %cmp16, %lor.rhs ]
  %cond = select i1 %12, i32 2, i32 1
  br label %cond.end.38

cond.false:                                       ; preds = %land.lhs.true.11, %lor.lhs.false.9
  %13 = load i32, i32* %mode.addr, align 4
  %cmp17 = icmp eq i32 %13, 18
  br i1 %cmp17, label %cond.true.18, label %cond.false.20

cond.true.18:                                     ; preds = %cond.false
  %14 = load i32, i32* @target_flags, align 4
  %and = and i32 %14, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond19 = select i1 %tobool, i32 2, i32 3
  br label %cond.end.36

cond.false.20:                                    ; preds = %cond.false
  %15 = load i32, i32* %mode.addr, align 4
  %cmp21 = icmp eq i32 %15, 24
  br i1 %cmp21, label %cond.true.22, label %cond.false.26

cond.true.22:                                     ; preds = %cond.false.20
  %16 = load i32, i32* @target_flags, align 4
  %and23 = and i32 %16, 33554432
  %tobool24 = icmp ne i32 %and23, 0
  %cond25 = select i1 %tobool24, i32 4, i32 6
  br label %cond.end

cond.false.26:                                    ; preds = %cond.false.20
  %17 = load i32, i32* %mode.addr, align 4
  %idxprom27 = sext i32 %17 to i64
  %arrayidx28 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom27
  %18 = load i8, i8* %arrayidx28, align 1
  %conv = zext i8 %18 to i32
  %19 = load i32, i32* @target_flags, align 4
  %and29 = and i32 %19, 33554432
  %tobool30 = icmp ne i32 %and29, 0
  %cond31 = select i1 %tobool30, i32 8, i32 4
  %add = add nsw i32 %conv, %cond31
  %sub = sub nsw i32 %add, 1
  %20 = load i32, i32* @target_flags, align 4
  %and32 = and i32 %20, 33554432
  %tobool33 = icmp ne i32 %and32, 0
  %cond34 = select i1 %tobool33, i32 8, i32 4
  %div = sdiv i32 %sub, %cond34
  br label %cond.end

cond.end:                                         ; preds = %cond.false.26, %cond.true.22
  %cond35 = phi i32 [ %cond25, %cond.true.22 ], [ %div, %cond.false.26 ]
  br label %cond.end.36

cond.end.36:                                      ; preds = %cond.end, %cond.true.18
  %cond37 = phi i32 [ %cond19, %cond.true.18 ], [ %cond35, %cond.end ]
  br label %cond.end.38

cond.end.38:                                      ; preds = %cond.end.36, %lor.end
  %cond39 = phi i32 [ %cond, %lor.end ], [ %cond37, %cond.end.36 ]
  store i32 %cond39, i32* %nregs, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %cond.end.38
  %21 = load i32, i32* %nregs, align 4
  %dec = add nsw i32 %21, -1
  store i32 %dec, i32* %nregs, align 4
  %cmp40 = icmp sgt i32 %21, 0
  br i1 %cmp40, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %22 = load i32, i32* %regno.addr, align 4
  %23 = load i32, i32* %regno.addr, align 4
  %24 = load i32, i32* %nregs, align 4
  %add42 = add nsw i32 %23, %24
  %25 = load i32, i32* %opnum.addr, align 4
  %26 = load i32, i32* %type.addr, align 4
  %27 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %28 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %29 = load i32, i32* %reloadnum.addr, align 4
  %30 = load i32, i32* %ignore_address_reloads.addr, align 4
  %call = call i32 @reload_reg_free_for_value_p(i32 %22, i32 %add42, i32 %25, i32 %26, %struct.rtx_def* %27, %struct.rtx_def* %28, i32 %29, i32 %30)
  %tobool43 = icmp ne i32 %call, 0
  br i1 %tobool43, label %if.end, label %if.then

if.then:                                          ; preds = %while.body
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %while.body
  br label %while.cond

while.end:                                        ; preds = %while.cond
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %while.end, %if.then
  %31 = load i32, i32* %retval
  ret i32 %31
}

declare i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @mark_reload_reg_in_use(i32 %regno, i32 %opnum, i32 %type, i32 %mode) #0 {
entry:
  %regno.addr = alloca i32, align 4
  %opnum.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %nregs = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  store i32 %opnum, i32* %opnum.addr, align 4
  store i32 %type, i32* %type.addr, align 4
  store i32 %mode, i32* %mode.addr, align 4
  %0 = load i32, i32* %regno.addr, align 4
  %cmp = icmp uge i32 %0, 8
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %regno.addr, align 4
  %cmp1 = icmp ule i32 %1, 15
  br i1 %cmp1, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %2 = load i32, i32* %regno.addr, align 4
  %cmp2 = icmp uge i32 %2, 21
  br i1 %cmp2, label %land.lhs.true.3, label %lor.lhs.false.5

land.lhs.true.3:                                  ; preds = %lor.lhs.false
  %3 = load i32, i32* %regno.addr, align 4
  %cmp4 = icmp ule i32 %3, 28
  br i1 %cmp4, label %cond.true, label %lor.lhs.false.5

lor.lhs.false.5:                                  ; preds = %land.lhs.true.3, %lor.lhs.false
  %4 = load i32, i32* %regno.addr, align 4
  %cmp6 = icmp uge i32 %4, 45
  br i1 %cmp6, label %land.lhs.true.7, label %lor.lhs.false.9

land.lhs.true.7:                                  ; preds = %lor.lhs.false.5
  %5 = load i32, i32* %regno.addr, align 4
  %cmp8 = icmp ule i32 %5, 52
  br i1 %cmp8, label %cond.true, label %lor.lhs.false.9

lor.lhs.false.9:                                  ; preds = %land.lhs.true.7, %lor.lhs.false.5
  %6 = load i32, i32* %regno.addr, align 4
  %cmp10 = icmp uge i32 %6, 29
  br i1 %cmp10, label %land.lhs.true.11, label %cond.false

land.lhs.true.11:                                 ; preds = %lor.lhs.false.9
  %7 = load i32, i32* %regno.addr, align 4
  %cmp12 = icmp ule i32 %7, 36
  br i1 %cmp12, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.11, %land.lhs.true.7, %land.lhs.true.3, %land.lhs.true
  %8 = load i32, i32* %mode.addr, align 4
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %9 = load i32, i32* %arrayidx, align 4
  %cmp13 = icmp eq i32 %9, 5
  br i1 %cmp13, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %10 = load i32, i32* %mode.addr, align 4
  %idxprom14 = sext i32 %10 to i64
  %arrayidx15 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom14
  %11 = load i32, i32* %arrayidx15, align 4
  %cmp16 = icmp eq i32 %11, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %12 = phi i1 [ true, %cond.true ], [ %cmp16, %lor.rhs ]
  %cond = select i1 %12, i32 2, i32 1
  br label %cond.end.38

cond.false:                                       ; preds = %land.lhs.true.11, %lor.lhs.false.9
  %13 = load i32, i32* %mode.addr, align 4
  %cmp17 = icmp eq i32 %13, 18
  br i1 %cmp17, label %cond.true.18, label %cond.false.20

cond.true.18:                                     ; preds = %cond.false
  %14 = load i32, i32* @target_flags, align 4
  %and = and i32 %14, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond19 = select i1 %tobool, i32 2, i32 3
  br label %cond.end.36

cond.false.20:                                    ; preds = %cond.false
  %15 = load i32, i32* %mode.addr, align 4
  %cmp21 = icmp eq i32 %15, 24
  br i1 %cmp21, label %cond.true.22, label %cond.false.26

cond.true.22:                                     ; preds = %cond.false.20
  %16 = load i32, i32* @target_flags, align 4
  %and23 = and i32 %16, 33554432
  %tobool24 = icmp ne i32 %and23, 0
  %cond25 = select i1 %tobool24, i32 4, i32 6
  br label %cond.end

cond.false.26:                                    ; preds = %cond.false.20
  %17 = load i32, i32* %mode.addr, align 4
  %idxprom27 = sext i32 %17 to i64
  %arrayidx28 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom27
  %18 = load i8, i8* %arrayidx28, align 1
  %conv = zext i8 %18 to i32
  %19 = load i32, i32* @target_flags, align 4
  %and29 = and i32 %19, 33554432
  %tobool30 = icmp ne i32 %and29, 0
  %cond31 = select i1 %tobool30, i32 8, i32 4
  %add = add nsw i32 %conv, %cond31
  %sub = sub nsw i32 %add, 1
  %20 = load i32, i32* @target_flags, align 4
  %and32 = and i32 %20, 33554432
  %tobool33 = icmp ne i32 %and32, 0
  %cond34 = select i1 %tobool33, i32 8, i32 4
  %div = sdiv i32 %sub, %cond34
  br label %cond.end

cond.end:                                         ; preds = %cond.false.26, %cond.true.22
  %cond35 = phi i32 [ %cond25, %cond.true.22 ], [ %div, %cond.false.26 ]
  br label %cond.end.36

cond.end.36:                                      ; preds = %cond.end, %cond.true.18
  %cond37 = phi i32 [ %cond19, %cond.true.18 ], [ %cond35, %cond.end ]
  br label %cond.end.38

cond.end.38:                                      ; preds = %cond.end.36, %lor.end
  %cond39 = phi i32 [ %cond, %lor.end ], [ %cond37, %cond.end.36 ]
  store i32 %cond39, i32* %nregs, align 4
  %21 = load i32, i32* %regno.addr, align 4
  store i32 %21, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.38
  %22 = load i32, i32* %i, align 4
  %23 = load i32, i32* %nregs, align 4
  %24 = load i32, i32* %regno.addr, align 4
  %add40 = add i32 %23, %24
  %cmp41 = icmp ult i32 %22, %add40
  br i1 %cmp41, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %25 = load i32, i32* %type.addr, align 4
  switch i32 %25, label %sw.epilog [
    i32 9, label %sw.bb
    i32 3, label %sw.bb.43
    i32 4, label %sw.bb.49
    i32 5, label %sw.bb.55
    i32 6, label %sw.bb.61
    i32 7, label %sw.bb.67
    i32 8, label %sw.bb.71
    i32 10, label %sw.bb.75
    i32 0, label %sw.bb.79
    i32 1, label %sw.bb.85
    i32 2, label %sw.bb.91
  ]

sw.bb:                                            ; preds = %for.body
  %26 = load i32, i32* %i, align 4
  %sh_prom = zext i32 %26 to i64
  %shl = shl i64 1, %sh_prom
  %27 = load i64, i64* @reload_reg_used, align 8
  %or = or i64 %27, %shl
  store i64 %or, i64* @reload_reg_used, align 8
  br label %sw.epilog

sw.bb.43:                                         ; preds = %for.body
  %28 = load i32, i32* %i, align 4
  %sh_prom44 = zext i32 %28 to i64
  %shl45 = shl i64 1, %sh_prom44
  %29 = load i32, i32* %opnum.addr, align 4
  %idxprom46 = sext i32 %29 to i64
  %arrayidx47 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input_addr, i32 0, i64 %idxprom46
  %30 = load i64, i64* %arrayidx47, align 8
  %or48 = or i64 %30, %shl45
  store i64 %or48, i64* %arrayidx47, align 8
  br label %sw.epilog

sw.bb.49:                                         ; preds = %for.body
  %31 = load i32, i32* %i, align 4
  %sh_prom50 = zext i32 %31 to i64
  %shl51 = shl i64 1, %sh_prom50
  %32 = load i32, i32* %opnum.addr, align 4
  %idxprom52 = sext i32 %32 to i64
  %arrayidx53 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_inpaddr_addr, i32 0, i64 %idxprom52
  %33 = load i64, i64* %arrayidx53, align 8
  %or54 = or i64 %33, %shl51
  store i64 %or54, i64* %arrayidx53, align 8
  br label %sw.epilog

sw.bb.55:                                         ; preds = %for.body
  %34 = load i32, i32* %i, align 4
  %sh_prom56 = zext i32 %34 to i64
  %shl57 = shl i64 1, %sh_prom56
  %35 = load i32, i32* %opnum.addr, align 4
  %idxprom58 = sext i32 %35 to i64
  %arrayidx59 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output_addr, i32 0, i64 %idxprom58
  %36 = load i64, i64* %arrayidx59, align 8
  %or60 = or i64 %36, %shl57
  store i64 %or60, i64* %arrayidx59, align 8
  br label %sw.epilog

sw.bb.61:                                         ; preds = %for.body
  %37 = load i32, i32* %i, align 4
  %sh_prom62 = zext i32 %37 to i64
  %shl63 = shl i64 1, %sh_prom62
  %38 = load i32, i32* %opnum.addr, align 4
  %idxprom64 = sext i32 %38 to i64
  %arrayidx65 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_outaddr_addr, i32 0, i64 %idxprom64
  %39 = load i64, i64* %arrayidx65, align 8
  %or66 = or i64 %39, %shl63
  store i64 %or66, i64* %arrayidx65, align 8
  br label %sw.epilog

sw.bb.67:                                         ; preds = %for.body
  %40 = load i32, i32* %i, align 4
  %sh_prom68 = zext i32 %40 to i64
  %shl69 = shl i64 1, %sh_prom68
  %41 = load i64, i64* @reload_reg_used_in_op_addr, align 8
  %or70 = or i64 %41, %shl69
  store i64 %or70, i64* @reload_reg_used_in_op_addr, align 8
  br label %sw.epilog

sw.bb.71:                                         ; preds = %for.body
  %42 = load i32, i32* %i, align 4
  %sh_prom72 = zext i32 %42 to i64
  %shl73 = shl i64 1, %sh_prom72
  %43 = load i64, i64* @reload_reg_used_in_op_addr_reload, align 8
  %or74 = or i64 %43, %shl73
  store i64 %or74, i64* @reload_reg_used_in_op_addr_reload, align 8
  br label %sw.epilog

sw.bb.75:                                         ; preds = %for.body
  %44 = load i32, i32* %i, align 4
  %sh_prom76 = zext i32 %44 to i64
  %shl77 = shl i64 1, %sh_prom76
  %45 = load i64, i64* @reload_reg_used_in_other_addr, align 8
  %or78 = or i64 %45, %shl77
  store i64 %or78, i64* @reload_reg_used_in_other_addr, align 8
  br label %sw.epilog

sw.bb.79:                                         ; preds = %for.body
  %46 = load i32, i32* %i, align 4
  %sh_prom80 = zext i32 %46 to i64
  %shl81 = shl i64 1, %sh_prom80
  %47 = load i32, i32* %opnum.addr, align 4
  %idxprom82 = sext i32 %47 to i64
  %arrayidx83 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i32 0, i64 %idxprom82
  %48 = load i64, i64* %arrayidx83, align 8
  %or84 = or i64 %48, %shl81
  store i64 %or84, i64* %arrayidx83, align 8
  br label %sw.epilog

sw.bb.85:                                         ; preds = %for.body
  %49 = load i32, i32* %i, align 4
  %sh_prom86 = zext i32 %49 to i64
  %shl87 = shl i64 1, %sh_prom86
  %50 = load i32, i32* %opnum.addr, align 4
  %idxprom88 = sext i32 %50 to i64
  %arrayidx89 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i32 0, i64 %idxprom88
  %51 = load i64, i64* %arrayidx89, align 8
  %or90 = or i64 %51, %shl87
  store i64 %or90, i64* %arrayidx89, align 8
  br label %sw.epilog

sw.bb.91:                                         ; preds = %for.body
  %52 = load i32, i32* %i, align 4
  %sh_prom92 = zext i32 %52 to i64
  %shl93 = shl i64 1, %sh_prom92
  %53 = load i64, i64* @reload_reg_used_in_insn, align 8
  %or94 = or i64 %53, %shl93
  store i64 %or94, i64* @reload_reg_used_in_insn, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.body, %sw.bb.91, %sw.bb.85, %sw.bb.79, %sw.bb.75, %sw.bb.71, %sw.bb.67, %sw.bb.61, %sw.bb.55, %sw.bb.49, %sw.bb.43, %sw.bb
  %54 = load i32, i32* %i, align 4
  %sh_prom95 = zext i32 %54 to i64
  %shl96 = shl i64 1, %sh_prom95
  %55 = load i64, i64* @reload_reg_used_at_all, align 8
  %or97 = or i64 %55, %shl96
  store i64 %or97, i64* @reload_reg_used_at_all, align 8
  br label %for.inc

for.inc:                                          ; preds = %sw.epilog
  %56 = load i32, i32* %i, align 4
  %inc = add i32 %56, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

declare i32 @reg_classes_intersect_p(i32, i32) #1

declare %struct.rtx_def* @find_equiv_reg(%struct.rtx_def*, %struct.rtx_def*, i32, i32, i16*, i32, i32) #1

declare i32 @regno_clobbered_p(i32, %struct.rtx_def*, i32, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @allocate_reload_reg(%struct.insn_chain* %chain, i32 %r, i32 %last_reload) #0 {
entry:
  %retval = alloca i32, align 4
  %chain.addr = alloca %struct.insn_chain*, align 8
  %r.addr = alloca i32, align 4
  %last_reload.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %pass = alloca i32, align 4
  %count = alloca i32, align 4
  %force_group = alloca i32, align 4
  %class = alloca i32, align 4
  %regnum = alloca i32, align 4
  %nr = alloca i32, align 4
  %regno = alloca i32, align 4
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  store i32 %r, i32* %r.addr, align 4
  store i32 %last_reload, i32* %last_reload.addr, align 4
  %0 = load i32, i32* %r.addr, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom
  %nregs = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx, i32 0, i32 6
  %1 = load i32, i32* %nregs, align 4
  %cmp = icmp ugt i32 %1, 1
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %2 = load i32, i32* %last_reload.addr, align 4
  %tobool = icmp ne i32 %2, 0
  %lnot = xor i1 %tobool, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %3 to i32
  store i32 %land.ext, i32* %force_group, align 4
  store i32 0, i32* %pass, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.187, %land.end
  %4 = load i32, i32* %pass, align 4
  %cmp1 = icmp slt i32 %4, 2
  br i1 %cmp1, label %for.body, label %for.end.189

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* @last_spill_reg, align 4
  store i32 %5, i32* %i, align 4
  store i32 0, i32* %count, align 4
  br label %for.cond.2

for.cond.2:                                       ; preds = %for.inc, %for.body
  %6 = load i32, i32* %count, align 4
  %7 = load i32, i32* @n_spills, align 4
  %cmp3 = icmp slt i32 %6, %7
  br i1 %cmp3, label %for.body.4, label %for.end

for.body.4:                                       ; preds = %for.cond.2
  %8 = load i32, i32* %r.addr, align 4
  %idxprom5 = sext i32 %8 to i64
  %arrayidx6 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom5
  %class7 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx6, i32 0, i32 2
  %9 = load i32, i32* %class7, align 4
  store i32 %9, i32* %class, align 4
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  %11 = load i32, i32* %i, align 4
  %12 = load i32, i32* @n_spills, align 4
  %cmp8 = icmp sge i32 %11, %12
  br i1 %cmp8, label %if.then, label %if.end

if.then:                                          ; preds = %for.body.4
  %13 = load i32, i32* @n_spills, align 4
  %14 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %14, %13
  store i32 %sub, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body.4
  %15 = load i32, i32* %i, align 4
  %idxprom9 = sext i32 %15 to i64
  %arrayidx10 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_regs, i32 0, i64 %idxprom9
  %16 = load i16, i16* %arrayidx10, align 2
  %conv = sext i16 %16 to i32
  store i32 %conv, i32* %regnum, align 4
  %17 = load i32, i32* %regnum, align 4
  %18 = load i32, i32* %r.addr, align 4
  %idxprom11 = sext i32 %18 to i64
  %arrayidx12 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom11
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx12, i32 0, i32 12
  %19 = load i32, i32* %opnum, align 4
  %20 = load i32, i32* %r.addr, align 4
  %idxprom13 = sext i32 %20 to i64
  %arrayidx14 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom13
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx14, i32 0, i32 17
  %21 = load i32, i32* %when_needed, align 4
  %call = call i32 @reload_reg_free_p(i32 %17, i32 %19, i32 %21)
  %tobool15 = icmp ne i32 %call, 0
  br i1 %tobool15, label %land.lhs.true.36, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %22 = load i32, i32* %r.addr, align 4
  %idxprom16 = sext i32 %22 to i64
  %arrayidx17 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom16
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx17, i32 0, i32 0
  %23 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %tobool18 = icmp ne %struct.rtx_def* %23, null
  br i1 %tobool18, label %land.lhs.true, label %if.end.181

land.lhs.true:                                    ; preds = %lor.lhs.false
  %24 = load i64, i64* @reload_reg_used, align 8
  %25 = load i32, i32* %regnum, align 4
  %sh_prom = zext i32 %25 to i64
  %shl = shl i64 1, %sh_prom
  %and = and i64 %24, %shl
  %tobool19 = icmp ne i64 %and, 0
  br i1 %tobool19, label %if.end.181, label %land.lhs.true.20

land.lhs.true.20:                                 ; preds = %land.lhs.true
  %26 = load i32, i32* %regnum, align 4
  %27 = load i32, i32* %r.addr, align 4
  %idxprom21 = sext i32 %27 to i64
  %arrayidx22 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom21
  %mode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx22, i32 0, i32 5
  %28 = load i32, i32* %mode, align 4
  %29 = load i32, i32* %r.addr, align 4
  %idxprom23 = sext i32 %29 to i64
  %arrayidx24 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom23
  %opnum25 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx24, i32 0, i32 12
  %30 = load i32, i32* %opnum25, align 4
  %31 = load i32, i32* %r.addr, align 4
  %idxprom26 = sext i32 %31 to i64
  %arrayidx27 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom26
  %when_needed28 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx27, i32 0, i32 17
  %32 = load i32, i32* %when_needed28, align 4
  %33 = load i32, i32* %r.addr, align 4
  %idxprom29 = sext i32 %33 to i64
  %arrayidx30 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom29
  %in31 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx30, i32 0, i32 0
  %34 = load %struct.rtx_def*, %struct.rtx_def** %in31, align 8
  %35 = load i32, i32* %r.addr, align 4
  %idxprom32 = sext i32 %35 to i64
  %arrayidx33 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom32
  %out = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx33, i32 0, i32 1
  %36 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %37 = load i32, i32* %r.addr, align 4
  %call34 = call i32 @free_for_value_p(i32 %26, i32 %28, i32 %30, i32 %32, %struct.rtx_def* %34, %struct.rtx_def* %36, i32 %37, i32 1)
  %tobool35 = icmp ne i32 %call34, 0
  br i1 %tobool35, label %land.lhs.true.36, label %if.end.181

land.lhs.true.36:                                 ; preds = %land.lhs.true.20, %if.end
  %38 = load i32, i32* %class, align 4
  %idxprom37 = sext i32 %38 to i64
  %arrayidx38 = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom37
  %39 = load i64, i64* %arrayidx38, align 8
  %40 = load i32, i32* %regnum, align 4
  %sh_prom39 = zext i32 %40 to i64
  %shl40 = shl i64 1, %sh_prom39
  %and41 = and i64 %39, %shl40
  %tobool42 = icmp ne i64 %and41, 0
  br i1 %tobool42, label %land.lhs.true.43, label %if.end.181

land.lhs.true.43:                                 ; preds = %land.lhs.true.36
  %41 = load i32, i32* %regnum, align 4
  %42 = load i32, i32* %r.addr, align 4
  %idxprom44 = sext i32 %42 to i64
  %arrayidx45 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom44
  %mode46 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx45, i32 0, i32 5
  %43 = load i32, i32* %mode46, align 4
  %call47 = call i32 @ix86_hard_regno_mode_ok(i32 %41, i32 %43)
  %tobool48 = icmp ne i32 %call47, 0
  br i1 %tobool48, label %land.lhs.true.49, label %if.end.181

land.lhs.true.49:                                 ; preds = %land.lhs.true.43
  %44 = load i32, i32* %pass, align 4
  %tobool50 = icmp ne i32 %44, 0
  br i1 %tobool50, label %if.then.61, label %lor.lhs.false.51

lor.lhs.false.51:                                 ; preds = %land.lhs.true.49
  %45 = load i64, i64* @reload_reg_used_at_all, align 8
  %46 = load i32, i32* %regnum, align 4
  %sh_prom52 = zext i32 %46 to i64
  %shl53 = shl i64 1, %sh_prom52
  %and54 = and i64 %45, %shl53
  %tobool55 = icmp ne i64 %and54, 0
  br i1 %tobool55, label %land.lhs.true.56, label %if.end.181

land.lhs.true.56:                                 ; preds = %lor.lhs.false.51
  %47 = load i64, i64* @reload_reg_used_for_inherit, align 8
  %48 = load i32, i32* %regnum, align 4
  %sh_prom57 = zext i32 %48 to i64
  %shl58 = shl i64 1, %sh_prom57
  %and59 = and i64 %47, %shl58
  %tobool60 = icmp ne i64 %and59, 0
  br i1 %tobool60, label %if.end.181, label %if.then.61

if.then.61:                                       ; preds = %land.lhs.true.56, %land.lhs.true.49
  %49 = load i32, i32* %regnum, align 4
  %cmp62 = icmp sge i32 %49, 8
  br i1 %cmp62, label %land.lhs.true.64, label %lor.lhs.false.67

land.lhs.true.64:                                 ; preds = %if.then.61
  %50 = load i32, i32* %regnum, align 4
  %cmp65 = icmp sle i32 %50, 15
  br i1 %cmp65, label %cond.true, label %lor.lhs.false.67

lor.lhs.false.67:                                 ; preds = %land.lhs.true.64, %if.then.61
  %51 = load i32, i32* %regnum, align 4
  %cmp68 = icmp sge i32 %51, 21
  br i1 %cmp68, label %land.lhs.true.70, label %lor.lhs.false.73

land.lhs.true.70:                                 ; preds = %lor.lhs.false.67
  %52 = load i32, i32* %regnum, align 4
  %cmp71 = icmp sle i32 %52, 28
  br i1 %cmp71, label %cond.true, label %lor.lhs.false.73

lor.lhs.false.73:                                 ; preds = %land.lhs.true.70, %lor.lhs.false.67
  %53 = load i32, i32* %regnum, align 4
  %cmp74 = icmp sge i32 %53, 45
  br i1 %cmp74, label %land.lhs.true.76, label %lor.lhs.false.79

land.lhs.true.76:                                 ; preds = %lor.lhs.false.73
  %54 = load i32, i32* %regnum, align 4
  %cmp77 = icmp sle i32 %54, 52
  br i1 %cmp77, label %cond.true, label %lor.lhs.false.79

lor.lhs.false.79:                                 ; preds = %land.lhs.true.76, %lor.lhs.false.73
  %55 = load i32, i32* %regnum, align 4
  %cmp80 = icmp sge i32 %55, 29
  br i1 %cmp80, label %land.lhs.true.82, label %cond.false

land.lhs.true.82:                                 ; preds = %lor.lhs.false.79
  %56 = load i32, i32* %regnum, align 4
  %cmp83 = icmp sle i32 %56, 36
  br i1 %cmp83, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.82, %land.lhs.true.76, %land.lhs.true.70, %land.lhs.true.64
  %57 = load i32, i32* %r.addr, align 4
  %idxprom85 = sext i32 %57 to i64
  %arrayidx86 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom85
  %mode87 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx86, i32 0, i32 5
  %58 = load i32, i32* %mode87, align 4
  %idxprom88 = sext i32 %58 to i64
  %arrayidx89 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom88
  %59 = load i32, i32* %arrayidx89, align 4
  %cmp90 = icmp eq i32 %59, 5
  br i1 %cmp90, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %60 = load i32, i32* %r.addr, align 4
  %idxprom92 = sext i32 %60 to i64
  %arrayidx93 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom92
  %mode94 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx93, i32 0, i32 5
  %61 = load i32, i32* %mode94, align 4
  %idxprom95 = sext i32 %61 to i64
  %arrayidx96 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom95
  %62 = load i32, i32* %arrayidx96, align 4
  %cmp97 = icmp eq i32 %62, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %63 = phi i1 [ true, %cond.true ], [ %cmp97, %lor.rhs ]
  %cond = select i1 %63, i32 2, i32 1
  br label %cond.end.135

cond.false:                                       ; preds = %land.lhs.true.82, %lor.lhs.false.79
  %64 = load i32, i32* %r.addr, align 4
  %idxprom99 = sext i32 %64 to i64
  %arrayidx100 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom99
  %mode101 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx100, i32 0, i32 5
  %65 = load i32, i32* %mode101, align 4
  %cmp102 = icmp eq i32 %65, 18
  br i1 %cmp102, label %cond.true.104, label %cond.false.108

cond.true.104:                                    ; preds = %cond.false
  %66 = load i32, i32* @target_flags, align 4
  %and105 = and i32 %66, 33554432
  %tobool106 = icmp ne i32 %and105, 0
  %cond107 = select i1 %tobool106, i32 2, i32 3
  br label %cond.end.133

cond.false.108:                                   ; preds = %cond.false
  %67 = load i32, i32* %r.addr, align 4
  %idxprom109 = sext i32 %67 to i64
  %arrayidx110 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom109
  %mode111 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx110, i32 0, i32 5
  %68 = load i32, i32* %mode111, align 4
  %cmp112 = icmp eq i32 %68, 24
  br i1 %cmp112, label %cond.true.114, label %cond.false.118

cond.true.114:                                    ; preds = %cond.false.108
  %69 = load i32, i32* @target_flags, align 4
  %and115 = and i32 %69, 33554432
  %tobool116 = icmp ne i32 %and115, 0
  %cond117 = select i1 %tobool116, i32 4, i32 6
  br label %cond.end

cond.false.118:                                   ; preds = %cond.false.108
  %70 = load i32, i32* %r.addr, align 4
  %idxprom119 = sext i32 %70 to i64
  %arrayidx120 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom119
  %mode121 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx120, i32 0, i32 5
  %71 = load i32, i32* %mode121, align 4
  %idxprom122 = sext i32 %71 to i64
  %arrayidx123 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom122
  %72 = load i8, i8* %arrayidx123, align 1
  %conv124 = zext i8 %72 to i32
  %73 = load i32, i32* @target_flags, align 4
  %and125 = and i32 %73, 33554432
  %tobool126 = icmp ne i32 %and125, 0
  %cond127 = select i1 %tobool126, i32 8, i32 4
  %add = add nsw i32 %conv124, %cond127
  %sub128 = sub nsw i32 %add, 1
  %74 = load i32, i32* @target_flags, align 4
  %and129 = and i32 %74, 33554432
  %tobool130 = icmp ne i32 %and129, 0
  %cond131 = select i1 %tobool130, i32 8, i32 4
  %div = sdiv i32 %sub128, %cond131
  br label %cond.end

cond.end:                                         ; preds = %cond.false.118, %cond.true.114
  %cond132 = phi i32 [ %cond117, %cond.true.114 ], [ %div, %cond.false.118 ]
  br label %cond.end.133

cond.end.133:                                     ; preds = %cond.end, %cond.true.104
  %cond134 = phi i32 [ %cond107, %cond.true.104 ], [ %cond132, %cond.end ]
  br label %cond.end.135

cond.end.135:                                     ; preds = %cond.end.133, %lor.end
  %cond136 = phi i32 [ %cond, %lor.end ], [ %cond134, %cond.end.133 ]
  store i32 %cond136, i32* %nr, align 4
  %75 = load i32, i32* %force_group, align 4
  %tobool137 = icmp ne i32 %75, 0
  br i1 %tobool137, label %if.then.138, label %if.end.142

if.then.138:                                      ; preds = %cond.end.135
  %76 = load i32, i32* %r.addr, align 4
  %idxprom139 = sext i32 %76 to i64
  %arrayidx140 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom139
  %nregs141 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx140, i32 0, i32 6
  %77 = load i32, i32* %nregs141, align 4
  store i32 %77, i32* %nr, align 4
  br label %if.end.142

if.end.142:                                       ; preds = %if.then.138, %cond.end.135
  %78 = load i32, i32* %nr, align 4
  %cmp143 = icmp eq i32 %78, 1
  br i1 %cmp143, label %if.then.145, label %if.end.149

if.then.145:                                      ; preds = %if.end.142
  %79 = load i32, i32* %force_group, align 4
  %tobool146 = icmp ne i32 %79, 0
  br i1 %tobool146, label %if.then.147, label %if.end.148

if.then.147:                                      ; preds = %if.then.145
  br label %for.inc

if.end.148:                                       ; preds = %if.then.145
  br label %for.end

if.end.149:                                       ; preds = %if.end.142
  br label %while.cond

while.cond:                                       ; preds = %if.end.176, %if.end.149
  %80 = load i32, i32* %nr, align 4
  %cmp150 = icmp sgt i32 %80, 1
  br i1 %cmp150, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %81 = load i32, i32* %regnum, align 4
  %82 = load i32, i32* %nr, align 4
  %add152 = add nsw i32 %81, %82
  %sub153 = sub nsw i32 %add152, 1
  store i32 %sub153, i32* %regno, align 4
  %83 = load i32, i32* %class, align 4
  %idxprom154 = sext i32 %83 to i64
  %arrayidx155 = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom154
  %84 = load i64, i64* %arrayidx155, align 8
  %85 = load i32, i32* %regno, align 4
  %sh_prom156 = zext i32 %85 to i64
  %shl157 = shl i64 1, %sh_prom156
  %and158 = and i64 %84, %shl157
  %tobool159 = icmp ne i64 %and158, 0
  br i1 %tobool159, label %land.lhs.true.160, label %if.then.175

land.lhs.true.160:                                ; preds = %while.body
  %86 = load i32, i32* %regno, align 4
  %idxprom161 = sext i32 %86 to i64
  %arrayidx162 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_reg_order, i32 0, i64 %idxprom161
  %87 = load i16, i16* %arrayidx162, align 2
  %conv163 = sext i16 %87 to i32
  %cmp164 = icmp sge i32 %conv163, 0
  br i1 %cmp164, label %land.lhs.true.166, label %if.then.175

land.lhs.true.166:                                ; preds = %land.lhs.true.160
  %88 = load i32, i32* %regno, align 4
  %89 = load i32, i32* %r.addr, align 4
  %idxprom167 = sext i32 %89 to i64
  %arrayidx168 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom167
  %opnum169 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx168, i32 0, i32 12
  %90 = load i32, i32* %opnum169, align 4
  %91 = load i32, i32* %r.addr, align 4
  %idxprom170 = sext i32 %91 to i64
  %arrayidx171 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom170
  %when_needed172 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx171, i32 0, i32 17
  %92 = load i32, i32* %when_needed172, align 4
  %call173 = call i32 @reload_reg_free_p(i32 %88, i32 %90, i32 %92)
  %tobool174 = icmp ne i32 %call173, 0
  br i1 %tobool174, label %if.end.176, label %if.then.175

if.then.175:                                      ; preds = %land.lhs.true.166, %land.lhs.true.160, %while.body
  br label %while.end

if.end.176:                                       ; preds = %land.lhs.true.166
  %93 = load i32, i32* %nr, align 4
  %dec = add nsw i32 %93, -1
  store i32 %dec, i32* %nr, align 4
  br label %while.cond

while.end:                                        ; preds = %if.then.175, %while.cond
  %94 = load i32, i32* %nr, align 4
  %cmp177 = icmp eq i32 %94, 1
  br i1 %cmp177, label %if.then.179, label %if.end.180

if.then.179:                                      ; preds = %while.end
  br label %for.end

if.end.180:                                       ; preds = %while.end
  br label %if.end.181

if.end.181:                                       ; preds = %if.end.180, %land.lhs.true.56, %lor.lhs.false.51, %land.lhs.true.43, %land.lhs.true.36, %land.lhs.true.20, %land.lhs.true, %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end.181, %if.then.147
  %95 = load i32, i32* %count, align 4
  %inc182 = add nsw i32 %95, 1
  store i32 %inc182, i32* %count, align 4
  br label %for.cond.2

for.end:                                          ; preds = %if.then.179, %if.end.148, %for.cond.2
  %96 = load i32, i32* %count, align 4
  %97 = load i32, i32* @n_spills, align 4
  %cmp183 = icmp slt i32 %96, %97
  br i1 %cmp183, label %if.then.185, label %if.end.186

if.then.185:                                      ; preds = %for.end
  br label %for.end.189

if.end.186:                                       ; preds = %for.end
  br label %for.inc.187

for.inc.187:                                      ; preds = %if.end.186
  %98 = load i32, i32* %pass, align 4
  %inc188 = add nsw i32 %98, 1
  store i32 %inc188, i32* %pass, align 4
  br label %for.cond

for.end.189:                                      ; preds = %if.then.185, %for.cond
  %99 = load i32, i32* %count, align 4
  %100 = load i32, i32* @n_spills, align 4
  %cmp190 = icmp sge i32 %99, %100
  br i1 %cmp190, label %if.then.192, label %if.end.193

if.then.192:                                      ; preds = %for.end.189
  store i32 0, i32* %retval
  br label %return

if.end.193:                                       ; preds = %for.end.189
  %101 = load i32, i32* %i, align 4
  %102 = load i32, i32* %r.addr, align 4
  %call194 = call i32 @set_reload_reg(i32 %101, i32 %102)
  store i32 %call194, i32* %retval
  br label %return

return:                                           ; preds = %if.end.193, %if.then.192
  %103 = load i32, i32* %retval
  ret i32 %103
}

; Function Attrs: nounwind uwtable
define internal i32 @set_reload_reg(i32 %i, i32 %r) #0 {
entry:
  %retval = alloca i32, align 4
  %i.addr = alloca i32, align 4
  %r.addr = alloca i32, align 4
  %regno = alloca i32, align 4
  %reg = alloca %struct.rtx_def*, align 8
  %test_mode = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  store i32 %r, i32* %r.addr, align 4
  %0 = load i32, i32* %i.addr, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_rtx, i32 0, i64 %idxprom
  %1 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %reg, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %cmp = icmp eq %struct.rtx_def* %2, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load = load i32, i32* %4, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %5 = load i32, i32* %r.addr, align 4
  %idxprom1 = sext i32 %5 to i64
  %arrayidx2 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1
  %mode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx2, i32 0, i32 5
  %6 = load i32, i32* %mode, align 4
  %cmp3 = icmp ne i32 %bf.clear, %6
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load i32, i32* %r.addr, align 4
  %idxprom4 = sext i32 %7 to i64
  %arrayidx5 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4
  %mode6 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx5, i32 0, i32 5
  %8 = load i32, i32* %mode6, align 4
  %9 = load i32, i32* %i.addr, align 4
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_regs, i32 0, i64 %idxprom7
  %10 = load i16, i16* %arrayidx8, align 2
  %conv = sext i16 %10 to i32
  %call = call %struct.rtx_def* @gen_rtx_REG(i32 %8, i32 %conv)
  store %struct.rtx_def* %call, %struct.rtx_def** %reg, align 8
  %11 = load i32, i32* %i.addr, align 4
  %idxprom9 = sext i32 %11 to i64
  %arrayidx10 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_rtx, i32 0, i64 %idxprom9
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx10, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %12 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %call11 = call i32 @true_regnum(%struct.rtx_def* %12)
  store i32 %call11, i32* %regno, align 4
  %13 = load i32, i32* %regno, align 4
  %14 = load i32, i32* %r.addr, align 4
  %idxprom12 = sext i32 %14 to i64
  %arrayidx13 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom12
  %mode14 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx13, i32 0, i32 5
  %15 = load i32, i32* %mode14, align 4
  %call15 = call i32 @ix86_hard_regno_mode_ok(i32 %13, i32 %15)
  %tobool = icmp ne i32 %call15, 0
  br i1 %tobool, label %if.then.16, label %if.end.72

if.then.16:                                       ; preds = %if.end
  store i32 0, i32* %test_mode, align 4
  %16 = load i32, i32* %r.addr, align 4
  %idxprom17 = sext i32 %16 to i64
  %arrayidx18 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom17
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx18, i32 0, i32 0
  %17 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %tobool19 = icmp ne %struct.rtx_def* %17, null
  br i1 %tobool19, label %if.then.20, label %if.end.27

if.then.20:                                       ; preds = %if.then.16
  %18 = load i32, i32* %r.addr, align 4
  %idxprom21 = sext i32 %18 to i64
  %arrayidx22 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom21
  %in23 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx22, i32 0, i32 0
  %19 = load %struct.rtx_def*, %struct.rtx_def** %in23, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load24 = load i32, i32* %20, align 8
  %bf.lshr25 = lshr i32 %bf.load24, 16
  %bf.clear26 = and i32 %bf.lshr25, 255
  store i32 %bf.clear26, i32* %test_mode, align 4
  br label %if.end.27

if.end.27:                                        ; preds = %if.then.20, %if.then.16
  %21 = load i32, i32* %r.addr, align 4
  %idxprom28 = sext i32 %21 to i64
  %arrayidx29 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom28
  %in30 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx29, i32 0, i32 0
  %22 = load %struct.rtx_def*, %struct.rtx_def** %in30, align 8
  %cmp31 = icmp ne %struct.rtx_def* %22, null
  br i1 %cmp31, label %land.lhs.true, label %if.then.38

land.lhs.true:                                    ; preds = %if.end.27
  %23 = load i32, i32* %test_mode, align 4
  %cmp33 = icmp ne i32 %23, 0
  br i1 %cmp33, label %land.lhs.true.35, label %if.then.38

land.lhs.true.35:                                 ; preds = %land.lhs.true
  %24 = load i32, i32* %regno, align 4
  %25 = load i32, i32* %test_mode, align 4
  %call36 = call i32 @ix86_hard_regno_mode_ok(i32 %24, i32 %25)
  %tobool37 = icmp ne i32 %call36, 0
  br i1 %tobool37, label %if.then.38, label %if.end.71

if.then.38:                                       ; preds = %land.lhs.true.35, %land.lhs.true, %if.end.27
  %26 = load i32, i32* %r.addr, align 4
  %idxprom39 = sext i32 %26 to i64
  %arrayidx40 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom39
  %out = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx40, i32 0, i32 1
  %27 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %cmp41 = icmp ne %struct.rtx_def* %27, null
  br i1 %cmp41, label %land.lhs.true.43, label %if.then.52

land.lhs.true.43:                                 ; preds = %if.then.38
  %28 = load i32, i32* %regno, align 4
  %29 = load i32, i32* %r.addr, align 4
  %idxprom44 = sext i32 %29 to i64
  %arrayidx45 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom44
  %out46 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx45, i32 0, i32 1
  %30 = load %struct.rtx_def*, %struct.rtx_def** %out46, align 8
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load47 = load i32, i32* %31, align 8
  %bf.lshr48 = lshr i32 %bf.load47, 16
  %bf.clear49 = and i32 %bf.lshr48, 255
  %call50 = call i32 @ix86_hard_regno_mode_ok(i32 %28, i32 %bf.clear49)
  %tobool51 = icmp ne i32 %call50, 0
  br i1 %tobool51, label %if.then.52, label %if.end.70

if.then.52:                                       ; preds = %land.lhs.true.43, %if.then.38
  %32 = load i32, i32* %i.addr, align 4
  store i32 %32, i32* @last_spill_reg, align 4
  %33 = load i32, i32* %i.addr, align 4
  %idxprom53 = sext i32 %33 to i64
  %arrayidx54 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_regs, i32 0, i64 %idxprom53
  %34 = load i16, i16* %arrayidx54, align 2
  %conv55 = sext i16 %34 to i32
  %35 = load i32, i32* %r.addr, align 4
  %idxprom56 = sext i32 %35 to i64
  %arrayidx57 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom56
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx57, i32 0, i32 12
  %36 = load i32, i32* %opnum, align 4
  %37 = load i32, i32* %r.addr, align 4
  %idxprom58 = sext i32 %37 to i64
  %arrayidx59 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom58
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx59, i32 0, i32 17
  %38 = load i32, i32* %when_needed, align 4
  %39 = load i32, i32* %r.addr, align 4
  %idxprom60 = sext i32 %39 to i64
  %arrayidx61 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom60
  %mode62 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx61, i32 0, i32 5
  %40 = load i32, i32* %mode62, align 4
  call void @mark_reload_reg_in_use(i32 %conv55, i32 %36, i32 %38, i32 %40)
  %41 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %42 = load i32, i32* %r.addr, align 4
  %idxprom63 = sext i32 %42 to i64
  %arrayidx64 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom63
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx64, i32 0, i32 11
  store %struct.rtx_def* %41, %struct.rtx_def** %reg_rtx, align 8
  %43 = load i32, i32* %i.addr, align 4
  %idxprom65 = sext i32 %43 to i64
  %arrayidx66 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_regs, i32 0, i64 %idxprom65
  %44 = load i16, i16* %arrayidx66, align 2
  %conv67 = sext i16 %44 to i32
  %45 = load i32, i32* %r.addr, align 4
  %idxprom68 = sext i32 %45 to i64
  %arrayidx69 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i32 0, i64 %idxprom68
  store i32 %conv67, i32* %arrayidx69, align 4
  store i32 1, i32* %retval
  br label %return

if.end.70:                                        ; preds = %land.lhs.true.43
  br label %if.end.71

if.end.71:                                        ; preds = %if.end.70, %land.lhs.true.35
  br label %if.end.72

if.end.72:                                        ; preds = %if.end.71, %if.end
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.72, %if.then.52
  %46 = load i32, i32* %retval
  ret i32 %46
}

; Function Attrs: nounwind uwtable
define internal void @failed_reload(%struct.rtx_def* %insn, i32 %r) #0 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %r.addr = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store i32 %r, i32* %r.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %call = call i32 @asm_noperands(%struct.rtx_def* %1)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  call void @_fatal_insn(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37, i32 0, i32 0), %struct.rtx_def* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 5051, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.failed_reload, i32 0, i32 0)) #5
  unreachable

if.end:                                           ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  call void (%struct.rtx_def*, i8*, ...) @error_for_asm(%struct.rtx_def* %3, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.38, i32 0, i32 0))
  %4 = load i32, i32* %r.addr, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx1 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1, i32 0, i32 0
  store %struct.rtx_def* null, %struct.rtx_def** %in, align 8
  %5 = load i32, i32* %r.addr, align 4
  %idxprom2 = sext i32 %5 to i64
  %arrayidx3 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom2
  %out = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3, i32 0, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %out, align 8
  %6 = load i32, i32* %r.addr, align 4
  %idxprom4 = sext i32 %6 to i64
  %arrayidx5 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx5, i32 0, i32 11
  store %struct.rtx_def* null, %struct.rtx_def** %reg_rtx, align 8
  %7 = load i32, i32* %r.addr, align 4
  %idxprom6 = sext i32 %7 to i64
  %arrayidx7 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom6
  %optional = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx7, i32 0, i32 18
  %bf.load = load i8, i8* %optional, align 8
  %bf.clear = and i8 %bf.load, -2
  %bf.set = or i8 %bf.clear, 1
  store i8 %bf.set, i8* %optional, align 8
  %8 = load i32, i32* %r.addr, align 4
  %idxprom8 = sext i32 %8 to i64
  %arrayidx9 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom8
  %secondary_p = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx9, i32 0, i32 18
  %bf.load10 = load i8, i8* %secondary_p, align 8
  %bf.clear11 = and i8 %bf.load10, -5
  %bf.set12 = or i8 %bf.clear11, 4
  store i8 %bf.set12, i8* %secondary_p, align 8
  ret void
}

declare i32 @remove_address_replacements(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal i32 @reload_reg_free_for_value_p(i32 %start_regno, i32 %regno, i32 %opnum, i32 %type, %struct.rtx_def* %value, %struct.rtx_def* %out, i32 %reloadnum, i32 %ignore_address_reloads) #0 {
entry:
  %retval = alloca i32, align 4
  %start_regno.addr = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  %opnum.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %value.addr = alloca %struct.rtx_def*, align 8
  %out.addr = alloca %struct.rtx_def*, align 8
  %reloadnum.addr = alloca i32, align 4
  %ignore_address_reloads.addr = alloca i32, align 4
  %time1 = alloca i32, align 4
  %check_earlyclobber = alloca i32, align 4
  %i = alloca i32, align 4
  %copy = alloca i32, align 4
  %reg = alloca %struct.rtx_def*, align 8
  %other_input = alloca %struct.rtx_def*, align 8
  %time2 = alloca i32, align 4
  store i32 %start_regno, i32* %start_regno.addr, align 4
  store i32 %regno, i32* %regno.addr, align 4
  store i32 %opnum, i32* %opnum.addr, align 4
  store i32 %type, i32* %type.addr, align 4
  store %struct.rtx_def* %value, %struct.rtx_def** %value.addr, align 8
  store %struct.rtx_def* %out, %struct.rtx_def** %out.addr, align 8
  store i32 %reloadnum, i32* %reloadnum.addr, align 4
  store i32 %ignore_address_reloads, i32* %ignore_address_reloads.addr, align 4
  store i32 0, i32* %check_earlyclobber, align 4
  store i32 0, i32* %copy, align 4
  %0 = load i64, i64* @reload_reg_unavailable, align 8
  %1 = load i32, i32* %regno.addr, align 4
  %sh_prom = zext i32 %1 to i64
  %shl = shl i64 1, %sh_prom
  %and = and i64 %0, %shl
  %tobool = icmp ne i64 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp = icmp eq %struct.rtx_def* %2, %3
  br i1 %cmp, label %if.then.1, label %if.end.2

if.then.1:                                        ; preds = %if.end
  store i32 1, i32* %copy, align 4
  store %struct.rtx_def* null, %struct.rtx_def** %out.addr, align 8
  br label %if.end.2

if.end.2:                                         ; preds = %if.then.1, %if.end
  %4 = load i32, i32* %type.addr, align 4
  switch i32 %4, label %sw.default [
    i32 10, label %sw.bb
    i32 9, label %sw.bb.4
    i32 4, label %sw.bb.7
    i32 3, label %sw.bb.8
    i32 0, label %sw.bb.11
    i32 8, label %sw.bb.16
    i32 7, label %sw.bb.17
    i32 6, label %sw.bb.20
    i32 5, label %sw.bb.22
  ]

sw.bb:                                            ; preds = %if.end.2
  %5 = load i32, i32* %copy, align 4
  %tobool3 = icmp ne i32 %5, 0
  %cond = select i1 %tobool3, i32 0, i32 1
  store i32 %cond, i32* %time1, align 4
  br label %sw.epilog

sw.bb.4:                                          ; preds = %if.end.2
  %6 = load i32, i32* %copy, align 4
  %tobool5 = icmp ne i32 %6, 0
  %cond6 = select i1 %tobool5, i32 1, i32 155
  store i32 %cond6, i32* %time1, align 4
  br label %sw.epilog

sw.bb.7:                                          ; preds = %if.end.2
  %7 = load i32, i32* %opnum.addr, align 4
  %mul = mul nsw i32 %7, 4
  %add = add nsw i32 %mul, 2
  store i32 %add, i32* %time1, align 4
  br label %sw.epilog

sw.bb.8:                                          ; preds = %if.end.2
  %8 = load i32, i32* %opnum.addr, align 4
  %mul9 = mul nsw i32 %8, 4
  %add10 = add nsw i32 %mul9, 3
  store i32 %add10, i32* %time1, align 4
  br label %sw.epilog

sw.bb.11:                                         ; preds = %if.end.2
  %9 = load i32, i32* %copy, align 4
  %tobool12 = icmp ne i32 %9, 0
  br i1 %tobool12, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.bb.11
  %10 = load i32, i32* %opnum.addr, align 4
  %mul13 = mul nsw i32 %10, 4
  %add14 = add nsw i32 %mul13, 4
  br label %cond.end

cond.false:                                       ; preds = %sw.bb.11
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i32 [ %add14, %cond.true ], [ 123, %cond.false ]
  store i32 %cond15, i32* %time1, align 4
  br label %sw.epilog

sw.bb.16:                                         ; preds = %if.end.2
  store i32 121, i32* %time1, align 4
  br label %sw.epilog

sw.bb.17:                                         ; preds = %if.end.2
  %11 = load i32, i32* %copy, align 4
  %tobool18 = icmp ne i32 %11, 0
  %cond19 = select i1 %tobool18, i32 122, i32 123
  store i32 %cond19, i32* %time1, align 4
  br label %sw.epilog

sw.bb.20:                                         ; preds = %if.end.2
  %12 = load i32, i32* %opnum.addr, align 4
  %add21 = add nsw i32 124, %12
  store i32 %add21, i32* %time1, align 4
  br label %sw.epilog

sw.bb.22:                                         ; preds = %if.end.2
  %13 = load i32, i32* %opnum.addr, align 4
  %add23 = add nsw i32 125, %13
  store i32 %add23, i32* %time1, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.2
  store i32 155, i32* %time1, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.22, %sw.bb.20, %sw.bb.17, %sw.bb.16, %cond.end, %sw.bb.8, %sw.bb.7, %sw.bb.4, %sw.bb
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* @n_reloads, align 4
  %cmp24 = icmp slt i32 %14, %15
  br i1 %cmp24, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %i, align 4
  %idxprom = sext i32 %16 to i64
  %arrayidx = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx, i32 0, i32 11
  %17 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8
  store %struct.rtx_def* %17, %struct.rtx_def** %reg, align 8
  %18 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %tobool25 = icmp ne %struct.rtx_def* %18, null
  br i1 %tobool25, label %land.lhs.true, label %if.end.304

land.lhs.true:                                    ; preds = %for.body
  %19 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load = load i32, i32* %20, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp26 = icmp eq i32 %bf.clear, 61
  br i1 %cmp26, label %land.lhs.true.27, label %if.end.304

land.lhs.true.27:                                 ; preds = %land.lhs.true
  %21 = load i32, i32* %regno.addr, align 4
  %22 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %call = call i32 @true_regnum(%struct.rtx_def* %22)
  %sub = sub i32 %21, %call
  %23 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx28 to i32*
  %24 = load i32, i32* %rtuint, align 4
  %cmp29 = icmp uge i32 %24, 8
  br i1 %cmp29, label %land.lhs.true.30, label %lor.lhs.false

land.lhs.true.30:                                 ; preds = %land.lhs.true.27
  %25 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i32 0, i64 0
  %rtuint33 = bitcast %union.rtunion_def* %arrayidx32 to i32*
  %26 = load i32, i32* %rtuint33, align 4
  %cmp34 = icmp ule i32 %26, 15
  br i1 %cmp34, label %cond.true.64, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.30, %land.lhs.true.27
  %27 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i32 0, i64 0
  %rtuint37 = bitcast %union.rtunion_def* %arrayidx36 to i32*
  %28 = load i32, i32* %rtuint37, align 4
  %cmp38 = icmp uge i32 %28, 21
  br i1 %cmp38, label %land.lhs.true.39, label %lor.lhs.false.44

land.lhs.true.39:                                 ; preds = %lor.lhs.false
  %29 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i32 0, i64 0
  %rtuint42 = bitcast %union.rtunion_def* %arrayidx41 to i32*
  %30 = load i32, i32* %rtuint42, align 4
  %cmp43 = icmp ule i32 %30, 28
  br i1 %cmp43, label %cond.true.64, label %lor.lhs.false.44

lor.lhs.false.44:                                 ; preds = %land.lhs.true.39, %lor.lhs.false
  %31 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i32 0, i64 0
  %rtuint47 = bitcast %union.rtunion_def* %arrayidx46 to i32*
  %32 = load i32, i32* %rtuint47, align 4
  %cmp48 = icmp uge i32 %32, 45
  br i1 %cmp48, label %land.lhs.true.49, label %lor.lhs.false.54

land.lhs.true.49:                                 ; preds = %lor.lhs.false.44
  %33 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i32 0, i64 0
  %rtuint52 = bitcast %union.rtunion_def* %arrayidx51 to i32*
  %34 = load i32, i32* %rtuint52, align 4
  %cmp53 = icmp ule i32 %34, 52
  br i1 %cmp53, label %cond.true.64, label %lor.lhs.false.54

lor.lhs.false.54:                                 ; preds = %land.lhs.true.49, %lor.lhs.false.44
  %35 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx56 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld55, i32 0, i64 0
  %rtuint57 = bitcast %union.rtunion_def* %arrayidx56 to i32*
  %36 = load i32, i32* %rtuint57, align 4
  %cmp58 = icmp uge i32 %36, 29
  br i1 %cmp58, label %land.lhs.true.59, label %cond.false.77

land.lhs.true.59:                                 ; preds = %lor.lhs.false.54
  %37 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i32 0, i64 0
  %rtuint62 = bitcast %union.rtunion_def* %arrayidx61 to i32*
  %38 = load i32, i32* %rtuint62, align 4
  %cmp63 = icmp ule i32 %38, 36
  br i1 %cmp63, label %cond.true.64, label %cond.false.77

cond.true.64:                                     ; preds = %land.lhs.true.59, %land.lhs.true.49, %land.lhs.true.39, %land.lhs.true.30
  %39 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %40 = bitcast %struct.rtx_def* %39 to i32*
  %bf.load65 = load i32, i32* %40, align 8
  %bf.lshr = lshr i32 %bf.load65, 16
  %bf.clear66 = and i32 %bf.lshr, 255
  %idxprom67 = sext i32 %bf.clear66 to i64
  %arrayidx68 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom67
  %41 = load i32, i32* %arrayidx68, align 4
  %cmp69 = icmp eq i32 %41, 5
  br i1 %cmp69, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.64
  %42 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %43 = bitcast %struct.rtx_def* %42 to i32*
  %bf.load70 = load i32, i32* %43, align 8
  %bf.lshr71 = lshr i32 %bf.load70, 16
  %bf.clear72 = and i32 %bf.lshr71, 255
  %idxprom73 = sext i32 %bf.clear72 to i64
  %arrayidx74 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom73
  %44 = load i32, i32* %arrayidx74, align 4
  %cmp75 = icmp eq i32 %44, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.64
  %45 = phi i1 [ true, %cond.true.64 ], [ %cmp75, %lor.rhs ]
  %cond76 = select i1 %45, i32 2, i32 1
  br label %cond.end.113

cond.false.77:                                    ; preds = %land.lhs.true.59, %lor.lhs.false.54
  %46 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %47 = bitcast %struct.rtx_def* %46 to i32*
  %bf.load78 = load i32, i32* %47, align 8
  %bf.lshr79 = lshr i32 %bf.load78, 16
  %bf.clear80 = and i32 %bf.lshr79, 255
  %cmp81 = icmp eq i32 %bf.clear80, 18
  br i1 %cmp81, label %cond.true.82, label %cond.false.86

cond.true.82:                                     ; preds = %cond.false.77
  %48 = load i32, i32* @target_flags, align 4
  %and83 = and i32 %48, 33554432
  %tobool84 = icmp ne i32 %and83, 0
  %cond85 = select i1 %tobool84, i32 2, i32 3
  br label %cond.end.111

cond.false.86:                                    ; preds = %cond.false.77
  %49 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %50 = bitcast %struct.rtx_def* %49 to i32*
  %bf.load87 = load i32, i32* %50, align 8
  %bf.lshr88 = lshr i32 %bf.load87, 16
  %bf.clear89 = and i32 %bf.lshr88, 255
  %cmp90 = icmp eq i32 %bf.clear89, 24
  br i1 %cmp90, label %cond.true.91, label %cond.false.95

cond.true.91:                                     ; preds = %cond.false.86
  %51 = load i32, i32* @target_flags, align 4
  %and92 = and i32 %51, 33554432
  %tobool93 = icmp ne i32 %and92, 0
  %cond94 = select i1 %tobool93, i32 4, i32 6
  br label %cond.end.109

cond.false.95:                                    ; preds = %cond.false.86
  %52 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %53 = bitcast %struct.rtx_def* %52 to i32*
  %bf.load96 = load i32, i32* %53, align 8
  %bf.lshr97 = lshr i32 %bf.load96, 16
  %bf.clear98 = and i32 %bf.lshr97, 255
  %idxprom99 = sext i32 %bf.clear98 to i64
  %arrayidx100 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom99
  %54 = load i8, i8* %arrayidx100, align 1
  %conv = zext i8 %54 to i32
  %55 = load i32, i32* @target_flags, align 4
  %and101 = and i32 %55, 33554432
  %tobool102 = icmp ne i32 %and101, 0
  %cond103 = select i1 %tobool102, i32 8, i32 4
  %add104 = add nsw i32 %conv, %cond103
  %sub105 = sub nsw i32 %add104, 1
  %56 = load i32, i32* @target_flags, align 4
  %and106 = and i32 %56, 33554432
  %tobool107 = icmp ne i32 %and106, 0
  %cond108 = select i1 %tobool107, i32 8, i32 4
  %div = sdiv i32 %sub105, %cond108
  br label %cond.end.109

cond.end.109:                                     ; preds = %cond.false.95, %cond.true.91
  %cond110 = phi i32 [ %cond94, %cond.true.91 ], [ %div, %cond.false.95 ]
  br label %cond.end.111

cond.end.111:                                     ; preds = %cond.end.109, %cond.true.82
  %cond112 = phi i32 [ %cond85, %cond.true.82 ], [ %cond110, %cond.end.109 ]
  br label %cond.end.113

cond.end.113:                                     ; preds = %cond.end.111, %lor.end
  %cond114 = phi i32 [ %cond76, %lor.end ], [ %cond112, %cond.end.111 ]
  %sub115 = sub i32 %cond114, 1
  %cmp116 = icmp ule i32 %sub, %sub115
  br i1 %cmp116, label %land.lhs.true.118, label %if.end.304

land.lhs.true.118:                                ; preds = %cond.end.113
  %57 = load i32, i32* %i, align 4
  %58 = load i32, i32* %reloadnum.addr, align 4
  %cmp119 = icmp ne i32 %57, %58
  br i1 %cmp119, label %if.then.121, label %if.end.304

if.then.121:                                      ; preds = %land.lhs.true.118
  %59 = load i32, i32* %i, align 4
  %idxprom122 = sext i32 %59 to i64
  %arrayidx123 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom122
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx123, i32 0, i32 0
  %60 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  store %struct.rtx_def* %60, %struct.rtx_def** %other_input, align 8
  %61 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %call124 = call i32 @true_regnum(%struct.rtx_def* %61)
  %62 = load i32, i32* %start_regno.addr, align 4
  %cmp125 = icmp ne i32 %call124, %62
  br i1 %cmp125, label %if.then.127, label %if.end.128

if.then.127:                                      ; preds = %if.then.121
  store %struct.rtx_def* null, %struct.rtx_def** %other_input, align 8
  br label %if.end.128

if.end.128:                                       ; preds = %if.then.127, %if.then.121
  %63 = load %struct.rtx_def*, %struct.rtx_def** %other_input, align 8
  %tobool129 = icmp ne %struct.rtx_def* %63, null
  br i1 %tobool129, label %lor.lhs.false.130, label %if.then.140

lor.lhs.false.130:                                ; preds = %if.end.128
  %64 = load %struct.rtx_def*, %struct.rtx_def** %other_input, align 8
  %65 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %call131 = call i32 @rtx_equal_p(%struct.rtx_def* %64, %struct.rtx_def* %65)
  %tobool132 = icmp ne i32 %call131, 0
  br i1 %tobool132, label %lor.lhs.false.133, label %if.then.140

lor.lhs.false.133:                                ; preds = %lor.lhs.false.130
  %66 = load i32, i32* %i, align 4
  %idxprom134 = sext i32 %66 to i64
  %arrayidx135 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom134
  %out136 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx135, i32 0, i32 1
  %67 = load %struct.rtx_def*, %struct.rtx_def** %out136, align 8
  %tobool137 = icmp ne %struct.rtx_def* %67, null
  br i1 %tobool137, label %if.then.140, label %lor.lhs.false.138

lor.lhs.false.138:                                ; preds = %lor.lhs.false.133
  %68 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %tobool139 = icmp ne %struct.rtx_def* %68, null
  br i1 %tobool139, label %if.then.140, label %if.end.303

if.then.140:                                      ; preds = %lor.lhs.false.138, %lor.lhs.false.133, %lor.lhs.false.130, %if.end.128
  %69 = load i32, i32* %i, align 4
  %idxprom141 = sext i32 %69 to i64
  %arrayidx142 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom141
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx142, i32 0, i32 17
  %70 = load i32, i32* %when_needed, align 4
  switch i32 %70, label %sw.default.275 [
    i32 10, label %sw.bb.143
    i32 4, label %sw.bb.144
    i32 3, label %sw.bb.182
    i32 0, label %sw.bb.205
    i32 8, label %sw.bb.211
    i32 7, label %sw.bb.227
    i32 2, label %sw.bb.228
    i32 1, label %sw.bb.229
    i32 6, label %sw.bb.230
    i32 5, label %sw.bb.250
    i32 9, label %sw.bb.255
  ]

sw.bb.143:                                        ; preds = %if.then.140
  store i32 0, i32* %time2, align 4
  br label %sw.epilog.276

sw.bb.144:                                        ; preds = %if.then.140
  %71 = load i32, i32* %type.addr, align 4
  %cmp145 = icmp eq i32 %71, 3
  br i1 %cmp145, label %land.lhs.true.147, label %if.end.159

land.lhs.true.147:                                ; preds = %sw.bb.144
  %72 = load i32, i32* %reloadnum.addr, align 4
  %73 = load i32, i32* %i, align 4
  %add148 = add nsw i32 %73, 1
  %cmp149 = icmp eq i32 %72, %add148
  br i1 %cmp149, label %land.lhs.true.151, label %if.end.159

land.lhs.true.151:                                ; preds = %land.lhs.true.147
  %74 = load i32, i32* %ignore_address_reloads.addr, align 4
  %tobool152 = icmp ne i32 %74, 0
  br i1 %tobool152, label %land.lhs.true.153, label %if.end.159

land.lhs.true.153:                                ; preds = %land.lhs.true.151
  %75 = load i32, i32* %reloadnum.addr, align 4
  %idxprom154 = sext i32 %75 to i64
  %arrayidx155 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom154
  %out156 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx155, i32 0, i32 1
  %76 = load %struct.rtx_def*, %struct.rtx_def** %out156, align 8
  %tobool157 = icmp ne %struct.rtx_def* %76, null
  br i1 %tobool157, label %if.end.159, label %if.then.158

if.then.158:                                      ; preds = %land.lhs.true.153
  br label %for.inc

if.end.159:                                       ; preds = %land.lhs.true.153, %land.lhs.true.151, %land.lhs.true.147, %sw.bb.144
  %77 = load i32, i32* %type.addr, align 4
  %cmp160 = icmp eq i32 %77, 0
  br i1 %cmp160, label %land.lhs.true.162, label %if.end.176

land.lhs.true.162:                                ; preds = %if.end.159
  %78 = load i32, i32* %opnum.addr, align 4
  %79 = load i32, i32* %i, align 4
  %idxprom163 = sext i32 %79 to i64
  %arrayidx164 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom163
  %opnum165 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx164, i32 0, i32 12
  %80 = load i32, i32* %opnum165, align 4
  %cmp166 = icmp eq i32 %78, %80
  br i1 %cmp166, label %land.lhs.true.168, label %if.end.176

land.lhs.true.168:                                ; preds = %land.lhs.true.162
  %81 = load i32, i32* %ignore_address_reloads.addr, align 4
  %tobool169 = icmp ne i32 %81, 0
  br i1 %tobool169, label %land.lhs.true.170, label %if.end.176

land.lhs.true.170:                                ; preds = %land.lhs.true.168
  %82 = load i32, i32* %reloadnum.addr, align 4
  %idxprom171 = sext i32 %82 to i64
  %arrayidx172 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom171
  %out173 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx172, i32 0, i32 1
  %83 = load %struct.rtx_def*, %struct.rtx_def** %out173, align 8
  %tobool174 = icmp ne %struct.rtx_def* %83, null
  br i1 %tobool174, label %if.end.176, label %if.then.175

if.then.175:                                      ; preds = %land.lhs.true.170
  br label %for.inc

if.end.176:                                       ; preds = %land.lhs.true.170, %land.lhs.true.168, %land.lhs.true.162, %if.end.159
  %84 = load i32, i32* %i, align 4
  %idxprom177 = sext i32 %84 to i64
  %arrayidx178 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom177
  %opnum179 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx178, i32 0, i32 12
  %85 = load i32, i32* %opnum179, align 4
  %mul180 = mul nsw i32 %85, 4
  %add181 = add nsw i32 %mul180, 2
  store i32 %add181, i32* %time2, align 4
  br label %sw.epilog.276

sw.bb.182:                                        ; preds = %if.then.140
  %86 = load i32, i32* %type.addr, align 4
  %cmp183 = icmp eq i32 %86, 0
  br i1 %cmp183, label %land.lhs.true.185, label %if.end.199

land.lhs.true.185:                                ; preds = %sw.bb.182
  %87 = load i32, i32* %opnum.addr, align 4
  %88 = load i32, i32* %i, align 4
  %idxprom186 = sext i32 %88 to i64
  %arrayidx187 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom186
  %opnum188 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx187, i32 0, i32 12
  %89 = load i32, i32* %opnum188, align 4
  %cmp189 = icmp eq i32 %87, %89
  br i1 %cmp189, label %land.lhs.true.191, label %if.end.199

land.lhs.true.191:                                ; preds = %land.lhs.true.185
  %90 = load i32, i32* %ignore_address_reloads.addr, align 4
  %tobool192 = icmp ne i32 %90, 0
  br i1 %tobool192, label %land.lhs.true.193, label %if.end.199

land.lhs.true.193:                                ; preds = %land.lhs.true.191
  %91 = load i32, i32* %reloadnum.addr, align 4
  %idxprom194 = sext i32 %91 to i64
  %arrayidx195 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom194
  %out196 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx195, i32 0, i32 1
  %92 = load %struct.rtx_def*, %struct.rtx_def** %out196, align 8
  %tobool197 = icmp ne %struct.rtx_def* %92, null
  br i1 %tobool197, label %if.end.199, label %if.then.198

if.then.198:                                      ; preds = %land.lhs.true.193
  br label %for.inc

if.end.199:                                       ; preds = %land.lhs.true.193, %land.lhs.true.191, %land.lhs.true.185, %sw.bb.182
  %93 = load i32, i32* %i, align 4
  %idxprom200 = sext i32 %93 to i64
  %arrayidx201 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom200
  %opnum202 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx201, i32 0, i32 12
  %94 = load i32, i32* %opnum202, align 4
  %mul203 = mul nsw i32 %94, 4
  %add204 = add nsw i32 %mul203, 3
  store i32 %add204, i32* %time2, align 4
  br label %sw.epilog.276

sw.bb.205:                                        ; preds = %if.then.140
  %95 = load i32, i32* %i, align 4
  %idxprom206 = sext i32 %95 to i64
  %arrayidx207 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom206
  %opnum208 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx207, i32 0, i32 12
  %96 = load i32, i32* %opnum208, align 4
  %mul209 = mul nsw i32 %96, 4
  %add210 = add nsw i32 %mul209, 4
  store i32 %add210, i32* %time2, align 4
  store i32 1, i32* %check_earlyclobber, align 4
  br label %sw.epilog.276

sw.bb.211:                                        ; preds = %if.then.140
  %97 = load i32, i32* %type.addr, align 4
  %cmp212 = icmp eq i32 %97, 7
  br i1 %cmp212, label %land.lhs.true.214, label %if.end.226

land.lhs.true.214:                                ; preds = %sw.bb.211
  %98 = load i32, i32* %reloadnum.addr, align 4
  %99 = load i32, i32* %i, align 4
  %add215 = add nsw i32 %99, 1
  %cmp216 = icmp eq i32 %98, %add215
  br i1 %cmp216, label %land.lhs.true.218, label %if.end.226

land.lhs.true.218:                                ; preds = %land.lhs.true.214
  %100 = load i32, i32* %ignore_address_reloads.addr, align 4
  %tobool219 = icmp ne i32 %100, 0
  br i1 %tobool219, label %land.lhs.true.220, label %if.end.226

land.lhs.true.220:                                ; preds = %land.lhs.true.218
  %101 = load i32, i32* %reloadnum.addr, align 4
  %idxprom221 = sext i32 %101 to i64
  %arrayidx222 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom221
  %out223 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx222, i32 0, i32 1
  %102 = load %struct.rtx_def*, %struct.rtx_def** %out223, align 8
  %tobool224 = icmp ne %struct.rtx_def* %102, null
  br i1 %tobool224, label %if.end.226, label %if.then.225

if.then.225:                                      ; preds = %land.lhs.true.220
  br label %for.inc

if.end.226:                                       ; preds = %land.lhs.true.220, %land.lhs.true.218, %land.lhs.true.214, %sw.bb.211
  store i32 121, i32* %time2, align 4
  br label %sw.epilog.276

sw.bb.227:                                        ; preds = %if.then.140
  store i32 122, i32* %time2, align 4
  store i32 1, i32* %check_earlyclobber, align 4
  br label %sw.epilog.276

sw.bb.228:                                        ; preds = %if.then.140
  store i32 123, i32* %time2, align 4
  br label %sw.epilog.276

sw.bb.229:                                        ; preds = %if.then.140
  store i32 124, i32* %time2, align 4
  br label %sw.epilog.276

sw.bb.230:                                        ; preds = %if.then.140
  %103 = load i32, i32* %type.addr, align 4
  %cmp231 = icmp eq i32 %103, 5
  br i1 %cmp231, label %land.lhs.true.233, label %if.end.245

land.lhs.true.233:                                ; preds = %sw.bb.230
  %104 = load i32, i32* %reloadnum.addr, align 4
  %105 = load i32, i32* %i, align 4
  %add234 = add nsw i32 %105, 1
  %cmp235 = icmp eq i32 %104, %add234
  br i1 %cmp235, label %land.lhs.true.237, label %if.end.245

land.lhs.true.237:                                ; preds = %land.lhs.true.233
  %106 = load i32, i32* %ignore_address_reloads.addr, align 4
  %tobool238 = icmp ne i32 %106, 0
  br i1 %tobool238, label %land.lhs.true.239, label %if.end.245

land.lhs.true.239:                                ; preds = %land.lhs.true.237
  %107 = load i32, i32* %reloadnum.addr, align 4
  %idxprom240 = sext i32 %107 to i64
  %arrayidx241 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom240
  %out242 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx241, i32 0, i32 1
  %108 = load %struct.rtx_def*, %struct.rtx_def** %out242, align 8
  %tobool243 = icmp ne %struct.rtx_def* %108, null
  br i1 %tobool243, label %if.end.245, label %if.then.244

if.then.244:                                      ; preds = %land.lhs.true.239
  br label %for.inc

if.end.245:                                       ; preds = %land.lhs.true.239, %land.lhs.true.237, %land.lhs.true.233, %sw.bb.230
  %109 = load i32, i32* %i, align 4
  %idxprom246 = sext i32 %109 to i64
  %arrayidx247 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom246
  %opnum248 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx247, i32 0, i32 12
  %110 = load i32, i32* %opnum248, align 4
  %add249 = add nsw i32 124, %110
  store i32 %add249, i32* %time2, align 4
  br label %sw.epilog.276

sw.bb.250:                                        ; preds = %if.then.140
  %111 = load i32, i32* %i, align 4
  %idxprom251 = sext i32 %111 to i64
  %arrayidx252 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom251
  %opnum253 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx252, i32 0, i32 12
  %112 = load i32, i32* %opnum253, align 4
  %add254 = add nsw i32 125, %112
  store i32 %add254, i32* %time2, align 4
  br label %sw.epilog.276

sw.bb.255:                                        ; preds = %if.then.140
  %113 = load i32, i32* %i, align 4
  %idxprom256 = sext i32 %113 to i64
  %arrayidx257 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom256
  %in258 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx257, i32 0, i32 0
  %114 = load %struct.rtx_def*, %struct.rtx_def** %in258, align 8
  %tobool259 = icmp ne %struct.rtx_def* %114, null
  br i1 %tobool259, label %lor.lhs.false.260, label %if.then.263

lor.lhs.false.260:                                ; preds = %sw.bb.255
  %115 = load %struct.rtx_def*, %struct.rtx_def** %other_input, align 8
  %116 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %call261 = call i32 @rtx_equal_p(%struct.rtx_def* %115, %struct.rtx_def* %116)
  %tobool262 = icmp ne i32 %call261, 0
  br i1 %tobool262, label %if.then.263, label %if.end.271

if.then.263:                                      ; preds = %lor.lhs.false.260, %sw.bb.255
  store i32 124, i32* %time2, align 4
  %117 = load i32, i32* %i, align 4
  %idxprom264 = sext i32 %117 to i64
  %arrayidx265 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom264
  %out266 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx265, i32 0, i32 1
  %118 = load %struct.rtx_def*, %struct.rtx_def** %out266, align 8
  %call267 = call i32 @earlyclobber_operand_p(%struct.rtx_def* %118)
  %tobool268 = icmp ne i32 %call267, 0
  br i1 %tobool268, label %if.then.269, label %if.end.270

if.then.269:                                      ; preds = %if.then.263
  store i32 123, i32* %time2, align 4
  br label %if.end.270

if.end.270:                                       ; preds = %if.then.269, %if.then.263
  br label %sw.epilog.276

if.end.271:                                       ; preds = %lor.lhs.false.260
  store i32 1, i32* %time2, align 4
  %119 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %tobool272 = icmp ne %struct.rtx_def* %119, null
  br i1 %tobool272, label %if.then.273, label %if.end.274

if.then.273:                                      ; preds = %if.end.271
  store i32 0, i32* %retval
  br label %return

if.end.274:                                       ; preds = %if.end.271
  br label %sw.epilog.276

sw.default.275:                                   ; preds = %if.then.140
  store i32 0, i32* %retval
  br label %return

sw.epilog.276:                                    ; preds = %if.end.274, %if.end.270, %sw.bb.250, %if.end.245, %sw.bb.229, %sw.bb.228, %sw.bb.227, %if.end.226, %sw.bb.205, %if.end.199, %if.end.176, %sw.bb.143
  %120 = load i32, i32* %time1, align 4
  %121 = load i32, i32* %time2, align 4
  %cmp277 = icmp sge i32 %120, %121
  br i1 %cmp277, label %land.lhs.true.279, label %lor.lhs.false.292

land.lhs.true.279:                                ; preds = %sw.epilog.276
  %122 = load i32, i32* %i, align 4
  %idxprom280 = sext i32 %122 to i64
  %arrayidx281 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom280
  %in282 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx281, i32 0, i32 0
  %123 = load %struct.rtx_def*, %struct.rtx_def** %in282, align 8
  %tobool283 = icmp ne %struct.rtx_def* %123, null
  br i1 %tobool283, label %lor.lhs.false.284, label %if.then.301

lor.lhs.false.284:                                ; preds = %land.lhs.true.279
  %124 = load i32, i32* %i, align 4
  %idxprom285 = sext i32 %124 to i64
  %arrayidx286 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom285
  %out287 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx286, i32 0, i32 1
  %125 = load %struct.rtx_def*, %struct.rtx_def** %out287, align 8
  %tobool288 = icmp ne %struct.rtx_def* %125, null
  br i1 %tobool288, label %if.then.301, label %lor.lhs.false.289

lor.lhs.false.289:                                ; preds = %lor.lhs.false.284
  %126 = load %struct.rtx_def*, %struct.rtx_def** %other_input, align 8
  %127 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %call290 = call i32 @rtx_equal_p(%struct.rtx_def* %126, %struct.rtx_def* %127)
  %tobool291 = icmp ne i32 %call290, 0
  br i1 %tobool291, label %lor.lhs.false.292, label %if.then.301

lor.lhs.false.292:                                ; preds = %lor.lhs.false.289, %sw.epilog.276
  %128 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %tobool293 = icmp ne %struct.rtx_def* %128, null
  br i1 %tobool293, label %land.lhs.true.294, label %if.end.302

land.lhs.true.294:                                ; preds = %lor.lhs.false.292
  %129 = load i32, i32* %reloadnum.addr, align 4
  %idxprom295 = sext i32 %129 to i64
  %arrayidx296 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom295
  %out_reg = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx296, i32 0, i32 9
  %130 = load %struct.rtx_def*, %struct.rtx_def** %out_reg, align 8
  %tobool297 = icmp ne %struct.rtx_def* %130, null
  br i1 %tobool297, label %land.lhs.true.298, label %if.end.302

land.lhs.true.298:                                ; preds = %land.lhs.true.294
  %131 = load i32, i32* %time2, align 4
  %cmp299 = icmp sge i32 %131, 123
  br i1 %cmp299, label %if.then.301, label %if.end.302

if.then.301:                                      ; preds = %land.lhs.true.298, %lor.lhs.false.289, %lor.lhs.false.284, %land.lhs.true.279
  store i32 0, i32* %retval
  br label %return

if.end.302:                                       ; preds = %land.lhs.true.298, %land.lhs.true.294, %lor.lhs.false.292
  br label %if.end.303

if.end.303:                                       ; preds = %if.end.302, %lor.lhs.false.138
  br label %if.end.304

if.end.304:                                       ; preds = %if.end.303, %land.lhs.true.118, %cond.end.113, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.304, %if.then.244, %if.then.225, %if.then.198, %if.then.175, %if.then.158
  %132 = load i32, i32* %i, align 4
  %inc = add nsw i32 %132, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %133 = load i32, i32* %check_earlyclobber, align 4
  %tobool305 = icmp ne i32 %133, 0
  br i1 %tobool305, label %land.lhs.true.306, label %if.end.312

land.lhs.true.306:                                ; preds = %for.end
  %134 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %tobool307 = icmp ne %struct.rtx_def* %134, null
  br i1 %tobool307, label %land.lhs.true.308, label %if.end.312

land.lhs.true.308:                                ; preds = %land.lhs.true.306
  %135 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %call309 = call i32 @earlyclobber_operand_p(%struct.rtx_def* %135)
  %tobool310 = icmp ne i32 %call309, 0
  br i1 %tobool310, label %if.then.311, label %if.end.312

if.then.311:                                      ; preds = %land.lhs.true.308
  store i32 0, i32* %retval
  br label %return

if.end.312:                                       ; preds = %land.lhs.true.308, %land.lhs.true.306, %for.end
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.312, %if.then.311, %if.then.301, %sw.default.275, %if.then.273, %if.then
  %136 = load i32, i32* %retval
  ret i32 %136
}

declare i32 @earlyclobber_operand_p(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal i32 @reload_reg_free_p(i32 %regno, i32 %opnum, i32 %type) #0 {
entry:
  %retval = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  %opnum.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  store i32 %opnum, i32* %opnum.addr, align 4
  store i32 %type, i32* %type.addr, align 4
  %0 = load i64, i64* @reload_reg_used, align 8
  %1 = load i32, i32* %regno.addr, align 4
  %sh_prom = zext i32 %1 to i64
  %shl = shl i64 1, %sh_prom
  %and = and i64 %0, %shl
  %tobool = icmp ne i64 %and, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* @reload_reg_unavailable, align 8
  %3 = load i32, i32* %regno.addr, align 4
  %sh_prom1 = zext i32 %3 to i64
  %shl2 = shl i64 1, %sh_prom1
  %and3 = and i64 %2, %shl2
  %tobool4 = icmp ne i64 %and3, 0
  br i1 %tobool4, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i32, i32* %type.addr, align 4
  switch i32 %4, label %sw.epilog [
    i32 9, label %sw.bb
    i32 0, label %sw.bb.62
    i32 3, label %sw.bb.115
    i32 4, label %sw.bb.145
    i32 5, label %sw.bb.168
    i32 6, label %sw.bb.191
    i32 7, label %sw.bb.214
    i32 8, label %sw.bb.237
    i32 1, label %sw.bb.257
    i32 2, label %sw.bb.299
    i32 10, label %sw.bb.334
  ]

sw.bb:                                            ; preds = %if.end
  %5 = load i64, i64* @reload_reg_used_in_other_addr, align 8
  %6 = load i32, i32* %regno.addr, align 4
  %sh_prom5 = zext i32 %6 to i64
  %shl6 = shl i64 1, %sh_prom5
  %and7 = and i64 %5, %shl6
  %tobool8 = icmp ne i64 %and7, 0
  br i1 %tobool8, label %if.then.19, label %lor.lhs.false.9

lor.lhs.false.9:                                  ; preds = %sw.bb
  %7 = load i64, i64* @reload_reg_used_in_op_addr, align 8
  %8 = load i32, i32* %regno.addr, align 4
  %sh_prom10 = zext i32 %8 to i64
  %shl11 = shl i64 1, %sh_prom10
  %and12 = and i64 %7, %shl11
  %tobool13 = icmp ne i64 %and12, 0
  br i1 %tobool13, label %if.then.19, label %lor.lhs.false.14

lor.lhs.false.14:                                 ; preds = %lor.lhs.false.9
  %9 = load i64, i64* @reload_reg_used_in_insn, align 8
  %10 = load i32, i32* %regno.addr, align 4
  %sh_prom15 = zext i32 %10 to i64
  %shl16 = shl i64 1, %sh_prom15
  %and17 = and i64 %9, %shl16
  %tobool18 = icmp ne i64 %and17, 0
  br i1 %tobool18, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %lor.lhs.false.14, %lor.lhs.false.9, %sw.bb
  store i32 0, i32* %retval
  br label %return

if.end.20:                                        ; preds = %lor.lhs.false.14
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.20
  %11 = load i32, i32* %i, align 4
  %12 = load i32, i32* @reload_n_operands, align 4
  %cmp = icmp slt i32 %11, %12
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4
  %idxprom = sext i32 %13 to i64
  %arrayidx = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input_addr, i32 0, i64 %idxprom
  %14 = load i64, i64* %arrayidx, align 8
  %15 = load i32, i32* %regno.addr, align 4
  %sh_prom21 = zext i32 %15 to i64
  %shl22 = shl i64 1, %sh_prom21
  %and23 = and i64 %14, %shl22
  %tobool24 = icmp ne i64 %and23, 0
  br i1 %tobool24, label %if.then.60, label %lor.lhs.false.25

lor.lhs.false.25:                                 ; preds = %for.body
  %16 = load i32, i32* %i, align 4
  %idxprom26 = sext i32 %16 to i64
  %arrayidx27 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_inpaddr_addr, i32 0, i64 %idxprom26
  %17 = load i64, i64* %arrayidx27, align 8
  %18 = load i32, i32* %regno.addr, align 4
  %sh_prom28 = zext i32 %18 to i64
  %shl29 = shl i64 1, %sh_prom28
  %and30 = and i64 %17, %shl29
  %tobool31 = icmp ne i64 %and30, 0
  br i1 %tobool31, label %if.then.60, label %lor.lhs.false.32

lor.lhs.false.32:                                 ; preds = %lor.lhs.false.25
  %19 = load i32, i32* %i, align 4
  %idxprom33 = sext i32 %19 to i64
  %arrayidx34 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output_addr, i32 0, i64 %idxprom33
  %20 = load i64, i64* %arrayidx34, align 8
  %21 = load i32, i32* %regno.addr, align 4
  %sh_prom35 = zext i32 %21 to i64
  %shl36 = shl i64 1, %sh_prom35
  %and37 = and i64 %20, %shl36
  %tobool38 = icmp ne i64 %and37, 0
  br i1 %tobool38, label %if.then.60, label %lor.lhs.false.39

lor.lhs.false.39:                                 ; preds = %lor.lhs.false.32
  %22 = load i32, i32* %i, align 4
  %idxprom40 = sext i32 %22 to i64
  %arrayidx41 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_outaddr_addr, i32 0, i64 %idxprom40
  %23 = load i64, i64* %arrayidx41, align 8
  %24 = load i32, i32* %regno.addr, align 4
  %sh_prom42 = zext i32 %24 to i64
  %shl43 = shl i64 1, %sh_prom42
  %and44 = and i64 %23, %shl43
  %tobool45 = icmp ne i64 %and44, 0
  br i1 %tobool45, label %if.then.60, label %lor.lhs.false.46

lor.lhs.false.46:                                 ; preds = %lor.lhs.false.39
  %25 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %25 to i64
  %arrayidx48 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i32 0, i64 %idxprom47
  %26 = load i64, i64* %arrayidx48, align 8
  %27 = load i32, i32* %regno.addr, align 4
  %sh_prom49 = zext i32 %27 to i64
  %shl50 = shl i64 1, %sh_prom49
  %and51 = and i64 %26, %shl50
  %tobool52 = icmp ne i64 %and51, 0
  br i1 %tobool52, label %if.then.60, label %lor.lhs.false.53

lor.lhs.false.53:                                 ; preds = %lor.lhs.false.46
  %28 = load i32, i32* %i, align 4
  %idxprom54 = sext i32 %28 to i64
  %arrayidx55 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i32 0, i64 %idxprom54
  %29 = load i64, i64* %arrayidx55, align 8
  %30 = load i32, i32* %regno.addr, align 4
  %sh_prom56 = zext i32 %30 to i64
  %shl57 = shl i64 1, %sh_prom56
  %and58 = and i64 %29, %shl57
  %tobool59 = icmp ne i64 %and58, 0
  br i1 %tobool59, label %if.then.60, label %if.end.61

if.then.60:                                       ; preds = %lor.lhs.false.53, %lor.lhs.false.46, %lor.lhs.false.39, %lor.lhs.false.32, %lor.lhs.false.25, %for.body
  store i32 0, i32* %retval
  br label %return

if.end.61:                                        ; preds = %lor.lhs.false.53
  br label %for.inc

for.inc:                                          ; preds = %if.end.61
  %31 = load i32, i32* %i, align 4
  %inc = add nsw i32 %31, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  br label %return

sw.bb.62:                                         ; preds = %if.end
  %32 = load i64, i64* @reload_reg_used_in_insn, align 8
  %33 = load i32, i32* %regno.addr, align 4
  %sh_prom63 = zext i32 %33 to i64
  %shl64 = shl i64 1, %sh_prom63
  %and65 = and i64 %32, %shl64
  %tobool66 = icmp ne i64 %and65, 0
  br i1 %tobool66, label %if.then.72, label %lor.lhs.false.67

lor.lhs.false.67:                                 ; preds = %sw.bb.62
  %34 = load i64, i64* @reload_reg_used_in_op_addr, align 8
  %35 = load i32, i32* %regno.addr, align 4
  %sh_prom68 = zext i32 %35 to i64
  %shl69 = shl i64 1, %sh_prom68
  %and70 = and i64 %34, %shl69
  %tobool71 = icmp ne i64 %and70, 0
  br i1 %tobool71, label %if.then.72, label %if.end.73

if.then.72:                                       ; preds = %lor.lhs.false.67, %sw.bb.62
  store i32 0, i32* %retval
  br label %return

if.end.73:                                        ; preds = %lor.lhs.false.67
  %36 = load i64, i64* @reload_reg_used_in_op_addr_reload, align 8
  %37 = load i32, i32* %regno.addr, align 4
  %sh_prom74 = zext i32 %37 to i64
  %shl75 = shl i64 1, %sh_prom74
  %and76 = and i64 %36, %shl75
  %tobool77 = icmp ne i64 %and76, 0
  br i1 %tobool77, label %if.then.78, label %if.end.79

if.then.78:                                       ; preds = %if.end.73
  store i32 0, i32* %retval
  br label %return

if.end.79:                                        ; preds = %if.end.73
  store i32 0, i32* %i, align 4
  br label %for.cond.80

for.cond.80:                                      ; preds = %for.inc.91, %if.end.79
  %38 = load i32, i32* %i, align 4
  %39 = load i32, i32* @reload_n_operands, align 4
  %cmp81 = icmp slt i32 %38, %39
  br i1 %cmp81, label %for.body.82, label %for.end.93

for.body.82:                                      ; preds = %for.cond.80
  %40 = load i32, i32* %i, align 4
  %idxprom83 = sext i32 %40 to i64
  %arrayidx84 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i32 0, i64 %idxprom83
  %41 = load i64, i64* %arrayidx84, align 8
  %42 = load i32, i32* %regno.addr, align 4
  %sh_prom85 = zext i32 %42 to i64
  %shl86 = shl i64 1, %sh_prom85
  %and87 = and i64 %41, %shl86
  %tobool88 = icmp ne i64 %and87, 0
  br i1 %tobool88, label %if.then.89, label %if.end.90

if.then.89:                                       ; preds = %for.body.82
  store i32 0, i32* %retval
  br label %return

if.end.90:                                        ; preds = %for.body.82
  br label %for.inc.91

for.inc.91:                                       ; preds = %if.end.90
  %43 = load i32, i32* %i, align 4
  %inc92 = add nsw i32 %43, 1
  store i32 %inc92, i32* %i, align 4
  br label %for.cond.80

for.end.93:                                       ; preds = %for.cond.80
  %44 = load i32, i32* %opnum.addr, align 4
  %add = add nsw i32 %44, 1
  store i32 %add, i32* %i, align 4
  br label %for.cond.94

for.cond.94:                                      ; preds = %for.inc.112, %for.end.93
  %45 = load i32, i32* %i, align 4
  %46 = load i32, i32* @reload_n_operands, align 4
  %cmp95 = icmp slt i32 %45, %46
  br i1 %cmp95, label %for.body.96, label %for.end.114

for.body.96:                                      ; preds = %for.cond.94
  %47 = load i32, i32* %i, align 4
  %idxprom97 = sext i32 %47 to i64
  %arrayidx98 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input_addr, i32 0, i64 %idxprom97
  %48 = load i64, i64* %arrayidx98, align 8
  %49 = load i32, i32* %regno.addr, align 4
  %sh_prom99 = zext i32 %49 to i64
  %shl100 = shl i64 1, %sh_prom99
  %and101 = and i64 %48, %shl100
  %tobool102 = icmp ne i64 %and101, 0
  br i1 %tobool102, label %if.then.110, label %lor.lhs.false.103

lor.lhs.false.103:                                ; preds = %for.body.96
  %50 = load i32, i32* %i, align 4
  %idxprom104 = sext i32 %50 to i64
  %arrayidx105 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_inpaddr_addr, i32 0, i64 %idxprom104
  %51 = load i64, i64* %arrayidx105, align 8
  %52 = load i32, i32* %regno.addr, align 4
  %sh_prom106 = zext i32 %52 to i64
  %shl107 = shl i64 1, %sh_prom106
  %and108 = and i64 %51, %shl107
  %tobool109 = icmp ne i64 %and108, 0
  br i1 %tobool109, label %if.then.110, label %if.end.111

if.then.110:                                      ; preds = %lor.lhs.false.103, %for.body.96
  store i32 0, i32* %retval
  br label %return

if.end.111:                                       ; preds = %lor.lhs.false.103
  br label %for.inc.112

for.inc.112:                                      ; preds = %if.end.111
  %53 = load i32, i32* %i, align 4
  %inc113 = add nsw i32 %53, 1
  store i32 %inc113, i32* %i, align 4
  br label %for.cond.94

for.end.114:                                      ; preds = %for.cond.94
  store i32 1, i32* %retval
  br label %return

sw.bb.115:                                        ; preds = %if.end
  %54 = load i32, i32* %opnum.addr, align 4
  %idxprom116 = sext i32 %54 to i64
  %arrayidx117 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input_addr, i32 0, i64 %idxprom116
  %55 = load i64, i64* %arrayidx117, align 8
  %56 = load i32, i32* %regno.addr, align 4
  %sh_prom118 = zext i32 %56 to i64
  %shl119 = shl i64 1, %sh_prom118
  %and120 = and i64 %55, %shl119
  %tobool121 = icmp ne i64 %and120, 0
  br i1 %tobool121, label %if.then.129, label %lor.lhs.false.122

lor.lhs.false.122:                                ; preds = %sw.bb.115
  %57 = load i32, i32* %opnum.addr, align 4
  %idxprom123 = sext i32 %57 to i64
  %arrayidx124 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_inpaddr_addr, i32 0, i64 %idxprom123
  %58 = load i64, i64* %arrayidx124, align 8
  %59 = load i32, i32* %regno.addr, align 4
  %sh_prom125 = zext i32 %59 to i64
  %shl126 = shl i64 1, %sh_prom125
  %and127 = and i64 %58, %shl126
  %tobool128 = icmp ne i64 %and127, 0
  br i1 %tobool128, label %if.then.129, label %if.end.130

if.then.129:                                      ; preds = %lor.lhs.false.122, %sw.bb.115
  store i32 0, i32* %retval
  br label %return

if.end.130:                                       ; preds = %lor.lhs.false.122
  store i32 0, i32* %i, align 4
  br label %for.cond.131

for.cond.131:                                     ; preds = %for.inc.142, %if.end.130
  %60 = load i32, i32* %i, align 4
  %61 = load i32, i32* %opnum.addr, align 4
  %cmp132 = icmp slt i32 %60, %61
  br i1 %cmp132, label %for.body.133, label %for.end.144

for.body.133:                                     ; preds = %for.cond.131
  %62 = load i32, i32* %i, align 4
  %idxprom134 = sext i32 %62 to i64
  %arrayidx135 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i32 0, i64 %idxprom134
  %63 = load i64, i64* %arrayidx135, align 8
  %64 = load i32, i32* %regno.addr, align 4
  %sh_prom136 = zext i32 %64 to i64
  %shl137 = shl i64 1, %sh_prom136
  %and138 = and i64 %63, %shl137
  %tobool139 = icmp ne i64 %and138, 0
  br i1 %tobool139, label %if.then.140, label %if.end.141

if.then.140:                                      ; preds = %for.body.133
  store i32 0, i32* %retval
  br label %return

if.end.141:                                       ; preds = %for.body.133
  br label %for.inc.142

for.inc.142:                                      ; preds = %if.end.141
  %65 = load i32, i32* %i, align 4
  %inc143 = add nsw i32 %65, 1
  store i32 %inc143, i32* %i, align 4
  br label %for.cond.131

for.end.144:                                      ; preds = %for.cond.131
  store i32 1, i32* %retval
  br label %return

sw.bb.145:                                        ; preds = %if.end
  %66 = load i32, i32* %opnum.addr, align 4
  %idxprom146 = sext i32 %66 to i64
  %arrayidx147 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_inpaddr_addr, i32 0, i64 %idxprom146
  %67 = load i64, i64* %arrayidx147, align 8
  %68 = load i32, i32* %regno.addr, align 4
  %sh_prom148 = zext i32 %68 to i64
  %shl149 = shl i64 1, %sh_prom148
  %and150 = and i64 %67, %shl149
  %tobool151 = icmp ne i64 %and150, 0
  br i1 %tobool151, label %if.then.152, label %if.end.153

if.then.152:                                      ; preds = %sw.bb.145
  store i32 0, i32* %retval
  br label %return

if.end.153:                                       ; preds = %sw.bb.145
  store i32 0, i32* %i, align 4
  br label %for.cond.154

for.cond.154:                                     ; preds = %for.inc.165, %if.end.153
  %69 = load i32, i32* %i, align 4
  %70 = load i32, i32* %opnum.addr, align 4
  %cmp155 = icmp slt i32 %69, %70
  br i1 %cmp155, label %for.body.156, label %for.end.167

for.body.156:                                     ; preds = %for.cond.154
  %71 = load i32, i32* %i, align 4
  %idxprom157 = sext i32 %71 to i64
  %arrayidx158 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i32 0, i64 %idxprom157
  %72 = load i64, i64* %arrayidx158, align 8
  %73 = load i32, i32* %regno.addr, align 4
  %sh_prom159 = zext i32 %73 to i64
  %shl160 = shl i64 1, %sh_prom159
  %and161 = and i64 %72, %shl160
  %tobool162 = icmp ne i64 %and161, 0
  br i1 %tobool162, label %if.then.163, label %if.end.164

if.then.163:                                      ; preds = %for.body.156
  store i32 0, i32* %retval
  br label %return

if.end.164:                                       ; preds = %for.body.156
  br label %for.inc.165

for.inc.165:                                      ; preds = %if.end.164
  %74 = load i32, i32* %i, align 4
  %inc166 = add nsw i32 %74, 1
  store i32 %inc166, i32* %i, align 4
  br label %for.cond.154

for.end.167:                                      ; preds = %for.cond.154
  store i32 1, i32* %retval
  br label %return

sw.bb.168:                                        ; preds = %if.end
  %75 = load i32, i32* %opnum.addr, align 4
  %idxprom169 = sext i32 %75 to i64
  %arrayidx170 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output_addr, i32 0, i64 %idxprom169
  %76 = load i64, i64* %arrayidx170, align 8
  %77 = load i32, i32* %regno.addr, align 4
  %sh_prom171 = zext i32 %77 to i64
  %shl172 = shl i64 1, %sh_prom171
  %and173 = and i64 %76, %shl172
  %tobool174 = icmp ne i64 %and173, 0
  br i1 %tobool174, label %if.then.175, label %if.end.176

if.then.175:                                      ; preds = %sw.bb.168
  store i32 0, i32* %retval
  br label %return

if.end.176:                                       ; preds = %sw.bb.168
  store i32 0, i32* %i, align 4
  br label %for.cond.177

for.cond.177:                                     ; preds = %for.inc.188, %if.end.176
  %78 = load i32, i32* %i, align 4
  %79 = load i32, i32* %opnum.addr, align 4
  %cmp178 = icmp sle i32 %78, %79
  br i1 %cmp178, label %for.body.179, label %for.end.190

for.body.179:                                     ; preds = %for.cond.177
  %80 = load i32, i32* %i, align 4
  %idxprom180 = sext i32 %80 to i64
  %arrayidx181 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i32 0, i64 %idxprom180
  %81 = load i64, i64* %arrayidx181, align 8
  %82 = load i32, i32* %regno.addr, align 4
  %sh_prom182 = zext i32 %82 to i64
  %shl183 = shl i64 1, %sh_prom182
  %and184 = and i64 %81, %shl183
  %tobool185 = icmp ne i64 %and184, 0
  br i1 %tobool185, label %if.then.186, label %if.end.187

if.then.186:                                      ; preds = %for.body.179
  store i32 0, i32* %retval
  br label %return

if.end.187:                                       ; preds = %for.body.179
  br label %for.inc.188

for.inc.188:                                      ; preds = %if.end.187
  %83 = load i32, i32* %i, align 4
  %inc189 = add nsw i32 %83, 1
  store i32 %inc189, i32* %i, align 4
  br label %for.cond.177

for.end.190:                                      ; preds = %for.cond.177
  store i32 1, i32* %retval
  br label %return

sw.bb.191:                                        ; preds = %if.end
  %84 = load i32, i32* %opnum.addr, align 4
  %idxprom192 = sext i32 %84 to i64
  %arrayidx193 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_outaddr_addr, i32 0, i64 %idxprom192
  %85 = load i64, i64* %arrayidx193, align 8
  %86 = load i32, i32* %regno.addr, align 4
  %sh_prom194 = zext i32 %86 to i64
  %shl195 = shl i64 1, %sh_prom194
  %and196 = and i64 %85, %shl195
  %tobool197 = icmp ne i64 %and196, 0
  br i1 %tobool197, label %if.then.198, label %if.end.199

if.then.198:                                      ; preds = %sw.bb.191
  store i32 0, i32* %retval
  br label %return

if.end.199:                                       ; preds = %sw.bb.191
  store i32 0, i32* %i, align 4
  br label %for.cond.200

for.cond.200:                                     ; preds = %for.inc.211, %if.end.199
  %87 = load i32, i32* %i, align 4
  %88 = load i32, i32* %opnum.addr, align 4
  %cmp201 = icmp sle i32 %87, %88
  br i1 %cmp201, label %for.body.202, label %for.end.213

for.body.202:                                     ; preds = %for.cond.200
  %89 = load i32, i32* %i, align 4
  %idxprom203 = sext i32 %89 to i64
  %arrayidx204 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i32 0, i64 %idxprom203
  %90 = load i64, i64* %arrayidx204, align 8
  %91 = load i32, i32* %regno.addr, align 4
  %sh_prom205 = zext i32 %91 to i64
  %shl206 = shl i64 1, %sh_prom205
  %and207 = and i64 %90, %shl206
  %tobool208 = icmp ne i64 %and207, 0
  br i1 %tobool208, label %if.then.209, label %if.end.210

if.then.209:                                      ; preds = %for.body.202
  store i32 0, i32* %retval
  br label %return

if.end.210:                                       ; preds = %for.body.202
  br label %for.inc.211

for.inc.211:                                      ; preds = %if.end.210
  %92 = load i32, i32* %i, align 4
  %inc212 = add nsw i32 %92, 1
  store i32 %inc212, i32* %i, align 4
  br label %for.cond.200

for.end.213:                                      ; preds = %for.cond.200
  store i32 1, i32* %retval
  br label %return

sw.bb.214:                                        ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond.215

for.cond.215:                                     ; preds = %for.inc.226, %sw.bb.214
  %93 = load i32, i32* %i, align 4
  %94 = load i32, i32* @reload_n_operands, align 4
  %cmp216 = icmp slt i32 %93, %94
  br i1 %cmp216, label %for.body.217, label %for.end.228

for.body.217:                                     ; preds = %for.cond.215
  %95 = load i32, i32* %i, align 4
  %idxprom218 = sext i32 %95 to i64
  %arrayidx219 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i32 0, i64 %idxprom218
  %96 = load i64, i64* %arrayidx219, align 8
  %97 = load i32, i32* %regno.addr, align 4
  %sh_prom220 = zext i32 %97 to i64
  %shl221 = shl i64 1, %sh_prom220
  %and222 = and i64 %96, %shl221
  %tobool223 = icmp ne i64 %and222, 0
  br i1 %tobool223, label %if.then.224, label %if.end.225

if.then.224:                                      ; preds = %for.body.217
  store i32 0, i32* %retval
  br label %return

if.end.225:                                       ; preds = %for.body.217
  br label %for.inc.226

for.inc.226:                                      ; preds = %if.end.225
  %98 = load i32, i32* %i, align 4
  %inc227 = add nsw i32 %98, 1
  store i32 %inc227, i32* %i, align 4
  br label %for.cond.215

for.end.228:                                      ; preds = %for.cond.215
  %99 = load i64, i64* @reload_reg_used_in_insn, align 8
  %100 = load i32, i32* %regno.addr, align 4
  %sh_prom229 = zext i32 %100 to i64
  %shl230 = shl i64 1, %sh_prom229
  %and231 = and i64 %99, %shl230
  %tobool232 = icmp ne i64 %and231, 0
  br i1 %tobool232, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %for.end.228
  %101 = load i64, i64* @reload_reg_used_in_op_addr, align 8
  %102 = load i32, i32* %regno.addr, align 4
  %sh_prom233 = zext i32 %102 to i64
  %shl234 = shl i64 1, %sh_prom233
  %and235 = and i64 %101, %shl234
  %tobool236 = icmp ne i64 %and235, 0
  %lnot = xor i1 %tobool236, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.end.228
  %103 = phi i1 [ false, %for.end.228 ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %103 to i32
  store i32 %land.ext, i32* %retval
  br label %return

sw.bb.237:                                        ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond.238

for.cond.238:                                     ; preds = %for.inc.249, %sw.bb.237
  %104 = load i32, i32* %i, align 4
  %105 = load i32, i32* @reload_n_operands, align 4
  %cmp239 = icmp slt i32 %104, %105
  br i1 %cmp239, label %for.body.240, label %for.end.251

for.body.240:                                     ; preds = %for.cond.238
  %106 = load i32, i32* %i, align 4
  %idxprom241 = sext i32 %106 to i64
  %arrayidx242 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i32 0, i64 %idxprom241
  %107 = load i64, i64* %arrayidx242, align 8
  %108 = load i32, i32* %regno.addr, align 4
  %sh_prom243 = zext i32 %108 to i64
  %shl244 = shl i64 1, %sh_prom243
  %and245 = and i64 %107, %shl244
  %tobool246 = icmp ne i64 %and245, 0
  br i1 %tobool246, label %if.then.247, label %if.end.248

if.then.247:                                      ; preds = %for.body.240
  store i32 0, i32* %retval
  br label %return

if.end.248:                                       ; preds = %for.body.240
  br label %for.inc.249

for.inc.249:                                      ; preds = %if.end.248
  %109 = load i32, i32* %i, align 4
  %inc250 = add nsw i32 %109, 1
  store i32 %inc250, i32* %i, align 4
  br label %for.cond.238

for.end.251:                                      ; preds = %for.cond.238
  %110 = load i64, i64* @reload_reg_used_in_op_addr_reload, align 8
  %111 = load i32, i32* %regno.addr, align 4
  %sh_prom252 = zext i32 %111 to i64
  %shl253 = shl i64 1, %sh_prom252
  %and254 = and i64 %110, %shl253
  %tobool255 = icmp ne i64 %and254, 0
  %lnot256 = xor i1 %tobool255, true
  %lnot.ext = zext i1 %lnot256 to i32
  store i32 %lnot.ext, i32* %retval
  br label %return

sw.bb.257:                                        ; preds = %if.end
  %112 = load i64, i64* @reload_reg_used_in_insn, align 8
  %113 = load i32, i32* %regno.addr, align 4
  %sh_prom258 = zext i32 %113 to i64
  %shl259 = shl i64 1, %sh_prom258
  %and260 = and i64 %112, %shl259
  %tobool261 = icmp ne i64 %and260, 0
  br i1 %tobool261, label %if.then.262, label %if.end.263

if.then.262:                                      ; preds = %sw.bb.257
  store i32 0, i32* %retval
  br label %return

if.end.263:                                       ; preds = %sw.bb.257
  store i32 0, i32* %i, align 4
  br label %for.cond.264

for.cond.264:                                     ; preds = %for.inc.275, %if.end.263
  %114 = load i32, i32* %i, align 4
  %115 = load i32, i32* @reload_n_operands, align 4
  %cmp265 = icmp slt i32 %114, %115
  br i1 %cmp265, label %for.body.266, label %for.end.277

for.body.266:                                     ; preds = %for.cond.264
  %116 = load i32, i32* %i, align 4
  %idxprom267 = sext i32 %116 to i64
  %arrayidx268 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i32 0, i64 %idxprom267
  %117 = load i64, i64* %arrayidx268, align 8
  %118 = load i32, i32* %regno.addr, align 4
  %sh_prom269 = zext i32 %118 to i64
  %shl270 = shl i64 1, %sh_prom269
  %and271 = and i64 %117, %shl270
  %tobool272 = icmp ne i64 %and271, 0
  br i1 %tobool272, label %if.then.273, label %if.end.274

if.then.273:                                      ; preds = %for.body.266
  store i32 0, i32* %retval
  br label %return

if.end.274:                                       ; preds = %for.body.266
  br label %for.inc.275

for.inc.275:                                      ; preds = %if.end.274
  %119 = load i32, i32* %i, align 4
  %inc276 = add nsw i32 %119, 1
  store i32 %inc276, i32* %i, align 4
  br label %for.cond.264

for.end.277:                                      ; preds = %for.cond.264
  %120 = load i32, i32* %opnum.addr, align 4
  store i32 %120, i32* %i, align 4
  br label %for.cond.278

for.cond.278:                                     ; preds = %for.inc.296, %for.end.277
  %121 = load i32, i32* %i, align 4
  %122 = load i32, i32* @reload_n_operands, align 4
  %cmp279 = icmp slt i32 %121, %122
  br i1 %cmp279, label %for.body.280, label %for.end.298

for.body.280:                                     ; preds = %for.cond.278
  %123 = load i32, i32* %i, align 4
  %idxprom281 = sext i32 %123 to i64
  %arrayidx282 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output_addr, i32 0, i64 %idxprom281
  %124 = load i64, i64* %arrayidx282, align 8
  %125 = load i32, i32* %regno.addr, align 4
  %sh_prom283 = zext i32 %125 to i64
  %shl284 = shl i64 1, %sh_prom283
  %and285 = and i64 %124, %shl284
  %tobool286 = icmp ne i64 %and285, 0
  br i1 %tobool286, label %if.then.294, label %lor.lhs.false.287

lor.lhs.false.287:                                ; preds = %for.body.280
  %126 = load i32, i32* %i, align 4
  %idxprom288 = sext i32 %126 to i64
  %arrayidx289 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_outaddr_addr, i32 0, i64 %idxprom288
  %127 = load i64, i64* %arrayidx289, align 8
  %128 = load i32, i32* %regno.addr, align 4
  %sh_prom290 = zext i32 %128 to i64
  %shl291 = shl i64 1, %sh_prom290
  %and292 = and i64 %127, %shl291
  %tobool293 = icmp ne i64 %and292, 0
  br i1 %tobool293, label %if.then.294, label %if.end.295

if.then.294:                                      ; preds = %lor.lhs.false.287, %for.body.280
  store i32 0, i32* %retval
  br label %return

if.end.295:                                       ; preds = %lor.lhs.false.287
  br label %for.inc.296

for.inc.296:                                      ; preds = %if.end.295
  %129 = load i32, i32* %i, align 4
  %inc297 = add nsw i32 %129, 1
  store i32 %inc297, i32* %i, align 4
  br label %for.cond.278

for.end.298:                                      ; preds = %for.cond.278
  store i32 1, i32* %retval
  br label %return

sw.bb.299:                                        ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond.300

for.cond.300:                                     ; preds = %for.inc.318, %sw.bb.299
  %130 = load i32, i32* %i, align 4
  %131 = load i32, i32* @reload_n_operands, align 4
  %cmp301 = icmp slt i32 %130, %131
  br i1 %cmp301, label %for.body.302, label %for.end.320

for.body.302:                                     ; preds = %for.cond.300
  %132 = load i32, i32* %i, align 4
  %idxprom303 = sext i32 %132 to i64
  %arrayidx304 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i32 0, i64 %idxprom303
  %133 = load i64, i64* %arrayidx304, align 8
  %134 = load i32, i32* %regno.addr, align 4
  %sh_prom305 = zext i32 %134 to i64
  %shl306 = shl i64 1, %sh_prom305
  %and307 = and i64 %133, %shl306
  %tobool308 = icmp ne i64 %and307, 0
  br i1 %tobool308, label %if.then.316, label %lor.lhs.false.309

lor.lhs.false.309:                                ; preds = %for.body.302
  %135 = load i32, i32* %i, align 4
  %idxprom310 = sext i32 %135 to i64
  %arrayidx311 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i32 0, i64 %idxprom310
  %136 = load i64, i64* %arrayidx311, align 8
  %137 = load i32, i32* %regno.addr, align 4
  %sh_prom312 = zext i32 %137 to i64
  %shl313 = shl i64 1, %sh_prom312
  %and314 = and i64 %136, %shl313
  %tobool315 = icmp ne i64 %and314, 0
  br i1 %tobool315, label %if.then.316, label %if.end.317

if.then.316:                                      ; preds = %lor.lhs.false.309, %for.body.302
  store i32 0, i32* %retval
  br label %return

if.end.317:                                       ; preds = %lor.lhs.false.309
  br label %for.inc.318

for.inc.318:                                      ; preds = %if.end.317
  %138 = load i32, i32* %i, align 4
  %inc319 = add nsw i32 %138, 1
  store i32 %inc319, i32* %i, align 4
  br label %for.cond.300

for.end.320:                                      ; preds = %for.cond.300
  %139 = load i64, i64* @reload_reg_used_in_insn, align 8
  %140 = load i32, i32* %regno.addr, align 4
  %sh_prom321 = zext i32 %140 to i64
  %shl322 = shl i64 1, %sh_prom321
  %and323 = and i64 %139, %shl322
  %tobool324 = icmp ne i64 %and323, 0
  br i1 %tobool324, label %land.end.332, label %land.rhs.325

land.rhs.325:                                     ; preds = %for.end.320
  %141 = load i64, i64* @reload_reg_used_in_op_addr, align 8
  %142 = load i32, i32* %regno.addr, align 4
  %sh_prom326 = zext i32 %142 to i64
  %shl327 = shl i64 1, %sh_prom326
  %and328 = and i64 %141, %shl327
  %tobool329 = icmp ne i64 %and328, 0
  %lnot330 = xor i1 %tobool329, true
  br label %land.end.332

land.end.332:                                     ; preds = %land.rhs.325, %for.end.320
  %143 = phi i1 [ false, %for.end.320 ], [ %lnot330, %land.rhs.325 ]
  %land.ext333 = zext i1 %143 to i32
  store i32 %land.ext333, i32* %retval
  br label %return

sw.bb.334:                                        ; preds = %if.end
  %144 = load i64, i64* @reload_reg_used_in_other_addr, align 8
  %145 = load i32, i32* %regno.addr, align 4
  %sh_prom335 = zext i32 %145 to i64
  %shl336 = shl i64 1, %sh_prom335
  %and337 = and i64 %144, %shl336
  %tobool338 = icmp ne i64 %and337, 0
  %lnot339 = xor i1 %tobool338, true
  %lnot.ext340 = zext i1 %lnot339 to i32
  store i32 %lnot.ext340, i32* %retval
  br label %return

sw.epilog:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 4527, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.reload_reg_free_p, i32 0, i32 0)) #5
  unreachable

return:                                           ; preds = %sw.bb.334, %land.end.332, %if.then.316, %for.end.298, %if.then.294, %if.then.273, %if.then.262, %for.end.251, %if.then.247, %land.end, %if.then.224, %for.end.213, %if.then.209, %if.then.198, %for.end.190, %if.then.186, %if.then.175, %for.end.167, %if.then.163, %if.then.152, %for.end.144, %if.then.140, %if.then.129, %for.end.114, %if.then.110, %if.then.89, %if.then.78, %if.then.72, %for.end, %if.then.60, %if.then.19, %if.then
  %146 = load i32, i32* %retval
  ret i32 %146
}

declare i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare void @transfer_replacements(i32, i32) #1

declare void @debug_reload_to_stream(%struct._IO_FILE*) #1

; Function Attrs: nounwind uwtable
define internal void @do_input_reload(%struct.insn_chain* %chain, %struct.reload* %rl, i32 %j) #0 {
entry:
  %chain.addr = alloca %struct.insn_chain*, align 8
  %rl.addr = alloca %struct.reload*, align 8
  %j.addr = alloca i32, align 4
  %expect_occurrences = alloca i32, align 4
  %insn = alloca %struct.rtx_def*, align 8
  %old = alloca %struct.rtx_def*, align 8
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  store %struct.reload* %rl, %struct.reload** %rl.addr, align 8
  store i32 %j, i32* %j.addr, align 4
  store i32 1, i32* %expect_occurrences, align 4
  %0 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %insn1 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %0, i32 0, i32 4
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn1, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %insn, align 8
  %2 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %in = getelementptr inbounds %struct.reload, %struct.reload* %2, i32 0, i32 0
  %3 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %tobool = icmp ne %struct.rtx_def* %3, null
  br i1 %tobool, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %in2 = getelementptr inbounds %struct.reload, %struct.reload* %4, i32 0, i32 0
  %5 = load %struct.rtx_def*, %struct.rtx_def** %in2, align 8
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load = load i32, i32* %6, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %7 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %in_reg = getelementptr inbounds %struct.reload, %struct.reload* %7, i32 0, i32 8
  %8 = load %struct.rtx_def*, %struct.rtx_def** %in_reg, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %entry
  %9 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %in3 = getelementptr inbounds %struct.reload, %struct.reload* %9, i32 0, i32 0
  %10 = load %struct.rtx_def*, %struct.rtx_def** %in3, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %8, %cond.true ], [ %10, %cond.false ]
  store %struct.rtx_def* %cond, %struct.rtx_def** %old, align 8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %cmp4 = icmp ne %struct.rtx_def* %11, null
  br i1 %cmp4, label %land.lhs.true.5, label %if.end

land.lhs.true.5:                                  ; preds = %cond.end
  %12 = load i32, i32* %j.addr, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i32 0, i64 %idxprom
  %13 = load i8, i8* %arrayidx, align 1
  %tobool6 = icmp ne i8 %13, 0
  br i1 %tobool6, label %lor.lhs.false, label %land.lhs.true.10

lor.lhs.false:                                    ; preds = %land.lhs.true.5
  %14 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %out = getelementptr inbounds %struct.reload, %struct.reload* %14, i32 0, i32 1
  %15 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %tobool7 = icmp ne %struct.rtx_def* %15, null
  br i1 %tobool7, label %land.lhs.true.8, label %if.end

land.lhs.true.8:                                  ; preds = %lor.lhs.false
  %16 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %out_reg = getelementptr inbounds %struct.reload, %struct.reload* %16, i32 0, i32 9
  %17 = load %struct.rtx_def*, %struct.rtx_def** %out_reg, align 8
  %tobool9 = icmp ne %struct.rtx_def* %17, null
  br i1 %tobool9, label %if.end, label %land.lhs.true.10

land.lhs.true.10:                                 ; preds = %land.lhs.true.8, %land.lhs.true.5
  %18 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %18, i32 0, i32 11
  %19 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8
  %20 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %call = call i32 @rtx_equal_p(%struct.rtx_def* %19, %struct.rtx_def* %20)
  %tobool11 = icmp ne i32 %call, 0
  br i1 %tobool11, label %if.end, label %land.lhs.true.12

land.lhs.true.12:                                 ; preds = %land.lhs.true.10
  %21 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %reg_rtx13 = getelementptr inbounds %struct.reload, %struct.reload* %21, i32 0, i32 11
  %22 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx13, align 8
  %cmp14 = icmp ne %struct.rtx_def* %22, null
  br i1 %cmp14, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.12
  %23 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %24 = load i32, i32* %j.addr, align 4
  %idx.ext = sext i32 %24 to i64
  %add.ptr = getelementptr inbounds %struct.reload, %struct.reload* getelementptr inbounds ([180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i32 0), i64 %idx.ext
  %25 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %26 = load i32, i32* %j.addr, align 4
  call void @emit_input_reload_insns(%struct.insn_chain* %23, %struct.reload* %add.ptr, %struct.rtx_def* %25, i32 %26)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.12, %land.lhs.true.10, %land.lhs.true.8, %lor.lhs.false, %cond.end
  %27 = load i32, i32* @optimize, align 4
  %tobool15 = icmp ne i32 %27, 0
  br i1 %tobool15, label %land.lhs.true.16, label %if.end.58

land.lhs.true.16:                                 ; preds = %if.end
  %28 = load i32, i32* %j.addr, align 4
  %idxprom17 = sext i32 %28 to i64
  %arrayidx18 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i32 0, i64 %idxprom17
  %29 = load i8, i8* %arrayidx18, align 1
  %conv = sext i8 %29 to i32
  %tobool19 = icmp ne i32 %conv, 0
  br i1 %tobool19, label %land.lhs.true.20, label %if.end.58

land.lhs.true.20:                                 ; preds = %land.lhs.true.16
  %30 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %in21 = getelementptr inbounds %struct.reload, %struct.reload* %30, i32 0, i32 0
  %31 = load %struct.rtx_def*, %struct.rtx_def** %in21, align 8
  %tobool22 = icmp ne %struct.rtx_def* %31, null
  br i1 %tobool22, label %land.lhs.true.23, label %if.end.58

land.lhs.true.23:                                 ; preds = %land.lhs.true.20
  %32 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %in24 = getelementptr inbounds %struct.reload, %struct.reload* %32, i32 0, i32 0
  %33 = load %struct.rtx_def*, %struct.rtx_def** %in24, align 8
  %34 = bitcast %struct.rtx_def* %33 to i32*
  %bf.load25 = load i32, i32* %34, align 8
  %bf.clear26 = and i32 %bf.load25, 65535
  %cmp27 = icmp eq i32 %bf.clear26, 66
  br i1 %cmp27, label %land.lhs.true.29, label %if.end.58

land.lhs.true.29:                                 ; preds = %land.lhs.true.23
  %35 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %in_reg30 = getelementptr inbounds %struct.reload, %struct.reload* %35, i32 0, i32 8
  %36 = load %struct.rtx_def*, %struct.rtx_def** %in_reg30, align 8
  %37 = bitcast %struct.rtx_def* %36 to i32*
  %bf.load31 = load i32, i32* %37, align 8
  %bf.clear32 = and i32 %bf.load31, 65535
  %cmp33 = icmp eq i32 %bf.clear32, 66
  br i1 %cmp33, label %land.lhs.true.35, label %if.end.58

land.lhs.true.35:                                 ; preds = %land.lhs.true.29
  %38 = load i32, i32* %j.addr, align 4
  %idxprom36 = sext i32 %38 to i64
  %arrayidx37 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i32 0, i64 %idxprom36
  %39 = load i32, i32* %arrayidx37, align 4
  %cmp38 = icmp sge i32 %39, 0
  br i1 %cmp38, label %land.lhs.true.40, label %if.end.58

land.lhs.true.40:                                 ; preds = %land.lhs.true.35
  %40 = load i64, i64* @reg_reloaded_valid, align 8
  %41 = load i32, i32* %j.addr, align 4
  %idxprom41 = sext i32 %41 to i64
  %arrayidx42 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i32 0, i64 %idxprom41
  %42 = load i32, i32* %arrayidx42, align 4
  %sh_prom = zext i32 %42 to i64
  %shl = shl i64 1, %sh_prom
  %and = and i64 %40, %shl
  %tobool43 = icmp ne i64 %and, 0
  br i1 %tobool43, label %if.then.44, label %if.end.58

if.then.44:                                       ; preds = %land.lhs.true.40
  %43 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %45 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %in46 = getelementptr inbounds %struct.reload, %struct.reload* %45, i32 0, i32 0
  %46 = load %struct.rtx_def*, %struct.rtx_def** %in46, align 8
  %call47 = call i32 @count_occurrences(%struct.rtx_def* %44, %struct.rtx_def* %46, i32 0)
  %cmp48 = icmp eq i32 %call47, 1
  %cond50 = select i1 %cmp48, i32 0, i32 -1
  store i32 %cond50, i32* %expect_occurrences, align 4
  %47 = load i32, i32* %j.addr, align 4
  %idxprom51 = sext i32 %47 to i64
  %arrayidx52 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i32 0, i64 %idxprom51
  %48 = load i32, i32* %arrayidx52, align 4
  %idxprom53 = sext i32 %48 to i64
  %arrayidx54 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_reloaded_contents, i32 0, i64 %idxprom53
  %49 = load i32, i32* %arrayidx54, align 4
  %idxprom55 = sext i32 %49 to i64
  %50 = load %struct.function*, %struct.function** @cfun, align 8
  %emit = getelementptr inbounds %struct.function, %struct.function* %50, i32 0, i32 3
  %51 = load %struct.emit_status*, %struct.emit_status** %emit, align 8
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status, %struct.emit_status* %51, i32 0, i32 12
  %52 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx, align 8
  %arrayidx56 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %52, i64 %idxprom55
  %53 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx56, align 8
  %54 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %in57 = getelementptr inbounds %struct.reload, %struct.reload* %54, i32 0, i32 0
  store %struct.rtx_def* %53, %struct.rtx_def** %in57, align 8
  br label %if.end.58

if.end.58:                                        ; preds = %if.then.44, %land.lhs.true.40, %land.lhs.true.35, %land.lhs.true.29, %land.lhs.true.23, %land.lhs.true.20, %land.lhs.true.16, %if.end
  %55 = load i32, i32* @optimize, align 4
  %tobool59 = icmp ne i32 %55, 0
  br i1 %tobool59, label %land.lhs.true.60, label %if.end.110

land.lhs.true.60:                                 ; preds = %if.end.58
  %56 = load i32, i32* %j.addr, align 4
  %idxprom61 = sext i32 %56 to i64
  %arrayidx62 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i32 0, i64 %idxprom61
  %57 = load i8, i8* %arrayidx62, align 1
  %conv63 = sext i8 %57 to i32
  %tobool64 = icmp ne i32 %conv63, 0
  br i1 %tobool64, label %land.lhs.true.69, label %lor.lhs.false.65

lor.lhs.false.65:                                 ; preds = %land.lhs.true.60
  %58 = load i32, i32* %j.addr, align 4
  %idxprom66 = sext i32 %58 to i64
  %arrayidx67 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i32 0, i64 %idxprom66
  %59 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx67, align 8
  %tobool68 = icmp ne %struct.rtx_def* %59, null
  br i1 %tobool68, label %land.lhs.true.69, label %if.end.110

land.lhs.true.69:                                 ; preds = %lor.lhs.false.65, %land.lhs.true.60
  %60 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %reg_rtx70 = getelementptr inbounds %struct.reload, %struct.reload* %60, i32 0, i32 11
  %61 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx70, align 8
  %tobool71 = icmp ne %struct.rtx_def* %61, null
  br i1 %tobool71, label %land.lhs.true.72, label %if.end.110

land.lhs.true.72:                                 ; preds = %land.lhs.true.69
  %62 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %reg_rtx73 = getelementptr inbounds %struct.reload, %struct.reload* %62, i32 0, i32 11
  %63 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx73, align 8
  %64 = bitcast %struct.rtx_def* %63 to i32*
  %bf.load74 = load i32, i32* %64, align 8
  %bf.clear75 = and i32 %bf.load74, 65535
  %cmp76 = icmp eq i32 %bf.clear75, 61
  br i1 %cmp76, label %land.lhs.true.78, label %if.end.110

land.lhs.true.78:                                 ; preds = %land.lhs.true.72
  %65 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %reg_rtx79 = getelementptr inbounds %struct.reload, %struct.reload* %65, i32 0, i32 11
  %66 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx79, align 8
  %fld80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1
  %arrayidx81 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld80, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx81 to i32*
  %67 = load i32, i32* %rtuint, align 4
  %idxprom82 = zext i32 %67 to i64
  %arrayidx83 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i32 0, i64 %idxprom82
  %68 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx83, align 8
  %cmp84 = icmp ne %struct.rtx_def* %68, null
  br i1 %cmp84, label %land.lhs.true.86, label %if.end.110

land.lhs.true.86:                                 ; preds = %land.lhs.true.78
  %69 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %70 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %reg_rtx87 = getelementptr inbounds %struct.reload, %struct.reload* %70, i32 0, i32 11
  %71 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx87, align 8
  %fld88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1
  %arrayidx89 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld88, i32 0, i64 0
  %rtuint90 = bitcast %union.rtunion_def* %arrayidx89 to i32*
  %72 = load i32, i32* %rtuint90, align 4
  %idxprom91 = zext i32 %72 to i64
  %arrayidx92 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i32 0, i64 %idxprom91
  %73 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx92, align 8
  %call93 = call i32 @dead_or_set_p(%struct.rtx_def* %69, %struct.rtx_def* %73)
  %tobool94 = icmp ne i32 %call93, 0
  br i1 %tobool94, label %if.then.105, label %lor.lhs.false.95

lor.lhs.false.95:                                 ; preds = %land.lhs.true.86
  %74 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %reg_rtx96 = getelementptr inbounds %struct.reload, %struct.reload* %74, i32 0, i32 11
  %75 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx96, align 8
  %fld97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld97, i32 0, i64 0
  %rtuint99 = bitcast %union.rtunion_def* %arrayidx98 to i32*
  %76 = load i32, i32* %rtuint99, align 4
  %idxprom100 = zext i32 %76 to i64
  %arrayidx101 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i32 0, i64 %idxprom100
  %77 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx101, align 8
  %78 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %out_reg102 = getelementptr inbounds %struct.reload, %struct.reload* %78, i32 0, i32 9
  %79 = load %struct.rtx_def*, %struct.rtx_def** %out_reg102, align 8
  %call103 = call i32 @rtx_equal_p(%struct.rtx_def* %77, %struct.rtx_def* %79)
  %tobool104 = icmp ne i32 %call103, 0
  br i1 %tobool104, label %if.then.105, label %if.end.110

if.then.105:                                      ; preds = %lor.lhs.false.95, %land.lhs.true.86
  %80 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %81 = load i32, i32* %j.addr, align 4
  %82 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %reg_rtx106 = getelementptr inbounds %struct.reload, %struct.reload* %82, i32 0, i32 11
  %83 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx106, align 8
  %fld107 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx108 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld107, i32 0, i64 0
  %rtuint109 = bitcast %union.rtunion_def* %arrayidx108 to i32*
  %84 = load i32, i32* %rtuint109, align 4
  call void @delete_output_reload(%struct.rtx_def* %80, i32 %81, i32 %84)
  br label %if.end.110

if.end.110:                                       ; preds = %if.then.105, %lor.lhs.false.95, %land.lhs.true.78, %land.lhs.true.72, %land.lhs.true.69, %lor.lhs.false.65, %if.end.58
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_output_reload(%struct.insn_chain* %chain, %struct.reload* %rl, i32 %j) #0 {
entry:
  %chain.addr = alloca %struct.insn_chain*, align 8
  %rl.addr = alloca %struct.reload*, align 8
  %j.addr = alloca i32, align 4
  %note = alloca %struct.rtx_def*, align 8
  %old = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %pseudo = alloca %struct.rtx_def*, align 8
  %pseudo_no = alloca i32, align 4
  %last_regno = alloca i32, align 4
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  store %struct.reload* %rl, %struct.reload** %rl.addr, align 8
  store i32 %j, i32* %j.addr, align 4
  %0 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %insn1 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %0, i32 0, i32 4
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn1, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %insn, align 8
  %2 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %out_reg = getelementptr inbounds %struct.reload, %struct.reload* %2, i32 0, i32 9
  %3 = load %struct.rtx_def*, %struct.rtx_def** %out_reg, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %pseudo, align 8
  %4 = load %struct.rtx_def*, %struct.rtx_def** %pseudo, align 8
  %tobool = icmp ne %struct.rtx_def* %4, null
  br i1 %tobool, label %land.lhs.true, label %if.end.37

land.lhs.true:                                    ; preds = %entry
  %5 = load i32, i32* @optimize, align 4
  %tobool2 = icmp ne i32 %5, 0
  br i1 %tobool2, label %land.lhs.true.3, label %if.end.37

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %6 = load %struct.rtx_def*, %struct.rtx_def** %pseudo, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load = load i32, i32* %7, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %land.lhs.true.4, label %if.end.37

land.lhs.true.4:                                  ; preds = %land.lhs.true.3
  %8 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %in_reg = getelementptr inbounds %struct.reload, %struct.reload* %8, i32 0, i32 8
  %9 = load %struct.rtx_def*, %struct.rtx_def** %in_reg, align 8
  %10 = load %struct.rtx_def*, %struct.rtx_def** %pseudo, align 8
  %call = call i32 @rtx_equal_p(%struct.rtx_def* %9, %struct.rtx_def* %10)
  %tobool5 = icmp ne i32 %call, 0
  br i1 %tobool5, label %if.end.37, label %land.lhs.true.6

land.lhs.true.6:                                  ; preds = %land.lhs.true.4
  %11 = load %struct.rtx_def*, %struct.rtx_def** %pseudo, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %12 = load i32, i32* %rtuint, align 4
  %cmp7 = icmp uge i32 %12, 53
  br i1 %cmp7, label %land.lhs.true.8, label %if.end.37

land.lhs.true.8:                                  ; preds = %land.lhs.true.6
  %13 = load %struct.rtx_def*, %struct.rtx_def** %pseudo, align 8
  %fld9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld9, i32 0, i64 0
  %rtuint11 = bitcast %union.rtunion_def* %arrayidx10 to i32*
  %14 = load i32, i32* %rtuint11, align 4
  %idxprom = zext i32 %14 to i64
  %15 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8
  %arrayidx12 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %15, i64 %idxprom
  %16 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx12, align 8
  %tobool13 = icmp ne %struct.rtx_def* %16, null
  br i1 %tobool13, label %if.then, label %if.end.37

if.then:                                          ; preds = %land.lhs.true.8
  %17 = load %struct.rtx_def*, %struct.rtx_def** %pseudo, align 8
  %fld14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i32 0, i64 0
  %rtuint16 = bitcast %union.rtunion_def* %arrayidx15 to i32*
  %18 = load i32, i32* %rtuint16, align 4
  store i32 %18, i32* %pseudo_no, align 4
  %19 = load i32, i32* %pseudo_no, align 4
  %idxprom17 = sext i32 %19 to i64
  %20 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8
  %arrayidx18 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %20, i64 %idxprom17
  %21 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx18, align 8
  %fld19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i32 0, i64 0
  %rtuint21 = bitcast %union.rtunion_def* %arrayidx20 to i32*
  %22 = load i32, i32* %rtuint21, align 4
  store i32 %22, i32* %last_regno, align 4
  %23 = load i64, i64* @reg_reloaded_valid, align 8
  %24 = load i32, i32* %last_regno, align 4
  %sh_prom = zext i32 %24 to i64
  %shl = shl i64 1, %sh_prom
  %and = and i64 %23, %shl
  %tobool22 = icmp ne i64 %and, 0
  br i1 %tobool22, label %land.lhs.true.23, label %if.end

land.lhs.true.23:                                 ; preds = %if.then
  %25 = load i32, i32* %last_regno, align 4
  %idxprom24 = sext i32 %25 to i64
  %arrayidx25 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_reloaded_contents, i32 0, i64 %idxprom24
  %26 = load i32, i32* %arrayidx25, align 4
  %27 = load i32, i32* %pseudo_no, align 4
  %cmp26 = icmp eq i32 %26, %27
  br i1 %cmp26, label %land.lhs.true.27, label %if.end

land.lhs.true.27:                                 ; preds = %land.lhs.true.23
  %28 = load i32, i32* %last_regno, align 4
  %idxprom28 = sext i32 %28 to i64
  %arrayidx29 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i32 0, i64 %idxprom28
  %29 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx29, align 8
  %tobool30 = icmp ne %struct.rtx_def* %29, null
  br i1 %tobool30, label %land.lhs.true.31, label %if.end

land.lhs.true.31:                                 ; preds = %land.lhs.true.27
  %30 = load %struct.rtx_def*, %struct.rtx_def** %pseudo, align 8
  %31 = load i32, i32* %last_regno, align 4
  %idxprom32 = sext i32 %31 to i64
  %arrayidx33 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i32 0, i64 %idxprom32
  %32 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx33, align 8
  %call34 = call i32 @rtx_equal_p(%struct.rtx_def* %30, %struct.rtx_def* %32)
  %tobool35 = icmp ne i32 %call34, 0
  br i1 %tobool35, label %if.then.36, label %if.end

if.then.36:                                       ; preds = %land.lhs.true.31
  %33 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %34 = load i32, i32* %j.addr, align 4
  %35 = load i32, i32* %last_regno, align 4
  call void @delete_output_reload(%struct.rtx_def* %33, i32 %34, i32 %35)
  br label %if.end

if.end:                                           ; preds = %if.then.36, %land.lhs.true.31, %land.lhs.true.27, %land.lhs.true.23, %if.then
  br label %if.end.37

if.end.37:                                        ; preds = %if.end, %land.lhs.true.8, %land.lhs.true.6, %land.lhs.true.4, %land.lhs.true.3, %land.lhs.true, %entry
  %36 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %out_reg38 = getelementptr inbounds %struct.reload, %struct.reload* %36, i32 0, i32 9
  %37 = load %struct.rtx_def*, %struct.rtx_def** %out_reg38, align 8
  store %struct.rtx_def* %37, %struct.rtx_def** %old, align 8
  %38 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %cmp39 = icmp eq %struct.rtx_def* %38, null
  br i1 %cmp39, label %if.then.44, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.37
  %39 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %39, i32 0, i32 11
  %40 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8
  %41 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %cmp40 = icmp eq %struct.rtx_def* %40, %41
  br i1 %cmp40, label %if.then.44, label %lor.lhs.false.41

lor.lhs.false.41:                                 ; preds = %lor.lhs.false
  %42 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %reg_rtx42 = getelementptr inbounds %struct.reload, %struct.reload* %42, i32 0, i32 11
  %43 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx42, align 8
  %cmp43 = icmp eq %struct.rtx_def* %43, null
  br i1 %cmp43, label %if.then.44, label %if.end.45

if.then.44:                                       ; preds = %lor.lhs.false.41, %lor.lhs.false, %if.end.37
  br label %return

if.end.45:                                        ; preds = %lor.lhs.false.41
  %44 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %45 = bitcast %struct.rtx_def* %44 to i32*
  %bf.load46 = load i32, i32* %45, align 8
  %bf.clear47 = and i32 %bf.load46, 65535
  %cmp48 = icmp eq i32 %bf.clear47, 61
  br i1 %cmp48, label %land.lhs.true.53, label %lor.lhs.false.49

lor.lhs.false.49:                                 ; preds = %if.end.45
  %46 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %47 = bitcast %struct.rtx_def* %46 to i32*
  %bf.load50 = load i32, i32* %47, align 8
  %bf.clear51 = and i32 %bf.load50, 65535
  %cmp52 = icmp eq i32 %bf.clear51, 62
  br i1 %cmp52, label %land.lhs.true.53, label %if.else

land.lhs.true.53:                                 ; preds = %lor.lhs.false.49, %if.end.45
  %48 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %49 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %call54 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %48, i32 10, %struct.rtx_def* %49)
  store %struct.rtx_def* %call54, %struct.rtx_def** %note, align 8
  %cmp55 = icmp ne %struct.rtx_def* %call54, null
  br i1 %cmp55, label %if.then.56, label %if.else

if.then.56:                                       ; preds = %land.lhs.true.53
  %50 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %reg_rtx57 = getelementptr inbounds %struct.reload, %struct.reload* %50, i32 0, i32 11
  %51 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx57, align 8
  %52 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**
  store %struct.rtx_def* %51, %struct.rtx_def** %rtx, align 8
  br label %return

if.else:                                          ; preds = %land.lhs.true.53, %lor.lhs.false.49
  %53 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %54 = bitcast %struct.rtx_def* %53 to i32*
  %bf.load60 = load i32, i32* %54, align 8
  %bf.clear61 = and i32 %bf.load60, 65535
  %cmp62 = icmp eq i32 %bf.clear61, 63
  br i1 %cmp62, label %land.lhs.true.63, label %if.else.84

land.lhs.true.63:                                 ; preds = %if.else
  %55 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %fld64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld64, i32 0, i64 0
  %rtx66 = bitcast %union.rtunion_def* %arrayidx65 to %struct.rtx_def**
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rtx66, align 8
  %57 = bitcast %struct.rtx_def* %56 to i32*
  %bf.load67 = load i32, i32* %57, align 8
  %bf.clear68 = and i32 %bf.load67, 65535
  %cmp69 = icmp eq i32 %bf.clear68, 61
  br i1 %cmp69, label %land.lhs.true.70, label %if.else.84

land.lhs.true.70:                                 ; preds = %land.lhs.true.63
  %58 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %59 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %fld71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i32 0, i64 0
  %rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rtx73, align 8
  %call74 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %58, i32 10, %struct.rtx_def* %60)
  store %struct.rtx_def* %call74, %struct.rtx_def** %note, align 8
  %cmp75 = icmp ne %struct.rtx_def* null, %call74
  br i1 %cmp75, label %if.then.76, label %if.else.84

if.then.76:                                       ; preds = %land.lhs.true.70
  %61 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %62 = bitcast %struct.rtx_def* %61 to i32*
  %bf.load77 = load i32, i32* %62, align 8
  %bf.lshr = lshr i32 %bf.load77, 16
  %bf.clear78 = and i32 %bf.lshr, 255
  %63 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %reg_rtx79 = getelementptr inbounds %struct.reload, %struct.reload* %63, i32 0, i32 11
  %64 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx79, align 8
  %call80 = call %struct.rtx_def* @gen_lowpart_common(i32 %bf.clear78, %struct.rtx_def* %64)
  %65 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1
  %arrayidx82 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld81, i32 0, i64 0
  %rtx83 = bitcast %union.rtunion_def* %arrayidx82 to %struct.rtx_def**
  store %struct.rtx_def* %call80, %struct.rtx_def** %rtx83, align 8
  br label %return

if.else.84:                                       ; preds = %land.lhs.true.70, %land.lhs.true.63, %if.else
  %66 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %67 = bitcast %struct.rtx_def* %66 to i32*
  %bf.load85 = load i32, i32* %67, align 8
  %bf.clear86 = and i32 %bf.load85, 65535
  %cmp87 = icmp eq i32 %bf.clear86, 62
  br i1 %cmp87, label %if.then.88, label %if.end.89

if.then.88:                                       ; preds = %if.else.84
  br label %return

if.end.89:                                        ; preds = %if.else.84
  br label %if.end.90

if.end.90:                                        ; preds = %if.end.89
  br label %if.end.91

if.end.91:                                        ; preds = %if.end.90
  %68 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %69 = bitcast %struct.rtx_def* %68 to i32*
  %bf.load92 = load i32, i32* %69, align 8
  %bf.clear93 = and i32 %bf.load92, 65535
  %cmp94 = icmp eq i32 %bf.clear93, 33
  br i1 %cmp94, label %if.then.95, label %if.end.96

if.then.95:                                       ; preds = %if.end.91
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 6967, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__FUNCTION__.do_output_reload, i32 0, i32 0)) #5
  unreachable

if.end.96:                                        ; preds = %if.end.91
  %70 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %71 = load i32, i32* %j.addr, align 4
  %idx.ext = sext i32 %71 to i64
  %add.ptr = getelementptr inbounds %struct.reload, %struct.reload* getelementptr inbounds ([180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i32 0), i64 %idx.ext
  %72 = load i32, i32* %j.addr, align 4
  call void @emit_output_reload_insns(%struct.insn_chain* %70, %struct.reload* %add.ptr, i32 %72)
  br label %return

return:                                           ; preds = %if.end.96, %if.then.88, %if.then.76, %if.then.56, %if.then.44
  ret void
}

declare %struct.rtx_def* @emit_insns_before(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @emit_insns_after(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal i32 @reload_reg_reaches_end_p(i32 %regno, i32 %opnum, i32 %type) #0 {
entry:
  %retval = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  %opnum.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  store i32 %opnum, i32* %opnum.addr, align 4
  store i32 %type, i32* %type.addr, align 4
  %0 = load i32, i32* %type.addr, align 4
  switch i32 %0, label %sw.epilog [
    i32 9, label %sw.bb
    i32 10, label %sw.bb.1
    i32 3, label %sw.bb.48
    i32 4, label %sw.bb.48
    i32 0, label %sw.bb.135
    i32 7, label %sw.bb.165
    i32 8, label %sw.bb.199
    i32 2, label %sw.bb.246
    i32 1, label %sw.bb.247
    i32 5, label %sw.bb.247
    i32 6, label %sw.bb.247
  ]

sw.bb:                                            ; preds = %entry
  store i32 1, i32* %retval
  br label %return

sw.bb.1:                                          ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.bb.1
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* @reload_n_operands, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output_addr, i32 0, i64 %idxprom
  %4 = load i64, i64* %arrayidx, align 8
  %5 = load i32, i32* %regno.addr, align 4
  %sh_prom = zext i32 %5 to i64
  %shl = shl i64 1, %sh_prom
  %and = and i64 %4, %shl
  %tobool = icmp ne i64 %and, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %6 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %6 to i64
  %arrayidx3 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_outaddr_addr, i32 0, i64 %idxprom2
  %7 = load i64, i64* %arrayidx3, align 8
  %8 = load i32, i32* %regno.addr, align 4
  %sh_prom4 = zext i32 %8 to i64
  %shl5 = shl i64 1, %sh_prom4
  %and6 = and i64 %7, %shl5
  %tobool7 = icmp ne i64 %and6, 0
  br i1 %tobool7, label %if.then, label %lor.lhs.false.8

lor.lhs.false.8:                                  ; preds = %lor.lhs.false
  %9 = load i32, i32* %i, align 4
  %idxprom9 = sext i32 %9 to i64
  %arrayidx10 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i32 0, i64 %idxprom9
  %10 = load i64, i64* %arrayidx10, align 8
  %11 = load i32, i32* %regno.addr, align 4
  %sh_prom11 = zext i32 %11 to i64
  %shl12 = shl i64 1, %sh_prom11
  %and13 = and i64 %10, %shl12
  %tobool14 = icmp ne i64 %and13, 0
  br i1 %tobool14, label %if.then, label %lor.lhs.false.15

lor.lhs.false.15:                                 ; preds = %lor.lhs.false.8
  %12 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %12 to i64
  %arrayidx17 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input_addr, i32 0, i64 %idxprom16
  %13 = load i64, i64* %arrayidx17, align 8
  %14 = load i32, i32* %regno.addr, align 4
  %sh_prom18 = zext i32 %14 to i64
  %shl19 = shl i64 1, %sh_prom18
  %and20 = and i64 %13, %shl19
  %tobool21 = icmp ne i64 %and20, 0
  br i1 %tobool21, label %if.then, label %lor.lhs.false.22

lor.lhs.false.22:                                 ; preds = %lor.lhs.false.15
  %15 = load i32, i32* %i, align 4
  %idxprom23 = sext i32 %15 to i64
  %arrayidx24 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_inpaddr_addr, i32 0, i64 %idxprom23
  %16 = load i64, i64* %arrayidx24, align 8
  %17 = load i32, i32* %regno.addr, align 4
  %sh_prom25 = zext i32 %17 to i64
  %shl26 = shl i64 1, %sh_prom25
  %and27 = and i64 %16, %shl26
  %tobool28 = icmp ne i64 %and27, 0
  br i1 %tobool28, label %if.then, label %lor.lhs.false.29

lor.lhs.false.29:                                 ; preds = %lor.lhs.false.22
  %18 = load i32, i32* %i, align 4
  %idxprom30 = sext i32 %18 to i64
  %arrayidx31 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i32 0, i64 %idxprom30
  %19 = load i64, i64* %arrayidx31, align 8
  %20 = load i32, i32* %regno.addr, align 4
  %sh_prom32 = zext i32 %20 to i64
  %shl33 = shl i64 1, %sh_prom32
  %and34 = and i64 %19, %shl33
  %tobool35 = icmp ne i64 %and34, 0
  br i1 %tobool35, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.29, %lor.lhs.false.22, %lor.lhs.false.15, %lor.lhs.false.8, %lor.lhs.false, %for.body
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.29
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %21 = load i32, i32* %i, align 4
  %inc = add nsw i32 %21, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %22 = load i64, i64* @reload_reg_used_in_op_addr, align 8
  %23 = load i32, i32* %regno.addr, align 4
  %sh_prom36 = zext i32 %23 to i64
  %shl37 = shl i64 1, %sh_prom36
  %and38 = and i64 %22, %shl37
  %tobool39 = icmp ne i64 %and38, 0
  br i1 %tobool39, label %land.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.end
  %24 = load i64, i64* @reload_reg_used_in_insn, align 8
  %25 = load i32, i32* %regno.addr, align 4
  %sh_prom40 = zext i32 %25 to i64
  %shl41 = shl i64 1, %sh_prom40
  %and42 = and i64 %24, %shl41
  %tobool43 = icmp ne i64 %and42, 0
  br i1 %tobool43, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true
  %26 = load i64, i64* @reload_reg_used, align 8
  %27 = load i32, i32* %regno.addr, align 4
  %sh_prom44 = zext i32 %27 to i64
  %shl45 = shl i64 1, %sh_prom44
  %and46 = and i64 %26, %shl45
  %tobool47 = icmp ne i64 %and46, 0
  %lnot = xor i1 %tobool47, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %for.end
  %28 = phi i1 [ false, %land.lhs.true ], [ false, %for.end ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %28 to i32
  store i32 %land.ext, i32* %retval
  br label %return

sw.bb.48:                                         ; preds = %entry, %entry
  %29 = load i32, i32* %opnum.addr, align 4
  store i32 %29, i32* %i, align 4
  br label %for.cond.49

for.cond.49:                                      ; preds = %for.inc.60, %sw.bb.48
  %30 = load i32, i32* %i, align 4
  %31 = load i32, i32* @reload_n_operands, align 4
  %cmp50 = icmp slt i32 %30, %31
  br i1 %cmp50, label %for.body.51, label %for.end.62

for.body.51:                                      ; preds = %for.cond.49
  %32 = load i32, i32* %i, align 4
  %idxprom52 = sext i32 %32 to i64
  %arrayidx53 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i32 0, i64 %idxprom52
  %33 = load i64, i64* %arrayidx53, align 8
  %34 = load i32, i32* %regno.addr, align 4
  %sh_prom54 = zext i32 %34 to i64
  %shl55 = shl i64 1, %sh_prom54
  %and56 = and i64 %33, %shl55
  %tobool57 = icmp ne i64 %and56, 0
  br i1 %tobool57, label %if.then.58, label %if.end.59

if.then.58:                                       ; preds = %for.body.51
  store i32 0, i32* %retval
  br label %return

if.end.59:                                        ; preds = %for.body.51
  br label %for.inc.60

for.inc.60:                                       ; preds = %if.end.59
  %35 = load i32, i32* %i, align 4
  %inc61 = add nsw i32 %35, 1
  store i32 %inc61, i32* %i, align 4
  br label %for.cond.49

for.end.62:                                       ; preds = %for.cond.49
  %36 = load i32, i32* %opnum.addr, align 4
  %add = add nsw i32 %36, 1
  store i32 %add, i32* %i, align 4
  br label %for.cond.63

for.cond.63:                                      ; preds = %for.inc.81, %for.end.62
  %37 = load i32, i32* %i, align 4
  %38 = load i32, i32* @reload_n_operands, align 4
  %cmp64 = icmp slt i32 %37, %38
  br i1 %cmp64, label %for.body.65, label %for.end.83

for.body.65:                                      ; preds = %for.cond.63
  %39 = load i32, i32* %i, align 4
  %idxprom66 = sext i32 %39 to i64
  %arrayidx67 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input_addr, i32 0, i64 %idxprom66
  %40 = load i64, i64* %arrayidx67, align 8
  %41 = load i32, i32* %regno.addr, align 4
  %sh_prom68 = zext i32 %41 to i64
  %shl69 = shl i64 1, %sh_prom68
  %and70 = and i64 %40, %shl69
  %tobool71 = icmp ne i64 %and70, 0
  br i1 %tobool71, label %if.then.79, label %lor.lhs.false.72

lor.lhs.false.72:                                 ; preds = %for.body.65
  %42 = load i32, i32* %i, align 4
  %idxprom73 = sext i32 %42 to i64
  %arrayidx74 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_inpaddr_addr, i32 0, i64 %idxprom73
  %43 = load i64, i64* %arrayidx74, align 8
  %44 = load i32, i32* %regno.addr, align 4
  %sh_prom75 = zext i32 %44 to i64
  %shl76 = shl i64 1, %sh_prom75
  %and77 = and i64 %43, %shl76
  %tobool78 = icmp ne i64 %and77, 0
  br i1 %tobool78, label %if.then.79, label %if.end.80

if.then.79:                                       ; preds = %lor.lhs.false.72, %for.body.65
  store i32 0, i32* %retval
  br label %return

if.end.80:                                        ; preds = %lor.lhs.false.72
  br label %for.inc.81

for.inc.81:                                       ; preds = %if.end.80
  %45 = load i32, i32* %i, align 4
  %inc82 = add nsw i32 %45, 1
  store i32 %inc82, i32* %i, align 4
  br label %for.cond.63

for.end.83:                                       ; preds = %for.cond.63
  store i32 0, i32* %i, align 4
  br label %for.cond.84

for.cond.84:                                      ; preds = %for.inc.109, %for.end.83
  %46 = load i32, i32* %i, align 4
  %47 = load i32, i32* @reload_n_operands, align 4
  %cmp85 = icmp slt i32 %46, %47
  br i1 %cmp85, label %for.body.86, label %for.end.111

for.body.86:                                      ; preds = %for.cond.84
  %48 = load i32, i32* %i, align 4
  %idxprom87 = sext i32 %48 to i64
  %arrayidx88 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output_addr, i32 0, i64 %idxprom87
  %49 = load i64, i64* %arrayidx88, align 8
  %50 = load i32, i32* %regno.addr, align 4
  %sh_prom89 = zext i32 %50 to i64
  %shl90 = shl i64 1, %sh_prom89
  %and91 = and i64 %49, %shl90
  %tobool92 = icmp ne i64 %and91, 0
  br i1 %tobool92, label %if.then.107, label %lor.lhs.false.93

lor.lhs.false.93:                                 ; preds = %for.body.86
  %51 = load i32, i32* %i, align 4
  %idxprom94 = sext i32 %51 to i64
  %arrayidx95 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_outaddr_addr, i32 0, i64 %idxprom94
  %52 = load i64, i64* %arrayidx95, align 8
  %53 = load i32, i32* %regno.addr, align 4
  %sh_prom96 = zext i32 %53 to i64
  %shl97 = shl i64 1, %sh_prom96
  %and98 = and i64 %52, %shl97
  %tobool99 = icmp ne i64 %and98, 0
  br i1 %tobool99, label %if.then.107, label %lor.lhs.false.100

lor.lhs.false.100:                                ; preds = %lor.lhs.false.93
  %54 = load i32, i32* %i, align 4
  %idxprom101 = sext i32 %54 to i64
  %arrayidx102 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i32 0, i64 %idxprom101
  %55 = load i64, i64* %arrayidx102, align 8
  %56 = load i32, i32* %regno.addr, align 4
  %sh_prom103 = zext i32 %56 to i64
  %shl104 = shl i64 1, %sh_prom103
  %and105 = and i64 %55, %shl104
  %tobool106 = icmp ne i64 %and105, 0
  br i1 %tobool106, label %if.then.107, label %if.end.108

if.then.107:                                      ; preds = %lor.lhs.false.100, %lor.lhs.false.93, %for.body.86
  store i32 0, i32* %retval
  br label %return

if.end.108:                                       ; preds = %lor.lhs.false.100
  br label %for.inc.109

for.inc.109:                                      ; preds = %if.end.108
  %57 = load i32, i32* %i, align 4
  %inc110 = add nsw i32 %57, 1
  store i32 %inc110, i32* %i, align 4
  br label %for.cond.84

for.end.111:                                      ; preds = %for.cond.84
  %58 = load i64, i64* @reload_reg_used_in_op_addr_reload, align 8
  %59 = load i32, i32* %regno.addr, align 4
  %sh_prom112 = zext i32 %59 to i64
  %shl113 = shl i64 1, %sh_prom112
  %and114 = and i64 %58, %shl113
  %tobool115 = icmp ne i64 %and114, 0
  br i1 %tobool115, label %if.then.116, label %if.end.117

if.then.116:                                      ; preds = %for.end.111
  store i32 0, i32* %retval
  br label %return

if.end.117:                                       ; preds = %for.end.111
  %60 = load i64, i64* @reload_reg_used_in_op_addr, align 8
  %61 = load i32, i32* %regno.addr, align 4
  %sh_prom118 = zext i32 %61 to i64
  %shl119 = shl i64 1, %sh_prom118
  %and120 = and i64 %60, %shl119
  %tobool121 = icmp ne i64 %and120, 0
  br i1 %tobool121, label %land.end.133, label %land.lhs.true.122

land.lhs.true.122:                                ; preds = %if.end.117
  %62 = load i64, i64* @reload_reg_used_in_insn, align 8
  %63 = load i32, i32* %regno.addr, align 4
  %sh_prom123 = zext i32 %63 to i64
  %shl124 = shl i64 1, %sh_prom123
  %and125 = and i64 %62, %shl124
  %tobool126 = icmp ne i64 %and125, 0
  br i1 %tobool126, label %land.end.133, label %land.rhs.127

land.rhs.127:                                     ; preds = %land.lhs.true.122
  %64 = load i64, i64* @reload_reg_used, align 8
  %65 = load i32, i32* %regno.addr, align 4
  %sh_prom128 = zext i32 %65 to i64
  %shl129 = shl i64 1, %sh_prom128
  %and130 = and i64 %64, %shl129
  %tobool131 = icmp ne i64 %and130, 0
  %lnot132 = xor i1 %tobool131, true
  br label %land.end.133

land.end.133:                                     ; preds = %land.rhs.127, %land.lhs.true.122, %if.end.117
  %66 = phi i1 [ false, %land.lhs.true.122 ], [ false, %if.end.117 ], [ %lnot132, %land.rhs.127 ]
  %land.ext134 = zext i1 %66 to i32
  store i32 %land.ext134, i32* %retval
  br label %return

sw.bb.135:                                        ; preds = %entry
  %67 = load i32, i32* %opnum.addr, align 4
  %add136 = add nsw i32 %67, 1
  store i32 %add136, i32* %i, align 4
  br label %for.cond.137

for.cond.137:                                     ; preds = %for.inc.162, %sw.bb.135
  %68 = load i32, i32* %i, align 4
  %69 = load i32, i32* @reload_n_operands, align 4
  %cmp138 = icmp slt i32 %68, %69
  br i1 %cmp138, label %for.body.139, label %for.end.164

for.body.139:                                     ; preds = %for.cond.137
  %70 = load i32, i32* %i, align 4
  %idxprom140 = sext i32 %70 to i64
  %arrayidx141 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input_addr, i32 0, i64 %idxprom140
  %71 = load i64, i64* %arrayidx141, align 8
  %72 = load i32, i32* %regno.addr, align 4
  %sh_prom142 = zext i32 %72 to i64
  %shl143 = shl i64 1, %sh_prom142
  %and144 = and i64 %71, %shl143
  %tobool145 = icmp ne i64 %and144, 0
  br i1 %tobool145, label %if.then.160, label %lor.lhs.false.146

lor.lhs.false.146:                                ; preds = %for.body.139
  %73 = load i32, i32* %i, align 4
  %idxprom147 = sext i32 %73 to i64
  %arrayidx148 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_inpaddr_addr, i32 0, i64 %idxprom147
  %74 = load i64, i64* %arrayidx148, align 8
  %75 = load i32, i32* %regno.addr, align 4
  %sh_prom149 = zext i32 %75 to i64
  %shl150 = shl i64 1, %sh_prom149
  %and151 = and i64 %74, %shl150
  %tobool152 = icmp ne i64 %and151, 0
  br i1 %tobool152, label %if.then.160, label %lor.lhs.false.153

lor.lhs.false.153:                                ; preds = %lor.lhs.false.146
  %76 = load i32, i32* %i, align 4
  %idxprom154 = sext i32 %76 to i64
  %arrayidx155 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i32 0, i64 %idxprom154
  %77 = load i64, i64* %arrayidx155, align 8
  %78 = load i32, i32* %regno.addr, align 4
  %sh_prom156 = zext i32 %78 to i64
  %shl157 = shl i64 1, %sh_prom156
  %and158 = and i64 %77, %shl157
  %tobool159 = icmp ne i64 %and158, 0
  br i1 %tobool159, label %if.then.160, label %if.end.161

if.then.160:                                      ; preds = %lor.lhs.false.153, %lor.lhs.false.146, %for.body.139
  store i32 0, i32* %retval
  br label %return

if.end.161:                                       ; preds = %lor.lhs.false.153
  br label %for.inc.162

for.inc.162:                                      ; preds = %if.end.161
  %79 = load i32, i32* %i, align 4
  %inc163 = add nsw i32 %79, 1
  store i32 %inc163, i32* %i, align 4
  br label %for.cond.137

for.end.164:                                      ; preds = %for.cond.137
  br label %sw.bb.165

sw.bb.165:                                        ; preds = %entry, %for.end.164
  store i32 0, i32* %i, align 4
  br label %for.cond.166

for.cond.166:                                     ; preds = %for.inc.191, %sw.bb.165
  %80 = load i32, i32* %i, align 4
  %81 = load i32, i32* @reload_n_operands, align 4
  %cmp167 = icmp slt i32 %80, %81
  br i1 %cmp167, label %for.body.168, label %for.end.193

for.body.168:                                     ; preds = %for.cond.166
  %82 = load i32, i32* %i, align 4
  %idxprom169 = sext i32 %82 to i64
  %arrayidx170 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output_addr, i32 0, i64 %idxprom169
  %83 = load i64, i64* %arrayidx170, align 8
  %84 = load i32, i32* %regno.addr, align 4
  %sh_prom171 = zext i32 %84 to i64
  %shl172 = shl i64 1, %sh_prom171
  %and173 = and i64 %83, %shl172
  %tobool174 = icmp ne i64 %and173, 0
  br i1 %tobool174, label %if.then.189, label %lor.lhs.false.175

lor.lhs.false.175:                                ; preds = %for.body.168
  %85 = load i32, i32* %i, align 4
  %idxprom176 = sext i32 %85 to i64
  %arrayidx177 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_outaddr_addr, i32 0, i64 %idxprom176
  %86 = load i64, i64* %arrayidx177, align 8
  %87 = load i32, i32* %regno.addr, align 4
  %sh_prom178 = zext i32 %87 to i64
  %shl179 = shl i64 1, %sh_prom178
  %and180 = and i64 %86, %shl179
  %tobool181 = icmp ne i64 %and180, 0
  br i1 %tobool181, label %if.then.189, label %lor.lhs.false.182

lor.lhs.false.182:                                ; preds = %lor.lhs.false.175
  %88 = load i32, i32* %i, align 4
  %idxprom183 = sext i32 %88 to i64
  %arrayidx184 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i32 0, i64 %idxprom183
  %89 = load i64, i64* %arrayidx184, align 8
  %90 = load i32, i32* %regno.addr, align 4
  %sh_prom185 = zext i32 %90 to i64
  %shl186 = shl i64 1, %sh_prom185
  %and187 = and i64 %89, %shl186
  %tobool188 = icmp ne i64 %and187, 0
  br i1 %tobool188, label %if.then.189, label %if.end.190

if.then.189:                                      ; preds = %lor.lhs.false.182, %lor.lhs.false.175, %for.body.168
  store i32 0, i32* %retval
  br label %return

if.end.190:                                       ; preds = %lor.lhs.false.182
  br label %for.inc.191

for.inc.191:                                      ; preds = %if.end.190
  %91 = load i32, i32* %i, align 4
  %inc192 = add nsw i32 %91, 1
  store i32 %inc192, i32* %i, align 4
  br label %for.cond.166

for.end.193:                                      ; preds = %for.cond.166
  %92 = load i64, i64* @reload_reg_used, align 8
  %93 = load i32, i32* %regno.addr, align 4
  %sh_prom194 = zext i32 %93 to i64
  %shl195 = shl i64 1, %sh_prom194
  %and196 = and i64 %92, %shl195
  %tobool197 = icmp ne i64 %and196, 0
  %lnot198 = xor i1 %tobool197, true
  %lnot.ext = zext i1 %lnot198 to i32
  store i32 %lnot.ext, i32* %retval
  br label %return

sw.bb.199:                                        ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond.200

for.cond.200:                                     ; preds = %for.inc.225, %sw.bb.199
  %94 = load i32, i32* %i, align 4
  %95 = load i32, i32* @reload_n_operands, align 4
  %cmp201 = icmp slt i32 %94, %95
  br i1 %cmp201, label %for.body.202, label %for.end.227

for.body.202:                                     ; preds = %for.cond.200
  %96 = load i32, i32* %i, align 4
  %idxprom203 = sext i32 %96 to i64
  %arrayidx204 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output_addr, i32 0, i64 %idxprom203
  %97 = load i64, i64* %arrayidx204, align 8
  %98 = load i32, i32* %regno.addr, align 4
  %sh_prom205 = zext i32 %98 to i64
  %shl206 = shl i64 1, %sh_prom205
  %and207 = and i64 %97, %shl206
  %tobool208 = icmp ne i64 %and207, 0
  br i1 %tobool208, label %if.then.223, label %lor.lhs.false.209

lor.lhs.false.209:                                ; preds = %for.body.202
  %99 = load i32, i32* %i, align 4
  %idxprom210 = sext i32 %99 to i64
  %arrayidx211 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_outaddr_addr, i32 0, i64 %idxprom210
  %100 = load i64, i64* %arrayidx211, align 8
  %101 = load i32, i32* %regno.addr, align 4
  %sh_prom212 = zext i32 %101 to i64
  %shl213 = shl i64 1, %sh_prom212
  %and214 = and i64 %100, %shl213
  %tobool215 = icmp ne i64 %and214, 0
  br i1 %tobool215, label %if.then.223, label %lor.lhs.false.216

lor.lhs.false.216:                                ; preds = %lor.lhs.false.209
  %102 = load i32, i32* %i, align 4
  %idxprom217 = sext i32 %102 to i64
  %arrayidx218 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i32 0, i64 %idxprom217
  %103 = load i64, i64* %arrayidx218, align 8
  %104 = load i32, i32* %regno.addr, align 4
  %sh_prom219 = zext i32 %104 to i64
  %shl220 = shl i64 1, %sh_prom219
  %and221 = and i64 %103, %shl220
  %tobool222 = icmp ne i64 %and221, 0
  br i1 %tobool222, label %if.then.223, label %if.end.224

if.then.223:                                      ; preds = %lor.lhs.false.216, %lor.lhs.false.209, %for.body.202
  store i32 0, i32* %retval
  br label %return

if.end.224:                                       ; preds = %lor.lhs.false.216
  br label %for.inc.225

for.inc.225:                                      ; preds = %if.end.224
  %105 = load i32, i32* %i, align 4
  %inc226 = add nsw i32 %105, 1
  store i32 %inc226, i32* %i, align 4
  br label %for.cond.200

for.end.227:                                      ; preds = %for.cond.200
  %106 = load i64, i64* @reload_reg_used_in_op_addr, align 8
  %107 = load i32, i32* %regno.addr, align 4
  %sh_prom228 = zext i32 %107 to i64
  %shl229 = shl i64 1, %sh_prom228
  %and230 = and i64 %106, %shl229
  %tobool231 = icmp ne i64 %and230, 0
  br i1 %tobool231, label %land.end.244, label %land.lhs.true.232

land.lhs.true.232:                                ; preds = %for.end.227
  %108 = load i64, i64* @reload_reg_used_in_insn, align 8
  %109 = load i32, i32* %regno.addr, align 4
  %sh_prom233 = zext i32 %109 to i64
  %shl234 = shl i64 1, %sh_prom233
  %and235 = and i64 %108, %shl234
  %tobool236 = icmp ne i64 %and235, 0
  br i1 %tobool236, label %land.end.244, label %land.rhs.237

land.rhs.237:                                     ; preds = %land.lhs.true.232
  %110 = load i64, i64* @reload_reg_used, align 8
  %111 = load i32, i32* %regno.addr, align 4
  %sh_prom238 = zext i32 %111 to i64
  %shl239 = shl i64 1, %sh_prom238
  %and240 = and i64 %110, %shl239
  %tobool241 = icmp ne i64 %and240, 0
  %lnot242 = xor i1 %tobool241, true
  br label %land.end.244

land.end.244:                                     ; preds = %land.rhs.237, %land.lhs.true.232, %for.end.227
  %112 = phi i1 [ false, %land.lhs.true.232 ], [ false, %for.end.227 ], [ %lnot242, %land.rhs.237 ]
  %land.ext245 = zext i1 %112 to i32
  store i32 %land.ext245, i32* %retval
  br label %return

sw.bb.246:                                        ; preds = %entry
  %113 = load i32, i32* @reload_n_operands, align 4
  store i32 %113, i32* %opnum.addr, align 4
  br label %sw.bb.247

sw.bb.247:                                        ; preds = %entry, %entry, %entry, %sw.bb.246
  store i32 0, i32* %i, align 4
  br label %for.cond.248

for.cond.248:                                     ; preds = %for.inc.266, %sw.bb.247
  %114 = load i32, i32* %i, align 4
  %115 = load i32, i32* %opnum.addr, align 4
  %cmp249 = icmp slt i32 %114, %115
  br i1 %cmp249, label %for.body.250, label %for.end.268

for.body.250:                                     ; preds = %for.cond.248
  %116 = load i32, i32* %i, align 4
  %idxprom251 = sext i32 %116 to i64
  %arrayidx252 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output_addr, i32 0, i64 %idxprom251
  %117 = load i64, i64* %arrayidx252, align 8
  %118 = load i32, i32* %regno.addr, align 4
  %sh_prom253 = zext i32 %118 to i64
  %shl254 = shl i64 1, %sh_prom253
  %and255 = and i64 %117, %shl254
  %tobool256 = icmp ne i64 %and255, 0
  br i1 %tobool256, label %if.then.264, label %lor.lhs.false.257

lor.lhs.false.257:                                ; preds = %for.body.250
  %119 = load i32, i32* %i, align 4
  %idxprom258 = sext i32 %119 to i64
  %arrayidx259 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_outaddr_addr, i32 0, i64 %idxprom258
  %120 = load i64, i64* %arrayidx259, align 8
  %121 = load i32, i32* %regno.addr, align 4
  %sh_prom260 = zext i32 %121 to i64
  %shl261 = shl i64 1, %sh_prom260
  %and262 = and i64 %120, %shl261
  %tobool263 = icmp ne i64 %and262, 0
  br i1 %tobool263, label %if.then.264, label %if.end.265

if.then.264:                                      ; preds = %lor.lhs.false.257, %for.body.250
  store i32 0, i32* %retval
  br label %return

if.end.265:                                       ; preds = %lor.lhs.false.257
  br label %for.inc.266

for.inc.266:                                      ; preds = %if.end.265
  %122 = load i32, i32* %i, align 4
  %inc267 = add nsw i32 %122, 1
  store i32 %inc267, i32* %i, align 4
  br label %for.cond.248

for.end.268:                                      ; preds = %for.cond.248
  store i32 1, i32* %retval
  br label %return

sw.epilog:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 4663, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__FUNCTION__.reload_reg_reaches_end_p, i32 0, i32 0)) #5
  unreachable

return:                                           ; preds = %for.end.268, %if.then.264, %land.end.244, %if.then.223, %for.end.193, %if.then.189, %if.then.160, %land.end.133, %if.then.116, %if.then.107, %if.then.79, %if.then.58, %land.end, %if.then, %sw.bb
  %123 = load i32, i32* %retval
  ret i32 %123
}

; Function Attrs: nounwind uwtable
define internal void @emit_input_reload_insns(%struct.insn_chain* %chain, %struct.reload* %rl, %struct.rtx_def* %old, i32 %j) #0 {
entry:
  %chain.addr = alloca %struct.insn_chain*, align 8
  %rl.addr = alloca %struct.reload*, align 8
  %old.addr = alloca %struct.rtx_def*, align 8
  %j.addr = alloca i32, align 4
  %insn = alloca %struct.rtx_def*, align 8
  %reloadreg = alloca %struct.rtx_def*, align 8
  %oldequiv_reg = alloca %struct.rtx_def*, align 8
  %oldequiv = alloca %struct.rtx_def*, align 8
  %special = alloca i32, align 4
  %mode = alloca i32, align 4
  %where = alloca %struct.rtx_def**, align 8
  %regno = alloca i32, align 4
  %temp = alloca %struct.rtx_def*, align 8
  %real_oldequiv = alloca %struct.rtx_def*, align 8
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  store %struct.reload* %rl, %struct.reload** %rl.addr, align 8
  store %struct.rtx_def* %old, %struct.rtx_def** %old.addr, align 8
  store i32 %j, i32* %j.addr, align 4
  %0 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %insn1 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %0, i32 0, i32 4
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn1, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %insn, align 8
  %2 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %2, i32 0, i32 11
  %3 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %reloadreg, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %oldequiv_reg, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %oldequiv, align 8
  store i32 0, i32* %special, align 4
  %4 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load = load i32, i32* %5, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  store i32 %bf.clear, i32* %mode, align 4
  %6 = load i32, i32* %mode, align 4
  %cmp = icmp eq i32 %6, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %inmode = getelementptr inbounds %struct.reload, %struct.reload* %7, i32 0, i32 3
  %8 = load i32, i32* %inmode, align 4
  store i32 %8, i32* %mode, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %cmp2 = icmp eq %struct.rtx_def* %9, null
  br i1 %cmp2, label %land.lhs.true, label %if.end.20

land.lhs.true:                                    ; preds = %if.end
  %10 = load i32, i32* @optimize, align 4
  %tobool = icmp ne i32 %10, 0
  br i1 %tobool, label %land.lhs.true.3, label %if.end.20

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %11 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load4 = load i32, i32* %12, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 66
  br i1 %cmp6, label %if.then.19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.3
  %13 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load7 = load i32, i32* %14, align 8
  %bf.clear8 = and i32 %bf.load7, 65535
  %cmp9 = icmp eq i32 %bf.clear8, 61
  br i1 %cmp9, label %land.lhs.true.10, label %if.end.20

land.lhs.true.10:                                 ; preds = %lor.lhs.false
  %15 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %16 = load i32, i32* %rtuint, align 4
  %cmp11 = icmp uge i32 %16, 53
  br i1 %cmp11, label %land.lhs.true.12, label %if.end.20

land.lhs.true.12:                                 ; preds = %land.lhs.true.10
  %17 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8
  %fld13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i32 0, i64 0
  %rtuint15 = bitcast %union.rtunion_def* %arrayidx14 to i32*
  %18 = load i32, i32* %rtuint15, align 4
  %idxprom = zext i32 %18 to i64
  %19 = load i16*, i16** @reg_renumber, align 8
  %arrayidx16 = getelementptr inbounds i16, i16* %19, i64 %idxprom
  %20 = load i16, i16* %arrayidx16, align 2
  %conv = sext i16 %20 to i32
  %cmp17 = icmp slt i32 %conv, 0
  br i1 %cmp17, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %land.lhs.true.12, %land.lhs.true.3
  %21 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %23 = load i32, i32* %mode, align 4
  %call = call %struct.rtx_def* @find_equiv_reg(%struct.rtx_def* %21, %struct.rtx_def* %22, i32 24, i32 -1, i16* null, i32 0, i32 %23)
  store %struct.rtx_def* %call, %struct.rtx_def** %oldequiv, align 8
  br label %if.end.20

if.end.20:                                        ; preds = %if.then.19, %land.lhs.true.12, %land.lhs.true.10, %lor.lhs.false, %land.lhs.true, %if.end
  %24 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %tobool21 = icmp ne %struct.rtx_def* %24, null
  br i1 %tobool21, label %if.then.22, label %if.end.53

if.then.22:                                       ; preds = %if.end.20
  %25 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %call23 = call i32 @true_regnum(%struct.rtx_def* %25)
  store i32 %call23, i32* %regno, align 4
  %26 = load i32, i32* %regno, align 4
  %27 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %mode24 = getelementptr inbounds %struct.reload, %struct.reload* %27, i32 0, i32 5
  %28 = load i32, i32* %mode24, align 4
  %29 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %29, i32 0, i32 12
  %30 = load i32, i32* %opnum, align 4
  %31 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %31, i32 0, i32 17
  %32 = load i32, i32* %when_needed, align 4
  %33 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %in = getelementptr inbounds %struct.reload, %struct.reload* %33, i32 0, i32 0
  %34 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %35 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %36 = load i32, i32* %j.addr, align 4
  %call25 = call i32 @free_for_value_p(i32 %26, i32 %28, i32 %30, i32 %32, %struct.rtx_def* %34, %struct.rtx_def* %35, i32 %36, i32 0)
  %tobool26 = icmp ne i32 %call25, 0
  br i1 %tobool26, label %if.end.28, label %if.then.27

if.then.27:                                       ; preds = %if.then.22
  store %struct.rtx_def* null, %struct.rtx_def** %oldequiv, align 8
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.27, %if.then.22
  %37 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %cmp29 = icmp ne %struct.rtx_def* %37, null
  br i1 %cmp29, label %land.lhs.true.31, label %if.end.52

land.lhs.true.31:                                 ; preds = %if.end.28
  %38 = load i32, i32* %regno, align 4
  %idxprom32 = zext i32 %38 to i64
  %arrayidx33 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i32 0, i64 %idxprom32
  %39 = load i32, i32* %arrayidx33, align 4
  %40 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %class = getelementptr inbounds %struct.reload, %struct.reload* %40, i32 0, i32 2
  %41 = load i32, i32* %class, align 4
  %cmp34 = icmp ne i32 %39, %41
  br i1 %cmp34, label %land.lhs.true.36, label %lor.lhs.false.45

land.lhs.true.36:                                 ; preds = %land.lhs.true.31
  %42 = load i32, i32* %mode, align 4
  %43 = load i32, i32* %regno, align 4
  %idxprom37 = zext i32 %43 to i64
  %arrayidx38 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i32 0, i64 %idxprom37
  %44 = load i32, i32* %arrayidx38, align 4
  %45 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %class39 = getelementptr inbounds %struct.reload, %struct.reload* %45, i32 0, i32 2
  %46 = load i32, i32* %class39, align 4
  %call40 = call i32 @ix86_register_move_cost(i32 %42, i32 %44, i32 %46)
  %47 = load i32, i32* %mode, align 4
  %48 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %class41 = getelementptr inbounds %struct.reload, %struct.reload* %48, i32 0, i32 2
  %49 = load i32, i32* %class41, align 4
  %call42 = call i32 @ix86_memory_move_cost(i32 %47, i32 %49, i32 1)
  %cmp43 = icmp sge i32 %call40, %call42
  br i1 %cmp43, label %if.then.51, label %lor.lhs.false.45

lor.lhs.false.45:                                 ; preds = %land.lhs.true.36, %land.lhs.true.31
  %50 = load i32, i32* %regno, align 4
  %idxprom46 = zext i32 %50 to i64
  %arrayidx47 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i32 0, i64 %idxprom46
  %51 = load i32, i32* %arrayidx47, align 4
  %52 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %class48 = getelementptr inbounds %struct.reload, %struct.reload* %52, i32 0, i32 2
  %53 = load i32, i32* %class48, align 4
  %54 = load i32, i32* %mode, align 4
  %call49 = call i32 @ix86_secondary_memory_needed(i32 %51, i32 %53, i32 %54, i32 1)
  %tobool50 = icmp ne i32 %call49, 0
  br i1 %tobool50, label %if.then.51, label %if.end.52

if.then.51:                                       ; preds = %lor.lhs.false.45, %land.lhs.true.36
  store %struct.rtx_def* null, %struct.rtx_def** %oldequiv, align 8
  br label %if.end.52

if.end.52:                                        ; preds = %if.then.51, %lor.lhs.false.45, %if.end.28
  br label %if.end.53

if.end.53:                                        ; preds = %if.end.52, %if.end.20
  %55 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %cmp54 = icmp eq %struct.rtx_def* %55, null
  br i1 %cmp54, label %land.lhs.true.56, label %if.end.67

land.lhs.true.56:                                 ; preds = %if.end.53
  %56 = load i32, i32* %j.addr, align 4
  %idxprom57 = sext i32 %56 to i64
  %arrayidx58 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i32 0, i64 %idxprom57
  %57 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx58, align 8
  %tobool59 = icmp ne %struct.rtx_def* %57, null
  br i1 %tobool59, label %land.lhs.true.60, label %if.end.67

land.lhs.true.60:                                 ; preds = %land.lhs.true.56
  %58 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %in_reg = getelementptr inbounds %struct.reload, %struct.reload* %58, i32 0, i32 8
  %59 = load %struct.rtx_def*, %struct.rtx_def** %in_reg, align 8
  %60 = bitcast %struct.rtx_def* %59 to i32*
  %bf.load61 = load i32, i32* %60, align 8
  %bf.clear62 = and i32 %bf.load61, 65535
  %cmp63 = icmp eq i32 %bf.clear62, 61
  br i1 %cmp63, label %if.then.65, label %if.end.67

if.then.65:                                       ; preds = %land.lhs.true.60
  %61 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8
  store %struct.rtx_def* %61, %struct.rtx_def** %oldequiv, align 8
  %62 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %in_reg66 = getelementptr inbounds %struct.reload, %struct.reload* %62, i32 0, i32 8
  %63 = load %struct.rtx_def*, %struct.rtx_def** %in_reg66, align 8
  store %struct.rtx_def* %63, %struct.rtx_def** %old.addr, align 8
  br label %if.end.67

if.end.67:                                        ; preds = %if.then.65, %land.lhs.true.60, %land.lhs.true.56, %if.end.53
  %64 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %cmp68 = icmp eq %struct.rtx_def* %64, null
  br i1 %cmp68, label %if.then.70, label %if.else

if.then.70:                                       ; preds = %if.end.67
  %65 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8
  store %struct.rtx_def* %65, %struct.rtx_def** %oldequiv, align 8
  br label %if.end.86

if.else:                                          ; preds = %if.end.67
  %66 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %67 = bitcast %struct.rtx_def* %66 to i32*
  %bf.load71 = load i32, i32* %67, align 8
  %bf.clear72 = and i32 %bf.load71, 65535
  %cmp73 = icmp eq i32 %bf.clear72, 61
  br i1 %cmp73, label %if.then.75, label %if.else.76

if.then.75:                                       ; preds = %if.else
  %68 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  store %struct.rtx_def* %68, %struct.rtx_def** %oldequiv_reg, align 8
  br label %if.end.85

if.else.76:                                       ; preds = %if.else
  %69 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %70 = bitcast %struct.rtx_def* %69 to i32*
  %bf.load77 = load i32, i32* %70, align 8
  %bf.clear78 = and i32 %bf.load77, 65535
  %cmp79 = icmp eq i32 %bf.clear78, 63
  br i1 %cmp79, label %if.then.81, label %if.end.84

if.then.81:                                       ; preds = %if.else.76
  %71 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %fld82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1
  %arrayidx83 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld82, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx83 to %struct.rtx_def**
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %72, %struct.rtx_def** %oldequiv_reg, align 8
  br label %if.end.84

if.end.84:                                        ; preds = %if.then.81, %if.else.76
  br label %if.end.85

if.end.85:                                        ; preds = %if.end.84, %if.then.75
  br label %if.end.86

if.end.86:                                        ; preds = %if.end.85, %if.then.70
  %73 = load i32, i32* @optimize, align 4
  %tobool87 = icmp ne i32 %73, 0
  br i1 %tobool87, label %land.lhs.true.88, label %if.end.131

land.lhs.true.88:                                 ; preds = %if.end.86
  %74 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %75 = bitcast %struct.rtx_def* %74 to i32*
  %bf.load89 = load i32, i32* %75, align 8
  %bf.clear90 = and i32 %bf.load89, 65535
  %cmp91 = icmp eq i32 %bf.clear90, 61
  br i1 %cmp91, label %land.lhs.true.93, label %if.end.131

land.lhs.true.93:                                 ; preds = %land.lhs.true.88
  %76 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %fld94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %arrayidx95 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i32 0, i64 0
  %rtuint96 = bitcast %union.rtunion_def* %arrayidx95 to i32*
  %77 = load i32, i32* %rtuint96, align 4
  %cmp97 = icmp ult i32 %77, 53
  br i1 %cmp97, label %land.lhs.true.99, label %if.end.131

land.lhs.true.99:                                 ; preds = %land.lhs.true.93
  %78 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %fld100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx101 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld100, i32 0, i64 0
  %rtuint102 = bitcast %union.rtunion_def* %arrayidx101 to i32*
  %79 = load i32, i32* %rtuint102, align 4
  %idxprom103 = zext i32 %79 to i64
  %arrayidx104 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i32 0, i64 %idxprom103
  %80 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx104, align 8
  %tobool105 = icmp ne %struct.rtx_def* %80, null
  br i1 %tobool105, label %land.lhs.true.106, label %if.end.131

land.lhs.true.106:                                ; preds = %land.lhs.true.99
  %81 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8
  %82 = bitcast %struct.rtx_def* %81 to i32*
  %bf.load107 = load i32, i32* %82, align 8
  %bf.clear108 = and i32 %bf.load107, 65535
  %cmp109 = icmp eq i32 %bf.clear108, 61
  br i1 %cmp109, label %land.lhs.true.111, label %if.end.131

land.lhs.true.111:                                ; preds = %land.lhs.true.106
  %83 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %84 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %fld112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1
  %arrayidx113 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld112, i32 0, i64 0
  %rtuint114 = bitcast %union.rtunion_def* %arrayidx113 to i32*
  %85 = load i32, i32* %rtuint114, align 4
  %idxprom115 = zext i32 %85 to i64
  %arrayidx116 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i32 0, i64 %idxprom115
  %86 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx116, align 8
  %call117 = call i32 @dead_or_set_p(%struct.rtx_def* %83, %struct.rtx_def* %86)
  %tobool118 = icmp ne i32 %call117, 0
  br i1 %tobool118, label %if.then.127, label %lor.lhs.false.119

lor.lhs.false.119:                                ; preds = %land.lhs.true.111
  %87 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %fld120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1
  %arrayidx121 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld120, i32 0, i64 0
  %rtuint122 = bitcast %union.rtunion_def* %arrayidx121 to i32*
  %88 = load i32, i32* %rtuint122, align 4
  %idxprom123 = zext i32 %88 to i64
  %arrayidx124 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i32 0, i64 %idxprom123
  %89 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx124, align 8
  %90 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %out_reg = getelementptr inbounds %struct.reload, %struct.reload* %90, i32 0, i32 9
  %91 = load %struct.rtx_def*, %struct.rtx_def** %out_reg, align 8
  %call125 = call i32 @rtx_equal_p(%struct.rtx_def* %89, %struct.rtx_def* %91)
  %tobool126 = icmp ne i32 %call125, 0
  br i1 %tobool126, label %if.then.127, label %if.end.131

if.then.127:                                      ; preds = %lor.lhs.false.119, %land.lhs.true.111
  %92 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %93 = load i32, i32* %j.addr, align 4
  %94 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %fld128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1
  %arrayidx129 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld128, i32 0, i64 0
  %rtuint130 = bitcast %union.rtunion_def* %arrayidx129 to i32*
  %95 = load i32, i32* %rtuint130, align 4
  call void @delete_output_reload(%struct.rtx_def* %92, i32 %93, i32 %95)
  br label %if.end.131

if.end.131:                                       ; preds = %if.then.127, %lor.lhs.false.119, %land.lhs.true.106, %land.lhs.true.99, %land.lhs.true.93, %land.lhs.true.88, %if.end.86
  %96 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %97 = bitcast %struct.rtx_def* %96 to i32*
  %bf.load132 = load i32, i32* %97, align 8
  %bf.lshr133 = lshr i32 %bf.load132, 16
  %bf.clear134 = and i32 %bf.lshr133, 255
  %98 = load i32, i32* %mode, align 4
  %cmp135 = icmp ne i32 %bf.clear134, %98
  br i1 %cmp135, label %if.then.137, label %if.end.142

if.then.137:                                      ; preds = %if.end.131
  %99 = load i32, i32* %mode, align 4
  %100 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %fld138 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1
  %arrayidx139 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld138, i32 0, i64 0
  %rtuint140 = bitcast %union.rtunion_def* %arrayidx139 to i32*
  %101 = load i32, i32* %rtuint140, align 4
  %call141 = call %struct.rtx_def* @gen_rtx_REG(i32 %99, i32 %101)
  store %struct.rtx_def* %call141, %struct.rtx_def** %reloadreg, align 8
  br label %if.end.142

if.end.142:                                       ; preds = %if.then.137, %if.end.131
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end.142
  %102 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %103 = bitcast %struct.rtx_def* %102 to i32*
  %bf.load143 = load i32, i32* %103, align 8
  %bf.clear144 = and i32 %bf.load143, 65535
  %cmp145 = icmp eq i32 %bf.clear144, 63
  br i1 %cmp145, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %104 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %105 = bitcast %struct.rtx_def* %104 to i32*
  %bf.load147 = load i32, i32* %105, align 8
  %bf.lshr148 = lshr i32 %bf.load147, 16
  %bf.clear149 = and i32 %bf.lshr148, 255
  %106 = load i32, i32* %mode, align 4
  %cmp150 = icmp ne i32 %bf.clear149, %106
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %107 = phi i1 [ false, %while.cond ], [ %cmp150, %land.rhs ]
  br i1 %107, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %108 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %fld152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1
  %arrayidx153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld152, i32 0, i64 0
  %rtx154 = bitcast %union.rtunion_def* %arrayidx153 to %struct.rtx_def**
  %109 = load %struct.rtx_def*, %struct.rtx_def** %rtx154, align 8
  store %struct.rtx_def* %109, %struct.rtx_def** %oldequiv, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %110 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %111 = bitcast %struct.rtx_def* %110 to i32*
  %bf.load155 = load i32, i32* %111, align 8
  %bf.lshr156 = lshr i32 %bf.load155, 16
  %bf.clear157 = and i32 %bf.lshr156, 255
  %cmp158 = icmp ne i32 %bf.clear157, 0
  br i1 %cmp158, label %land.lhs.true.160, label %if.end.168

land.lhs.true.160:                                ; preds = %while.end
  %112 = load i32, i32* %mode, align 4
  %113 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %114 = bitcast %struct.rtx_def* %113 to i32*
  %bf.load161 = load i32, i32* %114, align 8
  %bf.lshr162 = lshr i32 %bf.load161, 16
  %bf.clear163 = and i32 %bf.lshr162, 255
  %cmp164 = icmp ne i32 %112, %bf.clear163
  br i1 %cmp164, label %if.then.166, label %if.end.168

if.then.166:                                      ; preds = %land.lhs.true.160
  %115 = load i32, i32* %mode, align 4
  %116 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %call167 = call %struct.rtx_def* @gen_lowpart_SUBREG(i32 %115, %struct.rtx_def* %116)
  store %struct.rtx_def* %call167, %struct.rtx_def** %oldequiv, align 8
  br label %if.end.168

if.end.168:                                       ; preds = %if.then.166, %land.lhs.true.160, %while.end
  %117 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %when_needed169 = getelementptr inbounds %struct.reload, %struct.reload* %117, i32 0, i32 17
  %118 = load i32, i32* %when_needed169, align 4
  switch i32 %118, label %sw.default [
    i32 9, label %sw.bb
    i32 0, label %sw.bb.170
    i32 3, label %sw.bb.174
    i32 4, label %sw.bb.178
    i32 5, label %sw.bb.182
    i32 6, label %sw.bb.186
    i32 7, label %sw.bb.190
    i32 8, label %sw.bb.191
    i32 10, label %sw.bb.192
  ]

sw.bb:                                            ; preds = %if.end.168
  store %struct.rtx_def** @other_input_reload_insns, %struct.rtx_def*** %where, align 8
  br label %sw.epilog

sw.bb.170:                                        ; preds = %if.end.168
  %119 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %opnum171 = getelementptr inbounds %struct.reload, %struct.reload* %119, i32 0, i32 12
  %120 = load i32, i32* %opnum171, align 4
  %idxprom172 = sext i32 %120 to i64
  %arrayidx173 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @input_reload_insns, i32 0, i64 %idxprom172
  store %struct.rtx_def** %arrayidx173, %struct.rtx_def*** %where, align 8
  br label %sw.epilog

sw.bb.174:                                        ; preds = %if.end.168
  %121 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %opnum175 = getelementptr inbounds %struct.reload, %struct.reload* %121, i32 0, i32 12
  %122 = load i32, i32* %opnum175, align 4
  %idxprom176 = sext i32 %122 to i64
  %arrayidx177 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @input_address_reload_insns, i32 0, i64 %idxprom176
  store %struct.rtx_def** %arrayidx177, %struct.rtx_def*** %where, align 8
  br label %sw.epilog

sw.bb.178:                                        ; preds = %if.end.168
  %123 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %opnum179 = getelementptr inbounds %struct.reload, %struct.reload* %123, i32 0, i32 12
  %124 = load i32, i32* %opnum179, align 4
  %idxprom180 = sext i32 %124 to i64
  %arrayidx181 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @inpaddr_address_reload_insns, i32 0, i64 %idxprom180
  store %struct.rtx_def** %arrayidx181, %struct.rtx_def*** %where, align 8
  br label %sw.epilog

sw.bb.182:                                        ; preds = %if.end.168
  %125 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %opnum183 = getelementptr inbounds %struct.reload, %struct.reload* %125, i32 0, i32 12
  %126 = load i32, i32* %opnum183, align 4
  %idxprom184 = sext i32 %126 to i64
  %arrayidx185 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @output_address_reload_insns, i32 0, i64 %idxprom184
  store %struct.rtx_def** %arrayidx185, %struct.rtx_def*** %where, align 8
  br label %sw.epilog

sw.bb.186:                                        ; preds = %if.end.168
  %127 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %opnum187 = getelementptr inbounds %struct.reload, %struct.reload* %127, i32 0, i32 12
  %128 = load i32, i32* %opnum187, align 4
  %idxprom188 = sext i32 %128 to i64
  %arrayidx189 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @outaddr_address_reload_insns, i32 0, i64 %idxprom188
  store %struct.rtx_def** %arrayidx189, %struct.rtx_def*** %where, align 8
  br label %sw.epilog

sw.bb.190:                                        ; preds = %if.end.168
  store %struct.rtx_def** @operand_reload_insns, %struct.rtx_def*** %where, align 8
  br label %sw.epilog

sw.bb.191:                                        ; preds = %if.end.168
  store %struct.rtx_def** @other_operand_reload_insns, %struct.rtx_def*** %where, align 8
  br label %sw.epilog

sw.bb.192:                                        ; preds = %if.end.168
  store %struct.rtx_def** @other_input_address_reload_insns, %struct.rtx_def*** %where, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.168
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 6330, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.emit_input_reload_insns, i32 0, i32 0)) #5
  unreachable

sw.epilog:                                        ; preds = %sw.bb.192, %sw.bb.191, %sw.bb.190, %sw.bb.186, %sw.bb.182, %sw.bb.178, %sw.bb.174, %sw.bb.170, %sw.bb
  %129 = load %struct.rtx_def**, %struct.rtx_def*** %where, align 8
  %130 = load %struct.rtx_def*, %struct.rtx_def** %129, align 8
  call void @push_to_sequence(%struct.rtx_def* %130)
  %131 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %out = getelementptr inbounds %struct.reload, %struct.reload* %131, i32 0, i32 1
  %132 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %tobool193 = icmp ne %struct.rtx_def* %132, null
  br i1 %tobool193, label %land.lhs.true.194, label %if.else.263

land.lhs.true.194:                                ; preds = %sw.epilog
  %133 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %out_reg195 = getelementptr inbounds %struct.reload, %struct.reload* %133, i32 0, i32 9
  %134 = load %struct.rtx_def*, %struct.rtx_def** %out_reg195, align 8
  %tobool196 = icmp ne %struct.rtx_def* %134, null
  br i1 %tobool196, label %if.else.263, label %if.then.197

if.then.197:                                      ; preds = %land.lhs.true.194
  %135 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %secondary_in_reload = getelementptr inbounds %struct.reload, %struct.reload* %135, i32 0, i32 13
  %136 = load i32, i32* %secondary_in_reload, align 4
  %cmp198 = icmp sge i32 %136, 0
  br i1 %cmp198, label %if.then.200, label %if.end.201

if.then.200:                                      ; preds = %if.then.197
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 6342, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.emit_input_reload_insns, i32 0, i32 0)) #5
  unreachable

if.end.201:                                       ; preds = %if.then.197
  %137 = load i32, i32* %j.addr, align 4
  %idxprom202 = sext i32 %137 to i64
  %arrayidx203 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i32 0, i64 %idxprom202
  %138 = load i8, i8* %arrayidx203, align 1
  %tobool204 = icmp ne i8 %138, 0
  br i1 %tobool204, label %if.then.205, label %if.end.206

if.then.205:                                      ; preds = %if.end.201
  %139 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  store %struct.rtx_def* %139, %struct.rtx_def** %oldequiv, align 8
  br label %if.end.206

if.end.206:                                       ; preds = %if.then.205, %if.end.201
  %140 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %in_reg207 = getelementptr inbounds %struct.reload, %struct.reload* %140, i32 0, i32 8
  %141 = load %struct.rtx_def*, %struct.rtx_def** %in_reg207, align 8
  %fld208 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %141, i32 0, i32 1
  %arrayidx209 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld208, i32 0, i64 0
  %rtx210 = bitcast %union.rtunion_def* %arrayidx209 to %struct.rtx_def**
  %142 = load %struct.rtx_def*, %struct.rtx_def** %rtx210, align 8
  store %struct.rtx_def* %142, %struct.rtx_def** %old.addr, align 8
  %143 = load i32, i32* @optimize, align 4
  %tobool211 = icmp ne i32 %143, 0
  br i1 %tobool211, label %land.lhs.true.212, label %if.end.255

land.lhs.true.212:                                ; preds = %if.end.206
  %144 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %145 = bitcast %struct.rtx_def* %144 to i32*
  %bf.load213 = load i32, i32* %145, align 8
  %bf.clear214 = and i32 %bf.load213, 65535
  %cmp215 = icmp eq i32 %bf.clear214, 61
  br i1 %cmp215, label %land.lhs.true.217, label %if.end.255

land.lhs.true.217:                                ; preds = %land.lhs.true.212
  %146 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %fld218 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %146, i32 0, i32 1
  %arrayidx219 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld218, i32 0, i64 0
  %rtuint220 = bitcast %union.rtunion_def* %arrayidx219 to i32*
  %147 = load i32, i32* %rtuint220, align 4
  %cmp221 = icmp ult i32 %147, 53
  br i1 %cmp221, label %land.lhs.true.223, label %if.end.255

land.lhs.true.223:                                ; preds = %land.lhs.true.217
  %148 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %fld224 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %148, i32 0, i32 1
  %arrayidx225 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld224, i32 0, i64 0
  %rtuint226 = bitcast %union.rtunion_def* %arrayidx225 to i32*
  %149 = load i32, i32* %rtuint226, align 4
  %idxprom227 = zext i32 %149 to i64
  %arrayidx228 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i32 0, i64 %idxprom227
  %150 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx228, align 8
  %tobool229 = icmp ne %struct.rtx_def* %150, null
  br i1 %tobool229, label %land.lhs.true.230, label %if.end.255

land.lhs.true.230:                                ; preds = %land.lhs.true.223
  %151 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8
  %152 = bitcast %struct.rtx_def* %151 to i32*
  %bf.load231 = load i32, i32* %152, align 8
  %bf.clear232 = and i32 %bf.load231, 65535
  %cmp233 = icmp eq i32 %bf.clear232, 61
  br i1 %cmp233, label %land.lhs.true.235, label %if.end.255

land.lhs.true.235:                                ; preds = %land.lhs.true.230
  %153 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %154 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %fld236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %154, i32 0, i32 1
  %arrayidx237 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld236, i32 0, i64 0
  %rtuint238 = bitcast %union.rtunion_def* %arrayidx237 to i32*
  %155 = load i32, i32* %rtuint238, align 4
  %idxprom239 = zext i32 %155 to i64
  %arrayidx240 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i32 0, i64 %idxprom239
  %156 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx240, align 8
  %call241 = call i32 @dead_or_set_p(%struct.rtx_def* %153, %struct.rtx_def* %156)
  %tobool242 = icmp ne i32 %call241, 0
  br i1 %tobool242, label %if.then.251, label %lor.lhs.false.243

lor.lhs.false.243:                                ; preds = %land.lhs.true.235
  %157 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %fld244 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %157, i32 0, i32 1
  %arrayidx245 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld244, i32 0, i64 0
  %rtuint246 = bitcast %union.rtunion_def* %arrayidx245 to i32*
  %158 = load i32, i32* %rtuint246, align 4
  %idxprom247 = zext i32 %158 to i64
  %arrayidx248 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i32 0, i64 %idxprom247
  %159 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx248, align 8
  %160 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8
  %call249 = call i32 @rtx_equal_p(%struct.rtx_def* %159, %struct.rtx_def* %160)
  %tobool250 = icmp ne i32 %call249, 0
  br i1 %tobool250, label %if.then.251, label %if.end.255

if.then.251:                                      ; preds = %lor.lhs.false.243, %land.lhs.true.235
  %161 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %162 = load i32, i32* %j.addr, align 4
  %163 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %fld252 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %163, i32 0, i32 1
  %arrayidx253 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld252, i32 0, i64 0
  %rtuint254 = bitcast %union.rtunion_def* %arrayidx253 to i32*
  %164 = load i32, i32* %rtuint254, align 4
  call void @delete_output_reload(%struct.rtx_def* %161, i32 %162, i32 %164)
  br label %if.end.255

if.end.255:                                       ; preds = %if.then.251, %lor.lhs.false.243, %land.lhs.true.230, %land.lhs.true.223, %land.lhs.true.217, %land.lhs.true.212, %if.end.206
  store i32 1, i32* %special, align 4
  %165 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %166 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %167 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %out256 = getelementptr inbounds %struct.reload, %struct.reload* %167, i32 0, i32 1
  %168 = load %struct.rtx_def*, %struct.rtx_def** %out256, align 8
  %169 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %inc = getelementptr inbounds %struct.reload, %struct.reload* %169, i32 0, i32 7
  %170 = load i32, i32* %inc, align 4
  %call257 = call %struct.rtx_def* @inc_for_reload(%struct.rtx_def* %165, %struct.rtx_def* %166, %struct.rtx_def* %168, i32 %170)
  %171 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %fld258 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %171, i32 0, i32 1
  %arrayidx259 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld258, i32 0, i64 0
  %rtuint260 = bitcast %union.rtunion_def* %arrayidx259 to i32*
  %172 = load i32, i32* %rtuint260, align 4
  %idxprom261 = zext i32 %172 to i64
  %arrayidx262 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @new_spill_reg_store, i32 0, i64 %idxprom261
  store %struct.rtx_def* %call257, %struct.rtx_def** %arrayidx262, align 8
  br label %if.end.456

if.else.263:                                      ; preds = %land.lhs.true.194, %sw.epilog
  %173 = load i32, i32* @optimize, align 4
  %tobool264 = icmp ne i32 %173, 0
  br i1 %tobool264, label %land.lhs.true.265, label %if.end.455

land.lhs.true.265:                                ; preds = %if.else.263
  %174 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8
  %175 = bitcast %struct.rtx_def* %174 to i32*
  %bf.load266 = load i32, i32* %175, align 8
  %bf.clear267 = and i32 %bf.load266, 65535
  %cmp268 = icmp eq i32 %bf.clear267, 61
  br i1 %cmp268, label %land.lhs.true.270, label %if.end.455

land.lhs.true.270:                                ; preds = %land.lhs.true.265
  %176 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8
  %fld271 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %176, i32 0, i32 1
  %arrayidx272 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld271, i32 0, i64 0
  %rtuint273 = bitcast %union.rtunion_def* %arrayidx272 to i32*
  %177 = load i32, i32* %rtuint273, align 4
  %cmp274 = icmp uge i32 %177, 53
  br i1 %cmp274, label %land.lhs.true.276, label %if.end.455

land.lhs.true.276:                                ; preds = %land.lhs.true.270
  %178 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %179 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8
  %call277 = call i32 @dead_or_set_p(%struct.rtx_def* %178, %struct.rtx_def* %179)
  %tobool278 = icmp ne i32 %call277, 0
  br i1 %tobool278, label %land.lhs.true.279, label %if.end.455

land.lhs.true.279:                                ; preds = %land.lhs.true.276
  %180 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %call280 = call i32 @conflicts_with_override(%struct.rtx_def* %180)
  %tobool281 = icmp ne i32 %call280, 0
  br i1 %tobool281, label %if.end.455, label %land.lhs.true.282

land.lhs.true.282:                                ; preds = %land.lhs.true.279
  %181 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %fld283 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %181, i32 0, i32 1
  %arrayidx284 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld283, i32 0, i64 0
  %rtuint285 = bitcast %union.rtunion_def* %arrayidx284 to i32*
  %182 = load i32, i32* %rtuint285, align 4
  %183 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %mode286 = getelementptr inbounds %struct.reload, %struct.reload* %183, i32 0, i32 5
  %184 = load i32, i32* %mode286, align 4
  %185 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %opnum287 = getelementptr inbounds %struct.reload, %struct.reload* %185, i32 0, i32 12
  %186 = load i32, i32* %opnum287, align 4
  %187 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %when_needed288 = getelementptr inbounds %struct.reload, %struct.reload* %187, i32 0, i32 17
  %188 = load i32, i32* %when_needed288, align 4
  %189 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8
  %190 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %out289 = getelementptr inbounds %struct.reload, %struct.reload* %190, i32 0, i32 1
  %191 = load %struct.rtx_def*, %struct.rtx_def** %out289, align 8
  %192 = load i32, i32* %j.addr, align 4
  %call290 = call i32 @free_for_value_p(i32 %182, i32 %184, i32 %186, i32 %188, %struct.rtx_def* %189, %struct.rtx_def* %191, i32 %192, i32 0)
  %tobool291 = icmp ne i32 %call290, 0
  br i1 %tobool291, label %if.then.292, label %if.end.455

if.then.292:                                      ; preds = %land.lhs.true.282
  %193 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld293 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %193, i32 0, i32 1
  %arrayidx294 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld293, i32 0, i64 1
  %rtx295 = bitcast %union.rtunion_def* %arrayidx294 to %struct.rtx_def**
  %194 = load %struct.rtx_def*, %struct.rtx_def** %rtx295, align 8
  store %struct.rtx_def* %194, %struct.rtx_def** %temp, align 8
  br label %while.cond.296

while.cond.296:                                   ; preds = %while.body.304, %if.then.292
  %195 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %tobool297 = icmp ne %struct.rtx_def* %195, null
  br i1 %tobool297, label %land.rhs.298, label %land.end.303

land.rhs.298:                                     ; preds = %while.cond.296
  %196 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %197 = bitcast %struct.rtx_def* %196 to i32*
  %bf.load299 = load i32, i32* %197, align 8
  %bf.clear300 = and i32 %bf.load299, 65535
  %cmp301 = icmp eq i32 %bf.clear300, 37
  br label %land.end.303

land.end.303:                                     ; preds = %land.rhs.298, %while.cond.296
  %198 = phi i1 [ false, %while.cond.296 ], [ %cmp301, %land.rhs.298 ]
  br i1 %198, label %while.body.304, label %while.end.308

while.body.304:                                   ; preds = %land.end.303
  %199 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld305 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %199, i32 0, i32 1
  %arrayidx306 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld305, i32 0, i64 1
  %rtx307 = bitcast %union.rtunion_def* %arrayidx306 to %struct.rtx_def**
  %200 = load %struct.rtx_def*, %struct.rtx_def** %rtx307, align 8
  store %struct.rtx_def* %200, %struct.rtx_def** %temp, align 8
  br label %while.cond.296

while.end.308:                                    ; preds = %land.end.303
  %201 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %tobool309 = icmp ne %struct.rtx_def* %201, null
  br i1 %tobool309, label %land.lhs.true.310, label %if.end.454

land.lhs.true.310:                                ; preds = %while.end.308
  %202 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %203 = bitcast %struct.rtx_def* %202 to i32*
  %bf.load311 = load i32, i32* %203, align 8
  %bf.clear312 = and i32 %bf.load311, 65535
  %cmp313 = icmp eq i32 %bf.clear312, 32
  br i1 %cmp313, label %land.lhs.true.315, label %if.end.454

land.lhs.true.315:                                ; preds = %land.lhs.true.310
  %204 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld316 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %204, i32 0, i32 1
  %arrayidx317 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld316, i32 0, i64 3
  %rtx318 = bitcast %union.rtunion_def* %arrayidx317 to %struct.rtx_def**
  %205 = load %struct.rtx_def*, %struct.rtx_def** %rtx318, align 8
  %206 = bitcast %struct.rtx_def* %205 to i32*
  %bf.load319 = load i32, i32* %206, align 8
  %bf.clear320 = and i32 %bf.load319, 65535
  %cmp321 = icmp eq i32 %bf.clear320, 47
  br i1 %cmp321, label %land.lhs.true.323, label %if.end.454

land.lhs.true.323:                                ; preds = %land.lhs.true.315
  %207 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld324 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %207, i32 0, i32 1
  %arrayidx325 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld324, i32 0, i64 3
  %rtx326 = bitcast %union.rtunion_def* %arrayidx325 to %struct.rtx_def**
  %208 = load %struct.rtx_def*, %struct.rtx_def** %rtx326, align 8
  %fld327 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %208, i32 0, i32 1
  %arrayidx328 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld327, i32 0, i64 0
  %rtx329 = bitcast %union.rtunion_def* %arrayidx328 to %struct.rtx_def**
  %209 = load %struct.rtx_def*, %struct.rtx_def** %rtx329, align 8
  %210 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8
  %cmp330 = icmp eq %struct.rtx_def* %209, %210
  br i1 %cmp330, label %land.lhs.true.332, label %if.end.454

land.lhs.true.332:                                ; preds = %land.lhs.true.323
  %211 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld333 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %211, i32 0, i32 1
  %arrayidx334 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld333, i32 0, i64 3
  %rtx335 = bitcast %union.rtunion_def* %arrayidx334 to %struct.rtx_def**
  %212 = load %struct.rtx_def*, %struct.rtx_def** %rtx335, align 8
  %call336 = call i32 @asm_noperands(%struct.rtx_def* %212)
  %cmp337 = icmp slt i32 %call336, 0
  br i1 %cmp337, label %land.lhs.true.339, label %if.end.454

land.lhs.true.339:                                ; preds = %land.lhs.true.332
  %213 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld340 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %213, i32 0, i32 1
  %arrayidx341 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld340, i32 0, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx341 to i32*
  %214 = load i32, i32* %rtint, align 4
  %cmp342 = icmp sge i32 %214, 0
  br i1 %cmp342, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.339
  %215 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld344 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %215, i32 0, i32 1
  %arrayidx345 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld344, i32 0, i64 4
  %rtint346 = bitcast %union.rtunion_def* %arrayidx345 to i32*
  %216 = load i32, i32* %rtint346, align 4
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.339
  %217 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %call347 = call i32 @recog_memoized_1(%struct.rtx_def* %217)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %216, %cond.true ], [ %call347, %cond.false ]
  %idxprom348 = sext i32 %cond to i64
  %arrayidx349 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom348
  %operand = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx349, i32 0, i32 3
  %218 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8
  %arrayidx350 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %218, i64 0
  %constraint = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx350, i32 0, i32 1
  %219 = load i8*, i8** %constraint, align 8
  %220 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %call351 = call i32 @constraint_accepts_reg_p(i8* %219, %struct.rtx_def* %220)
  %tobool352 = icmp ne i32 %call351, 0
  br i1 %tobool352, label %land.lhs.true.353, label %if.end.454

land.lhs.true.353:                                ; preds = %cond.end
  %221 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld354 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %221, i32 0, i32 1
  %arrayidx355 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld354, i32 0, i64 3
  %rtx356 = bitcast %union.rtunion_def* %arrayidx355 to %struct.rtx_def**
  %222 = load %struct.rtx_def*, %struct.rtx_def** %rtx356, align 8
  %223 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8
  %call357 = call i32 @count_occurrences(%struct.rtx_def* %222, %struct.rtx_def* %223, i32 0)
  %cmp358 = icmp eq i32 %call357, 1
  br i1 %cmp358, label %land.lhs.true.360, label %if.end.454

land.lhs.true.360:                                ; preds = %land.lhs.true.353
  %224 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8
  %225 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld361 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %225, i32 0, i32 1
  %arrayidx362 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld361, i32 0, i64 3
  %rtx363 = bitcast %union.rtunion_def* %arrayidx362 to %struct.rtx_def**
  %226 = load %struct.rtx_def*, %struct.rtx_def** %rtx363, align 8
  %fld364 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %226, i32 0, i32 1
  %arrayidx365 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld364, i32 0, i64 1
  %rtx366 = bitcast %union.rtunion_def* %arrayidx365 to %struct.rtx_def**
  %227 = load %struct.rtx_def*, %struct.rtx_def** %rtx366, align 8
  %call367 = call i32 @reg_mentioned_p(%struct.rtx_def* %224, %struct.rtx_def* %227)
  %tobool368 = icmp ne i32 %call367, 0
  br i1 %tobool368, label %if.end.454, label %if.then.369

if.then.369:                                      ; preds = %land.lhs.true.360
  %228 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %229 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld370 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %229, i32 0, i32 1
  %arrayidx371 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld370, i32 0, i64 3
  %rtx372 = bitcast %union.rtunion_def* %arrayidx371 to %struct.rtx_def**
  %230 = load %struct.rtx_def*, %struct.rtx_def** %rtx372, align 8
  %fld373 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %230, i32 0, i32 1
  %arrayidx374 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld373, i32 0, i64 0
  %rtx375 = bitcast %union.rtunion_def* %arrayidx374 to %struct.rtx_def**
  store %struct.rtx_def* %228, %struct.rtx_def** %rtx375, align 8
  %231 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld376 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %231, i32 0, i32 1
  %arrayidx377 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld376, i32 0, i64 3
  %rtx378 = bitcast %union.rtunion_def* %arrayidx377 to %struct.rtx_def**
  %232 = load %struct.rtx_def*, %struct.rtx_def** %rtx378, align 8
  %fld379 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %232, i32 0, i32 1
  %arrayidx380 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld379, i32 0, i64 1
  %rtx381 = bitcast %union.rtunion_def* %arrayidx380 to %struct.rtx_def**
  %233 = load %struct.rtx_def*, %struct.rtx_def** %rtx381, align 8
  %234 = bitcast %struct.rtx_def* %233 to i32*
  %bf.load382 = load i32, i32* %234, align 8
  %bf.clear383 = and i32 %bf.load382, 65535
  %cmp384 = icmp eq i32 %bf.clear383, 61
  br i1 %cmp384, label %land.lhs.true.386, label %if.end.421

land.lhs.true.386:                                ; preds = %if.then.369
  %235 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld387 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %235, i32 0, i32 1
  %arrayidx388 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld387, i32 0, i64 3
  %rtx389 = bitcast %union.rtunion_def* %arrayidx388 to %struct.rtx_def**
  %236 = load %struct.rtx_def*, %struct.rtx_def** %rtx389, align 8
  %fld390 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %236, i32 0, i32 1
  %arrayidx391 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld390, i32 0, i64 1
  %rtx392 = bitcast %union.rtunion_def* %arrayidx391 to %struct.rtx_def**
  %237 = load %struct.rtx_def*, %struct.rtx_def** %rtx392, align 8
  %fld393 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %237, i32 0, i32 1
  %arrayidx394 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld393, i32 0, i64 0
  %rtuint395 = bitcast %union.rtunion_def* %arrayidx394 to i32*
  %238 = load i32, i32* %rtuint395, align 4
  %cmp396 = icmp ult i32 %238, 53
  br i1 %cmp396, label %if.then.398, label %if.end.421

if.then.398:                                      ; preds = %land.lhs.true.386
  %239 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld399 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %239, i32 0, i32 1
  %arrayidx400 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld399, i32 0, i64 3
  %rtx401 = bitcast %union.rtunion_def* %arrayidx400 to %struct.rtx_def**
  %240 = load %struct.rtx_def*, %struct.rtx_def** %rtx401, align 8
  %fld402 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %240, i32 0, i32 1
  %arrayidx403 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld402, i32 0, i64 1
  %rtx404 = bitcast %union.rtunion_def* %arrayidx403 to %struct.rtx_def**
  %241 = load %struct.rtx_def*, %struct.rtx_def** %rtx404, align 8
  %fld405 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %241, i32 0, i32 1
  %arrayidx406 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld405, i32 0, i64 0
  %rtuint407 = bitcast %union.rtunion_def* %arrayidx406 to i32*
  %242 = load i32, i32* %rtuint407, align 4
  %idxprom408 = zext i32 %242 to i64
  %arrayidx409 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i32 0, i64 %idxprom408
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx409, align 8
  %243 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld410 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %243, i32 0, i32 1
  %arrayidx411 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld410, i32 0, i64 3
  %rtx412 = bitcast %union.rtunion_def* %arrayidx411 to %struct.rtx_def**
  %244 = load %struct.rtx_def*, %struct.rtx_def** %rtx412, align 8
  %fld413 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %244, i32 0, i32 1
  %arrayidx414 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld413, i32 0, i64 1
  %rtx415 = bitcast %union.rtunion_def* %arrayidx414 to %struct.rtx_def**
  %245 = load %struct.rtx_def*, %struct.rtx_def** %rtx415, align 8
  %fld416 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %245, i32 0, i32 1
  %arrayidx417 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld416, i32 0, i64 0
  %rtuint418 = bitcast %union.rtunion_def* %arrayidx417 to i32*
  %246 = load i32, i32* %rtuint418, align 4
  %idxprom419 = zext i32 %246 to i64
  %arrayidx420 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i32 0, i64 %idxprom419
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx420, align 8
  br label %if.end.421

if.end.421:                                       ; preds = %if.then.398, %land.lhs.true.386, %if.then.369
  %247 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8
  %fld422 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %247, i32 0, i32 1
  %arrayidx423 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld422, i32 0, i64 0
  %rtuint424 = bitcast %union.rtunion_def* %arrayidx423 to i32*
  %248 = load i32, i32* %rtuint424, align 4
  %idxprom425 = zext i32 %248 to i64
  %249 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %249, i32 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx426 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg, i32 0, i64 %idxprom425
  %250 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx426, align 8
  %deaths = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %250, i32 0, i32 6
  %251 = load i32, i32* %deaths, align 4
  %cmp427 = icmp eq i32 %251, 1
  br i1 %cmp427, label %land.lhs.true.429, label %if.end.453

land.lhs.true.429:                                ; preds = %if.end.421
  %252 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8
  %fld430 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %252, i32 0, i32 1
  %arrayidx431 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld430, i32 0, i64 0
  %rtuint432 = bitcast %union.rtunion_def* %arrayidx431 to i32*
  %253 = load i32, i32* %rtuint432, align 4
  %idxprom433 = zext i32 %253 to i64
  %254 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data434 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %254, i32 0, i32 4
  %reg435 = bitcast %union.varray_data_tag* %data434 to [1 x %struct.reg_info_def*]*
  %arrayidx436 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg435, i32 0, i64 %idxprom433
  %255 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx436, align 8
  %sets = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %255, i32 0, i32 3
  %256 = load i32, i32* %sets, align 4
  %cmp437 = icmp eq i32 %256, 1
  br i1 %cmp437, label %if.then.439, label %if.end.453

if.then.439:                                      ; preds = %land.lhs.true.429
  %257 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %reg_rtx440 = getelementptr inbounds %struct.reload, %struct.reload* %257, i32 0, i32 11
  %258 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx440, align 8
  %fld441 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %258, i32 0, i32 1
  %arrayidx442 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld441, i32 0, i64 0
  %rtuint443 = bitcast %union.rtunion_def* %arrayidx442 to i32*
  %259 = load i32, i32* %rtuint443, align 4
  %conv444 = trunc i32 %259 to i16
  %260 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8
  %fld445 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %260, i32 0, i32 1
  %arrayidx446 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld445, i32 0, i64 0
  %rtuint447 = bitcast %union.rtunion_def* %arrayidx446 to i32*
  %261 = load i32, i32* %rtuint447, align 4
  %idxprom448 = zext i32 %261 to i64
  %262 = load i16*, i16** @reg_renumber, align 8
  %arrayidx449 = getelementptr inbounds i16, i16* %262, i64 %idxprom448
  store i16 %conv444, i16* %arrayidx449, align 2
  %263 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8
  %fld450 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %263, i32 0, i32 1
  %arrayidx451 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld450, i32 0, i64 0
  %rtuint452 = bitcast %union.rtunion_def* %arrayidx451 to i32*
  %264 = load i32, i32* %rtuint452, align 4
  call void @alter_reg(i32 %264, i32 -1)
  br label %if.end.453

if.end.453:                                       ; preds = %if.then.439, %land.lhs.true.429, %if.end.421
  store i32 1, i32* %special, align 4
  br label %if.end.454

if.end.454:                                       ; preds = %if.end.453, %land.lhs.true.360, %land.lhs.true.353, %cond.end, %land.lhs.true.332, %land.lhs.true.323, %land.lhs.true.315, %land.lhs.true.310, %while.end.308
  br label %if.end.455

if.end.455:                                       ; preds = %if.end.454, %land.lhs.true.282, %land.lhs.true.279, %land.lhs.true.276, %land.lhs.true.270, %land.lhs.true.265, %if.else.263
  br label %if.end.456

if.end.456:                                       ; preds = %if.end.455, %if.end.255
  %265 = load i32, i32* %special, align 4
  %tobool457 = icmp ne i32 %265, 0
  br i1 %tobool457, label %if.end.587, label %land.lhs.true.458

land.lhs.true.458:                                ; preds = %if.end.456
  %266 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %267 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %call459 = call i32 @rtx_equal_p(%struct.rtx_def* %266, %struct.rtx_def* %267)
  %tobool460 = icmp ne i32 %call459, 0
  br i1 %tobool460, label %if.end.587, label %if.then.461

if.then.461:                                      ; preds = %land.lhs.true.458
  %268 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  store %struct.rtx_def* %268, %struct.rtx_def** %real_oldequiv, align 8
  %269 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %270 = bitcast %struct.rtx_def* %269 to i32*
  %bf.load462 = load i32, i32* %270, align 8
  %bf.clear463 = and i32 %bf.load462, 65535
  %cmp464 = icmp eq i32 %bf.clear463, 61
  br i1 %cmp464, label %land.lhs.true.466, label %lor.lhs.false.488

land.lhs.true.466:                                ; preds = %if.then.461
  %271 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %fld467 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %271, i32 0, i32 1
  %arrayidx468 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld467, i32 0, i64 0
  %rtuint469 = bitcast %union.rtunion_def* %arrayidx468 to i32*
  %272 = load i32, i32* %rtuint469, align 4
  %cmp470 = icmp uge i32 %272, 53
  br i1 %cmp470, label %land.lhs.true.472, label %lor.lhs.false.488

land.lhs.true.472:                                ; preds = %land.lhs.true.466
  %273 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %fld473 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %273, i32 0, i32 1
  %arrayidx474 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld473, i32 0, i64 0
  %rtuint475 = bitcast %union.rtunion_def* %arrayidx474 to i32*
  %274 = load i32, i32* %rtuint475, align 4
  %idxprom476 = zext i32 %274 to i64
  %275 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx477 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %275, i64 %idxprom476
  %276 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx477, align 8
  %cmp478 = icmp ne %struct.rtx_def* %276, null
  br i1 %cmp478, label %if.then.581, label %lor.lhs.false.480

lor.lhs.false.480:                                ; preds = %land.lhs.true.472
  %277 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %fld481 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %277, i32 0, i32 1
  %arrayidx482 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld481, i32 0, i64 0
  %rtuint483 = bitcast %union.rtunion_def* %arrayidx482 to i32*
  %278 = load i32, i32* %rtuint483, align 4
  %idxprom484 = zext i32 %278 to i64
  %279 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx485 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %279, i64 %idxprom484
  %280 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx485, align 8
  %cmp486 = icmp ne %struct.rtx_def* %280, null
  br i1 %cmp486, label %if.then.581, label %lor.lhs.false.488

lor.lhs.false.488:                                ; preds = %lor.lhs.false.480, %land.lhs.true.466, %if.then.461
  %281 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %282 = bitcast %struct.rtx_def* %281 to i32*
  %bf.load489 = load i32, i32* %282, align 8
  %bf.clear490 = and i32 %bf.load489, 65535
  %cmp491 = icmp eq i32 %bf.clear490, 63
  br i1 %cmp491, label %land.lhs.true.493, label %lor.lhs.false.532

land.lhs.true.493:                                ; preds = %lor.lhs.false.488
  %283 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %fld494 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %283, i32 0, i32 1
  %arrayidx495 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld494, i32 0, i64 0
  %rtx496 = bitcast %union.rtunion_def* %arrayidx495 to %struct.rtx_def**
  %284 = load %struct.rtx_def*, %struct.rtx_def** %rtx496, align 8
  %285 = bitcast %struct.rtx_def* %284 to i32*
  %bf.load497 = load i32, i32* %285, align 8
  %bf.clear498 = and i32 %bf.load497, 65535
  %cmp499 = icmp eq i32 %bf.clear498, 61
  br i1 %cmp499, label %land.lhs.true.501, label %lor.lhs.false.532

land.lhs.true.501:                                ; preds = %land.lhs.true.493
  %286 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %fld502 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %286, i32 0, i32 1
  %arrayidx503 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld502, i32 0, i64 0
  %rtx504 = bitcast %union.rtunion_def* %arrayidx503 to %struct.rtx_def**
  %287 = load %struct.rtx_def*, %struct.rtx_def** %rtx504, align 8
  %fld505 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %287, i32 0, i32 1
  %arrayidx506 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld505, i32 0, i64 0
  %rtuint507 = bitcast %union.rtunion_def* %arrayidx506 to i32*
  %288 = load i32, i32* %rtuint507, align 4
  %cmp508 = icmp uge i32 %288, 53
  br i1 %cmp508, label %land.lhs.true.510, label %lor.lhs.false.532

land.lhs.true.510:                                ; preds = %land.lhs.true.501
  %289 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %fld511 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %289, i32 0, i32 1
  %arrayidx512 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld511, i32 0, i64 0
  %rtx513 = bitcast %union.rtunion_def* %arrayidx512 to %struct.rtx_def**
  %290 = load %struct.rtx_def*, %struct.rtx_def** %rtx513, align 8
  %fld514 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %290, i32 0, i32 1
  %arrayidx515 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld514, i32 0, i64 0
  %rtuint516 = bitcast %union.rtunion_def* %arrayidx515 to i32*
  %291 = load i32, i32* %rtuint516, align 4
  %idxprom517 = zext i32 %291 to i64
  %292 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx518 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %292, i64 %idxprom517
  %293 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx518, align 8
  %cmp519 = icmp ne %struct.rtx_def* %293, null
  br i1 %cmp519, label %if.then.581, label %lor.lhs.false.521

lor.lhs.false.521:                                ; preds = %land.lhs.true.510
  %294 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %fld522 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %294, i32 0, i32 1
  %arrayidx523 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld522, i32 0, i64 0
  %rtx524 = bitcast %union.rtunion_def* %arrayidx523 to %struct.rtx_def**
  %295 = load %struct.rtx_def*, %struct.rtx_def** %rtx524, align 8
  %fld525 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %295, i32 0, i32 1
  %arrayidx526 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld525, i32 0, i64 0
  %rtuint527 = bitcast %union.rtunion_def* %arrayidx526 to i32*
  %296 = load i32, i32* %rtuint527, align 4
  %idxprom528 = zext i32 %296 to i64
  %297 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx529 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %297, i64 %idxprom528
  %298 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx529, align 8
  %cmp530 = icmp ne %struct.rtx_def* %298, null
  br i1 %cmp530, label %if.then.581, label %lor.lhs.false.532

lor.lhs.false.532:                                ; preds = %lor.lhs.false.521, %land.lhs.true.501, %land.lhs.true.493, %lor.lhs.false.488
  %299 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %300 = bitcast %struct.rtx_def* %299 to i32*
  %bf.load533 = load i32, i32* %300, align 8
  %bf.clear534 = and i32 %bf.load533, 65535
  %cmp535 = icmp eq i32 %bf.clear534, 67
  br i1 %cmp535, label %land.lhs.true.572, label %lor.lhs.false.537

lor.lhs.false.537:                                ; preds = %lor.lhs.false.532
  %301 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %302 = bitcast %struct.rtx_def* %301 to i32*
  %bf.load538 = load i32, i32* %302, align 8
  %bf.clear539 = and i32 %bf.load538, 65535
  %cmp540 = icmp eq i32 %bf.clear539, 68
  br i1 %cmp540, label %land.lhs.true.572, label %lor.lhs.false.542

lor.lhs.false.542:                                ; preds = %lor.lhs.false.537
  %303 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %304 = bitcast %struct.rtx_def* %303 to i32*
  %bf.load543 = load i32, i32* %304, align 8
  %bf.clear544 = and i32 %bf.load543, 65535
  %cmp545 = icmp eq i32 %bf.clear544, 54
  br i1 %cmp545, label %land.lhs.true.572, label %lor.lhs.false.547

lor.lhs.false.547:                                ; preds = %lor.lhs.false.542
  %305 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %306 = bitcast %struct.rtx_def* %305 to i32*
  %bf.load548 = load i32, i32* %306, align 8
  %bf.clear549 = and i32 %bf.load548, 65535
  %cmp550 = icmp eq i32 %bf.clear549, 55
  br i1 %cmp550, label %land.lhs.true.572, label %lor.lhs.false.552

lor.lhs.false.552:                                ; preds = %lor.lhs.false.547
  %307 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %308 = bitcast %struct.rtx_def* %307 to i32*
  %bf.load553 = load i32, i32* %308, align 8
  %bf.clear554 = and i32 %bf.load553, 65535
  %cmp555 = icmp eq i32 %bf.clear554, 58
  br i1 %cmp555, label %land.lhs.true.572, label %lor.lhs.false.557

lor.lhs.false.557:                                ; preds = %lor.lhs.false.552
  %309 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %310 = bitcast %struct.rtx_def* %309 to i32*
  %bf.load558 = load i32, i32* %310, align 8
  %bf.clear559 = and i32 %bf.load558, 65535
  %cmp560 = icmp eq i32 %bf.clear559, 134
  br i1 %cmp560, label %land.lhs.true.572, label %lor.lhs.false.562

lor.lhs.false.562:                                ; preds = %lor.lhs.false.557
  %311 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %312 = bitcast %struct.rtx_def* %311 to i32*
  %bf.load563 = load i32, i32* %312, align 8
  %bf.clear564 = and i32 %bf.load563, 65535
  %cmp565 = icmp eq i32 %bf.clear564, 56
  br i1 %cmp565, label %land.lhs.true.572, label %lor.lhs.false.567

lor.lhs.false.567:                                ; preds = %lor.lhs.false.562
  %313 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %314 = bitcast %struct.rtx_def* %313 to i32*
  %bf.load568 = load i32, i32* %314, align 8
  %bf.clear569 = and i32 %bf.load568, 65535
  %cmp570 = icmp eq i32 %bf.clear569, 140
  br i1 %cmp570, label %land.lhs.true.572, label %if.end.583

land.lhs.true.572:                                ; preds = %lor.lhs.false.567, %lor.lhs.false.562, %lor.lhs.false.557, %lor.lhs.false.552, %lor.lhs.false.547, %lor.lhs.false.542, %lor.lhs.false.537, %lor.lhs.false.532
  %315 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %316 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %fld573 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %316, i32 0, i32 1
  %arrayidx574 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld573, i32 0, i64 0
  %rtuint575 = bitcast %union.rtunion_def* %arrayidx574 to i32*
  %317 = load i32, i32* %rtuint575, align 4
  %idxprom576 = zext i32 %317 to i64
  %arrayidx577 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i32 0, i64 %idxprom576
  %318 = load i32, i32* %arrayidx577, align 4
  %call578 = call i32 @ix86_preferred_reload_class(%struct.rtx_def* %315, i32 %318)
  %cmp579 = icmp eq i32 %call578, 0
  br i1 %cmp579, label %if.then.581, label %if.end.583

if.then.581:                                      ; preds = %land.lhs.true.572, %lor.lhs.false.521, %land.lhs.true.510, %lor.lhs.false.480, %land.lhs.true.472
  %319 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %in582 = getelementptr inbounds %struct.reload, %struct.reload* %319, i32 0, i32 0
  %320 = load %struct.rtx_def*, %struct.rtx_def** %in582, align 8
  store %struct.rtx_def* %320, %struct.rtx_def** %real_oldequiv, align 8
  br label %if.end.583

if.end.583:                                       ; preds = %if.then.581, %land.lhs.true.572, %lor.lhs.false.567
  %321 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %322 = load %struct.rtx_def*, %struct.rtx_def** %real_oldequiv, align 8
  %323 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %opnum584 = getelementptr inbounds %struct.reload, %struct.reload* %323, i32 0, i32 12
  %324 = load i32, i32* %opnum584, align 4
  %325 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %when_needed585 = getelementptr inbounds %struct.reload, %struct.reload* %325, i32 0, i32 17
  %326 = load i32, i32* %when_needed585, align 4
  %call586 = call %struct.rtx_def* @gen_reload(%struct.rtx_def* %321, %struct.rtx_def* %322, i32 %324, i32 %326)
  br label %if.end.587

if.end.587:                                       ; preds = %if.end.583, %land.lhs.true.458, %if.end.456
  %327 = load i32, i32* @flag_non_call_exceptions, align 4
  %tobool588 = icmp ne i32 %327, 0
  br i1 %tobool588, label %if.then.589, label %if.end.591

if.then.589:                                      ; preds = %if.end.587
  %328 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call590 = call %struct.rtx_def* @get_insns()
  call void @copy_eh_notes(%struct.rtx_def* %328, %struct.rtx_def* %call590)
  br label %if.end.591

if.end.591:                                       ; preds = %if.then.589, %if.end.587
  %call592 = call %struct.rtx_def* @get_insns()
  %329 = load %struct.rtx_def**, %struct.rtx_def*** %where, align 8
  store %struct.rtx_def* %call592, %struct.rtx_def** %329, align 8
  call void @end_sequence()
  %330 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv_reg, align 8
  %tobool593 = icmp ne %struct.rtx_def* %330, null
  br i1 %tobool593, label %if.then.594, label %if.end.597

if.then.594:                                      ; preds = %if.end.591
  %331 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8
  %332 = load i32, i32* %j.addr, align 4
  %idxprom595 = sext i32 %332 to i64
  %arrayidx596 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i32 0, i64 %idxprom595
  store %struct.rtx_def* %331, %struct.rtx_def** %arrayidx596, align 8
  br label %if.end.597

if.end.597:                                       ; preds = %if.then.594, %if.end.591
  ret void
}

declare i32 @count_occurrences(%struct.rtx_def*, %struct.rtx_def*, i32) #1

declare i32 @dead_or_set_p(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @delete_output_reload(%struct.rtx_def* %insn, i32 %j, i32 %last_reload_reg) #0 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %j.addr = alloca i32, align 4
  %last_reload_reg.addr = alloca i32, align 4
  %output_reload_insn = alloca %struct.rtx_def*, align 8
  %reg = alloca %struct.rtx_def*, align 8
  %k = alloca i32, align 4
  %n_occurrences = alloca i32, align 4
  %n_inherited = alloca i32, align 4
  %i1 = alloca %struct.rtx_def*, align 8
  %substed = alloca %struct.rtx_def*, align 8
  %reg2 = alloca %struct.rtx_def*, align 8
  %i2 = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %set368 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store i32 %j, i32* %j.addr, align 4
  store i32 %last_reload_reg, i32* %last_reload_reg.addr, align 4
  %0 = load i32, i32* %last_reload_reg.addr, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i32 0, i64 %idxprom
  %1 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %output_reload_insn, align 8
  %2 = load i32, i32* %last_reload_reg.addr, align 4
  %idxprom1 = sext i32 %2 to i64
  %arrayidx2 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i32 0, i64 %idxprom1
  %3 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %reg, align 8
  store i32 0, i32* %n_inherited, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load = load i32, i32* %5, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 63
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %6 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %7, %struct.rtx_def** %reg, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %8 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx5 to i32*
  %9 = load i32, i32* %rtuint, align 4
  %idxprom6 = zext i32 %9 to i64
  %10 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx7 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %10, i64 %idxprom6
  %11 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx7, align 8
  store %struct.rtx_def* %11, %struct.rtx_def** %substed, align 8
  %12 = load i32, i32* @n_reloads, align 4
  %sub = sub nsw i32 %12, 1
  store i32 %sub, i32* %k, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.end
  %13 = load i32, i32* %k, align 4
  %cmp8 = icmp sge i32 %13, 0
  br i1 %cmp8, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %14 = load i32, i32* %k, align 4
  %idxprom9 = sext i32 %14 to i64
  %arrayidx10 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom9
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx10, i32 0, i32 0
  %15 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  store %struct.rtx_def* %15, %struct.rtx_def** %reg2, align 8
  %16 = load %struct.rtx_def*, %struct.rtx_def** %reg2, align 8
  %tobool = icmp ne %struct.rtx_def* %16, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  br label %for.inc

if.end:                                           ; preds = %for.body
  %17 = load %struct.rtx_def*, %struct.rtx_def** %reg2, align 8
  %18 = bitcast %struct.rtx_def* %17 to i32*
  %bf.load11 = load i32, i32* %18, align 8
  %bf.clear12 = and i32 %bf.load11, 65535
  %cmp13 = icmp eq i32 %bf.clear12, 66
  br i1 %cmp13, label %if.then.17, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %19 = load i32, i32* %k, align 4
  %idxprom14 = sext i32 %19 to i64
  %arrayidx15 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i32 0, i64 %idxprom14
  %20 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx15, align 8
  %tobool16 = icmp ne %struct.rtx_def* %20, null
  br i1 %tobool16, label %if.then.17, label %if.end.20

if.then.17:                                       ; preds = %lor.lhs.false, %if.end
  %21 = load i32, i32* %k, align 4
  %idxprom18 = sext i32 %21 to i64
  %arrayidx19 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom18
  %in_reg = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx19, i32 0, i32 8
  %22 = load %struct.rtx_def*, %struct.rtx_def** %in_reg, align 8
  store %struct.rtx_def* %22, %struct.rtx_def** %reg2, align 8
  br label %if.end.20

if.end.20:                                        ; preds = %if.then.17, %lor.lhs.false
  br label %while.cond.21

while.cond.21:                                    ; preds = %while.body.25, %if.end.20
  %23 = load %struct.rtx_def*, %struct.rtx_def** %reg2, align 8
  %24 = bitcast %struct.rtx_def* %23 to i32*
  %bf.load22 = load i32, i32* %24, align 8
  %bf.clear23 = and i32 %bf.load22, 65535
  %cmp24 = icmp eq i32 %bf.clear23, 63
  br i1 %cmp24, label %while.body.25, label %while.end.29

while.body.25:                                    ; preds = %while.cond.21
  %25 = load %struct.rtx_def*, %struct.rtx_def** %reg2, align 8
  %fld26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i32 0, i64 0
  %rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rtx28, align 8
  store %struct.rtx_def* %26, %struct.rtx_def** %reg2, align 8
  br label %while.cond.21

while.end.29:                                     ; preds = %while.cond.21
  %27 = load %struct.rtx_def*, %struct.rtx_def** %reg2, align 8
  %28 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %call = call i32 @rtx_equal_p(%struct.rtx_def* %27, %struct.rtx_def* %28)
  %tobool30 = icmp ne i32 %call, 0
  br i1 %tobool30, label %if.then.31, label %if.end.64

if.then.31:                                       ; preds = %while.end.29
  %29 = load i32, i32* %k, align 4
  %idxprom32 = sext i32 %29 to i64
  %arrayidx33 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i32 0, i64 %idxprom32
  %30 = load i8, i8* %arrayidx33, align 1
  %conv = sext i8 %30 to i32
  %tobool34 = icmp ne i32 %conv, 0
  br i1 %tobool34, label %if.then.42, label %lor.lhs.false.35

lor.lhs.false.35:                                 ; preds = %if.then.31
  %31 = load i32, i32* %k, align 4
  %idxprom36 = sext i32 %31 to i64
  %arrayidx37 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i32 0, i64 %idxprom36
  %32 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx37, align 8
  %tobool38 = icmp ne %struct.rtx_def* %32, null
  br i1 %tobool38, label %if.then.42, label %lor.lhs.false.39

lor.lhs.false.39:                                 ; preds = %lor.lhs.false.35
  %33 = load i32, i32* %k, align 4
  %34 = load i32, i32* %j.addr, align 4
  %cmp40 = icmp eq i32 %33, %34
  br i1 %cmp40, label %if.then.42, label %if.else

if.then.42:                                       ; preds = %lor.lhs.false.39, %lor.lhs.false.35, %if.then.31
  %35 = load i32, i32* %n_inherited, align 4
  %inc = add nsw i32 %35, 1
  store i32 %inc, i32* %n_inherited, align 4
  %36 = load i32, i32* %k, align 4
  %idxprom43 = sext i32 %36 to i64
  %arrayidx44 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom43
  %out_reg = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx44, i32 0, i32 9
  %37 = load %struct.rtx_def*, %struct.rtx_def** %out_reg, align 8
  store %struct.rtx_def* %37, %struct.rtx_def** %reg2, align 8
  %38 = load %struct.rtx_def*, %struct.rtx_def** %reg2, align 8
  %tobool45 = icmp ne %struct.rtx_def* %38, null
  br i1 %tobool45, label %if.end.47, label %if.then.46

if.then.46:                                       ; preds = %if.then.42
  br label %for.inc

if.end.47:                                        ; preds = %if.then.42
  br label %while.cond.48

while.cond.48:                                    ; preds = %while.body.53, %if.end.47
  %39 = load %struct.rtx_def*, %struct.rtx_def** %reg2, align 8
  %40 = bitcast %struct.rtx_def* %39 to i32*
  %bf.load49 = load i32, i32* %40, align 8
  %bf.clear50 = and i32 %bf.load49, 65535
  %cmp51 = icmp eq i32 %bf.clear50, 63
  br i1 %cmp51, label %while.body.53, label %while.end.57

while.body.53:                                    ; preds = %while.cond.48
  %41 = load %struct.rtx_def*, %struct.rtx_def** %reg2, align 8
  %fld54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld54, i32 0, i64 0
  %rtx56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtx_def**
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rtx56, align 8
  store %struct.rtx_def* %42, %struct.rtx_def** %reg2, align 8
  br label %while.cond.48

while.end.57:                                     ; preds = %while.cond.48
  %43 = load %struct.rtx_def*, %struct.rtx_def** %reg2, align 8
  %44 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %call58 = call i32 @rtx_equal_p(%struct.rtx_def* %43, %struct.rtx_def* %44)
  %tobool59 = icmp ne i32 %call58, 0
  br i1 %tobool59, label %if.then.60, label %if.end.62

if.then.60:                                       ; preds = %while.end.57
  %45 = load i32, i32* %n_inherited, align 4
  %inc61 = add nsw i32 %45, 1
  store i32 %inc61, i32* %n_inherited, align 4
  br label %if.end.62

if.end.62:                                        ; preds = %if.then.60, %while.end.57
  br label %if.end.63

if.else:                                          ; preds = %lor.lhs.false.39
  br label %if.end.441

if.end.63:                                        ; preds = %if.end.62
  br label %if.end.64

if.end.64:                                        ; preds = %if.end.63, %while.end.29
  br label %for.inc

for.inc:                                          ; preds = %if.end.64, %if.then.46, %if.then
  %46 = load i32, i32* %k, align 4
  %dec = add nsw i32 %46, -1
  store i32 %dec, i32* %k, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %47 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1
  %arrayidx66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i32 0, i64 3
  %rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rtx67, align 8
  %49 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %call68 = call i32 @count_occurrences(%struct.rtx_def* %48, %struct.rtx_def* %49, i32 0)
  store i32 %call68, i32* %n_occurrences, align 4
  %50 = load %struct.rtx_def*, %struct.rtx_def** %substed, align 8
  %tobool69 = icmp ne %struct.rtx_def* %50, null
  br i1 %tobool69, label %if.then.70, label %if.end.76

if.then.70:                                       ; preds = %for.end
  %51 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i32 0, i64 3
  %rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rtx73, align 8
  %53 = load %struct.rtx_def*, %struct.rtx_def** %substed, align 8
  %call74 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %53, i32 0, %struct.rtx_def* null)
  %call75 = call i32 @count_occurrences(%struct.rtx_def* %52, %struct.rtx_def* %call74, i32 0)
  %54 = load i32, i32* %n_occurrences, align 4
  %add = add nsw i32 %54, %call75
  store i32 %add, i32* %n_occurrences, align 4
  br label %if.end.76

if.end.76:                                        ; preds = %if.then.70, %for.end
  %55 = load i32, i32* %n_occurrences, align 4
  %56 = load i32, i32* %n_inherited, align 4
  %cmp77 = icmp sgt i32 %55, %56
  br i1 %cmp77, label %if.then.79, label %if.end.80

if.then.79:                                       ; preds = %if.end.76
  br label %if.end.441

if.end.80:                                        ; preds = %if.end.76
  %57 = load %struct.rtx_def*, %struct.rtx_def** %output_reload_insn, align 8
  %fld81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1
  %arrayidx82 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld81, i32 0, i64 2
  %rtx83 = bitcast %union.rtunion_def* %arrayidx82 to %struct.rtx_def**
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rtx83, align 8
  store %struct.rtx_def* %58, %struct.rtx_def** %i1, align 8
  br label %for.cond.84

for.cond.84:                                      ; preds = %for.inc.149, %if.end.80
  %59 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8
  %60 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %cmp85 = icmp ne %struct.rtx_def* %59, %60
  br i1 %cmp85, label %for.body.87, label %for.end.153

for.body.87:                                      ; preds = %for.cond.84
  %61 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8
  %62 = bitcast %struct.rtx_def* %61 to i32*
  %bf.load88 = load i32, i32* %62, align 8
  %bf.clear89 = and i32 %bf.load88, 65535
  %cmp90 = icmp eq i32 %bf.clear89, 36
  br i1 %cmp90, label %if.then.97, label %lor.lhs.false.92

lor.lhs.false.92:                                 ; preds = %for.body.87
  %63 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8
  %64 = bitcast %struct.rtx_def* %63 to i32*
  %bf.load93 = load i32, i32* %64, align 8
  %bf.clear94 = and i32 %bf.load93, 65535
  %cmp95 = icmp eq i32 %bf.clear94, 33
  br i1 %cmp95, label %if.then.97, label %if.end.98

if.then.97:                                       ; preds = %lor.lhs.false.92, %for.body.87
  br label %if.end.441

if.end.98:                                        ; preds = %lor.lhs.false.92
  %65 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8
  %66 = bitcast %struct.rtx_def* %65 to i32*
  %bf.load99 = load i32, i32* %66, align 8
  %bf.clear100 = and i32 %bf.load99, 65535
  %cmp101 = icmp eq i32 %bf.clear100, 32
  br i1 %cmp101, label %land.lhs.true, label %lor.lhs.false.103

lor.lhs.false.103:                                ; preds = %if.end.98
  %67 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8
  %68 = bitcast %struct.rtx_def* %67 to i32*
  %bf.load104 = load i32, i32* %68, align 8
  %bf.clear105 = and i32 %bf.load104, 65535
  %cmp106 = icmp eq i32 %bf.clear105, 34
  br i1 %cmp106, label %land.lhs.true, label %if.end.148

land.lhs.true:                                    ; preds = %lor.lhs.false.103, %if.end.98
  %69 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %70 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8
  %fld108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld108, i32 0, i64 3
  %rtx110 = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rtx110, align 8
  %call111 = call i32 @reg_mentioned_p(%struct.rtx_def* %69, %struct.rtx_def* %71)
  %tobool112 = icmp ne i32 %call111, 0
  br i1 %tobool112, label %if.then.113, label %if.end.148

if.then.113:                                      ; preds = %land.lhs.true
  br label %while.cond.114

while.cond.114:                                   ; preds = %while.body.126, %if.then.113
  %72 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8
  %73 = bitcast %struct.rtx_def* %72 to i32*
  %bf.load115 = load i32, i32* %73, align 8
  %bf.clear116 = and i32 %bf.load115, 65535
  %cmp117 = icmp eq i32 %bf.clear116, 32
  br i1 %cmp117, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.114
  %74 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8
  %fld119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1
  %arrayidx120 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld119, i32 0, i64 3
  %rtx121 = bitcast %union.rtunion_def* %arrayidx120 to %struct.rtx_def**
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rtx121, align 8
  %76 = bitcast %struct.rtx_def* %75 to i32*
  %bf.load122 = load i32, i32* %76, align 8
  %bf.clear123 = and i32 %bf.load122, 65535
  %cmp124 = icmp eq i32 %bf.clear123, 48
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.114
  %77 = phi i1 [ false, %while.cond.114 ], [ %cmp124, %land.rhs ]
  br i1 %77, label %while.body.126, label %while.end.140

while.body.126:                                   ; preds = %land.end
  %78 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %79 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8
  %fld127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1
  %arrayidx128 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld127, i32 0, i64 3
  %rtx129 = bitcast %union.rtunion_def* %arrayidx128 to %struct.rtx_def**
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rtx129, align 8
  %fld130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1
  %arrayidx131 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld130, i32 0, i64 0
  %rtx132 = bitcast %union.rtunion_def* %arrayidx131 to %struct.rtx_def**
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rtx132, align 8
  %call133 = call i32 @rtx_equal_p(%struct.rtx_def* %78, %struct.rtx_def* %81)
  %cmp134 = icmp ne i32 %call133, 0
  %conv135 = zext i1 %cmp134 to i32
  %82 = load i32, i32* %n_occurrences, align 4
  %add136 = add nsw i32 %82, %conv135
  store i32 %add136, i32* %n_occurrences, align 4
  %83 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8
  %fld137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx138 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld137, i32 0, i64 2
  %rtx139 = bitcast %union.rtunion_def* %arrayidx138 to %struct.rtx_def**
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rtx139, align 8
  store %struct.rtx_def* %84, %struct.rtx_def** %i1, align 8
  br label %while.cond.114

while.end.140:                                    ; preds = %land.end
  %85 = load i32, i32* %n_occurrences, align 4
  %86 = load i32, i32* %n_inherited, align 4
  %cmp141 = icmp sle i32 %85, %86
  br i1 %cmp141, label %land.lhs.true.143, label %if.end.147

land.lhs.true.143:                                ; preds = %while.end.140
  %87 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8
  %88 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %cmp144 = icmp eq %struct.rtx_def* %87, %88
  br i1 %cmp144, label %if.then.146, label %if.end.147

if.then.146:                                      ; preds = %land.lhs.true.143
  br label %for.end.153

if.end.147:                                       ; preds = %land.lhs.true.143, %while.end.140
  br label %if.end.441

if.end.148:                                       ; preds = %land.lhs.true, %lor.lhs.false.103
  br label %for.inc.149

for.inc.149:                                      ; preds = %if.end.148
  %89 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8
  %fld150 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1
  %arrayidx151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld150, i32 0, i64 2
  %rtx152 = bitcast %union.rtunion_def* %arrayidx151 to %struct.rtx_def**
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rtx152, align 8
  store %struct.rtx_def* %90, %struct.rtx_def** %i1, align 8
  br label %for.cond.84

for.end.153:                                      ; preds = %if.then.146, %for.cond.84
  %91 = load i32, i32* %last_reload_reg.addr, align 4
  %cmp154 = icmp sge i32 %91, 8
  br i1 %cmp154, label %land.lhs.true.156, label %lor.lhs.false.159

land.lhs.true.156:                                ; preds = %for.end.153
  %92 = load i32, i32* %last_reload_reg.addr, align 4
  %cmp157 = icmp sle i32 %92, 15
  br i1 %cmp157, label %cond.true, label %lor.lhs.false.159

lor.lhs.false.159:                                ; preds = %land.lhs.true.156, %for.end.153
  %93 = load i32, i32* %last_reload_reg.addr, align 4
  %cmp160 = icmp sge i32 %93, 21
  br i1 %cmp160, label %land.lhs.true.162, label %lor.lhs.false.165

land.lhs.true.162:                                ; preds = %lor.lhs.false.159
  %94 = load i32, i32* %last_reload_reg.addr, align 4
  %cmp163 = icmp sle i32 %94, 28
  br i1 %cmp163, label %cond.true, label %lor.lhs.false.165

lor.lhs.false.165:                                ; preds = %land.lhs.true.162, %lor.lhs.false.159
  %95 = load i32, i32* %last_reload_reg.addr, align 4
  %cmp166 = icmp sge i32 %95, 45
  br i1 %cmp166, label %land.lhs.true.168, label %lor.lhs.false.171

land.lhs.true.168:                                ; preds = %lor.lhs.false.165
  %96 = load i32, i32* %last_reload_reg.addr, align 4
  %cmp169 = icmp sle i32 %96, 52
  br i1 %cmp169, label %cond.true, label %lor.lhs.false.171

lor.lhs.false.171:                                ; preds = %land.lhs.true.168, %lor.lhs.false.165
  %97 = load i32, i32* %last_reload_reg.addr, align 4
  %cmp172 = icmp sge i32 %97, 29
  br i1 %cmp172, label %land.lhs.true.174, label %cond.false

land.lhs.true.174:                                ; preds = %lor.lhs.false.171
  %98 = load i32, i32* %last_reload_reg.addr, align 4
  %cmp175 = icmp sle i32 %98, 36
  br i1 %cmp175, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.174, %land.lhs.true.168, %land.lhs.true.162, %land.lhs.true.156
  %99 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %100 = bitcast %struct.rtx_def* %99 to i32*
  %bf.load177 = load i32, i32* %100, align 8
  %bf.lshr = lshr i32 %bf.load177, 16
  %bf.clear178 = and i32 %bf.lshr, 255
  %idxprom179 = sext i32 %bf.clear178 to i64
  %arrayidx180 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom179
  %101 = load i32, i32* %arrayidx180, align 4
  %cmp181 = icmp eq i32 %101, 5
  br i1 %cmp181, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %102 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %103 = bitcast %struct.rtx_def* %102 to i32*
  %bf.load183 = load i32, i32* %103, align 8
  %bf.lshr184 = lshr i32 %bf.load183, 16
  %bf.clear185 = and i32 %bf.lshr184, 255
  %idxprom186 = sext i32 %bf.clear185 to i64
  %arrayidx187 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom186
  %104 = load i32, i32* %arrayidx187, align 4
  %cmp188 = icmp eq i32 %104, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %105 = phi i1 [ true, %cond.true ], [ %cmp188, %lor.rhs ]
  %cond = select i1 %105, i32 2, i32 1
  br label %cond.end.226

cond.false:                                       ; preds = %land.lhs.true.174, %lor.lhs.false.171
  %106 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %107 = bitcast %struct.rtx_def* %106 to i32*
  %bf.load190 = load i32, i32* %107, align 8
  %bf.lshr191 = lshr i32 %bf.load190, 16
  %bf.clear192 = and i32 %bf.lshr191, 255
  %cmp193 = icmp eq i32 %bf.clear192, 18
  br i1 %cmp193, label %cond.true.195, label %cond.false.198

cond.true.195:                                    ; preds = %cond.false
  %108 = load i32, i32* @target_flags, align 4
  %and = and i32 %108, 33554432
  %tobool196 = icmp ne i32 %and, 0
  %cond197 = select i1 %tobool196, i32 2, i32 3
  br label %cond.end.224

cond.false.198:                                   ; preds = %cond.false
  %109 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %110 = bitcast %struct.rtx_def* %109 to i32*
  %bf.load199 = load i32, i32* %110, align 8
  %bf.lshr200 = lshr i32 %bf.load199, 16
  %bf.clear201 = and i32 %bf.lshr200, 255
  %cmp202 = icmp eq i32 %bf.clear201, 24
  br i1 %cmp202, label %cond.true.204, label %cond.false.208

cond.true.204:                                    ; preds = %cond.false.198
  %111 = load i32, i32* @target_flags, align 4
  %and205 = and i32 %111, 33554432
  %tobool206 = icmp ne i32 %and205, 0
  %cond207 = select i1 %tobool206, i32 4, i32 6
  br label %cond.end

cond.false.208:                                   ; preds = %cond.false.198
  %112 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %113 = bitcast %struct.rtx_def* %112 to i32*
  %bf.load209 = load i32, i32* %113, align 8
  %bf.lshr210 = lshr i32 %bf.load209, 16
  %bf.clear211 = and i32 %bf.lshr210, 255
  %idxprom212 = sext i32 %bf.clear211 to i64
  %arrayidx213 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom212
  %114 = load i8, i8* %arrayidx213, align 1
  %conv214 = zext i8 %114 to i32
  %115 = load i32, i32* @target_flags, align 4
  %and215 = and i32 %115, 33554432
  %tobool216 = icmp ne i32 %and215, 0
  %cond217 = select i1 %tobool216, i32 8, i32 4
  %add218 = add nsw i32 %conv214, %cond217
  %sub219 = sub nsw i32 %add218, 1
  %116 = load i32, i32* @target_flags, align 4
  %and220 = and i32 %116, 33554432
  %tobool221 = icmp ne i32 %and220, 0
  %cond222 = select i1 %tobool221, i32 8, i32 4
  %div = sdiv i32 %sub219, %cond222
  br label %cond.end

cond.end:                                         ; preds = %cond.false.208, %cond.true.204
  %cond223 = phi i32 [ %cond207, %cond.true.204 ], [ %div, %cond.false.208 ]
  br label %cond.end.224

cond.end.224:                                     ; preds = %cond.end, %cond.true.195
  %cond225 = phi i32 [ %cond197, %cond.true.195 ], [ %cond223, %cond.end ]
  br label %cond.end.226

cond.end.226:                                     ; preds = %cond.end.224, %lor.end
  %cond227 = phi i32 [ %cond, %lor.end ], [ %cond225, %cond.end.224 ]
  store i32 %cond227, i32* %k, align 4
  br label %for.cond.228

for.cond.228:                                     ; preds = %for.body.232, %cond.end.226
  %117 = load i32, i32* %k, align 4
  %dec229 = add nsw i32 %117, -1
  store i32 %dec229, i32* %k, align 4
  %cmp230 = icmp sgt i32 %117, 0
  br i1 %cmp230, label %for.body.232, label %for.end.239

for.body.232:                                     ; preds = %for.cond.228
  %118 = load i32, i32* %last_reload_reg.addr, align 4
  %119 = load i32, i32* %k, align 4
  %add233 = add nsw i32 %118, %119
  %idxprom234 = sext i32 %add233 to i64
  %arrayidx235 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i32 0, i64 %idxprom234
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx235, align 8
  %120 = load i32, i32* %last_reload_reg.addr, align 4
  %121 = load i32, i32* %k, align 4
  %add236 = add nsw i32 %120, %121
  %idxprom237 = sext i32 %add236 to i64
  %arrayidx238 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i32 0, i64 %idxprom237
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx238, align 8
  br label %for.cond.228

for.end.239:                                      ; preds = %for.cond.228
  %122 = load i32, i32* %j.addr, align 4
  %idxprom240 = sext i32 %122 to i64
  %arrayidx241 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom240
  %out = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx241, i32 0, i32 1
  %123 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %124 = load i32, i32* %j.addr, align 4
  %idxprom242 = sext i32 %124 to i64
  %arrayidx243 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom242
  %in244 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx243, i32 0, i32 0
  %125 = load %struct.rtx_def*, %struct.rtx_def** %in244, align 8
  %cmp245 = icmp ne %struct.rtx_def* %123, %125
  br i1 %cmp245, label %land.lhs.true.247, label %if.else.439

land.lhs.true.247:                                ; preds = %for.end.239
  %126 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld248 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1
  %arrayidx249 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld248, i32 0, i64 0
  %rtuint250 = bitcast %union.rtunion_def* %arrayidx249 to i32*
  %127 = load i32, i32* %rtuint250, align 4
  %idxprom251 = zext i32 %127 to i64
  %128 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %128, i32 0, i32 4
  %reg252 = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx253 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg252, i32 0, i64 %idxprom251
  %129 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx253, align 8
  %deaths = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %129, i32 0, i32 6
  %130 = load i32, i32* %deaths, align 4
  %cmp254 = icmp eq i32 %130, 1
  br i1 %cmp254, label %land.lhs.true.256, label %if.else.439

land.lhs.true.256:                                ; preds = %land.lhs.true.247
  %131 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld257 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i32 0, i32 1
  %arrayidx258 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld257, i32 0, i64 0
  %rtuint259 = bitcast %union.rtunion_def* %arrayidx258 to i32*
  %132 = load i32, i32* %rtuint259, align 4
  %idxprom260 = zext i32 %132 to i64
  %133 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data261 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %133, i32 0, i32 4
  %reg262 = bitcast %union.varray_data_tag* %data261 to [1 x %struct.reg_info_def*]*
  %arrayidx263 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg262, i32 0, i64 %idxprom260
  %134 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx263, align 8
  %sets = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %134, i32 0, i32 3
  %135 = load i32, i32* %sets, align 4
  %cmp264 = icmp eq i32 %135, 1
  br i1 %cmp264, label %land.lhs.true.266, label %if.else.439

land.lhs.true.266:                                ; preds = %land.lhs.true.256
  %136 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld267 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1
  %arrayidx268 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld267, i32 0, i64 0
  %rtuint269 = bitcast %union.rtunion_def* %arrayidx268 to i32*
  %137 = load i32, i32* %rtuint269, align 4
  %idxprom270 = zext i32 %137 to i64
  %138 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data271 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %138, i32 0, i32 4
  %reg272 = bitcast %union.varray_data_tag* %data271 to [1 x %struct.reg_info_def*]*
  %arrayidx273 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg272, i32 0, i64 %idxprom270
  %139 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx273, align 8
  %basic_block = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %139, i32 0, i32 9
  %140 = load i32, i32* %basic_block, align 4
  %cmp274 = icmp sge i32 %140, 0
  br i1 %cmp274, label %land.lhs.true.276, label %if.else.439

land.lhs.true.276:                                ; preds = %land.lhs.true.266
  %141 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %142 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld277 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i32 0, i32 1
  %arrayidx278 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld277, i32 0, i64 0
  %rtuint279 = bitcast %union.rtunion_def* %arrayidx278 to i32*
  %143 = load i32, i32* %rtuint279, align 4
  %call280 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %141, i32 1, i32 %143)
  %tobool281 = icmp ne %struct.rtx_def* %call280, null
  br i1 %tobool281, label %if.then.282, label %if.else.439

if.then.282:                                      ; preds = %land.lhs.true.276
  %144 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld283 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1
  %arrayidx284 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld283, i32 0, i64 1
  %rtx285 = bitcast %union.rtunion_def* %arrayidx284 to %struct.rtx_def**
  %145 = load %struct.rtx_def*, %struct.rtx_def** %rtx285, align 8
  store %struct.rtx_def* %145, %struct.rtx_def** %i2, align 8
  br label %for.cond.286

for.cond.286:                                     ; preds = %for.inc.357, %if.then.282
  %146 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %tobool287 = icmp ne %struct.rtx_def* %146, null
  br i1 %tobool287, label %for.body.288, label %for.end.361

for.body.288:                                     ; preds = %for.cond.286
  %147 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %148 = bitcast %struct.rtx_def* %147 to i32*
  %bf.load289 = load i32, i32* %148, align 8
  %bf.clear290 = and i32 %bf.load289, 65535
  %idxprom291 = sext i32 %bf.clear290 to i64
  %arrayidx292 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom291
  %149 = load i8, i8* %arrayidx292, align 1
  %conv293 = sext i8 %149 to i32
  %cmp294 = icmp eq i32 %conv293, 105
  br i1 %cmp294, label %cond.true.296, label %cond.false.315

cond.true.296:                                    ; preds = %for.body.288
  %150 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %fld297 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %150, i32 0, i32 1
  %arrayidx298 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld297, i32 0, i64 3
  %rtx299 = bitcast %union.rtunion_def* %arrayidx298 to %struct.rtx_def**
  %151 = load %struct.rtx_def*, %struct.rtx_def** %rtx299, align 8
  %152 = bitcast %struct.rtx_def* %151 to i32*
  %bf.load300 = load i32, i32* %152, align 8
  %bf.clear301 = and i32 %bf.load300, 65535
  %cmp302 = icmp eq i32 %bf.clear301, 47
  br i1 %cmp302, label %cond.true.304, label %cond.false.308

cond.true.304:                                    ; preds = %cond.true.296
  %153 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %fld305 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1
  %arrayidx306 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld305, i32 0, i64 3
  %rtx307 = bitcast %union.rtunion_def* %arrayidx306 to %struct.rtx_def**
  %154 = load %struct.rtx_def*, %struct.rtx_def** %rtx307, align 8
  br label %cond.end.313

cond.false.308:                                   ; preds = %cond.true.296
  %155 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %156 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %fld309 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %156, i32 0, i32 1
  %arrayidx310 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld309, i32 0, i64 3
  %rtx311 = bitcast %union.rtunion_def* %arrayidx310 to %struct.rtx_def**
  %157 = load %struct.rtx_def*, %struct.rtx_def** %rtx311, align 8
  %call312 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %155, %struct.rtx_def* %157)
  br label %cond.end.313

cond.end.313:                                     ; preds = %cond.false.308, %cond.true.304
  %cond314 = phi %struct.rtx_def* [ %154, %cond.true.304 ], [ %call312, %cond.false.308 ]
  br label %cond.end.316

cond.false.315:                                   ; preds = %for.body.288
  br label %cond.end.316

cond.end.316:                                     ; preds = %cond.false.315, %cond.end.313
  %cond317 = phi %struct.rtx_def* [ %cond314, %cond.end.313 ], [ null, %cond.false.315 ]
  store %struct.rtx_def* %cond317, %struct.rtx_def** %set, align 8
  %158 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %cmp318 = icmp ne %struct.rtx_def* %158, null
  br i1 %cmp318, label %land.lhs.true.320, label %if.end.327

land.lhs.true.320:                                ; preds = %cond.end.316
  %159 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld321 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1
  %arrayidx322 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld321, i32 0, i64 0
  %rtx323 = bitcast %union.rtunion_def* %arrayidx322 to %struct.rtx_def**
  %160 = load %struct.rtx_def*, %struct.rtx_def** %rtx323, align 8
  %161 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %cmp324 = icmp eq %struct.rtx_def* %160, %161
  br i1 %cmp324, label %if.then.326, label %if.end.327

if.then.326:                                      ; preds = %land.lhs.true.320
  br label %for.inc.357

if.end.327:                                       ; preds = %land.lhs.true.320, %cond.end.316
  %162 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %163 = bitcast %struct.rtx_def* %162 to i32*
  %bf.load328 = load i32, i32* %163, align 8
  %bf.clear329 = and i32 %bf.load328, 65535
  %cmp330 = icmp eq i32 %bf.clear329, 36
  br i1 %cmp330, label %if.then.337, label %lor.lhs.false.332

lor.lhs.false.332:                                ; preds = %if.end.327
  %164 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %165 = bitcast %struct.rtx_def* %164 to i32*
  %bf.load333 = load i32, i32* %165, align 8
  %bf.clear334 = and i32 %bf.load333, 65535
  %cmp335 = icmp eq i32 %bf.clear334, 33
  br i1 %cmp335, label %if.then.337, label %if.end.338

if.then.337:                                      ; preds = %lor.lhs.false.332, %if.end.327
  br label %for.end.361

if.end.338:                                       ; preds = %lor.lhs.false.332
  %166 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %167 = bitcast %struct.rtx_def* %166 to i32*
  %bf.load339 = load i32, i32* %167, align 8
  %bf.clear340 = and i32 %bf.load339, 65535
  %cmp341 = icmp eq i32 %bf.clear340, 32
  br i1 %cmp341, label %land.lhs.true.348, label %lor.lhs.false.343

lor.lhs.false.343:                                ; preds = %if.end.338
  %168 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %169 = bitcast %struct.rtx_def* %168 to i32*
  %bf.load344 = load i32, i32* %169, align 8
  %bf.clear345 = and i32 %bf.load344, 65535
  %cmp346 = icmp eq i32 %bf.clear345, 34
  br i1 %cmp346, label %land.lhs.true.348, label %if.end.356

land.lhs.true.348:                                ; preds = %lor.lhs.false.343, %if.end.338
  %170 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %171 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %fld349 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %171, i32 0, i32 1
  %arrayidx350 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld349, i32 0, i64 3
  %rtx351 = bitcast %union.rtunion_def* %arrayidx350 to %struct.rtx_def**
  %172 = load %struct.rtx_def*, %struct.rtx_def** %rtx351, align 8
  %call352 = call i32 @reg_mentioned_p(%struct.rtx_def* %170, %struct.rtx_def* %172)
  %tobool353 = icmp ne i32 %call352, 0
  br i1 %tobool353, label %if.then.354, label %if.end.356

if.then.354:                                      ; preds = %land.lhs.true.348
  %173 = load %struct.rtx_def*, %struct.rtx_def** %output_reload_insn, align 8
  %174 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  call void @delete_address_reloads(%struct.rtx_def* %173, %struct.rtx_def* %174)
  %175 = load %struct.rtx_def*, %struct.rtx_def** %output_reload_insn, align 8
  %call355 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %175)
  br label %if.end.441

if.end.356:                                       ; preds = %land.lhs.true.348, %lor.lhs.false.343
  br label %for.inc.357

for.inc.357:                                      ; preds = %if.end.356, %if.then.326
  %176 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %fld358 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %176, i32 0, i32 1
  %arrayidx359 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld358, i32 0, i64 1
  %rtx360 = bitcast %union.rtunion_def* %arrayidx359 to %struct.rtx_def**
  %177 = load %struct.rtx_def*, %struct.rtx_def** %rtx360, align 8
  store %struct.rtx_def* %177, %struct.rtx_def** %i2, align 8
  br label %for.cond.286

for.end.361:                                      ; preds = %if.then.337, %for.cond.286
  %178 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld362 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %178, i32 0, i32 1
  %arrayidx363 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld362, i32 0, i64 1
  %rtx364 = bitcast %union.rtunion_def* %arrayidx363 to %struct.rtx_def**
  %179 = load %struct.rtx_def*, %struct.rtx_def** %rtx364, align 8
  store %struct.rtx_def* %179, %struct.rtx_def** %i2, align 8
  br label %for.cond.365

for.cond.365:                                     ; preds = %for.inc.420, %for.end.361
  %180 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %tobool366 = icmp ne %struct.rtx_def* %180, null
  br i1 %tobool366, label %for.body.367, label %for.end.424

for.body.367:                                     ; preds = %for.cond.365
  %181 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %182 = bitcast %struct.rtx_def* %181 to i32*
  %bf.load369 = load i32, i32* %182, align 8
  %bf.clear370 = and i32 %bf.load369, 65535
  %idxprom371 = sext i32 %bf.clear370 to i64
  %arrayidx372 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom371
  %183 = load i8, i8* %arrayidx372, align 1
  %conv373 = sext i8 %183 to i32
  %cmp374 = icmp eq i32 %conv373, 105
  br i1 %cmp374, label %cond.true.376, label %cond.false.395

cond.true.376:                                    ; preds = %for.body.367
  %184 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %fld377 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %184, i32 0, i32 1
  %arrayidx378 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld377, i32 0, i64 3
  %rtx379 = bitcast %union.rtunion_def* %arrayidx378 to %struct.rtx_def**
  %185 = load %struct.rtx_def*, %struct.rtx_def** %rtx379, align 8
  %186 = bitcast %struct.rtx_def* %185 to i32*
  %bf.load380 = load i32, i32* %186, align 8
  %bf.clear381 = and i32 %bf.load380, 65535
  %cmp382 = icmp eq i32 %bf.clear381, 47
  br i1 %cmp382, label %cond.true.384, label %cond.false.388

cond.true.384:                                    ; preds = %cond.true.376
  %187 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %fld385 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %187, i32 0, i32 1
  %arrayidx386 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld385, i32 0, i64 3
  %rtx387 = bitcast %union.rtunion_def* %arrayidx386 to %struct.rtx_def**
  %188 = load %struct.rtx_def*, %struct.rtx_def** %rtx387, align 8
  br label %cond.end.393

cond.false.388:                                   ; preds = %cond.true.376
  %189 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %190 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %fld389 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %190, i32 0, i32 1
  %arrayidx390 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld389, i32 0, i64 3
  %rtx391 = bitcast %union.rtunion_def* %arrayidx390 to %struct.rtx_def**
  %191 = load %struct.rtx_def*, %struct.rtx_def** %rtx391, align 8
  %call392 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %189, %struct.rtx_def* %191)
  br label %cond.end.393

cond.end.393:                                     ; preds = %cond.false.388, %cond.true.384
  %cond394 = phi %struct.rtx_def* [ %188, %cond.true.384 ], [ %call392, %cond.false.388 ]
  br label %cond.end.396

cond.false.395:                                   ; preds = %for.body.367
  br label %cond.end.396

cond.end.396:                                     ; preds = %cond.false.395, %cond.end.393
  %cond397 = phi %struct.rtx_def* [ %cond394, %cond.end.393 ], [ null, %cond.false.395 ]
  store %struct.rtx_def* %cond397, %struct.rtx_def** %set368, align 8
  %192 = load %struct.rtx_def*, %struct.rtx_def** %set368, align 8
  %cmp398 = icmp ne %struct.rtx_def* %192, null
  br i1 %cmp398, label %land.lhs.true.400, label %if.end.408

land.lhs.true.400:                                ; preds = %cond.end.396
  %193 = load %struct.rtx_def*, %struct.rtx_def** %set368, align 8
  %fld401 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %193, i32 0, i32 1
  %arrayidx402 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld401, i32 0, i64 0
  %rtx403 = bitcast %union.rtunion_def* %arrayidx402 to %struct.rtx_def**
  %194 = load %struct.rtx_def*, %struct.rtx_def** %rtx403, align 8
  %195 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %cmp404 = icmp eq %struct.rtx_def* %194, %195
  br i1 %cmp404, label %if.then.406, label %if.end.408

if.then.406:                                      ; preds = %land.lhs.true.400
  %196 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %197 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  call void @delete_address_reloads(%struct.rtx_def* %196, %struct.rtx_def* %197)
  %198 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %call407 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %198)
  br label %if.end.408

if.end.408:                                       ; preds = %if.then.406, %land.lhs.true.400, %cond.end.396
  %199 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %200 = bitcast %struct.rtx_def* %199 to i32*
  %bf.load409 = load i32, i32* %200, align 8
  %bf.clear410 = and i32 %bf.load409, 65535
  %cmp411 = icmp eq i32 %bf.clear410, 36
  br i1 %cmp411, label %if.then.418, label %lor.lhs.false.413

lor.lhs.false.413:                                ; preds = %if.end.408
  %201 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %202 = bitcast %struct.rtx_def* %201 to i32*
  %bf.load414 = load i32, i32* %202, align 8
  %bf.clear415 = and i32 %bf.load414, 65535
  %cmp416 = icmp eq i32 %bf.clear415, 33
  br i1 %cmp416, label %if.then.418, label %if.end.419

if.then.418:                                      ; preds = %lor.lhs.false.413, %if.end.408
  br label %for.end.424

if.end.419:                                       ; preds = %lor.lhs.false.413
  br label %for.inc.420

for.inc.420:                                      ; preds = %if.end.419
  %203 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %fld421 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %203, i32 0, i32 1
  %arrayidx422 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld421, i32 0, i64 1
  %rtx423 = bitcast %union.rtunion_def* %arrayidx422 to %struct.rtx_def**
  %204 = load %struct.rtx_def*, %struct.rtx_def** %rtx423, align 8
  store %struct.rtx_def* %204, %struct.rtx_def** %i2, align 8
  br label %for.cond.365

for.end.424:                                      ; preds = %if.then.418, %for.cond.365
  %205 = load i32, i32* %j.addr, align 4
  %idxprom425 = sext i32 %205 to i64
  %arrayidx426 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom425
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx426, i32 0, i32 11
  %206 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8
  %fld427 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %206, i32 0, i32 1
  %arrayidx428 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld427, i32 0, i64 0
  %rtuint429 = bitcast %union.rtunion_def* %arrayidx428 to i32*
  %207 = load i32, i32* %rtuint429, align 4
  %conv430 = trunc i32 %207 to i16
  %208 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld431 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %208, i32 0, i32 1
  %arrayidx432 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld431, i32 0, i64 0
  %rtuint433 = bitcast %union.rtunion_def* %arrayidx432 to i32*
  %209 = load i32, i32* %rtuint433, align 4
  %idxprom434 = zext i32 %209 to i64
  %210 = load i16*, i16** @reg_renumber, align 8
  %arrayidx435 = getelementptr inbounds i16, i16* %210, i64 %idxprom434
  store i16 %conv430, i16* %arrayidx435, align 2
  %211 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld436 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %211, i32 0, i32 1
  %arrayidx437 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld436, i32 0, i64 0
  %rtuint438 = bitcast %union.rtunion_def* %arrayidx437 to i32*
  %212 = load i32, i32* %rtuint438, align 4
  call void @alter_reg(i32 %212, i32 -1)
  br label %if.end.441

if.else.439:                                      ; preds = %land.lhs.true.276, %land.lhs.true.266, %land.lhs.true.256, %land.lhs.true.247, %for.end.239
  %213 = load %struct.rtx_def*, %struct.rtx_def** %output_reload_insn, align 8
  %214 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  call void @delete_address_reloads(%struct.rtx_def* %213, %struct.rtx_def* %214)
  %215 = load %struct.rtx_def*, %struct.rtx_def** %output_reload_insn, align 8
  %call440 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %215)
  br label %if.end.441

if.end.441:                                       ; preds = %if.else, %if.then.79, %if.then.97, %if.end.147, %if.then.354, %if.else.439, %for.end.424
  ret void
}

declare %struct.rtx_def* @gen_lowpart_SUBREG(i32, %struct.rtx_def*) #1

declare void @push_to_sequence(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @inc_for_reload(%struct.rtx_def* %reloadreg, %struct.rtx_def* %in, %struct.rtx_def* %value, i32 %inc_amount) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %reloadreg.addr = alloca %struct.rtx_def*, align 8
  %in.addr = alloca %struct.rtx_def*, align 8
  %value.addr = alloca %struct.rtx_def*, align 8
  %inc_amount.addr = alloca i32, align 4
  %incloc = alloca %struct.rtx_def*, align 8
  %post = alloca i32, align 4
  %last = alloca %struct.rtx_def*, align 8
  %inc = alloca %struct.rtx_def*, align 8
  %add_insn = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %store = alloca %struct.rtx_def*, align 8
  %real_in = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %reloadreg, %struct.rtx_def** %reloadreg.addr, align 8
  store %struct.rtx_def* %in, %struct.rtx_def** %in.addr, align 8
  store %struct.rtx_def* %value, %struct.rtx_def** %value.addr, align 8
  store i32 %inc_amount, i32* %inc_amount.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %incloc, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load = load i32, i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 98
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load1 = load i32, i32* %5, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 99
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %6 = phi i1 [ true, %entry ], [ %cmp3, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32
  store i32 %lor.ext, i32* %post, align 4
  %7 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %8 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %cmp4 = icmp eq %struct.rtx_def* %7, %8
  br i1 %cmp4, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i32 0, i64 0
  %rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rtx7, align 8
  br label %cond.end

cond.false:                                       ; preds = %lor.end
  %11 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %10, %cond.true ], [ %11, %cond.false ]
  store %struct.rtx_def* %cond, %struct.rtx_def** %real_in, align 8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %incloc, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load8 = load i32, i32* %13, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  %cmp10 = icmp eq i32 %bf.clear9, 61
  br i1 %cmp10, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %14 = load %struct.rtx_def*, %struct.rtx_def** %incloc, align 8
  %fld11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx12 to i32*
  %15 = load i32, i32* %rtuint, align 4
  %idxprom = zext i32 %15 to i64
  %16 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8
  %arrayidx13 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %16, i64 %idxprom
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx13, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end
  %17 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %18 = bitcast %struct.rtx_def* %17 to i32*
  %bf.load14 = load i32, i32* %18, align 8
  %bf.clear15 = and i32 %bf.load14, 65535
  %cmp16 = icmp eq i32 %bf.clear15, 96
  br i1 %cmp16, label %if.then.20, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %19 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load17 = load i32, i32* %20, align 8
  %bf.clear18 = and i32 %bf.load17, 65535
  %cmp19 = icmp eq i32 %bf.clear18, 98
  br i1 %cmp19, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %lor.lhs.false, %if.end
  %21 = load i32, i32* %inc_amount.addr, align 4
  %sub = sub nsw i32 0, %21
  store i32 %sub, i32* %inc_amount.addr, align 4
  br label %if.end.21

if.end.21:                                        ; preds = %if.then.20, %lor.lhs.false
  %22 = load i32, i32* %inc_amount.addr, align 4
  %conv = sext i32 %22 to i64
  %call = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv)
  store %struct.rtx_def* %call, %struct.rtx_def** %inc, align 8
  %23 = load i32, i32* %post, align 4
  %tobool = icmp ne i32 %23, 0
  br i1 %tobool, label %land.lhs.true, label %if.end.27

land.lhs.true:                                    ; preds = %if.end.21
  %24 = load %struct.rtx_def*, %struct.rtx_def** %real_in, align 8
  %25 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg.addr, align 8
  %cmp22 = icmp ne %struct.rtx_def* %24, %25
  br i1 %cmp22, label %if.then.24, label %if.end.27

if.then.24:                                       ; preds = %land.lhs.true
  %26 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg.addr, align 8
  %27 = load %struct.rtx_def*, %struct.rtx_def** %real_in, align 8
  %call25 = call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %26, %struct.rtx_def* %27)
  %call26 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call25)
  br label %if.end.27

if.end.27:                                        ; preds = %if.then.24, %land.lhs.true, %if.end.21
  %28 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %29 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %cmp28 = icmp eq %struct.rtx_def* %28, %29
  br i1 %cmp28, label %if.then.30, label %if.end.62

if.then.30:                                       ; preds = %if.end.27
  %call31 = call %struct.rtx_def* @get_last_insn()
  store %struct.rtx_def* %call31, %struct.rtx_def** %last, align 8
  %30 = load %struct.rtx_def*, %struct.rtx_def** %incloc, align 8
  %31 = load %struct.rtx_def*, %struct.rtx_def** %incloc, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load32 = load i32, i32* %32, align 8
  %bf.lshr = lshr i32 %bf.load32, 16
  %bf.clear33 = and i32 %bf.lshr, 255
  %33 = load %struct.rtx_def*, %struct.rtx_def** %incloc, align 8
  %34 = load %struct.rtx_def*, %struct.rtx_def** %inc, align 8
  %call34 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear33, %struct.rtx_def* %33, %struct.rtx_def* %34)
  %call35 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %30, %struct.rtx_def* %call34)
  %call36 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call35)
  store %struct.rtx_def* %call36, %struct.rtx_def** %add_insn, align 8
  %35 = load %struct.rtx_def*, %struct.rtx_def** %add_insn, align 8
  %fld37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i32 0, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx38 to i32*
  %36 = load i32, i32* %rtint, align 4
  %cmp39 = icmp sge i32 %36, 0
  br i1 %cmp39, label %cond.true.41, label %cond.false.45

cond.true.41:                                     ; preds = %if.then.30
  %37 = load %struct.rtx_def*, %struct.rtx_def** %add_insn, align 8
  %fld42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i32 0, i64 4
  %rtint44 = bitcast %union.rtunion_def* %arrayidx43 to i32*
  %38 = load i32, i32* %rtint44, align 4
  br label %cond.end.47

cond.false.45:                                    ; preds = %if.then.30
  %39 = load %struct.rtx_def*, %struct.rtx_def** %add_insn, align 8
  %call46 = call i32 @recog_memoized_1(%struct.rtx_def* %39)
  br label %cond.end.47

cond.end.47:                                      ; preds = %cond.false.45, %cond.true.41
  %cond48 = phi i32 [ %38, %cond.true.41 ], [ %call46, %cond.false.45 ]
  store i32 %cond48, i32* %code, align 4
  %40 = load i32, i32* %code, align 4
  %cmp49 = icmp sge i32 %40, 0
  br i1 %cmp49, label %if.then.51, label %if.end.61

if.then.51:                                       ; preds = %cond.end.47
  %41 = load %struct.rtx_def*, %struct.rtx_def** %add_insn, align 8
  call void @extract_insn(%struct.rtx_def* %41)
  %call52 = call i32 @constrain_operands(i32 1)
  %tobool53 = icmp ne i32 %call52, 0
  br i1 %tobool53, label %if.then.54, label %if.end.60

if.then.54:                                       ; preds = %if.then.51
  %42 = load i32, i32* %post, align 4
  %tobool55 = icmp ne i32 %42, 0
  br i1 %tobool55, label %if.end.59, label %if.then.56

if.then.56:                                       ; preds = %if.then.54
  %43 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg.addr, align 8
  %44 = load %struct.rtx_def*, %struct.rtx_def** %incloc, align 8
  %call57 = call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %43, %struct.rtx_def* %44)
  %call58 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call57)
  br label %if.end.59

if.end.59:                                        ; preds = %if.then.56, %if.then.54
  %45 = load %struct.rtx_def*, %struct.rtx_def** %add_insn, align 8
  store %struct.rtx_def* %45, %struct.rtx_def** %retval
  br label %return

if.end.60:                                        ; preds = %if.then.51
  br label %if.end.61

if.end.61:                                        ; preds = %if.end.60, %cond.end.47
  %46 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8
  call void @delete_insns_since(%struct.rtx_def* %46)
  br label %if.end.62

if.end.62:                                        ; preds = %if.end.61, %if.end.27
  %47 = load i32, i32* %post, align 4
  %tobool63 = icmp ne i32 %47, 0
  br i1 %tobool63, label %if.else, label %if.then.64

if.then.64:                                       ; preds = %if.end.62
  %48 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %49 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg.addr, align 8
  %cmp65 = icmp ne %struct.rtx_def* %48, %49
  br i1 %cmp65, label %if.then.67, label %if.end.70

if.then.67:                                       ; preds = %if.then.64
  %50 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg.addr, align 8
  %51 = load %struct.rtx_def*, %struct.rtx_def** %real_in, align 8
  %call68 = call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %50, %struct.rtx_def* %51)
  %call69 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call68)
  br label %if.end.70

if.end.70:                                        ; preds = %if.then.67, %if.then.64
  %52 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg.addr, align 8
  %53 = load %struct.rtx_def*, %struct.rtx_def** %inc, align 8
  %call71 = call %struct.rtx_def* @gen_add2_insn(%struct.rtx_def* %52, %struct.rtx_def* %53)
  %call72 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call71)
  %54 = load %struct.rtx_def*, %struct.rtx_def** %incloc, align 8
  %55 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg.addr, align 8
  %call73 = call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %54, %struct.rtx_def* %55)
  %call74 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call73)
  store %struct.rtx_def* %call74, %struct.rtx_def** %store, align 8
  br label %if.end.84

if.else:                                          ; preds = %if.end.62
  %56 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg.addr, align 8
  %57 = load %struct.rtx_def*, %struct.rtx_def** %inc, align 8
  %call75 = call %struct.rtx_def* @gen_add2_insn(%struct.rtx_def* %56, %struct.rtx_def* %57)
  %call76 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call75)
  %58 = load %struct.rtx_def*, %struct.rtx_def** %incloc, align 8
  %59 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg.addr, align 8
  %call77 = call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %58, %struct.rtx_def* %59)
  %call78 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call77)
  store %struct.rtx_def* %call78, %struct.rtx_def** %store, align 8
  %60 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg.addr, align 8
  %61 = load i32, i32* %inc_amount.addr, align 4
  %sub79 = sub nsw i32 0, %61
  %conv80 = sext i32 %sub79 to i64
  %call81 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv80)
  %call82 = call %struct.rtx_def* @gen_add2_insn(%struct.rtx_def* %60, %struct.rtx_def* %call81)
  %call83 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call82)
  br label %if.end.84

if.end.84:                                        ; preds = %if.else, %if.end.70
  %62 = load %struct.rtx_def*, %struct.rtx_def** %store, align 8
  store %struct.rtx_def* %62, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %if.end.84, %if.end.59
  %63 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %63
}

; Function Attrs: nounwind uwtable
define internal i32 @conflicts_with_override(%struct.rtx_def* %x) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @n_reloads, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i32 0, i64 %idxprom
  %3 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8
  %tobool = icmp ne %struct.rtx_def* %3, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %5 to i64
  %arrayidx2 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i32 0, i64 %idxprom1
  %6 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2, align 8
  %call = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %4, %struct.rtx_def* %6)
  %tobool3 = icmp ne i32 %call, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %for.end, %if.then
  %8 = load i32, i32* %retval
  ret i32 %8
}

; Function Attrs: nounwind uwtable
define internal i32 @constraint_accepts_reg_p(i8* %string, %struct.rtx_def* %reg) #0 {
entry:
  %retval = alloca i32, align 4
  %string.addr = alloca i8*, align 8
  %reg.addr = alloca %struct.rtx_def*, align 8
  %value = alloca i32, align 4
  %regno = alloca i32, align 4
  %c = alloca i32, align 4
  %class = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 8
  store %struct.rtx_def* %reg, %struct.rtx_def** %reg.addr, align 8
  store i32 0, i32* %value, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %call = call i32 @true_regnum(%struct.rtx_def* %0)
  store i32 %call, i32* %regno, align 4
  store i32 0, i32* %value, align 4
  br label %while.body

while.body:                                       ; preds = %entry, %sw.epilog
  %1 = load i8*, i8** %string.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1
  store i8* %incdec.ptr, i8** %string.addr, align 8
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  store i32 %conv, i32* %c, align 4
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 44, label %sw.bb.1
    i32 103, label %sw.bb.3
    i32 114, label %sw.bb.3
  ]

sw.bb:                                            ; preds = %while.body
  %3 = load i32, i32* %value, align 4
  store i32 %3, i32* %retval
  br label %return

sw.bb.1:                                          ; preds = %while.body
  %4 = load i32, i32* %value, align 4
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb.1
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %sw.bb.1
  store i32 0, i32* %value, align 4
  br label %sw.epilog

sw.bb.3:                                          ; preds = %while.body, %while.body
  %5 = load i64, i64* getelementptr inbounds ([25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 12), align 8
  %6 = load i32, i32* %regno, align 4
  %sh_prom = zext i32 %6 to i64
  %shl = shl i64 1, %sh_prom
  %and = and i64 %5, %shl
  %tobool = icmp ne i64 %and, 0
  br i1 %tobool, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %sw.bb.3
  store i32 1, i32* %value, align 4
  br label %if.end.5

if.end.5:                                         ; preds = %if.then.4, %sw.bb.3
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  %7 = load i32, i32* %c, align 4
  %cmp6 = icmp eq i32 %7, 114
  br i1 %cmp6, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.default
  br label %cond.end.133

cond.false:                                       ; preds = %sw.default
  %8 = load i32, i32* %c, align 4
  %cmp8 = icmp eq i32 %8, 82
  br i1 %cmp8, label %cond.true.10, label %cond.false.11

cond.true.10:                                     ; preds = %cond.false
  br label %cond.end.131

cond.false.11:                                    ; preds = %cond.false
  %9 = load i32, i32* %c, align 4
  %cmp12 = icmp eq i32 %9, 113
  br i1 %cmp12, label %cond.true.14, label %cond.false.17

cond.true.14:                                     ; preds = %cond.false.11
  %10 = load i32, i32* @target_flags, align 4
  %and15 = and i32 %10, 33554432
  %tobool16 = icmp ne i32 %and15, 0
  %cond = select i1 %tobool16, i32 12, i32 8
  br label %cond.end.129

cond.false.17:                                    ; preds = %cond.false.11
  %11 = load i32, i32* %c, align 4
  %cmp18 = icmp eq i32 %11, 81
  br i1 %cmp18, label %cond.true.20, label %cond.false.21

cond.true.20:                                     ; preds = %cond.false.17
  br label %cond.end.127

cond.false.21:                                    ; preds = %cond.false.17
  %12 = load i32, i32* %c, align 4
  %cmp22 = icmp eq i32 %12, 102
  br i1 %cmp22, label %cond.true.24, label %cond.false.30

cond.true.24:                                     ; preds = %cond.false.21
  %13 = load i32, i32* @target_flags, align 4
  %and25 = and i32 %13, 1
  %tobool26 = icmp ne i32 %and25, 0
  br i1 %tobool26, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.24
  %14 = load i32, i32* @target_flags, align 4
  %and27 = and i32 %14, 32
  %tobool28 = icmp ne i32 %and27, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.24
  %15 = phi i1 [ true, %cond.true.24 ], [ %tobool28, %lor.rhs ]
  %cond29 = select i1 %15, i32 15, i32 0
  br label %cond.end.125

cond.false.30:                                    ; preds = %cond.false.21
  %16 = load i32, i32* %c, align 4
  %cmp31 = icmp eq i32 %16, 116
  br i1 %cmp31, label %cond.true.33, label %cond.false.41

cond.true.33:                                     ; preds = %cond.false.30
  %17 = load i32, i32* @target_flags, align 4
  %and34 = and i32 %17, 1
  %tobool35 = icmp ne i32 %and34, 0
  br i1 %tobool35, label %lor.end.39, label %lor.rhs.36

lor.rhs.36:                                       ; preds = %cond.true.33
  %18 = load i32, i32* @target_flags, align 4
  %and37 = and i32 %18, 32
  %tobool38 = icmp ne i32 %and37, 0
  br label %lor.end.39

lor.end.39:                                       ; preds = %lor.rhs.36, %cond.true.33
  %19 = phi i1 [ true, %cond.true.33 ], [ %tobool38, %lor.rhs.36 ]
  %cond40 = select i1 %19, i32 13, i32 0
  br label %cond.end.123

cond.false.41:                                    ; preds = %cond.false.30
  %20 = load i32, i32* %c, align 4
  %cmp42 = icmp eq i32 %20, 117
  br i1 %cmp42, label %cond.true.44, label %cond.false.52

cond.true.44:                                     ; preds = %cond.false.41
  %21 = load i32, i32* @target_flags, align 4
  %and45 = and i32 %21, 1
  %tobool46 = icmp ne i32 %and45, 0
  br i1 %tobool46, label %lor.end.50, label %lor.rhs.47

lor.rhs.47:                                       ; preds = %cond.true.44
  %22 = load i32, i32* @target_flags, align 4
  %and48 = and i32 %22, 32
  %tobool49 = icmp ne i32 %and48, 0
  br label %lor.end.50

lor.end.50:                                       ; preds = %lor.rhs.47, %cond.true.44
  %23 = phi i1 [ true, %cond.true.44 ], [ %tobool49, %lor.rhs.47 ]
  %cond51 = select i1 %23, i32 14, i32 0
  br label %cond.end.121

cond.false.52:                                    ; preds = %cond.false.41
  %24 = load i32, i32* %c, align 4
  %cmp53 = icmp eq i32 %24, 97
  br i1 %cmp53, label %cond.true.55, label %cond.false.56

cond.true.55:                                     ; preds = %cond.false.52
  br label %cond.end.119

cond.false.56:                                    ; preds = %cond.false.52
  %25 = load i32, i32* %c, align 4
  %cmp57 = icmp eq i32 %25, 98
  br i1 %cmp57, label %cond.true.59, label %cond.false.60

cond.true.59:                                     ; preds = %cond.false.56
  br label %cond.end.117

cond.false.60:                                    ; preds = %cond.false.56
  %26 = load i32, i32* %c, align 4
  %cmp61 = icmp eq i32 %26, 99
  br i1 %cmp61, label %cond.true.63, label %cond.false.64

cond.true.63:                                     ; preds = %cond.false.60
  br label %cond.end.115

cond.false.64:                                    ; preds = %cond.false.60
  %27 = load i32, i32* %c, align 4
  %cmp65 = icmp eq i32 %27, 100
  br i1 %cmp65, label %cond.true.67, label %cond.false.68

cond.true.67:                                     ; preds = %cond.false.64
  br label %cond.end.113

cond.false.68:                                    ; preds = %cond.false.64
  %28 = load i32, i32* %c, align 4
  %cmp69 = icmp eq i32 %28, 120
  br i1 %cmp69, label %cond.true.71, label %cond.false.76

cond.true.71:                                     ; preds = %cond.false.68
  %29 = load i32, i32* @target_flags, align 4
  %and72 = and i32 %29, 327680
  %cmp73 = icmp ne i32 %and72, 0
  %cond75 = select i1 %cmp73, i32 16, i32 0
  br label %cond.end.111

cond.false.76:                                    ; preds = %cond.false.68
  %30 = load i32, i32* %c, align 4
  %cmp77 = icmp eq i32 %30, 89
  br i1 %cmp77, label %cond.true.79, label %cond.false.84

cond.true.79:                                     ; preds = %cond.false.76
  %31 = load i32, i32* @target_flags, align 4
  %and80 = and i32 %31, 262144
  %cmp81 = icmp ne i32 %and80, 0
  %cond83 = select i1 %cmp81, i32 16, i32 0
  br label %cond.end.109

cond.false.84:                                    ; preds = %cond.false.76
  %32 = load i32, i32* %c, align 4
  %cmp85 = icmp eq i32 %32, 121
  br i1 %cmp85, label %cond.true.87, label %cond.false.92

cond.true.87:                                     ; preds = %cond.false.84
  %33 = load i32, i32* @target_flags, align 4
  %and88 = and i32 %33, 16384
  %cmp89 = icmp ne i32 %and88, 0
  %cond91 = select i1 %cmp89, i32 17, i32 0
  br label %cond.end.107

cond.false.92:                                    ; preds = %cond.false.84
  %34 = load i32, i32* %c, align 4
  %cmp93 = icmp eq i32 %34, 65
  br i1 %cmp93, label %cond.true.95, label %cond.false.96

cond.true.95:                                     ; preds = %cond.false.92
  br label %cond.end.105

cond.false.96:                                    ; preds = %cond.false.92
  %35 = load i32, i32* %c, align 4
  %cmp97 = icmp eq i32 %35, 68
  br i1 %cmp97, label %cond.true.99, label %cond.false.100

cond.true.99:                                     ; preds = %cond.false.96
  br label %cond.end

cond.false.100:                                   ; preds = %cond.false.96
  %36 = load i32, i32* %c, align 4
  %cmp101 = icmp eq i32 %36, 83
  %cond103 = select i1 %cmp101, i32 5, i32 0
  br label %cond.end

cond.end:                                         ; preds = %cond.false.100, %cond.true.99
  %cond104 = phi i32 [ 6, %cond.true.99 ], [ %cond103, %cond.false.100 ]
  br label %cond.end.105

cond.end.105:                                     ; preds = %cond.end, %cond.true.95
  %cond106 = phi i32 [ 7, %cond.true.95 ], [ %cond104, %cond.end ]
  br label %cond.end.107

cond.end.107:                                     ; preds = %cond.end.105, %cond.true.87
  %cond108 = phi i32 [ %cond91, %cond.true.87 ], [ %cond106, %cond.end.105 ]
  br label %cond.end.109

cond.end.109:                                     ; preds = %cond.end.107, %cond.true.79
  %cond110 = phi i32 [ %cond83, %cond.true.79 ], [ %cond108, %cond.end.107 ]
  br label %cond.end.111

cond.end.111:                                     ; preds = %cond.end.109, %cond.true.71
  %cond112 = phi i32 [ %cond75, %cond.true.71 ], [ %cond110, %cond.end.109 ]
  br label %cond.end.113

cond.end.113:                                     ; preds = %cond.end.111, %cond.true.67
  %cond114 = phi i32 [ 2, %cond.true.67 ], [ %cond112, %cond.end.111 ]
  br label %cond.end.115

cond.end.115:                                     ; preds = %cond.end.113, %cond.true.63
  %cond116 = phi i32 [ 3, %cond.true.63 ], [ %cond114, %cond.end.113 ]
  br label %cond.end.117

cond.end.117:                                     ; preds = %cond.end.115, %cond.true.59
  %cond118 = phi i32 [ 4, %cond.true.59 ], [ %cond116, %cond.end.115 ]
  br label %cond.end.119

cond.end.119:                                     ; preds = %cond.end.117, %cond.true.55
  %cond120 = phi i32 [ 1, %cond.true.55 ], [ %cond118, %cond.end.117 ]
  br label %cond.end.121

cond.end.121:                                     ; preds = %cond.end.119, %lor.end.50
  %cond122 = phi i32 [ %cond51, %lor.end.50 ], [ %cond120, %cond.end.119 ]
  br label %cond.end.123

cond.end.123:                                     ; preds = %cond.end.121, %lor.end.39
  %cond124 = phi i32 [ %cond40, %lor.end.39 ], [ %cond122, %cond.end.121 ]
  br label %cond.end.125

cond.end.125:                                     ; preds = %cond.end.123, %lor.end
  %cond126 = phi i32 [ %cond29, %lor.end ], [ %cond124, %cond.end.123 ]
  br label %cond.end.127

cond.end.127:                                     ; preds = %cond.end.125, %cond.true.20
  %cond128 = phi i32 [ 8, %cond.true.20 ], [ %cond126, %cond.end.125 ]
  br label %cond.end.129

cond.end.129:                                     ; preds = %cond.end.127, %cond.true.14
  %cond130 = phi i32 [ %cond, %cond.true.14 ], [ %cond128, %cond.end.127 ]
  br label %cond.end.131

cond.end.131:                                     ; preds = %cond.end.129, %cond.true.10
  %cond132 = phi i32 [ 11, %cond.true.10 ], [ %cond130, %cond.end.129 ]
  br label %cond.end.133

cond.end.133:                                     ; preds = %cond.end.131, %cond.true
  %cond134 = phi i32 [ 12, %cond.true ], [ %cond132, %cond.end.131 ]
  store i32 %cond134, i32* %class, align 4
  %37 = load i32, i32* %class, align 4
  %idxprom = sext i32 %37 to i64
  %arrayidx = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom
  %38 = load i64, i64* %arrayidx, align 8
  %39 = load i32, i32* %regno, align 4
  %sh_prom135 = zext i32 %39 to i64
  %shl136 = shl i64 1, %sh_prom135
  %and137 = and i64 %38, %shl136
  %tobool138 = icmp ne i64 %and137, 0
  br i1 %tobool138, label %if.then.139, label %if.end.140

if.then.139:                                      ; preds = %cond.end.133
  store i32 1, i32* %value, align 4
  br label %if.end.140

if.end.140:                                       ; preds = %if.then.139, %cond.end.133
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.140, %if.end.5, %if.end
  br label %while.body

return:                                           ; preds = %if.then, %sw.bb
  %40 = load i32, i32* %retval
  ret i32 %40
}

declare i32 @ix86_preferred_reload_class(%struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define internal void @copy_eh_notes(%struct.rtx_def* %insn, %struct.rtx_def* %x) #0 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %eh_note = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %0, i32 23, %struct.rtx_def* null)
  store %struct.rtx_def* %call, %struct.rtx_def** %eh_note, align 8
  %1 = load %struct.rtx_def*, %struct.rtx_def** %eh_note, align 8
  %tobool = icmp ne %struct.rtx_def* %1, null
  br i1 %tobool, label %if.then, label %if.end.17

if.then:                                          ; preds = %entry
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %cmp = icmp ne %struct.rtx_def* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %call1 = call i32 @may_trap_p(%struct.rtx_def* %4)
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %for.body
  %5 = load %struct.rtx_def*, %struct.rtx_def** %eh_note, align 8
  %fld4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i32 0, i64 0
  %rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtx6, align 8
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i32 0, i64 6
  %rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rtx9, align 8
  %call10 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 23, %struct.rtx_def* %6, %struct.rtx_def* %8)
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i32 0, i64 6
  %rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**
  store %struct.rtx_def* %call10, %struct.rtx_def** %rtx13, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.3, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i32 0, i64 2
  %rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rtx16, align 8
  store %struct.rtx_def* %11, %struct.rtx_def** %x.addr, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.17

if.end.17:                                        ; preds = %for.end, %entry
  ret void
}

declare void @end_sequence() #1

declare i32 @may_trap_p(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @delete_address_reloads(%struct.rtx_def* %dead_insn, %struct.rtx_def* %current_insn) #0 {
entry:
  %dead_insn.addr = alloca %struct.rtx_def*, align 8
  %current_insn.addr = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %set2 = alloca %struct.rtx_def*, align 8
  %dst = alloca %struct.rtx_def*, align 8
  %prev = alloca %struct.rtx_def*, align 8
  %next = alloca %struct.rtx_def*, align 8
  %dst17 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %dead_insn, %struct.rtx_def** %dead_insn.addr, align 8
  store %struct.rtx_def* %current_insn, %struct.rtx_def** %current_insn.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom = sext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %2 to i32
  %cmp = icmp eq i32 %conv, 105
  br i1 %cmp, label %cond.true, label %cond.false.14

cond.true:                                        ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load3 = load i32, i32* %5, align 8
  %bf.clear4 = and i32 %bf.load3, 65535
  %cmp5 = icmp eq i32 %bf.clear4, 47
  br i1 %cmp5, label %cond.true.7, label %cond.false

cond.true.7:                                      ; preds = %cond.true
  %6 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8
  %fld8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i32 0, i64 3
  %rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtx10, align 8
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %8 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8
  %9 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8
  %fld11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i32 0, i64 3
  %rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rtx13, align 8
  %call = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %8, %struct.rtx_def* %10)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.7
  %cond = phi %struct.rtx_def* [ %7, %cond.true.7 ], [ %call, %cond.false ]
  br label %cond.end.15

cond.false.14:                                    ; preds = %entry
  br label %cond.end.15

cond.end.15:                                      ; preds = %cond.false.14, %cond.end
  %cond16 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false.14 ]
  store %struct.rtx_def* %cond16, %struct.rtx_def** %set, align 8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %tobool = icmp ne %struct.rtx_def* %11, null
  br i1 %tobool, label %if.then, label %if.end.29

if.then:                                          ; preds = %cond.end.15
  %12 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i32 0, i64 0
  %rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rtx20, align 8
  store %struct.rtx_def* %13, %struct.rtx_def** %dst17, align 8
  %14 = load %struct.rtx_def*, %struct.rtx_def** %dst17, align 8
  %15 = bitcast %struct.rtx_def* %14 to i32*
  %bf.load21 = load i32, i32* %15, align 8
  %bf.clear22 = and i32 %bf.load21, 65535
  %cmp23 = icmp eq i32 %bf.clear22, 66
  br i1 %cmp23, label %if.then.25, label %if.end

if.then.25:                                       ; preds = %if.then
  %16 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8
  %17 = load %struct.rtx_def*, %struct.rtx_def** %dst17, align 8
  %fld26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i32 0, i64 0
  %rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rtx28, align 8
  %19 = load %struct.rtx_def*, %struct.rtx_def** %current_insn.addr, align 8
  call void @delete_address_reloads_1(%struct.rtx_def* %16, %struct.rtx_def* %18, %struct.rtx_def* %19)
  br label %if.end

if.end:                                           ; preds = %if.then.25, %if.then
  br label %if.end.29

if.end.29:                                        ; preds = %if.end, %cond.end.15
  %20 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8
  %fld30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i32 0, i64 1
  %rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rtx32, align 8
  store %struct.rtx_def* %21, %struct.rtx_def** %prev, align 8
  %22 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8
  %fld33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %arrayidx34 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld33, i32 0, i64 2
  %rtx35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rtx35, align 8
  store %struct.rtx_def* %23, %struct.rtx_def** %next, align 8
  %24 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %tobool36 = icmp ne %struct.rtx_def* %24, null
  br i1 %tobool36, label %lor.lhs.false, label %if.then.38

lor.lhs.false:                                    ; preds = %if.end.29
  %25 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %tobool37 = icmp ne %struct.rtx_def* %25, null
  br i1 %tobool37, label %if.end.39, label %if.then.38

if.then.38:                                       ; preds = %lor.lhs.false, %if.end.29
  br label %return

if.end.39:                                        ; preds = %lor.lhs.false
  %26 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %27 = bitcast %struct.rtx_def* %26 to i32*
  %bf.load40 = load i32, i32* %27, align 8
  %bf.clear41 = and i32 %bf.load40, 65535
  %idxprom42 = sext i32 %bf.clear41 to i64
  %arrayidx43 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom42
  %28 = load i8, i8* %arrayidx43, align 1
  %conv44 = sext i8 %28 to i32
  %cmp45 = icmp eq i32 %conv44, 105
  br i1 %cmp45, label %cond.true.47, label %cond.false.66

cond.true.47:                                     ; preds = %if.end.39
  %29 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %fld48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i32 0, i64 3
  %rtx50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rtx50, align 8
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load51 = load i32, i32* %31, align 8
  %bf.clear52 = and i32 %bf.load51, 65535
  %cmp53 = icmp eq i32 %bf.clear52, 47
  br i1 %cmp53, label %cond.true.55, label %cond.false.59

cond.true.55:                                     ; preds = %cond.true.47
  %32 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %fld56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i32 0, i64 3
  %rtx58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rtx58, align 8
  br label %cond.end.64

cond.false.59:                                    ; preds = %cond.true.47
  %34 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %35 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %fld60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i32 0, i64 3
  %rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rtx62, align 8
  %call63 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %34, %struct.rtx_def* %36)
  br label %cond.end.64

cond.end.64:                                      ; preds = %cond.false.59, %cond.true.55
  %cond65 = phi %struct.rtx_def* [ %33, %cond.true.55 ], [ %call63, %cond.false.59 ]
  br label %cond.end.67

cond.false.66:                                    ; preds = %if.end.39
  br label %cond.end.67

cond.end.67:                                      ; preds = %cond.false.66, %cond.end.64
  %cond68 = phi %struct.rtx_def* [ %cond65, %cond.end.64 ], [ null, %cond.false.66 ]
  store %struct.rtx_def* %cond68, %struct.rtx_def** %set, align 8
  %37 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load69 = load i32, i32* %38, align 8
  %bf.clear70 = and i32 %bf.load69, 65535
  %idxprom71 = sext i32 %bf.clear70 to i64
  %arrayidx72 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom71
  %39 = load i8, i8* %arrayidx72, align 1
  %conv73 = sext i8 %39 to i32
  %cmp74 = icmp eq i32 %conv73, 105
  br i1 %cmp74, label %cond.true.76, label %cond.false.95

cond.true.76:                                     ; preds = %cond.end.67
  %40 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i32 0, i64 3
  %rtx79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtx_def**
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rtx79, align 8
  %42 = bitcast %struct.rtx_def* %41 to i32*
  %bf.load80 = load i32, i32* %42, align 8
  %bf.clear81 = and i32 %bf.load80, 65535
  %cmp82 = icmp eq i32 %bf.clear81, 47
  br i1 %cmp82, label %cond.true.84, label %cond.false.88

cond.true.84:                                     ; preds = %cond.true.76
  %43 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx86 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld85, i32 0, i64 3
  %rtx87 = bitcast %union.rtunion_def* %arrayidx86 to %struct.rtx_def**
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rtx87, align 8
  br label %cond.end.93

cond.false.88:                                    ; preds = %cond.true.76
  %45 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %46 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i32 0, i64 3
  %rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rtx91, align 8
  %call92 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %45, %struct.rtx_def* %47)
  br label %cond.end.93

cond.end.93:                                      ; preds = %cond.false.88, %cond.true.84
  %cond94 = phi %struct.rtx_def* [ %44, %cond.true.84 ], [ %call92, %cond.false.88 ]
  br label %cond.end.96

cond.false.95:                                    ; preds = %cond.end.67
  br label %cond.end.96

cond.end.96:                                      ; preds = %cond.false.95, %cond.end.93
  %cond97 = phi %struct.rtx_def* [ %cond94, %cond.end.93 ], [ null, %cond.false.95 ]
  store %struct.rtx_def* %cond97, %struct.rtx_def** %set2, align 8
  %48 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %tobool98 = icmp ne %struct.rtx_def* %48, null
  br i1 %tobool98, label %lor.lhs.false.99, label %if.then.139

lor.lhs.false.99:                                 ; preds = %cond.end.96
  %49 = load %struct.rtx_def*, %struct.rtx_def** %set2, align 8
  %tobool100 = icmp ne %struct.rtx_def* %49, null
  br i1 %tobool100, label %lor.lhs.false.101, label %if.then.139

lor.lhs.false.101:                                ; preds = %lor.lhs.false.99
  %50 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i32 0, i64 1
  %rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rtx104, align 8
  %52 = bitcast %struct.rtx_def* %51 to i32*
  %bf.load105 = load i32, i32* %52, align 8
  %bf.clear106 = and i32 %bf.load105, 65535
  %cmp107 = icmp ne i32 %bf.clear106, 75
  br i1 %cmp107, label %if.then.139, label %lor.lhs.false.109

lor.lhs.false.109:                                ; preds = %lor.lhs.false.101
  %53 = load %struct.rtx_def*, %struct.rtx_def** %set2, align 8
  %fld110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld110, i32 0, i64 1
  %rtx112 = bitcast %union.rtunion_def* %arrayidx111 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx112, align 8
  %55 = bitcast %struct.rtx_def* %54 to i32*
  %bf.load113 = load i32, i32* %55, align 8
  %bf.clear114 = and i32 %bf.load113, 65535
  %cmp115 = icmp ne i32 %bf.clear114, 75
  br i1 %cmp115, label %if.then.139, label %lor.lhs.false.117

lor.lhs.false.117:                                ; preds = %lor.lhs.false.109
  %56 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld118 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1
  %arrayidx119 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld118, i32 0, i64 1
  %rtx120 = bitcast %union.rtunion_def* %arrayidx119 to %struct.rtx_def**
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rtx120, align 8
  %fld121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1
  %arrayidx122 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld121, i32 0, i64 1
  %rtx123 = bitcast %union.rtunion_def* %arrayidx122 to %struct.rtx_def**
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rtx123, align 8
  %59 = bitcast %struct.rtx_def* %58 to i32*
  %bf.load124 = load i32, i32* %59, align 8
  %bf.clear125 = and i32 %bf.load124, 65535
  %cmp126 = icmp ne i32 %bf.clear125, 54
  br i1 %cmp126, label %if.then.139, label %lor.lhs.false.128

lor.lhs.false.128:                                ; preds = %lor.lhs.false.117
  %60 = load %struct.rtx_def*, %struct.rtx_def** %set2, align 8
  %fld129 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1
  %arrayidx130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld129, i32 0, i64 1
  %rtx131 = bitcast %union.rtunion_def* %arrayidx130 to %struct.rtx_def**
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rtx131, align 8
  %fld132 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1
  %arrayidx133 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld132, i32 0, i64 1
  %rtx134 = bitcast %union.rtunion_def* %arrayidx133 to %struct.rtx_def**
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rtx134, align 8
  %63 = bitcast %struct.rtx_def* %62 to i32*
  %bf.load135 = load i32, i32* %63, align 8
  %bf.clear136 = and i32 %bf.load135, 65535
  %cmp137 = icmp ne i32 %bf.clear136, 54
  br i1 %cmp137, label %if.then.139, label %if.end.140

if.then.139:                                      ; preds = %lor.lhs.false.128, %lor.lhs.false.117, %lor.lhs.false.109, %lor.lhs.false.101, %lor.lhs.false.99, %cond.end.96
  br label %return

if.end.140:                                       ; preds = %lor.lhs.false.128
  %64 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld141 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1
  %arrayidx142 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld141, i32 0, i64 0
  %rtx143 = bitcast %union.rtunion_def* %arrayidx142 to %struct.rtx_def**
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rtx143, align 8
  store %struct.rtx_def* %65, %struct.rtx_def** %dst, align 8
  %66 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8
  %67 = load %struct.rtx_def*, %struct.rtx_def** %set2, align 8
  %fld144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1
  %arrayidx145 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld144, i32 0, i64 0
  %rtx146 = bitcast %union.rtunion_def* %arrayidx145 to %struct.rtx_def**
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rtx146, align 8
  %call147 = call i32 @rtx_equal_p(%struct.rtx_def* %66, %struct.rtx_def* %68)
  %tobool148 = icmp ne i32 %call147, 0
  br i1 %tobool148, label %lor.lhs.false.149, label %if.then.187

lor.lhs.false.149:                                ; preds = %if.end.140
  %69 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8
  %70 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld150 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld150, i32 0, i64 1
  %rtx152 = bitcast %union.rtunion_def* %arrayidx151 to %struct.rtx_def**
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rtx152, align 8
  %fld153 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1
  %arrayidx154 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld153, i32 0, i64 0
  %rtx155 = bitcast %union.rtunion_def* %arrayidx154 to %struct.rtx_def**
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rtx155, align 8
  %call156 = call i32 @rtx_equal_p(%struct.rtx_def* %69, %struct.rtx_def* %72)
  %tobool157 = icmp ne i32 %call156, 0
  br i1 %tobool157, label %lor.lhs.false.158, label %if.then.187

lor.lhs.false.158:                                ; preds = %lor.lhs.false.149
  %73 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8
  %74 = load %struct.rtx_def*, %struct.rtx_def** %set2, align 8
  %fld159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1
  %arrayidx160 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld159, i32 0, i64 1
  %rtx161 = bitcast %union.rtunion_def* %arrayidx160 to %struct.rtx_def**
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rtx161, align 8
  %fld162 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx163 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld162, i32 0, i64 0
  %rtx164 = bitcast %union.rtunion_def* %arrayidx163 to %struct.rtx_def**
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rtx164, align 8
  %call165 = call i32 @rtx_equal_p(%struct.rtx_def* %73, %struct.rtx_def* %76)
  %tobool166 = icmp ne i32 %call165, 0
  br i1 %tobool166, label %lor.lhs.false.167, label %if.then.187

lor.lhs.false.167:                                ; preds = %lor.lhs.false.158
  %77 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1
  %arrayidx169 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld168, i32 0, i64 1
  %rtx170 = bitcast %union.rtunion_def* %arrayidx169 to %struct.rtx_def**
  %78 = load %struct.rtx_def*, %struct.rtx_def** %rtx170, align 8
  %fld171 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx172 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld171, i32 0, i64 1
  %rtx173 = bitcast %union.rtunion_def* %arrayidx172 to %struct.rtx_def**
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rtx173, align 8
  %fld174 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1
  %arrayidx175 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld174, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx175 to i64*
  %80 = load i64, i64* %rtwint, align 8
  %81 = load %struct.rtx_def*, %struct.rtx_def** %set2, align 8
  %fld176 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1
  %arrayidx177 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld176, i32 0, i64 1
  %rtx178 = bitcast %union.rtunion_def* %arrayidx177 to %struct.rtx_def**
  %82 = load %struct.rtx_def*, %struct.rtx_def** %rtx178, align 8
  %fld179 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1
  %arrayidx180 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld179, i32 0, i64 1
  %rtx181 = bitcast %union.rtunion_def* %arrayidx180 to %struct.rtx_def**
  %83 = load %struct.rtx_def*, %struct.rtx_def** %rtx181, align 8
  %fld182 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx183 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld182, i32 0, i64 0
  %rtwint184 = bitcast %union.rtunion_def* %arrayidx183 to i64*
  %84 = load i64, i64* %rtwint184, align 8
  %sub = sub nsw i64 0, %84
  %cmp185 = icmp ne i64 %80, %sub
  br i1 %cmp185, label %if.then.187, label %if.end.188

if.then.187:                                      ; preds = %lor.lhs.false.167, %lor.lhs.false.158, %lor.lhs.false.149, %if.end.140
  br label %return

if.end.188:                                       ; preds = %lor.lhs.false.167
  %85 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %call189 = call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %85)
  %86 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %call190 = call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %86)
  br label %return

return:                                           ; preds = %if.end.188, %if.then.187, %if.then.139, %if.then.38
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @delete_address_reloads_1(%struct.rtx_def* %dead_insn, %struct.rtx_def* %x, %struct.rtx_def* %current_insn) #0 {
entry:
  %dead_insn.addr = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %current_insn.addr = alloca %struct.rtx_def*, align 8
  %prev = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %dst = alloca %struct.rtx_def*, align 8
  %i2 = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  store %struct.rtx_def* %dead_insn, %struct.rtx_def** %dead_insn.addr, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %current_insn, %struct.rtx_def** %current_insn.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %2 = load i32, i32* %code, align 4
  %cmp = icmp ne i32 %2, 61
  br i1 %cmp, label %if.then, label %if.end.37

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %code, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom
  %4 = load i8*, i8** %arrayidx, align 8
  store i8* %4, i8** %fmt, align 8
  %5 = load i32, i32* %code, align 4
  %idxprom1 = sext i32 %5 to i64
  %arrayidx2 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom1
  %6 = load i8, i8* %arrayidx2, align 1
  %conv = zext i8 %6 to i32
  %sub = sub nsw i32 %conv, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.34, %if.then
  %7 = load i32, i32* %i, align 4
  %cmp3 = icmp sge i32 %7, 0
  br i1 %cmp3, label %for.body, label %for.end.36

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %8 to i64
  %9 = load i8*, i8** %fmt, align 8
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 %idxprom5
  %10 = load i8, i8* %arrayidx6, align 1
  %conv7 = sext i8 %10 to i32
  %cmp8 = icmp eq i32 %conv7, 101
  br i1 %cmp8, label %if.then.10, label %if.else

if.then.10:                                       ; preds = %for.body
  %11 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8
  %12 = load i32, i32* %i, align 4
  %idxprom11 = sext i32 %12 to i64
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 %idxprom11
  %rtx = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %15 = load %struct.rtx_def*, %struct.rtx_def** %current_insn.addr, align 8
  call void @delete_address_reloads_1(%struct.rtx_def* %11, %struct.rtx_def* %14, %struct.rtx_def* %15)
  br label %if.end.33

if.else:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4
  %idxprom13 = sext i32 %16 to i64
  %17 = load i8*, i8** %fmt, align 8
  %arrayidx14 = getelementptr inbounds i8, i8* %17, i64 %idxprom13
  %18 = load i8, i8* %arrayidx14, align 1
  %conv15 = sext i8 %18 to i32
  %cmp16 = icmp eq i32 %conv15, 69
  br i1 %cmp16, label %if.then.18, label %if.end

if.then.18:                                       ; preds = %if.else
  %19 = load i32, i32* %i, align 4
  %idxprom19 = sext i32 %19 to i64
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i32 0, i64 %idxprom19
  %rtvec = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtvec_def**
  %21 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %21, i32 0, i32 0
  %22 = load i32, i32* %num_elem, align 4
  %sub22 = sub nsw i32 %22, 1
  store i32 %sub22, i32* %j, align 4
  br label %for.cond.23

for.cond.23:                                      ; preds = %for.inc, %if.then.18
  %23 = load i32, i32* %j, align 4
  %cmp24 = icmp sge i32 %23, 0
  br i1 %cmp24, label %for.body.26, label %for.end

for.body.26:                                      ; preds = %for.cond.23
  %24 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8
  %25 = load i32, i32* %j, align 4
  %idxprom27 = sext i32 %25 to i64
  %26 = load i32, i32* %i, align 4
  %idxprom28 = sext i32 %26 to i64
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i32 0, i64 %idxprom28
  %rtvec31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtvec_def**
  %28 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec31, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %28, i32 0, i32 1
  %arrayidx32 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom27
  %29 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx32, align 8
  %30 = load %struct.rtx_def*, %struct.rtx_def** %current_insn.addr, align 8
  call void @delete_address_reloads_1(%struct.rtx_def* %24, %struct.rtx_def* %29, %struct.rtx_def* %30)
  br label %for.inc

for.inc:                                          ; preds = %for.body.26
  %31 = load i32, i32* %j, align 4
  %dec = add nsw i32 %31, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond.23

for.end:                                          ; preds = %for.cond.23
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  br label %if.end.33

if.end.33:                                        ; preds = %if.end, %if.then.10
  br label %for.inc.34

for.inc.34:                                       ; preds = %if.end.33
  %32 = load i32, i32* %i, align 4
  %dec35 = add nsw i32 %32, -1
  store i32 %dec35, i32* %i, align 4
  br label %for.cond

for.end.36:                                       ; preds = %for.cond
  br label %return

if.end.37:                                        ; preds = %entry
  %33 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx39 to i32*
  %34 = load i32, i32* %rtuint, align 4
  %idxprom40 = zext i32 %34 to i64
  %arrayidx41 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_reg_order, i32 0, i64 %idxprom40
  %35 = load i16, i16* %arrayidx41, align 2
  %conv42 = sext i16 %35 to i32
  %cmp43 = icmp slt i32 %conv42, 0
  br i1 %cmp43, label %if.then.45, label %if.end.46

if.then.45:                                       ; preds = %if.end.37
  br label %return

if.end.46:                                        ; preds = %if.end.37
  %36 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8
  %fld47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i32 0, i64 1
  %rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rtx49, align 8
  store %struct.rtx_def* %37, %struct.rtx_def** %prev, align 8
  br label %for.cond.50

for.cond.50:                                      ; preds = %for.inc.80, %if.end.46
  %38 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %tobool = icmp ne %struct.rtx_def* %38, null
  br i1 %tobool, label %for.body.51, label %for.end.84

for.body.51:                                      ; preds = %for.cond.50
  %39 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %40 = bitcast %struct.rtx_def* %39 to i32*
  %bf.load52 = load i32, i32* %40, align 8
  %bf.clear53 = and i32 %bf.load52, 65535
  store i32 %bf.clear53, i32* %code, align 4
  %41 = load i32, i32* %code, align 4
  %cmp54 = icmp eq i32 %41, 36
  br i1 %cmp54, label %if.then.58, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body.51
  %42 = load i32, i32* %code, align 4
  %cmp56 = icmp eq i32 %42, 33
  br i1 %cmp56, label %if.then.58, label %if.end.59

if.then.58:                                       ; preds = %lor.lhs.false, %for.body.51
  br label %return

if.end.59:                                        ; preds = %lor.lhs.false
  %43 = load i32, i32* %code, align 4
  %idxprom60 = sext i32 %43 to i64
  %arrayidx61 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom60
  %44 = load i8, i8* %arrayidx61, align 1
  %conv62 = sext i8 %44 to i32
  %cmp63 = icmp ne i32 %conv62, 105
  br i1 %cmp63, label %if.then.65, label %if.end.66

if.then.65:                                       ; preds = %if.end.59
  br label %for.inc.80

if.end.66:                                        ; preds = %if.end.59
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %46 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i32 0, i64 3
  %rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rtx69, align 8
  %call = call i32 @reg_set_p(%struct.rtx_def* %45, %struct.rtx_def* %47)
  %tobool70 = icmp ne i32 %call, 0
  br i1 %tobool70, label %if.then.71, label %if.end.72

if.then.71:                                       ; preds = %if.end.66
  br label %for.end.84

if.end.72:                                        ; preds = %if.end.66
  %48 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %49 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i32 0, i64 3
  %rtx75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rtx75, align 8
  %call76 = call i32 @reg_referenced_p(%struct.rtx_def* %48, %struct.rtx_def* %50)
  %tobool77 = icmp ne i32 %call76, 0
  br i1 %tobool77, label %if.then.78, label %if.end.79

if.then.78:                                       ; preds = %if.end.72
  br label %return

if.end.79:                                        ; preds = %if.end.72
  br label %for.inc.80

for.inc.80:                                       ; preds = %if.end.79, %if.then.65
  %51 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %arrayidx82 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld81, i32 0, i64 1
  %rtx83 = bitcast %union.rtunion_def* %arrayidx82 to %struct.rtx_def**
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rtx83, align 8
  store %struct.rtx_def* %52, %struct.rtx_def** %prev, align 8
  br label %for.cond.50

for.end.84:                                       ; preds = %if.then.71, %for.cond.50
  %53 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %tobool85 = icmp ne %struct.rtx_def* %53, null
  br i1 %tobool85, label %lor.lhs.false.86, label %if.then.91

lor.lhs.false.86:                                 ; preds = %for.end.84
  %54 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1
  %arrayidx88 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld87, i32 0, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx88 to i32*
  %55 = load i32, i32* %rtint, align 4
  %56 = load i32, i32* @reload_first_uid, align 4
  %cmp89 = icmp slt i32 %55, %56
  br i1 %cmp89, label %if.then.91, label %if.end.92

if.then.91:                                       ; preds = %lor.lhs.false.86, %for.end.84
  br label %return

if.end.92:                                        ; preds = %lor.lhs.false.86
  %57 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %58 = bitcast %struct.rtx_def* %57 to i32*
  %bf.load93 = load i32, i32* %58, align 8
  %bf.clear94 = and i32 %bf.load93, 65535
  %idxprom95 = sext i32 %bf.clear94 to i64
  %arrayidx96 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom95
  %59 = load i8, i8* %arrayidx96, align 1
  %conv97 = sext i8 %59 to i32
  %cmp98 = icmp eq i32 %conv97, 105
  br i1 %cmp98, label %cond.true, label %cond.false.115

cond.true:                                        ; preds = %if.end.92
  %60 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1
  %arrayidx101 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld100, i32 0, i64 3
  %rtx102 = bitcast %union.rtunion_def* %arrayidx101 to %struct.rtx_def**
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rtx102, align 8
  %62 = bitcast %struct.rtx_def* %61 to i32*
  %bf.load103 = load i32, i32* %62, align 8
  %bf.clear104 = and i32 %bf.load103, 65535
  %cmp105 = icmp eq i32 %bf.clear104, 47
  br i1 %cmp105, label %cond.true.107, label %cond.false

cond.true.107:                                    ; preds = %cond.true
  %63 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld108, i32 0, i64 3
  %rtx110 = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**
  %64 = load %struct.rtx_def*, %struct.rtx_def** %rtx110, align 8
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %65 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %66 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1
  %arrayidx112 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld111, i32 0, i64 3
  %rtx113 = bitcast %union.rtunion_def* %arrayidx112 to %struct.rtx_def**
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rtx113, align 8
  %call114 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %65, %struct.rtx_def* %67)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.107
  %cond = phi %struct.rtx_def* [ %64, %cond.true.107 ], [ %call114, %cond.false ]
  br label %cond.end.116

cond.false.115:                                   ; preds = %if.end.92
  br label %cond.end.116

cond.end.116:                                     ; preds = %cond.false.115, %cond.end
  %cond117 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false.115 ]
  store %struct.rtx_def* %cond117, %struct.rtx_def** %set, align 8
  %68 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %tobool118 = icmp ne %struct.rtx_def* %68, null
  br i1 %tobool118, label %if.end.120, label %if.then.119

if.then.119:                                      ; preds = %cond.end.116
  br label %return

if.end.120:                                       ; preds = %cond.end.116
  %69 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1
  %arrayidx122 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld121, i32 0, i64 0
  %rtx123 = bitcast %union.rtunion_def* %arrayidx122 to %struct.rtx_def**
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rtx123, align 8
  store %struct.rtx_def* %70, %struct.rtx_def** %dst, align 8
  %71 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8
  %72 = bitcast %struct.rtx_def* %71 to i32*
  %bf.load124 = load i32, i32* %72, align 8
  %bf.clear125 = and i32 %bf.load124, 65535
  %cmp126 = icmp ne i32 %bf.clear125, 61
  br i1 %cmp126, label %if.then.131, label %lor.lhs.false.128

lor.lhs.false.128:                                ; preds = %if.end.120
  %73 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8
  %74 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call129 = call i32 @rtx_equal_p(%struct.rtx_def* %73, %struct.rtx_def* %74)
  %tobool130 = icmp ne i32 %call129, 0
  br i1 %tobool130, label %if.end.132, label %if.then.131

if.then.131:                                      ; preds = %lor.lhs.false.128, %if.end.120
  br label %return

if.end.132:                                       ; preds = %lor.lhs.false.128
  %75 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8
  %76 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8
  %fld133 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %arrayidx134 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld133, i32 0, i64 3
  %rtx135 = bitcast %union.rtunion_def* %arrayidx134 to %struct.rtx_def**
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rtx135, align 8
  %call136 = call i32 @reg_set_p(%struct.rtx_def* %75, %struct.rtx_def* %77)
  %tobool137 = icmp ne i32 %call136, 0
  br i1 %tobool137, label %if.end.264, label %if.then.138

if.then.138:                                      ; preds = %if.end.132
  %78 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8
  %fld139 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx140 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld139, i32 0, i64 2
  %rtx141 = bitcast %union.rtunion_def* %arrayidx140 to %struct.rtx_def**
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rtx141, align 8
  store %struct.rtx_def* %79, %struct.rtx_def** %i2, align 8
  br label %for.cond.142

for.cond.142:                                     ; preds = %for.inc.259, %if.then.138
  %80 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %tobool143 = icmp ne %struct.rtx_def* %80, null
  br i1 %tobool143, label %for.body.144, label %for.end.263

for.body.144:                                     ; preds = %for.cond.142
  %81 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %82 = bitcast %struct.rtx_def* %81 to i32*
  %bf.load145 = load i32, i32* %82, align 8
  %bf.clear146 = and i32 %bf.load145, 65535
  %cmp147 = icmp eq i32 %bf.clear146, 36
  br i1 %cmp147, label %if.then.149, label %if.end.150

if.then.149:                                      ; preds = %for.body.144
  br label %for.end.263

if.end.150:                                       ; preds = %for.body.144
  %83 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %84 = bitcast %struct.rtx_def* %83 to i32*
  %bf.load151 = load i32, i32* %84, align 8
  %bf.clear152 = and i32 %bf.load151, 65535
  %idxprom153 = sext i32 %bf.clear152 to i64
  %arrayidx154 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom153
  %85 = load i8, i8* %arrayidx154, align 1
  %conv155 = sext i8 %85 to i32
  %cmp156 = icmp eq i32 %conv155, 105
  br i1 %cmp156, label %if.end.159, label %if.then.158

if.then.158:                                      ; preds = %if.end.150
  br label %for.inc.259

if.end.159:                                       ; preds = %if.end.150
  %86 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8
  %87 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %fld160 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1
  %arrayidx161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld160, i32 0, i64 3
  %rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**
  %88 = load %struct.rtx_def*, %struct.rtx_def** %rtx162, align 8
  %call163 = call i32 @reg_referenced_p(%struct.rtx_def* %86, %struct.rtx_def* %88)
  %tobool164 = icmp ne i32 %call163, 0
  br i1 %tobool164, label %if.then.165, label %if.end.216

if.then.165:                                      ; preds = %if.end.159
  %89 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %90 = load %struct.rtx_def*, %struct.rtx_def** %current_insn.addr, align 8
  %cmp166 = icmp eq %struct.rtx_def* %89, %90
  br i1 %cmp166, label %if.then.168, label %if.end.215

if.then.168:                                      ; preds = %if.then.165
  %91 = load i32, i32* @n_reloads, align 4
  %sub169 = sub nsw i32 %91, 1
  store i32 %sub169, i32* %j, align 4
  br label %for.cond.170

for.cond.170:                                     ; preds = %for.inc.189, %if.then.168
  %92 = load i32, i32* %j, align 4
  %cmp171 = icmp sge i32 %92, 0
  br i1 %cmp171, label %for.body.173, label %for.end.191

for.body.173:                                     ; preds = %for.cond.170
  %93 = load i32, i32* %j, align 4
  %idxprom174 = sext i32 %93 to i64
  %arrayidx175 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom174
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx175, i32 0, i32 11
  %94 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8
  %95 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8
  %cmp176 = icmp eq %struct.rtx_def* %94, %95
  br i1 %cmp176, label %land.lhs.true, label %lor.lhs.false.182

land.lhs.true:                                    ; preds = %for.body.173
  %96 = load i32, i32* %j, align 4
  %idxprom178 = sext i32 %96 to i64
  %arrayidx179 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i32 0, i64 %idxprom178
  %97 = load i8, i8* %arrayidx179, align 1
  %conv180 = sext i8 %97 to i32
  %tobool181 = icmp ne i32 %conv180, 0
  br i1 %tobool181, label %if.then.187, label %lor.lhs.false.182

lor.lhs.false.182:                                ; preds = %land.lhs.true, %for.body.173
  %98 = load i32, i32* %j, align 4
  %idxprom183 = sext i32 %98 to i64
  %arrayidx184 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i32 0, i64 %idxprom183
  %99 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx184, align 8
  %100 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8
  %cmp185 = icmp eq %struct.rtx_def* %99, %100
  br i1 %cmp185, label %if.then.187, label %if.end.188

if.then.187:                                      ; preds = %lor.lhs.false.182, %land.lhs.true
  br label %return

if.end.188:                                       ; preds = %lor.lhs.false.182
  br label %for.inc.189

for.inc.189:                                      ; preds = %if.end.188
  %101 = load i32, i32* %j, align 4
  %dec190 = add nsw i32 %101, -1
  store i32 %dec190, i32* %j, align 4
  br label %for.cond.170

for.end.191:                                      ; preds = %for.cond.170
  %102 = load i32, i32* @n_reloads, align 4
  %sub192 = sub nsw i32 %102, 1
  store i32 %sub192, i32* %j, align 4
  br label %for.cond.193

for.cond.193:                                     ; preds = %for.inc.208, %for.end.191
  %103 = load i32, i32* %j, align 4
  %cmp194 = icmp sge i32 %103, 0
  br i1 %cmp194, label %for.body.196, label %for.end.210

for.body.196:                                     ; preds = %for.cond.193
  %104 = load i32, i32* %j, align 4
  %idxprom197 = sext i32 %104 to i64
  %arrayidx198 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom197
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx198, i32 0, i32 0
  %105 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %tobool199 = icmp ne %struct.rtx_def* %105, null
  br i1 %tobool199, label %land.lhs.true.200, label %if.end.207

land.lhs.true.200:                                ; preds = %for.body.196
  %106 = load i32, i32* %j, align 4
  %idxprom201 = sext i32 %106 to i64
  %arrayidx202 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom201
  %reg_rtx203 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx202, i32 0, i32 11
  %107 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx203, align 8
  %108 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8
  %cmp204 = icmp eq %struct.rtx_def* %107, %108
  br i1 %cmp204, label %if.then.206, label %if.end.207

if.then.206:                                      ; preds = %land.lhs.true.200
  br label %for.end.210

if.end.207:                                       ; preds = %land.lhs.true.200, %for.body.196
  br label %for.inc.208

for.inc.208:                                      ; preds = %if.end.207
  %109 = load i32, i32* %j, align 4
  %dec209 = add nsw i32 %109, -1
  store i32 %dec209, i32* %j, align 4
  br label %for.cond.193

for.end.210:                                      ; preds = %if.then.206, %for.cond.193
  %110 = load i32, i32* %j, align 4
  %cmp211 = icmp sge i32 %110, 0
  br i1 %cmp211, label %if.then.213, label %if.end.214

if.then.213:                                      ; preds = %for.end.210
  br label %for.end.263

if.end.214:                                       ; preds = %for.end.210
  br label %if.end.215

if.end.215:                                       ; preds = %if.end.214, %if.then.165
  br label %return

if.end.216:                                       ; preds = %if.end.159
  %111 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %112 = bitcast %struct.rtx_def* %111 to i32*
  %bf.load217 = load i32, i32* %112, align 8
  %bf.clear218 = and i32 %bf.load217, 65535
  %cmp219 = icmp eq i32 %bf.clear218, 33
  br i1 %cmp219, label %if.then.221, label %if.end.222

if.then.221:                                      ; preds = %if.end.216
  br label %for.end.263

if.end.222:                                       ; preds = %if.end.216
  %113 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %114 = load %struct.rtx_def*, %struct.rtx_def** %current_insn.addr, align 8
  %cmp223 = icmp eq %struct.rtx_def* %113, %114
  br i1 %cmp223, label %if.then.225, label %if.end.251

if.then.225:                                      ; preds = %if.end.222
  %115 = load i32, i32* @n_reloads, align 4
  %sub226 = sub nsw i32 %115, 1
  store i32 %sub226, i32* %j, align 4
  br label %for.cond.227

for.cond.227:                                     ; preds = %for.inc.248, %if.then.225
  %116 = load i32, i32* %j, align 4
  %cmp228 = icmp sge i32 %116, 0
  br i1 %cmp228, label %for.body.230, label %for.end.250

for.body.230:                                     ; preds = %for.cond.227
  %117 = load i32, i32* %j, align 4
  %idxprom231 = sext i32 %117 to i64
  %arrayidx232 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom231
  %reg_rtx233 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx232, i32 0, i32 11
  %118 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx233, align 8
  %119 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8
  %cmp234 = icmp eq %struct.rtx_def* %118, %119
  br i1 %cmp234, label %land.lhs.true.236, label %lor.lhs.false.241

land.lhs.true.236:                                ; preds = %for.body.230
  %120 = load i32, i32* %j, align 4
  %idxprom237 = sext i32 %120 to i64
  %arrayidx238 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i32 0, i64 %idxprom237
  %121 = load i8, i8* %arrayidx238, align 1
  %conv239 = sext i8 %121 to i32
  %tobool240 = icmp ne i32 %conv239, 0
  br i1 %tobool240, label %if.then.246, label %lor.lhs.false.241

lor.lhs.false.241:                                ; preds = %land.lhs.true.236, %for.body.230
  %122 = load i32, i32* %j, align 4
  %idxprom242 = sext i32 %122 to i64
  %arrayidx243 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i32 0, i64 %idxprom242
  %123 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx243, align 8
  %124 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8
  %cmp244 = icmp eq %struct.rtx_def* %123, %124
  br i1 %cmp244, label %if.then.246, label %if.end.247

if.then.246:                                      ; preds = %lor.lhs.false.241, %land.lhs.true.236
  br label %return

if.end.247:                                       ; preds = %lor.lhs.false.241
  br label %for.inc.248

for.inc.248:                                      ; preds = %if.end.247
  %125 = load i32, i32* %j, align 4
  %dec249 = add nsw i32 %125, -1
  store i32 %dec249, i32* %j, align 4
  br label %for.cond.227

for.end.250:                                      ; preds = %for.cond.227
  br label %if.end.251

if.end.251:                                       ; preds = %for.end.250, %if.end.222
  %126 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8
  %127 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %fld252 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %127, i32 0, i32 1
  %arrayidx253 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld252, i32 0, i64 3
  %rtx254 = bitcast %union.rtunion_def* %arrayidx253 to %struct.rtx_def**
  %128 = load %struct.rtx_def*, %struct.rtx_def** %rtx254, align 8
  %call255 = call i32 @reg_set_p(%struct.rtx_def* %126, %struct.rtx_def* %128)
  %tobool256 = icmp ne i32 %call255, 0
  br i1 %tobool256, label %if.then.257, label %if.end.258

if.then.257:                                      ; preds = %if.end.251
  br label %for.end.263

if.end.258:                                       ; preds = %if.end.251
  br label %for.inc.259

for.inc.259:                                      ; preds = %if.end.258, %if.then.158
  %129 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8
  %fld260 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %129, i32 0, i32 1
  %arrayidx261 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld260, i32 0, i64 2
  %rtx262 = bitcast %union.rtunion_def* %arrayidx261 to %struct.rtx_def**
  %130 = load %struct.rtx_def*, %struct.rtx_def** %rtx262, align 8
  store %struct.rtx_def* %130, %struct.rtx_def** %i2, align 8
  br label %for.cond.142

for.end.263:                                      ; preds = %if.then.257, %if.then.221, %if.then.213, %if.then.149, %for.cond.142
  br label %if.end.264

if.end.264:                                       ; preds = %for.end.263, %if.end.132
  %131 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %132 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld265 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1
  %arrayidx266 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld265, i32 0, i64 1
  %rtx267 = bitcast %union.rtunion_def* %arrayidx266 to %struct.rtx_def**
  %133 = load %struct.rtx_def*, %struct.rtx_def** %rtx267, align 8
  %134 = load %struct.rtx_def*, %struct.rtx_def** %current_insn.addr, align 8
  call void @delete_address_reloads_1(%struct.rtx_def* %131, %struct.rtx_def* %133, %struct.rtx_def* %134)
  %135 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8
  %fld268 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %135, i32 0, i32 1
  %arrayidx269 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld268, i32 0, i64 0
  %rtuint270 = bitcast %union.rtunion_def* %arrayidx269 to i32*
  %136 = load i32, i32* %rtuint270, align 4
  %idxprom271 = zext i32 %136 to i64
  %arrayidx272 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_reloaded_contents, i32 0, i64 %idxprom271
  store i32 -1, i32* %arrayidx272, align 4
  %137 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %call273 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %137)
  br label %return

return:                                           ; preds = %if.end.264, %if.then.246, %if.end.215, %if.then.187, %if.then.131, %if.then.119, %if.then.91, %if.then.78, %if.then.58, %if.then.45, %for.end.36
  ret void
}

declare %struct.rtx_def* @delete_related_insns(%struct.rtx_def*) #1

declare i32 @reg_referenced_p(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @emit_output_reload_insns(%struct.insn_chain* %chain, %struct.reload* %rl, i32 %j) #0 {
entry:
  %chain.addr = alloca %struct.insn_chain*, align 8
  %rl.addr = alloca %struct.reload*, align 8
  %j.addr = alloca i32, align 4
  %reloadreg = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %special = alloca i32, align 4
  %old = alloca %struct.rtx_def*, align 8
  %mode = alloca i32, align 4
  %p = alloca %struct.rtx_def*, align 8
  %real_old = alloca %struct.rtx_def*, align 8
  %second_reloadreg = alloca %struct.rtx_def*, align 8
  %secondary_reload = alloca i32, align 4
  %tertiary_icode = alloca i32, align 4
  %third_reloadreg = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %pat = alloca %struct.rtx_def*, align 8
  %set218 = alloca %struct.rtx_def*, align 8
  %src = alloca i32, align 4
  %s = alloca i32, align 4
  %s_reg = alloca %struct.rtx_def*, align 8
  %next = alloca %struct.rtx_def*, align 8
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  store %struct.reload* %rl, %struct.reload** %rl.addr, align 8
  store i32 %j, i32* %j.addr, align 4
  %0 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %0, i32 0, i32 11
  %1 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %reloadreg, align 8
  %2 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8
  %insn1 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %2, i32 0, i32 4
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn1, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %insn, align 8
  store i32 0, i32* %special, align 4
  %4 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %out = getelementptr inbounds %struct.reload, %struct.reload* %4, i32 0, i32 1
  %5 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  store %struct.rtx_def* %5, %struct.rtx_def** %old, align 8
  %6 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load = load i32, i32* %7, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  store i32 %bf.clear, i32* %mode, align 4
  %8 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %8, i32 0, i32 17
  %9 = load i32, i32* %when_needed, align 4
  %cmp = icmp eq i32 %9, 9
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @start_sequence()
  br label %if.end

if.else:                                          ; preds = %entry
  %10 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %10, i32 0, i32 12
  %11 = load i32, i32* %opnum, align 4
  %idxprom = sext i32 %11 to i64
  %arrayidx = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @output_reload_insns, i32 0, i64 %idxprom
  %12 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8
  call void @push_to_sequence(%struct.rtx_def* %12)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load i32, i32* %mode, align 4
  %cmp2 = icmp eq i32 %13, 0
  br i1 %cmp2, label %if.then.3, label %if.end.11

if.then.3:                                        ; preds = %if.end
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %call = call i32 @asm_noperands(%struct.rtx_def* %15)
  %cmp5 = icmp slt i32 %call, 0
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.then.3
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  call void @_fatal_insn(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.40, i32 0, i32 0), %struct.rtx_def* %16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 6651, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__FUNCTION__.emit_output_reload_insns, i32 0, i32 0)) #5
  unreachable

if.end.7:                                         ; preds = %if.then.3
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  call void (%struct.rtx_def*, i8*, ...) @error_for_asm(%struct.rtx_def* %17, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.41, i32 0, i32 0))
  %18 = load i32, i32* @word_mode, align 4
  store i32 %18, i32* %mode, align 4
  %19 = load i32, i32* %mode, align 4
  %20 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %fld8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx9 to i32*
  %21 = load i32, i32* %rtuint, align 4
  %call10 = call %struct.rtx_def* @gen_rtx_REG(i32 %19, i32 %21)
  store %struct.rtx_def* %call10, %struct.rtx_def** %old, align 8
  br label %if.end.11

if.end.11:                                        ; preds = %if.end.7, %if.end
  %22 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %23 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load12 = load i32, i32* %23, align 8
  %bf.lshr13 = lshr i32 %bf.load12, 16
  %bf.clear14 = and i32 %bf.lshr13, 255
  %24 = load i32, i32* %mode, align 4
  %cmp15 = icmp ne i32 %bf.clear14, %24
  br i1 %cmp15, label %if.then.16, label %if.end.21

if.then.16:                                       ; preds = %if.end.11
  %25 = load i32, i32* %mode, align 4
  %26 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %fld17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i32 0, i64 0
  %rtuint19 = bitcast %union.rtunion_def* %arrayidx18 to i32*
  %27 = load i32, i32* %rtuint19, align 4
  %call20 = call %struct.rtx_def* @gen_rtx_REG(i32 %25, i32 %27)
  store %struct.rtx_def* %call20, %struct.rtx_def** %reloadreg, align 8
  br label %if.end.21

if.end.21:                                        ; preds = %if.then.16, %if.end.11
  %28 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %secondary_out_reload = getelementptr inbounds %struct.reload, %struct.reload* %28, i32 0, i32 14
  %29 = load i32, i32* %secondary_out_reload, align 4
  %cmp22 = icmp sge i32 %29, 0
  br i1 %cmp22, label %if.then.23, label %if.end.139

if.then.23:                                       ; preds = %if.end.21
  %30 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  store %struct.rtx_def* %30, %struct.rtx_def** %real_old, align 8
  %31 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load24 = load i32, i32* %32, align 8
  %bf.clear25 = and i32 %bf.load24, 65535
  %cmp26 = icmp eq i32 %bf.clear25, 61
  br i1 %cmp26, label %land.lhs.true, label %if.end.44

land.lhs.true:                                    ; preds = %if.then.23
  %33 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %fld27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i32 0, i64 0
  %rtuint29 = bitcast %union.rtunion_def* %arrayidx28 to i32*
  %34 = load i32, i32* %rtuint29, align 4
  %cmp30 = icmp uge i32 %34, 53
  br i1 %cmp30, label %land.lhs.true.31, label %if.end.44

land.lhs.true.31:                                 ; preds = %land.lhs.true
  %35 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %fld32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i32 0, i64 0
  %rtuint34 = bitcast %union.rtunion_def* %arrayidx33 to i32*
  %36 = load i32, i32* %rtuint34, align 4
  %idxprom35 = zext i32 %36 to i64
  %37 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx36 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %37, i64 %idxprom35
  %38 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx36, align 8
  %cmp37 = icmp ne %struct.rtx_def* %38, null
  br i1 %cmp37, label %if.then.38, label %if.end.44

if.then.38:                                       ; preds = %land.lhs.true.31
  %39 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %fld39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i32 0, i64 0
  %rtuint41 = bitcast %union.rtunion_def* %arrayidx40 to i32*
  %40 = load i32, i32* %rtuint41, align 4
  %idxprom42 = zext i32 %40 to i64
  %41 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx43 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %41, i64 %idxprom42
  %42 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx43, align 8
  store %struct.rtx_def* %42, %struct.rtx_def** %real_old, align 8
  br label %if.end.44

if.end.44:                                        ; preds = %if.then.38, %land.lhs.true.31, %land.lhs.true, %if.then.23
  %43 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %class = getelementptr inbounds %struct.reload, %struct.reload* %43, i32 0, i32 2
  %44 = load i32, i32* %class, align 4
  %cmp45 = icmp eq i32 %44, 12
  br i1 %cmp45, label %land.lhs.true.51, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.44
  %45 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %class46 = getelementptr inbounds %struct.reload, %struct.reload* %45, i32 0, i32 2
  %46 = load i32, i32* %class46, align 4
  %cmp47 = icmp eq i32 %46, 11
  br i1 %cmp47, label %land.lhs.true.51, label %lor.lhs.false.48

lor.lhs.false.48:                                 ; preds = %lor.lhs.false
  %47 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %class49 = getelementptr inbounds %struct.reload, %struct.reload* %47, i32 0, i32 2
  %48 = load i32, i32* %class49, align 4
  %cmp50 = icmp eq i32 %48, 10
  br i1 %cmp50, label %land.lhs.true.51, label %land.end

land.lhs.true.51:                                 ; preds = %lor.lhs.false.48, %lor.lhs.false, %if.end.44
  %49 = load i32, i32* @target_flags, align 4
  %and = and i32 %49, 33554432
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true.51
  %50 = load i32, i32* %mode, align 4
  %cmp52 = icmp eq i32 %50, 2
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.51, %lor.lhs.false.48
  %51 = phi i1 [ false, %land.lhs.true.51 ], [ false, %lor.lhs.false.48 ], [ %cmp52, %land.rhs ]
  %cond = select i1 %51, i32 8, i32 0
  %cmp53 = icmp ne i32 %cond, 0
  br i1 %cmp53, label %if.then.54, label %if.end.138

if.then.54:                                       ; preds = %land.end
  %52 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  store %struct.rtx_def* %52, %struct.rtx_def** %second_reloadreg, align 8
  %53 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %secondary_out_reload55 = getelementptr inbounds %struct.reload, %struct.reload* %53, i32 0, i32 14
  %54 = load i32, i32* %secondary_out_reload55, align 4
  %idxprom56 = sext i32 %54 to i64
  %arrayidx57 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom56
  %reg_rtx58 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx57, i32 0, i32 11
  %55 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx58, align 8
  store %struct.rtx_def* %55, %struct.rtx_def** %reloadreg, align 8
  %56 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %secondary_out_icode = getelementptr inbounds %struct.reload, %struct.reload* %56, i32 0, i32 16
  %57 = load i32, i32* %secondary_out_icode, align 4
  %cmp59 = icmp ne i32 %57, 1317
  br i1 %cmp59, label %if.then.60, label %if.else.66

if.then.60:                                       ; preds = %if.then.54
  %58 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %secondary_out_icode61 = getelementptr inbounds %struct.reload, %struct.reload* %58, i32 0, i32 16
  %59 = load i32, i32* %secondary_out_icode61, align 4
  %idxprom62 = sext i32 %59 to i64
  %arrayidx63 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom62
  %genfun = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx63, i32 0, i32 2
  %60 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8
  %61 = load %struct.rtx_def*, %struct.rtx_def** %real_old, align 8
  %62 = load %struct.rtx_def*, %struct.rtx_def** %second_reloadreg, align 8
  %63 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %call64 = call %struct.rtx_def* (%struct.rtx_def*, ...) %60(%struct.rtx_def* %61, %struct.rtx_def* %62, %struct.rtx_def* %63)
  %call65 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call64)
  store i32 1, i32* %special, align 4
  br label %if.end.137

if.else.66:                                       ; preds = %if.then.54
  %64 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %secondary_out_reload67 = getelementptr inbounds %struct.reload, %struct.reload* %64, i32 0, i32 14
  %65 = load i32, i32* %secondary_out_reload67, align 4
  store i32 %65, i32* %secondary_reload, align 4
  %66 = load i32, i32* %secondary_reload, align 4
  %idxprom68 = sext i32 %66 to i64
  %arrayidx69 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom68
  %secondary_out_icode70 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx69, i32 0, i32 16
  %67 = load i32, i32* %secondary_out_icode70, align 4
  store i32 %67, i32* %tertiary_icode, align 4
  %68 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %69 = bitcast %struct.rtx_def* %68 to i32*
  %bf.load71 = load i32, i32* %69, align 8
  %bf.lshr72 = lshr i32 %bf.load71, 16
  %bf.clear73 = and i32 %bf.lshr72, 255
  %70 = load i32, i32* %mode, align 4
  %cmp74 = icmp ne i32 %bf.clear73, %70
  br i1 %cmp74, label %if.then.75, label %if.end.80

if.then.75:                                       ; preds = %if.else.66
  %71 = load i32, i32* %mode, align 4
  %72 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %fld76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1
  %arrayidx77 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld76, i32 0, i64 0
  %rtuint78 = bitcast %union.rtunion_def* %arrayidx77 to i32*
  %73 = load i32, i32* %rtuint78, align 4
  %call79 = call %struct.rtx_def* @gen_rtx_REG(i32 %71, i32 %73)
  store %struct.rtx_def* %call79, %struct.rtx_def** %reloadreg, align 8
  br label %if.end.80

if.end.80:                                        ; preds = %if.then.75, %if.else.66
  %74 = load i32, i32* %tertiary_icode, align 4
  %cmp81 = icmp ne i32 %74, 1317
  br i1 %cmp81, label %if.then.82, label %if.else.132

if.then.82:                                       ; preds = %if.end.80
  %75 = load i32, i32* %secondary_reload, align 4
  %idxprom83 = sext i32 %75 to i64
  %arrayidx84 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom83
  %secondary_out_reload85 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx84, i32 0, i32 14
  %76 = load i32, i32* %secondary_out_reload85, align 4
  %idxprom86 = sext i32 %76 to i64
  %arrayidx87 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom86
  %reg_rtx88 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx87, i32 0, i32 11
  %77 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx88, align 8
  store %struct.rtx_def* %77, %struct.rtx_def** %third_reloadreg, align 8
  %78 = load %struct.rtx_def*, %struct.rtx_def** %real_old, align 8
  %79 = bitcast %struct.rtx_def* %78 to i32*
  %bf.load89 = load i32, i32* %79, align 8
  %bf.clear90 = and i32 %bf.load89, 65535
  %cmp91 = icmp eq i32 %bf.clear90, 63
  br i1 %cmp91, label %land.lhs.true.92, label %if.end.123

land.lhs.true.92:                                 ; preds = %if.then.82
  %80 = load %struct.rtx_def*, %struct.rtx_def** %real_old, align 8
  %81 = bitcast %struct.rtx_def* %80 to i32*
  %bf.load93 = load i32, i32* %81, align 8
  %bf.lshr94 = lshr i32 %bf.load93, 16
  %bf.clear95 = and i32 %bf.lshr94, 255
  %idxprom96 = sext i32 %bf.clear95 to i64
  %arrayidx97 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom96
  %82 = load i8, i8* %arrayidx97, align 1
  %conv = zext i8 %82 to i32
  %83 = load %struct.rtx_def*, %struct.rtx_def** %real_old, align 8
  %fld98 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx99 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld98, i32 0, i64 0
  %rtx100 = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtx_def**
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rtx100, align 8
  %85 = bitcast %struct.rtx_def* %84 to i32*
  %bf.load101 = load i32, i32* %85, align 8
  %bf.lshr102 = lshr i32 %bf.load101, 16
  %bf.clear103 = and i32 %bf.lshr102, 255
  %idxprom104 = sext i32 %bf.clear103 to i64
  %arrayidx105 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom104
  %86 = load i8, i8* %arrayidx105, align 1
  %conv106 = zext i8 %86 to i32
  %cmp107 = icmp sgt i32 %conv, %conv106
  br i1 %cmp107, label %land.lhs.true.109, label %if.end.123

land.lhs.true.109:                                ; preds = %land.lhs.true.92
  %87 = load %struct.rtx_def*, %struct.rtx_def** %real_old, align 8
  %fld110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1
  %arrayidx111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld110, i32 0, i64 0
  %rtx112 = bitcast %union.rtunion_def* %arrayidx111 to %struct.rtx_def**
  %88 = load %struct.rtx_def*, %struct.rtx_def** %rtx112, align 8
  %89 = bitcast %struct.rtx_def* %88 to i32*
  %bf.load113 = load i32, i32* %89, align 8
  %bf.lshr114 = lshr i32 %bf.load113, 16
  %bf.clear115 = and i32 %bf.lshr114, 255
  %90 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %call116 = call %struct.rtx_def* @gen_lowpart_common(i32 %bf.clear115, %struct.rtx_def* %90)
  store %struct.rtx_def* %call116, %struct.rtx_def** %tem, align 8
  %cmp117 = icmp ne %struct.rtx_def* null, %call116
  br i1 %cmp117, label %if.then.119, label %if.end.123

if.then.119:                                      ; preds = %land.lhs.true.109
  %91 = load %struct.rtx_def*, %struct.rtx_def** %real_old, align 8
  %fld120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1
  %arrayidx121 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld120, i32 0, i64 0
  %rtx122 = bitcast %union.rtunion_def* %arrayidx121 to %struct.rtx_def**
  %92 = load %struct.rtx_def*, %struct.rtx_def** %rtx122, align 8
  store %struct.rtx_def* %92, %struct.rtx_def** %real_old, align 8
  %93 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %93, %struct.rtx_def** %reloadreg, align 8
  br label %if.end.123

if.end.123:                                       ; preds = %if.then.119, %land.lhs.true.109, %land.lhs.true.92, %if.then.82
  %94 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %95 = load %struct.rtx_def*, %struct.rtx_def** %second_reloadreg, align 8
  %96 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %opnum124 = getelementptr inbounds %struct.reload, %struct.reload* %96, i32 0, i32 12
  %97 = load i32, i32* %opnum124, align 4
  %98 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %when_needed125 = getelementptr inbounds %struct.reload, %struct.reload* %98, i32 0, i32 17
  %99 = load i32, i32* %when_needed125, align 4
  %call126 = call %struct.rtx_def* @gen_reload(%struct.rtx_def* %94, %struct.rtx_def* %95, i32 %97, i32 %99)
  %100 = load i32, i32* %tertiary_icode, align 4
  %idxprom127 = sext i32 %100 to i64
  %arrayidx128 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom127
  %genfun129 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx128, i32 0, i32 2
  %101 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun129, align 8
  %102 = load %struct.rtx_def*, %struct.rtx_def** %real_old, align 8
  %103 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %104 = load %struct.rtx_def*, %struct.rtx_def** %third_reloadreg, align 8
  %call130 = call %struct.rtx_def* (%struct.rtx_def*, ...) %101(%struct.rtx_def* %102, %struct.rtx_def* %103, %struct.rtx_def* %104)
  %call131 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call130)
  store i32 1, i32* %special, align 4
  br label %if.end.136

if.else.132:                                      ; preds = %if.end.80
  %105 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %106 = load %struct.rtx_def*, %struct.rtx_def** %second_reloadreg, align 8
  %107 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %opnum133 = getelementptr inbounds %struct.reload, %struct.reload* %107, i32 0, i32 12
  %108 = load i32, i32* %opnum133, align 4
  %109 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %when_needed134 = getelementptr inbounds %struct.reload, %struct.reload* %109, i32 0, i32 17
  %110 = load i32, i32* %when_needed134, align 4
  %call135 = call %struct.rtx_def* @gen_reload(%struct.rtx_def* %105, %struct.rtx_def* %106, i32 %108, i32 %110)
  br label %if.end.136

if.end.136:                                       ; preds = %if.else.132, %if.end.123
  br label %if.end.137

if.end.137:                                       ; preds = %if.end.136, %if.then.60
  br label %if.end.138

if.end.138:                                       ; preds = %if.end.137, %land.end
  br label %if.end.139

if.end.139:                                       ; preds = %if.end.138, %if.end.21
  %111 = load i32, i32* %special, align 4
  %tobool140 = icmp ne i32 %111, 0
  br i1 %tobool140, label %if.end.200, label %if.then.141

if.then.141:                                      ; preds = %if.end.139
  %112 = load i32, i32* @flag_expensive_optimizations, align 4
  %tobool142 = icmp ne i32 %112, 0
  br i1 %tobool142, label %lor.lhs.false.143, label %if.then.195

lor.lhs.false.143:                                ; preds = %if.then.141
  %113 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %114 = bitcast %struct.rtx_def* %113 to i32*
  %bf.load144 = load i32, i32* %114, align 8
  %bf.clear145 = and i32 %bf.load144, 65535
  %cmp146 = icmp ne i32 %bf.clear145, 61
  br i1 %cmp146, label %if.then.195, label %lor.lhs.false.148

lor.lhs.false.148:                                ; preds = %lor.lhs.false.143
  %115 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %116 = bitcast %struct.rtx_def* %115 to i32*
  %bf.load149 = load i32, i32* %116, align 8
  %bf.clear150 = and i32 %bf.load149, 65535
  %idxprom151 = sext i32 %bf.clear150 to i64
  %arrayidx152 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom151
  %117 = load i8, i8* %arrayidx152, align 1
  %conv153 = sext i8 %117 to i32
  %cmp154 = icmp eq i32 %conv153, 105
  br i1 %cmp154, label %cond.true, label %cond.false.172

cond.true:                                        ; preds = %lor.lhs.false.148
  %118 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld156 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1
  %arrayidx157 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld156, i32 0, i64 3
  %rtx158 = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtx_def**
  %119 = load %struct.rtx_def*, %struct.rtx_def** %rtx158, align 8
  %120 = bitcast %struct.rtx_def* %119 to i32*
  %bf.load159 = load i32, i32* %120, align 8
  %bf.clear160 = and i32 %bf.load159, 65535
  %cmp161 = icmp eq i32 %bf.clear160, 47
  br i1 %cmp161, label %cond.true.163, label %cond.false

cond.true.163:                                    ; preds = %cond.true
  %121 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld164 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %121, i32 0, i32 1
  %arrayidx165 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld164, i32 0, i64 3
  %rtx166 = bitcast %union.rtunion_def* %arrayidx165 to %struct.rtx_def**
  %122 = load %struct.rtx_def*, %struct.rtx_def** %rtx166, align 8
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %123 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %124 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld167 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1
  %arrayidx168 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld167, i32 0, i64 3
  %rtx169 = bitcast %union.rtunion_def* %arrayidx168 to %struct.rtx_def**
  %125 = load %struct.rtx_def*, %struct.rtx_def** %rtx169, align 8
  %call170 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %123, %struct.rtx_def* %125)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.163
  %cond171 = phi %struct.rtx_def* [ %122, %cond.true.163 ], [ %call170, %cond.false ]
  br label %cond.end.173

cond.false.172:                                   ; preds = %lor.lhs.false.148
  br label %cond.end.173

cond.end.173:                                     ; preds = %cond.false.172, %cond.end
  %cond174 = phi %struct.rtx_def* [ %cond171, %cond.end ], [ null, %cond.false.172 ]
  store %struct.rtx_def* %cond174, %struct.rtx_def** %set, align 8
  %tobool175 = icmp ne %struct.rtx_def* %cond174, null
  br i1 %tobool175, label %lor.lhs.false.176, label %if.then.195

lor.lhs.false.176:                                ; preds = %cond.end.173
  %126 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %127 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %127, i32 0, i32 1
  %arrayidx178 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld177, i32 0, i64 0
  %rtx179 = bitcast %union.rtunion_def* %arrayidx178 to %struct.rtx_def**
  %128 = load %struct.rtx_def*, %struct.rtx_def** %rtx179, align 8
  %call180 = call i32 @rtx_equal_p(%struct.rtx_def* %126, %struct.rtx_def* %128)
  %tobool181 = icmp ne i32 %call180, 0
  br i1 %tobool181, label %if.then.195, label %lor.lhs.false.182

lor.lhs.false.182:                                ; preds = %lor.lhs.false.176
  %129 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %130 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld183 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1
  %arrayidx184 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld183, i32 0, i64 1
  %rtx185 = bitcast %union.rtunion_def* %arrayidx184 to %struct.rtx_def**
  %131 = load %struct.rtx_def*, %struct.rtx_def** %rtx185, align 8
  %call186 = call i32 @reg_mentioned_p(%struct.rtx_def* %129, %struct.rtx_def* %131)
  %tobool187 = icmp ne i32 %call186, 0
  br i1 %tobool187, label %lor.lhs.false.188, label %if.then.195

lor.lhs.false.188:                                ; preds = %lor.lhs.false.182
  %132 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %fld189 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1
  %arrayidx190 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld189, i32 0, i64 0
  %rtuint191 = bitcast %union.rtunion_def* %arrayidx190 to i32*
  %133 = load i32, i32* %rtuint191, align 4
  %134 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %135 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %mode192 = getelementptr inbounds %struct.reload, %struct.reload* %135, i32 0, i32 5
  %136 = load i32, i32* %mode192, align 4
  %call193 = call i32 @regno_clobbered_p(i32 %133, %struct.rtx_def* %134, i32 %136, i32 0)
  %tobool194 = icmp ne i32 %call193, 0
  br i1 %tobool194, label %if.end.199, label %if.then.195

if.then.195:                                      ; preds = %lor.lhs.false.188, %lor.lhs.false.182, %lor.lhs.false.176, %cond.end.173, %lor.lhs.false.143, %if.then.141
  %137 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8
  %138 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %139 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %opnum196 = getelementptr inbounds %struct.reload, %struct.reload* %139, i32 0, i32 12
  %140 = load i32, i32* %opnum196, align 4
  %141 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %when_needed197 = getelementptr inbounds %struct.reload, %struct.reload* %141, i32 0, i32 17
  %142 = load i32, i32* %when_needed197, align 4
  %call198 = call %struct.rtx_def* @gen_reload(%struct.rtx_def* %137, %struct.rtx_def* %138, i32 %140, i32 %142)
  br label %if.end.199

if.end.199:                                       ; preds = %if.then.195, %lor.lhs.false.188
  br label %if.end.200

if.end.200:                                       ; preds = %if.end.199, %if.end.139
  %call201 = call %struct.rtx_def* @get_insns()
  store %struct.rtx_def* %call201, %struct.rtx_def** %p, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.200
  %143 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %tobool202 = icmp ne %struct.rtx_def* %143, null
  br i1 %tobool202, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %144 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %145 = bitcast %struct.rtx_def* %144 to i32*
  %bf.load203 = load i32, i32* %145, align 8
  %bf.clear204 = and i32 %bf.load203, 65535
  %idxprom205 = sext i32 %bf.clear204 to i64
  %arrayidx206 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom205
  %146 = load i8, i8* %arrayidx206, align 1
  %conv207 = sext i8 %146 to i32
  %cmp208 = icmp eq i32 %conv207, 105
  br i1 %cmp208, label %if.then.210, label %if.end.421

if.then.210:                                      ; preds = %for.body
  %147 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld211 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %147, i32 0, i32 1
  %arrayidx212 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld211, i32 0, i64 3
  %rtx213 = bitcast %union.rtunion_def* %arrayidx212 to %struct.rtx_def**
  %148 = load %struct.rtx_def*, %struct.rtx_def** %rtx213, align 8
  store %struct.rtx_def* %148, %struct.rtx_def** %pat, align 8
  %149 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  call void @note_stores(%struct.rtx_def* %149, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @forget_old_reloads_1, i8* null)
  %150 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %reg_rtx214 = getelementptr inbounds %struct.reload, %struct.reload* %150, i32 0, i32 11
  %151 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx214, align 8
  %152 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %call215 = call i32 @reg_mentioned_p(%struct.rtx_def* %151, %struct.rtx_def* %152)
  %tobool216 = icmp ne i32 %call215, 0
  br i1 %tobool216, label %if.then.217, label %if.end.420

if.then.217:                                      ; preds = %if.then.210
  %153 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %154 = bitcast %struct.rtx_def* %153 to i32*
  %bf.load219 = load i32, i32* %154, align 8
  %bf.clear220 = and i32 %bf.load219, 65535
  %idxprom221 = sext i32 %bf.clear220 to i64
  %arrayidx222 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom221
  %155 = load i8, i8* %arrayidx222, align 1
  %conv223 = sext i8 %155 to i32
  %cmp224 = icmp eq i32 %conv223, 105
  br i1 %cmp224, label %cond.true.226, label %cond.false.245

cond.true.226:                                    ; preds = %if.then.217
  %156 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld227 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %156, i32 0, i32 1
  %arrayidx228 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld227, i32 0, i64 3
  %rtx229 = bitcast %union.rtunion_def* %arrayidx228 to %struct.rtx_def**
  %157 = load %struct.rtx_def*, %struct.rtx_def** %rtx229, align 8
  %158 = bitcast %struct.rtx_def* %157 to i32*
  %bf.load230 = load i32, i32* %158, align 8
  %bf.clear231 = and i32 %bf.load230, 65535
  %cmp232 = icmp eq i32 %bf.clear231, 47
  br i1 %cmp232, label %cond.true.234, label %cond.false.238

cond.true.234:                                    ; preds = %cond.true.226
  %159 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld235 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1
  %arrayidx236 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld235, i32 0, i64 3
  %rtx237 = bitcast %union.rtunion_def* %arrayidx236 to %struct.rtx_def**
  %160 = load %struct.rtx_def*, %struct.rtx_def** %rtx237, align 8
  br label %cond.end.243

cond.false.238:                                   ; preds = %cond.true.226
  %161 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %162 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld239 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %162, i32 0, i32 1
  %arrayidx240 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld239, i32 0, i64 3
  %rtx241 = bitcast %union.rtunion_def* %arrayidx240 to %struct.rtx_def**
  %163 = load %struct.rtx_def*, %struct.rtx_def** %rtx241, align 8
  %call242 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %161, %struct.rtx_def* %163)
  br label %cond.end.243

cond.end.243:                                     ; preds = %cond.false.238, %cond.true.234
  %cond244 = phi %struct.rtx_def* [ %160, %cond.true.234 ], [ %call242, %cond.false.238 ]
  br label %cond.end.246

cond.false.245:                                   ; preds = %if.then.217
  br label %cond.end.246

cond.end.246:                                     ; preds = %cond.false.245, %cond.end.243
  %cond247 = phi %struct.rtx_def* [ %cond244, %cond.end.243 ], [ null, %cond.false.245 ]
  store %struct.rtx_def* %cond247, %struct.rtx_def** %set218, align 8
  %164 = load i32, i32* %j.addr, align 4
  %idxprom248 = sext i32 %164 to i64
  %arrayidx249 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i32 0, i64 %idxprom248
  %165 = load i32, i32* %arrayidx249, align 4
  %cmp250 = icmp slt i32 %165, 0
  br i1 %cmp250, label %land.lhs.true.252, label %if.end.277

land.lhs.true.252:                                ; preds = %cond.end.246
  %166 = load %struct.rtx_def*, %struct.rtx_def** %set218, align 8
  %tobool253 = icmp ne %struct.rtx_def* %166, null
  br i1 %tobool253, label %land.lhs.true.254, label %if.end.277

land.lhs.true.254:                                ; preds = %land.lhs.true.252
  %167 = load %struct.rtx_def*, %struct.rtx_def** %set218, align 8
  %fld255 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %167, i32 0, i32 1
  %arrayidx256 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld255, i32 0, i64 1
  %rtx257 = bitcast %union.rtunion_def* %arrayidx256 to %struct.rtx_def**
  %168 = load %struct.rtx_def*, %struct.rtx_def** %rtx257, align 8
  %169 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %reg_rtx258 = getelementptr inbounds %struct.reload, %struct.reload* %169, i32 0, i32 11
  %170 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx258, align 8
  %cmp259 = icmp eq %struct.rtx_def* %168, %170
  br i1 %cmp259, label %if.then.261, label %if.end.277

if.then.261:                                      ; preds = %land.lhs.true.254
  %171 = load %struct.rtx_def*, %struct.rtx_def** %set218, align 8
  %fld262 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %171, i32 0, i32 1
  %arrayidx263 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld262, i32 0, i64 1
  %rtx264 = bitcast %union.rtunion_def* %arrayidx263 to %struct.rtx_def**
  %172 = load %struct.rtx_def*, %struct.rtx_def** %rtx264, align 8
  %fld265 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %172, i32 0, i32 1
  %arrayidx266 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld265, i32 0, i64 0
  %rtuint267 = bitcast %union.rtunion_def* %arrayidx266 to i32*
  %173 = load i32, i32* %rtuint267, align 4
  store i32 %173, i32* %src, align 4
  %174 = load i32, i32* %src, align 4
  %175 = load i32, i32* %j.addr, align 4
  %idxprom268 = sext i32 %175 to i64
  %arrayidx269 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i32 0, i64 %idxprom268
  store i32 %174, i32* %arrayidx269, align 4
  %176 = load i32, i32* %src, align 4
  %sh_prom = zext i32 %176 to i64
  %shl = shl i64 1, %sh_prom
  %177 = load i64, i64* @reg_is_output_reload, align 8
  %or = or i64 %177, %shl
  store i64 %or, i64* @reg_is_output_reload, align 8
  %178 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %179 = load i32, i32* %src, align 4
  %call270 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %178, i32 1, i32 %179)
  %tobool271 = icmp ne %struct.rtx_def* %call270, null
  br i1 %tobool271, label %if.then.272, label %if.end.276

if.then.272:                                      ; preds = %if.then.261
  %180 = load i32, i32* %src, align 4
  %sh_prom273 = zext i32 %180 to i64
  %shl274 = shl i64 1, %sh_prom273
  %181 = load i64, i64* @reg_reloaded_died, align 8
  %or275 = or i64 %181, %shl274
  store i64 %or275, i64* @reg_reloaded_died, align 8
  br label %if.end.276

if.end.276:                                       ; preds = %if.then.272, %if.then.261
  br label %if.end.277

if.end.277:                                       ; preds = %if.end.276, %land.lhs.true.254, %land.lhs.true.252, %cond.end.246
  %182 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %reg_rtx278 = getelementptr inbounds %struct.reload, %struct.reload* %182, i32 0, i32 11
  %183 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx278, align 8
  %fld279 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %183, i32 0, i32 1
  %arrayidx280 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld279, i32 0, i64 0
  %rtuint281 = bitcast %union.rtunion_def* %arrayidx280 to i32*
  %184 = load i32, i32* %rtuint281, align 4
  %cmp282 = icmp ult i32 %184, 53
  br i1 %cmp282, label %if.then.284, label %if.end.419

if.then.284:                                      ; preds = %if.end.277
  %185 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %secondary_out_reload285 = getelementptr inbounds %struct.reload, %struct.reload* %185, i32 0, i32 14
  %186 = load i32, i32* %secondary_out_reload285, align 4
  store i32 %186, i32* %s, align 4
  %187 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %188 = bitcast %struct.rtx_def* %187 to i32*
  %bf.load286 = load i32, i32* %188, align 8
  %bf.clear287 = and i32 %bf.load286, 65535
  %idxprom288 = sext i32 %bf.clear287 to i64
  %arrayidx289 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom288
  %189 = load i8, i8* %arrayidx289, align 1
  %conv290 = sext i8 %189 to i32
  %cmp291 = icmp eq i32 %conv290, 105
  br i1 %cmp291, label %cond.true.293, label %cond.false.312

cond.true.293:                                    ; preds = %if.then.284
  %190 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld294 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %190, i32 0, i32 1
  %arrayidx295 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld294, i32 0, i64 3
  %rtx296 = bitcast %union.rtunion_def* %arrayidx295 to %struct.rtx_def**
  %191 = load %struct.rtx_def*, %struct.rtx_def** %rtx296, align 8
  %192 = bitcast %struct.rtx_def* %191 to i32*
  %bf.load297 = load i32, i32* %192, align 8
  %bf.clear298 = and i32 %bf.load297, 65535
  %cmp299 = icmp eq i32 %bf.clear298, 47
  br i1 %cmp299, label %cond.true.301, label %cond.false.305

cond.true.301:                                    ; preds = %cond.true.293
  %193 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld302 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %193, i32 0, i32 1
  %arrayidx303 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld302, i32 0, i64 3
  %rtx304 = bitcast %union.rtunion_def* %arrayidx303 to %struct.rtx_def**
  %194 = load %struct.rtx_def*, %struct.rtx_def** %rtx304, align 8
  br label %cond.end.310

cond.false.305:                                   ; preds = %cond.true.293
  %195 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %196 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld306 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %196, i32 0, i32 1
  %arrayidx307 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld306, i32 0, i64 3
  %rtx308 = bitcast %union.rtunion_def* %arrayidx307 to %struct.rtx_def**
  %197 = load %struct.rtx_def*, %struct.rtx_def** %rtx308, align 8
  %call309 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %195, %struct.rtx_def* %197)
  br label %cond.end.310

cond.end.310:                                     ; preds = %cond.false.305, %cond.true.301
  %cond311 = phi %struct.rtx_def* [ %194, %cond.true.301 ], [ %call309, %cond.false.305 ]
  br label %cond.end.313

cond.false.312:                                   ; preds = %if.then.284
  br label %cond.end.313

cond.end.313:                                     ; preds = %cond.false.312, %cond.end.310
  %cond314 = phi %struct.rtx_def* [ %cond311, %cond.end.310 ], [ null, %cond.false.312 ]
  store %struct.rtx_def* %cond314, %struct.rtx_def** %set218, align 8
  %198 = load i32, i32* %s, align 4
  %cmp315 = icmp sge i32 %198, 0
  br i1 %cmp315, label %land.lhs.true.317, label %if.else.321

land.lhs.true.317:                                ; preds = %cond.end.313
  %199 = load %struct.rtx_def*, %struct.rtx_def** %set218, align 8
  %cmp318 = icmp eq %struct.rtx_def* %199, null
  br i1 %cmp318, label %if.then.320, label %if.else.321

if.then.320:                                      ; preds = %land.lhs.true.317
  br label %if.end.418

if.else.321:                                      ; preds = %land.lhs.true.317, %cond.end.313
  %200 = load i32, i32* %s, align 4
  %cmp322 = icmp sge i32 %200, 0
  br i1 %cmp322, label %land.lhs.true.324, label %if.else.410

land.lhs.true.324:                                ; preds = %if.else.321
  %201 = load %struct.rtx_def*, %struct.rtx_def** %set218, align 8
  %fld325 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %201, i32 0, i32 1
  %arrayidx326 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld325, i32 0, i64 1
  %rtx327 = bitcast %union.rtunion_def* %arrayidx326 to %struct.rtx_def**
  %202 = load %struct.rtx_def*, %struct.rtx_def** %rtx327, align 8
  %203 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %reg_rtx328 = getelementptr inbounds %struct.reload, %struct.reload* %203, i32 0, i32 11
  %204 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx328, align 8
  %cmp329 = icmp eq %struct.rtx_def* %202, %204
  br i1 %cmp329, label %land.lhs.true.331, label %if.else.410

land.lhs.true.331:                                ; preds = %land.lhs.true.324
  %205 = load %struct.rtx_def*, %struct.rtx_def** %set218, align 8
  %fld332 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %205, i32 0, i32 1
  %arrayidx333 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld332, i32 0, i64 0
  %rtx334 = bitcast %union.rtunion_def* %arrayidx333 to %struct.rtx_def**
  %206 = load %struct.rtx_def*, %struct.rtx_def** %rtx334, align 8
  %207 = load i32, i32* %s, align 4
  %idxprom335 = sext i32 %207 to i64
  %arrayidx336 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom335
  %reg_rtx337 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx336, i32 0, i32 11
  %208 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx337, align 8
  %cmp338 = icmp eq %struct.rtx_def* %206, %208
  br i1 %cmp338, label %if.then.340, label %if.else.410

if.then.340:                                      ; preds = %land.lhs.true.331
  %209 = load i32, i32* %s, align 4
  %idxprom341 = sext i32 %209 to i64
  %arrayidx342 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom341
  %reg_rtx343 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx342, i32 0, i32 11
  %210 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx343, align 8
  store %struct.rtx_def* %210, %struct.rtx_def** %s_reg, align 8
  %211 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld344 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %211, i32 0, i32 1
  %arrayidx345 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld344, i32 0, i64 2
  %rtx346 = bitcast %union.rtunion_def* %arrayidx345 to %struct.rtx_def**
  %212 = load %struct.rtx_def*, %struct.rtx_def** %rtx346, align 8
  store %struct.rtx_def* %212, %struct.rtx_def** %next, align 8
  %213 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %out347 = getelementptr inbounds %struct.reload, %struct.reload* %213, i32 0, i32 1
  %214 = load %struct.rtx_def*, %struct.rtx_def** %out347, align 8
  %215 = load i32, i32* %s, align 4
  %idxprom348 = sext i32 %215 to i64
  %arrayidx349 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom348
  %out350 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx349, i32 0, i32 1
  store %struct.rtx_def* %214, %struct.rtx_def** %out350, align 8
  %216 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %out_reg = getelementptr inbounds %struct.reload, %struct.reload* %216, i32 0, i32 9
  %217 = load %struct.rtx_def*, %struct.rtx_def** %out_reg, align 8
  %218 = load i32, i32* %s, align 4
  %idxprom351 = sext i32 %218 to i64
  %arrayidx352 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom351
  %out_reg353 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx352, i32 0, i32 9
  store %struct.rtx_def* %217, %struct.rtx_def** %out_reg353, align 8
  %219 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %220 = bitcast %struct.rtx_def* %219 to i32*
  %bf.load354 = load i32, i32* %220, align 8
  %bf.clear355 = and i32 %bf.load354, 65535
  %idxprom356 = sext i32 %bf.clear355 to i64
  %arrayidx357 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom356
  %221 = load i8, i8* %arrayidx357, align 1
  %conv358 = sext i8 %221 to i32
  %cmp359 = icmp eq i32 %conv358, 105
  br i1 %cmp359, label %cond.true.361, label %cond.false.380

cond.true.361:                                    ; preds = %if.then.340
  %222 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %fld362 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %222, i32 0, i32 1
  %arrayidx363 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld362, i32 0, i64 3
  %rtx364 = bitcast %union.rtunion_def* %arrayidx363 to %struct.rtx_def**
  %223 = load %struct.rtx_def*, %struct.rtx_def** %rtx364, align 8
  %224 = bitcast %struct.rtx_def* %223 to i32*
  %bf.load365 = load i32, i32* %224, align 8
  %bf.clear366 = and i32 %bf.load365, 65535
  %cmp367 = icmp eq i32 %bf.clear366, 47
  br i1 %cmp367, label %cond.true.369, label %cond.false.373

cond.true.369:                                    ; preds = %cond.true.361
  %225 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %fld370 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %225, i32 0, i32 1
  %arrayidx371 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld370, i32 0, i64 3
  %rtx372 = bitcast %union.rtunion_def* %arrayidx371 to %struct.rtx_def**
  %226 = load %struct.rtx_def*, %struct.rtx_def** %rtx372, align 8
  br label %cond.end.378

cond.false.373:                                   ; preds = %cond.true.361
  %227 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %228 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %fld374 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %228, i32 0, i32 1
  %arrayidx375 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld374, i32 0, i64 3
  %rtx376 = bitcast %union.rtunion_def* %arrayidx375 to %struct.rtx_def**
  %229 = load %struct.rtx_def*, %struct.rtx_def** %rtx376, align 8
  %call377 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %227, %struct.rtx_def* %229)
  br label %cond.end.378

cond.end.378:                                     ; preds = %cond.false.373, %cond.true.369
  %cond379 = phi %struct.rtx_def* [ %226, %cond.true.369 ], [ %call377, %cond.false.373 ]
  br label %cond.end.381

cond.false.380:                                   ; preds = %if.then.340
  br label %cond.end.381

cond.end.381:                                     ; preds = %cond.false.380, %cond.end.378
  %cond382 = phi %struct.rtx_def* [ %cond379, %cond.end.378 ], [ null, %cond.false.380 ]
  store %struct.rtx_def* %cond382, %struct.rtx_def** %set218, align 8
  %230 = load %struct.rtx_def*, %struct.rtx_def** %set218, align 8
  %tobool383 = icmp ne %struct.rtx_def* %230, null
  br i1 %tobool383, label %land.lhs.true.384, label %if.end.409

land.lhs.true.384:                                ; preds = %cond.end.381
  %231 = load %struct.rtx_def*, %struct.rtx_def** %set218, align 8
  %fld385 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %231, i32 0, i32 1
  %arrayidx386 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld385, i32 0, i64 1
  %rtx387 = bitcast %union.rtunion_def* %arrayidx386 to %struct.rtx_def**
  %232 = load %struct.rtx_def*, %struct.rtx_def** %rtx387, align 8
  %233 = load %struct.rtx_def*, %struct.rtx_def** %s_reg, align 8
  %cmp388 = icmp eq %struct.rtx_def* %232, %233
  br i1 %cmp388, label %land.lhs.true.390, label %if.end.409

land.lhs.true.390:                                ; preds = %land.lhs.true.384
  %234 = load %struct.rtx_def*, %struct.rtx_def** %s_reg, align 8
  %fld391 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %234, i32 0, i32 1
  %arrayidx392 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld391, i32 0, i64 0
  %rtuint393 = bitcast %union.rtunion_def* %arrayidx392 to i32*
  %235 = load i32, i32* %rtuint393, align 4
  %idxprom394 = zext i32 %235 to i64
  %arrayidx395 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @new_spill_reg_store, i32 0, i64 %idxprom394
  %236 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx395, align 8
  %tobool396 = icmp ne %struct.rtx_def* %236, null
  br i1 %tobool396, label %if.end.409, label %if.then.397

if.then.397:                                      ; preds = %land.lhs.true.390
  %237 = load %struct.rtx_def*, %struct.rtx_def** %s_reg, align 8
  %fld398 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %237, i32 0, i32 1
  %arrayidx399 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld398, i32 0, i64 0
  %rtuint400 = bitcast %union.rtunion_def* %arrayidx399 to i32*
  %238 = load i32, i32* %rtuint400, align 4
  %sh_prom401 = zext i32 %238 to i64
  %shl402 = shl i64 1, %sh_prom401
  %239 = load i64, i64* @reg_is_output_reload, align 8
  %or403 = or i64 %239, %shl402
  store i64 %or403, i64* @reg_is_output_reload, align 8
  %240 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %241 = load %struct.rtx_def*, %struct.rtx_def** %s_reg, align 8
  %fld404 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %241, i32 0, i32 1
  %arrayidx405 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld404, i32 0, i64 0
  %rtuint406 = bitcast %union.rtunion_def* %arrayidx405 to i32*
  %242 = load i32, i32* %rtuint406, align 4
  %idxprom407 = zext i32 %242 to i64
  %arrayidx408 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @new_spill_reg_store, i32 0, i64 %idxprom407
  store %struct.rtx_def* %240, %struct.rtx_def** %arrayidx408, align 8
  br label %if.end.409

if.end.409:                                       ; preds = %if.then.397, %land.lhs.true.390, %land.lhs.true.384, %cond.end.381
  br label %if.end.417

if.else.410:                                      ; preds = %land.lhs.true.331, %land.lhs.true.324, %if.else.321
  %243 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %244 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %reg_rtx411 = getelementptr inbounds %struct.reload, %struct.reload* %244, i32 0, i32 11
  %245 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx411, align 8
  %fld412 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %245, i32 0, i32 1
  %arrayidx413 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld412, i32 0, i64 0
  %rtuint414 = bitcast %union.rtunion_def* %arrayidx413 to i32*
  %246 = load i32, i32* %rtuint414, align 4
  %idxprom415 = zext i32 %246 to i64
  %arrayidx416 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @new_spill_reg_store, i32 0, i64 %idxprom415
  store %struct.rtx_def* %243, %struct.rtx_def** %arrayidx416, align 8
  br label %if.end.417

if.end.417:                                       ; preds = %if.else.410, %if.end.409
  br label %if.end.418

if.end.418:                                       ; preds = %if.end.417, %if.then.320
  br label %if.end.419

if.end.419:                                       ; preds = %if.end.418, %if.end.277
  br label %if.end.420

if.end.420:                                       ; preds = %if.end.419, %if.then.210
  br label %if.end.421

if.end.421:                                       ; preds = %if.end.420, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.421
  %247 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld422 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %247, i32 0, i32 1
  %arrayidx423 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld422, i32 0, i64 2
  %rtx424 = bitcast %union.rtunion_def* %arrayidx423 to %struct.rtx_def**
  %248 = load %struct.rtx_def*, %struct.rtx_def** %rtx424, align 8
  store %struct.rtx_def* %248, %struct.rtx_def** %p, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %249 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %when_needed425 = getelementptr inbounds %struct.reload, %struct.reload* %249, i32 0, i32 17
  %250 = load i32, i32* %when_needed425, align 4
  %cmp426 = icmp eq i32 %250, 9
  br i1 %cmp426, label %if.then.428, label %if.else.437

if.then.428:                                      ; preds = %for.end
  %251 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %opnum429 = getelementptr inbounds %struct.reload, %struct.reload* %251, i32 0, i32 12
  %252 = load i32, i32* %opnum429, align 4
  %idxprom430 = sext i32 %252 to i64
  %arrayidx431 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @other_output_reload_insns, i32 0, i64 %idxprom430
  %253 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx431, align 8
  %call432 = call %struct.rtx_def* @emit_insns(%struct.rtx_def* %253)
  %call433 = call %struct.rtx_def* @get_insns()
  %254 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %opnum434 = getelementptr inbounds %struct.reload, %struct.reload* %254, i32 0, i32 12
  %255 = load i32, i32* %opnum434, align 4
  %idxprom435 = sext i32 %255 to i64
  %arrayidx436 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @other_output_reload_insns, i32 0, i64 %idxprom435
  store %struct.rtx_def* %call433, %struct.rtx_def** %arrayidx436, align 8
  br label %if.end.442

if.else.437:                                      ; preds = %for.end
  %call438 = call %struct.rtx_def* @get_insns()
  %256 = load %struct.reload*, %struct.reload** %rl.addr, align 8
  %opnum439 = getelementptr inbounds %struct.reload, %struct.reload* %256, i32 0, i32 12
  %257 = load i32, i32* %opnum439, align 4
  %idxprom440 = sext i32 %257 to i64
  %arrayidx441 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @output_reload_insns, i32 0, i64 %idxprom440
  store %struct.rtx_def* %call438, %struct.rtx_def** %arrayidx441, align 8
  br label %if.end.442

if.end.442:                                       ; preds = %if.else.437, %if.then.428
  %258 = load i32, i32* @flag_non_call_exceptions, align 4
  %tobool443 = icmp ne i32 %258, 0
  br i1 %tobool443, label %if.then.444, label %if.end.446

if.then.444:                                      ; preds = %if.end.442
  %259 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call445 = call %struct.rtx_def* @get_insns()
  call void @copy_eh_notes(%struct.rtx_def* %259, %struct.rtx_def* %call445)
  br label %if.end.446

if.end.446:                                       ; preds = %if.then.444, %if.end.442
  call void @end_sequence()
  ret void
}

declare void @start_sequence() #1

declare %struct.rtx_def* @emit_insns(%struct.rtx_def*) #1

declare void @cselib_init() #1

declare void @init_alias_analysis() #1

; Function Attrs: nounwind uwtable
define internal void @reload_cse_simplify(%struct.rtx_def* %insn) #0 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %body = alloca %struct.rtx_def*, align 8
  %count = alloca i32, align 4
  %value = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %count25 = alloca i32, align 4
  %value26 = alloca %struct.rtx_def*, align 8
  %part = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %body, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load = load i32, i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 47
  br i1 %cmp, label %if.then, label %if.else.20

if.then:                                          ; preds = %entry
  store i32 0, i32* %count, align 4
  %4 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call = call i32 @reload_cse_simplify_set(%struct.rtx_def* %4, %struct.rtx_def* %5)
  %6 = load i32, i32* %count, align 4
  %add = add nsw i32 %6, %call
  store i32 %add, i32* %count, align 4
  %7 = load i32, i32* %count, align 4
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %if.end.14, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %8 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8
  %call1 = call i32 @reload_cse_noop_set_p(%struct.rtx_def* %8)
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.then.3, label %if.end.14

if.then.3:                                        ; preds = %land.lhs.true
  %9 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8
  %fld4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i32 0, i64 0
  %rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rtx6, align 8
  store %struct.rtx_def* %10, %struct.rtx_def** %value, align 8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8
  %fld7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i32 0, i64 0
  %rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rtx9, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load10 = load i32, i32* %13, align 8
  %bf.lshr = lshr i32 %bf.load10, 30
  %bf.clear11 = and i32 %bf.lshr, 1
  %tobool12 = icmp ne i32 %bf.clear11, 0
  br i1 %tobool12, label %if.end, label %if.then.13

if.then.13:                                       ; preds = %if.then.3
  store %struct.rtx_def* null, %struct.rtx_def** %value, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.13, %if.then.3
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %15 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8
  call void @reload_cse_delete_noop_set(%struct.rtx_def* %14, %struct.rtx_def* %15)
  br label %if.end.104

if.end.14:                                        ; preds = %land.lhs.true, %if.then
  %16 = load i32, i32* %count, align 4
  %cmp15 = icmp sgt i32 %16, 0
  br i1 %cmp15, label %if.then.16, label %if.else

if.then.16:                                       ; preds = %if.end.14
  %call17 = call i32 @apply_change_group()
  br label %if.end.19

if.else:                                          ; preds = %if.end.14
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call18 = call i32 @reload_cse_simplify_operands(%struct.rtx_def* %17)
  br label %if.end.19

if.end.19:                                        ; preds = %if.else, %if.then.16
  br label %if.end.104

if.else.20:                                       ; preds = %entry
  %18 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load21 = load i32, i32* %19, align 8
  %bf.clear22 = and i32 %bf.load21, 65535
  %cmp23 = icmp eq i32 %bf.clear22, 39
  br i1 %cmp23, label %if.then.24, label %if.end.103

if.then.24:                                       ; preds = %if.else.20
  store i32 0, i32* %count25, align 4
  store %struct.rtx_def* null, %struct.rtx_def** %value26, align 8
  %20 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8
  %fld27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i32 0, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtvec_def**
  %21 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %21, i32 0, i32 0
  %22 = load i32, i32* %num_elem, align 4
  %sub = sub nsw i32 %22, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.24
  %23 = load i32, i32* %i, align 4
  %cmp29 = icmp sge i32 %23, 0
  br i1 %cmp29, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %24 = load i32, i32* %i, align 4
  %idxprom = sext i32 %24 to i64
  %25 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8
  %fld30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i32 0, i64 0
  %rtvec32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtvec_def**
  %26 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec32, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %26, i32 0, i32 1
  %arrayidx33 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom
  %27 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx33, align 8
  store %struct.rtx_def* %27, %struct.rtx_def** %part, align 8
  %28 = load %struct.rtx_def*, %struct.rtx_def** %part, align 8
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load34 = load i32, i32* %29, align 8
  %bf.clear35 = and i32 %bf.load34, 65535
  %cmp36 = icmp eq i32 %bf.clear35, 47
  br i1 %cmp36, label %if.then.37, label %if.else.57

if.then.37:                                       ; preds = %for.body
  %30 = load %struct.rtx_def*, %struct.rtx_def** %part, align 8
  %call38 = call i32 @reload_cse_noop_set_p(%struct.rtx_def* %30)
  %tobool39 = icmp ne i32 %call38, 0
  br i1 %tobool39, label %if.end.41, label %if.then.40

if.then.40:                                       ; preds = %if.then.37
  br label %for.end

if.end.41:                                        ; preds = %if.then.37
  %31 = load %struct.rtx_def*, %struct.rtx_def** %part, align 8
  %fld42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i32 0, i64 0
  %rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rtx44, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load45 = load i32, i32* %33, align 8
  %bf.lshr46 = lshr i32 %bf.load45, 30
  %bf.clear47 = and i32 %bf.lshr46, 1
  %tobool48 = icmp ne i32 %bf.clear47, 0
  br i1 %tobool48, label %if.then.49, label %if.end.56

if.then.49:                                       ; preds = %if.end.41
  %34 = load %struct.rtx_def*, %struct.rtx_def** %value26, align 8
  %tobool50 = icmp ne %struct.rtx_def* %34, null
  br i1 %tobool50, label %if.then.51, label %if.end.52

if.then.51:                                       ; preds = %if.then.49
  br label %for.end

if.end.52:                                        ; preds = %if.then.49
  %35 = load %struct.rtx_def*, %struct.rtx_def** %part, align 8
  %fld53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i32 0, i64 0
  %rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rtx55, align 8
  store %struct.rtx_def* %36, %struct.rtx_def** %value26, align 8
  br label %if.end.56

if.end.56:                                        ; preds = %if.end.52, %if.end.41
  br label %if.end.63

if.else.57:                                       ; preds = %for.body
  %37 = load %struct.rtx_def*, %struct.rtx_def** %part, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load58 = load i32, i32* %38, align 8
  %bf.clear59 = and i32 %bf.load58, 65535
  %cmp60 = icmp ne i32 %bf.clear59, 49
  br i1 %cmp60, label %if.then.61, label %if.end.62

if.then.61:                                       ; preds = %if.else.57
  br label %for.end

if.end.62:                                        ; preds = %if.else.57
  br label %if.end.63

if.end.63:                                        ; preds = %if.end.62, %if.end.56
  br label %for.inc

for.inc:                                          ; preds = %if.end.63
  %39 = load i32, i32* %i, align 4
  %dec = add nsw i32 %39, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then.61, %if.then.51, %if.then.40, %for.cond
  %40 = load i32, i32* %i, align 4
  %cmp64 = icmp slt i32 %40, 0
  br i1 %cmp64, label %if.then.65, label %if.end.66

if.then.65:                                       ; preds = %for.end
  %41 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %42 = load %struct.rtx_def*, %struct.rtx_def** %value26, align 8
  call void @reload_cse_delete_noop_set(%struct.rtx_def* %41, %struct.rtx_def* %42)
  br label %if.end.104

if.end.66:                                        ; preds = %for.end
  %43 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8
  %fld67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i32 0, i64 0
  %rtvec69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtvec_def**
  %44 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec69, align 8
  %num_elem70 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %44, i32 0, i32 0
  %45 = load i32, i32* %num_elem70, align 4
  %sub71 = sub nsw i32 %45, 1
  store i32 %sub71, i32* %i, align 4
  br label %for.cond.72

for.cond.72:                                      ; preds = %for.inc.94, %if.end.66
  %46 = load i32, i32* %i, align 4
  %cmp73 = icmp sge i32 %46, 0
  br i1 %cmp73, label %for.body.74, label %for.end.96

for.body.74:                                      ; preds = %for.cond.72
  %47 = load i32, i32* %i, align 4
  %idxprom75 = sext i32 %47 to i64
  %48 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8
  %fld76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1
  %arrayidx77 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld76, i32 0, i64 0
  %rtvec78 = bitcast %union.rtunion_def* %arrayidx77 to %struct.rtvec_def**
  %49 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec78, align 8
  %elem79 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %49, i32 0, i32 1
  %arrayidx80 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem79, i32 0, i64 %idxprom75
  %50 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx80, align 8
  %51 = bitcast %struct.rtx_def* %50 to i32*
  %bf.load81 = load i32, i32* %51, align 8
  %bf.clear82 = and i32 %bf.load81, 65535
  %cmp83 = icmp eq i32 %bf.clear82, 47
  br i1 %cmp83, label %if.then.84, label %if.end.93

if.then.84:                                       ; preds = %for.body.74
  %52 = load i32, i32* %i, align 4
  %idxprom85 = sext i32 %52 to i64
  %53 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8
  %fld86 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx87 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld86, i32 0, i64 0
  %rtvec88 = bitcast %union.rtunion_def* %arrayidx87 to %struct.rtvec_def**
  %54 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec88, align 8
  %elem89 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %54, i32 0, i32 1
  %arrayidx90 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem89, i32 0, i64 %idxprom85
  %55 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx90, align 8
  %56 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call91 = call i32 @reload_cse_simplify_set(%struct.rtx_def* %55, %struct.rtx_def* %56)
  %57 = load i32, i32* %count25, align 4
  %add92 = add nsw i32 %57, %call91
  store i32 %add92, i32* %count25, align 4
  br label %if.end.93

if.end.93:                                        ; preds = %if.then.84, %for.body.74
  br label %for.inc.94

for.inc.94:                                       ; preds = %if.end.93
  %58 = load i32, i32* %i, align 4
  %dec95 = add nsw i32 %58, -1
  store i32 %dec95, i32* %i, align 4
  br label %for.cond.72

for.end.96:                                       ; preds = %for.cond.72
  %59 = load i32, i32* %count25, align 4
  %cmp97 = icmp sgt i32 %59, 0
  br i1 %cmp97, label %if.then.98, label %if.else.100

if.then.98:                                       ; preds = %for.end.96
  %call99 = call i32 @apply_change_group()
  br label %if.end.102

if.else.100:                                      ; preds = %for.end.96
  %60 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call101 = call i32 @reload_cse_simplify_operands(%struct.rtx_def* %60)
  br label %if.end.102

if.end.102:                                       ; preds = %if.else.100, %if.then.98
  br label %if.end.103

if.end.103:                                       ; preds = %if.end.102, %if.else.20
  br label %if.end.104

if.end.104:                                       ; preds = %if.end, %if.then.65, %if.end.103, %if.end.19
  ret void
}

declare void @cselib_process_insn(%struct.rtx_def*) #1

declare void @end_alias_analysis() #1

declare void @cselib_finish() #1

; Function Attrs: nounwind uwtable
define internal i32 @reload_cse_simplify_set(%struct.rtx_def* %set, %struct.rtx_def* %insn) #0 {
entry:
  %retval = alloca i32, align 4
  %set.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %did_change = alloca i32, align 4
  %dreg = alloca i32, align 4
  %src = alloca %struct.rtx_def*, align 8
  %dclass = alloca i32, align 4
  %old_cost = alloca i32, align 4
  %val = alloca %struct.cselib_val_struct*, align 8
  %l = alloca %struct.elt_loc_list*, align 8
  %this_rtx = alloca %struct.rtx_def*, align 8
  %this_cost = alloca i32, align 4
  store %struct.rtx_def* %set, %struct.rtx_def** %set.addr, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store i32 0, i32* %did_change, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %call = call i32 @true_regnum(%struct.rtx_def* %1)
  store i32 %call, i32* %dreg, align 4
  %2 = load i32, i32* %dreg, align 4
  %cmp = icmp slt i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1, i32 0, i64 1
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rtx3, align 8
  store %struct.rtx_def* %4, %struct.rtx_def** %src, align 8
  %5 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %call4 = call i32 @side_effects_p(%struct.rtx_def* %5)
  %tobool = icmp ne i32 %call4, 0
  br i1 %tobool, label %if.then.7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %call5 = call i32 @true_regnum(%struct.rtx_def* %6)
  %cmp6 = icmp sge i32 %call5, 0
  br i1 %cmp6, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %retval
  br label %return

if.end.8:                                         ; preds = %lor.lhs.false
  %7 = load i32, i32* %dreg, align 4
  %idxprom = sext i32 %7 to i64
  %arrayidx9 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i32 0, i64 %idxprom
  %8 = load i32, i32* %arrayidx9, align 4
  store i32 %8, i32* %dclass, align 4
  %9 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load = load i32, i32* %10, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp10 = icmp eq i32 %bf.clear, 66
  br i1 %cmp10, label %if.then.11, label %if.else

if.then.11:                                       ; preds = %if.end.8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load12 = load i32, i32* %12, align 8
  %bf.lshr = lshr i32 %bf.load12, 16
  %bf.clear13 = and i32 %bf.lshr, 255
  %13 = load i32, i32* %dclass, align 4
  %call14 = call i32 @ix86_memory_move_cost(i32 %bf.clear13, i32 %13, i32 1)
  store i32 %call14, i32* %old_cost, align 4
  br label %if.end.65

if.else:                                          ; preds = %if.end.8
  %14 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %15 = bitcast %struct.rtx_def* %14 to i32*
  %bf.load15 = load i32, i32* %15, align 8
  %bf.clear16 = and i32 %bf.load15, 65535
  %cmp17 = icmp eq i32 %bf.clear16, 67
  br i1 %cmp17, label %if.then.46, label %lor.lhs.false.18

lor.lhs.false.18:                                 ; preds = %if.else
  %16 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load19 = load i32, i32* %17, align 8
  %bf.clear20 = and i32 %bf.load19, 65535
  %cmp21 = icmp eq i32 %bf.clear20, 68
  br i1 %cmp21, label %if.then.46, label %lor.lhs.false.22

lor.lhs.false.22:                                 ; preds = %lor.lhs.false.18
  %18 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load23 = load i32, i32* %19, align 8
  %bf.clear24 = and i32 %bf.load23, 65535
  %cmp25 = icmp eq i32 %bf.clear24, 54
  br i1 %cmp25, label %if.then.46, label %lor.lhs.false.26

lor.lhs.false.26:                                 ; preds = %lor.lhs.false.22
  %20 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load27 = load i32, i32* %21, align 8
  %bf.clear28 = and i32 %bf.load27, 65535
  %cmp29 = icmp eq i32 %bf.clear28, 55
  br i1 %cmp29, label %if.then.46, label %lor.lhs.false.30

lor.lhs.false.30:                                 ; preds = %lor.lhs.false.26
  %22 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %23 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load31 = load i32, i32* %23, align 8
  %bf.clear32 = and i32 %bf.load31, 65535
  %cmp33 = icmp eq i32 %bf.clear32, 58
  br i1 %cmp33, label %if.then.46, label %lor.lhs.false.34

lor.lhs.false.34:                                 ; preds = %lor.lhs.false.30
  %24 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load35 = load i32, i32* %25, align 8
  %bf.clear36 = and i32 %bf.load35, 65535
  %cmp37 = icmp eq i32 %bf.clear36, 134
  br i1 %cmp37, label %if.then.46, label %lor.lhs.false.38

lor.lhs.false.38:                                 ; preds = %lor.lhs.false.34
  %26 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %27 = bitcast %struct.rtx_def* %26 to i32*
  %bf.load39 = load i32, i32* %27, align 8
  %bf.clear40 = and i32 %bf.load39, 65535
  %cmp41 = icmp eq i32 %bf.clear40, 56
  br i1 %cmp41, label %if.then.46, label %lor.lhs.false.42

lor.lhs.false.42:                                 ; preds = %lor.lhs.false.38
  %28 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load43 = load i32, i32* %29, align 8
  %bf.clear44 = and i32 %bf.load43, 65535
  %cmp45 = icmp eq i32 %bf.clear44, 140
  br i1 %cmp45, label %if.then.46, label %if.else.48

if.then.46:                                       ; preds = %lor.lhs.false.42, %lor.lhs.false.38, %lor.lhs.false.34, %lor.lhs.false.30, %lor.lhs.false.26, %lor.lhs.false.22, %lor.lhs.false.18, %if.else
  %30 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %call47 = call i32 @rtx_cost(%struct.rtx_def* %30, i32 47)
  store i32 %call47, i32* %old_cost, align 4
  br label %if.end.64

if.else.48:                                       ; preds = %lor.lhs.false.42
  %31 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load49 = load i32, i32* %32, align 8
  %bf.clear50 = and i32 %bf.load49, 65535
  %cmp51 = icmp eq i32 %bf.clear50, 61
  br i1 %cmp51, label %if.then.52, label %if.else.61

if.then.52:                                       ; preds = %if.else.48
  %33 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %34 = bitcast %struct.rtx_def* %33 to i32*
  %bf.load53 = load i32, i32* %34, align 8
  %bf.lshr54 = lshr i32 %bf.load53, 16
  %bf.clear55 = and i32 %bf.lshr54, 255
  %35 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx57 to i32*
  %36 = load i32, i32* %rtuint, align 4
  %idxprom58 = zext i32 %36 to i64
  %arrayidx59 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i32 0, i64 %idxprom58
  %37 = load i32, i32* %arrayidx59, align 4
  %38 = load i32, i32* %dclass, align 4
  %call60 = call i32 @ix86_register_move_cost(i32 %bf.clear55, i32 %37, i32 %38)
  store i32 %call60, i32* %old_cost, align 4
  br label %if.end.63

if.else.61:                                       ; preds = %if.else.48
  %39 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %call62 = call i32 @rtx_cost(%struct.rtx_def* %39, i32 47)
  store i32 %call62, i32* %old_cost, align 4
  br label %if.end.63

if.end.63:                                        ; preds = %if.else.61, %if.then.52
  br label %if.end.64

if.end.64:                                        ; preds = %if.end.63, %if.then.46
  br label %if.end.65

if.end.65:                                        ; preds = %if.end.64, %if.then.11
  %40 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %41 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx67 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld66, i32 0, i64 0
  %rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rtx68, align 8
  %43 = bitcast %struct.rtx_def* %42 to i32*
  %bf.load69 = load i32, i32* %43, align 8
  %bf.lshr70 = lshr i32 %bf.load69, 16
  %bf.clear71 = and i32 %bf.lshr70, 255
  %call72 = call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %40, i32 %bf.clear71, i32 0)
  store %struct.cselib_val_struct* %call72, %struct.cselib_val_struct** %val, align 8
  %44 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val, align 8
  %tobool73 = icmp ne %struct.cselib_val_struct* %44, null
  br i1 %tobool73, label %if.end.75, label %if.then.74

if.then.74:                                       ; preds = %if.end.65
  store i32 0, i32* %retval
  br label %return

if.end.75:                                        ; preds = %if.end.65
  %45 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val, align 8
  %locs = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %45, i32 0, i32 2
  %46 = load %struct.elt_loc_list*, %struct.elt_loc_list** %locs, align 8
  store %struct.elt_loc_list* %46, %struct.elt_loc_list** %l, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.75
  %47 = load %struct.elt_loc_list*, %struct.elt_loc_list** %l, align 8
  %tobool76 = icmp ne %struct.elt_loc_list* %47, null
  br i1 %tobool76, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %48 = load %struct.elt_loc_list*, %struct.elt_loc_list** %l, align 8
  %loc = getelementptr inbounds %struct.elt_loc_list, %struct.elt_loc_list* %48, i32 0, i32 1
  %49 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8
  store %struct.rtx_def* %49, %struct.rtx_def** %this_rtx, align 8
  %50 = load %struct.rtx_def*, %struct.rtx_def** %this_rtx, align 8
  %51 = bitcast %struct.rtx_def* %50 to i32*
  %bf.load77 = load i32, i32* %51, align 8
  %bf.clear78 = and i32 %bf.load77, 65535
  %cmp79 = icmp eq i32 %bf.clear78, 67
  br i1 %cmp79, label %land.lhs.true, label %lor.lhs.false.80

lor.lhs.false.80:                                 ; preds = %for.body
  %52 = load %struct.rtx_def*, %struct.rtx_def** %this_rtx, align 8
  %53 = bitcast %struct.rtx_def* %52 to i32*
  %bf.load81 = load i32, i32* %53, align 8
  %bf.clear82 = and i32 %bf.load81, 65535
  %cmp83 = icmp eq i32 %bf.clear82, 68
  br i1 %cmp83, label %land.lhs.true, label %lor.lhs.false.84

lor.lhs.false.84:                                 ; preds = %lor.lhs.false.80
  %54 = load %struct.rtx_def*, %struct.rtx_def** %this_rtx, align 8
  %55 = bitcast %struct.rtx_def* %54 to i32*
  %bf.load85 = load i32, i32* %55, align 8
  %bf.clear86 = and i32 %bf.load85, 65535
  %cmp87 = icmp eq i32 %bf.clear86, 54
  br i1 %cmp87, label %land.lhs.true, label %lor.lhs.false.88

lor.lhs.false.88:                                 ; preds = %lor.lhs.false.84
  %56 = load %struct.rtx_def*, %struct.rtx_def** %this_rtx, align 8
  %57 = bitcast %struct.rtx_def* %56 to i32*
  %bf.load89 = load i32, i32* %57, align 8
  %bf.clear90 = and i32 %bf.load89, 65535
  %cmp91 = icmp eq i32 %bf.clear90, 55
  br i1 %cmp91, label %land.lhs.true, label %lor.lhs.false.92

lor.lhs.false.92:                                 ; preds = %lor.lhs.false.88
  %58 = load %struct.rtx_def*, %struct.rtx_def** %this_rtx, align 8
  %59 = bitcast %struct.rtx_def* %58 to i32*
  %bf.load93 = load i32, i32* %59, align 8
  %bf.clear94 = and i32 %bf.load93, 65535
  %cmp95 = icmp eq i32 %bf.clear94, 58
  br i1 %cmp95, label %land.lhs.true, label %lor.lhs.false.96

lor.lhs.false.96:                                 ; preds = %lor.lhs.false.92
  %60 = load %struct.rtx_def*, %struct.rtx_def** %this_rtx, align 8
  %61 = bitcast %struct.rtx_def* %60 to i32*
  %bf.load97 = load i32, i32* %61, align 8
  %bf.clear98 = and i32 %bf.load97, 65535
  %cmp99 = icmp eq i32 %bf.clear98, 134
  br i1 %cmp99, label %land.lhs.true, label %lor.lhs.false.100

lor.lhs.false.100:                                ; preds = %lor.lhs.false.96
  %62 = load %struct.rtx_def*, %struct.rtx_def** %this_rtx, align 8
  %63 = bitcast %struct.rtx_def* %62 to i32*
  %bf.load101 = load i32, i32* %63, align 8
  %bf.clear102 = and i32 %bf.load101, 65535
  %cmp103 = icmp eq i32 %bf.clear102, 56
  br i1 %cmp103, label %land.lhs.true, label %lor.lhs.false.104

lor.lhs.false.104:                                ; preds = %lor.lhs.false.100
  %64 = load %struct.rtx_def*, %struct.rtx_def** %this_rtx, align 8
  %65 = bitcast %struct.rtx_def* %64 to i32*
  %bf.load105 = load i32, i32* %65, align 8
  %bf.clear106 = and i32 %bf.load105, 65535
  %cmp107 = icmp eq i32 %bf.clear106, 140
  br i1 %cmp107, label %land.lhs.true, label %if.else.112

land.lhs.true:                                    ; preds = %lor.lhs.false.104, %lor.lhs.false.100, %lor.lhs.false.96, %lor.lhs.false.92, %lor.lhs.false.88, %lor.lhs.false.84, %lor.lhs.false.80, %for.body
  %66 = load %struct.rtx_def*, %struct.rtx_def** %this_rtx, align 8
  %call108 = call i32 @references_value_p(%struct.rtx_def* %66, i32 0)
  %tobool109 = icmp ne i32 %call108, 0
  br i1 %tobool109, label %if.else.112, label %if.then.110

if.then.110:                                      ; preds = %land.lhs.true
  %67 = load %struct.rtx_def*, %struct.rtx_def** %this_rtx, align 8
  %call111 = call i32 @rtx_cost(%struct.rtx_def* %67, i32 47)
  store i32 %call111, i32* %this_cost, align 4
  br label %if.end.128

if.else.112:                                      ; preds = %land.lhs.true, %lor.lhs.false.104
  %68 = load %struct.rtx_def*, %struct.rtx_def** %this_rtx, align 8
  %69 = bitcast %struct.rtx_def* %68 to i32*
  %bf.load113 = load i32, i32* %69, align 8
  %bf.clear114 = and i32 %bf.load113, 65535
  %cmp115 = icmp eq i32 %bf.clear114, 61
  br i1 %cmp115, label %if.then.116, label %if.else.126

if.then.116:                                      ; preds = %if.else.112
  %70 = load %struct.rtx_def*, %struct.rtx_def** %this_rtx, align 8
  %71 = bitcast %struct.rtx_def* %70 to i32*
  %bf.load117 = load i32, i32* %71, align 8
  %bf.lshr118 = lshr i32 %bf.load117, 16
  %bf.clear119 = and i32 %bf.lshr118, 255
  %72 = load %struct.rtx_def*, %struct.rtx_def** %this_rtx, align 8
  %fld120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1
  %arrayidx121 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld120, i32 0, i64 0
  %rtuint122 = bitcast %union.rtunion_def* %arrayidx121 to i32*
  %73 = load i32, i32* %rtuint122, align 4
  %idxprom123 = zext i32 %73 to i64
  %arrayidx124 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i32 0, i64 %idxprom123
  %74 = load i32, i32* %arrayidx124, align 4
  %75 = load i32, i32* %dclass, align 4
  %call125 = call i32 @ix86_register_move_cost(i32 %bf.clear119, i32 %74, i32 %75)
  store i32 %call125, i32* %this_cost, align 4
  br label %if.end.127

if.else.126:                                      ; preds = %if.else.112
  br label %for.inc

if.end.127:                                       ; preds = %if.then.116
  br label %if.end.128

if.end.128:                                       ; preds = %if.end.127, %if.then.110
  %76 = load i32, i32* %this_cost, align 4
  %77 = load i32, i32* %old_cost, align 4
  %cmp129 = icmp slt i32 %76, %77
  br i1 %cmp129, label %if.then.143, label %lor.lhs.false.130

lor.lhs.false.130:                                ; preds = %if.end.128
  %78 = load i32, i32* %this_cost, align 4
  %79 = load i32, i32* %old_cost, align 4
  %cmp131 = icmp eq i32 %78, %79
  br i1 %cmp131, label %land.lhs.true.132, label %if.end.149

land.lhs.true.132:                                ; preds = %lor.lhs.false.130
  %80 = load %struct.rtx_def*, %struct.rtx_def** %this_rtx, align 8
  %81 = bitcast %struct.rtx_def* %80 to i32*
  %bf.load133 = load i32, i32* %81, align 8
  %bf.clear134 = and i32 %bf.load133, 65535
  %cmp135 = icmp eq i32 %bf.clear134, 61
  br i1 %cmp135, label %land.lhs.true.136, label %if.end.149

land.lhs.true.136:                                ; preds = %land.lhs.true.132
  %82 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1
  %arrayidx138 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld137, i32 0, i64 1
  %rtx139 = bitcast %union.rtunion_def* %arrayidx138 to %struct.rtx_def**
  %83 = load %struct.rtx_def*, %struct.rtx_def** %rtx139, align 8
  %84 = bitcast %struct.rtx_def* %83 to i32*
  %bf.load140 = load i32, i32* %84, align 8
  %bf.clear141 = and i32 %bf.load140, 65535
  %cmp142 = icmp ne i32 %bf.clear141, 61
  br i1 %cmp142, label %if.then.143, label %if.end.149

if.then.143:                                      ; preds = %land.lhs.true.136, %if.end.128
  %85 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %86 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1
  %arrayidx145 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld144, i32 0, i64 1
  %rtx146 = bitcast %union.rtunion_def* %arrayidx145 to %struct.rtx_def**
  %87 = load %struct.rtx_def*, %struct.rtx_def** %this_rtx, align 8
  %call147 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %87)
  %call148 = call i32 @validate_change(%struct.rtx_def* %85, %struct.rtx_def** %rtx146, %struct.rtx_def* %call147, i32 1)
  %88 = load i32, i32* %this_cost, align 4
  store i32 %88, i32* %old_cost, align 4
  store i32 1, i32* %did_change, align 4
  br label %if.end.149

if.end.149:                                       ; preds = %if.then.143, %land.lhs.true.136, %land.lhs.true.132, %lor.lhs.false.130
  br label %for.inc

for.inc:                                          ; preds = %if.end.149, %if.else.126
  %89 = load %struct.elt_loc_list*, %struct.elt_loc_list** %l, align 8
  %next = getelementptr inbounds %struct.elt_loc_list, %struct.elt_loc_list* %89, i32 0, i32 0
  %90 = load %struct.elt_loc_list*, %struct.elt_loc_list** %next, align 8
  store %struct.elt_loc_list* %90, %struct.elt_loc_list** %l, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %91 = load i32, i32* %did_change, align 4
  store i32 %91, i32* %retval
  br label %return

return:                                           ; preds = %for.end, %if.then.74, %if.then.7, %if.then
  %92 = load i32, i32* %retval
  ret i32 %92
}

; Function Attrs: nounwind uwtable
define internal i32 @reload_cse_noop_set_p(%struct.rtx_def* %set) #0 {
entry:
  %set.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %set, %struct.rtx_def** %set.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1, i32 0, i64 1
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx3, align 8
  %call = call i32 @rtx_equal_for_cselib_p(%struct.rtx_def* %1, %struct.rtx_def* %3)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal void @reload_cse_delete_noop_set(%struct.rtx_def* %insn, %struct.rtx_def* %value) #0 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %value.addr = alloca %struct.rtx_def*, align 8
  %purge = alloca i8, align 1
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store %struct.rtx_def* %value, %struct.rtx_def** %value.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32, i32* %rtint, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_for_insn, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2, i32 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx1 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %bb, i32 0, i64 %idxprom
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx1, align 8
  %end = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i32 0, i32 1
  %4 = load %struct.rtx_def*, %struct.rtx_def** %end, align 8
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %cmp = icmp eq %struct.rtx_def* %4, %5
  %frombool = zext i1 %cmp to i8
  store i8 %frombool, i8* %purge, align 1
  %6 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %tobool = icmp ne %struct.rtx_def* %6, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %7 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %call = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %7)
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**
  store %struct.rtx_def* %call, %struct.rtx_def** %rtx, align 8
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i32 0, i64 4
  %rtint6 = bitcast %union.rtunion_def* %arrayidx5 to i32*
  store i32 -1, i32* %rtint6, align 4
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i32 0, i64 6
  %rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %rtx9, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call10 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %11)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load i8, i8* %purge, align 1
  %tobool11 = trunc i8 %12 to i1
  br i1 %tobool11, label %if.then.12, label %if.end.21

if.then.12:                                       ; preds = %if.end
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i32 0, i64 0
  %rtint15 = bitcast %union.rtunion_def* %arrayidx14 to i32*
  %14 = load i32, i32* %rtint15, align 4
  %idxprom16 = sext i32 %14 to i64
  %15 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_for_insn, align 8
  %data17 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %15, i32 0, i32 4
  %bb18 = bitcast %union.varray_data_tag* %data17 to [1 x %struct.basic_block_def*]*
  %arrayidx19 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %bb18, i32 0, i64 %idxprom16
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx19, align 8
  %call20 = call zeroext i1 @purge_dead_edges(%struct.basic_block_def* %16)
  br label %if.end.21

if.end.21:                                        ; preds = %if.then.12, %if.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @reload_cse_simplify_operands(%struct.rtx_def* %insn) #0 {
entry:
  %retval = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %equiv_regs = alloca [30 x i64], align 16
  %constraints = alloca [30 x i8*], align 16
  %alternative_reject = alloca i32*, align 8
  %alternative_nregs = alloca i32*, align 8
  %op_alt_regno = alloca [30 x i32*], align 16
  %alternative_order = alloca i32*, align 8
  %reg = alloca %struct.rtx_def*, align 8
  %v = alloca %struct.cselib_val_struct*, align 8
  %l = alloca %struct.elt_loc_list*, align 8
  %mode = alloca i32, align 4
  %regno = alloca i32, align 4
  %p = alloca i8*, align 8
  %c = alloca i8, align 1
  %class = alloca i32, align 4
  %c201 = alloca i8, align 1
  %best = alloca i32, align 4
  %best_reject = alloca i32, align 4
  %best_nregs = alloca i32, align 4
  %tmp = alloca i32, align 4
  %this_reject = alloca i32, align 4
  %this_nregs = alloca i32, align 4
  %mode484 = alloca i32, align 4
  %op = alloca i32, align 4
  %mode517 = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  %call = call %struct.rtx_def* @gen_rtx_REG(i32 0, i32 -1)
  store %struct.rtx_def* %call, %struct.rtx_def** %reg, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  call void @extract_insn(%struct.rtx_def* %0)
  %1 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 1
  %conv2 = sext i8 %2 to i32
  %cmp3 = icmp eq i32 %conv2, 0
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %call5 = call i32 @constrain_operands(i32 1)
  %tobool = icmp ne i32 %call5, 0
  br i1 %tobool, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %if.end
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  call void @_fatal_insn_not_found(%struct.rtx_def* %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 8371, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__FUNCTION__.reload_cse_simplify_operands, i32 0, i32 0)) #5
  unreachable

if.end.7:                                         ; preds = %if.end
  %4 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 1
  %conv8 = sext i8 %4 to i64
  %mul = mul i64 %conv8, 4
  %5 = alloca i8, i64 %mul
  %6 = bitcast i8* %5 to i32*
  store i32* %6, i32** %alternative_reject, align 8
  %7 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 1
  %conv9 = sext i8 %7 to i64
  %mul10 = mul i64 %conv9, 4
  %8 = alloca i8, i64 %mul10
  %9 = bitcast i8* %8 to i32*
  store i32* %9, i32** %alternative_nregs, align 8
  %10 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 1
  %conv11 = sext i8 %10 to i64
  %mul12 = mul i64 %conv11, 4
  %11 = alloca i8, i64 %mul12
  %12 = bitcast i8* %11 to i32*
  store i32* %12, i32** %alternative_order, align 8
  %13 = load i32*, i32** %alternative_reject, align 8
  %14 = bitcast i32* %13 to i8*
  %15 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 1
  %conv13 = sext i8 %15 to i64
  %mul14 = mul i64 %conv13, 4
  call void @llvm.memset.p0i8.i64(i8* %14, i8 0, i64 %mul14, i32 1, i1 false)
  %16 = load i32*, i32** %alternative_nregs, align 8
  %17 = bitcast i32* %16 to i8*
  %18 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 1
  %conv15 = sext i8 %18 to i64
  %mul16 = mul i64 %conv15, 4
  call void @llvm.memset.p0i8.i64(i8* %17, i8 0, i64 %mul16, i32 1, i1 false)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.107, %if.end.7
  %19 = load i32, i32* %i, align 4
  %20 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 1
  %conv17 = sext i8 %20 to i32
  %cmp18 = icmp slt i32 %19, %conv17
  br i1 %cmp18, label %for.body, label %for.end.108

for.body:                                         ; preds = %for.cond
  %21 = load i32, i32* %i, align 4
  %idxprom = sext i32 %21 to i64
  %arrayidx = getelementptr inbounds [30 x i64], [30 x i64]* %equiv_regs, i32 0, i64 %idxprom
  store i64 0, i64* %arrayidx, align 8
  %22 = load i32, i32* %i, align 4
  %idxprom20 = sext i32 %22 to i64
  %arrayidx21 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom20
  %23 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx21, align 8
  %24 = bitcast %struct.rtx_def* %23 to i32*
  %bf.load = load i32, i32* %24, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp22 = icmp eq i32 %bf.clear, 36
  br i1 %cmp22, label %if.then.84, label %lor.lhs.false.24

lor.lhs.false.24:                                 ; preds = %for.body
  %25 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %25 to i64
  %arrayidx26 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom25
  %26 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx26, align 8
  %27 = bitcast %struct.rtx_def* %26 to i32*
  %bf.load27 = load i32, i32* %27, align 8
  %bf.clear28 = and i32 %bf.load27, 65535
  %cmp29 = icmp eq i32 %bf.clear28, 67
  br i1 %cmp29, label %land.lhs.true, label %lor.lhs.false.31

lor.lhs.false.31:                                 ; preds = %lor.lhs.false.24
  %28 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %28 to i64
  %arrayidx33 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom32
  %29 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx33, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load34 = load i32, i32* %30, align 8
  %bf.clear35 = and i32 %bf.load34, 65535
  %cmp36 = icmp eq i32 %bf.clear35, 68
  br i1 %cmp36, label %land.lhs.true, label %lor.lhs.false.38

lor.lhs.false.38:                                 ; preds = %lor.lhs.false.31
  %31 = load i32, i32* %i, align 4
  %idxprom39 = sext i32 %31 to i64
  %arrayidx40 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom39
  %32 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx40, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load41 = load i32, i32* %33, align 8
  %bf.clear42 = and i32 %bf.load41, 65535
  %cmp43 = icmp eq i32 %bf.clear42, 54
  br i1 %cmp43, label %land.lhs.true, label %lor.lhs.false.45

lor.lhs.false.45:                                 ; preds = %lor.lhs.false.38
  %34 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %34 to i64
  %arrayidx47 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom46
  %35 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx47, align 8
  %36 = bitcast %struct.rtx_def* %35 to i32*
  %bf.load48 = load i32, i32* %36, align 8
  %bf.clear49 = and i32 %bf.load48, 65535
  %cmp50 = icmp eq i32 %bf.clear49, 55
  br i1 %cmp50, label %land.lhs.true, label %lor.lhs.false.52

lor.lhs.false.52:                                 ; preds = %lor.lhs.false.45
  %37 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %37 to i64
  %arrayidx54 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom53
  %38 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx54, align 8
  %39 = bitcast %struct.rtx_def* %38 to i32*
  %bf.load55 = load i32, i32* %39, align 8
  %bf.clear56 = and i32 %bf.load55, 65535
  %cmp57 = icmp eq i32 %bf.clear56, 58
  br i1 %cmp57, label %land.lhs.true, label %lor.lhs.false.59

lor.lhs.false.59:                                 ; preds = %lor.lhs.false.52
  %40 = load i32, i32* %i, align 4
  %idxprom60 = sext i32 %40 to i64
  %arrayidx61 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom60
  %41 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx61, align 8
  %42 = bitcast %struct.rtx_def* %41 to i32*
  %bf.load62 = load i32, i32* %42, align 8
  %bf.clear63 = and i32 %bf.load62, 65535
  %cmp64 = icmp eq i32 %bf.clear63, 134
  br i1 %cmp64, label %land.lhs.true, label %lor.lhs.false.66

lor.lhs.false.66:                                 ; preds = %lor.lhs.false.59
  %43 = load i32, i32* %i, align 4
  %idxprom67 = sext i32 %43 to i64
  %arrayidx68 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom67
  %44 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx68, align 8
  %45 = bitcast %struct.rtx_def* %44 to i32*
  %bf.load69 = load i32, i32* %45, align 8
  %bf.clear70 = and i32 %bf.load69, 65535
  %cmp71 = icmp eq i32 %bf.clear70, 56
  br i1 %cmp71, label %land.lhs.true, label %lor.lhs.false.73

lor.lhs.false.73:                                 ; preds = %lor.lhs.false.66
  %46 = load i32, i32* %i, align 4
  %idxprom74 = sext i32 %46 to i64
  %arrayidx75 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom74
  %47 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx75, align 8
  %48 = bitcast %struct.rtx_def* %47 to i32*
  %bf.load76 = load i32, i32* %48, align 8
  %bf.clear77 = and i32 %bf.load76, 65535
  %cmp78 = icmp eq i32 %bf.clear77, 140
  br i1 %cmp78, label %land.lhs.true, label %if.end.85

land.lhs.true:                                    ; preds = %lor.lhs.false.73, %lor.lhs.false.66, %lor.lhs.false.59, %lor.lhs.false.52, %lor.lhs.false.45, %lor.lhs.false.38, %lor.lhs.false.31, %lor.lhs.false.24
  %49 = load i32, i32* %i, align 4
  %idxprom80 = sext i32 %49 to i64
  %arrayidx81 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 3), i32 0, i64 %idxprom80
  %50 = load i32, i32* %arrayidx81, align 4
  %cmp82 = icmp eq i32 %50, 0
  br i1 %cmp82, label %if.then.84, label %if.end.85

if.then.84:                                       ; preds = %land.lhs.true, %for.body
  br label %for.inc.107

if.end.85:                                        ; preds = %land.lhs.true, %lor.lhs.false.73
  %51 = load i32, i32* %i, align 4
  %idxprom86 = sext i32 %51 to i64
  %arrayidx87 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom86
  %52 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx87, align 8
  %53 = load i32, i32* %i, align 4
  %idxprom88 = sext i32 %53 to i64
  %arrayidx89 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 3), i32 0, i64 %idxprom88
  %54 = load i32, i32* %arrayidx89, align 4
  %call90 = call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %52, i32 %54, i32 0)
  store %struct.cselib_val_struct* %call90, %struct.cselib_val_struct** %v, align 8
  %55 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %v, align 8
  %tobool91 = icmp ne %struct.cselib_val_struct* %55, null
  br i1 %tobool91, label %if.end.93, label %if.then.92

if.then.92:                                       ; preds = %if.end.85
  br label %for.inc.107

if.end.93:                                        ; preds = %if.end.85
  %56 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %v, align 8
  %locs = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %56, i32 0, i32 2
  %57 = load %struct.elt_loc_list*, %struct.elt_loc_list** %locs, align 8
  store %struct.elt_loc_list* %57, %struct.elt_loc_list** %l, align 8
  br label %for.cond.94

for.cond.94:                                      ; preds = %for.inc, %if.end.93
  %58 = load %struct.elt_loc_list*, %struct.elt_loc_list** %l, align 8
  %tobool95 = icmp ne %struct.elt_loc_list* %58, null
  br i1 %tobool95, label %for.body.96, label %for.end

for.body.96:                                      ; preds = %for.cond.94
  %59 = load %struct.elt_loc_list*, %struct.elt_loc_list** %l, align 8
  %loc = getelementptr inbounds %struct.elt_loc_list, %struct.elt_loc_list* %59, i32 0, i32 1
  %60 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8
  %61 = bitcast %struct.rtx_def* %60 to i32*
  %bf.load97 = load i32, i32* %61, align 8
  %bf.clear98 = and i32 %bf.load97, 65535
  %cmp99 = icmp eq i32 %bf.clear98, 61
  br i1 %cmp99, label %if.then.101, label %if.end.106

if.then.101:                                      ; preds = %for.body.96
  %62 = load %struct.elt_loc_list*, %struct.elt_loc_list** %l, align 8
  %loc102 = getelementptr inbounds %struct.elt_loc_list, %struct.elt_loc_list* %62, i32 0, i32 1
  %63 = load %struct.rtx_def*, %struct.rtx_def** %loc102, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx103 to i32*
  %64 = load i32, i32* %rtuint, align 4
  %sh_prom = zext i32 %64 to i64
  %shl = shl i64 1, %sh_prom
  %65 = load i32, i32* %i, align 4
  %idxprom104 = sext i32 %65 to i64
  %arrayidx105 = getelementptr inbounds [30 x i64], [30 x i64]* %equiv_regs, i32 0, i64 %idxprom104
  %66 = load i64, i64* %arrayidx105, align 8
  %or = or i64 %66, %shl
  store i64 %or, i64* %arrayidx105, align 8
  br label %if.end.106

if.end.106:                                       ; preds = %if.then.101, %for.body.96
  br label %for.inc

for.inc:                                          ; preds = %if.end.106
  %67 = load %struct.elt_loc_list*, %struct.elt_loc_list** %l, align 8
  %next = getelementptr inbounds %struct.elt_loc_list, %struct.elt_loc_list* %67, i32 0, i32 0
  %68 = load %struct.elt_loc_list*, %struct.elt_loc_list** %next, align 8
  store %struct.elt_loc_list* %68, %struct.elt_loc_list** %l, align 8
  br label %for.cond.94

for.end:                                          ; preds = %for.cond.94
  br label %for.inc.107

for.inc.107:                                      ; preds = %for.end, %if.then.92, %if.then.84
  %69 = load i32, i32* %i, align 4
  %inc = add nsw i32 %69, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end.108:                                      ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.109

for.cond.109:                                     ; preds = %for.inc.401, %for.end.108
  %70 = load i32, i32* %i, align 4
  %71 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 1
  %conv110 = sext i8 %71 to i32
  %cmp111 = icmp slt i32 %70, %conv110
  br i1 %cmp111, label %for.body.113, label %for.end.403

for.body.113:                                     ; preds = %for.cond.109
  %72 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 1
  %conv114 = sext i8 %72 to i64
  %mul115 = mul i64 %conv114, 4
  %73 = alloca i8, i64 %mul115
  %74 = bitcast i8* %73 to i32*
  %75 = load i32, i32* %i, align 4
  %idxprom116 = sext i32 %75 to i64
  %arrayidx117 = getelementptr inbounds [30 x i32*], [30 x i32*]* %op_alt_regno, i32 0, i64 %idxprom116
  store i32* %74, i32** %arrayidx117, align 8
  store i32 0, i32* %j, align 4
  br label %for.cond.118

for.cond.118:                                     ; preds = %for.inc.127, %for.body.113
  %76 = load i32, i32* %j, align 4
  %77 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 1
  %conv119 = sext i8 %77 to i32
  %cmp120 = icmp slt i32 %76, %conv119
  br i1 %cmp120, label %for.body.122, label %for.end.129

for.body.122:                                     ; preds = %for.cond.118
  %78 = load i32, i32* %j, align 4
  %idxprom123 = sext i32 %78 to i64
  %79 = load i32, i32* %i, align 4
  %idxprom124 = sext i32 %79 to i64
  %arrayidx125 = getelementptr inbounds [30 x i32*], [30 x i32*]* %op_alt_regno, i32 0, i64 %idxprom124
  %80 = load i32*, i32** %arrayidx125, align 8
  %arrayidx126 = getelementptr inbounds i32, i32* %80, i64 %idxprom123
  store i32 -1, i32* %arrayidx126, align 4
  br label %for.inc.127

for.inc.127:                                      ; preds = %for.body.122
  %81 = load i32, i32* %j, align 4
  %inc128 = add nsw i32 %81, 1
  store i32 %inc128, i32* %j, align 4
  br label %for.cond.118

for.end.129:                                      ; preds = %for.cond.118
  %82 = load i32, i32* %i, align 4
  %idxprom130 = sext i32 %82 to i64
  %arrayidx131 = getelementptr inbounds [30 x i8*], [30 x i8*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 2), i32 0, i64 %idxprom130
  %83 = load i8*, i8** %arrayidx131, align 8
  %84 = load i32, i32* %i, align 4
  %idxprom132 = sext i32 %84 to i64
  %arrayidx133 = getelementptr inbounds [30 x i8*], [30 x i8*]* %constraints, i32 0, i64 %idxprom132
  store i8* %83, i8** %arrayidx133, align 8
  store i8* %83, i8** %p, align 8
  %85 = load i32, i32* %i, align 4
  %idxprom134 = sext i32 %85 to i64
  %arrayidx135 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 3), i32 0, i64 %idxprom134
  %86 = load i32, i32* %arrayidx135, align 4
  store i32 %86, i32* %mode, align 4
  store i32 0, i32* %j, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end.160, %for.end.129
  %87 = load i8*, i8** %p, align 8
  %88 = load i8, i8* %87, align 1
  %conv136 = sext i8 %88 to i32
  %cmp137 = icmp ne i32 %conv136, 0
  br i1 %cmp137, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %89 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %89, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  %90 = load i8, i8* %89, align 1
  store i8 %90, i8* %c, align 1
  %91 = load i8, i8* %c, align 1
  %conv139 = sext i8 %91 to i32
  %cmp140 = icmp eq i32 %conv139, 44
  br i1 %cmp140, label %if.then.142, label %if.else

if.then.142:                                      ; preds = %while.body
  %92 = load i32, i32* %j, align 4
  %inc143 = add nsw i32 %92, 1
  store i32 %inc143, i32* %j, align 4
  br label %if.end.160

if.else:                                          ; preds = %while.body
  %93 = load i8, i8* %c, align 1
  %conv144 = sext i8 %93 to i32
  %cmp145 = icmp eq i32 %conv144, 63
  br i1 %cmp145, label %if.then.147, label %if.else.150

if.then.147:                                      ; preds = %if.else
  %94 = load i32, i32* %j, align 4
  %idxprom148 = sext i32 %94 to i64
  %95 = load i32*, i32** %alternative_reject, align 8
  %arrayidx149 = getelementptr inbounds i32, i32* %95, i64 %idxprom148
  %96 = load i32, i32* %arrayidx149, align 4
  %add = add nsw i32 %96, 3
  store i32 %add, i32* %arrayidx149, align 4
  br label %if.end.159

if.else.150:                                      ; preds = %if.else
  %97 = load i8, i8* %c, align 1
  %conv151 = sext i8 %97 to i32
  %cmp152 = icmp eq i32 %conv151, 33
  br i1 %cmp152, label %if.then.154, label %if.end.158

if.then.154:                                      ; preds = %if.else.150
  %98 = load i32, i32* %j, align 4
  %idxprom155 = sext i32 %98 to i64
  %99 = load i32*, i32** %alternative_reject, align 8
  %arrayidx156 = getelementptr inbounds i32, i32* %99, i64 %idxprom155
  %100 = load i32, i32* %arrayidx156, align 4
  %add157 = add nsw i32 %100, 300
  store i32 %add157, i32* %arrayidx156, align 4
  br label %if.end.158

if.end.158:                                       ; preds = %if.then.154, %if.else.150
  br label %if.end.159

if.end.159:                                       ; preds = %if.end.158, %if.then.147
  br label %if.end.160

if.end.160:                                       ; preds = %if.end.159, %if.then.142
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %101 = load i32, i32* %i, align 4
  %idxprom161 = sext i32 %101 to i64
  %arrayidx162 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom161
  %102 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx162, align 8
  %call163 = call i32 @true_regnum(%struct.rtx_def* %102)
  store i32 %call163, i32* %regno, align 4
  %103 = load i32, i32* %regno, align 4
  %cmp164 = icmp sge i32 %103, 0
  br i1 %cmp164, label %if.then.180, label %lor.lhs.false.166

lor.lhs.false.166:                                ; preds = %while.end
  %104 = load i32, i32* %i, align 4
  %idxprom167 = sext i32 %104 to i64
  %arrayidx168 = getelementptr inbounds [30 x i8*], [30 x i8*]* %constraints, i32 0, i64 %idxprom167
  %105 = load i8*, i8** %arrayidx168, align 8
  %arrayidx169 = getelementptr inbounds i8, i8* %105, i64 0
  %106 = load i8, i8* %arrayidx169, align 1
  %conv170 = sext i8 %106 to i32
  %cmp171 = icmp eq i32 %conv170, 61
  br i1 %cmp171, label %if.then.180, label %lor.lhs.false.173

lor.lhs.false.173:                                ; preds = %lor.lhs.false.166
  %107 = load i32, i32* %i, align 4
  %idxprom174 = sext i32 %107 to i64
  %arrayidx175 = getelementptr inbounds [30 x i8*], [30 x i8*]* %constraints, i32 0, i64 %idxprom174
  %108 = load i8*, i8** %arrayidx175, align 8
  %arrayidx176 = getelementptr inbounds i8, i8* %108, i64 0
  %109 = load i8, i8* %arrayidx176, align 1
  %conv177 = sext i8 %109 to i32
  %cmp178 = icmp eq i32 %conv177, 43
  br i1 %cmp178, label %if.then.180, label %if.end.181

if.then.180:                                      ; preds = %lor.lhs.false.173, %lor.lhs.false.166, %while.end
  br label %for.inc.401

if.end.181:                                       ; preds = %lor.lhs.false.173
  store i32 0, i32* %regno, align 4
  br label %for.cond.182

for.cond.182:                                     ; preds = %for.inc.398, %if.end.181
  %110 = load i32, i32* %regno, align 4
  %cmp183 = icmp slt i32 %110, 53
  br i1 %cmp183, label %for.body.185, label %for.end.400

for.body.185:                                     ; preds = %for.cond.182
  store i32 0, i32* %class, align 4
  %111 = load i32, i32* %i, align 4
  %idxprom186 = sext i32 %111 to i64
  %arrayidx187 = getelementptr inbounds [30 x i64], [30 x i64]* %equiv_regs, i32 0, i64 %idxprom186
  %112 = load i64, i64* %arrayidx187, align 8
  %113 = load i32, i32* %regno, align 4
  %sh_prom188 = zext i32 %113 to i64
  %shl189 = shl i64 1, %sh_prom188
  %and = and i64 %112, %shl189
  %tobool190 = icmp ne i64 %and, 0
  br i1 %tobool190, label %if.end.192, label %if.then.191

if.then.191:                                      ; preds = %for.body.185
  br label %for.inc.398

if.end.192:                                       ; preds = %for.body.185
  %114 = load i32, i32* %regno, align 4
  %115 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1
  %arrayidx194 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld193, i32 0, i64 0
  %rtuint195 = bitcast %union.rtunion_def* %arrayidx194 to i32*
  store i32 %114, i32* %rtuint195, align 4
  %116 = load i32, i32* %mode, align 4
  %117 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %118 = bitcast %struct.rtx_def* %117 to i32*
  %bf.load196 = load i32, i32* %118, align 8
  %bf.value = and i32 %116, 255
  %bf.shl = shl i32 %bf.value, 16
  %bf.clear197 = and i32 %bf.load196, -16711681
  %bf.set = or i32 %bf.clear197, %bf.shl
  store i32 %bf.set, i32* %118, align 8
  store i32 0, i32* %j, align 4
  %119 = load i32, i32* %i, align 4
  %idxprom198 = sext i32 %119 to i64
  %arrayidx199 = getelementptr inbounds [30 x i8*], [30 x i8*]* %constraints, i32 0, i64 %idxprom198
  %120 = load i8*, i8** %arrayidx199, align 8
  store i8* %120, i8** %p, align 8
  br label %for.cond.200

for.cond.200:                                     ; preds = %if.end.396, %if.end.192
  %121 = load i8*, i8** %p, align 8
  %incdec.ptr202 = getelementptr inbounds i8, i8* %121, i32 1
  store i8* %incdec.ptr202, i8** %p, align 8
  %122 = load i8, i8* %121, align 1
  store i8 %122, i8* %c201, align 1
  %123 = load i8, i8* %c201, align 1
  %conv203 = sext i8 %123 to i32
  switch i32 %conv203, label %sw.default [
    i32 61, label %sw.bb
    i32 43, label %sw.bb
    i32 63, label %sw.bb
    i32 35, label %sw.bb
    i32 38, label %sw.bb
    i32 33, label %sw.bb
    i32 42, label %sw.bb
    i32 37, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 109, label %sw.bb
    i32 60, label %sw.bb
    i32 62, label %sw.bb
    i32 86, label %sw.bb
    i32 111, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 115, label %sw.bb
    i32 105, label %sw.bb
    i32 110, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 112, label %sw.bb
    i32 88, label %sw.bb
    i32 103, label %sw.bb.204
    i32 114, label %sw.bb.204
    i32 44, label %sw.bb.358
    i32 0, label %sw.bb.358
  ]

sw.bb:                                            ; preds = %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200, %for.cond.200
  br label %sw.epilog

sw.bb.204:                                        ; preds = %for.cond.200, %for.cond.200
  %124 = load i32, i32* %class, align 4
  %idxprom205 = sext i32 %124 to i64
  %arrayidx206 = getelementptr inbounds [25 x [25 x i32]], [25 x [25 x i32]]* @reg_class_subunion, i32 0, i64 %idxprom205
  %arrayidx207 = getelementptr inbounds [25 x i32], [25 x i32]* %arrayidx206, i32 0, i64 12
  %125 = load i32, i32* %arrayidx207, align 4
  store i32 %125, i32* %class, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %for.cond.200
  %126 = load i8, i8* %c201, align 1
  %conv208 = zext i8 %126 to i32
  %cmp209 = icmp eq i32 %conv208, 114
  br i1 %cmp209, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.default
  br label %cond.end.352

cond.false:                                       ; preds = %sw.default
  %127 = load i8, i8* %c201, align 1
  %conv211 = zext i8 %127 to i32
  %cmp212 = icmp eq i32 %conv211, 82
  br i1 %cmp212, label %cond.true.214, label %cond.false.215

cond.true.214:                                    ; preds = %cond.false
  br label %cond.end.350

cond.false.215:                                   ; preds = %cond.false
  %128 = load i8, i8* %c201, align 1
  %conv216 = zext i8 %128 to i32
  %cmp217 = icmp eq i32 %conv216, 113
  br i1 %cmp217, label %cond.true.219, label %cond.false.222

cond.true.219:                                    ; preds = %cond.false.215
  %129 = load i32, i32* @target_flags, align 4
  %and220 = and i32 %129, 33554432
  %tobool221 = icmp ne i32 %and220, 0
  %cond = select i1 %tobool221, i32 12, i32 8
  br label %cond.end.348

cond.false.222:                                   ; preds = %cond.false.215
  %130 = load i8, i8* %c201, align 1
  %conv223 = zext i8 %130 to i32
  %cmp224 = icmp eq i32 %conv223, 81
  br i1 %cmp224, label %cond.true.226, label %cond.false.227

cond.true.226:                                    ; preds = %cond.false.222
  br label %cond.end.346

cond.false.227:                                   ; preds = %cond.false.222
  %131 = load i8, i8* %c201, align 1
  %conv228 = zext i8 %131 to i32
  %cmp229 = icmp eq i32 %conv228, 102
  br i1 %cmp229, label %cond.true.231, label %cond.false.237

cond.true.231:                                    ; preds = %cond.false.227
  %132 = load i32, i32* @target_flags, align 4
  %and232 = and i32 %132, 1
  %tobool233 = icmp ne i32 %and232, 0
  br i1 %tobool233, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.231
  %133 = load i32, i32* @target_flags, align 4
  %and234 = and i32 %133, 32
  %tobool235 = icmp ne i32 %and234, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.231
  %134 = phi i1 [ true, %cond.true.231 ], [ %tobool235, %lor.rhs ]
  %cond236 = select i1 %134, i32 15, i32 0
  br label %cond.end.344

cond.false.237:                                   ; preds = %cond.false.227
  %135 = load i8, i8* %c201, align 1
  %conv238 = zext i8 %135 to i32
  %cmp239 = icmp eq i32 %conv238, 116
  br i1 %cmp239, label %cond.true.241, label %cond.false.249

cond.true.241:                                    ; preds = %cond.false.237
  %136 = load i32, i32* @target_flags, align 4
  %and242 = and i32 %136, 1
  %tobool243 = icmp ne i32 %and242, 0
  br i1 %tobool243, label %lor.end.247, label %lor.rhs.244

lor.rhs.244:                                      ; preds = %cond.true.241
  %137 = load i32, i32* @target_flags, align 4
  %and245 = and i32 %137, 32
  %tobool246 = icmp ne i32 %and245, 0
  br label %lor.end.247

lor.end.247:                                      ; preds = %lor.rhs.244, %cond.true.241
  %138 = phi i1 [ true, %cond.true.241 ], [ %tobool246, %lor.rhs.244 ]
  %cond248 = select i1 %138, i32 13, i32 0
  br label %cond.end.342

cond.false.249:                                   ; preds = %cond.false.237
  %139 = load i8, i8* %c201, align 1
  %conv250 = zext i8 %139 to i32
  %cmp251 = icmp eq i32 %conv250, 117
  br i1 %cmp251, label %cond.true.253, label %cond.false.261

cond.true.253:                                    ; preds = %cond.false.249
  %140 = load i32, i32* @target_flags, align 4
  %and254 = and i32 %140, 1
  %tobool255 = icmp ne i32 %and254, 0
  br i1 %tobool255, label %lor.end.259, label %lor.rhs.256

lor.rhs.256:                                      ; preds = %cond.true.253
  %141 = load i32, i32* @target_flags, align 4
  %and257 = and i32 %141, 32
  %tobool258 = icmp ne i32 %and257, 0
  br label %lor.end.259

lor.end.259:                                      ; preds = %lor.rhs.256, %cond.true.253
  %142 = phi i1 [ true, %cond.true.253 ], [ %tobool258, %lor.rhs.256 ]
  %cond260 = select i1 %142, i32 14, i32 0
  br label %cond.end.340

cond.false.261:                                   ; preds = %cond.false.249
  %143 = load i8, i8* %c201, align 1
  %conv262 = zext i8 %143 to i32
  %cmp263 = icmp eq i32 %conv262, 97
  br i1 %cmp263, label %cond.true.265, label %cond.false.266

cond.true.265:                                    ; preds = %cond.false.261
  br label %cond.end.338

cond.false.266:                                   ; preds = %cond.false.261
  %144 = load i8, i8* %c201, align 1
  %conv267 = zext i8 %144 to i32
  %cmp268 = icmp eq i32 %conv267, 98
  br i1 %cmp268, label %cond.true.270, label %cond.false.271

cond.true.270:                                    ; preds = %cond.false.266
  br label %cond.end.336

cond.false.271:                                   ; preds = %cond.false.266
  %145 = load i8, i8* %c201, align 1
  %conv272 = zext i8 %145 to i32
  %cmp273 = icmp eq i32 %conv272, 99
  br i1 %cmp273, label %cond.true.275, label %cond.false.276

cond.true.275:                                    ; preds = %cond.false.271
  br label %cond.end.334

cond.false.276:                                   ; preds = %cond.false.271
  %146 = load i8, i8* %c201, align 1
  %conv277 = zext i8 %146 to i32
  %cmp278 = icmp eq i32 %conv277, 100
  br i1 %cmp278, label %cond.true.280, label %cond.false.281

cond.true.280:                                    ; preds = %cond.false.276
  br label %cond.end.332

cond.false.281:                                   ; preds = %cond.false.276
  %147 = load i8, i8* %c201, align 1
  %conv282 = zext i8 %147 to i32
  %cmp283 = icmp eq i32 %conv282, 120
  br i1 %cmp283, label %cond.true.285, label %cond.false.290

cond.true.285:                                    ; preds = %cond.false.281
  %148 = load i32, i32* @target_flags, align 4
  %and286 = and i32 %148, 327680
  %cmp287 = icmp ne i32 %and286, 0
  %cond289 = select i1 %cmp287, i32 16, i32 0
  br label %cond.end.330

cond.false.290:                                   ; preds = %cond.false.281
  %149 = load i8, i8* %c201, align 1
  %conv291 = zext i8 %149 to i32
  %cmp292 = icmp eq i32 %conv291, 89
  br i1 %cmp292, label %cond.true.294, label %cond.false.299

cond.true.294:                                    ; preds = %cond.false.290
  %150 = load i32, i32* @target_flags, align 4
  %and295 = and i32 %150, 262144
  %cmp296 = icmp ne i32 %and295, 0
  %cond298 = select i1 %cmp296, i32 16, i32 0
  br label %cond.end.328

cond.false.299:                                   ; preds = %cond.false.290
  %151 = load i8, i8* %c201, align 1
  %conv300 = zext i8 %151 to i32
  %cmp301 = icmp eq i32 %conv300, 121
  br i1 %cmp301, label %cond.true.303, label %cond.false.308

cond.true.303:                                    ; preds = %cond.false.299
  %152 = load i32, i32* @target_flags, align 4
  %and304 = and i32 %152, 16384
  %cmp305 = icmp ne i32 %and304, 0
  %cond307 = select i1 %cmp305, i32 17, i32 0
  br label %cond.end.326

cond.false.308:                                   ; preds = %cond.false.299
  %153 = load i8, i8* %c201, align 1
  %conv309 = zext i8 %153 to i32
  %cmp310 = icmp eq i32 %conv309, 65
  br i1 %cmp310, label %cond.true.312, label %cond.false.313

cond.true.312:                                    ; preds = %cond.false.308
  br label %cond.end.324

cond.false.313:                                   ; preds = %cond.false.308
  %154 = load i8, i8* %c201, align 1
  %conv314 = zext i8 %154 to i32
  %cmp315 = icmp eq i32 %conv314, 68
  br i1 %cmp315, label %cond.true.317, label %cond.false.318

cond.true.317:                                    ; preds = %cond.false.313
  br label %cond.end

cond.false.318:                                   ; preds = %cond.false.313
  %155 = load i8, i8* %c201, align 1
  %conv319 = zext i8 %155 to i32
  %cmp320 = icmp eq i32 %conv319, 83
  %cond322 = select i1 %cmp320, i32 5, i32 0
  br label %cond.end

cond.end:                                         ; preds = %cond.false.318, %cond.true.317
  %cond323 = phi i32 [ 6, %cond.true.317 ], [ %cond322, %cond.false.318 ]
  br label %cond.end.324

cond.end.324:                                     ; preds = %cond.end, %cond.true.312
  %cond325 = phi i32 [ 7, %cond.true.312 ], [ %cond323, %cond.end ]
  br label %cond.end.326

cond.end.326:                                     ; preds = %cond.end.324, %cond.true.303
  %cond327 = phi i32 [ %cond307, %cond.true.303 ], [ %cond325, %cond.end.324 ]
  br label %cond.end.328

cond.end.328:                                     ; preds = %cond.end.326, %cond.true.294
  %cond329 = phi i32 [ %cond298, %cond.true.294 ], [ %cond327, %cond.end.326 ]
  br label %cond.end.330

cond.end.330:                                     ; preds = %cond.end.328, %cond.true.285
  %cond331 = phi i32 [ %cond289, %cond.true.285 ], [ %cond329, %cond.end.328 ]
  br label %cond.end.332

cond.end.332:                                     ; preds = %cond.end.330, %cond.true.280
  %cond333 = phi i32 [ 2, %cond.true.280 ], [ %cond331, %cond.end.330 ]
  br label %cond.end.334

cond.end.334:                                     ; preds = %cond.end.332, %cond.true.275
  %cond335 = phi i32 [ 3, %cond.true.275 ], [ %cond333, %cond.end.332 ]
  br label %cond.end.336

cond.end.336:                                     ; preds = %cond.end.334, %cond.true.270
  %cond337 = phi i32 [ 4, %cond.true.270 ], [ %cond335, %cond.end.334 ]
  br label %cond.end.338

cond.end.338:                                     ; preds = %cond.end.336, %cond.true.265
  %cond339 = phi i32 [ 1, %cond.true.265 ], [ %cond337, %cond.end.336 ]
  br label %cond.end.340

cond.end.340:                                     ; preds = %cond.end.338, %lor.end.259
  %cond341 = phi i32 [ %cond260, %lor.end.259 ], [ %cond339, %cond.end.338 ]
  br label %cond.end.342

cond.end.342:                                     ; preds = %cond.end.340, %lor.end.247
  %cond343 = phi i32 [ %cond248, %lor.end.247 ], [ %cond341, %cond.end.340 ]
  br label %cond.end.344

cond.end.344:                                     ; preds = %cond.end.342, %lor.end
  %cond345 = phi i32 [ %cond236, %lor.end ], [ %cond343, %cond.end.342 ]
  br label %cond.end.346

cond.end.346:                                     ; preds = %cond.end.344, %cond.true.226
  %cond347 = phi i32 [ 8, %cond.true.226 ], [ %cond345, %cond.end.344 ]
  br label %cond.end.348

cond.end.348:                                     ; preds = %cond.end.346, %cond.true.219
  %cond349 = phi i32 [ %cond, %cond.true.219 ], [ %cond347, %cond.end.346 ]
  br label %cond.end.350

cond.end.350:                                     ; preds = %cond.end.348, %cond.true.214
  %cond351 = phi i32 [ 11, %cond.true.214 ], [ %cond349, %cond.end.348 ]
  br label %cond.end.352

cond.end.352:                                     ; preds = %cond.end.350, %cond.true
  %cond353 = phi i32 [ 12, %cond.true ], [ %cond351, %cond.end.350 ]
  %idxprom354 = sext i32 %cond353 to i64
  %156 = load i32, i32* %class, align 4
  %idxprom355 = sext i32 %156 to i64
  %arrayidx356 = getelementptr inbounds [25 x [25 x i32]], [25 x [25 x i32]]* @reg_class_subunion, i32 0, i64 %idxprom355
  %arrayidx357 = getelementptr inbounds [25 x i32], [25 x i32]* %arrayidx356, i32 0, i64 %idxprom354
  %157 = load i32, i32* %arrayidx357, align 4
  store i32 %157, i32* %class, align 4
  br label %sw.epilog

sw.bb.358:                                        ; preds = %for.cond.200, %for.cond.200
  %158 = load i32, i32* %j, align 4
  %idxprom359 = sext i32 %158 to i64
  %159 = load i32, i32* %i, align 4
  %idxprom360 = sext i32 %159 to i64
  %arrayidx361 = getelementptr inbounds [30 x i32*], [30 x i32*]* %op_alt_regno, i32 0, i64 %idxprom360
  %160 = load i32*, i32** %arrayidx361, align 8
  %arrayidx362 = getelementptr inbounds i32, i32* %160, i64 %idxprom359
  %161 = load i32, i32* %arrayidx362, align 4
  %cmp363 = icmp eq i32 %161, -1
  br i1 %cmp363, label %land.lhs.true.365, label %if.end.390

land.lhs.true.365:                                ; preds = %sw.bb.358
  %162 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %163 = load i32, i32* %class, align 4
  %164 = load i32, i32* %mode, align 4
  %call366 = call i32 @reg_fits_class_p(%struct.rtx_def* %162, i32 %163, i32 0, i32 %164)
  %tobool367 = icmp ne i32 %call366, 0
  br i1 %tobool367, label %land.lhs.true.368, label %if.end.390

land.lhs.true.368:                                ; preds = %land.lhs.true.365
  %165 = load i32, i32* %i, align 4
  %idxprom369 = sext i32 %165 to i64
  %arrayidx370 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom369
  %166 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx370, align 8
  %167 = bitcast %struct.rtx_def* %166 to i32*
  %bf.load371 = load i32, i32* %167, align 8
  %bf.clear372 = and i32 %bf.load371, 65535
  %cmp373 = icmp ne i32 %bf.clear372, 54
  br i1 %cmp373, label %if.then.382, label %lor.lhs.false.375

lor.lhs.false.375:                                ; preds = %land.lhs.true.368
  %168 = load i32, i32* %i, align 4
  %idxprom376 = sext i32 %168 to i64
  %arrayidx377 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom376
  %169 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx377, align 8
  %call378 = call i32 @rtx_cost(%struct.rtx_def* %169, i32 47)
  %170 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %call379 = call i32 @rtx_cost(%struct.rtx_def* %170, i32 47)
  %cmp380 = icmp sgt i32 %call378, %call379
  br i1 %cmp380, label %if.then.382, label %if.end.390

if.then.382:                                      ; preds = %lor.lhs.false.375, %land.lhs.true.368
  %171 = load i32, i32* %j, align 4
  %idxprom383 = sext i32 %171 to i64
  %172 = load i32*, i32** %alternative_nregs, align 8
  %arrayidx384 = getelementptr inbounds i32, i32* %172, i64 %idxprom383
  %173 = load i32, i32* %arrayidx384, align 4
  %inc385 = add nsw i32 %173, 1
  store i32 %inc385, i32* %arrayidx384, align 4
  %174 = load i32, i32* %regno, align 4
  %175 = load i32, i32* %j, align 4
  %idxprom386 = sext i32 %175 to i64
  %176 = load i32, i32* %i, align 4
  %idxprom387 = sext i32 %176 to i64
  %arrayidx388 = getelementptr inbounds [30 x i32*], [30 x i32*]* %op_alt_regno, i32 0, i64 %idxprom387
  %177 = load i32*, i32** %arrayidx388, align 8
  %arrayidx389 = getelementptr inbounds i32, i32* %177, i64 %idxprom386
  store i32 %174, i32* %arrayidx389, align 4
  br label %if.end.390

if.end.390:                                       ; preds = %if.then.382, %lor.lhs.false.375, %land.lhs.true.365, %sw.bb.358
  %178 = load i32, i32* %j, align 4
  %inc391 = add nsw i32 %178, 1
  store i32 %inc391, i32* %j, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.390, %cond.end.352, %sw.bb.204, %sw.bb
  %179 = load i8, i8* %c201, align 1
  %conv392 = sext i8 %179 to i32
  %cmp393 = icmp eq i32 %conv392, 0
  br i1 %cmp393, label %if.then.395, label %if.end.396

if.then.395:                                      ; preds = %sw.epilog
  br label %for.end.397

if.end.396:                                       ; preds = %sw.epilog
  br label %for.cond.200

for.end.397:                                      ; preds = %if.then.395
  br label %for.inc.398

for.inc.398:                                      ; preds = %for.end.397, %if.then.191
  %180 = load i32, i32* %regno, align 4
  %inc399 = add nsw i32 %180, 1
  store i32 %inc399, i32* %regno, align 4
  br label %for.cond.182

for.end.400:                                      ; preds = %for.cond.182
  br label %for.inc.401

for.inc.401:                                      ; preds = %for.end.400, %if.then.180
  %181 = load i32, i32* %i, align 4
  %inc402 = add nsw i32 %181, 1
  store i32 %inc402, i32* %i, align 4
  br label %for.cond.109

for.end.403:                                      ; preds = %for.cond.109
  store i32 0, i32* %j, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.404

for.cond.404:                                     ; preds = %for.inc.420, %for.end.403
  %182 = load i32, i32* %i, align 4
  %183 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 1
  %conv405 = sext i8 %183 to i32
  %cmp406 = icmp slt i32 %182, %conv405
  br i1 %cmp406, label %for.body.408, label %for.end.422

for.body.408:                                     ; preds = %for.cond.404
  %184 = load i32, i32* %i, align 4
  %idxprom409 = sext i32 %184 to i64
  %185 = load i32*, i32** %alternative_reject, align 8
  %arrayidx410 = getelementptr inbounds i32, i32* %185, i64 %idxprom409
  %186 = load i32, i32* %arrayidx410, align 4
  %187 = load i32, i32* @which_alternative, align 4
  %idxprom411 = sext i32 %187 to i64
  %188 = load i32*, i32** %alternative_reject, align 8
  %arrayidx412 = getelementptr inbounds i32, i32* %188, i64 %idxprom411
  %189 = load i32, i32* %arrayidx412, align 4
  %cmp413 = icmp sle i32 %186, %189
  br i1 %cmp413, label %if.then.415, label %if.end.419

if.then.415:                                      ; preds = %for.body.408
  %190 = load i32, i32* %i, align 4
  %191 = load i32, i32* %j, align 4
  %inc416 = add nsw i32 %191, 1
  store i32 %inc416, i32* %j, align 4
  %idxprom417 = sext i32 %191 to i64
  %192 = load i32*, i32** %alternative_order, align 8
  %arrayidx418 = getelementptr inbounds i32, i32* %192, i64 %idxprom417
  store i32 %190, i32* %arrayidx418, align 4
  br label %if.end.419

if.end.419:                                       ; preds = %if.then.415, %for.body.408
  br label %for.inc.420

for.inc.420:                                      ; preds = %if.end.419
  %193 = load i32, i32* %i, align 4
  %inc421 = add nsw i32 %193, 1
  store i32 %inc421, i32* %i, align 4
  br label %for.cond.404

for.end.422:                                      ; preds = %for.cond.404
  %194 = load i32, i32* %j, align 4
  %conv423 = trunc i32 %194 to i8
  store i8 %conv423, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 1
  store i32 0, i32* %i, align 4
  br label %for.cond.424

for.cond.424:                                     ; preds = %for.inc.474, %for.end.422
  %195 = load i32, i32* %i, align 4
  %196 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 1
  %conv425 = sext i8 %196 to i32
  %sub = sub nsw i32 %conv425, 1
  %cmp426 = icmp slt i32 %195, %sub
  br i1 %cmp426, label %for.body.428, label %for.end.476

for.body.428:                                     ; preds = %for.cond.424
  %197 = load i32, i32* %i, align 4
  store i32 %197, i32* %best, align 4
  %198 = load i32, i32* %i, align 4
  %idxprom429 = sext i32 %198 to i64
  %199 = load i32*, i32** %alternative_order, align 8
  %arrayidx430 = getelementptr inbounds i32, i32* %199, i64 %idxprom429
  %200 = load i32, i32* %arrayidx430, align 4
  %idxprom431 = sext i32 %200 to i64
  %201 = load i32*, i32** %alternative_reject, align 8
  %arrayidx432 = getelementptr inbounds i32, i32* %201, i64 %idxprom431
  %202 = load i32, i32* %arrayidx432, align 4
  store i32 %202, i32* %best_reject, align 4
  %203 = load i32, i32* %i, align 4
  %idxprom433 = sext i32 %203 to i64
  %204 = load i32*, i32** %alternative_order, align 8
  %arrayidx434 = getelementptr inbounds i32, i32* %204, i64 %idxprom433
  %205 = load i32, i32* %arrayidx434, align 4
  %idxprom435 = sext i32 %205 to i64
  %206 = load i32*, i32** %alternative_nregs, align 8
  %arrayidx436 = getelementptr inbounds i32, i32* %206, i64 %idxprom435
  %207 = load i32, i32* %arrayidx436, align 4
  store i32 %207, i32* %best_nregs, align 4
  %208 = load i32, i32* %i, align 4
  %add437 = add nsw i32 %208, 1
  store i32 %add437, i32* %j, align 4
  br label %for.cond.438

for.cond.438:                                     ; preds = %for.inc.463, %for.body.428
  %209 = load i32, i32* %j, align 4
  %210 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 1
  %conv439 = sext i8 %210 to i32
  %cmp440 = icmp slt i32 %209, %conv439
  br i1 %cmp440, label %for.body.442, label %for.end.465

for.body.442:                                     ; preds = %for.cond.438
  %211 = load i32, i32* %j, align 4
  %idxprom444 = sext i32 %211 to i64
  %212 = load i32*, i32** %alternative_order, align 8
  %arrayidx445 = getelementptr inbounds i32, i32* %212, i64 %idxprom444
  %213 = load i32, i32* %arrayidx445, align 4
  %idxprom446 = sext i32 %213 to i64
  %214 = load i32*, i32** %alternative_reject, align 8
  %arrayidx447 = getelementptr inbounds i32, i32* %214, i64 %idxprom446
  %215 = load i32, i32* %arrayidx447, align 4
  store i32 %215, i32* %this_reject, align 4
  %216 = load i32, i32* %j, align 4
  %idxprom449 = sext i32 %216 to i64
  %217 = load i32*, i32** %alternative_order, align 8
  %arrayidx450 = getelementptr inbounds i32, i32* %217, i64 %idxprom449
  %218 = load i32, i32* %arrayidx450, align 4
  %idxprom451 = sext i32 %218 to i64
  %219 = load i32*, i32** %alternative_nregs, align 8
  %arrayidx452 = getelementptr inbounds i32, i32* %219, i64 %idxprom451
  %220 = load i32, i32* %arrayidx452, align 4
  store i32 %220, i32* %this_nregs, align 4
  %221 = load i32, i32* %this_reject, align 4
  %222 = load i32, i32* %best_reject, align 4
  %cmp453 = icmp slt i32 %221, %222
  br i1 %cmp453, label %if.then.461, label %lor.lhs.false.455

lor.lhs.false.455:                                ; preds = %for.body.442
  %223 = load i32, i32* %this_reject, align 4
  %224 = load i32, i32* %best_reject, align 4
  %cmp456 = icmp eq i32 %223, %224
  br i1 %cmp456, label %land.lhs.true.458, label %if.end.462

land.lhs.true.458:                                ; preds = %lor.lhs.false.455
  %225 = load i32, i32* %this_nregs, align 4
  %226 = load i32, i32* %best_nregs, align 4
  %cmp459 = icmp slt i32 %225, %226
  br i1 %cmp459, label %if.then.461, label %if.end.462

if.then.461:                                      ; preds = %land.lhs.true.458, %for.body.442
  %227 = load i32, i32* %j, align 4
  store i32 %227, i32* %best, align 4
  %228 = load i32, i32* %this_reject, align 4
  store i32 %228, i32* %best_reject, align 4
  %229 = load i32, i32* %this_nregs, align 4
  store i32 %229, i32* %best_nregs, align 4
  br label %if.end.462

if.end.462:                                       ; preds = %if.then.461, %land.lhs.true.458, %lor.lhs.false.455
  br label %for.inc.463

for.inc.463:                                      ; preds = %if.end.462
  %230 = load i32, i32* %j, align 4
  %inc464 = add nsw i32 %230, 1
  store i32 %inc464, i32* %j, align 4
  br label %for.cond.438

for.end.465:                                      ; preds = %for.cond.438
  %231 = load i32, i32* %best, align 4
  %idxprom466 = sext i32 %231 to i64
  %232 = load i32*, i32** %alternative_order, align 8
  %arrayidx467 = getelementptr inbounds i32, i32* %232, i64 %idxprom466
  %233 = load i32, i32* %arrayidx467, align 4
  store i32 %233, i32* %tmp, align 4
  %234 = load i32, i32* %i, align 4
  %idxprom468 = sext i32 %234 to i64
  %235 = load i32*, i32** %alternative_order, align 8
  %arrayidx469 = getelementptr inbounds i32, i32* %235, i64 %idxprom468
  %236 = load i32, i32* %arrayidx469, align 4
  %237 = load i32, i32* %best, align 4
  %idxprom470 = sext i32 %237 to i64
  %238 = load i32*, i32** %alternative_order, align 8
  %arrayidx471 = getelementptr inbounds i32, i32* %238, i64 %idxprom470
  store i32 %236, i32* %arrayidx471, align 4
  %239 = load i32, i32* %tmp, align 4
  %240 = load i32, i32* %i, align 4
  %idxprom472 = sext i32 %240 to i64
  %241 = load i32*, i32** %alternative_order, align 8
  %arrayidx473 = getelementptr inbounds i32, i32* %241, i64 %idxprom472
  store i32 %239, i32* %arrayidx473, align 4
  br label %for.inc.474

for.inc.474:                                      ; preds = %for.end.465
  %242 = load i32, i32* %i, align 4
  %inc475 = add nsw i32 %242, 1
  store i32 %inc475, i32* %i, align 4
  br label %for.cond.424

for.end.476:                                      ; preds = %for.cond.424
  %243 = load i32*, i32** %alternative_order, align 8
  %arrayidx477 = getelementptr inbounds i32, i32* %243, i64 0
  %244 = load i32, i32* %arrayidx477, align 4
  store i32 %244, i32* %j, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.478

for.cond.478:                                     ; preds = %for.inc.503, %for.end.476
  %245 = load i32, i32* %i, align 4
  %246 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 1
  %conv479 = sext i8 %246 to i32
  %cmp480 = icmp slt i32 %245, %conv479
  br i1 %cmp480, label %for.body.482, label %for.end.505

for.body.482:                                     ; preds = %for.cond.478
  %247 = load i32, i32* %i, align 4
  %idxprom485 = sext i32 %247 to i64
  %arrayidx486 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 3), i32 0, i64 %idxprom485
  %248 = load i32, i32* %arrayidx486, align 4
  store i32 %248, i32* %mode484, align 4
  %249 = load i32, i32* %j, align 4
  %idxprom487 = sext i32 %249 to i64
  %250 = load i32, i32* %i, align 4
  %idxprom488 = sext i32 %250 to i64
  %arrayidx489 = getelementptr inbounds [30 x i32*], [30 x i32*]* %op_alt_regno, i32 0, i64 %idxprom488
  %251 = load i32*, i32** %arrayidx489, align 8
  %arrayidx490 = getelementptr inbounds i32, i32* %251, i64 %idxprom487
  %252 = load i32, i32* %arrayidx490, align 4
  %cmp491 = icmp eq i32 %252, -1
  br i1 %cmp491, label %if.then.493, label %if.end.494

if.then.493:                                      ; preds = %for.body.482
  br label %for.inc.503

if.end.494:                                       ; preds = %for.body.482
  %253 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %254 = load i32, i32* %i, align 4
  %idxprom495 = sext i32 %254 to i64
  %arrayidx496 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom495
  %255 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx496, align 8
  %256 = load i32, i32* %mode484, align 4
  %257 = load i32, i32* %j, align 4
  %idxprom497 = sext i32 %257 to i64
  %258 = load i32, i32* %i, align 4
  %idxprom498 = sext i32 %258 to i64
  %arrayidx499 = getelementptr inbounds [30 x i32*], [30 x i32*]* %op_alt_regno, i32 0, i64 %idxprom498
  %259 = load i32*, i32** %arrayidx499, align 8
  %arrayidx500 = getelementptr inbounds i32, i32* %259, i64 %idxprom497
  %260 = load i32, i32* %arrayidx500, align 4
  %call501 = call %struct.rtx_def* @gen_rtx_REG(i32 %256, i32 %260)
  %call502 = call i32 @validate_change(%struct.rtx_def* %253, %struct.rtx_def** %255, %struct.rtx_def* %call501, i32 1)
  br label %for.inc.503

for.inc.503:                                      ; preds = %if.end.494, %if.then.493
  %261 = load i32, i32* %i, align 4
  %inc504 = add nsw i32 %261, 1
  store i32 %inc504, i32* %i, align 4
  br label %for.cond.478

for.end.505:                                      ; preds = %for.cond.478
  %262 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 8), align 1
  %conv506 = sext i8 %262 to i32
  %sub507 = sub nsw i32 %conv506, 1
  store i32 %sub507, i32* %i, align 4
  br label %for.cond.508

for.cond.508:                                     ; preds = %for.inc.536, %for.end.505
  %263 = load i32, i32* %i, align 4
  %cmp509 = icmp sge i32 %263, 0
  br i1 %cmp509, label %for.body.511, label %for.end.537

for.body.511:                                     ; preds = %for.cond.508
  %264 = load i32, i32* %i, align 4
  %idxprom513 = sext i32 %264 to i64
  %arrayidx514 = getelementptr inbounds [4 x i8], [4 x i8]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 6), i32 0, i64 %idxprom513
  %265 = load i8, i8* %arrayidx514, align 1
  %conv515 = sext i8 %265 to i32
  store i32 %conv515, i32* %op, align 4
  %266 = load i32, i32* %op, align 4
  %idxprom518 = sext i32 %266 to i64
  %arrayidx519 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 3), i32 0, i64 %idxprom518
  %267 = load i32, i32* %arrayidx519, align 4
  store i32 %267, i32* %mode517, align 4
  %268 = load i32, i32* %j, align 4
  %idxprom520 = sext i32 %268 to i64
  %269 = load i32, i32* %op, align 4
  %idxprom521 = sext i32 %269 to i64
  %arrayidx522 = getelementptr inbounds [30 x i32*], [30 x i32*]* %op_alt_regno, i32 0, i64 %idxprom521
  %270 = load i32*, i32** %arrayidx522, align 8
  %arrayidx523 = getelementptr inbounds i32, i32* %270, i64 %idxprom520
  %271 = load i32, i32* %arrayidx523, align 4
  %cmp524 = icmp eq i32 %271, -1
  br i1 %cmp524, label %if.then.526, label %if.end.527

if.then.526:                                      ; preds = %for.body.511
  br label %for.inc.536

if.end.527:                                       ; preds = %for.body.511
  %272 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %273 = load i32, i32* %i, align 4
  %idxprom528 = sext i32 %273 to i64
  %arrayidx529 = getelementptr inbounds [4 x %struct.rtx_def**], [4 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 5), i32 0, i64 %idxprom528
  %274 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx529, align 8
  %275 = load i32, i32* %mode517, align 4
  %276 = load i32, i32* %j, align 4
  %idxprom530 = sext i32 %276 to i64
  %277 = load i32, i32* %op, align 4
  %idxprom531 = sext i32 %277 to i64
  %arrayidx532 = getelementptr inbounds [30 x i32*], [30 x i32*]* %op_alt_regno, i32 0, i64 %idxprom531
  %278 = load i32*, i32** %arrayidx532, align 8
  %arrayidx533 = getelementptr inbounds i32, i32* %278, i64 %idxprom530
  %279 = load i32, i32* %arrayidx533, align 4
  %call534 = call %struct.rtx_def* @gen_rtx_REG(i32 %275, i32 %279)
  %call535 = call i32 @validate_change(%struct.rtx_def* %272, %struct.rtx_def** %274, %struct.rtx_def* %call534, i32 1)
  br label %for.inc.536

for.inc.536:                                      ; preds = %if.end.527, %if.then.526
  %280 = load i32, i32* %i, align 4
  %dec = add nsw i32 %280, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond.508

for.end.537:                                      ; preds = %for.cond.508
  %call538 = call i32 @apply_change_group()
  store i32 %call538, i32* %retval
  br label %return

return:                                           ; preds = %for.end.537, %if.then
  %281 = load i32, i32* %retval
  ret i32 %281
}

declare i32 @rtx_cost(%struct.rtx_def*, i32) #1

declare %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def*, i32, i32) #1

declare i32 @references_value_p(%struct.rtx_def*, i32) #1

declare i32 @rtx_equal_for_cselib_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare zeroext i1 @purge_dead_edges(%struct.basic_block_def*) #1

; Function Attrs: noreturn
declare void @_fatal_insn_not_found(%struct.rtx_def*, i8*, i32, i8*) #2

declare i32 @reg_fits_class_p(%struct.rtx_def*, i32, i32, i32) #1

; Function Attrs: nounwind uwtable
define internal void @reload_combine_note_store(%struct.rtx_def* %dst, %struct.rtx_def* %set, i8* %data) #0 {
entry:
  %dst.addr = alloca %struct.rtx_def*, align 8
  %set.addr = alloca %struct.rtx_def*, align 8
  %data.addr = alloca i8*, align 8
  %regno = alloca i32, align 4
  %i = alloca i32, align 4
  %mode = alloca i32, align 4
  store %struct.rtx_def* %dst, %struct.rtx_def** %dst.addr, align 8
  store %struct.rtx_def* %set, %struct.rtx_def** %set.addr, align 8
  store i8* %data, i8** %data.addr, align 8
  store i32 0, i32* %regno, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  store i32 %bf.clear, i32* %mode, align 4
  %2 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load1 = load i32, i32* %3, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp = icmp eq i32 %bf.clear2, 63
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %fld3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx4 to i32*
  %6 = load i32, i32* %rtuint, align 4
  %7 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %fld5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i32 0, i64 0
  %rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rtx7, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load8 = load i32, i32* %9, align 8
  %bf.lshr9 = lshr i32 %bf.load8, 16
  %bf.clear10 = and i32 %bf.lshr9, 255
  %10 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %fld11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i32 0, i64 1
  %rtuint13 = bitcast %union.rtunion_def* %arrayidx12 to i32*
  %11 = load i32, i32* %rtuint13, align 4
  %12 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load14 = load i32, i32* %13, align 8
  %bf.lshr15 = lshr i32 %bf.load14, 16
  %bf.clear16 = and i32 %bf.lshr15, 255
  %call = call i32 @subreg_regno_offset(i32 %6, i32 %bf.clear10, i32 %11, i32 %bf.clear16)
  store i32 %call, i32* %regno, align 4
  %14 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %fld17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i32 0, i64 0
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rtx19, align 8
  store %struct.rtx_def* %15, %struct.rtx_def** %dst.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %16 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load20 = load i32, i32* %17, align 8
  %bf.clear21 = and i32 %bf.load20, 65535
  %cmp22 = icmp ne i32 %bf.clear21, 61
  br i1 %cmp22, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %if.end
  br label %if.end.186

if.end.24:                                        ; preds = %if.end
  %18 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %fld25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i32 0, i64 0
  %rtuint27 = bitcast %union.rtunion_def* %arrayidx26 to i32*
  %19 = load i32, i32* %rtuint27, align 4
  %20 = load i32, i32* %regno, align 4
  %add = add i32 %20, %19
  store i32 %add, i32* %regno, align 4
  %21 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %22 = bitcast %struct.rtx_def* %21 to i32*
  %bf.load28 = load i32, i32* %22, align 8
  %bf.clear29 = and i32 %bf.load28, 65535
  %cmp30 = icmp ne i32 %bf.clear29, 47
  br i1 %cmp30, label %if.then.51, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.24
  %23 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i32 0, i64 0
  %rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rtx33, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load34 = load i32, i32* %25, align 8
  %bf.clear35 = and i32 %bf.load34, 65535
  %cmp36 = icmp eq i32 %bf.clear35, 133
  br i1 %cmp36, label %if.then.51, label %lor.lhs.false.37

lor.lhs.false.37:                                 ; preds = %lor.lhs.false
  %26 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i32 0, i64 0
  %rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rtx40, align 8
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load41 = load i32, i32* %28, align 8
  %bf.clear42 = and i32 %bf.load41, 65535
  %cmp43 = icmp eq i32 %bf.clear42, 132
  br i1 %cmp43, label %if.then.51, label %lor.lhs.false.44

lor.lhs.false.44:                                 ; preds = %lor.lhs.false.37
  %29 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i32 0, i64 0
  %rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rtx47, align 8
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load48 = load i32, i32* %31, align 8
  %bf.clear49 = and i32 %bf.load48, 65535
  %cmp50 = icmp eq i32 %bf.clear49, 64
  br i1 %cmp50, label %if.then.51, label %if.else

if.then.51:                                       ; preds = %lor.lhs.false.44, %lor.lhs.false.37, %lor.lhs.false, %if.end.24
  %32 = load i32, i32* %regno, align 4
  %cmp52 = icmp sge i32 %32, 8
  br i1 %cmp52, label %land.lhs.true, label %lor.lhs.false.54

land.lhs.true:                                    ; preds = %if.then.51
  %33 = load i32, i32* %regno, align 4
  %cmp53 = icmp sle i32 %33, 15
  br i1 %cmp53, label %cond.true, label %lor.lhs.false.54

lor.lhs.false.54:                                 ; preds = %land.lhs.true, %if.then.51
  %34 = load i32, i32* %regno, align 4
  %cmp55 = icmp sge i32 %34, 21
  br i1 %cmp55, label %land.lhs.true.56, label %lor.lhs.false.58

land.lhs.true.56:                                 ; preds = %lor.lhs.false.54
  %35 = load i32, i32* %regno, align 4
  %cmp57 = icmp sle i32 %35, 28
  br i1 %cmp57, label %cond.true, label %lor.lhs.false.58

lor.lhs.false.58:                                 ; preds = %land.lhs.true.56, %lor.lhs.false.54
  %36 = load i32, i32* %regno, align 4
  %cmp59 = icmp sge i32 %36, 45
  br i1 %cmp59, label %land.lhs.true.60, label %lor.lhs.false.62

land.lhs.true.60:                                 ; preds = %lor.lhs.false.58
  %37 = load i32, i32* %regno, align 4
  %cmp61 = icmp sle i32 %37, 52
  br i1 %cmp61, label %cond.true, label %lor.lhs.false.62

lor.lhs.false.62:                                 ; preds = %land.lhs.true.60, %lor.lhs.false.58
  %38 = load i32, i32* %regno, align 4
  %cmp63 = icmp sge i32 %38, 29
  br i1 %cmp63, label %land.lhs.true.64, label %cond.false

land.lhs.true.64:                                 ; preds = %lor.lhs.false.62
  %39 = load i32, i32* %regno, align 4
  %cmp65 = icmp sle i32 %39, 36
  br i1 %cmp65, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.64, %land.lhs.true.60, %land.lhs.true.56, %land.lhs.true
  %40 = load i32, i32* %mode, align 4
  %idxprom = sext i32 %40 to i64
  %arrayidx66 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %41 = load i32, i32* %arrayidx66, align 4
  %cmp67 = icmp eq i32 %41, 5
  br i1 %cmp67, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %42 = load i32, i32* %mode, align 4
  %idxprom68 = sext i32 %42 to i64
  %arrayidx69 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom68
  %43 = load i32, i32* %arrayidx69, align 4
  %cmp70 = icmp eq i32 %43, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %44 = phi i1 [ true, %cond.true ], [ %cmp70, %lor.rhs ]
  %cond = select i1 %44, i32 2, i32 1
  br label %cond.end.93

cond.false:                                       ; preds = %land.lhs.true.64, %lor.lhs.false.62
  %45 = load i32, i32* %mode, align 4
  %cmp71 = icmp eq i32 %45, 18
  br i1 %cmp71, label %cond.true.72, label %cond.false.74

cond.true.72:                                     ; preds = %cond.false
  %46 = load i32, i32* @target_flags, align 4
  %and = and i32 %46, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond73 = select i1 %tobool, i32 2, i32 3
  br label %cond.end.91

cond.false.74:                                    ; preds = %cond.false
  %47 = load i32, i32* %mode, align 4
  %cmp75 = icmp eq i32 %47, 24
  br i1 %cmp75, label %cond.true.76, label %cond.false.80

cond.true.76:                                     ; preds = %cond.false.74
  %48 = load i32, i32* @target_flags, align 4
  %and77 = and i32 %48, 33554432
  %tobool78 = icmp ne i32 %and77, 0
  %cond79 = select i1 %tobool78, i32 4, i32 6
  br label %cond.end

cond.false.80:                                    ; preds = %cond.false.74
  %49 = load i32, i32* %mode, align 4
  %idxprom81 = sext i32 %49 to i64
  %arrayidx82 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom81
  %50 = load i8, i8* %arrayidx82, align 1
  %conv = zext i8 %50 to i32
  %51 = load i32, i32* @target_flags, align 4
  %and83 = and i32 %51, 33554432
  %tobool84 = icmp ne i32 %and83, 0
  %cond85 = select i1 %tobool84, i32 8, i32 4
  %add86 = add nsw i32 %conv, %cond85
  %sub = sub nsw i32 %add86, 1
  %52 = load i32, i32* @target_flags, align 4
  %and87 = and i32 %52, 33554432
  %tobool88 = icmp ne i32 %and87, 0
  %cond89 = select i1 %tobool88, i32 8, i32 4
  %div = sdiv i32 %sub, %cond89
  br label %cond.end

cond.end:                                         ; preds = %cond.false.80, %cond.true.76
  %cond90 = phi i32 [ %cond79, %cond.true.76 ], [ %div, %cond.false.80 ]
  br label %cond.end.91

cond.end.91:                                      ; preds = %cond.end, %cond.true.72
  %cond92 = phi i32 [ %cond73, %cond.true.72 ], [ %cond90, %cond.end ]
  br label %cond.end.93

cond.end.93:                                      ; preds = %cond.end.91, %lor.end
  %cond94 = phi i32 [ %cond, %lor.end ], [ %cond92, %cond.end.91 ]
  %sub95 = sub nsw i32 %cond94, 1
  %53 = load i32, i32* %regno, align 4
  %add96 = add nsw i32 %sub95, %53
  store i32 %add96, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.93
  %54 = load i32, i32* %i, align 4
  %55 = load i32, i32* %regno, align 4
  %cmp97 = icmp sge i32 %54, %55
  br i1 %cmp97, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %56 = load i32, i32* %i, align 4
  %idxprom99 = sext i32 %56 to i64
  %arrayidx100 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom99
  %use_index = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx100, i32 0, i32 1
  store i32 -1, i32* %use_index, align 4
  %57 = load i32, i32* @reload_combine_ruid, align 4
  %58 = load i32, i32* %i, align 4
  %idxprom101 = sext i32 %58 to i64
  %arrayidx102 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom101
  %store_ruid = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx102, i32 0, i32 3
  store i32 %57, i32* %store_ruid, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %59 = load i32, i32* %i, align 4
  %dec = add nsw i32 %59, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.186

if.else:                                          ; preds = %lor.lhs.false.44
  %60 = load i32, i32* %regno, align 4
  %cmp103 = icmp sge i32 %60, 8
  br i1 %cmp103, label %land.lhs.true.105, label %lor.lhs.false.108

land.lhs.true.105:                                ; preds = %if.else
  %61 = load i32, i32* %regno, align 4
  %cmp106 = icmp sle i32 %61, 15
  br i1 %cmp106, label %cond.true.126, label %lor.lhs.false.108

lor.lhs.false.108:                                ; preds = %land.lhs.true.105, %if.else
  %62 = load i32, i32* %regno, align 4
  %cmp109 = icmp sge i32 %62, 21
  br i1 %cmp109, label %land.lhs.true.111, label %lor.lhs.false.114

land.lhs.true.111:                                ; preds = %lor.lhs.false.108
  %63 = load i32, i32* %regno, align 4
  %cmp112 = icmp sle i32 %63, 28
  br i1 %cmp112, label %cond.true.126, label %lor.lhs.false.114

lor.lhs.false.114:                                ; preds = %land.lhs.true.111, %lor.lhs.false.108
  %64 = load i32, i32* %regno, align 4
  %cmp115 = icmp sge i32 %64, 45
  br i1 %cmp115, label %land.lhs.true.117, label %lor.lhs.false.120

land.lhs.true.117:                                ; preds = %lor.lhs.false.114
  %65 = load i32, i32* %regno, align 4
  %cmp118 = icmp sle i32 %65, 52
  br i1 %cmp118, label %cond.true.126, label %lor.lhs.false.120

lor.lhs.false.120:                                ; preds = %land.lhs.true.117, %lor.lhs.false.114
  %66 = load i32, i32* %regno, align 4
  %cmp121 = icmp sge i32 %66, 29
  br i1 %cmp121, label %land.lhs.true.123, label %cond.false.138

land.lhs.true.123:                                ; preds = %lor.lhs.false.120
  %67 = load i32, i32* %regno, align 4
  %cmp124 = icmp sle i32 %67, 36
  br i1 %cmp124, label %cond.true.126, label %cond.false.138

cond.true.126:                                    ; preds = %land.lhs.true.123, %land.lhs.true.117, %land.lhs.true.111, %land.lhs.true.105
  %68 = load i32, i32* %mode, align 4
  %idxprom127 = sext i32 %68 to i64
  %arrayidx128 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom127
  %69 = load i32, i32* %arrayidx128, align 4
  %cmp129 = icmp eq i32 %69, 5
  br i1 %cmp129, label %lor.end.136, label %lor.rhs.131

lor.rhs.131:                                      ; preds = %cond.true.126
  %70 = load i32, i32* %mode, align 4
  %idxprom132 = sext i32 %70 to i64
  %arrayidx133 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom132
  %71 = load i32, i32* %arrayidx133, align 4
  %cmp134 = icmp eq i32 %71, 6
  br label %lor.end.136

lor.end.136:                                      ; preds = %lor.rhs.131, %cond.true.126
  %72 = phi i1 [ true, %cond.true.126 ], [ %cmp134, %lor.rhs.131 ]
  %cond137 = select i1 %72, i32 2, i32 1
  br label %cond.end.169

cond.false.138:                                   ; preds = %land.lhs.true.123, %lor.lhs.false.120
  %73 = load i32, i32* %mode, align 4
  %cmp139 = icmp eq i32 %73, 18
  br i1 %cmp139, label %cond.true.141, label %cond.false.145

cond.true.141:                                    ; preds = %cond.false.138
  %74 = load i32, i32* @target_flags, align 4
  %and142 = and i32 %74, 33554432
  %tobool143 = icmp ne i32 %and142, 0
  %cond144 = select i1 %tobool143, i32 2, i32 3
  br label %cond.end.167

cond.false.145:                                   ; preds = %cond.false.138
  %75 = load i32, i32* %mode, align 4
  %cmp146 = icmp eq i32 %75, 24
  br i1 %cmp146, label %cond.true.148, label %cond.false.152

cond.true.148:                                    ; preds = %cond.false.145
  %76 = load i32, i32* @target_flags, align 4
  %and149 = and i32 %76, 33554432
  %tobool150 = icmp ne i32 %and149, 0
  %cond151 = select i1 %tobool150, i32 4, i32 6
  br label %cond.end.165

cond.false.152:                                   ; preds = %cond.false.145
  %77 = load i32, i32* %mode, align 4
  %idxprom153 = sext i32 %77 to i64
  %arrayidx154 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom153
  %78 = load i8, i8* %arrayidx154, align 1
  %conv155 = zext i8 %78 to i32
  %79 = load i32, i32* @target_flags, align 4
  %and156 = and i32 %79, 33554432
  %tobool157 = icmp ne i32 %and156, 0
  %cond158 = select i1 %tobool157, i32 8, i32 4
  %add159 = add nsw i32 %conv155, %cond158
  %sub160 = sub nsw i32 %add159, 1
  %80 = load i32, i32* @target_flags, align 4
  %and161 = and i32 %80, 33554432
  %tobool162 = icmp ne i32 %and161, 0
  %cond163 = select i1 %tobool162, i32 8, i32 4
  %div164 = sdiv i32 %sub160, %cond163
  br label %cond.end.165

cond.end.165:                                     ; preds = %cond.false.152, %cond.true.148
  %cond166 = phi i32 [ %cond151, %cond.true.148 ], [ %div164, %cond.false.152 ]
  br label %cond.end.167

cond.end.167:                                     ; preds = %cond.end.165, %cond.true.141
  %cond168 = phi i32 [ %cond144, %cond.true.141 ], [ %cond166, %cond.end.165 ]
  br label %cond.end.169

cond.end.169:                                     ; preds = %cond.end.167, %lor.end.136
  %cond170 = phi i32 [ %cond137, %lor.end.136 ], [ %cond168, %cond.end.167 ]
  %sub171 = sub nsw i32 %cond170, 1
  %81 = load i32, i32* %regno, align 4
  %add172 = add nsw i32 %sub171, %81
  store i32 %add172, i32* %i, align 4
  br label %for.cond.173

for.cond.173:                                     ; preds = %for.inc.183, %cond.end.169
  %82 = load i32, i32* %i, align 4
  %83 = load i32, i32* %regno, align 4
  %cmp174 = icmp sge i32 %82, %83
  br i1 %cmp174, label %for.body.176, label %for.end.185

for.body.176:                                     ; preds = %for.cond.173
  %84 = load i32, i32* @reload_combine_ruid, align 4
  %85 = load i32, i32* %i, align 4
  %idxprom177 = sext i32 %85 to i64
  %arrayidx178 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom177
  %store_ruid179 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx178, i32 0, i32 3
  store i32 %84, i32* %store_ruid179, align 4
  %86 = load i32, i32* %i, align 4
  %idxprom180 = sext i32 %86 to i64
  %arrayidx181 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom180
  %use_index182 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx181, i32 0, i32 1
  store i32 6, i32* %use_index182, align 4
  br label %for.inc.183

for.inc.183:                                      ; preds = %for.body.176
  %87 = load i32, i32* %i, align 4
  %dec184 = add nsw i32 %87, -1
  store i32 %dec184, i32* %i, align 4
  br label %for.cond.173

for.end.185:                                      ; preds = %for.cond.173
  br label %if.end.186

if.end.186:                                       ; preds = %if.then.23, %for.end.185, %for.end
  ret void
}

declare i32 @condjump_p(%struct.rtx_def*) #1

declare i32 @condjump_in_parallel_p(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @reload_combine_note_use(%struct.rtx_def** %xp, %struct.rtx_def* %insn) #0 {
entry:
  %xp.addr = alloca %struct.rtx_def**, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %x = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %offset = alloca %struct.rtx_def*, align 8
  %reg = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %nregs = alloca i32, align 4
  %regno133 = alloca i32, align 4
  %use_index137 = alloca i32, align 4
  %nregs138 = alloca i32, align 4
  store %struct.rtx_def** %xp, %struct.rtx_def*** %xp.addr, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %xp.addr, align 8
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %x, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load = load i32, i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %4, %struct.rtx_def** %offset, align 8
  %5 = load i32, i32* %code, align 4
  switch i32 %5, label %sw.default [
    i32 47, label %sw.bb
    i32 48, label %sw.bb.6
    i32 49, label %sw.bb.88
    i32 75, label %sw.bb.108
    i32 61, label %sw.bb.132
  ]

sw.bb:                                            ; preds = %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load1 = load i32, i32* %8, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp = icmp eq i32 %bf.clear2, 61
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i32 0, i64 1
  %rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  call void @reload_combine_note_use(%struct.rtx_def** %rtx5, %struct.rtx_def* %10)
  br label %for.end.320

if.end:                                           ; preds = %sw.bb
  br label %sw.epilog

sw.bb.6:                                          ; preds = %entry
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i32 0, i64 0
  %rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rtx9, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load10 = load i32, i32* %13, align 8
  %bf.clear11 = and i32 %bf.load10, 65535
  %cmp12 = icmp eq i32 %bf.clear11, 61
  br i1 %cmp12, label %land.lhs.true, label %if.end.87

land.lhs.true:                                    ; preds = %sw.bb.6
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i32 0, i64 0
  %rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rtx15, align 8
  %16 = bitcast %struct.rtx_def* %15 to i32*
  %bf.load16 = load i32, i32* %16, align 8
  %bf.lshr = lshr i32 %bf.load16, 30
  %bf.clear17 = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear17, 0
  br i1 %tobool, label %if.then.18, label %if.end.87

if.then.18:                                       ; preds = %land.lhs.true
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i32 0, i64 0
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rtx21, align 8
  store %struct.rtx_def* %18, %struct.rtx_def** %reg, align 8
  %19 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx23 to i32*
  %20 = load i32, i32* %rtuint, align 4
  store i32 %20, i32* %regno, align 4
  %21 = load i32, i32* %regno, align 4
  %cmp24 = icmp sge i32 %21, 8
  br i1 %cmp24, label %land.lhs.true.25, label %lor.lhs.false

land.lhs.true.25:                                 ; preds = %if.then.18
  %22 = load i32, i32* %regno, align 4
  %cmp26 = icmp sle i32 %22, 15
  br i1 %cmp26, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.25, %if.then.18
  %23 = load i32, i32* %regno, align 4
  %cmp27 = icmp sge i32 %23, 21
  br i1 %cmp27, label %land.lhs.true.28, label %lor.lhs.false.30

land.lhs.true.28:                                 ; preds = %lor.lhs.false
  %24 = load i32, i32* %regno, align 4
  %cmp29 = icmp sle i32 %24, 28
  br i1 %cmp29, label %cond.true, label %lor.lhs.false.30

lor.lhs.false.30:                                 ; preds = %land.lhs.true.28, %lor.lhs.false
  %25 = load i32, i32* %regno, align 4
  %cmp31 = icmp sge i32 %25, 45
  br i1 %cmp31, label %land.lhs.true.32, label %lor.lhs.false.34

land.lhs.true.32:                                 ; preds = %lor.lhs.false.30
  %26 = load i32, i32* %regno, align 4
  %cmp33 = icmp sle i32 %26, 52
  br i1 %cmp33, label %cond.true, label %lor.lhs.false.34

lor.lhs.false.34:                                 ; preds = %land.lhs.true.32, %lor.lhs.false.30
  %27 = load i32, i32* %regno, align 4
  %cmp35 = icmp sge i32 %27, 29
  br i1 %cmp35, label %land.lhs.true.36, label %cond.false

land.lhs.true.36:                                 ; preds = %lor.lhs.false.34
  %28 = load i32, i32* %regno, align 4
  %cmp37 = icmp sle i32 %28, 36
  br i1 %cmp37, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.36, %land.lhs.true.32, %land.lhs.true.28, %land.lhs.true.25
  %29 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load38 = load i32, i32* %30, align 8
  %bf.lshr39 = lshr i32 %bf.load38, 16
  %bf.clear40 = and i32 %bf.lshr39, 255
  %idxprom = sext i32 %bf.clear40 to i64
  %arrayidx41 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %31 = load i32, i32* %arrayidx41, align 4
  %cmp42 = icmp eq i32 %31, 5
  br i1 %cmp42, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %32 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load43 = load i32, i32* %33, align 8
  %bf.lshr44 = lshr i32 %bf.load43, 16
  %bf.clear45 = and i32 %bf.lshr44, 255
  %idxprom46 = sext i32 %bf.clear45 to i64
  %arrayidx47 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom46
  %34 = load i32, i32* %arrayidx47, align 4
  %cmp48 = icmp eq i32 %34, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %35 = phi i1 [ true, %cond.true ], [ %cmp48, %lor.rhs ]
  %cond = select i1 %35, i32 2, i32 1
  br label %cond.end.80

cond.false:                                       ; preds = %land.lhs.true.36, %lor.lhs.false.34
  %36 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %37 = bitcast %struct.rtx_def* %36 to i32*
  %bf.load49 = load i32, i32* %37, align 8
  %bf.lshr50 = lshr i32 %bf.load49, 16
  %bf.clear51 = and i32 %bf.lshr50, 255
  %cmp52 = icmp eq i32 %bf.clear51, 18
  br i1 %cmp52, label %cond.true.53, label %cond.false.56

cond.true.53:                                     ; preds = %cond.false
  %38 = load i32, i32* @target_flags, align 4
  %and = and i32 %38, 33554432
  %tobool54 = icmp ne i32 %and, 0
  %cond55 = select i1 %tobool54, i32 2, i32 3
  br label %cond.end.78

cond.false.56:                                    ; preds = %cond.false
  %39 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %40 = bitcast %struct.rtx_def* %39 to i32*
  %bf.load57 = load i32, i32* %40, align 8
  %bf.lshr58 = lshr i32 %bf.load57, 16
  %bf.clear59 = and i32 %bf.lshr58, 255
  %cmp60 = icmp eq i32 %bf.clear59, 24
  br i1 %cmp60, label %cond.true.61, label %cond.false.65

cond.true.61:                                     ; preds = %cond.false.56
  %41 = load i32, i32* @target_flags, align 4
  %and62 = and i32 %41, 33554432
  %tobool63 = icmp ne i32 %and62, 0
  %cond64 = select i1 %tobool63, i32 4, i32 6
  br label %cond.end

cond.false.65:                                    ; preds = %cond.false.56
  %42 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %43 = bitcast %struct.rtx_def* %42 to i32*
  %bf.load66 = load i32, i32* %43, align 8
  %bf.lshr67 = lshr i32 %bf.load66, 16
  %bf.clear68 = and i32 %bf.lshr67, 255
  %idxprom69 = sext i32 %bf.clear68 to i64
  %arrayidx70 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom69
  %44 = load i8, i8* %arrayidx70, align 1
  %conv = zext i8 %44 to i32
  %45 = load i32, i32* @target_flags, align 4
  %and71 = and i32 %45, 33554432
  %tobool72 = icmp ne i32 %and71, 0
  %cond73 = select i1 %tobool72, i32 8, i32 4
  %add = add nsw i32 %conv, %cond73
  %sub = sub nsw i32 %add, 1
  %46 = load i32, i32* @target_flags, align 4
  %and74 = and i32 %46, 33554432
  %tobool75 = icmp ne i32 %and74, 0
  %cond76 = select i1 %tobool75, i32 8, i32 4
  %div = sdiv i32 %sub, %cond76
  br label %cond.end

cond.end:                                         ; preds = %cond.false.65, %cond.true.61
  %cond77 = phi i32 [ %cond64, %cond.true.61 ], [ %div, %cond.false.65 ]
  br label %cond.end.78

cond.end.78:                                      ; preds = %cond.end, %cond.true.53
  %cond79 = phi i32 [ %cond55, %cond.true.53 ], [ %cond77, %cond.end ]
  br label %cond.end.80

cond.end.80:                                      ; preds = %cond.end.78, %lor.end
  %cond81 = phi i32 [ %cond, %lor.end ], [ %cond79, %cond.end.78 ]
  store i32 %cond81, i32* %nregs, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %cond.end.80
  %47 = load i32, i32* %nregs, align 4
  %dec = add nsw i32 %47, -1
  store i32 %dec, i32* %nregs, align 4
  %cmp82 = icmp sge i32 %dec, 0
  br i1 %cmp82, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %48 = load i32, i32* %regno, align 4
  %49 = load i32, i32* %nregs, align 4
  %add84 = add nsw i32 %48, %49
  %idxprom85 = sext i32 %add84 to i64
  %arrayidx86 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom85
  %use_index = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx86, i32 0, i32 1
  store i32 -1, i32* %use_index, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %for.end.320

if.end.87:                                        ; preds = %land.lhs.true, %sw.bb.6
  br label %sw.epilog

sw.bb.88:                                         ; preds = %entry
  %50 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i32 0, i64 0
  %rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rtx91, align 8
  %52 = bitcast %struct.rtx_def* %51 to i32*
  %bf.load92 = load i32, i32* %52, align 8
  %bf.clear93 = and i32 %bf.load92, 65535
  %cmp94 = icmp eq i32 %bf.clear93, 61
  br i1 %cmp94, label %if.then.96, label %if.end.107

if.then.96:                                       ; preds = %sw.bb.88
  %53 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld97, i32 0, i64 0
  %rtx99 = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx99, align 8
  %fld100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1
  %arrayidx101 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld100, i32 0, i64 0
  %rtuint102 = bitcast %union.rtunion_def* %arrayidx101 to i32*
  %55 = load i32, i32* %rtuint102, align 4
  %cmp103 = icmp uge i32 %55, 53
  br i1 %cmp103, label %if.then.105, label %if.end.106

if.then.105:                                      ; preds = %if.then.96
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 8994, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.reload_combine_note_use, i32 0, i32 0)) #5
  unreachable

if.end.106:                                       ; preds = %if.then.96
  br label %for.end.320

if.end.107:                                       ; preds = %sw.bb.88
  br label %sw.epilog

sw.bb.108:                                        ; preds = %entry
  %56 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1
  %arrayidx110 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld109, i32 0, i64 0
  %rtx111 = bitcast %union.rtunion_def* %arrayidx110 to %struct.rtx_def**
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rtx111, align 8
  %58 = bitcast %struct.rtx_def* %57 to i32*
  %bf.load112 = load i32, i32* %58, align 8
  %bf.clear113 = and i32 %bf.load112, 65535
  %cmp114 = icmp ne i32 %bf.clear113, 61
  br i1 %cmp114, label %if.then.124, label %lor.lhs.false.116

lor.lhs.false.116:                                ; preds = %sw.bb.108
  %59 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld117 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1
  %arrayidx118 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld117, i32 0, i64 1
  %rtx119 = bitcast %union.rtunion_def* %arrayidx118 to %struct.rtx_def**
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rtx119, align 8
  %61 = bitcast %struct.rtx_def* %60 to i32*
  %bf.load120 = load i32, i32* %61, align 8
  %bf.clear121 = and i32 %bf.load120, 65535
  %cmp122 = icmp ne i32 %bf.clear121, 54
  br i1 %cmp122, label %if.then.124, label %if.end.125

if.then.124:                                      ; preds = %lor.lhs.false.116, %sw.bb.108
  br label %sw.epilog

if.end.125:                                       ; preds = %lor.lhs.false.116
  %62 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld126 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1
  %arrayidx127 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld126, i32 0, i64 1
  %rtx128 = bitcast %union.rtunion_def* %arrayidx127 to %struct.rtx_def**
  %63 = load %struct.rtx_def*, %struct.rtx_def** %rtx128, align 8
  store %struct.rtx_def* %63, %struct.rtx_def** %offset, align 8
  %64 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld129 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1
  %arrayidx130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld129, i32 0, i64 0
  %rtx131 = bitcast %union.rtunion_def* %arrayidx130 to %struct.rtx_def**
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rtx131, align 8
  store %struct.rtx_def* %65, %struct.rtx_def** %x, align 8
  br label %sw.bb.132

sw.bb.132:                                        ; preds = %entry, %if.end.125
  %66 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1
  %arrayidx135 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld134, i32 0, i64 0
  %rtuint136 = bitcast %union.rtunion_def* %arrayidx135 to i32*
  %67 = load i32, i32* %rtuint136, align 4
  store i32 %67, i32* %regno133, align 4
  %68 = load i32, i32* %regno133, align 4
  %cmp139 = icmp sge i32 %68, 53
  br i1 %cmp139, label %if.then.141, label %if.end.142

if.then.141:                                      ; preds = %sw.bb.132
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 9015, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.reload_combine_note_use, i32 0, i32 0)) #5
  unreachable

if.end.142:                                       ; preds = %sw.bb.132
  %69 = load i32, i32* %regno133, align 4
  %cmp143 = icmp sge i32 %69, 8
  br i1 %cmp143, label %land.lhs.true.145, label %lor.lhs.false.148

land.lhs.true.145:                                ; preds = %if.end.142
  %70 = load i32, i32* %regno133, align 4
  %cmp146 = icmp sle i32 %70, 15
  br i1 %cmp146, label %cond.true.166, label %lor.lhs.false.148

lor.lhs.false.148:                                ; preds = %land.lhs.true.145, %if.end.142
  %71 = load i32, i32* %regno133, align 4
  %cmp149 = icmp sge i32 %71, 21
  br i1 %cmp149, label %land.lhs.true.151, label %lor.lhs.false.154

land.lhs.true.151:                                ; preds = %lor.lhs.false.148
  %72 = load i32, i32* %regno133, align 4
  %cmp152 = icmp sle i32 %72, 28
  br i1 %cmp152, label %cond.true.166, label %lor.lhs.false.154

lor.lhs.false.154:                                ; preds = %land.lhs.true.151, %lor.lhs.false.148
  %73 = load i32, i32* %regno133, align 4
  %cmp155 = icmp sge i32 %73, 45
  br i1 %cmp155, label %land.lhs.true.157, label %lor.lhs.false.160

land.lhs.true.157:                                ; preds = %lor.lhs.false.154
  %74 = load i32, i32* %regno133, align 4
  %cmp158 = icmp sle i32 %74, 52
  br i1 %cmp158, label %cond.true.166, label %lor.lhs.false.160

lor.lhs.false.160:                                ; preds = %land.lhs.true.157, %lor.lhs.false.154
  %75 = load i32, i32* %regno133, align 4
  %cmp161 = icmp sge i32 %75, 29
  br i1 %cmp161, label %land.lhs.true.163, label %cond.false.184

land.lhs.true.163:                                ; preds = %lor.lhs.false.160
  %76 = load i32, i32* %regno133, align 4
  %cmp164 = icmp sle i32 %76, 36
  br i1 %cmp164, label %cond.true.166, label %cond.false.184

cond.true.166:                                    ; preds = %land.lhs.true.163, %land.lhs.true.157, %land.lhs.true.151, %land.lhs.true.145
  %77 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %78 = bitcast %struct.rtx_def* %77 to i32*
  %bf.load167 = load i32, i32* %78, align 8
  %bf.lshr168 = lshr i32 %bf.load167, 16
  %bf.clear169 = and i32 %bf.lshr168, 255
  %idxprom170 = sext i32 %bf.clear169 to i64
  %arrayidx171 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom170
  %79 = load i32, i32* %arrayidx171, align 4
  %cmp172 = icmp eq i32 %79, 5
  br i1 %cmp172, label %lor.end.182, label %lor.rhs.174

lor.rhs.174:                                      ; preds = %cond.true.166
  %80 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %81 = bitcast %struct.rtx_def* %80 to i32*
  %bf.load175 = load i32, i32* %81, align 8
  %bf.lshr176 = lshr i32 %bf.load175, 16
  %bf.clear177 = and i32 %bf.lshr176, 255
  %idxprom178 = sext i32 %bf.clear177 to i64
  %arrayidx179 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom178
  %82 = load i32, i32* %arrayidx179, align 4
  %cmp180 = icmp eq i32 %82, 6
  br label %lor.end.182

lor.end.182:                                      ; preds = %lor.rhs.174, %cond.true.166
  %83 = phi i1 [ true, %cond.true.166 ], [ %cmp180, %lor.rhs.174 ]
  %cond183 = select i1 %83, i32 2, i32 1
  br label %cond.end.224

cond.false.184:                                   ; preds = %land.lhs.true.163, %lor.lhs.false.160
  %84 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %85 = bitcast %struct.rtx_def* %84 to i32*
  %bf.load185 = load i32, i32* %85, align 8
  %bf.lshr186 = lshr i32 %bf.load185, 16
  %bf.clear187 = and i32 %bf.lshr186, 255
  %cmp188 = icmp eq i32 %bf.clear187, 18
  br i1 %cmp188, label %cond.true.190, label %cond.false.194

cond.true.190:                                    ; preds = %cond.false.184
  %86 = load i32, i32* @target_flags, align 4
  %and191 = and i32 %86, 33554432
  %tobool192 = icmp ne i32 %and191, 0
  %cond193 = select i1 %tobool192, i32 2, i32 3
  br label %cond.end.222

cond.false.194:                                   ; preds = %cond.false.184
  %87 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %88 = bitcast %struct.rtx_def* %87 to i32*
  %bf.load195 = load i32, i32* %88, align 8
  %bf.lshr196 = lshr i32 %bf.load195, 16
  %bf.clear197 = and i32 %bf.lshr196, 255
  %cmp198 = icmp eq i32 %bf.clear197, 24
  br i1 %cmp198, label %cond.true.200, label %cond.false.204

cond.true.200:                                    ; preds = %cond.false.194
  %89 = load i32, i32* @target_flags, align 4
  %and201 = and i32 %89, 33554432
  %tobool202 = icmp ne i32 %and201, 0
  %cond203 = select i1 %tobool202, i32 4, i32 6
  br label %cond.end.220

cond.false.204:                                   ; preds = %cond.false.194
  %90 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %91 = bitcast %struct.rtx_def* %90 to i32*
  %bf.load205 = load i32, i32* %91, align 8
  %bf.lshr206 = lshr i32 %bf.load205, 16
  %bf.clear207 = and i32 %bf.lshr206, 255
  %idxprom208 = sext i32 %bf.clear207 to i64
  %arrayidx209 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom208
  %92 = load i8, i8* %arrayidx209, align 1
  %conv210 = zext i8 %92 to i32
  %93 = load i32, i32* @target_flags, align 4
  %and211 = and i32 %93, 33554432
  %tobool212 = icmp ne i32 %and211, 0
  %cond213 = select i1 %tobool212, i32 8, i32 4
  %add214 = add nsw i32 %conv210, %cond213
  %sub215 = sub nsw i32 %add214, 1
  %94 = load i32, i32* @target_flags, align 4
  %and216 = and i32 %94, 33554432
  %tobool217 = icmp ne i32 %and216, 0
  %cond218 = select i1 %tobool217, i32 8, i32 4
  %div219 = sdiv i32 %sub215, %cond218
  br label %cond.end.220

cond.end.220:                                     ; preds = %cond.false.204, %cond.true.200
  %cond221 = phi i32 [ %cond203, %cond.true.200 ], [ %div219, %cond.false.204 ]
  br label %cond.end.222

cond.end.222:                                     ; preds = %cond.end.220, %cond.true.190
  %cond223 = phi i32 [ %cond193, %cond.true.190 ], [ %cond221, %cond.end.220 ]
  br label %cond.end.224

cond.end.224:                                     ; preds = %cond.end.222, %lor.end.182
  %cond225 = phi i32 [ %cond183, %lor.end.182 ], [ %cond223, %cond.end.222 ]
  store i32 %cond225, i32* %nregs138, align 4
  %95 = load i32, i32* %nregs138, align 4
  %cmp226 = icmp sgt i32 %95, 1
  br i1 %cmp226, label %if.then.228, label %if.end.239

if.then.228:                                      ; preds = %cond.end.224
  br label %while.cond.229

while.cond.229:                                   ; preds = %while.body.233, %if.then.228
  %96 = load i32, i32* %nregs138, align 4
  %dec230 = add nsw i32 %96, -1
  store i32 %dec230, i32* %nregs138, align 4
  %cmp231 = icmp sge i32 %dec230, 0
  br i1 %cmp231, label %while.body.233, label %while.end.238

while.body.233:                                   ; preds = %while.cond.229
  %97 = load i32, i32* %regno133, align 4
  %98 = load i32, i32* %nregs138, align 4
  %add234 = add nsw i32 %97, %98
  %idxprom235 = sext i32 %add234 to i64
  %arrayidx236 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom235
  %use_index237 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx236, i32 0, i32 1
  store i32 -1, i32* %use_index237, align 4
  br label %while.cond.229

while.end.238:                                    ; preds = %while.cond.229
  br label %for.end.320

if.end.239:                                       ; preds = %cond.end.224
  %99 = load i32, i32* %regno133, align 4
  %idxprom240 = sext i32 %99 to i64
  %arrayidx241 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom240
  %use_index242 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx241, i32 0, i32 1
  %100 = load i32, i32* %use_index242, align 4
  %dec243 = add nsw i32 %100, -1
  store i32 %dec243, i32* %use_index242, align 4
  store i32 %dec243, i32* %use_index137, align 4
  %101 = load i32, i32* %use_index137, align 4
  %cmp244 = icmp slt i32 %101, 0
  br i1 %cmp244, label %if.then.246, label %if.end.247

if.then.246:                                      ; preds = %if.end.239
  br label %for.end.320

if.end.247:                                       ; preds = %if.end.239
  %102 = load i32, i32* %use_index137, align 4
  %cmp248 = icmp ne i32 %102, 5
  br i1 %cmp248, label %if.then.250, label %if.else

if.then.250:                                      ; preds = %if.end.247
  %103 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8
  %104 = load i32, i32* %regno133, align 4
  %idxprom251 = sext i32 %104 to i64
  %arrayidx252 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom251
  %offset253 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx252, i32 0, i32 2
  %105 = load %struct.rtx_def*, %struct.rtx_def** %offset253, align 8
  %call = call i32 @rtx_equal_p(%struct.rtx_def* %103, %struct.rtx_def* %105)
  %tobool254 = icmp ne i32 %call, 0
  br i1 %tobool254, label %if.end.259, label %if.then.255

if.then.255:                                      ; preds = %if.then.250
  %106 = load i32, i32* %regno133, align 4
  %idxprom256 = sext i32 %106 to i64
  %arrayidx257 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom256
  %use_index258 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx257, i32 0, i32 1
  store i32 -1, i32* %use_index258, align 4
  br label %for.end.320

if.end.259:                                       ; preds = %if.then.250
  br label %if.end.265

if.else:                                          ; preds = %if.end.247
  %107 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8
  %108 = load i32, i32* %regno133, align 4
  %idxprom260 = sext i32 %108 to i64
  %arrayidx261 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom260
  %offset262 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx261, i32 0, i32 2
  store %struct.rtx_def* %107, %struct.rtx_def** %offset262, align 8
  %109 = load i32, i32* @reload_combine_ruid, align 4
  %110 = load i32, i32* %regno133, align 4
  %idxprom263 = sext i32 %110 to i64
  %arrayidx264 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom263
  %use_ruid = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx264, i32 0, i32 4
  store i32 %109, i32* %use_ruid, align 4
  br label %if.end.265

if.end.265:                                       ; preds = %if.else, %if.end.259
  %111 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %112 = load i32, i32* %use_index137, align 4
  %idxprom266 = sext i32 %112 to i64
  %113 = load i32, i32* %regno133, align 4
  %idxprom267 = sext i32 %113 to i64
  %arrayidx268 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom267
  %reg_use = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx268, i32 0, i32 0
  %arrayidx269 = getelementptr inbounds [6 x %struct.reg_use], [6 x %struct.reg_use]* %reg_use, i32 0, i64 %idxprom266
  %insn270 = getelementptr inbounds %struct.reg_use, %struct.reg_use* %arrayidx269, i32 0, i32 0
  store %struct.rtx_def* %111, %struct.rtx_def** %insn270, align 8
  %114 = load %struct.rtx_def**, %struct.rtx_def*** %xp.addr, align 8
  %115 = load i32, i32* %use_index137, align 4
  %idxprom271 = sext i32 %115 to i64
  %116 = load i32, i32* %regno133, align 4
  %idxprom272 = sext i32 %116 to i64
  %arrayidx273 = getelementptr inbounds [53 x %struct.anon.5], [53 x %struct.anon.5]* @reg_state, i32 0, i64 %idxprom272
  %reg_use274 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx273, i32 0, i32 0
  %arrayidx275 = getelementptr inbounds [6 x %struct.reg_use], [6 x %struct.reg_use]* %reg_use274, i32 0, i64 %idxprom271
  %usep = getelementptr inbounds %struct.reg_use, %struct.reg_use* %arrayidx275, i32 0, i32 1
  store %struct.rtx_def** %114, %struct.rtx_def*** %usep, align 8
  br label %for.end.320

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.then.124, %if.end.107, %if.end.87, %if.end
  %117 = load i32, i32* %code, align 4
  %idxprom276 = sext i32 %117 to i64
  %arrayidx277 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom276
  %118 = load i8*, i8** %arrayidx277, align 8
  store i8* %118, i8** %fmt, align 8
  %119 = load i32, i32* %code, align 4
  %idxprom278 = sext i32 %119 to i64
  %arrayidx279 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom278
  %120 = load i8, i8* %arrayidx279, align 1
  %conv280 = zext i8 %120 to i32
  %sub281 = sub nsw i32 %conv280, 1
  store i32 %sub281, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.318, %sw.epilog
  %121 = load i32, i32* %i, align 4
  %cmp282 = icmp sge i32 %121, 0
  br i1 %cmp282, label %for.body, label %for.end.320

for.body:                                         ; preds = %for.cond
  %122 = load i32, i32* %i, align 4
  %idxprom284 = sext i32 %122 to i64
  %123 = load i8*, i8** %fmt, align 8
  %arrayidx285 = getelementptr inbounds i8, i8* %123, i64 %idxprom284
  %124 = load i8, i8* %arrayidx285, align 1
  %conv286 = sext i8 %124 to i32
  %cmp287 = icmp eq i32 %conv286, 101
  br i1 %cmp287, label %if.then.289, label %if.else.294

if.then.289:                                      ; preds = %for.body
  %125 = load i32, i32* %i, align 4
  %idxprom290 = sext i32 %125 to i64
  %126 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld291 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1
  %arrayidx292 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld291, i32 0, i64 %idxprom290
  %rtx293 = bitcast %union.rtunion_def* %arrayidx292 to %struct.rtx_def**
  %127 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  call void @reload_combine_note_use(%struct.rtx_def** %rtx293, %struct.rtx_def* %127)
  br label %if.end.317

if.else.294:                                      ; preds = %for.body
  %128 = load i32, i32* %i, align 4
  %idxprom295 = sext i32 %128 to i64
  %129 = load i8*, i8** %fmt, align 8
  %arrayidx296 = getelementptr inbounds i8, i8* %129, i64 %idxprom295
  %130 = load i8, i8* %arrayidx296, align 1
  %conv297 = sext i8 %130 to i32
  %cmp298 = icmp eq i32 %conv297, 69
  br i1 %cmp298, label %if.then.300, label %if.end.316

if.then.300:                                      ; preds = %if.else.294
  %131 = load i32, i32* %i, align 4
  %idxprom301 = sext i32 %131 to i64
  %132 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld302 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1
  %arrayidx303 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld302, i32 0, i64 %idxprom301
  %rtvec = bitcast %union.rtunion_def* %arrayidx303 to %struct.rtvec_def**
  %133 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %133, i32 0, i32 0
  %134 = load i32, i32* %num_elem, align 4
  %sub304 = sub nsw i32 %134, 1
  store i32 %sub304, i32* %j, align 4
  br label %for.cond.305

for.cond.305:                                     ; preds = %for.inc, %if.then.300
  %135 = load i32, i32* %j, align 4
  %cmp306 = icmp sge i32 %135, 0
  br i1 %cmp306, label %for.body.308, label %for.end

for.body.308:                                     ; preds = %for.cond.305
  %136 = load i32, i32* %j, align 4
  %idxprom309 = sext i32 %136 to i64
  %137 = load i32, i32* %i, align 4
  %idxprom310 = sext i32 %137 to i64
  %138 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld311 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %138, i32 0, i32 1
  %arrayidx312 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld311, i32 0, i64 %idxprom310
  %rtvec313 = bitcast %union.rtunion_def* %arrayidx312 to %struct.rtvec_def**
  %139 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec313, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %139, i32 0, i32 1
  %arrayidx314 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom309
  %140 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  call void @reload_combine_note_use(%struct.rtx_def** %arrayidx314, %struct.rtx_def* %140)
  br label %for.inc

for.inc:                                          ; preds = %for.body.308
  %141 = load i32, i32* %j, align 4
  %dec315 = add nsw i32 %141, -1
  store i32 %dec315, i32* %j, align 4
  br label %for.cond.305

for.end:                                          ; preds = %for.cond.305
  br label %if.end.316

if.end.316:                                       ; preds = %for.end, %if.else.294
  br label %if.end.317

if.end.317:                                       ; preds = %if.end.316, %if.then.289
  br label %for.inc.318

for.inc.318:                                      ; preds = %if.end.317
  %142 = load i32, i32* %i, align 4
  %dec319 = add nsw i32 %142, -1
  store i32 %dec319, i32* %i, align 4
  br label %for.cond

for.end.320:                                      ; preds = %if.then, %while.end, %if.end.106, %while.end.238, %if.then.246, %if.then.255, %if.end.265, %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal i64 @sext_for_mode(i32 %mode, i64 %value) #0 {
entry:
  %mode.addr = alloca i32, align 4
  %value.addr = alloca i64, align 8
  %cval = alloca i64, align 8
  %width = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4
  store i64 %value, i64* %value.addr, align 8
  %0 = load i64, i64* %value.addr, align 8
  %1 = load i32, i32* %mode.addr, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom
  %2 = load i64, i64* %arrayidx, align 8
  %and = and i64 %0, %2
  store i64 %and, i64* %cval, align 8
  %3 = load i32, i32* %mode.addr, align 4
  %idxprom1 = sext i32 %3 to i64
  %arrayidx2 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1
  %4 = load i16, i16* %arrayidx2, align 2
  %conv = zext i16 %4 to i32
  store i32 %conv, i32* %width, align 4
  %5 = load i32, i32* %width, align 4
  %cmp = icmp sgt i32 %5, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %6 = load i32, i32* %width, align 4
  %cmp4 = icmp slt i32 %6, 64
  br i1 %cmp4, label %land.lhs.true.6, label %if.end

land.lhs.true.6:                                  ; preds = %land.lhs.true
  %7 = load i64, i64* %cval, align 8
  %8 = load i32, i32* %width, align 4
  %sub = sub nsw i32 %8, 1
  %sh_prom = zext i32 %sub to i64
  %shl = shl i64 1, %sh_prom
  %and7 = and i64 %7, %shl
  %cmp8 = icmp ne i64 %and7, 0
  br i1 %cmp8, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.6
  %9 = load i32, i32* %width, align 4
  %sh_prom10 = zext i32 %9 to i64
  %shl11 = shl i64 -1, %sh_prom10
  %10 = load i64, i64* %cval, align 8
  %or = or i64 %10, %shl11
  store i64 %or, i64* %cval, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.6, %land.lhs.true, %entry
  %11 = load i64, i64* %cval, align 8
  ret i64 %11
}

declare i32 @have_add2_insn(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @move2add_note_store(%struct.rtx_def* %dst, %struct.rtx_def* %set, i8* %data) #0 {
entry:
  %dst.addr = alloca %struct.rtx_def*, align 8
  %set.addr = alloca %struct.rtx_def*, align 8
  %data.addr = alloca i8*, align 8
  %regno = alloca i32, align 4
  %i = alloca i32, align 4
  %mode = alloca i32, align 4
  %src = alloca %struct.rtx_def*, align 8
  %base_reg = alloca %struct.rtx_def*, align 8
  %offset = alloca i64, align 8
  %base_regno = alloca i32, align 4
  %dst_mode = alloca i32, align 4
  %endregno = alloca i32, align 4
  store %struct.rtx_def* %dst, %struct.rtx_def** %dst.addr, align 8
  store %struct.rtx_def* %set, %struct.rtx_def** %set.addr, align 8
  store i8* %data, i8** %data.addr, align 8
  store i32 0, i32* %regno, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  store i32 %bf.clear, i32* %mode, align 4
  %2 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load1 = load i32, i32* %3, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp = icmp eq i32 %bf.clear2, 63
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %fld3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx4 to i32*
  %6 = load i32, i32* %rtuint, align 4
  %7 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %fld5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i32 0, i64 0
  %rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rtx7, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load8 = load i32, i32* %9, align 8
  %bf.lshr9 = lshr i32 %bf.load8, 16
  %bf.clear10 = and i32 %bf.lshr9, 255
  %10 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %fld11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i32 0, i64 1
  %rtuint13 = bitcast %union.rtunion_def* %arrayidx12 to i32*
  %11 = load i32, i32* %rtuint13, align 4
  %12 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load14 = load i32, i32* %13, align 8
  %bf.lshr15 = lshr i32 %bf.load14, 16
  %bf.clear16 = and i32 %bf.lshr15, 255
  %call = call i32 @subreg_regno_offset(i32 %6, i32 %bf.clear10, i32 %11, i32 %bf.clear16)
  store i32 %call, i32* %regno, align 4
  %14 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %fld17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i32 0, i64 0
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rtx19, align 8
  store %struct.rtx_def* %15, %struct.rtx_def** %dst.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %16 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load20 = load i32, i32* %17, align 8
  %bf.clear21 = and i32 %bf.load20, 65535
  %cmp22 = icmp eq i32 %bf.clear21, 66
  br i1 %cmp22, label %if.then.23, label %if.end.50

if.then.23:                                       ; preds = %if.end
  %18 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %fld24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i32 0, i64 0
  %rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rtx26, align 8
  store %struct.rtx_def* %19, %struct.rtx_def** %dst.addr, align 8
  %20 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load27 = load i32, i32* %21, align 8
  %bf.clear28 = and i32 %bf.load27, 65535
  %cmp29 = icmp eq i32 %bf.clear28, 97
  br i1 %cmp29, label %if.then.41, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.23
  %22 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %23 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load30 = load i32, i32* %23, align 8
  %bf.clear31 = and i32 %bf.load30, 65535
  %cmp32 = icmp eq i32 %bf.clear31, 99
  br i1 %cmp32, label %if.then.41, label %lor.lhs.false.33

lor.lhs.false.33:                                 ; preds = %lor.lhs.false
  %24 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load34 = load i32, i32* %25, align 8
  %bf.clear35 = and i32 %bf.load34, 65535
  %cmp36 = icmp eq i32 %bf.clear35, 96
  br i1 %cmp36, label %if.then.41, label %lor.lhs.false.37

lor.lhs.false.37:                                 ; preds = %lor.lhs.false.33
  %26 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %27 = bitcast %struct.rtx_def* %26 to i32*
  %bf.load38 = load i32, i32* %27, align 8
  %bf.clear39 = and i32 %bf.load38, 65535
  %cmp40 = icmp eq i32 %bf.clear39, 98
  br i1 %cmp40, label %if.then.41, label %if.end.49

if.then.41:                                       ; preds = %lor.lhs.false.37, %lor.lhs.false.33, %lor.lhs.false, %if.then.23
  %28 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %fld42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i32 0, i64 0
  %rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rtx44, align 8
  %fld45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i32 0, i64 0
  %rtuint47 = bitcast %union.rtunion_def* %arrayidx46 to i32*
  %30 = load i32, i32* %rtuint47, align 4
  %idxprom = zext i32 %30 to i64
  %arrayidx48 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_set_luid, i32 0, i64 %idxprom
  store i32 0, i32* %arrayidx48, align 4
  br label %if.end.49

if.end.49:                                        ; preds = %if.then.41, %lor.lhs.false.37
  br label %if.end.455

if.end.50:                                        ; preds = %if.end
  %31 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load51 = load i32, i32* %32, align 8
  %bf.clear52 = and i32 %bf.load51, 65535
  %cmp53 = icmp ne i32 %bf.clear52, 61
  br i1 %cmp53, label %if.then.54, label %if.end.55

if.then.54:                                       ; preds = %if.end.50
  br label %if.end.455

if.end.55:                                        ; preds = %if.end.50
  %33 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %fld56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i32 0, i64 0
  %rtuint58 = bitcast %union.rtunion_def* %arrayidx57 to i32*
  %34 = load i32, i32* %rtuint58, align 4
  %35 = load i32, i32* %regno, align 4
  %add = add i32 %35, %34
  store i32 %add, i32* %regno, align 4
  %36 = load i32, i32* %regno, align 4
  %cmp59 = icmp uge i32 %36, 8
  br i1 %cmp59, label %land.lhs.true, label %lor.lhs.false.61

land.lhs.true:                                    ; preds = %if.end.55
  %37 = load i32, i32* %regno, align 4
  %cmp60 = icmp ule i32 %37, 15
  br i1 %cmp60, label %cond.true, label %lor.lhs.false.61

lor.lhs.false.61:                                 ; preds = %land.lhs.true, %if.end.55
  %38 = load i32, i32* %regno, align 4
  %cmp62 = icmp uge i32 %38, 21
  br i1 %cmp62, label %land.lhs.true.63, label %lor.lhs.false.65

land.lhs.true.63:                                 ; preds = %lor.lhs.false.61
  %39 = load i32, i32* %regno, align 4
  %cmp64 = icmp ule i32 %39, 28
  br i1 %cmp64, label %cond.true, label %lor.lhs.false.65

lor.lhs.false.65:                                 ; preds = %land.lhs.true.63, %lor.lhs.false.61
  %40 = load i32, i32* %regno, align 4
  %cmp66 = icmp uge i32 %40, 45
  br i1 %cmp66, label %land.lhs.true.67, label %lor.lhs.false.69

land.lhs.true.67:                                 ; preds = %lor.lhs.false.65
  %41 = load i32, i32* %regno, align 4
  %cmp68 = icmp ule i32 %41, 52
  br i1 %cmp68, label %cond.true, label %lor.lhs.false.69

lor.lhs.false.69:                                 ; preds = %land.lhs.true.67, %lor.lhs.false.65
  %42 = load i32, i32* %regno, align 4
  %cmp70 = icmp uge i32 %42, 29
  br i1 %cmp70, label %land.lhs.true.71, label %cond.false

land.lhs.true.71:                                 ; preds = %lor.lhs.false.69
  %43 = load i32, i32* %regno, align 4
  %cmp72 = icmp ule i32 %43, 36
  br i1 %cmp72, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.71, %land.lhs.true.67, %land.lhs.true.63, %land.lhs.true
  %44 = load i32, i32* %mode, align 4
  %idxprom73 = sext i32 %44 to i64
  %arrayidx74 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom73
  %45 = load i32, i32* %arrayidx74, align 4
  %cmp75 = icmp eq i32 %45, 5
  br i1 %cmp75, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %46 = load i32, i32* %mode, align 4
  %idxprom76 = sext i32 %46 to i64
  %arrayidx77 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom76
  %47 = load i32, i32* %arrayidx77, align 4
  %cmp78 = icmp eq i32 %47, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %48 = phi i1 [ true, %cond.true ], [ %cmp78, %lor.rhs ]
  %cond = select i1 %48, i32 2, i32 1
  br label %cond.end.101

cond.false:                                       ; preds = %land.lhs.true.71, %lor.lhs.false.69
  %49 = load i32, i32* %mode, align 4
  %cmp79 = icmp eq i32 %49, 18
  br i1 %cmp79, label %cond.true.80, label %cond.false.82

cond.true.80:                                     ; preds = %cond.false
  %50 = load i32, i32* @target_flags, align 4
  %and = and i32 %50, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond81 = select i1 %tobool, i32 2, i32 3
  br label %cond.end.99

cond.false.82:                                    ; preds = %cond.false
  %51 = load i32, i32* %mode, align 4
  %cmp83 = icmp eq i32 %51, 24
  br i1 %cmp83, label %cond.true.84, label %cond.false.88

cond.true.84:                                     ; preds = %cond.false.82
  %52 = load i32, i32* @target_flags, align 4
  %and85 = and i32 %52, 33554432
  %tobool86 = icmp ne i32 %and85, 0
  %cond87 = select i1 %tobool86, i32 4, i32 6
  br label %cond.end

cond.false.88:                                    ; preds = %cond.false.82
  %53 = load i32, i32* %mode, align 4
  %idxprom89 = sext i32 %53 to i64
  %arrayidx90 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom89
  %54 = load i8, i8* %arrayidx90, align 1
  %conv = zext i8 %54 to i32
  %55 = load i32, i32* @target_flags, align 4
  %and91 = and i32 %55, 33554432
  %tobool92 = icmp ne i32 %and91, 0
  %cond93 = select i1 %tobool92, i32 8, i32 4
  %add94 = add nsw i32 %conv, %cond93
  %sub = sub nsw i32 %add94, 1
  %56 = load i32, i32* @target_flags, align 4
  %and95 = and i32 %56, 33554432
  %tobool96 = icmp ne i32 %and95, 0
  %cond97 = select i1 %tobool96, i32 8, i32 4
  %div = sdiv i32 %sub, %cond97
  br label %cond.end

cond.end:                                         ; preds = %cond.false.88, %cond.true.84
  %cond98 = phi i32 [ %cond87, %cond.true.84 ], [ %div, %cond.false.88 ]
  br label %cond.end.99

cond.end.99:                                      ; preds = %cond.end, %cond.true.80
  %cond100 = phi i32 [ %cond81, %cond.true.80 ], [ %cond98, %cond.end ]
  br label %cond.end.101

cond.end.101:                                     ; preds = %cond.end.99, %lor.end
  %cond102 = phi i32 [ %cond, %lor.end ], [ %cond100, %cond.end.99 ]
  %cmp103 = icmp eq i32 %cond102, 1
  br i1 %cmp103, label %land.lhs.true.105, label %if.else.381

land.lhs.true.105:                                ; preds = %cond.end.101
  %57 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %58 = bitcast %struct.rtx_def* %57 to i32*
  %bf.load106 = load i32, i32* %58, align 8
  %bf.clear107 = and i32 %bf.load106, 65535
  %cmp108 = icmp eq i32 %bf.clear107, 47
  br i1 %cmp108, label %land.lhs.true.110, label %if.else.381

land.lhs.true.110:                                ; preds = %land.lhs.true.105
  %59 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1
  %arrayidx112 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld111, i32 0, i64 0
  %rtx113 = bitcast %union.rtunion_def* %arrayidx112 to %struct.rtx_def**
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rtx113, align 8
  %61 = bitcast %struct.rtx_def* %60 to i32*
  %bf.load114 = load i32, i32* %61, align 8
  %bf.clear115 = and i32 %bf.load114, 65535
  %cmp116 = icmp ne i32 %bf.clear115, 133
  br i1 %cmp116, label %land.lhs.true.118, label %if.else.381

land.lhs.true.118:                                ; preds = %land.lhs.true.110
  %62 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1
  %arrayidx120 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld119, i32 0, i64 0
  %rtx121 = bitcast %union.rtunion_def* %arrayidx120 to %struct.rtx_def**
  %63 = load %struct.rtx_def*, %struct.rtx_def** %rtx121, align 8
  %64 = bitcast %struct.rtx_def* %63 to i32*
  %bf.load122 = load i32, i32* %64, align 8
  %bf.clear123 = and i32 %bf.load122, 65535
  %cmp124 = icmp ne i32 %bf.clear123, 132
  br i1 %cmp124, label %land.lhs.true.126, label %if.else.381

land.lhs.true.126:                                ; preds = %land.lhs.true.118
  %65 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1
  %arrayidx128 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld127, i32 0, i64 0
  %rtx129 = bitcast %union.rtunion_def* %arrayidx128 to %struct.rtx_def**
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rtx129, align 8
  %67 = bitcast %struct.rtx_def* %66 to i32*
  %bf.load130 = load i32, i32* %67, align 8
  %bf.clear131 = and i32 %bf.load130, 65535
  %cmp132 = icmp ne i32 %bf.clear131, 64
  br i1 %cmp132, label %if.then.134, label %if.else.381

if.then.134:                                      ; preds = %land.lhs.true.126
  %68 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1
  %arrayidx136 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld135, i32 0, i64 1
  %rtx137 = bitcast %union.rtunion_def* %arrayidx136 to %struct.rtx_def**
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rtx137, align 8
  store %struct.rtx_def* %69, %struct.rtx_def** %src, align 8
  %70 = load %struct.rtx_def*, %struct.rtx_def** %dst.addr, align 8
  %71 = bitcast %struct.rtx_def* %70 to i32*
  %bf.load138 = load i32, i32* %71, align 8
  %bf.lshr139 = lshr i32 %bf.load138, 16
  %bf.clear140 = and i32 %bf.lshr139, 255
  store i32 %bf.clear140, i32* %dst_mode, align 4
  %72 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %73 = bitcast %struct.rtx_def* %72 to i32*
  %bf.load141 = load i32, i32* %73, align 8
  %bf.clear142 = and i32 %bf.load141, 65535
  switch i32 %bf.clear142, label %sw.default [
    i32 75, label %sw.bb
    i32 61, label %sw.bb.305
    i32 54, label %sw.bb.306
  ]

sw.bb:                                            ; preds = %if.then.134
  %74 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1
  %arrayidx144 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld143, i32 0, i64 0
  %rtx145 = bitcast %union.rtunion_def* %arrayidx144 to %struct.rtx_def**
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rtx145, align 8
  %76 = bitcast %struct.rtx_def* %75 to i32*
  %bf.load146 = load i32, i32* %76, align 8
  %bf.clear147 = and i32 %bf.load146, 65535
  %cmp148 = icmp eq i32 %bf.clear147, 61
  br i1 %cmp148, label %if.then.150, label %if.end.304

if.then.150:                                      ; preds = %sw.bb
  %77 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld151 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1
  %arrayidx152 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld151, i32 0, i64 0
  %rtx153 = bitcast %union.rtunion_def* %arrayidx152 to %struct.rtx_def**
  %78 = load %struct.rtx_def*, %struct.rtx_def** %rtx153, align 8
  store %struct.rtx_def* %78, %struct.rtx_def** %base_reg, align 8
  %79 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1
  %arrayidx155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld154, i32 0, i64 1
  %rtx156 = bitcast %union.rtunion_def* %arrayidx155 to %struct.rtx_def**
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rtx156, align 8
  %81 = bitcast %struct.rtx_def* %80 to i32*
  %bf.load157 = load i32, i32* %81, align 8
  %bf.clear158 = and i32 %bf.load157, 65535
  %cmp159 = icmp eq i32 %bf.clear158, 54
  br i1 %cmp159, label %if.then.161, label %if.else

if.then.161:                                      ; preds = %if.then.150
  %82 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld162 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1
  %arrayidx163 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld162, i32 0, i64 1
  %rtx164 = bitcast %union.rtunion_def* %arrayidx163 to %struct.rtx_def**
  %83 = load %struct.rtx_def*, %struct.rtx_def** %rtx164, align 8
  %fld165 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx166 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld165, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx166 to i64*
  %84 = load i64, i64* %rtwint, align 8
  store i64 %84, i64* %offset, align 8
  br label %if.end.303

if.else:                                          ; preds = %if.then.150
  %85 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld167 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1
  %arrayidx168 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld167, i32 0, i64 1
  %rtx169 = bitcast %union.rtunion_def* %arrayidx168 to %struct.rtx_def**
  %86 = load %struct.rtx_def*, %struct.rtx_def** %rtx169, align 8
  %87 = bitcast %struct.rtx_def* %86 to i32*
  %bf.load170 = load i32, i32* %87, align 8
  %bf.clear171 = and i32 %bf.load170, 65535
  %cmp172 = icmp eq i32 %bf.clear171, 61
  br i1 %cmp172, label %land.lhs.true.174, label %if.else.301

land.lhs.true.174:                                ; preds = %if.else
  %88 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld175 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1
  %arrayidx176 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld175, i32 0, i64 1
  %rtx177 = bitcast %union.rtunion_def* %arrayidx176 to %struct.rtx_def**
  %89 = load %struct.rtx_def*, %struct.rtx_def** %rtx177, align 8
  %fld178 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1
  %arrayidx179 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld178, i32 0, i64 0
  %rtuint180 = bitcast %union.rtunion_def* %arrayidx179 to i32*
  %90 = load i32, i32* %rtuint180, align 4
  %idxprom181 = zext i32 %90 to i64
  %arrayidx182 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_set_luid, i32 0, i64 %idxprom181
  %91 = load i32, i32* %arrayidx182, align 4
  %92 = load i32, i32* @move2add_last_label_luid, align 4
  %cmp183 = icmp sgt i32 %91, %92
  br i1 %cmp183, label %land.lhs.true.185, label %if.else.301

land.lhs.true.185:                                ; preds = %land.lhs.true.174
  %93 = load i32, i32* %dst_mode, align 4
  %idxprom186 = sext i32 %93 to i64
  %arrayidx187 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom186
  %94 = load i8, i8* %arrayidx187, align 1
  %conv188 = zext i8 %94 to i32
  %95 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld189 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1
  %arrayidx190 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld189, i32 0, i64 1
  %rtx191 = bitcast %union.rtunion_def* %arrayidx190 to %struct.rtx_def**
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rtx191, align 8
  %fld192 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1
  %arrayidx193 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld192, i32 0, i64 0
  %rtuint194 = bitcast %union.rtunion_def* %arrayidx193 to i32*
  %97 = load i32, i32* %rtuint194, align 4
  %idxprom195 = zext i32 %97 to i64
  %arrayidx196 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_mode, i32 0, i64 %idxprom195
  %98 = load i32, i32* %arrayidx196, align 4
  %idxprom197 = sext i32 %98 to i64
  %arrayidx198 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom197
  %99 = load i8, i8* %arrayidx198, align 1
  %conv199 = zext i8 %99 to i32
  %cmp200 = icmp eq i32 %conv188, %conv199
  br i1 %cmp200, label %if.then.219, label %lor.lhs.false.202

lor.lhs.false.202:                                ; preds = %land.lhs.true.185
  %100 = load i32, i32* %dst_mode, align 4
  %idxprom203 = sext i32 %100 to i64
  %arrayidx204 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom203
  %101 = load i8, i8* %arrayidx204, align 1
  %conv205 = zext i8 %101 to i32
  %102 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld206 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1
  %arrayidx207 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld206, i32 0, i64 1
  %rtx208 = bitcast %union.rtunion_def* %arrayidx207 to %struct.rtx_def**
  %103 = load %struct.rtx_def*, %struct.rtx_def** %rtx208, align 8
  %fld209 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1
  %arrayidx210 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld209, i32 0, i64 0
  %rtuint211 = bitcast %union.rtunion_def* %arrayidx210 to i32*
  %104 = load i32, i32* %rtuint211, align 4
  %idxprom212 = zext i32 %104 to i64
  %arrayidx213 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_mode, i32 0, i64 %idxprom212
  %105 = load i32, i32* %arrayidx213, align 4
  %idxprom214 = sext i32 %105 to i64
  %arrayidx215 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom214
  %106 = load i8, i8* %arrayidx215, align 1
  %conv216 = zext i8 %106 to i32
  %cmp217 = icmp sle i32 %conv205, %conv216
  br i1 %cmp217, label %if.then.219, label %if.else.301

if.then.219:                                      ; preds = %lor.lhs.false.202, %land.lhs.true.185
  %107 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld220 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1
  %arrayidx221 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld220, i32 0, i64 1
  %rtx222 = bitcast %union.rtunion_def* %arrayidx221 to %struct.rtx_def**
  %108 = load %struct.rtx_def*, %struct.rtx_def** %rtx222, align 8
  %fld223 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1
  %arrayidx224 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld223, i32 0, i64 0
  %rtuint225 = bitcast %union.rtunion_def* %arrayidx224 to i32*
  %109 = load i32, i32* %rtuint225, align 4
  %idxprom226 = zext i32 %109 to i64
  %arrayidx227 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_base_reg, i32 0, i64 %idxprom226
  %110 = load i32, i32* %arrayidx227, align 4
  %cmp228 = icmp slt i32 %110, 0
  br i1 %cmp228, label %if.then.230, label %if.else.239

if.then.230:                                      ; preds = %if.then.219
  %111 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld231 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i32 0, i32 1
  %arrayidx232 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld231, i32 0, i64 1
  %rtx233 = bitcast %union.rtunion_def* %arrayidx232 to %struct.rtx_def**
  %112 = load %struct.rtx_def*, %struct.rtx_def** %rtx233, align 8
  %fld234 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1
  %arrayidx235 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld234, i32 0, i64 0
  %rtuint236 = bitcast %union.rtunion_def* %arrayidx235 to i32*
  %113 = load i32, i32* %rtuint236, align 4
  %idxprom237 = zext i32 %113 to i64
  %arrayidx238 = getelementptr inbounds [53 x i64], [53 x i64]* @reg_offset, i32 0, i64 %idxprom237
  %114 = load i64, i64* %arrayidx238, align 8
  store i64 %114, i64* %offset, align 8
  br label %if.end.300

if.else.239:                                      ; preds = %if.then.219
  %115 = load %struct.rtx_def*, %struct.rtx_def** %base_reg, align 8
  %fld240 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1
  %arrayidx241 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld240, i32 0, i64 0
  %rtuint242 = bitcast %union.rtunion_def* %arrayidx241 to i32*
  %116 = load i32, i32* %rtuint242, align 4
  %idxprom243 = zext i32 %116 to i64
  %arrayidx244 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_set_luid, i32 0, i64 %idxprom243
  %117 = load i32, i32* %arrayidx244, align 4
  %118 = load i32, i32* @move2add_last_label_luid, align 4
  %cmp245 = icmp sgt i32 %117, %118
  br i1 %cmp245, label %land.lhs.true.247, label %if.else.298

land.lhs.true.247:                                ; preds = %if.else.239
  %119 = load i32, i32* %dst_mode, align 4
  %idxprom248 = sext i32 %119 to i64
  %arrayidx249 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom248
  %120 = load i8, i8* %arrayidx249, align 1
  %conv250 = zext i8 %120 to i32
  %121 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld251 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %121, i32 0, i32 1
  %arrayidx252 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld251, i32 0, i64 1
  %rtx253 = bitcast %union.rtunion_def* %arrayidx252 to %struct.rtx_def**
  %122 = load %struct.rtx_def*, %struct.rtx_def** %rtx253, align 8
  %fld254 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i32 0, i32 1
  %arrayidx255 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld254, i32 0, i64 0
  %rtuint256 = bitcast %union.rtunion_def* %arrayidx255 to i32*
  %123 = load i32, i32* %rtuint256, align 4
  %idxprom257 = zext i32 %123 to i64
  %arrayidx258 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_mode, i32 0, i64 %idxprom257
  %124 = load i32, i32* %arrayidx258, align 4
  %idxprom259 = sext i32 %124 to i64
  %arrayidx260 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom259
  %125 = load i8, i8* %arrayidx260, align 1
  %conv261 = zext i8 %125 to i32
  %cmp262 = icmp eq i32 %conv250, %conv261
  br i1 %cmp262, label %land.lhs.true.281, label %lor.lhs.false.264

lor.lhs.false.264:                                ; preds = %land.lhs.true.247
  %126 = load i32, i32* %dst_mode, align 4
  %idxprom265 = sext i32 %126 to i64
  %arrayidx266 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom265
  %127 = load i8, i8* %arrayidx266, align 1
  %conv267 = zext i8 %127 to i32
  %128 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld268 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1
  %arrayidx269 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld268, i32 0, i64 1
  %rtx270 = bitcast %union.rtunion_def* %arrayidx269 to %struct.rtx_def**
  %129 = load %struct.rtx_def*, %struct.rtx_def** %rtx270, align 8
  %fld271 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %129, i32 0, i32 1
  %arrayidx272 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld271, i32 0, i64 0
  %rtuint273 = bitcast %union.rtunion_def* %arrayidx272 to i32*
  %130 = load i32, i32* %rtuint273, align 4
  %idxprom274 = zext i32 %130 to i64
  %arrayidx275 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_mode, i32 0, i64 %idxprom274
  %131 = load i32, i32* %arrayidx275, align 4
  %idxprom276 = sext i32 %131 to i64
  %arrayidx277 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom276
  %132 = load i8, i8* %arrayidx277, align 1
  %conv278 = zext i8 %132 to i32
  %cmp279 = icmp sle i32 %conv267, %conv278
  br i1 %cmp279, label %land.lhs.true.281, label %if.else.298

land.lhs.true.281:                                ; preds = %lor.lhs.false.264, %land.lhs.true.247
  %133 = load %struct.rtx_def*, %struct.rtx_def** %base_reg, align 8
  %fld282 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %133, i32 0, i32 1
  %arrayidx283 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld282, i32 0, i64 0
  %rtuint284 = bitcast %union.rtunion_def* %arrayidx283 to i32*
  %134 = load i32, i32* %rtuint284, align 4
  %idxprom285 = zext i32 %134 to i64
  %arrayidx286 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_base_reg, i32 0, i64 %idxprom285
  %135 = load i32, i32* %arrayidx286, align 4
  %cmp287 = icmp slt i32 %135, 0
  br i1 %cmp287, label %if.then.289, label %if.else.298

if.then.289:                                      ; preds = %land.lhs.true.281
  %136 = load %struct.rtx_def*, %struct.rtx_def** %base_reg, align 8
  %fld290 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1
  %arrayidx291 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld290, i32 0, i64 0
  %rtuint292 = bitcast %union.rtunion_def* %arrayidx291 to i32*
  %137 = load i32, i32* %rtuint292, align 4
  %idxprom293 = zext i32 %137 to i64
  %arrayidx294 = getelementptr inbounds [53 x i64], [53 x i64]* @reg_offset, i32 0, i64 %idxprom293
  %138 = load i64, i64* %arrayidx294, align 8
  store i64 %138, i64* %offset, align 8
  %139 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld295 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1
  %arrayidx296 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld295, i32 0, i64 1
  %rtx297 = bitcast %union.rtunion_def* %arrayidx296 to %struct.rtx_def**
  %140 = load %struct.rtx_def*, %struct.rtx_def** %rtx297, align 8
  store %struct.rtx_def* %140, %struct.rtx_def** %base_reg, align 8
  br label %if.end.299

if.else.298:                                      ; preds = %land.lhs.true.281, %lor.lhs.false.264, %if.else.239
  br label %invalidate

if.end.299:                                       ; preds = %if.then.289
  br label %if.end.300

if.end.300:                                       ; preds = %if.end.299, %if.then.230
  br label %if.end.302

if.else.301:                                      ; preds = %lor.lhs.false.202, %land.lhs.true.174, %if.else
  br label %invalidate

if.end.302:                                       ; preds = %if.end.300
  br label %if.end.303

if.end.303:                                       ; preds = %if.end.302, %if.then.161
  br label %sw.epilog

if.end.304:                                       ; preds = %sw.bb
  br label %invalidate

sw.bb.305:                                        ; preds = %if.then.134
  %141 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  store %struct.rtx_def* %141, %struct.rtx_def** %base_reg, align 8
  store i64 0, i64* %offset, align 8
  br label %sw.epilog

sw.bb.306:                                        ; preds = %if.then.134
  %142 = load i32, i32* %regno, align 4
  %idxprom307 = zext i32 %142 to i64
  %arrayidx308 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_base_reg, i32 0, i64 %idxprom307
  store i32 -1, i32* %arrayidx308, align 4
  %143 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld309 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1
  %arrayidx310 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld309, i32 0, i64 1
  %rtx311 = bitcast %union.rtunion_def* %arrayidx310 to %struct.rtx_def**
  %144 = load %struct.rtx_def*, %struct.rtx_def** %rtx311, align 8
  %fld312 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1
  %arrayidx313 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld312, i32 0, i64 0
  %rtwint314 = bitcast %union.rtunion_def* %arrayidx313 to i64*
  %145 = load i64, i64* %rtwint314, align 8
  %146 = load i32, i32* %regno, align 4
  %idxprom315 = zext i32 %146 to i64
  %arrayidx316 = getelementptr inbounds [53 x i64], [53 x i64]* @reg_offset, i32 0, i64 %idxprom315
  store i64 %145, i64* %arrayidx316, align 8
  %147 = load i32, i32* @move2add_last_label_luid, align 4
  %add317 = add nsw i32 %147, 1
  %148 = load i32, i32* %regno, align 4
  %idxprom318 = zext i32 %148 to i64
  %arrayidx319 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_set_luid, i32 0, i64 %idxprom318
  store i32 %add317, i32* %arrayidx319, align 4
  %149 = load i32, i32* %mode, align 4
  %150 = load i32, i32* %regno, align 4
  %idxprom320 = zext i32 %150 to i64
  %arrayidx321 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_mode, i32 0, i64 %idxprom320
  store i32 %149, i32* %arrayidx321, align 4
  br label %if.end.455

sw.default:                                       ; preds = %if.then.134
  br label %invalidate

invalidate:                                       ; preds = %if.then.362, %sw.default, %if.end.304, %if.else.301, %if.else.298
  %151 = load i32, i32* %regno, align 4
  %idxprom322 = zext i32 %151 to i64
  %arrayidx323 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_set_luid, i32 0, i64 %idxprom322
  store i32 0, i32* %arrayidx323, align 4
  br label %if.end.455

sw.epilog:                                        ; preds = %sw.bb.305, %if.end.303
  %152 = load %struct.rtx_def*, %struct.rtx_def** %base_reg, align 8
  %fld324 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %152, i32 0, i32 1
  %arrayidx325 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld324, i32 0, i64 0
  %rtuint326 = bitcast %union.rtunion_def* %arrayidx325 to i32*
  %153 = load i32, i32* %rtuint326, align 4
  store i32 %153, i32* %base_regno, align 4
  %154 = load i32, i32* %base_regno, align 4
  %idxprom327 = sext i32 %154 to i64
  %arrayidx328 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_set_luid, i32 0, i64 %idxprom327
  %155 = load i32, i32* %arrayidx328, align 4
  %156 = load i32, i32* @move2add_last_label_luid, align 4
  %cmp329 = icmp sle i32 %155, %156
  br i1 %cmp329, label %if.then.331, label %if.else.340

if.then.331:                                      ; preds = %sw.epilog
  %157 = load i32, i32* %base_regno, align 4
  %158 = load i32, i32* %base_regno, align 4
  %idxprom332 = sext i32 %158 to i64
  %arrayidx333 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_base_reg, i32 0, i64 %idxprom332
  store i32 %157, i32* %arrayidx333, align 4
  %159 = load i32, i32* %base_regno, align 4
  %idxprom334 = sext i32 %159 to i64
  %arrayidx335 = getelementptr inbounds [53 x i64], [53 x i64]* @reg_offset, i32 0, i64 %idxprom334
  store i64 0, i64* %arrayidx335, align 8
  %160 = load i32, i32* @move2add_luid, align 4
  %161 = load i32, i32* %base_regno, align 4
  %idxprom336 = sext i32 %161 to i64
  %arrayidx337 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_set_luid, i32 0, i64 %idxprom336
  store i32 %160, i32* %arrayidx337, align 4
  %162 = load i32, i32* %mode, align 4
  %163 = load i32, i32* %base_regno, align 4
  %idxprom338 = sext i32 %163 to i64
  %arrayidx339 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_mode, i32 0, i64 %idxprom338
  store i32 %162, i32* %arrayidx339, align 4
  br label %if.end.364

if.else.340:                                      ; preds = %sw.epilog
  %164 = load i32, i32* %dst_mode, align 4
  %idxprom341 = sext i32 %164 to i64
  %arrayidx342 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom341
  %165 = load i8, i8* %arrayidx342, align 1
  %conv343 = zext i8 %165 to i32
  %166 = load i32, i32* %base_regno, align 4
  %idxprom344 = sext i32 %166 to i64
  %arrayidx345 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_mode, i32 0, i64 %idxprom344
  %167 = load i32, i32* %arrayidx345, align 4
  %idxprom346 = sext i32 %167 to i64
  %arrayidx347 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom346
  %168 = load i8, i8* %arrayidx347, align 1
  %conv348 = zext i8 %168 to i32
  %cmp349 = icmp eq i32 %conv343, %conv348
  br i1 %cmp349, label %if.end.363, label %lor.lhs.false.351

lor.lhs.false.351:                                ; preds = %if.else.340
  %169 = load i32, i32* %dst_mode, align 4
  %idxprom352 = sext i32 %169 to i64
  %arrayidx353 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom352
  %170 = load i8, i8* %arrayidx353, align 1
  %conv354 = zext i8 %170 to i32
  %171 = load i32, i32* %base_regno, align 4
  %idxprom355 = sext i32 %171 to i64
  %arrayidx356 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_mode, i32 0, i64 %idxprom355
  %172 = load i32, i32* %arrayidx356, align 4
  %idxprom357 = sext i32 %172 to i64
  %arrayidx358 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom357
  %173 = load i8, i8* %arrayidx358, align 1
  %conv359 = zext i8 %173 to i32
  %cmp360 = icmp sle i32 %conv354, %conv359
  br i1 %cmp360, label %if.end.363, label %if.then.362

if.then.362:                                      ; preds = %lor.lhs.false.351
  br label %invalidate

if.end.363:                                       ; preds = %lor.lhs.false.351, %if.else.340
  br label %if.end.364

if.end.364:                                       ; preds = %if.end.363, %if.then.331
  %174 = load i32, i32* %mode, align 4
  %175 = load i32, i32* %regno, align 4
  %idxprom365 = zext i32 %175 to i64
  %arrayidx366 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_mode, i32 0, i64 %idxprom365
  store i32 %174, i32* %arrayidx366, align 4
  %176 = load i32, i32* %base_regno, align 4
  %idxprom367 = sext i32 %176 to i64
  %arrayidx368 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_set_luid, i32 0, i64 %idxprom367
  %177 = load i32, i32* %arrayidx368, align 4
  %178 = load i32, i32* %regno, align 4
  %idxprom369 = zext i32 %178 to i64
  %arrayidx370 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_set_luid, i32 0, i64 %idxprom369
  store i32 %177, i32* %arrayidx370, align 4
  %179 = load i32, i32* %base_regno, align 4
  %idxprom371 = sext i32 %179 to i64
  %arrayidx372 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_base_reg, i32 0, i64 %idxprom371
  %180 = load i32, i32* %arrayidx372, align 4
  %181 = load i32, i32* %regno, align 4
  %idxprom373 = zext i32 %181 to i64
  %arrayidx374 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_base_reg, i32 0, i64 %idxprom373
  store i32 %180, i32* %arrayidx374, align 4
  %182 = load i32, i32* %dst_mode, align 4
  %183 = load i64, i64* %offset, align 8
  %184 = load i32, i32* %base_regno, align 4
  %idxprom375 = sext i32 %184 to i64
  %arrayidx376 = getelementptr inbounds [53 x i64], [53 x i64]* @reg_offset, i32 0, i64 %idxprom375
  %185 = load i64, i64* %arrayidx376, align 8
  %add377 = add nsw i64 %183, %185
  %call378 = call i64 @sext_for_mode(i32 %182, i64 %add377)
  %186 = load i32, i32* %regno, align 4
  %idxprom379 = zext i32 %186 to i64
  %arrayidx380 = getelementptr inbounds [53 x i64], [53 x i64]* @reg_offset, i32 0, i64 %idxprom379
  store i64 %call378, i64* %arrayidx380, align 8
  br label %if.end.455

if.else.381:                                      ; preds = %land.lhs.true.126, %land.lhs.true.118, %land.lhs.true.110, %land.lhs.true.105, %cond.end.101
  %187 = load i32, i32* %regno, align 4
  %188 = load i32, i32* %regno, align 4
  %cmp382 = icmp uge i32 %188, 8
  br i1 %cmp382, label %land.lhs.true.384, label %lor.lhs.false.387

land.lhs.true.384:                                ; preds = %if.else.381
  %189 = load i32, i32* %regno, align 4
  %cmp385 = icmp ule i32 %189, 15
  br i1 %cmp385, label %cond.true.405, label %lor.lhs.false.387

lor.lhs.false.387:                                ; preds = %land.lhs.true.384, %if.else.381
  %190 = load i32, i32* %regno, align 4
  %cmp388 = icmp uge i32 %190, 21
  br i1 %cmp388, label %land.lhs.true.390, label %lor.lhs.false.393

land.lhs.true.390:                                ; preds = %lor.lhs.false.387
  %191 = load i32, i32* %regno, align 4
  %cmp391 = icmp ule i32 %191, 28
  br i1 %cmp391, label %cond.true.405, label %lor.lhs.false.393

lor.lhs.false.393:                                ; preds = %land.lhs.true.390, %lor.lhs.false.387
  %192 = load i32, i32* %regno, align 4
  %cmp394 = icmp uge i32 %192, 45
  br i1 %cmp394, label %land.lhs.true.396, label %lor.lhs.false.399

land.lhs.true.396:                                ; preds = %lor.lhs.false.393
  %193 = load i32, i32* %regno, align 4
  %cmp397 = icmp ule i32 %193, 52
  br i1 %cmp397, label %cond.true.405, label %lor.lhs.false.399

lor.lhs.false.399:                                ; preds = %land.lhs.true.396, %lor.lhs.false.393
  %194 = load i32, i32* %regno, align 4
  %cmp400 = icmp uge i32 %194, 29
  br i1 %cmp400, label %land.lhs.true.402, label %cond.false.417

land.lhs.true.402:                                ; preds = %lor.lhs.false.399
  %195 = load i32, i32* %regno, align 4
  %cmp403 = icmp ule i32 %195, 36
  br i1 %cmp403, label %cond.true.405, label %cond.false.417

cond.true.405:                                    ; preds = %land.lhs.true.402, %land.lhs.true.396, %land.lhs.true.390, %land.lhs.true.384
  %196 = load i32, i32* %mode, align 4
  %idxprom406 = sext i32 %196 to i64
  %arrayidx407 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom406
  %197 = load i32, i32* %arrayidx407, align 4
  %cmp408 = icmp eq i32 %197, 5
  br i1 %cmp408, label %lor.end.415, label %lor.rhs.410

lor.rhs.410:                                      ; preds = %cond.true.405
  %198 = load i32, i32* %mode, align 4
  %idxprom411 = sext i32 %198 to i64
  %arrayidx412 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom411
  %199 = load i32, i32* %arrayidx412, align 4
  %cmp413 = icmp eq i32 %199, 6
  br label %lor.end.415

lor.end.415:                                      ; preds = %lor.rhs.410, %cond.true.405
  %200 = phi i1 [ true, %cond.true.405 ], [ %cmp413, %lor.rhs.410 ]
  %cond416 = select i1 %200, i32 2, i32 1
  br label %cond.end.448

cond.false.417:                                   ; preds = %land.lhs.true.402, %lor.lhs.false.399
  %201 = load i32, i32* %mode, align 4
  %cmp418 = icmp eq i32 %201, 18
  br i1 %cmp418, label %cond.true.420, label %cond.false.424

cond.true.420:                                    ; preds = %cond.false.417
  %202 = load i32, i32* @target_flags, align 4
  %and421 = and i32 %202, 33554432
  %tobool422 = icmp ne i32 %and421, 0
  %cond423 = select i1 %tobool422, i32 2, i32 3
  br label %cond.end.446

cond.false.424:                                   ; preds = %cond.false.417
  %203 = load i32, i32* %mode, align 4
  %cmp425 = icmp eq i32 %203, 24
  br i1 %cmp425, label %cond.true.427, label %cond.false.431

cond.true.427:                                    ; preds = %cond.false.424
  %204 = load i32, i32* @target_flags, align 4
  %and428 = and i32 %204, 33554432
  %tobool429 = icmp ne i32 %and428, 0
  %cond430 = select i1 %tobool429, i32 4, i32 6
  br label %cond.end.444

cond.false.431:                                   ; preds = %cond.false.424
  %205 = load i32, i32* %mode, align 4
  %idxprom432 = sext i32 %205 to i64
  %arrayidx433 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom432
  %206 = load i8, i8* %arrayidx433, align 1
  %conv434 = zext i8 %206 to i32
  %207 = load i32, i32* @target_flags, align 4
  %and435 = and i32 %207, 33554432
  %tobool436 = icmp ne i32 %and435, 0
  %cond437 = select i1 %tobool436, i32 8, i32 4
  %add438 = add nsw i32 %conv434, %cond437
  %sub439 = sub nsw i32 %add438, 1
  %208 = load i32, i32* @target_flags, align 4
  %and440 = and i32 %208, 33554432
  %tobool441 = icmp ne i32 %and440, 0
  %cond442 = select i1 %tobool441, i32 8, i32 4
  %div443 = sdiv i32 %sub439, %cond442
  br label %cond.end.444

cond.end.444:                                     ; preds = %cond.false.431, %cond.true.427
  %cond445 = phi i32 [ %cond430, %cond.true.427 ], [ %div443, %cond.false.431 ]
  br label %cond.end.446

cond.end.446:                                     ; preds = %cond.end.444, %cond.true.420
  %cond447 = phi i32 [ %cond423, %cond.true.420 ], [ %cond445, %cond.end.444 ]
  br label %cond.end.448

cond.end.448:                                     ; preds = %cond.end.446, %lor.end.415
  %cond449 = phi i32 [ %cond416, %lor.end.415 ], [ %cond447, %cond.end.446 ]
  %add450 = add i32 %187, %cond449
  store i32 %add450, i32* %endregno, align 4
  %209 = load i32, i32* %regno, align 4
  store i32 %209, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.448
  %210 = load i32, i32* %i, align 4
  %211 = load i32, i32* %endregno, align 4
  %cmp451 = icmp ult i32 %210, %211
  br i1 %cmp451, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %212 = load i32, i32* %i, align 4
  %idxprom453 = zext i32 %212 to i64
  %arrayidx454 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_set_luid, i32 0, i64 %idxprom453
  store i32 0, i32* %arrayidx454, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %213 = load i32, i32* %i, align 4
  %inc = add i32 %213, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.455

if.end.455:                                       ; preds = %if.end.49, %if.then.54, %sw.bb.306, %invalidate, %for.end, %if.end.364
  ret void
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
