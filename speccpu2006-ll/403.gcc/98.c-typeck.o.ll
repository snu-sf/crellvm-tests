; ModuleID = 'c-typeck.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%union.anon.1 = type { %struct.function* }
%struct.function = type opaque
%struct.lang_decl = type { %struct.c_lang_decl, %union.tree_node* }
%struct.c_lang_decl = type { i8, [3 x i8] }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i1 (%union.tree_node*)*, i1 (%union.tree_node*)*, void ()*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, i32 (%union.tree_node*, i8*, i32)*, i8, i8, i1 ()* }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i1 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void (i8*, i32)*, void ()*, void ()*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, %struct.rtx_def* (i32, %struct.rtx_def*)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.constructor_stack = type { %struct.constructor_stack*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.init_node*, i32, i32, %union.tree_node*, %struct.constructor_range_stack*, i8, i8, i8, i8, i8, i8, i8 }
%struct.init_node = type { %struct.init_node*, %struct.init_node*, %struct.init_node*, i32, %union.tree_node*, %union.tree_node* }
%struct.constructor_range_stack = type { %struct.constructor_range_stack*, %struct.constructor_range_stack*, %struct.constructor_stack*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.spelling = type { i32, %union.anon.4 }
%union.anon.4 = type { i8* }
%struct.initializer_stack = type { %struct.initializer_stack*, %union.tree_node*, i8*, %struct.constructor_stack*, %struct.constructor_range_stack*, %union.tree_node*, %struct.spelling*, %struct.spelling*, i32, i8, i8, i8, i8 }
%struct.c_switch = type { %union.tree_node*, %struct.splay_tree_s*, %struct.c_switch* }
%struct.splay_tree_s = type { %struct.splay_tree_node_s*, i32 (i64, i64)*, void (i64)*, void (i64)*, i8* (i32, i8*)*, void (i8*, i8*)*, i8* }
%struct.splay_tree_node_s = type { i64, i64, %struct.splay_tree_node_s*, %struct.splay_tree_node_s* }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.anon.2, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_type* }
%union.anon.2 = type { i8* }
%struct.lang_type = type { i32, [1 x %union.tree_node*] }
%struct.tree_identifier = type { %struct.tree_common, %struct.ht_identifier }
%struct.ht_identifier = type { i32, i8* }
%struct.tree_list = type { %struct.tree_common, %union.tree_node*, %union.tree_node* }
%struct.tree_exp = type { %struct.tree_common, i32, [1 x %union.tree_node*] }
%struct.lang_identifier = type { %struct.c_common_identifier, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.c_common_identifier = type { %struct.tree_common, %struct.cpp_hashnode }
%struct.cpp_hashnode = type { %struct.ht_identifier, i16, i8, i8, i8, i8, %union.anon.3 }
%union.anon.3 = type { %struct.cpp_macro* }
%struct.cpp_macro = type opaque
%struct.tree_complex = type { %struct.tree_common, %struct.rtx_def*, %union.tree_node*, %union.tree_node* }
%struct.tree_string = type { %struct.tree_common, %struct.rtx_def*, i32, i8* }
%struct.stmt_tree_s = type { %union.tree_node*, %union.tree_node*, i8*, i32 }

@global_trees = external global [51 x %union.tree_node*], align 16
@.str = private unnamed_addr constant [28 x i8] c"`%s' has an incomplete type\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"struct\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"union\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"enum\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"invalid use of void expression\00", align 1
@.str.5 = private unnamed_addr constant [37 x i8] c"invalid use of flexible array member\00", align 1
@.str.6 = private unnamed_addr constant [45 x i8] c"invalid use of array with unspecified bounds\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"c-typeck.c\00", align 1
@__FUNCTION__.incomplete_type_error = private unnamed_addr constant [22 x i8] c"incomplete_type_error\00", align 1
@.str.8 = private unnamed_addr constant [38 x i8] c"invalid use of undefined type `%s %s'\00", align 1
@.str.9 = private unnamed_addr constant [39 x i8] c"invalid use of incomplete typedef `%s'\00", align 1
@targetm = external global %struct.gcc_target, align 8
@integer_types = external global [11 x %union.tree_node*], align 16
@pedantic = external global i32, align 4
@.str.10 = private unnamed_addr constant [45 x i8] c"function types not truly compatible in ISO C\00", align 1
@warn_pointer_arith = external global i32, align 4
@.str.11 = private unnamed_addr constant [34 x i8] c"sizeof applied to a function type\00", align 1
@.str.12 = private unnamed_addr constant [30 x i8] c"sizeof applied to a void type\00", align 1
@.str.13 = private unnamed_addr constant [37 x i8] c"sizeof applied to an incomplete type\00", align 1
@c_global_trees = external global [32 x %union.tree_node*], align 16
@.str.14 = private unnamed_addr constant [44 x i8] c"arithmetic on pointer to an incomplete type\00", align 1
@current_function_decl = external global %union.tree_node*, align 8
@optimize = external global i32, align 4
@tree_code_type = external global [256 x i8], align 16
@flag_traditional = external global i32, align 4
@flag_allow_single_precision = external global i32, align 4
@.str.15 = private unnamed_addr constant [41 x i8] c"void value not ignored as it ought to be\00", align 1
@.str.16 = private unnamed_addr constant [28 x i8] c"%s has no member named `%s'\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"structure\00", align 1
@.str.18 = private unnamed_addr constant [62 x i8] c"request for member `%s' in something not a structure or union\00", align 1
@flag_volatile = external global i32, align 4
@.str.19 = private unnamed_addr constant [41 x i8] c"dereferencing pointer to incomplete type\00", align 1
@skip_evaluation = external global i32, align 4
@.str.20 = private unnamed_addr constant [31 x i8] c"dereferencing `void *' pointer\00", align 1
@.str.21 = private unnamed_addr constant [30 x i8] c"invalid type argument of `%s'\00", align 1
@.str.22 = private unnamed_addr constant [37 x i8] c"subscript missing in array reference\00", align 1
@warn_char_subscripts = external global i32, align 4
@.str.23 = private unnamed_addr constant [32 x i8] c"array subscript has type `char'\00", align 1
@.str.24 = private unnamed_addr constant [34 x i8] c"array subscript is not an integer\00", align 1
@.str.25 = private unnamed_addr constant [44 x i8] c"ISO C forbids subscripting `register' array\00", align 1
@flag_isoc99 = external global i32, align 4
@.str.26 = private unnamed_addr constant [46 x i8] c"ISO C89 forbids subscripting non-lvalue array\00", align 1
@.str.27 = private unnamed_addr constant [26 x i8] c"subscript has type `char'\00", align 1
@.str.28 = private unnamed_addr constant [47 x i8] c"subscripted value is neither array nor pointer\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"array indexing\00", align 1
@.str.30 = private unnamed_addr constant [41 x i8] c"`%s' undeclared here (not in a function)\00", align 1
@.str.31 = private unnamed_addr constant [45 x i8] c"`%s' undeclared (first use in this function)\00", align 1
@undeclared_variable_notice = internal global i32 0, align 4
@.str.32 = private unnamed_addr constant [50 x i8] c"(Each undeclared identifier is reported only once\00", align 1
@.str.33 = private unnamed_addr constant [34 x i8] c"for each function it appears in.)\00", align 1
@.str.34 = private unnamed_addr constant [50 x i8] c"local declaration of `%s' hides instance variable\00", align 1
@lang_set_decl_assembler_name = external global void (%union.tree_node*)*, align 8
@.str.35 = private unnamed_addr constant [32 x i8] c"called object is not a function\00", align 1
@current_function_returns_abnormally = external global i32, align 4
@warn_format = external global i32, align 4
@warn_parentheses = external global i32, align 4
@.str.36 = private unnamed_addr constant [47 x i8] c"suggest parentheses around + or - inside shift\00", align 1
@.str.37 = private unnamed_addr constant [40 x i8] c"suggest parentheses around && within ||\00", align 1
@.str.38 = private unnamed_addr constant [54 x i8] c"suggest parentheses around arithmetic in operand of |\00", align 1
@.str.39 = private unnamed_addr constant [54 x i8] c"suggest parentheses around comparison in operand of |\00", align 1
@.str.40 = private unnamed_addr constant [54 x i8] c"suggest parentheses around arithmetic in operand of ^\00", align 1
@.str.41 = private unnamed_addr constant [54 x i8] c"suggest parentheses around comparison in operand of ^\00", align 1
@.str.42 = private unnamed_addr constant [50 x i8] c"suggest parentheses around + or - in operand of &\00", align 1
@.str.43 = private unnamed_addr constant [54 x i8] c"suggest parentheses around comparison in operand of &\00", align 1
@extra_warnings = external global i32, align 4
@.str.44 = private unnamed_addr constant [64 x i8] c"comparisons like X<=Y<=Z do not have their mathematical meaning\00", align 1
@warn_div_by_zero = external global i32, align 4
@.str.45 = private unnamed_addr constant [17 x i8] c"division by zero\00", align 1
@.str.46 = private unnamed_addr constant [30 x i8] c"right shift count is negative\00", align 1
@.str.47 = private unnamed_addr constant [35 x i8] c"right shift count >= width of type\00", align 1
@.str.48 = private unnamed_addr constant [29 x i8] c"left shift count is negative\00", align 1
@.str.49 = private unnamed_addr constant [34 x i8] c"left shift count >= width of type\00", align 1
@.str.50 = private unnamed_addr constant [24 x i8] c"shift count is negative\00", align 1
@.str.51 = private unnamed_addr constant [29 x i8] c"shift count >= width of type\00", align 1
@warn_float_equal = external global i32, align 4
@.str.52 = private unnamed_addr constant [49 x i8] c"comparing floating point with == or != is unsafe\00", align 1
@.str.53 = private unnamed_addr constant [59 x i8] c"ISO C forbids comparison of `void *' with function pointer\00", align 1
@.str.54 = private unnamed_addr constant [50 x i8] c"comparison of distinct pointer types lacks a cast\00", align 1
@.str.55 = private unnamed_addr constant [39 x i8] c"comparison between pointer and integer\00", align 1
@.str.56 = private unnamed_addr constant [59 x i8] c"ISO C forbids ordered comparisons of pointers to functions\00", align 1
@.str.57 = private unnamed_addr constant [47 x i8] c"comparison of complete and incomplete pointers\00", align 1
@.str.58 = private unnamed_addr constant [48 x i8] c"ordered comparison of pointer with integer zero\00", align 1
@.str.59 = private unnamed_addr constant [52 x i8] c"unordered comparison on non-floating point argument\00", align 1
@warn_sign_compare = external global i32, align 4
@.str.60 = private unnamed_addr constant [39 x i8] c"comparison between signed and unsigned\00", align 1
@.str.61 = private unnamed_addr constant [47 x i8] c"comparison of promoted ~unsigned with constant\00", align 1
@.str.62 = private unnamed_addr constant [47 x i8] c"comparison of promoted ~unsigned with unsigned\00", align 1
@.str.63 = private unnamed_addr constant [34 x i8] c"wrong type argument to unary plus\00", align 1
@.str.64 = private unnamed_addr constant [35 x i8] c"wrong type argument to unary minus\00", align 1
@.str.65 = private unnamed_addr constant [51 x i8] c"ISO C does not support `~' for complex conjugation\00", align 1
@.str.66 = private unnamed_addr constant [38 x i8] c"wrong type argument to bit-complement\00", align 1
@.str.67 = private unnamed_addr constant [27 x i8] c"wrong type argument to abs\00", align 1
@.str.68 = private unnamed_addr constant [35 x i8] c"wrong type argument to conjugation\00", align 1
@.str.69 = private unnamed_addr constant [46 x i8] c"wrong type argument to unary exclamation mark\00", align 1
@.str.70 = private unnamed_addr constant [54 x i8] c"ISO C does not support `++' and `--' on complex types\00", align 1
@.str.71 = private unnamed_addr constant [33 x i8] c"wrong type argument to increment\00", align 1
@.str.72 = private unnamed_addr constant [33 x i8] c"wrong type argument to decrement\00", align 1
@.str.73 = private unnamed_addr constant [42 x i8] c"increment of pointer to unknown structure\00", align 1
@.str.74 = private unnamed_addr constant [42 x i8] c"decrement of pointer to unknown structure\00", align 1
@.str.75 = private unnamed_addr constant [28 x i8] c"invalid lvalue in increment\00", align 1
@.str.76 = private unnamed_addr constant [28 x i8] c"invalid lvalue in decrement\00", align 1
@.str.77 = private unnamed_addr constant [10 x i8] c"increment\00", align 1
@.str.78 = private unnamed_addr constant [10 x i8] c"decrement\00", align 1
@.str.79 = private unnamed_addr constant [28 x i8] c"invalid lvalue in unary `&'\00", align 1
@.str.80 = private unnamed_addr constant [59 x i8] c"attempt to take address of bit-field structure member `%s'\00", align 1
@.str.81 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.82 = private unnamed_addr constant [28 x i8] c"%s of read-only member `%s'\00", align 1
@.str.83 = private unnamed_addr constant [30 x i8] c"%s of read-only variable `%s'\00", align 1
@.str.84 = private unnamed_addr constant [25 x i8] c"%s of read-only location\00", align 1
@.str.85 = private unnamed_addr constant [38 x i8] c"cannot take address of bit-field `%s'\00", align 1
@.str.86 = private unnamed_addr constant [54 x i8] c"global register variable `%s' used in nested function\00", align 1
@.str.87 = private unnamed_addr constant [47 x i8] c"register variable `%s' used in nested function\00", align 1
@.str.88 = private unnamed_addr constant [51 x i8] c"address of global register variable `%s' requested\00", align 1
@.str.89 = private unnamed_addr constant [52 x i8] c"cannot put object with volatile field into register\00", align 1
@.str.90 = private unnamed_addr constant [44 x i8] c"address of register variable `%s' requested\00", align 1
@.str.91 = private unnamed_addr constant [51 x i8] c"signed and unsigned type in conditional expression\00", align 1
@.str.92 = private unnamed_addr constant [55 x i8] c"ISO C forbids conditional expr with only one void side\00", align 1
@.str.93 = private unnamed_addr constant [69 x i8] c"ISO C forbids conditional expr between `void *' and function pointer\00", align 1
@.str.94 = private unnamed_addr constant [48 x i8] c"pointer type mismatch in conditional expression\00", align 1
@.str.95 = private unnamed_addr constant [56 x i8] c"pointer/integer type mismatch in conditional expression\00", align 1
@flag_cond_mismatch = external global i32, align 4
@.str.96 = private unnamed_addr constant [40 x i8] c"type mismatch in conditional expression\00", align 1
@.str.97 = private unnamed_addr constant [26 x i8] c"cast specifies array type\00", align 1
@.str.98 = private unnamed_addr constant [29 x i8] c"cast specifies function type\00", align 1
@.str.99 = private unnamed_addr constant [49 x i8] c"ISO C forbids casting nonscalar to the same type\00", align 1
@.str.100 = private unnamed_addr constant [34 x i8] c"ISO C forbids casts to union type\00", align 1
@.str.101 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.102 = private unnamed_addr constant [50 x i8] c"cast to union type from type not present in union\00", align 1
@warn_cast_qual = external global i32, align 4
@.str.103 = private unnamed_addr constant [42 x i8] c"cast adds new qualifiers to function type\00", align 1
@.str.104 = private unnamed_addr constant [50 x i8] c"cast discards qualifiers from pointer target type\00", align 1
@.str.105 = private unnamed_addr constant [47 x i8] c"cast from pointer to integer of different size\00", align 1
@warn_bad_function_cast = external global i32, align 4
@.str.106 = private unnamed_addr constant [34 x i8] c"cast does not match function type\00", align 1
@.str.107 = private unnamed_addr constant [47 x i8] c"cast to pointer from integer of different size\00", align 1
@warn_strict_prototypes = external global i32, align 4
@.str.108 = private unnamed_addr constant [29 x i8] c"invalid lvalue in assignment\00", align 1
@.str.109 = private unnamed_addr constant [11 x i8] c"assignment\00", align 1
@target_flags = external global i32, align 4
@warn_traditional = external global i32, align 4
@in_system_header = external global i32, align 4
@.str.110 = private unnamed_addr constant [57 x i8] c"traditional C rejects automatic aggregate initialization\00", align 1
@.str.111 = private unnamed_addr constant [31 x i8] c"(near initialization for `%s')\00", align 1
@constructor_no_implicit = global i32 0, align 4
@constructor_decl = internal global %union.tree_node* null, align 8
@constructor_asmspec = internal global i8* null, align 8
@require_constant_value = internal global i32 0, align 4
@require_constant_elements = internal global i32 0, align 4
@constructor_stack = common global %struct.constructor_stack* null, align 8
@constructor_range_stack = common global %struct.constructor_range_stack* null, align 8
@constructor_elements = internal global %union.tree_node* null, align 8
@spelling = internal global %struct.spelling* null, align 8
@spelling_base = internal global %struct.spelling* null, align 8
@spelling_size = internal global i32 0, align 4
@constructor_subconstants_deferred = internal global i32 0, align 4
@constructor_top_level = internal global i32 0, align 4
@initializer_stack = common global %struct.initializer_stack* null, align 8
@constructor_designated = internal global i32 0, align 4
@.str.112 = private unnamed_addr constant [12 x i8] c"(anonymous)\00", align 1
@missing_braces_mentioned = internal global i32 0, align 4
@__FUNCTION__.finish_init = private unnamed_addr constant [12 x i8] c"finish_init\00", align 1
@constructor_type = internal global %union.tree_node* null, align 8
@constructor_fields = internal global %union.tree_node* null, align 8
@constructor_index = internal global %union.tree_node* null, align 8
@constructor_max_index = internal global %union.tree_node* null, align 8
@constructor_unfilled_index = internal global %union.tree_node* null, align 8
@constructor_unfilled_fields = internal global %union.tree_node* null, align 8
@constructor_bit_index = internal global %union.tree_node* null, align 8
@constructor_constant = internal global i32 0, align 4
@constructor_simple = internal global i32 0, align 4
@constructor_erroneous = internal global i32 0, align 4
@constructor_pending_elts = internal global %struct.init_node* null, align 8
@constructor_depth = internal global i32 0, align 4
@constructor_incremental = internal global i32 0, align 4
@designator_depth = internal global i32 0, align 4
@designator_errorneous = internal global i32 0, align 4
@sizetype_tab = external global [6 x %union.tree_node*], align 16
@mode_unit_size = external constant [59 x i8], align 16
@mode_size = external constant [59 x i8], align 16
@.str.113 = private unnamed_addr constant [40 x i8] c"extra brace group at end of initializer\00", align 1
@warn_missing_braces = external global i32, align 4
@.str.114 = private unnamed_addr constant [34 x i8] c"missing braces around initializer\00", align 1
@.str.115 = private unnamed_addr constant [33 x i8] c"braces around scalar initializer\00", align 1
@__FUNCTION__.pop_init_level = private unnamed_addr constant [15 x i8] c"pop_init_level\00", align 1
@.str.116 = private unnamed_addr constant [60 x i8] c"initialization of flexible array member in a nested context\00", align 1
@.str.117 = private unnamed_addr constant [42 x i8] c"initialization of a flexible array member\00", align 1
@.str.118 = private unnamed_addr constant [20 x i8] c"missing initializer\00", align 1
@.str.119 = private unnamed_addr constant [25 x i8] c"empty scalar initializer\00", align 1
@.str.120 = private unnamed_addr constant [37 x i8] c"extra elements in scalar initializer\00", align 1
@.str.121 = private unnamed_addr constant [39 x i8] c"nonconstant array index in initializer\00", align 1
@.str.122 = private unnamed_addr constant [37 x i8] c"array index in non-array initializer\00", align 1
@.str.123 = private unnamed_addr constant [48 x i8] c"array index in initializer exceeds array bounds\00", align 1
@.str.124 = private unnamed_addr constant [33 x i8] c"empty index range in initializer\00", align 1
@.str.125 = private unnamed_addr constant [54 x i8] c"array index range in initializer exceeds array bounds\00", align 1
@.str.126 = private unnamed_addr constant [46 x i8] c"field name not in record or union initializer\00", align 1
@.str.127 = private unnamed_addr constant [44 x i8] c"unknown field `%s' specified in initializer\00", align 1
@.str.128 = private unnamed_addr constant [42 x i8] c"excess elements in char array initializer\00", align 1
@.str.129 = private unnamed_addr constant [38 x i8] c"excess elements in struct initializer\00", align 1
@.str.130 = private unnamed_addr constant [53 x i8] c"non-static initialization of a flexible array member\00", align 1
@.str.131 = private unnamed_addr constant [37 x i8] c"excess elements in union initializer\00", align 1
@.str.132 = private unnamed_addr constant [47 x i8] c"traditional C rejects initialization of unions\00", align 1
@.str.133 = private unnamed_addr constant [37 x i8] c"excess elements in array initializer\00", align 1
@.str.134 = private unnamed_addr constant [38 x i8] c"excess elements in vector initializer\00", align 1
@.str.135 = private unnamed_addr constant [38 x i8] c"excess elements in scalar initializer\00", align 1
@__FUNCTION__.process_init_element = private unnamed_addr constant [21 x i8] c"process_init_element\00", align 1
@.str.136 = private unnamed_addr constant [43 x i8] c"argument of `asm' is not a constant string\00", align 1
@.str.137 = private unnamed_addr constant [38 x i8] c"asm template is not a string constant\00", align 1
@ridpointers = external global %union.tree_node**, align 8
@.str.138 = private unnamed_addr constant [28 x i8] c"%s qualifier ignored on asm\00", align 1
@.str.139 = private unnamed_addr constant [32 x i8] c"invalid lvalue in asm statement\00", align 1
@.str.140 = private unnamed_addr constant [22 x i8] c"modification by `asm'\00", align 1
@.str.141 = private unnamed_addr constant [54 x i8] c"function declared `noreturn' has a `return' statement\00", align 1
@current_function_returns_null = external global i32, align 4
@warn_return_type = external global i32, align 4
@.str.142 = private unnamed_addr constant [55 x i8] c"`return' with no value, in function returning non-void\00", align 1
@.str.143 = private unnamed_addr constant [50 x i8] c"`return' with a value, in function returning void\00", align 1
@.str.144 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@current_function_returns_value = external global i32, align 4
@.str.145 = private unnamed_addr constant [43 x i8] c"function returns address of local variable\00", align 1
@.str.146 = private unnamed_addr constant [31 x i8] c"switch quantity not an integer\00", align 1
@.str.147 = private unnamed_addr constant [57 x i8] c"`long' switch expression not converted to `int' in ISO C\00", align 1
@switch_stack = internal global %struct.c_switch* null, align 8
@.str.148 = private unnamed_addr constant [41 x i8] c"case label not within a switch statement\00", align 1
@.str.149 = private unnamed_addr constant [46 x i8] c"`default' label not within a switch statement\00", align 1
@.str.150 = private unnamed_addr constant [36 x i8] c"too many arguments to function `%s'\00", align 1
@.str.151 = private unnamed_addr constant [31 x i8] c"too many arguments to function\00", align 1
@.str.152 = private unnamed_addr constant [42 x i8] c"type of formal parameter %d is incomplete\00", align 1
@warn_conversion = external global i32, align 4
@.str.153 = private unnamed_addr constant [52 x i8] c"%s as integer rather than floating due to prototype\00", align 1
@.str.154 = private unnamed_addr constant [51 x i8] c"%s as integer rather than complex due to prototype\00", align 1
@.str.155 = private unnamed_addr constant [52 x i8] c"%s as complex rather than floating due to prototype\00", align 1
@.str.156 = private unnamed_addr constant [52 x i8] c"%s as floating rather than integer due to prototype\00", align 1
@.str.157 = private unnamed_addr constant [51 x i8] c"%s as complex rather than integer due to prototype\00", align 1
@.str.158 = private unnamed_addr constant [52 x i8] c"%s as floating rather than complex due to prototype\00", align 1
@.str.159 = private unnamed_addr constant [52 x i8] c"%s as `float' rather than `double' due to prototype\00", align 1
@.str.160 = private unnamed_addr constant [41 x i8] c"%s with different width due to prototype\00", align 1
@.str.161 = private unnamed_addr constant [32 x i8] c"%s as unsigned due to prototype\00", align 1
@.str.162 = private unnamed_addr constant [30 x i8] c"%s as signed due to prototype\00", align 1
@.str.163 = private unnamed_addr constant [35 x i8] c"too few arguments to function `%s'\00", align 1
@.str.164 = private unnamed_addr constant [30 x i8] c"too few arguments to function\00", align 1
@.str.165 = private unnamed_addr constant [31 x i8] c"types are not quite compatible\00", align 1
@.str.166 = private unnamed_addr constant [45 x i8] c"pointer of type `void *' used in subtraction\00", align 1
@.str.167 = private unnamed_addr constant [42 x i8] c"pointer to a function used in subtraction\00", align 1
@.str.168 = private unnamed_addr constant [56 x i8] c"ISO C forbids use of conditional expressions as lvalues\00", align 1
@.str.169 = private unnamed_addr constant [53 x i8] c"ISO C forbids use of compound expressions as lvalues\00", align 1
@.str.170 = private unnamed_addr constant [49 x i8] c"ISO C forbids use of cast expressions as lvalues\00", align 1
@warn_unused_value = external global i32, align 4
@.str.171 = private unnamed_addr constant [52 x i8] c"left-hand operand of comma expression has no effect\00", align 1
@.str.172 = private unnamed_addr constant [53 x i8] c"%s makes qualified function pointer from unqualified\00", align 1
@.str.173 = private unnamed_addr constant [48 x i8] c"%s discards qualifiers from pointer target type\00", align 1
@.str.174 = private unnamed_addr constant [50 x i8] c"ISO C prohibits argument conversion to union type\00", align 1
@.str.175 = private unnamed_addr constant [55 x i8] c"ISO C forbids %s between function pointer and `void *'\00", align 1
@.str.176 = private unnamed_addr constant [43 x i8] c"pointer targets in %s differ in signedness\00", align 1
@.str.177 = private unnamed_addr constant [34 x i8] c"%s from incompatible pointer type\00", align 1
@.str.178 = private unnamed_addr constant [45 x i8] c"%s makes pointer from integer without a cast\00", align 1
@.str.179 = private unnamed_addr constant [45 x i8] c"%s makes integer from pointer without a cast\00", align 1
@.str.180 = private unnamed_addr constant [42 x i8] c"incompatible type for argument %d of `%s'\00", align 1
@.str.181 = private unnamed_addr constant [60 x i8] c"incompatible type for argument %d of indirect function call\00", align 1
@.str.182 = private unnamed_addr constant [25 x i8] c"incompatible types in %s\00", align 1
@.str.183 = private unnamed_addr constant [5 x i8] c"[%d]\00", align 1
@.str.184 = private unnamed_addr constant [40 x i8] c"char-array initialized from wide string\00", align 1
@.str.185 = private unnamed_addr constant [43 x i8] c"int-array initialized from non-wide string\00", align 1
@.str.186 = private unnamed_addr constant [50 x i8] c"initializer-string for array of chars is too long\00", align 1
@.str.187 = private unnamed_addr constant [53 x i8] c"array initialized from non-constant array expression\00", align 1
@.str.188 = private unnamed_addr constant [36 x i8] c"initializer element is not constant\00", align 1
@flag_pedantic_errors = external global i32, align 4
@.str.189 = private unnamed_addr constant [15 x i8] c"initialization\00", align 1
@.str.190 = private unnamed_addr constant [51 x i8] c"initializer element is not computable at load time\00", align 1
@.str.191 = private unnamed_addr constant [45 x i8] c"variable-sized object may not be initialized\00", align 1
@.str.192 = private unnamed_addr constant [20 x i8] c"invalid initializer\00", align 1
@.str.193 = private unnamed_addr constant [12 x i8] c"<anonymous>\00", align 1
@__FUNCTION__.set_designator = private unnamed_addr constant [15 x i8] c"set_designator\00", align 1
@.str.194 = private unnamed_addr constant [40 x i8] c"initialization designators may not nest\00", align 1
@.str.195 = private unnamed_addr constant [48 x i8] c"initialized field with side-effects overwritten\00", align 1
@__FUNCTION__.set_nonincremental_init_from_string = private unnamed_addr constant [36 x i8] c"set_nonincremental_init_from_string\00", align 1

; Function Attrs: nounwind uwtable
define %union.tree_node* @require_complete_type(%union.tree_node* %value) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %value.addr = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  store %union.tree_node* %value, %union.tree_node** %value.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %1, %union.tree_node** %type, align 8
  %2 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp = icmp eq %union.tree_node* %2, %3
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp2 = icmp eq %union.tree_node* %4, %5
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %6, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type3 = bitcast %union.tree_node* %7 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type3, i32 0, i32 2
  %8 = load %union.tree_node*, %union.tree_node** %size, align 8
  %cmp4 = icmp ne %union.tree_node* %8, null
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  %9 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  store %union.tree_node* %9, %union.tree_node** %retval
  br label %return

if.end.6:                                         ; preds = %if.end
  %10 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %11 = load %union.tree_node*, %union.tree_node** %type, align 8
  call void @incomplete_type_error(%union.tree_node* %10, %union.tree_node* %11)
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %12, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.6, %if.then.5, %if.then
  %13 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %13
}

; Function Attrs: nounwind uwtable
define void @incomplete_type_error(%union.tree_node* %value, %union.tree_node* %type) #0 {
entry:
  %value.addr = alloca %union.tree_node*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  %type_code_string = alloca i8*, align 8
  store %union.tree_node* %value, %union.tree_node** %value.addr, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end.54

if.end:                                           ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %cmp1 = icmp ne %union.tree_node* %1, null
  br i1 %cmp1, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %2 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common2 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load4 = load i32, i32* %code3, align 8
  %bf.clear5 = and i32 %bf.load4, 255
  %cmp6 = icmp eq i32 %bf.clear5, 34
  br i1 %cmp6, label %if.then.12, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %3 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common7 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 2
  %bf.load9 = load i32, i32* %code8, align 8
  %bf.clear10 = and i32 %bf.load9, 255
  %cmp11 = icmp eq i32 %bf.clear10, 35
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %lor.lhs.false, %land.lhs.true
  %4 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %decl = bitcast %union.tree_node* %4 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 8
  %5 = load %union.tree_node*, %union.tree_node** %name, align 8
  %identifier = bitcast %union.tree_node* %5 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %6 = load i8*, i8** %str, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0), i8* %6)
  br label %if.end.54

if.else:                                          ; preds = %lor.lhs.false, %if.end
  br label %retry

retry:                                            ; preds = %if.end.28, %if.else
  %7 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common13 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %code14 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common13, i32 0, i32 2
  %bf.load15 = load i32, i32* %code14, align 8
  %bf.clear16 = and i32 %bf.load15, 255
  switch i32 %bf.clear16, label %sw.default [
    i32 20, label %sw.bb
    i32 21, label %sw.bb.17
    i32 10, label %sw.bb.18
    i32 5, label %sw.bb.19
    i32 18, label %sw.bb.20
  ]

sw.bb:                                            ; preds = %retry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i8** %type_code_string, align 8
  br label %sw.epilog

sw.bb.17:                                         ; preds = %retry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i8** %type_code_string, align 8
  br label %sw.epilog

sw.bb.18:                                         ; preds = %retry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8** %type_code_string, align 8
  br label %sw.epilog

sw.bb.19:                                         ; preds = %retry
  call void (i8*, ...) @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i32 0, i32 0))
  br label %if.end.54

sw.bb.20:                                         ; preds = %retry
  %8 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type21 = bitcast %union.tree_node* %8 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type21, i32 0, i32 1
  %9 = load %union.tree_node*, %union.tree_node** %values, align 8
  %tobool = icmp ne %union.tree_node* %9, null
  br i1 %tobool, label %if.then.22, label %if.end.31

if.then.22:                                       ; preds = %sw.bb.20
  %10 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type23 = bitcast %union.tree_node* %10 to %struct.tree_type*
  %values24 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type23, i32 0, i32 1
  %11 = load %union.tree_node*, %union.tree_node** %values24, align 8
  %type25 = bitcast %union.tree_node* %11 to %struct.tree_type*
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type25, i32 0, i32 13
  %12 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %cmp26 = icmp eq %union.tree_node* %12, null
  br i1 %cmp26, label %if.then.27, label %if.end.28

if.then.27:                                       ; preds = %if.then.22
  call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5, i32 0, i32 0))
  br label %if.end.54

if.end.28:                                        ; preds = %if.then.22
  %13 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common29 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %type30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common29, i32 0, i32 1
  %14 = load %union.tree_node*, %union.tree_node** %type30, align 8
  store %union.tree_node* %14, %union.tree_node** %type.addr, align 8
  br label %retry

if.end.31:                                        ; preds = %sw.bb.20
  call void (i8*, ...) @error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.6, i32 0, i32 0))
  br label %if.end.54

sw.default:                                       ; preds = %retry
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), i32 163, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.incomplete_type_error, i32 0, i32 0)) #5
  unreachable

sw.epilog:                                        ; preds = %sw.bb.18, %sw.bb.17, %sw.bb
  %15 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type32 = bitcast %union.tree_node* %15 to %struct.tree_type*
  %name33 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type32, i32 0, i32 11
  %16 = load %union.tree_node*, %union.tree_node** %name33, align 8
  %common34 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %code35 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common34, i32 0, i32 2
  %bf.load36 = load i32, i32* %code35, align 8
  %bf.clear37 = and i32 %bf.load36, 255
  %cmp38 = icmp eq i32 %bf.clear37, 1
  br i1 %cmp38, label %if.then.39, label %if.else.45

if.then.39:                                       ; preds = %sw.epilog
  %17 = load i8*, i8** %type_code_string, align 8
  %18 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type40 = bitcast %union.tree_node* %18 to %struct.tree_type*
  %name41 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type40, i32 0, i32 11
  %19 = load %union.tree_node*, %union.tree_node** %name41, align 8
  %identifier42 = bitcast %union.tree_node* %19 to %struct.tree_identifier*
  %id43 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier42, i32 0, i32 1
  %str44 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id43, i32 0, i32 1
  %20 = load i8*, i8** %str44, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i32 0, i32 0), i8* %17, i8* %20)
  br label %if.end.53

if.else.45:                                       ; preds = %sw.epilog
  %21 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type46 = bitcast %union.tree_node* %21 to %struct.tree_type*
  %name47 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type46, i32 0, i32 11
  %22 = load %union.tree_node*, %union.tree_node** %name47, align 8
  %decl48 = bitcast %union.tree_node* %22 to %struct.tree_decl*
  %name49 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl48, i32 0, i32 8
  %23 = load %union.tree_node*, %union.tree_node** %name49, align 8
  %identifier50 = bitcast %union.tree_node* %23 to %struct.tree_identifier*
  %id51 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier50, i32 0, i32 1
  %str52 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id51, i32 0, i32 1
  %24 = load i8*, i8** %str52, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.9, i32 0, i32 0), i8* %24)
  br label %if.end.53

if.end.53:                                        ; preds = %if.else.45, %if.then.39
  br label %if.end.54

if.end.54:                                        ; preds = %if.then, %sw.bb.19, %if.then.27, %if.end.31, %if.end.53, %if.then.12
  ret void
}

declare void @error(i8*, ...) #1

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #2

; Function Attrs: nounwind uwtable
define %union.tree_node* @common_type(%union.tree_node* %t1, %union.tree_node* %t2) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %t1.addr = alloca %union.tree_node*, align 8
  %t2.addr = alloca %union.tree_node*, align 8
  %code1 = alloca i32, align 4
  %code2 = alloca i32, align 4
  %attributes = alloca %union.tree_node*, align 8
  %subtype1 = alloca %union.tree_node*, align 8
  %subtype2 = alloca %union.tree_node*, align 8
  %subtype = alloca %union.tree_node*, align 8
  %pointed_to_1 = alloca %union.tree_node*, align 8
  %pointed_to_2 = alloca %union.tree_node*, align 8
  %target = alloca %union.tree_node*, align 8
  %elt = alloca %union.tree_node*, align 8
  %valtype = alloca %union.tree_node*, align 8
  %p1 = alloca %union.tree_node*, align 8
  %p2 = alloca %union.tree_node*, align 8
  %len = alloca i32, align 4
  %newargs = alloca %union.tree_node*, align 8
  %n = alloca %union.tree_node*, align 8
  %i = alloca i32, align 4
  %memb = alloca %union.tree_node*, align 8
  %memb385 = alloca %union.tree_node*, align 8
  store %union.tree_node* %t1, %union.tree_node** %t1.addr, align 8
  store %union.tree_node* %t2, %union.tree_node** %t2.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %1 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %cmp = icmp eq %union.tree_node* %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  store %union.tree_node* %2, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp1 = icmp eq %union.tree_node* %3, %4
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  %5 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  store %union.tree_node* %5, %union.tree_node** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %6 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp4 = icmp eq %union.tree_node* %6, %7
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end.3
  %8 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  store %union.tree_node* %8, %union.tree_node** %retval
  br label %return

if.end.6:                                         ; preds = %if.end.3
  %9 = load %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 3), align 8
  %10 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %11 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %call = call %union.tree_node* %9(%union.tree_node* %10, %union.tree_node* %11)
  store %union.tree_node* %call, %union.tree_node** %attributes, align 8
  %12 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %common = bitcast %union.tree_node* %12 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp7 = icmp eq i32 %bf.clear, 10
  br i1 %cmp7, label %if.then.8, label %if.end.12

if.then.8:                                        ; preds = %if.end.6
  %13 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %type = bitcast %union.tree_node* %13 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i32 0, i32 6
  %bf.load9 = load i32, i32* %precision, align 4
  %bf.clear10 = and i32 %bf.load9, 511
  %call11 = call %union.tree_node* @type_for_size(i32 %bf.clear10, i32 1)
  store %union.tree_node* %call11, %union.tree_node** %t1.addr, align 8
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.8, %if.end.6
  %14 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %common13 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %code14 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common13, i32 0, i32 2
  %bf.load15 = load i32, i32* %code14, align 8
  %bf.clear16 = and i32 %bf.load15, 255
  %cmp17 = icmp eq i32 %bf.clear16, 10
  br i1 %cmp17, label %if.then.18, label %if.end.24

if.then.18:                                       ; preds = %if.end.12
  %15 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %type19 = bitcast %union.tree_node* %15 to %struct.tree_type*
  %precision20 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type19, i32 0, i32 6
  %bf.load21 = load i32, i32* %precision20, align 4
  %bf.clear22 = and i32 %bf.load21, 511
  %call23 = call %union.tree_node* @type_for_size(i32 %bf.clear22, i32 1)
  store %union.tree_node* %call23, %union.tree_node** %t2.addr, align 8
  br label %if.end.24

if.end.24:                                        ; preds = %if.then.18, %if.end.12
  %16 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %common25 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %code26 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common25, i32 0, i32 2
  %bf.load27 = load i32, i32* %code26, align 8
  %bf.clear28 = and i32 %bf.load27, 255
  store i32 %bf.clear28, i32* %code1, align 4
  %17 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %common29 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %code30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common29, i32 0, i32 2
  %bf.load31 = load i32, i32* %code30, align 8
  %bf.clear32 = and i32 %bf.load31, 255
  store i32 %bf.clear32, i32* %code2, align 4
  %18 = load i32, i32* %code1, align 4
  %cmp33 = icmp eq i32 %18, 8
  br i1 %cmp33, label %if.then.35, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.24
  %19 = load i32, i32* %code2, align 4
  %cmp34 = icmp eq i32 %19, 8
  br i1 %cmp34, label %if.then.35, label %if.end.63

if.then.35:                                       ; preds = %lor.lhs.false, %if.end.24
  %20 = load i32, i32* %code1, align 4
  %cmp36 = icmp eq i32 %20, 8
  br i1 %cmp36, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.35
  %21 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %common37 = bitcast %union.tree_node* %21 to %struct.tree_common*
  %type38 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common37, i32 0, i32 1
  %22 = load %union.tree_node*, %union.tree_node** %type38, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then.35
  %23 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %22, %cond.true ], [ %23, %cond.false ]
  store %union.tree_node* %cond, %union.tree_node** %subtype1, align 8
  %24 = load i32, i32* %code2, align 4
  %cmp39 = icmp eq i32 %24, 8
  br i1 %cmp39, label %cond.true.40, label %cond.false.43

cond.true.40:                                     ; preds = %cond.end
  %25 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %common41 = bitcast %union.tree_node* %25 to %struct.tree_common*
  %type42 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common41, i32 0, i32 1
  %26 = load %union.tree_node*, %union.tree_node** %type42, align 8
  br label %cond.end.44

cond.false.43:                                    ; preds = %cond.end
  %27 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  br label %cond.end.44

cond.end.44:                                      ; preds = %cond.false.43, %cond.true.40
  %cond45 = phi %union.tree_node* [ %26, %cond.true.40 ], [ %27, %cond.false.43 ]
  store %union.tree_node* %cond45, %union.tree_node** %subtype2, align 8
  %28 = load %union.tree_node*, %union.tree_node** %subtype1, align 8
  %29 = load %union.tree_node*, %union.tree_node** %subtype2, align 8
  %call46 = call %union.tree_node* @common_type(%union.tree_node* %28, %union.tree_node* %29)
  store %union.tree_node* %call46, %union.tree_node** %subtype, align 8
  %30 = load i32, i32* %code1, align 4
  %cmp47 = icmp eq i32 %30, 8
  br i1 %cmp47, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %cond.end.44
  %31 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %common48 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %type49 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common48, i32 0, i32 1
  %32 = load %union.tree_node*, %union.tree_node** %type49, align 8
  %33 = load %union.tree_node*, %union.tree_node** %subtype, align 8
  %cmp50 = icmp eq %union.tree_node* %32, %33
  br i1 %cmp50, label %if.then.51, label %if.else

if.then.51:                                       ; preds = %land.lhs.true
  %34 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %35 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %call52 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %34, %union.tree_node* %35)
  store %union.tree_node* %call52, %union.tree_node** %retval
  br label %return

if.else:                                          ; preds = %land.lhs.true, %cond.end.44
  %36 = load i32, i32* %code2, align 4
  %cmp53 = icmp eq i32 %36, 8
  br i1 %cmp53, label %land.lhs.true.54, label %if.else.60

land.lhs.true.54:                                 ; preds = %if.else
  %37 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %common55 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %type56 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common55, i32 0, i32 1
  %38 = load %union.tree_node*, %union.tree_node** %type56, align 8
  %39 = load %union.tree_node*, %union.tree_node** %subtype, align 8
  %cmp57 = icmp eq %union.tree_node* %38, %39
  br i1 %cmp57, label %if.then.58, label %if.else.60

if.then.58:                                       ; preds = %land.lhs.true.54
  %40 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %41 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %call59 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %40, %union.tree_node* %41)
  store %union.tree_node* %call59, %union.tree_node** %retval
  br label %return

if.else.60:                                       ; preds = %land.lhs.true.54, %if.else
  %42 = load %union.tree_node*, %union.tree_node** %subtype, align 8
  %call61 = call %union.tree_node* @build_complex_type(%union.tree_node* %42)
  %43 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %call62 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %call61, %union.tree_node* %43)
  store %union.tree_node* %call62, %union.tree_node** %retval
  br label %return

if.end.63:                                        ; preds = %lor.lhs.false
  %44 = load i32, i32* %code1, align 4
  switch i32 %44, label %sw.default [
    i32 6, label %sw.bb
    i32 7, label %sw.bb
    i32 13, label %sw.bb.153
    i32 18, label %sw.bb.225
    i32 23, label %sw.bb.261
  ]

sw.bb:                                            ; preds = %if.end.63, %if.end.63
  %45 = load i32, i32* %code1, align 4
  %cmp64 = icmp eq i32 %45, 7
  br i1 %cmp64, label %land.lhs.true.65, label %if.end.69

land.lhs.true.65:                                 ; preds = %sw.bb
  %46 = load i32, i32* %code2, align 4
  %cmp66 = icmp ne i32 %46, 7
  br i1 %cmp66, label %if.then.67, label %if.end.69

if.then.67:                                       ; preds = %land.lhs.true.65
  %47 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %48 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %call68 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %47, %union.tree_node* %48)
  store %union.tree_node* %call68, %union.tree_node** %retval
  br label %return

if.end.69:                                        ; preds = %land.lhs.true.65, %sw.bb
  %49 = load i32, i32* %code2, align 4
  %cmp70 = icmp eq i32 %49, 7
  br i1 %cmp70, label %land.lhs.true.71, label %if.end.75

land.lhs.true.71:                                 ; preds = %if.end.69
  %50 = load i32, i32* %code1, align 4
  %cmp72 = icmp ne i32 %50, 7
  br i1 %cmp72, label %if.then.73, label %if.end.75

if.then.73:                                       ; preds = %land.lhs.true.71
  %51 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %52 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %call74 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %51, %union.tree_node* %52)
  store %union.tree_node* %call74, %union.tree_node** %retval
  br label %return

if.end.75:                                        ; preds = %land.lhs.true.71, %if.end.69
  %53 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %type76 = bitcast %union.tree_node* %53 to %struct.tree_type*
  %precision77 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type76, i32 0, i32 6
  %bf.load78 = load i32, i32* %precision77, align 4
  %bf.clear79 = and i32 %bf.load78, 511
  %54 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %type80 = bitcast %union.tree_node* %54 to %struct.tree_type*
  %precision81 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type80, i32 0, i32 6
  %bf.load82 = load i32, i32* %precision81, align 4
  %bf.clear83 = and i32 %bf.load82, 511
  %cmp84 = icmp sgt i32 %bf.clear79, %bf.clear83
  br i1 %cmp84, label %if.then.85, label %if.else.87

if.then.85:                                       ; preds = %if.end.75
  %55 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %56 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %call86 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %55, %union.tree_node* %56)
  store %union.tree_node* %call86, %union.tree_node** %retval
  br label %return

if.else.87:                                       ; preds = %if.end.75
  %57 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %type88 = bitcast %union.tree_node* %57 to %struct.tree_type*
  %precision89 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type88, i32 0, i32 6
  %bf.load90 = load i32, i32* %precision89, align 4
  %bf.clear91 = and i32 %bf.load90, 511
  %58 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %type92 = bitcast %union.tree_node* %58 to %struct.tree_type*
  %precision93 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type92, i32 0, i32 6
  %bf.load94 = load i32, i32* %precision93, align 4
  %bf.clear95 = and i32 %bf.load94, 511
  %cmp96 = icmp sgt i32 %bf.clear91, %bf.clear95
  br i1 %cmp96, label %if.then.97, label %if.end.99

if.then.97:                                       ; preds = %if.else.87
  %59 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %60 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %call98 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %59, %union.tree_node* %60)
  store %union.tree_node* %call98, %union.tree_node** %retval
  br label %return

if.end.99:                                        ; preds = %if.else.87
  br label %if.end.100

if.end.100:                                       ; preds = %if.end.99
  %61 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %type101 = bitcast %union.tree_node* %61 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type101, i32 0, i32 15
  %62 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %63 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 8), align 8
  %cmp102 = icmp eq %union.tree_node* %62, %63
  br i1 %cmp102, label %if.then.107, label %lor.lhs.false.103

lor.lhs.false.103:                                ; preds = %if.end.100
  %64 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %type104 = bitcast %union.tree_node* %64 to %struct.tree_type*
  %main_variant105 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type104, i32 0, i32 15
  %65 = load %union.tree_node*, %union.tree_node** %main_variant105, align 8
  %66 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 8), align 8
  %cmp106 = icmp eq %union.tree_node* %65, %66
  br i1 %cmp106, label %if.then.107, label %if.end.109

if.then.107:                                      ; preds = %lor.lhs.false.103, %if.end.100
  %67 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 8), align 8
  %68 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %call108 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %67, %union.tree_node* %68)
  store %union.tree_node* %call108, %union.tree_node** %retval
  br label %return

if.end.109:                                       ; preds = %lor.lhs.false.103
  %69 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %type110 = bitcast %union.tree_node* %69 to %struct.tree_type*
  %main_variant111 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type110, i32 0, i32 15
  %70 = load %union.tree_node*, %union.tree_node** %main_variant111, align 8
  %71 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 7), align 8
  %cmp112 = icmp eq %union.tree_node* %70, %71
  br i1 %cmp112, label %if.then.117, label %lor.lhs.false.113

lor.lhs.false.113:                                ; preds = %if.end.109
  %72 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %type114 = bitcast %union.tree_node* %72 to %struct.tree_type*
  %main_variant115 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type114, i32 0, i32 15
  %73 = load %union.tree_node*, %union.tree_node** %main_variant115, align 8
  %74 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 7), align 8
  %cmp116 = icmp eq %union.tree_node* %73, %74
  br i1 %cmp116, label %if.then.117, label %if.end.132

if.then.117:                                      ; preds = %lor.lhs.false.113, %if.end.109
  %75 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %common118 = bitcast %union.tree_node* %75 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common118, i32 0, i32 2
  %bf.load119 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr = lshr i32 %bf.load119, 13
  %bf.clear120 = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear120, 0
  br i1 %tobool, label %if.then.128, label %lor.lhs.false.121

lor.lhs.false.121:                                ; preds = %if.then.117
  %76 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %common122 = bitcast %union.tree_node* %76 to %struct.tree_common*
  %unsigned_flag123 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common122, i32 0, i32 2
  %bf.load124 = load i32, i32* %unsigned_flag123, align 8
  %bf.lshr125 = lshr i32 %bf.load124, 13
  %bf.clear126 = and i32 %bf.lshr125, 1
  %tobool127 = icmp ne i32 %bf.clear126, 0
  br i1 %tobool127, label %if.then.128, label %if.else.129

if.then.128:                                      ; preds = %lor.lhs.false.121, %if.then.117
  %77 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 8), align 8
  store %union.tree_node* %77, %union.tree_node** %t1.addr, align 8
  br label %if.end.130

if.else.129:                                      ; preds = %lor.lhs.false.121
  %78 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 7), align 8
  store %union.tree_node* %78, %union.tree_node** %t1.addr, align 8
  br label %if.end.130

if.end.130:                                       ; preds = %if.else.129, %if.then.128
  %79 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %80 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %call131 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %79, %union.tree_node* %80)
  store %union.tree_node* %call131, %union.tree_node** %retval
  br label %return

if.end.132:                                       ; preds = %lor.lhs.false.113
  %81 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %type133 = bitcast %union.tree_node* %81 to %struct.tree_type*
  %main_variant134 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type133, i32 0, i32 15
  %82 = load %union.tree_node*, %union.tree_node** %main_variant134, align 8
  %83 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 26), align 8
  %cmp135 = icmp eq %union.tree_node* %82, %83
  br i1 %cmp135, label %if.then.140, label %lor.lhs.false.136

lor.lhs.false.136:                                ; preds = %if.end.132
  %84 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %type137 = bitcast %union.tree_node* %84 to %struct.tree_type*
  %main_variant138 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type137, i32 0, i32 15
  %85 = load %union.tree_node*, %union.tree_node** %main_variant138, align 8
  %86 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 26), align 8
  %cmp139 = icmp eq %union.tree_node* %85, %86
  br i1 %cmp139, label %if.then.140, label %if.end.142

if.then.140:                                      ; preds = %lor.lhs.false.136, %if.end.132
  %87 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 26), align 8
  %88 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %call141 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %87, %union.tree_node* %88)
  store %union.tree_node* %call141, %union.tree_node** %retval
  br label %return

if.end.142:                                       ; preds = %lor.lhs.false.136
  %89 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %common143 = bitcast %union.tree_node* %89 to %struct.tree_common*
  %unsigned_flag144 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common143, i32 0, i32 2
  %bf.load145 = load i32, i32* %unsigned_flag144, align 8
  %bf.lshr146 = lshr i32 %bf.load145, 13
  %bf.clear147 = and i32 %bf.lshr146, 1
  %tobool148 = icmp ne i32 %bf.clear147, 0
  br i1 %tobool148, label %if.then.149, label %if.else.151

if.then.149:                                      ; preds = %if.end.142
  %90 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %91 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %call150 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %90, %union.tree_node* %91)
  store %union.tree_node* %call150, %union.tree_node** %retval
  br label %return

if.else.151:                                      ; preds = %if.end.142
  %92 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %93 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %call152 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %92, %union.tree_node* %93)
  store %union.tree_node* %call152, %union.tree_node** %retval
  br label %return

sw.bb.153:                                        ; preds = %if.end.63
  %94 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %common154 = bitcast %union.tree_node* %94 to %struct.tree_common*
  %type155 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common154, i32 0, i32 1
  %95 = load %union.tree_node*, %union.tree_node** %type155, align 8
  store %union.tree_node* %95, %union.tree_node** %pointed_to_1, align 8
  %96 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %common156 = bitcast %union.tree_node* %96 to %struct.tree_common*
  %type157 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common156, i32 0, i32 1
  %97 = load %union.tree_node*, %union.tree_node** %type157, align 8
  store %union.tree_node* %97, %union.tree_node** %pointed_to_2, align 8
  %98 = load %union.tree_node*, %union.tree_node** %pointed_to_1, align 8
  %type158 = bitcast %union.tree_node* %98 to %struct.tree_type*
  %main_variant159 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type158, i32 0, i32 15
  %99 = load %union.tree_node*, %union.tree_node** %main_variant159, align 8
  %100 = load %union.tree_node*, %union.tree_node** %pointed_to_2, align 8
  %type160 = bitcast %union.tree_node* %100 to %struct.tree_type*
  %main_variant161 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type160, i32 0, i32 15
  %101 = load %union.tree_node*, %union.tree_node** %main_variant161, align 8
  %call162 = call %union.tree_node* @common_type(%union.tree_node* %99, %union.tree_node* %101)
  store %union.tree_node* %call162, %union.tree_node** %target, align 8
  %102 = load %union.tree_node*, %union.tree_node** %target, align 8
  %103 = load %union.tree_node*, %union.tree_node** %pointed_to_1, align 8
  %common163 = bitcast %union.tree_node* %103 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common163, i32 0, i32 2
  %bf.load164 = load i32, i32* %readonly_flag, align 8
  %bf.lshr165 = lshr i32 %bf.load164, 12
  %bf.clear166 = and i32 %bf.lshr165, 1
  %mul = mul nsw i32 %bf.clear166, 1
  %104 = load %union.tree_node*, %union.tree_node** %pointed_to_1, align 8
  %common167 = bitcast %union.tree_node* %104 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common167, i32 0, i32 2
  %bf.load168 = load i32, i32* %volatile_flag, align 8
  %bf.lshr169 = lshr i32 %bf.load168, 11
  %bf.clear170 = and i32 %bf.lshr169, 1
  %mul171 = mul nsw i32 %bf.clear170, 2
  %or = or i32 %mul, %mul171
  %105 = load %union.tree_node*, %union.tree_node** %pointed_to_1, align 8
  %type172 = bitcast %union.tree_node* %105 to %struct.tree_type*
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type172, i32 0, i32 6
  %bf.load173 = load i32, i32* %restrict_flag, align 4
  %bf.lshr174 = lshr i32 %bf.load173, 21
  %bf.clear175 = and i32 %bf.lshr174, 1
  %mul176 = mul nsw i32 %bf.clear175, 4
  %or177 = or i32 %or, %mul176
  %106 = load %union.tree_node*, %union.tree_node** %pointed_to_1, align 8
  %common178 = bitcast %union.tree_node* %106 to %struct.tree_common*
  %code179 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common178, i32 0, i32 2
  %bf.load180 = load i32, i32* %code179, align 8
  %bf.clear181 = and i32 %bf.load180, 255
  %cmp182 = icmp eq i32 %bf.clear181, 20
  br i1 %cmp182, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %sw.bb.153
  %107 = load %union.tree_node*, %union.tree_node** %pointed_to_1, align 8
  %common183 = bitcast %union.tree_node* %107 to %struct.tree_common*
  %type184 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common183, i32 0, i32 1
  %108 = load %union.tree_node*, %union.tree_node** %type184, align 8
  %tobool185 = icmp ne %union.tree_node* %108, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb.153
  %109 = phi i1 [ false, %sw.bb.153 ], [ %tobool185, %land.rhs ]
  %land.ext = zext i1 %109 to i32
  %mul186 = mul nsw i32 %land.ext, 8
  %or187 = or i32 %or177, %mul186
  %110 = load %union.tree_node*, %union.tree_node** %pointed_to_2, align 8
  %common188 = bitcast %union.tree_node* %110 to %struct.tree_common*
  %readonly_flag189 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common188, i32 0, i32 2
  %bf.load190 = load i32, i32* %readonly_flag189, align 8
  %bf.lshr191 = lshr i32 %bf.load190, 12
  %bf.clear192 = and i32 %bf.lshr191, 1
  %mul193 = mul nsw i32 %bf.clear192, 1
  %111 = load %union.tree_node*, %union.tree_node** %pointed_to_2, align 8
  %common194 = bitcast %union.tree_node* %111 to %struct.tree_common*
  %volatile_flag195 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common194, i32 0, i32 2
  %bf.load196 = load i32, i32* %volatile_flag195, align 8
  %bf.lshr197 = lshr i32 %bf.load196, 11
  %bf.clear198 = and i32 %bf.lshr197, 1
  %mul199 = mul nsw i32 %bf.clear198, 2
  %or200 = or i32 %mul193, %mul199
  %112 = load %union.tree_node*, %union.tree_node** %pointed_to_2, align 8
  %type201 = bitcast %union.tree_node* %112 to %struct.tree_type*
  %restrict_flag202 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type201, i32 0, i32 6
  %bf.load203 = load i32, i32* %restrict_flag202, align 4
  %bf.lshr204 = lshr i32 %bf.load203, 21
  %bf.clear205 = and i32 %bf.lshr204, 1
  %mul206 = mul nsw i32 %bf.clear205, 4
  %or207 = or i32 %or200, %mul206
  %113 = load %union.tree_node*, %union.tree_node** %pointed_to_2, align 8
  %common208 = bitcast %union.tree_node* %113 to %struct.tree_common*
  %code209 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common208, i32 0, i32 2
  %bf.load210 = load i32, i32* %code209, align 8
  %bf.clear211 = and i32 %bf.load210, 255
  %cmp212 = icmp eq i32 %bf.clear211, 20
  br i1 %cmp212, label %land.rhs.213, label %land.end.217

land.rhs.213:                                     ; preds = %land.end
  %114 = load %union.tree_node*, %union.tree_node** %pointed_to_2, align 8
  %common214 = bitcast %union.tree_node* %114 to %struct.tree_common*
  %type215 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common214, i32 0, i32 1
  %115 = load %union.tree_node*, %union.tree_node** %type215, align 8
  %tobool216 = icmp ne %union.tree_node* %115, null
  br label %land.end.217

land.end.217:                                     ; preds = %land.rhs.213, %land.end
  %116 = phi i1 [ false, %land.end ], [ %tobool216, %land.rhs.213 ]
  %land.ext218 = zext i1 %116 to i32
  %mul219 = mul nsw i32 %land.ext218, 8
  %or220 = or i32 %or207, %mul219
  %or221 = or i32 %or187, %or220
  %call222 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %102, i32 %or221)
  %call223 = call %union.tree_node* @build_pointer_type(%union.tree_node* %call222)
  store %union.tree_node* %call223, %union.tree_node** %t1.addr, align 8
  %117 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %118 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %call224 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %117, %union.tree_node* %118)
  store %union.tree_node* %call224, %union.tree_node** %retval
  br label %return

sw.bb.225:                                        ; preds = %if.end.63
  %119 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %common226 = bitcast %union.tree_node* %119 to %struct.tree_common*
  %type227 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common226, i32 0, i32 1
  %120 = load %union.tree_node*, %union.tree_node** %type227, align 8
  %121 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %common228 = bitcast %union.tree_node* %121 to %struct.tree_common*
  %type229 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common228, i32 0, i32 1
  %122 = load %union.tree_node*, %union.tree_node** %type229, align 8
  %call230 = call %union.tree_node* @common_type(%union.tree_node* %120, %union.tree_node* %122)
  store %union.tree_node* %call230, %union.tree_node** %elt, align 8
  %123 = load %union.tree_node*, %union.tree_node** %elt, align 8
  %124 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %common231 = bitcast %union.tree_node* %124 to %struct.tree_common*
  %type232 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common231, i32 0, i32 1
  %125 = load %union.tree_node*, %union.tree_node** %type232, align 8
  %cmp233 = icmp eq %union.tree_node* %123, %125
  br i1 %cmp233, label %land.lhs.true.234, label %if.end.239

land.lhs.true.234:                                ; preds = %sw.bb.225
  %126 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %type235 = bitcast %union.tree_node* %126 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type235, i32 0, i32 1
  %127 = load %union.tree_node*, %union.tree_node** %values, align 8
  %tobool236 = icmp ne %union.tree_node* %127, null
  br i1 %tobool236, label %if.then.237, label %if.end.239

if.then.237:                                      ; preds = %land.lhs.true.234
  %128 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %129 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %call238 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %128, %union.tree_node* %129)
  store %union.tree_node* %call238, %union.tree_node** %retval
  br label %return

if.end.239:                                       ; preds = %land.lhs.true.234, %sw.bb.225
  %130 = load %union.tree_node*, %union.tree_node** %elt, align 8
  %131 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %common240 = bitcast %union.tree_node* %131 to %struct.tree_common*
  %type241 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common240, i32 0, i32 1
  %132 = load %union.tree_node*, %union.tree_node** %type241, align 8
  %cmp242 = icmp eq %union.tree_node* %130, %132
  br i1 %cmp242, label %land.lhs.true.243, label %if.end.249

land.lhs.true.243:                                ; preds = %if.end.239
  %133 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %type244 = bitcast %union.tree_node* %133 to %struct.tree_type*
  %values245 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type244, i32 0, i32 1
  %134 = load %union.tree_node*, %union.tree_node** %values245, align 8
  %tobool246 = icmp ne %union.tree_node* %134, null
  br i1 %tobool246, label %if.then.247, label %if.end.249

if.then.247:                                      ; preds = %land.lhs.true.243
  %135 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %136 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %call248 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %135, %union.tree_node* %136)
  store %union.tree_node* %call248, %union.tree_node** %retval
  br label %return

if.end.249:                                       ; preds = %land.lhs.true.243, %if.end.239
  %137 = load %union.tree_node*, %union.tree_node** %elt, align 8
  %138 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %type250 = bitcast %union.tree_node* %138 to %struct.tree_type*
  %values251 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type250, i32 0, i32 1
  %139 = load %union.tree_node*, %union.tree_node** %values251, align 8
  %tobool252 = icmp ne %union.tree_node* %139, null
  br i1 %tobool252, label %cond.true.253, label %cond.false.254

cond.true.253:                                    ; preds = %if.end.249
  %140 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  br label %cond.end.255

cond.false.254:                                   ; preds = %if.end.249
  %141 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  br label %cond.end.255

cond.end.255:                                     ; preds = %cond.false.254, %cond.true.253
  %cond256 = phi %union.tree_node* [ %140, %cond.true.253 ], [ %141, %cond.false.254 ]
  %type257 = bitcast %union.tree_node* %cond256 to %struct.tree_type*
  %values258 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type257, i32 0, i32 1
  %142 = load %union.tree_node*, %union.tree_node** %values258, align 8
  %call259 = call %union.tree_node* @build_array_type(%union.tree_node* %137, %union.tree_node* %142)
  store %union.tree_node* %call259, %union.tree_node** %t1.addr, align 8
  %143 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %144 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %call260 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %143, %union.tree_node* %144)
  store %union.tree_node* %call260, %union.tree_node** %retval
  br label %return

sw.bb.261:                                        ; preds = %if.end.63
  %145 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %common262 = bitcast %union.tree_node* %145 to %struct.tree_common*
  %type263 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common262, i32 0, i32 1
  %146 = load %union.tree_node*, %union.tree_node** %type263, align 8
  %147 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %common264 = bitcast %union.tree_node* %147 to %struct.tree_common*
  %type265 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common264, i32 0, i32 1
  %148 = load %union.tree_node*, %union.tree_node** %type265, align 8
  %call266 = call %union.tree_node* @common_type(%union.tree_node* %146, %union.tree_node* %148)
  store %union.tree_node* %call266, %union.tree_node** %valtype, align 8
  %149 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %type267 = bitcast %union.tree_node* %149 to %struct.tree_type*
  %values268 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type267, i32 0, i32 1
  %150 = load %union.tree_node*, %union.tree_node** %values268, align 8
  store %union.tree_node* %150, %union.tree_node** %p1, align 8
  %151 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %type269 = bitcast %union.tree_node* %151 to %struct.tree_type*
  %values270 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type269, i32 0, i32 1
  %152 = load %union.tree_node*, %union.tree_node** %values270, align 8
  store %union.tree_node* %152, %union.tree_node** %p2, align 8
  %153 = load %union.tree_node*, %union.tree_node** %valtype, align 8
  %154 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %common271 = bitcast %union.tree_node* %154 to %struct.tree_common*
  %type272 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common271, i32 0, i32 1
  %155 = load %union.tree_node*, %union.tree_node** %type272, align 8
  %cmp273 = icmp eq %union.tree_node* %153, %155
  br i1 %cmp273, label %land.lhs.true.274, label %if.end.280

land.lhs.true.274:                                ; preds = %sw.bb.261
  %156 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %type275 = bitcast %union.tree_node* %156 to %struct.tree_type*
  %values276 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type275, i32 0, i32 1
  %157 = load %union.tree_node*, %union.tree_node** %values276, align 8
  %tobool277 = icmp ne %union.tree_node* %157, null
  br i1 %tobool277, label %if.end.280, label %if.then.278

if.then.278:                                      ; preds = %land.lhs.true.274
  %158 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %159 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %call279 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %158, %union.tree_node* %159)
  store %union.tree_node* %call279, %union.tree_node** %retval
  br label %return

if.end.280:                                       ; preds = %land.lhs.true.274, %sw.bb.261
  %160 = load %union.tree_node*, %union.tree_node** %valtype, align 8
  %161 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %common281 = bitcast %union.tree_node* %161 to %struct.tree_common*
  %type282 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common281, i32 0, i32 1
  %162 = load %union.tree_node*, %union.tree_node** %type282, align 8
  %cmp283 = icmp eq %union.tree_node* %160, %162
  br i1 %cmp283, label %land.lhs.true.284, label %if.end.290

land.lhs.true.284:                                ; preds = %if.end.280
  %163 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %type285 = bitcast %union.tree_node* %163 to %struct.tree_type*
  %values286 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type285, i32 0, i32 1
  %164 = load %union.tree_node*, %union.tree_node** %values286, align 8
  %tobool287 = icmp ne %union.tree_node* %164, null
  br i1 %tobool287, label %if.end.290, label %if.then.288

if.then.288:                                      ; preds = %land.lhs.true.284
  %165 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %166 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %call289 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %165, %union.tree_node* %166)
  store %union.tree_node* %call289, %union.tree_node** %retval
  br label %return

if.end.290:                                       ; preds = %land.lhs.true.284, %if.end.280
  %167 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %type291 = bitcast %union.tree_node* %167 to %struct.tree_type*
  %values292 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type291, i32 0, i32 1
  %168 = load %union.tree_node*, %union.tree_node** %values292, align 8
  %cmp293 = icmp eq %union.tree_node* %168, null
  br i1 %cmp293, label %if.then.294, label %if.end.299

if.then.294:                                      ; preds = %if.end.290
  %169 = load %union.tree_node*, %union.tree_node** %valtype, align 8
  %170 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %type295 = bitcast %union.tree_node* %170 to %struct.tree_type*
  %values296 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type295, i32 0, i32 1
  %171 = load %union.tree_node*, %union.tree_node** %values296, align 8
  %call297 = call %union.tree_node* @build_function_type(%union.tree_node* %169, %union.tree_node* %171)
  store %union.tree_node* %call297, %union.tree_node** %t1.addr, align 8
  %172 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %173 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %call298 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %172, %union.tree_node* %173)
  store %union.tree_node* %call298, %union.tree_node** %retval
  br label %return

if.end.299:                                       ; preds = %if.end.290
  %174 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %type300 = bitcast %union.tree_node* %174 to %struct.tree_type*
  %values301 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type300, i32 0, i32 1
  %175 = load %union.tree_node*, %union.tree_node** %values301, align 8
  %cmp302 = icmp eq %union.tree_node* %175, null
  br i1 %cmp302, label %if.then.303, label %if.end.308

if.then.303:                                      ; preds = %if.end.299
  %176 = load %union.tree_node*, %union.tree_node** %valtype, align 8
  %177 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %type304 = bitcast %union.tree_node* %177 to %struct.tree_type*
  %values305 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type304, i32 0, i32 1
  %178 = load %union.tree_node*, %union.tree_node** %values305, align 8
  %call306 = call %union.tree_node* @build_function_type(%union.tree_node* %176, %union.tree_node* %178)
  store %union.tree_node* %call306, %union.tree_node** %t1.addr, align 8
  %179 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %180 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %call307 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %179, %union.tree_node* %180)
  store %union.tree_node* %call307, %union.tree_node** %retval
  br label %return

if.end.308:                                       ; preds = %if.end.299
  call void @pushlevel(i32 0)
  call void @declare_parm_level(i32 1)
  %181 = load %union.tree_node*, %union.tree_node** %p1, align 8
  %call309 = call i32 @list_length(%union.tree_node* %181)
  store i32 %call309, i32* %len, align 4
  store %union.tree_node* null, %union.tree_node** %newargs, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.308
  %182 = load i32, i32* %i, align 4
  %183 = load i32, i32* %len, align 4
  %cmp310 = icmp slt i32 %182, %183
  br i1 %cmp310, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %184 = load %union.tree_node*, %union.tree_node** %newargs, align 8
  %call311 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* null, %union.tree_node* %184)
  store %union.tree_node* %call311, %union.tree_node** %newargs, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %185 = load i32, i32* %i, align 4
  %inc = add nsw i32 %185, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %186 = load %union.tree_node*, %union.tree_node** %newargs, align 8
  store %union.tree_node* %186, %union.tree_node** %n, align 8
  br label %for.cond.312

for.cond.312:                                     ; preds = %for.inc.420, %for.end
  %187 = load %union.tree_node*, %union.tree_node** %p1, align 8
  %tobool313 = icmp ne %union.tree_node* %187, null
  br i1 %tobool313, label %for.body.314, label %for.end.427

for.body.314:                                     ; preds = %for.cond.312
  %188 = load %union.tree_node*, %union.tree_node** %p1, align 8
  %list = bitcast %union.tree_node* %188 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %189 = load %union.tree_node*, %union.tree_node** %value, align 8
  %cmp315 = icmp eq %union.tree_node* %189, null
  br i1 %cmp315, label %if.then.316, label %if.end.321

if.then.316:                                      ; preds = %for.body.314
  %190 = load %union.tree_node*, %union.tree_node** %p2, align 8
  %list317 = bitcast %union.tree_node* %190 to %struct.tree_list*
  %value318 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list317, i32 0, i32 2
  %191 = load %union.tree_node*, %union.tree_node** %value318, align 8
  %192 = load %union.tree_node*, %union.tree_node** %n, align 8
  %list319 = bitcast %union.tree_node* %192 to %struct.tree_list*
  %value320 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list319, i32 0, i32 2
  store %union.tree_node* %191, %union.tree_node** %value320, align 8
  br label %parm_done

if.end.321:                                       ; preds = %for.body.314
  %193 = load %union.tree_node*, %union.tree_node** %p2, align 8
  %list322 = bitcast %union.tree_node* %193 to %struct.tree_list*
  %value323 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list322, i32 0, i32 2
  %194 = load %union.tree_node*, %union.tree_node** %value323, align 8
  %cmp324 = icmp eq %union.tree_node* %194, null
  br i1 %cmp324, label %if.then.325, label %if.end.330

if.then.325:                                      ; preds = %if.end.321
  %195 = load %union.tree_node*, %union.tree_node** %p1, align 8
  %list326 = bitcast %union.tree_node* %195 to %struct.tree_list*
  %value327 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list326, i32 0, i32 2
  %196 = load %union.tree_node*, %union.tree_node** %value327, align 8
  %197 = load %union.tree_node*, %union.tree_node** %n, align 8
  %list328 = bitcast %union.tree_node* %197 to %struct.tree_list*
  %value329 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list328, i32 0, i32 2
  store %union.tree_node* %196, %union.tree_node** %value329, align 8
  br label %parm_done

if.end.330:                                       ; preds = %if.end.321
  %198 = load %union.tree_node*, %union.tree_node** %p1, align 8
  %list331 = bitcast %union.tree_node* %198 to %struct.tree_list*
  %value332 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list331, i32 0, i32 2
  %199 = load %union.tree_node*, %union.tree_node** %value332, align 8
  %common333 = bitcast %union.tree_node* %199 to %struct.tree_common*
  %code334 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common333, i32 0, i32 2
  %bf.load335 = load i32, i32* %code334, align 8
  %bf.clear336 = and i32 %bf.load335, 255
  %cmp337 = icmp eq i32 %bf.clear336, 21
  br i1 %cmp337, label %land.lhs.true.338, label %if.end.370

land.lhs.true.338:                                ; preds = %if.end.330
  %200 = load %union.tree_node*, %union.tree_node** %p1, align 8
  %list339 = bitcast %union.tree_node* %200 to %struct.tree_list*
  %value340 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list339, i32 0, i32 2
  %201 = load %union.tree_node*, %union.tree_node** %value340, align 8
  %202 = load %union.tree_node*, %union.tree_node** %p2, align 8
  %list341 = bitcast %union.tree_node* %202 to %struct.tree_list*
  %value342 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list341, i32 0, i32 2
  %203 = load %union.tree_node*, %union.tree_node** %value342, align 8
  %cmp343 = icmp ne %union.tree_node* %201, %203
  br i1 %cmp343, label %if.then.344, label %if.end.370

if.then.344:                                      ; preds = %land.lhs.true.338
  %204 = load %union.tree_node*, %union.tree_node** %p1, align 8
  %list345 = bitcast %union.tree_node* %204 to %struct.tree_list*
  %value346 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list345, i32 0, i32 2
  %205 = load %union.tree_node*, %union.tree_node** %value346, align 8
  %type347 = bitcast %union.tree_node* %205 to %struct.tree_type*
  %values348 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type347, i32 0, i32 1
  %206 = load %union.tree_node*, %union.tree_node** %values348, align 8
  store %union.tree_node* %206, %union.tree_node** %memb, align 8
  br label %for.cond.349

for.cond.349:                                     ; preds = %for.inc.367, %if.then.344
  %207 = load %union.tree_node*, %union.tree_node** %memb, align 8
  %tobool350 = icmp ne %union.tree_node* %207, null
  br i1 %tobool350, label %for.body.351, label %for.end.369

for.body.351:                                     ; preds = %for.cond.349
  %208 = load %union.tree_node*, %union.tree_node** %memb, align 8
  %common352 = bitcast %union.tree_node* %208 to %struct.tree_common*
  %type353 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common352, i32 0, i32 1
  %209 = load %union.tree_node*, %union.tree_node** %type353, align 8
  %210 = load %union.tree_node*, %union.tree_node** %p2, align 8
  %list354 = bitcast %union.tree_node* %210 to %struct.tree_list*
  %value355 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list354, i32 0, i32 2
  %211 = load %union.tree_node*, %union.tree_node** %value355, align 8
  %call356 = call i32 @comptypes(%union.tree_node* %209, %union.tree_node* %211)
  %tobool357 = icmp ne i32 %call356, 0
  br i1 %tobool357, label %if.then.358, label %if.end.366

if.then.358:                                      ; preds = %for.body.351
  %212 = load %union.tree_node*, %union.tree_node** %p2, align 8
  %list359 = bitcast %union.tree_node* %212 to %struct.tree_list*
  %value360 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list359, i32 0, i32 2
  %213 = load %union.tree_node*, %union.tree_node** %value360, align 8
  %214 = load %union.tree_node*, %union.tree_node** %n, align 8
  %list361 = bitcast %union.tree_node* %214 to %struct.tree_list*
  %value362 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list361, i32 0, i32 2
  store %union.tree_node* %213, %union.tree_node** %value362, align 8
  %215 = load i32, i32* @pedantic, align 4
  %tobool363 = icmp ne i32 %215, 0
  br i1 %tobool363, label %if.then.364, label %if.end.365

if.then.364:                                      ; preds = %if.then.358
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i32 0, i32 0))
  br label %if.end.365

if.end.365:                                       ; preds = %if.then.364, %if.then.358
  br label %parm_done

if.end.366:                                       ; preds = %for.body.351
  br label %for.inc.367

for.inc.367:                                      ; preds = %if.end.366
  %216 = load %union.tree_node*, %union.tree_node** %memb, align 8
  %common368 = bitcast %union.tree_node* %216 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common368, i32 0, i32 0
  %217 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %217, %union.tree_node** %memb, align 8
  br label %for.cond.349

for.end.369:                                      ; preds = %for.cond.349
  br label %if.end.370

if.end.370:                                       ; preds = %for.end.369, %land.lhs.true.338, %if.end.330
  %218 = load %union.tree_node*, %union.tree_node** %p2, align 8
  %list371 = bitcast %union.tree_node* %218 to %struct.tree_list*
  %value372 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list371, i32 0, i32 2
  %219 = load %union.tree_node*, %union.tree_node** %value372, align 8
  %common373 = bitcast %union.tree_node* %219 to %struct.tree_common*
  %code374 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common373, i32 0, i32 2
  %bf.load375 = load i32, i32* %code374, align 8
  %bf.clear376 = and i32 %bf.load375, 255
  %cmp377 = icmp eq i32 %bf.clear376, 21
  br i1 %cmp377, label %land.lhs.true.378, label %if.end.412

land.lhs.true.378:                                ; preds = %if.end.370
  %220 = load %union.tree_node*, %union.tree_node** %p2, align 8
  %list379 = bitcast %union.tree_node* %220 to %struct.tree_list*
  %value380 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list379, i32 0, i32 2
  %221 = load %union.tree_node*, %union.tree_node** %value380, align 8
  %222 = load %union.tree_node*, %union.tree_node** %p1, align 8
  %list381 = bitcast %union.tree_node* %222 to %struct.tree_list*
  %value382 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list381, i32 0, i32 2
  %223 = load %union.tree_node*, %union.tree_node** %value382, align 8
  %cmp383 = icmp ne %union.tree_node* %221, %223
  br i1 %cmp383, label %if.then.384, label %if.end.412

if.then.384:                                      ; preds = %land.lhs.true.378
  %224 = load %union.tree_node*, %union.tree_node** %p2, align 8
  %list386 = bitcast %union.tree_node* %224 to %struct.tree_list*
  %value387 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list386, i32 0, i32 2
  %225 = load %union.tree_node*, %union.tree_node** %value387, align 8
  %type388 = bitcast %union.tree_node* %225 to %struct.tree_type*
  %values389 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type388, i32 0, i32 1
  %226 = load %union.tree_node*, %union.tree_node** %values389, align 8
  store %union.tree_node* %226, %union.tree_node** %memb385, align 8
  br label %for.cond.390

for.cond.390:                                     ; preds = %for.inc.408, %if.then.384
  %227 = load %union.tree_node*, %union.tree_node** %memb385, align 8
  %tobool391 = icmp ne %union.tree_node* %227, null
  br i1 %tobool391, label %for.body.392, label %for.end.411

for.body.392:                                     ; preds = %for.cond.390
  %228 = load %union.tree_node*, %union.tree_node** %memb385, align 8
  %common393 = bitcast %union.tree_node* %228 to %struct.tree_common*
  %type394 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common393, i32 0, i32 1
  %229 = load %union.tree_node*, %union.tree_node** %type394, align 8
  %230 = load %union.tree_node*, %union.tree_node** %p1, align 8
  %list395 = bitcast %union.tree_node* %230 to %struct.tree_list*
  %value396 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list395, i32 0, i32 2
  %231 = load %union.tree_node*, %union.tree_node** %value396, align 8
  %call397 = call i32 @comptypes(%union.tree_node* %229, %union.tree_node* %231)
  %tobool398 = icmp ne i32 %call397, 0
  br i1 %tobool398, label %if.then.399, label %if.end.407

if.then.399:                                      ; preds = %for.body.392
  %232 = load %union.tree_node*, %union.tree_node** %p1, align 8
  %list400 = bitcast %union.tree_node* %232 to %struct.tree_list*
  %value401 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list400, i32 0, i32 2
  %233 = load %union.tree_node*, %union.tree_node** %value401, align 8
  %234 = load %union.tree_node*, %union.tree_node** %n, align 8
  %list402 = bitcast %union.tree_node* %234 to %struct.tree_list*
  %value403 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list402, i32 0, i32 2
  store %union.tree_node* %233, %union.tree_node** %value403, align 8
  %235 = load i32, i32* @pedantic, align 4
  %tobool404 = icmp ne i32 %235, 0
  br i1 %tobool404, label %if.then.405, label %if.end.406

if.then.405:                                      ; preds = %if.then.399
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i32 0, i32 0))
  br label %if.end.406

if.end.406:                                       ; preds = %if.then.405, %if.then.399
  br label %parm_done

if.end.407:                                       ; preds = %for.body.392
  br label %for.inc.408

for.inc.408:                                      ; preds = %if.end.407
  %236 = load %union.tree_node*, %union.tree_node** %memb385, align 8
  %common409 = bitcast %union.tree_node* %236 to %struct.tree_common*
  %chain410 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common409, i32 0, i32 0
  %237 = load %union.tree_node*, %union.tree_node** %chain410, align 8
  store %union.tree_node* %237, %union.tree_node** %memb385, align 8
  br label %for.cond.390

for.end.411:                                      ; preds = %for.cond.390
  br label %if.end.412

if.end.412:                                       ; preds = %for.end.411, %land.lhs.true.378, %if.end.370
  %238 = load %union.tree_node*, %union.tree_node** %p1, align 8
  %list413 = bitcast %union.tree_node* %238 to %struct.tree_list*
  %value414 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list413, i32 0, i32 2
  %239 = load %union.tree_node*, %union.tree_node** %value414, align 8
  %240 = load %union.tree_node*, %union.tree_node** %p2, align 8
  %list415 = bitcast %union.tree_node* %240 to %struct.tree_list*
  %value416 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list415, i32 0, i32 2
  %241 = load %union.tree_node*, %union.tree_node** %value416, align 8
  %call417 = call %union.tree_node* @common_type(%union.tree_node* %239, %union.tree_node* %241)
  %242 = load %union.tree_node*, %union.tree_node** %n, align 8
  %list418 = bitcast %union.tree_node* %242 to %struct.tree_list*
  %value419 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list418, i32 0, i32 2
  store %union.tree_node* %call417, %union.tree_node** %value419, align 8
  br label %parm_done

parm_done:                                        ; preds = %if.end.412, %if.end.406, %if.end.365, %if.then.325, %if.then.316
  br label %for.inc.420

for.inc.420:                                      ; preds = %parm_done
  %243 = load %union.tree_node*, %union.tree_node** %p1, align 8
  %common421 = bitcast %union.tree_node* %243 to %struct.tree_common*
  %chain422 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common421, i32 0, i32 0
  %244 = load %union.tree_node*, %union.tree_node** %chain422, align 8
  store %union.tree_node* %244, %union.tree_node** %p1, align 8
  %245 = load %union.tree_node*, %union.tree_node** %p2, align 8
  %common423 = bitcast %union.tree_node* %245 to %struct.tree_common*
  %chain424 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common423, i32 0, i32 0
  %246 = load %union.tree_node*, %union.tree_node** %chain424, align 8
  store %union.tree_node* %246, %union.tree_node** %p2, align 8
  %247 = load %union.tree_node*, %union.tree_node** %n, align 8
  %common425 = bitcast %union.tree_node* %247 to %struct.tree_common*
  %chain426 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common425, i32 0, i32 0
  %248 = load %union.tree_node*, %union.tree_node** %chain426, align 8
  store %union.tree_node* %248, %union.tree_node** %n, align 8
  br label %for.cond.312

for.end.427:                                      ; preds = %for.cond.312
  %call428 = call %union.tree_node* @poplevel(i32 0, i32 0, i32 0)
  %249 = load %union.tree_node*, %union.tree_node** %valtype, align 8
  %250 = load %union.tree_node*, %union.tree_node** %newargs, align 8
  %call429 = call %union.tree_node* @build_function_type(%union.tree_node* %249, %union.tree_node* %250)
  store %union.tree_node* %call429, %union.tree_node** %t1.addr, align 8
  br label %sw.default

sw.default:                                       ; preds = %if.end.63, %for.end.427
  %251 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %252 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %call430 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %251, %union.tree_node* %252)
  store %union.tree_node* %call430, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %sw.default, %if.then.303, %if.then.294, %if.then.288, %if.then.278, %cond.end.255, %if.then.247, %if.then.237, %land.end.217, %if.else.151, %if.then.149, %if.then.140, %if.end.130, %if.then.107, %if.then.97, %if.then.85, %if.then.73, %if.then.67, %if.else.60, %if.then.58, %if.then.51, %if.then.5, %if.then.2, %if.then
  %253 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %253
}

declare %union.tree_node* @type_for_size(i32, i32) #1

declare %union.tree_node* @build_type_attribute_variant(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @build_complex_type(%union.tree_node*) #1

declare %union.tree_node* @build_pointer_type(%union.tree_node*) #1

declare %union.tree_node* @c_build_qualified_type(%union.tree_node*, i32) #1

declare %union.tree_node* @build_array_type(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @build_function_type(%union.tree_node*, %union.tree_node*) #1

declare void @pushlevel(i32) #1

declare void @declare_parm_level(i32) #1

declare i32 @list_length(%union.tree_node*) #1

declare %union.tree_node* @tree_cons(%union.tree_node*, %union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define i32 @comptypes(%union.tree_node* %type1, %union.tree_node* %type2) #0 {
entry:
  %retval = alloca i32, align 4
  %type1.addr = alloca %union.tree_node*, align 8
  %type2.addr = alloca %union.tree_node*, align 8
  %t1 = alloca %union.tree_node*, align 8
  %t2 = alloca %union.tree_node*, align 8
  %attrval = alloca i32, align 4
  %val = alloca i32, align 4
  %d1 = alloca %union.tree_node*, align 8
  %d2 = alloca %union.tree_node*, align 8
  %d1_variable = alloca i8, align 1
  %d2_variable = alloca i8, align 1
  %d1_zero = alloca i8, align 1
  %d2_zero = alloca i8, align 1
  store %union.tree_node* %type1, %union.tree_node** %type1.addr, align 8
  store %union.tree_node* %type2, %union.tree_node** %type2.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %type1.addr, align 8
  store %union.tree_node* %0, %union.tree_node** %t1, align 8
  %1 = load %union.tree_node*, %union.tree_node** %type2.addr, align 8
  store %union.tree_node* %1, %union.tree_node** %t2, align 8
  %2 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %3 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %cmp = icmp eq %union.tree_node* %2, %3
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %4 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %tobool = icmp ne %union.tree_node* %4, null
  br i1 %tobool, label %lor.lhs.false.1, label %if.then

lor.lhs.false.1:                                  ; preds = %lor.lhs.false
  %5 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %tobool2 = icmp ne %union.tree_node* %5, null
  br i1 %tobool2, label %lor.lhs.false.3, label %if.then

lor.lhs.false.3:                                  ; preds = %lor.lhs.false.1
  %6 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common = bitcast %union.tree_node* %6 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp4 = icmp eq i32 %bf.clear, 0
  br i1 %cmp4, label %if.then, label %lor.lhs.false.5

lor.lhs.false.5:                                  ; preds = %lor.lhs.false.3
  %7 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %common6 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %code7 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6, i32 0, i32 2
  %bf.load8 = load i32, i32* %code7, align 8
  %bf.clear9 = and i32 %bf.load8, 255
  %cmp10 = icmp eq i32 %bf.clear9, 0
  br i1 %cmp10, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.5, %lor.lhs.false.3, %lor.lhs.false.1, %lor.lhs.false, %entry
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.5
  %8 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common11 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %code12 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 2
  %bf.load13 = load i32, i32* %code12, align 8
  %bf.clear14 = and i32 %bf.load13, 255
  %cmp15 = icmp eq i32 %bf.clear14, 6
  br i1 %cmp15, label %land.lhs.true, label %if.end.25

land.lhs.true:                                    ; preds = %if.end
  %9 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %type = bitcast %union.tree_node* %9 to %struct.tree_type*
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i32 0, i32 6
  %bf.load16 = load i32, i32* %no_force_blk_flag, align 4
  %bf.lshr = lshr i32 %bf.load16, 17
  %bf.clear17 = and i32 %bf.lshr, 1
  %tobool18 = icmp ne i32 %bf.clear17, 0
  br i1 %tobool18, label %land.lhs.true.19, label %if.end.25

land.lhs.true.19:                                 ; preds = %land.lhs.true
  %10 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %type20 = bitcast %union.tree_node* %10 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type20, i32 0, i32 1
  %11 = load %union.tree_node*, %union.tree_node** %values, align 8
  %cmp21 = icmp ne %union.tree_node* %11, null
  br i1 %cmp21, label %if.then.22, label %if.end.25

if.then.22:                                       ; preds = %land.lhs.true.19
  %12 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %type23 = bitcast %union.tree_node* %12 to %struct.tree_type*
  %values24 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type23, i32 0, i32 1
  %13 = load %union.tree_node*, %union.tree_node** %values24, align 8
  store %union.tree_node* %13, %union.tree_node** %t1, align 8
  br label %if.end.25

if.end.25:                                        ; preds = %if.then.22, %land.lhs.true.19, %land.lhs.true, %if.end
  %14 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %common26 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %code27 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common26, i32 0, i32 2
  %bf.load28 = load i32, i32* %code27, align 8
  %bf.clear29 = and i32 %bf.load28, 255
  %cmp30 = icmp eq i32 %bf.clear29, 6
  br i1 %cmp30, label %land.lhs.true.31, label %if.end.45

land.lhs.true.31:                                 ; preds = %if.end.25
  %15 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %type32 = bitcast %union.tree_node* %15 to %struct.tree_type*
  %no_force_blk_flag33 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type32, i32 0, i32 6
  %bf.load34 = load i32, i32* %no_force_blk_flag33, align 4
  %bf.lshr35 = lshr i32 %bf.load34, 17
  %bf.clear36 = and i32 %bf.lshr35, 1
  %tobool37 = icmp ne i32 %bf.clear36, 0
  br i1 %tobool37, label %land.lhs.true.38, label %if.end.45

land.lhs.true.38:                                 ; preds = %land.lhs.true.31
  %16 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %type39 = bitcast %union.tree_node* %16 to %struct.tree_type*
  %values40 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type39, i32 0, i32 1
  %17 = load %union.tree_node*, %union.tree_node** %values40, align 8
  %cmp41 = icmp ne %union.tree_node* %17, null
  br i1 %cmp41, label %if.then.42, label %if.end.45

if.then.42:                                       ; preds = %land.lhs.true.38
  %18 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %type43 = bitcast %union.tree_node* %18 to %struct.tree_type*
  %values44 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type43, i32 0, i32 1
  %19 = load %union.tree_node*, %union.tree_node** %values44, align 8
  store %union.tree_node* %19, %union.tree_node** %t2, align 8
  br label %if.end.45

if.end.45:                                        ; preds = %if.then.42, %land.lhs.true.38, %land.lhs.true.31, %if.end.25
  %20 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common46 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %code47 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common46, i32 0, i32 2
  %bf.load48 = load i32, i32* %code47, align 8
  %bf.clear49 = and i32 %bf.load48, 255
  %cmp50 = icmp eq i32 %bf.clear49, 10
  br i1 %cmp50, label %if.then.51, label %if.end.59

if.then.51:                                       ; preds = %if.end.45
  %21 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %type52 = bitcast %union.tree_node* %21 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type52, i32 0, i32 6
  %bf.load53 = load i32, i32* %precision, align 4
  %bf.clear54 = and i32 %bf.load53, 511
  %22 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common55 = bitcast %union.tree_node* %22 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common55, i32 0, i32 2
  %bf.load56 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr57 = lshr i32 %bf.load56, 13
  %bf.clear58 = and i32 %bf.lshr57, 1
  %call = call %union.tree_node* @type_for_size(i32 %bf.clear54, i32 %bf.clear58)
  store %union.tree_node* %call, %union.tree_node** %t1, align 8
  br label %if.end.59

if.end.59:                                        ; preds = %if.then.51, %if.end.45
  %23 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %common60 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %code61 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common60, i32 0, i32 2
  %bf.load62 = load i32, i32* %code61, align 8
  %bf.clear63 = and i32 %bf.load62, 255
  %cmp64 = icmp eq i32 %bf.clear63, 10
  br i1 %cmp64, label %if.then.65, label %if.end.76

if.then.65:                                       ; preds = %if.end.59
  %24 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %type66 = bitcast %union.tree_node* %24 to %struct.tree_type*
  %precision67 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type66, i32 0, i32 6
  %bf.load68 = load i32, i32* %precision67, align 4
  %bf.clear69 = and i32 %bf.load68, 511
  %25 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %common70 = bitcast %union.tree_node* %25 to %struct.tree_common*
  %unsigned_flag71 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common70, i32 0, i32 2
  %bf.load72 = load i32, i32* %unsigned_flag71, align 8
  %bf.lshr73 = lshr i32 %bf.load72, 13
  %bf.clear74 = and i32 %bf.lshr73, 1
  %call75 = call %union.tree_node* @type_for_size(i32 %bf.clear69, i32 %bf.clear74)
  store %union.tree_node* %call75, %union.tree_node** %t2, align 8
  br label %if.end.76

if.end.76:                                        ; preds = %if.then.65, %if.end.59
  %26 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %27 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %cmp77 = icmp eq %union.tree_node* %26, %27
  br i1 %cmp77, label %if.then.78, label %if.end.79

if.then.78:                                       ; preds = %if.end.76
  store i32 1, i32* %retval
  br label %return

if.end.79:                                        ; preds = %if.end.76
  %28 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common80 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %code81 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common80, i32 0, i32 2
  %bf.load82 = load i32, i32* %code81, align 8
  %bf.clear83 = and i32 %bf.load82, 255
  %29 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %common84 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %code85 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common84, i32 0, i32 2
  %bf.load86 = load i32, i32* %code85, align 8
  %bf.clear87 = and i32 %bf.load86, 255
  %cmp88 = icmp ne i32 %bf.clear83, %bf.clear87
  br i1 %cmp88, label %if.then.89, label %if.end.90

if.then.89:                                       ; preds = %if.end.79
  store i32 0, i32* %retval
  br label %return

if.end.90:                                        ; preds = %if.end.79
  %30 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common91 = bitcast %union.tree_node* %30 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common91, i32 0, i32 2
  %bf.load92 = load i32, i32* %readonly_flag, align 8
  %bf.lshr93 = lshr i32 %bf.load92, 12
  %bf.clear94 = and i32 %bf.lshr93, 1
  %mul = mul nsw i32 %bf.clear94, 1
  %31 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common95 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common95, i32 0, i32 2
  %bf.load96 = load i32, i32* %volatile_flag, align 8
  %bf.lshr97 = lshr i32 %bf.load96, 11
  %bf.clear98 = and i32 %bf.lshr97, 1
  %mul99 = mul nsw i32 %bf.clear98, 2
  %or = or i32 %mul, %mul99
  %32 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %type100 = bitcast %union.tree_node* %32 to %struct.tree_type*
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type100, i32 0, i32 6
  %bf.load101 = load i32, i32* %restrict_flag, align 4
  %bf.lshr102 = lshr i32 %bf.load101, 21
  %bf.clear103 = and i32 %bf.lshr102, 1
  %mul104 = mul nsw i32 %bf.clear103, 4
  %or105 = or i32 %or, %mul104
  %33 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common106 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %code107 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common106, i32 0, i32 2
  %bf.load108 = load i32, i32* %code107, align 8
  %bf.clear109 = and i32 %bf.load108, 255
  %cmp110 = icmp eq i32 %bf.clear109, 20
  br i1 %cmp110, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end.90
  %34 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common111 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %type112 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common111, i32 0, i32 1
  %35 = load %union.tree_node*, %union.tree_node** %type112, align 8
  %tobool113 = icmp ne %union.tree_node* %35, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.90
  %36 = phi i1 [ false, %if.end.90 ], [ %tobool113, %land.rhs ]
  %land.ext = zext i1 %36 to i32
  %mul114 = mul nsw i32 %land.ext, 8
  %or115 = or i32 %or105, %mul114
  %37 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %common116 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %readonly_flag117 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common116, i32 0, i32 2
  %bf.load118 = load i32, i32* %readonly_flag117, align 8
  %bf.lshr119 = lshr i32 %bf.load118, 12
  %bf.clear120 = and i32 %bf.lshr119, 1
  %mul121 = mul nsw i32 %bf.clear120, 1
  %38 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %common122 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %volatile_flag123 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common122, i32 0, i32 2
  %bf.load124 = load i32, i32* %volatile_flag123, align 8
  %bf.lshr125 = lshr i32 %bf.load124, 11
  %bf.clear126 = and i32 %bf.lshr125, 1
  %mul127 = mul nsw i32 %bf.clear126, 2
  %or128 = or i32 %mul121, %mul127
  %39 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %type129 = bitcast %union.tree_node* %39 to %struct.tree_type*
  %restrict_flag130 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type129, i32 0, i32 6
  %bf.load131 = load i32, i32* %restrict_flag130, align 4
  %bf.lshr132 = lshr i32 %bf.load131, 21
  %bf.clear133 = and i32 %bf.lshr132, 1
  %mul134 = mul nsw i32 %bf.clear133, 4
  %or135 = or i32 %or128, %mul134
  %40 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %common136 = bitcast %union.tree_node* %40 to %struct.tree_common*
  %code137 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common136, i32 0, i32 2
  %bf.load138 = load i32, i32* %code137, align 8
  %bf.clear139 = and i32 %bf.load138, 255
  %cmp140 = icmp eq i32 %bf.clear139, 20
  br i1 %cmp140, label %land.rhs.141, label %land.end.145

land.rhs.141:                                     ; preds = %land.end
  %41 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %common142 = bitcast %union.tree_node* %41 to %struct.tree_common*
  %type143 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common142, i32 0, i32 1
  %42 = load %union.tree_node*, %union.tree_node** %type143, align 8
  %tobool144 = icmp ne %union.tree_node* %42, null
  br label %land.end.145

land.end.145:                                     ; preds = %land.rhs.141, %land.end
  %43 = phi i1 [ false, %land.end ], [ %tobool144, %land.rhs.141 ]
  %land.ext146 = zext i1 %43 to i32
  %mul147 = mul nsw i32 %land.ext146, 8
  %or148 = or i32 %or135, %mul147
  %cmp149 = icmp ne i32 %or115, %or148
  br i1 %cmp149, label %if.then.150, label %if.end.151

if.then.150:                                      ; preds = %land.end.145
  store i32 0, i32* %retval
  br label %return

if.end.151:                                       ; preds = %land.end.145
  %44 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %type152 = bitcast %union.tree_node* %44 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type152, i32 0, i32 15
  %45 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %46 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %type153 = bitcast %union.tree_node* %46 to %struct.tree_type*
  %main_variant154 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type153, i32 0, i32 15
  %47 = load %union.tree_node*, %union.tree_node** %main_variant154, align 8
  %cmp155 = icmp eq %union.tree_node* %45, %47
  br i1 %cmp155, label %if.then.156, label %if.end.157

if.then.156:                                      ; preds = %if.end.151
  store i32 1, i32* %retval
  br label %return

if.end.157:                                       ; preds = %if.end.151
  %48 = load i32 (%union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 5), align 8
  %49 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %50 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %call158 = call i32 %48(%union.tree_node* %49, %union.tree_node* %50)
  store i32 %call158, i32* %attrval, align 4
  %tobool159 = icmp ne i32 %call158, 0
  br i1 %tobool159, label %if.end.161, label %if.then.160

if.then.160:                                      ; preds = %if.end.157
  store i32 0, i32* %retval
  br label %return

if.end.161:                                       ; preds = %if.end.157
  store i32 0, i32* %val, align 4
  %51 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common162 = bitcast %union.tree_node* %51 to %struct.tree_common*
  %code163 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common162, i32 0, i32 2
  %bf.load164 = load i32, i32* %code163, align 8
  %bf.clear165 = and i32 %bf.load164, 255
  switch i32 %bf.clear165, label %sw.default [
    i32 13, label %sw.bb
    i32 23, label %sw.bb.176
    i32 18, label %sw.bb.178
    i32 20, label %sw.bb.279
  ]

sw.bb:                                            ; preds = %if.end.161
  %52 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common166 = bitcast %union.tree_node* %52 to %struct.tree_common*
  %type167 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common166, i32 0, i32 1
  %53 = load %union.tree_node*, %union.tree_node** %type167, align 8
  %54 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %common168 = bitcast %union.tree_node* %54 to %struct.tree_common*
  %type169 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common168, i32 0, i32 1
  %55 = load %union.tree_node*, %union.tree_node** %type169, align 8
  %cmp170 = icmp eq %union.tree_node* %53, %55
  br i1 %cmp170, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.bb
  br label %cond.end

cond.false:                                       ; preds = %sw.bb
  %56 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common171 = bitcast %union.tree_node* %56 to %struct.tree_common*
  %type172 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common171, i32 0, i32 1
  %57 = load %union.tree_node*, %union.tree_node** %type172, align 8
  %58 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %common173 = bitcast %union.tree_node* %58 to %struct.tree_common*
  %type174 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common173, i32 0, i32 1
  %59 = load %union.tree_node*, %union.tree_node** %type174, align 8
  %call175 = call i32 @comptypes(%union.tree_node* %57, %union.tree_node* %59)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %call175, %cond.false ]
  store i32 %cond, i32* %val, align 4
  br label %sw.epilog

sw.bb.176:                                        ; preds = %if.end.161
  %60 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %61 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %call177 = call i32 @function_types_compatible_p(%union.tree_node* %60, %union.tree_node* %61)
  store i32 %call177, i32* %val, align 4
  br label %sw.epilog

sw.bb.178:                                        ; preds = %if.end.161
  %62 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %type179 = bitcast %union.tree_node* %62 to %struct.tree_type*
  %values180 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type179, i32 0, i32 1
  %63 = load %union.tree_node*, %union.tree_node** %values180, align 8
  store %union.tree_node* %63, %union.tree_node** %d1, align 8
  %64 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %type181 = bitcast %union.tree_node* %64 to %struct.tree_type*
  %values182 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type181, i32 0, i32 1
  %65 = load %union.tree_node*, %union.tree_node** %values182, align 8
  store %union.tree_node* %65, %union.tree_node** %d2, align 8
  store i32 1, i32* %val, align 4
  %66 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common183 = bitcast %union.tree_node* %66 to %struct.tree_common*
  %type184 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common183, i32 0, i32 1
  %67 = load %union.tree_node*, %union.tree_node** %type184, align 8
  %68 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %common185 = bitcast %union.tree_node* %68 to %struct.tree_common*
  %type186 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common185, i32 0, i32 1
  %69 = load %union.tree_node*, %union.tree_node** %type186, align 8
  %cmp187 = icmp ne %union.tree_node* %67, %69
  br i1 %cmp187, label %land.lhs.true.188, label %if.end.196

land.lhs.true.188:                                ; preds = %sw.bb.178
  %70 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common189 = bitcast %union.tree_node* %70 to %struct.tree_common*
  %type190 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common189, i32 0, i32 1
  %71 = load %union.tree_node*, %union.tree_node** %type190, align 8
  %72 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %common191 = bitcast %union.tree_node* %72 to %struct.tree_common*
  %type192 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common191, i32 0, i32 1
  %73 = load %union.tree_node*, %union.tree_node** %type192, align 8
  %call193 = call i32 @comptypes(%union.tree_node* %71, %union.tree_node* %73)
  store i32 %call193, i32* %val, align 4
  %cmp194 = icmp eq i32 0, %call193
  br i1 %cmp194, label %if.then.195, label %if.end.196

if.then.195:                                      ; preds = %land.lhs.true.188
  store i32 0, i32* %retval
  br label %return

if.end.196:                                       ; preds = %land.lhs.true.188, %sw.bb.178
  %74 = load %union.tree_node*, %union.tree_node** %d1, align 8
  %cmp197 = icmp eq %union.tree_node* %74, null
  br i1 %cmp197, label %if.then.202, label %lor.lhs.false.198

lor.lhs.false.198:                                ; preds = %if.end.196
  %75 = load %union.tree_node*, %union.tree_node** %d2, align 8
  %cmp199 = icmp eq %union.tree_node* %75, null
  br i1 %cmp199, label %if.then.202, label %lor.lhs.false.200

lor.lhs.false.200:                                ; preds = %lor.lhs.false.198
  %76 = load %union.tree_node*, %union.tree_node** %d1, align 8
  %77 = load %union.tree_node*, %union.tree_node** %d2, align 8
  %cmp201 = icmp eq %union.tree_node* %76, %77
  br i1 %cmp201, label %if.then.202, label %if.end.203

if.then.202:                                      ; preds = %lor.lhs.false.200, %lor.lhs.false.198, %if.end.196
  br label %sw.epilog

if.end.203:                                       ; preds = %lor.lhs.false.200
  %78 = load %union.tree_node*, %union.tree_node** %d1, align 8
  %type204 = bitcast %union.tree_node* %78 to %struct.tree_type*
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type204, i32 0, i32 13
  %79 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %tobool205 = icmp ne %union.tree_node* %79, null
  %lnot = xor i1 %tobool205, true
  %frombool = zext i1 %lnot to i8
  store i8 %frombool, i8* %d1_zero, align 1
  %80 = load %union.tree_node*, %union.tree_node** %d2, align 8
  %type206 = bitcast %union.tree_node* %80 to %struct.tree_type*
  %maxval207 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type206, i32 0, i32 13
  %81 = load %union.tree_node*, %union.tree_node** %maxval207, align 8
  %tobool208 = icmp ne %union.tree_node* %81, null
  %lnot209 = xor i1 %tobool208, true
  %frombool210 = zext i1 %lnot209 to i8
  store i8 %frombool210, i8* %d2_zero, align 1
  %82 = load i8, i8* %d1_zero, align 1
  %tobool211 = trunc i8 %82 to i1
  br i1 %tobool211, label %land.end.226, label %land.rhs.212

land.rhs.212:                                     ; preds = %if.end.203
  %83 = load %union.tree_node*, %union.tree_node** %d1, align 8
  %type213 = bitcast %union.tree_node* %83 to %struct.tree_type*
  %minval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type213, i32 0, i32 12
  %84 = load %union.tree_node*, %union.tree_node** %minval, align 8
  %common214 = bitcast %union.tree_node* %84 to %struct.tree_common*
  %code215 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common214, i32 0, i32 2
  %bf.load216 = load i32, i32* %code215, align 8
  %bf.clear217 = and i32 %bf.load216, 255
  %cmp218 = icmp ne i32 %bf.clear217, 25
  br i1 %cmp218, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs.212
  %85 = load %union.tree_node*, %union.tree_node** %d1, align 8
  %type219 = bitcast %union.tree_node* %85 to %struct.tree_type*
  %maxval220 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type219, i32 0, i32 13
  %86 = load %union.tree_node*, %union.tree_node** %maxval220, align 8
  %common221 = bitcast %union.tree_node* %86 to %struct.tree_common*
  %code222 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common221, i32 0, i32 2
  %bf.load223 = load i32, i32* %code222, align 8
  %bf.clear224 = and i32 %bf.load223, 255
  %cmp225 = icmp ne i32 %bf.clear224, 25
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs.212
  %87 = phi i1 [ true, %land.rhs.212 ], [ %cmp225, %lor.rhs ]
  br label %land.end.226

land.end.226:                                     ; preds = %lor.end, %if.end.203
  %88 = phi i1 [ false, %if.end.203 ], [ %87, %lor.end ]
  %frombool228 = zext i1 %88 to i8
  store i8 %frombool228, i8* %d1_variable, align 1
  %89 = load i8, i8* %d2_zero, align 1
  %tobool229 = trunc i8 %89 to i1
  br i1 %tobool229, label %land.end.247, label %land.rhs.230

land.rhs.230:                                     ; preds = %land.end.226
  %90 = load %union.tree_node*, %union.tree_node** %d2, align 8
  %type231 = bitcast %union.tree_node* %90 to %struct.tree_type*
  %minval232 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type231, i32 0, i32 12
  %91 = load %union.tree_node*, %union.tree_node** %minval232, align 8
  %common233 = bitcast %union.tree_node* %91 to %struct.tree_common*
  %code234 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common233, i32 0, i32 2
  %bf.load235 = load i32, i32* %code234, align 8
  %bf.clear236 = and i32 %bf.load235, 255
  %cmp237 = icmp ne i32 %bf.clear236, 25
  br i1 %cmp237, label %lor.end.246, label %lor.rhs.238

lor.rhs.238:                                      ; preds = %land.rhs.230
  %92 = load %union.tree_node*, %union.tree_node** %d2, align 8
  %type239 = bitcast %union.tree_node* %92 to %struct.tree_type*
  %maxval240 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type239, i32 0, i32 13
  %93 = load %union.tree_node*, %union.tree_node** %maxval240, align 8
  %common241 = bitcast %union.tree_node* %93 to %struct.tree_common*
  %code242 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common241, i32 0, i32 2
  %bf.load243 = load i32, i32* %code242, align 8
  %bf.clear244 = and i32 %bf.load243, 255
  %cmp245 = icmp ne i32 %bf.clear244, 25
  br label %lor.end.246

lor.end.246:                                      ; preds = %lor.rhs.238, %land.rhs.230
  %94 = phi i1 [ true, %land.rhs.230 ], [ %cmp245, %lor.rhs.238 ]
  br label %land.end.247

land.end.247:                                     ; preds = %lor.end.246, %land.end.226
  %95 = phi i1 [ false, %land.end.226 ], [ %94, %lor.end.246 ]
  %frombool249 = zext i1 %95 to i8
  store i8 %frombool249, i8* %d2_variable, align 1
  %96 = load i8, i8* %d1_variable, align 1
  %tobool250 = trunc i8 %96 to i1
  br i1 %tobool250, label %if.then.253, label %lor.lhs.false.251

lor.lhs.false.251:                                ; preds = %land.end.247
  %97 = load i8, i8* %d2_variable, align 1
  %tobool252 = trunc i8 %97 to i1
  br i1 %tobool252, label %if.then.253, label %if.end.254

if.then.253:                                      ; preds = %lor.lhs.false.251, %land.end.247
  br label %sw.epilog

if.end.254:                                       ; preds = %lor.lhs.false.251
  %98 = load i8, i8* %d1_zero, align 1
  %tobool255 = trunc i8 %98 to i1
  br i1 %tobool255, label %land.lhs.true.256, label %if.end.259

land.lhs.true.256:                                ; preds = %if.end.254
  %99 = load i8, i8* %d2_zero, align 1
  %tobool257 = trunc i8 %99 to i1
  br i1 %tobool257, label %if.then.258, label %if.end.259

if.then.258:                                      ; preds = %land.lhs.true.256
  br label %sw.epilog

if.end.259:                                       ; preds = %land.lhs.true.256, %if.end.254
  %100 = load i8, i8* %d1_zero, align 1
  %tobool260 = trunc i8 %100 to i1
  br i1 %tobool260, label %if.then.277, label %lor.lhs.false.261

lor.lhs.false.261:                                ; preds = %if.end.259
  %101 = load i8, i8* %d2_zero, align 1
  %tobool262 = trunc i8 %101 to i1
  br i1 %tobool262, label %if.then.277, label %lor.lhs.false.263

lor.lhs.false.263:                                ; preds = %lor.lhs.false.261
  %102 = load %union.tree_node*, %union.tree_node** %d1, align 8
  %type264 = bitcast %union.tree_node* %102 to %struct.tree_type*
  %minval265 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type264, i32 0, i32 12
  %103 = load %union.tree_node*, %union.tree_node** %minval265, align 8
  %104 = load %union.tree_node*, %union.tree_node** %d2, align 8
  %type266 = bitcast %union.tree_node* %104 to %struct.tree_type*
  %minval267 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type266, i32 0, i32 12
  %105 = load %union.tree_node*, %union.tree_node** %minval267, align 8
  %call268 = call i32 @tree_int_cst_equal(%union.tree_node* %103, %union.tree_node* %105)
  %tobool269 = icmp ne i32 %call268, 0
  br i1 %tobool269, label %lor.lhs.false.270, label %if.then.277

lor.lhs.false.270:                                ; preds = %lor.lhs.false.263
  %106 = load %union.tree_node*, %union.tree_node** %d1, align 8
  %type271 = bitcast %union.tree_node* %106 to %struct.tree_type*
  %maxval272 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type271, i32 0, i32 13
  %107 = load %union.tree_node*, %union.tree_node** %maxval272, align 8
  %108 = load %union.tree_node*, %union.tree_node** %d2, align 8
  %type273 = bitcast %union.tree_node* %108 to %struct.tree_type*
  %maxval274 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type273, i32 0, i32 13
  %109 = load %union.tree_node*, %union.tree_node** %maxval274, align 8
  %call275 = call i32 @tree_int_cst_equal(%union.tree_node* %107, %union.tree_node* %109)
  %tobool276 = icmp ne i32 %call275, 0
  br i1 %tobool276, label %if.end.278, label %if.then.277

if.then.277:                                      ; preds = %lor.lhs.false.270, %lor.lhs.false.263, %lor.lhs.false.261, %if.end.259
  store i32 0, i32* %val, align 4
  br label %if.end.278

if.end.278:                                       ; preds = %if.then.277, %lor.lhs.false.270
  br label %sw.epilog

sw.bb.279:                                        ; preds = %if.end.161
  %110 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %111 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %call280 = call i32 @maybe_objc_comptypes(%union.tree_node* %110, %union.tree_node* %111, i32 0)
  %cmp281 = icmp eq i32 %call280, 1
  br i1 %cmp281, label %if.then.282, label %if.end.283

if.then.282:                                      ; preds = %sw.bb.279
  store i32 1, i32* %val, align 4
  br label %if.end.283

if.end.283:                                       ; preds = %if.then.282, %sw.bb.279
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.161
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.283, %if.end.278, %if.then.258, %if.then.253, %if.then.202, %sw.bb.176, %cond.end
  %112 = load i32, i32* %attrval, align 4
  %cmp284 = icmp eq i32 %112, 2
  br i1 %cmp284, label %land.lhs.true.285, label %cond.false.288

land.lhs.true.285:                                ; preds = %sw.epilog
  %113 = load i32, i32* %val, align 4
  %cmp286 = icmp eq i32 %113, 1
  br i1 %cmp286, label %cond.true.287, label %cond.false.288

cond.true.287:                                    ; preds = %land.lhs.true.285
  br label %cond.end.289

cond.false.288:                                   ; preds = %land.lhs.true.285, %sw.epilog
  %114 = load i32, i32* %val, align 4
  br label %cond.end.289

cond.end.289:                                     ; preds = %cond.false.288, %cond.true.287
  %cond290 = phi i32 [ 2, %cond.true.287 ], [ %114, %cond.false.288 ]
  store i32 %cond290, i32* %retval
  br label %return

return:                                           ; preds = %cond.end.289, %if.then.195, %if.then.160, %if.then.156, %if.then.150, %if.then.89, %if.then.78, %if.then
  %115 = load i32, i32* %retval
  ret i32 %115
}

declare void @pedwarn(i8*, ...) #1

declare %union.tree_node* @poplevel(i32, i32, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @function_types_compatible_p(%union.tree_node* %f1, %union.tree_node* %f2) #0 {
entry:
  %retval = alloca i32, align 4
  %f1.addr = alloca %union.tree_node*, align 8
  %f2.addr = alloca %union.tree_node*, align 8
  %args1 = alloca %union.tree_node*, align 8
  %args2 = alloca %union.tree_node*, align 8
  %val = alloca i32, align 4
  %val1 = alloca i32, align 4
  store %union.tree_node* %f1, %union.tree_node** %f1.addr, align 8
  store %union.tree_node* %f2, %union.tree_node** %f2.addr, align 8
  store i32 1, i32* %val, align 4
  %0 = load %union.tree_node*, %union.tree_node** %f1.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2 = load %union.tree_node*, %union.tree_node** %f2.addr, align 8
  %common1 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %type2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %type2, align 8
  %cmp = icmp eq %union.tree_node* %1, %3
  br i1 %cmp, label %if.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %4 = load %union.tree_node*, %union.tree_node** %f1.addr, align 8
  %common3 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %type4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3, i32 0, i32 1
  %5 = load %union.tree_node*, %union.tree_node** %type4, align 8
  %6 = load %union.tree_node*, %union.tree_node** %f2.addr, align 8
  %common5 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %type6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %type6, align 8
  %call = call i32 @comptypes(%union.tree_node* %5, %union.tree_node* %7)
  store i32 %call, i32* %val, align 4
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false, %entry
  %8 = load %union.tree_node*, %union.tree_node** %f1.addr, align 8
  %type7 = bitcast %union.tree_node* %8 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type7, i32 0, i32 1
  %9 = load %union.tree_node*, %union.tree_node** %values, align 8
  store %union.tree_node* %9, %union.tree_node** %args1, align 8
  %10 = load %union.tree_node*, %union.tree_node** %f2.addr, align 8
  %type8 = bitcast %union.tree_node* %10 to %struct.tree_type*
  %values9 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type8, i32 0, i32 1
  %11 = load %union.tree_node*, %union.tree_node** %values9, align 8
  store %union.tree_node* %11, %union.tree_node** %args2, align 8
  %12 = load %union.tree_node*, %union.tree_node** %args1, align 8
  %cmp10 = icmp eq %union.tree_node* %12, null
  br i1 %cmp10, label %if.then.11, label %if.end.24

if.then.11:                                       ; preds = %if.end
  %13 = load %union.tree_node*, %union.tree_node** %args2, align 8
  %call12 = call i32 @self_promoting_args_p(%union.tree_node* %13)
  %tobool13 = icmp ne i32 %call12, 0
  br i1 %tobool13, label %if.end.15, label %if.then.14

if.then.14:                                       ; preds = %if.then.11
  store i32 0, i32* %retval
  br label %return

if.end.15:                                        ; preds = %if.then.11
  %14 = load %union.tree_node*, %union.tree_node** %f1.addr, align 8
  %type16 = bitcast %union.tree_node* %14 to %struct.tree_type*
  %binfo = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type16, i32 0, i32 16
  %15 = load %union.tree_node*, %union.tree_node** %binfo, align 8
  %tobool17 = icmp ne %union.tree_node* %15, null
  br i1 %tobool17, label %land.lhs.true, label %if.end.23

land.lhs.true:                                    ; preds = %if.end.15
  %16 = load %union.tree_node*, %union.tree_node** %args2, align 8
  %17 = load %union.tree_node*, %union.tree_node** %f1.addr, align 8
  %type18 = bitcast %union.tree_node* %17 to %struct.tree_type*
  %binfo19 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type18, i32 0, i32 16
  %18 = load %union.tree_node*, %union.tree_node** %binfo19, align 8
  %call20 = call i32 @type_lists_compatible_p(%union.tree_node* %16, %union.tree_node* %18)
  %cmp21 = icmp ne i32 1, %call20
  br i1 %cmp21, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %land.lhs.true
  store i32 2, i32* %val, align 4
  br label %if.end.23

if.end.23:                                        ; preds = %if.then.22, %land.lhs.true, %if.end.15
  %19 = load i32, i32* %val, align 4
  store i32 %19, i32* %retval
  br label %return

if.end.24:                                        ; preds = %if.end
  %20 = load %union.tree_node*, %union.tree_node** %args2, align 8
  %cmp25 = icmp eq %union.tree_node* %20, null
  br i1 %cmp25, label %if.then.26, label %if.end.41

if.then.26:                                       ; preds = %if.end.24
  %21 = load %union.tree_node*, %union.tree_node** %args1, align 8
  %call27 = call i32 @self_promoting_args_p(%union.tree_node* %21)
  %tobool28 = icmp ne i32 %call27, 0
  br i1 %tobool28, label %if.end.30, label %if.then.29

if.then.29:                                       ; preds = %if.then.26
  store i32 0, i32* %retval
  br label %return

if.end.30:                                        ; preds = %if.then.26
  %22 = load %union.tree_node*, %union.tree_node** %f2.addr, align 8
  %type31 = bitcast %union.tree_node* %22 to %struct.tree_type*
  %binfo32 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type31, i32 0, i32 16
  %23 = load %union.tree_node*, %union.tree_node** %binfo32, align 8
  %tobool33 = icmp ne %union.tree_node* %23, null
  br i1 %tobool33, label %land.lhs.true.34, label %if.end.40

land.lhs.true.34:                                 ; preds = %if.end.30
  %24 = load %union.tree_node*, %union.tree_node** %args1, align 8
  %25 = load %union.tree_node*, %union.tree_node** %f2.addr, align 8
  %type35 = bitcast %union.tree_node* %25 to %struct.tree_type*
  %binfo36 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type35, i32 0, i32 16
  %26 = load %union.tree_node*, %union.tree_node** %binfo36, align 8
  %call37 = call i32 @type_lists_compatible_p(%union.tree_node* %24, %union.tree_node* %26)
  %cmp38 = icmp ne i32 1, %call37
  br i1 %cmp38, label %if.then.39, label %if.end.40

if.then.39:                                       ; preds = %land.lhs.true.34
  store i32 2, i32* %val, align 4
  br label %if.end.40

if.end.40:                                        ; preds = %if.then.39, %land.lhs.true.34, %if.end.30
  %27 = load i32, i32* %val, align 4
  store i32 %27, i32* %retval
  br label %return

if.end.41:                                        ; preds = %if.end.24
  %28 = load %union.tree_node*, %union.tree_node** %args1, align 8
  %29 = load %union.tree_node*, %union.tree_node** %args2, align 8
  %call42 = call i32 @type_lists_compatible_p(%union.tree_node* %28, %union.tree_node* %29)
  store i32 %call42, i32* %val1, align 4
  %30 = load i32, i32* %val1, align 4
  %cmp43 = icmp ne i32 %30, 1
  br i1 %cmp43, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.41
  %31 = load i32, i32* %val1, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end.41
  %32 = load i32, i32* %val, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %31, %cond.true ], [ %32, %cond.false ]
  store i32 %cond, i32* %retval
  br label %return

return:                                           ; preds = %cond.end, %if.end.40, %if.then.29, %if.end.23, %if.then.14, %if.then
  %33 = load i32, i32* %retval
  ret i32 %33
}

declare i32 @tree_int_cst_equal(%union.tree_node*, %union.tree_node*) #1

declare i32 @maybe_objc_comptypes(%union.tree_node*, %union.tree_node*, i32) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @c_sizeof(%union.tree_node* %type) #0 {
entry:
  %type.addr = alloca %union.tree_node*, align 8
  %code = alloca i32, align 4
  %size = alloca %union.tree_node*, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %code, align 4
  %1 = load i32, i32* %code, align 4
  %cmp = icmp eq i32 %1, 23
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load i32, i32* @pedantic, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then.3, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i32, i32* @warn_pointer_arith, align 4
  %tobool2 = icmp ne i32 %3, 0
  br i1 %tobool2, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %lor.lhs.false, %if.then
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then.3, %lor.lhs.false
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 16), align 8
  store %union.tree_node* %4, %union.tree_node** %size, align 8
  br label %if.end.28

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %code, align 4
  %cmp4 = icmp eq i32 %5, 5
  br i1 %cmp4, label %if.then.5, label %if.else.11

if.then.5:                                        ; preds = %if.else
  %6 = load i32, i32* @pedantic, align 4
  %tobool6 = icmp ne i32 %6, 0
  br i1 %tobool6, label %if.then.9, label %lor.lhs.false.7

lor.lhs.false.7:                                  ; preds = %if.then.5
  %7 = load i32, i32* @warn_pointer_arith, align 4
  %tobool8 = icmp ne i32 %7, 0
  br i1 %tobool8, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %lor.lhs.false.7, %if.then.5
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0))
  br label %if.end.10

if.end.10:                                        ; preds = %if.then.9, %lor.lhs.false.7
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 16), align 8
  store %union.tree_node* %8, %union.tree_node** %size, align 8
  br label %if.end.27

if.else.11:                                       ; preds = %if.else
  %9 = load i32, i32* %code, align 4
  %cmp12 = icmp eq i32 %9, 0
  br i1 %cmp12, label %if.then.13, label %if.else.14

if.then.13:                                       ; preds = %if.else.11
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 16), align 8
  store %union.tree_node* %10, %union.tree_node** %size, align 8
  br label %if.end.26

if.else.14:                                       ; preds = %if.else.11
  %11 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type15 = bitcast %union.tree_node* %11 to %struct.tree_type*
  %size16 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type15, i32 0, i32 2
  %12 = load %union.tree_node*, %union.tree_node** %size16, align 8
  %cmp17 = icmp ne %union.tree_node* %12, null
  br i1 %cmp17, label %if.else.19, label %if.then.18

if.then.18:                                       ; preds = %if.else.14
  call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.13, i32 0, i32 0))
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 15), align 8
  store %union.tree_node* %13, %union.tree_node** %size, align 8
  br label %if.end.25

if.else.19:                                       ; preds = %if.else.14
  %14 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type20 = bitcast %union.tree_node* %14 to %struct.tree_type*
  %size_unit = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type20, i32 0, i32 3
  %15 = load %union.tree_node*, %union.tree_node** %size_unit, align 8
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %type21 = bitcast %union.tree_node* %16 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type21, i32 0, i32 6
  %bf.load22 = load i32, i32* %precision, align 4
  %bf.clear23 = and i32 %bf.load22, 511
  %div = sdiv i32 %bf.clear23, 8
  %conv = sext i32 %div to i64
  %call = call %union.tree_node* @size_int_wide(i64 %conv, i32 0)
  %call24 = call %union.tree_node* @size_binop(i32 63, %union.tree_node* %15, %union.tree_node* %call)
  store %union.tree_node* %call24, %union.tree_node** %size, align 8
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.19, %if.then.18
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %if.then.13
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.26, %if.end.10
  br label %if.end.28

if.end.28:                                        ; preds = %if.end.27, %if.end
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 4), align 8
  %18 = load %union.tree_node*, %union.tree_node** %size, align 8
  %call29 = call %union.tree_node* @build1(i32 115, %union.tree_node* %17, %union.tree_node* %18)
  %call30 = call %union.tree_node* @fold(%union.tree_node* %call29)
  ret %union.tree_node* %call30
}

declare %union.tree_node* @size_binop(i32, %union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @size_int_wide(i64, i32) #1

declare %union.tree_node* @fold(%union.tree_node*) #1

declare %union.tree_node* @build1(i32, %union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @c_sizeof_nowarn(%union.tree_node* %type) #0 {
entry:
  %type.addr = alloca %union.tree_node*, align 8
  %code = alloca i32, align 4
  %size = alloca %union.tree_node*, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %code, align 4
  %1 = load i32, i32* %code, align 4
  %cmp = icmp eq i32 %1, 23
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %code, align 4
  %cmp2 = icmp eq i32 %2, 5
  br i1 %cmp2, label %if.then, label %lor.lhs.false.3

lor.lhs.false.3:                                  ; preds = %lor.lhs.false
  %3 = load i32, i32* %code, align 4
  %cmp4 = icmp eq i32 %3, 0
  br i1 %cmp4, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false.3, %lor.lhs.false, %entry
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 16), align 8
  store %union.tree_node* %4, %union.tree_node** %size, align 8
  br label %if.end.15

if.else:                                          ; preds = %lor.lhs.false.3
  %5 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type5 = bitcast %union.tree_node* %5 to %struct.tree_type*
  %size6 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type5, i32 0, i32 2
  %6 = load %union.tree_node*, %union.tree_node** %size6, align 8
  %cmp7 = icmp ne %union.tree_node* %6, null
  br i1 %cmp7, label %if.else.9, label %if.then.8

if.then.8:                                        ; preds = %if.else
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 15), align 8
  store %union.tree_node* %7, %union.tree_node** %size, align 8
  br label %if.end

if.else.9:                                        ; preds = %if.else
  %8 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type10 = bitcast %union.tree_node* %8 to %struct.tree_type*
  %size_unit = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type10, i32 0, i32 3
  %9 = load %union.tree_node*, %union.tree_node** %size_unit, align 8
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %type11 = bitcast %union.tree_node* %10 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type11, i32 0, i32 6
  %bf.load12 = load i32, i32* %precision, align 4
  %bf.clear13 = and i32 %bf.load12, 511
  %div = sdiv i32 %bf.clear13, 8
  %conv = sext i32 %div to i64
  %call = call %union.tree_node* @size_int_wide(i64 %conv, i32 0)
  %call14 = call %union.tree_node* @size_binop(i32 63, %union.tree_node* %9, %union.tree_node* %call)
  store %union.tree_node* %call14, %union.tree_node** %size, align 8
  br label %if.end

if.end:                                           ; preds = %if.else.9, %if.then.8
  br label %if.end.15

if.end.15:                                        ; preds = %if.end, %if.then
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 4), align 8
  %12 = load %union.tree_node*, %union.tree_node** %size, align 8
  %call16 = call %union.tree_node* @build1(i32 115, %union.tree_node* %11, %union.tree_node* %12)
  %call17 = call %union.tree_node* @fold(%union.tree_node* %call16)
  ret %union.tree_node* %call17
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @c_size_in_bytes(%union.tree_node* %type) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  %code = alloca i32, align 4
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %code, align 4
  %1 = load i32, i32* %code, align 4
  %cmp = icmp eq i32 %1, 23
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %code, align 4
  %cmp2 = icmp eq i32 %2, 5
  br i1 %cmp2, label %if.then, label %lor.lhs.false.3

lor.lhs.false.3:                                  ; preds = %lor.lhs.false
  %3 = load i32, i32* %code, align 4
  %cmp4 = icmp eq i32 %3, 0
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.3, %lor.lhs.false, %entry
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 16), align 8
  store %union.tree_node* %4, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.3
  %5 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type5 = bitcast %union.tree_node* %5 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type5, i32 0, i32 2
  %6 = load %union.tree_node*, %union.tree_node** %size, align 8
  %cmp6 = icmp ne %union.tree_node* %6, null
  br i1 %cmp6, label %if.end.14, label %lor.lhs.false.7

lor.lhs.false.7:                                  ; preds = %if.end
  %7 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common8 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %code9 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common8, i32 0, i32 2
  %bf.load10 = load i32, i32* %code9, align 8
  %bf.clear11 = and i32 %bf.load10, 255
  %cmp12 = icmp eq i32 %bf.clear11, 5
  br i1 %cmp12, label %if.end.14, label %if.then.13

if.then.13:                                       ; preds = %lor.lhs.false.7
  call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i32 0, i32 0))
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 16), align 8
  store %union.tree_node* %8, %union.tree_node** %retval
  br label %return

if.end.14:                                        ; preds = %lor.lhs.false.7, %if.end
  %9 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type15 = bitcast %union.tree_node* %9 to %struct.tree_type*
  %size_unit = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type15, i32 0, i32 3
  %10 = load %union.tree_node*, %union.tree_node** %size_unit, align 8
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %type16 = bitcast %union.tree_node* %11 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type16, i32 0, i32 6
  %bf.load17 = load i32, i32* %precision, align 4
  %bf.clear18 = and i32 %bf.load17, 511
  %div = sdiv i32 %bf.clear18, 8
  %conv = sext i32 %div to i64
  %call = call %union.tree_node* @size_int_wide(i64 %conv, i32 0)
  %call19 = call %union.tree_node* @size_binop(i32 63, %union.tree_node* %10, %union.tree_node* %call)
  store %union.tree_node* %call19, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.14, %if.then.13, %if.then
  %12 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %12
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @decl_constant_value(%union.tree_node* %decl) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %decl.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %decl, %union.tree_node** %decl.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %cmp = icmp ne %union.tree_node* %0, null
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common = bitcast %union.tree_node* %1 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %volatile_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 11
  %bf.clear = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear, 0
  br i1 %tobool, label %if.end, label %land.lhs.true.1

land.lhs.true.1:                                  ; preds = %land.lhs.true
  %2 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common2 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load3 = load i32, i32* %readonly_flag, align 8
  %bf.lshr4 = lshr i32 %bf.load3, 12
  %bf.clear5 = and i32 %bf.lshr4, 1
  %tobool6 = icmp ne i32 %bf.clear5, 0
  br i1 %tobool6, label %land.lhs.true.7, label %if.end

land.lhs.true.7:                                  ; preds = %land.lhs.true.1
  %3 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl8 = bitcast %union.tree_node* %3 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl8, i32 0, i32 12
  %4 = load %union.tree_node*, %union.tree_node** %initial, align 8
  %cmp9 = icmp ne %union.tree_node* %4, null
  br i1 %cmp9, label %land.lhs.true.10, label %if.end

land.lhs.true.10:                                 ; preds = %land.lhs.true.7
  %5 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl11 = bitcast %union.tree_node* %5 to %struct.tree_decl*
  %initial12 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl11, i32 0, i32 12
  %6 = load %union.tree_node*, %union.tree_node** %initial12, align 8
  %common13 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common13, i32 0, i32 2
  %bf.load14 = load i32, i32* %code, align 8
  %bf.clear15 = and i32 %bf.load14, 255
  %cmp16 = icmp ne i32 %bf.clear15, 0
  br i1 %cmp16, label %land.lhs.true.17, label %if.end

land.lhs.true.17:                                 ; preds = %land.lhs.true.10
  %7 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl18 = bitcast %union.tree_node* %7 to %struct.tree_decl*
  %initial19 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl18, i32 0, i32 12
  %8 = load %union.tree_node*, %union.tree_node** %initial19, align 8
  %common20 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common20, i32 0, i32 2
  %bf.load21 = load i32, i32* %constant_flag, align 8
  %bf.lshr22 = lshr i32 %bf.load21, 9
  %bf.clear23 = and i32 %bf.lshr22, 1
  %tobool24 = icmp ne i32 %bf.clear23, 0
  br i1 %tobool24, label %land.lhs.true.25, label %if.end

land.lhs.true.25:                                 ; preds = %land.lhs.true.17
  %9 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl26 = bitcast %union.tree_node* %9 to %struct.tree_decl*
  %initial27 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl26, i32 0, i32 12
  %10 = load %union.tree_node*, %union.tree_node** %initial27, align 8
  %common28 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %code29 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common28, i32 0, i32 2
  %bf.load30 = load i32, i32* %code29, align 8
  %bf.clear31 = and i32 %bf.load30, 255
  %cmp32 = icmp ne i32 %bf.clear31, 46
  br i1 %cmp32, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.25
  %11 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl33 = bitcast %union.tree_node* %11 to %struct.tree_decl*
  %initial34 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl33, i32 0, i32 12
  %12 = load %union.tree_node*, %union.tree_node** %initial34, align 8
  store %union.tree_node* %12, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true.25, %land.lhs.true.17, %land.lhs.true.10, %land.lhs.true.7, %land.lhs.true.1, %land.lhs.true, %entry
  %13 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  store %union.tree_node* %13, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %14 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %14
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @default_conversion(%union.tree_node* %exp) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %exp.addr = alloca %union.tree_node*, align 8
  %orig_exp = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %code = alloca i32, align 4
  store %union.tree_node* %exp, %union.tree_node** %exp.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %1, %union.tree_node** %type, align 8
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common2 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load = load i32, i32* %code3, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %code, align 4
  %3 = load i32, i32* %code, align 4
  %cmp = icmp eq i32 %3, 23
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* %code, align 4
  %cmp4 = icmp eq i32 %4, 18
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %call = call %union.tree_node* @default_function_array_conversion(%union.tree_node* %5)
  store %union.tree_node* %call, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common5 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %code6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5, i32 0, i32 2
  %bf.load7 = load i32, i32* %code6, align 8
  %bf.clear8 = and i32 %bf.load7, 255
  %cmp9 = icmp eq i32 %bf.clear8, 32
  br i1 %cmp9, label %if.then.10, label %if.else

if.then.10:                                       ; preds = %if.end
  %7 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %decl = bitcast %union.tree_node* %7 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 12
  %8 = load %union.tree_node*, %union.tree_node** %initial, align 8
  store %union.tree_node* %8, %union.tree_node** %exp.addr, align 8
  br label %if.end.23

if.else:                                          ; preds = %if.end
  %9 = load i32, i32* @optimize, align 4
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %land.lhs.true, label %if.end.22

land.lhs.true:                                    ; preds = %if.else
  %10 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common11 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %code12 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 2
  %bf.load13 = load i32, i32* %code12, align 8
  %bf.clear14 = and i32 %bf.load13, 255
  %cmp15 = icmp eq i32 %bf.clear14, 34
  br i1 %cmp15, label %land.lhs.true.16, label %if.end.22

land.lhs.true.16:                                 ; preds = %land.lhs.true
  %11 = load i32, i32* %code, align 4
  %cmp17 = icmp ne i32 %11, 18
  br i1 %cmp17, label %if.then.18, label %if.end.22

if.then.18:                                       ; preds = %land.lhs.true.16
  %12 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %call19 = call %union.tree_node* @decl_constant_value_for_broken_optimization(%union.tree_node* %12)
  store %union.tree_node* %call19, %union.tree_node** %exp.addr, align 8
  %13 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common20 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %type21 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common20, i32 0, i32 1
  %14 = load %union.tree_node*, %union.tree_node** %type21, align 8
  store %union.tree_node* %14, %union.tree_node** %type, align 8
  br label %if.end.22

if.end.22:                                        ; preds = %if.then.18, %land.lhs.true.16, %land.lhs.true, %if.else
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.22, %if.then.10
  %15 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  store %union.tree_node* %15, %union.tree_node** %orig_exp, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end.23
  %16 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common24 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %code25 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common24, i32 0, i32 2
  %bf.load26 = load i32, i32* %code25, align 8
  %bf.clear27 = and i32 %bf.load26, 255
  %cmp28 = icmp eq i32 %bf.clear27, 116
  br i1 %cmp28, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %while.cond
  %17 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common29 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %code30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common29, i32 0, i32 2
  %bf.load31 = load i32, i32* %code30, align 8
  %bf.clear32 = and i32 %bf.load31, 255
  %cmp33 = icmp eq i32 %bf.clear32, 115
  br i1 %cmp33, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs
  %18 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp34 = bitcast %union.tree_node* %18 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp34, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %19 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %common35 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %type36 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common35, i32 0, i32 1
  %20 = load %union.tree_node*, %union.tree_node** %type36, align 8
  %21 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common37 = bitcast %union.tree_node* %21 to %struct.tree_common*
  %type38 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common37, i32 0, i32 1
  %22 = load %union.tree_node*, %union.tree_node** %type38, align 8
  %cmp39 = icmp eq %union.tree_node* %20, %22
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %23 = phi i1 [ false, %lor.rhs ], [ %cmp39, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %while.cond
  %24 = phi i1 [ true, %while.cond ], [ %23, %land.end ]
  br i1 %24, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  %25 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp40 = bitcast %union.tree_node* %25 to %struct.tree_exp*
  %operands41 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp40, i32 0, i32 2
  %arrayidx42 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands41, i32 0, i64 0
  %26 = load %union.tree_node*, %union.tree_node** %arrayidx42, align 8
  store %union.tree_node* %26, %union.tree_node** %exp.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %lor.end
  %27 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common43 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %code44 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common43, i32 0, i32 2
  %bf.load45 = load i32, i32* %code44, align 8
  %bf.clear46 = and i32 %bf.load45, 255
  %idxprom = sext i32 %bf.clear46 to i64
  %arrayidx47 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom
  %28 = load i8, i8* %arrayidx47, align 1
  %conv = sext i8 %28 to i32
  %cmp48 = icmp eq i32 %conv, 60
  br i1 %cmp48, label %if.then.80, label %lor.lhs.false.50

lor.lhs.false.50:                                 ; preds = %while.end
  %29 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common51 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %code52 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common51, i32 0, i32 2
  %bf.load53 = load i32, i32* %code52, align 8
  %bf.clear54 = and i32 %bf.load53, 255
  %idxprom55 = sext i32 %bf.clear54 to i64
  %arrayidx56 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom55
  %30 = load i8, i8* %arrayidx56, align 1
  %conv57 = sext i8 %30 to i32
  %cmp58 = icmp eq i32 %conv57, 49
  br i1 %cmp58, label %if.then.80, label %lor.lhs.false.60

lor.lhs.false.60:                                 ; preds = %lor.lhs.false.50
  %31 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common61 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %code62 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common61, i32 0, i32 2
  %bf.load63 = load i32, i32* %code62, align 8
  %bf.clear64 = and i32 %bf.load63, 255
  %idxprom65 = sext i32 %bf.clear64 to i64
  %arrayidx66 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom65
  %32 = load i8, i8* %arrayidx66, align 1
  %conv67 = sext i8 %32 to i32
  %cmp68 = icmp eq i32 %conv67, 50
  br i1 %cmp68, label %if.then.80, label %lor.lhs.false.70

lor.lhs.false.70:                                 ; preds = %lor.lhs.false.60
  %33 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common71 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %code72 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common71, i32 0, i32 2
  %bf.load73 = load i32, i32* %code72, align 8
  %bf.clear74 = and i32 %bf.load73, 255
  %idxprom75 = sext i32 %bf.clear74 to i64
  %arrayidx76 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom75
  %34 = load i8, i8* %arrayidx76, align 1
  %conv77 = sext i8 %34 to i32
  %cmp78 = icmp eq i32 %conv77, 101
  br i1 %cmp78, label %if.then.80, label %if.end.84

if.then.80:                                       ; preds = %lor.lhs.false.70, %lor.lhs.false.60, %lor.lhs.false.50, %while.end
  %35 = load %union.tree_node*, %union.tree_node** %orig_exp, align 8
  %exp81 = bitcast %union.tree_node* %35 to %struct.tree_exp*
  %complexity = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp81, i32 0, i32 1
  %36 = load i32, i32* %complexity, align 4
  %37 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp82 = bitcast %union.tree_node* %37 to %struct.tree_exp*
  %complexity83 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp82, i32 0, i32 1
  store i32 %36, i32* %complexity83, align 4
  br label %if.end.84

if.end.84:                                        ; preds = %if.then.80, %lor.lhs.false.70
  %38 = load i32, i32* %code, align 4
  %cmp85 = icmp eq i32 %38, 10
  br i1 %cmp85, label %if.then.87, label %if.end.125

if.then.87:                                       ; preds = %if.end.84
  %39 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type88 = bitcast %union.tree_node* %39 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type88, i32 0, i32 6
  %bf.load89 = load i32, i32* %precision, align 4
  %bf.clear90 = and i32 %bf.load89, 511
  %40 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type91 = bitcast %union.tree_node* %40 to %struct.tree_type*
  %precision92 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type91, i32 0, i32 6
  %bf.load93 = load i32, i32* %precision92, align 4
  %bf.clear94 = and i32 %bf.load93, 511
  %cmp95 = icmp sgt i32 %bf.clear90, %bf.clear94
  br i1 %cmp95, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.87
  %41 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type97 = bitcast %union.tree_node* %41 to %struct.tree_type*
  %precision98 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type97, i32 0, i32 6
  %bf.load99 = load i32, i32* %precision98, align 4
  %bf.clear100 = and i32 %bf.load99, 511
  br label %cond.end

cond.false:                                       ; preds = %if.then.87
  %42 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type101 = bitcast %union.tree_node* %42 to %struct.tree_type*
  %precision102 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type101, i32 0, i32 6
  %bf.load103 = load i32, i32* %precision102, align 4
  %bf.clear104 = and i32 %bf.load103, 511
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %bf.clear100, %cond.true ], [ %bf.clear104, %cond.false ]
  %43 = load i32, i32* @flag_traditional, align 4
  %tobool105 = icmp ne i32 %43, 0
  br i1 %tobool105, label %land.rhs.117, label %lor.lhs.false.106

lor.lhs.false.106:                                ; preds = %cond.end
  %44 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type107 = bitcast %union.tree_node* %44 to %struct.tree_type*
  %precision108 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type107, i32 0, i32 6
  %bf.load109 = load i32, i32* %precision108, align 4
  %bf.clear110 = and i32 %bf.load109, 511
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type111 = bitcast %union.tree_node* %45 to %struct.tree_type*
  %precision112 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type111, i32 0, i32 6
  %bf.load113 = load i32, i32* %precision112, align 4
  %bf.clear114 = and i32 %bf.load113, 511
  %cmp115 = icmp sge i32 %bf.clear110, %bf.clear114
  br i1 %cmp115, label %land.rhs.117, label %land.end.122

land.rhs.117:                                     ; preds = %lor.lhs.false.106, %cond.end
  %46 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common118 = bitcast %union.tree_node* %46 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common118, i32 0, i32 2
  %bf.load119 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr = lshr i32 %bf.load119, 13
  %bf.clear120 = and i32 %bf.lshr, 1
  %tobool121 = icmp ne i32 %bf.clear120, 0
  br label %land.end.122

land.end.122:                                     ; preds = %land.rhs.117, %lor.lhs.false.106
  %47 = phi i1 [ false, %lor.lhs.false.106 ], [ %tobool121, %land.rhs.117 ]
  %land.ext = zext i1 %47 to i32
  %call123 = call %union.tree_node* @type_for_size(i32 %cond, i32 %land.ext)
  store %union.tree_node* %call123, %union.tree_node** %type, align 8
  %48 = load %union.tree_node*, %union.tree_node** %type, align 8
  %49 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %call124 = call %union.tree_node* @convert(%union.tree_node* %48, %union.tree_node* %49)
  store %union.tree_node* %call124, %union.tree_node** %retval
  br label %return

if.end.125:                                       ; preds = %if.end.84
  %50 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common126 = bitcast %union.tree_node* %50 to %struct.tree_common*
  %code127 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common126, i32 0, i32 2
  %bf.load128 = load i32, i32* %code127, align 8
  %bf.clear129 = and i32 %bf.load128, 255
  %cmp130 = icmp eq i32 %bf.clear129, 39
  br i1 %cmp130, label %land.lhs.true.132, label %if.end.169

land.lhs.true.132:                                ; preds = %if.end.125
  %51 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp133 = bitcast %union.tree_node* %51 to %struct.tree_exp*
  %operands134 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp133, i32 0, i32 2
  %arrayidx135 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands134, i32 0, i64 1
  %52 = load %union.tree_node*, %union.tree_node** %arrayidx135, align 8
  %decl136 = bitcast %union.tree_node* %52 to %struct.tree_decl*
  %lang_flag_4 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl136, i32 0, i32 5
  %53 = bitcast i48* %lang_flag_4 to i64*
  %bf.load137 = load i64, i64* %53, align 8
  %bf.lshr138 = lshr i64 %bf.load137, 41
  %bf.clear139 = and i64 %bf.lshr138, 1
  %bf.cast = trunc i64 %bf.clear139 to i32
  %cmp140 = icmp eq i32 %bf.cast, 1
  br i1 %cmp140, label %land.lhs.true.142, label %if.end.169

land.lhs.true.142:                                ; preds = %land.lhs.true.132
  %54 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp143 = bitcast %union.tree_node* %54 to %struct.tree_exp*
  %operands144 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp143, i32 0, i32 2
  %arrayidx145 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands144, i32 0, i64 1
  %55 = load %union.tree_node*, %union.tree_node** %arrayidx145, align 8
  %decl146 = bitcast %union.tree_node* %55 to %struct.tree_decl*
  %size = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl146, i32 0, i32 4
  %56 = load %union.tree_node*, %union.tree_node** %size, align 8
  %57 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type147 = bitcast %union.tree_node* %57 to %struct.tree_type*
  %precision148 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type147, i32 0, i32 6
  %bf.load149 = load i32, i32* %precision148, align 4
  %bf.clear150 = and i32 %bf.load149, 511
  %conv151 = zext i32 %bf.clear150 to i64
  %call152 = call i32 @compare_tree_int(%union.tree_node* %56, i64 %conv151)
  %cmp153 = icmp sgt i32 0, %call152
  br i1 %cmp153, label %if.then.155, label %if.end.169

if.then.155:                                      ; preds = %land.lhs.true.142
  %58 = load i32, i32* @flag_traditional, align 4
  %tobool156 = icmp ne i32 %58, 0
  br i1 %tobool156, label %land.lhs.true.157, label %cond.false.165

land.lhs.true.157:                                ; preds = %if.then.155
  %59 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common158 = bitcast %union.tree_node* %59 to %struct.tree_common*
  %unsigned_flag159 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common158, i32 0, i32 2
  %bf.load160 = load i32, i32* %unsigned_flag159, align 8
  %bf.lshr161 = lshr i32 %bf.load160, 13
  %bf.clear162 = and i32 %bf.lshr161, 1
  %tobool163 = icmp ne i32 %bf.clear162, 0
  br i1 %tobool163, label %cond.true.164, label %cond.false.165

cond.true.164:                                    ; preds = %land.lhs.true.157
  %60 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 6), align 8
  br label %cond.end.166

cond.false.165:                                   ; preds = %land.lhs.true.157, %if.then.155
  %61 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  br label %cond.end.166

cond.end.166:                                     ; preds = %cond.false.165, %cond.true.164
  %cond167 = phi %union.tree_node* [ %60, %cond.true.164 ], [ %61, %cond.false.165 ]
  %62 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %call168 = call %union.tree_node* @convert(%union.tree_node* %cond167, %union.tree_node* %62)
  store %union.tree_node* %call168, %union.tree_node** %retval
  br label %return

if.end.169:                                       ; preds = %land.lhs.true.142, %land.lhs.true.132, %if.end.125
  %63 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call170 = call zeroext i1 @c_promoting_integer_type_p(%union.tree_node* %63)
  br i1 %call170, label %if.then.171, label %if.end.195

if.then.171:                                      ; preds = %if.end.169
  %64 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common172 = bitcast %union.tree_node* %64 to %struct.tree_common*
  %unsigned_flag173 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common172, i32 0, i32 2
  %bf.load174 = load i32, i32* %unsigned_flag173, align 8
  %bf.lshr175 = lshr i32 %bf.load174, 13
  %bf.clear176 = and i32 %bf.lshr175, 1
  %tobool177 = icmp ne i32 %bf.clear176, 0
  br i1 %tobool177, label %land.lhs.true.178, label %if.end.193

land.lhs.true.178:                                ; preds = %if.then.171
  %65 = load i32, i32* @flag_traditional, align 4
  %tobool179 = icmp ne i32 %65, 0
  br i1 %tobool179, label %if.then.191, label %lor.lhs.false.180

lor.lhs.false.180:                                ; preds = %land.lhs.true.178
  %66 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type181 = bitcast %union.tree_node* %66 to %struct.tree_type*
  %precision182 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type181, i32 0, i32 6
  %bf.load183 = load i32, i32* %precision182, align 4
  %bf.clear184 = and i32 %bf.load183, 511
  %67 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type185 = bitcast %union.tree_node* %67 to %struct.tree_type*
  %precision186 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type185, i32 0, i32 6
  %bf.load187 = load i32, i32* %precision186, align 4
  %bf.clear188 = and i32 %bf.load187, 511
  %cmp189 = icmp eq i32 %bf.clear184, %bf.clear188
  br i1 %cmp189, label %if.then.191, label %if.end.193

if.then.191:                                      ; preds = %lor.lhs.false.180, %land.lhs.true.178
  %68 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 6), align 8
  %69 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %call192 = call %union.tree_node* @convert(%union.tree_node* %68, %union.tree_node* %69)
  store %union.tree_node* %call192, %union.tree_node** %retval
  br label %return

if.end.193:                                       ; preds = %lor.lhs.false.180, %if.then.171
  %70 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %71 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %call194 = call %union.tree_node* @convert(%union.tree_node* %70, %union.tree_node* %71)
  store %union.tree_node* %call194, %union.tree_node** %retval
  br label %return

if.end.195:                                       ; preds = %if.end.169
  %72 = load i32, i32* @flag_traditional, align 4
  %tobool196 = icmp ne i32 %72, 0
  br i1 %tobool196, label %land.lhs.true.197, label %if.end.205

land.lhs.true.197:                                ; preds = %if.end.195
  %73 = load i32, i32* @flag_allow_single_precision, align 4
  %tobool198 = icmp ne i32 %73, 0
  br i1 %tobool198, label %if.end.205, label %land.lhs.true.199

land.lhs.true.199:                                ; preds = %land.lhs.true.197
  %74 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type200 = bitcast %union.tree_node* %74 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type200, i32 0, i32 15
  %75 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %76 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 24), align 8
  %cmp201 = icmp eq %union.tree_node* %75, %76
  br i1 %cmp201, label %if.then.203, label %if.end.205

if.then.203:                                      ; preds = %land.lhs.true.199
  %77 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 25), align 8
  %78 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %call204 = call %union.tree_node* @convert(%union.tree_node* %77, %union.tree_node* %78)
  store %union.tree_node* %call204, %union.tree_node** %retval
  br label %return

if.end.205:                                       ; preds = %land.lhs.true.199, %land.lhs.true.197, %if.end.195
  %79 = load i32, i32* %code, align 4
  %cmp206 = icmp eq i32 %79, 5
  br i1 %cmp206, label %if.then.208, label %if.end.209

if.then.208:                                      ; preds = %if.end.205
  call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.15, i32 0, i32 0))
  %80 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %80, %union.tree_node** %retval
  br label %return

if.end.209:                                       ; preds = %if.end.205
  %81 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  store %union.tree_node* %81, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.209, %if.then.208, %if.then.203, %if.end.193, %if.then.191, %cond.end.166, %land.end.122, %if.then
  %82 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %82
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @default_function_array_conversion(%union.tree_node* %exp) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %exp.addr = alloca %union.tree_node*, align 8
  %orig_exp = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %code = alloca i32, align 4
  %not_lvalue = alloca i32, align 4
  %adr = alloca %union.tree_node*, align 8
  %restype = alloca %union.tree_node*, align 8
  %ptrtype = alloca %union.tree_node*, align 8
  %constp = alloca i32, align 4
  %volatilep = alloca i32, align 4
  %lvalue_array_p = alloca i32, align 4
  %op1 = alloca %union.tree_node*, align 8
  store %union.tree_node* %exp, %union.tree_node** %exp.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %1, %union.tree_node** %type, align 8
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common2 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load = load i32, i32* %code3, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %code, align 4
  store i32 0, i32* %not_lvalue, align 4
  %3 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  store %union.tree_node* %3, %union.tree_node** %orig_exp, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %4 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common4 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 2
  %bf.load6 = load i32, i32* %code5, align 8
  %bf.clear7 = and i32 %bf.load6, 255
  %cmp = icmp eq i32 %bf.clear7, 116
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %while.cond
  %5 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common8 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code9 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common8, i32 0, i32 2
  %bf.load10 = load i32, i32* %code9, align 8
  %bf.clear11 = and i32 %bf.load10, 255
  %cmp12 = icmp eq i32 %bf.clear11, 115
  br i1 %cmp12, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs
  %6 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp13 = bitcast %union.tree_node* %6 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp13, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %common14 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %type15 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common14, i32 0, i32 1
  %8 = load %union.tree_node*, %union.tree_node** %type15, align 8
  %9 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common16 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %type17 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common16, i32 0, i32 1
  %10 = load %union.tree_node*, %union.tree_node** %type17, align 8
  %cmp18 = icmp eq %union.tree_node* %8, %10
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %11 = phi i1 [ false, %lor.rhs ], [ %cmp18, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %while.cond
  %12 = phi i1 [ true, %while.cond ], [ %11, %land.end ]
  br i1 %12, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  %13 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common19 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %code20 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common19, i32 0, i32 2
  %bf.load21 = load i32, i32* %code20, align 8
  %bf.clear22 = and i32 %bf.load21, 255
  %cmp23 = icmp eq i32 %bf.clear22, 116
  br i1 %cmp23, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  store i32 1, i32* %not_lvalue, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body
  %14 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp24 = bitcast %union.tree_node* %14 to %struct.tree_exp*
  %operands25 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp24, i32 0, i32 2
  %arrayidx26 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands25, i32 0, i64 0
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx26, align 8
  store %union.tree_node* %15, %union.tree_node** %exp.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %lor.end
  %16 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common27 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %code28 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common27, i32 0, i32 2
  %bf.load29 = load i32, i32* %code28, align 8
  %bf.clear30 = and i32 %bf.load29, 255
  %idxprom = sext i32 %bf.clear30 to i64
  %arrayidx31 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom
  %17 = load i8, i8* %arrayidx31, align 1
  %conv = sext i8 %17 to i32
  %cmp32 = icmp eq i32 %conv, 60
  br i1 %cmp32, label %if.then.63, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.end
  %18 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common34 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %code35 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common34, i32 0, i32 2
  %bf.load36 = load i32, i32* %code35, align 8
  %bf.clear37 = and i32 %bf.load36, 255
  %idxprom38 = sext i32 %bf.clear37 to i64
  %arrayidx39 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom38
  %19 = load i8, i8* %arrayidx39, align 1
  %conv40 = sext i8 %19 to i32
  %cmp41 = icmp eq i32 %conv40, 49
  br i1 %cmp41, label %if.then.63, label %lor.lhs.false.43

lor.lhs.false.43:                                 ; preds = %lor.lhs.false
  %20 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common44 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %code45 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common44, i32 0, i32 2
  %bf.load46 = load i32, i32* %code45, align 8
  %bf.clear47 = and i32 %bf.load46, 255
  %idxprom48 = sext i32 %bf.clear47 to i64
  %arrayidx49 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom48
  %21 = load i8, i8* %arrayidx49, align 1
  %conv50 = sext i8 %21 to i32
  %cmp51 = icmp eq i32 %conv50, 50
  br i1 %cmp51, label %if.then.63, label %lor.lhs.false.53

lor.lhs.false.53:                                 ; preds = %lor.lhs.false.43
  %22 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common54 = bitcast %union.tree_node* %22 to %struct.tree_common*
  %code55 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common54, i32 0, i32 2
  %bf.load56 = load i32, i32* %code55, align 8
  %bf.clear57 = and i32 %bf.load56, 255
  %idxprom58 = sext i32 %bf.clear57 to i64
  %arrayidx59 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom58
  %23 = load i8, i8* %arrayidx59, align 1
  %conv60 = sext i8 %23 to i32
  %cmp61 = icmp eq i32 %conv60, 101
  br i1 %cmp61, label %if.then.63, label %if.end.67

if.then.63:                                       ; preds = %lor.lhs.false.53, %lor.lhs.false.43, %lor.lhs.false, %while.end
  %24 = load %union.tree_node*, %union.tree_node** %orig_exp, align 8
  %exp64 = bitcast %union.tree_node* %24 to %struct.tree_exp*
  %complexity = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp64, i32 0, i32 1
  %25 = load i32, i32* %complexity, align 4
  %26 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp65 = bitcast %union.tree_node* %26 to %struct.tree_exp*
  %complexity66 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp65, i32 0, i32 1
  store i32 %25, i32* %complexity66, align 4
  br label %if.end.67

if.end.67:                                        ; preds = %if.then.63, %lor.lhs.false.53
  %27 = load i32, i32* %code, align 4
  %cmp68 = icmp eq i32 %27, 23
  br i1 %cmp68, label %if.then.70, label %if.end.71

if.then.70:                                       ; preds = %if.end.67
  %28 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %call = call %union.tree_node* @build_unary_op(i32 121, %union.tree_node* %28, i32 0)
  store %union.tree_node* %call, %union.tree_node** %retval
  br label %return

if.end.71:                                        ; preds = %if.end.67
  %29 = load i32, i32* %code, align 4
  %cmp72 = icmp eq i32 %29, 18
  br i1 %cmp72, label %if.then.74, label %if.end.245

if.then.74:                                       ; preds = %if.end.71
  %30 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common75 = bitcast %union.tree_node* %30 to %struct.tree_common*
  %type76 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common75, i32 0, i32 1
  %31 = load %union.tree_node*, %union.tree_node** %type76, align 8
  store %union.tree_node* %31, %union.tree_node** %restype, align 8
  store i32 0, i32* %constp, align 4
  store i32 0, i32* %volatilep, align 4
  %32 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common77 = bitcast %union.tree_node* %32 to %struct.tree_common*
  %code78 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common77, i32 0, i32 2
  %bf.load79 = load i32, i32* %code78, align 8
  %bf.clear80 = and i32 %bf.load79, 255
  %idxprom81 = sext i32 %bf.clear80 to i64
  %arrayidx82 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom81
  %33 = load i8, i8* %arrayidx82, align 1
  %conv83 = sext i8 %33 to i32
  %cmp84 = icmp eq i32 %conv83, 114
  br i1 %cmp84, label %if.then.96, label %lor.lhs.false.86

lor.lhs.false.86:                                 ; preds = %if.then.74
  %34 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common87 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %code88 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common87, i32 0, i32 2
  %bf.load89 = load i32, i32* %code88, align 8
  %bf.clear90 = and i32 %bf.load89, 255
  %idxprom91 = sext i32 %bf.clear90 to i64
  %arrayidx92 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom91
  %35 = load i8, i8* %arrayidx92, align 1
  %conv93 = sext i8 %35 to i32
  %cmp94 = icmp eq i32 %conv93, 100
  br i1 %cmp94, label %if.then.96, label %if.end.104

if.then.96:                                       ; preds = %lor.lhs.false.86, %if.then.74
  %36 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common97 = bitcast %union.tree_node* %36 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common97, i32 0, i32 2
  %bf.load98 = load i32, i32* %readonly_flag, align 8
  %bf.lshr = lshr i32 %bf.load98, 12
  %bf.clear99 = and i32 %bf.lshr, 1
  store i32 %bf.clear99, i32* %constp, align 4
  %37 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common100 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common100, i32 0, i32 2
  %bf.load101 = load i32, i32* %volatile_flag, align 8
  %bf.lshr102 = lshr i32 %bf.load101, 11
  %bf.clear103 = and i32 %bf.lshr102, 1
  store i32 %bf.clear103, i32* %volatilep, align 4
  br label %if.end.104

if.end.104:                                       ; preds = %if.then.96, %lor.lhs.false.86
  %38 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common105 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %readonly_flag106 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common105, i32 0, i32 2
  %bf.load107 = load i32, i32* %readonly_flag106, align 8
  %bf.lshr108 = lshr i32 %bf.load107, 12
  %bf.clear109 = and i32 %bf.lshr108, 1
  %mul = mul nsw i32 %bf.clear109, 1
  %39 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common110 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %volatile_flag111 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common110, i32 0, i32 2
  %bf.load112 = load i32, i32* %volatile_flag111, align 8
  %bf.lshr113 = lshr i32 %bf.load112, 11
  %bf.clear114 = and i32 %bf.lshr113, 1
  %mul115 = mul nsw i32 %bf.clear114, 2
  %or = or i32 %mul, %mul115
  %40 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type116 = bitcast %union.tree_node* %40 to %struct.tree_type*
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type116, i32 0, i32 6
  %bf.load117 = load i32, i32* %restrict_flag, align 4
  %bf.lshr118 = lshr i32 %bf.load117, 21
  %bf.clear119 = and i32 %bf.lshr118, 1
  %mul120 = mul nsw i32 %bf.clear119, 4
  %or121 = or i32 %or, %mul120
  %41 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common122 = bitcast %union.tree_node* %41 to %struct.tree_common*
  %code123 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common122, i32 0, i32 2
  %bf.load124 = load i32, i32* %code123, align 8
  %bf.clear125 = and i32 %bf.load124, 255
  %cmp126 = icmp eq i32 %bf.clear125, 20
  br i1 %cmp126, label %land.rhs.128, label %land.end.131

land.rhs.128:                                     ; preds = %if.end.104
  %42 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common129 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %type130 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common129, i32 0, i32 1
  %43 = load %union.tree_node*, %union.tree_node** %type130, align 8
  %tobool = icmp ne %union.tree_node* %43, null
  br label %land.end.131

land.end.131:                                     ; preds = %land.rhs.128, %if.end.104
  %44 = phi i1 [ false, %if.end.104 ], [ %tobool, %land.rhs.128 ]
  %land.ext = zext i1 %44 to i32
  %mul132 = mul nsw i32 %land.ext, 8
  %or133 = or i32 %or121, %mul132
  %tobool134 = icmp ne i32 %or133, 0
  br i1 %tobool134, label %if.then.139, label %lor.lhs.false.135

lor.lhs.false.135:                                ; preds = %land.end.131
  %45 = load i32, i32* %constp, align 4
  %tobool136 = icmp ne i32 %45, 0
  br i1 %tobool136, label %if.then.139, label %lor.lhs.false.137

lor.lhs.false.137:                                ; preds = %lor.lhs.false.135
  %46 = load i32, i32* %volatilep, align 4
  %tobool138 = icmp ne i32 %46, 0
  br i1 %tobool138, label %if.then.139, label %if.end.179

if.then.139:                                      ; preds = %lor.lhs.false.137, %lor.lhs.false.135, %land.end.131
  %47 = load %union.tree_node*, %union.tree_node** %restype, align 8
  %48 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common140 = bitcast %union.tree_node* %48 to %struct.tree_common*
  %readonly_flag141 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common140, i32 0, i32 2
  %bf.load142 = load i32, i32* %readonly_flag141, align 8
  %bf.lshr143 = lshr i32 %bf.load142, 12
  %bf.clear144 = and i32 %bf.lshr143, 1
  %mul145 = mul nsw i32 %bf.clear144, 1
  %49 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common146 = bitcast %union.tree_node* %49 to %struct.tree_common*
  %volatile_flag147 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common146, i32 0, i32 2
  %bf.load148 = load i32, i32* %volatile_flag147, align 8
  %bf.lshr149 = lshr i32 %bf.load148, 11
  %bf.clear150 = and i32 %bf.lshr149, 1
  %mul151 = mul nsw i32 %bf.clear150, 2
  %or152 = or i32 %mul145, %mul151
  %50 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type153 = bitcast %union.tree_node* %50 to %struct.tree_type*
  %restrict_flag154 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type153, i32 0, i32 6
  %bf.load155 = load i32, i32* %restrict_flag154, align 4
  %bf.lshr156 = lshr i32 %bf.load155, 21
  %bf.clear157 = and i32 %bf.lshr156, 1
  %mul158 = mul nsw i32 %bf.clear157, 4
  %or159 = or i32 %or152, %mul158
  %51 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common160 = bitcast %union.tree_node* %51 to %struct.tree_common*
  %code161 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common160, i32 0, i32 2
  %bf.load162 = load i32, i32* %code161, align 8
  %bf.clear163 = and i32 %bf.load162, 255
  %cmp164 = icmp eq i32 %bf.clear163, 20
  br i1 %cmp164, label %land.rhs.166, label %land.end.170

land.rhs.166:                                     ; preds = %if.then.139
  %52 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common167 = bitcast %union.tree_node* %52 to %struct.tree_common*
  %type168 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common167, i32 0, i32 1
  %53 = load %union.tree_node*, %union.tree_node** %type168, align 8
  %tobool169 = icmp ne %union.tree_node* %53, null
  br label %land.end.170

land.end.170:                                     ; preds = %land.rhs.166, %if.then.139
  %54 = phi i1 [ false, %if.then.139 ], [ %tobool169, %land.rhs.166 ]
  %land.ext171 = zext i1 %54 to i32
  %mul172 = mul nsw i32 %land.ext171, 8
  %or173 = or i32 %or159, %mul172
  %55 = load i32, i32* %constp, align 4
  %mul174 = mul nsw i32 %55, 1
  %or175 = or i32 %or173, %mul174
  %56 = load i32, i32* %volatilep, align 4
  %mul176 = mul nsw i32 %56, 2
  %or177 = or i32 %or175, %mul176
  %call178 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %47, i32 %or177)
  store %union.tree_node* %call178, %union.tree_node** %restype, align 8
  br label %if.end.179

if.end.179:                                       ; preds = %land.end.170, %lor.lhs.false.137
  %57 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common180 = bitcast %union.tree_node* %57 to %struct.tree_common*
  %code181 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common180, i32 0, i32 2
  %bf.load182 = load i32, i32* %code181, align 8
  %bf.clear183 = and i32 %bf.load182, 255
  %cmp184 = icmp eq i32 %bf.clear183, 41
  br i1 %cmp184, label %if.then.186, label %if.end.192

if.then.186:                                      ; preds = %if.end.179
  %58 = load %union.tree_node*, %union.tree_node** %restype, align 8
  %type187 = bitcast %union.tree_node* %58 to %struct.tree_type*
  %pointer_to = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type187, i32 0, i32 8
  %59 = load %union.tree_node*, %union.tree_node** %pointer_to, align 8
  %60 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp188 = bitcast %union.tree_node* %60 to %struct.tree_exp*
  %operands189 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp188, i32 0, i32 2
  %arrayidx190 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands189, i32 0, i64 0
  %61 = load %union.tree_node*, %union.tree_node** %arrayidx190, align 8
  %call191 = call %union.tree_node* @convert(%union.tree_node* %59, %union.tree_node* %61)
  store %union.tree_node* %call191, %union.tree_node** %retval
  br label %return

if.end.192:                                       ; preds = %if.end.179
  %62 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common193 = bitcast %union.tree_node* %62 to %struct.tree_common*
  %code194 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common193, i32 0, i32 2
  %bf.load195 = load i32, i32* %code194, align 8
  %bf.clear196 = and i32 %bf.load195, 255
  %cmp197 = icmp eq i32 %bf.clear196, 47
  br i1 %cmp197, label %if.then.199, label %if.end.210

if.then.199:                                      ; preds = %if.end.192
  %63 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp200 = bitcast %union.tree_node* %63 to %struct.tree_exp*
  %operands201 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp200, i32 0, i32 2
  %arrayidx202 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands201, i32 0, i64 1
  %64 = load %union.tree_node*, %union.tree_node** %arrayidx202, align 8
  %call203 = call %union.tree_node* @default_conversion(%union.tree_node* %64)
  store %union.tree_node* %call203, %union.tree_node** %op1, align 8
  %65 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common204 = bitcast %union.tree_node* %65 to %struct.tree_common*
  %type205 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common204, i32 0, i32 1
  %66 = load %union.tree_node*, %union.tree_node** %type205, align 8
  %67 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp206 = bitcast %union.tree_node* %67 to %struct.tree_exp*
  %operands207 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp206, i32 0, i32 2
  %arrayidx208 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands207, i32 0, i64 0
  %68 = load %union.tree_node*, %union.tree_node** %arrayidx208, align 8
  %69 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call209 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %66, %union.tree_node* %68, %union.tree_node* %69)
  store %union.tree_node* %call209, %union.tree_node** %retval
  br label %return

if.end.210:                                       ; preds = %if.end.192
  %70 = load i32, i32* %not_lvalue, align 4
  %tobool211 = icmp ne i32 %70, 0
  br i1 %tobool211, label %land.end.215, label %land.rhs.212

land.rhs.212:                                     ; preds = %if.end.210
  %71 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %call213 = call i32 @lvalue_p(%union.tree_node* %71)
  %tobool214 = icmp ne i32 %call213, 0
  br label %land.end.215

land.end.215:                                     ; preds = %land.rhs.212, %if.end.210
  %72 = phi i1 [ false, %if.end.210 ], [ %tobool214, %land.rhs.212 ]
  %land.ext216 = zext i1 %72 to i32
  store i32 %land.ext216, i32* %lvalue_array_p, align 4
  %73 = load i32, i32* @flag_isoc99, align 4
  %tobool217 = icmp ne i32 %73, 0
  br i1 %tobool217, label %if.end.220, label %land.lhs.true

land.lhs.true:                                    ; preds = %land.end.215
  %74 = load i32, i32* %lvalue_array_p, align 4
  %tobool218 = icmp ne i32 %74, 0
  br i1 %tobool218, label %if.end.220, label %if.then.219

if.then.219:                                      ; preds = %land.lhs.true
  %75 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  store %union.tree_node* %75, %union.tree_node** %retval
  br label %return

if.end.220:                                       ; preds = %land.lhs.true, %land.end.215
  %76 = load %union.tree_node*, %union.tree_node** %restype, align 8
  %call221 = call %union.tree_node* @build_pointer_type(%union.tree_node* %76)
  store %union.tree_node* %call221, %union.tree_node** %ptrtype, align 8
  %77 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common222 = bitcast %union.tree_node* %77 to %struct.tree_common*
  %code223 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common222, i32 0, i32 2
  %bf.load224 = load i32, i32* %code223, align 8
  %bf.clear225 = and i32 %bf.load224, 255
  %cmp226 = icmp eq i32 %bf.clear225, 34
  br i1 %cmp226, label %if.then.228, label %if.end.242

if.then.228:                                      ; preds = %if.end.220
  %78 = load %union.tree_node*, %union.tree_node** %ptrtype, align 8
  %79 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %call229 = call %union.tree_node* @build1(i32 121, %union.tree_node* %78, %union.tree_node* %79)
  store %union.tree_node* %call229, %union.tree_node** %adr, align 8
  %80 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %call230 = call i32 @mark_addressable(%union.tree_node* %80)
  %cmp231 = icmp eq i32 %call230, 0
  br i1 %cmp231, label %if.then.233, label %if.end.234

if.then.233:                                      ; preds = %if.then.228
  %81 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %81, %union.tree_node** %retval
  br label %return

if.end.234:                                       ; preds = %if.then.228
  %82 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %call235 = call i32 @staticp(%union.tree_node* %82)
  %83 = load %union.tree_node*, %union.tree_node** %adr, align 8
  %common236 = bitcast %union.tree_node* %83 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common236, i32 0, i32 2
  %bf.load237 = load i32, i32* %constant_flag, align 8
  %bf.value = and i32 %call235, 1
  %bf.shl = shl i32 %bf.value, 9
  %bf.clear238 = and i32 %bf.load237, -513
  %bf.set = or i32 %bf.clear238, %bf.shl
  store i32 %bf.set, i32* %constant_flag, align 8
  %84 = load %union.tree_node*, %union.tree_node** %adr, align 8
  %common239 = bitcast %union.tree_node* %84 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common239, i32 0, i32 2
  %bf.load240 = load i32, i32* %side_effects_flag, align 8
  %bf.clear241 = and i32 %bf.load240, -257
  store i32 %bf.clear241, i32* %side_effects_flag, align 8
  %85 = load %union.tree_node*, %union.tree_node** %adr, align 8
  store %union.tree_node* %85, %union.tree_node** %retval
  br label %return

if.end.242:                                       ; preds = %if.end.220
  %86 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %call243 = call %union.tree_node* @build_unary_op(i32 121, %union.tree_node* %86, i32 1)
  store %union.tree_node* %call243, %union.tree_node** %adr, align 8
  %87 = load %union.tree_node*, %union.tree_node** %ptrtype, align 8
  %88 = load %union.tree_node*, %union.tree_node** %adr, align 8
  %call244 = call %union.tree_node* @convert(%union.tree_node* %87, %union.tree_node* %88)
  store %union.tree_node* %call244, %union.tree_node** %retval
  br label %return

if.end.245:                                       ; preds = %if.end.71
  %89 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  store %union.tree_node* %89, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.245, %if.end.242, %if.end.234, %if.then.233, %if.then.219, %if.then.199, %if.then.186, %if.then.70
  %90 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %90
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @decl_constant_value_for_broken_optimization(%union.tree_node* %decl) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %decl.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %decl, %union.tree_node** %decl.addr, align 8
  %0 = load i32, i32* @pedantic, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl1 = bitcast %union.tree_node* %1 to %struct.tree_decl*
  %mode = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1, i32 0, i32 5
  %2 = bitcast i48* %mode to i64*
  %bf.load = load i64, i64* %2, align 8
  %bf.clear = and i64 %bf.load, 255
  %bf.cast = trunc i64 %bf.clear to i32
  %cmp = icmp eq i32 %bf.cast, 51
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  store %union.tree_node* %3, %union.tree_node** %retval
  br label %return

if.else:                                          ; preds = %lor.lhs.false
  %4 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %call = call %union.tree_node* @decl_constant_value(%union.tree_node* %4)
  store %union.tree_node* %call, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.else, %if.then
  %5 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %5
}

declare %union.tree_node* @convert(%union.tree_node*, %union.tree_node*) #1

declare i32 @compare_tree_int(%union.tree_node*, i64) #1

declare zeroext i1 @c_promoting_integer_type_p(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_component_ref(%union.tree_node* %datum, %union.tree_node* %component) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %datum.addr = alloca %union.tree_node*, align 8
  %component.addr = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %code = alloca i32, align 4
  %field = alloca %union.tree_node*, align 8
  %ref = alloca %union.tree_node*, align 8
  %value = alloca %union.tree_node*, align 8
  %subdatum = alloca %union.tree_node*, align 8
  store %union.tree_node* %datum, %union.tree_node** %datum.addr, align 8
  store %union.tree_node* %component, %union.tree_node** %component.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %datum.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %1, %union.tree_node** %type, align 8
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common2 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load = load i32, i32* %code3, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %code, align 4
  store %union.tree_node* null, %union.tree_node** %field, align 8
  %3 = load %union.tree_node*, %union.tree_node** %datum.addr, align 8
  %common4 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 2
  %bf.load6 = load i32, i32* %code5, align 8
  %bf.clear7 = and i32 %bf.load6, 255
  switch i32 %bf.clear7, label %sw.default [
    i32 47, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry
  %4 = load %union.tree_node*, %union.tree_node** %datum.addr, align 8
  %exp = bitcast %union.tree_node* %4 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 1
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %6 = load %union.tree_node*, %union.tree_node** %component.addr, align 8
  %call = call %union.tree_node* @build_component_ref(%union.tree_node* %5, %union.tree_node* %6)
  store %union.tree_node* %call, %union.tree_node** %value, align 8
  %7 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common8 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %type9 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common8, i32 0, i32 1
  %8 = load %union.tree_node*, %union.tree_node** %type9, align 8
  %9 = load %union.tree_node*, %union.tree_node** %datum.addr, align 8
  %exp10 = bitcast %union.tree_node* %9 to %struct.tree_exp*
  %operands11 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp10, i32 0, i32 2
  %arrayidx12 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands11, i32 0, i64 0
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx12, align 8
  %11 = load %union.tree_node*, %union.tree_node** %value, align 8
  %call13 = call %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %11)
  %call14 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %8, %union.tree_node* %10, %union.tree_node* %call13)
  store %union.tree_node* %call14, %union.tree_node** %retval
  br label %return

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  %12 = load i32, i32* %code, align 4
  %cmp = icmp eq i32 %12, 20
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.epilog
  %13 = load i32, i32* %code, align 4
  %cmp15 = icmp eq i32 %13, 21
  br i1 %cmp15, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %sw.epilog
  %14 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type16 = bitcast %union.tree_node* %14 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type16, i32 0, i32 2
  %15 = load %union.tree_node*, %union.tree_node** %size, align 8
  %cmp17 = icmp ne %union.tree_node* %15, null
  br i1 %cmp17, label %if.end, label %if.then.18

if.then.18:                                       ; preds = %if.then
  %16 = load %union.tree_node*, %union.tree_node** %type, align 8
  call void @incomplete_type_error(%union.tree_node* null, %union.tree_node* %16)
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %17, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %if.then
  %18 = load %union.tree_node*, %union.tree_node** %datum.addr, align 8
  %19 = load %union.tree_node*, %union.tree_node** %component.addr, align 8
  %call19 = call %union.tree_node* @lookup_field(%union.tree_node* %18, %union.tree_node* %19)
  store %union.tree_node* %call19, %union.tree_node** %field, align 8
  %20 = load %union.tree_node*, %union.tree_node** %field, align 8
  %tobool = icmp ne %union.tree_node* %20, null
  br i1 %tobool, label %if.end.22, label %if.then.20

if.then.20:                                       ; preds = %if.end
  %21 = load i32, i32* %code, align 4
  %cmp21 = icmp eq i32 %21, 20
  %cond = select i1 %cmp21, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0)
  %22 = load %union.tree_node*, %union.tree_node** %component.addr, align 8
  %identifier = bitcast %union.tree_node* %22 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %23 = load i8*, i8** %str, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16, i32 0, i32 0), i8* %cond, i8* %23)
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %24, %union.tree_node** %retval
  br label %return

if.end.22:                                        ; preds = %if.end
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.22
  %25 = load %union.tree_node*, %union.tree_node** %field, align 8
  %tobool23 = icmp ne %union.tree_node* %25, null
  br i1 %tobool23, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %26 = load %union.tree_node*, %union.tree_node** %field, align 8
  %list = bitcast %union.tree_node* %26 to %struct.tree_list*
  %value24 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %27 = load %union.tree_node*, %union.tree_node** %value24, align 8
  store %union.tree_node* %27, %union.tree_node** %subdatum, align 8
  %28 = load %union.tree_node*, %union.tree_node** %subdatum, align 8
  %common25 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %type26 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common25, i32 0, i32 1
  %29 = load %union.tree_node*, %union.tree_node** %type26, align 8
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp27 = icmp eq %union.tree_node* %29, %30
  br i1 %cmp27, label %if.then.28, label %if.end.29

if.then.28:                                       ; preds = %for.body
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %31, %union.tree_node** %retval
  br label %return

if.end.29:                                        ; preds = %for.body
  %32 = load %union.tree_node*, %union.tree_node** %subdatum, align 8
  %common30 = bitcast %union.tree_node* %32 to %struct.tree_common*
  %type31 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common30, i32 0, i32 1
  %33 = load %union.tree_node*, %union.tree_node** %type31, align 8
  %34 = load %union.tree_node*, %union.tree_node** %datum.addr, align 8
  %35 = load %union.tree_node*, %union.tree_node** %subdatum, align 8
  %call32 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 39, %union.tree_node* %33, %union.tree_node* %34, %union.tree_node* %35)
  store %union.tree_node* %call32, %union.tree_node** %ref, align 8
  %36 = load %union.tree_node*, %union.tree_node** %datum.addr, align 8
  %common33 = bitcast %union.tree_node* %36 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common33, i32 0, i32 2
  %bf.load34 = load i32, i32* %readonly_flag, align 8
  %bf.lshr = lshr i32 %bf.load34, 12
  %bf.clear35 = and i32 %bf.lshr, 1
  %tobool36 = icmp ne i32 %bf.clear35, 0
  br i1 %tobool36, label %if.then.44, label %lor.lhs.false.37

lor.lhs.false.37:                                 ; preds = %if.end.29
  %37 = load %union.tree_node*, %union.tree_node** %subdatum, align 8
  %common38 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %readonly_flag39 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common38, i32 0, i32 2
  %bf.load40 = load i32, i32* %readonly_flag39, align 8
  %bf.lshr41 = lshr i32 %bf.load40, 12
  %bf.clear42 = and i32 %bf.lshr41, 1
  %tobool43 = icmp ne i32 %bf.clear42, 0
  br i1 %tobool43, label %if.then.44, label %if.end.49

if.then.44:                                       ; preds = %lor.lhs.false.37, %if.end.29
  %38 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %common45 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %readonly_flag46 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common45, i32 0, i32 2
  %bf.load47 = load i32, i32* %readonly_flag46, align 8
  %bf.clear48 = and i32 %bf.load47, -4097
  %bf.set = or i32 %bf.clear48, 4096
  store i32 %bf.set, i32* %readonly_flag46, align 8
  br label %if.end.49

if.end.49:                                        ; preds = %if.then.44, %lor.lhs.false.37
  %39 = load %union.tree_node*, %union.tree_node** %datum.addr, align 8
  %common50 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common50, i32 0, i32 2
  %bf.load51 = load i32, i32* %volatile_flag, align 8
  %bf.lshr52 = lshr i32 %bf.load51, 11
  %bf.clear53 = and i32 %bf.lshr52, 1
  %tobool54 = icmp ne i32 %bf.clear53, 0
  br i1 %tobool54, label %if.then.62, label %lor.lhs.false.55

lor.lhs.false.55:                                 ; preds = %if.end.49
  %40 = load %union.tree_node*, %union.tree_node** %subdatum, align 8
  %common56 = bitcast %union.tree_node* %40 to %struct.tree_common*
  %volatile_flag57 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common56, i32 0, i32 2
  %bf.load58 = load i32, i32* %volatile_flag57, align 8
  %bf.lshr59 = lshr i32 %bf.load58, 11
  %bf.clear60 = and i32 %bf.lshr59, 1
  %tobool61 = icmp ne i32 %bf.clear60, 0
  br i1 %tobool61, label %if.then.62, label %if.end.68

if.then.62:                                       ; preds = %lor.lhs.false.55, %if.end.49
  %41 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %common63 = bitcast %union.tree_node* %41 to %struct.tree_common*
  %volatile_flag64 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common63, i32 0, i32 2
  %bf.load65 = load i32, i32* %volatile_flag64, align 8
  %bf.clear66 = and i32 %bf.load65, -2049
  %bf.set67 = or i32 %bf.clear66, 2048
  store i32 %bf.set67, i32* %volatile_flag64, align 8
  br label %if.end.68

if.end.68:                                        ; preds = %if.then.62, %lor.lhs.false.55
  %42 = load %union.tree_node*, %union.tree_node** %subdatum, align 8
  %common69 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %deprecated_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common69, i32 0, i32 2
  %bf.load70 = load i32, i32* %deprecated_flag, align 8
  %bf.lshr71 = lshr i32 %bf.load70, 23
  %bf.clear72 = and i32 %bf.lshr71, 1
  %tobool73 = icmp ne i32 %bf.clear72, 0
  br i1 %tobool73, label %if.then.74, label %if.end.75

if.then.74:                                       ; preds = %if.end.68
  %43 = load %union.tree_node*, %union.tree_node** %subdatum, align 8
  call void @warn_deprecated_use(%union.tree_node* %43)
  br label %if.end.75

if.end.75:                                        ; preds = %if.then.74, %if.end.68
  %44 = load %union.tree_node*, %union.tree_node** %ref, align 8
  store %union.tree_node* %44, %union.tree_node** %datum.addr, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end.75
  %45 = load %union.tree_node*, %union.tree_node** %field, align 8
  %common76 = bitcast %union.tree_node* %45 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common76, i32 0, i32 0
  %46 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %46, %union.tree_node** %field, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %47 = load %union.tree_node*, %union.tree_node** %ref, align 8
  store %union.tree_node* %47, %union.tree_node** %retval
  br label %return

if.else:                                          ; preds = %lor.lhs.false
  %48 = load i32, i32* %code, align 4
  %cmp77 = icmp ne i32 %48, 0
  br i1 %cmp77, label %if.then.78, label %if.end.82

if.then.78:                                       ; preds = %if.else
  %49 = load %union.tree_node*, %union.tree_node** %component.addr, align 8
  %identifier79 = bitcast %union.tree_node* %49 to %struct.tree_identifier*
  %id80 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier79, i32 0, i32 1
  %str81 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id80, i32 0, i32 1
  %50 = load i8*, i8** %str81, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.18, i32 0, i32 0), i8* %50)
  br label %if.end.82

if.end.82:                                        ; preds = %if.then.78, %if.else
  br label %if.end.83

if.end.83:                                        ; preds = %if.end.82
  %51 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %51, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.83, %for.end, %if.then.28, %if.then.20, %if.then.18, %sw.bb
  %52 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %52
}

declare %union.tree_node* @build(i32, %union.tree_node*, ...) #1

declare %union.tree_node* @pedantic_non_lvalue(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @lookup_field(%union.tree_node* %decl, %union.tree_node* %component) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %decl.addr = alloca %union.tree_node*, align 8
  %component.addr = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %field = alloca %union.tree_node*, align 8
  %bot = alloca i32, align 4
  %top = alloca i32, align 4
  %half = alloca i32, align 4
  %field_array = alloca %union.tree_node**, align 8
  %anon = alloca %union.tree_node*, align 8
  %anon94 = alloca %union.tree_node*, align 8
  store %union.tree_node* %decl, %union.tree_node** %decl.addr, align 8
  store %union.tree_node* %component, %union.tree_node** %component.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %1, %union.tree_node** %type, align 8
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type2 = bitcast %union.tree_node* %2 to %struct.tree_type*
  %lang_specific = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2, i32 0, i32 19
  %3 = load %struct.lang_type*, %struct.lang_type** %lang_specific, align 8
  %tobool = icmp ne %struct.lang_type* %3, null
  br i1 %tobool, label %if.then, label %if.else.71

if.then:                                          ; preds = %entry
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type3 = bitcast %union.tree_node* %4 to %struct.tree_type*
  %lang_specific4 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type3, i32 0, i32 19
  %5 = load %struct.lang_type*, %struct.lang_type** %lang_specific4, align 8
  %elts = getelementptr inbounds %struct.lang_type, %struct.lang_type* %5, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %elts, i32 0, i64 0
  store %union.tree_node** %arrayidx, %union.tree_node*** %field_array, align 8
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type5 = bitcast %union.tree_node* %6 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type5, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %values, align 8
  store %union.tree_node* %7, %union.tree_node** %field, align 8
  store i32 0, i32* %bot, align 4
  %8 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type6 = bitcast %union.tree_node* %8 to %struct.tree_type*
  %lang_specific7 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type6, i32 0, i32 19
  %9 = load %struct.lang_type*, %struct.lang_type** %lang_specific7, align 8
  %len = getelementptr inbounds %struct.lang_type, %struct.lang_type* %9, i32 0, i32 0
  %10 = load i32, i32* %len, align 4
  store i32 %10, i32* %top, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end.54, %if.end.41, %if.then
  %11 = load i32, i32* %top, align 4
  %12 = load i32, i32* %bot, align 4
  %sub = sub nsw i32 %11, %12
  %cmp = icmp sgt i32 %sub, 1
  br i1 %cmp, label %while.body, label %while.end.55

while.body:                                       ; preds = %while.cond
  %13 = load i32, i32* %top, align 4
  %14 = load i32, i32* %bot, align 4
  %sub8 = sub nsw i32 %13, %14
  %add = add nsw i32 %sub8, 1
  %shr = ashr i32 %add, 1
  store i32 %shr, i32* %half, align 4
  %15 = load i32, i32* %bot, align 4
  %16 = load i32, i32* %half, align 4
  %add9 = add nsw i32 %15, %16
  %idxprom = sext i32 %add9 to i64
  %17 = load %union.tree_node**, %union.tree_node*** %field_array, align 8
  %arrayidx10 = getelementptr inbounds %union.tree_node*, %union.tree_node** %17, i64 %idxprom
  %18 = load %union.tree_node*, %union.tree_node** %arrayidx10, align 8
  store %union.tree_node* %18, %union.tree_node** %field, align 8
  %19 = load %union.tree_node*, %union.tree_node** %field, align 8
  %decl11 = bitcast %union.tree_node* %19 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl11, i32 0, i32 8
  %20 = load %union.tree_node*, %union.tree_node** %name, align 8
  %cmp12 = icmp eq %union.tree_node* %20, null
  br i1 %cmp12, label %if.then.13, label %if.end.42

if.then.13:                                       ; preds = %while.body
  br label %while.cond.14

while.cond.14:                                    ; preds = %if.end.38, %if.then.13
  %21 = load i32, i32* %bot, align 4
  %idxprom15 = sext i32 %21 to i64
  %22 = load %union.tree_node**, %union.tree_node*** %field_array, align 8
  %arrayidx16 = getelementptr inbounds %union.tree_node*, %union.tree_node** %22, i64 %idxprom15
  %23 = load %union.tree_node*, %union.tree_node** %arrayidx16, align 8
  %decl17 = bitcast %union.tree_node* %23 to %struct.tree_decl*
  %name18 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl17, i32 0, i32 8
  %24 = load %union.tree_node*, %union.tree_node** %name18, align 8
  %cmp19 = icmp eq %union.tree_node* %24, null
  br i1 %cmp19, label %while.body.20, label %while.end

while.body.20:                                    ; preds = %while.cond.14
  %25 = load i32, i32* %bot, align 4
  %inc = add nsw i32 %25, 1
  store i32 %inc, i32* %bot, align 4
  %idxprom21 = sext i32 %25 to i64
  %26 = load %union.tree_node**, %union.tree_node*** %field_array, align 8
  %arrayidx22 = getelementptr inbounds %union.tree_node*, %union.tree_node** %26, i64 %idxprom21
  %27 = load %union.tree_node*, %union.tree_node** %arrayidx22, align 8
  store %union.tree_node* %27, %union.tree_node** %field, align 8
  %28 = load %union.tree_node*, %union.tree_node** %field, align 8
  %common23 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %type24 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common23, i32 0, i32 1
  %29 = load %union.tree_node*, %union.tree_node** %type24, align 8
  %common25 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common25, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp26 = icmp eq i32 %bf.clear, 20
  br i1 %cmp26, label %if.then.34, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body.20
  %30 = load %union.tree_node*, %union.tree_node** %field, align 8
  %common27 = bitcast %union.tree_node* %30 to %struct.tree_common*
  %type28 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common27, i32 0, i32 1
  %31 = load %union.tree_node*, %union.tree_node** %type28, align 8
  %common29 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %code30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common29, i32 0, i32 2
  %bf.load31 = load i32, i32* %code30, align 8
  %bf.clear32 = and i32 %bf.load31, 255
  %cmp33 = icmp eq i32 %bf.clear32, 21
  br i1 %cmp33, label %if.then.34, label %if.end.38

if.then.34:                                       ; preds = %lor.lhs.false, %while.body.20
  %32 = load %union.tree_node*, %union.tree_node** %field, align 8
  %33 = load %union.tree_node*, %union.tree_node** %component.addr, align 8
  %call = call %union.tree_node* @lookup_field(%union.tree_node* %32, %union.tree_node* %33)
  store %union.tree_node* %call, %union.tree_node** %anon, align 8
  %34 = load %union.tree_node*, %union.tree_node** %anon, align 8
  %tobool35 = icmp ne %union.tree_node* %34, null
  br i1 %tobool35, label %if.then.36, label %if.end

if.then.36:                                       ; preds = %if.then.34
  %35 = load %union.tree_node*, %union.tree_node** %field, align 8
  %36 = load %union.tree_node*, %union.tree_node** %anon, align 8
  %call37 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %35, %union.tree_node* %36)
  store %union.tree_node* %call37, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %if.then.34
  br label %if.end.38

if.end.38:                                        ; preds = %if.end, %lor.lhs.false
  br label %while.cond.14

while.end:                                        ; preds = %while.cond.14
  %37 = load i32, i32* %bot, align 4
  %38 = load i32, i32* %top, align 4
  %cmp39 = icmp sgt i32 %37, %38
  br i1 %cmp39, label %if.then.40, label %if.end.41

if.then.40:                                       ; preds = %while.end
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.41:                                        ; preds = %while.end
  br label %while.cond

if.end.42:                                        ; preds = %while.body
  %39 = load %union.tree_node*, %union.tree_node** %field, align 8
  %decl43 = bitcast %union.tree_node* %39 to %struct.tree_decl*
  %name44 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl43, i32 0, i32 8
  %40 = load %union.tree_node*, %union.tree_node** %name44, align 8
  %41 = load %union.tree_node*, %union.tree_node** %component.addr, align 8
  %cmp45 = icmp eq %union.tree_node* %40, %41
  br i1 %cmp45, label %if.then.46, label %if.end.47

if.then.46:                                       ; preds = %if.end.42
  br label %while.end.55

if.end.47:                                        ; preds = %if.end.42
  %42 = load %union.tree_node*, %union.tree_node** %field, align 8
  %decl48 = bitcast %union.tree_node* %42 to %struct.tree_decl*
  %name49 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl48, i32 0, i32 8
  %43 = load %union.tree_node*, %union.tree_node** %name49, align 8
  %44 = load %union.tree_node*, %union.tree_node** %component.addr, align 8
  %cmp50 = icmp ult %union.tree_node* %43, %44
  br i1 %cmp50, label %if.then.51, label %if.else

if.then.51:                                       ; preds = %if.end.47
  %45 = load i32, i32* %half, align 4
  %46 = load i32, i32* %bot, align 4
  %add52 = add nsw i32 %46, %45
  store i32 %add52, i32* %bot, align 4
  br label %if.end.54

if.else:                                          ; preds = %if.end.47
  %47 = load i32, i32* %bot, align 4
  %48 = load i32, i32* %half, align 4
  %add53 = add nsw i32 %47, %48
  store i32 %add53, i32* %top, align 4
  br label %if.end.54

if.end.54:                                        ; preds = %if.else, %if.then.51
  br label %while.cond

while.end.55:                                     ; preds = %if.then.46, %while.cond
  %49 = load i32, i32* %bot, align 4
  %idxprom56 = sext i32 %49 to i64
  %50 = load %union.tree_node**, %union.tree_node*** %field_array, align 8
  %arrayidx57 = getelementptr inbounds %union.tree_node*, %union.tree_node** %50, i64 %idxprom56
  %51 = load %union.tree_node*, %union.tree_node** %arrayidx57, align 8
  %decl58 = bitcast %union.tree_node* %51 to %struct.tree_decl*
  %name59 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl58, i32 0, i32 8
  %52 = load %union.tree_node*, %union.tree_node** %name59, align 8
  %53 = load %union.tree_node*, %union.tree_node** %component.addr, align 8
  %cmp60 = icmp eq %union.tree_node* %52, %53
  br i1 %cmp60, label %if.then.61, label %if.else.64

if.then.61:                                       ; preds = %while.end.55
  %54 = load i32, i32* %bot, align 4
  %idxprom62 = sext i32 %54 to i64
  %55 = load %union.tree_node**, %union.tree_node*** %field_array, align 8
  %arrayidx63 = getelementptr inbounds %union.tree_node*, %union.tree_node** %55, i64 %idxprom62
  %56 = load %union.tree_node*, %union.tree_node** %arrayidx63, align 8
  store %union.tree_node* %56, %union.tree_node** %field, align 8
  br label %if.end.70

if.else.64:                                       ; preds = %while.end.55
  %57 = load %union.tree_node*, %union.tree_node** %field, align 8
  %decl65 = bitcast %union.tree_node* %57 to %struct.tree_decl*
  %name66 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl65, i32 0, i32 8
  %58 = load %union.tree_node*, %union.tree_node** %name66, align 8
  %59 = load %union.tree_node*, %union.tree_node** %component.addr, align 8
  %cmp67 = icmp ne %union.tree_node* %58, %59
  br i1 %cmp67, label %if.then.68, label %if.end.69

if.then.68:                                       ; preds = %if.else.64
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.69:                                        ; preds = %if.else.64
  br label %if.end.70

if.end.70:                                        ; preds = %if.end.69, %if.then.61
  br label %if.end.110

if.else.71:                                       ; preds = %entry
  %60 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type72 = bitcast %union.tree_node* %60 to %struct.tree_type*
  %values73 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type72, i32 0, i32 1
  %61 = load %union.tree_node*, %union.tree_node** %values73, align 8
  store %union.tree_node* %61, %union.tree_node** %field, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else.71
  %62 = load %union.tree_node*, %union.tree_node** %field, align 8
  %tobool74 = icmp ne %union.tree_node* %62, null
  br i1 %tobool74, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %63 = load %union.tree_node*, %union.tree_node** %field, align 8
  %decl75 = bitcast %union.tree_node* %63 to %struct.tree_decl*
  %name76 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl75, i32 0, i32 8
  %64 = load %union.tree_node*, %union.tree_node** %name76, align 8
  %cmp77 = icmp eq %union.tree_node* %64, null
  br i1 %cmp77, label %land.lhs.true, label %if.end.100

land.lhs.true:                                    ; preds = %for.body
  %65 = load %union.tree_node*, %union.tree_node** %field, align 8
  %common78 = bitcast %union.tree_node* %65 to %struct.tree_common*
  %type79 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common78, i32 0, i32 1
  %66 = load %union.tree_node*, %union.tree_node** %type79, align 8
  %common80 = bitcast %union.tree_node* %66 to %struct.tree_common*
  %code81 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common80, i32 0, i32 2
  %bf.load82 = load i32, i32* %code81, align 8
  %bf.clear83 = and i32 %bf.load82, 255
  %cmp84 = icmp eq i32 %bf.clear83, 20
  br i1 %cmp84, label %if.then.93, label %lor.lhs.false.85

lor.lhs.false.85:                                 ; preds = %land.lhs.true
  %67 = load %union.tree_node*, %union.tree_node** %field, align 8
  %common86 = bitcast %union.tree_node* %67 to %struct.tree_common*
  %type87 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common86, i32 0, i32 1
  %68 = load %union.tree_node*, %union.tree_node** %type87, align 8
  %common88 = bitcast %union.tree_node* %68 to %struct.tree_common*
  %code89 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common88, i32 0, i32 2
  %bf.load90 = load i32, i32* %code89, align 8
  %bf.clear91 = and i32 %bf.load90, 255
  %cmp92 = icmp eq i32 %bf.clear91, 21
  br i1 %cmp92, label %if.then.93, label %if.end.100

if.then.93:                                       ; preds = %lor.lhs.false.85, %land.lhs.true
  %69 = load %union.tree_node*, %union.tree_node** %field, align 8
  %70 = load %union.tree_node*, %union.tree_node** %component.addr, align 8
  %call95 = call %union.tree_node* @lookup_field(%union.tree_node* %69, %union.tree_node* %70)
  store %union.tree_node* %call95, %union.tree_node** %anon94, align 8
  %71 = load %union.tree_node*, %union.tree_node** %anon94, align 8
  %tobool96 = icmp ne %union.tree_node* %71, null
  br i1 %tobool96, label %if.then.97, label %if.end.99

if.then.97:                                       ; preds = %if.then.93
  %72 = load %union.tree_node*, %union.tree_node** %field, align 8
  %73 = load %union.tree_node*, %union.tree_node** %anon94, align 8
  %call98 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %72, %union.tree_node* %73)
  store %union.tree_node* %call98, %union.tree_node** %retval
  br label %return

if.end.99:                                        ; preds = %if.then.93
  br label %if.end.100

if.end.100:                                       ; preds = %if.end.99, %lor.lhs.false.85, %for.body
  %74 = load %union.tree_node*, %union.tree_node** %field, align 8
  %decl101 = bitcast %union.tree_node* %74 to %struct.tree_decl*
  %name102 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl101, i32 0, i32 8
  %75 = load %union.tree_node*, %union.tree_node** %name102, align 8
  %76 = load %union.tree_node*, %union.tree_node** %component.addr, align 8
  %cmp103 = icmp eq %union.tree_node* %75, %76
  br i1 %cmp103, label %if.then.104, label %if.end.105

if.then.104:                                      ; preds = %if.end.100
  br label %for.end

if.end.105:                                       ; preds = %if.end.100
  br label %for.inc

for.inc:                                          ; preds = %if.end.105
  %77 = load %union.tree_node*, %union.tree_node** %field, align 8
  %common106 = bitcast %union.tree_node* %77 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common106, i32 0, i32 0
  %78 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %78, %union.tree_node** %field, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.104, %for.cond
  %79 = load %union.tree_node*, %union.tree_node** %field, align 8
  %cmp107 = icmp eq %union.tree_node* %79, null
  br i1 %cmp107, label %if.then.108, label %if.end.109

if.then.108:                                      ; preds = %for.end
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.109:                                       ; preds = %for.end
  br label %if.end.110

if.end.110:                                       ; preds = %if.end.109, %if.end.70
  %80 = load %union.tree_node*, %union.tree_node** %field, align 8
  %call111 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %80, %union.tree_node* null)
  store %union.tree_node* %call111, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.110, %if.then.108, %if.then.97, %if.then.68, %if.then.40, %if.then.36
  %81 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %81
}

declare void @warn_deprecated_use(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_indirect_ref(%union.tree_node* %ptr, i8* %errorstring) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %ptr.addr = alloca %union.tree_node*, align 8
  %errorstring.addr = alloca i8*, align 8
  %pointer = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %t = alloca %union.tree_node*, align 8
  %ref = alloca %union.tree_node*, align 8
  store %union.tree_node* %ptr, %union.tree_node** %ptr.addr, align 8
  store i8* %errorstring, i8** %errorstring.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %ptr.addr, align 8
  %call = call %union.tree_node* @default_conversion(%union.tree_node* %0)
  store %union.tree_node* %call, %union.tree_node** %pointer, align 8
  %1 = load %union.tree_node*, %union.tree_node** %pointer, align 8
  %common = bitcast %union.tree_node* %1 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %2 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %2, %union.tree_node** %type, align 8
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common2 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 13
  br i1 %cmp, label %if.then, label %if.else.83

if.then:                                          ; preds = %entry
  %4 = load %union.tree_node*, %union.tree_node** %pointer, align 8
  %common3 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3, i32 0, i32 2
  %bf.load5 = load i32, i32* %code4, align 8
  %bf.clear6 = and i32 %bf.load5, 255
  %cmp7 = icmp eq i32 %bf.clear6, 121
  br i1 %cmp7, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then
  %5 = load i32, i32* @flag_volatile, align 4
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %if.else, label %land.lhs.true.8

land.lhs.true.8:                                  ; preds = %land.lhs.true
  %6 = load %union.tree_node*, %union.tree_node** %pointer, align 8
  %exp = bitcast %union.tree_node* %6 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %common9 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %type10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common9, i32 0, i32 1
  %8 = load %union.tree_node*, %union.tree_node** %type10, align 8
  %9 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common11 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %type12 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 1
  %10 = load %union.tree_node*, %union.tree_node** %type12, align 8
  %cmp13 = icmp eq %union.tree_node* %8, %10
  br i1 %cmp13, label %if.then.14, label %if.else

if.then.14:                                       ; preds = %land.lhs.true.8
  %11 = load %union.tree_node*, %union.tree_node** %pointer, align 8
  %exp15 = bitcast %union.tree_node* %11 to %struct.tree_exp*
  %operands16 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp15, i32 0, i32 2
  %arrayidx17 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands16, i32 0, i64 0
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx17, align 8
  store %union.tree_node* %12, %union.tree_node** %retval
  br label %return

if.else:                                          ; preds = %land.lhs.true.8, %land.lhs.true, %if.then
  %13 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common18 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %type19 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common18, i32 0, i32 1
  %14 = load %union.tree_node*, %union.tree_node** %type19, align 8
  store %union.tree_node* %14, %union.tree_node** %t, align 8
  %15 = load %union.tree_node*, %union.tree_node** %t, align 8
  %type20 = bitcast %union.tree_node* %15 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type20, i32 0, i32 15
  %16 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %17 = load %union.tree_node*, %union.tree_node** %pointer, align 8
  %call21 = call %union.tree_node* @build1(i32 41, %union.tree_node* %16, %union.tree_node* %17)
  store %union.tree_node* %call21, %union.tree_node** %ref, align 8
  %18 = load %union.tree_node*, %union.tree_node** %t, align 8
  %type22 = bitcast %union.tree_node* %18 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type22, i32 0, i32 2
  %19 = load %union.tree_node*, %union.tree_node** %size, align 8
  %cmp23 = icmp ne %union.tree_node* %19, null
  br i1 %cmp23, label %if.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %20 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common24 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %code25 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common24, i32 0, i32 2
  %bf.load26 = load i32, i32* %code25, align 8
  %bf.clear27 = and i32 %bf.load26, 255
  %cmp28 = icmp eq i32 %bf.clear27, 5
  br i1 %cmp28, label %if.end, label %land.lhs.true.29

land.lhs.true.29:                                 ; preds = %lor.lhs.false
  %21 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common30 = bitcast %union.tree_node* %21 to %struct.tree_common*
  %code31 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common30, i32 0, i32 2
  %bf.load32 = load i32, i32* %code31, align 8
  %bf.clear33 = and i32 %bf.load32, 255
  %cmp34 = icmp ne i32 %bf.clear33, 18
  br i1 %cmp34, label %if.then.35, label %if.end

if.then.35:                                       ; preds = %land.lhs.true.29
  call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.19, i32 0, i32 0))
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %22, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true.29, %lor.lhs.false, %if.else
  %23 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common36 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %code37 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common36, i32 0, i32 2
  %bf.load38 = load i32, i32* %code37, align 8
  %bf.clear39 = and i32 %bf.load38, 255
  %cmp40 = icmp eq i32 %bf.clear39, 5
  br i1 %cmp40, label %land.lhs.true.41, label %if.end.44

land.lhs.true.41:                                 ; preds = %if.end
  %24 = load i32, i32* @skip_evaluation, align 4
  %cmp42 = icmp eq i32 %24, 0
  br i1 %cmp42, label %if.then.43, label %if.end.44

if.then.43:                                       ; preds = %land.lhs.true.41
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.20, i32 0, i32 0))
  br label %if.end.44

if.end.44:                                        ; preds = %if.then.43, %land.lhs.true.41, %if.end
  %25 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common45 = bitcast %union.tree_node* %25 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common45, i32 0, i32 2
  %bf.load46 = load i32, i32* %readonly_flag, align 8
  %bf.lshr = lshr i32 %bf.load46, 12
  %bf.clear47 = and i32 %bf.lshr, 1
  %26 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %common48 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %readonly_flag49 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common48, i32 0, i32 2
  %bf.load50 = load i32, i32* %readonly_flag49, align 8
  %bf.value = and i32 %bf.clear47, 1
  %bf.shl = shl i32 %bf.value, 12
  %bf.clear51 = and i32 %bf.load50, -4097
  %bf.set = or i32 %bf.clear51, %bf.shl
  store i32 %bf.set, i32* %readonly_flag49, align 8
  %27 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common52 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common52, i32 0, i32 2
  %bf.load53 = load i32, i32* %volatile_flag, align 8
  %bf.lshr54 = lshr i32 %bf.load53, 11
  %bf.clear55 = and i32 %bf.lshr54, 1
  %tobool56 = icmp ne i32 %bf.clear55, 0
  br i1 %tobool56, label %lor.end, label %lor.lhs.false.57

lor.lhs.false.57:                                 ; preds = %if.end.44
  %28 = load %union.tree_node*, %union.tree_node** %pointer, align 8
  %common58 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common58, i32 0, i32 2
  %bf.load59 = load i32, i32* %side_effects_flag, align 8
  %bf.lshr60 = lshr i32 %bf.load59, 8
  %bf.clear61 = and i32 %bf.lshr60, 1
  %tobool62 = icmp ne i32 %bf.clear61, 0
  br i1 %tobool62, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.57
  %29 = load i32, i32* @flag_volatile, align 4
  %tobool63 = icmp ne i32 %29, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.57, %if.end.44
  %30 = phi i1 [ true, %lor.lhs.false.57 ], [ true, %if.end.44 ], [ %tobool63, %lor.rhs ]
  %lor.ext = zext i1 %30 to i32
  %31 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %common64 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %side_effects_flag65 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common64, i32 0, i32 2
  %bf.load66 = load i32, i32* %side_effects_flag65, align 8
  %bf.value67 = and i32 %lor.ext, 1
  %bf.shl68 = shl i32 %bf.value67, 8
  %bf.clear69 = and i32 %bf.load66, -257
  %bf.set70 = or i32 %bf.clear69, %bf.shl68
  store i32 %bf.set70, i32* %side_effects_flag65, align 8
  %32 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common71 = bitcast %union.tree_node* %32 to %struct.tree_common*
  %volatile_flag72 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common71, i32 0, i32 2
  %bf.load73 = load i32, i32* %volatile_flag72, align 8
  %bf.lshr74 = lshr i32 %bf.load73, 11
  %bf.clear75 = and i32 %bf.lshr74, 1
  %33 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %common76 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %volatile_flag77 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common76, i32 0, i32 2
  %bf.load78 = load i32, i32* %volatile_flag77, align 8
  %bf.value79 = and i32 %bf.clear75, 1
  %bf.shl80 = shl i32 %bf.value79, 11
  %bf.clear81 = and i32 %bf.load78, -2049
  %bf.set82 = or i32 %bf.clear81, %bf.shl80
  store i32 %bf.set82, i32* %volatile_flag77, align 8
  %34 = load %union.tree_node*, %union.tree_node** %ref, align 8
  store %union.tree_node* %34, %union.tree_node** %retval
  br label %return

if.else.83:                                       ; preds = %entry
  %35 = load %union.tree_node*, %union.tree_node** %pointer, align 8
  %common84 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %code85 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common84, i32 0, i32 2
  %bf.load86 = load i32, i32* %code85, align 8
  %bf.clear87 = and i32 %bf.load86, 255
  %cmp88 = icmp ne i32 %bf.clear87, 0
  br i1 %cmp88, label %if.then.89, label %if.end.90

if.then.89:                                       ; preds = %if.else.83
  %36 = load i8*, i8** %errorstring.addr, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.21, i32 0, i32 0), i8* %36)
  br label %if.end.90

if.end.90:                                        ; preds = %if.then.89, %if.else.83
  br label %if.end.91

if.end.91:                                        ; preds = %if.end.90
  %37 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %37, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.91, %lor.end, %if.then.35, %if.then.14
  %38 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %38
}

declare void @warning(i8*, ...) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_array_ref(%union.tree_node* %array, %union.tree_node* %index) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %array.addr = alloca %union.tree_node*, align 8
  %index.addr = alloca %union.tree_node*, align 8
  %rval = alloca %union.tree_node*, align 8
  %type17 = alloca %union.tree_node*, align 8
  %foo = alloca %union.tree_node*, align 8
  %ar = alloca %union.tree_node*, align 8
  %ind = alloca %union.tree_node*, align 8
  %temp = alloca %union.tree_node*, align 8
  store %union.tree_node* %array, %union.tree_node** %array.addr, align 8
  store %union.tree_node* %index, %union.tree_node** %index.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %index.addr, align 8
  %cmp = icmp eq %union.tree_node* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.22, i32 0, i32 0))
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %1, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %array.addr, align 8
  %common = bitcast %union.tree_node* %2 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp1 = icmp eq %union.tree_node* %3, %4
  br i1 %cmp1, label %if.then.5, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %union.tree_node*, %union.tree_node** %index.addr, align 8
  %common2 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 1
  %6 = load %union.tree_node*, %union.tree_node** %type3, align 8
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp4 = icmp eq %union.tree_node* %6, %7
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %lor.lhs.false, %if.end
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %8, %union.tree_node** %retval
  br label %return

if.end.6:                                         ; preds = %lor.lhs.false
  %9 = load %union.tree_node*, %union.tree_node** %array.addr, align 8
  %common7 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %type8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 1
  %10 = load %union.tree_node*, %union.tree_node** %type8, align 8
  %common9 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common9, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp10 = icmp eq i32 %bf.clear, 18
  br i1 %cmp10, label %land.lhs.true, label %if.end.192

land.lhs.true:                                    ; preds = %if.end.6
  %11 = load %union.tree_node*, %union.tree_node** %array.addr, align 8
  %common11 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %code12 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 2
  %bf.load13 = load i32, i32* %code12, align 8
  %bf.clear14 = and i32 %bf.load13, 255
  %cmp15 = icmp ne i32 %bf.clear14, 41
  br i1 %cmp15, label %if.then.16, label %if.end.192

if.then.16:                                       ; preds = %land.lhs.true
  %12 = load i32, i32* @warn_char_subscripts, align 4
  %tobool = icmp ne i32 %12, 0
  br i1 %tobool, label %land.lhs.true.18, label %if.end.24

land.lhs.true.18:                                 ; preds = %if.then.16
  %13 = load %union.tree_node*, %union.tree_node** %index.addr, align 8
  %common19 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %type20 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common19, i32 0, i32 1
  %14 = load %union.tree_node*, %union.tree_node** %type20, align 8
  %type21 = bitcast %union.tree_node* %14 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type21, i32 0, i32 15
  %15 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %cmp22 = icmp eq %union.tree_node* %15, %16
  br i1 %cmp22, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %land.lhs.true.18
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23, i32 0, i32 0))
  br label %if.end.24

if.end.24:                                        ; preds = %if.then.23, %land.lhs.true.18, %if.then.16
  %17 = load %union.tree_node*, %union.tree_node** %index.addr, align 8
  %call = call %union.tree_node* @default_conversion(%union.tree_node* %17)
  store %union.tree_node* %call, %union.tree_node** %index.addr, align 8
  %18 = load %union.tree_node*, %union.tree_node** %index.addr, align 8
  %common25 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %type26 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common25, i32 0, i32 1
  %19 = load %union.tree_node*, %union.tree_node** %type26, align 8
  %common27 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %code28 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common27, i32 0, i32 2
  %bf.load29 = load i32, i32* %code28, align 8
  %bf.clear30 = and i32 %bf.load29, 255
  %cmp31 = icmp ne i32 %bf.clear30, 6
  br i1 %cmp31, label %if.then.32, label %if.end.33

if.then.32:                                       ; preds = %if.end.24
  call void (i8*, ...) @error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.24, i32 0, i32 0))
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %20, %union.tree_node** %retval
  br label %return

if.end.33:                                        ; preds = %if.end.24
  %21 = load %union.tree_node*, %union.tree_node** %index.addr, align 8
  %common34 = bitcast %union.tree_node* %21 to %struct.tree_common*
  %code35 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common34, i32 0, i32 2
  %bf.load36 = load i32, i32* %code35, align 8
  %bf.clear37 = and i32 %bf.load36, 255
  %cmp38 = icmp ne i32 %bf.clear37, 25
  br i1 %cmp38, label %if.then.58, label %lor.lhs.false.39

lor.lhs.false.39:                                 ; preds = %if.end.33
  %22 = load %union.tree_node*, %union.tree_node** %array.addr, align 8
  %common40 = bitcast %union.tree_node* %22 to %struct.tree_common*
  %type41 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common40, i32 0, i32 1
  %23 = load %union.tree_node*, %union.tree_node** %type41, align 8
  %common42 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %type43 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common42, i32 0, i32 1
  %24 = load %union.tree_node*, %union.tree_node** %type43, align 8
  %type44 = bitcast %union.tree_node* %24 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type44, i32 0, i32 2
  %25 = load %union.tree_node*, %union.tree_node** %size, align 8
  %cmp45 = icmp ne %union.tree_node* %25, null
  br i1 %cmp45, label %land.lhs.true.46, label %if.end.63

land.lhs.true.46:                                 ; preds = %lor.lhs.false.39
  %26 = load %union.tree_node*, %union.tree_node** %array.addr, align 8
  %common47 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %type48 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common47, i32 0, i32 1
  %27 = load %union.tree_node*, %union.tree_node** %type48, align 8
  %common49 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %type50 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common49, i32 0, i32 1
  %28 = load %union.tree_node*, %union.tree_node** %type50, align 8
  %type51 = bitcast %union.tree_node* %28 to %struct.tree_type*
  %size52 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type51, i32 0, i32 2
  %29 = load %union.tree_node*, %union.tree_node** %size52, align 8
  %common53 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %code54 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common53, i32 0, i32 2
  %bf.load55 = load i32, i32* %code54, align 8
  %bf.clear56 = and i32 %bf.load55, 255
  %cmp57 = icmp ne i32 %bf.clear56, 25
  br i1 %cmp57, label %if.then.58, label %if.end.63

if.then.58:                                       ; preds = %land.lhs.true.46, %if.end.33
  %30 = load %union.tree_node*, %union.tree_node** %array.addr, align 8
  %call59 = call i32 @mark_addressable(%union.tree_node* %30)
  %cmp60 = icmp eq i32 %call59, 0
  br i1 %cmp60, label %if.then.61, label %if.end.62

if.then.61:                                       ; preds = %if.then.58
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %31, %union.tree_node** %retval
  br label %return

if.end.62:                                        ; preds = %if.then.58
  br label %if.end.63

if.end.63:                                        ; preds = %if.end.62, %land.lhs.true.46, %lor.lhs.false.39
  %32 = load %union.tree_node*, %union.tree_node** %index.addr, align 8
  %common64 = bitcast %union.tree_node* %32 to %struct.tree_common*
  %code65 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common64, i32 0, i32 2
  %bf.load66 = load i32, i32* %code65, align 8
  %bf.clear67 = and i32 %bf.load66, 255
  %cmp68 = icmp eq i32 %bf.clear67, 25
  br i1 %cmp68, label %land.lhs.true.69, label %if.end.86

land.lhs.true.69:                                 ; preds = %if.end.63
  %33 = load %union.tree_node*, %union.tree_node** %array.addr, align 8
  %common70 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %type71 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common70, i32 0, i32 1
  %34 = load %union.tree_node*, %union.tree_node** %type71, align 8
  %type72 = bitcast %union.tree_node* %34 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type72, i32 0, i32 1
  %35 = load %union.tree_node*, %union.tree_node** %values, align 8
  %tobool73 = icmp ne %union.tree_node* %35, null
  br i1 %tobool73, label %land.lhs.true.74, label %if.end.86

land.lhs.true.74:                                 ; preds = %land.lhs.true.69
  %36 = load %union.tree_node*, %union.tree_node** %index.addr, align 8
  %37 = load %union.tree_node*, %union.tree_node** %array.addr, align 8
  %common75 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %type76 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common75, i32 0, i32 1
  %38 = load %union.tree_node*, %union.tree_node** %type76, align 8
  %type77 = bitcast %union.tree_node* %38 to %struct.tree_type*
  %values78 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type77, i32 0, i32 1
  %39 = load %union.tree_node*, %union.tree_node** %values78, align 8
  %call79 = call i32 @int_fits_type_p(%union.tree_node* %36, %union.tree_node* %39)
  %tobool80 = icmp ne i32 %call79, 0
  br i1 %tobool80, label %if.end.86, label %if.then.81

if.then.81:                                       ; preds = %land.lhs.true.74
  %40 = load %union.tree_node*, %union.tree_node** %array.addr, align 8
  %call82 = call i32 @mark_addressable(%union.tree_node* %40)
  %cmp83 = icmp eq i32 %call82, 0
  br i1 %cmp83, label %if.then.84, label %if.end.85

if.then.84:                                       ; preds = %if.then.81
  %41 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %41, %union.tree_node** %retval
  br label %return

if.end.85:                                        ; preds = %if.then.81
  br label %if.end.86

if.end.86:                                        ; preds = %if.end.85, %land.lhs.true.74, %land.lhs.true.69, %if.end.63
  %42 = load i32, i32* @pedantic, align 4
  %tobool87 = icmp ne i32 %42, 0
  br i1 %tobool87, label %if.then.88, label %if.end.111

if.then.88:                                       ; preds = %if.end.86
  %43 = load %union.tree_node*, %union.tree_node** %array.addr, align 8
  store %union.tree_node* %43, %union.tree_node** %foo, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then.88
  %44 = load %union.tree_node*, %union.tree_node** %foo, align 8
  %common89 = bitcast %union.tree_node* %44 to %struct.tree_common*
  %code90 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common89, i32 0, i32 2
  %bf.load91 = load i32, i32* %code90, align 8
  %bf.clear92 = and i32 %bf.load91, 255
  %cmp93 = icmp eq i32 %bf.clear92, 39
  br i1 %cmp93, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %45 = load %union.tree_node*, %union.tree_node** %foo, align 8
  %exp = bitcast %union.tree_node* %45 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %46 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  store %union.tree_node* %46, %union.tree_node** %foo, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %47 = load %union.tree_node*, %union.tree_node** %foo, align 8
  %common94 = bitcast %union.tree_node* %47 to %struct.tree_common*
  %code95 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common94, i32 0, i32 2
  %bf.load96 = load i32, i32* %code95, align 8
  %bf.clear97 = and i32 %bf.load96, 255
  %cmp98 = icmp eq i32 %bf.clear97, 34
  br i1 %cmp98, label %land.lhs.true.99, label %if.else

land.lhs.true.99:                                 ; preds = %while.end
  %48 = load %union.tree_node*, %union.tree_node** %foo, align 8
  %decl = bitcast %union.tree_node* %48 to %struct.tree_decl*
  %regdecl_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 5
  %49 = bitcast i48* %regdecl_flag to i64*
  %bf.load100 = load i64, i64* %49, align 8
  %bf.lshr = lshr i64 %bf.load100, 10
  %bf.clear101 = and i64 %bf.lshr, 1
  %bf.cast = trunc i64 %bf.clear101 to i32
  %tobool102 = icmp ne i32 %bf.cast, 0
  br i1 %tobool102, label %if.then.103, label %if.else

if.then.103:                                      ; preds = %land.lhs.true.99
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.25, i32 0, i32 0))
  br label %if.end.110

if.else:                                          ; preds = %land.lhs.true.99, %while.end
  %50 = load i32, i32* @flag_isoc99, align 4
  %tobool104 = icmp ne i32 %50, 0
  br i1 %tobool104, label %if.end.109, label %land.lhs.true.105

land.lhs.true.105:                                ; preds = %if.else
  %51 = load %union.tree_node*, %union.tree_node** %foo, align 8
  %call106 = call i32 @lvalue_p(%union.tree_node* %51)
  %tobool107 = icmp ne i32 %call106, 0
  br i1 %tobool107, label %if.end.109, label %if.then.108

if.then.108:                                      ; preds = %land.lhs.true.105
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.26, i32 0, i32 0))
  br label %if.end.109

if.end.109:                                       ; preds = %if.then.108, %land.lhs.true.105, %if.else
  br label %if.end.110

if.end.110:                                       ; preds = %if.end.109, %if.then.103
  br label %if.end.111

if.end.111:                                       ; preds = %if.end.110, %if.end.86
  %52 = load %union.tree_node*, %union.tree_node** %array.addr, align 8
  %common112 = bitcast %union.tree_node* %52 to %struct.tree_common*
  %type113 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common112, i32 0, i32 1
  %53 = load %union.tree_node*, %union.tree_node** %type113, align 8
  %common114 = bitcast %union.tree_node* %53 to %struct.tree_common*
  %type115 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common114, i32 0, i32 1
  %54 = load %union.tree_node*, %union.tree_node** %type115, align 8
  %type116 = bitcast %union.tree_node* %54 to %struct.tree_type*
  %main_variant117 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type116, i32 0, i32 15
  %55 = load %union.tree_node*, %union.tree_node** %main_variant117, align 8
  store %union.tree_node* %55, %union.tree_node** %type17, align 8
  %56 = load %union.tree_node*, %union.tree_node** %type17, align 8
  %57 = load %union.tree_node*, %union.tree_node** %array.addr, align 8
  %58 = load %union.tree_node*, %union.tree_node** %index.addr, align 8
  %call118 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 43, %union.tree_node* %56, %union.tree_node* %57, %union.tree_node* %58)
  store %union.tree_node* %call118, %union.tree_node** %rval, align 8
  %59 = load %union.tree_node*, %union.tree_node** %array.addr, align 8
  %common119 = bitcast %union.tree_node* %59 to %struct.tree_common*
  %type120 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common119, i32 0, i32 1
  %60 = load %union.tree_node*, %union.tree_node** %type120, align 8
  %common121 = bitcast %union.tree_node* %60 to %struct.tree_common*
  %type122 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common121, i32 0, i32 1
  %61 = load %union.tree_node*, %union.tree_node** %type122, align 8
  %common123 = bitcast %union.tree_node* %61 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common123, i32 0, i32 2
  %bf.load124 = load i32, i32* %readonly_flag, align 8
  %bf.lshr125 = lshr i32 %bf.load124, 12
  %bf.clear126 = and i32 %bf.lshr125, 1
  %62 = load %union.tree_node*, %union.tree_node** %array.addr, align 8
  %common127 = bitcast %union.tree_node* %62 to %struct.tree_common*
  %readonly_flag128 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common127, i32 0, i32 2
  %bf.load129 = load i32, i32* %readonly_flag128, align 8
  %bf.lshr130 = lshr i32 %bf.load129, 12
  %bf.clear131 = and i32 %bf.lshr130, 1
  %or = or i32 %bf.clear126, %bf.clear131
  %63 = load %union.tree_node*, %union.tree_node** %rval, align 8
  %common132 = bitcast %union.tree_node* %63 to %struct.tree_common*
  %readonly_flag133 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common132, i32 0, i32 2
  %bf.load134 = load i32, i32* %readonly_flag133, align 8
  %bf.lshr135 = lshr i32 %bf.load134, 12
  %bf.clear136 = and i32 %bf.lshr135, 1
  %or137 = or i32 %bf.clear136, %or
  %bf.load138 = load i32, i32* %readonly_flag133, align 8
  %bf.value = and i32 %or137, 1
  %bf.shl = shl i32 %bf.value, 12
  %bf.clear139 = and i32 %bf.load138, -4097
  %bf.set = or i32 %bf.clear139, %bf.shl
  store i32 %bf.set, i32* %readonly_flag133, align 8
  %64 = load %union.tree_node*, %union.tree_node** %array.addr, align 8
  %common140 = bitcast %union.tree_node* %64 to %struct.tree_common*
  %type141 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common140, i32 0, i32 1
  %65 = load %union.tree_node*, %union.tree_node** %type141, align 8
  %common142 = bitcast %union.tree_node* %65 to %struct.tree_common*
  %type143 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common142, i32 0, i32 1
  %66 = load %union.tree_node*, %union.tree_node** %type143, align 8
  %common144 = bitcast %union.tree_node* %66 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common144, i32 0, i32 2
  %bf.load145 = load i32, i32* %volatile_flag, align 8
  %bf.lshr146 = lshr i32 %bf.load145, 11
  %bf.clear147 = and i32 %bf.lshr146, 1
  %67 = load %union.tree_node*, %union.tree_node** %array.addr, align 8
  %common148 = bitcast %union.tree_node* %67 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common148, i32 0, i32 2
  %bf.load149 = load i32, i32* %side_effects_flag, align 8
  %bf.lshr150 = lshr i32 %bf.load149, 8
  %bf.clear151 = and i32 %bf.lshr150, 1
  %or152 = or i32 %bf.clear147, %bf.clear151
  %68 = load %union.tree_node*, %union.tree_node** %rval, align 8
  %common153 = bitcast %union.tree_node* %68 to %struct.tree_common*
  %side_effects_flag154 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common153, i32 0, i32 2
  %bf.load155 = load i32, i32* %side_effects_flag154, align 8
  %bf.lshr156 = lshr i32 %bf.load155, 8
  %bf.clear157 = and i32 %bf.lshr156, 1
  %or158 = or i32 %bf.clear157, %or152
  %bf.load159 = load i32, i32* %side_effects_flag154, align 8
  %bf.value160 = and i32 %or158, 1
  %bf.shl161 = shl i32 %bf.value160, 8
  %bf.clear162 = and i32 %bf.load159, -257
  %bf.set163 = or i32 %bf.clear162, %bf.shl161
  store i32 %bf.set163, i32* %side_effects_flag154, align 8
  %69 = load %union.tree_node*, %union.tree_node** %array.addr, align 8
  %common164 = bitcast %union.tree_node* %69 to %struct.tree_common*
  %type165 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common164, i32 0, i32 1
  %70 = load %union.tree_node*, %union.tree_node** %type165, align 8
  %common166 = bitcast %union.tree_node* %70 to %struct.tree_common*
  %type167 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common166, i32 0, i32 1
  %71 = load %union.tree_node*, %union.tree_node** %type167, align 8
  %common168 = bitcast %union.tree_node* %71 to %struct.tree_common*
  %volatile_flag169 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common168, i32 0, i32 2
  %bf.load170 = load i32, i32* %volatile_flag169, align 8
  %bf.lshr171 = lshr i32 %bf.load170, 11
  %bf.clear172 = and i32 %bf.lshr171, 1
  %72 = load %union.tree_node*, %union.tree_node** %array.addr, align 8
  %common173 = bitcast %union.tree_node* %72 to %struct.tree_common*
  %volatile_flag174 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common173, i32 0, i32 2
  %bf.load175 = load i32, i32* %volatile_flag174, align 8
  %bf.lshr176 = lshr i32 %bf.load175, 11
  %bf.clear177 = and i32 %bf.lshr176, 1
  %or178 = or i32 %bf.clear172, %bf.clear177
  %73 = load %union.tree_node*, %union.tree_node** %rval, align 8
  %common179 = bitcast %union.tree_node* %73 to %struct.tree_common*
  %volatile_flag180 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common179, i32 0, i32 2
  %bf.load181 = load i32, i32* %volatile_flag180, align 8
  %bf.lshr182 = lshr i32 %bf.load181, 11
  %bf.clear183 = and i32 %bf.lshr182, 1
  %or184 = or i32 %bf.clear183, %or178
  %bf.load185 = load i32, i32* %volatile_flag180, align 8
  %bf.value186 = and i32 %or184, 1
  %bf.shl187 = shl i32 %bf.value186, 11
  %bf.clear188 = and i32 %bf.load185, -2049
  %bf.set189 = or i32 %bf.clear188, %bf.shl187
  store i32 %bf.set189, i32* %volatile_flag180, align 8
  %74 = load %union.tree_node*, %union.tree_node** %rval, align 8
  %call190 = call %union.tree_node* @fold(%union.tree_node* %74)
  %call191 = call %union.tree_node* @require_complete_type(%union.tree_node* %call190)
  store %union.tree_node* %call191, %union.tree_node** %retval
  br label %return

if.end.192:                                       ; preds = %land.lhs.true, %if.end.6
  %75 = load %union.tree_node*, %union.tree_node** %array.addr, align 8
  %call193 = call %union.tree_node* @default_conversion(%union.tree_node* %75)
  store %union.tree_node* %call193, %union.tree_node** %ar, align 8
  %76 = load %union.tree_node*, %union.tree_node** %index.addr, align 8
  %call194 = call %union.tree_node* @default_conversion(%union.tree_node* %76)
  store %union.tree_node* %call194, %union.tree_node** %ind, align 8
  %77 = load i32, i32* @warn_char_subscripts, align 4
  %tobool195 = icmp ne i32 %77, 0
  br i1 %tobool195, label %land.lhs.true.196, label %if.end.211

land.lhs.true.196:                                ; preds = %if.end.192
  %78 = load %union.tree_node*, %union.tree_node** %index.addr, align 8
  %common197 = bitcast %union.tree_node* %78 to %struct.tree_common*
  %type198 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common197, i32 0, i32 1
  %79 = load %union.tree_node*, %union.tree_node** %type198, align 8
  %common199 = bitcast %union.tree_node* %79 to %struct.tree_common*
  %code200 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common199, i32 0, i32 2
  %bf.load201 = load i32, i32* %code200, align 8
  %bf.clear202 = and i32 %bf.load201, 255
  %cmp203 = icmp eq i32 %bf.clear202, 6
  br i1 %cmp203, label %land.lhs.true.204, label %if.end.211

land.lhs.true.204:                                ; preds = %land.lhs.true.196
  %80 = load %union.tree_node*, %union.tree_node** %index.addr, align 8
  %common205 = bitcast %union.tree_node* %80 to %struct.tree_common*
  %type206 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common205, i32 0, i32 1
  %81 = load %union.tree_node*, %union.tree_node** %type206, align 8
  %type207 = bitcast %union.tree_node* %81 to %struct.tree_type*
  %main_variant208 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type207, i32 0, i32 15
  %82 = load %union.tree_node*, %union.tree_node** %main_variant208, align 8
  %83 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %cmp209 = icmp eq %union.tree_node* %82, %83
  br i1 %cmp209, label %if.then.210, label %if.end.211

if.then.210:                                      ; preds = %land.lhs.true.204
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.27, i32 0, i32 0))
  br label %if.end.211

if.end.211:                                       ; preds = %if.then.210, %land.lhs.true.204, %land.lhs.true.196, %if.end.192
  %84 = load %union.tree_node*, %union.tree_node** %ar, align 8
  %common212 = bitcast %union.tree_node* %84 to %struct.tree_common*
  %type213 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common212, i32 0, i32 1
  %85 = load %union.tree_node*, %union.tree_node** %type213, align 8
  %common214 = bitcast %union.tree_node* %85 to %struct.tree_common*
  %code215 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common214, i32 0, i32 2
  %bf.load216 = load i32, i32* %code215, align 8
  %bf.clear217 = and i32 %bf.load216, 255
  %cmp218 = icmp eq i32 %bf.clear217, 6
  br i1 %cmp218, label %if.then.219, label %if.end.220

if.then.219:                                      ; preds = %if.end.211
  %86 = load %union.tree_node*, %union.tree_node** %ar, align 8
  store %union.tree_node* %86, %union.tree_node** %temp, align 8
  %87 = load %union.tree_node*, %union.tree_node** %ind, align 8
  store %union.tree_node* %87, %union.tree_node** %ar, align 8
  %88 = load %union.tree_node*, %union.tree_node** %temp, align 8
  store %union.tree_node* %88, %union.tree_node** %ind, align 8
  br label %if.end.220

if.end.220:                                       ; preds = %if.then.219, %if.end.211
  %89 = load %union.tree_node*, %union.tree_node** %ar, align 8
  %90 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp221 = icmp eq %union.tree_node* %89, %90
  br i1 %cmp221, label %if.then.222, label %if.end.223

if.then.222:                                      ; preds = %if.end.220
  %91 = load %union.tree_node*, %union.tree_node** %ar, align 8
  store %union.tree_node* %91, %union.tree_node** %retval
  br label %return

if.end.223:                                       ; preds = %if.end.220
  %92 = load %union.tree_node*, %union.tree_node** %ar, align 8
  %common224 = bitcast %union.tree_node* %92 to %struct.tree_common*
  %type225 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common224, i32 0, i32 1
  %93 = load %union.tree_node*, %union.tree_node** %type225, align 8
  %common226 = bitcast %union.tree_node* %93 to %struct.tree_common*
  %code227 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common226, i32 0, i32 2
  %bf.load228 = load i32, i32* %code227, align 8
  %bf.clear229 = and i32 %bf.load228, 255
  %cmp230 = icmp ne i32 %bf.clear229, 13
  br i1 %cmp230, label %if.then.241, label %lor.lhs.false.231

lor.lhs.false.231:                                ; preds = %if.end.223
  %94 = load %union.tree_node*, %union.tree_node** %ar, align 8
  %common232 = bitcast %union.tree_node* %94 to %struct.tree_common*
  %type233 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common232, i32 0, i32 1
  %95 = load %union.tree_node*, %union.tree_node** %type233, align 8
  %common234 = bitcast %union.tree_node* %95 to %struct.tree_common*
  %type235 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common234, i32 0, i32 1
  %96 = load %union.tree_node*, %union.tree_node** %type235, align 8
  %common236 = bitcast %union.tree_node* %96 to %struct.tree_common*
  %code237 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common236, i32 0, i32 2
  %bf.load238 = load i32, i32* %code237, align 8
  %bf.clear239 = and i32 %bf.load238, 255
  %cmp240 = icmp eq i32 %bf.clear239, 23
  br i1 %cmp240, label %if.then.241, label %if.end.242

if.then.241:                                      ; preds = %lor.lhs.false.231, %if.end.223
  call void (i8*, ...) @error(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.28, i32 0, i32 0))
  %97 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %97, %union.tree_node** %retval
  br label %return

if.end.242:                                       ; preds = %lor.lhs.false.231
  %98 = load %union.tree_node*, %union.tree_node** %ind, align 8
  %common243 = bitcast %union.tree_node* %98 to %struct.tree_common*
  %type244 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common243, i32 0, i32 1
  %99 = load %union.tree_node*, %union.tree_node** %type244, align 8
  %common245 = bitcast %union.tree_node* %99 to %struct.tree_common*
  %code246 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common245, i32 0, i32 2
  %bf.load247 = load i32, i32* %code246, align 8
  %bf.clear248 = and i32 %bf.load247, 255
  %cmp249 = icmp ne i32 %bf.clear248, 6
  br i1 %cmp249, label %if.then.250, label %if.end.251

if.then.250:                                      ; preds = %if.end.242
  call void (i8*, ...) @error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.24, i32 0, i32 0))
  %100 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %100, %union.tree_node** %retval
  br label %return

if.end.251:                                       ; preds = %if.end.242
  %101 = load %union.tree_node*, %union.tree_node** %ar, align 8
  %102 = load %union.tree_node*, %union.tree_node** %ind, align 8
  %call252 = call %union.tree_node* @build_binary_op(i32 59, %union.tree_node* %101, %union.tree_node* %102, i32 0)
  %call253 = call %union.tree_node* @build_indirect_ref(%union.tree_node* %call252, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0))
  store %union.tree_node* %call253, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.251, %if.then.250, %if.then.241, %if.then.222, %if.end.111, %if.then.84, %if.then.61, %if.then.32, %if.then.5, %if.then
  %103 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %103
}

; Function Attrs: nounwind uwtable
define i32 @mark_addressable(%union.tree_node* %exp) #0 {
entry:
  %retval = alloca i32, align 4
  %exp.addr = alloca %union.tree_node*, align 8
  %x = alloca %union.tree_node*, align 8
  store %union.tree_node* %exp, %union.tree_node** %exp.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  store %union.tree_node* %0, %union.tree_node** %x, align 8
  br label %while.body

while.body:                                       ; preds = %entry, %sw.epilog
  %1 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %sw.default [
    i32 39, label %sw.bb
    i32 121, label %sw.bb.8
    i32 43, label %sw.bb.8
    i32 127, label %sw.bb.8
    i32 128, label %sw.bb.8
    i32 170, label %sw.bb.12
    i32 46, label %sw.bb.12
    i32 34, label %sw.bb.16
    i32 32, label %sw.bb.16
    i32 35, label %sw.bb.16
    i32 36, label %sw.bb.16
    i32 30, label %sw.bb.97
  ]

sw.bb:                                            ; preds = %while.body
  %2 = load %union.tree_node*, %union.tree_node** %x, align 8
  %exp1 = bitcast %union.tree_node* %2 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 1
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %decl = bitcast %union.tree_node* %3 to %struct.tree_decl*
  %lang_flag_4 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 5
  %4 = bitcast i48* %lang_flag_4 to i64*
  %bf.load2 = load i64, i64* %4, align 8
  %bf.lshr = lshr i64 %bf.load2, 41
  %bf.clear3 = and i64 %bf.lshr, 1
  %bf.cast = trunc i64 %bf.clear3 to i32
  %cmp = icmp eq i32 %bf.cast, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb
  %5 = load %union.tree_node*, %union.tree_node** %x, align 8
  %exp4 = bitcast %union.tree_node* %5 to %struct.tree_exp*
  %operands5 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4, i32 0, i32 2
  %arrayidx6 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5, i32 0, i64 1
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx6, align 8
  %decl7 = bitcast %union.tree_node* %6 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl7, i32 0, i32 8
  %7 = load %union.tree_node*, %union.tree_node** %name, align 8
  %identifier = bitcast %union.tree_node* %7 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %8 = load i8*, i8** %str, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.85, i32 0, i32 0), i8* %8)
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %sw.bb
  br label %sw.bb.8

sw.bb.8:                                          ; preds = %while.body, %while.body, %while.body, %while.body, %if.end
  %9 = load %union.tree_node*, %union.tree_node** %x, align 8
  %exp9 = bitcast %union.tree_node* %9 to %struct.tree_exp*
  %operands10 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp9, i32 0, i32 2
  %arrayidx11 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands10, i32 0, i64 0
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx11, align 8
  store %union.tree_node* %10, %union.tree_node** %x, align 8
  br label %sw.epilog

sw.bb.12:                                         ; preds = %while.body, %while.body
  %11 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common13 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %addressable_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common13, i32 0, i32 2
  %bf.load14 = load i32, i32* %addressable_flag, align 8
  %bf.clear15 = and i32 %bf.load14, -1025
  %bf.set = or i32 %bf.clear15, 1024
  store i32 %bf.set, i32* %addressable_flag, align 8
  store i32 1, i32* %retval
  br label %return

sw.bb.16:                                         ; preds = %while.body, %while.body, %while.body, %while.body
  %12 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl17 = bitcast %union.tree_node* %12 to %struct.tree_decl*
  %regdecl_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl17, i32 0, i32 5
  %13 = bitcast i48* %regdecl_flag to i64*
  %bf.load18 = load i64, i64* %13, align 8
  %bf.lshr19 = lshr i64 %bf.load18, 10
  %bf.clear20 = and i64 %bf.lshr19, 1
  %bf.cast21 = trunc i64 %bf.clear20 to i32
  %tobool = icmp ne i32 %bf.cast21, 0
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %sw.bb.16
  %14 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common22 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %addressable_flag23 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common22, i32 0, i32 2
  %bf.load24 = load i32, i32* %addressable_flag23, align 8
  %bf.lshr25 = lshr i32 %bf.load24, 10
  %bf.clear26 = and i32 %bf.lshr25, 1
  %tobool27 = icmp ne i32 %bf.clear26, 0
  br i1 %tobool27, label %if.else, label %land.lhs.true.28

land.lhs.true.28:                                 ; preds = %land.lhs.true
  %15 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl29 = bitcast %union.tree_node* %15 to %struct.tree_decl*
  %nonlocal_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl29, i32 0, i32 5
  %16 = bitcast i48* %nonlocal_flag to i64*
  %bf.load30 = load i64, i64* %16, align 8
  %bf.lshr31 = lshr i64 %bf.load30, 9
  %bf.clear32 = and i64 %bf.lshr31, 1
  %bf.cast33 = trunc i64 %bf.clear32 to i32
  %tobool34 = icmp ne i32 %bf.cast33, 0
  br i1 %tobool34, label %if.then.35, label %if.else

if.then.35:                                       ; preds = %land.lhs.true.28
  %17 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common36 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common36, i32 0, i32 2
  %bf.load37 = load i32, i32* %public_flag, align 8
  %bf.lshr38 = lshr i32 %bf.load37, 19
  %bf.clear39 = and i32 %bf.lshr38, 1
  %tobool40 = icmp ne i32 %bf.clear39, 0
  br i1 %tobool40, label %if.then.41, label %if.end.47

if.then.41:                                       ; preds = %if.then.35
  %18 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl42 = bitcast %union.tree_node* %18 to %struct.tree_decl*
  %name43 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl42, i32 0, i32 8
  %19 = load %union.tree_node*, %union.tree_node** %name43, align 8
  %identifier44 = bitcast %union.tree_node* %19 to %struct.tree_identifier*
  %id45 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier44, i32 0, i32 1
  %str46 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id45, i32 0, i32 1
  %20 = load i8*, i8** %str46, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.86, i32 0, i32 0), i8* %20)
  store i32 0, i32* %retval
  br label %return

if.end.47:                                        ; preds = %if.then.35
  %21 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl48 = bitcast %union.tree_node* %21 to %struct.tree_decl*
  %name49 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl48, i32 0, i32 8
  %22 = load %union.tree_node*, %union.tree_node** %name49, align 8
  %identifier50 = bitcast %union.tree_node* %22 to %struct.tree_identifier*
  %id51 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier50, i32 0, i32 1
  %str52 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id51, i32 0, i32 1
  %23 = load i8*, i8** %str52, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.87, i32 0, i32 0), i8* %23)
  br label %if.end.96

if.else:                                          ; preds = %land.lhs.true.28, %land.lhs.true, %sw.bb.16
  %24 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl53 = bitcast %union.tree_node* %24 to %struct.tree_decl*
  %regdecl_flag54 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl53, i32 0, i32 5
  %25 = bitcast i48* %regdecl_flag54 to i64*
  %bf.load55 = load i64, i64* %25, align 8
  %bf.lshr56 = lshr i64 %bf.load55, 10
  %bf.clear57 = and i64 %bf.lshr56, 1
  %bf.cast58 = trunc i64 %bf.clear57 to i32
  %tobool59 = icmp ne i32 %bf.cast58, 0
  br i1 %tobool59, label %land.lhs.true.60, label %if.end.95

land.lhs.true.60:                                 ; preds = %if.else
  %26 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common61 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %addressable_flag62 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common61, i32 0, i32 2
  %bf.load63 = load i32, i32* %addressable_flag62, align 8
  %bf.lshr64 = lshr i32 %bf.load63, 10
  %bf.clear65 = and i32 %bf.lshr64, 1
  %tobool66 = icmp ne i32 %bf.clear65, 0
  br i1 %tobool66, label %if.end.95, label %if.then.67

if.then.67:                                       ; preds = %land.lhs.true.60
  %27 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common68 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %public_flag69 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common68, i32 0, i32 2
  %bf.load70 = load i32, i32* %public_flag69, align 8
  %bf.lshr71 = lshr i32 %bf.load70, 19
  %bf.clear72 = and i32 %bf.lshr71, 1
  %tobool73 = icmp ne i32 %bf.clear72, 0
  br i1 %tobool73, label %if.then.74, label %if.else.80

if.then.74:                                       ; preds = %if.then.67
  %28 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl75 = bitcast %union.tree_node* %28 to %struct.tree_decl*
  %name76 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl75, i32 0, i32 8
  %29 = load %union.tree_node*, %union.tree_node** %name76, align 8
  %identifier77 = bitcast %union.tree_node* %29 to %struct.tree_identifier*
  %id78 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier77, i32 0, i32 1
  %str79 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id78, i32 0, i32 1
  %30 = load i8*, i8** %str79, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.88, i32 0, i32 0), i8* %30)
  store i32 0, i32* %retval
  br label %return

if.else.80:                                       ; preds = %if.then.67
  %31 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common81 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common81, i32 0, i32 1
  %32 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common82 = bitcast %union.tree_node* %32 to %struct.tree_common*
  %lang_flag_2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common82, i32 0, i32 2
  %bf.load83 = load i32, i32* %lang_flag_2, align 8
  %bf.lshr84 = lshr i32 %bf.load83, 26
  %bf.clear85 = and i32 %bf.lshr84, 1
  %tobool86 = icmp ne i32 %bf.clear85, 0
  br i1 %tobool86, label %if.then.87, label %if.end.88

if.then.87:                                       ; preds = %if.else.80
  call void (i8*, ...) @error(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.89, i32 0, i32 0))
  store i32 0, i32* %retval
  br label %return

if.end.88:                                        ; preds = %if.else.80
  br label %if.end.89

if.end.89:                                        ; preds = %if.end.88
  %33 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl90 = bitcast %union.tree_node* %33 to %struct.tree_decl*
  %name91 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl90, i32 0, i32 8
  %34 = load %union.tree_node*, %union.tree_node** %name91, align 8
  %identifier92 = bitcast %union.tree_node* %34 to %struct.tree_identifier*
  %id93 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier92, i32 0, i32 1
  %str94 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id93, i32 0, i32 1
  %35 = load i8*, i8** %str94, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.90, i32 0, i32 0), i8* %35)
  br label %if.end.95

if.end.95:                                        ; preds = %if.end.89, %land.lhs.true.60, %if.else
  br label %if.end.96

if.end.96:                                        ; preds = %if.end.95, %if.end.47
  %36 = load %union.tree_node*, %union.tree_node** %x, align 8
  call void @put_var_into_stack(%union.tree_node* %36)
  br label %sw.bb.97

sw.bb.97:                                         ; preds = %while.body, %if.end.96
  %37 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common98 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %addressable_flag99 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common98, i32 0, i32 2
  %bf.load100 = load i32, i32* %addressable_flag99, align 8
  %bf.clear101 = and i32 %bf.load100, -1025
  %bf.set102 = or i32 %bf.clear101, 1024
  store i32 %bf.set102, i32* %addressable_flag99, align 8
  br label %sw.default

sw.default:                                       ; preds = %while.body, %sw.bb.97
  store i32 1, i32* %retval
  br label %return

sw.epilog:                                        ; preds = %sw.bb.8
  br label %while.body

return:                                           ; preds = %sw.default, %if.then.87, %if.then.74, %if.then.41, %sw.bb.12, %if.then
  %38 = load i32, i32* %retval
  ret i32 %38
}

declare i32 @int_fits_type_p(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define i32 @lvalue_p(%union.tree_node* %ref) #0 {
entry:
  %retval = alloca i32, align 4
  %ref.addr = alloca %union.tree_node*, align 8
  %code = alloca i32, align 4
  store %union.tree_node* %ref, %union.tree_node** %ref.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %ref.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %code, align 4
  %1 = load i32, i32* %code, align 4
  switch i32 %1, label %sw.default [
    i32 127, label %sw.bb
    i32 128, label %sw.bb
    i32 39, label %sw.bb
    i32 170, label %sw.bb.2
    i32 29, label %sw.bb.2
    i32 41, label %sw.bb.3
    i32 43, label %sw.bb.3
    i32 34, label %sw.bb.3
    i32 35, label %sw.bb.3
    i32 36, label %sw.bb.3
    i32 0, label %sw.bb.3
    i32 52, label %sw.bb.16
    i32 120, label %sw.bb.16
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry
  %2 = load %union.tree_node*, %union.tree_node** %ref.addr, align 8
  %exp = bitcast %union.tree_node* %2 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %call = call i32 @lvalue_p(%union.tree_node* %3)
  store i32 %call, i32* %retval
  br label %return

sw.bb.2:                                          ; preds = %entry, %entry
  store i32 1, i32* %retval
  br label %return

sw.bb.3:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %4 = load %union.tree_node*, %union.tree_node** %ref.addr, align 8
  %common4 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 1
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common5 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5, i32 0, i32 2
  %bf.load7 = load i32, i32* %code6, align 8
  %bf.clear8 = and i32 %bf.load7, 255
  %cmp = icmp ne i32 %bf.clear8, 23
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %sw.bb.3
  %6 = load %union.tree_node*, %union.tree_node** %ref.addr, align 8
  %common9 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %type10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common9, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %type10, align 8
  %common11 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %code12 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 2
  %bf.load13 = load i32, i32* %code12, align 8
  %bf.clear14 = and i32 %bf.load13, 255
  %cmp15 = icmp ne i32 %bf.clear14, 16
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb.3
  %8 = phi i1 [ false, %sw.bb.3 ], [ %cmp15, %land.rhs ]
  %land.ext = zext i1 %8 to i32
  store i32 %land.ext, i32* %retval
  br label %return

sw.bb.16:                                         ; preds = %entry, %entry
  %9 = load %union.tree_node*, %union.tree_node** %ref.addr, align 8
  %common17 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %type18 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common17, i32 0, i32 1
  %10 = load %union.tree_node*, %union.tree_node** %type18, align 8
  %common19 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %code20 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common19, i32 0, i32 2
  %bf.load21 = load i32, i32* %code20, align 8
  %bf.clear22 = and i32 %bf.load21, 255
  %cmp23 = icmp eq i32 %bf.clear22, 18
  %conv = zext i1 %cmp23 to i32
  store i32 %conv, i32* %retval
  br label %return

sw.default:                                       ; preds = %entry
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %sw.default, %sw.bb.16, %land.end, %sw.bb.2, %sw.bb
  %11 = load i32, i32* %retval
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_binary_op(i32 %code, %union.tree_node* %orig_op0, %union.tree_node* %orig_op1, i32 %convert_p) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %code.addr = alloca i32, align 4
  %orig_op0.addr = alloca %union.tree_node*, align 8
  %orig_op1.addr = alloca %union.tree_node*, align 8
  %convert_p.addr = alloca i32, align 4
  %type0 = alloca %union.tree_node*, align 8
  %type1 = alloca %union.tree_node*, align 8
  %code0 = alloca i32, align 4
  %code1 = alloca i32, align 4
  %op0 = alloca %union.tree_node*, align 8
  %op1 = alloca %union.tree_node*, align 8
  %resultcode = alloca i32, align 4
  %result_type = alloca %union.tree_node*, align 8
  %converted = alloca i32, align 4
  %build_type = alloca %union.tree_node*, align 8
  %final_type = alloca %union.tree_node*, align 8
  %shorten = alloca i32, align 4
  %short_compare = alloca i32, align 4
  %short_shift = alloca i32, align 4
  %common = alloca i32, align 4
  %tt0 = alloca %union.tree_node*, align 8
  %tt1 = alloca %union.tree_node*, align 8
  %none_complex = alloca i32, align 4
  %unsigned0 = alloca i32, align 4
  %unsigned1 = alloca i32, align 4
  %arg0 = alloca %union.tree_node*, align 8
  %arg1 = alloca %union.tree_node*, align 8
  %uns = alloca i32, align 4
  %type718 = alloca %union.tree_node*, align 8
  %unsigned_arg = alloca i32, align 4
  %arg0888 = alloca %union.tree_node*, align 8
  %xop0 = alloca %union.tree_node*, align 8
  %xop1 = alloca %union.tree_node*, align 8
  %xresult_type = alloca %union.tree_node*, align 8
  %xresultcode = alloca i32, align 4
  %val = alloca %union.tree_node*, align 8
  %op0_signed = alloca i32, align 4
  %op1_signed = alloca i32, align 4
  %unsignedp0 = alloca i32, align 4
  %unsignedp1 = alloca i32, align 4
  %primop0 = alloca %union.tree_node*, align 8
  %primop1 = alloca %union.tree_node*, align 8
  %sop = alloca %union.tree_node*, align 8
  %uop = alloca %union.tree_node*, align 8
  %primop = alloca %union.tree_node*, align 8
  %constant = alloca i64, align 8
  %mask = alloca i64, align 8
  %unsignedp = alloca i32, align 4
  %bits = alloca i32, align 4
  %result = alloca %union.tree_node*, align 8
  %folded = alloca %union.tree_node*, align 8
  store i32 %code, i32* %code.addr, align 4
  store %union.tree_node* %orig_op0, %union.tree_node** %orig_op0.addr, align 8
  store %union.tree_node* %orig_op1, %union.tree_node** %orig_op1.addr, align 8
  store i32 %convert_p, i32* %convert_p.addr, align 4
  %0 = load i32, i32* %code.addr, align 4
  store i32 %0, i32* %resultcode, align 4
  store %union.tree_node* null, %union.tree_node** %result_type, align 8
  store i32 0, i32* %converted, align 4
  store %union.tree_node* null, %union.tree_node** %build_type, align 8
  store %union.tree_node* null, %union.tree_node** %final_type, align 8
  store i32 0, i32* %shorten, align 4
  store i32 0, i32* %short_compare, align 4
  store i32 0, i32* %short_shift, align 4
  store i32 0, i32* %common, align 4
  %1 = load i32, i32* %convert_p.addr, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %orig_op0.addr, align 8
  %call = call %union.tree_node* @default_conversion(%union.tree_node* %2)
  store %union.tree_node* %call, %union.tree_node** %op0, align 8
  %3 = load %union.tree_node*, %union.tree_node** %orig_op1.addr, align 8
  %call1 = call %union.tree_node* @default_conversion(%union.tree_node* %3)
  store %union.tree_node* %call1, %union.tree_node** %op1, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %4 = load %union.tree_node*, %union.tree_node** %orig_op0.addr, align 8
  store %union.tree_node* %4, %union.tree_node** %op0, align 8
  %5 = load %union.tree_node*, %union.tree_node** %orig_op1.addr, align 8
  store %union.tree_node* %5, %union.tree_node** %op1, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common2 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %type, align 8
  store %union.tree_node* %7, %union.tree_node** %type0, align 8
  %8 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common3 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %type4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3, i32 0, i32 1
  %9 = load %union.tree_node*, %union.tree_node** %type4, align 8
  store %union.tree_node* %9, %union.tree_node** %type1, align 8
  %10 = load %union.tree_node*, %union.tree_node** %type0, align 8
  %common5 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %code6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5, i32 0, i32 2
  %bf.load = load i32, i32* %code6, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %code0, align 4
  %11 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %common7 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %code8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 2
  %bf.load9 = load i32, i32* %code8, align 8
  %bf.clear10 = and i32 %bf.load9, 255
  store i32 %bf.clear10, i32* %code1, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %12 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common11 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %code12 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 2
  %bf.load13 = load i32, i32* %code12, align 8
  %bf.clear14 = and i32 %bf.load13, 255
  %cmp = icmp eq i32 %bf.clear14, 115
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.cond
  %13 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common15 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %code16 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common15, i32 0, i32 2
  %bf.load17 = load i32, i32* %code16, align 8
  %bf.clear18 = and i32 %bf.load17, 255
  %cmp19 = icmp eq i32 %bf.clear18, 114
  br i1 %cmp19, label %land.lhs.true, label %lor.lhs.false.20

lor.lhs.false.20:                                 ; preds = %lor.lhs.false
  %14 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common21 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %code22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common21, i32 0, i32 2
  %bf.load23 = load i32, i32* %code22, align 8
  %bf.clear24 = and i32 %bf.load23, 255
  %cmp25 = icmp eq i32 %bf.clear24, 116
  br i1 %cmp25, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %lor.lhs.false.20, %lor.lhs.false, %while.cond
  %15 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %exp = bitcast %union.tree_node* %15 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %16 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp26 = icmp ne %union.tree_node* %16, %17
  br i1 %cmp26, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %18 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common27 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %type28 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common27, i32 0, i32 1
  %19 = load %union.tree_node*, %union.tree_node** %type28, align 8
  %20 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %exp29 = bitcast %union.tree_node* %20 to %struct.tree_exp*
  %operands30 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp29, i32 0, i32 2
  %arrayidx31 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands30, i32 0, i64 0
  %21 = load %union.tree_node*, %union.tree_node** %arrayidx31, align 8
  %common32 = bitcast %union.tree_node* %21 to %struct.tree_common*
  %type33 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common32, i32 0, i32 1
  %22 = load %union.tree_node*, %union.tree_node** %type33, align 8
  %cmp34 = icmp eq %union.tree_node* %19, %22
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %lor.lhs.false.20
  %23 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false.20 ], [ %cmp34, %land.rhs ]
  br i1 %23, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %24 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %exp35 = bitcast %union.tree_node* %24 to %struct.tree_exp*
  %operands36 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp35, i32 0, i32 2
  %arrayidx37 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands36, i32 0, i64 0
  %25 = load %union.tree_node*, %union.tree_node** %arrayidx37, align 8
  store %union.tree_node* %25, %union.tree_node** %op0, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  br label %while.cond.38

while.cond.38:                                    ; preds = %while.body.71, %while.end
  %26 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common39 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %code40 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common39, i32 0, i32 2
  %bf.load41 = load i32, i32* %code40, align 8
  %bf.clear42 = and i32 %bf.load41, 255
  %cmp43 = icmp eq i32 %bf.clear42, 115
  br i1 %cmp43, label %land.lhs.true.56, label %lor.lhs.false.44

lor.lhs.false.44:                                 ; preds = %while.cond.38
  %27 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common45 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %code46 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common45, i32 0, i32 2
  %bf.load47 = load i32, i32* %code46, align 8
  %bf.clear48 = and i32 %bf.load47, 255
  %cmp49 = icmp eq i32 %bf.clear48, 114
  br i1 %cmp49, label %land.lhs.true.56, label %lor.lhs.false.50

lor.lhs.false.50:                                 ; preds = %lor.lhs.false.44
  %28 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common51 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %code52 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common51, i32 0, i32 2
  %bf.load53 = load i32, i32* %code52, align 8
  %bf.clear54 = and i32 %bf.load53, 255
  %cmp55 = icmp eq i32 %bf.clear54, 116
  br i1 %cmp55, label %land.lhs.true.56, label %land.end.70

land.lhs.true.56:                                 ; preds = %lor.lhs.false.50, %lor.lhs.false.44, %while.cond.38
  %29 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %exp57 = bitcast %union.tree_node* %29 to %struct.tree_exp*
  %operands58 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp57, i32 0, i32 2
  %arrayidx59 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands58, i32 0, i64 0
  %30 = load %union.tree_node*, %union.tree_node** %arrayidx59, align 8
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp60 = icmp ne %union.tree_node* %30, %31
  br i1 %cmp60, label %land.rhs.61, label %land.end.70

land.rhs.61:                                      ; preds = %land.lhs.true.56
  %32 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common62 = bitcast %union.tree_node* %32 to %struct.tree_common*
  %type63 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common62, i32 0, i32 1
  %33 = load %union.tree_node*, %union.tree_node** %type63, align 8
  %34 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %exp64 = bitcast %union.tree_node* %34 to %struct.tree_exp*
  %operands65 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp64, i32 0, i32 2
  %arrayidx66 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands65, i32 0, i64 0
  %35 = load %union.tree_node*, %union.tree_node** %arrayidx66, align 8
  %common67 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %type68 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common67, i32 0, i32 1
  %36 = load %union.tree_node*, %union.tree_node** %type68, align 8
  %cmp69 = icmp eq %union.tree_node* %33, %36
  br label %land.end.70

land.end.70:                                      ; preds = %land.rhs.61, %land.lhs.true.56, %lor.lhs.false.50
  %37 = phi i1 [ false, %land.lhs.true.56 ], [ false, %lor.lhs.false.50 ], [ %cmp69, %land.rhs.61 ]
  br i1 %37, label %while.body.71, label %while.end.75

while.body.71:                                    ; preds = %land.end.70
  %38 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %exp72 = bitcast %union.tree_node* %38 to %struct.tree_exp*
  %operands73 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp72, i32 0, i32 2
  %arrayidx74 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands73, i32 0, i64 0
  %39 = load %union.tree_node*, %union.tree_node** %arrayidx74, align 8
  store %union.tree_node* %39, %union.tree_node** %op1, align 8
  br label %while.cond.38

while.end.75:                                     ; preds = %land.end.70
  %40 = load i32, i32* %code0, align 4
  %cmp76 = icmp eq i32 %40, 0
  br i1 %cmp76, label %if.then.79, label %lor.lhs.false.77

lor.lhs.false.77:                                 ; preds = %while.end.75
  %41 = load i32, i32* %code1, align 4
  %cmp78 = icmp eq i32 %41, 0
  br i1 %cmp78, label %if.then.79, label %if.end.80

if.then.79:                                       ; preds = %lor.lhs.false.77, %while.end.75
  %42 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %42, %union.tree_node** %retval
  br label %return

if.end.80:                                        ; preds = %lor.lhs.false.77
  %43 = load i32, i32* %code.addr, align 4
  switch i32 %43, label %sw.default [
    i32 59, label %sw.bb
    i32 60, label %sw.bb.95
    i32 61, label %sw.bb.113
    i32 62, label %sw.bb.114
    i32 63, label %sw.bb.114
    i32 64, label %sw.bb.114
    i32 65, label %sw.bb.114
    i32 71, label %sw.bb.114
    i32 88, label %sw.bb.157
    i32 89, label %sw.bb.157
    i32 86, label %sw.bb.157
    i32 87, label %sw.bb.157
    i32 66, label %sw.bb.163
    i32 68, label %sw.bb.163
    i32 91, label %sw.bb.198
    i32 92, label %sw.bb.198
    i32 93, label %sw.bb.198
    i32 94, label %sw.bb.198
    i32 95, label %sw.bb.198
    i32 83, label %sw.bb.218
    i32 82, label %sw.bb.261
    i32 85, label %sw.bb.308
    i32 84, label %sw.bb.308
    i32 101, label %sw.bb.355
    i32 102, label %sw.bb.355
    i32 79, label %sw.bb.508
    i32 78, label %sw.bb.508
    i32 98, label %sw.bb.548
    i32 100, label %sw.bb.548
    i32 97, label %sw.bb.548
    i32 99, label %sw.bb.548
    i32 103, label %sw.bb.667
    i32 104, label %sw.bb.667
    i32 105, label %sw.bb.667
    i32 106, label %sw.bb.667
    i32 107, label %sw.bb.667
    i32 108, label %sw.bb.667
    i32 109, label %sw.bb.667
  ]

sw.bb:                                            ; preds = %if.end.80
  %44 = load i32, i32* %code0, align 4
  %cmp81 = icmp eq i32 %44, 13
  br i1 %cmp81, label %land.lhs.true.82, label %if.else.86

land.lhs.true.82:                                 ; preds = %sw.bb
  %45 = load i32, i32* %code1, align 4
  %cmp83 = icmp eq i32 %45, 6
  br i1 %cmp83, label %if.then.84, label %if.else.86

if.then.84:                                       ; preds = %land.lhs.true.82
  %46 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %47 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call85 = call %union.tree_node* @pointer_int_sum(i32 59, %union.tree_node* %46, %union.tree_node* %47)
  store %union.tree_node* %call85, %union.tree_node** %retval
  br label %return

if.else.86:                                       ; preds = %land.lhs.true.82, %sw.bb
  %48 = load i32, i32* %code1, align 4
  %cmp87 = icmp eq i32 %48, 13
  br i1 %cmp87, label %land.lhs.true.88, label %if.else.92

land.lhs.true.88:                                 ; preds = %if.else.86
  %49 = load i32, i32* %code0, align 4
  %cmp89 = icmp eq i32 %49, 6
  br i1 %cmp89, label %if.then.90, label %if.else.92

if.then.90:                                       ; preds = %land.lhs.true.88
  %50 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %51 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %call91 = call %union.tree_node* @pointer_int_sum(i32 59, %union.tree_node* %50, %union.tree_node* %51)
  store %union.tree_node* %call91, %union.tree_node** %retval
  br label %return

if.else.92:                                       ; preds = %land.lhs.true.88, %if.else.86
  store i32 1, i32* %common, align 4
  br label %if.end.93

if.end.93:                                        ; preds = %if.else.92
  br label %if.end.94

if.end.94:                                        ; preds = %if.end.93
  br label %sw.epilog

sw.bb.95:                                         ; preds = %if.end.80
  %52 = load i32, i32* %code0, align 4
  %cmp96 = icmp eq i32 %52, 13
  br i1 %cmp96, label %land.lhs.true.97, label %if.else.104

land.lhs.true.97:                                 ; preds = %sw.bb.95
  %53 = load i32, i32* %code1, align 4
  %cmp98 = icmp eq i32 %53, 13
  br i1 %cmp98, label %land.lhs.true.99, label %if.else.104

land.lhs.true.99:                                 ; preds = %land.lhs.true.97
  %54 = load %union.tree_node*, %union.tree_node** %type0, align 8
  %55 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %call100 = call i32 @comp_target_types(%union.tree_node* %54, %union.tree_node* %55)
  %tobool101 = icmp ne i32 %call100, 0
  br i1 %tobool101, label %if.then.102, label %if.else.104

if.then.102:                                      ; preds = %land.lhs.true.99
  %56 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %57 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call103 = call %union.tree_node* @pointer_diff(%union.tree_node* %56, %union.tree_node* %57)
  store %union.tree_node* %call103, %union.tree_node** %retval
  br label %return

if.else.104:                                      ; preds = %land.lhs.true.99, %land.lhs.true.97, %sw.bb.95
  %58 = load i32, i32* %code0, align 4
  %cmp105 = icmp eq i32 %58, 13
  br i1 %cmp105, label %land.lhs.true.106, label %if.else.110

land.lhs.true.106:                                ; preds = %if.else.104
  %59 = load i32, i32* %code1, align 4
  %cmp107 = icmp eq i32 %59, 6
  br i1 %cmp107, label %if.then.108, label %if.else.110

if.then.108:                                      ; preds = %land.lhs.true.106
  %60 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %61 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call109 = call %union.tree_node* @pointer_int_sum(i32 60, %union.tree_node* %60, %union.tree_node* %61)
  store %union.tree_node* %call109, %union.tree_node** %retval
  br label %return

if.else.110:                                      ; preds = %land.lhs.true.106, %if.else.104
  store i32 1, i32* %common, align 4
  br label %if.end.111

if.end.111:                                       ; preds = %if.else.110
  br label %if.end.112

if.end.112:                                       ; preds = %if.end.111
  br label %sw.epilog

sw.bb.113:                                        ; preds = %if.end.80
  store i32 1, i32* %common, align 4
  br label %sw.epilog

sw.bb.114:                                        ; preds = %if.end.80, %if.end.80, %if.end.80, %if.end.80, %if.end.80
  %62 = load i32, i32* @warn_div_by_zero, align 4
  %tobool115 = icmp ne i32 %62, 0
  br i1 %tobool115, label %land.lhs.true.116, label %if.end.122

land.lhs.true.116:                                ; preds = %sw.bb.114
  %63 = load i32, i32* @skip_evaluation, align 4
  %cmp117 = icmp eq i32 %63, 0
  br i1 %cmp117, label %land.lhs.true.118, label %if.end.122

land.lhs.true.118:                                ; preds = %land.lhs.true.116
  %64 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call119 = call i32 @integer_zerop(%union.tree_node* %64)
  %tobool120 = icmp ne i32 %call119, 0
  br i1 %tobool120, label %if.then.121, label %if.end.122

if.then.121:                                      ; preds = %land.lhs.true.118
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.45, i32 0, i32 0))
  br label %if.end.122

if.end.122:                                       ; preds = %if.then.121, %land.lhs.true.118, %land.lhs.true.116, %sw.bb.114
  %65 = load i32, i32* %code0, align 4
  %cmp123 = icmp eq i32 %65, 6
  br i1 %cmp123, label %land.lhs.true.128, label %lor.lhs.false.124

lor.lhs.false.124:                                ; preds = %if.end.122
  %66 = load i32, i32* %code0, align 4
  %cmp125 = icmp eq i32 %66, 7
  br i1 %cmp125, label %land.lhs.true.128, label %lor.lhs.false.126

lor.lhs.false.126:                                ; preds = %lor.lhs.false.124
  %67 = load i32, i32* %code0, align 4
  %cmp127 = icmp eq i32 %67, 8
  br i1 %cmp127, label %land.lhs.true.128, label %if.end.156

land.lhs.true.128:                                ; preds = %lor.lhs.false.126, %lor.lhs.false.124, %if.end.122
  %68 = load i32, i32* %code1, align 4
  %cmp129 = icmp eq i32 %68, 6
  br i1 %cmp129, label %if.then.134, label %lor.lhs.false.130

lor.lhs.false.130:                                ; preds = %land.lhs.true.128
  %69 = load i32, i32* %code1, align 4
  %cmp131 = icmp eq i32 %69, 7
  br i1 %cmp131, label %if.then.134, label %lor.lhs.false.132

lor.lhs.false.132:                                ; preds = %lor.lhs.false.130
  %70 = load i32, i32* %code1, align 4
  %cmp133 = icmp eq i32 %70, 8
  br i1 %cmp133, label %if.then.134, label %if.end.156

if.then.134:                                      ; preds = %lor.lhs.false.132, %lor.lhs.false.130, %land.lhs.true.128
  %71 = load i32, i32* %code0, align 4
  %cmp135 = icmp eq i32 %71, 6
  br i1 %cmp135, label %land.lhs.true.136, label %if.then.138

land.lhs.true.136:                                ; preds = %if.then.134
  %72 = load i32, i32* %code1, align 4
  %cmp137 = icmp eq i32 %72, 6
  br i1 %cmp137, label %if.else.139, label %if.then.138

if.then.138:                                      ; preds = %land.lhs.true.136, %if.then.134
  store i32 70, i32* %resultcode, align 4
  br label %if.end.155

if.else.139:                                      ; preds = %land.lhs.true.136
  %73 = load %union.tree_node*, %union.tree_node** %orig_op0.addr, align 8
  %common140 = bitcast %union.tree_node* %73 to %struct.tree_common*
  %type141 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common140, i32 0, i32 1
  %74 = load %union.tree_node*, %union.tree_node** %type141, align 8
  %common142 = bitcast %union.tree_node* %74 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common142, i32 0, i32 2
  %bf.load143 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr = lshr i32 %bf.load143, 13
  %bf.clear144 = and i32 %bf.lshr, 1
  %tobool145 = icmp ne i32 %bf.clear144, 0
  br i1 %tobool145, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.else.139
  %75 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common146 = bitcast %union.tree_node* %75 to %struct.tree_common*
  %code147 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common146, i32 0, i32 2
  %bf.load148 = load i32, i32* %code147, align 8
  %bf.clear149 = and i32 %bf.load148, 255
  %cmp150 = icmp eq i32 %bf.clear149, 25
  br i1 %cmp150, label %land.rhs.151, label %land.end.154

land.rhs.151:                                     ; preds = %lor.rhs
  %76 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call152 = call i32 @integer_all_onesp(%union.tree_node* %76)
  %tobool153 = icmp ne i32 %call152, 0
  %lnot = xor i1 %tobool153, true
  br label %land.end.154

land.end.154:                                     ; preds = %land.rhs.151, %lor.rhs
  %77 = phi i1 [ false, %lor.rhs ], [ %lnot, %land.rhs.151 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end.154, %if.else.139
  %78 = phi i1 [ true, %if.else.139 ], [ %77, %land.end.154 ]
  %lor.ext = zext i1 %78 to i32
  store i32 %lor.ext, i32* %shorten, align 4
  br label %if.end.155

if.end.155:                                       ; preds = %lor.end, %if.then.138
  store i32 1, i32* %common, align 4
  br label %if.end.156

if.end.156:                                       ; preds = %if.end.155, %lor.lhs.false.132, %lor.lhs.false.126
  br label %sw.epilog

sw.bb.157:                                        ; preds = %if.end.80, %if.end.80, %if.end.80, %if.end.80
  %79 = load i32, i32* %code0, align 4
  %cmp158 = icmp eq i32 %79, 6
  br i1 %cmp158, label %land.lhs.true.159, label %if.end.162

land.lhs.true.159:                                ; preds = %sw.bb.157
  %80 = load i32, i32* %code1, align 4
  %cmp160 = icmp eq i32 %80, 6
  br i1 %cmp160, label %if.then.161, label %if.end.162

if.then.161:                                      ; preds = %land.lhs.true.159
  store i32 -1, i32* %shorten, align 4
  br label %if.end.162

if.end.162:                                       ; preds = %if.then.161, %land.lhs.true.159, %sw.bb.157
  br label %sw.epilog

sw.bb.163:                                        ; preds = %if.end.80, %if.end.80
  %81 = load i32, i32* @warn_div_by_zero, align 4
  %tobool164 = icmp ne i32 %81, 0
  br i1 %tobool164, label %land.lhs.true.165, label %if.end.171

land.lhs.true.165:                                ; preds = %sw.bb.163
  %82 = load i32, i32* @skip_evaluation, align 4
  %cmp166 = icmp eq i32 %82, 0
  br i1 %cmp166, label %land.lhs.true.167, label %if.end.171

land.lhs.true.167:                                ; preds = %land.lhs.true.165
  %83 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call168 = call i32 @integer_zerop(%union.tree_node* %83)
  %tobool169 = icmp ne i32 %call168, 0
  br i1 %tobool169, label %if.then.170, label %if.end.171

if.then.170:                                      ; preds = %land.lhs.true.167
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.45, i32 0, i32 0))
  br label %if.end.171

if.end.171:                                       ; preds = %if.then.170, %land.lhs.true.167, %land.lhs.true.165, %sw.bb.163
  %84 = load i32, i32* %code0, align 4
  %cmp172 = icmp eq i32 %84, 6
  br i1 %cmp172, label %land.lhs.true.173, label %if.end.197

land.lhs.true.173:                                ; preds = %if.end.171
  %85 = load i32, i32* %code1, align 4
  %cmp174 = icmp eq i32 %85, 6
  br i1 %cmp174, label %if.then.175, label %if.end.197

if.then.175:                                      ; preds = %land.lhs.true.173
  %86 = load %union.tree_node*, %union.tree_node** %orig_op0.addr, align 8
  %common176 = bitcast %union.tree_node* %86 to %struct.tree_common*
  %type177 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common176, i32 0, i32 1
  %87 = load %union.tree_node*, %union.tree_node** %type177, align 8
  %common178 = bitcast %union.tree_node* %87 to %struct.tree_common*
  %unsigned_flag179 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common178, i32 0, i32 2
  %bf.load180 = load i32, i32* %unsigned_flag179, align 8
  %bf.lshr181 = lshr i32 %bf.load180, 13
  %bf.clear182 = and i32 %bf.lshr181, 1
  %tobool183 = icmp ne i32 %bf.clear182, 0
  br i1 %tobool183, label %lor.end.195, label %lor.rhs.184

lor.rhs.184:                                      ; preds = %if.then.175
  %88 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common185 = bitcast %union.tree_node* %88 to %struct.tree_common*
  %code186 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common185, i32 0, i32 2
  %bf.load187 = load i32, i32* %code186, align 8
  %bf.clear188 = and i32 %bf.load187, 255
  %cmp189 = icmp eq i32 %bf.clear188, 25
  br i1 %cmp189, label %land.rhs.190, label %land.end.194

land.rhs.190:                                     ; preds = %lor.rhs.184
  %89 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call191 = call i32 @integer_all_onesp(%union.tree_node* %89)
  %tobool192 = icmp ne i32 %call191, 0
  %lnot193 = xor i1 %tobool192, true
  br label %land.end.194

land.end.194:                                     ; preds = %land.rhs.190, %lor.rhs.184
  %90 = phi i1 [ false, %lor.rhs.184 ], [ %lnot193, %land.rhs.190 ]
  br label %lor.end.195

lor.end.195:                                      ; preds = %land.end.194, %if.then.175
  %91 = phi i1 [ true, %if.then.175 ], [ %90, %land.end.194 ]
  %lor.ext196 = zext i1 %91 to i32
  store i32 %lor.ext196, i32* %shorten, align 4
  store i32 1, i32* %common, align 4
  br label %if.end.197

if.end.197:                                       ; preds = %lor.end.195, %land.lhs.true.173, %if.end.171
  br label %sw.epilog

sw.bb.198:                                        ; preds = %if.end.80, %if.end.80, %if.end.80, %if.end.80, %if.end.80
  %92 = load i32, i32* %code0, align 4
  %cmp199 = icmp eq i32 %92, 6
  br i1 %cmp199, label %land.lhs.true.206, label %lor.lhs.false.200

lor.lhs.false.200:                                ; preds = %sw.bb.198
  %93 = load i32, i32* %code0, align 4
  %cmp201 = icmp eq i32 %93, 13
  br i1 %cmp201, label %land.lhs.true.206, label %lor.lhs.false.202

lor.lhs.false.202:                                ; preds = %lor.lhs.false.200
  %94 = load i32, i32* %code0, align 4
  %cmp203 = icmp eq i32 %94, 7
  br i1 %cmp203, label %land.lhs.true.206, label %lor.lhs.false.204

lor.lhs.false.204:                                ; preds = %lor.lhs.false.202
  %95 = load i32, i32* %code0, align 4
  %cmp205 = icmp eq i32 %95, 8
  br i1 %cmp205, label %land.lhs.true.206, label %if.end.217

land.lhs.true.206:                                ; preds = %lor.lhs.false.204, %lor.lhs.false.202, %lor.lhs.false.200, %sw.bb.198
  %96 = load i32, i32* %code1, align 4
  %cmp207 = icmp eq i32 %96, 6
  br i1 %cmp207, label %if.then.214, label %lor.lhs.false.208

lor.lhs.false.208:                                ; preds = %land.lhs.true.206
  %97 = load i32, i32* %code1, align 4
  %cmp209 = icmp eq i32 %97, 13
  br i1 %cmp209, label %if.then.214, label %lor.lhs.false.210

lor.lhs.false.210:                                ; preds = %lor.lhs.false.208
  %98 = load i32, i32* %code1, align 4
  %cmp211 = icmp eq i32 %98, 7
  br i1 %cmp211, label %if.then.214, label %lor.lhs.false.212

lor.lhs.false.212:                                ; preds = %lor.lhs.false.210
  %99 = load i32, i32* %code1, align 4
  %cmp213 = icmp eq i32 %99, 8
  br i1 %cmp213, label %if.then.214, label %if.end.217

if.then.214:                                      ; preds = %lor.lhs.false.212, %lor.lhs.false.210, %lor.lhs.false.208, %land.lhs.true.206
  %100 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  store %union.tree_node* %100, %union.tree_node** %result_type, align 8
  %101 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %call215 = call %union.tree_node* @truthvalue_conversion(%union.tree_node* %101)
  store %union.tree_node* %call215, %union.tree_node** %op0, align 8
  %102 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call216 = call %union.tree_node* @truthvalue_conversion(%union.tree_node* %102)
  store %union.tree_node* %call216, %union.tree_node** %op1, align 8
  store i32 1, i32* %converted, align 4
  br label %if.end.217

if.end.217:                                       ; preds = %if.then.214, %lor.lhs.false.212, %lor.lhs.false.204
  br label %sw.epilog

sw.bb.218:                                        ; preds = %if.end.80
  %103 = load i32, i32* %code0, align 4
  %cmp219 = icmp eq i32 %103, 6
  br i1 %cmp219, label %land.lhs.true.220, label %if.end.260

land.lhs.true.220:                                ; preds = %sw.bb.218
  %104 = load i32, i32* %code1, align 4
  %cmp221 = icmp eq i32 %104, 6
  br i1 %cmp221, label %if.then.222, label %if.end.260

if.then.222:                                      ; preds = %land.lhs.true.220
  %105 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common223 = bitcast %union.tree_node* %105 to %struct.tree_common*
  %code224 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common223, i32 0, i32 2
  %bf.load225 = load i32, i32* %code224, align 8
  %bf.clear226 = and i32 %bf.load225, 255
  %cmp227 = icmp eq i32 %bf.clear226, 25
  br i1 %cmp227, label %land.lhs.true.228, label %if.end.248

land.lhs.true.228:                                ; preds = %if.then.222
  %106 = load i32, i32* @skip_evaluation, align 4
  %cmp229 = icmp eq i32 %106, 0
  br i1 %cmp229, label %if.then.230, label %if.end.248

if.then.230:                                      ; preds = %land.lhs.true.228
  %107 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call231 = call i32 @tree_int_cst_sgn(%union.tree_node* %107)
  %cmp232 = icmp slt i32 %call231, 0
  br i1 %cmp232, label %if.then.233, label %if.else.234

if.then.233:                                      ; preds = %if.then.230
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.46, i32 0, i32 0))
  br label %if.end.247

if.else.234:                                      ; preds = %if.then.230
  %108 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call235 = call i32 @integer_zerop(%union.tree_node* %108)
  %tobool236 = icmp ne i32 %call235, 0
  br i1 %tobool236, label %if.end.238, label %if.then.237

if.then.237:                                      ; preds = %if.else.234
  store i32 1, i32* %short_shift, align 4
  br label %if.end.238

if.end.238:                                       ; preds = %if.then.237, %if.else.234
  %109 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %110 = load %union.tree_node*, %union.tree_node** %type0, align 8
  %type239 = bitcast %union.tree_node* %110 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type239, i32 0, i32 6
  %bf.load240 = load i32, i32* %precision, align 4
  %bf.clear241 = and i32 %bf.load240, 511
  %conv = zext i32 %bf.clear241 to i64
  %call242 = call i32 @compare_tree_int(%union.tree_node* %109, i64 %conv)
  %cmp243 = icmp sge i32 %call242, 0
  br i1 %cmp243, label %if.then.245, label %if.end.246

if.then.245:                                      ; preds = %if.end.238
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.47, i32 0, i32 0))
  br label %if.end.246

if.end.246:                                       ; preds = %if.then.245, %if.end.238
  br label %if.end.247

if.end.247:                                       ; preds = %if.end.246, %if.then.233
  br label %if.end.248

if.end.248:                                       ; preds = %if.end.247, %land.lhs.true.228, %if.then.222
  %111 = load %union.tree_node*, %union.tree_node** %type0, align 8
  store %union.tree_node* %111, %union.tree_node** %result_type, align 8
  %112 = load i32, i32* @flag_traditional, align 4
  %tobool249 = icmp ne i32 %112, 0
  br i1 %tobool249, label %if.end.259, label %if.then.250

if.then.250:                                      ; preds = %if.end.248
  %113 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common251 = bitcast %union.tree_node* %113 to %struct.tree_common*
  %type252 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common251, i32 0, i32 1
  %114 = load %union.tree_node*, %union.tree_node** %type252, align 8
  %type253 = bitcast %union.tree_node* %114 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type253, i32 0, i32 15
  %115 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %116 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %cmp254 = icmp ne %union.tree_node* %115, %116
  br i1 %cmp254, label %if.then.256, label %if.end.258

if.then.256:                                      ; preds = %if.then.250
  %117 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %118 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call257 = call %union.tree_node* @convert(%union.tree_node* %117, %union.tree_node* %118)
  store %union.tree_node* %call257, %union.tree_node** %op1, align 8
  br label %if.end.258

if.end.258:                                       ; preds = %if.then.256, %if.then.250
  store i32 1, i32* %converted, align 4
  br label %if.end.259

if.end.259:                                       ; preds = %if.end.258, %if.end.248
  br label %if.end.260

if.end.260:                                       ; preds = %if.end.259, %land.lhs.true.220, %sw.bb.218
  br label %sw.epilog

sw.bb.261:                                        ; preds = %if.end.80
  %119 = load i32, i32* %code0, align 4
  %cmp262 = icmp eq i32 %119, 6
  br i1 %cmp262, label %land.lhs.true.264, label %if.end.307

land.lhs.true.264:                                ; preds = %sw.bb.261
  %120 = load i32, i32* %code1, align 4
  %cmp265 = icmp eq i32 %120, 6
  br i1 %cmp265, label %if.then.267, label %if.end.307

if.then.267:                                      ; preds = %land.lhs.true.264
  %121 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common268 = bitcast %union.tree_node* %121 to %struct.tree_common*
  %code269 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common268, i32 0, i32 2
  %bf.load270 = load i32, i32* %code269, align 8
  %bf.clear271 = and i32 %bf.load270, 255
  %cmp272 = icmp eq i32 %bf.clear271, 25
  br i1 %cmp272, label %land.lhs.true.274, label %if.end.294

land.lhs.true.274:                                ; preds = %if.then.267
  %122 = load i32, i32* @skip_evaluation, align 4
  %cmp275 = icmp eq i32 %122, 0
  br i1 %cmp275, label %if.then.277, label %if.end.294

if.then.277:                                      ; preds = %land.lhs.true.274
  %123 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call278 = call i32 @tree_int_cst_sgn(%union.tree_node* %123)
  %cmp279 = icmp slt i32 %call278, 0
  br i1 %cmp279, label %if.then.281, label %if.else.282

if.then.281:                                      ; preds = %if.then.277
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.48, i32 0, i32 0))
  br label %if.end.293

if.else.282:                                      ; preds = %if.then.277
  %124 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %125 = load %union.tree_node*, %union.tree_node** %type0, align 8
  %type283 = bitcast %union.tree_node* %125 to %struct.tree_type*
  %precision284 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type283, i32 0, i32 6
  %bf.load285 = load i32, i32* %precision284, align 4
  %bf.clear286 = and i32 %bf.load285, 511
  %conv287 = zext i32 %bf.clear286 to i64
  %call288 = call i32 @compare_tree_int(%union.tree_node* %124, i64 %conv287)
  %cmp289 = icmp sge i32 %call288, 0
  br i1 %cmp289, label %if.then.291, label %if.end.292

if.then.291:                                      ; preds = %if.else.282
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.49, i32 0, i32 0))
  br label %if.end.292

if.end.292:                                       ; preds = %if.then.291, %if.else.282
  br label %if.end.293

if.end.293:                                       ; preds = %if.end.292, %if.then.281
  br label %if.end.294

if.end.294:                                       ; preds = %if.end.293, %land.lhs.true.274, %if.then.267
  %126 = load %union.tree_node*, %union.tree_node** %type0, align 8
  store %union.tree_node* %126, %union.tree_node** %result_type, align 8
  %127 = load i32, i32* @flag_traditional, align 4
  %tobool295 = icmp ne i32 %127, 0
  br i1 %tobool295, label %if.end.306, label %if.then.296

if.then.296:                                      ; preds = %if.end.294
  %128 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common297 = bitcast %union.tree_node* %128 to %struct.tree_common*
  %type298 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common297, i32 0, i32 1
  %129 = load %union.tree_node*, %union.tree_node** %type298, align 8
  %type299 = bitcast %union.tree_node* %129 to %struct.tree_type*
  %main_variant300 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type299, i32 0, i32 15
  %130 = load %union.tree_node*, %union.tree_node** %main_variant300, align 8
  %131 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %cmp301 = icmp ne %union.tree_node* %130, %131
  br i1 %cmp301, label %if.then.303, label %if.end.305

if.then.303:                                      ; preds = %if.then.296
  %132 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %133 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call304 = call %union.tree_node* @convert(%union.tree_node* %132, %union.tree_node* %133)
  store %union.tree_node* %call304, %union.tree_node** %op1, align 8
  br label %if.end.305

if.end.305:                                       ; preds = %if.then.303, %if.then.296
  store i32 1, i32* %converted, align 4
  br label %if.end.306

if.end.306:                                       ; preds = %if.end.305, %if.end.294
  br label %if.end.307

if.end.307:                                       ; preds = %if.end.306, %land.lhs.true.264, %sw.bb.261
  br label %sw.epilog

sw.bb.308:                                        ; preds = %if.end.80, %if.end.80
  %134 = load i32, i32* %code0, align 4
  %cmp309 = icmp eq i32 %134, 6
  br i1 %cmp309, label %land.lhs.true.311, label %if.end.354

land.lhs.true.311:                                ; preds = %sw.bb.308
  %135 = load i32, i32* %code1, align 4
  %cmp312 = icmp eq i32 %135, 6
  br i1 %cmp312, label %if.then.314, label %if.end.354

if.then.314:                                      ; preds = %land.lhs.true.311
  %136 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common315 = bitcast %union.tree_node* %136 to %struct.tree_common*
  %code316 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common315, i32 0, i32 2
  %bf.load317 = load i32, i32* %code316, align 8
  %bf.clear318 = and i32 %bf.load317, 255
  %cmp319 = icmp eq i32 %bf.clear318, 25
  br i1 %cmp319, label %land.lhs.true.321, label %if.end.341

land.lhs.true.321:                                ; preds = %if.then.314
  %137 = load i32, i32* @skip_evaluation, align 4
  %cmp322 = icmp eq i32 %137, 0
  br i1 %cmp322, label %if.then.324, label %if.end.341

if.then.324:                                      ; preds = %land.lhs.true.321
  %138 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call325 = call i32 @tree_int_cst_sgn(%union.tree_node* %138)
  %cmp326 = icmp slt i32 %call325, 0
  br i1 %cmp326, label %if.then.328, label %if.else.329

if.then.328:                                      ; preds = %if.then.324
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.50, i32 0, i32 0))
  br label %if.end.340

if.else.329:                                      ; preds = %if.then.324
  %139 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %140 = load %union.tree_node*, %union.tree_node** %type0, align 8
  %type330 = bitcast %union.tree_node* %140 to %struct.tree_type*
  %precision331 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type330, i32 0, i32 6
  %bf.load332 = load i32, i32* %precision331, align 4
  %bf.clear333 = and i32 %bf.load332, 511
  %conv334 = zext i32 %bf.clear333 to i64
  %call335 = call i32 @compare_tree_int(%union.tree_node* %139, i64 %conv334)
  %cmp336 = icmp sge i32 %call335, 0
  br i1 %cmp336, label %if.then.338, label %if.end.339

if.then.338:                                      ; preds = %if.else.329
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.51, i32 0, i32 0))
  br label %if.end.339

if.end.339:                                       ; preds = %if.then.338, %if.else.329
  br label %if.end.340

if.end.340:                                       ; preds = %if.end.339, %if.then.328
  br label %if.end.341

if.end.341:                                       ; preds = %if.end.340, %land.lhs.true.321, %if.then.314
  %141 = load %union.tree_node*, %union.tree_node** %type0, align 8
  store %union.tree_node* %141, %union.tree_node** %result_type, align 8
  %142 = load i32, i32* @flag_traditional, align 4
  %tobool342 = icmp ne i32 %142, 0
  br i1 %tobool342, label %if.end.353, label %if.then.343

if.then.343:                                      ; preds = %if.end.341
  %143 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common344 = bitcast %union.tree_node* %143 to %struct.tree_common*
  %type345 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common344, i32 0, i32 1
  %144 = load %union.tree_node*, %union.tree_node** %type345, align 8
  %type346 = bitcast %union.tree_node* %144 to %struct.tree_type*
  %main_variant347 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type346, i32 0, i32 15
  %145 = load %union.tree_node*, %union.tree_node** %main_variant347, align 8
  %146 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %cmp348 = icmp ne %union.tree_node* %145, %146
  br i1 %cmp348, label %if.then.350, label %if.end.352

if.then.350:                                      ; preds = %if.then.343
  %147 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %148 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call351 = call %union.tree_node* @convert(%union.tree_node* %147, %union.tree_node* %148)
  store %union.tree_node* %call351, %union.tree_node** %op1, align 8
  br label %if.end.352

if.end.352:                                       ; preds = %if.then.350, %if.then.343
  store i32 1, i32* %converted, align 4
  br label %if.end.353

if.end.353:                                       ; preds = %if.end.352, %if.end.341
  br label %if.end.354

if.end.354:                                       ; preds = %if.end.353, %land.lhs.true.311, %sw.bb.308
  br label %sw.epilog

sw.bb.355:                                        ; preds = %if.end.80, %if.end.80
  %149 = load i32, i32* @warn_float_equal, align 4
  %tobool356 = icmp ne i32 %149, 0
  br i1 %tobool356, label %land.lhs.true.357, label %if.end.364

land.lhs.true.357:                                ; preds = %sw.bb.355
  %150 = load i32, i32* %code0, align 4
  %cmp358 = icmp eq i32 %150, 7
  br i1 %cmp358, label %if.then.363, label %lor.lhs.false.360

lor.lhs.false.360:                                ; preds = %land.lhs.true.357
  %151 = load i32, i32* %code1, align 4
  %cmp361 = icmp eq i32 %151, 7
  br i1 %cmp361, label %if.then.363, label %if.end.364

if.then.363:                                      ; preds = %lor.lhs.false.360, %land.lhs.true.357
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.52, i32 0, i32 0))
  br label %if.end.364

if.end.364:                                       ; preds = %if.then.363, %lor.lhs.false.360, %sw.bb.355
  %152 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  store %union.tree_node* %152, %union.tree_node** %build_type, align 8
  %153 = load i32, i32* %code0, align 4
  %cmp365 = icmp eq i32 %153, 6
  br i1 %cmp365, label %land.lhs.true.373, label %lor.lhs.false.367

lor.lhs.false.367:                                ; preds = %if.end.364
  %154 = load i32, i32* %code0, align 4
  %cmp368 = icmp eq i32 %154, 7
  br i1 %cmp368, label %land.lhs.true.373, label %lor.lhs.false.370

lor.lhs.false.370:                                ; preds = %lor.lhs.false.367
  %155 = load i32, i32* %code0, align 4
  %cmp371 = icmp eq i32 %155, 8
  br i1 %cmp371, label %land.lhs.true.373, label %if.else.383

land.lhs.true.373:                                ; preds = %lor.lhs.false.370, %lor.lhs.false.367, %if.end.364
  %156 = load i32, i32* %code1, align 4
  %cmp374 = icmp eq i32 %156, 6
  br i1 %cmp374, label %if.then.382, label %lor.lhs.false.376

lor.lhs.false.376:                                ; preds = %land.lhs.true.373
  %157 = load i32, i32* %code1, align 4
  %cmp377 = icmp eq i32 %157, 7
  br i1 %cmp377, label %if.then.382, label %lor.lhs.false.379

lor.lhs.false.379:                                ; preds = %lor.lhs.false.376
  %158 = load i32, i32* %code1, align 4
  %cmp380 = icmp eq i32 %158, 8
  br i1 %cmp380, label %if.then.382, label %if.else.383

if.then.382:                                      ; preds = %lor.lhs.false.379, %lor.lhs.false.376, %land.lhs.true.373
  store i32 1, i32* %short_compare, align 4
  br label %if.end.507

if.else.383:                                      ; preds = %lor.lhs.false.379, %lor.lhs.false.370
  %159 = load i32, i32* %code0, align 4
  %cmp384 = icmp eq i32 %159, 13
  br i1 %cmp384, label %land.lhs.true.386, label %if.else.454

land.lhs.true.386:                                ; preds = %if.else.383
  %160 = load i32, i32* %code1, align 4
  %cmp387 = icmp eq i32 %160, 13
  br i1 %cmp387, label %if.then.389, label %if.else.454

if.then.389:                                      ; preds = %land.lhs.true.386
  %161 = load %union.tree_node*, %union.tree_node** %type0, align 8
  %common390 = bitcast %union.tree_node* %161 to %struct.tree_common*
  %type391 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common390, i32 0, i32 1
  %162 = load %union.tree_node*, %union.tree_node** %type391, align 8
  store %union.tree_node* %162, %union.tree_node** %tt0, align 8
  %163 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %common392 = bitcast %union.tree_node* %163 to %struct.tree_common*
  %type393 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common392, i32 0, i32 1
  %164 = load %union.tree_node*, %union.tree_node** %type393, align 8
  store %union.tree_node* %164, %union.tree_node** %tt1, align 8
  %165 = load %union.tree_node*, %union.tree_node** %type0, align 8
  %166 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %call394 = call i32 @comp_target_types(%union.tree_node* %165, %union.tree_node* %166)
  %tobool395 = icmp ne i32 %call394, 0
  br i1 %tobool395, label %if.then.396, label %if.else.398

if.then.396:                                      ; preds = %if.then.389
  %167 = load %union.tree_node*, %union.tree_node** %type0, align 8
  %168 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %call397 = call %union.tree_node* @common_type(%union.tree_node* %167, %union.tree_node* %168)
  store %union.tree_node* %call397, %union.tree_node** %result_type, align 8
  br label %if.end.449

if.else.398:                                      ; preds = %if.then.389
  %169 = load %union.tree_node*, %union.tree_node** %tt0, align 8
  %common399 = bitcast %union.tree_node* %169 to %struct.tree_common*
  %code400 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common399, i32 0, i32 2
  %bf.load401 = load i32, i32* %code400, align 8
  %bf.clear402 = and i32 %bf.load401, 255
  %cmp403 = icmp eq i32 %bf.clear402, 5
  br i1 %cmp403, label %if.then.405, label %if.else.422

if.then.405:                                      ; preds = %if.else.398
  %170 = load i32, i32* @pedantic, align 4
  %tobool406 = icmp ne i32 %170, 0
  br i1 %tobool406, label %land.lhs.true.407, label %if.end.421

land.lhs.true.407:                                ; preds = %if.then.405
  %171 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %call408 = call i32 @integer_zerop(%union.tree_node* %171)
  %tobool409 = icmp ne i32 %call408, 0
  br i1 %tobool409, label %lor.lhs.false.410, label %land.lhs.true.413

lor.lhs.false.410:                                ; preds = %land.lhs.true.407
  %172 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %173 = load %union.tree_node*, %union.tree_node** %orig_op0.addr, align 8
  %cmp411 = icmp ne %union.tree_node* %172, %173
  br i1 %cmp411, label %land.lhs.true.413, label %if.end.421

land.lhs.true.413:                                ; preds = %lor.lhs.false.410, %land.lhs.true.407
  %174 = load %union.tree_node*, %union.tree_node** %tt1, align 8
  %common414 = bitcast %union.tree_node* %174 to %struct.tree_common*
  %code415 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common414, i32 0, i32 2
  %bf.load416 = load i32, i32* %code415, align 8
  %bf.clear417 = and i32 %bf.load416, 255
  %cmp418 = icmp eq i32 %bf.clear417, 23
  br i1 %cmp418, label %if.then.420, label %if.end.421

if.then.420:                                      ; preds = %land.lhs.true.413
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.53, i32 0, i32 0))
  br label %if.end.421

if.end.421:                                       ; preds = %if.then.420, %land.lhs.true.413, %lor.lhs.false.410, %if.then.405
  br label %if.end.448

if.else.422:                                      ; preds = %if.else.398
  %175 = load %union.tree_node*, %union.tree_node** %tt1, align 8
  %common423 = bitcast %union.tree_node* %175 to %struct.tree_common*
  %code424 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common423, i32 0, i32 2
  %bf.load425 = load i32, i32* %code424, align 8
  %bf.clear426 = and i32 %bf.load425, 255
  %cmp427 = icmp eq i32 %bf.clear426, 5
  br i1 %cmp427, label %if.then.429, label %if.else.446

if.then.429:                                      ; preds = %if.else.422
  %176 = load i32, i32* @pedantic, align 4
  %tobool430 = icmp ne i32 %176, 0
  br i1 %tobool430, label %land.lhs.true.431, label %if.end.445

land.lhs.true.431:                                ; preds = %if.then.429
  %177 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call432 = call i32 @integer_zerop(%union.tree_node* %177)
  %tobool433 = icmp ne i32 %call432, 0
  br i1 %tobool433, label %lor.lhs.false.434, label %land.lhs.true.437

lor.lhs.false.434:                                ; preds = %land.lhs.true.431
  %178 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %179 = load %union.tree_node*, %union.tree_node** %orig_op1.addr, align 8
  %cmp435 = icmp ne %union.tree_node* %178, %179
  br i1 %cmp435, label %land.lhs.true.437, label %if.end.445

land.lhs.true.437:                                ; preds = %lor.lhs.false.434, %land.lhs.true.431
  %180 = load %union.tree_node*, %union.tree_node** %tt0, align 8
  %common438 = bitcast %union.tree_node* %180 to %struct.tree_common*
  %code439 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common438, i32 0, i32 2
  %bf.load440 = load i32, i32* %code439, align 8
  %bf.clear441 = and i32 %bf.load440, 255
  %cmp442 = icmp eq i32 %bf.clear441, 23
  br i1 %cmp442, label %if.then.444, label %if.end.445

if.then.444:                                      ; preds = %land.lhs.true.437
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.53, i32 0, i32 0))
  br label %if.end.445

if.end.445:                                       ; preds = %if.then.444, %land.lhs.true.437, %lor.lhs.false.434, %if.then.429
  br label %if.end.447

if.else.446:                                      ; preds = %if.else.422
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.54, i32 0, i32 0))
  br label %if.end.447

if.end.447:                                       ; preds = %if.else.446, %if.end.445
  br label %if.end.448

if.end.448:                                       ; preds = %if.end.447, %if.end.421
  br label %if.end.449

if.end.449:                                       ; preds = %if.end.448, %if.then.396
  %181 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %cmp450 = icmp eq %union.tree_node* %181, null
  br i1 %cmp450, label %if.then.452, label %if.end.453

if.then.452:                                      ; preds = %if.end.449
  %182 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 28), align 8
  store %union.tree_node* %182, %union.tree_node** %result_type, align 8
  br label %if.end.453

if.end.453:                                       ; preds = %if.then.452, %if.end.449
  br label %if.end.506

if.else.454:                                      ; preds = %land.lhs.true.386, %if.else.383
  %183 = load i32, i32* %code0, align 4
  %cmp455 = icmp eq i32 %183, 13
  br i1 %cmp455, label %land.lhs.true.457, label %if.else.468

land.lhs.true.457:                                ; preds = %if.else.454
  %184 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common458 = bitcast %union.tree_node* %184 to %struct.tree_common*
  %code459 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common458, i32 0, i32 2
  %bf.load460 = load i32, i32* %code459, align 8
  %bf.clear461 = and i32 %bf.load460, 255
  %cmp462 = icmp eq i32 %bf.clear461, 25
  br i1 %cmp462, label %land.lhs.true.464, label %if.else.468

land.lhs.true.464:                                ; preds = %land.lhs.true.457
  %185 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call465 = call i32 @integer_zerop(%union.tree_node* %185)
  %tobool466 = icmp ne i32 %call465, 0
  br i1 %tobool466, label %if.then.467, label %if.else.468

if.then.467:                                      ; preds = %land.lhs.true.464
  %186 = load %union.tree_node*, %union.tree_node** %type0, align 8
  store %union.tree_node* %186, %union.tree_node** %result_type, align 8
  br label %if.end.505

if.else.468:                                      ; preds = %land.lhs.true.464, %land.lhs.true.457, %if.else.454
  %187 = load i32, i32* %code1, align 4
  %cmp469 = icmp eq i32 %187, 13
  br i1 %cmp469, label %land.lhs.true.471, label %if.else.482

land.lhs.true.471:                                ; preds = %if.else.468
  %188 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common472 = bitcast %union.tree_node* %188 to %struct.tree_common*
  %code473 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common472, i32 0, i32 2
  %bf.load474 = load i32, i32* %code473, align 8
  %bf.clear475 = and i32 %bf.load474, 255
  %cmp476 = icmp eq i32 %bf.clear475, 25
  br i1 %cmp476, label %land.lhs.true.478, label %if.else.482

land.lhs.true.478:                                ; preds = %land.lhs.true.471
  %189 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %call479 = call i32 @integer_zerop(%union.tree_node* %189)
  %tobool480 = icmp ne i32 %call479, 0
  br i1 %tobool480, label %if.then.481, label %if.else.482

if.then.481:                                      ; preds = %land.lhs.true.478
  %190 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %190, %union.tree_node** %result_type, align 8
  br label %if.end.504

if.else.482:                                      ; preds = %land.lhs.true.478, %land.lhs.true.471, %if.else.468
  %191 = load i32, i32* %code0, align 4
  %cmp483 = icmp eq i32 %191, 13
  br i1 %cmp483, label %land.lhs.true.485, label %if.else.492

land.lhs.true.485:                                ; preds = %if.else.482
  %192 = load i32, i32* %code1, align 4
  %cmp486 = icmp eq i32 %192, 6
  br i1 %cmp486, label %if.then.488, label %if.else.492

if.then.488:                                      ; preds = %land.lhs.true.485
  %193 = load %union.tree_node*, %union.tree_node** %type0, align 8
  store %union.tree_node* %193, %union.tree_node** %result_type, align 8
  %194 = load i32, i32* @flag_traditional, align 4
  %tobool489 = icmp ne i32 %194, 0
  br i1 %tobool489, label %if.end.491, label %if.then.490

if.then.490:                                      ; preds = %if.then.488
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.55, i32 0, i32 0))
  br label %if.end.491

if.end.491:                                       ; preds = %if.then.490, %if.then.488
  br label %if.end.503

if.else.492:                                      ; preds = %land.lhs.true.485, %if.else.482
  %195 = load i32, i32* %code0, align 4
  %cmp493 = icmp eq i32 %195, 6
  br i1 %cmp493, label %land.lhs.true.495, label %if.end.502

land.lhs.true.495:                                ; preds = %if.else.492
  %196 = load i32, i32* %code1, align 4
  %cmp496 = icmp eq i32 %196, 13
  br i1 %cmp496, label %if.then.498, label %if.end.502

if.then.498:                                      ; preds = %land.lhs.true.495
  %197 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %197, %union.tree_node** %result_type, align 8
  %198 = load i32, i32* @flag_traditional, align 4
  %tobool499 = icmp ne i32 %198, 0
  br i1 %tobool499, label %if.end.501, label %if.then.500

if.then.500:                                      ; preds = %if.then.498
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.55, i32 0, i32 0))
  br label %if.end.501

if.end.501:                                       ; preds = %if.then.500, %if.then.498
  br label %if.end.502

if.end.502:                                       ; preds = %if.end.501, %land.lhs.true.495, %if.else.492
  br label %if.end.503

if.end.503:                                       ; preds = %if.end.502, %if.end.491
  br label %if.end.504

if.end.504:                                       ; preds = %if.end.503, %if.then.481
  br label %if.end.505

if.end.505:                                       ; preds = %if.end.504, %if.then.467
  br label %if.end.506

if.end.506:                                       ; preds = %if.end.505, %if.end.453
  br label %if.end.507

if.end.507:                                       ; preds = %if.end.506, %if.then.382
  br label %sw.epilog

sw.bb.508:                                        ; preds = %if.end.80, %if.end.80
  %199 = load i32, i32* %code0, align 4
  %cmp509 = icmp eq i32 %199, 6
  br i1 %cmp509, label %land.lhs.true.514, label %lor.lhs.false.511

lor.lhs.false.511:                                ; preds = %sw.bb.508
  %200 = load i32, i32* %code0, align 4
  %cmp512 = icmp eq i32 %200, 7
  br i1 %cmp512, label %land.lhs.true.514, label %if.else.521

land.lhs.true.514:                                ; preds = %lor.lhs.false.511, %sw.bb.508
  %201 = load i32, i32* %code1, align 4
  %cmp515 = icmp eq i32 %201, 6
  br i1 %cmp515, label %if.then.520, label %lor.lhs.false.517

lor.lhs.false.517:                                ; preds = %land.lhs.true.514
  %202 = load i32, i32* %code1, align 4
  %cmp518 = icmp eq i32 %202, 7
  br i1 %cmp518, label %if.then.520, label %if.else.521

if.then.520:                                      ; preds = %lor.lhs.false.517, %land.lhs.true.514
  store i32 1, i32* %shorten, align 4
  br label %if.end.547

if.else.521:                                      ; preds = %lor.lhs.false.517, %lor.lhs.false.511
  %203 = load i32, i32* %code0, align 4
  %cmp522 = icmp eq i32 %203, 13
  br i1 %cmp522, label %land.lhs.true.524, label %if.end.546

land.lhs.true.524:                                ; preds = %if.else.521
  %204 = load i32, i32* %code1, align 4
  %cmp525 = icmp eq i32 %204, 13
  br i1 %cmp525, label %if.then.527, label %if.end.546

if.then.527:                                      ; preds = %land.lhs.true.524
  %205 = load %union.tree_node*, %union.tree_node** %type0, align 8
  %206 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %call528 = call i32 @comp_target_types(%union.tree_node* %205, %union.tree_node* %206)
  %tobool529 = icmp ne i32 %call528, 0
  br i1 %tobool529, label %if.then.530, label %if.else.544

if.then.530:                                      ; preds = %if.then.527
  %207 = load %union.tree_node*, %union.tree_node** %type0, align 8
  %208 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %call531 = call %union.tree_node* @common_type(%union.tree_node* %207, %union.tree_node* %208)
  store %union.tree_node* %call531, %union.tree_node** %result_type, align 8
  %209 = load i32, i32* @pedantic, align 4
  %tobool532 = icmp ne i32 %209, 0
  br i1 %tobool532, label %land.lhs.true.533, label %if.end.543

land.lhs.true.533:                                ; preds = %if.then.530
  %210 = load %union.tree_node*, %union.tree_node** %type0, align 8
  %common534 = bitcast %union.tree_node* %210 to %struct.tree_common*
  %type535 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common534, i32 0, i32 1
  %211 = load %union.tree_node*, %union.tree_node** %type535, align 8
  %common536 = bitcast %union.tree_node* %211 to %struct.tree_common*
  %code537 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common536, i32 0, i32 2
  %bf.load538 = load i32, i32* %code537, align 8
  %bf.clear539 = and i32 %bf.load538, 255
  %cmp540 = icmp eq i32 %bf.clear539, 23
  br i1 %cmp540, label %if.then.542, label %if.end.543

if.then.542:                                      ; preds = %land.lhs.true.533
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.56, i32 0, i32 0))
  br label %if.end.543

if.end.543:                                       ; preds = %if.then.542, %land.lhs.true.533, %if.then.530
  br label %if.end.545

if.else.544:                                      ; preds = %if.then.527
  %212 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 28), align 8
  store %union.tree_node* %212, %union.tree_node** %result_type, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.54, i32 0, i32 0))
  br label %if.end.545

if.end.545:                                       ; preds = %if.else.544, %if.end.543
  br label %if.end.546

if.end.546:                                       ; preds = %if.end.545, %land.lhs.true.524, %if.else.521
  br label %if.end.547

if.end.547:                                       ; preds = %if.end.546, %if.then.520
  br label %sw.epilog

sw.bb.548:                                        ; preds = %if.end.80, %if.end.80, %if.end.80, %if.end.80
  %213 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  store %union.tree_node* %213, %union.tree_node** %build_type, align 8
  %214 = load i32, i32* %code0, align 4
  %cmp549 = icmp eq i32 %214, 6
  br i1 %cmp549, label %land.lhs.true.554, label %lor.lhs.false.551

lor.lhs.false.551:                                ; preds = %sw.bb.548
  %215 = load i32, i32* %code0, align 4
  %cmp552 = icmp eq i32 %215, 7
  br i1 %cmp552, label %land.lhs.true.554, label %if.else.561

land.lhs.true.554:                                ; preds = %lor.lhs.false.551, %sw.bb.548
  %216 = load i32, i32* %code1, align 4
  %cmp555 = icmp eq i32 %216, 6
  br i1 %cmp555, label %if.then.560, label %lor.lhs.false.557

lor.lhs.false.557:                                ; preds = %land.lhs.true.554
  %217 = load i32, i32* %code1, align 4
  %cmp558 = icmp eq i32 %217, 7
  br i1 %cmp558, label %if.then.560, label %if.else.561

if.then.560:                                      ; preds = %lor.lhs.false.557, %land.lhs.true.554
  store i32 1, i32* %short_compare, align 4
  br label %if.end.666

if.else.561:                                      ; preds = %lor.lhs.false.557, %lor.lhs.false.551
  %218 = load i32, i32* %code0, align 4
  %cmp562 = icmp eq i32 %218, 13
  br i1 %cmp562, label %land.lhs.true.564, label %if.else.605

land.lhs.true.564:                                ; preds = %if.else.561
  %219 = load i32, i32* %code1, align 4
  %cmp565 = icmp eq i32 %219, 13
  br i1 %cmp565, label %if.then.567, label %if.else.605

if.then.567:                                      ; preds = %land.lhs.true.564
  %220 = load %union.tree_node*, %union.tree_node** %type0, align 8
  %221 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %call568 = call i32 @comp_target_types(%union.tree_node* %220, %union.tree_node* %221)
  %tobool569 = icmp ne i32 %call568, 0
  br i1 %tobool569, label %if.then.570, label %if.else.603

if.then.570:                                      ; preds = %if.then.567
  %222 = load %union.tree_node*, %union.tree_node** %type0, align 8
  %223 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %call571 = call %union.tree_node* @common_type(%union.tree_node* %222, %union.tree_node* %223)
  store %union.tree_node* %call571, %union.tree_node** %result_type, align 8
  %224 = load %union.tree_node*, %union.tree_node** %type0, align 8
  %common572 = bitcast %union.tree_node* %224 to %struct.tree_common*
  %type573 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common572, i32 0, i32 1
  %225 = load %union.tree_node*, %union.tree_node** %type573, align 8
  %type574 = bitcast %union.tree_node* %225 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type574, i32 0, i32 2
  %226 = load %union.tree_node*, %union.tree_node** %size, align 8
  %cmp575 = icmp ne %union.tree_node* %226, null
  %lnot577 = xor i1 %cmp575, true
  %lnot.ext = zext i1 %lnot577 to i32
  %227 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %common578 = bitcast %union.tree_node* %227 to %struct.tree_common*
  %type579 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common578, i32 0, i32 1
  %228 = load %union.tree_node*, %union.tree_node** %type579, align 8
  %type580 = bitcast %union.tree_node* %228 to %struct.tree_type*
  %size581 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type580, i32 0, i32 2
  %229 = load %union.tree_node*, %union.tree_node** %size581, align 8
  %cmp582 = icmp ne %union.tree_node* %229, null
  %lnot584 = xor i1 %cmp582, true
  %lnot.ext585 = zext i1 %lnot584 to i32
  %cmp586 = icmp ne i32 %lnot.ext, %lnot.ext585
  br i1 %cmp586, label %if.then.588, label %if.else.589

if.then.588:                                      ; preds = %if.then.570
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.57, i32 0, i32 0))
  br label %if.end.602

if.else.589:                                      ; preds = %if.then.570
  %230 = load i32, i32* @pedantic, align 4
  %tobool590 = icmp ne i32 %230, 0
  br i1 %tobool590, label %land.lhs.true.591, label %if.end.601

land.lhs.true.591:                                ; preds = %if.else.589
  %231 = load %union.tree_node*, %union.tree_node** %type0, align 8
  %common592 = bitcast %union.tree_node* %231 to %struct.tree_common*
  %type593 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common592, i32 0, i32 1
  %232 = load %union.tree_node*, %union.tree_node** %type593, align 8
  %common594 = bitcast %union.tree_node* %232 to %struct.tree_common*
  %code595 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common594, i32 0, i32 2
  %bf.load596 = load i32, i32* %code595, align 8
  %bf.clear597 = and i32 %bf.load596, 255
  %cmp598 = icmp eq i32 %bf.clear597, 23
  br i1 %cmp598, label %if.then.600, label %if.end.601

if.then.600:                                      ; preds = %land.lhs.true.591
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.56, i32 0, i32 0))
  br label %if.end.601

if.end.601:                                       ; preds = %if.then.600, %land.lhs.true.591, %if.else.589
  br label %if.end.602

if.end.602:                                       ; preds = %if.end.601, %if.then.588
  br label %if.end.604

if.else.603:                                      ; preds = %if.then.567
  %233 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 28), align 8
  store %union.tree_node* %233, %union.tree_node** %result_type, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.54, i32 0, i32 0))
  br label %if.end.604

if.end.604:                                       ; preds = %if.else.603, %if.end.602
  br label %if.end.665

if.else.605:                                      ; preds = %land.lhs.true.564, %if.else.561
  %234 = load i32, i32* %code0, align 4
  %cmp606 = icmp eq i32 %234, 13
  br i1 %cmp606, label %land.lhs.true.608, label %if.else.624

land.lhs.true.608:                                ; preds = %if.else.605
  %235 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common609 = bitcast %union.tree_node* %235 to %struct.tree_common*
  %code610 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common609, i32 0, i32 2
  %bf.load611 = load i32, i32* %code610, align 8
  %bf.clear612 = and i32 %bf.load611, 255
  %cmp613 = icmp eq i32 %bf.clear612, 25
  br i1 %cmp613, label %land.lhs.true.615, label %if.else.624

land.lhs.true.615:                                ; preds = %land.lhs.true.608
  %236 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call616 = call i32 @integer_zerop(%union.tree_node* %236)
  %tobool617 = icmp ne i32 %call616, 0
  br i1 %tobool617, label %if.then.618, label %if.else.624

if.then.618:                                      ; preds = %land.lhs.true.615
  %237 = load %union.tree_node*, %union.tree_node** %type0, align 8
  store %union.tree_node* %237, %union.tree_node** %result_type, align 8
  %238 = load i32, i32* @pedantic, align 4
  %tobool619 = icmp ne i32 %238, 0
  br i1 %tobool619, label %if.then.622, label %lor.lhs.false.620

lor.lhs.false.620:                                ; preds = %if.then.618
  %239 = load i32, i32* @extra_warnings, align 4
  %tobool621 = icmp ne i32 %239, 0
  br i1 %tobool621, label %if.then.622, label %if.end.623

if.then.622:                                      ; preds = %lor.lhs.false.620, %if.then.618
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.58, i32 0, i32 0))
  br label %if.end.623

if.end.623:                                       ; preds = %if.then.622, %lor.lhs.false.620
  br label %if.end.664

if.else.624:                                      ; preds = %land.lhs.true.615, %land.lhs.true.608, %if.else.605
  %240 = load i32, i32* %code1, align 4
  %cmp625 = icmp eq i32 %240, 13
  br i1 %cmp625, label %land.lhs.true.627, label %if.else.641

land.lhs.true.627:                                ; preds = %if.else.624
  %241 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common628 = bitcast %union.tree_node* %241 to %struct.tree_common*
  %code629 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common628, i32 0, i32 2
  %bf.load630 = load i32, i32* %code629, align 8
  %bf.clear631 = and i32 %bf.load630, 255
  %cmp632 = icmp eq i32 %bf.clear631, 25
  br i1 %cmp632, label %land.lhs.true.634, label %if.else.641

land.lhs.true.634:                                ; preds = %land.lhs.true.627
  %242 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %call635 = call i32 @integer_zerop(%union.tree_node* %242)
  %tobool636 = icmp ne i32 %call635, 0
  br i1 %tobool636, label %if.then.637, label %if.else.641

if.then.637:                                      ; preds = %land.lhs.true.634
  %243 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %243, %union.tree_node** %result_type, align 8
  %244 = load i32, i32* @pedantic, align 4
  %tobool638 = icmp ne i32 %244, 0
  br i1 %tobool638, label %if.then.639, label %if.end.640

if.then.639:                                      ; preds = %if.then.637
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.58, i32 0, i32 0))
  br label %if.end.640

if.end.640:                                       ; preds = %if.then.639, %if.then.637
  br label %if.end.663

if.else.641:                                      ; preds = %land.lhs.true.634, %land.lhs.true.627, %if.else.624
  %245 = load i32, i32* %code0, align 4
  %cmp642 = icmp eq i32 %245, 13
  br i1 %cmp642, label %land.lhs.true.644, label %if.else.651

land.lhs.true.644:                                ; preds = %if.else.641
  %246 = load i32, i32* %code1, align 4
  %cmp645 = icmp eq i32 %246, 6
  br i1 %cmp645, label %if.then.647, label %if.else.651

if.then.647:                                      ; preds = %land.lhs.true.644
  %247 = load %union.tree_node*, %union.tree_node** %type0, align 8
  store %union.tree_node* %247, %union.tree_node** %result_type, align 8
  %248 = load i32, i32* @flag_traditional, align 4
  %tobool648 = icmp ne i32 %248, 0
  br i1 %tobool648, label %if.end.650, label %if.then.649

if.then.649:                                      ; preds = %if.then.647
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.55, i32 0, i32 0))
  br label %if.end.650

if.end.650:                                       ; preds = %if.then.649, %if.then.647
  br label %if.end.662

if.else.651:                                      ; preds = %land.lhs.true.644, %if.else.641
  %249 = load i32, i32* %code0, align 4
  %cmp652 = icmp eq i32 %249, 6
  br i1 %cmp652, label %land.lhs.true.654, label %if.end.661

land.lhs.true.654:                                ; preds = %if.else.651
  %250 = load i32, i32* %code1, align 4
  %cmp655 = icmp eq i32 %250, 13
  br i1 %cmp655, label %if.then.657, label %if.end.661

if.then.657:                                      ; preds = %land.lhs.true.654
  %251 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %251, %union.tree_node** %result_type, align 8
  %252 = load i32, i32* @flag_traditional, align 4
  %tobool658 = icmp ne i32 %252, 0
  br i1 %tobool658, label %if.end.660, label %if.then.659

if.then.659:                                      ; preds = %if.then.657
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.55, i32 0, i32 0))
  br label %if.end.660

if.end.660:                                       ; preds = %if.then.659, %if.then.657
  br label %if.end.661

if.end.661:                                       ; preds = %if.end.660, %land.lhs.true.654, %if.else.651
  br label %if.end.662

if.end.662:                                       ; preds = %if.end.661, %if.end.650
  br label %if.end.663

if.end.663:                                       ; preds = %if.end.662, %if.end.640
  br label %if.end.664

if.end.664:                                       ; preds = %if.end.663, %if.end.623
  br label %if.end.665

if.end.665:                                       ; preds = %if.end.664, %if.end.604
  br label %if.end.666

if.end.666:                                       ; preds = %if.end.665, %if.then.560
  br label %sw.epilog

sw.bb.667:                                        ; preds = %if.end.80, %if.end.80, %if.end.80, %if.end.80, %if.end.80, %if.end.80, %if.end.80
  %253 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  store %union.tree_node* %253, %union.tree_node** %build_type, align 8
  %254 = load i32, i32* %code0, align 4
  %cmp668 = icmp ne i32 %254, 7
  br i1 %cmp668, label %if.then.673, label %lor.lhs.false.670

lor.lhs.false.670:                                ; preds = %sw.bb.667
  %255 = load i32, i32* %code1, align 4
  %cmp671 = icmp ne i32 %255, 7
  br i1 %cmp671, label %if.then.673, label %if.end.674

if.then.673:                                      ; preds = %lor.lhs.false.670, %sw.bb.667
  call void (i8*, ...) @error(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.59, i32 0, i32 0))
  %256 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %256, %union.tree_node** %retval
  br label %return

if.end.674:                                       ; preds = %lor.lhs.false.670
  store i32 1, i32* %common, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.80
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.674, %if.end.666, %if.end.547, %if.end.507, %if.end.354, %if.end.307, %if.end.260, %if.end.217, %if.end.197, %if.end.162, %if.end.156, %sw.bb.113, %if.end.112, %if.end.94
  %257 = load i32, i32* %code0, align 4
  %cmp675 = icmp eq i32 %257, 6
  br i1 %cmp675, label %land.lhs.true.683, label %lor.lhs.false.677

lor.lhs.false.677:                                ; preds = %sw.epilog
  %258 = load i32, i32* %code0, align 4
  %cmp678 = icmp eq i32 %258, 7
  br i1 %cmp678, label %land.lhs.true.683, label %lor.lhs.false.680

lor.lhs.false.680:                                ; preds = %lor.lhs.false.677
  %259 = load i32, i32* %code0, align 4
  %cmp681 = icmp eq i32 %259, 8
  br i1 %cmp681, label %land.lhs.true.683, label %if.end.1248

land.lhs.true.683:                                ; preds = %lor.lhs.false.680, %lor.lhs.false.677, %sw.epilog
  %260 = load i32, i32* %code1, align 4
  %cmp684 = icmp eq i32 %260, 6
  br i1 %cmp684, label %if.then.692, label %lor.lhs.false.686

lor.lhs.false.686:                                ; preds = %land.lhs.true.683
  %261 = load i32, i32* %code1, align 4
  %cmp687 = icmp eq i32 %261, 7
  br i1 %cmp687, label %if.then.692, label %lor.lhs.false.689

lor.lhs.false.689:                                ; preds = %lor.lhs.false.686
  %262 = load i32, i32* %code1, align 4
  %cmp690 = icmp eq i32 %262, 8
  br i1 %cmp690, label %if.then.692, label %if.end.1248

if.then.692:                                      ; preds = %lor.lhs.false.689, %lor.lhs.false.686, %land.lhs.true.683
  %263 = load i32, i32* %code0, align 4
  %cmp693 = icmp ne i32 %263, 8
  br i1 %cmp693, label %land.rhs.695, label %land.end.698

land.rhs.695:                                     ; preds = %if.then.692
  %264 = load i32, i32* %code1, align 4
  %cmp696 = icmp ne i32 %264, 8
  br label %land.end.698

land.end.698:                                     ; preds = %land.rhs.695, %if.then.692
  %265 = phi i1 [ false, %if.then.692 ], [ %cmp696, %land.rhs.695 ]
  %land.ext = zext i1 %265 to i32
  store i32 %land.ext, i32* %none_complex, align 4
  %266 = load i32, i32* %shorten, align 4
  %tobool699 = icmp ne i32 %266, 0
  br i1 %tobool699, label %if.then.704, label %lor.lhs.false.700

lor.lhs.false.700:                                ; preds = %land.end.698
  %267 = load i32, i32* %common, align 4
  %tobool701 = icmp ne i32 %267, 0
  br i1 %tobool701, label %if.then.704, label %lor.lhs.false.702

lor.lhs.false.702:                                ; preds = %lor.lhs.false.700
  %268 = load i32, i32* %short_compare, align 4
  %tobool703 = icmp ne i32 %268, 0
  br i1 %tobool703, label %if.then.704, label %if.end.706

if.then.704:                                      ; preds = %lor.lhs.false.702, %lor.lhs.false.700, %land.end.698
  %269 = load %union.tree_node*, %union.tree_node** %type0, align 8
  %270 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %call705 = call %union.tree_node* @common_type(%union.tree_node* %269, %union.tree_node* %270)
  store %union.tree_node* %call705, %union.tree_node** %result_type, align 8
  br label %if.end.706

if.end.706:                                       ; preds = %if.then.704, %lor.lhs.false.702
  %271 = load i32, i32* %shorten, align 4
  %tobool707 = icmp ne i32 %271, 0
  br i1 %tobool707, label %land.lhs.true.708, label %if.end.885

land.lhs.true.708:                                ; preds = %if.end.706
  %272 = load i32, i32* %none_complex, align 4
  %tobool709 = icmp ne i32 %272, 0
  br i1 %tobool709, label %if.then.710, label %if.end.885

if.then.710:                                      ; preds = %land.lhs.true.708
  %273 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %call711 = call %union.tree_node* @get_narrower(%union.tree_node* %273, i32* %unsigned0)
  store %union.tree_node* %call711, %union.tree_node** %arg0, align 8
  %274 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call712 = call %union.tree_node* @get_narrower(%union.tree_node* %274, i32* %unsigned1)
  store %union.tree_node* %call712, %union.tree_node** %arg1, align 8
  %275 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %common713 = bitcast %union.tree_node* %275 to %struct.tree_common*
  %unsigned_flag714 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common713, i32 0, i32 2
  %bf.load715 = load i32, i32* %unsigned_flag714, align 8
  %bf.lshr716 = lshr i32 %bf.load715, 13
  %bf.clear717 = and i32 %bf.lshr716, 1
  store i32 %bf.clear717, i32* %uns, align 4
  %276 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  store %union.tree_node* %276, %union.tree_node** %final_type, align 8
  %277 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common719 = bitcast %union.tree_node* %277 to %struct.tree_common*
  %type720 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common719, i32 0, i32 1
  %278 = load %union.tree_node*, %union.tree_node** %type720, align 8
  %type721 = bitcast %union.tree_node* %278 to %struct.tree_type*
  %precision722 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type721, i32 0, i32 6
  %bf.load723 = load i32, i32* %precision722, align 4
  %bf.clear724 = and i32 %bf.load723, 511
  %279 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common725 = bitcast %union.tree_node* %279 to %struct.tree_common*
  %type726 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common725, i32 0, i32 1
  %280 = load %union.tree_node*, %union.tree_node** %type726, align 8
  %type727 = bitcast %union.tree_node* %280 to %struct.tree_type*
  %precision728 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type727, i32 0, i32 6
  %bf.load729 = load i32, i32* %precision728, align 4
  %bf.clear730 = and i32 %bf.load729, 511
  %cmp731 = icmp eq i32 %bf.clear724, %bf.clear730
  br i1 %cmp731, label %land.lhs.true.733, label %if.end.746

land.lhs.true.733:                                ; preds = %if.then.710
  %281 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common734 = bitcast %union.tree_node* %281 to %struct.tree_common*
  %type735 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common734, i32 0, i32 1
  %282 = load %union.tree_node*, %union.tree_node** %type735, align 8
  %283 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %cmp736 = icmp ne %union.tree_node* %282, %283
  br i1 %cmp736, label %if.then.738, label %if.end.746

if.then.738:                                      ; preds = %land.lhs.true.733
  %284 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common739 = bitcast %union.tree_node* %284 to %struct.tree_common*
  %type740 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common739, i32 0, i32 1
  %285 = load %union.tree_node*, %union.tree_node** %type740, align 8
  %common741 = bitcast %union.tree_node* %285 to %struct.tree_common*
  %unsigned_flag742 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common741, i32 0, i32 2
  %bf.load743 = load i32, i32* %unsigned_flag742, align 8
  %bf.lshr744 = lshr i32 %bf.load743, 13
  %bf.clear745 = and i32 %bf.lshr744, 1
  store i32 %bf.clear745, i32* %unsigned0, align 4
  br label %if.end.746

if.end.746:                                       ; preds = %if.then.738, %land.lhs.true.733, %if.then.710
  %286 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common747 = bitcast %union.tree_node* %286 to %struct.tree_common*
  %type748 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common747, i32 0, i32 1
  %287 = load %union.tree_node*, %union.tree_node** %type748, align 8
  %type749 = bitcast %union.tree_node* %287 to %struct.tree_type*
  %precision750 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type749, i32 0, i32 6
  %bf.load751 = load i32, i32* %precision750, align 4
  %bf.clear752 = and i32 %bf.load751, 511
  %288 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common753 = bitcast %union.tree_node* %288 to %struct.tree_common*
  %type754 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common753, i32 0, i32 1
  %289 = load %union.tree_node*, %union.tree_node** %type754, align 8
  %type755 = bitcast %union.tree_node* %289 to %struct.tree_type*
  %precision756 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type755, i32 0, i32 6
  %bf.load757 = load i32, i32* %precision756, align 4
  %bf.clear758 = and i32 %bf.load757, 511
  %cmp759 = icmp eq i32 %bf.clear752, %bf.clear758
  br i1 %cmp759, label %land.lhs.true.761, label %if.end.774

land.lhs.true.761:                                ; preds = %if.end.746
  %290 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common762 = bitcast %union.tree_node* %290 to %struct.tree_common*
  %type763 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common762, i32 0, i32 1
  %291 = load %union.tree_node*, %union.tree_node** %type763, align 8
  %292 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %cmp764 = icmp ne %union.tree_node* %291, %292
  br i1 %cmp764, label %if.then.766, label %if.end.774

if.then.766:                                      ; preds = %land.lhs.true.761
  %293 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common767 = bitcast %union.tree_node* %293 to %struct.tree_common*
  %type768 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common767, i32 0, i32 1
  %294 = load %union.tree_node*, %union.tree_node** %type768, align 8
  %common769 = bitcast %union.tree_node* %294 to %struct.tree_common*
  %unsigned_flag770 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common769, i32 0, i32 2
  %bf.load771 = load i32, i32* %unsigned_flag770, align 8
  %bf.lshr772 = lshr i32 %bf.load771, 13
  %bf.clear773 = and i32 %bf.lshr772, 1
  store i32 %bf.clear773, i32* %unsigned1, align 4
  br label %if.end.774

if.end.774:                                       ; preds = %if.then.766, %land.lhs.true.761, %if.end.746
  %295 = load i32, i32* %shorten, align 4
  %cmp775 = icmp eq i32 %295, -1
  br i1 %cmp775, label %if.then.777, label %if.end.778

if.then.777:                                      ; preds = %if.end.774
  %296 = load i32, i32* %unsigned0, align 4
  store i32 %296, i32* %uns, align 4
  br label %if.end.778

if.end.778:                                       ; preds = %if.then.777, %if.end.774
  %297 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common779 = bitcast %union.tree_node* %297 to %struct.tree_common*
  %type780 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common779, i32 0, i32 1
  %298 = load %union.tree_node*, %union.tree_node** %type780, align 8
  %type781 = bitcast %union.tree_node* %298 to %struct.tree_type*
  %precision782 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type781, i32 0, i32 6
  %bf.load783 = load i32, i32* %precision782, align 4
  %bf.clear784 = and i32 %bf.load783, 511
  %299 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %type785 = bitcast %union.tree_node* %299 to %struct.tree_type*
  %precision786 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type785, i32 0, i32 6
  %bf.load787 = load i32, i32* %precision786, align 4
  %bf.clear788 = and i32 %bf.load787, 511
  %cmp789 = icmp slt i32 %bf.clear784, %bf.clear788
  br i1 %cmp789, label %land.lhs.true.791, label %if.else.820

land.lhs.true.791:                                ; preds = %if.end.778
  %300 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common792 = bitcast %union.tree_node* %300 to %struct.tree_common*
  %type793 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common792, i32 0, i32 1
  %301 = load %union.tree_node*, %union.tree_node** %type793, align 8
  %type794 = bitcast %union.tree_node* %301 to %struct.tree_type*
  %precision795 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type794, i32 0, i32 6
  %bf.load796 = load i32, i32* %precision795, align 4
  %bf.clear797 = and i32 %bf.load796, 511
  %302 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common798 = bitcast %union.tree_node* %302 to %struct.tree_common*
  %type799 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common798, i32 0, i32 1
  %303 = load %union.tree_node*, %union.tree_node** %type799, align 8
  %type800 = bitcast %union.tree_node* %303 to %struct.tree_type*
  %precision801 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type800, i32 0, i32 6
  %bf.load802 = load i32, i32* %precision801, align 4
  %bf.clear803 = and i32 %bf.load802, 511
  %cmp804 = icmp eq i32 %bf.clear797, %bf.clear803
  br i1 %cmp804, label %land.lhs.true.806, label %if.else.820

land.lhs.true.806:                                ; preds = %land.lhs.true.791
  %304 = load i32, i32* %unsigned0, align 4
  %305 = load i32, i32* %unsigned1, align 4
  %cmp807 = icmp eq i32 %304, %305
  br i1 %cmp807, label %land.lhs.true.809, label %if.else.820

land.lhs.true.809:                                ; preds = %land.lhs.true.806
  %306 = load i32, i32* %unsigned0, align 4
  %tobool810 = icmp ne i32 %306, 0
  br i1 %tobool810, label %if.then.813, label %lor.lhs.false.811

lor.lhs.false.811:                                ; preds = %land.lhs.true.809
  %307 = load i32, i32* %uns, align 4
  %tobool812 = icmp ne i32 %307, 0
  br i1 %tobool812, label %if.else.820, label %if.then.813

if.then.813:                                      ; preds = %lor.lhs.false.811, %land.lhs.true.809
  %308 = load i32, i32* %unsigned0, align 4
  %309 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common814 = bitcast %union.tree_node* %309 to %struct.tree_common*
  %type815 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common814, i32 0, i32 1
  %310 = load %union.tree_node*, %union.tree_node** %type815, align 8
  %311 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common816 = bitcast %union.tree_node* %311 to %struct.tree_common*
  %type817 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common816, i32 0, i32 1
  %312 = load %union.tree_node*, %union.tree_node** %type817, align 8
  %call818 = call %union.tree_node* @common_type(%union.tree_node* %310, %union.tree_node* %312)
  %call819 = call %union.tree_node* @signed_or_unsigned_type(i32 %308, %union.tree_node* %call818)
  store %union.tree_node* %call819, %union.tree_node** %result_type, align 8
  br label %if.end.884

if.else.820:                                      ; preds = %lor.lhs.false.811, %land.lhs.true.806, %land.lhs.true.791, %if.end.778
  %313 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common821 = bitcast %union.tree_node* %313 to %struct.tree_common*
  %code822 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common821, i32 0, i32 2
  %bf.load823 = load i32, i32* %code822, align 8
  %bf.clear824 = and i32 %bf.load823, 255
  %cmp825 = icmp eq i32 %bf.clear824, 25
  br i1 %cmp825, label %land.lhs.true.827, label %if.else.851

land.lhs.true.827:                                ; preds = %if.else.820
  %314 = load i32, i32* %unsigned1, align 4
  %tobool828 = icmp ne i32 %314, 0
  br i1 %tobool828, label %land.lhs.true.831, label %lor.lhs.false.829

lor.lhs.false.829:                                ; preds = %land.lhs.true.827
  %315 = load i32, i32* %uns, align 4
  %tobool830 = icmp ne i32 %315, 0
  br i1 %tobool830, label %if.else.851, label %land.lhs.true.831

land.lhs.true.831:                                ; preds = %lor.lhs.false.829, %land.lhs.true.827
  %316 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common832 = bitcast %union.tree_node* %316 to %struct.tree_common*
  %type833 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common832, i32 0, i32 1
  %317 = load %union.tree_node*, %union.tree_node** %type833, align 8
  %type834 = bitcast %union.tree_node* %317 to %struct.tree_type*
  %precision835 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type834, i32 0, i32 6
  %bf.load836 = load i32, i32* %precision835, align 4
  %bf.clear837 = and i32 %bf.load836, 511
  %318 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %type838 = bitcast %union.tree_node* %318 to %struct.tree_type*
  %precision839 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type838, i32 0, i32 6
  %bf.load840 = load i32, i32* %precision839, align 4
  %bf.clear841 = and i32 %bf.load840, 511
  %cmp842 = icmp slt i32 %bf.clear837, %bf.clear841
  br i1 %cmp842, label %land.lhs.true.844, label %if.else.851

land.lhs.true.844:                                ; preds = %land.lhs.true.831
  %319 = load i32, i32* %unsigned1, align 4
  %320 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common845 = bitcast %union.tree_node* %320 to %struct.tree_common*
  %type846 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common845, i32 0, i32 1
  %321 = load %union.tree_node*, %union.tree_node** %type846, align 8
  %call847 = call %union.tree_node* @signed_or_unsigned_type(i32 %319, %union.tree_node* %321)
  store %union.tree_node* %call847, %union.tree_node** %type718, align 8
  %322 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %323 = load %union.tree_node*, %union.tree_node** %type718, align 8
  %call848 = call i32 @int_fits_type_p(%union.tree_node* %322, %union.tree_node* %323)
  %tobool849 = icmp ne i32 %call848, 0
  br i1 %tobool849, label %if.then.850, label %if.else.851

if.then.850:                                      ; preds = %land.lhs.true.844
  %324 = load %union.tree_node*, %union.tree_node** %type718, align 8
  store %union.tree_node* %324, %union.tree_node** %result_type, align 8
  br label %if.end.883

if.else.851:                                      ; preds = %land.lhs.true.844, %land.lhs.true.831, %lor.lhs.false.829, %if.else.820
  %325 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common852 = bitcast %union.tree_node* %325 to %struct.tree_common*
  %code853 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common852, i32 0, i32 2
  %bf.load854 = load i32, i32* %code853, align 8
  %bf.clear855 = and i32 %bf.load854, 255
  %cmp856 = icmp eq i32 %bf.clear855, 25
  br i1 %cmp856, label %land.lhs.true.858, label %if.end.882

land.lhs.true.858:                                ; preds = %if.else.851
  %326 = load i32, i32* %unsigned0, align 4
  %tobool859 = icmp ne i32 %326, 0
  br i1 %tobool859, label %land.lhs.true.862, label %lor.lhs.false.860

lor.lhs.false.860:                                ; preds = %land.lhs.true.858
  %327 = load i32, i32* %uns, align 4
  %tobool861 = icmp ne i32 %327, 0
  br i1 %tobool861, label %if.end.882, label %land.lhs.true.862

land.lhs.true.862:                                ; preds = %lor.lhs.false.860, %land.lhs.true.858
  %328 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common863 = bitcast %union.tree_node* %328 to %struct.tree_common*
  %type864 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common863, i32 0, i32 1
  %329 = load %union.tree_node*, %union.tree_node** %type864, align 8
  %type865 = bitcast %union.tree_node* %329 to %struct.tree_type*
  %precision866 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type865, i32 0, i32 6
  %bf.load867 = load i32, i32* %precision866, align 4
  %bf.clear868 = and i32 %bf.load867, 511
  %330 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %type869 = bitcast %union.tree_node* %330 to %struct.tree_type*
  %precision870 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type869, i32 0, i32 6
  %bf.load871 = load i32, i32* %precision870, align 4
  %bf.clear872 = and i32 %bf.load871, 511
  %cmp873 = icmp slt i32 %bf.clear868, %bf.clear872
  br i1 %cmp873, label %land.lhs.true.875, label %if.end.882

land.lhs.true.875:                                ; preds = %land.lhs.true.862
  %331 = load i32, i32* %unsigned0, align 4
  %332 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common876 = bitcast %union.tree_node* %332 to %struct.tree_common*
  %type877 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common876, i32 0, i32 1
  %333 = load %union.tree_node*, %union.tree_node** %type877, align 8
  %call878 = call %union.tree_node* @signed_or_unsigned_type(i32 %331, %union.tree_node* %333)
  store %union.tree_node* %call878, %union.tree_node** %type718, align 8
  %334 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %335 = load %union.tree_node*, %union.tree_node** %type718, align 8
  %call879 = call i32 @int_fits_type_p(%union.tree_node* %334, %union.tree_node* %335)
  %tobool880 = icmp ne i32 %call879, 0
  br i1 %tobool880, label %if.then.881, label %if.end.882

if.then.881:                                      ; preds = %land.lhs.true.875
  %336 = load %union.tree_node*, %union.tree_node** %type718, align 8
  store %union.tree_node* %336, %union.tree_node** %result_type, align 8
  br label %if.end.882

if.end.882:                                       ; preds = %if.then.881, %land.lhs.true.875, %land.lhs.true.862, %lor.lhs.false.860, %if.else.851
  br label %if.end.883

if.end.883:                                       ; preds = %if.end.882, %if.then.850
  br label %if.end.884

if.end.884:                                       ; preds = %if.end.883, %if.then.813
  br label %if.end.885

if.end.885:                                       ; preds = %if.end.884, %land.lhs.true.708, %if.end.706
  %337 = load i32, i32* %short_shift, align 4
  %tobool886 = icmp ne i32 %337, 0
  br i1 %tobool886, label %if.then.887, label %if.end.950

if.then.887:                                      ; preds = %if.end.885
  %338 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %call889 = call %union.tree_node* @get_narrower(%union.tree_node* %338, i32* %unsigned_arg)
  store %union.tree_node* %call889, %union.tree_node** %arg0888, align 8
  %339 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  store %union.tree_node* %339, %union.tree_node** %final_type, align 8
  %340 = load %union.tree_node*, %union.tree_node** %arg0888, align 8
  %341 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %cmp890 = icmp eq %union.tree_node* %340, %341
  br i1 %cmp890, label %land.lhs.true.892, label %if.end.905

land.lhs.true.892:                                ; preds = %if.then.887
  %342 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %343 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common893 = bitcast %union.tree_node* %343 to %struct.tree_common*
  %type894 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common893, i32 0, i32 1
  %344 = load %union.tree_node*, %union.tree_node** %type894, align 8
  %cmp895 = icmp eq %union.tree_node* %342, %344
  br i1 %cmp895, label %if.then.897, label %if.end.905

if.then.897:                                      ; preds = %land.lhs.true.892
  %345 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common898 = bitcast %union.tree_node* %345 to %struct.tree_common*
  %type899 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common898, i32 0, i32 1
  %346 = load %union.tree_node*, %union.tree_node** %type899, align 8
  %common900 = bitcast %union.tree_node* %346 to %struct.tree_common*
  %unsigned_flag901 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common900, i32 0, i32 2
  %bf.load902 = load i32, i32* %unsigned_flag901, align 8
  %bf.lshr903 = lshr i32 %bf.load902, 13
  %bf.clear904 = and i32 %bf.lshr903, 1
  store i32 %bf.clear904, i32* %unsigned_arg, align 4
  br label %if.end.905

if.end.905:                                       ; preds = %if.then.897, %land.lhs.true.892, %if.then.887
  %347 = load %union.tree_node*, %union.tree_node** %arg0888, align 8
  %common906 = bitcast %union.tree_node* %347 to %struct.tree_common*
  %type907 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common906, i32 0, i32 1
  %348 = load %union.tree_node*, %union.tree_node** %type907, align 8
  %type908 = bitcast %union.tree_node* %348 to %struct.tree_type*
  %precision909 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type908, i32 0, i32 6
  %bf.load910 = load i32, i32* %precision909, align 4
  %bf.clear911 = and i32 %bf.load910, 511
  %349 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %type912 = bitcast %union.tree_node* %349 to %struct.tree_type*
  %precision913 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type912, i32 0, i32 6
  %bf.load914 = load i32, i32* %precision913, align 4
  %bf.clear915 = and i32 %bf.load914, 511
  %cmp916 = icmp slt i32 %bf.clear911, %bf.clear915
  br i1 %cmp916, label %land.lhs.true.918, label %if.end.949

land.lhs.true.918:                                ; preds = %if.end.905
  %350 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %351 = load %union.tree_node*, %union.tree_node** %arg0888, align 8
  %common919 = bitcast %union.tree_node* %351 to %struct.tree_common*
  %type920 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common919, i32 0, i32 1
  %352 = load %union.tree_node*, %union.tree_node** %type920, align 8
  %type921 = bitcast %union.tree_node* %352 to %struct.tree_type*
  %precision922 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type921, i32 0, i32 6
  %bf.load923 = load i32, i32* %precision922, align 4
  %bf.clear924 = and i32 %bf.load923, 511
  %conv925 = zext i32 %bf.clear924 to i64
  %call926 = call i32 @compare_tree_int(%union.tree_node* %350, i64 %conv925)
  %cmp927 = icmp slt i32 %call926, 0
  br i1 %cmp927, label %land.lhs.true.929, label %if.end.949

land.lhs.true.929:                                ; preds = %land.lhs.true.918
  %353 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %common930 = bitcast %union.tree_node* %353 to %struct.tree_common*
  %unsigned_flag931 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common930, i32 0, i32 2
  %bf.load932 = load i32, i32* %unsigned_flag931, align 8
  %bf.lshr933 = lshr i32 %bf.load932, 13
  %bf.clear934 = and i32 %bf.lshr933, 1
  %tobool935 = icmp ne i32 %bf.clear934, 0
  br i1 %tobool935, label %lor.lhs.false.936, label %if.then.938

lor.lhs.false.936:                                ; preds = %land.lhs.true.929
  %354 = load i32, i32* %unsigned_arg, align 4
  %tobool937 = icmp ne i32 %354, 0
  br i1 %tobool937, label %if.then.938, label %if.end.949

if.then.938:                                      ; preds = %lor.lhs.false.936, %land.lhs.true.929
  %355 = load i32, i32* %unsigned_arg, align 4
  %356 = load %union.tree_node*, %union.tree_node** %arg0888, align 8
  %common939 = bitcast %union.tree_node* %356 to %struct.tree_common*
  %type940 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common939, i32 0, i32 1
  %357 = load %union.tree_node*, %union.tree_node** %type940, align 8
  %call941 = call %union.tree_node* @signed_or_unsigned_type(i32 %355, %union.tree_node* %357)
  store %union.tree_node* %call941, %union.tree_node** %result_type, align 8
  %358 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common942 = bitcast %union.tree_node* %358 to %struct.tree_common*
  %type943 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common942, i32 0, i32 1
  %359 = load %union.tree_node*, %union.tree_node** %type943, align 8
  %360 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %cmp944 = icmp ne %union.tree_node* %359, %360
  br i1 %cmp944, label %if.then.946, label %if.end.948

if.then.946:                                      ; preds = %if.then.938
  %361 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %362 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %call947 = call %union.tree_node* @convert(%union.tree_node* %361, %union.tree_node* %362)
  store %union.tree_node* %call947, %union.tree_node** %op0, align 8
  br label %if.end.948

if.end.948:                                       ; preds = %if.then.946, %if.then.938
  store i32 1, i32* %converted, align 4
  br label %if.end.949

if.end.949:                                       ; preds = %if.end.948, %lor.lhs.false.936, %land.lhs.true.918, %if.end.905
  br label %if.end.950

if.end.950:                                       ; preds = %if.end.949, %if.end.885
  %363 = load i32, i32* %short_compare, align 4
  %tobool951 = icmp ne i32 %363, 0
  br i1 %tobool951, label %if.then.952, label %if.end.1247

if.then.952:                                      ; preds = %if.end.950
  %364 = load %union.tree_node*, %union.tree_node** %op0, align 8
  store %union.tree_node* %364, %union.tree_node** %xop0, align 8
  %365 = load %union.tree_node*, %union.tree_node** %op1, align 8
  store %union.tree_node* %365, %union.tree_node** %xop1, align 8
  %366 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  store %union.tree_node* %366, %union.tree_node** %xresult_type, align 8
  %367 = load i32, i32* %resultcode, align 4
  store i32 %367, i32* %xresultcode, align 4
  %call953 = call %union.tree_node* @shorten_compare(%union.tree_node** %xop0, %union.tree_node** %xop1, %union.tree_node** %xresult_type, i32* %xresultcode)
  store %union.tree_node* %call953, %union.tree_node** %val, align 8
  %368 = load %union.tree_node*, %union.tree_node** %val, align 8
  %cmp954 = icmp ne %union.tree_node* %368, null
  br i1 %cmp954, label %if.then.956, label %if.end.957

if.then.956:                                      ; preds = %if.then.952
  %369 = load %union.tree_node*, %union.tree_node** %val, align 8
  store %union.tree_node* %369, %union.tree_node** %retval
  br label %return

if.end.957:                                       ; preds = %if.then.952
  %370 = load %union.tree_node*, %union.tree_node** %xop0, align 8
  store %union.tree_node* %370, %union.tree_node** %op0, align 8
  %371 = load %union.tree_node*, %union.tree_node** %xop1, align 8
  store %union.tree_node* %371, %union.tree_node** %op1, align 8
  store i32 1, i32* %converted, align 4
  %372 = load i32, i32* %xresultcode, align 4
  store i32 %372, i32* %resultcode, align 4
  %373 = load i32, i32* @warn_sign_compare, align 4
  %cmp958 = icmp slt i32 %373, 0
  br i1 %cmp958, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.957
  %374 = load i32, i32* @extra_warnings, align 4
  %tobool960 = icmp ne i32 %374, 0
  br i1 %tobool960, label %land.lhs.true.963, label %if.end.1246

cond.false:                                       ; preds = %if.end.957
  %375 = load i32, i32* @warn_sign_compare, align 4
  %cmp961 = icmp ne i32 %375, 0
  br i1 %cmp961, label %land.lhs.true.963, label %if.end.1246

land.lhs.true.963:                                ; preds = %cond.false, %cond.true
  %376 = load i32, i32* @skip_evaluation, align 4
  %cmp964 = icmp eq i32 %376, 0
  br i1 %cmp964, label %if.then.966, label %if.end.1246

if.then.966:                                      ; preds = %land.lhs.true.963
  %377 = load %union.tree_node*, %union.tree_node** %orig_op0.addr, align 8
  %common967 = bitcast %union.tree_node* %377 to %struct.tree_common*
  %type968 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common967, i32 0, i32 1
  %378 = load %union.tree_node*, %union.tree_node** %type968, align 8
  %common969 = bitcast %union.tree_node* %378 to %struct.tree_common*
  %unsigned_flag970 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common969, i32 0, i32 2
  %bf.load971 = load i32, i32* %unsigned_flag970, align 8
  %bf.lshr972 = lshr i32 %bf.load971, 13
  %bf.clear973 = and i32 %bf.lshr972, 1
  %tobool974 = icmp ne i32 %bf.clear973, 0
  %lnot975 = xor i1 %tobool974, true
  %lnot.ext976 = zext i1 %lnot975 to i32
  store i32 %lnot.ext976, i32* %op0_signed, align 4
  %379 = load %union.tree_node*, %union.tree_node** %orig_op1.addr, align 8
  %common977 = bitcast %union.tree_node* %379 to %struct.tree_common*
  %type978 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common977, i32 0, i32 1
  %380 = load %union.tree_node*, %union.tree_node** %type978, align 8
  %common979 = bitcast %union.tree_node* %380 to %struct.tree_common*
  %unsigned_flag980 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common979, i32 0, i32 2
  %bf.load981 = load i32, i32* %unsigned_flag980, align 8
  %bf.lshr982 = lshr i32 %bf.load981, 13
  %bf.clear983 = and i32 %bf.lshr982, 1
  %tobool984 = icmp ne i32 %bf.clear983, 0
  %lnot985 = xor i1 %tobool984, true
  %lnot.ext986 = zext i1 %lnot985 to i32
  store i32 %lnot.ext986, i32* %op1_signed, align 4
  %381 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %call987 = call %union.tree_node* @get_narrower(%union.tree_node* %381, i32* %unsignedp0)
  store %union.tree_node* %call987, %union.tree_node** %primop0, align 8
  %382 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call988 = call %union.tree_node* @get_narrower(%union.tree_node* %382, i32* %unsignedp1)
  store %union.tree_node* %call988, %union.tree_node** %primop1, align 8
  %383 = load %union.tree_node*, %union.tree_node** %orig_op0.addr, align 8
  store %union.tree_node* %383, %union.tree_node** %xop0, align 8
  %384 = load %union.tree_node*, %union.tree_node** %orig_op1.addr, align 8
  store %union.tree_node* %384, %union.tree_node** %xop1, align 8
  br label %while.cond.989

while.cond.989:                                   ; preds = %while.body.1028, %if.then.966
  %385 = load %union.tree_node*, %union.tree_node** %xop0, align 8
  %common990 = bitcast %union.tree_node* %385 to %struct.tree_common*
  %code991 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common990, i32 0, i32 2
  %bf.load992 = load i32, i32* %code991, align 8
  %bf.clear993 = and i32 %bf.load992, 255
  %cmp994 = icmp eq i32 %bf.clear993, 115
  br i1 %cmp994, label %land.lhs.true.1010, label %lor.lhs.false.996

lor.lhs.false.996:                                ; preds = %while.cond.989
  %386 = load %union.tree_node*, %union.tree_node** %xop0, align 8
  %common997 = bitcast %union.tree_node* %386 to %struct.tree_common*
  %code998 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common997, i32 0, i32 2
  %bf.load999 = load i32, i32* %code998, align 8
  %bf.clear1000 = and i32 %bf.load999, 255
  %cmp1001 = icmp eq i32 %bf.clear1000, 114
  br i1 %cmp1001, label %land.lhs.true.1010, label %lor.lhs.false.1003

lor.lhs.false.1003:                               ; preds = %lor.lhs.false.996
  %387 = load %union.tree_node*, %union.tree_node** %xop0, align 8
  %common1004 = bitcast %union.tree_node* %387 to %struct.tree_common*
  %code1005 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1004, i32 0, i32 2
  %bf.load1006 = load i32, i32* %code1005, align 8
  %bf.clear1007 = and i32 %bf.load1006, 255
  %cmp1008 = icmp eq i32 %bf.clear1007, 116
  br i1 %cmp1008, label %land.lhs.true.1010, label %land.end.1026

land.lhs.true.1010:                               ; preds = %lor.lhs.false.1003, %lor.lhs.false.996, %while.cond.989
  %388 = load %union.tree_node*, %union.tree_node** %xop0, align 8
  %exp1011 = bitcast %union.tree_node* %388 to %struct.tree_exp*
  %operands1012 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1011, i32 0, i32 2
  %arrayidx1013 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1012, i32 0, i64 0
  %389 = load %union.tree_node*, %union.tree_node** %arrayidx1013, align 8
  %390 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp1014 = icmp ne %union.tree_node* %389, %390
  br i1 %cmp1014, label %land.rhs.1016, label %land.end.1026

land.rhs.1016:                                    ; preds = %land.lhs.true.1010
  %391 = load %union.tree_node*, %union.tree_node** %xop0, align 8
  %common1017 = bitcast %union.tree_node* %391 to %struct.tree_common*
  %type1018 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1017, i32 0, i32 1
  %392 = load %union.tree_node*, %union.tree_node** %type1018, align 8
  %393 = load %union.tree_node*, %union.tree_node** %xop0, align 8
  %exp1019 = bitcast %union.tree_node* %393 to %struct.tree_exp*
  %operands1020 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1019, i32 0, i32 2
  %arrayidx1021 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1020, i32 0, i64 0
  %394 = load %union.tree_node*, %union.tree_node** %arrayidx1021, align 8
  %common1022 = bitcast %union.tree_node* %394 to %struct.tree_common*
  %type1023 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1022, i32 0, i32 1
  %395 = load %union.tree_node*, %union.tree_node** %type1023, align 8
  %cmp1024 = icmp eq %union.tree_node* %392, %395
  br label %land.end.1026

land.end.1026:                                    ; preds = %land.rhs.1016, %land.lhs.true.1010, %lor.lhs.false.1003
  %396 = phi i1 [ false, %land.lhs.true.1010 ], [ false, %lor.lhs.false.1003 ], [ %cmp1024, %land.rhs.1016 ]
  br i1 %396, label %while.body.1028, label %while.end.1032

while.body.1028:                                  ; preds = %land.end.1026
  %397 = load %union.tree_node*, %union.tree_node** %xop0, align 8
  %exp1029 = bitcast %union.tree_node* %397 to %struct.tree_exp*
  %operands1030 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1029, i32 0, i32 2
  %arrayidx1031 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1030, i32 0, i64 0
  %398 = load %union.tree_node*, %union.tree_node** %arrayidx1031, align 8
  store %union.tree_node* %398, %union.tree_node** %xop0, align 8
  br label %while.cond.989

while.end.1032:                                   ; preds = %land.end.1026
  br label %while.cond.1033

while.cond.1033:                                  ; preds = %while.body.1072, %while.end.1032
  %399 = load %union.tree_node*, %union.tree_node** %xop1, align 8
  %common1034 = bitcast %union.tree_node* %399 to %struct.tree_common*
  %code1035 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1034, i32 0, i32 2
  %bf.load1036 = load i32, i32* %code1035, align 8
  %bf.clear1037 = and i32 %bf.load1036, 255
  %cmp1038 = icmp eq i32 %bf.clear1037, 115
  br i1 %cmp1038, label %land.lhs.true.1054, label %lor.lhs.false.1040

lor.lhs.false.1040:                               ; preds = %while.cond.1033
  %400 = load %union.tree_node*, %union.tree_node** %xop1, align 8
  %common1041 = bitcast %union.tree_node* %400 to %struct.tree_common*
  %code1042 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1041, i32 0, i32 2
  %bf.load1043 = load i32, i32* %code1042, align 8
  %bf.clear1044 = and i32 %bf.load1043, 255
  %cmp1045 = icmp eq i32 %bf.clear1044, 114
  br i1 %cmp1045, label %land.lhs.true.1054, label %lor.lhs.false.1047

lor.lhs.false.1047:                               ; preds = %lor.lhs.false.1040
  %401 = load %union.tree_node*, %union.tree_node** %xop1, align 8
  %common1048 = bitcast %union.tree_node* %401 to %struct.tree_common*
  %code1049 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1048, i32 0, i32 2
  %bf.load1050 = load i32, i32* %code1049, align 8
  %bf.clear1051 = and i32 %bf.load1050, 255
  %cmp1052 = icmp eq i32 %bf.clear1051, 116
  br i1 %cmp1052, label %land.lhs.true.1054, label %land.end.1070

land.lhs.true.1054:                               ; preds = %lor.lhs.false.1047, %lor.lhs.false.1040, %while.cond.1033
  %402 = load %union.tree_node*, %union.tree_node** %xop1, align 8
  %exp1055 = bitcast %union.tree_node* %402 to %struct.tree_exp*
  %operands1056 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1055, i32 0, i32 2
  %arrayidx1057 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1056, i32 0, i64 0
  %403 = load %union.tree_node*, %union.tree_node** %arrayidx1057, align 8
  %404 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp1058 = icmp ne %union.tree_node* %403, %404
  br i1 %cmp1058, label %land.rhs.1060, label %land.end.1070

land.rhs.1060:                                    ; preds = %land.lhs.true.1054
  %405 = load %union.tree_node*, %union.tree_node** %xop1, align 8
  %common1061 = bitcast %union.tree_node* %405 to %struct.tree_common*
  %type1062 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1061, i32 0, i32 1
  %406 = load %union.tree_node*, %union.tree_node** %type1062, align 8
  %407 = load %union.tree_node*, %union.tree_node** %xop1, align 8
  %exp1063 = bitcast %union.tree_node* %407 to %struct.tree_exp*
  %operands1064 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1063, i32 0, i32 2
  %arrayidx1065 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1064, i32 0, i64 0
  %408 = load %union.tree_node*, %union.tree_node** %arrayidx1065, align 8
  %common1066 = bitcast %union.tree_node* %408 to %struct.tree_common*
  %type1067 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1066, i32 0, i32 1
  %409 = load %union.tree_node*, %union.tree_node** %type1067, align 8
  %cmp1068 = icmp eq %union.tree_node* %406, %409
  br label %land.end.1070

land.end.1070:                                    ; preds = %land.rhs.1060, %land.lhs.true.1054, %lor.lhs.false.1047
  %410 = phi i1 [ false, %land.lhs.true.1054 ], [ false, %lor.lhs.false.1047 ], [ %cmp1068, %land.rhs.1060 ]
  br i1 %410, label %while.body.1072, label %while.end.1076

while.body.1072:                                  ; preds = %land.end.1070
  %411 = load %union.tree_node*, %union.tree_node** %xop1, align 8
  %exp1073 = bitcast %union.tree_node* %411 to %struct.tree_exp*
  %operands1074 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1073, i32 0, i32 2
  %arrayidx1075 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1074, i32 0, i64 0
  %412 = load %union.tree_node*, %union.tree_node** %arrayidx1075, align 8
  store %union.tree_node* %412, %union.tree_node** %xop1, align 8
  br label %while.cond.1033

while.end.1076:                                   ; preds = %land.end.1070
  %413 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %common1077 = bitcast %union.tree_node* %413 to %struct.tree_common*
  %unsigned_flag1078 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1077, i32 0, i32 2
  %bf.load1079 = load i32, i32* %unsigned_flag1078, align 8
  %bf.lshr1080 = lshr i32 %bf.load1079, 13
  %bf.clear1081 = and i32 %bf.lshr1080, 1
  %tobool1082 = icmp ne i32 %bf.clear1081, 0
  br i1 %tobool1082, label %if.else.1084, label %if.then.1083

if.then.1083:                                     ; preds = %while.end.1076
  br label %if.end.1143

if.else.1084:                                     ; preds = %while.end.1076
  %414 = load i32, i32* %op0_signed, align 4
  %415 = load i32, i32* %op1_signed, align 4
  %cmp1085 = icmp eq i32 %414, %415
  br i1 %cmp1085, label %if.then.1087, label %if.else.1088

if.then.1087:                                     ; preds = %if.else.1084
  br label %if.end.1142

if.else.1088:                                     ; preds = %if.else.1084
  %416 = load i32, i32* %op0_signed, align 4
  %tobool1089 = icmp ne i32 %416, 0
  br i1 %tobool1089, label %if.then.1090, label %if.else.1091

if.then.1090:                                     ; preds = %if.else.1088
  %417 = load %union.tree_node*, %union.tree_node** %xop0, align 8
  store %union.tree_node* %417, %union.tree_node** %sop, align 8
  %418 = load %union.tree_node*, %union.tree_node** %xop1, align 8
  store %union.tree_node* %418, %union.tree_node** %uop, align 8
  br label %if.end.1092

if.else.1091:                                     ; preds = %if.else.1088
  %419 = load %union.tree_node*, %union.tree_node** %xop1, align 8
  store %union.tree_node* %419, %union.tree_node** %sop, align 8
  %420 = load %union.tree_node*, %union.tree_node** %xop0, align 8
  store %union.tree_node* %420, %union.tree_node** %uop, align 8
  br label %if.end.1092

if.end.1092:                                      ; preds = %if.else.1091, %if.then.1090
  %421 = load %union.tree_node*, %union.tree_node** %sop, align 8
  %call1093 = call i32 @tree_expr_nonnegative_p(%union.tree_node* %421)
  %tobool1094 = icmp ne i32 %call1093, 0
  br i1 %tobool1094, label %if.then.1095, label %if.else.1096

if.then.1095:                                     ; preds = %if.end.1092
  br label %if.end.1141

if.else.1096:                                     ; preds = %if.end.1092
  %422 = load %union.tree_node*, %union.tree_node** %uop, align 8
  %common1097 = bitcast %union.tree_node* %422 to %struct.tree_common*
  %code1098 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1097, i32 0, i32 2
  %bf.load1099 = load i32, i32* %code1098, align 8
  %bf.clear1100 = and i32 %bf.load1099, 255
  %cmp1101 = icmp eq i32 %bf.clear1100, 25
  br i1 %cmp1101, label %land.lhs.true.1103, label %if.else.1114

land.lhs.true.1103:                               ; preds = %if.else.1096
  %423 = load i32, i32* %resultcode, align 4
  %cmp1104 = icmp eq i32 %423, 101
  br i1 %cmp1104, label %land.lhs.true.1109, label %lor.lhs.false.1106

lor.lhs.false.1106:                               ; preds = %land.lhs.true.1103
  %424 = load i32, i32* %resultcode, align 4
  %cmp1107 = icmp eq i32 %424, 102
  br i1 %cmp1107, label %land.lhs.true.1109, label %if.else.1114

land.lhs.true.1109:                               ; preds = %lor.lhs.false.1106, %land.lhs.true.1103
  %425 = load %union.tree_node*, %union.tree_node** %uop, align 8
  %426 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %call1110 = call %union.tree_node* @signed_type(%union.tree_node* %426)
  %call1111 = call i32 @int_fits_type_p(%union.tree_node* %425, %union.tree_node* %call1110)
  %tobool1112 = icmp ne i32 %call1111, 0
  br i1 %tobool1112, label %if.then.1113, label %if.else.1114

if.then.1113:                                     ; preds = %land.lhs.true.1109
  br label %if.end.1140

if.else.1114:                                     ; preds = %land.lhs.true.1109, %lor.lhs.false.1106, %if.else.1096
  %427 = load %union.tree_node*, %union.tree_node** %uop, align 8
  %common1115 = bitcast %union.tree_node* %427 to %struct.tree_common*
  %code1116 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1115, i32 0, i32 2
  %bf.load1117 = load i32, i32* %code1116, align 8
  %bf.clear1118 = and i32 %bf.load1117, 255
  %cmp1119 = icmp eq i32 %bf.clear1118, 25
  br i1 %cmp1119, label %land.lhs.true.1121, label %if.else.1138

land.lhs.true.1121:                               ; preds = %if.else.1114
  %428 = load %union.tree_node*, %union.tree_node** %uop, align 8
  %common1122 = bitcast %union.tree_node* %428 to %struct.tree_common*
  %type1123 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1122, i32 0, i32 1
  %429 = load %union.tree_node*, %union.tree_node** %type1123, align 8
  %common1124 = bitcast %union.tree_node* %429 to %struct.tree_common*
  %code1125 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1124, i32 0, i32 2
  %bf.load1126 = load i32, i32* %code1125, align 8
  %bf.clear1127 = and i32 %bf.load1126, 255
  %cmp1128 = icmp eq i32 %bf.clear1127, 10
  br i1 %cmp1128, label %land.lhs.true.1130, label %if.else.1138

land.lhs.true.1130:                               ; preds = %land.lhs.true.1121
  %430 = load %union.tree_node*, %union.tree_node** %uop, align 8
  %common1131 = bitcast %union.tree_node* %430 to %struct.tree_common*
  %type1132 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1131, i32 0, i32 1
  %431 = load %union.tree_node*, %union.tree_node** %type1132, align 8
  %type1133 = bitcast %union.tree_node* %431 to %struct.tree_type*
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1133, i32 0, i32 13
  %432 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %433 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %call1134 = call %union.tree_node* @signed_type(%union.tree_node* %433)
  %call1135 = call i32 @int_fits_type_p(%union.tree_node* %432, %union.tree_node* %call1134)
  %tobool1136 = icmp ne i32 %call1135, 0
  br i1 %tobool1136, label %if.then.1137, label %if.else.1138

if.then.1137:                                     ; preds = %land.lhs.true.1130
  br label %if.end.1139

if.else.1138:                                     ; preds = %land.lhs.true.1130, %land.lhs.true.1121, %if.else.1114
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.60, i32 0, i32 0))
  br label %if.end.1139

if.end.1139:                                      ; preds = %if.else.1138, %if.then.1137
  br label %if.end.1140

if.end.1140:                                      ; preds = %if.end.1139, %if.then.1113
  br label %if.end.1141

if.end.1141:                                      ; preds = %if.end.1140, %if.then.1095
  br label %if.end.1142

if.end.1142:                                      ; preds = %if.end.1141, %if.then.1087
  br label %if.end.1143

if.end.1143:                                      ; preds = %if.end.1142, %if.then.1083
  %434 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %common1144 = bitcast %union.tree_node* %434 to %struct.tree_common*
  %code1145 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1144, i32 0, i32 2
  %bf.load1146 = load i32, i32* %code1145, align 8
  %bf.clear1147 = and i32 %bf.load1146, 255
  %cmp1148 = icmp eq i32 %bf.clear1147, 90
  %conv1149 = zext i1 %cmp1148 to i32
  %435 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %common1150 = bitcast %union.tree_node* %435 to %struct.tree_common*
  %code1151 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1150, i32 0, i32 2
  %bf.load1152 = load i32, i32* %code1151, align 8
  %bf.clear1153 = and i32 %bf.load1152, 255
  %cmp1154 = icmp eq i32 %bf.clear1153, 90
  %conv1155 = zext i1 %cmp1154 to i32
  %cmp1156 = icmp ne i32 %conv1149, %conv1155
  br i1 %cmp1156, label %if.then.1158, label %if.end.1245

if.then.1158:                                     ; preds = %if.end.1143
  %436 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %common1159 = bitcast %union.tree_node* %436 to %struct.tree_common*
  %code1160 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1159, i32 0, i32 2
  %bf.load1161 = load i32, i32* %code1160, align 8
  %bf.clear1162 = and i32 %bf.load1161, 255
  %cmp1163 = icmp eq i32 %bf.clear1162, 90
  br i1 %cmp1163, label %if.then.1165, label %if.else.1170

if.then.1165:                                     ; preds = %if.then.1158
  %437 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %exp1166 = bitcast %union.tree_node* %437 to %struct.tree_exp*
  %operands1167 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1166, i32 0, i32 2
  %arrayidx1168 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1167, i32 0, i64 0
  %438 = load %union.tree_node*, %union.tree_node** %arrayidx1168, align 8
  %call1169 = call %union.tree_node* @get_narrower(%union.tree_node* %438, i32* %unsignedp0)
  store %union.tree_node* %call1169, %union.tree_node** %primop0, align 8
  br label %if.end.1175

if.else.1170:                                     ; preds = %if.then.1158
  %439 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %exp1171 = bitcast %union.tree_node* %439 to %struct.tree_exp*
  %operands1172 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1171, i32 0, i32 2
  %arrayidx1173 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1172, i32 0, i64 0
  %440 = load %union.tree_node*, %union.tree_node** %arrayidx1173, align 8
  %call1174 = call %union.tree_node* @get_narrower(%union.tree_node* %440, i32* %unsignedp1)
  store %union.tree_node* %call1174, %union.tree_node** %primop1, align 8
  br label %if.end.1175

if.end.1175:                                      ; preds = %if.else.1170, %if.then.1165
  %441 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %call1176 = call i32 @host_integerp(%union.tree_node* %441, i32 0)
  %tobool1177 = icmp ne i32 %call1176, 0
  br i1 %tobool1177, label %if.then.1181, label %lor.lhs.false.1178

lor.lhs.false.1178:                               ; preds = %if.end.1175
  %442 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %call1179 = call i32 @host_integerp(%union.tree_node* %442, i32 0)
  %tobool1180 = icmp ne i32 %call1179, 0
  br i1 %tobool1180, label %if.then.1181, label %if.else.1212

if.then.1181:                                     ; preds = %lor.lhs.false.1178, %if.end.1175
  %443 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %call1182 = call i32 @host_integerp(%union.tree_node* %443, i32 0)
  %tobool1183 = icmp ne i32 %call1182, 0
  br i1 %tobool1183, label %if.then.1184, label %if.else.1186

if.then.1184:                                     ; preds = %if.then.1181
  %444 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  store %union.tree_node* %444, %union.tree_node** %primop, align 8
  %445 = load i32, i32* %unsignedp1, align 4
  store i32 %445, i32* %unsignedp, align 4
  %446 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %call1185 = call i64 @tree_low_cst(%union.tree_node* %446, i32 0)
  store i64 %call1185, i64* %constant, align 8
  br label %if.end.1188

if.else.1186:                                     ; preds = %if.then.1181
  %447 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  store %union.tree_node* %447, %union.tree_node** %primop, align 8
  %448 = load i32, i32* %unsignedp0, align 4
  store i32 %448, i32* %unsignedp, align 4
  %449 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %call1187 = call i64 @tree_low_cst(%union.tree_node* %449, i32 0)
  store i64 %call1187, i64* %constant, align 8
  br label %if.end.1188

if.end.1188:                                      ; preds = %if.else.1186, %if.then.1184
  %450 = load %union.tree_node*, %union.tree_node** %primop, align 8
  %common1189 = bitcast %union.tree_node* %450 to %struct.tree_common*
  %type1190 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1189, i32 0, i32 1
  %451 = load %union.tree_node*, %union.tree_node** %type1190, align 8
  %type1191 = bitcast %union.tree_node* %451 to %struct.tree_type*
  %precision1192 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1191, i32 0, i32 6
  %bf.load1193 = load i32, i32* %precision1192, align 4
  %bf.clear1194 = and i32 %bf.load1193, 511
  store i32 %bf.clear1194, i32* %bits, align 4
  %452 = load i32, i32* %bits, align 4
  %453 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %type1195 = bitcast %union.tree_node* %453 to %struct.tree_type*
  %precision1196 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1195, i32 0, i32 6
  %bf.load1197 = load i32, i32* %precision1196, align 4
  %bf.clear1198 = and i32 %bf.load1197, 511
  %cmp1199 = icmp slt i32 %452, %bf.clear1198
  br i1 %cmp1199, label %land.lhs.true.1201, label %if.end.1211

land.lhs.true.1201:                               ; preds = %if.end.1188
  %454 = load i32, i32* %bits, align 4
  %cmp1202 = icmp slt i32 %454, 64
  br i1 %cmp1202, label %land.lhs.true.1204, label %if.end.1211

land.lhs.true.1204:                               ; preds = %land.lhs.true.1201
  %455 = load i32, i32* %unsignedp, align 4
  %tobool1205 = icmp ne i32 %455, 0
  br i1 %tobool1205, label %if.then.1206, label %if.end.1211

if.then.1206:                                     ; preds = %land.lhs.true.1204
  %456 = load i32, i32* %bits, align 4
  %sh_prom = zext i32 %456 to i64
  %shl = shl i64 -1, %sh_prom
  store i64 %shl, i64* %mask, align 8
  %457 = load i64, i64* %mask, align 8
  %458 = load i64, i64* %constant, align 8
  %and = and i64 %457, %458
  %459 = load i64, i64* %mask, align 8
  %cmp1207 = icmp ne i64 %and, %459
  br i1 %cmp1207, label %if.then.1209, label %if.end.1210

if.then.1209:                                     ; preds = %if.then.1206
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.61, i32 0, i32 0))
  br label %if.end.1210

if.end.1210:                                      ; preds = %if.then.1209, %if.then.1206
  br label %if.end.1211

if.end.1211:                                      ; preds = %if.end.1210, %land.lhs.true.1204, %land.lhs.true.1201, %if.end.1188
  br label %if.end.1244

if.else.1212:                                     ; preds = %lor.lhs.false.1178
  %460 = load i32, i32* %unsignedp0, align 4
  %tobool1213 = icmp ne i32 %460, 0
  br i1 %tobool1213, label %land.lhs.true.1214, label %if.end.1243

land.lhs.true.1214:                               ; preds = %if.else.1212
  %461 = load i32, i32* %unsignedp1, align 4
  %tobool1215 = icmp ne i32 %461, 0
  br i1 %tobool1215, label %land.lhs.true.1216, label %if.end.1243

land.lhs.true.1216:                               ; preds = %land.lhs.true.1214
  %462 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %common1217 = bitcast %union.tree_node* %462 to %struct.tree_common*
  %type1218 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1217, i32 0, i32 1
  %463 = load %union.tree_node*, %union.tree_node** %type1218, align 8
  %type1219 = bitcast %union.tree_node* %463 to %struct.tree_type*
  %precision1220 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1219, i32 0, i32 6
  %bf.load1221 = load i32, i32* %precision1220, align 4
  %bf.clear1222 = and i32 %bf.load1221, 511
  %464 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %type1223 = bitcast %union.tree_node* %464 to %struct.tree_type*
  %precision1224 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1223, i32 0, i32 6
  %bf.load1225 = load i32, i32* %precision1224, align 4
  %bf.clear1226 = and i32 %bf.load1225, 511
  %cmp1227 = icmp slt i32 %bf.clear1222, %bf.clear1226
  br i1 %cmp1227, label %land.lhs.true.1229, label %if.end.1243

land.lhs.true.1229:                               ; preds = %land.lhs.true.1216
  %465 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %common1230 = bitcast %union.tree_node* %465 to %struct.tree_common*
  %type1231 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1230, i32 0, i32 1
  %466 = load %union.tree_node*, %union.tree_node** %type1231, align 8
  %type1232 = bitcast %union.tree_node* %466 to %struct.tree_type*
  %precision1233 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1232, i32 0, i32 6
  %bf.load1234 = load i32, i32* %precision1233, align 4
  %bf.clear1235 = and i32 %bf.load1234, 511
  %467 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %type1236 = bitcast %union.tree_node* %467 to %struct.tree_type*
  %precision1237 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1236, i32 0, i32 6
  %bf.load1238 = load i32, i32* %precision1237, align 4
  %bf.clear1239 = and i32 %bf.load1238, 511
  %cmp1240 = icmp slt i32 %bf.clear1235, %bf.clear1239
  br i1 %cmp1240, label %if.then.1242, label %if.end.1243

if.then.1242:                                     ; preds = %land.lhs.true.1229
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.62, i32 0, i32 0))
  br label %if.end.1243

if.end.1243:                                      ; preds = %if.then.1242, %land.lhs.true.1229, %land.lhs.true.1216, %land.lhs.true.1214, %if.else.1212
  br label %if.end.1244

if.end.1244:                                      ; preds = %if.end.1243, %if.end.1211
  br label %if.end.1245

if.end.1245:                                      ; preds = %if.end.1244, %if.end.1143
  br label %if.end.1246

if.end.1246:                                      ; preds = %if.end.1245, %land.lhs.true.963, %cond.false, %cond.true
  br label %if.end.1247

if.end.1247:                                      ; preds = %if.end.1246, %if.end.950
  br label %if.end.1248

if.end.1248:                                      ; preds = %if.end.1247, %lor.lhs.false.689, %lor.lhs.false.680
  %468 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %tobool1249 = icmp ne %union.tree_node* %468, null
  br i1 %tobool1249, label %if.end.1251, label %if.then.1250

if.then.1250:                                     ; preds = %if.end.1248
  %469 = load i32, i32* %code.addr, align 4
  call void @binary_op_error(i32 %469)
  %470 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %470, %union.tree_node** %retval
  br label %return

if.end.1251:                                      ; preds = %if.end.1248
  %471 = load i32, i32* %converted, align 4
  %tobool1252 = icmp ne i32 %471, 0
  br i1 %tobool1252, label %if.end.1268, label %if.then.1253

if.then.1253:                                     ; preds = %if.end.1251
  %472 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common1254 = bitcast %union.tree_node* %472 to %struct.tree_common*
  %type1255 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1254, i32 0, i32 1
  %473 = load %union.tree_node*, %union.tree_node** %type1255, align 8
  %474 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %cmp1256 = icmp ne %union.tree_node* %473, %474
  br i1 %cmp1256, label %if.then.1258, label %if.end.1260

if.then.1258:                                     ; preds = %if.then.1253
  %475 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %476 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %call1259 = call %union.tree_node* @convert(%union.tree_node* %475, %union.tree_node* %476)
  store %union.tree_node* %call1259, %union.tree_node** %op0, align 8
  br label %if.end.1260

if.end.1260:                                      ; preds = %if.then.1258, %if.then.1253
  %477 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common1261 = bitcast %union.tree_node* %477 to %struct.tree_common*
  %type1262 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1261, i32 0, i32 1
  %478 = load %union.tree_node*, %union.tree_node** %type1262, align 8
  %479 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %cmp1263 = icmp ne %union.tree_node* %478, %479
  br i1 %cmp1263, label %if.then.1265, label %if.end.1267

if.then.1265:                                     ; preds = %if.end.1260
  %480 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %481 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call1266 = call %union.tree_node* @convert(%union.tree_node* %480, %union.tree_node* %481)
  store %union.tree_node* %call1266, %union.tree_node** %op1, align 8
  br label %if.end.1267

if.end.1267:                                      ; preds = %if.then.1265, %if.end.1260
  br label %if.end.1268

if.end.1268:                                      ; preds = %if.end.1267, %if.end.1251
  %482 = load %union.tree_node*, %union.tree_node** %build_type, align 8
  %cmp1269 = icmp eq %union.tree_node* %482, null
  br i1 %cmp1269, label %if.then.1271, label %if.end.1272

if.then.1271:                                     ; preds = %if.end.1268
  %483 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  store %union.tree_node* %483, %union.tree_node** %build_type, align 8
  br label %if.end.1272

if.end.1272:                                      ; preds = %if.then.1271, %if.end.1268
  %484 = load i32, i32* %resultcode, align 4
  %485 = load %union.tree_node*, %union.tree_node** %build_type, align 8
  %486 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %487 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call1273 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %484, %union.tree_node* %485, %union.tree_node* %486, %union.tree_node* %487)
  store %union.tree_node* %call1273, %union.tree_node** %result, align 8
  %488 = load %union.tree_node*, %union.tree_node** %result, align 8
  %call1274 = call %union.tree_node* @fold(%union.tree_node* %488)
  store %union.tree_node* %call1274, %union.tree_node** %folded, align 8
  %489 = load %union.tree_node*, %union.tree_node** %folded, align 8
  %490 = load %union.tree_node*, %union.tree_node** %result, align 8
  %cmp1275 = icmp eq %union.tree_node* %489, %490
  br i1 %cmp1275, label %if.then.1277, label %if.end.1292

if.then.1277:                                     ; preds = %if.end.1272
  %491 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common1278 = bitcast %union.tree_node* %491 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1278, i32 0, i32 2
  %bf.load1279 = load i32, i32* %constant_flag, align 8
  %bf.lshr1280 = lshr i32 %bf.load1279, 9
  %bf.clear1281 = and i32 %bf.lshr1280, 1
  %492 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common1282 = bitcast %union.tree_node* %492 to %struct.tree_common*
  %constant_flag1283 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1282, i32 0, i32 2
  %bf.load1284 = load i32, i32* %constant_flag1283, align 8
  %bf.lshr1285 = lshr i32 %bf.load1284, 9
  %bf.clear1286 = and i32 %bf.lshr1285, 1
  %and1287 = and i32 %bf.clear1281, %bf.clear1286
  %493 = load %union.tree_node*, %union.tree_node** %folded, align 8
  %common1288 = bitcast %union.tree_node* %493 to %struct.tree_common*
  %constant_flag1289 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1288, i32 0, i32 2
  %bf.load1290 = load i32, i32* %constant_flag1289, align 8
  %bf.value = and i32 %and1287, 1
  %bf.shl = shl i32 %bf.value, 9
  %bf.clear1291 = and i32 %bf.load1290, -513
  %bf.set = or i32 %bf.clear1291, %bf.shl
  store i32 %bf.set, i32* %constant_flag1289, align 8
  br label %if.end.1292

if.end.1292:                                      ; preds = %if.then.1277, %if.end.1272
  %494 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %cmp1293 = icmp ne %union.tree_node* %494, null
  br i1 %cmp1293, label %if.then.1295, label %if.end.1297

if.then.1295:                                     ; preds = %if.end.1292
  %495 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %496 = load %union.tree_node*, %union.tree_node** %folded, align 8
  %call1296 = call %union.tree_node* @convert(%union.tree_node* %495, %union.tree_node* %496)
  store %union.tree_node* %call1296, %union.tree_node** %retval
  br label %return

if.end.1297:                                      ; preds = %if.end.1292
  %497 = load %union.tree_node*, %union.tree_node** %folded, align 8
  store %union.tree_node* %497, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.1297, %if.then.1295, %if.then.1250, %if.then.956, %if.then.673, %if.then.108, %if.then.102, %if.then.90, %if.then.84, %if.then.79
  %498 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %498
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_external_ref(%union.tree_node* %id, i32 %fun) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %id.addr = alloca %union.tree_node*, align 8
  %fun.addr = alloca i32, align 4
  %ref = alloca %union.tree_node*, align 8
  %decl = alloca %union.tree_node*, align 8
  %objc_ivar = alloca %union.tree_node*, align 8
  store %union.tree_node* %id, %union.tree_node** %id.addr, align 8
  store i32 %fun, i32* %fun.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** %id.addr, align 8
  %call = call %union.tree_node* @lookup_name(%union.tree_node* %0)
  store %union.tree_node* %call, %union.tree_node** %decl, align 8
  %1 = load %union.tree_node*, %union.tree_node** %id.addr, align 8
  %call1 = call %union.tree_node* @lookup_objc_ivar(%union.tree_node* %1)
  store %union.tree_node* %call1, %union.tree_node** %objc_ivar, align 8
  %2 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %tobool = icmp ne %union.tree_node* %2, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common = bitcast %union.tree_node* %3 to %struct.tree_common*
  %deprecated_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %deprecated_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 23
  %bf.clear = and i32 %bf.lshr, 1
  %tobool2 = icmp ne i32 %bf.clear, 0
  br i1 %tobool2, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %4 = load %union.tree_node*, %union.tree_node** %decl, align 8
  call void @warn_deprecated_use(%union.tree_node* %4)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %tobool3 = icmp ne %union.tree_node* %5, null
  br i1 %tobool3, label %lor.lhs.false, label %if.then.10

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp = icmp eq %union.tree_node* %6, %7
  br i1 %cmp, label %if.then.10, label %lor.lhs.false.4

lor.lhs.false.4:                                  ; preds = %lor.lhs.false
  %8 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl5 = bitcast %union.tree_node* %8 to %struct.tree_decl*
  %lang_flag_3 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl5, i32 0, i32 5
  %9 = bitcast i48* %lang_flag_3 to i64*
  %bf.load6 = load i64, i64* %9, align 8
  %bf.lshr7 = lshr i64 %bf.load6, 40
  %bf.clear8 = and i64 %bf.lshr7, 1
  %bf.cast = trunc i64 %bf.clear8 to i32
  %tobool9 = icmp ne i32 %bf.cast, 0
  br i1 %tobool9, label %if.then.10, label %if.else.47

if.then.10:                                       ; preds = %lor.lhs.false.4, %lor.lhs.false, %if.end
  %10 = load %union.tree_node*, %union.tree_node** %objc_ivar, align 8
  %tobool11 = icmp ne %union.tree_node* %10, null
  br i1 %tobool11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %if.then.10
  %11 = load %union.tree_node*, %union.tree_node** %objc_ivar, align 8
  store %union.tree_node* %11, %union.tree_node** %ref, align 8
  br label %if.end.46

if.else:                                          ; preds = %if.then.10
  %12 = load i32, i32* %fun.addr, align 4
  %tobool13 = icmp ne i32 %12, 0
  br i1 %tobool13, label %if.then.14, label %if.else.26

if.then.14:                                       ; preds = %if.else
  %13 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %tobool15 = icmp ne %union.tree_node* %13, null
  br i1 %tobool15, label %lor.lhs.false.16, label %if.then.18

lor.lhs.false.16:                                 ; preds = %if.then.14
  %14 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp17 = icmp eq %union.tree_node* %14, %15
  br i1 %cmp17, label %if.then.18, label %if.else.20

if.then.18:                                       ; preds = %lor.lhs.false.16, %if.then.14
  %16 = load %union.tree_node*, %union.tree_node** %id.addr, align 8
  %call19 = call %union.tree_node* @implicitly_declare(%union.tree_node* %16)
  store %union.tree_node* %call19, %union.tree_node** %ref, align 8
  br label %if.end.25

if.else.20:                                       ; preds = %lor.lhs.false.16
  %17 = load %union.tree_node*, %union.tree_node** %id.addr, align 8
  call void @implicit_decl_warning(%union.tree_node* %17)
  %18 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl21 = bitcast %union.tree_node* %18 to %struct.tree_decl*
  %lang_flag_322 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl21, i32 0, i32 5
  %19 = bitcast i48* %lang_flag_322 to i64*
  %bf.load23 = load i64, i64* %19, align 8
  %bf.clear24 = and i64 %bf.load23, -1099511627777
  store i64 %bf.clear24, i64* %19, align 8
  %20 = load %union.tree_node*, %union.tree_node** %decl, align 8
  store %union.tree_node* %20, %union.tree_node** %ref, align 8
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.20, %if.then.18
  br label %if.end.45

if.else.26:                                       ; preds = %if.else
  %21 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %cmp27 = icmp eq %union.tree_node* %21, null
  br i1 %cmp27, label %if.then.28, label %if.else.30

if.then.28:                                       ; preds = %if.else.26
  %22 = load %union.tree_node*, %union.tree_node** %id.addr, align 8
  %identifier = bitcast %union.tree_node* %22 to %struct.tree_identifier*
  %id29 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id29, i32 0, i32 1
  %23 = load i8*, i8** %str, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.30, i32 0, i32 0), i8* %23)
  br label %if.end.44

if.else.30:                                       ; preds = %if.else.26
  %24 = load %union.tree_node*, %union.tree_node** %id.addr, align 8
  %25 = bitcast %union.tree_node* %24 to %struct.lang_identifier*
  %global_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %25, i32 0, i32 1
  %26 = load %union.tree_node*, %union.tree_node** %global_value, align 8
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp31 = icmp ne %union.tree_node* %26, %27
  br i1 %cmp31, label %if.then.34, label %lor.lhs.false.32

lor.lhs.false.32:                                 ; preds = %if.else.30
  %28 = load %union.tree_node*, %union.tree_node** %id.addr, align 8
  %29 = bitcast %union.tree_node* %28 to %struct.lang_identifier*
  %error_locus = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %29, i32 0, i32 5
  %30 = load %union.tree_node*, %union.tree_node** %error_locus, align 8
  %31 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %cmp33 = icmp ne %union.tree_node* %30, %31
  br i1 %cmp33, label %if.then.34, label %if.end.41

if.then.34:                                       ; preds = %lor.lhs.false.32, %if.else.30
  %32 = load %union.tree_node*, %union.tree_node** %id.addr, align 8
  %identifier35 = bitcast %union.tree_node* %32 to %struct.tree_identifier*
  %id36 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier35, i32 0, i32 1
  %str37 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id36, i32 0, i32 1
  %33 = load i8*, i8** %str37, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.31, i32 0, i32 0), i8* %33)
  %34 = load i32, i32* @undeclared_variable_notice, align 4
  %tobool38 = icmp ne i32 %34, 0
  br i1 %tobool38, label %if.end.40, label %if.then.39

if.then.39:                                       ; preds = %if.then.34
  call void (i8*, ...) @error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.32, i32 0, i32 0))
  call void (i8*, ...) @error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.33, i32 0, i32 0))
  store i32 1, i32* @undeclared_variable_notice, align 4
  br label %if.end.40

if.end.40:                                        ; preds = %if.then.39, %if.then.34
  br label %if.end.41

if.end.41:                                        ; preds = %if.end.40, %lor.lhs.false.32
  %35 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %36 = load %union.tree_node*, %union.tree_node** %id.addr, align 8
  %37 = bitcast %union.tree_node* %36 to %struct.lang_identifier*
  %global_value42 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %37, i32 0, i32 1
  store %union.tree_node* %35, %union.tree_node** %global_value42, align 8
  %38 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %39 = load %union.tree_node*, %union.tree_node** %id.addr, align 8
  %40 = bitcast %union.tree_node* %39 to %struct.lang_identifier*
  %error_locus43 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %40, i32 0, i32 5
  store %union.tree_node* %38, %union.tree_node** %error_locus43, align 8
  br label %if.end.44

if.end.44:                                        ; preds = %if.end.41, %if.then.28
  %41 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %41, %union.tree_node** %retval
  br label %return

if.end.45:                                        ; preds = %if.end.25
  br label %if.end.46

if.end.46:                                        ; preds = %if.end.45, %if.then.12
  br label %if.end.61

if.else.47:                                       ; preds = %lor.lhs.false.4
  %42 = load %union.tree_node*, %union.tree_node** %objc_ivar, align 8
  %tobool48 = icmp ne %union.tree_node* %42, null
  br i1 %tobool48, label %if.else.50, label %if.then.49

if.then.49:                                       ; preds = %if.else.47
  %43 = load %union.tree_node*, %union.tree_node** %decl, align 8
  store %union.tree_node* %43, %union.tree_node** %ref, align 8
  br label %if.end.60

if.else.50:                                       ; preds = %if.else.47
  %44 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %45 = load %union.tree_node*, %union.tree_node** %objc_ivar, align 8
  %cmp51 = icmp ne %union.tree_node* %44, %45
  br i1 %cmp51, label %land.lhs.true.52, label %if.else.58

land.lhs.true.52:                                 ; preds = %if.else.50
  %46 = load %union.tree_node*, %union.tree_node** %id.addr, align 8
  %47 = bitcast %union.tree_node* %46 to %struct.lang_identifier*
  %local_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %47, i32 0, i32 2
  %48 = load %union.tree_node*, %union.tree_node** %local_value, align 8
  %tobool53 = icmp ne %union.tree_node* %48, null
  br i1 %tobool53, label %if.then.54, label %if.else.58

if.then.54:                                       ; preds = %land.lhs.true.52
  %49 = load %union.tree_node*, %union.tree_node** %id.addr, align 8
  %identifier55 = bitcast %union.tree_node* %49 to %struct.tree_identifier*
  %id56 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier55, i32 0, i32 1
  %str57 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id56, i32 0, i32 1
  %50 = load i8*, i8** %str57, align 8
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.34, i32 0, i32 0), i8* %50)
  %51 = load %union.tree_node*, %union.tree_node** %decl, align 8
  store %union.tree_node* %51, %union.tree_node** %ref, align 8
  br label %if.end.59

if.else.58:                                       ; preds = %land.lhs.true.52, %if.else.50
  %52 = load %union.tree_node*, %union.tree_node** %objc_ivar, align 8
  store %union.tree_node* %52, %union.tree_node** %ref, align 8
  br label %if.end.59

if.end.59:                                        ; preds = %if.else.58, %if.then.54
  br label %if.end.60

if.end.60:                                        ; preds = %if.end.59, %if.then.49
  br label %if.end.61

if.end.61:                                        ; preds = %if.end.60, %if.end.46
  %53 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %common62 = bitcast %union.tree_node* %53 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common62, i32 0, i32 1
  %54 = load %union.tree_node*, %union.tree_node** %type, align 8
  %55 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp63 = icmp eq %union.tree_node* %54, %55
  br i1 %cmp63, label %if.then.64, label %if.end.65

if.then.64:                                       ; preds = %if.end.61
  %56 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %56, %union.tree_node** %retval
  br label %return

if.end.65:                                        ; preds = %if.end.61
  %57 = load %union.tree_node*, %union.tree_node** %ref, align 8
  call void @assemble_external(%union.tree_node* %57)
  %58 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %common66 = bitcast %union.tree_node* %58 to %struct.tree_common*
  %used_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common66, i32 0, i32 2
  %bf.load67 = load i32, i32* %used_flag, align 8
  %bf.clear68 = and i32 %bf.load67, -65537
  %bf.set = or i32 %bf.clear68, 65536
  store i32 %bf.set, i32* %used_flag, align 8
  %59 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %common69 = bitcast %union.tree_node* %59 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common69, i32 0, i32 2
  %bf.load70 = load i32, i32* %code, align 8
  %bf.clear71 = and i32 %bf.load70, 255
  %cmp72 = icmp eq i32 %bf.clear71, 32
  br i1 %cmp72, label %if.then.73, label %if.end.79

if.then.73:                                       ; preds = %if.end.65
  %60 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %decl74 = bitcast %union.tree_node* %60 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl74, i32 0, i32 12
  %61 = load %union.tree_node*, %union.tree_node** %initial, align 8
  store %union.tree_node* %61, %union.tree_node** %ref, align 8
  %62 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %common75 = bitcast %union.tree_node* %62 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common75, i32 0, i32 2
  %bf.load76 = load i32, i32* %constant_flag, align 8
  %bf.clear77 = and i32 %bf.load76, -513
  %bf.set78 = or i32 %bf.clear77, 512
  store i32 %bf.set78, i32* %constant_flag, align 8
  br label %if.end.79

if.end.79:                                        ; preds = %if.then.73, %if.end.65
  %63 = load %union.tree_node*, %union.tree_node** %ref, align 8
  store %union.tree_node* %63, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.79, %if.then.64, %if.end.44
  %64 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %64
}

declare %union.tree_node* @lookup_name(%union.tree_node*) #1

declare %union.tree_node* @lookup_objc_ivar(%union.tree_node*) #1

declare %union.tree_node* @implicitly_declare(%union.tree_node*) #1

declare void @implicit_decl_warning(%union.tree_node*) #1

declare void @assemble_external(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_function_call(%union.tree_node* %function, %union.tree_node* %params) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %function.addr = alloca %union.tree_node*, align 8
  %params.addr = alloca %union.tree_node*, align 8
  %fntype = alloca %union.tree_node*, align 8
  %fundecl = alloca %union.tree_node*, align 8
  %coerced_params = alloca %union.tree_node*, align 8
  %name = alloca %union.tree_node*, align 8
  %assembler_name = alloca %union.tree_node*, align 8
  %result = alloca %union.tree_node*, align 8
  store %union.tree_node* %function, %union.tree_node** %function.addr, align 8
  store %union.tree_node* %params, %union.tree_node** %params.addr, align 8
  store %union.tree_node* null, %union.tree_node** %fundecl, align 8
  store %union.tree_node* null, %union.tree_node** %name, align 8
  store %union.tree_node* null, %union.tree_node** %assembler_name, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 115
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.cond
  %1 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load3 = load i32, i32* %code2, align 8
  %bf.clear4 = and i32 %bf.load3, 255
  %cmp5 = icmp eq i32 %bf.clear4, 114
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false.6

lor.lhs.false.6:                                  ; preds = %lor.lhs.false
  %2 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %common7 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 2
  %bf.load9 = load i32, i32* %code8, align 8
  %bf.clear10 = and i32 %bf.load9, 255
  %cmp11 = icmp eq i32 %bf.clear10, 116
  br i1 %cmp11, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %lor.lhs.false.6, %lor.lhs.false, %while.cond
  %3 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %exp = bitcast %union.tree_node* %3 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp12 = icmp ne %union.tree_node* %4, %5
  br i1 %cmp12, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %6 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %common13 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common13, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %type, align 8
  %8 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %exp14 = bitcast %union.tree_node* %8 to %struct.tree_exp*
  %operands15 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp14, i32 0, i32 2
  %arrayidx16 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands15, i32 0, i64 0
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx16, align 8
  %common17 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %type18 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common17, i32 0, i32 1
  %10 = load %union.tree_node*, %union.tree_node** %type18, align 8
  %cmp19 = icmp eq %union.tree_node* %7, %10
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %lor.lhs.false.6
  %11 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false.6 ], [ %cmp19, %land.rhs ]
  br i1 %11, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %12 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %exp20 = bitcast %union.tree_node* %12 to %struct.tree_exp*
  %operands21 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp20, i32 0, i32 2
  %arrayidx22 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands21, i32 0, i64 0
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx22, align 8
  store %union.tree_node* %13, %union.tree_node** %function.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %14 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %common23 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %code24 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common23, i32 0, i32 2
  %bf.load25 = load i32, i32* %code24, align 8
  %bf.clear26 = and i32 %bf.load25, 255
  %cmp27 = icmp eq i32 %bf.clear26, 30
  br i1 %cmp27, label %if.then, label %if.else

if.then:                                          ; preds = %while.end
  %15 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %decl = bitcast %union.tree_node* %15 to %struct.tree_decl*
  %name28 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 8
  %16 = load %union.tree_node*, %union.tree_node** %name28, align 8
  store %union.tree_node* %16, %union.tree_node** %name, align 8
  %17 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %decl29 = bitcast %union.tree_node* %17 to %struct.tree_decl*
  %assembler_name30 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl29, i32 0, i32 14
  %18 = load %union.tree_node*, %union.tree_node** %assembler_name30, align 8
  %cmp31 = icmp ne %union.tree_node* %18, null
  br i1 %cmp31, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %19 = load void (%union.tree_node*)*, void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8
  %20 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  call void %19(%union.tree_node* %20)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %21 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %decl32 = bitcast %union.tree_node* %21 to %struct.tree_decl*
  %assembler_name33 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl32, i32 0, i32 14
  %22 = load %union.tree_node*, %union.tree_node** %assembler_name33, align 8
  store %union.tree_node* %22, %union.tree_node** %assembler_name, align 8
  %23 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %common34 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %type35 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common34, i32 0, i32 1
  %24 = load %union.tree_node*, %union.tree_node** %type35, align 8
  %25 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %common36 = bitcast %union.tree_node* %25 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common36, i32 0, i32 2
  %bf.load37 = load i32, i32* %readonly_flag, align 8
  %bf.lshr = lshr i32 %bf.load37, 12
  %bf.clear38 = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear38, 0
  %cond = select i1 %tobool, i32 1, i32 0
  %26 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %common39 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common39, i32 0, i32 2
  %bf.load40 = load i32, i32* %volatile_flag, align 8
  %bf.lshr41 = lshr i32 %bf.load40, 11
  %bf.clear42 = and i32 %bf.lshr41, 1
  %tobool43 = icmp ne i32 %bf.clear42, 0
  %cond44 = select i1 %tobool43, i32 2, i32 0
  %or = or i32 %cond, %cond44
  %call = call %union.tree_node* @build_qualified_type(%union.tree_node* %24, i32 %or)
  store %union.tree_node* %call, %union.tree_node** %fntype, align 8
  %27 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  store %union.tree_node* %27, %union.tree_node** %fundecl, align 8
  %28 = load %union.tree_node*, %union.tree_node** %fntype, align 8
  %call45 = call %union.tree_node* @build_pointer_type(%union.tree_node* %28)
  %29 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %call46 = call %union.tree_node* @build1(i32 121, %union.tree_node* %call45, %union.tree_node* %29)
  store %union.tree_node* %call46, %union.tree_node** %function.addr, align 8
  br label %if.end

if.else:                                          ; preds = %while.end
  %30 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %call47 = call %union.tree_node* @default_conversion(%union.tree_node* %30)
  store %union.tree_node* %call47, %union.tree_node** %function.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  %31 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %common48 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %type49 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common48, i32 0, i32 1
  %32 = load %union.tree_node*, %union.tree_node** %type49, align 8
  store %union.tree_node* %32, %union.tree_node** %fntype, align 8
  %33 = load %union.tree_node*, %union.tree_node** %fntype, align 8
  %common50 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %code51 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common50, i32 0, i32 2
  %bf.load52 = load i32, i32* %code51, align 8
  %bf.clear53 = and i32 %bf.load52, 255
  %cmp54 = icmp eq i32 %bf.clear53, 0
  br i1 %cmp54, label %if.then.55, label %if.end.56

if.then.55:                                       ; preds = %if.end
  %34 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %34, %union.tree_node** %retval
  br label %return

if.end.56:                                        ; preds = %if.end
  %35 = load %union.tree_node*, %union.tree_node** %fntype, align 8
  %common57 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %code58 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common57, i32 0, i32 2
  %bf.load59 = load i32, i32* %code58, align 8
  %bf.clear60 = and i32 %bf.load59, 255
  %cmp61 = icmp eq i32 %bf.clear60, 13
  br i1 %cmp61, label %land.lhs.true.62, label %if.then.70

land.lhs.true.62:                                 ; preds = %if.end.56
  %36 = load %union.tree_node*, %union.tree_node** %fntype, align 8
  %common63 = bitcast %union.tree_node* %36 to %struct.tree_common*
  %type64 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common63, i32 0, i32 1
  %37 = load %union.tree_node*, %union.tree_node** %type64, align 8
  %common65 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %code66 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common65, i32 0, i32 2
  %bf.load67 = load i32, i32* %code66, align 8
  %bf.clear68 = and i32 %bf.load67, 255
  %cmp69 = icmp eq i32 %bf.clear68, 23
  br i1 %cmp69, label %if.end.71, label %if.then.70

if.then.70:                                       ; preds = %land.lhs.true.62, %if.end.56
  call void (i8*, ...) @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.35, i32 0, i32 0))
  %38 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %38, %union.tree_node** %retval
  br label %return

if.end.71:                                        ; preds = %land.lhs.true.62
  %39 = load %union.tree_node*, %union.tree_node** %fundecl, align 8
  %tobool72 = icmp ne %union.tree_node* %39, null
  br i1 %tobool72, label %land.lhs.true.73, label %if.end.81

land.lhs.true.73:                                 ; preds = %if.end.71
  %40 = load %union.tree_node*, %union.tree_node** %fundecl, align 8
  %common74 = bitcast %union.tree_node* %40 to %struct.tree_common*
  %volatile_flag75 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common74, i32 0, i32 2
  %bf.load76 = load i32, i32* %volatile_flag75, align 8
  %bf.lshr77 = lshr i32 %bf.load76, 11
  %bf.clear78 = and i32 %bf.lshr77, 1
  %tobool79 = icmp ne i32 %bf.clear78, 0
  br i1 %tobool79, label %if.then.80, label %if.end.81

if.then.80:                                       ; preds = %land.lhs.true.73
  store i32 1, i32* @current_function_returns_abnormally, align 4
  br label %if.end.81

if.end.81:                                        ; preds = %if.then.80, %land.lhs.true.73, %if.end.71
  %41 = load %union.tree_node*, %union.tree_node** %fntype, align 8
  %common82 = bitcast %union.tree_node* %41 to %struct.tree_common*
  %type83 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common82, i32 0, i32 1
  %42 = load %union.tree_node*, %union.tree_node** %type83, align 8
  store %union.tree_node* %42, %union.tree_node** %fntype, align 8
  %43 = load %union.tree_node*, %union.tree_node** %fntype, align 8
  %type84 = bitcast %union.tree_node* %43 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type84, i32 0, i32 1
  %44 = load %union.tree_node*, %union.tree_node** %values, align 8
  %45 = load %union.tree_node*, %union.tree_node** %params.addr, align 8
  %46 = load %union.tree_node*, %union.tree_node** %name, align 8
  %47 = load %union.tree_node*, %union.tree_node** %fundecl, align 8
  %call85 = call %union.tree_node* @convert_arguments(%union.tree_node* %44, %union.tree_node* %45, %union.tree_node* %46, %union.tree_node* %47)
  store %union.tree_node* %call85, %union.tree_node** %coerced_params, align 8
  %48 = load i32, i32* @warn_format, align 4
  %tobool86 = icmp ne i32 %48, 0
  br i1 %tobool86, label %if.then.87, label %if.end.89

if.then.87:                                       ; preds = %if.end.81
  %49 = load %union.tree_node*, %union.tree_node** %fntype, align 8
  %type88 = bitcast %union.tree_node* %49 to %struct.tree_type*
  %attributes = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type88, i32 0, i32 4
  %50 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %51 = load %union.tree_node*, %union.tree_node** %coerced_params, align 8
  call void @check_function_format(i32* null, %union.tree_node* %50, %union.tree_node* %51)
  br label %if.end.89

if.end.89:                                        ; preds = %if.then.87, %if.end.81
  %52 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %common90 = bitcast %union.tree_node* %52 to %struct.tree_common*
  %code91 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common90, i32 0, i32 2
  %bf.load92 = load i32, i32* %code91, align 8
  %bf.clear93 = and i32 %bf.load92, 255
  %cmp94 = icmp eq i32 %bf.clear93, 121
  br i1 %cmp94, label %land.lhs.true.95, label %if.end.121

land.lhs.true.95:                                 ; preds = %if.end.89
  %53 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %exp96 = bitcast %union.tree_node* %53 to %struct.tree_exp*
  %operands97 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp96, i32 0, i32 2
  %arrayidx98 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands97, i32 0, i64 0
  %54 = load %union.tree_node*, %union.tree_node** %arrayidx98, align 8
  %common99 = bitcast %union.tree_node* %54 to %struct.tree_common*
  %code100 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common99, i32 0, i32 2
  %bf.load101 = load i32, i32* %code100, align 8
  %bf.clear102 = and i32 %bf.load101, 255
  %cmp103 = icmp eq i32 %bf.clear102, 30
  br i1 %cmp103, label %land.lhs.true.104, label %if.end.121

land.lhs.true.104:                                ; preds = %land.lhs.true.95
  %55 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %exp105 = bitcast %union.tree_node* %55 to %struct.tree_exp*
  %operands106 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp105, i32 0, i32 2
  %arrayidx107 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands106, i32 0, i64 0
  %56 = load %union.tree_node*, %union.tree_node** %arrayidx107, align 8
  %decl108 = bitcast %union.tree_node* %56 to %struct.tree_decl*
  %built_in_class = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl108, i32 0, i32 5
  %57 = bitcast i48* %built_in_class to i64*
  %bf.load109 = load i64, i64* %57, align 8
  %bf.lshr110 = lshr i64 %bf.load109, 29
  %bf.clear111 = and i64 %bf.lshr110, 3
  %bf.cast = trunc i64 %bf.clear111 to i32
  %cmp112 = icmp ne i32 %bf.cast, 0
  br i1 %cmp112, label %if.then.113, label %if.end.121

if.then.113:                                      ; preds = %land.lhs.true.104
  %58 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %exp114 = bitcast %union.tree_node* %58 to %struct.tree_exp*
  %operands115 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp114, i32 0, i32 2
  %arrayidx116 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands115, i32 0, i64 0
  %59 = load %union.tree_node*, %union.tree_node** %arrayidx116, align 8
  %60 = load %union.tree_node*, %union.tree_node** %params.addr, align 8
  %61 = load %union.tree_node*, %union.tree_node** %coerced_params, align 8
  %call117 = call %union.tree_node* @expand_tree_builtin(%union.tree_node* %59, %union.tree_node* %60, %union.tree_node* %61)
  store %union.tree_node* %call117, %union.tree_node** %result, align 8
  %62 = load %union.tree_node*, %union.tree_node** %result, align 8
  %tobool118 = icmp ne %union.tree_node* %62, null
  br i1 %tobool118, label %if.then.119, label %if.end.120

if.then.119:                                      ; preds = %if.then.113
  %63 = load %union.tree_node*, %union.tree_node** %result, align 8
  store %union.tree_node* %63, %union.tree_node** %retval
  br label %return

if.end.120:                                       ; preds = %if.then.113
  br label %if.end.121

if.end.121:                                       ; preds = %if.end.120, %land.lhs.true.104, %land.lhs.true.95, %if.end.89
  %64 = load %union.tree_node*, %union.tree_node** %fntype, align 8
  %common122 = bitcast %union.tree_node* %64 to %struct.tree_common*
  %type123 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common122, i32 0, i32 1
  %65 = load %union.tree_node*, %union.tree_node** %type123, align 8
  %66 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %67 = load %union.tree_node*, %union.tree_node** %coerced_params, align 8
  %call124 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 53, %union.tree_node* %65, %union.tree_node* %66, %union.tree_node* %67, %union.tree_node* null)
  store %union.tree_node* %call124, %union.tree_node** %result, align 8
  %68 = load %union.tree_node*, %union.tree_node** %result, align 8
  %common125 = bitcast %union.tree_node* %68 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common125, i32 0, i32 2
  %bf.load126 = load i32, i32* %side_effects_flag, align 8
  %bf.clear127 = and i32 %bf.load126, -257
  %bf.set = or i32 %bf.clear127, 256
  store i32 %bf.set, i32* %side_effects_flag, align 8
  %69 = load %union.tree_node*, %union.tree_node** %result, align 8
  %call128 = call %union.tree_node* @fold(%union.tree_node* %69)
  store %union.tree_node* %call128, %union.tree_node** %result, align 8
  %70 = load %union.tree_node*, %union.tree_node** %result, align 8
  %common129 = bitcast %union.tree_node* %70 to %struct.tree_common*
  %type130 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common129, i32 0, i32 1
  %71 = load %union.tree_node*, %union.tree_node** %type130, align 8
  %common131 = bitcast %union.tree_node* %71 to %struct.tree_common*
  %code132 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common131, i32 0, i32 2
  %bf.load133 = load i32, i32* %code132, align 8
  %bf.clear134 = and i32 %bf.load133, 255
  %cmp135 = icmp eq i32 %bf.clear134, 5
  br i1 %cmp135, label %if.then.136, label %if.end.137

if.then.136:                                      ; preds = %if.end.121
  %72 = load %union.tree_node*, %union.tree_node** %result, align 8
  store %union.tree_node* %72, %union.tree_node** %retval
  br label %return

if.end.137:                                       ; preds = %if.end.121
  %73 = load %union.tree_node*, %union.tree_node** %result, align 8
  %call138 = call %union.tree_node* @require_complete_type(%union.tree_node* %73)
  store %union.tree_node* %call138, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.137, %if.then.136, %if.then.119, %if.then.70, %if.then.55
  %74 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %74
}

declare %union.tree_node* @build_qualified_type(%union.tree_node*, i32) #1

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @convert_arguments(%union.tree_node* %typelist, %union.tree_node* %values, %union.tree_node* %name, %union.tree_node* %fundecl) #0 {
entry:
  %typelist.addr = alloca %union.tree_node*, align 8
  %values.addr = alloca %union.tree_node*, align 8
  %name.addr = alloca %union.tree_node*, align 8
  %fundecl.addr = alloca %union.tree_node*, align 8
  %typetail = alloca %union.tree_node*, align 8
  %valtail = alloca %union.tree_node*, align 8
  %result = alloca %union.tree_node*, align 8
  %parmnum = alloca i32, align 4
  %type = alloca %union.tree_node*, align 8
  %val = alloca %union.tree_node*, align 8
  %parmval = alloca %union.tree_node*, align 8
  %formal_prec = alloca i32, align 4
  %would_have_been = alloca %union.tree_node*, align 8
  %type1 = alloca %union.tree_node*, align 8
  store %union.tree_node* %typelist, %union.tree_node** %typelist.addr, align 8
  store %union.tree_node* %values, %union.tree_node** %values.addr, align 8
  store %union.tree_node* %name, %union.tree_node** %name.addr, align 8
  store %union.tree_node* %fundecl, %union.tree_node** %fundecl.addr, align 8
  store %union.tree_node* null, %union.tree_node** %result, align 8
  %0 = load %union.tree_node*, %union.tree_node** %values.addr, align 8
  store %union.tree_node* %0, %union.tree_node** %valtail, align 8
  %1 = load %union.tree_node*, %union.tree_node** %typelist.addr, align 8
  store %union.tree_node* %1, %union.tree_node** %typetail, align 8
  store i32 0, i32* %parmnum, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %union.tree_node*, %union.tree_node** %valtail, align 8
  %tobool = icmp ne %union.tree_node* %2, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %union.tree_node*, %union.tree_node** %typetail, align 8
  %tobool1 = icmp ne %union.tree_node* %3, null
  br i1 %tobool1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %4 = load %union.tree_node*, %union.tree_node** %typetail, align 8
  %list = bitcast %union.tree_node* %4 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %5 = load %union.tree_node*, %union.tree_node** %value, align 8
  br label %cond.end

cond.false:                                       ; preds = %for.body
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %5, %cond.true ], [ null, %cond.false ]
  store %union.tree_node* %cond, %union.tree_node** %type, align 8
  %6 = load %union.tree_node*, %union.tree_node** %valtail, align 8
  %list2 = bitcast %union.tree_node* %6 to %struct.tree_list*
  %value3 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list2, i32 0, i32 2
  %7 = load %union.tree_node*, %union.tree_node** %value3, align 8
  store %union.tree_node* %7, %union.tree_node** %val, align 8
  %8 = load %union.tree_node*, %union.tree_node** %type, align 8
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %cmp = icmp eq %union.tree_node* %8, %9
  br i1 %cmp, label %if.then, label %if.end.6

if.then:                                          ; preds = %cond.end
  %10 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %tobool4 = icmp ne %union.tree_node* %10, null
  br i1 %tobool4, label %if.then.5, label %if.else

if.then.5:                                        ; preds = %if.then
  %11 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %identifier = bitcast %union.tree_node* %11 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %12 = load i8*, i8** %str, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.150, i32 0, i32 0), i8* %12)
  br label %if.end

if.else:                                          ; preds = %if.then
  call void (i8*, ...) @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.151, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.5
  br label %for.end

if.end.6:                                         ; preds = %cond.end
  %13 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common = bitcast %union.tree_node* %13 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp7 = icmp eq i32 %bf.clear, 116
  br i1 %cmp7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end.6
  %14 = load %union.tree_node*, %union.tree_node** %val, align 8
  %exp = bitcast %union.tree_node* %14 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  store %union.tree_node* %15, %union.tree_node** %val, align 8
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.8, %if.end.6
  %16 = load %union.tree_node*, %union.tree_node** %val, align 8
  %call = call %union.tree_node* @default_function_array_conversion(%union.tree_node* %16)
  store %union.tree_node* %call, %union.tree_node** %val, align 8
  %17 = load %union.tree_node*, %union.tree_node** %val, align 8
  %call10 = call %union.tree_node* @require_complete_type(%union.tree_node* %17)
  store %union.tree_node* %call10, %union.tree_node** %val, align 8
  %18 = load %union.tree_node*, %union.tree_node** %type, align 8
  %cmp11 = icmp ne %union.tree_node* %18, null
  br i1 %cmp11, label %if.then.12, label %if.else.448

if.then.12:                                       ; preds = %if.end.9
  %19 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type13 = bitcast %union.tree_node* %19 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type13, i32 0, i32 2
  %20 = load %union.tree_node*, %union.tree_node** %size, align 8
  %cmp14 = icmp ne %union.tree_node* %20, null
  br i1 %cmp14, label %if.else.16, label %if.then.15

if.then.15:                                       ; preds = %if.then.12
  %21 = load i32, i32* %parmnum, align 4
  %add = add nsw i32 %21, 1
  call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.152, i32 0, i32 0), i32 %add)
  %22 = load %union.tree_node*, %union.tree_node** %val, align 8
  store %union.tree_node* %22, %union.tree_node** %parmval, align 8
  br label %if.end.446

if.else.16:                                       ; preds = %if.then.12
  %23 = load i32, i32* @warn_conversion, align 4
  %tobool17 = icmp ne i32 %23, 0
  br i1 %tobool17, label %if.then.19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else.16
  %24 = load i32, i32* @warn_traditional, align 4
  %tobool18 = icmp ne i32 %24, 0
  br i1 %tobool18, label %if.then.19, label %if.end.405

if.then.19:                                       ; preds = %lor.lhs.false, %if.else.16
  %25 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type20 = bitcast %union.tree_node* %25 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type20, i32 0, i32 6
  %bf.load21 = load i32, i32* %precision, align 4
  %bf.clear22 = and i32 %bf.load21, 511
  store i32 %bf.clear22, i32* %formal_prec, align 4
  %26 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common23 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %code24 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common23, i32 0, i32 2
  %bf.load25 = load i32, i32* %code24, align 8
  %bf.clear26 = and i32 %bf.load25, 255
  %cmp27 = icmp eq i32 %bf.clear26, 6
  br i1 %cmp27, label %land.lhs.true, label %lor.lhs.false.28

lor.lhs.false.28:                                 ; preds = %if.then.19
  %27 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common29 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %code30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common29, i32 0, i32 2
  %bf.load31 = load i32, i32* %code30, align 8
  %bf.clear32 = and i32 %bf.load31, 255
  %cmp33 = icmp eq i32 %bf.clear32, 10
  br i1 %cmp33, label %land.lhs.true, label %lor.lhs.false.34

lor.lhs.false.34:                                 ; preds = %lor.lhs.false.28
  %28 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common35 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %code36 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common35, i32 0, i32 2
  %bf.load37 = load i32, i32* %code36, align 8
  %bf.clear38 = and i32 %bf.load37, 255
  %cmp39 = icmp eq i32 %bf.clear38, 11
  br i1 %cmp39, label %land.lhs.true, label %lor.lhs.false.40

lor.lhs.false.40:                                 ; preds = %lor.lhs.false.34
  %29 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common41 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %code42 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common41, i32 0, i32 2
  %bf.load43 = load i32, i32* %code42, align 8
  %bf.clear44 = and i32 %bf.load43, 255
  %cmp45 = icmp eq i32 %bf.clear44, 12
  br i1 %cmp45, label %land.lhs.true, label %if.end.55

land.lhs.true:                                    ; preds = %lor.lhs.false.40, %lor.lhs.false.34, %lor.lhs.false.28, %if.then.19
  %30 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common46 = bitcast %union.tree_node* %30 to %struct.tree_common*
  %type47 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common46, i32 0, i32 1
  %31 = load %union.tree_node*, %union.tree_node** %type47, align 8
  %common48 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %code49 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common48, i32 0, i32 2
  %bf.load50 = load i32, i32* %code49, align 8
  %bf.clear51 = and i32 %bf.load50, 255
  %cmp52 = icmp eq i32 %bf.clear51, 7
  br i1 %cmp52, label %if.then.53, label %if.end.55

if.then.53:                                       ; preds = %land.lhs.true
  %32 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %33 = load i32, i32* %parmnum, align 4
  %add54 = add nsw i32 %33, 1
  call void @warn_for_assignment(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.153, i32 0, i32 0), i8* null, %union.tree_node* %32, i32 %add54)
  br label %if.end.55

if.end.55:                                        ; preds = %if.then.53, %land.lhs.true, %lor.lhs.false.40
  %34 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common56 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %code57 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common56, i32 0, i32 2
  %bf.load58 = load i32, i32* %code57, align 8
  %bf.clear59 = and i32 %bf.load58, 255
  %cmp60 = icmp eq i32 %bf.clear59, 6
  br i1 %cmp60, label %land.lhs.true.79, label %lor.lhs.false.61

lor.lhs.false.61:                                 ; preds = %if.end.55
  %35 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common62 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %code63 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common62, i32 0, i32 2
  %bf.load64 = load i32, i32* %code63, align 8
  %bf.clear65 = and i32 %bf.load64, 255
  %cmp66 = icmp eq i32 %bf.clear65, 10
  br i1 %cmp66, label %land.lhs.true.79, label %lor.lhs.false.67

lor.lhs.false.67:                                 ; preds = %lor.lhs.false.61
  %36 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common68 = bitcast %union.tree_node* %36 to %struct.tree_common*
  %code69 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common68, i32 0, i32 2
  %bf.load70 = load i32, i32* %code69, align 8
  %bf.clear71 = and i32 %bf.load70, 255
  %cmp72 = icmp eq i32 %bf.clear71, 11
  br i1 %cmp72, label %land.lhs.true.79, label %lor.lhs.false.73

lor.lhs.false.73:                                 ; preds = %lor.lhs.false.67
  %37 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common74 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %code75 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common74, i32 0, i32 2
  %bf.load76 = load i32, i32* %code75, align 8
  %bf.clear77 = and i32 %bf.load76, 255
  %cmp78 = icmp eq i32 %bf.clear77, 12
  br i1 %cmp78, label %land.lhs.true.79, label %if.else.89

land.lhs.true.79:                                 ; preds = %lor.lhs.false.73, %lor.lhs.false.67, %lor.lhs.false.61, %if.end.55
  %38 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common80 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %type81 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common80, i32 0, i32 1
  %39 = load %union.tree_node*, %union.tree_node** %type81, align 8
  %common82 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %code83 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common82, i32 0, i32 2
  %bf.load84 = load i32, i32* %code83, align 8
  %bf.clear85 = and i32 %bf.load84, 255
  %cmp86 = icmp eq i32 %bf.clear85, 8
  br i1 %cmp86, label %if.then.87, label %if.else.89

if.then.87:                                       ; preds = %land.lhs.true.79
  %40 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %41 = load i32, i32* %parmnum, align 4
  %add88 = add nsw i32 %41, 1
  call void @warn_for_assignment(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.154, i32 0, i32 0), i8* null, %union.tree_node* %40, i32 %add88)
  br label %if.end.404

if.else.89:                                       ; preds = %land.lhs.true.79, %lor.lhs.false.73
  %42 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common90 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %code91 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common90, i32 0, i32 2
  %bf.load92 = load i32, i32* %code91, align 8
  %bf.clear93 = and i32 %bf.load92, 255
  %cmp94 = icmp eq i32 %bf.clear93, 8
  br i1 %cmp94, label %land.lhs.true.95, label %if.else.105

land.lhs.true.95:                                 ; preds = %if.else.89
  %43 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common96 = bitcast %union.tree_node* %43 to %struct.tree_common*
  %type97 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common96, i32 0, i32 1
  %44 = load %union.tree_node*, %union.tree_node** %type97, align 8
  %common98 = bitcast %union.tree_node* %44 to %struct.tree_common*
  %code99 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common98, i32 0, i32 2
  %bf.load100 = load i32, i32* %code99, align 8
  %bf.clear101 = and i32 %bf.load100, 255
  %cmp102 = icmp eq i32 %bf.clear101, 7
  br i1 %cmp102, label %if.then.103, label %if.else.105

if.then.103:                                      ; preds = %land.lhs.true.95
  %45 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %46 = load i32, i32* %parmnum, align 4
  %add104 = add nsw i32 %46, 1
  call void @warn_for_assignment(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.155, i32 0, i32 0), i8* null, %union.tree_node* %45, i32 %add104)
  br label %if.end.403

if.else.105:                                      ; preds = %land.lhs.true.95, %if.else.89
  %47 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common106 = bitcast %union.tree_node* %47 to %struct.tree_common*
  %code107 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common106, i32 0, i32 2
  %bf.load108 = load i32, i32* %code107, align 8
  %bf.clear109 = and i32 %bf.load108, 255
  %cmp110 = icmp eq i32 %bf.clear109, 7
  br i1 %cmp110, label %land.lhs.true.111, label %if.else.145

land.lhs.true.111:                                ; preds = %if.else.105
  %48 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common112 = bitcast %union.tree_node* %48 to %struct.tree_common*
  %type113 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common112, i32 0, i32 1
  %49 = load %union.tree_node*, %union.tree_node** %type113, align 8
  %common114 = bitcast %union.tree_node* %49 to %struct.tree_common*
  %code115 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common114, i32 0, i32 2
  %bf.load116 = load i32, i32* %code115, align 8
  %bf.clear117 = and i32 %bf.load116, 255
  %cmp118 = icmp eq i32 %bf.clear117, 6
  br i1 %cmp118, label %if.then.143, label %lor.lhs.false.119

lor.lhs.false.119:                                ; preds = %land.lhs.true.111
  %50 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common120 = bitcast %union.tree_node* %50 to %struct.tree_common*
  %type121 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common120, i32 0, i32 1
  %51 = load %union.tree_node*, %union.tree_node** %type121, align 8
  %common122 = bitcast %union.tree_node* %51 to %struct.tree_common*
  %code123 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common122, i32 0, i32 2
  %bf.load124 = load i32, i32* %code123, align 8
  %bf.clear125 = and i32 %bf.load124, 255
  %cmp126 = icmp eq i32 %bf.clear125, 10
  br i1 %cmp126, label %if.then.143, label %lor.lhs.false.127

lor.lhs.false.127:                                ; preds = %lor.lhs.false.119
  %52 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common128 = bitcast %union.tree_node* %52 to %struct.tree_common*
  %type129 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common128, i32 0, i32 1
  %53 = load %union.tree_node*, %union.tree_node** %type129, align 8
  %common130 = bitcast %union.tree_node* %53 to %struct.tree_common*
  %code131 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common130, i32 0, i32 2
  %bf.load132 = load i32, i32* %code131, align 8
  %bf.clear133 = and i32 %bf.load132, 255
  %cmp134 = icmp eq i32 %bf.clear133, 11
  br i1 %cmp134, label %if.then.143, label %lor.lhs.false.135

lor.lhs.false.135:                                ; preds = %lor.lhs.false.127
  %54 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common136 = bitcast %union.tree_node* %54 to %struct.tree_common*
  %type137 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common136, i32 0, i32 1
  %55 = load %union.tree_node*, %union.tree_node** %type137, align 8
  %common138 = bitcast %union.tree_node* %55 to %struct.tree_common*
  %code139 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common138, i32 0, i32 2
  %bf.load140 = load i32, i32* %code139, align 8
  %bf.clear141 = and i32 %bf.load140, 255
  %cmp142 = icmp eq i32 %bf.clear141, 12
  br i1 %cmp142, label %if.then.143, label %if.else.145

if.then.143:                                      ; preds = %lor.lhs.false.135, %lor.lhs.false.127, %lor.lhs.false.119, %land.lhs.true.111
  %56 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %57 = load i32, i32* %parmnum, align 4
  %add144 = add nsw i32 %57, 1
  call void @warn_for_assignment(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.156, i32 0, i32 0), i8* null, %union.tree_node* %56, i32 %add144)
  br label %if.end.402

if.else.145:                                      ; preds = %lor.lhs.false.135, %if.else.105
  %58 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common146 = bitcast %union.tree_node* %58 to %struct.tree_common*
  %code147 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common146, i32 0, i32 2
  %bf.load148 = load i32, i32* %code147, align 8
  %bf.clear149 = and i32 %bf.load148, 255
  %cmp150 = icmp eq i32 %bf.clear149, 8
  br i1 %cmp150, label %land.lhs.true.151, label %if.else.185

land.lhs.true.151:                                ; preds = %if.else.145
  %59 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common152 = bitcast %union.tree_node* %59 to %struct.tree_common*
  %type153 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common152, i32 0, i32 1
  %60 = load %union.tree_node*, %union.tree_node** %type153, align 8
  %common154 = bitcast %union.tree_node* %60 to %struct.tree_common*
  %code155 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common154, i32 0, i32 2
  %bf.load156 = load i32, i32* %code155, align 8
  %bf.clear157 = and i32 %bf.load156, 255
  %cmp158 = icmp eq i32 %bf.clear157, 6
  br i1 %cmp158, label %if.then.183, label %lor.lhs.false.159

lor.lhs.false.159:                                ; preds = %land.lhs.true.151
  %61 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common160 = bitcast %union.tree_node* %61 to %struct.tree_common*
  %type161 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common160, i32 0, i32 1
  %62 = load %union.tree_node*, %union.tree_node** %type161, align 8
  %common162 = bitcast %union.tree_node* %62 to %struct.tree_common*
  %code163 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common162, i32 0, i32 2
  %bf.load164 = load i32, i32* %code163, align 8
  %bf.clear165 = and i32 %bf.load164, 255
  %cmp166 = icmp eq i32 %bf.clear165, 10
  br i1 %cmp166, label %if.then.183, label %lor.lhs.false.167

lor.lhs.false.167:                                ; preds = %lor.lhs.false.159
  %63 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common168 = bitcast %union.tree_node* %63 to %struct.tree_common*
  %type169 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common168, i32 0, i32 1
  %64 = load %union.tree_node*, %union.tree_node** %type169, align 8
  %common170 = bitcast %union.tree_node* %64 to %struct.tree_common*
  %code171 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common170, i32 0, i32 2
  %bf.load172 = load i32, i32* %code171, align 8
  %bf.clear173 = and i32 %bf.load172, 255
  %cmp174 = icmp eq i32 %bf.clear173, 11
  br i1 %cmp174, label %if.then.183, label %lor.lhs.false.175

lor.lhs.false.175:                                ; preds = %lor.lhs.false.167
  %65 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common176 = bitcast %union.tree_node* %65 to %struct.tree_common*
  %type177 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common176, i32 0, i32 1
  %66 = load %union.tree_node*, %union.tree_node** %type177, align 8
  %common178 = bitcast %union.tree_node* %66 to %struct.tree_common*
  %code179 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common178, i32 0, i32 2
  %bf.load180 = load i32, i32* %code179, align 8
  %bf.clear181 = and i32 %bf.load180, 255
  %cmp182 = icmp eq i32 %bf.clear181, 12
  br i1 %cmp182, label %if.then.183, label %if.else.185

if.then.183:                                      ; preds = %lor.lhs.false.175, %lor.lhs.false.167, %lor.lhs.false.159, %land.lhs.true.151
  %67 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %68 = load i32, i32* %parmnum, align 4
  %add184 = add nsw i32 %68, 1
  call void @warn_for_assignment(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.157, i32 0, i32 0), i8* null, %union.tree_node* %67, i32 %add184)
  br label %if.end.401

if.else.185:                                      ; preds = %lor.lhs.false.175, %if.else.145
  %69 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common186 = bitcast %union.tree_node* %69 to %struct.tree_common*
  %code187 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common186, i32 0, i32 2
  %bf.load188 = load i32, i32* %code187, align 8
  %bf.clear189 = and i32 %bf.load188, 255
  %cmp190 = icmp eq i32 %bf.clear189, 7
  br i1 %cmp190, label %land.lhs.true.191, label %if.else.201

land.lhs.true.191:                                ; preds = %if.else.185
  %70 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common192 = bitcast %union.tree_node* %70 to %struct.tree_common*
  %type193 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common192, i32 0, i32 1
  %71 = load %union.tree_node*, %union.tree_node** %type193, align 8
  %common194 = bitcast %union.tree_node* %71 to %struct.tree_common*
  %code195 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common194, i32 0, i32 2
  %bf.load196 = load i32, i32* %code195, align 8
  %bf.clear197 = and i32 %bf.load196, 255
  %cmp198 = icmp eq i32 %bf.clear197, 8
  br i1 %cmp198, label %if.then.199, label %if.else.201

if.then.199:                                      ; preds = %land.lhs.true.191
  %72 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %73 = load i32, i32* %parmnum, align 4
  %add200 = add nsw i32 %73, 1
  call void @warn_for_assignment(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.158, i32 0, i32 0), i8* null, %union.tree_node* %72, i32 %add200)
  br label %if.end.400

if.else.201:                                      ; preds = %land.lhs.true.191, %if.else.185
  %74 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common202 = bitcast %union.tree_node* %74 to %struct.tree_common*
  %code203 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common202, i32 0, i32 2
  %bf.load204 = load i32, i32* %code203, align 8
  %bf.clear205 = and i32 %bf.load204, 255
  %cmp206 = icmp eq i32 %bf.clear205, 7
  br i1 %cmp206, label %land.lhs.true.207, label %if.else.224

land.lhs.true.207:                                ; preds = %if.else.201
  %75 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common208 = bitcast %union.tree_node* %75 to %struct.tree_common*
  %type209 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common208, i32 0, i32 1
  %76 = load %union.tree_node*, %union.tree_node** %type209, align 8
  %common210 = bitcast %union.tree_node* %76 to %struct.tree_common*
  %code211 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common210, i32 0, i32 2
  %bf.load212 = load i32, i32* %code211, align 8
  %bf.clear213 = and i32 %bf.load212, 255
  %cmp214 = icmp eq i32 %bf.clear213, 7
  br i1 %cmp214, label %if.then.215, label %if.else.224

if.then.215:                                      ; preds = %land.lhs.true.207
  %77 = load i32, i32* %formal_prec, align 4
  %78 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 24), align 8
  %type216 = bitcast %union.tree_node* %78 to %struct.tree_type*
  %precision217 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type216, i32 0, i32 6
  %bf.load218 = load i32, i32* %precision217, align 4
  %bf.clear219 = and i32 %bf.load218, 511
  %cmp220 = icmp eq i32 %77, %bf.clear219
  br i1 %cmp220, label %if.then.221, label %if.end.223

if.then.221:                                      ; preds = %if.then.215
  %79 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %80 = load i32, i32* %parmnum, align 4
  %add222 = add nsw i32 %80, 1
  call void @warn_for_assignment(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.159, i32 0, i32 0), i8* null, %union.tree_node* %79, i32 %add222)
  br label %if.end.223

if.end.223:                                       ; preds = %if.then.221, %if.then.215
  br label %if.end.399

if.else.224:                                      ; preds = %land.lhs.true.207, %if.else.201
  %81 = load i32, i32* @warn_conversion, align 4
  %tobool225 = icmp ne i32 %81, 0
  br i1 %tobool225, label %land.lhs.true.226, label %if.end.398

land.lhs.true.226:                                ; preds = %if.else.224
  %82 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common227 = bitcast %union.tree_node* %82 to %struct.tree_common*
  %code228 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common227, i32 0, i32 2
  %bf.load229 = load i32, i32* %code228, align 8
  %bf.clear230 = and i32 %bf.load229, 255
  %cmp231 = icmp eq i32 %bf.clear230, 6
  br i1 %cmp231, label %land.lhs.true.250, label %lor.lhs.false.232

lor.lhs.false.232:                                ; preds = %land.lhs.true.226
  %83 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common233 = bitcast %union.tree_node* %83 to %struct.tree_common*
  %code234 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common233, i32 0, i32 2
  %bf.load235 = load i32, i32* %code234, align 8
  %bf.clear236 = and i32 %bf.load235, 255
  %cmp237 = icmp eq i32 %bf.clear236, 10
  br i1 %cmp237, label %land.lhs.true.250, label %lor.lhs.false.238

lor.lhs.false.238:                                ; preds = %lor.lhs.false.232
  %84 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common239 = bitcast %union.tree_node* %84 to %struct.tree_common*
  %code240 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common239, i32 0, i32 2
  %bf.load241 = load i32, i32* %code240, align 8
  %bf.clear242 = and i32 %bf.load241, 255
  %cmp243 = icmp eq i32 %bf.clear242, 11
  br i1 %cmp243, label %land.lhs.true.250, label %lor.lhs.false.244

lor.lhs.false.244:                                ; preds = %lor.lhs.false.238
  %85 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common245 = bitcast %union.tree_node* %85 to %struct.tree_common*
  %code246 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common245, i32 0, i32 2
  %bf.load247 = load i32, i32* %code246, align 8
  %bf.clear248 = and i32 %bf.load247, 255
  %cmp249 = icmp eq i32 %bf.clear248, 12
  br i1 %cmp249, label %land.lhs.true.250, label %if.end.398

land.lhs.true.250:                                ; preds = %lor.lhs.false.244, %lor.lhs.false.238, %lor.lhs.false.232, %land.lhs.true.226
  %86 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common251 = bitcast %union.tree_node* %86 to %struct.tree_common*
  %type252 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common251, i32 0, i32 1
  %87 = load %union.tree_node*, %union.tree_node** %type252, align 8
  %common253 = bitcast %union.tree_node* %87 to %struct.tree_common*
  %code254 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common253, i32 0, i32 2
  %bf.load255 = load i32, i32* %code254, align 8
  %bf.clear256 = and i32 %bf.load255, 255
  %cmp257 = icmp eq i32 %bf.clear256, 6
  br i1 %cmp257, label %if.then.282, label %lor.lhs.false.258

lor.lhs.false.258:                                ; preds = %land.lhs.true.250
  %88 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common259 = bitcast %union.tree_node* %88 to %struct.tree_common*
  %type260 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common259, i32 0, i32 1
  %89 = load %union.tree_node*, %union.tree_node** %type260, align 8
  %common261 = bitcast %union.tree_node* %89 to %struct.tree_common*
  %code262 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common261, i32 0, i32 2
  %bf.load263 = load i32, i32* %code262, align 8
  %bf.clear264 = and i32 %bf.load263, 255
  %cmp265 = icmp eq i32 %bf.clear264, 10
  br i1 %cmp265, label %if.then.282, label %lor.lhs.false.266

lor.lhs.false.266:                                ; preds = %lor.lhs.false.258
  %90 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common267 = bitcast %union.tree_node* %90 to %struct.tree_common*
  %type268 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common267, i32 0, i32 1
  %91 = load %union.tree_node*, %union.tree_node** %type268, align 8
  %common269 = bitcast %union.tree_node* %91 to %struct.tree_common*
  %code270 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common269, i32 0, i32 2
  %bf.load271 = load i32, i32* %code270, align 8
  %bf.clear272 = and i32 %bf.load271, 255
  %cmp273 = icmp eq i32 %bf.clear272, 11
  br i1 %cmp273, label %if.then.282, label %lor.lhs.false.274

lor.lhs.false.274:                                ; preds = %lor.lhs.false.266
  %92 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common275 = bitcast %union.tree_node* %92 to %struct.tree_common*
  %type276 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common275, i32 0, i32 1
  %93 = load %union.tree_node*, %union.tree_node** %type276, align 8
  %common277 = bitcast %union.tree_node* %93 to %struct.tree_common*
  %code278 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common277, i32 0, i32 2
  %bf.load279 = load i32, i32* %code278, align 8
  %bf.clear280 = and i32 %bf.load279, 255
  %cmp281 = icmp eq i32 %bf.clear280, 12
  br i1 %cmp281, label %if.then.282, label %if.end.398

if.then.282:                                      ; preds = %lor.lhs.false.274, %lor.lhs.false.266, %lor.lhs.false.258, %land.lhs.true.250
  %94 = load %union.tree_node*, %union.tree_node** %val, align 8
  %call283 = call %union.tree_node* @default_conversion(%union.tree_node* %94)
  store %union.tree_node* %call283, %union.tree_node** %would_have_been, align 8
  %95 = load %union.tree_node*, %union.tree_node** %would_have_been, align 8
  %common284 = bitcast %union.tree_node* %95 to %struct.tree_common*
  %type285 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common284, i32 0, i32 1
  %96 = load %union.tree_node*, %union.tree_node** %type285, align 8
  store %union.tree_node* %96, %union.tree_node** %type1, align 8
  %97 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common286 = bitcast %union.tree_node* %97 to %struct.tree_common*
  %code287 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common286, i32 0, i32 2
  %bf.load288 = load i32, i32* %code287, align 8
  %bf.clear289 = and i32 %bf.load288, 255
  %cmp290 = icmp eq i32 %bf.clear289, 10
  br i1 %cmp290, label %land.lhs.true.291, label %if.else.299

land.lhs.true.291:                                ; preds = %if.then.282
  %98 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type292 = bitcast %union.tree_node* %98 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type292, i32 0, i32 15
  %99 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %100 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common293 = bitcast %union.tree_node* %100 to %struct.tree_common*
  %type294 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common293, i32 0, i32 1
  %101 = load %union.tree_node*, %union.tree_node** %type294, align 8
  %type295 = bitcast %union.tree_node* %101 to %struct.tree_type*
  %main_variant296 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type295, i32 0, i32 15
  %102 = load %union.tree_node*, %union.tree_node** %main_variant296, align 8
  %cmp297 = icmp eq %union.tree_node* %99, %102
  br i1 %cmp297, label %if.then.298, label %if.else.299

if.then.298:                                      ; preds = %land.lhs.true.291
  br label %if.end.397

if.else.299:                                      ; preds = %land.lhs.true.291, %if.then.282
  %103 = load i32, i32* %formal_prec, align 4
  %104 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %type300 = bitcast %union.tree_node* %104 to %struct.tree_type*
  %precision301 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type300, i32 0, i32 6
  %bf.load302 = load i32, i32* %precision301, align 4
  %bf.clear303 = and i32 %bf.load302, 511
  %cmp304 = icmp ne i32 %103, %bf.clear303
  br i1 %cmp304, label %if.then.305, label %if.else.307

if.then.305:                                      ; preds = %if.else.299
  %105 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %106 = load i32, i32* %parmnum, align 4
  %add306 = add nsw i32 %106, 1
  call void @warn_for_assignment(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.160, i32 0, i32 0), i8* null, %union.tree_node* %105, i32 %add306)
  br label %if.end.396

if.else.307:                                      ; preds = %if.else.299
  %107 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common308 = bitcast %union.tree_node* %107 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common308, i32 0, i32 2
  %bf.load309 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr = lshr i32 %bf.load309, 13
  %bf.clear310 = and i32 %bf.lshr, 1
  %108 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %common311 = bitcast %union.tree_node* %108 to %struct.tree_common*
  %unsigned_flag312 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common311, i32 0, i32 2
  %bf.load313 = load i32, i32* %unsigned_flag312, align 8
  %bf.lshr314 = lshr i32 %bf.load313, 13
  %bf.clear315 = and i32 %bf.lshr314, 1
  %cmp316 = icmp eq i32 %bf.clear310, %bf.clear315
  br i1 %cmp316, label %if.then.317, label %if.else.318

if.then.317:                                      ; preds = %if.else.307
  br label %if.end.395

if.else.318:                                      ; preds = %if.else.307
  %109 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common319 = bitcast %union.tree_node* %109 to %struct.tree_common*
  %code320 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common319, i32 0, i32 2
  %bf.load321 = load i32, i32* %code320, align 8
  %bf.clear322 = and i32 %bf.load321, 255
  %cmp323 = icmp eq i32 %bf.clear322, 10
  br i1 %cmp323, label %if.then.324, label %if.else.325

if.then.324:                                      ; preds = %if.else.318
  br label %if.end.394

if.else.325:                                      ; preds = %if.else.318
  %110 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common326 = bitcast %union.tree_node* %110 to %struct.tree_common*
  %code327 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common326, i32 0, i32 2
  %bf.load328 = load i32, i32* %code327, align 8
  %bf.clear329 = and i32 %bf.load328, 255
  %cmp330 = icmp eq i32 %bf.clear329, 25
  br i1 %cmp330, label %land.lhs.true.331, label %if.else.335

land.lhs.true.331:                                ; preds = %if.else.325
  %111 = load %union.tree_node*, %union.tree_node** %val, align 8
  %112 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call332 = call i32 @int_fits_type_p(%union.tree_node* %111, %union.tree_node* %112)
  %tobool333 = icmp ne i32 %call332, 0
  br i1 %tobool333, label %if.then.334, label %if.else.335

if.then.334:                                      ; preds = %land.lhs.true.331
  br label %if.end.393

if.else.335:                                      ; preds = %land.lhs.true.331, %if.else.325
  %113 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common336 = bitcast %union.tree_node* %113 to %struct.tree_common*
  %code337 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common336, i32 0, i32 2
  %bf.load338 = load i32, i32* %code337, align 8
  %bf.clear339 = and i32 %bf.load338, 255
  %cmp340 = icmp eq i32 %bf.clear339, 115
  br i1 %cmp340, label %land.lhs.true.341, label %if.else.357

land.lhs.true.341:                                ; preds = %if.else.335
  %114 = load %union.tree_node*, %union.tree_node** %val, align 8
  %exp342 = bitcast %union.tree_node* %114 to %struct.tree_exp*
  %operands343 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp342, i32 0, i32 2
  %arrayidx344 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands343, i32 0, i64 0
  %115 = load %union.tree_node*, %union.tree_node** %arrayidx344, align 8
  %common345 = bitcast %union.tree_node* %115 to %struct.tree_common*
  %code346 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common345, i32 0, i32 2
  %bf.load347 = load i32, i32* %code346, align 8
  %bf.clear348 = and i32 %bf.load347, 255
  %cmp349 = icmp eq i32 %bf.clear348, 25
  br i1 %cmp349, label %land.lhs.true.350, label %if.else.357

land.lhs.true.350:                                ; preds = %land.lhs.true.341
  %116 = load %union.tree_node*, %union.tree_node** %val, align 8
  %exp351 = bitcast %union.tree_node* %116 to %struct.tree_exp*
  %operands352 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp351, i32 0, i32 2
  %arrayidx353 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands352, i32 0, i64 0
  %117 = load %union.tree_node*, %union.tree_node** %arrayidx353, align 8
  %118 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call354 = call i32 @int_fits_type_p(%union.tree_node* %117, %union.tree_node* %118)
  %tobool355 = icmp ne i32 %call354, 0
  br i1 %tobool355, label %if.then.356, label %if.else.357

if.then.356:                                      ; preds = %land.lhs.true.350
  br label %if.end.392

if.else.357:                                      ; preds = %land.lhs.true.350, %land.lhs.true.341, %if.else.335
  %119 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common358 = bitcast %union.tree_node* %119 to %struct.tree_common*
  %type359 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common358, i32 0, i32 1
  %120 = load %union.tree_node*, %union.tree_node** %type359, align 8
  %type360 = bitcast %union.tree_node* %120 to %struct.tree_type*
  %precision361 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type360, i32 0, i32 6
  %bf.load362 = load i32, i32* %precision361, align 4
  %bf.clear363 = and i32 %bf.load362, 511
  %121 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type364 = bitcast %union.tree_node* %121 to %struct.tree_type*
  %precision365 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type364, i32 0, i32 6
  %bf.load366 = load i32, i32* %precision365, align 4
  %bf.clear367 = and i32 %bf.load366, 511
  %cmp368 = icmp slt i32 %bf.clear363, %bf.clear367
  br i1 %cmp368, label %land.lhs.true.369, label %if.else.379

land.lhs.true.369:                                ; preds = %if.else.357
  %122 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common370 = bitcast %union.tree_node* %122 to %struct.tree_common*
  %type371 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common370, i32 0, i32 1
  %123 = load %union.tree_node*, %union.tree_node** %type371, align 8
  %common372 = bitcast %union.tree_node* %123 to %struct.tree_common*
  %unsigned_flag373 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common372, i32 0, i32 2
  %bf.load374 = load i32, i32* %unsigned_flag373, align 8
  %bf.lshr375 = lshr i32 %bf.load374, 13
  %bf.clear376 = and i32 %bf.lshr375, 1
  %tobool377 = icmp ne i32 %bf.clear376, 0
  br i1 %tobool377, label %if.then.378, label %if.else.379

if.then.378:                                      ; preds = %land.lhs.true.369
  br label %if.end.391

if.else.379:                                      ; preds = %land.lhs.true.369, %if.else.357
  %124 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common380 = bitcast %union.tree_node* %124 to %struct.tree_common*
  %unsigned_flag381 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common380, i32 0, i32 2
  %bf.load382 = load i32, i32* %unsigned_flag381, align 8
  %bf.lshr383 = lshr i32 %bf.load382, 13
  %bf.clear384 = and i32 %bf.lshr383, 1
  %tobool385 = icmp ne i32 %bf.clear384, 0
  br i1 %tobool385, label %if.then.386, label %if.else.388

if.then.386:                                      ; preds = %if.else.379
  %125 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %126 = load i32, i32* %parmnum, align 4
  %add387 = add nsw i32 %126, 1
  call void @warn_for_assignment(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.161, i32 0, i32 0), i8* null, %union.tree_node* %125, i32 %add387)
  br label %if.end.390

if.else.388:                                      ; preds = %if.else.379
  %127 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %128 = load i32, i32* %parmnum, align 4
  %add389 = add nsw i32 %128, 1
  call void @warn_for_assignment(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.162, i32 0, i32 0), i8* null, %union.tree_node* %127, i32 %add389)
  br label %if.end.390

if.end.390:                                       ; preds = %if.else.388, %if.then.386
  br label %if.end.391

if.end.391:                                       ; preds = %if.end.390, %if.then.378
  br label %if.end.392

if.end.392:                                       ; preds = %if.end.391, %if.then.356
  br label %if.end.393

if.end.393:                                       ; preds = %if.end.392, %if.then.334
  br label %if.end.394

if.end.394:                                       ; preds = %if.end.393, %if.then.324
  br label %if.end.395

if.end.395:                                       ; preds = %if.end.394, %if.then.317
  br label %if.end.396

if.end.396:                                       ; preds = %if.end.395, %if.then.305
  br label %if.end.397

if.end.397:                                       ; preds = %if.end.396, %if.then.298
  br label %if.end.398

if.end.398:                                       ; preds = %if.end.397, %lor.lhs.false.274, %lor.lhs.false.244, %if.else.224
  br label %if.end.399

if.end.399:                                       ; preds = %if.end.398, %if.end.223
  br label %if.end.400

if.end.400:                                       ; preds = %if.end.399, %if.then.199
  br label %if.end.401

if.end.401:                                       ; preds = %if.end.400, %if.then.183
  br label %if.end.402

if.end.402:                                       ; preds = %if.end.401, %if.then.143
  br label %if.end.403

if.end.403:                                       ; preds = %if.end.402, %if.then.103
  br label %if.end.404

if.end.404:                                       ; preds = %if.end.403, %if.then.87
  br label %if.end.405

if.end.405:                                       ; preds = %if.end.404, %lor.lhs.false
  %129 = load %union.tree_node*, %union.tree_node** %type, align 8
  %130 = load %union.tree_node*, %union.tree_node** %val, align 8
  %131 = load %union.tree_node*, %union.tree_node** %fundecl.addr, align 8
  %132 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %133 = load i32, i32* %parmnum, align 4
  %add406 = add nsw i32 %133, 1
  %call407 = call %union.tree_node* @convert_for_assignment(%union.tree_node* %129, %union.tree_node* %130, i8* null, %union.tree_node* %131, %union.tree_node* %132, i32 %add406)
  store %union.tree_node* %call407, %union.tree_node** %parmval, align 8
  %134 = load i32, i32* @target_flags, align 4
  %and = and i32 %134, 33554432
  %tobool408 = icmp ne i32 %and, 0
  br i1 %tobool408, label %if.end.445, label %land.lhs.true.409

land.lhs.true.409:                                ; preds = %if.end.405
  %135 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common410 = bitcast %union.tree_node* %135 to %struct.tree_common*
  %code411 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common410, i32 0, i32 2
  %bf.load412 = load i32, i32* %code411, align 8
  %bf.clear413 = and i32 %bf.load412, 255
  %cmp414 = icmp eq i32 %bf.clear413, 6
  br i1 %cmp414, label %land.lhs.true.433, label %lor.lhs.false.415

lor.lhs.false.415:                                ; preds = %land.lhs.true.409
  %136 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common416 = bitcast %union.tree_node* %136 to %struct.tree_common*
  %code417 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common416, i32 0, i32 2
  %bf.load418 = load i32, i32* %code417, align 8
  %bf.clear419 = and i32 %bf.load418, 255
  %cmp420 = icmp eq i32 %bf.clear419, 10
  br i1 %cmp420, label %land.lhs.true.433, label %lor.lhs.false.421

lor.lhs.false.421:                                ; preds = %lor.lhs.false.415
  %137 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common422 = bitcast %union.tree_node* %137 to %struct.tree_common*
  %code423 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common422, i32 0, i32 2
  %bf.load424 = load i32, i32* %code423, align 8
  %bf.clear425 = and i32 %bf.load424, 255
  %cmp426 = icmp eq i32 %bf.clear425, 11
  br i1 %cmp426, label %land.lhs.true.433, label %lor.lhs.false.427

lor.lhs.false.427:                                ; preds = %lor.lhs.false.421
  %138 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common428 = bitcast %union.tree_node* %138 to %struct.tree_common*
  %code429 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common428, i32 0, i32 2
  %bf.load430 = load i32, i32* %code429, align 8
  %bf.clear431 = and i32 %bf.load430, 255
  %cmp432 = icmp eq i32 %bf.clear431, 12
  br i1 %cmp432, label %land.lhs.true.433, label %if.end.445

land.lhs.true.433:                                ; preds = %lor.lhs.false.427, %lor.lhs.false.421, %lor.lhs.false.415, %land.lhs.true.409
  %139 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type434 = bitcast %union.tree_node* %139 to %struct.tree_type*
  %precision435 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type434, i32 0, i32 6
  %bf.load436 = load i32, i32* %precision435, align 4
  %bf.clear437 = and i32 %bf.load436, 511
  %140 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type438 = bitcast %union.tree_node* %140 to %struct.tree_type*
  %precision439 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type438, i32 0, i32 6
  %bf.load440 = load i32, i32* %precision439, align 4
  %bf.clear441 = and i32 %bf.load440, 511
  %cmp442 = icmp slt i32 %bf.clear437, %bf.clear441
  br i1 %cmp442, label %if.then.443, label %if.end.445

if.then.443:                                      ; preds = %land.lhs.true.433
  %141 = load %union.tree_node*, %union.tree_node** %parmval, align 8
  %call444 = call %union.tree_node* @default_conversion(%union.tree_node* %141)
  store %union.tree_node* %call444, %union.tree_node** %parmval, align 8
  br label %if.end.445

if.end.445:                                       ; preds = %if.then.443, %land.lhs.true.433, %lor.lhs.false.427, %if.end.405
  br label %if.end.446

if.end.446:                                       ; preds = %if.end.445, %if.then.15
  %142 = load %union.tree_node*, %union.tree_node** %parmval, align 8
  %143 = load %union.tree_node*, %union.tree_node** %result, align 8
  %call447 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %142, %union.tree_node* %143)
  store %union.tree_node* %call447, %union.tree_node** %result, align 8
  br label %if.end.475

if.else.448:                                      ; preds = %if.end.9
  %144 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common449 = bitcast %union.tree_node* %144 to %struct.tree_common*
  %type450 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common449, i32 0, i32 1
  %145 = load %union.tree_node*, %union.tree_node** %type450, align 8
  %common451 = bitcast %union.tree_node* %145 to %struct.tree_common*
  %code452 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common451, i32 0, i32 2
  %bf.load453 = load i32, i32* %code452, align 8
  %bf.clear454 = and i32 %bf.load453, 255
  %cmp455 = icmp eq i32 %bf.clear454, 7
  br i1 %cmp455, label %land.lhs.true.456, label %if.else.471

land.lhs.true.456:                                ; preds = %if.else.448
  %146 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common457 = bitcast %union.tree_node* %146 to %struct.tree_common*
  %type458 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common457, i32 0, i32 1
  %147 = load %union.tree_node*, %union.tree_node** %type458, align 8
  %type459 = bitcast %union.tree_node* %147 to %struct.tree_type*
  %precision460 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type459, i32 0, i32 6
  %bf.load461 = load i32, i32* %precision460, align 4
  %bf.clear462 = and i32 %bf.load461, 511
  %148 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 25), align 8
  %type463 = bitcast %union.tree_node* %148 to %struct.tree_type*
  %precision464 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type463, i32 0, i32 6
  %bf.load465 = load i32, i32* %precision464, align 4
  %bf.clear466 = and i32 %bf.load465, 511
  %cmp467 = icmp slt i32 %bf.clear462, %bf.clear466
  br i1 %cmp467, label %if.then.468, label %if.else.471

if.then.468:                                      ; preds = %land.lhs.true.456
  %149 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 25), align 8
  %150 = load %union.tree_node*, %union.tree_node** %val, align 8
  %call469 = call %union.tree_node* @convert(%union.tree_node* %149, %union.tree_node* %150)
  %151 = load %union.tree_node*, %union.tree_node** %result, align 8
  %call470 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %call469, %union.tree_node* %151)
  store %union.tree_node* %call470, %union.tree_node** %result, align 8
  br label %if.end.474

if.else.471:                                      ; preds = %land.lhs.true.456, %if.else.448
  %152 = load %union.tree_node*, %union.tree_node** %val, align 8
  %call472 = call %union.tree_node* @default_conversion(%union.tree_node* %152)
  %153 = load %union.tree_node*, %union.tree_node** %result, align 8
  %call473 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %call472, %union.tree_node* %153)
  store %union.tree_node* %call473, %union.tree_node** %result, align 8
  br label %if.end.474

if.end.474:                                       ; preds = %if.else.471, %if.then.468
  br label %if.end.475

if.end.475:                                       ; preds = %if.end.474, %if.end.446
  %154 = load %union.tree_node*, %union.tree_node** %typetail, align 8
  %tobool476 = icmp ne %union.tree_node* %154, null
  br i1 %tobool476, label %if.then.477, label %if.end.479

if.then.477:                                      ; preds = %if.end.475
  %155 = load %union.tree_node*, %union.tree_node** %typetail, align 8
  %common478 = bitcast %union.tree_node* %155 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common478, i32 0, i32 0
  %156 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %156, %union.tree_node** %typetail, align 8
  br label %if.end.479

if.end.479:                                       ; preds = %if.then.477, %if.end.475
  br label %for.inc

for.inc:                                          ; preds = %if.end.479
  %157 = load %union.tree_node*, %union.tree_node** %valtail, align 8
  %common480 = bitcast %union.tree_node* %157 to %struct.tree_common*
  %chain481 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common480, i32 0, i32 0
  %158 = load %union.tree_node*, %union.tree_node** %chain481, align 8
  store %union.tree_node* %158, %union.tree_node** %valtail, align 8
  %159 = load i32, i32* %parmnum, align 4
  %inc = add nsw i32 %159, 1
  store i32 %inc, i32* %parmnum, align 4
  br label %for.cond

for.end:                                          ; preds = %if.end, %for.cond
  %160 = load %union.tree_node*, %union.tree_node** %typetail, align 8
  %cmp482 = icmp ne %union.tree_node* %160, null
  br i1 %cmp482, label %land.lhs.true.483, label %if.end.495

land.lhs.true.483:                                ; preds = %for.end
  %161 = load %union.tree_node*, %union.tree_node** %typetail, align 8
  %list484 = bitcast %union.tree_node* %161 to %struct.tree_list*
  %value485 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list484, i32 0, i32 2
  %162 = load %union.tree_node*, %union.tree_node** %value485, align 8
  %163 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %cmp486 = icmp ne %union.tree_node* %162, %163
  br i1 %cmp486, label %if.then.487, label %if.end.495

if.then.487:                                      ; preds = %land.lhs.true.483
  %164 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %tobool488 = icmp ne %union.tree_node* %164, null
  br i1 %tobool488, label %if.then.489, label %if.else.493

if.then.489:                                      ; preds = %if.then.487
  %165 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %identifier490 = bitcast %union.tree_node* %165 to %struct.tree_identifier*
  %id491 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier490, i32 0, i32 1
  %str492 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id491, i32 0, i32 1
  %166 = load i8*, i8** %str492, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.163, i32 0, i32 0), i8* %166)
  br label %if.end.494

if.else.493:                                      ; preds = %if.then.487
  call void (i8*, ...) @error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.164, i32 0, i32 0))
  br label %if.end.494

if.end.494:                                       ; preds = %if.else.493, %if.then.489
  br label %if.end.495

if.end.495:                                       ; preds = %if.end.494, %land.lhs.true.483, %for.end
  %167 = load %union.tree_node*, %union.tree_node** %result, align 8
  %call496 = call %union.tree_node* @nreverse(%union.tree_node* %167)
  ret %union.tree_node* %call496
}

declare void @check_function_format(i32*, %union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @expand_tree_builtin(%union.tree_node*, %union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @parser_build_binary_op(i32 %code, %union.tree_node* %arg1, %union.tree_node* %arg2) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %code.addr = alloca i32, align 4
  %arg1.addr = alloca %union.tree_node*, align 8
  %arg2.addr = alloca %union.tree_node*, align 8
  %result = alloca %union.tree_node*, align 8
  %class = alloca i8, align 1
  %class1 = alloca i8, align 1
  %class2 = alloca i8, align 1
  %code18 = alloca i32, align 4
  %code2 = alloca i32, align 4
  %flag = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  store %union.tree_node* %arg1, %union.tree_node** %arg1.addr, align 8
  store %union.tree_node* %arg2, %union.tree_node** %arg2.addr, align 8
  %0 = load i32, i32* %code.addr, align 4
  %1 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %2 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %call = call %union.tree_node* @build_binary_op(i32 %0, %union.tree_node* %1, %union.tree_node* %2, i32 1)
  store %union.tree_node* %call, %union.tree_node** %result, align 8
  %3 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  %idxprom = sext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom
  %4 = load i8, i8* %arrayidx, align 1
  store i8 %4, i8* %class1, align 1
  %5 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %common2 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load4 = load i32, i32* %code3, align 8
  %bf.clear5 = and i32 %bf.load4, 255
  %idxprom6 = sext i32 %bf.clear5 to i64
  %arrayidx7 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom6
  %6 = load i8, i8* %arrayidx7, align 1
  store i8 %6, i8* %class2, align 1
  store i32 0, i32* %code18, align 4
  store i32 0, i32* %code2, align 4
  %7 = load %union.tree_node*, %union.tree_node** %result, align 8
  %common9 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %code10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common9, i32 0, i32 2
  %bf.load11 = load i32, i32* %code10, align 8
  %bf.clear12 = and i32 %bf.load11, 255
  %cmp = icmp eq i32 %bf.clear12, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %8, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %entry
  %9 = load i8, i8* %class1, align 1
  %conv = sext i8 %9 to i32
  %cmp13 = icmp eq i32 %conv, 60
  br i1 %cmp13, label %if.then.26, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %10 = load i8, i8* %class1, align 1
  %conv15 = sext i8 %10 to i32
  %cmp16 = icmp eq i32 %conv15, 49
  br i1 %cmp16, label %if.then.26, label %lor.lhs.false.18

lor.lhs.false.18:                                 ; preds = %lor.lhs.false
  %11 = load i8, i8* %class1, align 1
  %conv19 = sext i8 %11 to i32
  %cmp20 = icmp eq i32 %conv19, 50
  br i1 %cmp20, label %if.then.26, label %lor.lhs.false.22

lor.lhs.false.22:                                 ; preds = %lor.lhs.false.18
  %12 = load i8, i8* %class1, align 1
  %conv23 = sext i8 %12 to i32
  %cmp24 = icmp eq i32 %conv23, 101
  br i1 %cmp24, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %lor.lhs.false.22, %lor.lhs.false.18, %lor.lhs.false, %if.end
  %13 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp = bitcast %union.tree_node* %13 to %struct.tree_exp*
  %complexity = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 1
  %14 = load i32, i32* %complexity, align 4
  store i32 %14, i32* %code18, align 4
  br label %if.end.27

if.end.27:                                        ; preds = %if.then.26, %lor.lhs.false.22
  %15 = load i8, i8* %class2, align 1
  %conv28 = sext i8 %15 to i32
  %cmp29 = icmp eq i32 %conv28, 60
  br i1 %cmp29, label %if.then.43, label %lor.lhs.false.31

lor.lhs.false.31:                                 ; preds = %if.end.27
  %16 = load i8, i8* %class2, align 1
  %conv32 = sext i8 %16 to i32
  %cmp33 = icmp eq i32 %conv32, 49
  br i1 %cmp33, label %if.then.43, label %lor.lhs.false.35

lor.lhs.false.35:                                 ; preds = %lor.lhs.false.31
  %17 = load i8, i8* %class2, align 1
  %conv36 = sext i8 %17 to i32
  %cmp37 = icmp eq i32 %conv36, 50
  br i1 %cmp37, label %if.then.43, label %lor.lhs.false.39

lor.lhs.false.39:                                 ; preds = %lor.lhs.false.35
  %18 = load i8, i8* %class2, align 1
  %conv40 = sext i8 %18 to i32
  %cmp41 = icmp eq i32 %conv40, 101
  br i1 %cmp41, label %if.then.43, label %if.end.46

if.then.43:                                       ; preds = %lor.lhs.false.39, %lor.lhs.false.35, %lor.lhs.false.31, %if.end.27
  %19 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %exp44 = bitcast %union.tree_node* %19 to %struct.tree_exp*
  %complexity45 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp44, i32 0, i32 1
  %20 = load i32, i32* %complexity45, align 4
  store i32 %20, i32* %code2, align 4
  br label %if.end.46

if.end.46:                                        ; preds = %if.then.43, %lor.lhs.false.39
  %21 = load i32, i32* @warn_parentheses, align 4
  %tobool = icmp ne i32 %21, 0
  br i1 %tobool, label %if.then.47, label %if.end.187

if.then.47:                                       ; preds = %if.end.46
  %22 = load i32, i32* %code.addr, align 4
  %cmp48 = icmp eq i32 %22, 82
  br i1 %cmp48, label %if.then.53, label %lor.lhs.false.50

lor.lhs.false.50:                                 ; preds = %if.then.47
  %23 = load i32, i32* %code.addr, align 4
  %cmp51 = icmp eq i32 %23, 83
  br i1 %cmp51, label %if.then.53, label %if.end.67

if.then.53:                                       ; preds = %lor.lhs.false.50, %if.then.47
  %24 = load i32, i32* %code18, align 4
  %cmp54 = icmp eq i32 %24, 59
  br i1 %cmp54, label %if.then.65, label %lor.lhs.false.56

lor.lhs.false.56:                                 ; preds = %if.then.53
  %25 = load i32, i32* %code18, align 4
  %cmp57 = icmp eq i32 %25, 60
  br i1 %cmp57, label %if.then.65, label %lor.lhs.false.59

lor.lhs.false.59:                                 ; preds = %lor.lhs.false.56
  %26 = load i32, i32* %code2, align 4
  %cmp60 = icmp eq i32 %26, 59
  br i1 %cmp60, label %if.then.65, label %lor.lhs.false.62

lor.lhs.false.62:                                 ; preds = %lor.lhs.false.59
  %27 = load i32, i32* %code2, align 4
  %cmp63 = icmp eq i32 %27, 60
  br i1 %cmp63, label %if.then.65, label %if.end.66

if.then.65:                                       ; preds = %lor.lhs.false.62, %lor.lhs.false.59, %lor.lhs.false.56, %if.then.53
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i32 0, i32 0))
  br label %if.end.66

if.end.66:                                        ; preds = %if.then.65, %lor.lhs.false.62
  br label %if.end.67

if.end.67:                                        ; preds = %if.end.66, %lor.lhs.false.50
  %28 = load i32, i32* %code.addr, align 4
  %cmp68 = icmp eq i32 %28, 92
  br i1 %cmp68, label %if.then.70, label %if.end.78

if.then.70:                                       ; preds = %if.end.67
  %29 = load i32, i32* %code18, align 4
  %cmp71 = icmp eq i32 %29, 91
  br i1 %cmp71, label %if.then.76, label %lor.lhs.false.73

lor.lhs.false.73:                                 ; preds = %if.then.70
  %30 = load i32, i32* %code2, align 4
  %cmp74 = icmp eq i32 %30, 91
  br i1 %cmp74, label %if.then.76, label %if.end.77

if.then.76:                                       ; preds = %lor.lhs.false.73, %if.then.70
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.37, i32 0, i32 0))
  br label %if.end.77

if.end.77:                                        ; preds = %if.then.76, %lor.lhs.false.73
  br label %if.end.78

if.end.78:                                        ; preds = %if.end.77, %if.end.67
  %31 = load i32, i32* %code.addr, align 4
  %cmp79 = icmp eq i32 %31, 86
  br i1 %cmp79, label %if.then.81, label %if.end.120

if.then.81:                                       ; preds = %if.end.78
  %32 = load i32, i32* %code18, align 4
  %cmp82 = icmp eq i32 %32, 88
  br i1 %cmp82, label %if.then.105, label %lor.lhs.false.84

lor.lhs.false.84:                                 ; preds = %if.then.81
  %33 = load i32, i32* %code18, align 4
  %cmp85 = icmp eq i32 %33, 87
  br i1 %cmp85, label %if.then.105, label %lor.lhs.false.87

lor.lhs.false.87:                                 ; preds = %lor.lhs.false.84
  %34 = load i32, i32* %code18, align 4
  %cmp88 = icmp eq i32 %34, 59
  br i1 %cmp88, label %if.then.105, label %lor.lhs.false.90

lor.lhs.false.90:                                 ; preds = %lor.lhs.false.87
  %35 = load i32, i32* %code18, align 4
  %cmp91 = icmp eq i32 %35, 60
  br i1 %cmp91, label %if.then.105, label %lor.lhs.false.93

lor.lhs.false.93:                                 ; preds = %lor.lhs.false.90
  %36 = load i32, i32* %code2, align 4
  %cmp94 = icmp eq i32 %36, 88
  br i1 %cmp94, label %if.then.105, label %lor.lhs.false.96

lor.lhs.false.96:                                 ; preds = %lor.lhs.false.93
  %37 = load i32, i32* %code2, align 4
  %cmp97 = icmp eq i32 %37, 87
  br i1 %cmp97, label %if.then.105, label %lor.lhs.false.99

lor.lhs.false.99:                                 ; preds = %lor.lhs.false.96
  %38 = load i32, i32* %code2, align 4
  %cmp100 = icmp eq i32 %38, 59
  br i1 %cmp100, label %if.then.105, label %lor.lhs.false.102

lor.lhs.false.102:                                ; preds = %lor.lhs.false.99
  %39 = load i32, i32* %code2, align 4
  %cmp103 = icmp eq i32 %39, 60
  br i1 %cmp103, label %if.then.105, label %if.end.106

if.then.105:                                      ; preds = %lor.lhs.false.102, %lor.lhs.false.99, %lor.lhs.false.96, %lor.lhs.false.93, %lor.lhs.false.90, %lor.lhs.false.87, %lor.lhs.false.84, %if.then.81
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.38, i32 0, i32 0))
  br label %if.end.106

if.end.106:                                       ; preds = %if.then.105, %lor.lhs.false.102
  %40 = load i32, i32* %code18, align 4
  %idxprom107 = sext i32 %40 to i64
  %arrayidx108 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom107
  %41 = load i8, i8* %arrayidx108, align 1
  %conv109 = sext i8 %41 to i32
  %cmp110 = icmp eq i32 %conv109, 60
  br i1 %cmp110, label %if.then.118, label %lor.lhs.false.112

lor.lhs.false.112:                                ; preds = %if.end.106
  %42 = load i32, i32* %code2, align 4
  %idxprom113 = sext i32 %42 to i64
  %arrayidx114 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom113
  %43 = load i8, i8* %arrayidx114, align 1
  %conv115 = sext i8 %43 to i32
  %cmp116 = icmp eq i32 %conv115, 60
  br i1 %cmp116, label %if.then.118, label %if.end.119

if.then.118:                                      ; preds = %lor.lhs.false.112, %if.end.106
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.39, i32 0, i32 0))
  br label %if.end.119

if.end.119:                                       ; preds = %if.then.118, %lor.lhs.false.112
  br label %if.end.120

if.end.120:                                       ; preds = %if.end.119, %if.end.78
  %44 = load i32, i32* %code.addr, align 4
  %cmp121 = icmp eq i32 %44, 87
  br i1 %cmp121, label %if.then.123, label %if.end.156

if.then.123:                                      ; preds = %if.end.120
  %45 = load i32, i32* %code18, align 4
  %cmp124 = icmp eq i32 %45, 88
  br i1 %cmp124, label %if.then.141, label %lor.lhs.false.126

lor.lhs.false.126:                                ; preds = %if.then.123
  %46 = load i32, i32* %code18, align 4
  %cmp127 = icmp eq i32 %46, 59
  br i1 %cmp127, label %if.then.141, label %lor.lhs.false.129

lor.lhs.false.129:                                ; preds = %lor.lhs.false.126
  %47 = load i32, i32* %code18, align 4
  %cmp130 = icmp eq i32 %47, 60
  br i1 %cmp130, label %if.then.141, label %lor.lhs.false.132

lor.lhs.false.132:                                ; preds = %lor.lhs.false.129
  %48 = load i32, i32* %code2, align 4
  %cmp133 = icmp eq i32 %48, 88
  br i1 %cmp133, label %if.then.141, label %lor.lhs.false.135

lor.lhs.false.135:                                ; preds = %lor.lhs.false.132
  %49 = load i32, i32* %code2, align 4
  %cmp136 = icmp eq i32 %49, 59
  br i1 %cmp136, label %if.then.141, label %lor.lhs.false.138

lor.lhs.false.138:                                ; preds = %lor.lhs.false.135
  %50 = load i32, i32* %code2, align 4
  %cmp139 = icmp eq i32 %50, 60
  br i1 %cmp139, label %if.then.141, label %if.end.142

if.then.141:                                      ; preds = %lor.lhs.false.138, %lor.lhs.false.135, %lor.lhs.false.132, %lor.lhs.false.129, %lor.lhs.false.126, %if.then.123
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.40, i32 0, i32 0))
  br label %if.end.142

if.end.142:                                       ; preds = %if.then.141, %lor.lhs.false.138
  %51 = load i32, i32* %code18, align 4
  %idxprom143 = sext i32 %51 to i64
  %arrayidx144 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom143
  %52 = load i8, i8* %arrayidx144, align 1
  %conv145 = sext i8 %52 to i32
  %cmp146 = icmp eq i32 %conv145, 60
  br i1 %cmp146, label %if.then.154, label %lor.lhs.false.148

lor.lhs.false.148:                                ; preds = %if.end.142
  %53 = load i32, i32* %code2, align 4
  %idxprom149 = sext i32 %53 to i64
  %arrayidx150 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom149
  %54 = load i8, i8* %arrayidx150, align 1
  %conv151 = sext i8 %54 to i32
  %cmp152 = icmp eq i32 %conv151, 60
  br i1 %cmp152, label %if.then.154, label %if.end.155

if.then.154:                                      ; preds = %lor.lhs.false.148, %if.end.142
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.41, i32 0, i32 0))
  br label %if.end.155

if.end.155:                                       ; preds = %if.then.154, %lor.lhs.false.148
  br label %if.end.156

if.end.156:                                       ; preds = %if.end.155, %if.end.120
  %55 = load i32, i32* %code.addr, align 4
  %cmp157 = icmp eq i32 %55, 88
  br i1 %cmp157, label %if.then.159, label %if.end.186

if.then.159:                                      ; preds = %if.end.156
  %56 = load i32, i32* %code18, align 4
  %cmp160 = icmp eq i32 %56, 59
  br i1 %cmp160, label %if.then.171, label %lor.lhs.false.162

lor.lhs.false.162:                                ; preds = %if.then.159
  %57 = load i32, i32* %code18, align 4
  %cmp163 = icmp eq i32 %57, 60
  br i1 %cmp163, label %if.then.171, label %lor.lhs.false.165

lor.lhs.false.165:                                ; preds = %lor.lhs.false.162
  %58 = load i32, i32* %code2, align 4
  %cmp166 = icmp eq i32 %58, 59
  br i1 %cmp166, label %if.then.171, label %lor.lhs.false.168

lor.lhs.false.168:                                ; preds = %lor.lhs.false.165
  %59 = load i32, i32* %code2, align 4
  %cmp169 = icmp eq i32 %59, 60
  br i1 %cmp169, label %if.then.171, label %if.end.172

if.then.171:                                      ; preds = %lor.lhs.false.168, %lor.lhs.false.165, %lor.lhs.false.162, %if.then.159
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.42, i32 0, i32 0))
  br label %if.end.172

if.end.172:                                       ; preds = %if.then.171, %lor.lhs.false.168
  %60 = load i32, i32* %code18, align 4
  %idxprom173 = sext i32 %60 to i64
  %arrayidx174 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom173
  %61 = load i8, i8* %arrayidx174, align 1
  %conv175 = sext i8 %61 to i32
  %cmp176 = icmp eq i32 %conv175, 60
  br i1 %cmp176, label %if.then.184, label %lor.lhs.false.178

lor.lhs.false.178:                                ; preds = %if.end.172
  %62 = load i32, i32* %code2, align 4
  %idxprom179 = sext i32 %62 to i64
  %arrayidx180 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom179
  %63 = load i8, i8* %arrayidx180, align 1
  %conv181 = sext i8 %63 to i32
  %cmp182 = icmp eq i32 %conv181, 60
  br i1 %cmp182, label %if.then.184, label %if.end.185

if.then.184:                                      ; preds = %lor.lhs.false.178, %if.end.172
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.43, i32 0, i32 0))
  br label %if.end.185

if.end.185:                                       ; preds = %if.then.184, %lor.lhs.false.178
  br label %if.end.186

if.end.186:                                       ; preds = %if.end.185, %if.end.156
  br label %if.end.187

if.end.187:                                       ; preds = %if.end.186, %if.end.46
  %64 = load i32, i32* %code.addr, align 4
  %idxprom188 = sext i32 %64 to i64
  %arrayidx189 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom188
  %65 = load i8, i8* %arrayidx189, align 1
  %conv190 = sext i8 %65 to i32
  %cmp191 = icmp eq i32 %conv190, 60
  br i1 %cmp191, label %land.lhs.true, label %if.end.207

land.lhs.true:                                    ; preds = %if.end.187
  %66 = load i32, i32* @extra_warnings, align 4
  %tobool193 = icmp ne i32 %66, 0
  br i1 %tobool193, label %land.lhs.true.194, label %if.end.207

land.lhs.true.194:                                ; preds = %land.lhs.true
  %67 = load i32, i32* %code18, align 4
  %idxprom195 = sext i32 %67 to i64
  %arrayidx196 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom195
  %68 = load i8, i8* %arrayidx196, align 1
  %conv197 = sext i8 %68 to i32
  %cmp198 = icmp eq i32 %conv197, 60
  br i1 %cmp198, label %if.then.206, label %lor.lhs.false.200

lor.lhs.false.200:                                ; preds = %land.lhs.true.194
  %69 = load i32, i32* %code2, align 4
  %idxprom201 = sext i32 %69 to i64
  %arrayidx202 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom201
  %70 = load i8, i8* %arrayidx202, align 1
  %conv203 = sext i8 %70 to i32
  %cmp204 = icmp eq i32 %conv203, 60
  br i1 %cmp204, label %if.then.206, label %if.end.207

if.then.206:                                      ; preds = %lor.lhs.false.200, %land.lhs.true.194
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.44, i32 0, i32 0))
  br label %if.end.207

if.end.207:                                       ; preds = %if.then.206, %lor.lhs.false.200, %land.lhs.true, %if.end.187
  %71 = load %union.tree_node*, %union.tree_node** %result, align 8
  %72 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  call void @unsigned_conversion_warning(%union.tree_node* %71, %union.tree_node* %72)
  %73 = load %union.tree_node*, %union.tree_node** %result, align 8
  %74 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  call void @unsigned_conversion_warning(%union.tree_node* %73, %union.tree_node* %74)
  %75 = load %union.tree_node*, %union.tree_node** %result, align 8
  call void @overflow_warning(%union.tree_node* %75)
  %76 = load %union.tree_node*, %union.tree_node** %result, align 8
  %common208 = bitcast %union.tree_node* %76 to %struct.tree_common*
  %code209 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common208, i32 0, i32 2
  %bf.load210 = load i32, i32* %code209, align 8
  %bf.clear211 = and i32 %bf.load210, 255
  %idxprom212 = sext i32 %bf.clear211 to i64
  %arrayidx213 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom212
  %77 = load i8, i8* %arrayidx213, align 1
  store i8 %77, i8* %class, align 1
  %78 = load i8, i8* %class, align 1
  %conv214 = sext i8 %78 to i32
  %cmp215 = icmp eq i32 %conv214, 60
  br i1 %cmp215, label %if.then.229, label %lor.lhs.false.217

lor.lhs.false.217:                                ; preds = %if.end.207
  %79 = load i8, i8* %class, align 1
  %conv218 = sext i8 %79 to i32
  %cmp219 = icmp eq i32 %conv218, 49
  br i1 %cmp219, label %if.then.229, label %lor.lhs.false.221

lor.lhs.false.221:                                ; preds = %lor.lhs.false.217
  %80 = load i8, i8* %class, align 1
  %conv222 = sext i8 %80 to i32
  %cmp223 = icmp eq i32 %conv222, 50
  br i1 %cmp223, label %if.then.229, label %lor.lhs.false.225

lor.lhs.false.225:                                ; preds = %lor.lhs.false.221
  %81 = load i8, i8* %class, align 1
  %conv226 = sext i8 %81 to i32
  %cmp227 = icmp eq i32 %conv226, 101
  br i1 %cmp227, label %if.then.229, label %if.else

if.then.229:                                      ; preds = %lor.lhs.false.225, %lor.lhs.false.221, %lor.lhs.false.217, %if.end.207
  %82 = load i32, i32* %code.addr, align 4
  %83 = load %union.tree_node*, %union.tree_node** %result, align 8
  %exp230 = bitcast %union.tree_node* %83 to %struct.tree_exp*
  %complexity231 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp230, i32 0, i32 1
  store i32 %82, i32* %complexity231, align 4
  br label %if.end.243

if.else:                                          ; preds = %lor.lhs.false.225
  %84 = load %union.tree_node*, %union.tree_node** %result, align 8
  %common232 = bitcast %union.tree_node* %84 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common232, i32 0, i32 2
  %bf.load233 = load i32, i32* %constant_flag, align 8
  %bf.lshr = lshr i32 %bf.load233, 9
  %bf.clear234 = and i32 %bf.lshr, 1
  store i32 %bf.clear234, i32* %flag, align 4
  %85 = load %union.tree_node*, %union.tree_node** %result, align 8
  %common235 = bitcast %union.tree_node* %85 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common235, i32 0, i32 1
  %86 = load %union.tree_node*, %union.tree_node** %type, align 8
  %87 = load %union.tree_node*, %union.tree_node** %result, align 8
  %call236 = call %union.tree_node* @build1(i32 116, %union.tree_node* %86, %union.tree_node* %87)
  store %union.tree_node* %call236, %union.tree_node** %result, align 8
  %88 = load i32, i32* %code.addr, align 4
  %89 = load %union.tree_node*, %union.tree_node** %result, align 8
  %exp237 = bitcast %union.tree_node* %89 to %struct.tree_exp*
  %complexity238 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp237, i32 0, i32 1
  store i32 %88, i32* %complexity238, align 4
  %90 = load i32, i32* %flag, align 4
  %91 = load %union.tree_node*, %union.tree_node** %result, align 8
  %common239 = bitcast %union.tree_node* %91 to %struct.tree_common*
  %constant_flag240 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common239, i32 0, i32 2
  %bf.load241 = load i32, i32* %constant_flag240, align 8
  %bf.value = and i32 %90, 1
  %bf.shl = shl i32 %bf.value, 9
  %bf.clear242 = and i32 %bf.load241, -513
  %bf.set = or i32 %bf.clear242, %bf.shl
  store i32 %bf.set, i32* %constant_flag240, align 8
  br label %if.end.243

if.end.243:                                       ; preds = %if.else, %if.then.229
  %92 = load %union.tree_node*, %union.tree_node** %result, align 8
  store %union.tree_node* %92, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.243, %if.then
  %93 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %93
}

declare void @unsigned_conversion_warning(%union.tree_node*, %union.tree_node*) #1

declare void @overflow_warning(%union.tree_node*) #1

declare %union.tree_node* @pointer_int_sum(i32, %union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal i32 @comp_target_types(%union.tree_node* %ttl, %union.tree_node* %ttr) #0 {
entry:
  %retval = alloca i32, align 4
  %ttl.addr = alloca %union.tree_node*, align 8
  %ttr.addr = alloca %union.tree_node*, align 8
  %val = alloca i32, align 4
  store %union.tree_node* %ttl, %union.tree_node** %ttl.addr, align 8
  store %union.tree_node* %ttr, %union.tree_node** %ttr.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %ttl.addr, align 8
  %1 = load %union.tree_node*, %union.tree_node** %ttr.addr, align 8
  %call = call i32 @maybe_objc_comptypes(%union.tree_node* %0, %union.tree_node* %1, i32 1)
  store i32 %call, i32* %val, align 4
  %cmp = icmp sge i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %val, align 4
  store i32 %2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %ttl.addr, align 8
  %common = bitcast %union.tree_node* %3 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type1 = bitcast %union.tree_node* %4 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1, i32 0, i32 15
  %5 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %6 = load %union.tree_node*, %union.tree_node** %ttr.addr, align 8
  %common2 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %type3, align 8
  %type4 = bitcast %union.tree_node* %7 to %struct.tree_type*
  %main_variant5 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type4, i32 0, i32 15
  %8 = load %union.tree_node*, %union.tree_node** %main_variant5, align 8
  %call6 = call i32 @comptypes(%union.tree_node* %5, %union.tree_node* %8)
  store i32 %call6, i32* %val, align 4
  %9 = load i32, i32* %val, align 4
  %cmp7 = icmp eq i32 %9, 2
  br i1 %cmp7, label %land.lhs.true, label %if.end.9

land.lhs.true:                                    ; preds = %if.end
  %10 = load i32, i32* @pedantic, align 4
  %tobool = icmp ne i32 %10, 0
  br i1 %tobool, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %land.lhs.true
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.165, i32 0, i32 0))
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.8, %land.lhs.true, %if.end
  %11 = load i32, i32* %val, align 4
  store i32 %11, i32* %retval
  br label %return

return:                                           ; preds = %if.end.9, %if.then
  %12 = load i32, i32* %retval
  ret i32 %12
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @pointer_diff(%union.tree_node* %op0, %union.tree_node* %op1) #0 {
entry:
  %op0.addr = alloca %union.tree_node*, align 8
  %op1.addr = alloca %union.tree_node*, align 8
  %result = alloca %union.tree_node*, align 8
  %folded = alloca %union.tree_node*, align 8
  %restype = alloca %union.tree_node*, align 8
  %target_type = alloca %union.tree_node*, align 8
  %con0 = alloca %union.tree_node*, align 8
  %con1 = alloca %union.tree_node*, align 8
  %lit0 = alloca %union.tree_node*, align 8
  %lit1 = alloca %union.tree_node*, align 8
  %orig_op1 = alloca %union.tree_node*, align 8
  store %union.tree_node* %op0, %union.tree_node** %op0.addr, align 8
  store %union.tree_node* %op1, %union.tree_node** %op1.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 30), align 8
  store %union.tree_node* %0, %union.tree_node** %restype, align 8
  %1 = load %union.tree_node*, %union.tree_node** %op0.addr, align 8
  %common = bitcast %union.tree_node* %1 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %type2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %type2, align 8
  store %union.tree_node* %3, %union.tree_node** %target_type, align 8
  %4 = load %union.tree_node*, %union.tree_node** %op1.addr, align 8
  store %union.tree_node* %4, %union.tree_node** %orig_op1, align 8
  %5 = load i32, i32* @pedantic, align 4
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %6 = load i32, i32* @warn_pointer_arith, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then, label %if.end.13

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load %union.tree_node*, %union.tree_node** %target_type, align 8
  %common4 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 5
  br i1 %cmp, label %if.then.5, label %if.end

if.then.5:                                        ; preds = %if.then
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.166, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then.5, %if.then
  %8 = load %union.tree_node*, %union.tree_node** %target_type, align 8
  %common6 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %code7 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6, i32 0, i32 2
  %bf.load8 = load i32, i32* %code7, align 8
  %bf.clear9 = and i32 %bf.load8, 255
  %cmp10 = icmp eq i32 %bf.clear9, 23
  br i1 %cmp10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.167, i32 0, i32 0))
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.11, %if.end
  br label %if.end.13

if.end.13:                                        ; preds = %if.end.12, %lor.lhs.false
  %9 = load %union.tree_node*, %union.tree_node** %op0.addr, align 8
  %common14 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %code15 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common14, i32 0, i32 2
  %bf.load16 = load i32, i32* %code15, align 8
  %bf.clear17 = and i32 %bf.load16, 255
  %cmp18 = icmp eq i32 %bf.clear17, 115
  br i1 %cmp18, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.13
  %10 = load %union.tree_node*, %union.tree_node** %op0.addr, align 8
  %exp = bitcast %union.tree_node* %10 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end.13
  %12 = load %union.tree_node*, %union.tree_node** %op0.addr, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %11, %cond.true ], [ %12, %cond.false ]
  store %union.tree_node* %cond, %union.tree_node** %con0, align 8
  %13 = load %union.tree_node*, %union.tree_node** %op1.addr, align 8
  %common19 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %code20 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common19, i32 0, i32 2
  %bf.load21 = load i32, i32* %code20, align 8
  %bf.clear22 = and i32 %bf.load21, 255
  %cmp23 = icmp eq i32 %bf.clear22, 115
  br i1 %cmp23, label %cond.true.24, label %cond.false.28

cond.true.24:                                     ; preds = %cond.end
  %14 = load %union.tree_node*, %union.tree_node** %op1.addr, align 8
  %exp25 = bitcast %union.tree_node* %14 to %struct.tree_exp*
  %operands26 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp25, i32 0, i32 2
  %arrayidx27 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands26, i32 0, i64 0
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx27, align 8
  br label %cond.end.29

cond.false.28:                                    ; preds = %cond.end
  %16 = load %union.tree_node*, %union.tree_node** %op1.addr, align 8
  br label %cond.end.29

cond.end.29:                                      ; preds = %cond.false.28, %cond.true.24
  %cond30 = phi %union.tree_node* [ %15, %cond.true.24 ], [ %16, %cond.false.28 ]
  store %union.tree_node* %cond30, %union.tree_node** %con1, align 8
  %17 = load %union.tree_node*, %union.tree_node** %con0, align 8
  %common31 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %code32 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common31, i32 0, i32 2
  %bf.load33 = load i32, i32* %code32, align 8
  %bf.clear34 = and i32 %bf.load33, 255
  %cmp35 = icmp eq i32 %bf.clear34, 59
  br i1 %cmp35, label %if.then.36, label %if.else

if.then.36:                                       ; preds = %cond.end.29
  %18 = load %union.tree_node*, %union.tree_node** %con0, align 8
  %exp37 = bitcast %union.tree_node* %18 to %struct.tree_exp*
  %operands38 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp37, i32 0, i32 2
  %arrayidx39 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands38, i32 0, i64 1
  %19 = load %union.tree_node*, %union.tree_node** %arrayidx39, align 8
  store %union.tree_node* %19, %union.tree_node** %lit0, align 8
  %20 = load %union.tree_node*, %union.tree_node** %con0, align 8
  %exp40 = bitcast %union.tree_node* %20 to %struct.tree_exp*
  %operands41 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp40, i32 0, i32 2
  %arrayidx42 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands41, i32 0, i64 0
  %21 = load %union.tree_node*, %union.tree_node** %arrayidx42, align 8
  store %union.tree_node* %21, %union.tree_node** %con0, align 8
  br label %if.end.43

if.else:                                          ; preds = %cond.end.29
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  store %union.tree_node* %22, %union.tree_node** %lit0, align 8
  br label %if.end.43

if.end.43:                                        ; preds = %if.else, %if.then.36
  %23 = load %union.tree_node*, %union.tree_node** %con1, align 8
  %common44 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %code45 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common44, i32 0, i32 2
  %bf.load46 = load i32, i32* %code45, align 8
  %bf.clear47 = and i32 %bf.load46, 255
  %cmp48 = icmp eq i32 %bf.clear47, 59
  br i1 %cmp48, label %if.then.49, label %if.else.56

if.then.49:                                       ; preds = %if.end.43
  %24 = load %union.tree_node*, %union.tree_node** %con1, align 8
  %exp50 = bitcast %union.tree_node* %24 to %struct.tree_exp*
  %operands51 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp50, i32 0, i32 2
  %arrayidx52 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands51, i32 0, i64 1
  %25 = load %union.tree_node*, %union.tree_node** %arrayidx52, align 8
  store %union.tree_node* %25, %union.tree_node** %lit1, align 8
  %26 = load %union.tree_node*, %union.tree_node** %con1, align 8
  %exp53 = bitcast %union.tree_node* %26 to %struct.tree_exp*
  %operands54 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp53, i32 0, i32 2
  %arrayidx55 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands54, i32 0, i64 0
  %27 = load %union.tree_node*, %union.tree_node** %arrayidx55, align 8
  store %union.tree_node* %27, %union.tree_node** %con1, align 8
  br label %if.end.57

if.else.56:                                       ; preds = %if.end.43
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  store %union.tree_node* %28, %union.tree_node** %lit1, align 8
  br label %if.end.57

if.end.57:                                        ; preds = %if.else.56, %if.then.49
  %29 = load %union.tree_node*, %union.tree_node** %con0, align 8
  %30 = load %union.tree_node*, %union.tree_node** %con1, align 8
  %call = call i32 @operand_equal_p(%union.tree_node* %29, %union.tree_node* %30, i32 0)
  %tobool58 = icmp ne i32 %call, 0
  br i1 %tobool58, label %if.then.59, label %if.end.60

if.then.59:                                       ; preds = %if.end.57
  %31 = load %union.tree_node*, %union.tree_node** %lit0, align 8
  store %union.tree_node* %31, %union.tree_node** %op0.addr, align 8
  %32 = load %union.tree_node*, %union.tree_node** %lit1, align 8
  store %union.tree_node* %32, %union.tree_node** %op1.addr, align 8
  br label %if.end.60

if.end.60:                                        ; preds = %if.then.59, %if.end.57
  %33 = load %union.tree_node*, %union.tree_node** %restype, align 8
  %34 = load %union.tree_node*, %union.tree_node** %op0.addr, align 8
  %call61 = call %union.tree_node* @convert(%union.tree_node* %33, %union.tree_node* %34)
  %35 = load %union.tree_node*, %union.tree_node** %restype, align 8
  %36 = load %union.tree_node*, %union.tree_node** %op1.addr, align 8
  %call62 = call %union.tree_node* @convert(%union.tree_node* %35, %union.tree_node* %36)
  %call63 = call %union.tree_node* @build_binary_op(i32 60, %union.tree_node* %call61, %union.tree_node* %call62, i32 0)
  store %union.tree_node* %call63, %union.tree_node** %op0.addr, align 8
  %37 = load %union.tree_node*, %union.tree_node** %orig_op1, align 8
  %common64 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %type65 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common64, i32 0, i32 1
  %38 = load %union.tree_node*, %union.tree_node** %type65, align 8
  %common66 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %type67 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common66, i32 0, i32 1
  %39 = load %union.tree_node*, %union.tree_node** %type67, align 8
  %type68 = bitcast %union.tree_node* %39 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type68, i32 0, i32 2
  %40 = load %union.tree_node*, %union.tree_node** %size, align 8
  %cmp69 = icmp ne %union.tree_node* %40, null
  br i1 %cmp69, label %if.end.81, label %lor.lhs.false.70

lor.lhs.false.70:                                 ; preds = %if.end.60
  %41 = load %union.tree_node*, %union.tree_node** %orig_op1, align 8
  %common71 = bitcast %union.tree_node* %41 to %struct.tree_common*
  %type72 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common71, i32 0, i32 1
  %42 = load %union.tree_node*, %union.tree_node** %type72, align 8
  %common73 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %type74 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common73, i32 0, i32 1
  %43 = load %union.tree_node*, %union.tree_node** %type74, align 8
  %common75 = bitcast %union.tree_node* %43 to %struct.tree_common*
  %code76 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common75, i32 0, i32 2
  %bf.load77 = load i32, i32* %code76, align 8
  %bf.clear78 = and i32 %bf.load77, 255
  %cmp79 = icmp eq i32 %bf.clear78, 5
  br i1 %cmp79, label %if.end.81, label %if.then.80

if.then.80:                                       ; preds = %lor.lhs.false.70
  call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i32 0, i32 0))
  br label %if.end.81

if.end.81:                                        ; preds = %if.then.80, %lor.lhs.false.70, %if.end.60
  %44 = load %union.tree_node*, %union.tree_node** %target_type, align 8
  %call82 = call %union.tree_node* @c_size_in_bytes(%union.tree_node* %44)
  store %union.tree_node* %call82, %union.tree_node** %op1.addr, align 8
  %45 = load %union.tree_node*, %union.tree_node** %restype, align 8
  %46 = load %union.tree_node*, %union.tree_node** %op0.addr, align 8
  %47 = load %union.tree_node*, %union.tree_node** %restype, align 8
  %48 = load %union.tree_node*, %union.tree_node** %op1.addr, align 8
  %call83 = call %union.tree_node* @convert(%union.tree_node* %47, %union.tree_node* %48)
  %call84 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 71, %union.tree_node* %45, %union.tree_node* %46, %union.tree_node* %call83)
  store %union.tree_node* %call84, %union.tree_node** %result, align 8
  %49 = load %union.tree_node*, %union.tree_node** %result, align 8
  %call85 = call %union.tree_node* @fold(%union.tree_node* %49)
  store %union.tree_node* %call85, %union.tree_node** %folded, align 8
  %50 = load %union.tree_node*, %union.tree_node** %folded, align 8
  %51 = load %union.tree_node*, %union.tree_node** %result, align 8
  %cmp86 = icmp eq %union.tree_node* %50, %51
  br i1 %cmp86, label %if.then.87, label %if.end.100

if.then.87:                                       ; preds = %if.end.81
  %52 = load %union.tree_node*, %union.tree_node** %op0.addr, align 8
  %common88 = bitcast %union.tree_node* %52 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common88, i32 0, i32 2
  %bf.load89 = load i32, i32* %constant_flag, align 8
  %bf.lshr = lshr i32 %bf.load89, 9
  %bf.clear90 = and i32 %bf.lshr, 1
  %53 = load %union.tree_node*, %union.tree_node** %op1.addr, align 8
  %common91 = bitcast %union.tree_node* %53 to %struct.tree_common*
  %constant_flag92 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common91, i32 0, i32 2
  %bf.load93 = load i32, i32* %constant_flag92, align 8
  %bf.lshr94 = lshr i32 %bf.load93, 9
  %bf.clear95 = and i32 %bf.lshr94, 1
  %and = and i32 %bf.clear90, %bf.clear95
  %54 = load %union.tree_node*, %union.tree_node** %folded, align 8
  %common96 = bitcast %union.tree_node* %54 to %struct.tree_common*
  %constant_flag97 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common96, i32 0, i32 2
  %bf.load98 = load i32, i32* %constant_flag97, align 8
  %bf.value = and i32 %and, 1
  %bf.shl = shl i32 %bf.value, 9
  %bf.clear99 = and i32 %bf.load98, -513
  %bf.set = or i32 %bf.clear99, %bf.shl
  store i32 %bf.set, i32* %constant_flag97, align 8
  br label %if.end.100

if.end.100:                                       ; preds = %if.then.87, %if.end.81
  %55 = load %union.tree_node*, %union.tree_node** %folded, align 8
  ret %union.tree_node* %55
}

declare i32 @integer_zerop(%union.tree_node*) #1

declare i32 @integer_all_onesp(%union.tree_node*) #1

declare %union.tree_node* @truthvalue_conversion(%union.tree_node*) #1

declare i32 @tree_int_cst_sgn(%union.tree_node*) #1

declare %union.tree_node* @get_narrower(%union.tree_node*, i32*) #1

declare %union.tree_node* @signed_or_unsigned_type(i32, %union.tree_node*) #1

declare %union.tree_node* @shorten_compare(%union.tree_node**, %union.tree_node**, %union.tree_node**, i32*) #1

declare i32 @tree_expr_nonnegative_p(%union.tree_node*) #1

declare %union.tree_node* @signed_type(%union.tree_node*) #1

declare i32 @host_integerp(%union.tree_node*, i32) #1

declare i64 @tree_low_cst(%union.tree_node*, i32) #1

declare void @binary_op_error(i32) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_unary_op(i32 %code, %union.tree_node* %xarg, i32 %flag) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %code.addr = alloca i32, align 4
  %xarg.addr = alloca %union.tree_node*, align 8
  %flag.addr = alloca i32, align 4
  %arg = alloca %union.tree_node*, align 8
  %argtype = alloca %union.tree_node*, align 8
  %typecode = alloca i32, align 4
  %val = alloca %union.tree_node*, align 8
  %noconvert = alloca i32, align 4
  %real148 = alloca %union.tree_node*, align 8
  %imag149 = alloca %union.tree_node*, align 8
  %inc = alloca %union.tree_node*, align 8
  %result_type = alloca %union.tree_node*, align 8
  %incremented = alloca %union.tree_node*, align 8
  %modify = alloca %union.tree_node*, align 8
  %value = alloca %union.tree_node*, align 8
  %addr = alloca %union.tree_node*, align 8
  %field = alloca %union.tree_node*, align 8
  store i32 %code, i32* %code.addr, align 4
  store %union.tree_node* %xarg, %union.tree_node** %xarg.addr, align 8
  store i32 %flag, i32* %flag.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** %xarg.addr, align 8
  store %union.tree_node* %0, %union.tree_node** %arg, align 8
  store %union.tree_node* null, %union.tree_node** %argtype, align 8
  %1 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common = bitcast %union.tree_node* %1 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load = load i32, i32* %code2, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %typecode, align 4
  %3 = load i32, i32* %flag.addr, align 4
  store i32 %3, i32* %noconvert, align 4
  %4 = load i32, i32* %typecode, align 4
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %5, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %typecode, align 4
  %cmp3 = icmp eq i32 %6, 10
  br i1 %cmp3, label %if.then.5, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %7 = load i32, i32* %typecode, align 4
  %cmp4 = icmp eq i32 %7, 11
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %lor.lhs.false, %if.end
  store i32 6, i32* %typecode, align 4
  br label %if.end.6

if.end.6:                                         ; preds = %if.then.5, %lor.lhs.false
  %8 = load i32, i32* %code.addr, align 4
  switch i32 %8, label %sw.default.521 [
    i32 114, label %sw.bb
    i32 77, label %sw.bb.16
    i32 90, label %sw.bb.29
    i32 80, label %sw.bb.49
    i32 126, label %sw.bb.62
    i32 96, label %sw.bb.75
    i32 115, label %sw.bb.90
    i32 127, label %sw.bb.91
    i32 128, label %sw.bb.114
    i32 130, label %sw.bb.141
    i32 132, label %sw.bb.141
    i32 129, label %sw.bb.141
    i32 131, label %sw.bb.141
    i32 121, label %sw.bb.361
  ]

sw.bb:                                            ; preds = %if.end.6
  %9 = load i32, i32* %typecode, align 4
  %cmp7 = icmp eq i32 %9, 6
  br i1 %cmp7, label %if.else, label %lor.lhs.false.8

lor.lhs.false.8:                                  ; preds = %sw.bb
  %10 = load i32, i32* %typecode, align 4
  %cmp9 = icmp eq i32 %10, 7
  br i1 %cmp9, label %if.else, label %lor.lhs.false.10

lor.lhs.false.10:                                 ; preds = %lor.lhs.false.8
  %11 = load i32, i32* %typecode, align 4
  %cmp11 = icmp eq i32 %11, 8
  br i1 %cmp11, label %if.else, label %if.then.12

if.then.12:                                       ; preds = %lor.lhs.false.10
  call void (i8*, ...) @error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.63, i32 0, i32 0))
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %12, %union.tree_node** %retval
  br label %return

if.else:                                          ; preds = %lor.lhs.false.10, %lor.lhs.false.8, %sw.bb
  %13 = load i32, i32* %noconvert, align 4
  %tobool = icmp ne i32 %13, 0
  br i1 %tobool, label %if.end.14, label %if.then.13

if.then.13:                                       ; preds = %if.else
  %14 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call = call %union.tree_node* @default_conversion(%union.tree_node* %14)
  store %union.tree_node* %call, %union.tree_node** %arg, align 8
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.13, %if.else
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14
  br label %sw.epilog.522

sw.bb.16:                                         ; preds = %if.end.6
  %15 = load i32, i32* %typecode, align 4
  %cmp17 = icmp eq i32 %15, 6
  br i1 %cmp17, label %if.else.23, label %lor.lhs.false.18

lor.lhs.false.18:                                 ; preds = %sw.bb.16
  %16 = load i32, i32* %typecode, align 4
  %cmp19 = icmp eq i32 %16, 7
  br i1 %cmp19, label %if.else.23, label %lor.lhs.false.20

lor.lhs.false.20:                                 ; preds = %lor.lhs.false.18
  %17 = load i32, i32* %typecode, align 4
  %cmp21 = icmp eq i32 %17, 8
  br i1 %cmp21, label %if.else.23, label %if.then.22

if.then.22:                                       ; preds = %lor.lhs.false.20
  call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.64, i32 0, i32 0))
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %18, %union.tree_node** %retval
  br label %return

if.else.23:                                       ; preds = %lor.lhs.false.20, %lor.lhs.false.18, %sw.bb.16
  %19 = load i32, i32* %noconvert, align 4
  %tobool24 = icmp ne i32 %19, 0
  br i1 %tobool24, label %if.end.27, label %if.then.25

if.then.25:                                       ; preds = %if.else.23
  %20 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call26 = call %union.tree_node* @default_conversion(%union.tree_node* %20)
  store %union.tree_node* %call26, %union.tree_node** %arg, align 8
  br label %if.end.27

if.end.27:                                        ; preds = %if.then.25, %if.else.23
  br label %if.end.28

if.end.28:                                        ; preds = %if.end.27
  br label %sw.epilog.522

sw.bb.29:                                         ; preds = %if.end.6
  %21 = load i32, i32* %typecode, align 4
  %cmp30 = icmp eq i32 %21, 8
  br i1 %cmp30, label %if.then.31, label %if.else.39

if.then.31:                                       ; preds = %sw.bb.29
  store i32 126, i32* %code.addr, align 4
  %22 = load i32, i32* @pedantic, align 4
  %tobool32 = icmp ne i32 %22, 0
  br i1 %tobool32, label %if.then.33, label %if.end.34

if.then.33:                                       ; preds = %if.then.31
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.65, i32 0, i32 0))
  br label %if.end.34

if.end.34:                                        ; preds = %if.then.33, %if.then.31
  %23 = load i32, i32* %noconvert, align 4
  %tobool35 = icmp ne i32 %23, 0
  br i1 %tobool35, label %if.end.38, label %if.then.36

if.then.36:                                       ; preds = %if.end.34
  %24 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call37 = call %union.tree_node* @default_conversion(%union.tree_node* %24)
  store %union.tree_node* %call37, %union.tree_node** %arg, align 8
  br label %if.end.38

if.end.38:                                        ; preds = %if.then.36, %if.end.34
  br label %if.end.48

if.else.39:                                       ; preds = %sw.bb.29
  %25 = load i32, i32* %typecode, align 4
  %cmp40 = icmp ne i32 %25, 6
  br i1 %cmp40, label %if.then.41, label %if.else.42

if.then.41:                                       ; preds = %if.else.39
  call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.66, i32 0, i32 0))
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %26, %union.tree_node** %retval
  br label %return

if.else.42:                                       ; preds = %if.else.39
  %27 = load i32, i32* %noconvert, align 4
  %tobool43 = icmp ne i32 %27, 0
  br i1 %tobool43, label %if.end.46, label %if.then.44

if.then.44:                                       ; preds = %if.else.42
  %28 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call45 = call %union.tree_node* @default_conversion(%union.tree_node* %28)
  store %union.tree_node* %call45, %union.tree_node** %arg, align 8
  br label %if.end.46

if.end.46:                                        ; preds = %if.then.44, %if.else.42
  br label %if.end.47

if.end.47:                                        ; preds = %if.end.46
  br label %if.end.48

if.end.48:                                        ; preds = %if.end.47, %if.end.38
  br label %sw.epilog.522

sw.bb.49:                                         ; preds = %if.end.6
  %29 = load i32, i32* %typecode, align 4
  %cmp50 = icmp eq i32 %29, 6
  br i1 %cmp50, label %if.else.56, label %lor.lhs.false.51

lor.lhs.false.51:                                 ; preds = %sw.bb.49
  %30 = load i32, i32* %typecode, align 4
  %cmp52 = icmp eq i32 %30, 7
  br i1 %cmp52, label %if.else.56, label %lor.lhs.false.53

lor.lhs.false.53:                                 ; preds = %lor.lhs.false.51
  %31 = load i32, i32* %typecode, align 4
  %cmp54 = icmp eq i32 %31, 8
  br i1 %cmp54, label %if.else.56, label %if.then.55

if.then.55:                                       ; preds = %lor.lhs.false.53
  call void (i8*, ...) @error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.67, i32 0, i32 0))
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %32, %union.tree_node** %retval
  br label %return

if.else.56:                                       ; preds = %lor.lhs.false.53, %lor.lhs.false.51, %sw.bb.49
  %33 = load i32, i32* %noconvert, align 4
  %tobool57 = icmp ne i32 %33, 0
  br i1 %tobool57, label %if.end.60, label %if.then.58

if.then.58:                                       ; preds = %if.else.56
  %34 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call59 = call %union.tree_node* @default_conversion(%union.tree_node* %34)
  store %union.tree_node* %call59, %union.tree_node** %arg, align 8
  br label %if.end.60

if.end.60:                                        ; preds = %if.then.58, %if.else.56
  br label %if.end.61

if.end.61:                                        ; preds = %if.end.60
  br label %sw.epilog.522

sw.bb.62:                                         ; preds = %if.end.6
  %35 = load i32, i32* %typecode, align 4
  %cmp63 = icmp eq i32 %35, 6
  br i1 %cmp63, label %if.else.69, label %lor.lhs.false.64

lor.lhs.false.64:                                 ; preds = %sw.bb.62
  %36 = load i32, i32* %typecode, align 4
  %cmp65 = icmp eq i32 %36, 7
  br i1 %cmp65, label %if.else.69, label %lor.lhs.false.66

lor.lhs.false.66:                                 ; preds = %lor.lhs.false.64
  %37 = load i32, i32* %typecode, align 4
  %cmp67 = icmp eq i32 %37, 8
  br i1 %cmp67, label %if.else.69, label %if.then.68

if.then.68:                                       ; preds = %lor.lhs.false.66
  call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.68, i32 0, i32 0))
  %38 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %38, %union.tree_node** %retval
  br label %return

if.else.69:                                       ; preds = %lor.lhs.false.66, %lor.lhs.false.64, %sw.bb.62
  %39 = load i32, i32* %noconvert, align 4
  %tobool70 = icmp ne i32 %39, 0
  br i1 %tobool70, label %if.end.73, label %if.then.71

if.then.71:                                       ; preds = %if.else.69
  %40 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call72 = call %union.tree_node* @default_conversion(%union.tree_node* %40)
  store %union.tree_node* %call72, %union.tree_node** %arg, align 8
  br label %if.end.73

if.end.73:                                        ; preds = %if.then.71, %if.else.69
  br label %if.end.74

if.end.74:                                        ; preds = %if.end.73
  br label %sw.epilog.522

sw.bb.75:                                         ; preds = %if.end.6
  %41 = load i32, i32* %typecode, align 4
  %cmp76 = icmp ne i32 %41, 6
  br i1 %cmp76, label %land.lhs.true, label %if.end.87

land.lhs.true:                                    ; preds = %sw.bb.75
  %42 = load i32, i32* %typecode, align 4
  %cmp77 = icmp ne i32 %42, 7
  br i1 %cmp77, label %land.lhs.true.78, label %if.end.87

land.lhs.true.78:                                 ; preds = %land.lhs.true
  %43 = load i32, i32* %typecode, align 4
  %cmp79 = icmp ne i32 %43, 13
  br i1 %cmp79, label %land.lhs.true.80, label %if.end.87

land.lhs.true.80:                                 ; preds = %land.lhs.true.78
  %44 = load i32, i32* %typecode, align 4
  %cmp81 = icmp ne i32 %44, 8
  br i1 %cmp81, label %land.lhs.true.82, label %if.end.87

land.lhs.true.82:                                 ; preds = %land.lhs.true.80
  %45 = load i32, i32* %typecode, align 4
  %cmp83 = icmp ne i32 %45, 18
  br i1 %cmp83, label %land.lhs.true.84, label %if.end.87

land.lhs.true.84:                                 ; preds = %land.lhs.true.82
  %46 = load i32, i32* %typecode, align 4
  %cmp85 = icmp ne i32 %46, 23
  br i1 %cmp85, label %if.then.86, label %if.end.87

if.then.86:                                       ; preds = %land.lhs.true.84
  call void (i8*, ...) @error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.69, i32 0, i32 0))
  %47 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %47, %union.tree_node** %retval
  br label %return

if.end.87:                                        ; preds = %land.lhs.true.84, %land.lhs.true.82, %land.lhs.true.80, %land.lhs.true.78, %land.lhs.true, %sw.bb.75
  %48 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call88 = call %union.tree_node* @truthvalue_conversion(%union.tree_node* %48)
  store %union.tree_node* %call88, %union.tree_node** %arg, align 8
  %49 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call89 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %49)
  store %union.tree_node* %call89, %union.tree_node** %retval
  br label %return

sw.bb.90:                                         ; preds = %if.end.6
  br label %sw.epilog.522

sw.bb.91:                                         ; preds = %if.end.6
  %50 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common92 = bitcast %union.tree_node* %50 to %struct.tree_common*
  %code93 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common92, i32 0, i32 2
  %bf.load94 = load i32, i32* %code93, align 8
  %bf.clear95 = and i32 %bf.load94, 255
  %cmp96 = icmp eq i32 %bf.clear95, 27
  br i1 %cmp96, label %if.then.97, label %if.else.98

if.then.97:                                       ; preds = %sw.bb.91
  %51 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %complex = bitcast %union.tree_node* %51 to %struct.tree_complex*
  %real = getelementptr inbounds %struct.tree_complex, %struct.tree_complex* %complex, i32 0, i32 2
  %52 = load %union.tree_node*, %union.tree_node** %real, align 8
  store %union.tree_node* %52, %union.tree_node** %retval
  br label %return

if.else.98:                                       ; preds = %sw.bb.91
  %53 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common99 = bitcast %union.tree_node* %53 to %struct.tree_common*
  %type100 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common99, i32 0, i32 1
  %54 = load %union.tree_node*, %union.tree_node** %type100, align 8
  %common101 = bitcast %union.tree_node* %54 to %struct.tree_common*
  %code102 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common101, i32 0, i32 2
  %bf.load103 = load i32, i32* %code102, align 8
  %bf.clear104 = and i32 %bf.load103, 255
  %cmp105 = icmp eq i32 %bf.clear104, 8
  br i1 %cmp105, label %if.then.106, label %if.else.113

if.then.106:                                      ; preds = %if.else.98
  %55 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common107 = bitcast %union.tree_node* %55 to %struct.tree_common*
  %type108 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common107, i32 0, i32 1
  %56 = load %union.tree_node*, %union.tree_node** %type108, align 8
  %common109 = bitcast %union.tree_node* %56 to %struct.tree_common*
  %type110 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common109, i32 0, i32 1
  %57 = load %union.tree_node*, %union.tree_node** %type110, align 8
  %58 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call111 = call %union.tree_node* @build1(i32 127, %union.tree_node* %57, %union.tree_node* %58)
  %call112 = call %union.tree_node* @fold(%union.tree_node* %call111)
  store %union.tree_node* %call112, %union.tree_node** %retval
  br label %return

if.else.113:                                      ; preds = %if.else.98
  %59 = load %union.tree_node*, %union.tree_node** %arg, align 8
  store %union.tree_node* %59, %union.tree_node** %retval
  br label %return

sw.bb.114:                                        ; preds = %if.end.6
  %60 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common115 = bitcast %union.tree_node* %60 to %struct.tree_common*
  %code116 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common115, i32 0, i32 2
  %bf.load117 = load i32, i32* %code116, align 8
  %bf.clear118 = and i32 %bf.load117, 255
  %cmp119 = icmp eq i32 %bf.clear118, 27
  br i1 %cmp119, label %if.then.120, label %if.else.122

if.then.120:                                      ; preds = %sw.bb.114
  %61 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %complex121 = bitcast %union.tree_node* %61 to %struct.tree_complex*
  %imag = getelementptr inbounds %struct.tree_complex, %struct.tree_complex* %complex121, i32 0, i32 3
  %62 = load %union.tree_node*, %union.tree_node** %imag, align 8
  store %union.tree_node* %62, %union.tree_node** %retval
  br label %return

if.else.122:                                      ; preds = %sw.bb.114
  %63 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common123 = bitcast %union.tree_node* %63 to %struct.tree_common*
  %type124 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common123, i32 0, i32 1
  %64 = load %union.tree_node*, %union.tree_node** %type124, align 8
  %common125 = bitcast %union.tree_node* %64 to %struct.tree_common*
  %code126 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common125, i32 0, i32 2
  %bf.load127 = load i32, i32* %code126, align 8
  %bf.clear128 = and i32 %bf.load127, 255
  %cmp129 = icmp eq i32 %bf.clear128, 8
  br i1 %cmp129, label %if.then.130, label %if.else.137

if.then.130:                                      ; preds = %if.else.122
  %65 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common131 = bitcast %union.tree_node* %65 to %struct.tree_common*
  %type132 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common131, i32 0, i32 1
  %66 = load %union.tree_node*, %union.tree_node** %type132, align 8
  %common133 = bitcast %union.tree_node* %66 to %struct.tree_common*
  %type134 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common133, i32 0, i32 1
  %67 = load %union.tree_node*, %union.tree_node** %type134, align 8
  %68 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call135 = call %union.tree_node* @build1(i32 128, %union.tree_node* %67, %union.tree_node* %68)
  %call136 = call %union.tree_node* @fold(%union.tree_node* %call135)
  store %union.tree_node* %call136, %union.tree_node** %retval
  br label %return

if.else.137:                                      ; preds = %if.else.122
  %69 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common138 = bitcast %union.tree_node* %69 to %struct.tree_common*
  %type139 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common138, i32 0, i32 1
  %70 = load %union.tree_node*, %union.tree_node** %type139, align 8
  %71 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call140 = call %union.tree_node* @convert(%union.tree_node* %70, %union.tree_node* %71)
  store %union.tree_node* %call140, %union.tree_node** %retval
  br label %return

sw.bb.141:                                        ; preds = %if.end.6, %if.end.6, %if.end.6, %if.end.6
  %72 = load i32, i32* %code.addr, align 4
  %73 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call142 = call %union.tree_node* @unary_complex_lvalue(i32 %72, %union.tree_node* %73, i32 0)
  store %union.tree_node* %call142, %union.tree_node** %val, align 8
  %74 = load %union.tree_node*, %union.tree_node** %val, align 8
  %cmp143 = icmp ne %union.tree_node* %74, null
  br i1 %cmp143, label %if.then.144, label %if.end.145

if.then.144:                                      ; preds = %sw.bb.141
  %75 = load %union.tree_node*, %union.tree_node** %val, align 8
  store %union.tree_node* %75, %union.tree_node** %retval
  br label %return

if.end.145:                                       ; preds = %sw.bb.141
  %76 = load i32, i32* %typecode, align 4
  %cmp146 = icmp eq i32 %76, 8
  br i1 %cmp146, label %if.then.147, label %if.end.160

if.then.147:                                      ; preds = %if.end.145
  %77 = load i32, i32* @pedantic, align 4
  %tobool150 = icmp ne i32 %77, 0
  br i1 %tobool150, label %if.then.151, label %if.end.152

if.then.151:                                      ; preds = %if.then.147
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.70, i32 0, i32 0))
  br label %if.end.152

if.end.152:                                       ; preds = %if.then.151, %if.then.147
  %78 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call153 = call %union.tree_node* @stabilize_reference(%union.tree_node* %78)
  store %union.tree_node* %call153, %union.tree_node** %arg, align 8
  %79 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call154 = call %union.tree_node* @build_unary_op(i32 127, %union.tree_node* %79, i32 1)
  store %union.tree_node* %call154, %union.tree_node** %real148, align 8
  %80 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call155 = call %union.tree_node* @build_unary_op(i32 128, %union.tree_node* %80, i32 1)
  store %union.tree_node* %call155, %union.tree_node** %imag149, align 8
  %81 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common156 = bitcast %union.tree_node* %81 to %struct.tree_common*
  %type157 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common156, i32 0, i32 1
  %82 = load %union.tree_node*, %union.tree_node** %type157, align 8
  %83 = load i32, i32* %code.addr, align 4
  %84 = load %union.tree_node*, %union.tree_node** %real148, align 8
  %call158 = call %union.tree_node* @build_unary_op(i32 %83, %union.tree_node* %84, i32 1)
  %85 = load %union.tree_node*, %union.tree_node** %imag149, align 8
  %call159 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 125, %union.tree_node* %82, %union.tree_node* %call158, %union.tree_node* %85)
  store %union.tree_node* %call159, %union.tree_node** %retval
  br label %return

if.end.160:                                       ; preds = %if.end.145
  %86 = load i32, i32* %typecode, align 4
  %cmp161 = icmp ne i32 %86, 13
  br i1 %cmp161, label %land.lhs.true.162, label %if.end.173

land.lhs.true.162:                                ; preds = %if.end.160
  %87 = load i32, i32* %typecode, align 4
  %cmp163 = icmp ne i32 %87, 6
  br i1 %cmp163, label %land.lhs.true.164, label %if.end.173

land.lhs.true.164:                                ; preds = %land.lhs.true.162
  %88 = load i32, i32* %typecode, align 4
  %cmp165 = icmp ne i32 %88, 7
  br i1 %cmp165, label %if.then.166, label %if.end.173

if.then.166:                                      ; preds = %land.lhs.true.164
  %89 = load i32, i32* %code.addr, align 4
  %cmp167 = icmp eq i32 %89, 130
  br i1 %cmp167, label %if.then.170, label %lor.lhs.false.168

lor.lhs.false.168:                                ; preds = %if.then.166
  %90 = load i32, i32* %code.addr, align 4
  %cmp169 = icmp eq i32 %90, 132
  br i1 %cmp169, label %if.then.170, label %if.else.171

if.then.170:                                      ; preds = %lor.lhs.false.168, %if.then.166
  call void (i8*, ...) @error(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.71, i32 0, i32 0))
  br label %if.end.172

if.else.171:                                      ; preds = %lor.lhs.false.168
  call void (i8*, ...) @error(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.72, i32 0, i32 0))
  br label %if.end.172

if.end.172:                                       ; preds = %if.else.171, %if.then.170
  %91 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %91, %union.tree_node** %retval
  br label %return

if.end.173:                                       ; preds = %land.lhs.true.164, %land.lhs.true.162, %if.end.160
  %92 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common174 = bitcast %union.tree_node* %92 to %struct.tree_common*
  %type175 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common174, i32 0, i32 1
  %93 = load %union.tree_node*, %union.tree_node** %type175, align 8
  store %union.tree_node* %93, %union.tree_node** %result_type, align 8
  %94 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call176 = call %union.tree_node* @get_unwidened(%union.tree_node* %94, %union.tree_node* null)
  store %union.tree_node* %call176, %union.tree_node** %arg, align 8
  %95 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common177 = bitcast %union.tree_node* %95 to %struct.tree_common*
  %type178 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common177, i32 0, i32 1
  %96 = load %union.tree_node*, %union.tree_node** %type178, align 8
  store %union.tree_node* %96, %union.tree_node** %argtype, align 8
  %97 = load i32, i32* %typecode, align 4
  %cmp179 = icmp eq i32 %97, 13
  br i1 %cmp179, label %if.then.180, label %if.else.232

if.then.180:                                      ; preds = %if.end.173
  %98 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %common181 = bitcast %union.tree_node* %98 to %struct.tree_common*
  %type182 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common181, i32 0, i32 1
  %99 = load %union.tree_node*, %union.tree_node** %type182, align 8
  %type183 = bitcast %union.tree_node* %99 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type183, i32 0, i32 2
  %100 = load %union.tree_node*, %union.tree_node** %size, align 8
  %cmp184 = icmp ne %union.tree_node* %100, null
  br i1 %cmp184, label %if.else.200, label %lor.lhs.false.185

lor.lhs.false.185:                                ; preds = %if.then.180
  %101 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %common186 = bitcast %union.tree_node* %101 to %struct.tree_common*
  %type187 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common186, i32 0, i32 1
  %102 = load %union.tree_node*, %union.tree_node** %type187, align 8
  %common188 = bitcast %union.tree_node* %102 to %struct.tree_common*
  %code189 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common188, i32 0, i32 2
  %bf.load190 = load i32, i32* %code189, align 8
  %bf.clear191 = and i32 %bf.load190, 255
  %cmp192 = icmp eq i32 %bf.clear191, 5
  br i1 %cmp192, label %if.else.200, label %if.then.193

if.then.193:                                      ; preds = %lor.lhs.false.185
  %103 = load i32, i32* %code.addr, align 4
  %cmp194 = icmp eq i32 %103, 130
  br i1 %cmp194, label %if.then.197, label %lor.lhs.false.195

lor.lhs.false.195:                                ; preds = %if.then.193
  %104 = load i32, i32* %code.addr, align 4
  %cmp196 = icmp eq i32 %104, 132
  br i1 %cmp196, label %if.then.197, label %if.else.198

if.then.197:                                      ; preds = %lor.lhs.false.195, %if.then.193
  call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.73, i32 0, i32 0))
  br label %if.end.199

if.else.198:                                      ; preds = %lor.lhs.false.195
  call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.74, i32 0, i32 0))
  br label %if.end.199

if.end.199:                                       ; preds = %if.else.198, %if.then.197
  br label %if.end.228

if.else.200:                                      ; preds = %lor.lhs.false.185, %if.then.180
  %105 = load i32, i32* @pedantic, align 4
  %tobool201 = icmp ne i32 %105, 0
  br i1 %tobool201, label %land.lhs.true.204, label %lor.lhs.false.202

lor.lhs.false.202:                                ; preds = %if.else.200
  %106 = load i32, i32* @warn_pointer_arith, align 4
  %tobool203 = icmp ne i32 %106, 0
  br i1 %tobool203, label %land.lhs.true.204, label %if.end.227

land.lhs.true.204:                                ; preds = %lor.lhs.false.202, %if.else.200
  %107 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %common205 = bitcast %union.tree_node* %107 to %struct.tree_common*
  %type206 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common205, i32 0, i32 1
  %108 = load %union.tree_node*, %union.tree_node** %type206, align 8
  %common207 = bitcast %union.tree_node* %108 to %struct.tree_common*
  %code208 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common207, i32 0, i32 2
  %bf.load209 = load i32, i32* %code208, align 8
  %bf.clear210 = and i32 %bf.load209, 255
  %cmp211 = icmp eq i32 %bf.clear210, 23
  br i1 %cmp211, label %if.then.220, label %lor.lhs.false.212

lor.lhs.false.212:                                ; preds = %land.lhs.true.204
  %109 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %common213 = bitcast %union.tree_node* %109 to %struct.tree_common*
  %type214 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common213, i32 0, i32 1
  %110 = load %union.tree_node*, %union.tree_node** %type214, align 8
  %common215 = bitcast %union.tree_node* %110 to %struct.tree_common*
  %code216 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common215, i32 0, i32 2
  %bf.load217 = load i32, i32* %code216, align 8
  %bf.clear218 = and i32 %bf.load217, 255
  %cmp219 = icmp eq i32 %bf.clear218, 5
  br i1 %cmp219, label %if.then.220, label %if.end.227

if.then.220:                                      ; preds = %lor.lhs.false.212, %land.lhs.true.204
  %111 = load i32, i32* %code.addr, align 4
  %cmp221 = icmp eq i32 %111, 130
  br i1 %cmp221, label %if.then.224, label %lor.lhs.false.222

lor.lhs.false.222:                                ; preds = %if.then.220
  %112 = load i32, i32* %code.addr, align 4
  %cmp223 = icmp eq i32 %112, 132
  br i1 %cmp223, label %if.then.224, label %if.else.225

if.then.224:                                      ; preds = %lor.lhs.false.222, %if.then.220
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.71, i32 0, i32 0))
  br label %if.end.226

if.else.225:                                      ; preds = %lor.lhs.false.222
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.72, i32 0, i32 0))
  br label %if.end.226

if.end.226:                                       ; preds = %if.else.225, %if.then.224
  br label %if.end.227

if.end.227:                                       ; preds = %if.end.226, %lor.lhs.false.212, %lor.lhs.false.202
  br label %if.end.228

if.end.228:                                       ; preds = %if.end.227, %if.end.199
  %113 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %common229 = bitcast %union.tree_node* %113 to %struct.tree_common*
  %type230 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common229, i32 0, i32 1
  %114 = load %union.tree_node*, %union.tree_node** %type230, align 8
  %call231 = call %union.tree_node* @c_size_in_bytes(%union.tree_node* %114)
  store %union.tree_node* %call231, %union.tree_node** %inc, align 8
  br label %if.end.233

if.else.232:                                      ; preds = %if.end.173
  %115 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  store %union.tree_node* %115, %union.tree_node** %inc, align 8
  br label %if.end.233

if.end.233:                                       ; preds = %if.else.232, %if.end.228
  %116 = load %union.tree_node*, %union.tree_node** %argtype, align 8
  %117 = load %union.tree_node*, %union.tree_node** %inc, align 8
  %call234 = call %union.tree_node* @convert(%union.tree_node* %116, %union.tree_node* %117)
  store %union.tree_node* %call234, %union.tree_node** %inc, align 8
  br label %while.body

while.body:                                       ; preds = %if.end.233, %sw.epilog
  %118 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common235 = bitcast %union.tree_node* %118 to %struct.tree_common*
  %code236 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common235, i32 0, i32 2
  %bf.load237 = load i32, i32* %code236, align 8
  %bf.clear238 = and i32 %bf.load237, 255
  switch i32 %bf.clear238, label %sw.default [
    i32 115, label %sw.bb.239
    i32 114, label %sw.bb.239
    i32 76, label %sw.bb.239
    i32 72, label %sw.bb.239
    i32 74, label %sw.bb.239
    i32 75, label %sw.bb.239
    i32 73, label %sw.bb.239
  ]

sw.bb.239:                                        ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body
  call void @pedantic_lvalue_warning(i32 114)
  %119 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common240 = bitcast %union.tree_node* %119 to %struct.tree_common*
  %type241 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common240, i32 0, i32 1
  %120 = load %union.tree_node*, %union.tree_node** %type241, align 8
  %common242 = bitcast %union.tree_node* %120 to %struct.tree_common*
  %code243 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common242, i32 0, i32 2
  %bf.load244 = load i32, i32* %code243, align 8
  %bf.clear245 = and i32 %bf.load244, 255
  %121 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %exp = bitcast %union.tree_node* %121 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %122 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %common246 = bitcast %union.tree_node* %122 to %struct.tree_common*
  %type247 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common246, i32 0, i32 1
  %123 = load %union.tree_node*, %union.tree_node** %type247, align 8
  %common248 = bitcast %union.tree_node* %123 to %struct.tree_common*
  %code249 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common248, i32 0, i32 2
  %bf.load250 = load i32, i32* %code249, align 8
  %bf.clear251 = and i32 %bf.load250, 255
  %cmp252 = icmp eq i32 %bf.clear245, %bf.clear251
  br i1 %cmp252, label %land.lhs.true.253, label %if.else.274

land.lhs.true.253:                                ; preds = %sw.bb.239
  %124 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common254 = bitcast %union.tree_node* %124 to %struct.tree_common*
  %type255 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common254, i32 0, i32 1
  %125 = load %union.tree_node*, %union.tree_node** %type255, align 8
  %type256 = bitcast %union.tree_node* %125 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type256, i32 0, i32 6
  %bf.load257 = load i32, i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load257, 9
  %bf.clear258 = and i32 %bf.lshr, 127
  %126 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %exp259 = bitcast %union.tree_node* %126 to %struct.tree_exp*
  %operands260 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp259, i32 0, i32 2
  %arrayidx261 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands260, i32 0, i64 0
  %127 = load %union.tree_node*, %union.tree_node** %arrayidx261, align 8
  %common262 = bitcast %union.tree_node* %127 to %struct.tree_common*
  %type263 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common262, i32 0, i32 1
  %128 = load %union.tree_node*, %union.tree_node** %type263, align 8
  %type264 = bitcast %union.tree_node* %128 to %struct.tree_type*
  %mode265 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type264, i32 0, i32 6
  %bf.load266 = load i32, i32* %mode265, align 4
  %bf.lshr267 = lshr i32 %bf.load266, 9
  %bf.clear268 = and i32 %bf.lshr267, 127
  %cmp269 = icmp eq i32 %bf.clear258, %bf.clear268
  br i1 %cmp269, label %if.then.270, label %if.else.274

if.then.270:                                      ; preds = %land.lhs.true.253
  %129 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %exp271 = bitcast %union.tree_node* %129 to %struct.tree_exp*
  %operands272 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp271, i32 0, i32 2
  %arrayidx273 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands272, i32 0, i64 0
  %130 = load %union.tree_node*, %union.tree_node** %arrayidx273, align 8
  store %union.tree_node* %130, %union.tree_node** %arg, align 8
  br label %if.end.308

if.else.274:                                      ; preds = %land.lhs.true.253, %sw.bb.239
  %131 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common275 = bitcast %union.tree_node* %131 to %struct.tree_common*
  %type276 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common275, i32 0, i32 1
  %132 = load %union.tree_node*, %union.tree_node** %type276, align 8
  %common277 = bitcast %union.tree_node* %132 to %struct.tree_common*
  %code278 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common277, i32 0, i32 2
  %bf.load279 = load i32, i32* %code278, align 8
  %bf.clear280 = and i32 %bf.load279, 255
  %cmp281 = icmp eq i32 %bf.clear280, 11
  br i1 %cmp281, label %if.then.282, label %if.else.284

if.then.282:                                      ; preds = %if.else.274
  %133 = load i32, i32* %code.addr, align 4
  %134 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call283 = call %union.tree_node* @boolean_increment(i32 %133, %union.tree_node* %134)
  store %union.tree_node* %call283, %union.tree_node** %value, align 8
  br label %if.end.303

if.else.284:                                      ; preds = %if.else.274
  %135 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call285 = call %union.tree_node* @stabilize_reference(%union.tree_node* %135)
  store %union.tree_node* %call285, %union.tree_node** %arg, align 8
  %136 = load i32, i32* %code.addr, align 4
  %cmp286 = icmp eq i32 %136, 130
  br i1 %cmp286, label %if.then.289, label %lor.lhs.false.287

lor.lhs.false.287:                                ; preds = %if.else.284
  %137 = load i32, i32* %code.addr, align 4
  %cmp288 = icmp eq i32 %137, 129
  br i1 %cmp288, label %if.then.289, label %if.else.290

if.then.289:                                      ; preds = %lor.lhs.false.287, %if.else.284
  %138 = load %union.tree_node*, %union.tree_node** %arg, align 8
  store %union.tree_node* %138, %union.tree_node** %value, align 8
  br label %if.end.292

if.else.290:                                      ; preds = %lor.lhs.false.287
  %139 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call291 = call %union.tree_node* @save_expr(%union.tree_node* %139)
  store %union.tree_node* %call291, %union.tree_node** %value, align 8
  br label %if.end.292

if.end.292:                                       ; preds = %if.else.290, %if.then.289
  %140 = load i32, i32* %code.addr, align 4
  %cmp293 = icmp eq i32 %140, 130
  br i1 %cmp293, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end.292
  %141 = load i32, i32* %code.addr, align 4
  %cmp294 = icmp eq i32 %141, 132
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end.292
  %142 = phi i1 [ true, %if.end.292 ], [ %cmp294, %lor.rhs ]
  %cond = select i1 %142, i32 59, i32 60
  %143 = load %union.tree_node*, %union.tree_node** %argtype, align 8
  %144 = load %union.tree_node*, %union.tree_node** %value, align 8
  %145 = load %union.tree_node*, %union.tree_node** %inc, align 8
  %call295 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %cond, %union.tree_node* %143, %union.tree_node* %144, %union.tree_node* %145)
  store %union.tree_node* %call295, %union.tree_node** %incremented, align 8
  %146 = load %union.tree_node*, %union.tree_node** %incremented, align 8
  %common296 = bitcast %union.tree_node* %146 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common296, i32 0, i32 2
  %bf.load297 = load i32, i32* %side_effects_flag, align 8
  %bf.clear298 = and i32 %bf.load297, -257
  %bf.set = or i32 %bf.clear298, 256
  store i32 %bf.set, i32* %side_effects_flag, align 8
  %147 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %148 = load %union.tree_node*, %union.tree_node** %incremented, align 8
  %call299 = call %union.tree_node* @build_modify_expr(%union.tree_node* %147, i32 115, %union.tree_node* %148)
  store %union.tree_node* %call299, %union.tree_node** %modify, align 8
  %149 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common300 = bitcast %union.tree_node* %149 to %struct.tree_common*
  %type301 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common300, i32 0, i32 1
  %150 = load %union.tree_node*, %union.tree_node** %type301, align 8
  %151 = load %union.tree_node*, %union.tree_node** %modify, align 8
  %152 = load %union.tree_node*, %union.tree_node** %value, align 8
  %call302 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %150, %union.tree_node* %151, %union.tree_node* %152)
  store %union.tree_node* %call302, %union.tree_node** %value, align 8
  br label %if.end.303

if.end.303:                                       ; preds = %lor.end, %if.then.282
  %153 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common304 = bitcast %union.tree_node* %153 to %struct.tree_common*
  %used_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common304, i32 0, i32 2
  %bf.load305 = load i32, i32* %used_flag, align 8
  %bf.clear306 = and i32 %bf.load305, -65537
  %bf.set307 = or i32 %bf.clear306, 65536
  store i32 %bf.set307, i32* %used_flag, align 8
  %154 = load %union.tree_node*, %union.tree_node** %value, align 8
  store %union.tree_node* %154, %union.tree_node** %retval
  br label %return

if.end.308:                                       ; preds = %if.then.270
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  br label %give_up

sw.epilog:                                        ; preds = %if.end.308
  br label %while.body

give_up:                                          ; preds = %sw.default
  %155 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %156 = load i32, i32* %code.addr, align 4
  %cmp309 = icmp eq i32 %156, 130
  br i1 %cmp309, label %lor.end.312, label %lor.rhs.310

lor.rhs.310:                                      ; preds = %give_up
  %157 = load i32, i32* %code.addr, align 4
  %cmp311 = icmp eq i32 %157, 132
  br label %lor.end.312

lor.end.312:                                      ; preds = %lor.rhs.310, %give_up
  %158 = phi i1 [ true, %give_up ], [ %cmp311, %lor.rhs.310 ]
  %cond313 = select i1 %158, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.76, i32 0, i32 0)
  %call314 = call i32 @lvalue_or_else(%union.tree_node* %155, i8* %cond313)
  %tobool315 = icmp ne i32 %call314, 0
  br i1 %tobool315, label %if.end.317, label %if.then.316

if.then.316:                                      ; preds = %lor.end.312
  %159 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %159, %union.tree_node** %retval
  br label %return

if.end.317:                                       ; preds = %lor.end.312
  %160 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common318 = bitcast %union.tree_node* %160 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common318, i32 0, i32 2
  %bf.load319 = load i32, i32* %readonly_flag, align 8
  %bf.lshr320 = lshr i32 %bf.load319, 12
  %bf.clear321 = and i32 %bf.lshr320, 1
  %tobool322 = icmp ne i32 %bf.clear321, 0
  br i1 %tobool322, label %if.then.323, label %if.end.329

if.then.323:                                      ; preds = %if.end.317
  %161 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %162 = load i32, i32* %code.addr, align 4
  %cmp324 = icmp eq i32 %162, 130
  br i1 %cmp324, label %lor.end.327, label %lor.rhs.325

lor.rhs.325:                                      ; preds = %if.then.323
  %163 = load i32, i32* %code.addr, align 4
  %cmp326 = icmp eq i32 %163, 132
  br label %lor.end.327

lor.end.327:                                      ; preds = %lor.rhs.325, %if.then.323
  %164 = phi i1 [ true, %if.then.323 ], [ %cmp326, %lor.rhs.325 ]
  %cond328 = select i1 %164, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.78, i32 0, i32 0)
  call void @readonly_warning(%union.tree_node* %161, i8* %cond328)
  br label %if.end.329

if.end.329:                                       ; preds = %lor.end.327, %if.end.317
  %165 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common330 = bitcast %union.tree_node* %165 to %struct.tree_common*
  %type331 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common330, i32 0, i32 1
  %166 = load %union.tree_node*, %union.tree_node** %type331, align 8
  %common332 = bitcast %union.tree_node* %166 to %struct.tree_common*
  %code333 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common332, i32 0, i32 2
  %bf.load334 = load i32, i32* %code333, align 8
  %bf.clear335 = and i32 %bf.load334, 255
  %cmp336 = icmp eq i32 %bf.clear335, 11
  br i1 %cmp336, label %if.then.337, label %if.else.339

if.then.337:                                      ; preds = %if.end.329
  %167 = load i32, i32* %code.addr, align 4
  %168 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call338 = call %union.tree_node* @boolean_increment(i32 %167, %union.tree_node* %168)
  store %union.tree_node* %call338, %union.tree_node** %val, align 8
  br label %if.end.343

if.else.339:                                      ; preds = %if.end.329
  %169 = load i32, i32* %code.addr, align 4
  %170 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common340 = bitcast %union.tree_node* %170 to %struct.tree_common*
  %type341 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common340, i32 0, i32 1
  %171 = load %union.tree_node*, %union.tree_node** %type341, align 8
  %172 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %173 = load %union.tree_node*, %union.tree_node** %inc, align 8
  %call342 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %169, %union.tree_node* %171, %union.tree_node* %172, %union.tree_node* %173)
  store %union.tree_node* %call342, %union.tree_node** %val, align 8
  br label %if.end.343

if.end.343:                                       ; preds = %if.else.339, %if.then.337
  %174 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common344 = bitcast %union.tree_node* %174 to %struct.tree_common*
  %side_effects_flag345 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common344, i32 0, i32 2
  %bf.load346 = load i32, i32* %side_effects_flag345, align 8
  %bf.clear347 = and i32 %bf.load346, -257
  %bf.set348 = or i32 %bf.clear347, 256
  store i32 %bf.set348, i32* %side_effects_flag345, align 8
  %175 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %176 = load %union.tree_node*, %union.tree_node** %val, align 8
  %call349 = call %union.tree_node* @convert(%union.tree_node* %175, %union.tree_node* %176)
  store %union.tree_node* %call349, %union.tree_node** %val, align 8
  %177 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common350 = bitcast %union.tree_node* %177 to %struct.tree_common*
  %code351 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common350, i32 0, i32 2
  %bf.load352 = load i32, i32* %code351, align 8
  %bf.clear353 = and i32 %bf.load352, 255
  %178 = load i32, i32* %code.addr, align 4
  %cmp354 = icmp ne i32 %bf.clear353, %178
  br i1 %cmp354, label %if.then.355, label %if.end.360

if.then.355:                                      ; preds = %if.end.343
  %179 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common356 = bitcast %union.tree_node* %179 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common356, i32 0, i32 2
  %bf.load357 = load i32, i32* %static_flag, align 8
  %bf.clear358 = and i32 %bf.load357, -262145
  %bf.set359 = or i32 %bf.clear358, 262144
  store i32 %bf.set359, i32* %static_flag, align 8
  br label %if.end.360

if.end.360:                                       ; preds = %if.then.355, %if.end.343
  %180 = load %union.tree_node*, %union.tree_node** %val, align 8
  store %union.tree_node* %180, %union.tree_node** %retval
  br label %return

sw.bb.361:                                        ; preds = %if.end.6
  %181 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common362 = bitcast %union.tree_node* %181 to %struct.tree_common*
  %code363 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common362, i32 0, i32 2
  %bf.load364 = load i32, i32* %code363, align 8
  %bf.clear365 = and i32 %bf.load364, 255
  %cmp366 = icmp eq i32 %bf.clear365, 41
  br i1 %cmp366, label %if.then.367, label %if.end.382

if.then.367:                                      ; preds = %sw.bb.361
  %182 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %exp368 = bitcast %union.tree_node* %182 to %struct.tree_exp*
  %operands369 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp368, i32 0, i32 2
  %arrayidx370 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands369, i32 0, i64 0
  %183 = load %union.tree_node*, %union.tree_node** %arrayidx370, align 8
  %call371 = call i32 @lvalue_p(%union.tree_node* %183)
  %tobool372 = icmp ne i32 %call371, 0
  br i1 %tobool372, label %if.then.373, label %if.end.378

if.then.373:                                      ; preds = %if.then.367
  %184 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %exp374 = bitcast %union.tree_node* %184 to %struct.tree_exp*
  %operands375 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp374, i32 0, i32 2
  %arrayidx376 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands375, i32 0, i64 0
  %185 = load %union.tree_node*, %union.tree_node** %arrayidx376, align 8
  %call377 = call %union.tree_node* @non_lvalue(%union.tree_node* %185)
  store %union.tree_node* %call377, %union.tree_node** %retval
  br label %return

if.end.378:                                       ; preds = %if.then.367
  %186 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %exp379 = bitcast %union.tree_node* %186 to %struct.tree_exp*
  %operands380 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp379, i32 0, i32 2
  %arrayidx381 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands380, i32 0, i64 0
  %187 = load %union.tree_node*, %union.tree_node** %arrayidx381, align 8
  store %union.tree_node* %187, %union.tree_node** %retval
  br label %return

if.end.382:                                       ; preds = %sw.bb.361
  %188 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common383 = bitcast %union.tree_node* %188 to %struct.tree_common*
  %code384 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common383, i32 0, i32 2
  %bf.load385 = load i32, i32* %code384, align 8
  %bf.clear386 = and i32 %bf.load385, 255
  %cmp387 = icmp eq i32 %bf.clear386, 43
  br i1 %cmp387, label %if.then.388, label %if.end.403

if.then.388:                                      ; preds = %if.end.382
  %189 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %exp389 = bitcast %union.tree_node* %189 to %struct.tree_exp*
  %operands390 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp389, i32 0, i32 2
  %arrayidx391 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands390, i32 0, i64 0
  %190 = load %union.tree_node*, %union.tree_node** %arrayidx391, align 8
  %call392 = call i32 @mark_addressable(%union.tree_node* %190)
  %cmp393 = icmp eq i32 %call392, 0
  br i1 %cmp393, label %if.then.394, label %if.end.395

if.then.394:                                      ; preds = %if.then.388
  %191 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %191, %union.tree_node** %retval
  br label %return

if.end.395:                                       ; preds = %if.then.388
  %192 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %exp396 = bitcast %union.tree_node* %192 to %struct.tree_exp*
  %operands397 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp396, i32 0, i32 2
  %arrayidx398 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands397, i32 0, i64 0
  %193 = load %union.tree_node*, %union.tree_node** %arrayidx398, align 8
  %194 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %exp399 = bitcast %union.tree_node* %194 to %struct.tree_exp*
  %operands400 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp399, i32 0, i32 2
  %arrayidx401 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands400, i32 0, i64 1
  %195 = load %union.tree_node*, %union.tree_node** %arrayidx401, align 8
  %call402 = call %union.tree_node* @build_binary_op(i32 59, %union.tree_node* %193, %union.tree_node* %195, i32 1)
  store %union.tree_node* %call402, %union.tree_node** %retval
  br label %return

if.end.403:                                       ; preds = %if.end.382
  %196 = load i32, i32* %code.addr, align 4
  %197 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %198 = load i32, i32* %flag.addr, align 4
  %call404 = call %union.tree_node* @unary_complex_lvalue(i32 %196, %union.tree_node* %197, i32 %198)
  store %union.tree_node* %call404, %union.tree_node** %val, align 8
  %199 = load %union.tree_node*, %union.tree_node** %val, align 8
  %cmp405 = icmp ne %union.tree_node* %199, null
  br i1 %cmp405, label %if.then.406, label %if.else.407

if.then.406:                                      ; preds = %if.end.403
  %200 = load %union.tree_node*, %union.tree_node** %val, align 8
  store %union.tree_node* %200, %union.tree_node** %retval
  br label %return

if.else.407:                                      ; preds = %if.end.403
  %201 = load i32, i32* %typecode, align 4
  %cmp408 = icmp ne i32 %201, 23
  br i1 %cmp408, label %land.lhs.true.409, label %if.end.415

land.lhs.true.409:                                ; preds = %if.else.407
  %202 = load i32, i32* %flag.addr, align 4
  %tobool410 = icmp ne i32 %202, 0
  br i1 %tobool410, label %if.end.415, label %land.lhs.true.411

land.lhs.true.411:                                ; preds = %land.lhs.true.409
  %203 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call412 = call i32 @lvalue_or_else(%union.tree_node* %203, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.79, i32 0, i32 0))
  %tobool413 = icmp ne i32 %call412, 0
  br i1 %tobool413, label %if.end.415, label %if.then.414

if.then.414:                                      ; preds = %land.lhs.true.411
  %204 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %204, %union.tree_node** %retval
  br label %return

if.end.415:                                       ; preds = %land.lhs.true.411, %land.lhs.true.409, %if.else.407
  br label %if.end.416

if.end.416:                                       ; preds = %if.end.415
  %205 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common417 = bitcast %union.tree_node* %205 to %struct.tree_common*
  %type418 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common417, i32 0, i32 1
  %206 = load %union.tree_node*, %union.tree_node** %type418, align 8
  store %union.tree_node* %206, %union.tree_node** %argtype, align 8
  %207 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common419 = bitcast %union.tree_node* %207 to %struct.tree_common*
  %code420 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common419, i32 0, i32 2
  %bf.load421 = load i32, i32* %code420, align 8
  %bf.clear422 = and i32 %bf.load421, 255
  %idxprom = sext i32 %bf.clear422 to i64
  %arrayidx423 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom
  %208 = load i8, i8* %arrayidx423, align 1
  %conv = sext i8 %208 to i32
  %cmp424 = icmp eq i32 %conv, 100
  br i1 %cmp424, label %land.lhs.true.436, label %lor.lhs.false.426

lor.lhs.false.426:                                ; preds = %if.end.416
  %209 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common427 = bitcast %union.tree_node* %209 to %struct.tree_common*
  %code428 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common427, i32 0, i32 2
  %bf.load429 = load i32, i32* %code428, align 8
  %bf.clear430 = and i32 %bf.load429, 255
  %idxprom431 = sext i32 %bf.clear430 to i64
  %arrayidx432 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom431
  %210 = load i8, i8* %arrayidx432, align 1
  %conv433 = sext i8 %210 to i32
  %cmp434 = icmp eq i32 %conv433, 114
  br i1 %cmp434, label %land.lhs.true.436, label %if.end.465

land.lhs.true.436:                                ; preds = %lor.lhs.false.426, %if.end.416
  %211 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common437 = bitcast %union.tree_node* %211 to %struct.tree_common*
  %readonly_flag438 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common437, i32 0, i32 2
  %bf.load439 = load i32, i32* %readonly_flag438, align 8
  %bf.lshr440 = lshr i32 %bf.load439, 12
  %bf.clear441 = and i32 %bf.lshr440, 1
  %tobool442 = icmp ne i32 %bf.clear441, 0
  br i1 %tobool442, label %if.then.449, label %lor.lhs.false.443

lor.lhs.false.443:                                ; preds = %land.lhs.true.436
  %212 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common444 = bitcast %union.tree_node* %212 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common444, i32 0, i32 2
  %bf.load445 = load i32, i32* %volatile_flag, align 8
  %bf.lshr446 = lshr i32 %bf.load445, 11
  %bf.clear447 = and i32 %bf.lshr446, 1
  %tobool448 = icmp ne i32 %bf.clear447, 0
  br i1 %tobool448, label %if.then.449, label %if.end.465

if.then.449:                                      ; preds = %lor.lhs.false.443, %land.lhs.true.436
  %213 = load %union.tree_node*, %union.tree_node** %argtype, align 8
  %214 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common450 = bitcast %union.tree_node* %214 to %struct.tree_common*
  %readonly_flag451 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common450, i32 0, i32 2
  %bf.load452 = load i32, i32* %readonly_flag451, align 8
  %bf.lshr453 = lshr i32 %bf.load452, 12
  %bf.clear454 = and i32 %bf.lshr453, 1
  %tobool455 = icmp ne i32 %bf.clear454, 0
  %cond456 = select i1 %tobool455, i32 1, i32 0
  %215 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common457 = bitcast %union.tree_node* %215 to %struct.tree_common*
  %volatile_flag458 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common457, i32 0, i32 2
  %bf.load459 = load i32, i32* %volatile_flag458, align 8
  %bf.lshr460 = lshr i32 %bf.load459, 11
  %bf.clear461 = and i32 %bf.lshr460, 1
  %tobool462 = icmp ne i32 %bf.clear461, 0
  %cond463 = select i1 %tobool462, i32 2, i32 0
  %or = or i32 %cond456, %cond463
  %call464 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %213, i32 %or)
  store %union.tree_node* %call464, %union.tree_node** %argtype, align 8
  br label %if.end.465

if.end.465:                                       ; preds = %if.then.449, %lor.lhs.false.443, %lor.lhs.false.426
  %216 = load %union.tree_node*, %union.tree_node** %argtype, align 8
  %call466 = call %union.tree_node* @build_pointer_type(%union.tree_node* %216)
  store %union.tree_node* %call466, %union.tree_node** %argtype, align 8
  %217 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call467 = call i32 @mark_addressable(%union.tree_node* %217)
  %cmp468 = icmp eq i32 %call467, 0
  br i1 %cmp468, label %if.then.470, label %if.end.471

if.then.470:                                      ; preds = %if.end.465
  %218 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %218, %union.tree_node** %retval
  br label %return

if.end.471:                                       ; preds = %if.end.465
  %219 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common472 = bitcast %union.tree_node* %219 to %struct.tree_common*
  %code473 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common472, i32 0, i32 2
  %bf.load474 = load i32, i32* %code473, align 8
  %bf.clear475 = and i32 %bf.load474, 255
  %cmp476 = icmp eq i32 %bf.clear475, 39
  br i1 %cmp476, label %if.then.478, label %if.else.499

if.then.478:                                      ; preds = %if.end.471
  %220 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %exp479 = bitcast %union.tree_node* %220 to %struct.tree_exp*
  %operands480 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp479, i32 0, i32 2
  %arrayidx481 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands480, i32 0, i64 1
  %221 = load %union.tree_node*, %union.tree_node** %arrayidx481, align 8
  store %union.tree_node* %221, %union.tree_node** %field, align 8
  %222 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %exp482 = bitcast %union.tree_node* %222 to %struct.tree_exp*
  %operands483 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp482, i32 0, i32 2
  %arrayidx484 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands483, i32 0, i64 0
  %223 = load %union.tree_node*, %union.tree_node** %arrayidx484, align 8
  %224 = load i32, i32* %flag.addr, align 4
  %call485 = call %union.tree_node* @build_unary_op(i32 121, %union.tree_node* %223, i32 %224)
  store %union.tree_node* %call485, %union.tree_node** %addr, align 8
  %225 = load %union.tree_node*, %union.tree_node** %field, align 8
  %decl = bitcast %union.tree_node* %225 to %struct.tree_decl*
  %lang_flag_4 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 5
  %226 = bitcast i48* %lang_flag_4 to i64*
  %bf.load486 = load i64, i64* %226, align 8
  %bf.lshr487 = lshr i64 %bf.load486, 41
  %bf.clear488 = and i64 %bf.lshr487, 1
  %bf.cast = trunc i64 %bf.clear488 to i32
  %cmp489 = icmp eq i32 %bf.cast, 1
  br i1 %cmp489, label %if.then.491, label %if.end.493

if.then.491:                                      ; preds = %if.then.478
  %227 = load %union.tree_node*, %union.tree_node** %field, align 8
  %decl492 = bitcast %union.tree_node* %227 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl492, i32 0, i32 8
  %228 = load %union.tree_node*, %union.tree_node** %name, align 8
  %identifier = bitcast %union.tree_node* %228 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %229 = load i8*, i8** %str, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.80, i32 0, i32 0), i8* %229)
  %230 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %230, %union.tree_node** %retval
  br label %return

if.end.493:                                       ; preds = %if.then.478
  %231 = load %union.tree_node*, %union.tree_node** %argtype, align 8
  %232 = load %union.tree_node*, %union.tree_node** %argtype, align 8
  %233 = load %union.tree_node*, %union.tree_node** %addr, align 8
  %call494 = call %union.tree_node* @convert(%union.tree_node* %232, %union.tree_node* %233)
  %234 = load %union.tree_node*, %union.tree_node** %argtype, align 8
  %235 = load %union.tree_node*, %union.tree_node** %field, align 8
  %call495 = call %union.tree_node* @byte_position(%union.tree_node* %235)
  %call496 = call %union.tree_node* @convert(%union.tree_node* %234, %union.tree_node* %call495)
  %call497 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 59, %union.tree_node* %231, %union.tree_node* %call494, %union.tree_node* %call496)
  %call498 = call %union.tree_node* @fold(%union.tree_node* %call497)
  store %union.tree_node* %call498, %union.tree_node** %addr, align 8
  br label %if.end.501

if.else.499:                                      ; preds = %if.end.471
  %236 = load i32, i32* %code.addr, align 4
  %237 = load %union.tree_node*, %union.tree_node** %argtype, align 8
  %238 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call500 = call %union.tree_node* @build1(i32 %236, %union.tree_node* %237, %union.tree_node* %238)
  store %union.tree_node* %call500, %union.tree_node** %addr, align 8
  br label %if.end.501

if.end.501:                                       ; preds = %if.else.499, %if.end.493
  %239 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call502 = call i32 @staticp(%union.tree_node* %239)
  %tobool503 = icmp ne i32 %call502, 0
  br i1 %tobool503, label %land.lhs.true.504, label %if.end.520

land.lhs.true.504:                                ; preds = %if.end.501
  %240 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common505 = bitcast %union.tree_node* %240 to %struct.tree_common*
  %code506 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common505, i32 0, i32 2
  %bf.load507 = load i32, i32* %code506, align 8
  %bf.clear508 = and i32 %bf.load507, 255
  %cmp509 = icmp eq i32 %bf.clear508, 30
  br i1 %cmp509, label %land.lhs.true.511, label %if.then.515

land.lhs.true.511:                                ; preds = %land.lhs.true.504
  %241 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %decl512 = bitcast %union.tree_node* %241 to %struct.tree_decl*
  %context = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl512, i32 0, i32 9
  %242 = load %union.tree_node*, %union.tree_node** %context, align 8
  %cmp513 = icmp ne %union.tree_node* %242, null
  br i1 %cmp513, label %if.end.520, label %if.then.515

if.then.515:                                      ; preds = %land.lhs.true.511, %land.lhs.true.504
  %243 = load %union.tree_node*, %union.tree_node** %addr, align 8
  %common516 = bitcast %union.tree_node* %243 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common516, i32 0, i32 2
  %bf.load517 = load i32, i32* %constant_flag, align 8
  %bf.clear518 = and i32 %bf.load517, -513
  %bf.set519 = or i32 %bf.clear518, 512
  store i32 %bf.set519, i32* %constant_flag, align 8
  br label %if.end.520

if.end.520:                                       ; preds = %if.then.515, %land.lhs.true.511, %if.end.501
  %244 = load %union.tree_node*, %union.tree_node** %addr, align 8
  store %union.tree_node* %244, %union.tree_node** %retval
  br label %return

sw.default.521:                                   ; preds = %if.end.6
  br label %sw.epilog.522

sw.epilog.522:                                    ; preds = %sw.default.521, %sw.bb.90, %if.end.74, %if.end.61, %if.end.48, %if.end.28, %if.end.15
  %245 = load %union.tree_node*, %union.tree_node** %argtype, align 8
  %cmp523 = icmp eq %union.tree_node* %245, null
  br i1 %cmp523, label %if.then.525, label %if.end.528

if.then.525:                                      ; preds = %sw.epilog.522
  %246 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %common526 = bitcast %union.tree_node* %246 to %struct.tree_common*
  %type527 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common526, i32 0, i32 1
  %247 = load %union.tree_node*, %union.tree_node** %type527, align 8
  store %union.tree_node* %247, %union.tree_node** %argtype, align 8
  br label %if.end.528

if.end.528:                                       ; preds = %if.then.525, %sw.epilog.522
  %248 = load i32, i32* %code.addr, align 4
  %249 = load %union.tree_node*, %union.tree_node** %argtype, align 8
  %250 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call529 = call %union.tree_node* @build1(i32 %248, %union.tree_node* %249, %union.tree_node* %250)
  %call530 = call %union.tree_node* @fold(%union.tree_node* %call529)
  store %union.tree_node* %call530, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.528, %if.end.520, %if.then.491, %if.then.470, %if.then.414, %if.then.406, %if.end.395, %if.then.394, %if.end.378, %if.then.373, %if.end.360, %if.then.316, %if.end.303, %if.end.172, %if.end.152, %if.then.144, %if.else.137, %if.then.130, %if.then.120, %if.else.113, %if.then.106, %if.then.97, %if.end.87, %if.then.86, %if.then.68, %if.then.55, %if.then.41, %if.then.22, %if.then.12, %if.then
  %251 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %251
}

declare %union.tree_node* @invert_truthvalue(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @unary_complex_lvalue(i32 %code, %union.tree_node* %arg, i32 %flag) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %code.addr = alloca i32, align 4
  %arg.addr = alloca %union.tree_node*, align 8
  %flag.addr = alloca i32, align 4
  %real_result = alloca %union.tree_node*, align 8
  store i32 %code, i32* %code.addr, align 4
  store %union.tree_node* %arg, %union.tree_node** %arg.addr, align 8
  store i32 %flag, i32* %flag.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 47
  br i1 %cmp, label %if.then, label %if.end.15

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %code.addr, align 4
  %2 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp = bitcast %union.tree_node* %2 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 1
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %call = call %union.tree_node* @build_unary_op(i32 %1, %union.tree_node* %3, i32 0)
  store %union.tree_node* %call, %union.tree_node** %real_result, align 8
  %4 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common2 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 1
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common3 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3, i32 0, i32 2
  %bf.load5 = load i32, i32* %code4, align 8
  %bf.clear6 = and i32 %bf.load5, 255
  %cmp7 = icmp ne i32 %bf.clear6, 23
  br i1 %cmp7, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %6 = load i32, i32* %flag.addr, align 4
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.end, label %if.then.8

if.then.8:                                        ; preds = %land.lhs.true
  call void @pedantic_lvalue_warning(i32 47)
  br label %if.end

if.end:                                           ; preds = %if.then.8, %land.lhs.true, %if.then
  %7 = load %union.tree_node*, %union.tree_node** %real_result, align 8
  %common9 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %type10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common9, i32 0, i32 1
  %8 = load %union.tree_node*, %union.tree_node** %type10, align 8
  %9 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp11 = bitcast %union.tree_node* %9 to %struct.tree_exp*
  %operands12 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp11, i32 0, i32 2
  %arrayidx13 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands12, i32 0, i64 0
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx13, align 8
  %11 = load %union.tree_node*, %union.tree_node** %real_result, align 8
  %call14 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %8, %union.tree_node* %10, %union.tree_node* %11)
  store %union.tree_node* %call14, %union.tree_node** %retval
  br label %return

if.end.15:                                        ; preds = %entry
  %12 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common16 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %code17 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common16, i32 0, i32 2
  %bf.load18 = load i32, i32* %code17, align 8
  %bf.clear19 = and i32 %bf.load18, 255
  %cmp20 = icmp eq i32 %bf.clear19, 51
  br i1 %cmp20, label %if.then.21, label %if.end.48

if.then.21:                                       ; preds = %if.end.15
  %13 = load i32, i32* %flag.addr, align 4
  %tobool22 = icmp ne i32 %13, 0
  br i1 %tobool22, label %if.end.24, label %if.then.23

if.then.23:                                       ; preds = %if.then.21
  call void @pedantic_lvalue_warning(i32 51)
  br label %if.end.24

if.end.24:                                        ; preds = %if.then.23, %if.then.21
  %14 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common25 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %type26 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common25, i32 0, i32 1
  %15 = load %union.tree_node*, %union.tree_node** %type26, align 8
  %common27 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %code28 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common27, i32 0, i32 2
  %bf.load29 = load i32, i32* %code28, align 8
  %bf.clear30 = and i32 %bf.load29, 255
  %cmp31 = icmp ne i32 %bf.clear30, 23
  br i1 %cmp31, label %land.lhs.true.32, label %if.end.35

land.lhs.true.32:                                 ; preds = %if.end.24
  %16 = load i32, i32* %flag.addr, align 4
  %tobool33 = icmp ne i32 %16, 0
  br i1 %tobool33, label %if.end.35, label %if.then.34

if.then.34:                                       ; preds = %land.lhs.true.32
  call void @pedantic_lvalue_warning(i32 47)
  br label %if.end.35

if.end.35:                                        ; preds = %if.then.34, %land.lhs.true.32, %if.end.24
  %17 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp36 = bitcast %union.tree_node* %17 to %struct.tree_exp*
  %operands37 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp36, i32 0, i32 2
  %arrayidx38 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands37, i32 0, i64 0
  %18 = load %union.tree_node*, %union.tree_node** %arrayidx38, align 8
  %19 = load i32, i32* %code.addr, align 4
  %20 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp39 = bitcast %union.tree_node* %20 to %struct.tree_exp*
  %operands40 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp39, i32 0, i32 2
  %arrayidx41 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands40, i32 0, i64 1
  %21 = load %union.tree_node*, %union.tree_node** %arrayidx41, align 8
  %22 = load i32, i32* %flag.addr, align 4
  %call42 = call %union.tree_node* @build_unary_op(i32 %19, %union.tree_node* %21, i32 %22)
  %23 = load i32, i32* %code.addr, align 4
  %24 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp43 = bitcast %union.tree_node* %24 to %struct.tree_exp*
  %operands44 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp43, i32 0, i32 2
  %arrayidx45 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands44, i32 0, i64 2
  %25 = load %union.tree_node*, %union.tree_node** %arrayidx45, align 8
  %26 = load i32, i32* %flag.addr, align 4
  %call46 = call %union.tree_node* @build_unary_op(i32 %23, %union.tree_node* %25, i32 %26)
  %call47 = call %union.tree_node* @build_conditional_expr(%union.tree_node* %18, %union.tree_node* %call42, %union.tree_node* %call46)
  store %union.tree_node* %call47, %union.tree_node** %retval
  br label %return

if.end.48:                                        ; preds = %if.end.15
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.48, %if.end.35, %if.end
  %27 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %27
}

declare %union.tree_node* @stabilize_reference(%union.tree_node*) #1

declare %union.tree_node* @get_unwidened(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal void @pedantic_lvalue_warning(i32 %code) #0 {
entry:
  %code.addr = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  %0 = load i32, i32* @pedantic, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %code.addr, align 4
  switch i32 %1, label %sw.default [
    i32 51, label %sw.bb
    i32 47, label %sw.bb.1
  ]

sw.bb:                                            ; preds = %if.then
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.168, i32 0, i32 0))
  br label %sw.epilog

sw.bb.1:                                          ; preds = %if.then
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.169, i32 0, i32 0))
  br label %sw.epilog

sw.default:                                       ; preds = %if.then
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.170, i32 0, i32 0))
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.1, %sw.bb
  br label %if.end

if.end:                                           ; preds = %sw.epilog, %entry
  ret void
}

declare %union.tree_node* @boolean_increment(i32, %union.tree_node*) #1

declare %union.tree_node* @save_expr(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_modify_expr(%union.tree_node* %lhs, i32 %modifycode, %union.tree_node* %rhs) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %lhs.addr = alloca %union.tree_node*, align 8
  %modifycode.addr = alloca i32, align 4
  %rhs.addr = alloca %union.tree_node*, align 8
  %result = alloca %union.tree_node*, align 8
  %newrhs = alloca %union.tree_node*, align 8
  %lhstype = alloca %union.tree_node*, align 8
  %olhstype = alloca %union.tree_node*, align 8
  %cond = alloca %union.tree_node*, align 8
  %inner_lhs = alloca %union.tree_node*, align 8
  %result72 = alloca %union.tree_node*, align 8
  store %union.tree_node* %lhs, %union.tree_node** %lhs.addr, align 8
  store i32 %modifycode, i32* %modifycode.addr, align 4
  store %union.tree_node* %rhs, %union.tree_node** %rhs.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8
  store %union.tree_node* %1, %union.tree_node** %lhstype, align 8
  %2 = load %union.tree_node*, %union.tree_node** %lhstype, align 8
  store %union.tree_node* %2, %union.tree_node** %olhstype, align 8
  %3 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %call = call %union.tree_node* @require_complete_type(%union.tree_node* %3)
  store %union.tree_node* %call, %union.tree_node** %lhs.addr, align 8
  %4 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %common1 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %5 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %common2 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load4 = load i32, i32* %code3, align 8
  %bf.clear5 = and i32 %bf.load4, 255
  %cmp6 = icmp eq i32 %bf.clear5, 0
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %6, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %common7 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %code8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 2
  %bf.load9 = load i32, i32* %code8, align 8
  %bf.clear10 = and i32 %bf.load9, 255
  %cmp11 = icmp eq i32 %bf.clear10, 116
  br i1 %cmp11, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.end
  %8 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %exp = bitcast %union.tree_node* %8 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  store %union.tree_node* %9, %union.tree_node** %rhs.addr, align 8
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.12, %if.end
  %10 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  store %union.tree_node* %10, %union.tree_node** %newrhs, align 8
  %11 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %common14 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %code15 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common14, i32 0, i32 2
  %bf.load16 = load i32, i32* %code15, align 8
  %bf.clear17 = and i32 %bf.load16, 255
  switch i32 %bf.clear17, label %sw.default [
    i32 47, label %sw.bb
    i32 51, label %sw.bb.33
  ]

sw.bb:                                            ; preds = %if.end.13
  call void @pedantic_lvalue_warning(i32 47)
  %12 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %exp18 = bitcast %union.tree_node* %12 to %struct.tree_exp*
  %operands19 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp18, i32 0, i32 2
  %arrayidx20 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands19, i32 0, i64 1
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx20, align 8
  %14 = load i32, i32* %modifycode.addr, align 4
  %15 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call21 = call %union.tree_node* @build_modify_expr(%union.tree_node* %13, i32 %14, %union.tree_node* %15)
  store %union.tree_node* %call21, %union.tree_node** %newrhs, align 8
  %16 = load %union.tree_node*, %union.tree_node** %newrhs, align 8
  %common22 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %code23 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common22, i32 0, i32 2
  %bf.load24 = load i32, i32* %code23, align 8
  %bf.clear25 = and i32 %bf.load24, 255
  %cmp26 = icmp eq i32 %bf.clear25, 0
  br i1 %cmp26, label %if.then.27, label %if.end.28

if.then.27:                                       ; preds = %sw.bb
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %17, %union.tree_node** %retval
  br label %return

if.end.28:                                        ; preds = %sw.bb
  %18 = load %union.tree_node*, %union.tree_node** %lhstype, align 8
  %19 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %exp29 = bitcast %union.tree_node* %19 to %struct.tree_exp*
  %operands30 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp29, i32 0, i32 2
  %arrayidx31 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands30, i32 0, i64 0
  %20 = load %union.tree_node*, %union.tree_node** %arrayidx31, align 8
  %21 = load %union.tree_node*, %union.tree_node** %newrhs, align 8
  %call32 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %18, %union.tree_node* %20, %union.tree_node* %21)
  store %union.tree_node* %call32, %union.tree_node** %retval
  br label %return

sw.bb.33:                                         ; preds = %if.end.13
  call void @pedantic_lvalue_warning(i32 51)
  %22 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call34 = call %union.tree_node* @save_expr(%union.tree_node* %22)
  store %union.tree_node* %call34, %union.tree_node** %rhs.addr, align 8
  %23 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %exp35 = bitcast %union.tree_node* %23 to %struct.tree_exp*
  %operands36 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp35, i32 0, i32 2
  %arrayidx37 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands36, i32 0, i64 0
  %24 = load %union.tree_node*, %union.tree_node** %arrayidx37, align 8
  %25 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %exp38 = bitcast %union.tree_node* %25 to %struct.tree_exp*
  %operands39 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp38, i32 0, i32 2
  %arrayidx40 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands39, i32 0, i64 1
  %26 = load %union.tree_node*, %union.tree_node** %arrayidx40, align 8
  %27 = load i32, i32* %modifycode.addr, align 4
  %28 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call41 = call %union.tree_node* @build_modify_expr(%union.tree_node* %26, i32 %27, %union.tree_node* %28)
  %29 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %exp42 = bitcast %union.tree_node* %29 to %struct.tree_exp*
  %operands43 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp42, i32 0, i32 2
  %arrayidx44 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands43, i32 0, i64 2
  %30 = load %union.tree_node*, %union.tree_node** %arrayidx44, align 8
  %31 = load i32, i32* %modifycode.addr, align 4
  %32 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call45 = call %union.tree_node* @build_modify_expr(%union.tree_node* %30, i32 %31, %union.tree_node* %32)
  %call46 = call %union.tree_node* @build_conditional_expr(%union.tree_node* %24, %union.tree_node* %call41, %union.tree_node* %call45)
  store %union.tree_node* %call46, %union.tree_node** %cond, align 8
  %33 = load %union.tree_node*, %union.tree_node** %cond, align 8
  %common47 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %code48 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common47, i32 0, i32 2
  %bf.load49 = load i32, i32* %code48, align 8
  %bf.clear50 = and i32 %bf.load49, 255
  %cmp51 = icmp eq i32 %bf.clear50, 0
  br i1 %cmp51, label %if.then.52, label %if.end.53

if.then.52:                                       ; preds = %sw.bb.33
  %34 = load %union.tree_node*, %union.tree_node** %cond, align 8
  store %union.tree_node* %34, %union.tree_node** %retval
  br label %return

if.end.53:                                        ; preds = %sw.bb.33
  %35 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %common54 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %type55 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common54, i32 0, i32 1
  %36 = load %union.tree_node*, %union.tree_node** %type55, align 8
  %37 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %38 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call56 = call %union.tree_node* @convert(%union.tree_node* %37, %union.tree_node* %38)
  %39 = load %union.tree_node*, %union.tree_node** %cond, align 8
  %call57 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %36, %union.tree_node* %call56, %union.tree_node* %39)
  store %union.tree_node* %call57, %union.tree_node** %retval
  br label %return

sw.default:                                       ; preds = %if.end.13
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  %40 = load i32, i32* %modifycode.addr, align 4
  %cmp58 = icmp ne i32 %40, 115
  br i1 %cmp58, label %if.then.59, label %if.end.62

if.then.59:                                       ; preds = %sw.epilog
  %41 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %call60 = call %union.tree_node* @stabilize_reference(%union.tree_node* %41)
  store %union.tree_node* %call60, %union.tree_node** %lhs.addr, align 8
  %42 = load i32, i32* %modifycode.addr, align 4
  %43 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %44 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call61 = call %union.tree_node* @build_binary_op(i32 %42, %union.tree_node* %43, %union.tree_node* %44, i32 1)
  store %union.tree_node* %call61, %union.tree_node** %newrhs, align 8
  br label %if.end.62

if.end.62:                                        ; preds = %if.then.59, %sw.epilog
  %45 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %common63 = bitcast %union.tree_node* %45 to %struct.tree_common*
  %code64 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common63, i32 0, i32 2
  %bf.load65 = load i32, i32* %code64, align 8
  %bf.clear66 = and i32 %bf.load65, 255
  switch i32 %bf.clear66, label %sw.default.88 [
    i32 115, label %sw.bb.67
    i32 114, label %sw.bb.67
    i32 76, label %sw.bb.67
    i32 72, label %sw.bb.67
    i32 74, label %sw.bb.67
    i32 75, label %sw.bb.67
    i32 73, label %sw.bb.67
  ]

sw.bb.67:                                         ; preds = %if.end.62, %if.end.62, %if.end.62, %if.end.62, %if.end.62, %if.end.62, %if.end.62
  %46 = load %union.tree_node*, %union.tree_node** %newrhs, align 8
  %call68 = call %union.tree_node* @default_function_array_conversion(%union.tree_node* %46)
  store %union.tree_node* %call68, %union.tree_node** %newrhs, align 8
  %47 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %exp69 = bitcast %union.tree_node* %47 to %struct.tree_exp*
  %operands70 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp69, i32 0, i32 2
  %arrayidx71 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands70, i32 0, i64 0
  %48 = load %union.tree_node*, %union.tree_node** %arrayidx71, align 8
  store %union.tree_node* %48, %union.tree_node** %inner_lhs, align 8
  %49 = load %union.tree_node*, %union.tree_node** %inner_lhs, align 8
  %50 = load %union.tree_node*, %union.tree_node** %inner_lhs, align 8
  %common73 = bitcast %union.tree_node* %50 to %struct.tree_common*
  %type74 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common73, i32 0, i32 1
  %51 = load %union.tree_node*, %union.tree_node** %type74, align 8
  %52 = load %union.tree_node*, %union.tree_node** %lhstype, align 8
  %53 = load %union.tree_node*, %union.tree_node** %newrhs, align 8
  %call75 = call %union.tree_node* @convert(%union.tree_node* %52, %union.tree_node* %53)
  %call76 = call %union.tree_node* @convert(%union.tree_node* %51, %union.tree_node* %call75)
  %call77 = call %union.tree_node* @build_modify_expr(%union.tree_node* %49, i32 115, %union.tree_node* %call76)
  store %union.tree_node* %call77, %union.tree_node** %result72, align 8
  %54 = load %union.tree_node*, %union.tree_node** %result72, align 8
  %common78 = bitcast %union.tree_node* %54 to %struct.tree_common*
  %code79 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common78, i32 0, i32 2
  %bf.load80 = load i32, i32* %code79, align 8
  %bf.clear81 = and i32 %bf.load80, 255
  %cmp82 = icmp eq i32 %bf.clear81, 0
  br i1 %cmp82, label %if.then.83, label %if.end.84

if.then.83:                                       ; preds = %sw.bb.67
  %55 = load %union.tree_node*, %union.tree_node** %result72, align 8
  store %union.tree_node* %55, %union.tree_node** %retval
  br label %return

if.end.84:                                        ; preds = %sw.bb.67
  call void @pedantic_lvalue_warning(i32 114)
  %56 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %common85 = bitcast %union.tree_node* %56 to %struct.tree_common*
  %type86 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common85, i32 0, i32 1
  %57 = load %union.tree_node*, %union.tree_node** %type86, align 8
  %58 = load %union.tree_node*, %union.tree_node** %result72, align 8
  %call87 = call %union.tree_node* @convert(%union.tree_node* %57, %union.tree_node* %58)
  store %union.tree_node* %call87, %union.tree_node** %retval
  br label %return

sw.default.88:                                    ; preds = %if.end.62
  br label %sw.epilog.89

sw.epilog.89:                                     ; preds = %sw.default.88
  %59 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %call90 = call i32 @lvalue_or_else(%union.tree_node* %59, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.108, i32 0, i32 0))
  %tobool = icmp ne i32 %call90, 0
  br i1 %tobool, label %if.end.92, label %if.then.91

if.then.91:                                       ; preds = %sw.epilog.89
  %60 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %60, %union.tree_node** %retval
  br label %return

if.end.92:                                        ; preds = %sw.epilog.89
  %61 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %common93 = bitcast %union.tree_node* %61 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common93, i32 0, i32 2
  %bf.load94 = load i32, i32* %readonly_flag, align 8
  %bf.lshr = lshr i32 %bf.load94, 12
  %bf.clear95 = and i32 %bf.lshr, 1
  %tobool96 = icmp ne i32 %bf.clear95, 0
  br i1 %tobool96, label %if.then.121, label %lor.lhs.false.97

lor.lhs.false.97:                                 ; preds = %if.end.92
  %62 = load %union.tree_node*, %union.tree_node** %lhstype, align 8
  %common98 = bitcast %union.tree_node* %62 to %struct.tree_common*
  %readonly_flag99 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common98, i32 0, i32 2
  %bf.load100 = load i32, i32* %readonly_flag99, align 8
  %bf.lshr101 = lshr i32 %bf.load100, 12
  %bf.clear102 = and i32 %bf.lshr101, 1
  %tobool103 = icmp ne i32 %bf.clear102, 0
  br i1 %tobool103, label %if.then.121, label %lor.lhs.false.104

lor.lhs.false.104:                                ; preds = %lor.lhs.false.97
  %63 = load %union.tree_node*, %union.tree_node** %lhstype, align 8
  %common105 = bitcast %union.tree_node* %63 to %struct.tree_common*
  %code106 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common105, i32 0, i32 2
  %bf.load107 = load i32, i32* %code106, align 8
  %bf.clear108 = and i32 %bf.load107, 255
  %cmp109 = icmp eq i32 %bf.clear108, 20
  br i1 %cmp109, label %land.lhs.true, label %lor.lhs.false.110

lor.lhs.false.110:                                ; preds = %lor.lhs.false.104
  %64 = load %union.tree_node*, %union.tree_node** %lhstype, align 8
  %common111 = bitcast %union.tree_node* %64 to %struct.tree_common*
  %code112 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common111, i32 0, i32 2
  %bf.load113 = load i32, i32* %code112, align 8
  %bf.clear114 = and i32 %bf.load113, 255
  %cmp115 = icmp eq i32 %bf.clear114, 21
  br i1 %cmp115, label %land.lhs.true, label %if.end.122

land.lhs.true:                                    ; preds = %lor.lhs.false.110, %lor.lhs.false.104
  %65 = load %union.tree_node*, %union.tree_node** %lhstype, align 8
  %common116 = bitcast %union.tree_node* %65 to %struct.tree_common*
  %lang_flag_1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common116, i32 0, i32 2
  %bf.load117 = load i32, i32* %lang_flag_1, align 8
  %bf.lshr118 = lshr i32 %bf.load117, 25
  %bf.clear119 = and i32 %bf.lshr118, 1
  %tobool120 = icmp ne i32 %bf.clear119, 0
  br i1 %tobool120, label %if.then.121, label %if.end.122

if.then.121:                                      ; preds = %land.lhs.true, %lor.lhs.false.97, %if.end.92
  %66 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  call void @readonly_warning(%union.tree_node* %66, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.109, i32 0, i32 0))
  br label %if.end.122

if.end.122:                                       ; preds = %if.then.121, %land.lhs.true, %lor.lhs.false.110
  %67 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %common123 = bitcast %union.tree_node* %67 to %struct.tree_common*
  %code124 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common123, i32 0, i32 2
  %bf.load125 = load i32, i32* %code124, align 8
  %bf.clear126 = and i32 %bf.load125, 255
  %cmp127 = icmp eq i32 %bf.clear126, 39
  br i1 %cmp127, label %land.lhs.true.128, label %if.end.156

land.lhs.true.128:                                ; preds = %if.end.122
  %68 = load %union.tree_node*, %union.tree_node** %lhstype, align 8
  %common129 = bitcast %union.tree_node* %68 to %struct.tree_common*
  %code130 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common129, i32 0, i32 2
  %bf.load131 = load i32, i32* %code130, align 8
  %bf.clear132 = and i32 %bf.load131, 255
  %cmp133 = icmp eq i32 %bf.clear132, 6
  br i1 %cmp133, label %if.then.152, label %lor.lhs.false.134

lor.lhs.false.134:                                ; preds = %land.lhs.true.128
  %69 = load %union.tree_node*, %union.tree_node** %lhstype, align 8
  %common135 = bitcast %union.tree_node* %69 to %struct.tree_common*
  %code136 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common135, i32 0, i32 2
  %bf.load137 = load i32, i32* %code136, align 8
  %bf.clear138 = and i32 %bf.load137, 255
  %cmp139 = icmp eq i32 %bf.clear138, 11
  br i1 %cmp139, label %if.then.152, label %lor.lhs.false.140

lor.lhs.false.140:                                ; preds = %lor.lhs.false.134
  %70 = load %union.tree_node*, %union.tree_node** %lhstype, align 8
  %common141 = bitcast %union.tree_node* %70 to %struct.tree_common*
  %code142 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common141, i32 0, i32 2
  %bf.load143 = load i32, i32* %code142, align 8
  %bf.clear144 = and i32 %bf.load143, 255
  %cmp145 = icmp eq i32 %bf.clear144, 7
  br i1 %cmp145, label %if.then.152, label %lor.lhs.false.146

lor.lhs.false.146:                                ; preds = %lor.lhs.false.140
  %71 = load %union.tree_node*, %union.tree_node** %lhstype, align 8
  %common147 = bitcast %union.tree_node* %71 to %struct.tree_common*
  %code148 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common147, i32 0, i32 2
  %bf.load149 = load i32, i32* %code148, align 8
  %bf.clear150 = and i32 %bf.load149, 255
  %cmp151 = icmp eq i32 %bf.clear150, 10
  br i1 %cmp151, label %if.then.152, label %if.end.156

if.then.152:                                      ; preds = %lor.lhs.false.146, %lor.lhs.false.140, %lor.lhs.false.134, %land.lhs.true.128
  %72 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %call153 = call %union.tree_node* @get_unwidened(%union.tree_node* %72, %union.tree_node* null)
  %common154 = bitcast %union.tree_node* %call153 to %struct.tree_common*
  %type155 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common154, i32 0, i32 1
  %73 = load %union.tree_node*, %union.tree_node** %type155, align 8
  store %union.tree_node* %73, %union.tree_node** %lhstype, align 8
  br label %if.end.156

if.end.156:                                       ; preds = %if.then.152, %lor.lhs.false.146, %if.end.122
  %74 = load %union.tree_node*, %union.tree_node** %lhstype, align 8
  %75 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %common157 = bitcast %union.tree_node* %75 to %struct.tree_common*
  %type158 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common157, i32 0, i32 1
  %76 = load %union.tree_node*, %union.tree_node** %type158, align 8
  %cmp159 = icmp ne %union.tree_node* %74, %76
  br i1 %cmp159, label %if.then.160, label %if.end.164

if.then.160:                                      ; preds = %if.end.156
  %77 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %call161 = call %union.tree_node* @copy_node(%union.tree_node* %77)
  store %union.tree_node* %call161, %union.tree_node** %lhs.addr, align 8
  %78 = load %union.tree_node*, %union.tree_node** %lhstype, align 8
  %79 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %common162 = bitcast %union.tree_node* %79 to %struct.tree_common*
  %type163 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common162, i32 0, i32 1
  store %union.tree_node* %78, %union.tree_node** %type163, align 8
  br label %if.end.164

if.end.164:                                       ; preds = %if.then.160, %if.end.156
  %80 = load %union.tree_node*, %union.tree_node** %lhstype, align 8
  %81 = load %union.tree_node*, %union.tree_node** %newrhs, align 8
  %call165 = call %union.tree_node* @convert_for_assignment(%union.tree_node* %80, %union.tree_node* %81, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.109, i32 0, i32 0), %union.tree_node* null, %union.tree_node* null, i32 0)
  store %union.tree_node* %call165, %union.tree_node** %newrhs, align 8
  %82 = load %union.tree_node*, %union.tree_node** %newrhs, align 8
  %common166 = bitcast %union.tree_node* %82 to %struct.tree_common*
  %code167 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common166, i32 0, i32 2
  %bf.load168 = load i32, i32* %code167, align 8
  %bf.clear169 = and i32 %bf.load168, 255
  %cmp170 = icmp eq i32 %bf.clear169, 0
  br i1 %cmp170, label %if.then.171, label %if.end.172

if.then.171:                                      ; preds = %if.end.164
  %83 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %83, %union.tree_node** %retval
  br label %return

if.end.172:                                       ; preds = %if.end.164
  %84 = load %union.tree_node*, %union.tree_node** %lhstype, align 8
  %85 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %86 = load %union.tree_node*, %union.tree_node** %newrhs, align 8
  %call173 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 48, %union.tree_node* %84, %union.tree_node* %85, %union.tree_node* %86)
  store %union.tree_node* %call173, %union.tree_node** %result, align 8
  %87 = load %union.tree_node*, %union.tree_node** %result, align 8
  %common174 = bitcast %union.tree_node* %87 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common174, i32 0, i32 2
  %bf.load175 = load i32, i32* %side_effects_flag, align 8
  %bf.clear176 = and i32 %bf.load175, -257
  %bf.set = or i32 %bf.clear176, 256
  store i32 %bf.set, i32* %side_effects_flag, align 8
  %88 = load %union.tree_node*, %union.tree_node** %olhstype, align 8
  %89 = load %union.tree_node*, %union.tree_node** %result, align 8
  %common177 = bitcast %union.tree_node* %89 to %struct.tree_common*
  %type178 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common177, i32 0, i32 1
  %90 = load %union.tree_node*, %union.tree_node** %type178, align 8
  %cmp179 = icmp eq %union.tree_node* %88, %90
  br i1 %cmp179, label %if.then.180, label %if.end.181

if.then.180:                                      ; preds = %if.end.172
  %91 = load %union.tree_node*, %union.tree_node** %result, align 8
  store %union.tree_node* %91, %union.tree_node** %retval
  br label %return

if.end.181:                                       ; preds = %if.end.172
  %92 = load %union.tree_node*, %union.tree_node** %olhstype, align 8
  %93 = load %union.tree_node*, %union.tree_node** %result, align 8
  %call182 = call %union.tree_node* @convert_for_assignment(%union.tree_node* %92, %union.tree_node* %93, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.109, i32 0, i32 0), %union.tree_node* null, %union.tree_node* null, i32 0)
  store %union.tree_node* %call182, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.181, %if.then.180, %if.then.171, %if.then.91, %if.end.84, %if.then.83, %if.end.53, %if.then.52, %if.end.28, %if.then.27, %if.then
  %94 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %94
}

; Function Attrs: nounwind uwtable
define i32 @lvalue_or_else(%union.tree_node* %ref, i8* %msgid) #0 {
entry:
  %ref.addr = alloca %union.tree_node*, align 8
  %msgid.addr = alloca i8*, align 8
  %win = alloca i32, align 4
  store %union.tree_node* %ref, %union.tree_node** %ref.addr, align 8
  store i8* %msgid, i8** %msgid.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %ref.addr, align 8
  %call = call i32 @lvalue_p(%union.tree_node* %0)
  store i32 %call, i32* %win, align 4
  %1 = load i32, i32* %win, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %msgid.addr, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.81, i32 0, i32 0), i8* %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %win, align 4
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define void @readonly_warning(%union.tree_node* %arg, i8* %msgid) #0 {
entry:
  %arg.addr = alloca %union.tree_node*, align 8
  %msgid.addr = alloca i8*, align 8
  store %union.tree_node* %arg, %union.tree_node** %arg.addr, align 8
  store i8* %msgid, i8** %msgid.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 39
  br i1 %cmp, label %if.then, label %if.else.12

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp = bitcast %union.tree_node* %1 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %common1 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common2 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load3 = load i32, i32* %readonly_flag, align 8
  %bf.lshr = lshr i32 %bf.load3, 12
  %bf.clear4 = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear4, 0
  br i1 %tobool, label %if.then.5, label %if.else

if.then.5:                                        ; preds = %if.then
  %4 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp6 = bitcast %union.tree_node* %4 to %struct.tree_exp*
  %operands7 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6, i32 0, i32 2
  %arrayidx8 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7, i32 0, i64 0
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx8, align 8
  %6 = load i8*, i8** %msgid.addr, align 8
  call void @readonly_warning(%union.tree_node* %5, i8* %6)
  br label %if.end

if.else:                                          ; preds = %if.then
  %7 = load i8*, i8** %msgid.addr, align 8
  %8 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp9 = bitcast %union.tree_node* %8 to %struct.tree_exp*
  %operands10 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp9, i32 0, i32 2
  %arrayidx11 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands10, i32 0, i64 1
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx11, align 8
  %decl = bitcast %union.tree_node* %9 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 8
  %10 = load %union.tree_node*, %union.tree_node** %name, align 8
  %identifier = bitcast %union.tree_node* %10 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %11 = load i8*, i8** %str, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.82, i32 0, i32 0), i8* %7, i8* %11)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.5
  br label %if.end.26

if.else.12:                                       ; preds = %entry
  %12 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common13 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %code14 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common13, i32 0, i32 2
  %bf.load15 = load i32, i32* %code14, align 8
  %bf.clear16 = and i32 %bf.load15, 255
  %cmp17 = icmp eq i32 %bf.clear16, 34
  br i1 %cmp17, label %if.then.18, label %if.else.24

if.then.18:                                       ; preds = %if.else.12
  %13 = load i8*, i8** %msgid.addr, align 8
  %14 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %decl19 = bitcast %union.tree_node* %14 to %struct.tree_decl*
  %name20 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl19, i32 0, i32 8
  %15 = load %union.tree_node*, %union.tree_node** %name20, align 8
  %identifier21 = bitcast %union.tree_node* %15 to %struct.tree_identifier*
  %id22 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier21, i32 0, i32 1
  %str23 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id22, i32 0, i32 1
  %16 = load i8*, i8** %str23, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.83, i32 0, i32 0), i8* %13, i8* %16)
  br label %if.end.25

if.else.24:                                       ; preds = %if.else.12
  %17 = load i8*, i8** %msgid.addr, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.84, i32 0, i32 0), i8* %17)
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.24, %if.then.18
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %if.end
  ret void
}

declare %union.tree_node* @non_lvalue(%union.tree_node*) #1

declare %union.tree_node* @byte_position(%union.tree_node*) #1

declare i32 @staticp(%union.tree_node*) #1

declare void @put_var_into_stack(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_conditional_expr(%union.tree_node* %ifexp, %union.tree_node* %op1, %union.tree_node* %op2) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %ifexp.addr = alloca %union.tree_node*, align 8
  %op1.addr = alloca %union.tree_node*, align 8
  %op2.addr = alloca %union.tree_node*, align 8
  %type1 = alloca %union.tree_node*, align 8
  %type2 = alloca %union.tree_node*, align 8
  %code1 = alloca i32, align 4
  %code2 = alloca i32, align 4
  %result_type = alloca %union.tree_node*, align 8
  %orig_op1 = alloca %union.tree_node*, align 8
  %orig_op2 = alloca %union.tree_node*, align 8
  %unsigned_op1 = alloca i32, align 4
  %unsigned_op2 = alloca i32, align 4
  store %union.tree_node* %ifexp, %union.tree_node** %ifexp.addr, align 8
  store %union.tree_node* %op1, %union.tree_node** %op1.addr, align 8
  store %union.tree_node* %op2, %union.tree_node** %op2.addr, align 8
  store %union.tree_node* null, %union.tree_node** %result_type, align 8
  %0 = load %union.tree_node*, %union.tree_node** %op1.addr, align 8
  store %union.tree_node* %0, %union.tree_node** %orig_op1, align 8
  %1 = load %union.tree_node*, %union.tree_node** %op2.addr, align 8
  store %union.tree_node* %1, %union.tree_node** %orig_op2, align 8
  %2 = load %union.tree_node*, %union.tree_node** %ifexp.addr, align 8
  %call = call %union.tree_node* @default_conversion(%union.tree_node* %2)
  %call1 = call %union.tree_node* @truthvalue_conversion(%union.tree_node* %call)
  store %union.tree_node* %call1, %union.tree_node** %ifexp.addr, align 8
  %3 = load %union.tree_node*, %union.tree_node** %op1.addr, align 8
  %common = bitcast %union.tree_node* %3 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common2 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp ne i32 %bf.clear, 5
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load %union.tree_node*, %union.tree_node** %op1.addr, align 8
  %call3 = call %union.tree_node* @default_conversion(%union.tree_node* %5)
  store %union.tree_node* %call3, %union.tree_node** %op1.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load %union.tree_node*, %union.tree_node** %op2.addr, align 8
  %common4 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %type5, align 8
  %common6 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %code7 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6, i32 0, i32 2
  %bf.load8 = load i32, i32* %code7, align 8
  %bf.clear9 = and i32 %bf.load8, 255
  %cmp10 = icmp ne i32 %bf.clear9, 5
  br i1 %cmp10, label %if.then.11, label %if.end.13

if.then.11:                                       ; preds = %if.end
  %8 = load %union.tree_node*, %union.tree_node** %op2.addr, align 8
  %call12 = call %union.tree_node* @default_conversion(%union.tree_node* %8)
  store %union.tree_node* %call12, %union.tree_node** %op2.addr, align 8
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.11, %if.end
  %9 = load %union.tree_node*, %union.tree_node** %ifexp.addr, align 8
  %common14 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %code15 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common14, i32 0, i32 2
  %bf.load16 = load i32, i32* %code15, align 8
  %bf.clear17 = and i32 %bf.load16, 255
  %cmp18 = icmp eq i32 %bf.clear17, 0
  br i1 %cmp18, label %if.then.34, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.13
  %10 = load %union.tree_node*, %union.tree_node** %op1.addr, align 8
  %common19 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %type20 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common19, i32 0, i32 1
  %11 = load %union.tree_node*, %union.tree_node** %type20, align 8
  %common21 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %code22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common21, i32 0, i32 2
  %bf.load23 = load i32, i32* %code22, align 8
  %bf.clear24 = and i32 %bf.load23, 255
  %cmp25 = icmp eq i32 %bf.clear24, 0
  br i1 %cmp25, label %if.then.34, label %lor.lhs.false.26

lor.lhs.false.26:                                 ; preds = %lor.lhs.false
  %12 = load %union.tree_node*, %union.tree_node** %op2.addr, align 8
  %common27 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %type28 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common27, i32 0, i32 1
  %13 = load %union.tree_node*, %union.tree_node** %type28, align 8
  %common29 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %code30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common29, i32 0, i32 2
  %bf.load31 = load i32, i32* %code30, align 8
  %bf.clear32 = and i32 %bf.load31, 255
  %cmp33 = icmp eq i32 %bf.clear32, 0
  br i1 %cmp33, label %if.then.34, label %if.end.35

if.then.34:                                       ; preds = %lor.lhs.false.26, %lor.lhs.false, %if.end.13
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %14, %union.tree_node** %retval
  br label %return

if.end.35:                                        ; preds = %lor.lhs.false.26
  %15 = load %union.tree_node*, %union.tree_node** %op1.addr, align 8
  %common36 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %type37 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common36, i32 0, i32 1
  %16 = load %union.tree_node*, %union.tree_node** %type37, align 8
  store %union.tree_node* %16, %union.tree_node** %type1, align 8
  %17 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %common38 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %code39 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common38, i32 0, i32 2
  %bf.load40 = load i32, i32* %code39, align 8
  %bf.clear41 = and i32 %bf.load40, 255
  store i32 %bf.clear41, i32* %code1, align 4
  %18 = load %union.tree_node*, %union.tree_node** %op2.addr, align 8
  %common42 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %type43 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common42, i32 0, i32 1
  %19 = load %union.tree_node*, %union.tree_node** %type43, align 8
  store %union.tree_node* %19, %union.tree_node** %type2, align 8
  %20 = load %union.tree_node*, %union.tree_node** %type2, align 8
  %common44 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %code45 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common44, i32 0, i32 2
  %bf.load46 = load i32, i32* %code45, align 8
  %bf.clear47 = and i32 %bf.load46, 255
  store i32 %bf.clear47, i32* %code2, align 4
  %21 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %type48 = bitcast %union.tree_node* %21 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type48, i32 0, i32 15
  %22 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %23 = load %union.tree_node*, %union.tree_node** %type2, align 8
  %type49 = bitcast %union.tree_node* %23 to %struct.tree_type*
  %main_variant50 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type49, i32 0, i32 15
  %24 = load %union.tree_node*, %union.tree_node** %main_variant50, align 8
  %cmp51 = icmp eq %union.tree_node* %22, %24
  br i1 %cmp51, label %if.then.52, label %if.else.58

if.then.52:                                       ; preds = %if.end.35
  %25 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %26 = load %union.tree_node*, %union.tree_node** %type2, align 8
  %cmp53 = icmp eq %union.tree_node* %25, %26
  br i1 %cmp53, label %if.then.54, label %if.else

if.then.54:                                       ; preds = %if.then.52
  %27 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %27, %union.tree_node** %result_type, align 8
  br label %if.end.57

if.else:                                          ; preds = %if.then.52
  %28 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %type55 = bitcast %union.tree_node* %28 to %struct.tree_type*
  %main_variant56 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type55, i32 0, i32 15
  %29 = load %union.tree_node*, %union.tree_node** %main_variant56, align 8
  store %union.tree_node* %29, %union.tree_node** %result_type, align 8
  br label %if.end.57

if.end.57:                                        ; preds = %if.else, %if.then.54
  br label %if.end.248

if.else.58:                                       ; preds = %if.end.35
  %30 = load i32, i32* %code1, align 4
  %cmp59 = icmp eq i32 %30, 6
  br i1 %cmp59, label %land.lhs.true, label %lor.lhs.false.60

lor.lhs.false.60:                                 ; preds = %if.else.58
  %31 = load i32, i32* %code1, align 4
  %cmp61 = icmp eq i32 %31, 7
  br i1 %cmp61, label %land.lhs.true, label %lor.lhs.false.62

lor.lhs.false.62:                                 ; preds = %lor.lhs.false.60
  %32 = load i32, i32* %code1, align 4
  %cmp63 = icmp eq i32 %32, 8
  br i1 %cmp63, label %land.lhs.true, label %if.else.113

land.lhs.true:                                    ; preds = %lor.lhs.false.62, %lor.lhs.false.60, %if.else.58
  %33 = load i32, i32* %code2, align 4
  %cmp64 = icmp eq i32 %33, 6
  br i1 %cmp64, label %if.then.69, label %lor.lhs.false.65

lor.lhs.false.65:                                 ; preds = %land.lhs.true
  %34 = load i32, i32* %code2, align 4
  %cmp66 = icmp eq i32 %34, 7
  br i1 %cmp66, label %if.then.69, label %lor.lhs.false.67

lor.lhs.false.67:                                 ; preds = %lor.lhs.false.65
  %35 = load i32, i32* %code2, align 4
  %cmp68 = icmp eq i32 %35, 8
  br i1 %cmp68, label %if.then.69, label %if.else.113

if.then.69:                                       ; preds = %lor.lhs.false.67, %lor.lhs.false.65, %land.lhs.true
  %36 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %37 = load %union.tree_node*, %union.tree_node** %type2, align 8
  %call70 = call %union.tree_node* @common_type(%union.tree_node* %36, %union.tree_node* %37)
  store %union.tree_node* %call70, %union.tree_node** %result_type, align 8
  %38 = load i32, i32* @warn_sign_compare, align 4
  %cmp71 = icmp slt i32 %38, 0
  br i1 %cmp71, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.69
  %39 = load i32, i32* @extra_warnings, align 4
  %tobool = icmp ne i32 %39, 0
  br i1 %tobool, label %land.lhs.true.73, label %if.end.112

cond.false:                                       ; preds = %if.then.69
  %40 = load i32, i32* @warn_sign_compare, align 4
  %tobool72 = icmp ne i32 %40, 0
  br i1 %tobool72, label %land.lhs.true.73, label %if.end.112

land.lhs.true.73:                                 ; preds = %cond.false, %cond.true
  %41 = load i32, i32* @skip_evaluation, align 4
  %tobool74 = icmp ne i32 %41, 0
  br i1 %tobool74, label %if.end.112, label %if.then.75

if.then.75:                                       ; preds = %land.lhs.true.73
  %42 = load %union.tree_node*, %union.tree_node** %orig_op1, align 8
  %common76 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %type77 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common76, i32 0, i32 1
  %43 = load %union.tree_node*, %union.tree_node** %type77, align 8
  %common78 = bitcast %union.tree_node* %43 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common78, i32 0, i32 2
  %bf.load79 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr = lshr i32 %bf.load79, 13
  %bf.clear80 = and i32 %bf.lshr, 1
  store i32 %bf.clear80, i32* %unsigned_op1, align 4
  %44 = load %union.tree_node*, %union.tree_node** %orig_op2, align 8
  %common81 = bitcast %union.tree_node* %44 to %struct.tree_common*
  %type82 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common81, i32 0, i32 1
  %45 = load %union.tree_node*, %union.tree_node** %type82, align 8
  %common83 = bitcast %union.tree_node* %45 to %struct.tree_common*
  %unsigned_flag84 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common83, i32 0, i32 2
  %bf.load85 = load i32, i32* %unsigned_flag84, align 8
  %bf.lshr86 = lshr i32 %bf.load85, 13
  %bf.clear87 = and i32 %bf.lshr86, 1
  store i32 %bf.clear87, i32* %unsigned_op2, align 4
  %46 = load i32, i32* %unsigned_op1, align 4
  %47 = load i32, i32* %unsigned_op2, align 4
  %xor = xor i32 %46, %47
  %tobool88 = icmp ne i32 %xor, 0
  br i1 %tobool88, label %if.then.89, label %if.end.111

if.then.89:                                       ; preds = %if.then.75
  %48 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %common90 = bitcast %union.tree_node* %48 to %struct.tree_common*
  %unsigned_flag91 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common90, i32 0, i32 2
  %bf.load92 = load i32, i32* %unsigned_flag91, align 8
  %bf.lshr93 = lshr i32 %bf.load92, 13
  %bf.clear94 = and i32 %bf.lshr93, 1
  %tobool95 = icmp ne i32 %bf.clear94, 0
  br i1 %tobool95, label %if.else.97, label %if.then.96

if.then.96:                                       ; preds = %if.then.89
  br label %if.end.110

if.else.97:                                       ; preds = %if.then.89
  %49 = load i32, i32* %unsigned_op2, align 4
  %tobool98 = icmp ne i32 %49, 0
  br i1 %tobool98, label %land.lhs.true.99, label %lor.lhs.false.102

land.lhs.true.99:                                 ; preds = %if.else.97
  %50 = load %union.tree_node*, %union.tree_node** %op1.addr, align 8
  %call100 = call i32 @tree_expr_nonnegative_p(%union.tree_node* %50)
  %tobool101 = icmp ne i32 %call100, 0
  br i1 %tobool101, label %if.then.107, label %lor.lhs.false.102

lor.lhs.false.102:                                ; preds = %land.lhs.true.99, %if.else.97
  %51 = load i32, i32* %unsigned_op1, align 4
  %tobool103 = icmp ne i32 %51, 0
  br i1 %tobool103, label %land.lhs.true.104, label %if.else.108

land.lhs.true.104:                                ; preds = %lor.lhs.false.102
  %52 = load %union.tree_node*, %union.tree_node** %op2.addr, align 8
  %call105 = call i32 @tree_expr_nonnegative_p(%union.tree_node* %52)
  %tobool106 = icmp ne i32 %call105, 0
  br i1 %tobool106, label %if.then.107, label %if.else.108

if.then.107:                                      ; preds = %land.lhs.true.104, %land.lhs.true.99
  br label %if.end.109

if.else.108:                                      ; preds = %land.lhs.true.104, %lor.lhs.false.102
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.91, i32 0, i32 0))
  br label %if.end.109

if.end.109:                                       ; preds = %if.else.108, %if.then.107
  br label %if.end.110

if.end.110:                                       ; preds = %if.end.109, %if.then.96
  br label %if.end.111

if.end.111:                                       ; preds = %if.end.110, %if.then.75
  br label %if.end.112

if.end.112:                                       ; preds = %if.end.111, %land.lhs.true.73, %cond.false, %cond.true
  br label %if.end.247

if.else.113:                                      ; preds = %lor.lhs.false.67, %lor.lhs.false.62
  %53 = load i32, i32* %code1, align 4
  %cmp114 = icmp eq i32 %53, 5
  br i1 %cmp114, label %if.then.117, label %lor.lhs.false.115

lor.lhs.false.115:                                ; preds = %if.else.113
  %54 = load i32, i32* %code2, align 4
  %cmp116 = icmp eq i32 %54, 5
  br i1 %cmp116, label %if.then.117, label %if.else.125

if.then.117:                                      ; preds = %lor.lhs.false.115, %if.else.113
  %55 = load i32, i32* @pedantic, align 4
  %tobool118 = icmp ne i32 %55, 0
  br i1 %tobool118, label %land.lhs.true.119, label %if.end.124

land.lhs.true.119:                                ; preds = %if.then.117
  %56 = load i32, i32* %code1, align 4
  %cmp120 = icmp ne i32 %56, 5
  br i1 %cmp120, label %if.then.123, label %lor.lhs.false.121

lor.lhs.false.121:                                ; preds = %land.lhs.true.119
  %57 = load i32, i32* %code2, align 4
  %cmp122 = icmp ne i32 %57, 5
  br i1 %cmp122, label %if.then.123, label %if.end.124

if.then.123:                                      ; preds = %lor.lhs.false.121, %land.lhs.true.119
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.92, i32 0, i32 0))
  br label %if.end.124

if.end.124:                                       ; preds = %if.then.123, %lor.lhs.false.121, %if.then.117
  %58 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  store %union.tree_node* %58, %union.tree_node** %result_type, align 8
  br label %if.end.246

if.else.125:                                      ; preds = %lor.lhs.false.115
  %59 = load i32, i32* %code1, align 4
  %cmp126 = icmp eq i32 %59, 13
  br i1 %cmp126, label %land.lhs.true.127, label %if.else.223

land.lhs.true.127:                                ; preds = %if.else.125
  %60 = load i32, i32* %code2, align 4
  %cmp128 = icmp eq i32 %60, 13
  br i1 %cmp128, label %if.then.129, label %if.else.223

if.then.129:                                      ; preds = %land.lhs.true.127
  %61 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %62 = load %union.tree_node*, %union.tree_node** %type2, align 8
  %call130 = call i32 @comp_target_types(%union.tree_node* %61, %union.tree_node* %62)
  %tobool131 = icmp ne i32 %call130, 0
  br i1 %tobool131, label %if.then.132, label %if.else.134

if.then.132:                                      ; preds = %if.then.129
  %63 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %64 = load %union.tree_node*, %union.tree_node** %type2, align 8
  %call133 = call %union.tree_node* @common_type(%union.tree_node* %63, %union.tree_node* %64)
  store %union.tree_node* %call133, %union.tree_node** %result_type, align 8
  br label %if.end.222

if.else.134:                                      ; preds = %if.then.129
  %65 = load %union.tree_node*, %union.tree_node** %op1.addr, align 8
  %call135 = call i32 @integer_zerop(%union.tree_node* %65)
  %tobool136 = icmp ne i32 %call135, 0
  br i1 %tobool136, label %land.lhs.true.137, label %if.else.149

land.lhs.true.137:                                ; preds = %if.else.134
  %66 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %common138 = bitcast %union.tree_node* %66 to %struct.tree_common*
  %type139 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common138, i32 0, i32 1
  %67 = load %union.tree_node*, %union.tree_node** %type139, align 8
  %68 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %cmp140 = icmp eq %union.tree_node* %67, %68
  br i1 %cmp140, label %land.lhs.true.141, label %if.else.149

land.lhs.true.141:                                ; preds = %land.lhs.true.137
  %69 = load %union.tree_node*, %union.tree_node** %orig_op1, align 8
  %common142 = bitcast %union.tree_node* %69 to %struct.tree_common*
  %code143 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common142, i32 0, i32 2
  %bf.load144 = load i32, i32* %code143, align 8
  %bf.clear145 = and i32 %bf.load144, 255
  %cmp146 = icmp ne i32 %bf.clear145, 115
  br i1 %cmp146, label %if.then.147, label %if.else.149

if.then.147:                                      ; preds = %land.lhs.true.141
  %70 = load %union.tree_node*, %union.tree_node** %type2, align 8
  %71 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %call148 = call %union.tree_node* @qualify_type(%union.tree_node* %70, %union.tree_node* %71)
  store %union.tree_node* %call148, %union.tree_node** %result_type, align 8
  br label %if.end.221

if.else.149:                                      ; preds = %land.lhs.true.141, %land.lhs.true.137, %if.else.134
  %72 = load %union.tree_node*, %union.tree_node** %op2.addr, align 8
  %call150 = call i32 @integer_zerop(%union.tree_node* %72)
  %tobool151 = icmp ne i32 %call150, 0
  br i1 %tobool151, label %land.lhs.true.152, label %if.else.164

land.lhs.true.152:                                ; preds = %if.else.149
  %73 = load %union.tree_node*, %union.tree_node** %type2, align 8
  %common153 = bitcast %union.tree_node* %73 to %struct.tree_common*
  %type154 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common153, i32 0, i32 1
  %74 = load %union.tree_node*, %union.tree_node** %type154, align 8
  %75 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %cmp155 = icmp eq %union.tree_node* %74, %75
  br i1 %cmp155, label %land.lhs.true.156, label %if.else.164

land.lhs.true.156:                                ; preds = %land.lhs.true.152
  %76 = load %union.tree_node*, %union.tree_node** %orig_op2, align 8
  %common157 = bitcast %union.tree_node* %76 to %struct.tree_common*
  %code158 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common157, i32 0, i32 2
  %bf.load159 = load i32, i32* %code158, align 8
  %bf.clear160 = and i32 %bf.load159, 255
  %cmp161 = icmp ne i32 %bf.clear160, 115
  br i1 %cmp161, label %if.then.162, label %if.else.164

if.then.162:                                      ; preds = %land.lhs.true.156
  %77 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %78 = load %union.tree_node*, %union.tree_node** %type2, align 8
  %call163 = call %union.tree_node* @qualify_type(%union.tree_node* %77, %union.tree_node* %78)
  store %union.tree_node* %call163, %union.tree_node** %result_type, align 8
  br label %if.end.220

if.else.164:                                      ; preds = %land.lhs.true.156, %land.lhs.true.152, %if.else.149
  %79 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %common165 = bitcast %union.tree_node* %79 to %struct.tree_common*
  %type166 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common165, i32 0, i32 1
  %80 = load %union.tree_node*, %union.tree_node** %type166, align 8
  %common167 = bitcast %union.tree_node* %80 to %struct.tree_common*
  %code168 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common167, i32 0, i32 2
  %bf.load169 = load i32, i32* %code168, align 8
  %bf.clear170 = and i32 %bf.load169, 255
  %cmp171 = icmp eq i32 %bf.clear170, 5
  br i1 %cmp171, label %if.then.172, label %if.else.190

if.then.172:                                      ; preds = %if.else.164
  %81 = load i32, i32* @pedantic, align 4
  %tobool173 = icmp ne i32 %81, 0
  br i1 %tobool173, label %land.lhs.true.174, label %if.end.183

land.lhs.true.174:                                ; preds = %if.then.172
  %82 = load %union.tree_node*, %union.tree_node** %type2, align 8
  %common175 = bitcast %union.tree_node* %82 to %struct.tree_common*
  %type176 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common175, i32 0, i32 1
  %83 = load %union.tree_node*, %union.tree_node** %type176, align 8
  %common177 = bitcast %union.tree_node* %83 to %struct.tree_common*
  %code178 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common177, i32 0, i32 2
  %bf.load179 = load i32, i32* %code178, align 8
  %bf.clear180 = and i32 %bf.load179, 255
  %cmp181 = icmp eq i32 %bf.clear180, 23
  br i1 %cmp181, label %if.then.182, label %if.end.183

if.then.182:                                      ; preds = %land.lhs.true.174
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.93, i32 0, i32 0))
  br label %if.end.183

if.end.183:                                       ; preds = %if.then.182, %land.lhs.true.174, %if.then.172
  %84 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %common184 = bitcast %union.tree_node* %84 to %struct.tree_common*
  %type185 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common184, i32 0, i32 1
  %85 = load %union.tree_node*, %union.tree_node** %type185, align 8
  %86 = load %union.tree_node*, %union.tree_node** %type2, align 8
  %common186 = bitcast %union.tree_node* %86 to %struct.tree_common*
  %type187 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common186, i32 0, i32 1
  %87 = load %union.tree_node*, %union.tree_node** %type187, align 8
  %call188 = call %union.tree_node* @qualify_type(%union.tree_node* %85, %union.tree_node* %87)
  %call189 = call %union.tree_node* @build_pointer_type(%union.tree_node* %call188)
  store %union.tree_node* %call189, %union.tree_node** %result_type, align 8
  br label %if.end.219

if.else.190:                                      ; preds = %if.else.164
  %88 = load %union.tree_node*, %union.tree_node** %type2, align 8
  %common191 = bitcast %union.tree_node* %88 to %struct.tree_common*
  %type192 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common191, i32 0, i32 1
  %89 = load %union.tree_node*, %union.tree_node** %type192, align 8
  %common193 = bitcast %union.tree_node* %89 to %struct.tree_common*
  %code194 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common193, i32 0, i32 2
  %bf.load195 = load i32, i32* %code194, align 8
  %bf.clear196 = and i32 %bf.load195, 255
  %cmp197 = icmp eq i32 %bf.clear196, 5
  br i1 %cmp197, label %if.then.198, label %if.else.216

if.then.198:                                      ; preds = %if.else.190
  %90 = load i32, i32* @pedantic, align 4
  %tobool199 = icmp ne i32 %90, 0
  br i1 %tobool199, label %land.lhs.true.200, label %if.end.209

land.lhs.true.200:                                ; preds = %if.then.198
  %91 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %common201 = bitcast %union.tree_node* %91 to %struct.tree_common*
  %type202 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common201, i32 0, i32 1
  %92 = load %union.tree_node*, %union.tree_node** %type202, align 8
  %common203 = bitcast %union.tree_node* %92 to %struct.tree_common*
  %code204 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common203, i32 0, i32 2
  %bf.load205 = load i32, i32* %code204, align 8
  %bf.clear206 = and i32 %bf.load205, 255
  %cmp207 = icmp eq i32 %bf.clear206, 23
  br i1 %cmp207, label %if.then.208, label %if.end.209

if.then.208:                                      ; preds = %land.lhs.true.200
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.93, i32 0, i32 0))
  br label %if.end.209

if.end.209:                                       ; preds = %if.then.208, %land.lhs.true.200, %if.then.198
  %93 = load %union.tree_node*, %union.tree_node** %type2, align 8
  %common210 = bitcast %union.tree_node* %93 to %struct.tree_common*
  %type211 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common210, i32 0, i32 1
  %94 = load %union.tree_node*, %union.tree_node** %type211, align 8
  %95 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %common212 = bitcast %union.tree_node* %95 to %struct.tree_common*
  %type213 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common212, i32 0, i32 1
  %96 = load %union.tree_node*, %union.tree_node** %type213, align 8
  %call214 = call %union.tree_node* @qualify_type(%union.tree_node* %94, %union.tree_node* %96)
  %call215 = call %union.tree_node* @build_pointer_type(%union.tree_node* %call214)
  store %union.tree_node* %call215, %union.tree_node** %result_type, align 8
  br label %if.end.218

if.else.216:                                      ; preds = %if.else.190
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.94, i32 0, i32 0))
  %97 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %call217 = call %union.tree_node* @build_pointer_type(%union.tree_node* %97)
  store %union.tree_node* %call217, %union.tree_node** %result_type, align 8
  br label %if.end.218

if.end.218:                                       ; preds = %if.else.216, %if.end.209
  br label %if.end.219

if.end.219:                                       ; preds = %if.end.218, %if.end.183
  br label %if.end.220

if.end.220:                                       ; preds = %if.end.219, %if.then.162
  br label %if.end.221

if.end.221:                                       ; preds = %if.end.220, %if.then.147
  br label %if.end.222

if.end.222:                                       ; preds = %if.end.221, %if.then.132
  br label %if.end.245

if.else.223:                                      ; preds = %land.lhs.true.127, %if.else.125
  %98 = load i32, i32* %code1, align 4
  %cmp224 = icmp eq i32 %98, 13
  br i1 %cmp224, label %land.lhs.true.225, label %if.else.233

land.lhs.true.225:                                ; preds = %if.else.223
  %99 = load i32, i32* %code2, align 4
  %cmp226 = icmp eq i32 %99, 6
  br i1 %cmp226, label %if.then.227, label %if.else.233

if.then.227:                                      ; preds = %land.lhs.true.225
  %100 = load %union.tree_node*, %union.tree_node** %op2.addr, align 8
  %call228 = call i32 @integer_zerop(%union.tree_node* %100)
  %tobool229 = icmp ne i32 %call228, 0
  br i1 %tobool229, label %if.else.231, label %if.then.230

if.then.230:                                      ; preds = %if.then.227
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.95, i32 0, i32 0))
  br label %if.end.232

if.else.231:                                      ; preds = %if.then.227
  %101 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 14), align 8
  store %union.tree_node* %101, %union.tree_node** %op2.addr, align 8
  br label %if.end.232

if.end.232:                                       ; preds = %if.else.231, %if.then.230
  %102 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %102, %union.tree_node** %result_type, align 8
  br label %if.end.244

if.else.233:                                      ; preds = %land.lhs.true.225, %if.else.223
  %103 = load i32, i32* %code2, align 4
  %cmp234 = icmp eq i32 %103, 13
  br i1 %cmp234, label %land.lhs.true.235, label %if.end.243

land.lhs.true.235:                                ; preds = %if.else.233
  %104 = load i32, i32* %code1, align 4
  %cmp236 = icmp eq i32 %104, 6
  br i1 %cmp236, label %if.then.237, label %if.end.243

if.then.237:                                      ; preds = %land.lhs.true.235
  %105 = load %union.tree_node*, %union.tree_node** %op1.addr, align 8
  %call238 = call i32 @integer_zerop(%union.tree_node* %105)
  %tobool239 = icmp ne i32 %call238, 0
  br i1 %tobool239, label %if.else.241, label %if.then.240

if.then.240:                                      ; preds = %if.then.237
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.95, i32 0, i32 0))
  br label %if.end.242

if.else.241:                                      ; preds = %if.then.237
  %106 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 14), align 8
  store %union.tree_node* %106, %union.tree_node** %op1.addr, align 8
  br label %if.end.242

if.end.242:                                       ; preds = %if.else.241, %if.then.240
  %107 = load %union.tree_node*, %union.tree_node** %type2, align 8
  store %union.tree_node* %107, %union.tree_node** %result_type, align 8
  br label %if.end.243

if.end.243:                                       ; preds = %if.end.242, %land.lhs.true.235, %if.else.233
  br label %if.end.244

if.end.244:                                       ; preds = %if.end.243, %if.end.232
  br label %if.end.245

if.end.245:                                       ; preds = %if.end.244, %if.end.222
  br label %if.end.246

if.end.246:                                       ; preds = %if.end.245, %if.end.124
  br label %if.end.247

if.end.247:                                       ; preds = %if.end.246, %if.end.112
  br label %if.end.248

if.end.248:                                       ; preds = %if.end.247, %if.end.57
  %108 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %tobool249 = icmp ne %union.tree_node* %108, null
  br i1 %tobool249, label %if.end.255, label %if.then.250

if.then.250:                                      ; preds = %if.end.248
  %109 = load i32, i32* @flag_cond_mismatch, align 4
  %tobool251 = icmp ne i32 %109, 0
  br i1 %tobool251, label %if.then.252, label %if.else.253

if.then.252:                                      ; preds = %if.then.250
  %110 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  store %union.tree_node* %110, %union.tree_node** %result_type, align 8
  br label %if.end.254

if.else.253:                                      ; preds = %if.then.250
  call void (i8*, ...) @error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.96, i32 0, i32 0))
  %111 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %111, %union.tree_node** %retval
  br label %return

if.end.254:                                       ; preds = %if.then.252
  br label %if.end.255

if.end.255:                                       ; preds = %if.end.254, %if.end.248
  %112 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %113 = load %union.tree_node*, %union.tree_node** %op1.addr, align 8
  %common256 = bitcast %union.tree_node* %113 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common256, i32 0, i32 2
  %bf.load257 = load i32, i32* %readonly_flag, align 8
  %bf.lshr258 = lshr i32 %bf.load257, 12
  %bf.clear259 = and i32 %bf.lshr258, 1
  %tobool260 = icmp ne i32 %bf.clear259, 0
  br i1 %tobool260, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end.255
  %114 = load %union.tree_node*, %union.tree_node** %op2.addr, align 8
  %common261 = bitcast %union.tree_node* %114 to %struct.tree_common*
  %readonly_flag262 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common261, i32 0, i32 2
  %bf.load263 = load i32, i32* %readonly_flag262, align 8
  %bf.lshr264 = lshr i32 %bf.load263, 12
  %bf.clear265 = and i32 %bf.lshr264, 1
  %tobool266 = icmp ne i32 %bf.clear265, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end.255
  %115 = phi i1 [ true, %if.end.255 ], [ %tobool266, %lor.rhs ]
  %cond = select i1 %115, i32 1, i32 0
  %116 = load %union.tree_node*, %union.tree_node** %op1.addr, align 8
  %common267 = bitcast %union.tree_node* %116 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common267, i32 0, i32 2
  %bf.load268 = load i32, i32* %volatile_flag, align 8
  %bf.lshr269 = lshr i32 %bf.load268, 11
  %bf.clear270 = and i32 %bf.lshr269, 1
  %tobool271 = icmp ne i32 %bf.clear270, 0
  br i1 %tobool271, label %lor.end.279, label %lor.rhs.272

lor.rhs.272:                                      ; preds = %lor.end
  %117 = load %union.tree_node*, %union.tree_node** %op2.addr, align 8
  %common273 = bitcast %union.tree_node* %117 to %struct.tree_common*
  %volatile_flag274 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common273, i32 0, i32 2
  %bf.load275 = load i32, i32* %volatile_flag274, align 8
  %bf.lshr276 = lshr i32 %bf.load275, 11
  %bf.clear277 = and i32 %bf.lshr276, 1
  %tobool278 = icmp ne i32 %bf.clear277, 0
  br label %lor.end.279

lor.end.279:                                      ; preds = %lor.rhs.272, %lor.end
  %118 = phi i1 [ true, %lor.end ], [ %tobool278, %lor.rhs.272 ]
  %cond280 = select i1 %118, i32 2, i32 0
  %or = or i32 %cond, %cond280
  %call281 = call %union.tree_node* @build_qualified_type(%union.tree_node* %112, i32 %or)
  store %union.tree_node* %call281, %union.tree_node** %result_type, align 8
  %119 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %120 = load %union.tree_node*, %union.tree_node** %op1.addr, align 8
  %common282 = bitcast %union.tree_node* %120 to %struct.tree_common*
  %type283 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common282, i32 0, i32 1
  %121 = load %union.tree_node*, %union.tree_node** %type283, align 8
  %cmp284 = icmp ne %union.tree_node* %119, %121
  br i1 %cmp284, label %if.then.285, label %if.end.287

if.then.285:                                      ; preds = %lor.end.279
  %122 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %123 = load %union.tree_node*, %union.tree_node** %op1.addr, align 8
  %call286 = call %union.tree_node* @convert_and_check(%union.tree_node* %122, %union.tree_node* %123)
  store %union.tree_node* %call286, %union.tree_node** %op1.addr, align 8
  br label %if.end.287

if.end.287:                                       ; preds = %if.then.285, %lor.end.279
  %124 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %125 = load %union.tree_node*, %union.tree_node** %op2.addr, align 8
  %common288 = bitcast %union.tree_node* %125 to %struct.tree_common*
  %type289 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common288, i32 0, i32 1
  %126 = load %union.tree_node*, %union.tree_node** %type289, align 8
  %cmp290 = icmp ne %union.tree_node* %124, %126
  br i1 %cmp290, label %if.then.291, label %if.end.293

if.then.291:                                      ; preds = %if.end.287
  %127 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %128 = load %union.tree_node*, %union.tree_node** %op2.addr, align 8
  %call292 = call %union.tree_node* @convert_and_check(%union.tree_node* %127, %union.tree_node* %128)
  store %union.tree_node* %call292, %union.tree_node** %op2.addr, align 8
  br label %if.end.293

if.end.293:                                       ; preds = %if.then.291, %if.end.287
  %129 = load %union.tree_node*, %union.tree_node** %ifexp.addr, align 8
  %common294 = bitcast %union.tree_node* %129 to %struct.tree_common*
  %code295 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common294, i32 0, i32 2
  %bf.load296 = load i32, i32* %code295, align 8
  %bf.clear297 = and i32 %bf.load296, 255
  %cmp298 = icmp eq i32 %bf.clear297, 25
  br i1 %cmp298, label %if.then.299, label %if.end.306

if.then.299:                                      ; preds = %if.end.293
  %130 = load %union.tree_node*, %union.tree_node** %ifexp.addr, align 8
  %call300 = call i32 @integer_zerop(%union.tree_node* %130)
  %tobool301 = icmp ne i32 %call300, 0
  br i1 %tobool301, label %cond.true.302, label %cond.false.303

cond.true.302:                                    ; preds = %if.then.299
  %131 = load %union.tree_node*, %union.tree_node** %op2.addr, align 8
  br label %cond.end

cond.false.303:                                   ; preds = %if.then.299
  %132 = load %union.tree_node*, %union.tree_node** %op1.addr, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false.303, %cond.true.302
  %cond304 = phi %union.tree_node* [ %131, %cond.true.302 ], [ %132, %cond.false.303 ]
  %call305 = call %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %cond304)
  store %union.tree_node* %call305, %union.tree_node** %retval
  br label %return

if.end.306:                                       ; preds = %if.end.293
  %133 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %134 = load %union.tree_node*, %union.tree_node** %ifexp.addr, align 8
  %135 = load %union.tree_node*, %union.tree_node** %op1.addr, align 8
  %136 = load %union.tree_node*, %union.tree_node** %op2.addr, align 8
  %call307 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 51, %union.tree_node* %133, %union.tree_node* %134, %union.tree_node* %135, %union.tree_node* %136)
  %call308 = call %union.tree_node* @fold(%union.tree_node* %call307)
  store %union.tree_node* %call308, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.306, %cond.end, %if.else.253, %if.then.34
  %137 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %137
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @qualify_type(%union.tree_node* %type, %union.tree_node* %like) #0 {
entry:
  %type.addr = alloca %union.tree_node*, align 8
  %like.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %like, %union.tree_node** %like.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %1 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common = bitcast %union.tree_node* %1 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %readonly_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 12
  %bf.clear = and i32 %bf.lshr, 1
  %mul = mul nsw i32 %bf.clear, 1
  %2 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common1 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load2 = load i32, i32* %volatile_flag, align 8
  %bf.lshr3 = lshr i32 %bf.load2, 11
  %bf.clear4 = and i32 %bf.lshr3, 1
  %mul5 = mul nsw i32 %bf.clear4, 2
  %or = or i32 %mul, %mul5
  %3 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type6 = bitcast %union.tree_node* %3 to %struct.tree_type*
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type6, i32 0, i32 6
  %bf.load7 = load i32, i32* %restrict_flag, align 4
  %bf.lshr8 = lshr i32 %bf.load7, 21
  %bf.clear9 = and i32 %bf.lshr8, 1
  %mul10 = mul nsw i32 %bf.clear9, 4
  %or11 = or i32 %or, %mul10
  %4 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common12 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common12, i32 0, i32 2
  %bf.load13 = load i32, i32* %code, align 8
  %bf.clear14 = and i32 %bf.load13, 255
  %cmp = icmp eq i32 %bf.clear14, 20
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %5 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common15 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %type16 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common15, i32 0, i32 1
  %6 = load %union.tree_node*, %union.tree_node** %type16, align 8
  %tobool = icmp ne %union.tree_node* %6, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %7 = phi i1 [ false, %entry ], [ %tobool, %land.rhs ]
  %land.ext = zext i1 %7 to i32
  %mul17 = mul nsw i32 %land.ext, 8
  %or18 = or i32 %or11, %mul17
  %8 = load %union.tree_node*, %union.tree_node** %like.addr, align 8
  %common19 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %readonly_flag20 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common19, i32 0, i32 2
  %bf.load21 = load i32, i32* %readonly_flag20, align 8
  %bf.lshr22 = lshr i32 %bf.load21, 12
  %bf.clear23 = and i32 %bf.lshr22, 1
  %mul24 = mul nsw i32 %bf.clear23, 1
  %9 = load %union.tree_node*, %union.tree_node** %like.addr, align 8
  %common25 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %volatile_flag26 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common25, i32 0, i32 2
  %bf.load27 = load i32, i32* %volatile_flag26, align 8
  %bf.lshr28 = lshr i32 %bf.load27, 11
  %bf.clear29 = and i32 %bf.lshr28, 1
  %mul30 = mul nsw i32 %bf.clear29, 2
  %or31 = or i32 %mul24, %mul30
  %10 = load %union.tree_node*, %union.tree_node** %like.addr, align 8
  %type32 = bitcast %union.tree_node* %10 to %struct.tree_type*
  %restrict_flag33 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type32, i32 0, i32 6
  %bf.load34 = load i32, i32* %restrict_flag33, align 4
  %bf.lshr35 = lshr i32 %bf.load34, 21
  %bf.clear36 = and i32 %bf.lshr35, 1
  %mul37 = mul nsw i32 %bf.clear36, 4
  %or38 = or i32 %or31, %mul37
  %11 = load %union.tree_node*, %union.tree_node** %like.addr, align 8
  %common39 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %code40 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common39, i32 0, i32 2
  %bf.load41 = load i32, i32* %code40, align 8
  %bf.clear42 = and i32 %bf.load41, 255
  %cmp43 = icmp eq i32 %bf.clear42, 20
  br i1 %cmp43, label %land.rhs.44, label %land.end.48

land.rhs.44:                                      ; preds = %land.end
  %12 = load %union.tree_node*, %union.tree_node** %like.addr, align 8
  %common45 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %type46 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common45, i32 0, i32 1
  %13 = load %union.tree_node*, %union.tree_node** %type46, align 8
  %tobool47 = icmp ne %union.tree_node* %13, null
  br label %land.end.48

land.end.48:                                      ; preds = %land.rhs.44, %land.end
  %14 = phi i1 [ false, %land.end ], [ %tobool47, %land.rhs.44 ]
  %land.ext49 = zext i1 %14 to i32
  %mul50 = mul nsw i32 %land.ext49, 8
  %or51 = or i32 %or38, %mul50
  %or52 = or i32 %or18, %or51
  %call = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %0, i32 %or52)
  ret %union.tree_node* %call
}

declare %union.tree_node* @convert_and_check(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_compound_expr(%union.tree_node* %list) #0 {
entry:
  %list.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %list, %union.tree_node** %list.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %list.addr, align 8
  %call = call %union.tree_node* @internal_build_compound_expr(%union.tree_node* %0, i32 1)
  ret %union.tree_node* %call
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @internal_build_compound_expr(%union.tree_node* %list, i32 %first_p) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %list.addr = alloca %union.tree_node*, align 8
  %first_p.addr = alloca i32, align 4
  %rest = alloca %union.tree_node*, align 8
  store %union.tree_node* %list, %union.tree_node** %list.addr, align 8
  store i32 %first_p, i32* %first_p.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** %list.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 0
  %1 = load %union.tree_node*, %union.tree_node** %chain, align 8
  %cmp = icmp eq %union.tree_node* %1, null
  br i1 %cmp, label %if.then, label %if.end.17

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %first_p.addr, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.end, label %if.then.1

if.then.1:                                        ; preds = %if.then
  %3 = load %union.tree_node*, %union.tree_node** %list.addr, align 8
  %list2 = bitcast %union.tree_node* %3 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list2, i32 0, i32 2
  %4 = load %union.tree_node*, %union.tree_node** %value, align 8
  %call = call %union.tree_node* @default_function_array_conversion(%union.tree_node* %4)
  %5 = load %union.tree_node*, %union.tree_node** %list.addr, align 8
  %list3 = bitcast %union.tree_node* %5 to %struct.tree_list*
  %value4 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list3, i32 0, i32 2
  store %union.tree_node* %call, %union.tree_node** %value4, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.1, %if.then
  %6 = load i32, i32* %first_p.addr, align 4
  %tobool5 = icmp ne i32 %6, 0
  br i1 %tobool5, label %if.end.14, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %7 = load %union.tree_node*, %union.tree_node** %list.addr, align 8
  %list6 = bitcast %union.tree_node* %7 to %struct.tree_list*
  %value7 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list6, i32 0, i32 2
  %8 = load %union.tree_node*, %union.tree_node** %value7, align 8
  %call8 = call i32 @integer_zerop(%union.tree_node* %8)
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.then.10, label %if.end.14

if.then.10:                                       ; preds = %land.lhs.true
  %9 = load %union.tree_node*, %union.tree_node** %list.addr, align 8
  %list11 = bitcast %union.tree_node* %9 to %struct.tree_list*
  %value12 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list11, i32 0, i32 2
  %10 = load %union.tree_node*, %union.tree_node** %value12, align 8
  %call13 = call %union.tree_node* @non_lvalue(%union.tree_node* %10)
  store %union.tree_node* %call13, %union.tree_node** %retval
  br label %return

if.end.14:                                        ; preds = %land.lhs.true, %if.end
  %11 = load %union.tree_node*, %union.tree_node** %list.addr, align 8
  %list15 = bitcast %union.tree_node* %11 to %struct.tree_list*
  %value16 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list15, i32 0, i32 2
  %12 = load %union.tree_node*, %union.tree_node** %value16, align 8
  store %union.tree_node* %12, %union.tree_node** %retval
  br label %return

if.end.17:                                        ; preds = %entry
  %13 = load %union.tree_node*, %union.tree_node** %list.addr, align 8
  %common18 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %chain19 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common18, i32 0, i32 0
  %14 = load %union.tree_node*, %union.tree_node** %chain19, align 8
  %call20 = call %union.tree_node* @internal_build_compound_expr(%union.tree_node* %14, i32 0)
  store %union.tree_node* %call20, %union.tree_node** %rest, align 8
  %15 = load %union.tree_node*, %union.tree_node** %list.addr, align 8
  %list21 = bitcast %union.tree_node* %15 to %struct.tree_list*
  %value22 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list21, i32 0, i32 2
  %16 = load %union.tree_node*, %union.tree_node** %value22, align 8
  %common23 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common23, i32 0, i32 2
  %bf.load = load i32, i32* %side_effects_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 8
  %bf.clear = and i32 %bf.lshr, 1
  %tobool24 = icmp ne i32 %bf.clear, 0
  br i1 %tobool24, label %if.else, label %if.then.25

if.then.25:                                       ; preds = %if.end.17
  %17 = load i32, i32* @extra_warnings, align 4
  %tobool26 = icmp ne i32 %17, 0
  br i1 %tobool26, label %land.lhs.true.28, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.25
  %18 = load i32, i32* @warn_unused_value, align 4
  %tobool27 = icmp ne i32 %18, 0
  br i1 %tobool27, label %land.lhs.true.28, label %if.end.45

land.lhs.true.28:                                 ; preds = %lor.lhs.false, %if.then.25
  %19 = load %union.tree_node*, %union.tree_node** %list.addr, align 8
  %list29 = bitcast %union.tree_node* %19 to %struct.tree_list*
  %value30 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list29, i32 0, i32 2
  %20 = load %union.tree_node*, %union.tree_node** %value30, align 8
  %common31 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common31, i32 0, i32 2
  %bf.load32 = load i32, i32* %code, align 8
  %bf.clear33 = and i32 %bf.load32, 255
  %cmp34 = icmp eq i32 %bf.clear33, 114
  br i1 %cmp34, label %land.lhs.true.35, label %if.then.44

land.lhs.true.35:                                 ; preds = %land.lhs.true.28
  %21 = load %union.tree_node*, %union.tree_node** %list.addr, align 8
  %list36 = bitcast %union.tree_node* %21 to %struct.tree_list*
  %value37 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list36, i32 0, i32 2
  %22 = load %union.tree_node*, %union.tree_node** %value37, align 8
  %common38 = bitcast %union.tree_node* %22 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common38, i32 0, i32 1
  %23 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common39 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %code40 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common39, i32 0, i32 2
  %bf.load41 = load i32, i32* %code40, align 8
  %bf.clear42 = and i32 %bf.load41, 255
  %cmp43 = icmp eq i32 %bf.clear42, 5
  br i1 %cmp43, label %if.end.45, label %if.then.44

if.then.44:                                       ; preds = %land.lhs.true.35, %land.lhs.true.28
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.171, i32 0, i32 0))
  br label %if.end.45

if.end.45:                                        ; preds = %if.then.44, %land.lhs.true.35, %lor.lhs.false
  %24 = load i32, i32* @pedantic, align 4
  %tobool46 = icmp ne i32 %24, 0
  br i1 %tobool46, label %if.end.48, label %if.then.47

if.then.47:                                       ; preds = %if.end.45
  %25 = load %union.tree_node*, %union.tree_node** %rest, align 8
  store %union.tree_node* %25, %union.tree_node** %retval
  br label %return

if.end.48:                                        ; preds = %if.end.45
  br label %if.end.55

if.else:                                          ; preds = %if.end.17
  %26 = load i32, i32* @warn_unused_value, align 4
  %tobool49 = icmp ne i32 %26, 0
  br i1 %tobool49, label %if.then.50, label %if.end.54

if.then.50:                                       ; preds = %if.else
  %27 = load %union.tree_node*, %union.tree_node** %list.addr, align 8
  %list51 = bitcast %union.tree_node* %27 to %struct.tree_list*
  %value52 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list51, i32 0, i32 2
  %28 = load %union.tree_node*, %union.tree_node** %value52, align 8
  %call53 = call i32 @warn_if_unused_value(%union.tree_node* %28)
  br label %if.end.54

if.end.54:                                        ; preds = %if.then.50, %if.else
  br label %if.end.55

if.end.55:                                        ; preds = %if.end.54, %if.end.48
  %29 = load %union.tree_node*, %union.tree_node** %rest, align 8
  %common56 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %type57 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common56, i32 0, i32 1
  %30 = load %union.tree_node*, %union.tree_node** %type57, align 8
  %31 = load %union.tree_node*, %union.tree_node** %list.addr, align 8
  %list58 = bitcast %union.tree_node* %31 to %struct.tree_list*
  %value59 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list58, i32 0, i32 2
  %32 = load %union.tree_node*, %union.tree_node** %value59, align 8
  %33 = load %union.tree_node*, %union.tree_node** %rest, align 8
  %call60 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %30, %union.tree_node* %32, %union.tree_node* %33)
  store %union.tree_node* %call60, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.55, %if.then.47, %if.end.14, %if.then.10
  %34 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %34
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_c_cast(%union.tree_node* %type, %union.tree_node* %expr) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  %expr.addr = alloca %union.tree_node*, align 8
  %value = alloca %union.tree_node*, align 8
  %field = alloca %union.tree_node*, align 8
  %name = alloca i8*, align 8
  %t = alloca %union.tree_node*, align 8
  %otype = alloca %union.tree_node*, align 8
  %ovalue = alloca %union.tree_node*, align 8
  %in_type = alloca %union.tree_node*, align 8
  %in_otype = alloca %union.tree_node*, align 8
  %added = alloca i32, align 4
  %discarded = alloca i32, align 4
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %expr, %union.tree_node** %expr.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  store %union.tree_node* %0, %union.tree_node** %value, align 8
  %1 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp = icmp eq %union.tree_node* %1, %2
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp1 = icmp eq %union.tree_node* %3, %4
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %5, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type2 = bitcast %union.tree_node* %6 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2, i32 0, i32 15
  %7 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  store %union.tree_node* %7, %union.tree_node** %type.addr, align 8
  %8 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common = bitcast %union.tree_node* %8 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp3 = icmp eq i32 %bf.clear, 18
  br i1 %cmp3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.end
  call void (i8*, ...) @error(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.97, i32 0, i32 0))
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %9, %union.tree_node** %retval
  br label %return

if.end.5:                                         ; preds = %if.end
  %10 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common6 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %code7 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6, i32 0, i32 2
  %bf.load8 = load i32, i32* %code7, align 8
  %bf.clear9 = and i32 %bf.load8, 255
  %cmp10 = icmp eq i32 %bf.clear9, 23
  br i1 %cmp10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end.5
  call void (i8*, ...) @error(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.98, i32 0, i32 0))
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %11, %union.tree_node** %retval
  br label %return

if.end.12:                                        ; preds = %if.end.5
  %12 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %13 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common13 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %type14 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common13, i32 0, i32 1
  %14 = load %union.tree_node*, %union.tree_node** %type14, align 8
  %type15 = bitcast %union.tree_node* %14 to %struct.tree_type*
  %main_variant16 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type15, i32 0, i32 15
  %15 = load %union.tree_node*, %union.tree_node** %main_variant16, align 8
  %cmp17 = icmp eq %union.tree_node* %12, %15
  br i1 %cmp17, label %if.then.18, label %if.else

if.then.18:                                       ; preds = %if.end.12
  %16 = load i32, i32* @pedantic, align 4
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then.19, label %if.end.33

if.then.19:                                       ; preds = %if.then.18
  %17 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common20 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %code21 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common20, i32 0, i32 2
  %bf.load22 = load i32, i32* %code21, align 8
  %bf.clear23 = and i32 %bf.load22, 255
  %cmp24 = icmp eq i32 %bf.clear23, 20
  br i1 %cmp24, label %if.then.31, label %lor.lhs.false.25

lor.lhs.false.25:                                 ; preds = %if.then.19
  %18 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common26 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %code27 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common26, i32 0, i32 2
  %bf.load28 = load i32, i32* %code27, align 8
  %bf.clear29 = and i32 %bf.load28, 255
  %cmp30 = icmp eq i32 %bf.clear29, 21
  br i1 %cmp30, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %lor.lhs.false.25, %if.then.19
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.99, i32 0, i32 0))
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.31, %lor.lhs.false.25
  br label %if.end.33

if.end.33:                                        ; preds = %if.end.32, %if.then.18
  br label %if.end.391

if.else:                                          ; preds = %if.end.12
  %19 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common34 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %code35 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common34, i32 0, i32 2
  %bf.load36 = load i32, i32* %code35, align 8
  %bf.clear37 = and i32 %bf.load36, 255
  %cmp38 = icmp eq i32 %bf.clear37, 21
  br i1 %cmp38, label %if.then.39, label %if.else.95

if.then.39:                                       ; preds = %if.else
  %20 = load %union.tree_node*, %union.tree_node** %value, align 8
  %call = call %union.tree_node* @default_function_array_conversion(%union.tree_node* %20)
  store %union.tree_node* %call, %union.tree_node** %value, align 8
  %21 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type40 = bitcast %union.tree_node* %21 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type40, i32 0, i32 1
  %22 = load %union.tree_node*, %union.tree_node** %values, align 8
  store %union.tree_node* %22, %union.tree_node** %field, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.39
  %23 = load %union.tree_node*, %union.tree_node** %field, align 8
  %tobool41 = icmp ne %union.tree_node* %23, null
  br i1 %tobool41, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %24 = load %union.tree_node*, %union.tree_node** %field, align 8
  %common42 = bitcast %union.tree_node* %24 to %struct.tree_common*
  %type43 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common42, i32 0, i32 1
  %25 = load %union.tree_node*, %union.tree_node** %type43, align 8
  %type44 = bitcast %union.tree_node* %25 to %struct.tree_type*
  %main_variant45 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type44, i32 0, i32 15
  %26 = load %union.tree_node*, %union.tree_node** %main_variant45, align 8
  %27 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common46 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %type47 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common46, i32 0, i32 1
  %28 = load %union.tree_node*, %union.tree_node** %type47, align 8
  %type48 = bitcast %union.tree_node* %28 to %struct.tree_type*
  %main_variant49 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type48, i32 0, i32 15
  %29 = load %union.tree_node*, %union.tree_node** %main_variant49, align 8
  %call50 = call i32 @comptypes(%union.tree_node* %26, %union.tree_node* %29)
  %tobool51 = icmp ne i32 %call50, 0
  br i1 %tobool51, label %if.then.52, label %if.end.53

if.then.52:                                       ; preds = %for.body
  br label %for.end

if.end.53:                                        ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.53
  %30 = load %union.tree_node*, %union.tree_node** %field, align 8
  %common54 = bitcast %union.tree_node* %30 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common54, i32 0, i32 0
  %31 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %31, %union.tree_node** %field, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.52, %for.cond
  %32 = load %union.tree_node*, %union.tree_node** %field, align 8
  %tobool55 = icmp ne %union.tree_node* %32, null
  br i1 %tobool55, label %if.then.56, label %if.end.94

if.then.56:                                       ; preds = %for.end
  %33 = load i32, i32* @pedantic, align 4
  %tobool57 = icmp ne i32 %33, 0
  br i1 %tobool57, label %if.then.58, label %if.end.59

if.then.58:                                       ; preds = %if.then.56
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.100, i32 0, i32 0))
  br label %if.end.59

if.end.59:                                        ; preds = %if.then.58, %if.then.56
  %34 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type60 = bitcast %union.tree_node* %34 to %struct.tree_type*
  %name61 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type60, i32 0, i32 11
  %35 = load %union.tree_node*, %union.tree_node** %name61, align 8
  %cmp62 = icmp ne %union.tree_node* %35, null
  br i1 %cmp62, label %if.then.63, label %if.else.82

if.then.63:                                       ; preds = %if.end.59
  %36 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type64 = bitcast %union.tree_node* %36 to %struct.tree_type*
  %name65 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type64, i32 0, i32 11
  %37 = load %union.tree_node*, %union.tree_node** %name65, align 8
  %common66 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %code67 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common66, i32 0, i32 2
  %bf.load68 = load i32, i32* %code67, align 8
  %bf.clear69 = and i32 %bf.load68, 255
  %cmp70 = icmp eq i32 %bf.clear69, 1
  br i1 %cmp70, label %if.then.71, label %if.else.74

if.then.71:                                       ; preds = %if.then.63
  %38 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type72 = bitcast %union.tree_node* %38 to %struct.tree_type*
  %name73 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type72, i32 0, i32 11
  %39 = load %union.tree_node*, %union.tree_node** %name73, align 8
  %identifier = bitcast %union.tree_node* %39 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %40 = load i8*, i8** %str, align 8
  store i8* %40, i8** %name, align 8
  br label %if.end.81

if.else.74:                                       ; preds = %if.then.63
  %41 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type75 = bitcast %union.tree_node* %41 to %struct.tree_type*
  %name76 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type75, i32 0, i32 11
  %42 = load %union.tree_node*, %union.tree_node** %name76, align 8
  %decl = bitcast %union.tree_node* %42 to %struct.tree_decl*
  %name77 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 8
  %43 = load %union.tree_node*, %union.tree_node** %name77, align 8
  %identifier78 = bitcast %union.tree_node* %43 to %struct.tree_identifier*
  %id79 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier78, i32 0, i32 1
  %str80 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id79, i32 0, i32 1
  %44 = load i8*, i8** %str80, align 8
  store i8* %44, i8** %name, align 8
  br label %if.end.81

if.end.81:                                        ; preds = %if.else.74, %if.then.71
  br label %if.end.83

if.else.82:                                       ; preds = %if.end.59
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.101, i32 0, i32 0), i8** %name, align 8
  br label %if.end.83

if.end.83:                                        ; preds = %if.else.82, %if.end.81
  %45 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %46 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %47 = load %union.tree_node*, %union.tree_node** %field, align 8
  %48 = load %union.tree_node*, %union.tree_node** %value, align 8
  %call84 = call %union.tree_node* @build_tree_list(%union.tree_node* %47, %union.tree_node* %48)
  %call85 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 46, %union.tree_node* %46, %union.tree_node* null, %union.tree_node* %call84)
  %call86 = call %union.tree_node* @digest_init(%union.tree_node* %45, %union.tree_node* %call85, i32 0, i32 0)
  store %union.tree_node* %call86, %union.tree_node** %t, align 8
  %49 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common87 = bitcast %union.tree_node* %49 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common87, i32 0, i32 2
  %bf.load88 = load i32, i32* %constant_flag, align 8
  %bf.lshr = lshr i32 %bf.load88, 9
  %bf.clear89 = and i32 %bf.lshr, 1
  %50 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common90 = bitcast %union.tree_node* %50 to %struct.tree_common*
  %constant_flag91 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common90, i32 0, i32 2
  %bf.load92 = load i32, i32* %constant_flag91, align 8
  %bf.value = and i32 %bf.clear89, 1
  %bf.shl = shl i32 %bf.value, 9
  %bf.clear93 = and i32 %bf.load92, -513
  %bf.set = or i32 %bf.clear93, %bf.shl
  store i32 %bf.set, i32* %constant_flag91, align 8
  %51 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %51, %union.tree_node** %retval
  br label %return

if.end.94:                                        ; preds = %for.end
  call void (i8*, ...) @error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.102, i32 0, i32 0))
  %52 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %52, %union.tree_node** %retval
  br label %return

if.else.95:                                       ; preds = %if.else
  %53 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %54 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %cmp96 = icmp eq %union.tree_node* %53, %54
  br i1 %cmp96, label %if.then.97, label %if.end.99

if.then.97:                                       ; preds = %if.else.95
  %55 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %56 = load %union.tree_node*, %union.tree_node** %value, align 8
  %call98 = call %union.tree_node* @build1(i32 114, %union.tree_node* %55, %union.tree_node* %56)
  store %union.tree_node* %call98, %union.tree_node** %retval
  br label %return

if.end.99:                                        ; preds = %if.else.95
  %57 = load %union.tree_node*, %union.tree_node** %value, align 8
  %call100 = call %union.tree_node* @default_function_array_conversion(%union.tree_node* %57)
  store %union.tree_node* %call100, %union.tree_node** %value, align 8
  %58 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common101 = bitcast %union.tree_node* %58 to %struct.tree_common*
  %type102 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common101, i32 0, i32 1
  %59 = load %union.tree_node*, %union.tree_node** %type102, align 8
  store %union.tree_node* %59, %union.tree_node** %otype, align 8
  %60 = load i32, i32* @warn_cast_qual, align 4
  %tobool103 = icmp ne i32 %60, 0
  br i1 %tobool103, label %land.lhs.true, label %if.end.281

land.lhs.true:                                    ; preds = %if.end.99
  %61 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common104 = bitcast %union.tree_node* %61 to %struct.tree_common*
  %code105 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common104, i32 0, i32 2
  %bf.load106 = load i32, i32* %code105, align 8
  %bf.clear107 = and i32 %bf.load106, 255
  %cmp108 = icmp eq i32 %bf.clear107, 13
  br i1 %cmp108, label %land.lhs.true.109, label %if.end.281

land.lhs.true.109:                                ; preds = %land.lhs.true
  %62 = load %union.tree_node*, %union.tree_node** %otype, align 8
  %common110 = bitcast %union.tree_node* %62 to %struct.tree_common*
  %code111 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common110, i32 0, i32 2
  %bf.load112 = load i32, i32* %code111, align 8
  %bf.clear113 = and i32 %bf.load112, 255
  %cmp114 = icmp eq i32 %bf.clear113, 13
  br i1 %cmp114, label %if.then.115, label %if.end.281

if.then.115:                                      ; preds = %land.lhs.true.109
  %63 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %63, %union.tree_node** %in_type, align 8
  %64 = load %union.tree_node*, %union.tree_node** %otype, align 8
  store %union.tree_node* %64, %union.tree_node** %in_otype, align 8
  store i32 0, i32* %added, align 4
  store i32 0, i32* %discarded, align 4
  br label %do.body

do.body:                                          ; preds = %land.end.273, %if.then.115
  %65 = load %union.tree_node*, %union.tree_node** %in_otype, align 8
  %common116 = bitcast %union.tree_node* %65 to %struct.tree_common*
  %type117 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common116, i32 0, i32 1
  %66 = load %union.tree_node*, %union.tree_node** %type117, align 8
  store %union.tree_node* %66, %union.tree_node** %in_otype, align 8
  %67 = load %union.tree_node*, %union.tree_node** %in_type, align 8
  %common118 = bitcast %union.tree_node* %67 to %struct.tree_common*
  %type119 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common118, i32 0, i32 1
  %68 = load %union.tree_node*, %union.tree_node** %type119, align 8
  store %union.tree_node* %68, %union.tree_node** %in_type, align 8
  %69 = load %union.tree_node*, %union.tree_node** %in_otype, align 8
  %common120 = bitcast %union.tree_node* %69 to %struct.tree_common*
  %code121 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common120, i32 0, i32 2
  %bf.load122 = load i32, i32* %code121, align 8
  %bf.clear123 = and i32 %bf.load122, 255
  %cmp124 = icmp eq i32 %bf.clear123, 23
  br i1 %cmp124, label %land.lhs.true.125, label %if.else.191

land.lhs.true.125:                                ; preds = %do.body
  %70 = load %union.tree_node*, %union.tree_node** %in_type, align 8
  %common126 = bitcast %union.tree_node* %70 to %struct.tree_common*
  %code127 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common126, i32 0, i32 2
  %bf.load128 = load i32, i32* %code127, align 8
  %bf.clear129 = and i32 %bf.load128, 255
  %cmp130 = icmp eq i32 %bf.clear129, 23
  br i1 %cmp130, label %if.then.131, label %if.else.191

if.then.131:                                      ; preds = %land.lhs.true.125
  %71 = load %union.tree_node*, %union.tree_node** %in_type, align 8
  %common132 = bitcast %union.tree_node* %71 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common132, i32 0, i32 2
  %bf.load133 = load i32, i32* %readonly_flag, align 8
  %bf.lshr134 = lshr i32 %bf.load133, 12
  %bf.clear135 = and i32 %bf.lshr134, 1
  %mul = mul nsw i32 %bf.clear135, 1
  %72 = load %union.tree_node*, %union.tree_node** %in_type, align 8
  %common136 = bitcast %union.tree_node* %72 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common136, i32 0, i32 2
  %bf.load137 = load i32, i32* %volatile_flag, align 8
  %bf.lshr138 = lshr i32 %bf.load137, 11
  %bf.clear139 = and i32 %bf.lshr138, 1
  %mul140 = mul nsw i32 %bf.clear139, 2
  %or = or i32 %mul, %mul140
  %73 = load %union.tree_node*, %union.tree_node** %in_type, align 8
  %type141 = bitcast %union.tree_node* %73 to %struct.tree_type*
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type141, i32 0, i32 6
  %bf.load142 = load i32, i32* %restrict_flag, align 4
  %bf.lshr143 = lshr i32 %bf.load142, 21
  %bf.clear144 = and i32 %bf.lshr143, 1
  %mul145 = mul nsw i32 %bf.clear144, 4
  %or146 = or i32 %or, %mul145
  %74 = load %union.tree_node*, %union.tree_node** %in_type, align 8
  %common147 = bitcast %union.tree_node* %74 to %struct.tree_common*
  %code148 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common147, i32 0, i32 2
  %bf.load149 = load i32, i32* %code148, align 8
  %bf.clear150 = and i32 %bf.load149, 255
  %cmp151 = icmp eq i32 %bf.clear150, 20
  br i1 %cmp151, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then.131
  %75 = load %union.tree_node*, %union.tree_node** %in_type, align 8
  %common152 = bitcast %union.tree_node* %75 to %struct.tree_common*
  %type153 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common152, i32 0, i32 1
  %76 = load %union.tree_node*, %union.tree_node** %type153, align 8
  %tobool154 = icmp ne %union.tree_node* %76, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then.131
  %77 = phi i1 [ false, %if.then.131 ], [ %tobool154, %land.rhs ]
  %land.ext = zext i1 %77 to i32
  %mul155 = mul nsw i32 %land.ext, 8
  %or156 = or i32 %or146, %mul155
  %78 = load %union.tree_node*, %union.tree_node** %in_otype, align 8
  %common157 = bitcast %union.tree_node* %78 to %struct.tree_common*
  %readonly_flag158 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common157, i32 0, i32 2
  %bf.load159 = load i32, i32* %readonly_flag158, align 8
  %bf.lshr160 = lshr i32 %bf.load159, 12
  %bf.clear161 = and i32 %bf.lshr160, 1
  %mul162 = mul nsw i32 %bf.clear161, 1
  %79 = load %union.tree_node*, %union.tree_node** %in_otype, align 8
  %common163 = bitcast %union.tree_node* %79 to %struct.tree_common*
  %volatile_flag164 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common163, i32 0, i32 2
  %bf.load165 = load i32, i32* %volatile_flag164, align 8
  %bf.lshr166 = lshr i32 %bf.load165, 11
  %bf.clear167 = and i32 %bf.lshr166, 1
  %mul168 = mul nsw i32 %bf.clear167, 2
  %or169 = or i32 %mul162, %mul168
  %80 = load %union.tree_node*, %union.tree_node** %in_otype, align 8
  %type170 = bitcast %union.tree_node* %80 to %struct.tree_type*
  %restrict_flag171 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type170, i32 0, i32 6
  %bf.load172 = load i32, i32* %restrict_flag171, align 4
  %bf.lshr173 = lshr i32 %bf.load172, 21
  %bf.clear174 = and i32 %bf.lshr173, 1
  %mul175 = mul nsw i32 %bf.clear174, 4
  %or176 = or i32 %or169, %mul175
  %81 = load %union.tree_node*, %union.tree_node** %in_otype, align 8
  %common177 = bitcast %union.tree_node* %81 to %struct.tree_common*
  %code178 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common177, i32 0, i32 2
  %bf.load179 = load i32, i32* %code178, align 8
  %bf.clear180 = and i32 %bf.load179, 255
  %cmp181 = icmp eq i32 %bf.clear180, 20
  br i1 %cmp181, label %land.rhs.182, label %land.end.186

land.rhs.182:                                     ; preds = %land.end
  %82 = load %union.tree_node*, %union.tree_node** %in_otype, align 8
  %common183 = bitcast %union.tree_node* %82 to %struct.tree_common*
  %type184 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common183, i32 0, i32 1
  %83 = load %union.tree_node*, %union.tree_node** %type184, align 8
  %tobool185 = icmp ne %union.tree_node* %83, null
  br label %land.end.186

land.end.186:                                     ; preds = %land.rhs.182, %land.end
  %84 = phi i1 [ false, %land.end ], [ %tobool185, %land.rhs.182 ]
  %land.ext187 = zext i1 %84 to i32
  %mul188 = mul nsw i32 %land.ext187, 8
  %or189 = or i32 %or176, %mul188
  %neg = xor i32 %or189, -1
  %and = and i32 %or156, %neg
  %85 = load i32, i32* %added, align 4
  %or190 = or i32 %85, %and
  store i32 %or190, i32* %added, align 4
  br label %if.end.261

if.else.191:                                      ; preds = %land.lhs.true.125, %do.body
  %86 = load %union.tree_node*, %union.tree_node** %in_otype, align 8
  %common192 = bitcast %union.tree_node* %86 to %struct.tree_common*
  %readonly_flag193 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common192, i32 0, i32 2
  %bf.load194 = load i32, i32* %readonly_flag193, align 8
  %bf.lshr195 = lshr i32 %bf.load194, 12
  %bf.clear196 = and i32 %bf.lshr195, 1
  %mul197 = mul nsw i32 %bf.clear196, 1
  %87 = load %union.tree_node*, %union.tree_node** %in_otype, align 8
  %common198 = bitcast %union.tree_node* %87 to %struct.tree_common*
  %volatile_flag199 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common198, i32 0, i32 2
  %bf.load200 = load i32, i32* %volatile_flag199, align 8
  %bf.lshr201 = lshr i32 %bf.load200, 11
  %bf.clear202 = and i32 %bf.lshr201, 1
  %mul203 = mul nsw i32 %bf.clear202, 2
  %or204 = or i32 %mul197, %mul203
  %88 = load %union.tree_node*, %union.tree_node** %in_otype, align 8
  %type205 = bitcast %union.tree_node* %88 to %struct.tree_type*
  %restrict_flag206 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type205, i32 0, i32 6
  %bf.load207 = load i32, i32* %restrict_flag206, align 4
  %bf.lshr208 = lshr i32 %bf.load207, 21
  %bf.clear209 = and i32 %bf.lshr208, 1
  %mul210 = mul nsw i32 %bf.clear209, 4
  %or211 = or i32 %or204, %mul210
  %89 = load %union.tree_node*, %union.tree_node** %in_otype, align 8
  %common212 = bitcast %union.tree_node* %89 to %struct.tree_common*
  %code213 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common212, i32 0, i32 2
  %bf.load214 = load i32, i32* %code213, align 8
  %bf.clear215 = and i32 %bf.load214, 255
  %cmp216 = icmp eq i32 %bf.clear215, 20
  br i1 %cmp216, label %land.rhs.217, label %land.end.221

land.rhs.217:                                     ; preds = %if.else.191
  %90 = load %union.tree_node*, %union.tree_node** %in_otype, align 8
  %common218 = bitcast %union.tree_node* %90 to %struct.tree_common*
  %type219 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common218, i32 0, i32 1
  %91 = load %union.tree_node*, %union.tree_node** %type219, align 8
  %tobool220 = icmp ne %union.tree_node* %91, null
  br label %land.end.221

land.end.221:                                     ; preds = %land.rhs.217, %if.else.191
  %92 = phi i1 [ false, %if.else.191 ], [ %tobool220, %land.rhs.217 ]
  %land.ext222 = zext i1 %92 to i32
  %mul223 = mul nsw i32 %land.ext222, 8
  %or224 = or i32 %or211, %mul223
  %93 = load %union.tree_node*, %union.tree_node** %in_type, align 8
  %common225 = bitcast %union.tree_node* %93 to %struct.tree_common*
  %readonly_flag226 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common225, i32 0, i32 2
  %bf.load227 = load i32, i32* %readonly_flag226, align 8
  %bf.lshr228 = lshr i32 %bf.load227, 12
  %bf.clear229 = and i32 %bf.lshr228, 1
  %mul230 = mul nsw i32 %bf.clear229, 1
  %94 = load %union.tree_node*, %union.tree_node** %in_type, align 8
  %common231 = bitcast %union.tree_node* %94 to %struct.tree_common*
  %volatile_flag232 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common231, i32 0, i32 2
  %bf.load233 = load i32, i32* %volatile_flag232, align 8
  %bf.lshr234 = lshr i32 %bf.load233, 11
  %bf.clear235 = and i32 %bf.lshr234, 1
  %mul236 = mul nsw i32 %bf.clear235, 2
  %or237 = or i32 %mul230, %mul236
  %95 = load %union.tree_node*, %union.tree_node** %in_type, align 8
  %type238 = bitcast %union.tree_node* %95 to %struct.tree_type*
  %restrict_flag239 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type238, i32 0, i32 6
  %bf.load240 = load i32, i32* %restrict_flag239, align 4
  %bf.lshr241 = lshr i32 %bf.load240, 21
  %bf.clear242 = and i32 %bf.lshr241, 1
  %mul243 = mul nsw i32 %bf.clear242, 4
  %or244 = or i32 %or237, %mul243
  %96 = load %union.tree_node*, %union.tree_node** %in_type, align 8
  %common245 = bitcast %union.tree_node* %96 to %struct.tree_common*
  %code246 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common245, i32 0, i32 2
  %bf.load247 = load i32, i32* %code246, align 8
  %bf.clear248 = and i32 %bf.load247, 255
  %cmp249 = icmp eq i32 %bf.clear248, 20
  br i1 %cmp249, label %land.rhs.250, label %land.end.254

land.rhs.250:                                     ; preds = %land.end.221
  %97 = load %union.tree_node*, %union.tree_node** %in_type, align 8
  %common251 = bitcast %union.tree_node* %97 to %struct.tree_common*
  %type252 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common251, i32 0, i32 1
  %98 = load %union.tree_node*, %union.tree_node** %type252, align 8
  %tobool253 = icmp ne %union.tree_node* %98, null
  br label %land.end.254

land.end.254:                                     ; preds = %land.rhs.250, %land.end.221
  %99 = phi i1 [ false, %land.end.221 ], [ %tobool253, %land.rhs.250 ]
  %land.ext255 = zext i1 %99 to i32
  %mul256 = mul nsw i32 %land.ext255, 8
  %or257 = or i32 %or244, %mul256
  %neg258 = xor i32 %or257, -1
  %and259 = and i32 %or224, %neg258
  %100 = load i32, i32* %discarded, align 4
  %or260 = or i32 %100, %and259
  store i32 %or260, i32* %discarded, align 4
  br label %if.end.261

if.end.261:                                       ; preds = %land.end.254, %land.end.186
  br label %do.cond

do.cond:                                          ; preds = %if.end.261
  %101 = load %union.tree_node*, %union.tree_node** %in_type, align 8
  %common262 = bitcast %union.tree_node* %101 to %struct.tree_common*
  %code263 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common262, i32 0, i32 2
  %bf.load264 = load i32, i32* %code263, align 8
  %bf.clear265 = and i32 %bf.load264, 255
  %cmp266 = icmp eq i32 %bf.clear265, 13
  br i1 %cmp266, label %land.rhs.267, label %land.end.273

land.rhs.267:                                     ; preds = %do.cond
  %102 = load %union.tree_node*, %union.tree_node** %in_otype, align 8
  %common268 = bitcast %union.tree_node* %102 to %struct.tree_common*
  %code269 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common268, i32 0, i32 2
  %bf.load270 = load i32, i32* %code269, align 8
  %bf.clear271 = and i32 %bf.load270, 255
  %cmp272 = icmp eq i32 %bf.clear271, 13
  br label %land.end.273

land.end.273:                                     ; preds = %land.rhs.267, %do.cond
  %103 = phi i1 [ false, %do.cond ], [ %cmp272, %land.rhs.267 ]
  br i1 %103, label %do.body, label %do.end

do.end:                                           ; preds = %land.end.273
  %104 = load i32, i32* %added, align 4
  %tobool275 = icmp ne i32 %104, 0
  br i1 %tobool275, label %if.then.276, label %if.end.277

if.then.276:                                      ; preds = %do.end
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.103, i32 0, i32 0))
  br label %if.end.277

if.end.277:                                       ; preds = %if.then.276, %do.end
  %105 = load i32, i32* %discarded, align 4
  %tobool278 = icmp ne i32 %105, 0
  br i1 %tobool278, label %if.then.279, label %if.end.280

if.then.279:                                      ; preds = %if.end.277
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.104, i32 0, i32 0))
  br label %if.end.280

if.end.280:                                       ; preds = %if.then.279, %if.end.277
  br label %if.end.281

if.end.281:                                       ; preds = %if.end.280, %land.lhs.true.109, %land.lhs.true, %if.end.99
  %106 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common282 = bitcast %union.tree_node* %106 to %struct.tree_common*
  %code283 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common282, i32 0, i32 2
  %bf.load284 = load i32, i32* %code283, align 8
  %bf.clear285 = and i32 %bf.load284, 255
  %cmp286 = icmp eq i32 %bf.clear285, 6
  br i1 %cmp286, label %land.lhs.true.287, label %if.end.310

land.lhs.true.287:                                ; preds = %if.end.281
  %107 = load %union.tree_node*, %union.tree_node** %otype, align 8
  %common288 = bitcast %union.tree_node* %107 to %struct.tree_common*
  %code289 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common288, i32 0, i32 2
  %bf.load290 = load i32, i32* %code289, align 8
  %bf.clear291 = and i32 %bf.load290, 255
  %cmp292 = icmp eq i32 %bf.clear291, 13
  br i1 %cmp292, label %land.lhs.true.293, label %if.end.310

land.lhs.true.293:                                ; preds = %land.lhs.true.287
  %108 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type294 = bitcast %union.tree_node* %108 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type294, i32 0, i32 6
  %bf.load295 = load i32, i32* %precision, align 4
  %bf.clear296 = and i32 %bf.load295, 511
  %109 = load %union.tree_node*, %union.tree_node** %otype, align 8
  %type297 = bitcast %union.tree_node* %109 to %struct.tree_type*
  %precision298 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type297, i32 0, i32 6
  %bf.load299 = load i32, i32* %precision298, align 4
  %bf.clear300 = and i32 %bf.load299, 511
  %cmp301 = icmp ne i32 %bf.clear296, %bf.clear300
  br i1 %cmp301, label %land.lhs.true.302, label %if.end.310

land.lhs.true.302:                                ; preds = %land.lhs.true.293
  %110 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common303 = bitcast %union.tree_node* %110 to %struct.tree_common*
  %constant_flag304 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common303, i32 0, i32 2
  %bf.load305 = load i32, i32* %constant_flag304, align 8
  %bf.lshr306 = lshr i32 %bf.load305, 9
  %bf.clear307 = and i32 %bf.lshr306, 1
  %tobool308 = icmp ne i32 %bf.clear307, 0
  br i1 %tobool308, label %if.end.310, label %if.then.309

if.then.309:                                      ; preds = %land.lhs.true.302
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.105, i32 0, i32 0))
  br label %if.end.310

if.end.310:                                       ; preds = %if.then.309, %land.lhs.true.302, %land.lhs.true.293, %land.lhs.true.287, %if.end.281
  %111 = load i32, i32* @warn_bad_function_cast, align 4
  %tobool311 = icmp ne i32 %111, 0
  br i1 %tobool311, label %land.lhs.true.312, label %if.end.329

land.lhs.true.312:                                ; preds = %if.end.310
  %112 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common313 = bitcast %union.tree_node* %112 to %struct.tree_common*
  %code314 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common313, i32 0, i32 2
  %bf.load315 = load i32, i32* %code314, align 8
  %bf.clear316 = and i32 %bf.load315, 255
  %cmp317 = icmp eq i32 %bf.clear316, 53
  br i1 %cmp317, label %land.lhs.true.318, label %if.end.329

land.lhs.true.318:                                ; preds = %land.lhs.true.312
  %113 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common319 = bitcast %union.tree_node* %113 to %struct.tree_common*
  %code320 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common319, i32 0, i32 2
  %bf.load321 = load i32, i32* %code320, align 8
  %bf.clear322 = and i32 %bf.load321, 255
  %114 = load %union.tree_node*, %union.tree_node** %otype, align 8
  %common323 = bitcast %union.tree_node* %114 to %struct.tree_common*
  %code324 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common323, i32 0, i32 2
  %bf.load325 = load i32, i32* %code324, align 8
  %bf.clear326 = and i32 %bf.load325, 255
  %cmp327 = icmp ne i32 %bf.clear322, %bf.clear326
  br i1 %cmp327, label %if.then.328, label %if.end.329

if.then.328:                                      ; preds = %land.lhs.true.318
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.106, i32 0, i32 0))
  br label %if.end.329

if.end.329:                                       ; preds = %if.then.328, %land.lhs.true.318, %land.lhs.true.312, %if.end.310
  %115 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common330 = bitcast %union.tree_node* %115 to %struct.tree_common*
  %code331 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common330, i32 0, i32 2
  %bf.load332 = load i32, i32* %code331, align 8
  %bf.clear333 = and i32 %bf.load332, 255
  %cmp334 = icmp eq i32 %bf.clear333, 13
  br i1 %cmp334, label %land.lhs.true.335, label %if.end.359

land.lhs.true.335:                                ; preds = %if.end.329
  %116 = load %union.tree_node*, %union.tree_node** %otype, align 8
  %common336 = bitcast %union.tree_node* %116 to %struct.tree_common*
  %code337 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common336, i32 0, i32 2
  %bf.load338 = load i32, i32* %code337, align 8
  %bf.clear339 = and i32 %bf.load338, 255
  %cmp340 = icmp eq i32 %bf.clear339, 6
  br i1 %cmp340, label %land.lhs.true.341, label %if.end.359

land.lhs.true.341:                                ; preds = %land.lhs.true.335
  %117 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type342 = bitcast %union.tree_node* %117 to %struct.tree_type*
  %precision343 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type342, i32 0, i32 6
  %bf.load344 = load i32, i32* %precision343, align 4
  %bf.clear345 = and i32 %bf.load344, 511
  %118 = load %union.tree_node*, %union.tree_node** %otype, align 8
  %type346 = bitcast %union.tree_node* %118 to %struct.tree_type*
  %precision347 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type346, i32 0, i32 6
  %bf.load348 = load i32, i32* %precision347, align 4
  %bf.clear349 = and i32 %bf.load348, 511
  %cmp350 = icmp ne i32 %bf.clear345, %bf.clear349
  br i1 %cmp350, label %land.lhs.true.351, label %if.end.359

land.lhs.true.351:                                ; preds = %land.lhs.true.341
  %119 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common352 = bitcast %union.tree_node* %119 to %struct.tree_common*
  %constant_flag353 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common352, i32 0, i32 2
  %bf.load354 = load i32, i32* %constant_flag353, align 8
  %bf.lshr355 = lshr i32 %bf.load354, 9
  %bf.clear356 = and i32 %bf.lshr355, 1
  %tobool357 = icmp ne i32 %bf.clear356, 0
  br i1 %tobool357, label %if.end.359, label %if.then.358

if.then.358:                                      ; preds = %land.lhs.true.351
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.107, i32 0, i32 0))
  br label %if.end.359

if.end.359:                                       ; preds = %if.then.358, %land.lhs.true.351, %land.lhs.true.341, %land.lhs.true.335, %if.end.329
  %120 = load %union.tree_node*, %union.tree_node** %value, align 8
  store %union.tree_node* %120, %union.tree_node** %ovalue, align 8
  %121 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %122 = load %union.tree_node*, %union.tree_node** %value, align 8
  %call360 = call %union.tree_node* @convert(%union.tree_node* %121, %union.tree_node* %122)
  store %union.tree_node* %call360, %union.tree_node** %value, align 8
  %123 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common361 = bitcast %union.tree_node* %123 to %struct.tree_common*
  %code362 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common361, i32 0, i32 2
  %bf.load363 = load i32, i32* %code362, align 8
  %bf.clear364 = and i32 %bf.load363, 255
  %cmp365 = icmp eq i32 %bf.clear364, 25
  br i1 %cmp365, label %if.then.366, label %if.end.389

if.then.366:                                      ; preds = %if.end.359
  %124 = load %union.tree_node*, %union.tree_node** %ovalue, align 8
  %common367 = bitcast %union.tree_node* %124 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common367, i32 0, i32 2
  %bf.load368 = load i32, i32* %public_flag, align 8
  %bf.lshr369 = lshr i32 %bf.load368, 19
  %bf.clear370 = and i32 %bf.lshr369, 1
  %125 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common371 = bitcast %union.tree_node* %125 to %struct.tree_common*
  %public_flag372 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common371, i32 0, i32 2
  %bf.load373 = load i32, i32* %public_flag372, align 8
  %bf.value374 = and i32 %bf.clear370, 1
  %bf.shl375 = shl i32 %bf.value374, 19
  %bf.clear376 = and i32 %bf.load373, -524289
  %bf.set377 = or i32 %bf.clear376, %bf.shl375
  store i32 %bf.set377, i32* %public_flag372, align 8
  %126 = load %union.tree_node*, %union.tree_node** %ovalue, align 8
  %common378 = bitcast %union.tree_node* %126 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common378, i32 0, i32 2
  %bf.load379 = load i32, i32* %static_flag, align 8
  %bf.lshr380 = lshr i32 %bf.load379, 18
  %bf.clear381 = and i32 %bf.lshr380, 1
  %127 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common382 = bitcast %union.tree_node* %127 to %struct.tree_common*
  %static_flag383 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common382, i32 0, i32 2
  %bf.load384 = load i32, i32* %static_flag383, align 8
  %bf.value385 = and i32 %bf.clear381, 1
  %bf.shl386 = shl i32 %bf.value385, 18
  %bf.clear387 = and i32 %bf.load384, -262145
  %bf.set388 = or i32 %bf.clear387, %bf.shl386
  store i32 %bf.set388, i32* %static_flag383, align 8
  br label %if.end.389

if.end.389:                                       ; preds = %if.then.366, %if.end.359
  br label %if.end.390

if.end.390:                                       ; preds = %if.end.389
  br label %if.end.391

if.end.391:                                       ; preds = %if.end.390, %if.end.33
  %128 = load i32, i32* @pedantic, align 4
  %tobool392 = icmp ne i32 %128, 0
  br i1 %tobool392, label %land.lhs.true.393, label %if.end.415

land.lhs.true.393:                                ; preds = %if.end.391
  %129 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common394 = bitcast %union.tree_node* %129 to %struct.tree_common*
  %code395 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common394, i32 0, i32 2
  %bf.load396 = load i32, i32* %code395, align 8
  %bf.clear397 = and i32 %bf.load396, 255
  %cmp398 = icmp eq i32 %bf.clear397, 25
  br i1 %cmp398, label %land.lhs.true.399, label %if.end.415

land.lhs.true.399:                                ; preds = %land.lhs.true.393
  %130 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common400 = bitcast %union.tree_node* %130 to %struct.tree_common*
  %code401 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common400, i32 0, i32 2
  %bf.load402 = load i32, i32* %code401, align 8
  %bf.clear403 = and i32 %bf.load402, 255
  %cmp404 = icmp eq i32 %bf.clear403, 25
  br i1 %cmp404, label %land.lhs.true.405, label %if.end.415

land.lhs.true.405:                                ; preds = %land.lhs.true.399
  %131 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common406 = bitcast %union.tree_node* %131 to %struct.tree_common*
  %type407 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common406, i32 0, i32 1
  %132 = load %union.tree_node*, %union.tree_node** %type407, align 8
  %common408 = bitcast %union.tree_node* %132 to %struct.tree_common*
  %code409 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common408, i32 0, i32 2
  %bf.load410 = load i32, i32* %code409, align 8
  %bf.clear411 = and i32 %bf.load410, 255
  %cmp412 = icmp ne i32 %bf.clear411, 6
  br i1 %cmp412, label %if.then.413, label %if.end.415

if.then.413:                                      ; preds = %land.lhs.true.405
  %133 = load %union.tree_node*, %union.tree_node** %value, align 8
  %call414 = call %union.tree_node* @non_lvalue(%union.tree_node* %133)
  store %union.tree_node* %call414, %union.tree_node** %value, align 8
  br label %if.end.415

if.end.415:                                       ; preds = %if.then.413, %land.lhs.true.405, %land.lhs.true.399, %land.lhs.true.393, %if.end.391
  %134 = load %union.tree_node*, %union.tree_node** %value, align 8
  %135 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %cmp416 = icmp eq %union.tree_node* %134, %135
  br i1 %cmp416, label %land.lhs.true.417, label %if.end.421

land.lhs.true.417:                                ; preds = %if.end.415
  %136 = load i32, i32* @pedantic, align 4
  %tobool418 = icmp ne i32 %136, 0
  br i1 %tobool418, label %if.then.419, label %if.end.421

if.then.419:                                      ; preds = %land.lhs.true.417
  %137 = load %union.tree_node*, %union.tree_node** %value, align 8
  %call420 = call %union.tree_node* @non_lvalue(%union.tree_node* %137)
  store %union.tree_node* %call420, %union.tree_node** %value, align 8
  br label %if.end.421

if.end.421:                                       ; preds = %if.then.419, %land.lhs.true.417, %if.end.415
  %138 = load %union.tree_node*, %union.tree_node** %value, align 8
  store %union.tree_node* %138, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.421, %if.then.97, %if.end.94, %if.end.83, %if.then.11, %if.then.4, %if.then
  %139 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %139
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @digest_init(%union.tree_node* %type, %union.tree_node* %init, i32 %require_constant, i32 %constructor_constant) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  %init.addr = alloca %union.tree_node*, align 8
  %require_constant.addr = alloca i32, align 4
  %constructor_constant.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %inside_init = alloca %union.tree_node*, align 8
  %typ1 = alloca %union.tree_node*, align 8
  %decl = alloca %union.tree_node*, align 8
  %top = alloca %union.tree_node*, align 8
  %prev = alloca %union.tree_node*, align 8
  %otype = alloca %union.tree_node*, align 8
  %temp = alloca %union.tree_node*, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %init, %union.tree_node** %init.addr, align 8
  store i32 %require_constant, i32* %require_constant.addr, align 4
  store i32 %constructor_constant, i32* %constructor_constant.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %code, align 4
  %1 = load %union.tree_node*, %union.tree_node** %init.addr, align 8
  store %union.tree_node* %1, %union.tree_node** %inside_init, align 8
  %2 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp = icmp eq %union.tree_node* %2, %3
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %4 = load %union.tree_node*, %union.tree_node** %init.addr, align 8
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp2 = icmp eq %union.tree_node* %4, %5
  br i1 %cmp2, label %if.then, label %lor.lhs.false.3

lor.lhs.false.3:                                  ; preds = %lor.lhs.false
  %6 = load %union.tree_node*, %union.tree_node** %init.addr, align 8
  %common4 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %type5, align 8
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp6 = icmp eq %union.tree_node* %7, %8
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.3, %lor.lhs.false, %entry
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %9, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.3
  %10 = load %union.tree_node*, %union.tree_node** %init.addr, align 8
  %common7 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %code8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 2
  %bf.load9 = load i32, i32* %code8, align 8
  %bf.clear10 = and i32 %bf.load9, 255
  %cmp11 = icmp eq i32 %bf.clear10, 116
  br i1 %cmp11, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.end
  %11 = load %union.tree_node*, %union.tree_node** %init.addr, align 8
  %exp = bitcast %union.tree_node* %11 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  store %union.tree_node* %12, %union.tree_node** %inside_init, align 8
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.12, %if.end
  %13 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %call = call %union.tree_node* @fold(%union.tree_node* %13)
  store %union.tree_node* %call, %union.tree_node** %inside_init, align 8
  %14 = load i32, i32* %code, align 4
  %cmp14 = icmp eq i32 %14, 18
  br i1 %cmp14, label %if.then.15, label %if.end.118

if.then.15:                                       ; preds = %if.end.13
  %15 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common16 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %type17 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common16, i32 0, i32 1
  %16 = load %union.tree_node*, %union.tree_node** %type17, align 8
  %type18 = bitcast %union.tree_node* %16 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type18, i32 0, i32 15
  %17 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  store %union.tree_node* %17, %union.tree_node** %typ1, align 8
  %18 = load %union.tree_node*, %union.tree_node** %typ1, align 8
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %cmp19 = icmp eq %union.tree_node* %18, %19
  br i1 %cmp19, label %land.lhs.true, label %lor.lhs.false.20

lor.lhs.false.20:                                 ; preds = %if.then.15
  %20 = load %union.tree_node*, %union.tree_node** %typ1, align 8
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 1), align 8
  %cmp21 = icmp eq %union.tree_node* %20, %21
  br i1 %cmp21, label %land.lhs.true, label %lor.lhs.false.22

lor.lhs.false.22:                                 ; preds = %lor.lhs.false.20
  %22 = load %union.tree_node*, %union.tree_node** %typ1, align 8
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 2), align 8
  %cmp23 = icmp eq %union.tree_node* %22, %23
  br i1 %cmp23, label %land.lhs.true, label %lor.lhs.false.24

lor.lhs.false.24:                                 ; preds = %lor.lhs.false.22
  %24 = load %union.tree_node*, %union.tree_node** %typ1, align 8
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 2), align 8
  %cmp25 = icmp eq %union.tree_node* %24, %25
  br i1 %cmp25, label %land.lhs.true, label %lor.lhs.false.26

lor.lhs.false.26:                                 ; preds = %lor.lhs.false.24
  %26 = load %union.tree_node*, %union.tree_node** %typ1, align 8
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 1), align 8
  %cmp27 = icmp eq %union.tree_node* %26, %27
  br i1 %cmp27, label %land.lhs.true, label %if.end.117

land.lhs.true:                                    ; preds = %lor.lhs.false.26, %lor.lhs.false.24, %lor.lhs.false.22, %lor.lhs.false.20, %if.then.15
  %28 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %tobool = icmp ne %union.tree_node* %28, null
  br i1 %tobool, label %land.lhs.true.28, label %if.end.117

land.lhs.true.28:                                 ; preds = %land.lhs.true
  %29 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common29 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %code30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common29, i32 0, i32 2
  %bf.load31 = load i32, i32* %code30, align 8
  %bf.clear32 = and i32 %bf.load31, 255
  %cmp33 = icmp eq i32 %bf.clear32, 29
  br i1 %cmp33, label %if.then.34, label %if.end.117

if.then.34:                                       ; preds = %land.lhs.true.28
  %30 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common35 = bitcast %union.tree_node* %30 to %struct.tree_common*
  %type36 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common35, i32 0, i32 1
  %31 = load %union.tree_node*, %union.tree_node** %type36, align 8
  %type37 = bitcast %union.tree_node* %31 to %struct.tree_type*
  %main_variant38 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type37, i32 0, i32 15
  %32 = load %union.tree_node*, %union.tree_node** %main_variant38, align 8
  %33 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type39 = bitcast %union.tree_node* %33 to %struct.tree_type*
  %main_variant40 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type39, i32 0, i32 15
  %34 = load %union.tree_node*, %union.tree_node** %main_variant40, align 8
  %call41 = call i32 @comptypes(%union.tree_node* %32, %union.tree_node* %34)
  %tobool42 = icmp ne i32 %call41, 0
  br i1 %tobool42, label %if.then.43, label %if.end.44

if.then.43:                                       ; preds = %if.then.34
  %35 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  store %union.tree_node* %35, %union.tree_node** %retval
  br label %return

if.end.44:                                        ; preds = %if.then.34
  %36 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common45 = bitcast %union.tree_node* %36 to %struct.tree_common*
  %type46 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common45, i32 0, i32 1
  %37 = load %union.tree_node*, %union.tree_node** %type46, align 8
  %common47 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %type48 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common47, i32 0, i32 1
  %38 = load %union.tree_node*, %union.tree_node** %type48, align 8
  %type49 = bitcast %union.tree_node* %38 to %struct.tree_type*
  %main_variant50 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type49, i32 0, i32 15
  %39 = load %union.tree_node*, %union.tree_node** %main_variant50, align 8
  %40 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %cmp51 = icmp ne %union.tree_node* %39, %40
  br i1 %cmp51, label %land.lhs.true.52, label %if.end.62

land.lhs.true.52:                                 ; preds = %if.end.44
  %41 = load %union.tree_node*, %union.tree_node** %typ1, align 8
  %type53 = bitcast %union.tree_node* %41 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type53, i32 0, i32 6
  %bf.load54 = load i32, i32* %precision, align 4
  %bf.clear55 = and i32 %bf.load54, 511
  %42 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %type56 = bitcast %union.tree_node* %42 to %struct.tree_type*
  %precision57 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type56, i32 0, i32 6
  %bf.load58 = load i32, i32* %precision57, align 4
  %bf.clear59 = and i32 %bf.load58, 511
  %cmp60 = icmp eq i32 %bf.clear55, %bf.clear59
  br i1 %cmp60, label %if.then.61, label %if.end.62

if.then.61:                                       ; preds = %land.lhs.true.52
  call void @error_init(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.184, i32 0, i32 0))
  %43 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %43, %union.tree_node** %retval
  br label %return

if.end.62:                                        ; preds = %land.lhs.true.52, %if.end.44
  %44 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common63 = bitcast %union.tree_node* %44 to %struct.tree_common*
  %type64 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common63, i32 0, i32 1
  %45 = load %union.tree_node*, %union.tree_node** %type64, align 8
  %common65 = bitcast %union.tree_node* %45 to %struct.tree_common*
  %type66 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common65, i32 0, i32 1
  %46 = load %union.tree_node*, %union.tree_node** %type66, align 8
  %type67 = bitcast %union.tree_node* %46 to %struct.tree_type*
  %main_variant68 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type67, i32 0, i32 15
  %47 = load %union.tree_node*, %union.tree_node** %main_variant68, align 8
  %48 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %cmp69 = icmp eq %union.tree_node* %47, %48
  br i1 %cmp69, label %land.lhs.true.70, label %if.end.81

land.lhs.true.70:                                 ; preds = %if.end.62
  %49 = load %union.tree_node*, %union.tree_node** %typ1, align 8
  %type71 = bitcast %union.tree_node* %49 to %struct.tree_type*
  %precision72 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type71, i32 0, i32 6
  %bf.load73 = load i32, i32* %precision72, align 4
  %bf.clear74 = and i32 %bf.load73, 511
  %50 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %type75 = bitcast %union.tree_node* %50 to %struct.tree_type*
  %precision76 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type75, i32 0, i32 6
  %bf.load77 = load i32, i32* %precision76, align 4
  %bf.clear78 = and i32 %bf.load77, 511
  %cmp79 = icmp ne i32 %bf.clear74, %bf.clear78
  br i1 %cmp79, label %if.then.80, label %if.end.81

if.then.80:                                       ; preds = %land.lhs.true.70
  call void @error_init(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.185, i32 0, i32 0))
  %51 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %51, %union.tree_node** %retval
  br label %return

if.end.81:                                        ; preds = %land.lhs.true.70, %if.end.62
  %52 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %53 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common82 = bitcast %union.tree_node* %53 to %struct.tree_common*
  %type83 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common82, i32 0, i32 1
  store %union.tree_node* %52, %union.tree_node** %type83, align 8
  %54 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type84 = bitcast %union.tree_node* %54 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type84, i32 0, i32 1
  %55 = load %union.tree_node*, %union.tree_node** %values, align 8
  %cmp85 = icmp ne %union.tree_node* %55, null
  br i1 %cmp85, label %land.lhs.true.86, label %if.end.116

land.lhs.true.86:                                 ; preds = %if.end.81
  %56 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type87 = bitcast %union.tree_node* %56 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type87, i32 0, i32 2
  %57 = load %union.tree_node*, %union.tree_node** %size, align 8
  %cmp88 = icmp ne %union.tree_node* %57, null
  br i1 %cmp88, label %land.lhs.true.89, label %if.end.116

land.lhs.true.89:                                 ; preds = %land.lhs.true.86
  %58 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type90 = bitcast %union.tree_node* %58 to %struct.tree_type*
  %size91 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type90, i32 0, i32 2
  %59 = load %union.tree_node*, %union.tree_node** %size91, align 8
  %common92 = bitcast %union.tree_node* %59 to %struct.tree_common*
  %code93 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common92, i32 0, i32 2
  %bf.load94 = load i32, i32* %code93, align 8
  %bf.clear95 = and i32 %bf.load94, 255
  %cmp96 = icmp eq i32 %bf.clear95, 25
  br i1 %cmp96, label %land.lhs.true.97, label %if.end.116

land.lhs.true.97:                                 ; preds = %land.lhs.true.89
  %60 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type98 = bitcast %union.tree_node* %60 to %struct.tree_type*
  %size_unit = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type98, i32 0, i32 3
  %61 = load %union.tree_node*, %union.tree_node** %size_unit, align 8
  %62 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %string = bitcast %union.tree_node* %62 to %struct.tree_string*
  %length = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string, i32 0, i32 2
  %63 = load i32, i32* %length, align 4
  %64 = load %union.tree_node*, %union.tree_node** %typ1, align 8
  %type99 = bitcast %union.tree_node* %64 to %struct.tree_type*
  %precision100 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type99, i32 0, i32 6
  %bf.load101 = load i32, i32* %precision100, align 4
  %bf.clear102 = and i32 %bf.load101, 511
  %65 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %type103 = bitcast %union.tree_node* %65 to %struct.tree_type*
  %precision104 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type103, i32 0, i32 6
  %bf.load105 = load i32, i32* %precision104, align 4
  %bf.clear106 = and i32 %bf.load105, 511
  %cmp107 = icmp ne i32 %bf.clear102, %bf.clear106
  br i1 %cmp107, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.97
  %66 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 0), align 8
  %type108 = bitcast %union.tree_node* %66 to %struct.tree_type*
  %precision109 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type108, i32 0, i32 6
  %bf.load110 = load i32, i32* %precision109, align 4
  %bf.clear111 = and i32 %bf.load110, 511
  %div = sdiv i32 %bf.clear111, 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.97
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %div, %cond.true ], [ 1, %cond.false ]
  %sub = sub nsw i32 %63, %cond
  %conv = sext i32 %sub to i64
  %call112 = call i32 @compare_tree_int(%union.tree_node* %61, i64 %conv)
  %cmp113 = icmp sgt i32 0, %call112
  br i1 %cmp113, label %if.then.115, label %if.end.116

if.then.115:                                      ; preds = %cond.end
  call void @pedwarn_init(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.186, i32 0, i32 0))
  br label %if.end.116

if.end.116:                                       ; preds = %if.then.115, %cond.end, %land.lhs.true.89, %land.lhs.true.86, %if.end.81
  %67 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  store %union.tree_node* %67, %union.tree_node** %retval
  br label %return

if.end.117:                                       ; preds = %land.lhs.true.28, %land.lhs.true, %lor.lhs.false.26
  br label %if.end.118

if.end.118:                                       ; preds = %if.end.117, %if.end.13
  %68 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %tobool119 = icmp ne %union.tree_node* %68, null
  br i1 %tobool119, label %land.lhs.true.120, label %if.end.270

land.lhs.true.120:                                ; preds = %if.end.118
  %69 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common121 = bitcast %union.tree_node* %69 to %struct.tree_common*
  %type122 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common121, i32 0, i32 1
  %70 = load %union.tree_node*, %union.tree_node** %type122, align 8
  %cmp123 = icmp ne %union.tree_node* %70, null
  br i1 %cmp123, label %land.lhs.true.125, label %if.end.270

land.lhs.true.125:                                ; preds = %land.lhs.true.120
  %71 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common126 = bitcast %union.tree_node* %71 to %struct.tree_common*
  %type127 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common126, i32 0, i32 1
  %72 = load %union.tree_node*, %union.tree_node** %type127, align 8
  %type128 = bitcast %union.tree_node* %72 to %struct.tree_type*
  %main_variant129 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type128, i32 0, i32 15
  %73 = load %union.tree_node*, %union.tree_node** %main_variant129, align 8
  %74 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type130 = bitcast %union.tree_node* %74 to %struct.tree_type*
  %main_variant131 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type130, i32 0, i32 15
  %75 = load %union.tree_node*, %union.tree_node** %main_variant131, align 8
  %call132 = call i32 @comptypes(%union.tree_node* %73, %union.tree_node* %75)
  %tobool133 = icmp ne i32 %call132, 0
  br i1 %tobool133, label %if.then.180, label %lor.lhs.false.134

lor.lhs.false.134:                                ; preds = %land.lhs.true.125
  %76 = load i32, i32* %code, align 4
  %cmp135 = icmp eq i32 %76, 18
  br i1 %cmp135, label %land.lhs.true.137, label %lor.lhs.false.142

land.lhs.true.137:                                ; preds = %lor.lhs.false.134
  %77 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common138 = bitcast %union.tree_node* %77 to %struct.tree_common*
  %type139 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common138, i32 0, i32 1
  %78 = load %union.tree_node*, %union.tree_node** %type139, align 8
  %79 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %call140 = call i32 @comptypes(%union.tree_node* %78, %union.tree_node* %79)
  %tobool141 = icmp ne i32 %call140, 0
  br i1 %tobool141, label %if.then.180, label %lor.lhs.false.142

lor.lhs.false.142:                                ; preds = %land.lhs.true.137, %lor.lhs.false.134
  %80 = load i32, i32* %code, align 4
  %cmp143 = icmp eq i32 %80, 9
  br i1 %cmp143, label %land.lhs.true.145, label %lor.lhs.false.150

land.lhs.true.145:                                ; preds = %lor.lhs.false.142
  %81 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common146 = bitcast %union.tree_node* %81 to %struct.tree_common*
  %type147 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common146, i32 0, i32 1
  %82 = load %union.tree_node*, %union.tree_node** %type147, align 8
  %83 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %call148 = call i32 @comptypes(%union.tree_node* %82, %union.tree_node* %83)
  %tobool149 = icmp ne i32 %call148, 0
  br i1 %tobool149, label %if.then.180, label %lor.lhs.false.150

lor.lhs.false.150:                                ; preds = %land.lhs.true.145, %lor.lhs.false.142
  %84 = load i32, i32* %code, align 4
  %cmp151 = icmp eq i32 %84, 13
  br i1 %cmp151, label %land.lhs.true.153, label %if.end.270

land.lhs.true.153:                                ; preds = %lor.lhs.false.150
  %85 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common154 = bitcast %union.tree_node* %85 to %struct.tree_common*
  %type155 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common154, i32 0, i32 1
  %86 = load %union.tree_node*, %union.tree_node** %type155, align 8
  %common156 = bitcast %union.tree_node* %86 to %struct.tree_common*
  %code157 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common156, i32 0, i32 2
  %bf.load158 = load i32, i32* %code157, align 8
  %bf.clear159 = and i32 %bf.load158, 255
  %cmp160 = icmp eq i32 %bf.clear159, 18
  br i1 %cmp160, label %land.lhs.true.171, label %lor.lhs.false.162

lor.lhs.false.162:                                ; preds = %land.lhs.true.153
  %87 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common163 = bitcast %union.tree_node* %87 to %struct.tree_common*
  %type164 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common163, i32 0, i32 1
  %88 = load %union.tree_node*, %union.tree_node** %type164, align 8
  %common165 = bitcast %union.tree_node* %88 to %struct.tree_common*
  %code166 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common165, i32 0, i32 2
  %bf.load167 = load i32, i32* %code166, align 8
  %bf.clear168 = and i32 %bf.load167, 255
  %cmp169 = icmp eq i32 %bf.clear168, 23
  br i1 %cmp169, label %land.lhs.true.171, label %if.end.270

land.lhs.true.171:                                ; preds = %lor.lhs.false.162, %land.lhs.true.153
  %89 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common172 = bitcast %union.tree_node* %89 to %struct.tree_common*
  %type173 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common172, i32 0, i32 1
  %90 = load %union.tree_node*, %union.tree_node** %type173, align 8
  %common174 = bitcast %union.tree_node* %90 to %struct.tree_common*
  %type175 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common174, i32 0, i32 1
  %91 = load %union.tree_node*, %union.tree_node** %type175, align 8
  %92 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common176 = bitcast %union.tree_node* %92 to %struct.tree_common*
  %type177 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common176, i32 0, i32 1
  %93 = load %union.tree_node*, %union.tree_node** %type177, align 8
  %call178 = call i32 @comptypes(%union.tree_node* %91, %union.tree_node* %93)
  %tobool179 = icmp ne i32 %call178, 0
  br i1 %tobool179, label %if.then.180, label %if.end.270

if.then.180:                                      ; preds = %land.lhs.true.171, %land.lhs.true.145, %land.lhs.true.137, %land.lhs.true.125
  %94 = load i32, i32* %code, align 4
  %cmp181 = icmp eq i32 %94, 13
  br i1 %cmp181, label %if.then.183, label %if.end.185

if.then.183:                                      ; preds = %if.then.180
  %95 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %call184 = call %union.tree_node* @default_function_array_conversion(%union.tree_node* %95)
  store %union.tree_node* %call184, %union.tree_node** %inside_init, align 8
  br label %if.end.185

if.end.185:                                       ; preds = %if.then.183, %if.then.180
  %96 = load i32, i32* %require_constant.addr, align 4
  %tobool186 = icmp ne i32 %96, 0
  br i1 %tobool186, label %land.lhs.true.187, label %if.end.204

land.lhs.true.187:                                ; preds = %if.end.185
  %97 = load i32, i32* @flag_isoc99, align 4
  %tobool188 = icmp ne i32 %97, 0
  br i1 %tobool188, label %if.end.204, label %land.lhs.true.189

land.lhs.true.189:                                ; preds = %land.lhs.true.187
  %98 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common190 = bitcast %union.tree_node* %98 to %struct.tree_common*
  %code191 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common190, i32 0, i32 2
  %bf.load192 = load i32, i32* %code191, align 8
  %bf.clear193 = and i32 %bf.load192, 255
  %cmp194 = icmp eq i32 %bf.clear193, 170
  br i1 %cmp194, label %if.then.196, label %if.end.204

if.then.196:                                      ; preds = %land.lhs.true.189
  %99 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %exp197 = bitcast %union.tree_node* %99 to %struct.tree_exp*
  %operands198 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp197, i32 0, i32 2
  %arrayidx199 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands198, i32 0, i64 0
  %100 = load %union.tree_node*, %union.tree_node** %arrayidx199, align 8
  %exp200 = bitcast %union.tree_node* %100 to %struct.tree_exp*
  %operands201 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp200, i32 0, i32 2
  %arrayidx202 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands201, i32 0, i64 0
  %101 = load %union.tree_node*, %union.tree_node** %arrayidx202, align 8
  store %union.tree_node* %101, %union.tree_node** %decl, align 8
  %102 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl203 = bitcast %union.tree_node* %102 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl203, i32 0, i32 12
  %103 = load %union.tree_node*, %union.tree_node** %initial, align 8
  store %union.tree_node* %103, %union.tree_node** %inside_init, align 8
  br label %if.end.204

if.end.204:                                       ; preds = %if.then.196, %land.lhs.true.189, %land.lhs.true.187, %if.end.185
  %104 = load i32, i32* %code, align 4
  %cmp205 = icmp eq i32 %104, 18
  br i1 %cmp205, label %land.lhs.true.207, label %if.end.222

land.lhs.true.207:                                ; preds = %if.end.204
  %105 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common208 = bitcast %union.tree_node* %105 to %struct.tree_common*
  %code209 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common208, i32 0, i32 2
  %bf.load210 = load i32, i32* %code209, align 8
  %bf.clear211 = and i32 %bf.load210, 255
  %cmp212 = icmp ne i32 %bf.clear211, 29
  br i1 %cmp212, label %land.lhs.true.214, label %if.end.222

land.lhs.true.214:                                ; preds = %land.lhs.true.207
  %106 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common215 = bitcast %union.tree_node* %106 to %struct.tree_common*
  %code216 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common215, i32 0, i32 2
  %bf.load217 = load i32, i32* %code216, align 8
  %bf.clear218 = and i32 %bf.load217, 255
  %cmp219 = icmp ne i32 %bf.clear218, 46
  br i1 %cmp219, label %if.then.221, label %if.end.222

if.then.221:                                      ; preds = %land.lhs.true.214
  call void @error_init(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.187, i32 0, i32 0))
  %107 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %107, %union.tree_node** %retval
  br label %return

if.end.222:                                       ; preds = %land.lhs.true.214, %land.lhs.true.207, %if.end.204
  %108 = load i32, i32* @optimize, align 4
  %tobool223 = icmp ne i32 %108, 0
  br i1 %tobool223, label %land.lhs.true.224, label %if.end.233

land.lhs.true.224:                                ; preds = %if.end.222
  %109 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common225 = bitcast %union.tree_node* %109 to %struct.tree_common*
  %code226 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common225, i32 0, i32 2
  %bf.load227 = load i32, i32* %code226, align 8
  %bf.clear228 = and i32 %bf.load227, 255
  %cmp229 = icmp eq i32 %bf.clear228, 34
  br i1 %cmp229, label %if.then.231, label %if.end.233

if.then.231:                                      ; preds = %land.lhs.true.224
  %110 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %call232 = call %union.tree_node* @decl_constant_value_for_broken_optimization(%union.tree_node* %110)
  store %union.tree_node* %call232, %union.tree_node** %inside_init, align 8
  br label %if.end.233

if.end.233:                                       ; preds = %if.then.231, %land.lhs.true.224, %if.end.222
  %111 = load i32, i32* %require_constant.addr, align 4
  %tobool234 = icmp ne i32 %111, 0
  br i1 %tobool234, label %land.lhs.true.235, label %if.else.255

land.lhs.true.235:                                ; preds = %if.end.233
  %112 = load i32, i32* @pedantic, align 4
  %tobool236 = icmp ne i32 %112, 0
  br i1 %tobool236, label %land.lhs.true.237, label %if.else.255

land.lhs.true.237:                                ; preds = %land.lhs.true.235
  %113 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common238 = bitcast %union.tree_node* %113 to %struct.tree_common*
  %code239 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common238, i32 0, i32 2
  %bf.load240 = load i32, i32* %code239, align 8
  %bf.clear241 = and i32 %bf.load240, 255
  %cmp242 = icmp eq i32 %bf.clear241, 47
  br i1 %cmp242, label %if.then.244, label %if.else.255

if.then.244:                                      ; preds = %land.lhs.true.237
  %114 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %115 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common245 = bitcast %union.tree_node* %115 to %struct.tree_common*
  %type246 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common245, i32 0, i32 1
  %116 = load %union.tree_node*, %union.tree_node** %type246, align 8
  %call247 = call %union.tree_node* @valid_compound_expr_initializer(%union.tree_node* %114, %union.tree_node* %116)
  store %union.tree_node* %call247, %union.tree_node** %inside_init, align 8
  %117 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %118 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp248 = icmp eq %union.tree_node* %117, %118
  br i1 %cmp248, label %if.then.250, label %if.else

if.then.250:                                      ; preds = %if.then.244
  call void @error_init(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.188, i32 0, i32 0))
  br label %if.end.251

if.else:                                          ; preds = %if.then.244
  call void @pedwarn_init(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.188, i32 0, i32 0))
  br label %if.end.251

if.end.251:                                       ; preds = %if.else, %if.then.250
  %119 = load i32, i32* @flag_pedantic_errors, align 4
  %tobool252 = icmp ne i32 %119, 0
  br i1 %tobool252, label %if.then.253, label %if.end.254

if.then.253:                                      ; preds = %if.end.251
  %120 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %120, %union.tree_node** %inside_init, align 8
  br label %if.end.254

if.end.254:                                       ; preds = %if.then.253, %if.end.251
  br label %if.end.269

if.else.255:                                      ; preds = %land.lhs.true.237, %land.lhs.true.235, %if.end.233
  %121 = load i32, i32* %require_constant.addr, align 4
  %tobool256 = icmp ne i32 %121, 0
  br i1 %tobool256, label %land.lhs.true.257, label %if.end.268

land.lhs.true.257:                                ; preds = %if.else.255
  %122 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common258 = bitcast %union.tree_node* %122 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common258, i32 0, i32 2
  %bf.load259 = load i32, i32* %constant_flag, align 8
  %bf.lshr = lshr i32 %bf.load259, 9
  %bf.clear260 = and i32 %bf.lshr, 1
  %tobool261 = icmp ne i32 %bf.clear260, 0
  br i1 %tobool261, label %lor.lhs.false.262, label %if.then.267

lor.lhs.false.262:                                ; preds = %land.lhs.true.257
  %123 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %124 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common263 = bitcast %union.tree_node* %124 to %struct.tree_common*
  %type264 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common263, i32 0, i32 1
  %125 = load %union.tree_node*, %union.tree_node** %type264, align 8
  %call265 = call %union.tree_node* @initializer_constant_valid_p(%union.tree_node* %123, %union.tree_node* %125)
  %tobool266 = icmp ne %union.tree_node* %call265, null
  br i1 %tobool266, label %if.end.268, label %if.then.267

if.then.267:                                      ; preds = %lor.lhs.false.262, %land.lhs.true.257
  call void @error_init(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.188, i32 0, i32 0))
  %126 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %126, %union.tree_node** %inside_init, align 8
  br label %if.end.268

if.end.268:                                       ; preds = %if.then.267, %lor.lhs.false.262, %if.else.255
  br label %if.end.269

if.end.269:                                       ; preds = %if.end.268, %if.end.254
  %127 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  store %union.tree_node* %127, %union.tree_node** %retval
  br label %return

if.end.270:                                       ; preds = %land.lhs.true.171, %lor.lhs.false.162, %lor.lhs.false.150, %land.lhs.true.120, %if.end.118
  %128 = load i32, i32* %code, align 4
  %cmp271 = icmp eq i32 %128, 6
  br i1 %cmp271, label %if.then.288, label %lor.lhs.false.273

lor.lhs.false.273:                                ; preds = %if.end.270
  %129 = load i32, i32* %code, align 4
  %cmp274 = icmp eq i32 %129, 7
  br i1 %cmp274, label %if.then.288, label %lor.lhs.false.276

lor.lhs.false.276:                                ; preds = %lor.lhs.false.273
  %130 = load i32, i32* %code, align 4
  %cmp277 = icmp eq i32 %130, 13
  br i1 %cmp277, label %if.then.288, label %lor.lhs.false.279

lor.lhs.false.279:                                ; preds = %lor.lhs.false.276
  %131 = load i32, i32* %code, align 4
  %cmp280 = icmp eq i32 %131, 10
  br i1 %cmp280, label %if.then.288, label %lor.lhs.false.282

lor.lhs.false.282:                                ; preds = %lor.lhs.false.279
  %132 = load i32, i32* %code, align 4
  %cmp283 = icmp eq i32 %132, 11
  br i1 %cmp283, label %if.then.288, label %lor.lhs.false.285

lor.lhs.false.285:                                ; preds = %lor.lhs.false.282
  %133 = load i32, i32* %code, align 4
  %cmp286 = icmp eq i32 %133, 8
  br i1 %cmp286, label %if.then.288, label %if.end.310

if.then.288:                                      ; preds = %lor.lhs.false.285, %lor.lhs.false.282, %lor.lhs.false.279, %lor.lhs.false.276, %lor.lhs.false.273, %if.end.270
  %134 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %135 = load %union.tree_node*, %union.tree_node** %init.addr, align 8
  %call289 = call %union.tree_node* @convert_for_assignment(%union.tree_node* %134, %union.tree_node* %135, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.189, i32 0, i32 0), %union.tree_node* null, %union.tree_node* null, i32 0)
  store %union.tree_node* %call289, %union.tree_node** %inside_init, align 8
  %136 = load i32, i32* %require_constant.addr, align 4
  %tobool290 = icmp ne i32 %136, 0
  br i1 %tobool290, label %land.lhs.true.291, label %if.else.299

land.lhs.true.291:                                ; preds = %if.then.288
  %137 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common292 = bitcast %union.tree_node* %137 to %struct.tree_common*
  %constant_flag293 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common292, i32 0, i32 2
  %bf.load294 = load i32, i32* %constant_flag293, align 8
  %bf.lshr295 = lshr i32 %bf.load294, 9
  %bf.clear296 = and i32 %bf.lshr295, 1
  %tobool297 = icmp ne i32 %bf.clear296, 0
  br i1 %tobool297, label %if.else.299, label %if.then.298

if.then.298:                                      ; preds = %land.lhs.true.291
  call void @error_init(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.188, i32 0, i32 0))
  %138 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %138, %union.tree_node** %inside_init, align 8
  br label %if.end.309

if.else.299:                                      ; preds = %land.lhs.true.291, %if.then.288
  %139 = load i32, i32* %require_constant.addr, align 4
  %tobool300 = icmp ne i32 %139, 0
  br i1 %tobool300, label %land.lhs.true.301, label %if.end.308

land.lhs.true.301:                                ; preds = %if.else.299
  %140 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %141 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common302 = bitcast %union.tree_node* %141 to %struct.tree_common*
  %type303 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common302, i32 0, i32 1
  %142 = load %union.tree_node*, %union.tree_node** %type303, align 8
  %call304 = call %union.tree_node* @initializer_constant_valid_p(%union.tree_node* %140, %union.tree_node* %142)
  %cmp305 = icmp eq %union.tree_node* %call304, null
  br i1 %cmp305, label %if.then.307, label %if.end.308

if.then.307:                                      ; preds = %land.lhs.true.301
  call void @error_init(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.190, i32 0, i32 0))
  %143 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %143, %union.tree_node** %inside_init, align 8
  br label %if.end.308

if.end.308:                                       ; preds = %if.then.307, %land.lhs.true.301, %if.else.299
  br label %if.end.309

if.end.309:                                       ; preds = %if.end.308, %if.then.298
  %144 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  store %union.tree_node* %144, %union.tree_node** %retval
  br label %return

if.end.310:                                       ; preds = %lor.lhs.false.285
  %145 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type311 = bitcast %union.tree_node* %145 to %struct.tree_type*
  %size312 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type311, i32 0, i32 2
  %146 = load %union.tree_node*, %union.tree_node** %size312, align 8
  %cmp313 = icmp ne %union.tree_node* %146, null
  br i1 %cmp313, label %land.lhs.true.315, label %if.end.325

land.lhs.true.315:                                ; preds = %if.end.310
  %147 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type316 = bitcast %union.tree_node* %147 to %struct.tree_type*
  %size317 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type316, i32 0, i32 2
  %148 = load %union.tree_node*, %union.tree_node** %size317, align 8
  %common318 = bitcast %union.tree_node* %148 to %struct.tree_common*
  %code319 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common318, i32 0, i32 2
  %bf.load320 = load i32, i32* %code319, align 8
  %bf.clear321 = and i32 %bf.load320, 255
  %cmp322 = icmp ne i32 %bf.clear321, 25
  br i1 %cmp322, label %if.then.324, label %if.end.325

if.then.324:                                      ; preds = %land.lhs.true.315
  call void @error_init(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.191, i32 0, i32 0))
  %149 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %149, %union.tree_node** %retval
  br label %return

if.end.325:                                       ; preds = %land.lhs.true.315, %if.end.310
  %150 = load i32, i32* @flag_traditional, align 4
  %tobool326 = icmp ne i32 %150, 0
  br i1 %tobool326, label %if.then.327, label %if.end.394

if.then.327:                                      ; preds = %if.end.325
  store %union.tree_node* null, %union.tree_node** %top, align 8
  store %union.tree_node* null, %union.tree_node** %prev, align 8
  %151 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %151, %union.tree_node** %otype, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end.384, %if.then.327
  %152 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common328 = bitcast %union.tree_node* %152 to %struct.tree_common*
  %code329 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common328, i32 0, i32 2
  %bf.load330 = load i32, i32* %code329, align 8
  %bf.clear331 = and i32 %bf.load330, 255
  %cmp332 = icmp eq i32 %bf.clear331, 20
  br i1 %cmp332, label %lor.end, label %lor.lhs.false.334

lor.lhs.false.334:                                ; preds = %while.cond
  %153 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common335 = bitcast %union.tree_node* %153 to %struct.tree_common*
  %code336 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common335, i32 0, i32 2
  %bf.load337 = load i32, i32* %code336, align 8
  %bf.clear338 = and i32 %bf.load337, 255
  %cmp339 = icmp eq i32 %bf.clear338, 18
  br i1 %cmp339, label %lor.end, label %lor.lhs.false.341

lor.lhs.false.341:                                ; preds = %lor.lhs.false.334
  %154 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common342 = bitcast %union.tree_node* %154 to %struct.tree_common*
  %code343 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common342, i32 0, i32 2
  %bf.load344 = load i32, i32* %code343, align 8
  %bf.clear345 = and i32 %bf.load344, 255
  %cmp346 = icmp eq i32 %bf.clear345, 22
  br i1 %cmp346, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.341
  %155 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common348 = bitcast %union.tree_node* %155 to %struct.tree_common*
  %code349 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common348, i32 0, i32 2
  %bf.load350 = load i32, i32* %code349, align 8
  %bf.clear351 = and i32 %bf.load350, 255
  %cmp352 = icmp eq i32 %bf.clear351, 21
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.341, %lor.lhs.false.334, %while.cond
  %156 = phi i1 [ true, %lor.lhs.false.341 ], [ true, %lor.lhs.false.334 ], [ true, %while.cond ], [ %cmp352, %lor.rhs ]
  br i1 %156, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  %157 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %call354 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 46, %union.tree_node* %157, %union.tree_node* null, %union.tree_node* null)
  store %union.tree_node* %call354, %union.tree_node** %temp, align 8
  %158 = load %union.tree_node*, %union.tree_node** %prev, align 8
  %cmp355 = icmp eq %union.tree_node* %158, null
  br i1 %cmp355, label %if.then.357, label %if.else.358

if.then.357:                                      ; preds = %while.body
  %159 = load %union.tree_node*, %union.tree_node** %temp, align 8
  store %union.tree_node* %159, %union.tree_node** %top, align 8
  br label %if.end.363

if.else.358:                                      ; preds = %while.body
  %160 = load %union.tree_node*, %union.tree_node** %temp, align 8
  %call359 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %160)
  %161 = load %union.tree_node*, %union.tree_node** %prev, align 8
  %exp360 = bitcast %union.tree_node* %161 to %struct.tree_exp*
  %operands361 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp360, i32 0, i32 2
  %arrayidx362 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands361, i32 0, i64 1
  store %union.tree_node* %call359, %union.tree_node** %arrayidx362, align 8
  br label %if.end.363

if.end.363:                                       ; preds = %if.else.358, %if.then.357
  %162 = load %union.tree_node*, %union.tree_node** %temp, align 8
  store %union.tree_node* %162, %union.tree_node** %prev, align 8
  %163 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common364 = bitcast %union.tree_node* %163 to %struct.tree_common*
  %code365 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common364, i32 0, i32 2
  %bf.load366 = load i32, i32* %code365, align 8
  %bf.clear367 = and i32 %bf.load366, 255
  %cmp368 = icmp eq i32 %bf.clear367, 18
  br i1 %cmp368, label %if.then.370, label %if.else.373

if.then.370:                                      ; preds = %if.end.363
  %164 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common371 = bitcast %union.tree_node* %164 to %struct.tree_common*
  %type372 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common371, i32 0, i32 1
  %165 = load %union.tree_node*, %union.tree_node** %type372, align 8
  store %union.tree_node* %165, %union.tree_node** %type.addr, align 8
  br label %if.end.384

if.else.373:                                      ; preds = %if.end.363
  %166 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type374 = bitcast %union.tree_node* %166 to %struct.tree_type*
  %values375 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type374, i32 0, i32 1
  %167 = load %union.tree_node*, %union.tree_node** %values375, align 8
  %tobool376 = icmp ne %union.tree_node* %167, null
  br i1 %tobool376, label %if.then.377, label %if.else.382

if.then.377:                                      ; preds = %if.else.373
  %168 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type378 = bitcast %union.tree_node* %168 to %struct.tree_type*
  %values379 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type378, i32 0, i32 1
  %169 = load %union.tree_node*, %union.tree_node** %values379, align 8
  %common380 = bitcast %union.tree_node* %169 to %struct.tree_common*
  %type381 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common380, i32 0, i32 1
  %170 = load %union.tree_node*, %union.tree_node** %type381, align 8
  store %union.tree_node* %170, %union.tree_node** %type.addr, align 8
  br label %if.end.383

if.else.382:                                      ; preds = %if.else.373
  call void @error_init(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.192, i32 0, i32 0))
  %171 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %171, %union.tree_node** %retval
  br label %return

if.end.383:                                       ; preds = %if.then.377
  br label %if.end.384

if.end.384:                                       ; preds = %if.end.383, %if.then.370
  br label %while.cond

while.end:                                        ; preds = %lor.end
  %172 = load %union.tree_node*, %union.tree_node** %otype, align 8
  %173 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %cmp385 = icmp ne %union.tree_node* %172, %173
  br i1 %cmp385, label %if.then.387, label %if.else.393

if.then.387:                                      ; preds = %while.end
  %174 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %175 = load %union.tree_node*, %union.tree_node** %init.addr, align 8
  %176 = load i32, i32* %require_constant.addr, align 4
  %177 = load i32, i32* %constructor_constant.addr, align 4
  %call388 = call %union.tree_node* @digest_init(%union.tree_node* %174, %union.tree_node* %175, i32 %176, i32 %177)
  %call389 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %call388)
  %178 = load %union.tree_node*, %union.tree_node** %prev, align 8
  %exp390 = bitcast %union.tree_node* %178 to %struct.tree_exp*
  %operands391 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp390, i32 0, i32 2
  %arrayidx392 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands391, i32 0, i64 1
  store %union.tree_node* %call389, %union.tree_node** %arrayidx392, align 8
  %179 = load %union.tree_node*, %union.tree_node** %top, align 8
  store %union.tree_node* %179, %union.tree_node** %retval
  br label %return

if.else.393:                                      ; preds = %while.end
  %180 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %180, %union.tree_node** %retval
  br label %return

if.end.394:                                       ; preds = %if.end.325
  call void @error_init(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.192, i32 0, i32 0))
  %181 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %181, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.394, %if.else.393, %if.then.387, %if.else.382, %if.then.324, %if.end.309, %if.end.269, %if.then.221, %if.end.116, %if.then.80, %if.then.61, %if.then.43, %if.then
  %182 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %182
}

declare %union.tree_node* @build_tree_list(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @c_cast_expr(%union.tree_node* %type, %union.tree_node* %expr) #0 {
entry:
  %type.addr = alloca %union.tree_node*, align 8
  %expr.addr = alloca %union.tree_node*, align 8
  %saved_wsp = alloca i32, align 4
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %expr, %union.tree_node** %expr.addr, align 8
  %0 = load i32, i32* @warn_strict_prototypes, align 4
  store i32 %0, i32* %saved_wsp, align 4
  %1 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 25
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* @warn_strict_prototypes, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %call = call %union.tree_node* @groktypename(%union.tree_node* %2)
  store %union.tree_node* %call, %union.tree_node** %type.addr, align 8
  %3 = load i32, i32* %saved_wsp, align 4
  store i32 %3, i32* @warn_strict_prototypes, align 4
  %4 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %5 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %call1 = call %union.tree_node* @build_c_cast(%union.tree_node* %4, %union.tree_node* %5)
  ret %union.tree_node* %call1
}

declare %union.tree_node* @groktypename(%union.tree_node*) #1

declare %union.tree_node* @copy_node(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @convert_for_assignment(%union.tree_node* %type, %union.tree_node* %rhs, i8* %errtype, %union.tree_node* %fundecl, %union.tree_node* %funname, i32 %parmnum) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  %rhs.addr = alloca %union.tree_node*, align 8
  %errtype.addr = alloca i8*, align 8
  %fundecl.addr = alloca %union.tree_node*, align 8
  %funname.addr = alloca %union.tree_node*, align 8
  %parmnum.addr = alloca i32, align 4
  %codel = alloca i32, align 4
  %rhstype = alloca %union.tree_node*, align 8
  %coder = alloca i32, align 4
  %memb_types = alloca %union.tree_node*, align 8
  %marginal_memb_type = alloca %union.tree_node*, align 8
  %memb_type = alloca %union.tree_node*, align 8
  %ttl = alloca %union.tree_node*, align 8
  %ttr = alloca %union.tree_node*, align 8
  %ttl454 = alloca %union.tree_node*, align 8
  %ttr457 = alloca %union.tree_node*, align 8
  %ttl634 = alloca %union.tree_node*, align 8
  %ttr637 = alloca %union.tree_node*, align 8
  %selector = alloca %union.tree_node*, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %rhs, %union.tree_node** %rhs.addr, align 8
  store i8* %errtype, i8** %errtype.addr, align 8
  store %union.tree_node* %fundecl, %union.tree_node** %fundecl.addr, align 8
  store %union.tree_node* %funname, %union.tree_node** %funname.addr, align 8
  store i32 %parmnum, i32* %parmnum.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %codel, align 4
  %1 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load3 = load i32, i32* %code2, align 8
  %bf.clear4 = and i32 %bf.load3, 255
  %cmp = icmp eq i32 %bf.clear4, 116
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %exp = bitcast %union.tree_node* %2 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  store %union.tree_node* %3, %union.tree_node** %rhs.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %common5 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %type6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5, i32 0, i32 1
  %5 = load %union.tree_node*, %union.tree_node** %type6, align 8
  %common7 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 2
  %bf.load9 = load i32, i32* %code8, align 8
  %bf.clear10 = and i32 %bf.load9, 255
  %cmp11 = icmp eq i32 %bf.clear10, 18
  br i1 %cmp11, label %if.then.19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %common12 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %type13 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common12, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %type13, align 8
  %common14 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %code15 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common14, i32 0, i32 2
  %bf.load16 = load i32, i32* %code15, align 8
  %bf.clear17 = and i32 %bf.load16, 255
  %cmp18 = icmp eq i32 %bf.clear17, 23
  br i1 %cmp18, label %if.then.19, label %if.else

if.then.19:                                       ; preds = %lor.lhs.false, %if.end
  %8 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call = call %union.tree_node* @default_conversion(%union.tree_node* %8)
  store %union.tree_node* %call, %union.tree_node** %rhs.addr, align 8
  br label %if.end.28

if.else:                                          ; preds = %lor.lhs.false
  %9 = load i32, i32* @optimize, align 4
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %land.lhs.true, label %if.end.27

land.lhs.true:                                    ; preds = %if.else
  %10 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %common20 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %code21 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common20, i32 0, i32 2
  %bf.load22 = load i32, i32* %code21, align 8
  %bf.clear23 = and i32 %bf.load22, 255
  %cmp24 = icmp eq i32 %bf.clear23, 34
  br i1 %cmp24, label %if.then.25, label %if.end.27

if.then.25:                                       ; preds = %land.lhs.true
  %11 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call26 = call %union.tree_node* @decl_constant_value_for_broken_optimization(%union.tree_node* %11)
  store %union.tree_node* %call26, %union.tree_node** %rhs.addr, align 8
  br label %if.end.27

if.end.27:                                        ; preds = %if.then.25, %land.lhs.true, %if.else
  br label %if.end.28

if.end.28:                                        ; preds = %if.end.27, %if.then.19
  %12 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %common29 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %type30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common29, i32 0, i32 1
  %13 = load %union.tree_node*, %union.tree_node** %type30, align 8
  store %union.tree_node* %13, %union.tree_node** %rhstype, align 8
  %14 = load %union.tree_node*, %union.tree_node** %rhstype, align 8
  %common31 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %code32 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common31, i32 0, i32 2
  %bf.load33 = load i32, i32* %code32, align 8
  %bf.clear34 = and i32 %bf.load33, 255
  store i32 %bf.clear34, i32* %coder, align 4
  %15 = load i32, i32* %coder, align 4
  %cmp35 = icmp eq i32 %15, 0
  br i1 %cmp35, label %if.then.36, label %if.end.37

if.then.36:                                       ; preds = %if.end.28
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %16, %union.tree_node** %retval
  br label %return

if.end.37:                                        ; preds = %if.end.28
  %17 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type38 = bitcast %union.tree_node* %17 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type38, i32 0, i32 15
  %18 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %19 = load %union.tree_node*, %union.tree_node** %rhstype, align 8
  %type39 = bitcast %union.tree_node* %19 to %struct.tree_type*
  %main_variant40 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type39, i32 0, i32 15
  %20 = load %union.tree_node*, %union.tree_node** %main_variant40, align 8
  %cmp41 = icmp eq %union.tree_node* %18, %20
  br i1 %cmp41, label %if.then.42, label %if.end.44

if.then.42:                                       ; preds = %if.end.37
  %21 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  call void @overflow_warning(%union.tree_node* %21)
  %22 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %23 = load %union.tree_node*, %union.tree_node** %rhstype, align 8
  %call43 = call i32 @maybe_objc_comptypes(%union.tree_node* %22, %union.tree_node* %23, i32 0)
  %24 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  store %union.tree_node* %24, %union.tree_node** %retval
  br label %return

if.end.44:                                        ; preds = %if.end.37
  %25 = load i32, i32* %coder, align 4
  %cmp45 = icmp eq i32 %25, 5
  br i1 %cmp45, label %if.then.46, label %if.end.47

if.then.46:                                       ; preds = %if.end.44
  call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.15, i32 0, i32 0))
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %26, %union.tree_node** %retval
  br label %return

if.end.47:                                        ; preds = %if.end.44
  %27 = load i32, i32* %codel, align 4
  %cmp48 = icmp eq i32 %27, 15
  br i1 %cmp48, label %land.lhs.true.49, label %if.else.79

land.lhs.true.49:                                 ; preds = %if.end.47
  %28 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common50 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %type51 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common50, i32 0, i32 1
  %29 = load %union.tree_node*, %union.tree_node** %type51, align 8
  %30 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %common52 = bitcast %union.tree_node* %30 to %struct.tree_common*
  %type53 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common52, i32 0, i32 1
  %31 = load %union.tree_node*, %union.tree_node** %type53, align 8
  %call54 = call i32 @comptypes(%union.tree_node* %29, %union.tree_node* %31)
  %cmp55 = icmp eq i32 %call54, 1
  br i1 %cmp55, label %if.then.56, label %if.else.79

if.then.56:                                       ; preds = %land.lhs.true.49
  %32 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call57 = call i32 @mark_addressable(%union.tree_node* %32)
  %cmp58 = icmp eq i32 %call57, 0
  br i1 %cmp58, label %if.then.59, label %if.end.60

if.then.59:                                       ; preds = %if.then.56
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %33, %union.tree_node** %retval
  br label %return

if.end.60:                                        ; preds = %if.then.56
  %34 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %common61 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %type62 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common61, i32 0, i32 1
  %35 = load %union.tree_node*, %union.tree_node** %type62, align 8
  %call63 = call %union.tree_node* @build_pointer_type(%union.tree_node* %35)
  %36 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call64 = call %union.tree_node* @build1(i32 121, %union.tree_node* %call63, %union.tree_node* %36)
  store %union.tree_node* %call64, %union.tree_node** %rhs.addr, align 8
  %37 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %common65 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %type66 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common65, i32 0, i32 1
  %38 = load %union.tree_node*, %union.tree_node** %type66, align 8
  %common67 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %type68 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common67, i32 0, i32 1
  %39 = load %union.tree_node*, %union.tree_node** %type68, align 8
  %40 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common69 = bitcast %union.tree_node* %40 to %struct.tree_common*
  %type70 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common69, i32 0, i32 1
  %41 = load %union.tree_node*, %union.tree_node** %type70, align 8
  %cmp71 = icmp ne %union.tree_node* %39, %41
  br i1 %cmp71, label %if.then.72, label %if.end.77

if.then.72:                                       ; preds = %if.end.60
  %42 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common73 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %type74 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common73, i32 0, i32 1
  %43 = load %union.tree_node*, %union.tree_node** %type74, align 8
  %call75 = call %union.tree_node* @build_pointer_type(%union.tree_node* %43)
  %44 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call76 = call %union.tree_node* @build1(i32 115, %union.tree_node* %call75, %union.tree_node* %44)
  store %union.tree_node* %call76, %union.tree_node** %rhs.addr, align 8
  br label %if.end.77

if.end.77:                                        ; preds = %if.then.72, %if.end.60
  %45 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %46 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call78 = call %union.tree_node* @build1(i32 115, %union.tree_node* %45, %union.tree_node* %46)
  store %union.tree_node* %call78, %union.tree_node** %rhs.addr, align 8
  %47 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  store %union.tree_node* %47, %union.tree_node** %retval
  br label %return

if.else.79:                                       ; preds = %land.lhs.true.49, %if.end.47
  %48 = load i32, i32* %codel, align 4
  %cmp80 = icmp eq i32 %48, 6
  br i1 %cmp80, label %land.lhs.true.89, label %lor.lhs.false.81

lor.lhs.false.81:                                 ; preds = %if.else.79
  %49 = load i32, i32* %codel, align 4
  %cmp82 = icmp eq i32 %49, 7
  br i1 %cmp82, label %land.lhs.true.89, label %lor.lhs.false.83

lor.lhs.false.83:                                 ; preds = %lor.lhs.false.81
  %50 = load i32, i32* %codel, align 4
  %cmp84 = icmp eq i32 %50, 10
  br i1 %cmp84, label %land.lhs.true.89, label %lor.lhs.false.85

lor.lhs.false.85:                                 ; preds = %lor.lhs.false.83
  %51 = load i32, i32* %codel, align 4
  %cmp86 = icmp eq i32 %51, 8
  br i1 %cmp86, label %land.lhs.true.89, label %lor.lhs.false.87

lor.lhs.false.87:                                 ; preds = %lor.lhs.false.85
  %52 = load i32, i32* %codel, align 4
  %cmp88 = icmp eq i32 %52, 11
  br i1 %cmp88, label %land.lhs.true.89, label %if.else.101

land.lhs.true.89:                                 ; preds = %lor.lhs.false.87, %lor.lhs.false.85, %lor.lhs.false.83, %lor.lhs.false.81, %if.else.79
  %53 = load i32, i32* %coder, align 4
  %cmp90 = icmp eq i32 %53, 6
  br i1 %cmp90, label %if.then.99, label %lor.lhs.false.91

lor.lhs.false.91:                                 ; preds = %land.lhs.true.89
  %54 = load i32, i32* %coder, align 4
  %cmp92 = icmp eq i32 %54, 7
  br i1 %cmp92, label %if.then.99, label %lor.lhs.false.93

lor.lhs.false.93:                                 ; preds = %lor.lhs.false.91
  %55 = load i32, i32* %coder, align 4
  %cmp94 = icmp eq i32 %55, 10
  br i1 %cmp94, label %if.then.99, label %lor.lhs.false.95

lor.lhs.false.95:                                 ; preds = %lor.lhs.false.93
  %56 = load i32, i32* %coder, align 4
  %cmp96 = icmp eq i32 %56, 8
  br i1 %cmp96, label %if.then.99, label %lor.lhs.false.97

lor.lhs.false.97:                                 ; preds = %lor.lhs.false.95
  %57 = load i32, i32* %coder, align 4
  %cmp98 = icmp eq i32 %57, 11
  br i1 %cmp98, label %if.then.99, label %if.else.101

if.then.99:                                       ; preds = %lor.lhs.false.97, %lor.lhs.false.95, %lor.lhs.false.93, %lor.lhs.false.91, %land.lhs.true.89
  %58 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %59 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call100 = call %union.tree_node* @convert_and_check(%union.tree_node* %58, %union.tree_node* %59)
  store %union.tree_node* %call100, %union.tree_node** %retval
  br label %return

if.else.101:                                      ; preds = %lor.lhs.false.97, %lor.lhs.false.87
  %60 = load i32, i32* %codel, align 4
  %cmp102 = icmp eq i32 %60, 21
  br i1 %cmp102, label %land.lhs.true.103, label %if.else.625

land.lhs.true.103:                                ; preds = %if.else.101
  %61 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type104 = bitcast %union.tree_node* %61 to %struct.tree_type*
  %transparent_union_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type104, i32 0, i32 6
  %bf.load105 = load i32, i32* %transparent_union_flag, align 4
  %bf.lshr = lshr i32 %bf.load105, 19
  %bf.clear106 = and i32 %bf.lshr, 1
  %tobool107 = icmp ne i32 %bf.clear106, 0
  br i1 %tobool107, label %land.lhs.true.108, label %if.else.625

land.lhs.true.108:                                ; preds = %land.lhs.true.103
  %62 = load i8*, i8** %errtype.addr, align 8
  %tobool109 = icmp ne i8* %62, null
  br i1 %tobool109, label %if.else.625, label %if.then.110

if.then.110:                                      ; preds = %land.lhs.true.108
  store %union.tree_node* null, %union.tree_node** %marginal_memb_type, align 8
  %63 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type111 = bitcast %union.tree_node* %63 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type111, i32 0, i32 1
  %64 = load %union.tree_node*, %union.tree_node** %values, align 8
  store %union.tree_node* %64, %union.tree_node** %memb_types, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.110
  %65 = load %union.tree_node*, %union.tree_node** %memb_types, align 8
  %tobool112 = icmp ne %union.tree_node* %65, null
  br i1 %tobool112, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %66 = load %union.tree_node*, %union.tree_node** %memb_types, align 8
  %common113 = bitcast %union.tree_node* %66 to %struct.tree_common*
  %type114 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common113, i32 0, i32 1
  %67 = load %union.tree_node*, %union.tree_node** %type114, align 8
  store %union.tree_node* %67, %union.tree_node** %memb_type, align 8
  %68 = load %union.tree_node*, %union.tree_node** %memb_type, align 8
  %type115 = bitcast %union.tree_node* %68 to %struct.tree_type*
  %main_variant116 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type115, i32 0, i32 15
  %69 = load %union.tree_node*, %union.tree_node** %main_variant116, align 8
  %70 = load %union.tree_node*, %union.tree_node** %rhstype, align 8
  %type117 = bitcast %union.tree_node* %70 to %struct.tree_type*
  %main_variant118 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type117, i32 0, i32 15
  %71 = load %union.tree_node*, %union.tree_node** %main_variant118, align 8
  %call119 = call i32 @comptypes(%union.tree_node* %69, %union.tree_node* %71)
  %tobool120 = icmp ne i32 %call119, 0
  br i1 %tobool120, label %if.then.121, label %if.end.122

if.then.121:                                      ; preds = %for.body
  br label %for.end

if.end.122:                                       ; preds = %for.body
  %72 = load %union.tree_node*, %union.tree_node** %memb_type, align 8
  %common123 = bitcast %union.tree_node* %72 to %struct.tree_common*
  %code124 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common123, i32 0, i32 2
  %bf.load125 = load i32, i32* %code124, align 8
  %bf.clear126 = and i32 %bf.load125, 255
  %cmp127 = icmp ne i32 %bf.clear126, 13
  br i1 %cmp127, label %if.then.128, label %if.end.129

if.then.128:                                      ; preds = %if.end.122
  br label %for.inc

if.end.129:                                       ; preds = %if.end.122
  %73 = load i32, i32* %coder, align 4
  %cmp130 = icmp eq i32 %73, 13
  br i1 %cmp130, label %if.then.131, label %if.end.430

if.then.131:                                      ; preds = %if.end.129
  %74 = load %union.tree_node*, %union.tree_node** %memb_type, align 8
  %common132 = bitcast %union.tree_node* %74 to %struct.tree_common*
  %type133 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common132, i32 0, i32 1
  %75 = load %union.tree_node*, %union.tree_node** %type133, align 8
  store %union.tree_node* %75, %union.tree_node** %ttl, align 8
  %76 = load %union.tree_node*, %union.tree_node** %rhstype, align 8
  %common134 = bitcast %union.tree_node* %76 to %struct.tree_common*
  %type135 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common134, i32 0, i32 1
  %77 = load %union.tree_node*, %union.tree_node** %type135, align 8
  store %union.tree_node* %77, %union.tree_node** %ttr, align 8
  %78 = load %union.tree_node*, %union.tree_node** %ttl, align 8
  %common136 = bitcast %union.tree_node* %78 to %struct.tree_common*
  %code137 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common136, i32 0, i32 2
  %bf.load138 = load i32, i32* %code137, align 8
  %bf.clear139 = and i32 %bf.load138, 255
  %cmp140 = icmp eq i32 %bf.clear139, 5
  br i1 %cmp140, label %if.then.150, label %lor.lhs.false.141

lor.lhs.false.141:                                ; preds = %if.then.131
  %79 = load %union.tree_node*, %union.tree_node** %ttr, align 8
  %common142 = bitcast %union.tree_node* %79 to %struct.tree_common*
  %code143 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common142, i32 0, i32 2
  %bf.load144 = load i32, i32* %code143, align 8
  %bf.clear145 = and i32 %bf.load144, 255
  %cmp146 = icmp eq i32 %bf.clear145, 5
  br i1 %cmp146, label %if.then.150, label %lor.lhs.false.147

lor.lhs.false.147:                                ; preds = %lor.lhs.false.141
  %80 = load %union.tree_node*, %union.tree_node** %memb_type, align 8
  %81 = load %union.tree_node*, %union.tree_node** %rhstype, align 8
  %call148 = call i32 @comp_target_types(%union.tree_node* %80, %union.tree_node* %81)
  %tobool149 = icmp ne i32 %call148, 0
  br i1 %tobool149, label %if.then.150, label %if.end.429

if.then.150:                                      ; preds = %lor.lhs.false.147, %lor.lhs.false.141, %if.then.131
  %82 = load %union.tree_node*, %union.tree_node** %ttl, align 8
  %common151 = bitcast %union.tree_node* %82 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common151, i32 0, i32 2
  %bf.load152 = load i32, i32* %readonly_flag, align 8
  %bf.lshr153 = lshr i32 %bf.load152, 12
  %bf.clear154 = and i32 %bf.lshr153, 1
  %mul = mul nsw i32 %bf.clear154, 1
  %83 = load %union.tree_node*, %union.tree_node** %ttl, align 8
  %common155 = bitcast %union.tree_node* %83 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common155, i32 0, i32 2
  %bf.load156 = load i32, i32* %volatile_flag, align 8
  %bf.lshr157 = lshr i32 %bf.load156, 11
  %bf.clear158 = and i32 %bf.lshr157, 1
  %mul159 = mul nsw i32 %bf.clear158, 2
  %or = or i32 %mul, %mul159
  %84 = load %union.tree_node*, %union.tree_node** %ttl, align 8
  %type160 = bitcast %union.tree_node* %84 to %struct.tree_type*
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type160, i32 0, i32 6
  %bf.load161 = load i32, i32* %restrict_flag, align 4
  %bf.lshr162 = lshr i32 %bf.load161, 21
  %bf.clear163 = and i32 %bf.lshr162, 1
  %mul164 = mul nsw i32 %bf.clear163, 4
  %or165 = or i32 %or, %mul164
  %85 = load %union.tree_node*, %union.tree_node** %ttl, align 8
  %common166 = bitcast %union.tree_node* %85 to %struct.tree_common*
  %code167 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common166, i32 0, i32 2
  %bf.load168 = load i32, i32* %code167, align 8
  %bf.clear169 = and i32 %bf.load168, 255
  %cmp170 = icmp eq i32 %bf.clear169, 20
  br i1 %cmp170, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then.150
  %86 = load %union.tree_node*, %union.tree_node** %ttl, align 8
  %common171 = bitcast %union.tree_node* %86 to %struct.tree_common*
  %type172 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common171, i32 0, i32 1
  %87 = load %union.tree_node*, %union.tree_node** %type172, align 8
  %tobool173 = icmp ne %union.tree_node* %87, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then.150
  %88 = phi i1 [ false, %if.then.150 ], [ %tobool173, %land.rhs ]
  %land.ext = zext i1 %88 to i32
  %mul174 = mul nsw i32 %land.ext, 8
  %or175 = or i32 %or165, %mul174
  %89 = load %union.tree_node*, %union.tree_node** %ttr, align 8
  %common176 = bitcast %union.tree_node* %89 to %struct.tree_common*
  %readonly_flag177 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common176, i32 0, i32 2
  %bf.load178 = load i32, i32* %readonly_flag177, align 8
  %bf.lshr179 = lshr i32 %bf.load178, 12
  %bf.clear180 = and i32 %bf.lshr179, 1
  %mul181 = mul nsw i32 %bf.clear180, 1
  %90 = load %union.tree_node*, %union.tree_node** %ttr, align 8
  %common182 = bitcast %union.tree_node* %90 to %struct.tree_common*
  %volatile_flag183 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common182, i32 0, i32 2
  %bf.load184 = load i32, i32* %volatile_flag183, align 8
  %bf.lshr185 = lshr i32 %bf.load184, 11
  %bf.clear186 = and i32 %bf.lshr185, 1
  %mul187 = mul nsw i32 %bf.clear186, 2
  %or188 = or i32 %mul181, %mul187
  %91 = load %union.tree_node*, %union.tree_node** %ttr, align 8
  %type189 = bitcast %union.tree_node* %91 to %struct.tree_type*
  %restrict_flag190 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type189, i32 0, i32 6
  %bf.load191 = load i32, i32* %restrict_flag190, align 4
  %bf.lshr192 = lshr i32 %bf.load191, 21
  %bf.clear193 = and i32 %bf.lshr192, 1
  %mul194 = mul nsw i32 %bf.clear193, 4
  %or195 = or i32 %or188, %mul194
  %92 = load %union.tree_node*, %union.tree_node** %ttr, align 8
  %common196 = bitcast %union.tree_node* %92 to %struct.tree_common*
  %code197 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common196, i32 0, i32 2
  %bf.load198 = load i32, i32* %code197, align 8
  %bf.clear199 = and i32 %bf.load198, 255
  %cmp200 = icmp eq i32 %bf.clear199, 20
  br i1 %cmp200, label %land.rhs.201, label %land.end.205

land.rhs.201:                                     ; preds = %land.end
  %93 = load %union.tree_node*, %union.tree_node** %ttr, align 8
  %common202 = bitcast %union.tree_node* %93 to %struct.tree_common*
  %type203 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common202, i32 0, i32 1
  %94 = load %union.tree_node*, %union.tree_node** %type203, align 8
  %tobool204 = icmp ne %union.tree_node* %94, null
  br label %land.end.205

land.end.205:                                     ; preds = %land.rhs.201, %land.end
  %95 = phi i1 [ false, %land.end ], [ %tobool204, %land.rhs.201 ]
  %land.ext206 = zext i1 %95 to i32
  %mul207 = mul nsw i32 %land.ext206, 8
  %or208 = or i32 %or195, %mul207
  %cmp209 = icmp eq i32 %or175, %or208
  br i1 %cmp209, label %if.then.424, label %lor.lhs.false.210

lor.lhs.false.210:                                ; preds = %land.end.205
  %96 = load %union.tree_node*, %union.tree_node** %ttr, align 8
  %common211 = bitcast %union.tree_node* %96 to %struct.tree_common*
  %code212 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common211, i32 0, i32 2
  %bf.load213 = load i32, i32* %code212, align 8
  %bf.clear214 = and i32 %bf.load213, 255
  %cmp215 = icmp eq i32 %bf.clear214, 23
  br i1 %cmp215, label %land.lhs.true.216, label %cond.false

land.lhs.true.216:                                ; preds = %lor.lhs.false.210
  %97 = load %union.tree_node*, %union.tree_node** %ttl, align 8
  %common217 = bitcast %union.tree_node* %97 to %struct.tree_common*
  %code218 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common217, i32 0, i32 2
  %bf.load219 = load i32, i32* %code218, align 8
  %bf.clear220 = and i32 %bf.load219, 255
  %cmp221 = icmp eq i32 %bf.clear220, 23
  br i1 %cmp221, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.216
  %98 = load %union.tree_node*, %union.tree_node** %ttl, align 8
  %common222 = bitcast %union.tree_node* %98 to %struct.tree_common*
  %readonly_flag223 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common222, i32 0, i32 2
  %bf.load224 = load i32, i32* %readonly_flag223, align 8
  %bf.lshr225 = lshr i32 %bf.load224, 12
  %bf.clear226 = and i32 %bf.lshr225, 1
  %mul227 = mul nsw i32 %bf.clear226, 1
  %99 = load %union.tree_node*, %union.tree_node** %ttl, align 8
  %common228 = bitcast %union.tree_node* %99 to %struct.tree_common*
  %volatile_flag229 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common228, i32 0, i32 2
  %bf.load230 = load i32, i32* %volatile_flag229, align 8
  %bf.lshr231 = lshr i32 %bf.load230, 11
  %bf.clear232 = and i32 %bf.lshr231, 1
  %mul233 = mul nsw i32 %bf.clear232, 2
  %or234 = or i32 %mul227, %mul233
  %100 = load %union.tree_node*, %union.tree_node** %ttl, align 8
  %type235 = bitcast %union.tree_node* %100 to %struct.tree_type*
  %restrict_flag236 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type235, i32 0, i32 6
  %bf.load237 = load i32, i32* %restrict_flag236, align 4
  %bf.lshr238 = lshr i32 %bf.load237, 21
  %bf.clear239 = and i32 %bf.lshr238, 1
  %mul240 = mul nsw i32 %bf.clear239, 4
  %or241 = or i32 %or234, %mul240
  %101 = load %union.tree_node*, %union.tree_node** %ttl, align 8
  %common242 = bitcast %union.tree_node* %101 to %struct.tree_common*
  %code243 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common242, i32 0, i32 2
  %bf.load244 = load i32, i32* %code243, align 8
  %bf.clear245 = and i32 %bf.load244, 255
  %cmp246 = icmp eq i32 %bf.clear245, 20
  br i1 %cmp246, label %land.rhs.247, label %land.end.251

land.rhs.247:                                     ; preds = %cond.true
  %102 = load %union.tree_node*, %union.tree_node** %ttl, align 8
  %common248 = bitcast %union.tree_node* %102 to %struct.tree_common*
  %type249 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common248, i32 0, i32 1
  %103 = load %union.tree_node*, %union.tree_node** %type249, align 8
  %tobool250 = icmp ne %union.tree_node* %103, null
  br label %land.end.251

land.end.251:                                     ; preds = %land.rhs.247, %cond.true
  %104 = phi i1 [ false, %cond.true ], [ %tobool250, %land.rhs.247 ]
  %land.ext252 = zext i1 %104 to i32
  %mul253 = mul nsw i32 %land.ext252, 8
  %or254 = or i32 %or241, %mul253
  %105 = load %union.tree_node*, %union.tree_node** %ttr, align 8
  %common255 = bitcast %union.tree_node* %105 to %struct.tree_common*
  %readonly_flag256 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common255, i32 0, i32 2
  %bf.load257 = load i32, i32* %readonly_flag256, align 8
  %bf.lshr258 = lshr i32 %bf.load257, 12
  %bf.clear259 = and i32 %bf.lshr258, 1
  %mul260 = mul nsw i32 %bf.clear259, 1
  %106 = load %union.tree_node*, %union.tree_node** %ttr, align 8
  %common261 = bitcast %union.tree_node* %106 to %struct.tree_common*
  %volatile_flag262 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common261, i32 0, i32 2
  %bf.load263 = load i32, i32* %volatile_flag262, align 8
  %bf.lshr264 = lshr i32 %bf.load263, 11
  %bf.clear265 = and i32 %bf.lshr264, 1
  %mul266 = mul nsw i32 %bf.clear265, 2
  %or267 = or i32 %mul260, %mul266
  %107 = load %union.tree_node*, %union.tree_node** %ttr, align 8
  %type268 = bitcast %union.tree_node* %107 to %struct.tree_type*
  %restrict_flag269 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type268, i32 0, i32 6
  %bf.load270 = load i32, i32* %restrict_flag269, align 4
  %bf.lshr271 = lshr i32 %bf.load270, 21
  %bf.clear272 = and i32 %bf.lshr271, 1
  %mul273 = mul nsw i32 %bf.clear272, 4
  %or274 = or i32 %or267, %mul273
  %108 = load %union.tree_node*, %union.tree_node** %ttr, align 8
  %common275 = bitcast %union.tree_node* %108 to %struct.tree_common*
  %code276 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common275, i32 0, i32 2
  %bf.load277 = load i32, i32* %code276, align 8
  %bf.clear278 = and i32 %bf.load277, 255
  %cmp279 = icmp eq i32 %bf.clear278, 20
  br i1 %cmp279, label %land.rhs.280, label %land.end.284

land.rhs.280:                                     ; preds = %land.end.251
  %109 = load %union.tree_node*, %union.tree_node** %ttr, align 8
  %common281 = bitcast %union.tree_node* %109 to %struct.tree_common*
  %type282 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common281, i32 0, i32 1
  %110 = load %union.tree_node*, %union.tree_node** %type282, align 8
  %tobool283 = icmp ne %union.tree_node* %110, null
  br label %land.end.284

land.end.284:                                     ; preds = %land.rhs.280, %land.end.251
  %111 = phi i1 [ false, %land.end.251 ], [ %tobool283, %land.rhs.280 ]
  %land.ext285 = zext i1 %111 to i32
  %mul286 = mul nsw i32 %land.ext285, 8
  %or287 = or i32 %or274, %mul286
  %or288 = or i32 %or254, %or287
  %112 = load %union.tree_node*, %union.tree_node** %ttr, align 8
  %common289 = bitcast %union.tree_node* %112 to %struct.tree_common*
  %readonly_flag290 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common289, i32 0, i32 2
  %bf.load291 = load i32, i32* %readonly_flag290, align 8
  %bf.lshr292 = lshr i32 %bf.load291, 12
  %bf.clear293 = and i32 %bf.lshr292, 1
  %mul294 = mul nsw i32 %bf.clear293, 1
  %113 = load %union.tree_node*, %union.tree_node** %ttr, align 8
  %common295 = bitcast %union.tree_node* %113 to %struct.tree_common*
  %volatile_flag296 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common295, i32 0, i32 2
  %bf.load297 = load i32, i32* %volatile_flag296, align 8
  %bf.lshr298 = lshr i32 %bf.load297, 11
  %bf.clear299 = and i32 %bf.lshr298, 1
  %mul300 = mul nsw i32 %bf.clear299, 2
  %or301 = or i32 %mul294, %mul300
  %114 = load %union.tree_node*, %union.tree_node** %ttr, align 8
  %type302 = bitcast %union.tree_node* %114 to %struct.tree_type*
  %restrict_flag303 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type302, i32 0, i32 6
  %bf.load304 = load i32, i32* %restrict_flag303, align 4
  %bf.lshr305 = lshr i32 %bf.load304, 21
  %bf.clear306 = and i32 %bf.lshr305, 1
  %mul307 = mul nsw i32 %bf.clear306, 4
  %or308 = or i32 %or301, %mul307
  %115 = load %union.tree_node*, %union.tree_node** %ttr, align 8
  %common309 = bitcast %union.tree_node* %115 to %struct.tree_common*
  %code310 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common309, i32 0, i32 2
  %bf.load311 = load i32, i32* %code310, align 8
  %bf.clear312 = and i32 %bf.load311, 255
  %cmp313 = icmp eq i32 %bf.clear312, 20
  br i1 %cmp313, label %land.rhs.314, label %land.end.318

land.rhs.314:                                     ; preds = %land.end.284
  %116 = load %union.tree_node*, %union.tree_node** %ttr, align 8
  %common315 = bitcast %union.tree_node* %116 to %struct.tree_common*
  %type316 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common315, i32 0, i32 1
  %117 = load %union.tree_node*, %union.tree_node** %type316, align 8
  %tobool317 = icmp ne %union.tree_node* %117, null
  br label %land.end.318

land.end.318:                                     ; preds = %land.rhs.314, %land.end.284
  %118 = phi i1 [ false, %land.end.284 ], [ %tobool317, %land.rhs.314 ]
  %land.ext319 = zext i1 %118 to i32
  %mul320 = mul nsw i32 %land.ext319, 8
  %or321 = or i32 %or308, %mul320
  %cmp322 = icmp eq i32 %or288, %or321
  br i1 %cmp322, label %if.then.424, label %if.end.425

cond.false:                                       ; preds = %land.lhs.true.216, %lor.lhs.false.210
  %119 = load %union.tree_node*, %union.tree_node** %ttl, align 8
  %common323 = bitcast %union.tree_node* %119 to %struct.tree_common*
  %readonly_flag324 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common323, i32 0, i32 2
  %bf.load325 = load i32, i32* %readonly_flag324, align 8
  %bf.lshr326 = lshr i32 %bf.load325, 12
  %bf.clear327 = and i32 %bf.lshr326, 1
  %mul328 = mul nsw i32 %bf.clear327, 1
  %120 = load %union.tree_node*, %union.tree_node** %ttl, align 8
  %common329 = bitcast %union.tree_node* %120 to %struct.tree_common*
  %volatile_flag330 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common329, i32 0, i32 2
  %bf.load331 = load i32, i32* %volatile_flag330, align 8
  %bf.lshr332 = lshr i32 %bf.load331, 11
  %bf.clear333 = and i32 %bf.lshr332, 1
  %mul334 = mul nsw i32 %bf.clear333, 2
  %or335 = or i32 %mul328, %mul334
  %121 = load %union.tree_node*, %union.tree_node** %ttl, align 8
  %type336 = bitcast %union.tree_node* %121 to %struct.tree_type*
  %restrict_flag337 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type336, i32 0, i32 6
  %bf.load338 = load i32, i32* %restrict_flag337, align 4
  %bf.lshr339 = lshr i32 %bf.load338, 21
  %bf.clear340 = and i32 %bf.lshr339, 1
  %mul341 = mul nsw i32 %bf.clear340, 4
  %or342 = or i32 %or335, %mul341
  %122 = load %union.tree_node*, %union.tree_node** %ttl, align 8
  %common343 = bitcast %union.tree_node* %122 to %struct.tree_common*
  %code344 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common343, i32 0, i32 2
  %bf.load345 = load i32, i32* %code344, align 8
  %bf.clear346 = and i32 %bf.load345, 255
  %cmp347 = icmp eq i32 %bf.clear346, 20
  br i1 %cmp347, label %land.rhs.348, label %land.end.352

land.rhs.348:                                     ; preds = %cond.false
  %123 = load %union.tree_node*, %union.tree_node** %ttl, align 8
  %common349 = bitcast %union.tree_node* %123 to %struct.tree_common*
  %type350 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common349, i32 0, i32 1
  %124 = load %union.tree_node*, %union.tree_node** %type350, align 8
  %tobool351 = icmp ne %union.tree_node* %124, null
  br label %land.end.352

land.end.352:                                     ; preds = %land.rhs.348, %cond.false
  %125 = phi i1 [ false, %cond.false ], [ %tobool351, %land.rhs.348 ]
  %land.ext353 = zext i1 %125 to i32
  %mul354 = mul nsw i32 %land.ext353, 8
  %or355 = or i32 %or342, %mul354
  %126 = load %union.tree_node*, %union.tree_node** %ttr, align 8
  %common356 = bitcast %union.tree_node* %126 to %struct.tree_common*
  %readonly_flag357 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common356, i32 0, i32 2
  %bf.load358 = load i32, i32* %readonly_flag357, align 8
  %bf.lshr359 = lshr i32 %bf.load358, 12
  %bf.clear360 = and i32 %bf.lshr359, 1
  %mul361 = mul nsw i32 %bf.clear360, 1
  %127 = load %union.tree_node*, %union.tree_node** %ttr, align 8
  %common362 = bitcast %union.tree_node* %127 to %struct.tree_common*
  %volatile_flag363 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common362, i32 0, i32 2
  %bf.load364 = load i32, i32* %volatile_flag363, align 8
  %bf.lshr365 = lshr i32 %bf.load364, 11
  %bf.clear366 = and i32 %bf.lshr365, 1
  %mul367 = mul nsw i32 %bf.clear366, 2
  %or368 = or i32 %mul361, %mul367
  %128 = load %union.tree_node*, %union.tree_node** %ttr, align 8
  %type369 = bitcast %union.tree_node* %128 to %struct.tree_type*
  %restrict_flag370 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type369, i32 0, i32 6
  %bf.load371 = load i32, i32* %restrict_flag370, align 4
  %bf.lshr372 = lshr i32 %bf.load371, 21
  %bf.clear373 = and i32 %bf.lshr372, 1
  %mul374 = mul nsw i32 %bf.clear373, 4
  %or375 = or i32 %or368, %mul374
  %129 = load %union.tree_node*, %union.tree_node** %ttr, align 8
  %common376 = bitcast %union.tree_node* %129 to %struct.tree_common*
  %code377 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common376, i32 0, i32 2
  %bf.load378 = load i32, i32* %code377, align 8
  %bf.clear379 = and i32 %bf.load378, 255
  %cmp380 = icmp eq i32 %bf.clear379, 20
  br i1 %cmp380, label %land.rhs.381, label %land.end.385

land.rhs.381:                                     ; preds = %land.end.352
  %130 = load %union.tree_node*, %union.tree_node** %ttr, align 8
  %common382 = bitcast %union.tree_node* %130 to %struct.tree_common*
  %type383 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common382, i32 0, i32 1
  %131 = load %union.tree_node*, %union.tree_node** %type383, align 8
  %tobool384 = icmp ne %union.tree_node* %131, null
  br label %land.end.385

land.end.385:                                     ; preds = %land.rhs.381, %land.end.352
  %132 = phi i1 [ false, %land.end.352 ], [ %tobool384, %land.rhs.381 ]
  %land.ext386 = zext i1 %132 to i32
  %mul387 = mul nsw i32 %land.ext386, 8
  %or388 = or i32 %or375, %mul387
  %or389 = or i32 %or355, %or388
  %133 = load %union.tree_node*, %union.tree_node** %ttl, align 8
  %common390 = bitcast %union.tree_node* %133 to %struct.tree_common*
  %readonly_flag391 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common390, i32 0, i32 2
  %bf.load392 = load i32, i32* %readonly_flag391, align 8
  %bf.lshr393 = lshr i32 %bf.load392, 12
  %bf.clear394 = and i32 %bf.lshr393, 1
  %mul395 = mul nsw i32 %bf.clear394, 1
  %134 = load %union.tree_node*, %union.tree_node** %ttl, align 8
  %common396 = bitcast %union.tree_node* %134 to %struct.tree_common*
  %volatile_flag397 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common396, i32 0, i32 2
  %bf.load398 = load i32, i32* %volatile_flag397, align 8
  %bf.lshr399 = lshr i32 %bf.load398, 11
  %bf.clear400 = and i32 %bf.lshr399, 1
  %mul401 = mul nsw i32 %bf.clear400, 2
  %or402 = or i32 %mul395, %mul401
  %135 = load %union.tree_node*, %union.tree_node** %ttl, align 8
  %type403 = bitcast %union.tree_node* %135 to %struct.tree_type*
  %restrict_flag404 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type403, i32 0, i32 6
  %bf.load405 = load i32, i32* %restrict_flag404, align 4
  %bf.lshr406 = lshr i32 %bf.load405, 21
  %bf.clear407 = and i32 %bf.lshr406, 1
  %mul408 = mul nsw i32 %bf.clear407, 4
  %or409 = or i32 %or402, %mul408
  %136 = load %union.tree_node*, %union.tree_node** %ttl, align 8
  %common410 = bitcast %union.tree_node* %136 to %struct.tree_common*
  %code411 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common410, i32 0, i32 2
  %bf.load412 = load i32, i32* %code411, align 8
  %bf.clear413 = and i32 %bf.load412, 255
  %cmp414 = icmp eq i32 %bf.clear413, 20
  br i1 %cmp414, label %land.rhs.415, label %land.end.419

land.rhs.415:                                     ; preds = %land.end.385
  %137 = load %union.tree_node*, %union.tree_node** %ttl, align 8
  %common416 = bitcast %union.tree_node* %137 to %struct.tree_common*
  %type417 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common416, i32 0, i32 1
  %138 = load %union.tree_node*, %union.tree_node** %type417, align 8
  %tobool418 = icmp ne %union.tree_node* %138, null
  br label %land.end.419

land.end.419:                                     ; preds = %land.rhs.415, %land.end.385
  %139 = phi i1 [ false, %land.end.385 ], [ %tobool418, %land.rhs.415 ]
  %land.ext420 = zext i1 %139 to i32
  %mul421 = mul nsw i32 %land.ext420, 8
  %or422 = or i32 %or409, %mul421
  %cmp423 = icmp eq i32 %or389, %or422
  br i1 %cmp423, label %if.then.424, label %if.end.425

if.then.424:                                      ; preds = %land.end.419, %land.end.318, %land.end.205
  br label %for.end

if.end.425:                                       ; preds = %land.end.419, %land.end.318
  %140 = load %union.tree_node*, %union.tree_node** %marginal_memb_type, align 8
  %tobool426 = icmp ne %union.tree_node* %140, null
  br i1 %tobool426, label %if.end.428, label %if.then.427

if.then.427:                                      ; preds = %if.end.425
  %141 = load %union.tree_node*, %union.tree_node** %memb_type, align 8
  store %union.tree_node* %141, %union.tree_node** %marginal_memb_type, align 8
  br label %if.end.428

if.end.428:                                       ; preds = %if.then.427, %if.end.425
  br label %if.end.429

if.end.429:                                       ; preds = %if.end.428, %lor.lhs.false.147
  br label %if.end.430

if.end.430:                                       ; preds = %if.end.429, %if.end.129
  %142 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call431 = call i32 @integer_zerop(%union.tree_node* %142)
  %tobool432 = icmp ne i32 %call431, 0
  br i1 %tobool432, label %if.then.445, label %lor.lhs.false.433

lor.lhs.false.433:                                ; preds = %if.end.430
  %143 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %common434 = bitcast %union.tree_node* %143 to %struct.tree_common*
  %code435 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common434, i32 0, i32 2
  %bf.load436 = load i32, i32* %code435, align 8
  %bf.clear437 = and i32 %bf.load436, 255
  %cmp438 = icmp eq i32 %bf.clear437, 115
  br i1 %cmp438, label %land.lhs.true.439, label %if.end.446

land.lhs.true.439:                                ; preds = %lor.lhs.false.433
  %144 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %exp440 = bitcast %union.tree_node* %144 to %struct.tree_exp*
  %operands441 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp440, i32 0, i32 2
  %arrayidx442 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands441, i32 0, i64 0
  %145 = load %union.tree_node*, %union.tree_node** %arrayidx442, align 8
  %call443 = call i32 @integer_zerop(%union.tree_node* %145)
  %tobool444 = icmp ne i32 %call443, 0
  br i1 %tobool444, label %if.then.445, label %if.end.446

if.then.445:                                      ; preds = %land.lhs.true.439, %if.end.430
  %146 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 14), align 8
  store %union.tree_node* %146, %union.tree_node** %rhs.addr, align 8
  br label %for.end

if.end.446:                                       ; preds = %land.lhs.true.439, %lor.lhs.false.433
  br label %for.inc

for.inc:                                          ; preds = %if.end.446, %if.then.128
  %147 = load %union.tree_node*, %union.tree_node** %memb_types, align 8
  %common447 = bitcast %union.tree_node* %147 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common447, i32 0, i32 0
  %148 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %148, %union.tree_node** %memb_types, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.445, %if.then.424, %if.then.121, %for.cond
  %149 = load %union.tree_node*, %union.tree_node** %memb_types, align 8
  %tobool448 = icmp ne %union.tree_node* %149, null
  br i1 %tobool448, label %if.then.451, label %lor.lhs.false.449

lor.lhs.false.449:                                ; preds = %for.end
  %150 = load %union.tree_node*, %union.tree_node** %marginal_memb_type, align 8
  %tobool450 = icmp ne %union.tree_node* %150, null
  br i1 %tobool450, label %if.then.451, label %if.end.624

if.then.451:                                      ; preds = %lor.lhs.false.449, %for.end
  %151 = load %union.tree_node*, %union.tree_node** %memb_types, align 8
  %tobool452 = icmp ne %union.tree_node* %151, null
  br i1 %tobool452, label %if.end.614, label %if.then.453

if.then.453:                                      ; preds = %if.then.451
  %152 = load %union.tree_node*, %union.tree_node** %marginal_memb_type, align 8
  %common455 = bitcast %union.tree_node* %152 to %struct.tree_common*
  %type456 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common455, i32 0, i32 1
  %153 = load %union.tree_node*, %union.tree_node** %type456, align 8
  store %union.tree_node* %153, %union.tree_node** %ttl454, align 8
  %154 = load %union.tree_node*, %union.tree_node** %rhstype, align 8
  %common458 = bitcast %union.tree_node* %154 to %struct.tree_common*
  %type459 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common458, i32 0, i32 1
  %155 = load %union.tree_node*, %union.tree_node** %type459, align 8
  store %union.tree_node* %155, %union.tree_node** %ttr457, align 8
  %156 = load %union.tree_node*, %union.tree_node** %ttr457, align 8
  %common460 = bitcast %union.tree_node* %156 to %struct.tree_common*
  %code461 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common460, i32 0, i32 2
  %bf.load462 = load i32, i32* %code461, align 8
  %bf.clear463 = and i32 %bf.load462, 255
  %cmp464 = icmp eq i32 %bf.clear463, 23
  br i1 %cmp464, label %land.lhs.true.465, label %if.else.541

land.lhs.true.465:                                ; preds = %if.then.453
  %157 = load %union.tree_node*, %union.tree_node** %ttl454, align 8
  %common466 = bitcast %union.tree_node* %157 to %struct.tree_common*
  %code467 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common466, i32 0, i32 2
  %bf.load468 = load i32, i32* %code467, align 8
  %bf.clear469 = and i32 %bf.load468, 255
  %cmp470 = icmp eq i32 %bf.clear469, 23
  br i1 %cmp470, label %if.then.471, label %if.else.541

if.then.471:                                      ; preds = %land.lhs.true.465
  %158 = load %union.tree_node*, %union.tree_node** %ttl454, align 8
  %common472 = bitcast %union.tree_node* %158 to %struct.tree_common*
  %readonly_flag473 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common472, i32 0, i32 2
  %bf.load474 = load i32, i32* %readonly_flag473, align 8
  %bf.lshr475 = lshr i32 %bf.load474, 12
  %bf.clear476 = and i32 %bf.lshr475, 1
  %mul477 = mul nsw i32 %bf.clear476, 1
  %159 = load %union.tree_node*, %union.tree_node** %ttl454, align 8
  %common478 = bitcast %union.tree_node* %159 to %struct.tree_common*
  %volatile_flag479 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common478, i32 0, i32 2
  %bf.load480 = load i32, i32* %volatile_flag479, align 8
  %bf.lshr481 = lshr i32 %bf.load480, 11
  %bf.clear482 = and i32 %bf.lshr481, 1
  %mul483 = mul nsw i32 %bf.clear482, 2
  %or484 = or i32 %mul477, %mul483
  %160 = load %union.tree_node*, %union.tree_node** %ttl454, align 8
  %type485 = bitcast %union.tree_node* %160 to %struct.tree_type*
  %restrict_flag486 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type485, i32 0, i32 6
  %bf.load487 = load i32, i32* %restrict_flag486, align 4
  %bf.lshr488 = lshr i32 %bf.load487, 21
  %bf.clear489 = and i32 %bf.lshr488, 1
  %mul490 = mul nsw i32 %bf.clear489, 4
  %or491 = or i32 %or484, %mul490
  %161 = load %union.tree_node*, %union.tree_node** %ttl454, align 8
  %common492 = bitcast %union.tree_node* %161 to %struct.tree_common*
  %code493 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common492, i32 0, i32 2
  %bf.load494 = load i32, i32* %code493, align 8
  %bf.clear495 = and i32 %bf.load494, 255
  %cmp496 = icmp eq i32 %bf.clear495, 20
  br i1 %cmp496, label %land.rhs.497, label %land.end.501

land.rhs.497:                                     ; preds = %if.then.471
  %162 = load %union.tree_node*, %union.tree_node** %ttl454, align 8
  %common498 = bitcast %union.tree_node* %162 to %struct.tree_common*
  %type499 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common498, i32 0, i32 1
  %163 = load %union.tree_node*, %union.tree_node** %type499, align 8
  %tobool500 = icmp ne %union.tree_node* %163, null
  br label %land.end.501

land.end.501:                                     ; preds = %land.rhs.497, %if.then.471
  %164 = phi i1 [ false, %if.then.471 ], [ %tobool500, %land.rhs.497 ]
  %land.ext502 = zext i1 %164 to i32
  %mul503 = mul nsw i32 %land.ext502, 8
  %or504 = or i32 %or491, %mul503
  %165 = load %union.tree_node*, %union.tree_node** %ttr457, align 8
  %common505 = bitcast %union.tree_node* %165 to %struct.tree_common*
  %readonly_flag506 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common505, i32 0, i32 2
  %bf.load507 = load i32, i32* %readonly_flag506, align 8
  %bf.lshr508 = lshr i32 %bf.load507, 12
  %bf.clear509 = and i32 %bf.lshr508, 1
  %mul510 = mul nsw i32 %bf.clear509, 1
  %166 = load %union.tree_node*, %union.tree_node** %ttr457, align 8
  %common511 = bitcast %union.tree_node* %166 to %struct.tree_common*
  %volatile_flag512 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common511, i32 0, i32 2
  %bf.load513 = load i32, i32* %volatile_flag512, align 8
  %bf.lshr514 = lshr i32 %bf.load513, 11
  %bf.clear515 = and i32 %bf.lshr514, 1
  %mul516 = mul nsw i32 %bf.clear515, 2
  %or517 = or i32 %mul510, %mul516
  %167 = load %union.tree_node*, %union.tree_node** %ttr457, align 8
  %type518 = bitcast %union.tree_node* %167 to %struct.tree_type*
  %restrict_flag519 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type518, i32 0, i32 6
  %bf.load520 = load i32, i32* %restrict_flag519, align 4
  %bf.lshr521 = lshr i32 %bf.load520, 21
  %bf.clear522 = and i32 %bf.lshr521, 1
  %mul523 = mul nsw i32 %bf.clear522, 4
  %or524 = or i32 %or517, %mul523
  %168 = load %union.tree_node*, %union.tree_node** %ttr457, align 8
  %common525 = bitcast %union.tree_node* %168 to %struct.tree_common*
  %code526 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common525, i32 0, i32 2
  %bf.load527 = load i32, i32* %code526, align 8
  %bf.clear528 = and i32 %bf.load527, 255
  %cmp529 = icmp eq i32 %bf.clear528, 20
  br i1 %cmp529, label %land.rhs.530, label %land.end.534

land.rhs.530:                                     ; preds = %land.end.501
  %169 = load %union.tree_node*, %union.tree_node** %ttr457, align 8
  %common531 = bitcast %union.tree_node* %169 to %struct.tree_common*
  %type532 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common531, i32 0, i32 1
  %170 = load %union.tree_node*, %union.tree_node** %type532, align 8
  %tobool533 = icmp ne %union.tree_node* %170, null
  br label %land.end.534

land.end.534:                                     ; preds = %land.rhs.530, %land.end.501
  %171 = phi i1 [ false, %land.end.501 ], [ %tobool533, %land.rhs.530 ]
  %land.ext535 = zext i1 %171 to i32
  %mul536 = mul nsw i32 %land.ext535, 8
  %or537 = or i32 %or524, %mul536
  %neg = xor i32 %or537, -1
  %and = and i32 %or504, %neg
  %tobool538 = icmp ne i32 %and, 0
  br i1 %tobool538, label %if.then.539, label %if.end.540

if.then.539:                                      ; preds = %land.end.534
  %172 = load i8*, i8** %errtype.addr, align 8
  %173 = load %union.tree_node*, %union.tree_node** %funname.addr, align 8
  %174 = load i32, i32* %parmnum.addr, align 4
  call void @warn_for_assignment(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.172, i32 0, i32 0), i8* %172, %union.tree_node* %173, i32 %174)
  br label %if.end.540

if.end.540:                                       ; preds = %if.then.539, %land.end.534
  br label %if.end.613

if.else.541:                                      ; preds = %land.lhs.true.465, %if.then.453
  %175 = load %union.tree_node*, %union.tree_node** %ttr457, align 8
  %common542 = bitcast %union.tree_node* %175 to %struct.tree_common*
  %readonly_flag543 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common542, i32 0, i32 2
  %bf.load544 = load i32, i32* %readonly_flag543, align 8
  %bf.lshr545 = lshr i32 %bf.load544, 12
  %bf.clear546 = and i32 %bf.lshr545, 1
  %mul547 = mul nsw i32 %bf.clear546, 1
  %176 = load %union.tree_node*, %union.tree_node** %ttr457, align 8
  %common548 = bitcast %union.tree_node* %176 to %struct.tree_common*
  %volatile_flag549 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common548, i32 0, i32 2
  %bf.load550 = load i32, i32* %volatile_flag549, align 8
  %bf.lshr551 = lshr i32 %bf.load550, 11
  %bf.clear552 = and i32 %bf.lshr551, 1
  %mul553 = mul nsw i32 %bf.clear552, 2
  %or554 = or i32 %mul547, %mul553
  %177 = load %union.tree_node*, %union.tree_node** %ttr457, align 8
  %type555 = bitcast %union.tree_node* %177 to %struct.tree_type*
  %restrict_flag556 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type555, i32 0, i32 6
  %bf.load557 = load i32, i32* %restrict_flag556, align 4
  %bf.lshr558 = lshr i32 %bf.load557, 21
  %bf.clear559 = and i32 %bf.lshr558, 1
  %mul560 = mul nsw i32 %bf.clear559, 4
  %or561 = or i32 %or554, %mul560
  %178 = load %union.tree_node*, %union.tree_node** %ttr457, align 8
  %common562 = bitcast %union.tree_node* %178 to %struct.tree_common*
  %code563 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common562, i32 0, i32 2
  %bf.load564 = load i32, i32* %code563, align 8
  %bf.clear565 = and i32 %bf.load564, 255
  %cmp566 = icmp eq i32 %bf.clear565, 20
  br i1 %cmp566, label %land.rhs.567, label %land.end.571

land.rhs.567:                                     ; preds = %if.else.541
  %179 = load %union.tree_node*, %union.tree_node** %ttr457, align 8
  %common568 = bitcast %union.tree_node* %179 to %struct.tree_common*
  %type569 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common568, i32 0, i32 1
  %180 = load %union.tree_node*, %union.tree_node** %type569, align 8
  %tobool570 = icmp ne %union.tree_node* %180, null
  br label %land.end.571

land.end.571:                                     ; preds = %land.rhs.567, %if.else.541
  %181 = phi i1 [ false, %if.else.541 ], [ %tobool570, %land.rhs.567 ]
  %land.ext572 = zext i1 %181 to i32
  %mul573 = mul nsw i32 %land.ext572, 8
  %or574 = or i32 %or561, %mul573
  %182 = load %union.tree_node*, %union.tree_node** %ttl454, align 8
  %common575 = bitcast %union.tree_node* %182 to %struct.tree_common*
  %readonly_flag576 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common575, i32 0, i32 2
  %bf.load577 = load i32, i32* %readonly_flag576, align 8
  %bf.lshr578 = lshr i32 %bf.load577, 12
  %bf.clear579 = and i32 %bf.lshr578, 1
  %mul580 = mul nsw i32 %bf.clear579, 1
  %183 = load %union.tree_node*, %union.tree_node** %ttl454, align 8
  %common581 = bitcast %union.tree_node* %183 to %struct.tree_common*
  %volatile_flag582 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common581, i32 0, i32 2
  %bf.load583 = load i32, i32* %volatile_flag582, align 8
  %bf.lshr584 = lshr i32 %bf.load583, 11
  %bf.clear585 = and i32 %bf.lshr584, 1
  %mul586 = mul nsw i32 %bf.clear585, 2
  %or587 = or i32 %mul580, %mul586
  %184 = load %union.tree_node*, %union.tree_node** %ttl454, align 8
  %type588 = bitcast %union.tree_node* %184 to %struct.tree_type*
  %restrict_flag589 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type588, i32 0, i32 6
  %bf.load590 = load i32, i32* %restrict_flag589, align 4
  %bf.lshr591 = lshr i32 %bf.load590, 21
  %bf.clear592 = and i32 %bf.lshr591, 1
  %mul593 = mul nsw i32 %bf.clear592, 4
  %or594 = or i32 %or587, %mul593
  %185 = load %union.tree_node*, %union.tree_node** %ttl454, align 8
  %common595 = bitcast %union.tree_node* %185 to %struct.tree_common*
  %code596 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common595, i32 0, i32 2
  %bf.load597 = load i32, i32* %code596, align 8
  %bf.clear598 = and i32 %bf.load597, 255
  %cmp599 = icmp eq i32 %bf.clear598, 20
  br i1 %cmp599, label %land.rhs.600, label %land.end.604

land.rhs.600:                                     ; preds = %land.end.571
  %186 = load %union.tree_node*, %union.tree_node** %ttl454, align 8
  %common601 = bitcast %union.tree_node* %186 to %struct.tree_common*
  %type602 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common601, i32 0, i32 1
  %187 = load %union.tree_node*, %union.tree_node** %type602, align 8
  %tobool603 = icmp ne %union.tree_node* %187, null
  br label %land.end.604

land.end.604:                                     ; preds = %land.rhs.600, %land.end.571
  %188 = phi i1 [ false, %land.end.571 ], [ %tobool603, %land.rhs.600 ]
  %land.ext605 = zext i1 %188 to i32
  %mul606 = mul nsw i32 %land.ext605, 8
  %or607 = or i32 %or594, %mul606
  %neg608 = xor i32 %or607, -1
  %and609 = and i32 %or574, %neg608
  %tobool610 = icmp ne i32 %and609, 0
  br i1 %tobool610, label %if.then.611, label %if.end.612

if.then.611:                                      ; preds = %land.end.604
  %189 = load i8*, i8** %errtype.addr, align 8
  %190 = load %union.tree_node*, %union.tree_node** %funname.addr, align 8
  %191 = load i32, i32* %parmnum.addr, align 4
  call void @warn_for_assignment(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.173, i32 0, i32 0), i8* %189, %union.tree_node* %190, i32 %191)
  br label %if.end.612

if.end.612:                                       ; preds = %if.then.611, %land.end.604
  br label %if.end.613

if.end.613:                                       ; preds = %if.end.612, %if.end.540
  br label %if.end.614

if.end.614:                                       ; preds = %if.end.613, %if.then.451
  %192 = load i32, i32* @pedantic, align 4
  %tobool615 = icmp ne i32 %192, 0
  br i1 %tobool615, label %land.lhs.true.616, label %if.end.622

land.lhs.true.616:                                ; preds = %if.end.614
  %193 = load %union.tree_node*, %union.tree_node** %fundecl.addr, align 8
  %decl = bitcast %union.tree_node* %193 to %struct.tree_decl*
  %in_system_header_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 5
  %194 = bitcast i48* %in_system_header_flag to i64*
  %bf.load617 = load i64, i64* %194, align 8
  %bf.lshr618 = lshr i64 %bf.load617, 16
  %bf.clear619 = and i64 %bf.lshr618, 1
  %bf.cast = trunc i64 %bf.clear619 to i32
  %tobool620 = icmp ne i32 %bf.cast, 0
  br i1 %tobool620, label %if.end.622, label %if.then.621

if.then.621:                                      ; preds = %land.lhs.true.616
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.174, i32 0, i32 0))
  br label %if.end.622

if.end.622:                                       ; preds = %if.then.621, %land.lhs.true.616, %if.end.614
  %195 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %196 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call623 = call %union.tree_node* @build1(i32 115, %union.tree_node* %195, %union.tree_node* %196)
  store %union.tree_node* %call623, %union.tree_node** %retval
  br label %return

if.end.624:                                       ; preds = %lor.lhs.false.449
  br label %if.end.954

if.else.625:                                      ; preds = %land.lhs.true.108, %land.lhs.true.103, %if.else.101
  %197 = load i32, i32* %codel, align 4
  %cmp626 = icmp eq i32 %197, 13
  br i1 %cmp626, label %land.lhs.true.629, label %lor.lhs.false.627

lor.lhs.false.627:                                ; preds = %if.else.625
  %198 = load i32, i32* %codel, align 4
  %cmp628 = icmp eq i32 %198, 15
  br i1 %cmp628, label %land.lhs.true.629, label %if.else.893

land.lhs.true.629:                                ; preds = %lor.lhs.false.627, %if.else.625
  %199 = load i32, i32* %coder, align 4
  %cmp630 = icmp eq i32 %199, 13
  br i1 %cmp630, label %if.then.633, label %lor.lhs.false.631

lor.lhs.false.631:                                ; preds = %land.lhs.true.629
  %200 = load i32, i32* %coder, align 4
  %cmp632 = icmp eq i32 %200, 15
  br i1 %cmp632, label %if.then.633, label %if.else.893

if.then.633:                                      ; preds = %lor.lhs.false.631, %land.lhs.true.629
  %201 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common635 = bitcast %union.tree_node* %201 to %struct.tree_common*
  %type636 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common635, i32 0, i32 1
  %202 = load %union.tree_node*, %union.tree_node** %type636, align 8
  store %union.tree_node* %202, %union.tree_node** %ttl634, align 8
  %203 = load %union.tree_node*, %union.tree_node** %rhstype, align 8
  %common638 = bitcast %union.tree_node* %203 to %struct.tree_common*
  %type639 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common638, i32 0, i32 1
  %204 = load %union.tree_node*, %union.tree_node** %type639, align 8
  store %union.tree_node* %204, %union.tree_node** %ttr637, align 8
  %205 = load %union.tree_node*, %union.tree_node** %ttl634, align 8
  %common640 = bitcast %union.tree_node* %205 to %struct.tree_common*
  %code641 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common640, i32 0, i32 2
  %bf.load642 = load i32, i32* %code641, align 8
  %bf.clear643 = and i32 %bf.load642, 255
  %cmp644 = icmp eq i32 %bf.clear643, 5
  br i1 %cmp644, label %if.then.662, label %lor.lhs.false.645

lor.lhs.false.645:                                ; preds = %if.then.633
  %206 = load %union.tree_node*, %union.tree_node** %ttr637, align 8
  %common646 = bitcast %union.tree_node* %206 to %struct.tree_common*
  %code647 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common646, i32 0, i32 2
  %bf.load648 = load i32, i32* %code647, align 8
  %bf.clear649 = and i32 %bf.load648, 255
  %cmp650 = icmp eq i32 %bf.clear649, 5
  br i1 %cmp650, label %if.then.662, label %lor.lhs.false.651

lor.lhs.false.651:                                ; preds = %lor.lhs.false.645
  %207 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %208 = load %union.tree_node*, %union.tree_node** %rhstype, align 8
  %call652 = call i32 @comp_target_types(%union.tree_node* %207, %union.tree_node* %208)
  %tobool653 = icmp ne i32 %call652, 0
  br i1 %tobool653, label %if.then.662, label %lor.lhs.false.654

lor.lhs.false.654:                                ; preds = %lor.lhs.false.651
  %209 = load %union.tree_node*, %union.tree_node** %ttl634, align 8
  %type655 = bitcast %union.tree_node* %209 to %struct.tree_type*
  %main_variant656 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type655, i32 0, i32 15
  %210 = load %union.tree_node*, %union.tree_node** %main_variant656, align 8
  %call657 = call %union.tree_node* @unsigned_type(%union.tree_node* %210)
  %211 = load %union.tree_node*, %union.tree_node** %ttr637, align 8
  %type658 = bitcast %union.tree_node* %211 to %struct.tree_type*
  %main_variant659 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type658, i32 0, i32 15
  %212 = load %union.tree_node*, %union.tree_node** %main_variant659, align 8
  %call660 = call %union.tree_node* @unsigned_type(%union.tree_node* %212)
  %cmp661 = icmp eq %union.tree_node* %call657, %call660
  br i1 %cmp661, label %if.then.662, label %if.else.890

if.then.662:                                      ; preds = %lor.lhs.false.654, %lor.lhs.false.651, %lor.lhs.false.645, %if.then.633
  %213 = load i32, i32* @pedantic, align 4
  %tobool663 = icmp ne i32 %213, 0
  br i1 %tobool663, label %land.lhs.true.664, label %if.else.698

land.lhs.true.664:                                ; preds = %if.then.662
  %214 = load %union.tree_node*, %union.tree_node** %ttl634, align 8
  %common665 = bitcast %union.tree_node* %214 to %struct.tree_common*
  %code666 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common665, i32 0, i32 2
  %bf.load667 = load i32, i32* %code666, align 8
  %bf.clear668 = and i32 %bf.load667, 255
  %cmp669 = icmp eq i32 %bf.clear668, 5
  br i1 %cmp669, label %land.lhs.true.670, label %lor.lhs.false.676

land.lhs.true.670:                                ; preds = %land.lhs.true.664
  %215 = load %union.tree_node*, %union.tree_node** %ttr637, align 8
  %common671 = bitcast %union.tree_node* %215 to %struct.tree_common*
  %code672 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common671, i32 0, i32 2
  %bf.load673 = load i32, i32* %code672, align 8
  %bf.clear674 = and i32 %bf.load673, 255
  %cmp675 = icmp eq i32 %bf.clear674, 23
  br i1 %cmp675, label %if.then.697, label %lor.lhs.false.676

lor.lhs.false.676:                                ; preds = %land.lhs.true.670, %land.lhs.true.664
  %216 = load %union.tree_node*, %union.tree_node** %ttr637, align 8
  %common677 = bitcast %union.tree_node* %216 to %struct.tree_common*
  %code678 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common677, i32 0, i32 2
  %bf.load679 = load i32, i32* %code678, align 8
  %bf.clear680 = and i32 %bf.load679, 255
  %cmp681 = icmp eq i32 %bf.clear680, 5
  br i1 %cmp681, label %land.lhs.true.682, label %if.else.698

land.lhs.true.682:                                ; preds = %lor.lhs.false.676
  %217 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call683 = call i32 @integer_zerop(%union.tree_node* %217)
  %tobool684 = icmp ne i32 %call683, 0
  br i1 %tobool684, label %lor.lhs.false.685, label %land.lhs.true.691

lor.lhs.false.685:                                ; preds = %land.lhs.true.682
  %218 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %common686 = bitcast %union.tree_node* %218 to %struct.tree_common*
  %code687 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common686, i32 0, i32 2
  %bf.load688 = load i32, i32* %code687, align 8
  %bf.clear689 = and i32 %bf.load688, 255
  %cmp690 = icmp eq i32 %bf.clear689, 115
  br i1 %cmp690, label %land.lhs.true.691, label %if.else.698

land.lhs.true.691:                                ; preds = %lor.lhs.false.685, %land.lhs.true.682
  %219 = load %union.tree_node*, %union.tree_node** %ttl634, align 8
  %common692 = bitcast %union.tree_node* %219 to %struct.tree_common*
  %code693 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common692, i32 0, i32 2
  %bf.load694 = load i32, i32* %code693, align 8
  %bf.clear695 = and i32 %bf.load694, 255
  %cmp696 = icmp eq i32 %bf.clear695, 23
  br i1 %cmp696, label %if.then.697, label %if.else.698

if.then.697:                                      ; preds = %land.lhs.true.691, %land.lhs.true.670
  %220 = load i8*, i8** %errtype.addr, align 8
  %221 = load %union.tree_node*, %union.tree_node** %funname.addr, align 8
  %222 = load i32, i32* %parmnum.addr, align 4
  call void @warn_for_assignment(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.175, i32 0, i32 0), i8* %220, %union.tree_node* %221, i32 %222)
  br label %if.end.889

if.else.698:                                      ; preds = %land.lhs.true.691, %lor.lhs.false.685, %lor.lhs.false.676, %if.then.662
  %223 = load %union.tree_node*, %union.tree_node** %ttr637, align 8
  %common699 = bitcast %union.tree_node* %223 to %struct.tree_common*
  %code700 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common699, i32 0, i32 2
  %bf.load701 = load i32, i32* %code700, align 8
  %bf.clear702 = and i32 %bf.load701, 255
  %cmp703 = icmp ne i32 %bf.clear702, 23
  br i1 %cmp703, label %land.lhs.true.704, label %if.else.803

land.lhs.true.704:                                ; preds = %if.else.698
  %224 = load %union.tree_node*, %union.tree_node** %ttl634, align 8
  %common705 = bitcast %union.tree_node* %224 to %struct.tree_common*
  %code706 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common705, i32 0, i32 2
  %bf.load707 = load i32, i32* %code706, align 8
  %bf.clear708 = and i32 %bf.load707, 255
  %cmp709 = icmp ne i32 %bf.clear708, 23
  br i1 %cmp709, label %if.then.710, label %if.else.803

if.then.710:                                      ; preds = %land.lhs.true.704
  %225 = load %union.tree_node*, %union.tree_node** %ttr637, align 8
  %common711 = bitcast %union.tree_node* %225 to %struct.tree_common*
  %readonly_flag712 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common711, i32 0, i32 2
  %bf.load713 = load i32, i32* %readonly_flag712, align 8
  %bf.lshr714 = lshr i32 %bf.load713, 12
  %bf.clear715 = and i32 %bf.lshr714, 1
  %mul716 = mul nsw i32 %bf.clear715, 1
  %226 = load %union.tree_node*, %union.tree_node** %ttr637, align 8
  %common717 = bitcast %union.tree_node* %226 to %struct.tree_common*
  %volatile_flag718 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common717, i32 0, i32 2
  %bf.load719 = load i32, i32* %volatile_flag718, align 8
  %bf.lshr720 = lshr i32 %bf.load719, 11
  %bf.clear721 = and i32 %bf.lshr720, 1
  %mul722 = mul nsw i32 %bf.clear721, 2
  %or723 = or i32 %mul716, %mul722
  %227 = load %union.tree_node*, %union.tree_node** %ttr637, align 8
  %type724 = bitcast %union.tree_node* %227 to %struct.tree_type*
  %restrict_flag725 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type724, i32 0, i32 6
  %bf.load726 = load i32, i32* %restrict_flag725, align 4
  %bf.lshr727 = lshr i32 %bf.load726, 21
  %bf.clear728 = and i32 %bf.lshr727, 1
  %mul729 = mul nsw i32 %bf.clear728, 4
  %or730 = or i32 %or723, %mul729
  %228 = load %union.tree_node*, %union.tree_node** %ttr637, align 8
  %common731 = bitcast %union.tree_node* %228 to %struct.tree_common*
  %code732 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common731, i32 0, i32 2
  %bf.load733 = load i32, i32* %code732, align 8
  %bf.clear734 = and i32 %bf.load733, 255
  %cmp735 = icmp eq i32 %bf.clear734, 20
  br i1 %cmp735, label %land.rhs.736, label %land.end.740

land.rhs.736:                                     ; preds = %if.then.710
  %229 = load %union.tree_node*, %union.tree_node** %ttr637, align 8
  %common737 = bitcast %union.tree_node* %229 to %struct.tree_common*
  %type738 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common737, i32 0, i32 1
  %230 = load %union.tree_node*, %union.tree_node** %type738, align 8
  %tobool739 = icmp ne %union.tree_node* %230, null
  br label %land.end.740

land.end.740:                                     ; preds = %land.rhs.736, %if.then.710
  %231 = phi i1 [ false, %if.then.710 ], [ %tobool739, %land.rhs.736 ]
  %land.ext741 = zext i1 %231 to i32
  %mul742 = mul nsw i32 %land.ext741, 8
  %or743 = or i32 %or730, %mul742
  %232 = load %union.tree_node*, %union.tree_node** %ttl634, align 8
  %common744 = bitcast %union.tree_node* %232 to %struct.tree_common*
  %readonly_flag745 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common744, i32 0, i32 2
  %bf.load746 = load i32, i32* %readonly_flag745, align 8
  %bf.lshr747 = lshr i32 %bf.load746, 12
  %bf.clear748 = and i32 %bf.lshr747, 1
  %mul749 = mul nsw i32 %bf.clear748, 1
  %233 = load %union.tree_node*, %union.tree_node** %ttl634, align 8
  %common750 = bitcast %union.tree_node* %233 to %struct.tree_common*
  %volatile_flag751 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common750, i32 0, i32 2
  %bf.load752 = load i32, i32* %volatile_flag751, align 8
  %bf.lshr753 = lshr i32 %bf.load752, 11
  %bf.clear754 = and i32 %bf.lshr753, 1
  %mul755 = mul nsw i32 %bf.clear754, 2
  %or756 = or i32 %mul749, %mul755
  %234 = load %union.tree_node*, %union.tree_node** %ttl634, align 8
  %type757 = bitcast %union.tree_node* %234 to %struct.tree_type*
  %restrict_flag758 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type757, i32 0, i32 6
  %bf.load759 = load i32, i32* %restrict_flag758, align 4
  %bf.lshr760 = lshr i32 %bf.load759, 21
  %bf.clear761 = and i32 %bf.lshr760, 1
  %mul762 = mul nsw i32 %bf.clear761, 4
  %or763 = or i32 %or756, %mul762
  %235 = load %union.tree_node*, %union.tree_node** %ttl634, align 8
  %common764 = bitcast %union.tree_node* %235 to %struct.tree_common*
  %code765 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common764, i32 0, i32 2
  %bf.load766 = load i32, i32* %code765, align 8
  %bf.clear767 = and i32 %bf.load766, 255
  %cmp768 = icmp eq i32 %bf.clear767, 20
  br i1 %cmp768, label %land.rhs.769, label %land.end.773

land.rhs.769:                                     ; preds = %land.end.740
  %236 = load %union.tree_node*, %union.tree_node** %ttl634, align 8
  %common770 = bitcast %union.tree_node* %236 to %struct.tree_common*
  %type771 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common770, i32 0, i32 1
  %237 = load %union.tree_node*, %union.tree_node** %type771, align 8
  %tobool772 = icmp ne %union.tree_node* %237, null
  br label %land.end.773

land.end.773:                                     ; preds = %land.rhs.769, %land.end.740
  %238 = phi i1 [ false, %land.end.740 ], [ %tobool772, %land.rhs.769 ]
  %land.ext774 = zext i1 %238 to i32
  %mul775 = mul nsw i32 %land.ext774, 8
  %or776 = or i32 %or763, %mul775
  %neg777 = xor i32 %or776, -1
  %and778 = and i32 %or743, %neg777
  %tobool779 = icmp ne i32 %and778, 0
  br i1 %tobool779, label %if.then.780, label %if.else.781

if.then.780:                                      ; preds = %land.end.773
  %239 = load i8*, i8** %errtype.addr, align 8
  %240 = load %union.tree_node*, %union.tree_node** %funname.addr, align 8
  %241 = load i32, i32* %parmnum.addr, align 4
  call void @warn_for_assignment(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.173, i32 0, i32 0), i8* %239, %union.tree_node* %240, i32 %241)
  br label %if.end.802

if.else.781:                                      ; preds = %land.end.773
  %242 = load %union.tree_node*, %union.tree_node** %ttl634, align 8
  %common782 = bitcast %union.tree_node* %242 to %struct.tree_common*
  %code783 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common782, i32 0, i32 2
  %bf.load784 = load i32, i32* %code783, align 8
  %bf.clear785 = and i32 %bf.load784, 255
  %cmp786 = icmp eq i32 %bf.clear785, 5
  br i1 %cmp786, label %if.then.796, label %lor.lhs.false.787

lor.lhs.false.787:                                ; preds = %if.else.781
  %243 = load %union.tree_node*, %union.tree_node** %ttr637, align 8
  %common788 = bitcast %union.tree_node* %243 to %struct.tree_common*
  %code789 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common788, i32 0, i32 2
  %bf.load790 = load i32, i32* %code789, align 8
  %bf.clear791 = and i32 %bf.load790, 255
  %cmp792 = icmp eq i32 %bf.clear791, 5
  br i1 %cmp792, label %if.then.796, label %lor.lhs.false.793

lor.lhs.false.793:                                ; preds = %lor.lhs.false.787
  %244 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %245 = load %union.tree_node*, %union.tree_node** %rhstype, align 8
  %call794 = call i32 @comp_target_types(%union.tree_node* %244, %union.tree_node* %245)
  %tobool795 = icmp ne i32 %call794, 0
  br i1 %tobool795, label %if.then.796, label %if.else.797

if.then.796:                                      ; preds = %lor.lhs.false.793, %lor.lhs.false.787, %if.else.781
  br label %if.end.801

if.else.797:                                      ; preds = %lor.lhs.false.793
  %246 = load i32, i32* @pedantic, align 4
  %tobool798 = icmp ne i32 %246, 0
  br i1 %tobool798, label %if.then.799, label %if.end.800

if.then.799:                                      ; preds = %if.else.797
  %247 = load i8*, i8** %errtype.addr, align 8
  %248 = load %union.tree_node*, %union.tree_node** %funname.addr, align 8
  %249 = load i32, i32* %parmnum.addr, align 4
  call void @warn_for_assignment(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.176, i32 0, i32 0), i8* %247, %union.tree_node* %248, i32 %249)
  br label %if.end.800

if.end.800:                                       ; preds = %if.then.799, %if.else.797
  br label %if.end.801

if.end.801:                                       ; preds = %if.end.800, %if.then.796
  br label %if.end.802

if.end.802:                                       ; preds = %if.end.801, %if.then.780
  br label %if.end.888

if.else.803:                                      ; preds = %land.lhs.true.704, %if.else.698
  %250 = load %union.tree_node*, %union.tree_node** %ttl634, align 8
  %common804 = bitcast %union.tree_node* %250 to %struct.tree_common*
  %code805 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common804, i32 0, i32 2
  %bf.load806 = load i32, i32* %code805, align 8
  %bf.clear807 = and i32 %bf.load806, 255
  %cmp808 = icmp eq i32 %bf.clear807, 23
  br i1 %cmp808, label %land.lhs.true.809, label %if.end.887

land.lhs.true.809:                                ; preds = %if.else.803
  %251 = load %union.tree_node*, %union.tree_node** %ttr637, align 8
  %common810 = bitcast %union.tree_node* %251 to %struct.tree_common*
  %code811 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common810, i32 0, i32 2
  %bf.load812 = load i32, i32* %code811, align 8
  %bf.clear813 = and i32 %bf.load812, 255
  %cmp814 = icmp eq i32 %bf.clear813, 23
  br i1 %cmp814, label %if.then.815, label %if.end.887

if.then.815:                                      ; preds = %land.lhs.true.809
  %252 = load %union.tree_node*, %union.tree_node** %ttl634, align 8
  %common816 = bitcast %union.tree_node* %252 to %struct.tree_common*
  %readonly_flag817 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common816, i32 0, i32 2
  %bf.load818 = load i32, i32* %readonly_flag817, align 8
  %bf.lshr819 = lshr i32 %bf.load818, 12
  %bf.clear820 = and i32 %bf.lshr819, 1
  %mul821 = mul nsw i32 %bf.clear820, 1
  %253 = load %union.tree_node*, %union.tree_node** %ttl634, align 8
  %common822 = bitcast %union.tree_node* %253 to %struct.tree_common*
  %volatile_flag823 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common822, i32 0, i32 2
  %bf.load824 = load i32, i32* %volatile_flag823, align 8
  %bf.lshr825 = lshr i32 %bf.load824, 11
  %bf.clear826 = and i32 %bf.lshr825, 1
  %mul827 = mul nsw i32 %bf.clear826, 2
  %or828 = or i32 %mul821, %mul827
  %254 = load %union.tree_node*, %union.tree_node** %ttl634, align 8
  %type829 = bitcast %union.tree_node* %254 to %struct.tree_type*
  %restrict_flag830 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type829, i32 0, i32 6
  %bf.load831 = load i32, i32* %restrict_flag830, align 4
  %bf.lshr832 = lshr i32 %bf.load831, 21
  %bf.clear833 = and i32 %bf.lshr832, 1
  %mul834 = mul nsw i32 %bf.clear833, 4
  %or835 = or i32 %or828, %mul834
  %255 = load %union.tree_node*, %union.tree_node** %ttl634, align 8
  %common836 = bitcast %union.tree_node* %255 to %struct.tree_common*
  %code837 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common836, i32 0, i32 2
  %bf.load838 = load i32, i32* %code837, align 8
  %bf.clear839 = and i32 %bf.load838, 255
  %cmp840 = icmp eq i32 %bf.clear839, 20
  br i1 %cmp840, label %land.rhs.841, label %land.end.845

land.rhs.841:                                     ; preds = %if.then.815
  %256 = load %union.tree_node*, %union.tree_node** %ttl634, align 8
  %common842 = bitcast %union.tree_node* %256 to %struct.tree_common*
  %type843 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common842, i32 0, i32 1
  %257 = load %union.tree_node*, %union.tree_node** %type843, align 8
  %tobool844 = icmp ne %union.tree_node* %257, null
  br label %land.end.845

land.end.845:                                     ; preds = %land.rhs.841, %if.then.815
  %258 = phi i1 [ false, %if.then.815 ], [ %tobool844, %land.rhs.841 ]
  %land.ext846 = zext i1 %258 to i32
  %mul847 = mul nsw i32 %land.ext846, 8
  %or848 = or i32 %or835, %mul847
  %259 = load %union.tree_node*, %union.tree_node** %ttr637, align 8
  %common849 = bitcast %union.tree_node* %259 to %struct.tree_common*
  %readonly_flag850 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common849, i32 0, i32 2
  %bf.load851 = load i32, i32* %readonly_flag850, align 8
  %bf.lshr852 = lshr i32 %bf.load851, 12
  %bf.clear853 = and i32 %bf.lshr852, 1
  %mul854 = mul nsw i32 %bf.clear853, 1
  %260 = load %union.tree_node*, %union.tree_node** %ttr637, align 8
  %common855 = bitcast %union.tree_node* %260 to %struct.tree_common*
  %volatile_flag856 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common855, i32 0, i32 2
  %bf.load857 = load i32, i32* %volatile_flag856, align 8
  %bf.lshr858 = lshr i32 %bf.load857, 11
  %bf.clear859 = and i32 %bf.lshr858, 1
  %mul860 = mul nsw i32 %bf.clear859, 2
  %or861 = or i32 %mul854, %mul860
  %261 = load %union.tree_node*, %union.tree_node** %ttr637, align 8
  %type862 = bitcast %union.tree_node* %261 to %struct.tree_type*
  %restrict_flag863 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type862, i32 0, i32 6
  %bf.load864 = load i32, i32* %restrict_flag863, align 4
  %bf.lshr865 = lshr i32 %bf.load864, 21
  %bf.clear866 = and i32 %bf.lshr865, 1
  %mul867 = mul nsw i32 %bf.clear866, 4
  %or868 = or i32 %or861, %mul867
  %262 = load %union.tree_node*, %union.tree_node** %ttr637, align 8
  %common869 = bitcast %union.tree_node* %262 to %struct.tree_common*
  %code870 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common869, i32 0, i32 2
  %bf.load871 = load i32, i32* %code870, align 8
  %bf.clear872 = and i32 %bf.load871, 255
  %cmp873 = icmp eq i32 %bf.clear872, 20
  br i1 %cmp873, label %land.rhs.874, label %land.end.878

land.rhs.874:                                     ; preds = %land.end.845
  %263 = load %union.tree_node*, %union.tree_node** %ttr637, align 8
  %common875 = bitcast %union.tree_node* %263 to %struct.tree_common*
  %type876 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common875, i32 0, i32 1
  %264 = load %union.tree_node*, %union.tree_node** %type876, align 8
  %tobool877 = icmp ne %union.tree_node* %264, null
  br label %land.end.878

land.end.878:                                     ; preds = %land.rhs.874, %land.end.845
  %265 = phi i1 [ false, %land.end.845 ], [ %tobool877, %land.rhs.874 ]
  %land.ext879 = zext i1 %265 to i32
  %mul880 = mul nsw i32 %land.ext879, 8
  %or881 = or i32 %or868, %mul880
  %neg882 = xor i32 %or881, -1
  %and883 = and i32 %or848, %neg882
  %tobool884 = icmp ne i32 %and883, 0
  br i1 %tobool884, label %if.then.885, label %if.end.886

if.then.885:                                      ; preds = %land.end.878
  %266 = load i8*, i8** %errtype.addr, align 8
  %267 = load %union.tree_node*, %union.tree_node** %funname.addr, align 8
  %268 = load i32, i32* %parmnum.addr, align 4
  call void @warn_for_assignment(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.172, i32 0, i32 0), i8* %266, %union.tree_node* %267, i32 %268)
  br label %if.end.886

if.end.886:                                       ; preds = %if.then.885, %land.end.878
  br label %if.end.887

if.end.887:                                       ; preds = %if.end.886, %land.lhs.true.809, %if.else.803
  br label %if.end.888

if.end.888:                                       ; preds = %if.end.887, %if.end.802
  br label %if.end.889

if.end.889:                                       ; preds = %if.end.888, %if.then.697
  br label %if.end.891

if.else.890:                                      ; preds = %lor.lhs.false.654
  %269 = load i8*, i8** %errtype.addr, align 8
  %270 = load %union.tree_node*, %union.tree_node** %funname.addr, align 8
  %271 = load i32, i32* %parmnum.addr, align 4
  call void @warn_for_assignment(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.177, i32 0, i32 0), i8* %269, %union.tree_node* %270, i32 %271)
  br label %if.end.891

if.end.891:                                       ; preds = %if.else.890, %if.end.889
  %272 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %273 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call892 = call %union.tree_node* @convert(%union.tree_node* %272, %union.tree_node* %273)
  store %union.tree_node* %call892, %union.tree_node** %retval
  br label %return

if.else.893:                                      ; preds = %lor.lhs.false.631, %lor.lhs.false.627
  %274 = load i32, i32* %codel, align 4
  %cmp894 = icmp eq i32 %274, 13
  br i1 %cmp894, label %land.lhs.true.895, label %if.else.938

land.lhs.true.895:                                ; preds = %if.else.893
  %275 = load i32, i32* %coder, align 4
  %cmp896 = icmp eq i32 %275, 6
  br i1 %cmp896, label %if.then.897, label %if.else.938

if.then.897:                                      ; preds = %land.lhs.true.895
  %276 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %common898 = bitcast %union.tree_node* %276 to %struct.tree_common*
  %code899 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common898, i32 0, i32 2
  %bf.load900 = load i32, i32* %code899, align 8
  %bf.clear901 = and i32 %bf.load900, 255
  %cmp902 = icmp eq i32 %bf.clear901, 25
  br i1 %cmp902, label %land.lhs.true.903, label %land.lhs.true.906

land.lhs.true.903:                                ; preds = %if.then.897
  %277 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call904 = call i32 @integer_zerop(%union.tree_node* %277)
  %tobool905 = icmp ne i32 %call904, 0
  br i1 %tobool905, label %if.end.937, label %land.lhs.true.906

land.lhs.true.906:                                ; preds = %land.lhs.true.903, %if.then.897
  %278 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %common907 = bitcast %union.tree_node* %278 to %struct.tree_common*
  %code908 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common907, i32 0, i32 2
  %bf.load909 = load i32, i32* %code908, align 8
  %bf.clear910 = and i32 %bf.load909, 255
  %cmp911 = icmp eq i32 %bf.clear910, 115
  br i1 %cmp911, label %land.lhs.true.912, label %if.then.935

land.lhs.true.912:                                ; preds = %land.lhs.true.906
  %279 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %common913 = bitcast %union.tree_node* %279 to %struct.tree_common*
  %type914 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common913, i32 0, i32 1
  %280 = load %union.tree_node*, %union.tree_node** %type914, align 8
  %common915 = bitcast %union.tree_node* %280 to %struct.tree_common*
  %code916 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common915, i32 0, i32 2
  %bf.load917 = load i32, i32* %code916, align 8
  %bf.clear918 = and i32 %bf.load917, 255
  %cmp919 = icmp eq i32 %bf.clear918, 6
  br i1 %cmp919, label %land.lhs.true.920, label %if.then.935

land.lhs.true.920:                                ; preds = %land.lhs.true.912
  %281 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %exp921 = bitcast %union.tree_node* %281 to %struct.tree_exp*
  %operands922 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp921, i32 0, i32 2
  %arrayidx923 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands922, i32 0, i64 0
  %282 = load %union.tree_node*, %union.tree_node** %arrayidx923, align 8
  %common924 = bitcast %union.tree_node* %282 to %struct.tree_common*
  %code925 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common924, i32 0, i32 2
  %bf.load926 = load i32, i32* %code925, align 8
  %bf.clear927 = and i32 %bf.load926, 255
  %cmp928 = icmp eq i32 %bf.clear927, 25
  br i1 %cmp928, label %land.lhs.true.929, label %if.then.935

land.lhs.true.929:                                ; preds = %land.lhs.true.920
  %283 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %exp930 = bitcast %union.tree_node* %283 to %struct.tree_exp*
  %operands931 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp930, i32 0, i32 2
  %arrayidx932 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands931, i32 0, i64 0
  %284 = load %union.tree_node*, %union.tree_node** %arrayidx932, align 8
  %call933 = call i32 @integer_zerop(%union.tree_node* %284)
  %tobool934 = icmp ne i32 %call933, 0
  br i1 %tobool934, label %if.end.937, label %if.then.935

if.then.935:                                      ; preds = %land.lhs.true.929, %land.lhs.true.920, %land.lhs.true.912, %land.lhs.true.906
  %285 = load i8*, i8** %errtype.addr, align 8
  %286 = load %union.tree_node*, %union.tree_node** %funname.addr, align 8
  %287 = load i32, i32* %parmnum.addr, align 4
  call void @warn_for_assignment(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.178, i32 0, i32 0), i8* %285, %union.tree_node* %286, i32 %287)
  %288 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %289 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call936 = call %union.tree_node* @convert(%union.tree_node* %288, %union.tree_node* %289)
  store %union.tree_node* %call936, %union.tree_node** %retval
  br label %return

if.end.937:                                       ; preds = %land.lhs.true.929, %land.lhs.true.903
  %290 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 14), align 8
  store %union.tree_node* %290, %union.tree_node** %retval
  br label %return

if.else.938:                                      ; preds = %land.lhs.true.895, %if.else.893
  %291 = load i32, i32* %codel, align 4
  %cmp939 = icmp eq i32 %291, 6
  br i1 %cmp939, label %land.lhs.true.940, label %if.else.944

land.lhs.true.940:                                ; preds = %if.else.938
  %292 = load i32, i32* %coder, align 4
  %cmp941 = icmp eq i32 %292, 13
  br i1 %cmp941, label %if.then.942, label %if.else.944

if.then.942:                                      ; preds = %land.lhs.true.940
  %293 = load i8*, i8** %errtype.addr, align 8
  %294 = load %union.tree_node*, %union.tree_node** %funname.addr, align 8
  %295 = load i32, i32* %parmnum.addr, align 4
  call void @warn_for_assignment(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.179, i32 0, i32 0), i8* %293, %union.tree_node* %294, i32 %295)
  %296 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %297 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call943 = call %union.tree_node* @convert(%union.tree_node* %296, %union.tree_node* %297)
  store %union.tree_node* %call943, %union.tree_node** %retval
  br label %return

if.else.944:                                      ; preds = %land.lhs.true.940, %if.else.938
  %298 = load i32, i32* %codel, align 4
  %cmp945 = icmp eq i32 %298, 11
  br i1 %cmp945, label %land.lhs.true.946, label %if.end.950

land.lhs.true.946:                                ; preds = %if.else.944
  %299 = load i32, i32* %coder, align 4
  %cmp947 = icmp eq i32 %299, 13
  br i1 %cmp947, label %if.then.948, label %if.end.950

if.then.948:                                      ; preds = %land.lhs.true.946
  %300 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %301 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call949 = call %union.tree_node* @convert(%union.tree_node* %300, %union.tree_node* %301)
  store %union.tree_node* %call949, %union.tree_node** %retval
  br label %return

if.end.950:                                       ; preds = %land.lhs.true.946, %if.else.944
  br label %if.end.951

if.end.951:                                       ; preds = %if.end.950
  br label %if.end.952

if.end.952:                                       ; preds = %if.end.951
  br label %if.end.953

if.end.953:                                       ; preds = %if.end.952
  br label %if.end.954

if.end.954:                                       ; preds = %if.end.953, %if.end.624
  br label %if.end.955

if.end.955:                                       ; preds = %if.end.954
  br label %if.end.956

if.end.956:                                       ; preds = %if.end.955
  %302 = load i8*, i8** %errtype.addr, align 8
  %tobool957 = icmp ne i8* %302, null
  br i1 %tobool957, label %if.else.973, label %if.then.958

if.then.958:                                      ; preds = %if.end.956
  %303 = load %union.tree_node*, %union.tree_node** %funname.addr, align 8
  %tobool959 = icmp ne %union.tree_node* %303, null
  br i1 %tobool959, label %if.then.960, label %if.else.971

if.then.960:                                      ; preds = %if.then.958
  %call961 = call %union.tree_node* @maybe_building_objc_message_expr()
  store %union.tree_node* %call961, %union.tree_node** %selector, align 8
  %304 = load %union.tree_node*, %union.tree_node** %selector, align 8
  %tobool962 = icmp ne %union.tree_node* %304, null
  br i1 %tobool962, label %land.lhs.true.963, label %if.else.966

land.lhs.true.963:                                ; preds = %if.then.960
  %305 = load i32, i32* %parmnum.addr, align 4
  %cmp964 = icmp sgt i32 %305, 2
  br i1 %cmp964, label %if.then.965, label %if.else.966

if.then.965:                                      ; preds = %land.lhs.true.963
  %306 = load i32, i32* %parmnum.addr, align 4
  %sub = sub nsw i32 %306, 2
  %307 = load %union.tree_node*, %union.tree_node** %selector, align 8
  %identifier = bitcast %union.tree_node* %307 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %308 = load i8*, i8** %str, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.180, i32 0, i32 0), i32 %sub, i8* %308)
  br label %if.end.970

if.else.966:                                      ; preds = %land.lhs.true.963, %if.then.960
  %309 = load i32, i32* %parmnum.addr, align 4
  %310 = load %union.tree_node*, %union.tree_node** %funname.addr, align 8
  %identifier967 = bitcast %union.tree_node* %310 to %struct.tree_identifier*
  %id968 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier967, i32 0, i32 1
  %str969 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id968, i32 0, i32 1
  %311 = load i8*, i8** %str969, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.180, i32 0, i32 0), i32 %309, i8* %311)
  br label %if.end.970

if.end.970:                                       ; preds = %if.else.966, %if.then.965
  br label %if.end.972

if.else.971:                                      ; preds = %if.then.958
  %312 = load i32, i32* %parmnum.addr, align 4
  call void (i8*, ...) @error(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.181, i32 0, i32 0), i32 %312)
  br label %if.end.972

if.end.972:                                       ; preds = %if.else.971, %if.end.970
  br label %if.end.974

if.else.973:                                      ; preds = %if.end.956
  %313 = load i8*, i8** %errtype.addr, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.182, i32 0, i32 0), i8* %313)
  br label %if.end.974

if.end.974:                                       ; preds = %if.else.973, %if.end.972
  %314 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %314, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.974, %if.then.948, %if.then.942, %if.end.937, %if.then.935, %if.end.891, %if.end.622, %if.then.99, %if.end.77, %if.then.59, %if.then.46, %if.then.42, %if.then.36
  %315 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %315
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @c_convert_parm_for_inlining(%union.tree_node* %parm, %union.tree_node* %value, %union.tree_node* %fn) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %parm.addr = alloca %union.tree_node*, align 8
  %value.addr = alloca %union.tree_node*, align 8
  %fn.addr = alloca %union.tree_node*, align 8
  %ret = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  store %union.tree_node* %parm, %union.tree_node** %parm.addr, align 8
  store %union.tree_node* %value, %union.tree_node** %value.addr, align 8
  store %union.tree_node* %fn, %union.tree_node** %fn.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %tobool = icmp ne %union.tree_node* %0, null
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %fn.addr, align 8
  %common = bitcast %union.tree_node* %1 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %2 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %type2 = bitcast %union.tree_node* %2 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %values, align 8
  %tobool3 = icmp ne %union.tree_node* %3, null
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  store %union.tree_node* %4, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %union.tree_node*, %union.tree_node** %parm.addr, align 8
  %common4 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 1
  %6 = load %union.tree_node*, %union.tree_node** %type5, align 8
  store %union.tree_node* %6, %union.tree_node** %type, align 8
  %7 = load %union.tree_node*, %union.tree_node** %type, align 8
  %8 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %9 = load %union.tree_node*, %union.tree_node** %fn.addr, align 8
  %10 = load %union.tree_node*, %union.tree_node** %fn.addr, align 8
  %decl = bitcast %union.tree_node* %10 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 8
  %11 = load %union.tree_node*, %union.tree_node** %name, align 8
  %call = call %union.tree_node* @convert_for_assignment(%union.tree_node* %7, %union.tree_node* %8, i8* null, %union.tree_node* %9, %union.tree_node* %11, i32 0)
  store %union.tree_node* %call, %union.tree_node** %ret, align 8
  %12 = load i32, i32* @target_flags, align 4
  %and = and i32 %12, 33554432
  %tobool6 = icmp ne i32 %and, 0
  br i1 %tobool6, label %if.end.37, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %13 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common7 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 6
  br i1 %cmp, label %land.lhs.true.26, label %lor.lhs.false.8

lor.lhs.false.8:                                  ; preds = %land.lhs.true
  %14 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common9 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %code10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common9, i32 0, i32 2
  %bf.load11 = load i32, i32* %code10, align 8
  %bf.clear12 = and i32 %bf.load11, 255
  %cmp13 = icmp eq i32 %bf.clear12, 10
  br i1 %cmp13, label %land.lhs.true.26, label %lor.lhs.false.14

lor.lhs.false.14:                                 ; preds = %lor.lhs.false.8
  %15 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common15 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %code16 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common15, i32 0, i32 2
  %bf.load17 = load i32, i32* %code16, align 8
  %bf.clear18 = and i32 %bf.load17, 255
  %cmp19 = icmp eq i32 %bf.clear18, 11
  br i1 %cmp19, label %land.lhs.true.26, label %lor.lhs.false.20

lor.lhs.false.20:                                 ; preds = %lor.lhs.false.14
  %16 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common21 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %code22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common21, i32 0, i32 2
  %bf.load23 = load i32, i32* %code22, align 8
  %bf.clear24 = and i32 %bf.load23, 255
  %cmp25 = icmp eq i32 %bf.clear24, 12
  br i1 %cmp25, label %land.lhs.true.26, label %if.end.37

land.lhs.true.26:                                 ; preds = %lor.lhs.false.20, %lor.lhs.false.14, %lor.lhs.false.8, %land.lhs.true
  %17 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type27 = bitcast %union.tree_node* %17 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type27, i32 0, i32 6
  %bf.load28 = load i32, i32* %precision, align 4
  %bf.clear29 = and i32 %bf.load28, 511
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type30 = bitcast %union.tree_node* %18 to %struct.tree_type*
  %precision31 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type30, i32 0, i32 6
  %bf.load32 = load i32, i32* %precision31, align 4
  %bf.clear33 = and i32 %bf.load32, 511
  %cmp34 = icmp slt i32 %bf.clear29, %bf.clear33
  br i1 %cmp34, label %if.then.35, label %if.end.37

if.then.35:                                       ; preds = %land.lhs.true.26
  %19 = load %union.tree_node*, %union.tree_node** %ret, align 8
  %call36 = call %union.tree_node* @default_conversion(%union.tree_node* %19)
  store %union.tree_node* %call36, %union.tree_node** %ret, align 8
  br label %if.end.37

if.end.37:                                        ; preds = %if.then.35, %land.lhs.true.26, %lor.lhs.false.20, %if.end
  %20 = load %union.tree_node*, %union.tree_node** %ret, align 8
  store %union.tree_node* %20, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.37, %if.then
  %21 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %21
}

; Function Attrs: nounwind uwtable
define void @store_init_value(%union.tree_node* %decl, %union.tree_node* %init) #0 {
entry:
  %decl.addr = alloca %union.tree_node*, align 8
  %init.addr = alloca %union.tree_node*, align 8
  %value = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %inside_init = alloca %union.tree_node*, align 8
  %decl124 = alloca %union.tree_node*, align 8
  store %union.tree_node* %decl, %union.tree_node** %decl.addr, align 8
  store %union.tree_node* %init, %union.tree_node** %init.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %1, %union.tree_node** %type, align 8
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common2 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end.145

if.end:                                           ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8
  %4 = load %union.tree_node*, %union.tree_node** %init.addr, align 8
  %5 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common3 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3, i32 0, i32 2
  %bf.load4 = load i32, i32* %static_flag, align 8
  %bf.lshr = lshr i32 %bf.load4, 18
  %bf.clear5 = and i32 %bf.lshr, 1
  %6 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common6 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %static_flag7 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6, i32 0, i32 2
  %bf.load8 = load i32, i32* %static_flag7, align 8
  %bf.lshr9 = lshr i32 %bf.load8, 18
  %bf.clear10 = and i32 %bf.lshr9, 1
  %tobool = icmp ne i32 %bf.clear10, 0
  br i1 %tobool, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end
  %7 = load i32, i32* @pedantic, align 4
  %tobool11 = icmp ne i32 %7, 0
  br i1 %tobool11, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs
  %8 = load i32, i32* @flag_isoc99, align 4
  %tobool12 = icmp ne i32 %8, 0
  %lnot = xor i1 %tobool12, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %9 = phi i1 [ false, %lor.rhs ], [ %lnot, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %if.end
  %10 = phi i1 [ true, %if.end ], [ %9, %land.end ]
  %lor.ext = zext i1 %10 to i32
  %call = call %union.tree_node* @digest_init(%union.tree_node* %3, %union.tree_node* %4, i32 %bf.clear5, i32 %lor.ext)
  store %union.tree_node* %call, %union.tree_node** %value, align 8
  %11 = load i32, i32* @warn_traditional, align 4
  %tobool13 = icmp ne i32 %11, 0
  br i1 %tobool13, label %land.lhs.true, label %if.end.62

land.lhs.true:                                    ; preds = %lor.end
  %12 = load i32, i32* @in_system_header, align 4
  %tobool14 = icmp ne i32 %12, 0
  br i1 %tobool14, label %if.end.62, label %land.lhs.true.15

land.lhs.true.15:                                 ; preds = %land.lhs.true
  %13 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common16 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %type17 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common16, i32 0, i32 1
  %14 = load %union.tree_node*, %union.tree_node** %type17, align 8
  %common18 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %code19 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common18, i32 0, i32 2
  %bf.load20 = load i32, i32* %code19, align 8
  %bf.clear21 = and i32 %bf.load20, 255
  %cmp22 = icmp eq i32 %bf.clear21, 18
  br i1 %cmp22, label %land.lhs.true.54, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.15
  %15 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common23 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %type24 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common23, i32 0, i32 1
  %16 = load %union.tree_node*, %union.tree_node** %type24, align 8
  %common25 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %code26 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common25, i32 0, i32 2
  %bf.load27 = load i32, i32* %code26, align 8
  %bf.clear28 = and i32 %bf.load27, 255
  %cmp29 = icmp eq i32 %bf.clear28, 20
  br i1 %cmp29, label %land.lhs.true.54, label %lor.lhs.false.30

lor.lhs.false.30:                                 ; preds = %lor.lhs.false
  %17 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common31 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %type32 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common31, i32 0, i32 1
  %18 = load %union.tree_node*, %union.tree_node** %type32, align 8
  %common33 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %code34 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common33, i32 0, i32 2
  %bf.load35 = load i32, i32* %code34, align 8
  %bf.clear36 = and i32 %bf.load35, 255
  %cmp37 = icmp eq i32 %bf.clear36, 21
  br i1 %cmp37, label %land.lhs.true.54, label %lor.lhs.false.38

lor.lhs.false.38:                                 ; preds = %lor.lhs.false.30
  %19 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common39 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %type40 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common39, i32 0, i32 1
  %20 = load %union.tree_node*, %union.tree_node** %type40, align 8
  %common41 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %code42 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common41, i32 0, i32 2
  %bf.load43 = load i32, i32* %code42, align 8
  %bf.clear44 = and i32 %bf.load43, 255
  %cmp45 = icmp eq i32 %bf.clear44, 22
  br i1 %cmp45, label %land.lhs.true.54, label %lor.lhs.false.46

lor.lhs.false.46:                                 ; preds = %lor.lhs.false.38
  %21 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common47 = bitcast %union.tree_node* %21 to %struct.tree_common*
  %type48 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common47, i32 0, i32 1
  %22 = load %union.tree_node*, %union.tree_node** %type48, align 8
  %common49 = bitcast %union.tree_node* %22 to %struct.tree_common*
  %code50 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common49, i32 0, i32 2
  %bf.load51 = load i32, i32* %code50, align 8
  %bf.clear52 = and i32 %bf.load51, 255
  %cmp53 = icmp eq i32 %bf.clear52, 19
  br i1 %cmp53, label %land.lhs.true.54, label %if.end.62

land.lhs.true.54:                                 ; preds = %lor.lhs.false.46, %lor.lhs.false.38, %lor.lhs.false.30, %lor.lhs.false, %land.lhs.true.15
  %23 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common55 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %static_flag56 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common55, i32 0, i32 2
  %bf.load57 = load i32, i32* %static_flag56, align 8
  %bf.lshr58 = lshr i32 %bf.load57, 18
  %bf.clear59 = and i32 %bf.lshr58, 1
  %tobool60 = icmp ne i32 %bf.clear59, 0
  br i1 %tobool60, label %if.end.62, label %if.then.61

if.then.61:                                       ; preds = %land.lhs.true.54
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.110, i32 0, i32 0))
  br label %if.end.62

if.end.62:                                        ; preds = %if.then.61, %land.lhs.true.54, %lor.lhs.false.46, %land.lhs.true, %lor.end
  %24 = load %union.tree_node*, %union.tree_node** %value, align 8
  %25 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl63 = bitcast %union.tree_node* %25 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl63, i32 0, i32 12
  store %union.tree_node* %24, %union.tree_node** %initial, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end.62
  %26 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common64 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %code65 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common64, i32 0, i32 2
  %bf.load66 = load i32, i32* %code65, align 8
  %bf.clear67 = and i32 %bf.load66, 255
  %cmp68 = icmp eq i32 %bf.clear67, 115
  br i1 %cmp68, label %land.lhs.true.81, label %lor.lhs.false.69

lor.lhs.false.69:                                 ; preds = %while.cond
  %27 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common70 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %code71 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common70, i32 0, i32 2
  %bf.load72 = load i32, i32* %code71, align 8
  %bf.clear73 = and i32 %bf.load72, 255
  %cmp74 = icmp eq i32 %bf.clear73, 114
  br i1 %cmp74, label %land.lhs.true.81, label %lor.lhs.false.75

lor.lhs.false.75:                                 ; preds = %lor.lhs.false.69
  %28 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common76 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %code77 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common76, i32 0, i32 2
  %bf.load78 = load i32, i32* %code77, align 8
  %bf.clear79 = and i32 %bf.load78, 255
  %cmp80 = icmp eq i32 %bf.clear79, 116
  br i1 %cmp80, label %land.lhs.true.81, label %land.end.92

land.lhs.true.81:                                 ; preds = %lor.lhs.false.75, %lor.lhs.false.69, %while.cond
  %29 = load %union.tree_node*, %union.tree_node** %value, align 8
  %exp = bitcast %union.tree_node* %29 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %30 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp82 = icmp ne %union.tree_node* %30, %31
  br i1 %cmp82, label %land.rhs.83, label %land.end.92

land.rhs.83:                                      ; preds = %land.lhs.true.81
  %32 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common84 = bitcast %union.tree_node* %32 to %struct.tree_common*
  %type85 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common84, i32 0, i32 1
  %33 = load %union.tree_node*, %union.tree_node** %type85, align 8
  %34 = load %union.tree_node*, %union.tree_node** %value, align 8
  %exp86 = bitcast %union.tree_node* %34 to %struct.tree_exp*
  %operands87 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp86, i32 0, i32 2
  %arrayidx88 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands87, i32 0, i64 0
  %35 = load %union.tree_node*, %union.tree_node** %arrayidx88, align 8
  %common89 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %type90 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common89, i32 0, i32 1
  %36 = load %union.tree_node*, %union.tree_node** %type90, align 8
  %cmp91 = icmp eq %union.tree_node* %33, %36
  br label %land.end.92

land.end.92:                                      ; preds = %land.rhs.83, %land.lhs.true.81, %lor.lhs.false.75
  %37 = phi i1 [ false, %land.lhs.true.81 ], [ false, %lor.lhs.false.75 ], [ %cmp91, %land.rhs.83 ]
  br i1 %37, label %while.body, label %while.end

while.body:                                       ; preds = %land.end.92
  %38 = load %union.tree_node*, %union.tree_node** %value, align 8
  %exp93 = bitcast %union.tree_node* %38 to %struct.tree_exp*
  %operands94 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp93, i32 0, i32 2
  %arrayidx95 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands94, i32 0, i64 0
  %39 = load %union.tree_node*, %union.tree_node** %arrayidx95, align 8
  store %union.tree_node* %39, %union.tree_node** %value, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end.92
  %40 = load %union.tree_node*, %union.tree_node** %value, align 8
  call void @constant_expression_warning(%union.tree_node* %40)
  %41 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common96 = bitcast %union.tree_node* %41 to %struct.tree_common*
  %code97 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common96, i32 0, i32 2
  %bf.load98 = load i32, i32* %code97, align 8
  %bf.clear99 = and i32 %bf.load98, 255
  %cmp100 = icmp eq i32 %bf.clear99, 18
  br i1 %cmp100, label %land.lhs.true.101, label %if.end.145

land.lhs.true.101:                                ; preds = %while.end
  %42 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type102 = bitcast %union.tree_node* %42 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type102, i32 0, i32 1
  %43 = load %union.tree_node*, %union.tree_node** %values, align 8
  %cmp103 = icmp eq %union.tree_node* %43, null
  br i1 %cmp103, label %land.lhs.true.104, label %if.end.145

land.lhs.true.104:                                ; preds = %land.lhs.true.101
  %44 = load %union.tree_node*, %union.tree_node** %value, align 8
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp105 = icmp ne %union.tree_node* %44, %45
  br i1 %cmp105, label %if.then.106, label %if.end.145

if.then.106:                                      ; preds = %land.lhs.true.104
  %46 = load %union.tree_node*, %union.tree_node** %init.addr, align 8
  store %union.tree_node* %46, %union.tree_node** %inside_init, align 8
  %47 = load %union.tree_node*, %union.tree_node** %init.addr, align 8
  %common107 = bitcast %union.tree_node* %47 to %struct.tree_common*
  %code108 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common107, i32 0, i32 2
  %bf.load109 = load i32, i32* %code108, align 8
  %bf.clear110 = and i32 %bf.load109, 255
  %cmp111 = icmp eq i32 %bf.clear110, 116
  br i1 %cmp111, label %if.then.112, label %if.end.116

if.then.112:                                      ; preds = %if.then.106
  %48 = load %union.tree_node*, %union.tree_node** %init.addr, align 8
  %exp113 = bitcast %union.tree_node* %48 to %struct.tree_exp*
  %operands114 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp113, i32 0, i32 2
  %arrayidx115 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands114, i32 0, i64 0
  %49 = load %union.tree_node*, %union.tree_node** %arrayidx115, align 8
  store %union.tree_node* %49, %union.tree_node** %inside_init, align 8
  br label %if.end.116

if.end.116:                                       ; preds = %if.then.112, %if.then.106
  %50 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %call117 = call %union.tree_node* @fold(%union.tree_node* %50)
  store %union.tree_node* %call117, %union.tree_node** %inside_init, align 8
  %51 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %common118 = bitcast %union.tree_node* %51 to %struct.tree_common*
  %code119 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common118, i32 0, i32 2
  %bf.load120 = load i32, i32* %code119, align 8
  %bf.clear121 = and i32 %bf.load120, 255
  %cmp122 = icmp eq i32 %bf.clear121, 170
  br i1 %cmp122, label %if.then.123, label %if.end.144

if.then.123:                                      ; preds = %if.end.116
  %52 = load %union.tree_node*, %union.tree_node** %inside_init, align 8
  %exp125 = bitcast %union.tree_node* %52 to %struct.tree_exp*
  %operands126 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp125, i32 0, i32 2
  %arrayidx127 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands126, i32 0, i64 0
  %53 = load %union.tree_node*, %union.tree_node** %arrayidx127, align 8
  %exp128 = bitcast %union.tree_node* %53 to %struct.tree_exp*
  %operands129 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp128, i32 0, i32 2
  %arrayidx130 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands129, i32 0, i64 0
  %54 = load %union.tree_node*, %union.tree_node** %arrayidx130, align 8
  store %union.tree_node* %54, %union.tree_node** %decl124, align 8
  %55 = load %union.tree_node*, %union.tree_node** %decl124, align 8
  %common131 = bitcast %union.tree_node* %55 to %struct.tree_common*
  %type132 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common131, i32 0, i32 1
  %56 = load %union.tree_node*, %union.tree_node** %type132, align 8
  %type133 = bitcast %union.tree_node* %56 to %struct.tree_type*
  %values134 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type133, i32 0, i32 1
  %57 = load %union.tree_node*, %union.tree_node** %values134, align 8
  %tobool135 = icmp ne %union.tree_node* %57, null
  br i1 %tobool135, label %if.then.136, label %if.end.143

if.then.136:                                      ; preds = %if.then.123
  %58 = load %union.tree_node*, %union.tree_node** %decl124, align 8
  %common137 = bitcast %union.tree_node* %58 to %struct.tree_common*
  %type138 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common137, i32 0, i32 1
  %59 = load %union.tree_node*, %union.tree_node** %type138, align 8
  %type139 = bitcast %union.tree_node* %59 to %struct.tree_type*
  %values140 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type139, i32 0, i32 1
  %60 = load %union.tree_node*, %union.tree_node** %values140, align 8
  %61 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type141 = bitcast %union.tree_node* %61 to %struct.tree_type*
  %values142 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type141, i32 0, i32 1
  store %union.tree_node* %60, %union.tree_node** %values142, align 8
  %62 = load %union.tree_node*, %union.tree_node** %type, align 8
  call void @layout_type(%union.tree_node* %62)
  %63 = load %union.tree_node*, %union.tree_node** %decl124, align 8
  call void @layout_decl(%union.tree_node* %63, i32 0)
  br label %if.end.143

if.end.143:                                       ; preds = %if.then.136, %if.then.123
  br label %if.end.144

if.end.144:                                       ; preds = %if.end.143, %if.end.116
  br label %if.end.145

if.end.145:                                       ; preds = %if.then, %if.end.144, %land.lhs.true.104, %land.lhs.true.101, %while.end
  ret void
}

declare void @constant_expression_warning(%union.tree_node*) #1

declare void @layout_type(%union.tree_node*) #1

declare void @layout_decl(%union.tree_node*, i32) #1

; Function Attrs: nounwind uwtable
define void @error_init(i8* %msgid) #0 {
entry:
  %msgid.addr = alloca i8*, align 8
  %ofwhat = alloca i8*, align 8
  store i8* %msgid, i8** %msgid.addr, align 8
  %0 = load i8*, i8** %msgid.addr, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.81, i32 0, i32 0), i8* %0)
  %call = call i32 @spelling_length()
  %add = add nsw i32 %call, 1
  %conv = sext i32 %add to i64
  %1 = alloca i8, i64 %conv
  %call1 = call i8* @print_spelling(i8* %1)
  store i8* %call1, i8** %ofwhat, align 8
  %2 = load i8*, i8** %ofwhat, align 8
  %3 = load i8, i8* %2, align 1
  %tobool = icmp ne i8 %3, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %ofwhat, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.111, i32 0, i32 0), i8* %4)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @print_spelling(i8* %buffer) #0 {
entry:
  %buffer.addr = alloca i8*, align 8
  %d = alloca i8*, align 8
  %p = alloca %struct.spelling*, align 8
  %s = alloca i8*, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  %0 = load i8*, i8** %buffer.addr, align 8
  store i8* %0, i8** %d, align 8
  %1 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  store %struct.spelling* %1, %struct.spelling** %p, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc.13, %entry
  %2 = load %struct.spelling*, %struct.spelling** %p, align 8
  %3 = load %struct.spelling*, %struct.spelling** @spelling, align 8
  %cmp = icmp ult %struct.spelling* %2, %3
  br i1 %cmp, label %for.body, label %for.end.15

for.body:                                         ; preds = %for.cond
  %4 = load %struct.spelling*, %struct.spelling** %p, align 8
  %kind = getelementptr inbounds %struct.spelling, %struct.spelling* %4, i32 0, i32 0
  %5 = load i32, i32* %kind, align 4
  %cmp1 = icmp eq i32 %5, 3
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %6 = load i8*, i8** %d, align 8
  %7 = load %struct.spelling*, %struct.spelling** %p, align 8
  %u = getelementptr inbounds %struct.spelling, %struct.spelling* %7, i32 0, i32 1
  %i = bitcast %union.anon.4* %u to i32*
  %8 = load i32, i32* %i, align 4
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.183, i32 0, i32 0), i32 %8) #6
  %9 = load i8*, i8** %d, align 8
  %call2 = call i64 @strlen(i8* %9) #7
  %10 = load i8*, i8** %d, align 8
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %call2
  store i8* %add.ptr, i8** %d, align 8
  br label %if.end.12

if.else:                                          ; preds = %for.body
  %11 = load %struct.spelling*, %struct.spelling** %p, align 8
  %kind3 = getelementptr inbounds %struct.spelling, %struct.spelling* %11, i32 0, i32 0
  %12 = load i32, i32* %kind3, align 4
  %cmp4 = icmp eq i32 %12, 2
  br i1 %cmp4, label %if.then.5, label %if.end

if.then.5:                                        ; preds = %if.else
  %13 = load i8*, i8** %d, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %13, i32 1
  store i8* %incdec.ptr, i8** %d, align 8
  store i8 46, i8* %13, align 1
  br label %if.end

if.end:                                           ; preds = %if.then.5, %if.else
  %14 = load %struct.spelling*, %struct.spelling** %p, align 8
  %u6 = getelementptr inbounds %struct.spelling, %struct.spelling* %14, i32 0, i32 1
  %s7 = bitcast %union.anon.4* %u6 to i8**
  %15 = load i8*, i8** %s7, align 8
  store i8* %15, i8** %s, align 8
  br label %for.cond.8

for.cond.8:                                       ; preds = %for.inc, %if.end
  %16 = load i8*, i8** %s, align 8
  %incdec.ptr9 = getelementptr inbounds i8, i8* %16, i32 1
  store i8* %incdec.ptr9, i8** %s, align 8
  %17 = load i8, i8* %16, align 1
  %18 = load i8*, i8** %d, align 8
  store i8 %17, i8* %18, align 1
  %tobool = icmp ne i8 %17, 0
  br i1 %tobool, label %for.body.10, label %for.end

for.body.10:                                      ; preds = %for.cond.8
  br label %for.inc

for.inc:                                          ; preds = %for.body.10
  %19 = load i8*, i8** %d, align 8
  %incdec.ptr11 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr11, i8** %d, align 8
  br label %for.cond.8

for.end:                                          ; preds = %for.cond.8
  br label %if.end.12

if.end.12:                                        ; preds = %for.end, %if.then
  br label %for.inc.13

for.inc.13:                                       ; preds = %if.end.12
  %20 = load %struct.spelling*, %struct.spelling** %p, align 8
  %incdec.ptr14 = getelementptr inbounds %struct.spelling, %struct.spelling* %20, i32 1
  store %struct.spelling* %incdec.ptr14, %struct.spelling** %p, align 8
  br label %for.cond

for.end.15:                                       ; preds = %for.cond
  %21 = load i8*, i8** %d, align 8
  %incdec.ptr16 = getelementptr inbounds i8, i8* %21, i32 1
  store i8* %incdec.ptr16, i8** %d, align 8
  store i8 0, i8* %21, align 1
  %22 = load i8*, i8** %buffer.addr, align 8
  ret i8* %22
}

; Function Attrs: nounwind uwtable
define internal i32 @spelling_length() #0 {
entry:
  %size = alloca i32, align 4
  %p = alloca %struct.spelling*, align 8
  store i32 0, i32* %size, align 4
  %0 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  store %struct.spelling* %0, %struct.spelling** %p, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.spelling*, %struct.spelling** %p, align 8
  %2 = load %struct.spelling*, %struct.spelling** @spelling, align 8
  %cmp = icmp ult %struct.spelling* %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.spelling*, %struct.spelling** %p, align 8
  %kind = getelementptr inbounds %struct.spelling, %struct.spelling* %3, i32 0, i32 0
  %4 = load i32, i32* %kind, align 4
  %cmp1 = icmp eq i32 %4, 3
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %size, align 4
  %add = add nsw i32 %5, 25
  store i32 %add, i32* %size, align 4
  br label %if.end

if.else:                                          ; preds = %for.body
  %6 = load %struct.spelling*, %struct.spelling** %p, align 8
  %u = getelementptr inbounds %struct.spelling, %struct.spelling* %6, i32 0, i32 1
  %s = bitcast %union.anon.4* %u to i8**
  %7 = load i8*, i8** %s, align 8
  %call = call i64 @strlen(i8* %7) #7
  %add2 = add i64 %call, 1
  %8 = load i32, i32* %size, align 4
  %conv = sext i32 %8 to i64
  %add3 = add i64 %conv, %add2
  %conv4 = trunc i64 %add3 to i32
  store i32 %conv4, i32* %size, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %9 = load %struct.spelling*, %struct.spelling** %p, align 8
  %incdec.ptr = getelementptr inbounds %struct.spelling, %struct.spelling* %9, i32 1
  store %struct.spelling* %incdec.ptr, %struct.spelling** %p, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %10 = load i32, i32* %size, align 4
  ret i32 %10
}

; Function Attrs: nounwind uwtable
define void @pedwarn_init(i8* %msgid) #0 {
entry:
  %msgid.addr = alloca i8*, align 8
  %ofwhat = alloca i8*, align 8
  store i8* %msgid, i8** %msgid.addr, align 8
  %0 = load i8*, i8** %msgid.addr, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.81, i32 0, i32 0), i8* %0)
  %call = call i32 @spelling_length()
  %add = add nsw i32 %call, 1
  %conv = sext i32 %add to i64
  %1 = alloca i8, i64 %conv
  %call1 = call i8* @print_spelling(i8* %1)
  store i8* %call1, i8** %ofwhat, align 8
  %2 = load i8*, i8** %ofwhat, align 8
  %3 = load i8, i8* %2, align 1
  %tobool = icmp ne i8 %3, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %ofwhat, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.111, i32 0, i32 0), i8* %4)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @start_init(%union.tree_node* %decl, %union.tree_node* %asmspec_tree, i32 %top_level) #0 {
entry:
  %decl.addr = alloca %union.tree_node*, align 8
  %asmspec_tree.addr = alloca %union.tree_node*, align 8
  %top_level.addr = alloca i32, align 4
  %locus = alloca i8*, align 8
  %p = alloca %struct.initializer_stack*, align 8
  %asmspec = alloca i8*, align 8
  store %union.tree_node* %decl, %union.tree_node** %decl.addr, align 8
  store %union.tree_node* %asmspec_tree, %union.tree_node** %asmspec_tree.addr, align 8
  store i32 %top_level, i32* %top_level.addr, align 4
  %call = call noalias i8* @xmalloc(i64 72)
  %0 = bitcast i8* %call to %struct.initializer_stack*
  store %struct.initializer_stack* %0, %struct.initializer_stack** %p, align 8
  store i8* null, i8** %asmspec, align 8
  %1 = load %union.tree_node*, %union.tree_node** %asmspec_tree.addr, align 8
  %tobool = icmp ne %union.tree_node* %1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %asmspec_tree.addr, align 8
  %string = bitcast %union.tree_node* %2 to %struct.tree_string*
  %pointer = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string, i32 0, i32 3
  %3 = load i8*, i8** %pointer, align 8
  store i8* %3, i8** %asmspec, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load %union.tree_node*, %union.tree_node** @constructor_decl, align 8
  %5 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %decl1 = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %5, i32 0, i32 1
  store %union.tree_node* %4, %union.tree_node** %decl1, align 8
  %6 = load i8*, i8** @constructor_asmspec, align 8
  %7 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %asmspec2 = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %7, i32 0, i32 2
  store i8* %6, i8** %asmspec2, align 8
  %8 = load i32, i32* @require_constant_value, align 4
  %conv = trunc i32 %8 to i8
  %9 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %require_constant_value = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %9, i32 0, i32 10
  store i8 %conv, i8* %require_constant_value, align 1
  %10 = load i32, i32* @require_constant_elements, align 4
  %conv3 = trunc i32 %10 to i8
  %11 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %require_constant_elements = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %11, i32 0, i32 11
  store i8 %conv3, i8* %require_constant_elements, align 1
  %12 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8
  %13 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %constructor_stack = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %13, i32 0, i32 3
  store %struct.constructor_stack* %12, %struct.constructor_stack** %constructor_stack, align 8
  %14 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** @constructor_range_stack, align 8
  %15 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %constructor_range_stack = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %15, i32 0, i32 4
  store %struct.constructor_range_stack* %14, %struct.constructor_range_stack** %constructor_range_stack, align 8
  %16 = load %union.tree_node*, %union.tree_node** @constructor_elements, align 8
  %17 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %elements = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %17, i32 0, i32 5
  store %union.tree_node* %16, %union.tree_node** %elements, align 8
  %18 = load %struct.spelling*, %struct.spelling** @spelling, align 8
  %19 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %spelling = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %19, i32 0, i32 6
  store %struct.spelling* %18, %struct.spelling** %spelling, align 8
  %20 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  %21 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %spelling_base = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %21, i32 0, i32 7
  store %struct.spelling* %20, %struct.spelling** %spelling_base, align 8
  %22 = load i32, i32* @spelling_size, align 4
  %23 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %spelling_size = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %23, i32 0, i32 8
  store i32 %22, i32* %spelling_size, align 4
  %24 = load i32, i32* @constructor_subconstants_deferred, align 4
  %conv4 = trunc i32 %24 to i8
  %25 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %deferred = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %25, i32 0, i32 12
  store i8 %conv4, i8* %deferred, align 1
  %26 = load i32, i32* @constructor_top_level, align 4
  %conv5 = trunc i32 %26 to i8
  %27 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %top_level6 = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %27, i32 0, i32 9
  store i8 %conv5, i8* %top_level6, align 1
  %28 = load %struct.initializer_stack*, %struct.initializer_stack** @initializer_stack, align 8
  %29 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %next = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %29, i32 0, i32 0
  store %struct.initializer_stack* %28, %struct.initializer_stack** %next, align 8
  %30 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  store %struct.initializer_stack* %30, %struct.initializer_stack** @initializer_stack, align 8
  %31 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  store %union.tree_node* %31, %union.tree_node** @constructor_decl, align 8
  %32 = load i8*, i8** %asmspec, align 8
  store i8* %32, i8** @constructor_asmspec, align 8
  store i32 0, i32* @constructor_subconstants_deferred, align 4
  store i32 0, i32* @constructor_designated, align 4
  %33 = load i32, i32* %top_level.addr, align 4
  store i32 %33, i32* @constructor_top_level, align 4
  %34 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %cmp = icmp ne %union.tree_node* %34, null
  br i1 %cmp, label %if.then.8, label %if.else

if.then.8:                                        ; preds = %if.end
  %35 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common = bitcast %union.tree_node* %35 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %static_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 18
  %bf.clear = and i32 %bf.lshr, 1
  store i32 %bf.clear, i32* @require_constant_value, align 4
  %36 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common9 = bitcast %union.tree_node* %36 to %struct.tree_common*
  %static_flag10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common9, i32 0, i32 2
  %bf.load11 = load i32, i32* %static_flag10, align 8
  %bf.lshr12 = lshr i32 %bf.load11, 18
  %bf.clear13 = and i32 %bf.lshr12, 1
  %tobool14 = icmp ne i32 %bf.clear13, 0
  br i1 %tobool14, label %land.rhs, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.8
  %37 = load i32, i32* @pedantic, align 4
  %tobool15 = icmp ne i32 %37, 0
  br i1 %tobool15, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %lor.lhs.false
  %38 = load i32, i32* @flag_isoc99, align 4
  %tobool16 = icmp ne i32 %38, 0
  br i1 %tobool16, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true, %if.then.8
  %39 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common17 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common17, i32 0, i32 1
  %40 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common18 = bitcast %union.tree_node* %40 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common18, i32 0, i32 2
  %bf.load19 = load i32, i32* %code, align 8
  %bf.clear20 = and i32 %bf.load19, 255
  %cmp21 = icmp eq i32 %bf.clear20, 18
  br i1 %cmp21, label %lor.end, label %lor.lhs.false.23

lor.lhs.false.23:                                 ; preds = %land.rhs
  %41 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common24 = bitcast %union.tree_node* %41 to %struct.tree_common*
  %type25 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common24, i32 0, i32 1
  %42 = load %union.tree_node*, %union.tree_node** %type25, align 8
  %common26 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %code27 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common26, i32 0, i32 2
  %bf.load28 = load i32, i32* %code27, align 8
  %bf.clear29 = and i32 %bf.load28, 255
  %cmp30 = icmp eq i32 %bf.clear29, 20
  br i1 %cmp30, label %lor.end, label %lor.lhs.false.32

lor.lhs.false.32:                                 ; preds = %lor.lhs.false.23
  %43 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common33 = bitcast %union.tree_node* %43 to %struct.tree_common*
  %type34 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common33, i32 0, i32 1
  %44 = load %union.tree_node*, %union.tree_node** %type34, align 8
  %common35 = bitcast %union.tree_node* %44 to %struct.tree_common*
  %code36 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common35, i32 0, i32 2
  %bf.load37 = load i32, i32* %code36, align 8
  %bf.clear38 = and i32 %bf.load37, 255
  %cmp39 = icmp eq i32 %bf.clear38, 21
  br i1 %cmp39, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.32
  %45 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common41 = bitcast %union.tree_node* %45 to %struct.tree_common*
  %type42 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common41, i32 0, i32 1
  %46 = load %union.tree_node*, %union.tree_node** %type42, align 8
  %common43 = bitcast %union.tree_node* %46 to %struct.tree_common*
  %code44 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common43, i32 0, i32 2
  %bf.load45 = load i32, i32* %code44, align 8
  %bf.clear46 = and i32 %bf.load45, 255
  %cmp47 = icmp eq i32 %bf.clear46, 22
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.32, %lor.lhs.false.23, %land.rhs
  %47 = phi i1 [ true, %lor.lhs.false.32 ], [ true, %lor.lhs.false.23 ], [ true, %land.rhs ], [ %cmp47, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %land.lhs.true, %lor.lhs.false
  %48 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %47, %lor.end ]
  %land.ext = zext i1 %48 to i32
  store i32 %land.ext, i32* @require_constant_elements, align 4
  %49 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl49 = bitcast %union.tree_node* %49 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl49, i32 0, i32 8
  %50 = load %union.tree_node*, %union.tree_node** %name, align 8
  %identifier = bitcast %union.tree_node* %50 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %51 = load i8*, i8** %str, align 8
  store i8* %51, i8** %locus, align 8
  br label %if.end.50

if.else:                                          ; preds = %if.end
  store i32 0, i32* @require_constant_value, align 4
  store i32 0, i32* @require_constant_elements, align 4
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.112, i32 0, i32 0), i8** %locus, align 8
  br label %if.end.50

if.end.50:                                        ; preds = %if.else, %land.end
  store %struct.constructor_stack* null, %struct.constructor_stack** @constructor_stack, align 8
  store %struct.constructor_range_stack* null, %struct.constructor_range_stack** @constructor_range_stack, align 8
  store i32 0, i32* @missing_braces_mentioned, align 4
  store %struct.spelling* null, %struct.spelling** @spelling_base, align 8
  store i32 0, i32* @spelling_size, align 4
  %52 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  %add.ptr = getelementptr inbounds %struct.spelling, %struct.spelling* %52, i64 0
  store %struct.spelling* %add.ptr, %struct.spelling** @spelling, align 8
  %53 = load i8*, i8** %locus, align 8
  %tobool51 = icmp ne i8* %53, null
  br i1 %tobool51, label %if.then.52, label %if.end.53

if.then.52:                                       ; preds = %if.end.50
  %54 = load i8*, i8** %locus, align 8
  call void @push_string(i8* %54)
  br label %if.end.53

if.end.53:                                        ; preds = %if.then.52, %if.end.50
  ret void
}

declare noalias i8* @xmalloc(i64) #1

; Function Attrs: nounwind uwtable
define internal void @push_string(i8* %string) #0 {
entry:
  %string.addr = alloca i8*, align 8
  %depth = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 8
  %0 = load %struct.spelling*, %struct.spelling** @spelling, align 8
  %1 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.spelling* %0 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.spelling* %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 16
  %conv = trunc i64 %sub.ptr.div to i32
  store i32 %conv, i32* %depth, align 4
  %2 = load i32, i32* %depth, align 4
  %3 = load i32, i32* @spelling_size, align 4
  %cmp = icmp sge i32 %2, %3
  br i1 %cmp, label %if.then, label %if.end.9

if.then:                                          ; preds = %entry
  %4 = load i32, i32* @spelling_size, align 4
  %add = add nsw i32 %4, 10
  store i32 %add, i32* @spelling_size, align 4
  %5 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  %cmp2 = icmp eq %struct.spelling* %5, null
  br i1 %cmp2, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %if.then
  %6 = load i32, i32* @spelling_size, align 4
  %conv5 = sext i32 %6 to i64
  %mul = mul i64 %conv5, 16
  %call = call noalias i8* @xmalloc(i64 %mul)
  %7 = bitcast i8* %call to %struct.spelling*
  store %struct.spelling* %7, %struct.spelling** @spelling_base, align 8
  br label %if.end

if.else:                                          ; preds = %if.then
  %8 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  %9 = bitcast %struct.spelling* %8 to i8*
  %10 = load i32, i32* @spelling_size, align 4
  %conv6 = sext i32 %10 to i64
  %mul7 = mul i64 %conv6, 16
  %call8 = call i8* @xrealloc(i8* %9, i64 %mul7)
  %11 = bitcast i8* %call8 to %struct.spelling*
  store %struct.spelling* %11, %struct.spelling** @spelling_base, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %12 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  %13 = load i32, i32* %depth, align 4
  %idx.ext = sext i32 %13 to i64
  %add.ptr = getelementptr inbounds %struct.spelling, %struct.spelling* %12, i64 %idx.ext
  store %struct.spelling* %add.ptr, %struct.spelling** @spelling, align 8
  br label %if.end.9

if.end.9:                                         ; preds = %if.end, %entry
  %14 = load %struct.spelling*, %struct.spelling** @spelling, align 8
  %kind = getelementptr inbounds %struct.spelling, %struct.spelling* %14, i32 0, i32 0
  store i32 1, i32* %kind, align 4
  %15 = load i8*, i8** %string.addr, align 8
  %16 = load %struct.spelling*, %struct.spelling** @spelling, align 8
  %u = getelementptr inbounds %struct.spelling, %struct.spelling* %16, i32 0, i32 1
  %s = bitcast %union.anon.4* %u to i8**
  store i8* %15, i8** %s, align 8
  %17 = load %struct.spelling*, %struct.spelling** @spelling, align 8
  %incdec.ptr = getelementptr inbounds %struct.spelling, %struct.spelling* %17, i32 1
  store %struct.spelling* %incdec.ptr, %struct.spelling** @spelling, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @finish_init() #0 {
entry:
  %p = alloca %struct.initializer_stack*, align 8
  %q = alloca %struct.constructor_stack*, align 8
  %0 = load %struct.initializer_stack*, %struct.initializer_stack** @initializer_stack, align 8
  store %struct.initializer_stack* %0, %struct.initializer_stack** %p, align 8
  %1 = load i32, i32* @constructor_subconstants_deferred, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @output_deferred_addressed_constants()
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8
  %tobool1 = icmp ne %struct.constructor_stack* %2, null
  br i1 %tobool1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8
  store %struct.constructor_stack* %3, %struct.constructor_stack** %q, align 8
  %4 = load %struct.constructor_stack*, %struct.constructor_stack** %q, align 8
  %next = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %4, i32 0, i32 0
  %5 = load %struct.constructor_stack*, %struct.constructor_stack** %next, align 8
  store %struct.constructor_stack* %5, %struct.constructor_stack** @constructor_stack, align 8
  %6 = load %struct.constructor_stack*, %struct.constructor_stack** %q, align 8
  %7 = bitcast %struct.constructor_stack* %6 to i8*
  call void @free(i8* %7) #6
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %8 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** @constructor_range_stack, align 8
  %tobool2 = icmp ne %struct.constructor_range_stack* %8, null
  br i1 %tobool2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %while.end
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), i32 5151, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__FUNCTION__.finish_init, i32 0, i32 0)) #5
  unreachable

if.end.4:                                         ; preds = %while.end
  %9 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %decl = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %9, i32 0, i32 1
  %10 = load %union.tree_node*, %union.tree_node** %decl, align 8
  store %union.tree_node* %10, %union.tree_node** @constructor_decl, align 8
  %11 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %asmspec = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %11, i32 0, i32 2
  %12 = load i8*, i8** %asmspec, align 8
  store i8* %12, i8** @constructor_asmspec, align 8
  %13 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %require_constant_value = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %13, i32 0, i32 10
  %14 = load i8, i8* %require_constant_value, align 1
  %conv = sext i8 %14 to i32
  store i32 %conv, i32* @require_constant_value, align 4
  %15 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %require_constant_elements = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %15, i32 0, i32 11
  %16 = load i8, i8* %require_constant_elements, align 1
  %conv5 = sext i8 %16 to i32
  store i32 %conv5, i32* @require_constant_elements, align 4
  %17 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %constructor_stack = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %17, i32 0, i32 3
  %18 = load %struct.constructor_stack*, %struct.constructor_stack** %constructor_stack, align 8
  store %struct.constructor_stack* %18, %struct.constructor_stack** @constructor_stack, align 8
  %19 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %constructor_range_stack = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %19, i32 0, i32 4
  %20 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %constructor_range_stack, align 8
  store %struct.constructor_range_stack* %20, %struct.constructor_range_stack** @constructor_range_stack, align 8
  %21 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %elements = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %21, i32 0, i32 5
  %22 = load %union.tree_node*, %union.tree_node** %elements, align 8
  store %union.tree_node* %22, %union.tree_node** @constructor_elements, align 8
  %23 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %spelling = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %23, i32 0, i32 6
  %24 = load %struct.spelling*, %struct.spelling** %spelling, align 8
  store %struct.spelling* %24, %struct.spelling** @spelling, align 8
  %25 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %spelling_base = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %25, i32 0, i32 7
  %26 = load %struct.spelling*, %struct.spelling** %spelling_base, align 8
  store %struct.spelling* %26, %struct.spelling** @spelling_base, align 8
  %27 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %spelling_size = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %27, i32 0, i32 8
  %28 = load i32, i32* %spelling_size, align 4
  store i32 %28, i32* @spelling_size, align 4
  %29 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %deferred = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %29, i32 0, i32 12
  %30 = load i8, i8* %deferred, align 1
  %conv6 = sext i8 %30 to i32
  store i32 %conv6, i32* @constructor_subconstants_deferred, align 4
  %31 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %top_level = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %31, i32 0, i32 9
  %32 = load i8, i8* %top_level, align 1
  %conv7 = sext i8 %32 to i32
  store i32 %conv7, i32* @constructor_top_level, align 4
  %33 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %next8 = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %33, i32 0, i32 0
  %34 = load %struct.initializer_stack*, %struct.initializer_stack** %next8, align 8
  store %struct.initializer_stack* %34, %struct.initializer_stack** @initializer_stack, align 8
  %35 = load %struct.initializer_stack*, %struct.initializer_stack** %p, align 8
  %36 = bitcast %struct.initializer_stack* %35 to i8*
  call void @free(i8* %36) #6
  ret void
}

declare void @output_deferred_addressed_constants() #1

; Function Attrs: nounwind
declare void @free(i8*) #3

; Function Attrs: nounwind uwtable
define void @really_start_incremental_init(%union.tree_node* %type) #0 {
entry:
  %type.addr = alloca %union.tree_node*, align 8
  %p = alloca %struct.constructor_stack*, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  %call = call noalias i8* @xmalloc(i64 112)
  %0 = bitcast i8* %call to %struct.constructor_stack*
  store %struct.constructor_stack* %0, %struct.constructor_stack** %p, align 8
  %1 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %cmp = icmp eq %union.tree_node* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** @constructor_decl, align 8
  %common = bitcast %union.tree_node* %2 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %3, %union.tree_node** %type.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %5 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %type2 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %5, i32 0, i32 1
  store %union.tree_node* %4, %union.tree_node** %type2, align 8
  %6 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %7 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %fields = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %7, i32 0, i32 2
  store %union.tree_node* %6, %union.tree_node** %fields, align 8
  %8 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8
  %9 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %index = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %9, i32 0, i32 3
  store %union.tree_node* %8, %union.tree_node** %index, align 8
  %10 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8
  %11 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %max_index = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %11, i32 0, i32 4
  store %union.tree_node* %10, %union.tree_node** %max_index, align 8
  %12 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_index, align 8
  %13 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %unfilled_index = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %13, i32 0, i32 5
  store %union.tree_node* %12, %union.tree_node** %unfilled_index, align 8
  %14 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %15 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %unfilled_fields = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %15, i32 0, i32 6
  store %union.tree_node* %14, %union.tree_node** %unfilled_fields, align 8
  %16 = load %union.tree_node*, %union.tree_node** @constructor_bit_index, align 8
  %17 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %bit_index = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %17, i32 0, i32 7
  store %union.tree_node* %16, %union.tree_node** %bit_index, align 8
  %18 = load %union.tree_node*, %union.tree_node** @constructor_elements, align 8
  %19 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %elements = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %19, i32 0, i32 8
  store %union.tree_node* %18, %union.tree_node** %elements, align 8
  %20 = load i32, i32* @constructor_constant, align 4
  %conv = trunc i32 %20 to i8
  %21 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %constant = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %21, i32 0, i32 14
  store i8 %conv, i8* %constant, align 1
  %22 = load i32, i32* @constructor_simple, align 4
  %conv3 = trunc i32 %22 to i8
  %23 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %simple = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %23, i32 0, i32 15
  store i8 %conv3, i8* %simple, align 1
  %24 = load i32, i32* @constructor_erroneous, align 4
  %conv4 = trunc i32 %24 to i8
  %25 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %erroneous = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %25, i32 0, i32 17
  store i8 %conv4, i8* %erroneous, align 1
  %26 = load %struct.init_node*, %struct.init_node** @constructor_pending_elts, align 8
  %27 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %pending_elts = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %27, i32 0, i32 9
  store %struct.init_node* %26, %struct.init_node** %pending_elts, align 8
  %28 = load i32, i32* @constructor_depth, align 4
  %29 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %depth = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %29, i32 0, i32 11
  store i32 %28, i32* %depth, align 4
  %30 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %replacement_value = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %30, i32 0, i32 12
  store %union.tree_node* null, %union.tree_node** %replacement_value, align 8
  %31 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %implicit = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %31, i32 0, i32 16
  store i8 0, i8* %implicit, align 1
  %32 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %range_stack = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %32, i32 0, i32 13
  store %struct.constructor_range_stack* null, %struct.constructor_range_stack** %range_stack, align 8
  %33 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %outer = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %33, i32 0, i32 18
  store i8 0, i8* %outer, align 1
  %34 = load i32, i32* @constructor_incremental, align 4
  %conv5 = trunc i32 %34 to i8
  %35 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %incremental = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %35, i32 0, i32 19
  store i8 %conv5, i8* %incremental, align 1
  %36 = load i32, i32* @constructor_designated, align 4
  %conv6 = trunc i32 %36 to i8
  %37 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %designated = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %37, i32 0, i32 20
  store i8 %conv6, i8* %designated, align 1
  %38 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %next = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %38, i32 0, i32 0
  store %struct.constructor_stack* null, %struct.constructor_stack** %next, align 8
  %39 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  store %struct.constructor_stack* %39, %struct.constructor_stack** @constructor_stack, align 8
  store i32 1, i32* @constructor_constant, align 4
  store i32 1, i32* @constructor_simple, align 4
  %40 = load %struct.spelling*, %struct.spelling** @spelling, align 8
  %41 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.spelling* %40 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.spelling* %41 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 16
  %conv7 = trunc i64 %sub.ptr.div to i32
  store i32 %conv7, i32* @constructor_depth, align 4
  store %union.tree_node* null, %union.tree_node** @constructor_elements, align 8
  store %struct.init_node* null, %struct.init_node** @constructor_pending_elts, align 8
  %42 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %42, %union.tree_node** @constructor_type, align 8
  store i32 1, i32* @constructor_incremental, align 4
  store i32 0, i32* @constructor_designated, align 4
  store i32 0, i32* @designator_depth, align 4
  store i32 0, i32* @designator_errorneous, align 4
  %43 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common8 = bitcast %union.tree_node* %43 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common8, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp9 = icmp eq i32 %bf.clear, 20
  br i1 %cmp9, label %if.then.17, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %44 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common11 = bitcast %union.tree_node* %44 to %struct.tree_common*
  %code12 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 2
  %bf.load13 = load i32, i32* %code12, align 8
  %bf.clear14 = and i32 %bf.load13, 255
  %cmp15 = icmp eq i32 %bf.clear14, 21
  br i1 %cmp15, label %if.then.17, label %if.else

if.then.17:                                       ; preds = %lor.lhs.false, %if.end
  %45 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type18 = bitcast %union.tree_node* %45 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type18, i32 0, i32 1
  %46 = load %union.tree_node*, %union.tree_node** %values, align 8
  store %union.tree_node* %46, %union.tree_node** @constructor_fields, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then.17
  %47 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %cmp19 = icmp ne %union.tree_node* %47, null
  br i1 %cmp19, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %while.cond
  %48 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %decl = bitcast %union.tree_node* %48 to %struct.tree_decl*
  %lang_flag_4 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 5
  %49 = bitcast i48* %lang_flag_4 to i64*
  %bf.load21 = load i64, i64* %49, align 8
  %bf.lshr = lshr i64 %bf.load21, 41
  %bf.clear22 = and i64 %bf.lshr, 1
  %bf.cast = trunc i64 %bf.clear22 to i32
  %cmp23 = icmp eq i32 %bf.cast, 1
  br i1 %cmp23, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %50 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %decl25 = bitcast %union.tree_node* %50 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl25, i32 0, i32 8
  %51 = load %union.tree_node*, %union.tree_node** %name, align 8
  %cmp26 = icmp eq %union.tree_node* %51, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.cond
  %52 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp26, %land.rhs ]
  br i1 %52, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %53 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %common28 = bitcast %union.tree_node* %53 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common28, i32 0, i32 0
  %54 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %54, %union.tree_node** @constructor_fields, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %55 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  store %union.tree_node* %55, %union.tree_node** @constructor_unfilled_fields, align 8
  %56 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 17), align 8
  store %union.tree_node* %56, %union.tree_node** @constructor_bit_index, align 8
  br label %if.end.104

if.else:                                          ; preds = %lor.lhs.false
  %57 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common29 = bitcast %union.tree_node* %57 to %struct.tree_common*
  %code30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common29, i32 0, i32 2
  %bf.load31 = load i32, i32* %code30, align 8
  %bf.clear32 = and i32 %bf.load31, 255
  %cmp33 = icmp eq i32 %bf.clear32, 18
  br i1 %cmp33, label %if.then.35, label %if.else.67

if.then.35:                                       ; preds = %if.else
  %58 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type36 = bitcast %union.tree_node* %58 to %struct.tree_type*
  %values37 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type36, i32 0, i32 1
  %59 = load %union.tree_node*, %union.tree_node** %values37, align 8
  %tobool = icmp ne %union.tree_node* %59, null
  br i1 %tobool, label %if.then.38, label %if.else.65

if.then.38:                                       ; preds = %if.then.35
  %60 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type39 = bitcast %union.tree_node* %60 to %struct.tree_type*
  %values40 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type39, i32 0, i32 1
  %61 = load %union.tree_node*, %union.tree_node** %values40, align 8
  %type41 = bitcast %union.tree_node* %61 to %struct.tree_type*
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type41, i32 0, i32 13
  %62 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  store %union.tree_node* %62, %union.tree_node** @constructor_max_index, align 8
  %63 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8
  %cmp42 = icmp eq %union.tree_node* %63, null
  br i1 %cmp42, label %land.lhs.true.44, label %if.end.49

land.lhs.true.44:                                 ; preds = %if.then.38
  %64 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type45 = bitcast %union.tree_node* %64 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type45, i32 0, i32 2
  %65 = load %union.tree_node*, %union.tree_node** %size, align 8
  %tobool46 = icmp ne %union.tree_node* %65, null
  br i1 %tobool46, label %if.then.47, label %if.end.49

if.then.47:                                       ; preds = %land.lhs.true.44
  %call48 = call %union.tree_node* @build_int_2_wide(i64 -1, i64 -1)
  store %union.tree_node* %call48, %union.tree_node** @constructor_max_index, align 8
  br label %if.end.49

if.end.49:                                        ; preds = %if.then.47, %land.lhs.true.44, %if.then.38
  %66 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8
  %tobool50 = icmp ne %union.tree_node* %66, null
  br i1 %tobool50, label %land.lhs.true.51, label %if.end.60

land.lhs.true.51:                                 ; preds = %if.end.49
  %67 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8
  %common52 = bitcast %union.tree_node* %67 to %struct.tree_common*
  %code53 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common52, i32 0, i32 2
  %bf.load54 = load i32, i32* %code53, align 8
  %bf.clear55 = and i32 %bf.load54, 255
  %cmp56 = icmp ne i32 %bf.clear55, 25
  br i1 %cmp56, label %if.then.58, label %if.end.60

if.then.58:                                       ; preds = %land.lhs.true.51
  %call59 = call %union.tree_node* @build_int_2_wide(i64 -1, i64 -1)
  store %union.tree_node* %call59, %union.tree_node** @constructor_max_index, align 8
  br label %if.end.60

if.end.60:                                        ; preds = %if.then.58, %land.lhs.true.51, %if.end.49
  %68 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i32 0, i64 3), align 8
  %69 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type61 = bitcast %union.tree_node* %69 to %struct.tree_type*
  %values62 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type61, i32 0, i32 1
  %70 = load %union.tree_node*, %union.tree_node** %values62, align 8
  %type63 = bitcast %union.tree_node* %70 to %struct.tree_type*
  %minval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type63, i32 0, i32 12
  %71 = load %union.tree_node*, %union.tree_node** %minval, align 8
  %call64 = call %union.tree_node* @convert(%union.tree_node* %68, %union.tree_node* %71)
  store %union.tree_node* %call64, %union.tree_node** @constructor_index, align 8
  br label %if.end.66

if.else.65:                                       ; preds = %if.then.35
  %72 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 17), align 8
  store %union.tree_node* %72, %union.tree_node** @constructor_index, align 8
  br label %if.end.66

if.end.66:                                        ; preds = %if.else.65, %if.end.60
  %73 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8
  store %union.tree_node* %73, %union.tree_node** @constructor_unfilled_index, align 8
  br label %if.end.103

if.else.67:                                       ; preds = %if.else
  %74 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common68 = bitcast %union.tree_node* %74 to %struct.tree_common*
  %code69 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common68, i32 0, i32 2
  %bf.load70 = load i32, i32* %code69, align 8
  %bf.clear71 = and i32 %bf.load70, 255
  %cmp72 = icmp eq i32 %bf.clear71, 9
  br i1 %cmp72, label %if.then.74, label %if.else.101

if.then.74:                                       ; preds = %if.else.67
  %75 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type75 = bitcast %union.tree_node* %75 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type75, i32 0, i32 6
  %bf.load76 = load i32, i32* %mode, align 4
  %bf.lshr77 = lshr i32 %bf.load76, 9
  %bf.clear78 = and i32 %bf.lshr77, 127
  %idxprom = sext i32 %bf.clear78 to i64
  %arrayidx = getelementptr inbounds [59 x i8], [59 x i8]* @mode_unit_size, i32 0, i64 %idxprom
  %76 = load i8, i8* %arrayidx, align 1
  %conv79 = zext i8 %76 to i32
  %cmp80 = icmp eq i32 %conv79, 0
  br i1 %cmp80, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.74
  br label %cond.end

cond.false:                                       ; preds = %if.then.74
  %77 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type82 = bitcast %union.tree_node* %77 to %struct.tree_type*
  %mode83 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type82, i32 0, i32 6
  %bf.load84 = load i32, i32* %mode83, align 4
  %bf.lshr85 = lshr i32 %bf.load84, 9
  %bf.clear86 = and i32 %bf.lshr85, 127
  %idxprom87 = sext i32 %bf.clear86 to i64
  %arrayidx88 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom87
  %78 = load i8, i8* %arrayidx88, align 1
  %conv89 = zext i8 %78 to i32
  %79 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type90 = bitcast %union.tree_node* %79 to %struct.tree_type*
  %mode91 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type90, i32 0, i32 6
  %bf.load92 = load i32, i32* %mode91, align 4
  %bf.lshr93 = lshr i32 %bf.load92, 9
  %bf.clear94 = and i32 %bf.lshr93, 127
  %idxprom95 = sext i32 %bf.clear94 to i64
  %arrayidx96 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_unit_size, i32 0, i64 %idxprom95
  %80 = load i8, i8* %arrayidx96, align 1
  %conv97 = zext i8 %80 to i32
  %div = sdiv i32 %conv89, %conv97
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %div, %cond.false ]
  %sub = sub nsw i32 %cond, 1
  %conv98 = sext i32 %sub to i64
  %call99 = call %union.tree_node* @build_int_2_wide(i64 %conv98, i64 0)
  store %union.tree_node* %call99, %union.tree_node** @constructor_max_index, align 8
  %81 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i32 0, i64 3), align 8
  %82 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call100 = call %union.tree_node* @convert(%union.tree_node* %81, %union.tree_node* %82)
  store %union.tree_node* %call100, %union.tree_node** @constructor_index, align 8
  %83 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8
  store %union.tree_node* %83, %union.tree_node** @constructor_unfilled_index, align 8
  br label %if.end.102

if.else.101:                                      ; preds = %if.else.67
  %84 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  store %union.tree_node* %84, %union.tree_node** @constructor_fields, align 8
  %85 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  store %union.tree_node* %85, %union.tree_node** @constructor_unfilled_fields, align 8
  br label %if.end.102

if.end.102:                                       ; preds = %if.else.101, %cond.end
  br label %if.end.103

if.end.103:                                       ; preds = %if.end.102, %if.end.66
  br label %if.end.104

if.end.104:                                       ; preds = %if.end.103, %while.end
  ret void
}

declare %union.tree_node* @build_int_2_wide(i64, i64) #1

; Function Attrs: nounwind uwtable
define void @push_init_level(i32 %implicit) #0 {
entry:
  %implicit.addr = alloca i32, align 4
  %p = alloca %struct.constructor_stack*, align 8
  %value = alloca %union.tree_node*, align 8
  store i32 %implicit, i32* %implicit.addr, align 4
  store %union.tree_node* null, %union.tree_node** %value, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end.19, %entry
  %0 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8
  %implicit1 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %0, i32 0, i32 16
  %1 = load i8, i8* %implicit1, align 1
  %tobool = icmp ne i8 %1, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %2 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 20
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body
  %3 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common2 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load4 = load i32, i32* %code3, align 8
  %bf.clear5 = and i32 %bf.load4, 255
  %cmp6 = icmp eq i32 %bf.clear5, 21
  br i1 %cmp6, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %lor.lhs.false, %while.body
  %4 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %cmp7 = icmp eq %union.tree_node* %4, null
  br i1 %cmp7, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %call = call %union.tree_node* @pop_init_level(i32 1)
  call void @process_init_element(%union.tree_node* %call)
  br label %if.end.19

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %5 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common8 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code9 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common8, i32 0, i32 2
  %bf.load10 = load i32, i32* %code9, align 8
  %bf.clear11 = and i32 %bf.load10, 255
  %cmp12 = icmp eq i32 %bf.clear11, 18
  br i1 %cmp12, label %land.lhs.true.13, label %if.else.18

land.lhs.true.13:                                 ; preds = %if.else
  %6 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8
  %7 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8
  %call14 = call i32 @tree_int_cst_lt(%union.tree_node* %6, %union.tree_node* %7)
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.then.16, label %if.else.18

if.then.16:                                       ; preds = %land.lhs.true.13
  %call17 = call %union.tree_node* @pop_init_level(i32 1)
  call void @process_init_element(%union.tree_node* %call17)
  br label %if.end

if.else.18:                                       ; preds = %land.lhs.true.13, %if.else
  br label %while.end

if.end:                                           ; preds = %if.then.16
  br label %if.end.19

if.end.19:                                        ; preds = %if.end, %if.then
  br label %while.cond

while.end:                                        ; preds = %if.else.18, %while.cond
  %8 = load i32, i32* %implicit.addr, align 4
  %tobool20 = icmp ne i32 %8, 0
  br i1 %tobool20, label %if.then.21, label %if.end.47

if.then.21:                                       ; preds = %while.end
  %9 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common22 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %code23 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common22, i32 0, i32 2
  %bf.load24 = load i32, i32* %code23, align 8
  %bf.clear25 = and i32 %bf.load24, 255
  %cmp26 = icmp eq i32 %bf.clear25, 20
  br i1 %cmp26, label %land.lhs.true.33, label %lor.lhs.false.27

lor.lhs.false.27:                                 ; preds = %if.then.21
  %10 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common28 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %code29 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common28, i32 0, i32 2
  %bf.load30 = load i32, i32* %code29, align 8
  %bf.clear31 = and i32 %bf.load30, 255
  %cmp32 = icmp eq i32 %bf.clear31, 21
  br i1 %cmp32, label %land.lhs.true.33, label %if.else.37

land.lhs.true.33:                                 ; preds = %lor.lhs.false.27, %if.then.21
  %11 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %tobool34 = icmp ne %union.tree_node* %11, null
  br i1 %tobool34, label %if.then.35, label %if.else.37

if.then.35:                                       ; preds = %land.lhs.true.33
  %12 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %call36 = call %union.tree_node* @find_init_member(%union.tree_node* %12)
  store %union.tree_node* %call36, %union.tree_node** %value, align 8
  br label %if.end.46

if.else.37:                                       ; preds = %land.lhs.true.33, %lor.lhs.false.27
  %13 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common38 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %code39 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common38, i32 0, i32 2
  %bf.load40 = load i32, i32* %code39, align 8
  %bf.clear41 = and i32 %bf.load40, 255
  %cmp42 = icmp eq i32 %bf.clear41, 18
  br i1 %cmp42, label %if.then.43, label %if.end.45

if.then.43:                                       ; preds = %if.else.37
  %14 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8
  %call44 = call %union.tree_node* @find_init_member(%union.tree_node* %14)
  store %union.tree_node* %call44, %union.tree_node** %value, align 8
  br label %if.end.45

if.end.45:                                        ; preds = %if.then.43, %if.else.37
  br label %if.end.46

if.end.46:                                        ; preds = %if.end.45, %if.then.35
  br label %if.end.47

if.end.47:                                        ; preds = %if.end.46, %while.end
  %call48 = call noalias i8* @xmalloc(i64 112)
  %15 = bitcast i8* %call48 to %struct.constructor_stack*
  store %struct.constructor_stack* %15, %struct.constructor_stack** %p, align 8
  %16 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %17 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %type = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %17, i32 0, i32 1
  store %union.tree_node* %16, %union.tree_node** %type, align 8
  %18 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %19 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %fields = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %19, i32 0, i32 2
  store %union.tree_node* %18, %union.tree_node** %fields, align 8
  %20 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8
  %21 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %index = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %21, i32 0, i32 3
  store %union.tree_node* %20, %union.tree_node** %index, align 8
  %22 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8
  %23 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %max_index = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %23, i32 0, i32 4
  store %union.tree_node* %22, %union.tree_node** %max_index, align 8
  %24 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_index, align 8
  %25 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %unfilled_index = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %25, i32 0, i32 5
  store %union.tree_node* %24, %union.tree_node** %unfilled_index, align 8
  %26 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %27 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %unfilled_fields = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %27, i32 0, i32 6
  store %union.tree_node* %26, %union.tree_node** %unfilled_fields, align 8
  %28 = load %union.tree_node*, %union.tree_node** @constructor_bit_index, align 8
  %29 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %bit_index = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %29, i32 0, i32 7
  store %union.tree_node* %28, %union.tree_node** %bit_index, align 8
  %30 = load %union.tree_node*, %union.tree_node** @constructor_elements, align 8
  %31 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %elements = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %31, i32 0, i32 8
  store %union.tree_node* %30, %union.tree_node** %elements, align 8
  %32 = load i32, i32* @constructor_constant, align 4
  %conv = trunc i32 %32 to i8
  %33 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %constant = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %33, i32 0, i32 14
  store i8 %conv, i8* %constant, align 1
  %34 = load i32, i32* @constructor_simple, align 4
  %conv49 = trunc i32 %34 to i8
  %35 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %simple = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %35, i32 0, i32 15
  store i8 %conv49, i8* %simple, align 1
  %36 = load i32, i32* @constructor_erroneous, align 4
  %conv50 = trunc i32 %36 to i8
  %37 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %erroneous = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %37, i32 0, i32 17
  store i8 %conv50, i8* %erroneous, align 1
  %38 = load %struct.init_node*, %struct.init_node** @constructor_pending_elts, align 8
  %39 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %pending_elts = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %39, i32 0, i32 9
  store %struct.init_node* %38, %struct.init_node** %pending_elts, align 8
  %40 = load i32, i32* @constructor_depth, align 4
  %41 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %depth = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %41, i32 0, i32 11
  store i32 %40, i32* %depth, align 4
  %42 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %replacement_value = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %42, i32 0, i32 12
  store %union.tree_node* null, %union.tree_node** %replacement_value, align 8
  %43 = load i32, i32* %implicit.addr, align 4
  %conv51 = trunc i32 %43 to i8
  %44 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %implicit52 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %44, i32 0, i32 16
  store i8 %conv51, i8* %implicit52, align 1
  %45 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %outer = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %45, i32 0, i32 18
  store i8 0, i8* %outer, align 1
  %46 = load i32, i32* @constructor_incremental, align 4
  %conv53 = trunc i32 %46 to i8
  %47 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %incremental = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %47, i32 0, i32 19
  store i8 %conv53, i8* %incremental, align 1
  %48 = load i32, i32* @constructor_designated, align 4
  %conv54 = trunc i32 %48 to i8
  %49 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %designated = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %49, i32 0, i32 20
  store i8 %conv54, i8* %designated, align 1
  %50 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8
  %51 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %next = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %51, i32 0, i32 0
  store %struct.constructor_stack* %50, %struct.constructor_stack** %next, align 8
  %52 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %range_stack = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %52, i32 0, i32 13
  store %struct.constructor_range_stack* null, %struct.constructor_range_stack** %range_stack, align 8
  %53 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  store %struct.constructor_stack* %53, %struct.constructor_stack** @constructor_stack, align 8
  store i32 1, i32* @constructor_constant, align 4
  store i32 1, i32* @constructor_simple, align 4
  %54 = load %struct.spelling*, %struct.spelling** @spelling, align 8
  %55 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.spelling* %54 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.spelling* %55 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 16
  %conv55 = trunc i64 %sub.ptr.div to i32
  store i32 %conv55, i32* @constructor_depth, align 4
  store %union.tree_node* null, %union.tree_node** @constructor_elements, align 8
  store i32 1, i32* @constructor_incremental, align 4
  store i32 0, i32* @constructor_designated, align 4
  store %struct.init_node* null, %struct.init_node** @constructor_pending_elts, align 8
  %56 = load i32, i32* %implicit.addr, align 4
  %tobool56 = icmp ne i32 %56, 0
  br i1 %tobool56, label %if.end.59, label %if.then.57

if.then.57:                                       ; preds = %if.end.47
  %57 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** @constructor_range_stack, align 8
  %58 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %range_stack58 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %58, i32 0, i32 13
  store %struct.constructor_range_stack* %57, %struct.constructor_range_stack** %range_stack58, align 8
  store %struct.constructor_range_stack* null, %struct.constructor_range_stack** @constructor_range_stack, align 8
  store i32 0, i32* @designator_depth, align 4
  store i32 0, i32* @designator_errorneous, align 4
  br label %if.end.59

if.end.59:                                        ; preds = %if.then.57, %if.end.47
  %59 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %cmp60 = icmp eq %union.tree_node* %59, null
  br i1 %cmp60, label %if.then.62, label %if.else.63

if.then.62:                                       ; preds = %if.end.59
  br label %if.end.100

if.else.63:                                       ; preds = %if.end.59
  %60 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common64 = bitcast %union.tree_node* %60 to %struct.tree_common*
  %code65 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common64, i32 0, i32 2
  %bf.load66 = load i32, i32* %code65, align 8
  %bf.clear67 = and i32 %bf.load66, 255
  %cmp68 = icmp eq i32 %bf.clear67, 20
  br i1 %cmp68, label %if.then.77, label %lor.lhs.false.70

lor.lhs.false.70:                                 ; preds = %if.else.63
  %61 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common71 = bitcast %union.tree_node* %61 to %struct.tree_common*
  %code72 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common71, i32 0, i32 2
  %bf.load73 = load i32, i32* %code72, align 8
  %bf.clear74 = and i32 %bf.load73, 255
  %cmp75 = icmp eq i32 %bf.clear74, 21
  br i1 %cmp75, label %if.then.77, label %if.else.85

if.then.77:                                       ; preds = %lor.lhs.false.70, %if.else.63
  %62 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %cmp78 = icmp eq %union.tree_node* %62, null
  br i1 %cmp78, label %if.then.80, label %if.else.81

if.then.80:                                       ; preds = %if.then.77
  store %union.tree_node* null, %union.tree_node** @constructor_type, align 8
  br label %if.end.84

if.else.81:                                       ; preds = %if.then.77
  %63 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %common82 = bitcast %union.tree_node* %63 to %struct.tree_common*
  %type83 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common82, i32 0, i32 1
  %64 = load %union.tree_node*, %union.tree_node** %type83, align 8
  store %union.tree_node* %64, %union.tree_node** @constructor_type, align 8
  %65 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  call void @push_member_name(%union.tree_node* %65)
  %66 = load i32, i32* @constructor_depth, align 4
  %inc = add nsw i32 %66, 1
  store i32 %inc, i32* @constructor_depth, align 4
  br label %if.end.84

if.end.84:                                        ; preds = %if.else.81, %if.then.80
  br label %if.end.99

if.else.85:                                       ; preds = %lor.lhs.false.70
  %67 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common86 = bitcast %union.tree_node* %67 to %struct.tree_common*
  %code87 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common86, i32 0, i32 2
  %bf.load88 = load i32, i32* %code87, align 8
  %bf.clear89 = and i32 %bf.load88, 255
  %cmp90 = icmp eq i32 %bf.clear89, 18
  br i1 %cmp90, label %if.then.92, label %if.end.98

if.then.92:                                       ; preds = %if.else.85
  %68 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common93 = bitcast %union.tree_node* %68 to %struct.tree_common*
  %type94 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common93, i32 0, i32 1
  %69 = load %union.tree_node*, %union.tree_node** %type94, align 8
  store %union.tree_node* %69, %union.tree_node** @constructor_type, align 8
  %70 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8
  %call95 = call i64 @tree_low_cst(%union.tree_node* %70, i32 0)
  %conv96 = trunc i64 %call95 to i32
  call void @push_array_bounds(i32 %conv96)
  %71 = load i32, i32* @constructor_depth, align 4
  %inc97 = add nsw i32 %71, 1
  store i32 %inc97, i32* @constructor_depth, align 4
  br label %if.end.98

if.end.98:                                        ; preds = %if.then.92, %if.else.85
  br label %if.end.99

if.end.99:                                        ; preds = %if.end.98, %if.end.84
  br label %if.end.100

if.end.100:                                       ; preds = %if.end.99, %if.then.62
  %72 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %cmp101 = icmp eq %union.tree_node* %72, null
  br i1 %cmp101, label %if.then.103, label %if.end.104

if.then.103:                                      ; preds = %if.end.100
  call void @error_init(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.113, i32 0, i32 0))
  store %union.tree_node* null, %union.tree_node** @constructor_fields, align 8
  store %union.tree_node* null, %union.tree_node** @constructor_unfilled_fields, align 8
  br label %if.end.265

if.end.104:                                       ; preds = %if.end.100
  %73 = load %union.tree_node*, %union.tree_node** %value, align 8
  %tobool105 = icmp ne %union.tree_node* %73, null
  br i1 %tobool105, label %land.lhs.true.106, label %if.end.138

land.lhs.true.106:                                ; preds = %if.end.104
  %74 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common107 = bitcast %union.tree_node* %74 to %struct.tree_common*
  %code108 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common107, i32 0, i32 2
  %bf.load109 = load i32, i32* %code108, align 8
  %bf.clear110 = and i32 %bf.load109, 255
  %cmp111 = icmp eq i32 %bf.clear110, 46
  br i1 %cmp111, label %if.then.113, label %if.end.138

if.then.113:                                      ; preds = %land.lhs.true.106
  %75 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common114 = bitcast %union.tree_node* %75 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common114, i32 0, i32 2
  %bf.load115 = load i32, i32* %constant_flag, align 8
  %bf.lshr = lshr i32 %bf.load115, 9
  %bf.clear116 = and i32 %bf.lshr, 1
  store i32 %bf.clear116, i32* @constructor_constant, align 4
  %76 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common117 = bitcast %union.tree_node* %76 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common117, i32 0, i32 2
  %bf.load118 = load i32, i32* %static_flag, align 8
  %bf.lshr119 = lshr i32 %bf.load118, 18
  %bf.clear120 = and i32 %bf.lshr119, 1
  store i32 %bf.clear120, i32* @constructor_simple, align 4
  %77 = load %union.tree_node*, %union.tree_node** %value, align 8
  %exp = bitcast %union.tree_node* %77 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 1
  %78 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  store %union.tree_node* %78, %union.tree_node** @constructor_elements, align 8
  %79 = load %union.tree_node*, %union.tree_node** @constructor_elements, align 8
  %tobool121 = icmp ne %union.tree_node* %79, null
  br i1 %tobool121, label %land.lhs.true.122, label %if.end.137

land.lhs.true.122:                                ; preds = %if.then.113
  %80 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common123 = bitcast %union.tree_node* %80 to %struct.tree_common*
  %code124 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common123, i32 0, i32 2
  %bf.load125 = load i32, i32* %code124, align 8
  %bf.clear126 = and i32 %bf.load125, 255
  %cmp127 = icmp eq i32 %bf.clear126, 20
  br i1 %cmp127, label %if.then.136, label %lor.lhs.false.129

lor.lhs.false.129:                                ; preds = %land.lhs.true.122
  %81 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common130 = bitcast %union.tree_node* %81 to %struct.tree_common*
  %code131 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common130, i32 0, i32 2
  %bf.load132 = load i32, i32* %code131, align 8
  %bf.clear133 = and i32 %bf.load132, 255
  %cmp134 = icmp eq i32 %bf.clear133, 18
  br i1 %cmp134, label %if.then.136, label %if.end.137

if.then.136:                                      ; preds = %lor.lhs.false.129, %land.lhs.true.122
  call void @set_nonincremental_init()
  br label %if.end.137

if.end.137:                                       ; preds = %if.then.136, %lor.lhs.false.129, %if.then.113
  br label %if.end.138

if.end.138:                                       ; preds = %if.end.137, %land.lhs.true.106, %if.end.104
  %82 = load i32, i32* %implicit.addr, align 4
  %cmp139 = icmp eq i32 %82, 1
  br i1 %cmp139, label %land.lhs.true.141, label %if.end.146

land.lhs.true.141:                                ; preds = %if.end.138
  %83 = load i32, i32* @warn_missing_braces, align 4
  %tobool142 = icmp ne i32 %83, 0
  br i1 %tobool142, label %land.lhs.true.143, label %if.end.146

land.lhs.true.143:                                ; preds = %land.lhs.true.141
  %84 = load i32, i32* @missing_braces_mentioned, align 4
  %tobool144 = icmp ne i32 %84, 0
  br i1 %tobool144, label %if.end.146, label %if.then.145

if.then.145:                                      ; preds = %land.lhs.true.143
  store i32 1, i32* @missing_braces_mentioned, align 4
  call void @warning_init(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.114, i32 0, i32 0))
  br label %if.end.146

if.end.146:                                       ; preds = %if.then.145, %land.lhs.true.143, %land.lhs.true.141, %if.end.138
  %85 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common147 = bitcast %union.tree_node* %85 to %struct.tree_common*
  %code148 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common147, i32 0, i32 2
  %bf.load149 = load i32, i32* %code148, align 8
  %bf.clear150 = and i32 %bf.load149, 255
  %cmp151 = icmp eq i32 %bf.clear150, 20
  br i1 %cmp151, label %if.then.160, label %lor.lhs.false.153

lor.lhs.false.153:                                ; preds = %if.end.146
  %86 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common154 = bitcast %union.tree_node* %86 to %struct.tree_common*
  %code155 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common154, i32 0, i32 2
  %bf.load156 = load i32, i32* %code155, align 8
  %bf.clear157 = and i32 %bf.load156, 255
  %cmp158 = icmp eq i32 %bf.clear157, 21
  br i1 %cmp158, label %if.then.160, label %if.else.177

if.then.160:                                      ; preds = %lor.lhs.false.153, %if.end.146
  %87 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type161 = bitcast %union.tree_node* %87 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type161, i32 0, i32 1
  %88 = load %union.tree_node*, %union.tree_node** %values, align 8
  store %union.tree_node* %88, %union.tree_node** @constructor_fields, align 8
  br label %while.cond.162

while.cond.162:                                   ; preds = %while.body.174, %if.then.160
  %89 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %cmp163 = icmp ne %union.tree_node* %89, null
  br i1 %cmp163, label %land.lhs.true.165, label %land.end

land.lhs.true.165:                                ; preds = %while.cond.162
  %90 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %decl = bitcast %union.tree_node* %90 to %struct.tree_decl*
  %lang_flag_4 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 5
  %91 = bitcast i48* %lang_flag_4 to i64*
  %bf.load166 = load i64, i64* %91, align 8
  %bf.lshr167 = lshr i64 %bf.load166, 41
  %bf.clear168 = and i64 %bf.lshr167, 1
  %bf.cast = trunc i64 %bf.clear168 to i32
  %cmp169 = icmp eq i32 %bf.cast, 1
  br i1 %cmp169, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.165
  %92 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %decl171 = bitcast %union.tree_node* %92 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl171, i32 0, i32 8
  %93 = load %union.tree_node*, %union.tree_node** %name, align 8
  %cmp172 = icmp eq %union.tree_node* %93, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.165, %while.cond.162
  %94 = phi i1 [ false, %land.lhs.true.165 ], [ false, %while.cond.162 ], [ %cmp172, %land.rhs ]
  br i1 %94, label %while.body.174, label %while.end.176

while.body.174:                                   ; preds = %land.end
  %95 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %common175 = bitcast %union.tree_node* %95 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common175, i32 0, i32 0
  %96 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %96, %union.tree_node** @constructor_fields, align 8
  br label %while.cond.162

while.end.176:                                    ; preds = %land.end
  %97 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  store %union.tree_node* %97, %union.tree_node** @constructor_unfilled_fields, align 8
  %98 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 17), align 8
  store %union.tree_node* %98, %union.tree_node** @constructor_bit_index, align 8
  br label %if.end.265

if.else.177:                                      ; preds = %lor.lhs.false.153
  %99 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common178 = bitcast %union.tree_node* %99 to %struct.tree_common*
  %code179 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common178, i32 0, i32 2
  %bf.load180 = load i32, i32* %code179, align 8
  %bf.clear181 = and i32 %bf.load180, 255
  %cmp182 = icmp eq i32 %bf.clear181, 9
  br i1 %cmp182, label %if.then.184, label %if.else.212

if.then.184:                                      ; preds = %if.else.177
  %100 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type185 = bitcast %union.tree_node* %100 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type185, i32 0, i32 6
  %bf.load186 = load i32, i32* %mode, align 4
  %bf.lshr187 = lshr i32 %bf.load186, 9
  %bf.clear188 = and i32 %bf.lshr187, 127
  %idxprom = sext i32 %bf.clear188 to i64
  %arrayidx189 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_unit_size, i32 0, i64 %idxprom
  %101 = load i8, i8* %arrayidx189, align 1
  %conv190 = zext i8 %101 to i32
  %cmp191 = icmp eq i32 %conv190, 0
  br i1 %cmp191, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.184
  br label %cond.end

cond.false:                                       ; preds = %if.then.184
  %102 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type193 = bitcast %union.tree_node* %102 to %struct.tree_type*
  %mode194 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type193, i32 0, i32 6
  %bf.load195 = load i32, i32* %mode194, align 4
  %bf.lshr196 = lshr i32 %bf.load195, 9
  %bf.clear197 = and i32 %bf.lshr196, 127
  %idxprom198 = sext i32 %bf.clear197 to i64
  %arrayidx199 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom198
  %103 = load i8, i8* %arrayidx199, align 1
  %conv200 = zext i8 %103 to i32
  %104 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type201 = bitcast %union.tree_node* %104 to %struct.tree_type*
  %mode202 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type201, i32 0, i32 6
  %bf.load203 = load i32, i32* %mode202, align 4
  %bf.lshr204 = lshr i32 %bf.load203, 9
  %bf.clear205 = and i32 %bf.lshr204, 127
  %idxprom206 = sext i32 %bf.clear205 to i64
  %arrayidx207 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_unit_size, i32 0, i64 %idxprom206
  %105 = load i8, i8* %arrayidx207, align 1
  %conv208 = zext i8 %105 to i32
  %div = sdiv i32 %conv200, %conv208
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %div, %cond.false ]
  %sub = sub nsw i32 %cond, 1
  %conv209 = sext i32 %sub to i64
  %call210 = call %union.tree_node* @build_int_2_wide(i64 %conv209, i64 0)
  store %union.tree_node* %call210, %union.tree_node** @constructor_max_index, align 8
  %106 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i32 0, i64 3), align 8
  %107 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call211 = call %union.tree_node* @convert(%union.tree_node* %106, %union.tree_node* %107)
  store %union.tree_node* %call211, %union.tree_node** @constructor_index, align 8
  %108 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8
  store %union.tree_node* %108, %union.tree_node** @constructor_unfilled_index, align 8
  br label %if.end.264

if.else.212:                                      ; preds = %if.else.177
  %109 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common213 = bitcast %union.tree_node* %109 to %struct.tree_common*
  %code214 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common213, i32 0, i32 2
  %bf.load215 = load i32, i32* %code214, align 8
  %bf.clear216 = and i32 %bf.load215, 255
  %cmp217 = icmp eq i32 %bf.clear216, 18
  br i1 %cmp217, label %if.then.219, label %if.else.262

if.then.219:                                      ; preds = %if.else.212
  %110 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type220 = bitcast %union.tree_node* %110 to %struct.tree_type*
  %values221 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type220, i32 0, i32 1
  %111 = load %union.tree_node*, %union.tree_node** %values221, align 8
  %tobool222 = icmp ne %union.tree_node* %111, null
  br i1 %tobool222, label %if.then.223, label %if.else.250

if.then.223:                                      ; preds = %if.then.219
  %112 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type224 = bitcast %union.tree_node* %112 to %struct.tree_type*
  %values225 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type224, i32 0, i32 1
  %113 = load %union.tree_node*, %union.tree_node** %values225, align 8
  %type226 = bitcast %union.tree_node* %113 to %struct.tree_type*
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type226, i32 0, i32 13
  %114 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  store %union.tree_node* %114, %union.tree_node** @constructor_max_index, align 8
  %115 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8
  %cmp227 = icmp eq %union.tree_node* %115, null
  br i1 %cmp227, label %land.lhs.true.229, label %if.end.234

land.lhs.true.229:                                ; preds = %if.then.223
  %116 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type230 = bitcast %union.tree_node* %116 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type230, i32 0, i32 2
  %117 = load %union.tree_node*, %union.tree_node** %size, align 8
  %tobool231 = icmp ne %union.tree_node* %117, null
  br i1 %tobool231, label %if.then.232, label %if.end.234

if.then.232:                                      ; preds = %land.lhs.true.229
  %call233 = call %union.tree_node* @build_int_2_wide(i64 -1, i64 -1)
  store %union.tree_node* %call233, %union.tree_node** @constructor_max_index, align 8
  br label %if.end.234

if.end.234:                                       ; preds = %if.then.232, %land.lhs.true.229, %if.then.223
  %118 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8
  %tobool235 = icmp ne %union.tree_node* %118, null
  br i1 %tobool235, label %land.lhs.true.236, label %if.end.245

land.lhs.true.236:                                ; preds = %if.end.234
  %119 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8
  %common237 = bitcast %union.tree_node* %119 to %struct.tree_common*
  %code238 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common237, i32 0, i32 2
  %bf.load239 = load i32, i32* %code238, align 8
  %bf.clear240 = and i32 %bf.load239, 255
  %cmp241 = icmp ne i32 %bf.clear240, 25
  br i1 %cmp241, label %if.then.243, label %if.end.245

if.then.243:                                      ; preds = %land.lhs.true.236
  %call244 = call %union.tree_node* @build_int_2_wide(i64 -1, i64 -1)
  store %union.tree_node* %call244, %union.tree_node** @constructor_max_index, align 8
  br label %if.end.245

if.end.245:                                       ; preds = %if.then.243, %land.lhs.true.236, %if.end.234
  %120 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i32 0, i64 3), align 8
  %121 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type246 = bitcast %union.tree_node* %121 to %struct.tree_type*
  %values247 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type246, i32 0, i32 1
  %122 = load %union.tree_node*, %union.tree_node** %values247, align 8
  %type248 = bitcast %union.tree_node* %122 to %struct.tree_type*
  %minval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type248, i32 0, i32 12
  %123 = load %union.tree_node*, %union.tree_node** %minval, align 8
  %call249 = call %union.tree_node* @convert(%union.tree_node* %120, %union.tree_node* %123)
  store %union.tree_node* %call249, %union.tree_node** @constructor_index, align 8
  br label %if.end.251

if.else.250:                                      ; preds = %if.then.219
  %124 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 17), align 8
  store %union.tree_node* %124, %union.tree_node** @constructor_index, align 8
  br label %if.end.251

if.end.251:                                       ; preds = %if.else.250, %if.end.245
  %125 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8
  store %union.tree_node* %125, %union.tree_node** @constructor_unfilled_index, align 8
  %126 = load %union.tree_node*, %union.tree_node** %value, align 8
  %tobool252 = icmp ne %union.tree_node* %126, null
  br i1 %tobool252, label %land.lhs.true.253, label %if.end.261

land.lhs.true.253:                                ; preds = %if.end.251
  %127 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common254 = bitcast %union.tree_node* %127 to %struct.tree_common*
  %code255 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common254, i32 0, i32 2
  %bf.load256 = load i32, i32* %code255, align 8
  %bf.clear257 = and i32 %bf.load256, 255
  %cmp258 = icmp eq i32 %bf.clear257, 29
  br i1 %cmp258, label %if.then.260, label %if.end.261

if.then.260:                                      ; preds = %land.lhs.true.253
  %128 = load %union.tree_node*, %union.tree_node** %value, align 8
  call void @set_nonincremental_init_from_string(%union.tree_node* %128)
  br label %if.end.261

if.end.261:                                       ; preds = %if.then.260, %land.lhs.true.253, %if.end.251
  br label %if.end.263

if.else.262:                                      ; preds = %if.else.212
  call void @warning_init(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.115, i32 0, i32 0))
  %129 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  store %union.tree_node* %129, %union.tree_node** @constructor_fields, align 8
  %130 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  store %union.tree_node* %130, %union.tree_node** @constructor_unfilled_fields, align 8
  br label %if.end.263

if.end.263:                                       ; preds = %if.else.262, %if.end.261
  br label %if.end.264

if.end.264:                                       ; preds = %if.end.263, %cond.end
  br label %if.end.265

if.end.265:                                       ; preds = %if.then.103, %if.end.264, %while.end.176
  ret void
}

; Function Attrs: nounwind uwtable
define void @process_init_element(%union.tree_node* %value) #0 {
entry:
  %value.addr = alloca %union.tree_node*, align 8
  %orig_value = alloca %union.tree_node*, align 8
  %string_flag = alloca i32, align 4
  %fieldtype = alloca %union.tree_node*, align 8
  %fieldcode = alloca i32, align 4
  %fieldtype200 = alloca %union.tree_node*, align 8
  %fieldcode201 = alloca i32, align 4
  %elttype = alloca %union.tree_node*, align 8
  %eltcode = alloca i32, align 4
  %elttype353 = alloca %union.tree_node*, align 8
  %p = alloca %struct.constructor_range_stack*, align 8
  %range_stack = alloca %struct.constructor_range_stack*, align 8
  %finish = alloca i32, align 4
  store %union.tree_node* %value, %union.tree_node** %value.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  store %union.tree_node* %0, %union.tree_node** %orig_value, align 8
  %1 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %cmp = icmp ne %union.tree_node* %1, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp1 = icmp eq i32 %bf.clear, 29
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ]
  %land.ext = zext i1 %3 to i32
  store i32 %land.ext, i32* %string_flag, align 4
  store i32 0, i32* @designator_depth, align 4
  store i32 0, i32* @designator_errorneous, align 4
  %4 = load i32, i32* %string_flag, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %land.lhs.true, label %if.end.21

land.lhs.true:                                    ; preds = %land.end
  %5 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %tobool2 = icmp ne %union.tree_node* %5, null
  br i1 %tobool2, label %land.lhs.true.3, label %if.end.21

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %6 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common4 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %code5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 2
  %bf.load6 = load i32, i32* %code5, align 8
  %bf.clear7 = and i32 %bf.load6, 255
  %cmp8 = icmp eq i32 %bf.clear7, 18
  br i1 %cmp8, label %land.lhs.true.9, label %if.end.21

land.lhs.true.9:                                  ; preds = %land.lhs.true.3
  %7 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common10 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common10, i32 0, i32 1
  %8 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common11 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %code12 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 2
  %bf.load13 = load i32, i32* %code12, align 8
  %bf.clear14 = and i32 %bf.load13, 255
  %cmp15 = icmp eq i32 %bf.clear14, 6
  br i1 %cmp15, label %land.lhs.true.16, label %if.end.21

land.lhs.true.16:                                 ; preds = %land.lhs.true.9
  %9 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_index, align 8
  %call = call i32 @integer_zerop(%union.tree_node* %9)
  %tobool17 = icmp ne i32 %call, 0
  br i1 %tobool17, label %if.then, label %if.end.21

if.then:                                          ; preds = %land.lhs.true.16
  %10 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8
  %replacement_value = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %10, i32 0, i32 12
  %11 = load %union.tree_node*, %union.tree_node** %replacement_value, align 8
  %tobool18 = icmp ne %union.tree_node* %11, null
  br i1 %tobool18, label %if.then.19, label %if.end

if.then.19:                                       ; preds = %if.then
  call void @error_init(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.128, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then.19, %if.then
  %12 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %13 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8
  %replacement_value20 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %13, i32 0, i32 12
  store %union.tree_node* %12, %union.tree_node** %replacement_value20, align 8
  br label %return

if.end.21:                                        ; preds = %land.lhs.true.16, %land.lhs.true.9, %land.lhs.true.3, %land.lhs.true, %land.end
  %14 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8
  %replacement_value22 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %14, i32 0, i32 12
  %15 = load %union.tree_node*, %union.tree_node** %replacement_value22, align 8
  %cmp23 = icmp ne %union.tree_node* %15, null
  br i1 %cmp23, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %if.end.21
  call void @error_init(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.129, i32 0, i32 0))
  br label %return

if.end.25:                                        ; preds = %if.end.21
  %16 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %cmp26 = icmp eq %union.tree_node* %16, null
  br i1 %cmp26, label %if.then.27, label %if.end.28

if.then.27:                                       ; preds = %if.end.25
  br label %return

if.end.28:                                        ; preds = %if.end.25
  br label %while.cond

while.cond:                                       ; preds = %if.end.58, %if.end.28
  %17 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8
  %implicit = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %17, i32 0, i32 16
  %18 = load i8, i8* %implicit, align 1
  %tobool29 = icmp ne i8 %18, 0
  br i1 %tobool29, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %19 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common30 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %code31 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common30, i32 0, i32 2
  %bf.load32 = load i32, i32* %code31, align 8
  %bf.clear33 = and i32 %bf.load32, 255
  %cmp34 = icmp eq i32 %bf.clear33, 20
  br i1 %cmp34, label %land.lhs.true.40, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body
  %20 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common35 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %code36 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common35, i32 0, i32 2
  %bf.load37 = load i32, i32* %code36, align 8
  %bf.clear38 = and i32 %bf.load37, 255
  %cmp39 = icmp eq i32 %bf.clear38, 21
  br i1 %cmp39, label %land.lhs.true.40, label %if.else

land.lhs.true.40:                                 ; preds = %lor.lhs.false, %while.body
  %21 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %cmp41 = icmp eq %union.tree_node* %21, null
  br i1 %cmp41, label %if.then.42, label %if.else

if.then.42:                                       ; preds = %land.lhs.true.40
  %call43 = call %union.tree_node* @pop_init_level(i32 1)
  call void @process_init_element(%union.tree_node* %call43)
  br label %if.end.58

if.else:                                          ; preds = %land.lhs.true.40, %lor.lhs.false
  %22 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common44 = bitcast %union.tree_node* %22 to %struct.tree_common*
  %code45 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common44, i32 0, i32 2
  %bf.load46 = load i32, i32* %code45, align 8
  %bf.clear47 = and i32 %bf.load46, 255
  %cmp48 = icmp eq i32 %bf.clear47, 18
  br i1 %cmp48, label %land.lhs.true.49, label %if.else.56

land.lhs.true.49:                                 ; preds = %if.else
  %23 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8
  %cmp50 = icmp eq %union.tree_node* %23, null
  br i1 %cmp50, label %if.then.54, label %lor.lhs.false.51

lor.lhs.false.51:                                 ; preds = %land.lhs.true.49
  %24 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8
  %25 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8
  %call52 = call i32 @tree_int_cst_lt(%union.tree_node* %24, %union.tree_node* %25)
  %tobool53 = icmp ne i32 %call52, 0
  br i1 %tobool53, label %if.then.54, label %if.else.56

if.then.54:                                       ; preds = %lor.lhs.false.51, %land.lhs.true.49
  %call55 = call %union.tree_node* @pop_init_level(i32 1)
  call void @process_init_element(%union.tree_node* %call55)
  br label %if.end.57

if.else.56:                                       ; preds = %lor.lhs.false.51, %if.else
  br label %while.end

if.end.57:                                        ; preds = %if.then.54
  br label %if.end.58

if.end.58:                                        ; preds = %if.end.57, %if.then.42
  br label %while.cond

while.end:                                        ; preds = %if.else.56, %while.cond
  %26 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** @constructor_range_stack, align 8
  %tobool59 = icmp ne %struct.constructor_range_stack* %26, null
  br i1 %tobool59, label %if.then.60, label %if.end.73

if.then.60:                                       ; preds = %while.end
  %27 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common61 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %code62 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common61, i32 0, i32 2
  %bf.load63 = load i32, i32* %code62, align 8
  %bf.clear64 = and i32 %bf.load63, 255
  %cmp65 = icmp ne i32 %bf.clear64, 170
  br i1 %cmp65, label %if.then.70, label %lor.lhs.false.66

lor.lhs.false.66:                                 ; preds = %if.then.60
  %28 = load i32, i32* @require_constant_value, align 4
  %tobool67 = icmp ne i32 %28, 0
  br i1 %tobool67, label %lor.lhs.false.68, label %if.then.70

lor.lhs.false.68:                                 ; preds = %lor.lhs.false.66
  %29 = load i32, i32* @flag_isoc99, align 4
  %tobool69 = icmp ne i32 %29, 0
  br i1 %tobool69, label %if.then.70, label %if.end.72

if.then.70:                                       ; preds = %lor.lhs.false.68, %lor.lhs.false.66, %if.then.60
  %30 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %call71 = call %union.tree_node* @save_expr(%union.tree_node* %30)
  store %union.tree_node* %call71, %union.tree_node** %value.addr, align 8
  br label %if.end.72

if.end.72:                                        ; preds = %if.then.70, %lor.lhs.false.68
  br label %if.end.73

if.end.73:                                        ; preds = %if.end.72, %while.end
  br label %while.body.75

while.body.75:                                    ; preds = %if.end.73, %if.then.138, %if.then.263, %if.then.323, %if.end.447
  %31 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common76 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %code77 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common76, i32 0, i32 2
  %bf.load78 = load i32, i32* %code77, align 8
  %bf.clear79 = and i32 %bf.load78, 255
  %cmp80 = icmp eq i32 %bf.clear79, 20
  br i1 %cmp80, label %if.then.81, label %if.else.193

if.then.81:                                       ; preds = %while.body.75
  %32 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %cmp82 = icmp eq %union.tree_node* %32, null
  br i1 %cmp82, label %if.then.83, label %if.end.84

if.then.83:                                       ; preds = %if.then.81
  call void @pedwarn_init(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.129, i32 0, i32 0))
  br label %while.end.449

if.end.84:                                        ; preds = %if.then.81
  %33 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %common85 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %type86 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common85, i32 0, i32 1
  %34 = load %union.tree_node*, %union.tree_node** %type86, align 8
  store %union.tree_node* %34, %union.tree_node** %fieldtype, align 8
  %35 = load %union.tree_node*, %union.tree_node** %fieldtype, align 8
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp87 = icmp ne %union.tree_node* %35, %36
  br i1 %cmp87, label %if.then.88, label %if.end.90

if.then.88:                                       ; preds = %if.end.84
  %37 = load %union.tree_node*, %union.tree_node** %fieldtype, align 8
  %type89 = bitcast %union.tree_node* %37 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type89, i32 0, i32 15
  %38 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  store %union.tree_node* %38, %union.tree_node** %fieldtype, align 8
  br label %if.end.90

if.end.90:                                        ; preds = %if.then.88, %if.end.84
  %39 = load %union.tree_node*, %union.tree_node** %fieldtype, align 8
  %common91 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %code92 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common91, i32 0, i32 2
  %bf.load93 = load i32, i32* %code92, align 8
  %bf.clear94 = and i32 %bf.load93, 255
  store i32 %bf.clear94, i32* %fieldcode, align 4
  %40 = load i32, i32* %fieldcode, align 4
  %cmp95 = icmp eq i32 %40, 18
  br i1 %cmp95, label %land.lhs.true.96, label %if.end.105

land.lhs.true.96:                                 ; preds = %if.end.90
  %41 = load i32, i32* @require_constant_value, align 4
  %tobool97 = icmp ne i32 %41, 0
  br i1 %tobool97, label %if.end.105, label %land.lhs.true.98

land.lhs.true.98:                                 ; preds = %land.lhs.true.96
  %42 = load %union.tree_node*, %union.tree_node** %fieldtype, align 8
  %type99 = bitcast %union.tree_node* %42 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type99, i32 0, i32 2
  %43 = load %union.tree_node*, %union.tree_node** %size, align 8
  %cmp100 = icmp eq %union.tree_node* %43, null
  br i1 %cmp100, label %land.lhs.true.101, label %if.end.105

land.lhs.true.101:                                ; preds = %land.lhs.true.98
  %44 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %common102 = bitcast %union.tree_node* %44 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common102, i32 0, i32 0
  %45 = load %union.tree_node*, %union.tree_node** %chain, align 8
  %cmp103 = icmp eq %union.tree_node* %45, null
  br i1 %cmp103, label %if.then.104, label %if.end.105

if.then.104:                                      ; preds = %land.lhs.true.101
  call void @error_init(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.130, i32 0, i32 0))
  br label %while.end.449

if.end.105:                                       ; preds = %land.lhs.true.101, %land.lhs.true.98, %land.lhs.true.96, %if.end.90
  %46 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %cmp106 = icmp ne %union.tree_node* %46, null
  br i1 %cmp106, label %land.lhs.true.107, label %if.else.120

land.lhs.true.107:                                ; preds = %if.end.105
  %47 = load i32, i32* %fieldcode, align 4
  %cmp108 = icmp eq i32 %47, 18
  br i1 %cmp108, label %land.lhs.true.109, label %if.else.120

land.lhs.true.109:                                ; preds = %land.lhs.true.107
  %48 = load %union.tree_node*, %union.tree_node** %fieldtype, align 8
  %common110 = bitcast %union.tree_node* %48 to %struct.tree_common*
  %type111 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common110, i32 0, i32 1
  %49 = load %union.tree_node*, %union.tree_node** %type111, align 8
  %common112 = bitcast %union.tree_node* %49 to %struct.tree_common*
  %code113 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common112, i32 0, i32 2
  %bf.load114 = load i32, i32* %code113, align 8
  %bf.clear115 = and i32 %bf.load114, 255
  %cmp116 = icmp eq i32 %bf.clear115, 6
  br i1 %cmp116, label %land.lhs.true.117, label %if.else.120

land.lhs.true.117:                                ; preds = %land.lhs.true.109
  %50 = load i32, i32* %string_flag, align 4
  %tobool118 = icmp ne i32 %50, 0
  br i1 %tobool118, label %if.then.119, label %if.else.120

if.then.119:                                      ; preds = %land.lhs.true.117
  %51 = load %union.tree_node*, %union.tree_node** %orig_value, align 8
  store %union.tree_node* %51, %union.tree_node** %value.addr, align 8
  br label %if.end.140

if.else.120:                                      ; preds = %land.lhs.true.117, %land.lhs.true.109, %land.lhs.true.107, %if.end.105
  %52 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %cmp121 = icmp ne %union.tree_node* %52, null
  br i1 %cmp121, label %land.lhs.true.122, label %if.end.139

land.lhs.true.122:                                ; preds = %if.else.120
  %53 = load i32, i32* @constructor_no_implicit, align 4
  %tobool123 = icmp ne i32 %53, 0
  br i1 %tobool123, label %if.end.139, label %land.lhs.true.124

land.lhs.true.124:                                ; preds = %land.lhs.true.122
  %54 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %55 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp125 = icmp ne %union.tree_node* %54, %55
  br i1 %cmp125, label %land.lhs.true.126, label %if.end.139

land.lhs.true.126:                                ; preds = %land.lhs.true.124
  %56 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common127 = bitcast %union.tree_node* %56 to %struct.tree_common*
  %type128 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common127, i32 0, i32 1
  %57 = load %union.tree_node*, %union.tree_node** %type128, align 8
  %type129 = bitcast %union.tree_node* %57 to %struct.tree_type*
  %main_variant130 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type129, i32 0, i32 15
  %58 = load %union.tree_node*, %union.tree_node** %main_variant130, align 8
  %59 = load %union.tree_node*, %union.tree_node** %fieldtype, align 8
  %cmp131 = icmp ne %union.tree_node* %58, %59
  br i1 %cmp131, label %land.lhs.true.132, label %if.end.139

land.lhs.true.132:                                ; preds = %land.lhs.true.126
  %60 = load i32, i32* %fieldcode, align 4
  %cmp133 = icmp eq i32 %60, 20
  br i1 %cmp133, label %if.then.138, label %lor.lhs.false.134

lor.lhs.false.134:                                ; preds = %land.lhs.true.132
  %61 = load i32, i32* %fieldcode, align 4
  %cmp135 = icmp eq i32 %61, 18
  br i1 %cmp135, label %if.then.138, label %lor.lhs.false.136

lor.lhs.false.136:                                ; preds = %lor.lhs.false.134
  %62 = load i32, i32* %fieldcode, align 4
  %cmp137 = icmp eq i32 %62, 21
  br i1 %cmp137, label %if.then.138, label %if.end.139

if.then.138:                                      ; preds = %lor.lhs.false.136, %lor.lhs.false.134, %land.lhs.true.132
  call void @push_init_level(i32 1)
  br label %while.body.75

if.end.139:                                       ; preds = %lor.lhs.false.136, %land.lhs.true.126, %land.lhs.true.124, %land.lhs.true.122, %if.else.120
  br label %if.end.140

if.end.140:                                       ; preds = %if.end.139, %if.then.119
  %63 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %tobool141 = icmp ne %union.tree_node* %63, null
  br i1 %tobool141, label %if.then.142, label %if.else.143

if.then.142:                                      ; preds = %if.end.140
  %64 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  call void @push_member_name(%union.tree_node* %64)
  %65 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %66 = load %union.tree_node*, %union.tree_node** %fieldtype, align 8
  %67 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  call void @output_init_element(%union.tree_node* %65, %union.tree_node* %66, %union.tree_node* %67, i32 1)
  %68 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  %69 = load i32, i32* @constructor_depth, align 4
  %idx.ext = sext i32 %69 to i64
  %add.ptr = getelementptr inbounds %struct.spelling, %struct.spelling* %68, i64 %idx.ext
  store %struct.spelling* %add.ptr, %struct.spelling** @spelling, align 8
  br label %if.end.170

if.else.143:                                      ; preds = %if.end.140
  %70 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %decl = bitcast %union.tree_node* %70 to %struct.tree_decl*
  %size144 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 4
  %71 = load %union.tree_node*, %union.tree_node** %size144, align 8
  %tobool145 = icmp ne %union.tree_node* %71, null
  br i1 %tobool145, label %if.then.146, label %if.end.151

if.then.146:                                      ; preds = %if.else.143
  %72 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %call147 = call %union.tree_node* @bit_position(%union.tree_node* %72)
  %73 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %decl148 = bitcast %union.tree_node* %73 to %struct.tree_decl*
  %size149 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl148, i32 0, i32 4
  %74 = load %union.tree_node*, %union.tree_node** %size149, align 8
  %call150 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %call147, %union.tree_node* %74)
  store %union.tree_node* %call150, %union.tree_node** @constructor_bit_index, align 8
  br label %if.end.151

if.end.151:                                       ; preds = %if.then.146, %if.else.143
  %75 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %common152 = bitcast %union.tree_node* %75 to %struct.tree_common*
  %chain153 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common152, i32 0, i32 0
  %76 = load %union.tree_node*, %union.tree_node** %chain153, align 8
  store %union.tree_node* %76, %union.tree_node** @constructor_unfilled_fields, align 8
  br label %while.cond.154

while.cond.154:                                   ; preds = %while.body.166, %if.end.151
  %77 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %cmp155 = icmp ne %union.tree_node* %77, null
  br i1 %cmp155, label %land.lhs.true.156, label %land.end.164

land.lhs.true.156:                                ; preds = %while.cond.154
  %78 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %decl157 = bitcast %union.tree_node* %78 to %struct.tree_decl*
  %lang_flag_4 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl157, i32 0, i32 5
  %79 = bitcast i48* %lang_flag_4 to i64*
  %bf.load158 = load i64, i64* %79, align 8
  %bf.lshr = lshr i64 %bf.load158, 41
  %bf.clear159 = and i64 %bf.lshr, 1
  %bf.cast = trunc i64 %bf.clear159 to i32
  %cmp160 = icmp eq i32 %bf.cast, 1
  br i1 %cmp160, label %land.rhs.161, label %land.end.164

land.rhs.161:                                     ; preds = %land.lhs.true.156
  %80 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %decl162 = bitcast %union.tree_node* %80 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl162, i32 0, i32 8
  %81 = load %union.tree_node*, %union.tree_node** %name, align 8
  %cmp163 = icmp eq %union.tree_node* %81, null
  br label %land.end.164

land.end.164:                                     ; preds = %land.rhs.161, %land.lhs.true.156, %while.cond.154
  %82 = phi i1 [ false, %land.lhs.true.156 ], [ false, %while.cond.154 ], [ %cmp163, %land.rhs.161 ]
  br i1 %82, label %while.body.166, label %while.end.169

while.body.166:                                   ; preds = %land.end.164
  %83 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %common167 = bitcast %union.tree_node* %83 to %struct.tree_common*
  %chain168 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common167, i32 0, i32 0
  %84 = load %union.tree_node*, %union.tree_node** %chain168, align 8
  store %union.tree_node* %84, %union.tree_node** @constructor_unfilled_fields, align 8
  br label %while.cond.154

while.end.169:                                    ; preds = %land.end.164
  br label %if.end.170

if.end.170:                                       ; preds = %while.end.169, %if.then.142
  %85 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %common171 = bitcast %union.tree_node* %85 to %struct.tree_common*
  %chain172 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common171, i32 0, i32 0
  %86 = load %union.tree_node*, %union.tree_node** %chain172, align 8
  store %union.tree_node* %86, %union.tree_node** @constructor_fields, align 8
  br label %while.cond.173

while.cond.173:                                   ; preds = %while.body.189, %if.end.170
  %87 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %cmp174 = icmp ne %union.tree_node* %87, null
  br i1 %cmp174, label %land.lhs.true.175, label %land.end.187

land.lhs.true.175:                                ; preds = %while.cond.173
  %88 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %decl176 = bitcast %union.tree_node* %88 to %struct.tree_decl*
  %lang_flag_4177 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl176, i32 0, i32 5
  %89 = bitcast i48* %lang_flag_4177 to i64*
  %bf.load178 = load i64, i64* %89, align 8
  %bf.lshr179 = lshr i64 %bf.load178, 41
  %bf.clear180 = and i64 %bf.lshr179, 1
  %bf.cast181 = trunc i64 %bf.clear180 to i32
  %cmp182 = icmp eq i32 %bf.cast181, 1
  br i1 %cmp182, label %land.rhs.183, label %land.end.187

land.rhs.183:                                     ; preds = %land.lhs.true.175
  %90 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %decl184 = bitcast %union.tree_node* %90 to %struct.tree_decl*
  %name185 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl184, i32 0, i32 8
  %91 = load %union.tree_node*, %union.tree_node** %name185, align 8
  %cmp186 = icmp eq %union.tree_node* %91, null
  br label %land.end.187

land.end.187:                                     ; preds = %land.rhs.183, %land.lhs.true.175, %while.cond.173
  %92 = phi i1 [ false, %land.lhs.true.175 ], [ false, %while.cond.173 ], [ %cmp186, %land.rhs.183 ]
  br i1 %92, label %while.body.189, label %while.end.192

while.body.189:                                   ; preds = %land.end.187
  %93 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %common190 = bitcast %union.tree_node* %93 to %struct.tree_common*
  %chain191 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common190, i32 0, i32 0
  %94 = load %union.tree_node*, %union.tree_node** %chain191, align 8
  store %union.tree_node* %94, %union.tree_node** @constructor_fields, align 8
  br label %while.cond.173

while.end.192:                                    ; preds = %land.end.187
  br label %if.end.381

if.else.193:                                      ; preds = %while.body.75
  %95 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common194 = bitcast %union.tree_node* %95 to %struct.tree_common*
  %code195 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common194, i32 0, i32 2
  %bf.load196 = load i32, i32* %code195, align 8
  %bf.clear197 = and i32 %bf.load196, 255
  %cmp198 = icmp eq i32 %bf.clear197, 21
  br i1 %cmp198, label %if.then.199, label %if.else.276

if.then.199:                                      ; preds = %if.else.193
  %96 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %cmp202 = icmp eq %union.tree_node* %96, null
  br i1 %cmp202, label %if.then.203, label %if.end.204

if.then.203:                                      ; preds = %if.then.199
  call void @pedwarn_init(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.131, i32 0, i32 0))
  br label %while.end.449

if.end.204:                                       ; preds = %if.then.199
  %97 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %common205 = bitcast %union.tree_node* %97 to %struct.tree_common*
  %type206 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common205, i32 0, i32 1
  %98 = load %union.tree_node*, %union.tree_node** %type206, align 8
  store %union.tree_node* %98, %union.tree_node** %fieldtype200, align 8
  %99 = load %union.tree_node*, %union.tree_node** %fieldtype200, align 8
  %100 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp207 = icmp ne %union.tree_node* %99, %100
  br i1 %cmp207, label %if.then.208, label %if.end.211

if.then.208:                                      ; preds = %if.end.204
  %101 = load %union.tree_node*, %union.tree_node** %fieldtype200, align 8
  %type209 = bitcast %union.tree_node* %101 to %struct.tree_type*
  %main_variant210 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type209, i32 0, i32 15
  %102 = load %union.tree_node*, %union.tree_node** %main_variant210, align 8
  store %union.tree_node* %102, %union.tree_node** %fieldtype200, align 8
  br label %if.end.211

if.end.211:                                       ; preds = %if.then.208, %if.end.204
  %103 = load %union.tree_node*, %union.tree_node** %fieldtype200, align 8
  %common212 = bitcast %union.tree_node* %103 to %struct.tree_common*
  %code213 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common212, i32 0, i32 2
  %bf.load214 = load i32, i32* %code213, align 8
  %bf.clear215 = and i32 %bf.load214, 255
  store i32 %bf.clear215, i32* %fieldcode201, align 4
  %104 = load i32, i32* @warn_traditional, align 4
  %tobool216 = icmp ne i32 %104, 0
  br i1 %tobool216, label %land.lhs.true.217, label %if.end.230

land.lhs.true.217:                                ; preds = %if.end.211
  %105 = load i32, i32* @in_system_header, align 4
  %tobool218 = icmp ne i32 %105, 0
  br i1 %tobool218, label %if.end.230, label %land.lhs.true.219

land.lhs.true.219:                                ; preds = %land.lhs.true.217
  %106 = load i32, i32* @constructor_designated, align 4
  %tobool220 = icmp ne i32 %106, 0
  br i1 %tobool220, label %if.end.230, label %land.lhs.true.221

land.lhs.true.221:                                ; preds = %land.lhs.true.219
  %107 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %tobool222 = icmp ne %union.tree_node* %107, null
  br i1 %tobool222, label %land.lhs.true.223, label %if.then.229

land.lhs.true.223:                                ; preds = %land.lhs.true.221
  %108 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %call224 = call i32 @integer_zerop(%union.tree_node* %108)
  %tobool225 = icmp ne i32 %call224, 0
  br i1 %tobool225, label %if.end.230, label %lor.lhs.false.226

lor.lhs.false.226:                                ; preds = %land.lhs.true.223
  %109 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %call227 = call i32 @real_zerop(%union.tree_node* %109)
  %tobool228 = icmp ne i32 %call227, 0
  br i1 %tobool228, label %if.end.230, label %if.then.229

if.then.229:                                      ; preds = %lor.lhs.false.226, %land.lhs.true.221
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.132, i32 0, i32 0))
  br label %if.end.230

if.end.230:                                       ; preds = %if.then.229, %lor.lhs.false.226, %land.lhs.true.223, %land.lhs.true.219, %land.lhs.true.217, %if.end.211
  %110 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %cmp231 = icmp ne %union.tree_node* %110, null
  br i1 %cmp231, label %land.lhs.true.232, label %if.else.245

land.lhs.true.232:                                ; preds = %if.end.230
  %111 = load i32, i32* %fieldcode201, align 4
  %cmp233 = icmp eq i32 %111, 18
  br i1 %cmp233, label %land.lhs.true.234, label %if.else.245

land.lhs.true.234:                                ; preds = %land.lhs.true.232
  %112 = load %union.tree_node*, %union.tree_node** %fieldtype200, align 8
  %common235 = bitcast %union.tree_node* %112 to %struct.tree_common*
  %type236 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common235, i32 0, i32 1
  %113 = load %union.tree_node*, %union.tree_node** %type236, align 8
  %common237 = bitcast %union.tree_node* %113 to %struct.tree_common*
  %code238 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common237, i32 0, i32 2
  %bf.load239 = load i32, i32* %code238, align 8
  %bf.clear240 = and i32 %bf.load239, 255
  %cmp241 = icmp eq i32 %bf.clear240, 6
  br i1 %cmp241, label %land.lhs.true.242, label %if.else.245

land.lhs.true.242:                                ; preds = %land.lhs.true.234
  %114 = load i32, i32* %string_flag, align 4
  %tobool243 = icmp ne i32 %114, 0
  br i1 %tobool243, label %if.then.244, label %if.else.245

if.then.244:                                      ; preds = %land.lhs.true.242
  %115 = load %union.tree_node*, %union.tree_node** %orig_value, align 8
  store %union.tree_node* %115, %union.tree_node** %value.addr, align 8
  br label %if.end.265

if.else.245:                                      ; preds = %land.lhs.true.242, %land.lhs.true.234, %land.lhs.true.232, %if.end.230
  %116 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %cmp246 = icmp ne %union.tree_node* %116, null
  br i1 %cmp246, label %land.lhs.true.247, label %if.end.264

land.lhs.true.247:                                ; preds = %if.else.245
  %117 = load i32, i32* @constructor_no_implicit, align 4
  %tobool248 = icmp ne i32 %117, 0
  br i1 %tobool248, label %if.end.264, label %land.lhs.true.249

land.lhs.true.249:                                ; preds = %land.lhs.true.247
  %118 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %119 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp250 = icmp ne %union.tree_node* %118, %119
  br i1 %cmp250, label %land.lhs.true.251, label %if.end.264

land.lhs.true.251:                                ; preds = %land.lhs.true.249
  %120 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common252 = bitcast %union.tree_node* %120 to %struct.tree_common*
  %type253 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common252, i32 0, i32 1
  %121 = load %union.tree_node*, %union.tree_node** %type253, align 8
  %type254 = bitcast %union.tree_node* %121 to %struct.tree_type*
  %main_variant255 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type254, i32 0, i32 15
  %122 = load %union.tree_node*, %union.tree_node** %main_variant255, align 8
  %123 = load %union.tree_node*, %union.tree_node** %fieldtype200, align 8
  %cmp256 = icmp ne %union.tree_node* %122, %123
  br i1 %cmp256, label %land.lhs.true.257, label %if.end.264

land.lhs.true.257:                                ; preds = %land.lhs.true.251
  %124 = load i32, i32* %fieldcode201, align 4
  %cmp258 = icmp eq i32 %124, 20
  br i1 %cmp258, label %if.then.263, label %lor.lhs.false.259

lor.lhs.false.259:                                ; preds = %land.lhs.true.257
  %125 = load i32, i32* %fieldcode201, align 4
  %cmp260 = icmp eq i32 %125, 18
  br i1 %cmp260, label %if.then.263, label %lor.lhs.false.261

lor.lhs.false.261:                                ; preds = %lor.lhs.false.259
  %126 = load i32, i32* %fieldcode201, align 4
  %cmp262 = icmp eq i32 %126, 21
  br i1 %cmp262, label %if.then.263, label %if.end.264

if.then.263:                                      ; preds = %lor.lhs.false.261, %lor.lhs.false.259, %land.lhs.true.257
  call void @push_init_level(i32 1)
  br label %while.body.75

if.end.264:                                       ; preds = %lor.lhs.false.261, %land.lhs.true.251, %land.lhs.true.249, %land.lhs.true.247, %if.else.245
  br label %if.end.265

if.end.265:                                       ; preds = %if.end.264, %if.then.244
  %127 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %tobool266 = icmp ne %union.tree_node* %127, null
  br i1 %tobool266, label %if.then.267, label %if.else.270

if.then.267:                                      ; preds = %if.end.265
  %128 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  call void @push_member_name(%union.tree_node* %128)
  %129 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %130 = load %union.tree_node*, %union.tree_node** %fieldtype200, align 8
  %131 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  call void @output_init_element(%union.tree_node* %129, %union.tree_node* %130, %union.tree_node* %131, i32 1)
  %132 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  %133 = load i32, i32* @constructor_depth, align 4
  %idx.ext268 = sext i32 %133 to i64
  %add.ptr269 = getelementptr inbounds %struct.spelling, %struct.spelling* %132, i64 %idx.ext268
  store %struct.spelling* %add.ptr269, %struct.spelling** @spelling, align 8
  br label %if.end.275

if.else.270:                                      ; preds = %if.end.265
  %134 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %decl271 = bitcast %union.tree_node* %134 to %struct.tree_decl*
  %size272 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl271, i32 0, i32 4
  %135 = load %union.tree_node*, %union.tree_node** %size272, align 8
  store %union.tree_node* %135, %union.tree_node** @constructor_bit_index, align 8
  %136 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %common273 = bitcast %union.tree_node* %136 to %struct.tree_common*
  %chain274 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common273, i32 0, i32 0
  %137 = load %union.tree_node*, %union.tree_node** %chain274, align 8
  store %union.tree_node* %137, %union.tree_node** @constructor_unfilled_fields, align 8
  br label %if.end.275

if.end.275:                                       ; preds = %if.else.270, %if.then.267
  store %union.tree_node* null, %union.tree_node** @constructor_fields, align 8
  br label %if.end.380

if.else.276:                                      ; preds = %if.else.193
  %138 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common277 = bitcast %union.tree_node* %138 to %struct.tree_common*
  %code278 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common277, i32 0, i32 2
  %bf.load279 = load i32, i32* %code278, align 8
  %bf.clear280 = and i32 %bf.load279, 255
  %cmp281 = icmp eq i32 %bf.clear280, 18
  br i1 %cmp281, label %if.then.282, label %if.else.345

if.then.282:                                      ; preds = %if.else.276
  %139 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common283 = bitcast %union.tree_node* %139 to %struct.tree_common*
  %type284 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common283, i32 0, i32 1
  %140 = load %union.tree_node*, %union.tree_node** %type284, align 8
  %type285 = bitcast %union.tree_node* %140 to %struct.tree_type*
  %main_variant286 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type285, i32 0, i32 15
  %141 = load %union.tree_node*, %union.tree_node** %main_variant286, align 8
  store %union.tree_node* %141, %union.tree_node** %elttype, align 8
  %142 = load %union.tree_node*, %union.tree_node** %elttype, align 8
  %common287 = bitcast %union.tree_node* %142 to %struct.tree_common*
  %code288 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common287, i32 0, i32 2
  %bf.load289 = load i32, i32* %code288, align 8
  %bf.clear290 = and i32 %bf.load289, 255
  store i32 %bf.clear290, i32* %eltcode, align 4
  %143 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %cmp291 = icmp ne %union.tree_node* %143, null
  br i1 %cmp291, label %land.lhs.true.292, label %if.else.305

land.lhs.true.292:                                ; preds = %if.then.282
  %144 = load i32, i32* %eltcode, align 4
  %cmp293 = icmp eq i32 %144, 18
  br i1 %cmp293, label %land.lhs.true.294, label %if.else.305

land.lhs.true.294:                                ; preds = %land.lhs.true.292
  %145 = load %union.tree_node*, %union.tree_node** %elttype, align 8
  %common295 = bitcast %union.tree_node* %145 to %struct.tree_common*
  %type296 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common295, i32 0, i32 1
  %146 = load %union.tree_node*, %union.tree_node** %type296, align 8
  %common297 = bitcast %union.tree_node* %146 to %struct.tree_common*
  %code298 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common297, i32 0, i32 2
  %bf.load299 = load i32, i32* %code298, align 8
  %bf.clear300 = and i32 %bf.load299, 255
  %cmp301 = icmp eq i32 %bf.clear300, 6
  br i1 %cmp301, label %land.lhs.true.302, label %if.else.305

land.lhs.true.302:                                ; preds = %land.lhs.true.294
  %147 = load i32, i32* %string_flag, align 4
  %tobool303 = icmp ne i32 %147, 0
  br i1 %tobool303, label %if.then.304, label %if.else.305

if.then.304:                                      ; preds = %land.lhs.true.302
  %148 = load %union.tree_node*, %union.tree_node** %orig_value, align 8
  store %union.tree_node* %148, %union.tree_node** %value.addr, align 8
  br label %if.end.325

if.else.305:                                      ; preds = %land.lhs.true.302, %land.lhs.true.294, %land.lhs.true.292, %if.then.282
  %149 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %cmp306 = icmp ne %union.tree_node* %149, null
  br i1 %cmp306, label %land.lhs.true.307, label %if.end.324

land.lhs.true.307:                                ; preds = %if.else.305
  %150 = load i32, i32* @constructor_no_implicit, align 4
  %tobool308 = icmp ne i32 %150, 0
  br i1 %tobool308, label %if.end.324, label %land.lhs.true.309

land.lhs.true.309:                                ; preds = %land.lhs.true.307
  %151 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %152 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp310 = icmp ne %union.tree_node* %151, %152
  br i1 %cmp310, label %land.lhs.true.311, label %if.end.324

land.lhs.true.311:                                ; preds = %land.lhs.true.309
  %153 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common312 = bitcast %union.tree_node* %153 to %struct.tree_common*
  %type313 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common312, i32 0, i32 1
  %154 = load %union.tree_node*, %union.tree_node** %type313, align 8
  %type314 = bitcast %union.tree_node* %154 to %struct.tree_type*
  %main_variant315 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type314, i32 0, i32 15
  %155 = load %union.tree_node*, %union.tree_node** %main_variant315, align 8
  %156 = load %union.tree_node*, %union.tree_node** %elttype, align 8
  %cmp316 = icmp ne %union.tree_node* %155, %156
  br i1 %cmp316, label %land.lhs.true.317, label %if.end.324

land.lhs.true.317:                                ; preds = %land.lhs.true.311
  %157 = load i32, i32* %eltcode, align 4
  %cmp318 = icmp eq i32 %157, 20
  br i1 %cmp318, label %if.then.323, label %lor.lhs.false.319

lor.lhs.false.319:                                ; preds = %land.lhs.true.317
  %158 = load i32, i32* %eltcode, align 4
  %cmp320 = icmp eq i32 %158, 18
  br i1 %cmp320, label %if.then.323, label %lor.lhs.false.321

lor.lhs.false.321:                                ; preds = %lor.lhs.false.319
  %159 = load i32, i32* %eltcode, align 4
  %cmp322 = icmp eq i32 %159, 21
  br i1 %cmp322, label %if.then.323, label %if.end.324

if.then.323:                                      ; preds = %lor.lhs.false.321, %lor.lhs.false.319, %land.lhs.true.317
  call void @push_init_level(i32 1)
  br label %while.body.75

if.end.324:                                       ; preds = %lor.lhs.false.321, %land.lhs.true.311, %land.lhs.true.309, %land.lhs.true.307, %if.else.305
  br label %if.end.325

if.end.325:                                       ; preds = %if.end.324, %if.then.304
  %160 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8
  %cmp326 = icmp ne %union.tree_node* %160, null
  br i1 %cmp326, label %land.lhs.true.327, label %if.end.334

land.lhs.true.327:                                ; preds = %if.end.325
  %161 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8
  %162 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8
  %call328 = call i32 @tree_int_cst_lt(%union.tree_node* %161, %union.tree_node* %162)
  %tobool329 = icmp ne i32 %call328, 0
  br i1 %tobool329, label %if.then.333, label %lor.lhs.false.330

lor.lhs.false.330:                                ; preds = %land.lhs.true.327
  %163 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8
  %call331 = call i32 @integer_all_onesp(%union.tree_node* %163)
  %tobool332 = icmp ne i32 %call331, 0
  br i1 %tobool332, label %if.then.333, label %if.end.334

if.then.333:                                      ; preds = %lor.lhs.false.330, %land.lhs.true.327
  call void @pedwarn_init(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.133, i32 0, i32 0))
  br label %while.end.449

if.end.334:                                       ; preds = %lor.lhs.false.330, %if.end.325
  %164 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %tobool335 = icmp ne %union.tree_node* %164, null
  br i1 %tobool335, label %if.then.336, label %if.end.340

if.then.336:                                      ; preds = %if.end.334
  %165 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8
  %call337 = call i64 @tree_low_cst(%union.tree_node* %165, i32 0)
  %conv = trunc i64 %call337 to i32
  call void @push_array_bounds(i32 %conv)
  %166 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %167 = load %union.tree_node*, %union.tree_node** %elttype, align 8
  %168 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8
  call void @output_init_element(%union.tree_node* %166, %union.tree_node* %167, %union.tree_node* %168, i32 1)
  %169 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  %170 = load i32, i32* @constructor_depth, align 4
  %idx.ext338 = sext i32 %170 to i64
  %add.ptr339 = getelementptr inbounds %struct.spelling, %struct.spelling* %169, i64 %idx.ext338
  store %struct.spelling* %add.ptr339, %struct.spelling** @spelling, align 8
  br label %if.end.340

if.end.340:                                       ; preds = %if.then.336, %if.end.334
  %171 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8
  %172 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 18), align 8
  %call341 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %171, %union.tree_node* %172)
  store %union.tree_node* %call341, %union.tree_node** @constructor_index, align 8
  %173 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %tobool342 = icmp ne %union.tree_node* %173, null
  br i1 %tobool342, label %if.end.344, label %if.then.343

if.then.343:                                      ; preds = %if.end.340
  %174 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8
  store %union.tree_node* %174, %union.tree_node** @constructor_unfilled_index, align 8
  br label %if.end.344

if.end.344:                                       ; preds = %if.then.343, %if.end.340
  br label %if.end.379

if.else.345:                                      ; preds = %if.else.276
  %175 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common346 = bitcast %union.tree_node* %175 to %struct.tree_common*
  %code347 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common346, i32 0, i32 2
  %bf.load348 = load i32, i32* %code347, align 8
  %bf.clear349 = and i32 %bf.load348, 255
  %cmp350 = icmp eq i32 %bf.clear349, 9
  br i1 %cmp350, label %if.then.352, label %if.else.369

if.then.352:                                      ; preds = %if.else.345
  %176 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common354 = bitcast %union.tree_node* %176 to %struct.tree_common*
  %type355 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common354, i32 0, i32 1
  %177 = load %union.tree_node*, %union.tree_node** %type355, align 8
  %type356 = bitcast %union.tree_node* %177 to %struct.tree_type*
  %main_variant357 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type356, i32 0, i32 15
  %178 = load %union.tree_node*, %union.tree_node** %main_variant357, align 8
  store %union.tree_node* %178, %union.tree_node** %elttype353, align 8
  %179 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8
  %180 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8
  %call358 = call i32 @tree_int_cst_lt(%union.tree_node* %179, %union.tree_node* %180)
  %tobool359 = icmp ne i32 %call358, 0
  br i1 %tobool359, label %if.then.360, label %if.end.361

if.then.360:                                      ; preds = %if.then.352
  call void @pedwarn_init(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.134, i32 0, i32 0))
  br label %while.end.449

if.end.361:                                       ; preds = %if.then.352
  %181 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %tobool362 = icmp ne %union.tree_node* %181, null
  br i1 %tobool362, label %if.then.363, label %if.end.364

if.then.363:                                      ; preds = %if.end.361
  %182 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %183 = load %union.tree_node*, %union.tree_node** %elttype353, align 8
  %184 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8
  call void @output_init_element(%union.tree_node* %182, %union.tree_node* %183, %union.tree_node* %184, i32 1)
  br label %if.end.364

if.end.364:                                       ; preds = %if.then.363, %if.end.361
  %185 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8
  %186 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 18), align 8
  %call365 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %185, %union.tree_node* %186)
  store %union.tree_node* %call365, %union.tree_node** @constructor_index, align 8
  %187 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %tobool366 = icmp ne %union.tree_node* %187, null
  br i1 %tobool366, label %if.end.368, label %if.then.367

if.then.367:                                      ; preds = %if.end.364
  %188 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8
  store %union.tree_node* %188, %union.tree_node** @constructor_unfilled_index, align 8
  br label %if.end.368

if.end.368:                                       ; preds = %if.then.367, %if.end.364
  br label %if.end.378

if.else.369:                                      ; preds = %if.else.345
  %189 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %cmp370 = icmp eq %union.tree_node* %189, null
  br i1 %cmp370, label %if.then.372, label %if.else.373

if.then.372:                                      ; preds = %if.else.369
  call void @pedwarn_init(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.135, i32 0, i32 0))
  br label %while.end.449

if.else.373:                                      ; preds = %if.else.369
  %190 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %tobool374 = icmp ne %union.tree_node* %190, null
  br i1 %tobool374, label %if.then.375, label %if.end.376

if.then.375:                                      ; preds = %if.else.373
  %191 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %192 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  call void @output_init_element(%union.tree_node* %191, %union.tree_node* %192, %union.tree_node* null, i32 1)
  br label %if.end.376

if.end.376:                                       ; preds = %if.then.375, %if.else.373
  store %union.tree_node* null, %union.tree_node** @constructor_fields, align 8
  br label %if.end.377

if.end.377:                                       ; preds = %if.end.376
  br label %if.end.378

if.end.378:                                       ; preds = %if.end.377, %if.end.368
  br label %if.end.379

if.end.379:                                       ; preds = %if.end.378, %if.end.344
  br label %if.end.380

if.end.380:                                       ; preds = %if.end.379, %if.end.275
  br label %if.end.381

if.end.381:                                       ; preds = %if.end.380, %while.end.192
  %193 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** @constructor_range_stack, align 8
  %tobool382 = icmp ne %struct.constructor_range_stack* %193, null
  br i1 %tobool382, label %if.then.383, label %if.end.448

if.then.383:                                      ; preds = %if.end.381
  store i32 0, i32* %finish, align 4
  %194 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** @constructor_range_stack, align 8
  store %struct.constructor_range_stack* %194, %struct.constructor_range_stack** %range_stack, align 8
  store %struct.constructor_range_stack* null, %struct.constructor_range_stack** @constructor_range_stack, align 8
  br label %while.cond.384

while.cond.384:                                   ; preds = %if.end.391, %if.then.383
  %195 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8
  %196 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %range_stack, align 8
  %stack = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %196, i32 0, i32 2
  %197 = load %struct.constructor_stack*, %struct.constructor_stack** %stack, align 8
  %cmp385 = icmp ne %struct.constructor_stack* %195, %197
  br i1 %cmp385, label %while.body.387, label %while.end.393

while.body.387:                                   ; preds = %while.cond.384
  %198 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8
  %implicit388 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %198, i32 0, i32 16
  %199 = load i8, i8* %implicit388, align 1
  %tobool389 = icmp ne i8 %199, 0
  br i1 %tobool389, label %if.end.391, label %if.then.390

if.then.390:                                      ; preds = %while.body.387
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), i32 6830, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.process_init_element, i32 0, i32 0)) #5
  unreachable

if.end.391:                                       ; preds = %while.body.387
  %call392 = call %union.tree_node* @pop_init_level(i32 1)
  call void @process_init_element(%union.tree_node* %call392)
  br label %while.cond.384

while.end.393:                                    ; preds = %while.cond.384
  %200 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %range_stack, align 8
  store %struct.constructor_range_stack* %200, %struct.constructor_range_stack** %p, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.end.393
  %201 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %range_end = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %201, i32 0, i32 5
  %202 = load %union.tree_node*, %union.tree_node** %range_end, align 8
  %tobool394 = icmp ne %union.tree_node* %202, null
  br i1 %tobool394, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %for.cond
  %203 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %index = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %203, i32 0, i32 4
  %204 = load %union.tree_node*, %union.tree_node** %index, align 8
  %205 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %range_end395 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %205, i32 0, i32 5
  %206 = load %union.tree_node*, %union.tree_node** %range_end395, align 8
  %call396 = call i32 @tree_int_cst_equal(%union.tree_node* %204, %union.tree_node* %206)
  %tobool397 = icmp ne i32 %call396, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %207 = phi i1 [ true, %for.cond ], [ %tobool397, %lor.rhs ]
  br i1 %207, label %for.body, label %for.end

for.body:                                         ; preds = %lor.end
  %208 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8
  %implicit398 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %208, i32 0, i32 16
  %209 = load i8, i8* %implicit398, align 1
  %tobool399 = icmp ne i8 %209, 0
  br i1 %tobool399, label %if.end.401, label %if.then.400

if.then.400:                                      ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), i32 6838, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.process_init_element, i32 0, i32 0)) #5
  unreachable

if.end.401:                                       ; preds = %for.body
  %call402 = call %union.tree_node* @pop_init_level(i32 1)
  call void @process_init_element(%union.tree_node* %call402)
  br label %for.inc

for.inc:                                          ; preds = %if.end.401
  %210 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %prev = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %210, i32 0, i32 1
  %211 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %prev, align 8
  store %struct.constructor_range_stack* %211, %struct.constructor_range_stack** %p, align 8
  br label %for.cond

for.end:                                          ; preds = %lor.end
  %212 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %index403 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %212, i32 0, i32 4
  %213 = load %union.tree_node*, %union.tree_node** %index403, align 8
  %214 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 18), align 8
  %call404 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %213, %union.tree_node* %214)
  %215 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %index405 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %215, i32 0, i32 4
  store %union.tree_node* %call404, %union.tree_node** %index405, align 8
  %216 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %index406 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %216, i32 0, i32 4
  %217 = load %union.tree_node*, %union.tree_node** %index406, align 8
  %218 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %range_end407 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %218, i32 0, i32 5
  %219 = load %union.tree_node*, %union.tree_node** %range_end407, align 8
  %call408 = call i32 @tree_int_cst_equal(%union.tree_node* %217, %union.tree_node* %219)
  %tobool409 = icmp ne i32 %call408, 0
  br i1 %tobool409, label %land.lhs.true.410, label %if.end.414

land.lhs.true.410:                                ; preds = %for.end
  %220 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %prev411 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %220, i32 0, i32 1
  %221 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %prev411, align 8
  %tobool412 = icmp ne %struct.constructor_range_stack* %221, null
  br i1 %tobool412, label %if.end.414, label %if.then.413

if.then.413:                                      ; preds = %land.lhs.true.410
  store i32 1, i32* %finish, align 4
  br label %if.end.414

if.end.414:                                       ; preds = %if.then.413, %land.lhs.true.410, %for.end
  br label %while.body.416

while.body.416:                                   ; preds = %if.end.414, %if.end.443
  %222 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %index417 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %222, i32 0, i32 4
  %223 = load %union.tree_node*, %union.tree_node** %index417, align 8
  store %union.tree_node* %223, %union.tree_node** @constructor_index, align 8
  %224 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %fields = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %224, i32 0, i32 6
  %225 = load %union.tree_node*, %union.tree_node** %fields, align 8
  store %union.tree_node* %225, %union.tree_node** @constructor_fields, align 8
  %226 = load i32, i32* %finish, align 4
  %tobool418 = icmp ne i32 %226, 0
  br i1 %tobool418, label %land.lhs.true.419, label %if.end.428

land.lhs.true.419:                                ; preds = %while.body.416
  %227 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %range_end420 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %227, i32 0, i32 5
  %228 = load %union.tree_node*, %union.tree_node** %range_end420, align 8
  %tobool421 = icmp ne %union.tree_node* %228, null
  br i1 %tobool421, label %land.lhs.true.422, label %if.end.428

land.lhs.true.422:                                ; preds = %land.lhs.true.419
  %229 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %index423 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %229, i32 0, i32 4
  %230 = load %union.tree_node*, %union.tree_node** %index423, align 8
  %231 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %range_start = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %231, i32 0, i32 3
  %232 = load %union.tree_node*, %union.tree_node** %range_start, align 8
  %cmp424 = icmp eq %union.tree_node* %230, %232
  br i1 %cmp424, label %if.then.426, label %if.end.428

if.then.426:                                      ; preds = %land.lhs.true.422
  store i32 0, i32* %finish, align 4
  %233 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %prev427 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %233, i32 0, i32 1
  store %struct.constructor_range_stack* null, %struct.constructor_range_stack** %prev427, align 8
  br label %if.end.428

if.end.428:                                       ; preds = %if.then.426, %land.lhs.true.422, %land.lhs.true.419, %while.body.416
  %234 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %next = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %234, i32 0, i32 0
  %235 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %next, align 8
  store %struct.constructor_range_stack* %235, %struct.constructor_range_stack** %p, align 8
  %236 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %tobool429 = icmp ne %struct.constructor_range_stack* %236, null
  br i1 %tobool429, label %if.end.431, label %if.then.430

if.then.430:                                      ; preds = %if.end.428
  br label %while.end.444

if.end.431:                                       ; preds = %if.end.428
  call void @push_init_level(i32 2)
  %237 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8
  %238 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %stack432 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %238, i32 0, i32 2
  store %struct.constructor_stack* %237, %struct.constructor_stack** %stack432, align 8
  %239 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %range_end433 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %239, i32 0, i32 5
  %240 = load %union.tree_node*, %union.tree_node** %range_end433, align 8
  %tobool434 = icmp ne %union.tree_node* %240, null
  br i1 %tobool434, label %land.lhs.true.435, label %if.end.443

land.lhs.true.435:                                ; preds = %if.end.431
  %241 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %index436 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %241, i32 0, i32 4
  %242 = load %union.tree_node*, %union.tree_node** %index436, align 8
  %243 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %range_end437 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %243, i32 0, i32 5
  %244 = load %union.tree_node*, %union.tree_node** %range_end437, align 8
  %call438 = call i32 @tree_int_cst_equal(%union.tree_node* %242, %union.tree_node* %244)
  %tobool439 = icmp ne i32 %call438, 0
  br i1 %tobool439, label %if.then.440, label %if.end.443

if.then.440:                                      ; preds = %land.lhs.true.435
  %245 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %range_start441 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %245, i32 0, i32 3
  %246 = load %union.tree_node*, %union.tree_node** %range_start441, align 8
  %247 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %index442 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %247, i32 0, i32 4
  store %union.tree_node* %246, %union.tree_node** %index442, align 8
  br label %if.end.443

if.end.443:                                       ; preds = %if.then.440, %land.lhs.true.435, %if.end.431
  br label %while.body.416

while.end.444:                                    ; preds = %if.then.430
  %248 = load i32, i32* %finish, align 4
  %tobool445 = icmp ne i32 %248, 0
  br i1 %tobool445, label %if.end.447, label %if.then.446

if.then.446:                                      ; preds = %while.end.444
  %249 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %range_stack, align 8
  store %struct.constructor_range_stack* %249, %struct.constructor_range_stack** @constructor_range_stack, align 8
  br label %if.end.447

if.end.447:                                       ; preds = %if.then.446, %while.end.444
  br label %while.body.75

if.end.448:                                       ; preds = %if.end.381
  br label %while.end.449

while.end.449:                                    ; preds = %if.end.448, %if.then.372, %if.then.360, %if.then.333, %if.then.203, %if.then.104, %if.then.83
  store %struct.constructor_range_stack* null, %struct.constructor_range_stack** @constructor_range_stack, align 8
  br label %return

return:                                           ; preds = %while.end.449, %if.then.27, %if.then.24, %if.end
  ret void
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @pop_init_level(i32 %implicit) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %implicit.addr = alloca i32, align 4
  %p = alloca %struct.constructor_stack*, align 8
  %constructor = alloca %union.tree_node*, align 8
  store i32 %implicit, i32* %implicit.addr, align 4
  store %union.tree_node* null, %union.tree_node** %constructor, align 8
  %0 = load i32, i32* %implicit.addr, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end.4

if.then:                                          ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %1 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8
  %implicit1 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %1, i32 0, i32 16
  %2 = load i8, i8* %implicit1, align 1
  %tobool = icmp ne i8 %2, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %call = call %union.tree_node* @pop_init_level(i32 1)
  call void @process_init_element(%union.tree_node* %call)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %3 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** @constructor_range_stack, align 8
  %tobool2 = icmp ne %struct.constructor_range_stack* %3, null
  br i1 %tobool2, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %while.end
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), i32 5488, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.pop_init_level, i32 0, i32 0)) #5
  unreachable

if.end:                                           ; preds = %while.end
  br label %if.end.4

if.end.4:                                         ; preds = %if.end, %entry
  %4 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8
  store %struct.constructor_stack* %4, %struct.constructor_stack** %p, align 8
  %5 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %tobool5 = icmp ne %union.tree_node* %5, null
  br i1 %tobool5, label %land.lhs.true, label %if.end.37

land.lhs.true:                                    ; preds = %if.end.4
  %6 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %tobool6 = icmp ne %union.tree_node* %6, null
  br i1 %tobool6, label %land.lhs.true.7, label %if.end.37

land.lhs.true.7:                                  ; preds = %land.lhs.true
  %7 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common = bitcast %union.tree_node* %7 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp8 = icmp eq i32 %bf.clear, 18
  br i1 %cmp8, label %land.lhs.true.9, label %if.end.37

land.lhs.true.9:                                  ; preds = %land.lhs.true.7
  %8 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type = bitcast %union.tree_node* %8 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i32 0, i32 1
  %9 = load %union.tree_node*, %union.tree_node** %values, align 8
  %tobool10 = icmp ne %union.tree_node* %9, null
  br i1 %tobool10, label %land.lhs.true.11, label %if.end.37

land.lhs.true.11:                                 ; preds = %land.lhs.true.9
  %10 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type12 = bitcast %union.tree_node* %10 to %struct.tree_type*
  %values13 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type12, i32 0, i32 1
  %11 = load %union.tree_node*, %union.tree_node** %values13, align 8
  %type14 = bitcast %union.tree_node* %11 to %struct.tree_type*
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type14, i32 0, i32 13
  %12 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %tobool15 = icmp ne %union.tree_node* %12, null
  br i1 %tobool15, label %if.end.37, label %if.then.16

if.then.16:                                       ; preds = %land.lhs.true.11
  %13 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_index, align 8
  %call17 = call i32 @integer_zerop(%union.tree_node* %13)
  %tobool18 = icmp ne i32 %call17, 0
  br i1 %tobool18, label %if.then.19, label %if.else

if.then.19:                                       ; preds = %if.then.16
  store %union.tree_node* null, %union.tree_node** @constructor_type, align 8
  br label %if.end.36

if.else:                                          ; preds = %if.then.16
  %14 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type20 = bitcast %union.tree_node* %14 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type20, i32 0, i32 2
  %15 = load %union.tree_node*, %union.tree_node** %size, align 8
  %tobool21 = icmp ne %union.tree_node* %15, null
  br i1 %tobool21, label %if.else.34, label %if.then.22

if.then.22:                                       ; preds = %if.else
  %16 = load i32, i32* @constructor_depth, align 4
  %cmp23 = icmp sgt i32 %16, 2
  br i1 %cmp23, label %if.then.24, label %if.else.25

if.then.24:                                       ; preds = %if.then.22
  call void @error_init(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.116, i32 0, i32 0))
  br label %if.end.29

if.else.25:                                       ; preds = %if.then.22
  %17 = load i32, i32* @pedantic, align 4
  %tobool26 = icmp ne i32 %17, 0
  br i1 %tobool26, label %if.then.27, label %if.end.28

if.then.27:                                       ; preds = %if.else.25
  call void @pedwarn_init(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.117, i32 0, i32 0))
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.27, %if.else.25
  br label %if.end.29

if.end.29:                                        ; preds = %if.end.28, %if.then.24
  %18 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %common30 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common30, i32 0, i32 0
  %19 = load %union.tree_node*, %union.tree_node** %chain, align 8
  %cmp31 = icmp ne %union.tree_node* %19, null
  br i1 %cmp31, label %if.then.32, label %if.end.33

if.then.32:                                       ; preds = %if.end.29
  store %union.tree_node* null, %union.tree_node** @constructor_type, align 8
  br label %if.end.33

if.end.33:                                        ; preds = %if.then.32, %if.end.29
  br label %if.end.35

if.else.34:                                       ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), i32 5520, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.pop_init_level, i32 0, i32 0)) #5
  unreachable

if.end.35:                                        ; preds = %if.end.33
  br label %if.end.36

if.end.36:                                        ; preds = %if.end.35, %if.then.19
  br label %if.end.37

if.end.37:                                        ; preds = %if.end.36, %land.lhs.true.11, %land.lhs.true.9, %land.lhs.true.7, %land.lhs.true, %if.end.4
  %20 = load i32, i32* @extra_warnings, align 4
  %tobool38 = icmp ne i32 %20, 0
  br i1 %tobool38, label %land.lhs.true.39, label %if.end.67

land.lhs.true.39:                                 ; preds = %if.end.37
  %21 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %tobool40 = icmp ne %union.tree_node* %21, null
  br i1 %tobool40, label %land.lhs.true.41, label %if.end.67

land.lhs.true.41:                                 ; preds = %land.lhs.true.39
  %22 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common42 = bitcast %union.tree_node* %22 to %struct.tree_common*
  %code43 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common42, i32 0, i32 2
  %bf.load44 = load i32, i32* %code43, align 8
  %bf.clear45 = and i32 %bf.load44, 255
  %cmp46 = icmp eq i32 %bf.clear45, 20
  br i1 %cmp46, label %land.lhs.true.47, label %if.end.67

land.lhs.true.47:                                 ; preds = %land.lhs.true.41
  %23 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %tobool48 = icmp ne %union.tree_node* %23, null
  br i1 %tobool48, label %if.then.49, label %if.end.67

if.then.49:                                       ; preds = %land.lhs.true.47
  br label %while.cond.50

while.cond.50:                                    ; preds = %while.body.58, %if.then.49
  %24 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %tobool51 = icmp ne %union.tree_node* %24, null
  br i1 %tobool51, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.50
  %25 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %decl = bitcast %union.tree_node* %25 to %struct.tree_decl*
  %size52 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 4
  %26 = load %union.tree_node*, %union.tree_node** %size52, align 8
  %tobool53 = icmp ne %union.tree_node* %26, null
  br i1 %tobool53, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %land.rhs
  %27 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %decl54 = bitcast %union.tree_node* %27 to %struct.tree_decl*
  %size55 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl54, i32 0, i32 4
  %28 = load %union.tree_node*, %union.tree_node** %size55, align 8
  %call56 = call i32 @integer_zerop(%union.tree_node* %28)
  %tobool57 = icmp ne i32 %call56, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %29 = phi i1 [ true, %land.rhs ], [ %tobool57, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond.50
  %30 = phi i1 [ false, %while.cond.50 ], [ %29, %lor.end ]
  br i1 %30, label %while.body.58, label %while.end.61

while.body.58:                                    ; preds = %land.end
  %31 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %common59 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %chain60 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common59, i32 0, i32 0
  %32 = load %union.tree_node*, %union.tree_node** %chain60, align 8
  store %union.tree_node* %32, %union.tree_node** @constructor_unfilled_fields, align 8
  br label %while.cond.50

while.end.61:                                     ; preds = %land.end
  %33 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %tobool62 = icmp ne %union.tree_node* %33, null
  br i1 %tobool62, label %land.lhs.true.63, label %if.end.66

land.lhs.true.63:                                 ; preds = %while.end.61
  %34 = load i32, i32* @constructor_designated, align 4
  %tobool64 = icmp ne i32 %34, 0
  br i1 %tobool64, label %if.end.66, label %if.then.65

if.then.65:                                       ; preds = %land.lhs.true.63
  %35 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  call void @push_member_name(%union.tree_node* %35)
  call void @warning_init(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.118, i32 0, i32 0))
  %36 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  %37 = load i32, i32* @constructor_depth, align 4
  %idx.ext = sext i32 %37 to i64
  %add.ptr = getelementptr inbounds %struct.spelling, %struct.spelling* %36, i64 %idx.ext
  store %struct.spelling* %add.ptr, %struct.spelling** @spelling, align 8
  br label %if.end.66

if.end.66:                                        ; preds = %if.then.65, %land.lhs.true.63, %while.end.61
  br label %if.end.67

if.end.67:                                        ; preds = %if.end.66, %land.lhs.true.47, %land.lhs.true.41, %land.lhs.true.39, %if.end.37
  store i32 1, i32* @constructor_incremental, align 4
  call void @output_pending_init_elements(i32 1)
  %38 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %replacement_value = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %38, i32 0, i32 12
  %39 = load %union.tree_node*, %union.tree_node** %replacement_value, align 8
  %tobool68 = icmp ne %union.tree_node* %39, null
  br i1 %tobool68, label %if.then.69, label %if.else.71

if.then.69:                                       ; preds = %if.end.67
  %40 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %replacement_value70 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %40, i32 0, i32 12
  %41 = load %union.tree_node*, %union.tree_node** %replacement_value70, align 8
  store %union.tree_node* %41, %union.tree_node** %constructor, align 8
  br label %if.end.138

if.else.71:                                       ; preds = %if.end.67
  %42 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %cmp72 = icmp eq %union.tree_node* %42, null
  br i1 %cmp72, label %if.then.73, label %if.else.74

if.then.73:                                       ; preds = %if.else.71
  br label %if.end.137

if.else.74:                                       ; preds = %if.else.71
  %43 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common75 = bitcast %union.tree_node* %43 to %struct.tree_common*
  %code76 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common75, i32 0, i32 2
  %bf.load77 = load i32, i32* %code76, align 8
  %bf.clear78 = and i32 %bf.load77, 255
  %cmp79 = icmp ne i32 %bf.clear78, 20
  br i1 %cmp79, label %land.lhs.true.80, label %if.else.114

land.lhs.true.80:                                 ; preds = %if.else.74
  %44 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common81 = bitcast %union.tree_node* %44 to %struct.tree_common*
  %code82 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common81, i32 0, i32 2
  %bf.load83 = load i32, i32* %code82, align 8
  %bf.clear84 = and i32 %bf.load83, 255
  %cmp85 = icmp ne i32 %bf.clear84, 21
  br i1 %cmp85, label %land.lhs.true.86, label %if.else.114

land.lhs.true.86:                                 ; preds = %land.lhs.true.80
  %45 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common87 = bitcast %union.tree_node* %45 to %struct.tree_common*
  %code88 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common87, i32 0, i32 2
  %bf.load89 = load i32, i32* %code88, align 8
  %bf.clear90 = and i32 %bf.load89, 255
  %cmp91 = icmp ne i32 %bf.clear90, 18
  br i1 %cmp91, label %land.lhs.true.92, label %if.else.114

land.lhs.true.92:                                 ; preds = %land.lhs.true.86
  %46 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common93 = bitcast %union.tree_node* %46 to %struct.tree_common*
  %code94 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common93, i32 0, i32 2
  %bf.load95 = load i32, i32* %code94, align 8
  %bf.clear96 = and i32 %bf.load95, 255
  %cmp97 = icmp ne i32 %bf.clear96, 9
  br i1 %cmp97, label %if.then.98, label %if.else.114

if.then.98:                                       ; preds = %land.lhs.true.92
  %47 = load %union.tree_node*, %union.tree_node** @constructor_elements, align 8
  %cmp99 = icmp eq %union.tree_node* %47, null
  br i1 %cmp99, label %if.then.100, label %if.else.104

if.then.100:                                      ; preds = %if.then.98
  %48 = load i32, i32* @constructor_erroneous, align 4
  %tobool101 = icmp ne i32 %48, 0
  br i1 %tobool101, label %if.end.103, label %if.then.102

if.then.102:                                      ; preds = %if.then.100
  call void @error_init(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.119, i32 0, i32 0))
  br label %if.end.103

if.end.103:                                       ; preds = %if.then.102, %if.then.100
  %49 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %49, %union.tree_node** %constructor, align 8
  br label %if.end.113

if.else.104:                                      ; preds = %if.then.98
  %50 = load %union.tree_node*, %union.tree_node** @constructor_elements, align 8
  %common105 = bitcast %union.tree_node* %50 to %struct.tree_common*
  %chain106 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common105, i32 0, i32 0
  %51 = load %union.tree_node*, %union.tree_node** %chain106, align 8
  %cmp107 = icmp ne %union.tree_node* %51, null
  br i1 %cmp107, label %if.then.108, label %if.else.109

if.then.108:                                      ; preds = %if.else.104
  call void @error_init(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.120, i32 0, i32 0))
  %52 = load %union.tree_node*, %union.tree_node** @constructor_elements, align 8
  %list = bitcast %union.tree_node* %52 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %53 = load %union.tree_node*, %union.tree_node** %value, align 8
  store %union.tree_node* %53, %union.tree_node** %constructor, align 8
  br label %if.end.112

if.else.109:                                      ; preds = %if.else.104
  %54 = load %union.tree_node*, %union.tree_node** @constructor_elements, align 8
  %list110 = bitcast %union.tree_node* %54 to %struct.tree_list*
  %value111 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list110, i32 0, i32 2
  %55 = load %union.tree_node*, %union.tree_node** %value111, align 8
  store %union.tree_node* %55, %union.tree_node** %constructor, align 8
  br label %if.end.112

if.end.112:                                       ; preds = %if.else.109, %if.then.108
  br label %if.end.113

if.end.113:                                       ; preds = %if.end.112, %if.end.103
  br label %if.end.136

if.else.114:                                      ; preds = %land.lhs.true.92, %land.lhs.true.86, %land.lhs.true.80, %if.else.74
  %56 = load i32, i32* @constructor_erroneous, align 4
  %tobool115 = icmp ne i32 %56, 0
  br i1 %tobool115, label %if.then.116, label %if.else.117

if.then.116:                                      ; preds = %if.else.114
  %57 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %57, %union.tree_node** %constructor, align 8
  br label %if.end.135

if.else.117:                                      ; preds = %if.else.114
  %58 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %59 = load %union.tree_node*, %union.tree_node** @constructor_elements, align 8
  %call118 = call %union.tree_node* @nreverse(%union.tree_node* %59)
  %call119 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 46, %union.tree_node* %58, %union.tree_node* null, %union.tree_node* %call118)
  store %union.tree_node* %call119, %union.tree_node** %constructor, align 8
  %60 = load i32, i32* @constructor_constant, align 4
  %tobool120 = icmp ne i32 %60, 0
  br i1 %tobool120, label %if.then.121, label %if.end.125

if.then.121:                                      ; preds = %if.else.117
  %61 = load %union.tree_node*, %union.tree_node** %constructor, align 8
  %common122 = bitcast %union.tree_node* %61 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common122, i32 0, i32 2
  %bf.load123 = load i32, i32* %constant_flag, align 8
  %bf.clear124 = and i32 %bf.load123, -513
  %bf.set = or i32 %bf.clear124, 512
  store i32 %bf.set, i32* %constant_flag, align 8
  br label %if.end.125

if.end.125:                                       ; preds = %if.then.121, %if.else.117
  %62 = load i32, i32* @constructor_constant, align 4
  %tobool126 = icmp ne i32 %62, 0
  br i1 %tobool126, label %land.lhs.true.127, label %if.end.134

land.lhs.true.127:                                ; preds = %if.end.125
  %63 = load i32, i32* @constructor_simple, align 4
  %tobool128 = icmp ne i32 %63, 0
  br i1 %tobool128, label %if.then.129, label %if.end.134

if.then.129:                                      ; preds = %land.lhs.true.127
  %64 = load %union.tree_node*, %union.tree_node** %constructor, align 8
  %common130 = bitcast %union.tree_node* %64 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common130, i32 0, i32 2
  %bf.load131 = load i32, i32* %static_flag, align 8
  %bf.clear132 = and i32 %bf.load131, -262145
  %bf.set133 = or i32 %bf.clear132, 262144
  store i32 %bf.set133, i32* %static_flag, align 8
  br label %if.end.134

if.end.134:                                       ; preds = %if.then.129, %land.lhs.true.127, %if.end.125
  br label %if.end.135

if.end.135:                                       ; preds = %if.end.134, %if.then.116
  br label %if.end.136

if.end.136:                                       ; preds = %if.end.135, %if.end.113
  br label %if.end.137

if.end.137:                                       ; preds = %if.end.136, %if.then.73
  br label %if.end.138

if.end.138:                                       ; preds = %if.end.137, %if.then.69
  %65 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %type139 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %65, i32 0, i32 1
  %66 = load %union.tree_node*, %union.tree_node** %type139, align 8
  store %union.tree_node* %66, %union.tree_node** @constructor_type, align 8
  %67 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %fields = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %67, i32 0, i32 2
  %68 = load %union.tree_node*, %union.tree_node** %fields, align 8
  store %union.tree_node* %68, %union.tree_node** @constructor_fields, align 8
  %69 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %index = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %69, i32 0, i32 3
  %70 = load %union.tree_node*, %union.tree_node** %index, align 8
  store %union.tree_node* %70, %union.tree_node** @constructor_index, align 8
  %71 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %max_index = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %71, i32 0, i32 4
  %72 = load %union.tree_node*, %union.tree_node** %max_index, align 8
  store %union.tree_node* %72, %union.tree_node** @constructor_max_index, align 8
  %73 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %unfilled_index = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %73, i32 0, i32 5
  %74 = load %union.tree_node*, %union.tree_node** %unfilled_index, align 8
  store %union.tree_node* %74, %union.tree_node** @constructor_unfilled_index, align 8
  %75 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %unfilled_fields = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %75, i32 0, i32 6
  %76 = load %union.tree_node*, %union.tree_node** %unfilled_fields, align 8
  store %union.tree_node* %76, %union.tree_node** @constructor_unfilled_fields, align 8
  %77 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %bit_index = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %77, i32 0, i32 7
  %78 = load %union.tree_node*, %union.tree_node** %bit_index, align 8
  store %union.tree_node* %78, %union.tree_node** @constructor_bit_index, align 8
  %79 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %elements = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %79, i32 0, i32 8
  %80 = load %union.tree_node*, %union.tree_node** %elements, align 8
  store %union.tree_node* %80, %union.tree_node** @constructor_elements, align 8
  %81 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %constant = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %81, i32 0, i32 14
  %82 = load i8, i8* %constant, align 1
  %conv = sext i8 %82 to i32
  store i32 %conv, i32* @constructor_constant, align 4
  %83 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %simple = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %83, i32 0, i32 15
  %84 = load i8, i8* %simple, align 1
  %conv140 = sext i8 %84 to i32
  store i32 %conv140, i32* @constructor_simple, align 4
  %85 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %erroneous = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %85, i32 0, i32 17
  %86 = load i8, i8* %erroneous, align 1
  %conv141 = sext i8 %86 to i32
  store i32 %conv141, i32* @constructor_erroneous, align 4
  %87 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %incremental = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %87, i32 0, i32 19
  %88 = load i8, i8* %incremental, align 1
  %conv142 = sext i8 %88 to i32
  store i32 %conv142, i32* @constructor_incremental, align 4
  %89 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %designated = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %89, i32 0, i32 20
  %90 = load i8, i8* %designated, align 1
  %conv143 = sext i8 %90 to i32
  store i32 %conv143, i32* @constructor_designated, align 4
  %91 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %pending_elts = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %91, i32 0, i32 9
  %92 = load %struct.init_node*, %struct.init_node** %pending_elts, align 8
  store %struct.init_node* %92, %struct.init_node** @constructor_pending_elts, align 8
  %93 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %depth = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %93, i32 0, i32 11
  %94 = load i32, i32* %depth, align 4
  store i32 %94, i32* @constructor_depth, align 4
  %95 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %implicit144 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %95, i32 0, i32 16
  %96 = load i8, i8* %implicit144, align 1
  %tobool145 = icmp ne i8 %96, 0
  br i1 %tobool145, label %if.end.147, label %if.then.146

if.then.146:                                      ; preds = %if.end.138
  %97 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %range_stack = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %97, i32 0, i32 13
  %98 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %range_stack, align 8
  store %struct.constructor_range_stack* %98, %struct.constructor_range_stack** @constructor_range_stack, align 8
  br label %if.end.147

if.end.147:                                       ; preds = %if.then.146, %if.end.138
  %99 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  %100 = load i32, i32* @constructor_depth, align 4
  %idx.ext148 = sext i32 %100 to i64
  %add.ptr149 = getelementptr inbounds %struct.spelling, %struct.spelling* %99, i64 %idx.ext148
  store %struct.spelling* %add.ptr149, %struct.spelling** @spelling, align 8
  %101 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %next = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %101, i32 0, i32 0
  %102 = load %struct.constructor_stack*, %struct.constructor_stack** %next, align 8
  store %struct.constructor_stack* %102, %struct.constructor_stack** @constructor_stack, align 8
  %103 = load %struct.constructor_stack*, %struct.constructor_stack** %p, align 8
  %104 = bitcast %struct.constructor_stack* %103 to i8*
  call void @free(i8* %104) #6
  %105 = load %union.tree_node*, %union.tree_node** %constructor, align 8
  %cmp150 = icmp eq %union.tree_node* %105, null
  br i1 %cmp150, label %if.then.152, label %if.end.157

if.then.152:                                      ; preds = %if.end.147
  %106 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8
  %cmp153 = icmp eq %struct.constructor_stack* %106, null
  br i1 %cmp153, label %if.then.155, label %if.end.156

if.then.155:                                      ; preds = %if.then.152
  %107 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %107, %union.tree_node** %retval
  br label %return

if.end.156:                                       ; preds = %if.then.152
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.157:                                       ; preds = %if.end.147
  %108 = load %union.tree_node*, %union.tree_node** %constructor, align 8
  store %union.tree_node* %108, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.157, %if.end.156, %if.then.155
  %109 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %109
}

declare i32 @tree_int_cst_lt(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @find_init_member(%union.tree_node* %field) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %field.addr = alloca %union.tree_node*, align 8
  %p = alloca %struct.init_node*, align 8
  %bitpos = alloca %union.tree_node*, align 8
  store %union.tree_node* %field, %union.tree_node** %field.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 18
  br i1 %cmp, label %if.then, label %if.else.14

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @constructor_incremental, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %2 = load %union.tree_node*, %union.tree_node** %field.addr, align 8
  %3 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_index, align 8
  %call = call i32 @tree_int_cst_lt(%union.tree_node* %2, %union.tree_node* %3)
  %tobool1 = icmp ne i32 %call, 0
  br i1 %tobool1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %land.lhs.true
  call void @set_nonincremental_init()
  br label %if.end

if.end:                                           ; preds = %if.then.2, %land.lhs.true, %if.then
  %4 = load %struct.init_node*, %struct.init_node** @constructor_pending_elts, align 8
  store %struct.init_node* %4, %struct.init_node** %p, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end.13, %if.end
  %5 = load %struct.init_node*, %struct.init_node** %p, align 8
  %tobool3 = icmp ne %struct.init_node* %5, null
  br i1 %tobool3, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %6 = load %union.tree_node*, %union.tree_node** %field.addr, align 8
  %7 = load %struct.init_node*, %struct.init_node** %p, align 8
  %purpose = getelementptr inbounds %struct.init_node, %struct.init_node* %7, i32 0, i32 4
  %8 = load %union.tree_node*, %union.tree_node** %purpose, align 8
  %call4 = call i32 @tree_int_cst_lt(%union.tree_node* %6, %union.tree_node* %8)
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.then.6, label %if.else

if.then.6:                                        ; preds = %while.body
  %9 = load %struct.init_node*, %struct.init_node** %p, align 8
  %left = getelementptr inbounds %struct.init_node, %struct.init_node* %9, i32 0, i32 0
  %10 = load %struct.init_node*, %struct.init_node** %left, align 8
  store %struct.init_node* %10, %struct.init_node** %p, align 8
  br label %if.end.13

if.else:                                          ; preds = %while.body
  %11 = load %struct.init_node*, %struct.init_node** %p, align 8
  %purpose7 = getelementptr inbounds %struct.init_node, %struct.init_node* %11, i32 0, i32 4
  %12 = load %union.tree_node*, %union.tree_node** %purpose7, align 8
  %13 = load %union.tree_node*, %union.tree_node** %field.addr, align 8
  %call8 = call i32 @tree_int_cst_lt(%union.tree_node* %12, %union.tree_node* %13)
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.then.10, label %if.else.11

if.then.10:                                       ; preds = %if.else
  %14 = load %struct.init_node*, %struct.init_node** %p, align 8
  %right = getelementptr inbounds %struct.init_node, %struct.init_node* %14, i32 0, i32 1
  %15 = load %struct.init_node*, %struct.init_node** %right, align 8
  store %struct.init_node* %15, %struct.init_node** %p, align 8
  br label %if.end.12

if.else.11:                                       ; preds = %if.else
  %16 = load %struct.init_node*, %struct.init_node** %p, align 8
  %value = getelementptr inbounds %struct.init_node, %struct.init_node* %16, i32 0, i32 5
  %17 = load %union.tree_node*, %union.tree_node** %value, align 8
  store %union.tree_node* %17, %union.tree_node** %retval
  br label %return

if.end.12:                                        ; preds = %if.then.10
  br label %if.end.13

if.end.13:                                        ; preds = %if.end.12, %if.then.6
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end.66

if.else.14:                                       ; preds = %entry
  %18 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common15 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %code16 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common15, i32 0, i32 2
  %bf.load17 = load i32, i32* %code16, align 8
  %bf.clear18 = and i32 %bf.load17, 255
  %cmp19 = icmp eq i32 %bf.clear18, 20
  br i1 %cmp19, label %if.then.20, label %if.else.49

if.then.20:                                       ; preds = %if.else.14
  %19 = load %union.tree_node*, %union.tree_node** %field.addr, align 8
  %call21 = call %union.tree_node* @bit_position(%union.tree_node* %19)
  store %union.tree_node* %call21, %union.tree_node** %bitpos, align 8
  %20 = load i32, i32* @constructor_incremental, align 4
  %tobool22 = icmp ne i32 %20, 0
  br i1 %tobool22, label %land.lhs.true.23, label %if.end.29

land.lhs.true.23:                                 ; preds = %if.then.20
  %21 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %tobool24 = icmp ne %union.tree_node* %21, null
  br i1 %tobool24, label %lor.lhs.false, label %if.then.28

lor.lhs.false:                                    ; preds = %land.lhs.true.23
  %22 = load %union.tree_node*, %union.tree_node** %bitpos, align 8
  %23 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %call25 = call %union.tree_node* @bit_position(%union.tree_node* %23)
  %call26 = call i32 @tree_int_cst_lt(%union.tree_node* %22, %union.tree_node* %call25)
  %tobool27 = icmp ne i32 %call26, 0
  br i1 %tobool27, label %if.then.28, label %if.end.29

if.then.28:                                       ; preds = %lor.lhs.false, %land.lhs.true.23
  call void @set_nonincremental_init()
  br label %if.end.29

if.end.29:                                        ; preds = %if.then.28, %lor.lhs.false, %if.then.20
  %24 = load %struct.init_node*, %struct.init_node** @constructor_pending_elts, align 8
  store %struct.init_node* %24, %struct.init_node** %p, align 8
  br label %while.cond.30

while.cond.30:                                    ; preds = %if.end.47, %if.end.29
  %25 = load %struct.init_node*, %struct.init_node** %p, align 8
  %tobool31 = icmp ne %struct.init_node* %25, null
  br i1 %tobool31, label %while.body.32, label %while.end.48

while.body.32:                                    ; preds = %while.cond.30
  %26 = load %union.tree_node*, %union.tree_node** %field.addr, align 8
  %27 = load %struct.init_node*, %struct.init_node** %p, align 8
  %purpose33 = getelementptr inbounds %struct.init_node, %struct.init_node* %27, i32 0, i32 4
  %28 = load %union.tree_node*, %union.tree_node** %purpose33, align 8
  %cmp34 = icmp eq %union.tree_node* %26, %28
  br i1 %cmp34, label %if.then.35, label %if.else.37

if.then.35:                                       ; preds = %while.body.32
  %29 = load %struct.init_node*, %struct.init_node** %p, align 8
  %value36 = getelementptr inbounds %struct.init_node, %struct.init_node* %29, i32 0, i32 5
  %30 = load %union.tree_node*, %union.tree_node** %value36, align 8
  store %union.tree_node* %30, %union.tree_node** %retval
  br label %return

if.else.37:                                       ; preds = %while.body.32
  %31 = load %union.tree_node*, %union.tree_node** %bitpos, align 8
  %32 = load %struct.init_node*, %struct.init_node** %p, align 8
  %purpose38 = getelementptr inbounds %struct.init_node, %struct.init_node* %32, i32 0, i32 4
  %33 = load %union.tree_node*, %union.tree_node** %purpose38, align 8
  %call39 = call %union.tree_node* @bit_position(%union.tree_node* %33)
  %call40 = call i32 @tree_int_cst_lt(%union.tree_node* %31, %union.tree_node* %call39)
  %tobool41 = icmp ne i32 %call40, 0
  br i1 %tobool41, label %if.then.42, label %if.else.44

if.then.42:                                       ; preds = %if.else.37
  %34 = load %struct.init_node*, %struct.init_node** %p, align 8
  %left43 = getelementptr inbounds %struct.init_node, %struct.init_node* %34, i32 0, i32 0
  %35 = load %struct.init_node*, %struct.init_node** %left43, align 8
  store %struct.init_node* %35, %struct.init_node** %p, align 8
  br label %if.end.46

if.else.44:                                       ; preds = %if.else.37
  %36 = load %struct.init_node*, %struct.init_node** %p, align 8
  %right45 = getelementptr inbounds %struct.init_node, %struct.init_node* %36, i32 0, i32 1
  %37 = load %struct.init_node*, %struct.init_node** %right45, align 8
  store %struct.init_node* %37, %struct.init_node** %p, align 8
  br label %if.end.46

if.end.46:                                        ; preds = %if.else.44, %if.then.42
  br label %if.end.47

if.end.47:                                        ; preds = %if.end.46
  br label %while.cond.30

while.end.48:                                     ; preds = %while.cond.30
  br label %if.end.65

if.else.49:                                       ; preds = %if.else.14
  %38 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common50 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %code51 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common50, i32 0, i32 2
  %bf.load52 = load i32, i32* %code51, align 8
  %bf.clear53 = and i32 %bf.load52, 255
  %cmp54 = icmp eq i32 %bf.clear53, 21
  br i1 %cmp54, label %if.then.55, label %if.end.64

if.then.55:                                       ; preds = %if.else.49
  %39 = load %union.tree_node*, %union.tree_node** @constructor_elements, align 8
  %tobool56 = icmp ne %union.tree_node* %39, null
  br i1 %tobool56, label %land.lhs.true.57, label %if.end.63

land.lhs.true.57:                                 ; preds = %if.then.55
  %40 = load %union.tree_node*, %union.tree_node** @constructor_elements, align 8
  %list = bitcast %union.tree_node* %40 to %struct.tree_list*
  %purpose58 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 1
  %41 = load %union.tree_node*, %union.tree_node** %purpose58, align 8
  %42 = load %union.tree_node*, %union.tree_node** %field.addr, align 8
  %cmp59 = icmp eq %union.tree_node* %41, %42
  br i1 %cmp59, label %if.then.60, label %if.end.63

if.then.60:                                       ; preds = %land.lhs.true.57
  %43 = load %union.tree_node*, %union.tree_node** @constructor_elements, align 8
  %list61 = bitcast %union.tree_node* %43 to %struct.tree_list*
  %value62 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list61, i32 0, i32 2
  %44 = load %union.tree_node*, %union.tree_node** %value62, align 8
  store %union.tree_node* %44, %union.tree_node** %retval
  br label %return

if.end.63:                                        ; preds = %land.lhs.true.57, %if.then.55
  br label %if.end.64

if.end.64:                                        ; preds = %if.end.63, %if.else.49
  br label %if.end.65

if.end.65:                                        ; preds = %if.end.64, %while.end.48
  br label %if.end.66

if.end.66:                                        ; preds = %if.end.65, %while.end
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.66, %if.then.60, %if.then.35, %if.else.11
  %45 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %45
}

; Function Attrs: nounwind uwtable
define internal void @push_member_name(%union.tree_node* %decl) #0 {
entry:
  %decl.addr = alloca %union.tree_node*, align 8
  %string = alloca i8*, align 8
  %depth = alloca i32, align 4
  store %union.tree_node* %decl, %union.tree_node** %decl.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl1 = bitcast %union.tree_node* %0 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1, i32 0, i32 8
  %1 = load %union.tree_node*, %union.tree_node** %name, align 8
  %tobool = icmp ne %union.tree_node* %1, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl2 = bitcast %union.tree_node* %2 to %struct.tree_decl*
  %name3 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl2, i32 0, i32 8
  %3 = load %union.tree_node*, %union.tree_node** %name3, align 8
  %identifier = bitcast %union.tree_node* %3 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %4 = load i8*, i8** %str, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %4, %cond.true ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.193, i32 0, i32 0), %cond.false ]
  store i8* %cond, i8** %string, align 8
  %5 = load %struct.spelling*, %struct.spelling** @spelling, align 8
  %6 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.spelling* %5 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.spelling* %6 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 16
  %conv = trunc i64 %sub.ptr.div to i32
  store i32 %conv, i32* %depth, align 4
  %7 = load i32, i32* %depth, align 4
  %8 = load i32, i32* @spelling_size, align 4
  %cmp = icmp sge i32 %7, %8
  br i1 %cmp, label %if.then, label %if.end.12

if.then:                                          ; preds = %cond.end
  %9 = load i32, i32* @spelling_size, align 4
  %add = add nsw i32 %9, 10
  store i32 %add, i32* @spelling_size, align 4
  %10 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  %cmp5 = icmp eq %struct.spelling* %10, null
  br i1 %cmp5, label %if.then.7, label %if.else

if.then.7:                                        ; preds = %if.then
  %11 = load i32, i32* @spelling_size, align 4
  %conv8 = sext i32 %11 to i64
  %mul = mul i64 %conv8, 16
  %call = call noalias i8* @xmalloc(i64 %mul)
  %12 = bitcast i8* %call to %struct.spelling*
  store %struct.spelling* %12, %struct.spelling** @spelling_base, align 8
  br label %if.end

if.else:                                          ; preds = %if.then
  %13 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  %14 = bitcast %struct.spelling* %13 to i8*
  %15 = load i32, i32* @spelling_size, align 4
  %conv9 = sext i32 %15 to i64
  %mul10 = mul i64 %conv9, 16
  %call11 = call i8* @xrealloc(i8* %14, i64 %mul10)
  %16 = bitcast i8* %call11 to %struct.spelling*
  store %struct.spelling* %16, %struct.spelling** @spelling_base, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.7
  %17 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  %18 = load i32, i32* %depth, align 4
  %idx.ext = sext i32 %18 to i64
  %add.ptr = getelementptr inbounds %struct.spelling, %struct.spelling* %17, i64 %idx.ext
  store %struct.spelling* %add.ptr, %struct.spelling** @spelling, align 8
  br label %if.end.12

if.end.12:                                        ; preds = %if.end, %cond.end
  %19 = load %struct.spelling*, %struct.spelling** @spelling, align 8
  %kind = getelementptr inbounds %struct.spelling, %struct.spelling* %19, i32 0, i32 0
  store i32 2, i32* %kind, align 4
  %20 = load i8*, i8** %string, align 8
  %21 = load %struct.spelling*, %struct.spelling** @spelling, align 8
  %u = getelementptr inbounds %struct.spelling, %struct.spelling* %21, i32 0, i32 1
  %s = bitcast %union.anon.4* %u to i8**
  store i8* %20, i8** %s, align 8
  %22 = load %struct.spelling*, %struct.spelling** @spelling, align 8
  %incdec.ptr = getelementptr inbounds %struct.spelling, %struct.spelling* %22, i32 1
  store %struct.spelling* %incdec.ptr, %struct.spelling** @spelling, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @push_array_bounds(i32 %bounds) #0 {
entry:
  %bounds.addr = alloca i32, align 4
  %depth = alloca i32, align 4
  store i32 %bounds, i32* %bounds.addr, align 4
  %0 = load %struct.spelling*, %struct.spelling** @spelling, align 8
  %1 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.spelling* %0 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.spelling* %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 16
  %conv = trunc i64 %sub.ptr.div to i32
  store i32 %conv, i32* %depth, align 4
  %2 = load i32, i32* %depth, align 4
  %3 = load i32, i32* @spelling_size, align 4
  %cmp = icmp sge i32 %2, %3
  br i1 %cmp, label %if.then, label %if.end.9

if.then:                                          ; preds = %entry
  %4 = load i32, i32* @spelling_size, align 4
  %add = add nsw i32 %4, 10
  store i32 %add, i32* @spelling_size, align 4
  %5 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  %cmp2 = icmp eq %struct.spelling* %5, null
  br i1 %cmp2, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %if.then
  %6 = load i32, i32* @spelling_size, align 4
  %conv5 = sext i32 %6 to i64
  %mul = mul i64 %conv5, 16
  %call = call noalias i8* @xmalloc(i64 %mul)
  %7 = bitcast i8* %call to %struct.spelling*
  store %struct.spelling* %7, %struct.spelling** @spelling_base, align 8
  br label %if.end

if.else:                                          ; preds = %if.then
  %8 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  %9 = bitcast %struct.spelling* %8 to i8*
  %10 = load i32, i32* @spelling_size, align 4
  %conv6 = sext i32 %10 to i64
  %mul7 = mul i64 %conv6, 16
  %call8 = call i8* @xrealloc(i8* %9, i64 %mul7)
  %11 = bitcast i8* %call8 to %struct.spelling*
  store %struct.spelling* %11, %struct.spelling** @spelling_base, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %12 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8
  %13 = load i32, i32* %depth, align 4
  %idx.ext = sext i32 %13 to i64
  %add.ptr = getelementptr inbounds %struct.spelling, %struct.spelling* %12, i64 %idx.ext
  store %struct.spelling* %add.ptr, %struct.spelling** @spelling, align 8
  br label %if.end.9

if.end.9:                                         ; preds = %if.end, %entry
  %14 = load %struct.spelling*, %struct.spelling** @spelling, align 8
  %kind = getelementptr inbounds %struct.spelling, %struct.spelling* %14, i32 0, i32 0
  store i32 3, i32* %kind, align 4
  %15 = load i32, i32* %bounds.addr, align 4
  %16 = load %struct.spelling*, %struct.spelling** @spelling, align 8
  %u = getelementptr inbounds %struct.spelling, %struct.spelling* %16, i32 0, i32 1
  %i = bitcast %union.anon.4* %u to i32*
  store i32 %15, i32* %i, align 4
  %17 = load %struct.spelling*, %struct.spelling** @spelling, align 8
  %incdec.ptr = getelementptr inbounds %struct.spelling, %struct.spelling* %17, i32 1
  store %struct.spelling* %incdec.ptr, %struct.spelling** @spelling, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @set_nonincremental_init() #0 {
entry:
  %chain = alloca %union.tree_node*, align 8
  %0 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp ne i32 %bf.clear, 20
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load3 = load i32, i32* %code2, align 8
  %bf.clear4 = and i32 %bf.load3, 255
  %cmp5 = icmp ne i32 %bf.clear4, 18
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load %union.tree_node*, %union.tree_node** @constructor_elements, align 8
  store %union.tree_node* %2, %union.tree_node** %chain, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load %union.tree_node*, %union.tree_node** %chain, align 8
  %tobool = icmp ne %union.tree_node* %3, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %union.tree_node*, %union.tree_node** %chain, align 8
  %list = bitcast %union.tree_node* %4 to %struct.tree_list*
  %purpose = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 1
  %5 = load %union.tree_node*, %union.tree_node** %purpose, align 8
  %6 = load %union.tree_node*, %union.tree_node** %chain, align 8
  %list6 = bitcast %union.tree_node* %6 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list6, i32 0, i32 2
  %7 = load %union.tree_node*, %union.tree_node** %value, align 8
  call void @add_pending_init(%union.tree_node* %5, %union.tree_node* %7)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load %union.tree_node*, %union.tree_node** %chain, align 8
  %common7 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %chain8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 0
  %9 = load %union.tree_node*, %union.tree_node** %chain8, align 8
  store %union.tree_node* %9, %union.tree_node** %chain, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store %union.tree_node* null, %union.tree_node** @constructor_elements, align 8
  %10 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common9 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %code10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common9, i32 0, i32 2
  %bf.load11 = load i32, i32* %code10, align 8
  %bf.clear12 = and i32 %bf.load11, 255
  %cmp13 = icmp eq i32 %bf.clear12, 20
  br i1 %cmp13, label %if.then.14, label %if.else

if.then.14:                                       ; preds = %for.end
  %11 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type = bitcast %union.tree_node* %11 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i32 0, i32 1
  %12 = load %union.tree_node*, %union.tree_node** %values, align 8
  store %union.tree_node* %12, %union.tree_node** @constructor_unfilled_fields, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then.14
  %13 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %cmp15 = icmp ne %union.tree_node* %13, null
  br i1 %cmp15, label %land.lhs.true.16, label %land.end

land.lhs.true.16:                                 ; preds = %while.cond
  %14 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %decl = bitcast %union.tree_node* %14 to %struct.tree_decl*
  %lang_flag_4 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 5
  %15 = bitcast i48* %lang_flag_4 to i64*
  %bf.load17 = load i64, i64* %15, align 8
  %bf.lshr = lshr i64 %bf.load17, 41
  %bf.clear18 = and i64 %bf.lshr, 1
  %bf.cast = trunc i64 %bf.clear18 to i32
  %cmp19 = icmp eq i32 %bf.cast, 1
  br i1 %cmp19, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.16
  %16 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %decl20 = bitcast %union.tree_node* %16 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl20, i32 0, i32 8
  %17 = load %union.tree_node*, %union.tree_node** %name, align 8
  %cmp21 = icmp eq %union.tree_node* %17, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.16, %while.cond
  %18 = phi i1 [ false, %land.lhs.true.16 ], [ false, %while.cond ], [ %cmp21, %land.rhs ]
  br i1 %18, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %19 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %common22 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %chain23 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common22, i32 0, i32 0
  %20 = load %union.tree_node*, %union.tree_node** %chain23, align 8
  store %union.tree_node* %20, %union.tree_node** @constructor_unfilled_fields, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  br label %if.end.40

if.else:                                          ; preds = %for.end
  %21 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common24 = bitcast %union.tree_node* %21 to %struct.tree_common*
  %code25 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common24, i32 0, i32 2
  %bf.load26 = load i32, i32* %code25, align 8
  %bf.clear27 = and i32 %bf.load26, 255
  %cmp28 = icmp eq i32 %bf.clear27, 18
  br i1 %cmp28, label %if.then.29, label %if.end.39

if.then.29:                                       ; preds = %if.else
  %22 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type30 = bitcast %union.tree_node* %22 to %struct.tree_type*
  %values31 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type30, i32 0, i32 1
  %23 = load %union.tree_node*, %union.tree_node** %values31, align 8
  %tobool32 = icmp ne %union.tree_node* %23, null
  br i1 %tobool32, label %if.then.33, label %if.else.37

if.then.33:                                       ; preds = %if.then.29
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i32 0, i64 3), align 8
  %25 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type34 = bitcast %union.tree_node* %25 to %struct.tree_type*
  %values35 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type34, i32 0, i32 1
  %26 = load %union.tree_node*, %union.tree_node** %values35, align 8
  %type36 = bitcast %union.tree_node* %26 to %struct.tree_type*
  %minval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type36, i32 0, i32 12
  %27 = load %union.tree_node*, %union.tree_node** %minval, align 8
  %call = call %union.tree_node* @convert(%union.tree_node* %24, %union.tree_node* %27)
  store %union.tree_node* %call, %union.tree_node** @constructor_unfilled_index, align 8
  br label %if.end.38

if.else.37:                                       ; preds = %if.then.29
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 17), align 8
  store %union.tree_node* %28, %union.tree_node** @constructor_unfilled_index, align 8
  br label %if.end.38

if.end.38:                                        ; preds = %if.else.37, %if.then.33
  br label %if.end.39

if.end.39:                                        ; preds = %if.end.38, %if.else
  br label %if.end.40

if.end.40:                                        ; preds = %if.end.39, %while.end
  store i32 0, i32* @constructor_incremental, align 4
  br label %return

return:                                           ; preds = %if.end.40, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @warning_init(i8* %msgid) #0 {
entry:
  %msgid.addr = alloca i8*, align 8
  %ofwhat = alloca i8*, align 8
  store i8* %msgid, i8** %msgid.addr, align 8
  %0 = load i8*, i8** %msgid.addr, align 8
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.81, i32 0, i32 0), i8* %0)
  %call = call i32 @spelling_length()
  %add = add nsw i32 %call, 1
  %conv = sext i32 %add to i64
  %1 = alloca i8, i64 %conv
  %call1 = call i8* @print_spelling(i8* %1)
  store i8* %call1, i8** %ofwhat, align 8
  %2 = load i8*, i8** %ofwhat, align 8
  %3 = load i8, i8* %2, align 1
  %tobool = icmp ne i8 %3, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %ofwhat, align 8
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.111, i32 0, i32 0), i8* %4)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @set_nonincremental_init_from_string(%union.tree_node* %str) #0 {
entry:
  %str.addr = alloca %union.tree_node*, align 8
  %value = alloca %union.tree_node*, align 8
  %purpose = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %val = alloca [2 x i64], align 16
  %p = alloca i8*, align 8
  %end = alloca i8*, align 8
  %byte = alloca i32, align 4
  %wchar_bytes = alloca i32, align 4
  %charwidth = alloca i32, align 4
  %bitpos = alloca i32, align 4
  store %union.tree_node* %str, %union.tree_node** %str.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp ne i32 %bf.clear, 18
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), i32 6091, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__FUNCTION__.set_nonincremental_init_from_string, i32 0, i32 0)) #5
  unreachable

if.end:                                           ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %str.addr, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %type2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 1
  %2 = load %union.tree_node*, %union.tree_node** %type2, align 8
  %common3 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %type4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %type4, align 8
  %type5 = bitcast %union.tree_node* %3 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type5, i32 0, i32 6
  %bf.load6 = load i32, i32* %precision, align 4
  %bf.clear7 = and i32 %bf.load6, 511
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %type8 = bitcast %union.tree_node* %4 to %struct.tree_type*
  %precision9 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type8, i32 0, i32 6
  %bf.load10 = load i32, i32* %precision9, align 4
  %bf.clear11 = and i32 %bf.load10, 511
  %cmp12 = icmp eq i32 %bf.clear7, %bf.clear11
  br i1 %cmp12, label %if.then.13, label %if.else

if.then.13:                                       ; preds = %if.end
  store i32 1, i32* %wchar_bytes, align 4
  br label %if.end.34

if.else:                                          ; preds = %if.end
  %5 = load %union.tree_node*, %union.tree_node** %str.addr, align 8
  %common14 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %type15 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common14, i32 0, i32 1
  %6 = load %union.tree_node*, %union.tree_node** %type15, align 8
  %common16 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %type17 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common16, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %type17, align 8
  %type18 = bitcast %union.tree_node* %7 to %struct.tree_type*
  %precision19 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type18, i32 0, i32 6
  %bf.load20 = load i32, i32* %precision19, align 4
  %bf.clear21 = and i32 %bf.load20, 511
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 0), align 8
  %type22 = bitcast %union.tree_node* %8 to %struct.tree_type*
  %precision23 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type22, i32 0, i32 6
  %bf.load24 = load i32, i32* %precision23, align 4
  %bf.clear25 = and i32 %bf.load24, 511
  %cmp26 = icmp eq i32 %bf.clear21, %bf.clear25
  br i1 %cmp26, label %if.then.27, label %if.else.32

if.then.27:                                       ; preds = %if.else
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 0), align 8
  %type28 = bitcast %union.tree_node* %9 to %struct.tree_type*
  %precision29 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type28, i32 0, i32 6
  %bf.load30 = load i32, i32* %precision29, align 4
  %bf.clear31 = and i32 %bf.load30, 511
  %div = sdiv i32 %bf.clear31, 8
  store i32 %div, i32* %wchar_bytes, align 4
  br label %if.end.33

if.else.32:                                       ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), i32 6100, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__FUNCTION__.set_nonincremental_init_from_string, i32 0, i32 0)) #5
  unreachable

if.end.33:                                        ; preds = %if.then.27
  br label %if.end.34

if.end.34:                                        ; preds = %if.end.33, %if.then.13
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %type35 = bitcast %union.tree_node* %10 to %struct.tree_type*
  %precision36 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type35, i32 0, i32 6
  %bf.load37 = load i32, i32* %precision36, align 4
  %bf.clear38 = and i32 %bf.load37, 511
  store i32 %bf.clear38, i32* %charwidth, align 4
  %11 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common39 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %type40 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common39, i32 0, i32 1
  %12 = load %union.tree_node*, %union.tree_node** %type40, align 8
  store %union.tree_node* %12, %union.tree_node** %type, align 8
  %13 = load %union.tree_node*, %union.tree_node** %str.addr, align 8
  %string = bitcast %union.tree_node* %13 to %struct.tree_string*
  %pointer = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string, i32 0, i32 3
  %14 = load i8*, i8** %pointer, align 8
  store i8* %14, i8** %p, align 8
  %15 = load i8*, i8** %p, align 8
  %16 = load %union.tree_node*, %union.tree_node** %str.addr, align 8
  %string41 = bitcast %union.tree_node* %16 to %struct.tree_string*
  %length = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string41, i32 0, i32 2
  %17 = load i32, i32* %length, align 4
  %idx.ext = sext i32 %17 to i64
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %idx.ext
  store i8* %add.ptr, i8** %end, align 8
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 17), align 8
  store %union.tree_node* %18, %union.tree_node** %purpose, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc.113, %if.end.34
  %19 = load i8*, i8** %p, align 8
  %20 = load i8*, i8** %end, align 8
  %cmp42 = icmp ult i8* %19, %20
  br i1 %cmp42, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %21 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8
  %22 = load %union.tree_node*, %union.tree_node** %purpose, align 8
  %call = call i32 @tree_int_cst_lt(%union.tree_node* %21, %union.tree_node* %22)
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %23 = phi i1 [ false, %for.cond ], [ %lnot, %land.rhs ]
  br i1 %23, label %for.body, label %for.end.115

for.body:                                         ; preds = %land.end
  %24 = load i32, i32* %wchar_bytes, align 4
  %cmp43 = icmp eq i32 %24, 1
  br i1 %cmp43, label %if.then.44, label %if.else.46

if.then.44:                                       ; preds = %for.body
  %25 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  %26 = load i8, i8* %25, align 1
  %conv = zext i8 %26 to i64
  %arrayidx = getelementptr inbounds [2 x i64], [2 x i64]* %val, i32 0, i64 1
  store i64 %conv, i64* %arrayidx, align 8
  %arrayidx45 = getelementptr inbounds [2 x i64], [2 x i64]* %val, i32 0, i64 0
  store i64 0, i64* %arrayidx45, align 8
  br label %if.end.58

if.else.46:                                       ; preds = %for.body
  %arrayidx47 = getelementptr inbounds [2 x i64], [2 x i64]* %val, i32 0, i64 0
  store i64 0, i64* %arrayidx47, align 8
  %arrayidx48 = getelementptr inbounds [2 x i64], [2 x i64]* %val, i32 0, i64 1
  store i64 0, i64* %arrayidx48, align 8
  store i32 0, i32* %byte, align 4
  br label %for.cond.49

for.cond.49:                                      ; preds = %for.inc, %if.else.46
  %27 = load i32, i32* %byte, align 4
  %28 = load i32, i32* %wchar_bytes, align 4
  %cmp50 = icmp slt i32 %27, %28
  br i1 %cmp50, label %for.body.52, label %for.end

for.body.52:                                      ; preds = %for.cond.49
  %29 = load i32, i32* %byte, align 4
  %30 = load i32, i32* %charwidth, align 4
  %mul = mul nsw i32 %29, %30
  store i32 %mul, i32* %bitpos, align 4
  %31 = load i8*, i8** %p, align 8
  %incdec.ptr53 = getelementptr inbounds i8, i8* %31, i32 1
  store i8* %incdec.ptr53, i8** %p, align 8
  %32 = load i8, i8* %31, align 1
  %conv54 = zext i8 %32 to i64
  %33 = load i32, i32* %bitpos, align 4
  %rem = srem i32 %33, 64
  %sh_prom = zext i32 %rem to i64
  %shl = shl i64 %conv54, %sh_prom
  %34 = load i32, i32* %bitpos, align 4
  %cmp55 = icmp slt i32 %34, 64
  %conv56 = zext i1 %cmp55 to i32
  %idxprom = sext i32 %conv56 to i64
  %arrayidx57 = getelementptr inbounds [2 x i64], [2 x i64]* %val, i32 0, i64 %idxprom
  %35 = load i64, i64* %arrayidx57, align 8
  %or = or i64 %35, %shl
  store i64 %or, i64* %arrayidx57, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body.52
  %36 = load i32, i32* %byte, align 4
  %inc = add nsw i32 %36, 1
  store i32 %inc, i32* %byte, align 4
  br label %for.cond.49

for.end:                                          ; preds = %for.cond.49
  br label %if.end.58

if.end.58:                                        ; preds = %for.end, %if.then.44
  %37 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common59 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common59, i32 0, i32 2
  %bf.load60 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr = lshr i32 %bf.load60, 13
  %bf.clear61 = and i32 %bf.lshr, 1
  %tobool62 = icmp ne i32 %bf.clear61, 0
  br i1 %tobool62, label %if.end.107, label %if.then.63

if.then.63:                                       ; preds = %if.end.58
  %38 = load i32, i32* %wchar_bytes, align 4
  %sub = sub nsw i32 %38, 1
  %39 = load i32, i32* %charwidth, align 4
  %mul64 = mul nsw i32 %sub, %39
  %add = add nsw i32 %mul64, 8
  store i32 %add, i32* %bitpos, align 4
  %40 = load i32, i32* %bitpos, align 4
  %cmp65 = icmp slt i32 %40, 64
  br i1 %cmp65, label %if.then.67, label %if.else.80

if.then.67:                                       ; preds = %if.then.63
  %arrayidx68 = getelementptr inbounds [2 x i64], [2 x i64]* %val, i32 0, i64 1
  %41 = load i64, i64* %arrayidx68, align 8
  %42 = load i32, i32* %bitpos, align 4
  %sub69 = sub nsw i32 %42, 1
  %sh_prom70 = zext i32 %sub69 to i64
  %shl71 = shl i64 1, %sh_prom70
  %and = and i64 %41, %shl71
  %tobool72 = icmp ne i64 %and, 0
  br i1 %tobool72, label %if.then.73, label %if.end.79

if.then.73:                                       ; preds = %if.then.67
  %43 = load i32, i32* %bitpos, align 4
  %sh_prom74 = zext i32 %43 to i64
  %shl75 = shl i64 -1, %sh_prom74
  %arrayidx76 = getelementptr inbounds [2 x i64], [2 x i64]* %val, i32 0, i64 1
  %44 = load i64, i64* %arrayidx76, align 8
  %or77 = or i64 %44, %shl75
  store i64 %or77, i64* %arrayidx76, align 8
  %arrayidx78 = getelementptr inbounds [2 x i64], [2 x i64]* %val, i32 0, i64 0
  store i64 -1, i64* %arrayidx78, align 8
  br label %if.end.79

if.end.79:                                        ; preds = %if.then.73, %if.then.67
  br label %if.end.106

if.else.80:                                       ; preds = %if.then.63
  %45 = load i32, i32* %bitpos, align 4
  %cmp81 = icmp eq i32 %45, 64
  br i1 %cmp81, label %if.then.83, label %if.else.90

if.then.83:                                       ; preds = %if.else.80
  %arrayidx84 = getelementptr inbounds [2 x i64], [2 x i64]* %val, i32 0, i64 1
  %46 = load i64, i64* %arrayidx84, align 8
  %cmp85 = icmp slt i64 %46, 0
  br i1 %cmp85, label %if.then.87, label %if.end.89

if.then.87:                                       ; preds = %if.then.83
  %arrayidx88 = getelementptr inbounds [2 x i64], [2 x i64]* %val, i32 0, i64 0
  store i64 -1, i64* %arrayidx88, align 8
  br label %if.end.89

if.end.89:                                        ; preds = %if.then.87, %if.then.83
  br label %if.end.105

if.else.90:                                       ; preds = %if.else.80
  %arrayidx91 = getelementptr inbounds [2 x i64], [2 x i64]* %val, i32 0, i64 0
  %47 = load i64, i64* %arrayidx91, align 8
  %48 = load i32, i32* %bitpos, align 4
  %sub92 = sub nsw i32 %48, 1
  %sub93 = sub nsw i32 %sub92, 64
  %sh_prom94 = zext i32 %sub93 to i64
  %shl95 = shl i64 1, %sh_prom94
  %and96 = and i64 %47, %shl95
  %tobool97 = icmp ne i64 %and96, 0
  br i1 %tobool97, label %if.then.98, label %if.end.104

if.then.98:                                       ; preds = %if.else.90
  %49 = load i32, i32* %bitpos, align 4
  %sub99 = sub nsw i32 %49, 64
  %sh_prom100 = zext i32 %sub99 to i64
  %shl101 = shl i64 -1, %sh_prom100
  %arrayidx102 = getelementptr inbounds [2 x i64], [2 x i64]* %val, i32 0, i64 0
  %50 = load i64, i64* %arrayidx102, align 8
  %or103 = or i64 %50, %shl101
  store i64 %or103, i64* %arrayidx102, align 8
  br label %if.end.104

if.end.104:                                       ; preds = %if.then.98, %if.else.90
  br label %if.end.105

if.end.105:                                       ; preds = %if.end.104, %if.end.89
  br label %if.end.106

if.end.106:                                       ; preds = %if.end.105, %if.end.79
  br label %if.end.107

if.end.107:                                       ; preds = %if.end.106, %if.end.58
  %arrayidx108 = getelementptr inbounds [2 x i64], [2 x i64]* %val, i32 0, i64 1
  %51 = load i64, i64* %arrayidx108, align 8
  %arrayidx109 = getelementptr inbounds [2 x i64], [2 x i64]* %val, i32 0, i64 0
  %52 = load i64, i64* %arrayidx109, align 8
  %call110 = call %union.tree_node* @build_int_2_wide(i64 %51, i64 %52)
  store %union.tree_node* %call110, %union.tree_node** %value, align 8
  %53 = load %union.tree_node*, %union.tree_node** %type, align 8
  %54 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common111 = bitcast %union.tree_node* %54 to %struct.tree_common*
  %type112 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common111, i32 0, i32 1
  store %union.tree_node* %53, %union.tree_node** %type112, align 8
  %55 = load %union.tree_node*, %union.tree_node** %purpose, align 8
  %56 = load %union.tree_node*, %union.tree_node** %value, align 8
  call void @add_pending_init(%union.tree_node* %55, %union.tree_node* %56)
  br label %for.inc.113

for.inc.113:                                      ; preds = %if.end.107
  %57 = load %union.tree_node*, %union.tree_node** %purpose, align 8
  %58 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 18), align 8
  %call114 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %57, %union.tree_node* %58)
  store %union.tree_node* %call114, %union.tree_node** %purpose, align 8
  br label %for.cond

for.end.115:                                      ; preds = %land.end
  store i32 0, i32* @constructor_incremental, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @output_pending_init_elements(i32 %all) #0 {
entry:
  %all.addr = alloca i32, align 4
  %elt = alloca %struct.init_node*, align 8
  %next = alloca %union.tree_node*, align 8
  %ctor_unfilled_bitpos = alloca %union.tree_node*, align 8
  %elt_bitpos = alloca %union.tree_node*, align 8
  store i32 %all, i32* %all.addr, align 4
  %0 = load %struct.init_node*, %struct.init_node** @constructor_pending_elts, align 8
  store %struct.init_node* %0, %struct.init_node** %elt, align 8
  br label %retry

retry:                                            ; preds = %if.end.132, %entry
  store %union.tree_node* null, %union.tree_node** %next, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end.105, %retry
  %1 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %tobool = icmp ne %struct.init_node* %1, null
  br i1 %tobool, label %while.body, label %while.end.106

while.body:                                       ; preds = %while.cond
  %2 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 18
  br i1 %cmp, label %if.then, label %if.else.36

if.then:                                          ; preds = %while.body
  %3 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %purpose = getelementptr inbounds %struct.init_node, %struct.init_node* %3, i32 0, i32 4
  %4 = load %union.tree_node*, %union.tree_node** %purpose, align 8
  %5 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_index, align 8
  %call = call i32 @tree_int_cst_equal(%union.tree_node* %4, %union.tree_node* %5)
  %tobool1 = icmp ne i32 %call, 0
  br i1 %tobool1, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.then
  %6 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %value = getelementptr inbounds %struct.init_node, %struct.init_node* %6, i32 0, i32 5
  %7 = load %union.tree_node*, %union.tree_node** %value, align 8
  %8 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common3 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3, i32 0, i32 1
  %9 = load %union.tree_node*, %union.tree_node** %type, align 8
  %10 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_index, align 8
  call void @output_init_element(%union.tree_node* %7, %union.tree_node* %9, %union.tree_node* %10, i32 0)
  br label %if.end.35

if.else:                                          ; preds = %if.then
  %11 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_index, align 8
  %12 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %purpose4 = getelementptr inbounds %struct.init_node, %struct.init_node* %12, i32 0, i32 4
  %13 = load %union.tree_node*, %union.tree_node** %purpose4, align 8
  %call5 = call i32 @tree_int_cst_lt(%union.tree_node* %11, %union.tree_node* %13)
  %tobool6 = icmp ne i32 %call5, 0
  br i1 %tobool6, label %if.then.7, label %if.else.13

if.then.7:                                        ; preds = %if.else
  %14 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %left = getelementptr inbounds %struct.init_node, %struct.init_node* %14, i32 0, i32 0
  %15 = load %struct.init_node*, %struct.init_node** %left, align 8
  %tobool8 = icmp ne %struct.init_node* %15, null
  br i1 %tobool8, label %if.then.9, label %if.else.11

if.then.9:                                        ; preds = %if.then.7
  %16 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %left10 = getelementptr inbounds %struct.init_node, %struct.init_node* %16, i32 0, i32 0
  %17 = load %struct.init_node*, %struct.init_node** %left10, align 8
  store %struct.init_node* %17, %struct.init_node** %elt, align 8
  br label %if.end

if.else.11:                                       ; preds = %if.then.7
  %18 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %purpose12 = getelementptr inbounds %struct.init_node, %struct.init_node* %18, i32 0, i32 4
  %19 = load %union.tree_node*, %union.tree_node** %purpose12, align 8
  store %union.tree_node* %19, %union.tree_node** %next, align 8
  br label %while.end.106

if.end:                                           ; preds = %if.then.9
  br label %if.end.34

if.else.13:                                       ; preds = %if.else
  %20 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %right = getelementptr inbounds %struct.init_node, %struct.init_node* %20, i32 0, i32 1
  %21 = load %struct.init_node*, %struct.init_node** %right, align 8
  %tobool14 = icmp ne %struct.init_node* %21, null
  br i1 %tobool14, label %if.then.15, label %if.else.17

if.then.15:                                       ; preds = %if.else.13
  %22 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %right16 = getelementptr inbounds %struct.init_node, %struct.init_node* %22, i32 0, i32 1
  %23 = load %struct.init_node*, %struct.init_node** %right16, align 8
  store %struct.init_node* %23, %struct.init_node** %elt, align 8
  br label %if.end.33

if.else.17:                                       ; preds = %if.else.13
  br label %while.cond.18

while.cond.18:                                    ; preds = %while.body.23, %if.else.17
  %24 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %parent = getelementptr inbounds %struct.init_node, %struct.init_node* %24, i32 0, i32 2
  %25 = load %struct.init_node*, %struct.init_node** %parent, align 8
  %tobool19 = icmp ne %struct.init_node* %25, null
  br i1 %tobool19, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.18
  %26 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %parent20 = getelementptr inbounds %struct.init_node, %struct.init_node* %26, i32 0, i32 2
  %27 = load %struct.init_node*, %struct.init_node** %parent20, align 8
  %right21 = getelementptr inbounds %struct.init_node, %struct.init_node* %27, i32 0, i32 1
  %28 = load %struct.init_node*, %struct.init_node** %right21, align 8
  %29 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %cmp22 = icmp eq %struct.init_node* %28, %29
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.18
  %30 = phi i1 [ false, %while.cond.18 ], [ %cmp22, %land.rhs ]
  br i1 %30, label %while.body.23, label %while.end

while.body.23:                                    ; preds = %land.end
  %31 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %parent24 = getelementptr inbounds %struct.init_node, %struct.init_node* %31, i32 0, i32 2
  %32 = load %struct.init_node*, %struct.init_node** %parent24, align 8
  store %struct.init_node* %32, %struct.init_node** %elt, align 8
  br label %while.cond.18

while.end:                                        ; preds = %land.end
  %33 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %parent25 = getelementptr inbounds %struct.init_node, %struct.init_node* %33, i32 0, i32 2
  %34 = load %struct.init_node*, %struct.init_node** %parent25, align 8
  store %struct.init_node* %34, %struct.init_node** %elt, align 8
  %35 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %tobool26 = icmp ne %struct.init_node* %35, null
  br i1 %tobool26, label %land.lhs.true, label %if.end.32

land.lhs.true:                                    ; preds = %while.end
  %36 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_index, align 8
  %37 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %purpose27 = getelementptr inbounds %struct.init_node, %struct.init_node* %37, i32 0, i32 4
  %38 = load %union.tree_node*, %union.tree_node** %purpose27, align 8
  %call28 = call i32 @tree_int_cst_lt(%union.tree_node* %36, %union.tree_node* %38)
  %tobool29 = icmp ne i32 %call28, 0
  br i1 %tobool29, label %if.then.30, label %if.end.32

if.then.30:                                       ; preds = %land.lhs.true
  %39 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %purpose31 = getelementptr inbounds %struct.init_node, %struct.init_node* %39, i32 0, i32 4
  %40 = load %union.tree_node*, %union.tree_node** %purpose31, align 8
  store %union.tree_node* %40, %union.tree_node** %next, align 8
  br label %while.end.106

if.end.32:                                        ; preds = %land.lhs.true, %while.end
  br label %if.end.33

if.end.33:                                        ; preds = %if.end.32, %if.then.15
  br label %if.end.34

if.end.34:                                        ; preds = %if.end.33, %if.end
  br label %if.end.35

if.end.35:                                        ; preds = %if.end.34, %if.then.2
  br label %if.end.105

if.else.36:                                       ; preds = %while.body
  %41 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common37 = bitcast %union.tree_node* %41 to %struct.tree_common*
  %code38 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common37, i32 0, i32 2
  %bf.load39 = load i32, i32* %code38, align 8
  %bf.clear40 = and i32 %bf.load39, 255
  %cmp41 = icmp eq i32 %bf.clear40, 20
  br i1 %cmp41, label %if.then.47, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else.36
  %42 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common42 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %code43 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common42, i32 0, i32 2
  %bf.load44 = load i32, i32* %code43, align 8
  %bf.clear45 = and i32 %bf.load44, 255
  %cmp46 = icmp eq i32 %bf.clear45, 21
  br i1 %cmp46, label %if.then.47, label %if.end.104

if.then.47:                                       ; preds = %lor.lhs.false, %if.else.36
  %43 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %cmp48 = icmp eq %union.tree_node* %43, null
  br i1 %cmp48, label %if.then.49, label %if.end.50

if.then.49:                                       ; preds = %if.then.47
  br label %while.end.106

if.end.50:                                        ; preds = %if.then.47
  %44 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %call51 = call %union.tree_node* @bit_position(%union.tree_node* %44)
  store %union.tree_node* %call51, %union.tree_node** %ctor_unfilled_bitpos, align 8
  %45 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %purpose52 = getelementptr inbounds %struct.init_node, %struct.init_node* %45, i32 0, i32 4
  %46 = load %union.tree_node*, %union.tree_node** %purpose52, align 8
  %call53 = call %union.tree_node* @bit_position(%union.tree_node* %46)
  store %union.tree_node* %call53, %union.tree_node** %elt_bitpos, align 8
  %47 = load %union.tree_node*, %union.tree_node** %elt_bitpos, align 8
  %48 = load %union.tree_node*, %union.tree_node** %ctor_unfilled_bitpos, align 8
  %call54 = call i32 @tree_int_cst_equal(%union.tree_node* %47, %union.tree_node* %48)
  %tobool55 = icmp ne i32 %call54, 0
  br i1 %tobool55, label %if.then.56, label %if.else.63

if.then.56:                                       ; preds = %if.end.50
  %49 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %purpose57 = getelementptr inbounds %struct.init_node, %struct.init_node* %49, i32 0, i32 4
  %50 = load %union.tree_node*, %union.tree_node** %purpose57, align 8
  store %union.tree_node* %50, %union.tree_node** @constructor_unfilled_fields, align 8
  %51 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %value58 = getelementptr inbounds %struct.init_node, %struct.init_node* %51, i32 0, i32 5
  %52 = load %union.tree_node*, %union.tree_node** %value58, align 8
  %53 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %purpose59 = getelementptr inbounds %struct.init_node, %struct.init_node* %53, i32 0, i32 4
  %54 = load %union.tree_node*, %union.tree_node** %purpose59, align 8
  %common60 = bitcast %union.tree_node* %54 to %struct.tree_common*
  %type61 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common60, i32 0, i32 1
  %55 = load %union.tree_node*, %union.tree_node** %type61, align 8
  %56 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %purpose62 = getelementptr inbounds %struct.init_node, %struct.init_node* %56, i32 0, i32 4
  %57 = load %union.tree_node*, %union.tree_node** %purpose62, align 8
  call void @output_init_element(%union.tree_node* %52, %union.tree_node* %55, %union.tree_node* %57, i32 0)
  br label %if.end.103

if.else.63:                                       ; preds = %if.end.50
  %58 = load %union.tree_node*, %union.tree_node** %ctor_unfilled_bitpos, align 8
  %59 = load %union.tree_node*, %union.tree_node** %elt_bitpos, align 8
  %call64 = call i32 @tree_int_cst_lt(%union.tree_node* %58, %union.tree_node* %59)
  %tobool65 = icmp ne i32 %call64, 0
  br i1 %tobool65, label %if.then.66, label %if.else.74

if.then.66:                                       ; preds = %if.else.63
  %60 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %left67 = getelementptr inbounds %struct.init_node, %struct.init_node* %60, i32 0, i32 0
  %61 = load %struct.init_node*, %struct.init_node** %left67, align 8
  %tobool68 = icmp ne %struct.init_node* %61, null
  br i1 %tobool68, label %if.then.69, label %if.else.71

if.then.69:                                       ; preds = %if.then.66
  %62 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %left70 = getelementptr inbounds %struct.init_node, %struct.init_node* %62, i32 0, i32 0
  %63 = load %struct.init_node*, %struct.init_node** %left70, align 8
  store %struct.init_node* %63, %struct.init_node** %elt, align 8
  br label %if.end.73

if.else.71:                                       ; preds = %if.then.66
  %64 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %purpose72 = getelementptr inbounds %struct.init_node, %struct.init_node* %64, i32 0, i32 4
  %65 = load %union.tree_node*, %union.tree_node** %purpose72, align 8
  store %union.tree_node* %65, %union.tree_node** %next, align 8
  br label %while.end.106

if.end.73:                                        ; preds = %if.then.69
  br label %if.end.102

if.else.74:                                       ; preds = %if.else.63
  %66 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %right75 = getelementptr inbounds %struct.init_node, %struct.init_node* %66, i32 0, i32 1
  %67 = load %struct.init_node*, %struct.init_node** %right75, align 8
  %tobool76 = icmp ne %struct.init_node* %67, null
  br i1 %tobool76, label %if.then.77, label %if.else.79

if.then.77:                                       ; preds = %if.else.74
  %68 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %right78 = getelementptr inbounds %struct.init_node, %struct.init_node* %68, i32 0, i32 1
  %69 = load %struct.init_node*, %struct.init_node** %right78, align 8
  store %struct.init_node* %69, %struct.init_node** %elt, align 8
  br label %if.end.101

if.else.79:                                       ; preds = %if.else.74
  br label %while.cond.80

while.cond.80:                                    ; preds = %while.body.88, %if.else.79
  %70 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %parent81 = getelementptr inbounds %struct.init_node, %struct.init_node* %70, i32 0, i32 2
  %71 = load %struct.init_node*, %struct.init_node** %parent81, align 8
  %tobool82 = icmp ne %struct.init_node* %71, null
  br i1 %tobool82, label %land.rhs.83, label %land.end.87

land.rhs.83:                                      ; preds = %while.cond.80
  %72 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %parent84 = getelementptr inbounds %struct.init_node, %struct.init_node* %72, i32 0, i32 2
  %73 = load %struct.init_node*, %struct.init_node** %parent84, align 8
  %right85 = getelementptr inbounds %struct.init_node, %struct.init_node* %73, i32 0, i32 1
  %74 = load %struct.init_node*, %struct.init_node** %right85, align 8
  %75 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %cmp86 = icmp eq %struct.init_node* %74, %75
  br label %land.end.87

land.end.87:                                      ; preds = %land.rhs.83, %while.cond.80
  %76 = phi i1 [ false, %while.cond.80 ], [ %cmp86, %land.rhs.83 ]
  br i1 %76, label %while.body.88, label %while.end.90

while.body.88:                                    ; preds = %land.end.87
  %77 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %parent89 = getelementptr inbounds %struct.init_node, %struct.init_node* %77, i32 0, i32 2
  %78 = load %struct.init_node*, %struct.init_node** %parent89, align 8
  store %struct.init_node* %78, %struct.init_node** %elt, align 8
  br label %while.cond.80

while.end.90:                                     ; preds = %land.end.87
  %79 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %parent91 = getelementptr inbounds %struct.init_node, %struct.init_node* %79, i32 0, i32 2
  %80 = load %struct.init_node*, %struct.init_node** %parent91, align 8
  store %struct.init_node* %80, %struct.init_node** %elt, align 8
  %81 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %tobool92 = icmp ne %struct.init_node* %81, null
  br i1 %tobool92, label %land.lhs.true.93, label %if.end.100

land.lhs.true.93:                                 ; preds = %while.end.90
  %82 = load %union.tree_node*, %union.tree_node** %ctor_unfilled_bitpos, align 8
  %83 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %purpose94 = getelementptr inbounds %struct.init_node, %struct.init_node* %83, i32 0, i32 4
  %84 = load %union.tree_node*, %union.tree_node** %purpose94, align 8
  %call95 = call %union.tree_node* @bit_position(%union.tree_node* %84)
  %call96 = call i32 @tree_int_cst_lt(%union.tree_node* %82, %union.tree_node* %call95)
  %tobool97 = icmp ne i32 %call96, 0
  br i1 %tobool97, label %if.then.98, label %if.end.100

if.then.98:                                       ; preds = %land.lhs.true.93
  %85 = load %struct.init_node*, %struct.init_node** %elt, align 8
  %purpose99 = getelementptr inbounds %struct.init_node, %struct.init_node* %85, i32 0, i32 4
  %86 = load %union.tree_node*, %union.tree_node** %purpose99, align 8
  store %union.tree_node* %86, %union.tree_node** %next, align 8
  br label %while.end.106

if.end.100:                                       ; preds = %land.lhs.true.93, %while.end.90
  br label %if.end.101

if.end.101:                                       ; preds = %if.end.100, %if.then.77
  br label %if.end.102

if.end.102:                                       ; preds = %if.end.101, %if.end.73
  br label %if.end.103

if.end.103:                                       ; preds = %if.end.102, %if.then.56
  br label %if.end.104

if.end.104:                                       ; preds = %if.end.103, %lor.lhs.false
  br label %if.end.105

if.end.105:                                       ; preds = %if.end.104, %if.end.35
  br label %while.cond

while.end.106:                                    ; preds = %if.then.98, %if.else.71, %if.then.49, %if.then.30, %if.else.11, %while.cond
  %87 = load i32, i32* %all.addr, align 4
  %tobool107 = icmp ne i32 %87, 0
  br i1 %tobool107, label %land.lhs.true.108, label %if.then.110

land.lhs.true.108:                                ; preds = %while.end.106
  %88 = load %union.tree_node*, %union.tree_node** %next, align 8
  %cmp109 = icmp ne %union.tree_node* %88, null
  br i1 %cmp109, label %if.end.111, label %if.then.110

if.then.110:                                      ; preds = %land.lhs.true.108, %while.end.106
  ret void

if.end.111:                                       ; preds = %land.lhs.true.108
  %89 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common112 = bitcast %union.tree_node* %89 to %struct.tree_common*
  %code113 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common112, i32 0, i32 2
  %bf.load114 = load i32, i32* %code113, align 8
  %bf.clear115 = and i32 %bf.load114, 255
  %cmp116 = icmp eq i32 %bf.clear115, 20
  br i1 %cmp116, label %if.then.123, label %lor.lhs.false.117

lor.lhs.false.117:                                ; preds = %if.end.111
  %90 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common118 = bitcast %union.tree_node* %90 to %struct.tree_common*
  %code119 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common118, i32 0, i32 2
  %bf.load120 = load i32, i32* %code119, align 8
  %bf.clear121 = and i32 %bf.load120, 255
  %cmp122 = icmp eq i32 %bf.clear121, 21
  br i1 %cmp122, label %if.then.123, label %if.else.124

if.then.123:                                      ; preds = %lor.lhs.false.117, %if.end.111
  %91 = load %union.tree_node*, %union.tree_node** %next, align 8
  store %union.tree_node* %91, %union.tree_node** @constructor_unfilled_fields, align 8
  br label %if.end.132

if.else.124:                                      ; preds = %lor.lhs.false.117
  %92 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common125 = bitcast %union.tree_node* %92 to %struct.tree_common*
  %code126 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common125, i32 0, i32 2
  %bf.load127 = load i32, i32* %code126, align 8
  %bf.clear128 = and i32 %bf.load127, 255
  %cmp129 = icmp eq i32 %bf.clear128, 18
  br i1 %cmp129, label %if.then.130, label %if.end.131

if.then.130:                                      ; preds = %if.else.124
  %93 = load %union.tree_node*, %union.tree_node** %next, align 8
  store %union.tree_node* %93, %union.tree_node** @constructor_unfilled_index, align 8
  br label %if.end.131

if.end.131:                                       ; preds = %if.then.130, %if.else.124
  br label %if.end.132

if.end.132:                                       ; preds = %if.end.131, %if.then.123
  br label %retry
}

declare %union.tree_node* @nreverse(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @set_init_index(%union.tree_node* %first, %union.tree_node* %last) #0 {
entry:
  %first.addr = alloca %union.tree_node*, align 8
  %last.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %first, %union.tree_node** %first.addr, align 8
  store %union.tree_node* %last, %union.tree_node** %last.addr, align 8
  %call = call i32 @set_designator(i32 1)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end.129

if.end:                                           ; preds = %entry
  store i32 1, i32* @designator_errorneous, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %0 = load %union.tree_node*, %union.tree_node** %first.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 115
  br i1 %cmp, label %land.rhs, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.cond
  %1 = load %union.tree_node*, %union.tree_node** %first.addr, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load3 = load i32, i32* %code2, align 8
  %bf.clear4 = and i32 %bf.load3, 255
  %cmp5 = icmp eq i32 %bf.clear4, 114
  br i1 %cmp5, label %land.rhs, label %lor.lhs.false.6

lor.lhs.false.6:                                  ; preds = %lor.lhs.false
  %2 = load %union.tree_node*, %union.tree_node** %first.addr, align 8
  %common7 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 2
  %bf.load9 = load i32, i32* %code8, align 8
  %bf.clear10 = and i32 %bf.load9, 255
  %cmp11 = icmp eq i32 %bf.clear10, 116
  br i1 %cmp11, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.lhs.false.6, %lor.lhs.false, %while.cond
  %3 = load %union.tree_node*, %union.tree_node** %first.addr, align 8
  %common12 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common12, i32 0, i32 1
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type13 = bitcast %union.tree_node* %4 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type13, i32 0, i32 6
  %bf.load14 = load i32, i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load14, 9
  %bf.clear15 = and i32 %bf.lshr, 127
  %5 = load %union.tree_node*, %union.tree_node** %first.addr, align 8
  %exp = bitcast %union.tree_node* %5 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %common16 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %type17 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common16, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %type17, align 8
  %type18 = bitcast %union.tree_node* %7 to %struct.tree_type*
  %mode19 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type18, i32 0, i32 6
  %bf.load20 = load i32, i32* %mode19, align 4
  %bf.lshr21 = lshr i32 %bf.load20, 9
  %bf.clear22 = and i32 %bf.lshr21, 127
  %cmp23 = icmp eq i32 %bf.clear15, %bf.clear22
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false.6
  %8 = phi i1 [ false, %lor.lhs.false.6 ], [ %cmp23, %land.rhs ]
  br i1 %8, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %9 = load %union.tree_node*, %union.tree_node** %first.addr, align 8
  %exp24 = bitcast %union.tree_node* %9 to %struct.tree_exp*
  %operands25 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp24, i32 0, i32 2
  %arrayidx26 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands25, i32 0, i64 0
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx26, align 8
  store %union.tree_node* %10, %union.tree_node** %first.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %11 = load %union.tree_node*, %union.tree_node** %last.addr, align 8
  %tobool27 = icmp ne %union.tree_node* %11, null
  br i1 %tobool27, label %if.then.28, label %if.end.72

if.then.28:                                       ; preds = %while.end
  br label %while.cond.29

while.cond.29:                                    ; preds = %while.body.67, %if.then.28
  %12 = load %union.tree_node*, %union.tree_node** %last.addr, align 8
  %common30 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %code31 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common30, i32 0, i32 2
  %bf.load32 = load i32, i32* %code31, align 8
  %bf.clear33 = and i32 %bf.load32, 255
  %cmp34 = icmp eq i32 %bf.clear33, 115
  br i1 %cmp34, label %land.rhs.47, label %lor.lhs.false.35

lor.lhs.false.35:                                 ; preds = %while.cond.29
  %13 = load %union.tree_node*, %union.tree_node** %last.addr, align 8
  %common36 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %code37 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common36, i32 0, i32 2
  %bf.load38 = load i32, i32* %code37, align 8
  %bf.clear39 = and i32 %bf.load38, 255
  %cmp40 = icmp eq i32 %bf.clear39, 114
  br i1 %cmp40, label %land.rhs.47, label %lor.lhs.false.41

lor.lhs.false.41:                                 ; preds = %lor.lhs.false.35
  %14 = load %union.tree_node*, %union.tree_node** %last.addr, align 8
  %common42 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %code43 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common42, i32 0, i32 2
  %bf.load44 = load i32, i32* %code43, align 8
  %bf.clear45 = and i32 %bf.load44, 255
  %cmp46 = icmp eq i32 %bf.clear45, 116
  br i1 %cmp46, label %land.rhs.47, label %land.end.66

land.rhs.47:                                      ; preds = %lor.lhs.false.41, %lor.lhs.false.35, %while.cond.29
  %15 = load %union.tree_node*, %union.tree_node** %last.addr, align 8
  %common48 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %type49 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common48, i32 0, i32 1
  %16 = load %union.tree_node*, %union.tree_node** %type49, align 8
  %type50 = bitcast %union.tree_node* %16 to %struct.tree_type*
  %mode51 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type50, i32 0, i32 6
  %bf.load52 = load i32, i32* %mode51, align 4
  %bf.lshr53 = lshr i32 %bf.load52, 9
  %bf.clear54 = and i32 %bf.lshr53, 127
  %17 = load %union.tree_node*, %union.tree_node** %last.addr, align 8
  %exp55 = bitcast %union.tree_node* %17 to %struct.tree_exp*
  %operands56 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp55, i32 0, i32 2
  %arrayidx57 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands56, i32 0, i64 0
  %18 = load %union.tree_node*, %union.tree_node** %arrayidx57, align 8
  %common58 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %type59 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common58, i32 0, i32 1
  %19 = load %union.tree_node*, %union.tree_node** %type59, align 8
  %type60 = bitcast %union.tree_node* %19 to %struct.tree_type*
  %mode61 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type60, i32 0, i32 6
  %bf.load62 = load i32, i32* %mode61, align 4
  %bf.lshr63 = lshr i32 %bf.load62, 9
  %bf.clear64 = and i32 %bf.lshr63, 127
  %cmp65 = icmp eq i32 %bf.clear54, %bf.clear64
  br label %land.end.66

land.end.66:                                      ; preds = %land.rhs.47, %lor.lhs.false.41
  %20 = phi i1 [ false, %lor.lhs.false.41 ], [ %cmp65, %land.rhs.47 ]
  br i1 %20, label %while.body.67, label %while.end.71

while.body.67:                                    ; preds = %land.end.66
  %21 = load %union.tree_node*, %union.tree_node** %last.addr, align 8
  %exp68 = bitcast %union.tree_node* %21 to %struct.tree_exp*
  %operands69 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp68, i32 0, i32 2
  %arrayidx70 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands69, i32 0, i64 0
  %22 = load %union.tree_node*, %union.tree_node** %arrayidx70, align 8
  store %union.tree_node* %22, %union.tree_node** %last.addr, align 8
  br label %while.cond.29

while.end.71:                                     ; preds = %land.end.66
  br label %if.end.72

if.end.72:                                        ; preds = %while.end.71, %while.end
  %23 = load %union.tree_node*, %union.tree_node** %first.addr, align 8
  %common73 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %code74 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common73, i32 0, i32 2
  %bf.load75 = load i32, i32* %code74, align 8
  %bf.clear76 = and i32 %bf.load75, 255
  %cmp77 = icmp ne i32 %bf.clear76, 25
  br i1 %cmp77, label %if.then.78, label %if.else

if.then.78:                                       ; preds = %if.end.72
  call void @error_init(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.121, i32 0, i32 0))
  br label %if.end.129

if.else:                                          ; preds = %if.end.72
  %24 = load %union.tree_node*, %union.tree_node** %last.addr, align 8
  %cmp79 = icmp ne %union.tree_node* %24, null
  br i1 %cmp79, label %land.lhs.true, label %if.else.86

land.lhs.true:                                    ; preds = %if.else
  %25 = load %union.tree_node*, %union.tree_node** %last.addr, align 8
  %common80 = bitcast %union.tree_node* %25 to %struct.tree_common*
  %code81 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common80, i32 0, i32 2
  %bf.load82 = load i32, i32* %code81, align 8
  %bf.clear83 = and i32 %bf.load82, 255
  %cmp84 = icmp ne i32 %bf.clear83, 25
  br i1 %cmp84, label %if.then.85, label %if.else.86

if.then.85:                                       ; preds = %land.lhs.true
  call void @error_init(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.121, i32 0, i32 0))
  br label %if.end.128

if.else.86:                                       ; preds = %land.lhs.true, %if.else
  %26 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common87 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %code88 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common87, i32 0, i32 2
  %bf.load89 = load i32, i32* %code88, align 8
  %bf.clear90 = and i32 %bf.load89, 255
  %cmp91 = icmp ne i32 %bf.clear90, 18
  br i1 %cmp91, label %if.then.92, label %if.else.93

if.then.92:                                       ; preds = %if.else.86
  call void @error_init(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.122, i32 0, i32 0))
  br label %if.end.127

if.else.93:                                       ; preds = %if.else.86
  %27 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8
  %tobool94 = icmp ne %union.tree_node* %27, null
  br i1 %tobool94, label %land.lhs.true.95, label %if.else.99

land.lhs.true.95:                                 ; preds = %if.else.93
  %28 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8
  %29 = load %union.tree_node*, %union.tree_node** %first.addr, align 8
  %call96 = call i32 @tree_int_cst_lt(%union.tree_node* %28, %union.tree_node* %29)
  %tobool97 = icmp ne i32 %call96, 0
  br i1 %tobool97, label %if.then.98, label %if.else.99

if.then.98:                                       ; preds = %land.lhs.true.95
  call void @error_init(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.123, i32 0, i32 0))
  br label %if.end.126

if.else.99:                                       ; preds = %land.lhs.true.95, %if.else.93
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i32 0, i64 3), align 8
  %31 = load %union.tree_node*, %union.tree_node** %first.addr, align 8
  %call100 = call %union.tree_node* @convert(%union.tree_node* %30, %union.tree_node* %31)
  store %union.tree_node* %call100, %union.tree_node** @constructor_index, align 8
  %32 = load %union.tree_node*, %union.tree_node** %last.addr, align 8
  %tobool101 = icmp ne %union.tree_node* %32, null
  br i1 %tobool101, label %if.then.102, label %if.end.120

if.then.102:                                      ; preds = %if.else.99
  %33 = load %union.tree_node*, %union.tree_node** %first.addr, align 8
  %34 = load %union.tree_node*, %union.tree_node** %last.addr, align 8
  %call103 = call i32 @tree_int_cst_equal(%union.tree_node* %33, %union.tree_node* %34)
  %tobool104 = icmp ne i32 %call103, 0
  br i1 %tobool104, label %if.then.105, label %if.else.106

if.then.105:                                      ; preds = %if.then.102
  store %union.tree_node* null, %union.tree_node** %last.addr, align 8
  br label %if.end.119

if.else.106:                                      ; preds = %if.then.102
  %35 = load %union.tree_node*, %union.tree_node** %last.addr, align 8
  %36 = load %union.tree_node*, %union.tree_node** %first.addr, align 8
  %call107 = call i32 @tree_int_cst_lt(%union.tree_node* %35, %union.tree_node* %36)
  %tobool108 = icmp ne i32 %call107, 0
  br i1 %tobool108, label %if.then.109, label %if.else.110

if.then.109:                                      ; preds = %if.else.106
  call void @error_init(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.124, i32 0, i32 0))
  store %union.tree_node* null, %union.tree_node** %last.addr, align 8
  br label %if.end.118

if.else.110:                                      ; preds = %if.else.106
  %37 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i32 0, i64 3), align 8
  %38 = load %union.tree_node*, %union.tree_node** %last.addr, align 8
  %call111 = call %union.tree_node* @convert(%union.tree_node* %37, %union.tree_node* %38)
  store %union.tree_node* %call111, %union.tree_node** %last.addr, align 8
  %39 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8
  %cmp112 = icmp ne %union.tree_node* %39, null
  br i1 %cmp112, label %land.lhs.true.113, label %if.end.117

land.lhs.true.113:                                ; preds = %if.else.110
  %40 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8
  %41 = load %union.tree_node*, %union.tree_node** %last.addr, align 8
  %call114 = call i32 @tree_int_cst_lt(%union.tree_node* %40, %union.tree_node* %41)
  %tobool115 = icmp ne i32 %call114, 0
  br i1 %tobool115, label %if.then.116, label %if.end.117

if.then.116:                                      ; preds = %land.lhs.true.113
  call void @error_init(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.125, i32 0, i32 0))
  store %union.tree_node* null, %union.tree_node** %last.addr, align 8
  br label %if.end.117

if.end.117:                                       ; preds = %if.then.116, %land.lhs.true.113, %if.else.110
  br label %if.end.118

if.end.118:                                       ; preds = %if.end.117, %if.then.109
  br label %if.end.119

if.end.119:                                       ; preds = %if.end.118, %if.then.105
  br label %if.end.120

if.end.120:                                       ; preds = %if.end.119, %if.else.99
  %42 = load i32, i32* @designator_depth, align 4
  %inc = add nsw i32 %42, 1
  store i32 %inc, i32* @designator_depth, align 4
  store i32 0, i32* @designator_errorneous, align 4
  %43 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** @constructor_range_stack, align 8
  %tobool121 = icmp ne %struct.constructor_range_stack* %43, null
  br i1 %tobool121, label %if.then.124, label %lor.lhs.false.122

lor.lhs.false.122:                                ; preds = %if.end.120
  %44 = load %union.tree_node*, %union.tree_node** %last.addr, align 8
  %tobool123 = icmp ne %union.tree_node* %44, null
  br i1 %tobool123, label %if.then.124, label %if.end.125

if.then.124:                                      ; preds = %lor.lhs.false.122, %if.end.120
  %45 = load %union.tree_node*, %union.tree_node** %last.addr, align 8
  call void @push_range_stack(%union.tree_node* %45)
  br label %if.end.125

if.end.125:                                       ; preds = %if.then.124, %lor.lhs.false.122
  br label %if.end.126

if.end.126:                                       ; preds = %if.end.125, %if.then.98
  br label %if.end.127

if.end.127:                                       ; preds = %if.end.126, %if.then.92
  br label %if.end.128

if.end.128:                                       ; preds = %if.end.127, %if.then.85
  br label %if.end.129

if.end.129:                                       ; preds = %if.then, %if.end.128, %if.then.78
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @set_designator(i32 %array) #0 {
entry:
  %retval = alloca i32, align 4
  %array.addr = alloca i32, align 4
  %subtype = alloca %union.tree_node*, align 8
  %subcode = alloca i32, align 4
  store i32 %array, i32* %array.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %cmp = icmp eq %union.tree_node* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @designator_errorneous, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then.1, label %if.end.2

if.then.1:                                        ; preds = %if.end
  store i32 1, i32* %retval
  br label %return

if.end.2:                                         ; preds = %if.end
  %2 = load i32, i32* @designator_depth, align 4
  %tobool3 = icmp ne i32 %2, 0
  br i1 %tobool3, label %if.end.9, label %if.then.4

if.then.4:                                        ; preds = %if.end.2
  %3 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** @constructor_range_stack, align 8
  %tobool5 = icmp ne %struct.constructor_range_stack* %3, null
  br i1 %tobool5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.then.4
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), i32 5645, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.set_designator, i32 0, i32 0)) #5
  unreachable

if.end.7:                                         ; preds = %if.then.4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end.7
  %4 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8
  %implicit = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %4, i32 0, i32 16
  %5 = load i8, i8* %implicit, align 1
  %tobool8 = icmp ne i8 %5, 0
  br i1 %tobool8, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %call = call %union.tree_node* @pop_init_level(i32 1)
  call void @process_init_element(%union.tree_node* %call)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  store i32 1, i32* @constructor_designated, align 4
  store i32 0, i32* %retval
  br label %return

if.end.9:                                         ; preds = %if.end.2
  %6 = load i32, i32* @constructor_no_implicit, align 4
  %tobool10 = icmp ne i32 %6, 0
  br i1 %tobool10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end.9
  call void @error_init(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.194, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.12:                                        ; preds = %if.end.9
  %7 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common = bitcast %union.tree_node* %7 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp13 = icmp eq i32 %bf.clear, 20
  br i1 %cmp13, label %if.then.19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.12
  %8 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common14 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %code15 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common14, i32 0, i32 2
  %bf.load16 = load i32, i32* %code15, align 8
  %bf.clear17 = and i32 %bf.load16, 255
  %cmp18 = icmp eq i32 %bf.clear17, 21
  br i1 %cmp18, label %if.then.19, label %if.else

if.then.19:                                       ; preds = %lor.lhs.false, %if.end.12
  %9 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %common20 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common20, i32 0, i32 1
  %10 = load %union.tree_node*, %union.tree_node** %type, align 8
  store %union.tree_node* %10, %union.tree_node** %subtype, align 8
  %11 = load %union.tree_node*, %union.tree_node** %subtype, align 8
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp21 = icmp ne %union.tree_node* %11, %12
  br i1 %cmp21, label %if.then.22, label %if.end.24

if.then.22:                                       ; preds = %if.then.19
  %13 = load %union.tree_node*, %union.tree_node** %subtype, align 8
  %type23 = bitcast %union.tree_node* %13 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type23, i32 0, i32 15
  %14 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  store %union.tree_node* %14, %union.tree_node** %subtype, align 8
  br label %if.end.24

if.end.24:                                        ; preds = %if.then.22, %if.then.19
  br label %if.end.37

if.else:                                          ; preds = %lor.lhs.false
  %15 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common25 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %code26 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common25, i32 0, i32 2
  %bf.load27 = load i32, i32* %code26, align 8
  %bf.clear28 = and i32 %bf.load27, 255
  %cmp29 = icmp eq i32 %bf.clear28, 18
  br i1 %cmp29, label %if.then.30, label %if.else.35

if.then.30:                                       ; preds = %if.else
  %16 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common31 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %type32 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common31, i32 0, i32 1
  %17 = load %union.tree_node*, %union.tree_node** %type32, align 8
  %type33 = bitcast %union.tree_node* %17 to %struct.tree_type*
  %main_variant34 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type33, i32 0, i32 15
  %18 = load %union.tree_node*, %union.tree_node** %main_variant34, align 8
  store %union.tree_node* %18, %union.tree_node** %subtype, align 8
  br label %if.end.36

if.else.35:                                       ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), i32 5673, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.set_designator, i32 0, i32 0)) #5
  unreachable

if.end.36:                                        ; preds = %if.then.30
  br label %if.end.37

if.end.37:                                        ; preds = %if.end.36, %if.end.24
  %19 = load %union.tree_node*, %union.tree_node** %subtype, align 8
  %common38 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %code39 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common38, i32 0, i32 2
  %bf.load40 = load i32, i32* %code39, align 8
  %bf.clear41 = and i32 %bf.load40, 255
  store i32 %bf.clear41, i32* %subcode, align 4
  %20 = load i32, i32* %array.addr, align 4
  %tobool42 = icmp ne i32 %20, 0
  br i1 %tobool42, label %land.lhs.true, label %if.else.45

land.lhs.true:                                    ; preds = %if.end.37
  %21 = load i32, i32* %subcode, align 4
  %cmp43 = icmp ne i32 %21, 18
  br i1 %cmp43, label %if.then.44, label %if.else.45

if.then.44:                                       ; preds = %land.lhs.true
  call void @error_init(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.122, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.else.45:                                       ; preds = %land.lhs.true, %if.end.37
  %22 = load i32, i32* %array.addr, align 4
  %tobool46 = icmp ne i32 %22, 0
  br i1 %tobool46, label %if.end.52, label %land.lhs.true.47

land.lhs.true.47:                                 ; preds = %if.else.45
  %23 = load i32, i32* %subcode, align 4
  %cmp48 = icmp ne i32 %23, 20
  br i1 %cmp48, label %land.lhs.true.49, label %if.end.52

land.lhs.true.49:                                 ; preds = %land.lhs.true.47
  %24 = load i32, i32* %subcode, align 4
  %cmp50 = icmp ne i32 %24, 21
  br i1 %cmp50, label %if.then.51, label %if.end.52

if.then.51:                                       ; preds = %land.lhs.true.49
  call void @error_init(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.126, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.52:                                        ; preds = %land.lhs.true.49, %land.lhs.true.47, %if.else.45
  br label %if.end.53

if.end.53:                                        ; preds = %if.end.52
  store i32 1, i32* @constructor_designated, align 4
  call void @push_init_level(i32 2)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.53, %if.then.51, %if.then.44, %if.then.11, %while.end, %if.then.1, %if.then
  %25 = load i32, i32* %retval
  ret i32 %25
}

; Function Attrs: nounwind uwtable
define internal void @push_range_stack(%union.tree_node* %range_end) #0 {
entry:
  %range_end.addr = alloca %union.tree_node*, align 8
  %p = alloca %struct.constructor_range_stack*, align 8
  store %union.tree_node* %range_end, %union.tree_node** %range_end.addr, align 8
  %call = call i8* @ggc_alloc(i64 56)
  %0 = bitcast i8* %call to %struct.constructor_range_stack*
  store %struct.constructor_range_stack* %0, %struct.constructor_range_stack** %p, align 8
  %1 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** @constructor_range_stack, align 8
  %2 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %prev = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %2, i32 0, i32 1
  store %struct.constructor_range_stack* %1, %struct.constructor_range_stack** %prev, align 8
  %3 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %next = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %3, i32 0, i32 0
  store %struct.constructor_range_stack* null, %struct.constructor_range_stack** %next, align 8
  %4 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8
  %5 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %fields = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %5, i32 0, i32 6
  store %union.tree_node* %4, %union.tree_node** %fields, align 8
  %6 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8
  %7 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %range_start = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %7, i32 0, i32 3
  store %union.tree_node* %6, %union.tree_node** %range_start, align 8
  %8 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8
  %9 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %index = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %9, i32 0, i32 4
  store %union.tree_node* %8, %union.tree_node** %index, align 8
  %10 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8
  %11 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %stack = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %11, i32 0, i32 2
  store %struct.constructor_stack* %10, %struct.constructor_stack** %stack, align 8
  %12 = load %union.tree_node*, %union.tree_node** %range_end.addr, align 8
  %13 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %range_end1 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %13, i32 0, i32 5
  store %union.tree_node* %12, %union.tree_node** %range_end1, align 8
  %14 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** @constructor_range_stack, align 8
  %tobool = icmp ne %struct.constructor_range_stack* %14, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %15 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  %16 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** @constructor_range_stack, align 8
  %next2 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %16, i32 0, i32 0
  store %struct.constructor_range_stack* %15, %struct.constructor_range_stack** %next2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %17 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %p, align 8
  store %struct.constructor_range_stack* %17, %struct.constructor_range_stack** @constructor_range_stack, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @set_init_label(%union.tree_node* %fieldname) #0 {
entry:
  %fieldname.addr = alloca %union.tree_node*, align 8
  %tail = alloca %union.tree_node*, align 8
  store %union.tree_node* %fieldname, %union.tree_node** %fieldname.addr, align 8
  %call = call i32 @set_designator(i32 0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end.18

if.end:                                           ; preds = %entry
  store i32 1, i32* @designator_errorneous, align 4
  %0 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp ne i32 %bf.clear, 20
  br i1 %cmp, label %land.lhs.true, label %if.end.7

land.lhs.true:                                    ; preds = %if.end
  %1 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load3 = load i32, i32* %code2, align 8
  %bf.clear4 = and i32 %bf.load3, 255
  %cmp5 = icmp ne i32 %bf.clear4, 21
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %land.lhs.true
  call void @error_init(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.126, i32 0, i32 0))
  br label %if.end.18

if.end.7:                                         ; preds = %land.lhs.true, %if.end
  %2 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %type = bitcast %union.tree_node* %2 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %values, align 8
  store %union.tree_node* %3, %union.tree_node** %tail, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.7
  %4 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %tobool8 = icmp ne %union.tree_node* %4, null
  br i1 %tobool8, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %decl = bitcast %union.tree_node* %5 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 8
  %6 = load %union.tree_node*, %union.tree_node** %name, align 8
  %7 = load %union.tree_node*, %union.tree_node** %fieldname.addr, align 8
  %cmp9 = icmp eq %union.tree_node* %6, %7
  br i1 %cmp9, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %for.body
  br label %for.end

if.end.11:                                        ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.11
  %8 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %common12 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common12, i32 0, i32 0
  %9 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %9, %union.tree_node** %tail, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.10, %for.cond
  %10 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %cmp13 = icmp eq %union.tree_node* %10, null
  br i1 %cmp13, label %if.then.14, label %if.else

if.then.14:                                       ; preds = %for.end
  %11 = load %union.tree_node*, %union.tree_node** %fieldname.addr, align 8
  %identifier = bitcast %union.tree_node* %11 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %12 = load i8*, i8** %str, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.127, i32 0, i32 0), i8* %12)
  br label %if.end.18

if.else:                                          ; preds = %for.end
  %13 = load %union.tree_node*, %union.tree_node** %tail, align 8
  store %union.tree_node* %13, %union.tree_node** @constructor_fields, align 8
  %14 = load i32, i32* @designator_depth, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* @designator_depth, align 4
  store i32 0, i32* @designator_errorneous, align 4
  %15 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** @constructor_range_stack, align 8
  %tobool15 = icmp ne %struct.constructor_range_stack* %15, null
  br i1 %tobool15, label %if.then.16, label %if.end.17

if.then.16:                                       ; preds = %if.else
  call void @push_range_stack(%union.tree_node* null)
  br label %if.end.17

if.end.17:                                        ; preds = %if.then.16, %if.else
  br label %if.end.18

if.end.18:                                        ; preds = %if.then, %if.then.6, %if.end.17, %if.then.14
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @output_init_element(%union.tree_node* %value, %union.tree_node* %type, %union.tree_node* %field, i32 %pending) #0 {
entry:
  %value.addr = alloca %union.tree_node*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  %field.addr = alloca %union.tree_node*, align 8
  %pending.addr = alloca i32, align 4
  %decl = alloca %union.tree_node*, align 8
  %bitpos = alloca %union.tree_node*, align 8
  %unfillpos = alloca %union.tree_node*, align 8
  store %union.tree_node* %value, %union.tree_node** %value.addr, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %field, %union.tree_node** %field.addr, align 8
  store i32 %pending, i32* %pending.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %common2 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 23
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common3 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %type4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %type4, align 8
  %common5 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5, i32 0, i32 2
  %bf.load7 = load i32, i32* %code6, align 8
  %bf.clear8 = and i32 %bf.load7, 255
  %cmp9 = icmp eq i32 %bf.clear8, 18
  br i1 %cmp9, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false
  %4 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common10 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code11 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common10, i32 0, i32 2
  %bf.load12 = load i32, i32* %code11, align 8
  %bf.clear13 = and i32 %bf.load12, 255
  %cmp14 = icmp eq i32 %bf.clear13, 29
  br i1 %cmp14, label %land.lhs.true.15, label %land.lhs.true.29

land.lhs.true.15:                                 ; preds = %land.lhs.true
  %5 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common16 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code17 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common16, i32 0, i32 2
  %bf.load18 = load i32, i32* %code17, align 8
  %bf.clear19 = and i32 %bf.load18, 255
  %cmp20 = icmp eq i32 %bf.clear19, 18
  br i1 %cmp20, label %land.lhs.true.21, label %land.lhs.true.29

land.lhs.true.21:                                 ; preds = %land.lhs.true.15
  %6 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common22 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %type23 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common22, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %type23, align 8
  %common24 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %code25 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common24, i32 0, i32 2
  %bf.load26 = load i32, i32* %code25, align 8
  %bf.clear27 = and i32 %bf.load26, 255
  %cmp28 = icmp eq i32 %bf.clear27, 6
  br i1 %cmp28, label %if.end, label %land.lhs.true.29

land.lhs.true.29:                                 ; preds = %land.lhs.true.21, %land.lhs.true.15, %land.lhs.true
  %8 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common30 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %type31 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common30, i32 0, i32 1
  %9 = load %union.tree_node*, %union.tree_node** %type31, align 8
  %type32 = bitcast %union.tree_node* %9 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type32, i32 0, i32 15
  %10 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %11 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type33 = bitcast %union.tree_node* %11 to %struct.tree_type*
  %main_variant34 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type33, i32 0, i32 15
  %12 = load %union.tree_node*, %union.tree_node** %main_variant34, align 8
  %call = call i32 @comptypes(%union.tree_node* %10, %union.tree_node* %12)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true.29, %entry
  %13 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %call35 = call %union.tree_node* @default_conversion(%union.tree_node* %13)
  store %union.tree_node* %call35, %union.tree_node** %value.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.29, %land.lhs.true.21, %lor.lhs.false
  %14 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common36 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %code37 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common36, i32 0, i32 2
  %bf.load38 = load i32, i32* %code37, align 8
  %bf.clear39 = and i32 %bf.load38, 255
  %cmp40 = icmp eq i32 %bf.clear39, 170
  br i1 %cmp40, label %land.lhs.true.41, label %if.end.52

land.lhs.true.41:                                 ; preds = %if.end
  %15 = load i32, i32* @require_constant_value, align 4
  %tobool42 = icmp ne i32 %15, 0
  br i1 %tobool42, label %land.lhs.true.43, label %if.end.52

land.lhs.true.43:                                 ; preds = %land.lhs.true.41
  %16 = load i32, i32* @flag_isoc99, align 4
  %tobool44 = icmp ne i32 %16, 0
  br i1 %tobool44, label %if.end.52, label %land.lhs.true.45

land.lhs.true.45:                                 ; preds = %land.lhs.true.43
  %17 = load i32, i32* %pending.addr, align 4
  %tobool46 = icmp ne i32 %17, 0
  br i1 %tobool46, label %if.then.47, label %if.end.52

if.then.47:                                       ; preds = %land.lhs.true.45
  %18 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %exp = bitcast %union.tree_node* %18 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %19 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %exp48 = bitcast %union.tree_node* %19 to %struct.tree_exp*
  %operands49 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp48, i32 0, i32 2
  %arrayidx50 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands49, i32 0, i64 0
  %20 = load %union.tree_node*, %union.tree_node** %arrayidx50, align 8
  store %union.tree_node* %20, %union.tree_node** %decl, align 8
  %21 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl51 = bitcast %union.tree_node* %21 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl51, i32 0, i32 12
  %22 = load %union.tree_node*, %union.tree_node** %initial, align 8
  store %union.tree_node* %22, %union.tree_node** %value.addr, align 8
  br label %if.end.52

if.end.52:                                        ; preds = %if.then.47, %land.lhs.true.45, %land.lhs.true.43, %land.lhs.true.41, %if.end
  %23 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp53 = icmp eq %union.tree_node* %23, %24
  br i1 %cmp53, label %if.then.54, label %if.else

if.then.54:                                       ; preds = %if.end.52
  store i32 1, i32* @constructor_erroneous, align 4
  br label %if.end.92

if.else:                                          ; preds = %if.end.52
  %25 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common55 = bitcast %union.tree_node* %25 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common55, i32 0, i32 2
  %bf.load56 = load i32, i32* %constant_flag, align 8
  %bf.lshr = lshr i32 %bf.load56, 9
  %bf.clear57 = and i32 %bf.lshr, 1
  %tobool58 = icmp ne i32 %bf.clear57, 0
  br i1 %tobool58, label %if.else.60, label %if.then.59

if.then.59:                                       ; preds = %if.else
  store i32 0, i32* @constructor_constant, align 4
  br label %if.end.91

if.else.60:                                       ; preds = %if.else
  %26 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %27 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common61 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %type62 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common61, i32 0, i32 1
  %28 = load %union.tree_node*, %union.tree_node** %type62, align 8
  %call63 = call %union.tree_node* @initializer_constant_valid_p(%union.tree_node* %26, %union.tree_node* %28)
  %cmp64 = icmp eq %union.tree_node* %call63, null
  br i1 %cmp64, label %if.then.89, label %lor.lhs.false.65

lor.lhs.false.65:                                 ; preds = %if.else.60
  %29 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common66 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %code67 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common66, i32 0, i32 2
  %bf.load68 = load i32, i32* %code67, align 8
  %bf.clear69 = and i32 %bf.load68, 255
  %cmp70 = icmp eq i32 %bf.clear69, 20
  br i1 %cmp70, label %land.lhs.true.77, label %lor.lhs.false.71

lor.lhs.false.71:                                 ; preds = %lor.lhs.false.65
  %30 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common72 = bitcast %union.tree_node* %30 to %struct.tree_common*
  %code73 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common72, i32 0, i32 2
  %bf.load74 = load i32, i32* %code73, align 8
  %bf.clear75 = and i32 %bf.load74, 255
  %cmp76 = icmp eq i32 %bf.clear75, 21
  br i1 %cmp76, label %land.lhs.true.77, label %if.end.90

land.lhs.true.77:                                 ; preds = %lor.lhs.false.71, %lor.lhs.false.65
  %31 = load %union.tree_node*, %union.tree_node** %field.addr, align 8
  %decl78 = bitcast %union.tree_node* %31 to %struct.tree_decl*
  %lang_flag_4 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl78, i32 0, i32 5
  %32 = bitcast i48* %lang_flag_4 to i64*
  %bf.load79 = load i64, i64* %32, align 8
  %bf.lshr80 = lshr i64 %bf.load79, 41
  %bf.clear81 = and i64 %bf.lshr80, 1
  %bf.cast = trunc i64 %bf.clear81 to i32
  %cmp82 = icmp eq i32 %bf.cast, 1
  br i1 %cmp82, label %land.lhs.true.83, label %if.end.90

land.lhs.true.83:                                 ; preds = %land.lhs.true.77
  %33 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common84 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %code85 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common84, i32 0, i32 2
  %bf.load86 = load i32, i32* %code85, align 8
  %bf.clear87 = and i32 %bf.load86, 255
  %cmp88 = icmp ne i32 %bf.clear87, 25
  br i1 %cmp88, label %if.then.89, label %if.end.90

if.then.89:                                       ; preds = %land.lhs.true.83, %if.else.60
  store i32 0, i32* @constructor_simple, align 4
  br label %if.end.90

if.end.90:                                        ; preds = %if.then.89, %land.lhs.true.83, %land.lhs.true.77, %lor.lhs.false.71
  br label %if.end.91

if.end.91:                                        ; preds = %if.end.90, %if.then.59
  br label %if.end.92

if.end.92:                                        ; preds = %if.end.91, %if.then.54
  %34 = load i32, i32* @require_constant_value, align 4
  %tobool93 = icmp ne i32 %34, 0
  br i1 %tobool93, label %land.lhs.true.94, label %if.else.102

land.lhs.true.94:                                 ; preds = %if.end.92
  %35 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common95 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %constant_flag96 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common95, i32 0, i32 2
  %bf.load97 = load i32, i32* %constant_flag96, align 8
  %bf.lshr98 = lshr i32 %bf.load97, 9
  %bf.clear99 = and i32 %bf.lshr98, 1
  %tobool100 = icmp ne i32 %bf.clear99, 0
  br i1 %tobool100, label %if.else.102, label %if.then.101

if.then.101:                                      ; preds = %land.lhs.true.94
  call void @error_init(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.188, i32 0, i32 0))
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %36, %union.tree_node** %value.addr, align 8
  br label %if.end.111

if.else.102:                                      ; preds = %land.lhs.true.94, %if.end.92
  %37 = load i32, i32* @require_constant_elements, align 4
  %tobool103 = icmp ne i32 %37, 0
  br i1 %tobool103, label %land.lhs.true.104, label %if.end.110

land.lhs.true.104:                                ; preds = %if.else.102
  %38 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %39 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common105 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %type106 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common105, i32 0, i32 1
  %40 = load %union.tree_node*, %union.tree_node** %type106, align 8
  %call107 = call %union.tree_node* @initializer_constant_valid_p(%union.tree_node* %38, %union.tree_node* %40)
  %cmp108 = icmp eq %union.tree_node* %call107, null
  br i1 %cmp108, label %if.then.109, label %if.end.110

if.then.109:                                      ; preds = %land.lhs.true.104
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.190, i32 0, i32 0))
  br label %if.end.110

if.end.110:                                       ; preds = %if.then.109, %land.lhs.true.104, %if.else.102
  br label %if.end.111

if.end.111:                                       ; preds = %if.end.110, %if.then.101
  %41 = load %union.tree_node*, %union.tree_node** %field.addr, align 8
  %tobool112 = icmp ne %union.tree_node* %41, null
  br i1 %tobool112, label %land.lhs.true.113, label %if.end.139

land.lhs.true.113:                                ; preds = %if.end.111
  %42 = load %union.tree_node*, %union.tree_node** %field.addr, align 8
  %common114 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %type115 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common114, i32 0, i32 1
  %43 = load %union.tree_node*, %union.tree_node** %type115, align 8
  %44 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp116 = icmp eq %union.tree_node* %43, %44
  br i1 %cmp116, label %if.then.138, label %lor.lhs.false.117

lor.lhs.false.117:                                ; preds = %land.lhs.true.113
  %45 = load %union.tree_node*, %union.tree_node** %field.addr, align 8
  %common118 = bitcast %union.tree_node* %45 to %struct.tree_common*
  %type119 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common118, i32 0, i32 1
  %46 = load %union.tree_node*, %union.tree_node** %type119, align 8
  %type120 = bitcast %union.tree_node* %46 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type120, i32 0, i32 2
  %47 = load %union.tree_node*, %union.tree_node** %size, align 8
  %cmp121 = icmp ne %union.tree_node* %47, null
  br i1 %cmp121, label %land.lhs.true.122, label %if.end.139

land.lhs.true.122:                                ; preds = %lor.lhs.false.117
  %48 = load %union.tree_node*, %union.tree_node** %field.addr, align 8
  %common123 = bitcast %union.tree_node* %48 to %struct.tree_common*
  %type124 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common123, i32 0, i32 1
  %49 = load %union.tree_node*, %union.tree_node** %type124, align 8
  %type125 = bitcast %union.tree_node* %49 to %struct.tree_type*
  %size126 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type125, i32 0, i32 2
  %50 = load %union.tree_node*, %union.tree_node** %size126, align 8
  %call127 = call i32 @integer_zerop(%union.tree_node* %50)
  %tobool128 = icmp ne i32 %call127, 0
  br i1 %tobool128, label %land.lhs.true.129, label %if.end.139

land.lhs.true.129:                                ; preds = %land.lhs.true.122
  %51 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common130 = bitcast %union.tree_node* %51 to %struct.tree_common*
  %code131 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common130, i32 0, i32 2
  %bf.load132 = load i32, i32* %code131, align 8
  %bf.clear133 = and i32 %bf.load132, 255
  %cmp134 = icmp eq i32 %bf.clear133, 18
  br i1 %cmp134, label %if.then.138, label %lor.lhs.false.135

lor.lhs.false.135:                                ; preds = %land.lhs.true.129
  %52 = load %union.tree_node*, %union.tree_node** %field.addr, align 8
  %common136 = bitcast %union.tree_node* %52 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common136, i32 0, i32 0
  %53 = load %union.tree_node*, %union.tree_node** %chain, align 8
  %tobool137 = icmp ne %union.tree_node* %53, null
  br i1 %tobool137, label %if.then.138, label %if.end.139

if.then.138:                                      ; preds = %lor.lhs.false.135, %land.lhs.true.129, %land.lhs.true.113
  br label %if.end.257

if.end.139:                                       ; preds = %lor.lhs.false.135, %land.lhs.true.122, %lor.lhs.false.117, %if.end.111
  %54 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %55 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %56 = load i32, i32* @require_constant_value, align 4
  %57 = load i32, i32* @require_constant_elements, align 4
  %call140 = call %union.tree_node* @digest_init(%union.tree_node* %54, %union.tree_node* %55, i32 %56, i32 %57)
  store %union.tree_node* %call140, %union.tree_node** %value.addr, align 8
  %58 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %59 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp141 = icmp eq %union.tree_node* %58, %59
  br i1 %cmp141, label %if.then.142, label %if.end.143

if.then.142:                                      ; preds = %if.end.139
  store i32 1, i32* @constructor_erroneous, align 4
  br label %if.end.257

if.end.143:                                       ; preds = %if.end.139
  %60 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common144 = bitcast %union.tree_node* %60 to %struct.tree_common*
  %code145 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common144, i32 0, i32 2
  %bf.load146 = load i32, i32* %code145, align 8
  %bf.clear147 = and i32 %bf.load146, 255
  %cmp148 = icmp eq i32 %bf.clear147, 18
  br i1 %cmp148, label %land.lhs.true.149, label %if.else.161

land.lhs.true.149:                                ; preds = %if.end.143
  %61 = load i32, i32* @constructor_incremental, align 4
  %tobool150 = icmp ne i32 %61, 0
  br i1 %tobool150, label %lor.lhs.false.151, label %if.then.154

lor.lhs.false.151:                                ; preds = %land.lhs.true.149
  %62 = load %union.tree_node*, %union.tree_node** %field.addr, align 8
  %63 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_index, align 8
  %call152 = call i32 @tree_int_cst_equal(%union.tree_node* %62, %union.tree_node* %63)
  %tobool153 = icmp ne i32 %call152, 0
  br i1 %tobool153, label %if.else.161, label %if.then.154

if.then.154:                                      ; preds = %lor.lhs.false.151, %land.lhs.true.149
  %64 = load i32, i32* @constructor_incremental, align 4
  %tobool155 = icmp ne i32 %64, 0
  br i1 %tobool155, label %land.lhs.true.156, label %if.end.160

land.lhs.true.156:                                ; preds = %if.then.154
  %65 = load %union.tree_node*, %union.tree_node** %field.addr, align 8
  %66 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_index, align 8
  %call157 = call i32 @tree_int_cst_lt(%union.tree_node* %65, %union.tree_node* %66)
  %tobool158 = icmp ne i32 %call157, 0
  br i1 %tobool158, label %if.then.159, label %if.end.160

if.then.159:                                      ; preds = %land.lhs.true.156
  call void @set_nonincremental_init()
  br label %if.end.160

if.end.160:                                       ; preds = %if.then.159, %land.lhs.true.156, %if.then.154
  %67 = load %union.tree_node*, %union.tree_node** %field.addr, align 8
  %68 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  call void @add_pending_init(%union.tree_node* %67, %union.tree_node* %68)
  br label %if.end.257

if.else.161:                                      ; preds = %lor.lhs.false.151, %if.end.143
  %69 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common162 = bitcast %union.tree_node* %69 to %struct.tree_common*
  %code163 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common162, i32 0, i32 2
  %bf.load164 = load i32, i32* %code163, align 8
  %bf.clear165 = and i32 %bf.load164, 255
  %cmp166 = icmp eq i32 %bf.clear165, 20
  br i1 %cmp166, label %land.lhs.true.167, label %if.else.185

land.lhs.true.167:                                ; preds = %if.else.161
  %70 = load i32, i32* @constructor_incremental, align 4
  %tobool168 = icmp ne i32 %70, 0
  br i1 %tobool168, label %lor.lhs.false.169, label %if.then.171

lor.lhs.false.169:                                ; preds = %land.lhs.true.167
  %71 = load %union.tree_node*, %union.tree_node** %field.addr, align 8
  %72 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %cmp170 = icmp ne %union.tree_node* %71, %72
  br i1 %cmp170, label %if.then.171, label %if.else.185

if.then.171:                                      ; preds = %lor.lhs.false.169, %land.lhs.true.167
  %73 = load i32, i32* @constructor_incremental, align 4
  %tobool172 = icmp ne i32 %73, 0
  br i1 %tobool172, label %if.then.173, label %if.end.184

if.then.173:                                      ; preds = %if.then.171
  %74 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %tobool174 = icmp ne %union.tree_node* %74, null
  br i1 %tobool174, label %if.else.176, label %if.then.175

if.then.175:                                      ; preds = %if.then.173
  call void @set_nonincremental_init()
  br label %if.end.183

if.else.176:                                      ; preds = %if.then.173
  %75 = load %union.tree_node*, %union.tree_node** %field.addr, align 8
  %call177 = call %union.tree_node* @bit_position(%union.tree_node* %75)
  store %union.tree_node* %call177, %union.tree_node** %bitpos, align 8
  %76 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %call178 = call %union.tree_node* @bit_position(%union.tree_node* %76)
  store %union.tree_node* %call178, %union.tree_node** %unfillpos, align 8
  %77 = load %union.tree_node*, %union.tree_node** %bitpos, align 8
  %78 = load %union.tree_node*, %union.tree_node** %unfillpos, align 8
  %call179 = call i32 @tree_int_cst_lt(%union.tree_node* %77, %union.tree_node* %78)
  %tobool180 = icmp ne i32 %call179, 0
  br i1 %tobool180, label %if.then.181, label %if.end.182

if.then.181:                                      ; preds = %if.else.176
  call void @set_nonincremental_init()
  br label %if.end.182

if.end.182:                                       ; preds = %if.then.181, %if.else.176
  br label %if.end.183

if.end.183:                                       ; preds = %if.end.182, %if.then.175
  br label %if.end.184

if.end.184:                                       ; preds = %if.end.183, %if.then.171
  %79 = load %union.tree_node*, %union.tree_node** %field.addr, align 8
  %80 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  call void @add_pending_init(%union.tree_node* %79, %union.tree_node* %80)
  br label %if.end.257

if.else.185:                                      ; preds = %lor.lhs.false.169, %if.else.161
  %81 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common186 = bitcast %union.tree_node* %81 to %struct.tree_common*
  %code187 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common186, i32 0, i32 2
  %bf.load188 = load i32, i32* %code187, align 8
  %bf.clear189 = and i32 %bf.load188, 255
  %cmp190 = icmp eq i32 %bf.clear189, 21
  br i1 %cmp190, label %land.lhs.true.191, label %if.end.202

land.lhs.true.191:                                ; preds = %if.else.185
  %82 = load %union.tree_node*, %union.tree_node** @constructor_elements, align 8
  %tobool192 = icmp ne %union.tree_node* %82, null
  br i1 %tobool192, label %if.then.193, label %if.end.202

if.then.193:                                      ; preds = %land.lhs.true.191
  %83 = load %union.tree_node*, %union.tree_node** @constructor_elements, align 8
  %list = bitcast %union.tree_node* %83 to %struct.tree_list*
  %value194 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %84 = load %union.tree_node*, %union.tree_node** %value194, align 8
  %common195 = bitcast %union.tree_node* %84 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common195, i32 0, i32 2
  %bf.load196 = load i32, i32* %side_effects_flag, align 8
  %bf.lshr197 = lshr i32 %bf.load196, 8
  %bf.clear198 = and i32 %bf.lshr197, 1
  %tobool199 = icmp ne i32 %bf.clear198, 0
  br i1 %tobool199, label %if.then.200, label %if.end.201

if.then.200:                                      ; preds = %if.then.193
  call void @warning_init(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.195, i32 0, i32 0))
  br label %if.end.201

if.end.201:                                       ; preds = %if.then.200, %if.then.193
  store %union.tree_node* null, %union.tree_node** @constructor_elements, align 8
  br label %if.end.202

if.end.202:                                       ; preds = %if.end.201, %land.lhs.true.191, %if.else.185
  br label %if.end.203

if.end.203:                                       ; preds = %if.end.202
  br label %if.end.204

if.end.204:                                       ; preds = %if.end.203
  %85 = load %union.tree_node*, %union.tree_node** %field.addr, align 8
  %tobool205 = icmp ne %union.tree_node* %85, null
  br i1 %tobool205, label %land.lhs.true.206, label %if.end.214

land.lhs.true.206:                                ; preds = %if.end.204
  %86 = load %union.tree_node*, %union.tree_node** %field.addr, align 8
  %common207 = bitcast %union.tree_node* %86 to %struct.tree_common*
  %code208 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common207, i32 0, i32 2
  %bf.load209 = load i32, i32* %code208, align 8
  %bf.clear210 = and i32 %bf.load209, 255
  %cmp211 = icmp eq i32 %bf.clear210, 25
  br i1 %cmp211, label %if.then.212, label %if.end.214

if.then.212:                                      ; preds = %land.lhs.true.206
  %87 = load %union.tree_node*, %union.tree_node** %field.addr, align 8
  %call213 = call %union.tree_node* @copy_node(%union.tree_node* %87)
  store %union.tree_node* %call213, %union.tree_node** %field.addr, align 8
  br label %if.end.214

if.end.214:                                       ; preds = %if.then.212, %land.lhs.true.206, %if.end.204
  %88 = load %union.tree_node*, %union.tree_node** %field.addr, align 8
  %89 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %90 = load %union.tree_node*, %union.tree_node** @constructor_elements, align 8
  %call215 = call %union.tree_node* @tree_cons(%union.tree_node* %88, %union.tree_node* %89, %union.tree_node* %90)
  store %union.tree_node* %call215, %union.tree_node** @constructor_elements, align 8
  %91 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common216 = bitcast %union.tree_node* %91 to %struct.tree_common*
  %code217 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common216, i32 0, i32 2
  %bf.load218 = load i32, i32* %code217, align 8
  %bf.clear219 = and i32 %bf.load218, 255
  %cmp220 = icmp eq i32 %bf.clear219, 18
  br i1 %cmp220, label %if.then.221, label %if.else.223

if.then.221:                                      ; preds = %if.end.214
  %92 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_index, align 8
  %93 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 18), align 8
  %call222 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %92, %union.tree_node* %93)
  store %union.tree_node* %call222, %union.tree_node** @constructor_unfilled_index, align 8
  br label %if.end.254

if.else.223:                                      ; preds = %if.end.214
  %94 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common224 = bitcast %union.tree_node* %94 to %struct.tree_common*
  %code225 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common224, i32 0, i32 2
  %bf.load226 = load i32, i32* %code225, align 8
  %bf.clear227 = and i32 %bf.load226, 255
  %cmp228 = icmp eq i32 %bf.clear227, 20
  br i1 %cmp228, label %if.then.229, label %if.else.245

if.then.229:                                      ; preds = %if.else.223
  %95 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %common230 = bitcast %union.tree_node* %95 to %struct.tree_common*
  %chain231 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common230, i32 0, i32 0
  %96 = load %union.tree_node*, %union.tree_node** %chain231, align 8
  store %union.tree_node* %96, %union.tree_node** @constructor_unfilled_fields, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then.229
  %97 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %cmp232 = icmp ne %union.tree_node* %97, null
  br i1 %cmp232, label %land.lhs.true.233, label %land.end

land.lhs.true.233:                                ; preds = %while.cond
  %98 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %decl234 = bitcast %union.tree_node* %98 to %struct.tree_decl*
  %lang_flag_4235 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl234, i32 0, i32 5
  %99 = bitcast i48* %lang_flag_4235 to i64*
  %bf.load236 = load i64, i64* %99, align 8
  %bf.lshr237 = lshr i64 %bf.load236, 41
  %bf.clear238 = and i64 %bf.lshr237, 1
  %bf.cast239 = trunc i64 %bf.clear238 to i32
  %cmp240 = icmp eq i32 %bf.cast239, 1
  br i1 %cmp240, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.233
  %100 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %decl241 = bitcast %union.tree_node* %100 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl241, i32 0, i32 8
  %101 = load %union.tree_node*, %union.tree_node** %name, align 8
  %cmp242 = icmp eq %union.tree_node* %101, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.233, %while.cond
  %102 = phi i1 [ false, %land.lhs.true.233 ], [ false, %while.cond ], [ %cmp242, %land.rhs ]
  br i1 %102, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %103 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8
  %common243 = bitcast %union.tree_node* %103 to %struct.tree_common*
  %chain244 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common243, i32 0, i32 0
  %104 = load %union.tree_node*, %union.tree_node** %chain244, align 8
  store %union.tree_node* %104, %union.tree_node** @constructor_unfilled_fields, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  br label %if.end.253

if.else.245:                                      ; preds = %if.else.223
  %105 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common246 = bitcast %union.tree_node* %105 to %struct.tree_common*
  %code247 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common246, i32 0, i32 2
  %bf.load248 = load i32, i32* %code247, align 8
  %bf.clear249 = and i32 %bf.load248, 255
  %cmp250 = icmp eq i32 %bf.clear249, 21
  br i1 %cmp250, label %if.then.251, label %if.end.252

if.then.251:                                      ; preds = %if.else.245
  store %union.tree_node* null, %union.tree_node** @constructor_unfilled_fields, align 8
  br label %if.end.252

if.end.252:                                       ; preds = %if.then.251, %if.else.245
  br label %if.end.253

if.end.253:                                       ; preds = %if.end.252, %while.end
  br label %if.end.254

if.end.254:                                       ; preds = %if.end.253, %if.then.221
  %106 = load i32, i32* %pending.addr, align 4
  %tobool255 = icmp ne i32 %106, 0
  br i1 %tobool255, label %if.then.256, label %if.end.257

if.then.256:                                      ; preds = %if.end.254
  call void @output_pending_init_elements(i32 0)
  br label %if.end.257

if.end.257:                                       ; preds = %if.then.138, %if.then.142, %if.end.160, %if.end.184, %if.then.256, %if.end.254
  ret void
}

declare %union.tree_node* @bit_position(%union.tree_node*) #1

declare i32 @real_zerop(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @simple_asm_stmt(%union.tree_node* %expr) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %expr.addr = alloca %union.tree_node*, align 8
  %stmt = alloca %union.tree_node*, align 8
  store %union.tree_node* %expr, %union.tree_node** %expr.addr, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 115
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.cond
  %1 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load3 = load i32, i32* %code2, align 8
  %bf.clear4 = and i32 %bf.load3, 255
  %cmp5 = icmp eq i32 %bf.clear4, 114
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false.6

lor.lhs.false.6:                                  ; preds = %lor.lhs.false
  %2 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common7 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 2
  %bf.load9 = load i32, i32* %code8, align 8
  %bf.clear10 = and i32 %bf.load9, 255
  %cmp11 = icmp eq i32 %bf.clear10, 116
  br i1 %cmp11, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %lor.lhs.false.6, %lor.lhs.false, %while.cond
  %3 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp = bitcast %union.tree_node* %3 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp12 = icmp ne %union.tree_node* %4, %5
  br i1 %cmp12, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %6 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common13 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common13, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type14 = bitcast %union.tree_node* %7 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type14, i32 0, i32 6
  %bf.load15 = load i32, i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load15, 9
  %bf.clear16 = and i32 %bf.lshr, 127
  %8 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp17 = bitcast %union.tree_node* %8 to %struct.tree_exp*
  %operands18 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp17, i32 0, i32 2
  %arrayidx19 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands18, i32 0, i64 0
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx19, align 8
  %common20 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %type21 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common20, i32 0, i32 1
  %10 = load %union.tree_node*, %union.tree_node** %type21, align 8
  %type22 = bitcast %union.tree_node* %10 to %struct.tree_type*
  %mode23 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type22, i32 0, i32 6
  %bf.load24 = load i32, i32* %mode23, align 4
  %bf.lshr25 = lshr i32 %bf.load24, 9
  %bf.clear26 = and i32 %bf.lshr25, 127
  %cmp27 = icmp eq i32 %bf.clear16, %bf.clear26
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %lor.lhs.false.6
  %11 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false.6 ], [ %cmp27, %land.rhs ]
  br i1 %11, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %12 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp28 = bitcast %union.tree_node* %12 to %struct.tree_exp*
  %operands29 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp28, i32 0, i32 2
  %arrayidx30 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands29, i32 0, i64 0
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx30, align 8
  store %union.tree_node* %13, %union.tree_node** %expr.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %14 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common31 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %code32 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common31, i32 0, i32 2
  %bf.load33 = load i32, i32* %code32, align 8
  %bf.clear34 = and i32 %bf.load33, 255
  %cmp35 = icmp eq i32 %bf.clear34, 121
  br i1 %cmp35, label %if.then, label %if.end

if.then:                                          ; preds = %while.end
  %15 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp36 = bitcast %union.tree_node* %15 to %struct.tree_exp*
  %operands37 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp36, i32 0, i32 2
  %arrayidx38 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands37, i32 0, i64 0
  %16 = load %union.tree_node*, %union.tree_node** %arrayidx38, align 8
  store %union.tree_node* %16, %union.tree_node** %expr.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %while.end
  %17 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common39 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %code40 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common39, i32 0, i32 2
  %bf.load41 = load i32, i32* %code40, align 8
  %bf.clear42 = and i32 %bf.load41, 255
  %cmp43 = icmp eq i32 %bf.clear42, 29
  br i1 %cmp43, label %if.then.44, label %if.end.53

if.then.44:                                       ; preds = %if.end
  %18 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common45 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common45, i32 0, i32 0
  %19 = load %union.tree_node*, %union.tree_node** %chain, align 8
  %tobool = icmp ne %union.tree_node* %19, null
  br i1 %tobool, label %if.then.46, label %if.end.47

if.then.46:                                       ; preds = %if.then.44
  %20 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %call = call %union.tree_node* @combine_strings(%union.tree_node* %20)
  store %union.tree_node* %call, %union.tree_node** %expr.addr, align 8
  br label %if.end.47

if.end.47:                                        ; preds = %if.then.46, %if.then.44
  %21 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %call48 = call %union.tree_node* (i32, ...) @build_stmt(i32 165, %union.tree_node* null, %union.tree_node* %21, %union.tree_node* null, %union.tree_node* null, %union.tree_node* null)
  %call49 = call %union.tree_node* @add_stmt(%union.tree_node* %call48)
  store %union.tree_node* %call49, %union.tree_node** %stmt, align 8
  %22 = load %union.tree_node*, %union.tree_node** %stmt, align 8
  %common50 = bitcast %union.tree_node* %22 to %struct.tree_common*
  %lang_flag_0 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common50, i32 0, i32 2
  %bf.load51 = load i32, i32* %lang_flag_0, align 8
  %bf.clear52 = and i32 %bf.load51, -16777217
  %bf.set = or i32 %bf.clear52, 16777216
  store i32 %bf.set, i32* %lang_flag_0, align 8
  %23 = load %union.tree_node*, %union.tree_node** %stmt, align 8
  store %union.tree_node* %23, %union.tree_node** %retval
  br label %return

if.end.53:                                        ; preds = %if.end
  call void (i8*, ...) @error(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.136, i32 0, i32 0))
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.53, %if.end.47
  %24 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %24
}

declare %union.tree_node* @combine_strings(%union.tree_node*) #1

declare %union.tree_node* @add_stmt(%union.tree_node*) #1

declare %union.tree_node* @build_stmt(i32, ...) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_asm_stmt(%union.tree_node* %cv_qualifier, %union.tree_node* %string, %union.tree_node* %outputs, %union.tree_node* %inputs, %union.tree_node* %clobbers) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %cv_qualifier.addr = alloca %union.tree_node*, align 8
  %string.addr = alloca %union.tree_node*, align 8
  %outputs.addr = alloca %union.tree_node*, align 8
  %inputs.addr = alloca %union.tree_node*, align 8
  %clobbers.addr = alloca %union.tree_node*, align 8
  %tail = alloca %union.tree_node*, align 8
  %output = alloca %union.tree_node*, align 8
  %output102 = alloca %union.tree_node*, align 8
  store %union.tree_node* %cv_qualifier, %union.tree_node** %cv_qualifier.addr, align 8
  store %union.tree_node* %string, %union.tree_node** %string.addr, align 8
  store %union.tree_node* %outputs, %union.tree_node** %outputs.addr, align 8
  store %union.tree_node* %inputs, %union.tree_node** %inputs.addr, align 8
  store %union.tree_node* %clobbers, %union.tree_node** %clobbers.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %string.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 0
  %1 = load %union.tree_node*, %union.tree_node** %chain, align 8
  %tobool = icmp ne %union.tree_node* %1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %string.addr, align 8
  %call = call %union.tree_node* @combine_strings(%union.tree_node* %2)
  store %union.tree_node* %call, %union.tree_node** %string.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load %union.tree_node*, %union.tree_node** %string.addr, align 8
  %common1 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp ne i32 %bf.clear, 29
  br i1 %cmp, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.137, i32 0, i32 0))
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %4 = load %union.tree_node*, %union.tree_node** %cv_qualifier.addr, align 8
  %cmp4 = icmp ne %union.tree_node* %4, null
  br i1 %cmp4, label %land.lhs.true, label %if.end.7

land.lhs.true:                                    ; preds = %if.end.3
  %5 = load %union.tree_node*, %union.tree_node** %cv_qualifier.addr, align 8
  %6 = load %union.tree_node**, %union.tree_node*** @ridpointers, align 8
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %6, i64 9
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %cmp5 = icmp ne %union.tree_node* %5, %7
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %land.lhs.true
  %8 = load %union.tree_node*, %union.tree_node** %cv_qualifier.addr, align 8
  %identifier = bitcast %union.tree_node* %8 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %9 = load i8*, i8** %str, align 8
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.138, i32 0, i32 0), i8* %9)
  store %union.tree_node* null, %union.tree_node** %cv_qualifier.addr, align 8
  br label %if.end.7

if.end.7:                                         ; preds = %if.then.6, %land.lhs.true, %if.end.3
  %10 = load %union.tree_node*, %union.tree_node** %outputs.addr, align 8
  store %union.tree_node* %10, %union.tree_node** %tail, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.7
  %11 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %tobool8 = icmp ne %union.tree_node* %11, null
  br i1 %tobool8, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %12 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %list = bitcast %union.tree_node* %12 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %13 = load %union.tree_node*, %union.tree_node** %value, align 8
  store %union.tree_node* %13, %union.tree_node** %output, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %14 = load %union.tree_node*, %union.tree_node** %output, align 8
  %common9 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %code10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common9, i32 0, i32 2
  %bf.load11 = load i32, i32* %code10, align 8
  %bf.clear12 = and i32 %bf.load11, 255
  %cmp13 = icmp eq i32 %bf.clear12, 115
  br i1 %cmp13, label %land.lhs.true.25, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.cond
  %15 = load %union.tree_node*, %union.tree_node** %output, align 8
  %common14 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %code15 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common14, i32 0, i32 2
  %bf.load16 = load i32, i32* %code15, align 8
  %bf.clear17 = and i32 %bf.load16, 255
  %cmp18 = icmp eq i32 %bf.clear17, 114
  br i1 %cmp18, label %land.lhs.true.25, label %lor.lhs.false.19

lor.lhs.false.19:                                 ; preds = %lor.lhs.false
  %16 = load %union.tree_node*, %union.tree_node** %output, align 8
  %common20 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %code21 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common20, i32 0, i32 2
  %bf.load22 = load i32, i32* %code21, align 8
  %bf.clear23 = and i32 %bf.load22, 255
  %cmp24 = icmp eq i32 %bf.clear23, 116
  br i1 %cmp24, label %land.lhs.true.25, label %land.end

land.lhs.true.25:                                 ; preds = %lor.lhs.false.19, %lor.lhs.false, %while.cond
  %17 = load %union.tree_node*, %union.tree_node** %output, align 8
  %exp = bitcast %union.tree_node* %17 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx26 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %18 = load %union.tree_node*, %union.tree_node** %arrayidx26, align 8
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp27 = icmp ne %union.tree_node* %18, %19
  br i1 %cmp27, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.25
  %20 = load %union.tree_node*, %union.tree_node** %output, align 8
  %common28 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common28, i32 0, i32 1
  %21 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type29 = bitcast %union.tree_node* %21 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type29, i32 0, i32 6
  %bf.load30 = load i32, i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load30, 9
  %bf.clear31 = and i32 %bf.lshr, 127
  %22 = load %union.tree_node*, %union.tree_node** %output, align 8
  %exp32 = bitcast %union.tree_node* %22 to %struct.tree_exp*
  %operands33 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp32, i32 0, i32 2
  %arrayidx34 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands33, i32 0, i64 0
  %23 = load %union.tree_node*, %union.tree_node** %arrayidx34, align 8
  %common35 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %type36 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common35, i32 0, i32 1
  %24 = load %union.tree_node*, %union.tree_node** %type36, align 8
  %type37 = bitcast %union.tree_node* %24 to %struct.tree_type*
  %mode38 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type37, i32 0, i32 6
  %bf.load39 = load i32, i32* %mode38, align 4
  %bf.lshr40 = lshr i32 %bf.load39, 9
  %bf.clear41 = and i32 %bf.lshr40, 127
  %cmp42 = icmp eq i32 %bf.clear31, %bf.clear41
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.25, %lor.lhs.false.19
  %25 = phi i1 [ false, %land.lhs.true.25 ], [ false, %lor.lhs.false.19 ], [ %cmp42, %land.rhs ]
  br i1 %25, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %26 = load %union.tree_node*, %union.tree_node** %output, align 8
  %exp43 = bitcast %union.tree_node* %26 to %struct.tree_exp*
  %operands44 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp43, i32 0, i32 2
  %arrayidx45 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands44, i32 0, i64 0
  %27 = load %union.tree_node*, %union.tree_node** %arrayidx45, align 8
  store %union.tree_node* %27, %union.tree_node** %output, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %28 = load %union.tree_node*, %union.tree_node** %output, align 8
  %29 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %list46 = bitcast %union.tree_node* %29 to %struct.tree_list*
  %value47 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list46, i32 0, i32 2
  store %union.tree_node* %28, %union.tree_node** %value47, align 8
  br label %while.cond.48

while.cond.48:                                    ; preds = %while.body.89, %while.end
  %30 = load %union.tree_node*, %union.tree_node** %output, align 8
  %common49 = bitcast %union.tree_node* %30 to %struct.tree_common*
  %code50 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common49, i32 0, i32 2
  %bf.load51 = load i32, i32* %code50, align 8
  %bf.clear52 = and i32 %bf.load51, 255
  %cmp53 = icmp eq i32 %bf.clear52, 115
  br i1 %cmp53, label %lor.end, label %lor.lhs.false.54

lor.lhs.false.54:                                 ; preds = %while.cond.48
  %31 = load %union.tree_node*, %union.tree_node** %output, align 8
  %common55 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %code56 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common55, i32 0, i32 2
  %bf.load57 = load i32, i32* %code56, align 8
  %bf.clear58 = and i32 %bf.load57, 255
  %cmp59 = icmp eq i32 %bf.clear58, 114
  br i1 %cmp59, label %lor.end, label %lor.lhs.false.60

lor.lhs.false.60:                                 ; preds = %lor.lhs.false.54
  %32 = load %union.tree_node*, %union.tree_node** %output, align 8
  %common61 = bitcast %union.tree_node* %32 to %struct.tree_common*
  %code62 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common61, i32 0, i32 2
  %bf.load63 = load i32, i32* %code62, align 8
  %bf.clear64 = and i32 %bf.load63, 255
  %cmp65 = icmp eq i32 %bf.clear64, 76
  br i1 %cmp65, label %lor.end, label %lor.lhs.false.66

lor.lhs.false.66:                                 ; preds = %lor.lhs.false.60
  %33 = load %union.tree_node*, %union.tree_node** %output, align 8
  %common67 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %code68 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common67, i32 0, i32 2
  %bf.load69 = load i32, i32* %code68, align 8
  %bf.clear70 = and i32 %bf.load69, 255
  %cmp71 = icmp eq i32 %bf.clear70, 72
  br i1 %cmp71, label %lor.end, label %lor.lhs.false.72

lor.lhs.false.72:                                 ; preds = %lor.lhs.false.66
  %34 = load %union.tree_node*, %union.tree_node** %output, align 8
  %common73 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %code74 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common73, i32 0, i32 2
  %bf.load75 = load i32, i32* %code74, align 8
  %bf.clear76 = and i32 %bf.load75, 255
  %cmp77 = icmp eq i32 %bf.clear76, 74
  br i1 %cmp77, label %lor.end, label %lor.lhs.false.78

lor.lhs.false.78:                                 ; preds = %lor.lhs.false.72
  %35 = load %union.tree_node*, %union.tree_node** %output, align 8
  %common79 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %code80 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common79, i32 0, i32 2
  %bf.load81 = load i32, i32* %code80, align 8
  %bf.clear82 = and i32 %bf.load81, 255
  %cmp83 = icmp eq i32 %bf.clear82, 75
  br i1 %cmp83, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.78
  %36 = load %union.tree_node*, %union.tree_node** %output, align 8
  %common84 = bitcast %union.tree_node* %36 to %struct.tree_common*
  %code85 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common84, i32 0, i32 2
  %bf.load86 = load i32, i32* %code85, align 8
  %bf.clear87 = and i32 %bf.load86, 255
  %cmp88 = icmp eq i32 %bf.clear87, 73
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.78, %lor.lhs.false.72, %lor.lhs.false.66, %lor.lhs.false.60, %lor.lhs.false.54, %while.cond.48
  %37 = phi i1 [ true, %lor.lhs.false.78 ], [ true, %lor.lhs.false.72 ], [ true, %lor.lhs.false.66 ], [ true, %lor.lhs.false.60 ], [ true, %lor.lhs.false.54 ], [ true, %while.cond.48 ], [ %cmp88, %lor.rhs ]
  br i1 %37, label %while.body.89, label %while.end.93

while.body.89:                                    ; preds = %lor.end
  %38 = load %union.tree_node*, %union.tree_node** %output, align 8
  %exp90 = bitcast %union.tree_node* %38 to %struct.tree_exp*
  %operands91 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp90, i32 0, i32 2
  %arrayidx92 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands91, i32 0, i64 0
  %39 = load %union.tree_node*, %union.tree_node** %arrayidx92, align 8
  store %union.tree_node* %39, %union.tree_node** %output, align 8
  br label %while.cond.48

while.end.93:                                     ; preds = %lor.end
  %40 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %list94 = bitcast %union.tree_node* %40 to %struct.tree_list*
  %value95 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list94, i32 0, i32 2
  %41 = load %union.tree_node*, %union.tree_node** %value95, align 8
  %call96 = call i32 @lvalue_or_else(%union.tree_node* %41, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.139, i32 0, i32 0))
  br label %for.inc

for.inc:                                          ; preds = %while.end.93
  %42 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %common97 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %chain98 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common97, i32 0, i32 0
  %43 = load %union.tree_node*, %union.tree_node** %chain98, align 8
  store %union.tree_node* %43, %union.tree_node** %tail, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %44 = load %union.tree_node*, %union.tree_node** %outputs.addr, align 8
  store %union.tree_node* %44, %union.tree_node** %tail, align 8
  br label %for.cond.99

for.cond.99:                                      ; preds = %for.inc.155, %for.end
  %45 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %tobool100 = icmp ne %union.tree_node* %45, null
  br i1 %tobool100, label %for.body.101, label %for.end.158

for.body.101:                                     ; preds = %for.cond.99
  %46 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %list103 = bitcast %union.tree_node* %46 to %struct.tree_list*
  %value104 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list103, i32 0, i32 2
  %47 = load %union.tree_node*, %union.tree_node** %value104, align 8
  store %union.tree_node* %47, %union.tree_node** %output102, align 8
  br label %while.cond.105

while.cond.105:                                   ; preds = %while.body.148, %for.body.101
  %48 = load %union.tree_node*, %union.tree_node** %output102, align 8
  %common106 = bitcast %union.tree_node* %48 to %struct.tree_common*
  %code107 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common106, i32 0, i32 2
  %bf.load108 = load i32, i32* %code107, align 8
  %bf.clear109 = and i32 %bf.load108, 255
  %cmp110 = icmp eq i32 %bf.clear109, 115
  br i1 %cmp110, label %land.lhs.true.123, label %lor.lhs.false.111

lor.lhs.false.111:                                ; preds = %while.cond.105
  %49 = load %union.tree_node*, %union.tree_node** %output102, align 8
  %common112 = bitcast %union.tree_node* %49 to %struct.tree_common*
  %code113 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common112, i32 0, i32 2
  %bf.load114 = load i32, i32* %code113, align 8
  %bf.clear115 = and i32 %bf.load114, 255
  %cmp116 = icmp eq i32 %bf.clear115, 114
  br i1 %cmp116, label %land.lhs.true.123, label %lor.lhs.false.117

lor.lhs.false.117:                                ; preds = %lor.lhs.false.111
  %50 = load %union.tree_node*, %union.tree_node** %output102, align 8
  %common118 = bitcast %union.tree_node* %50 to %struct.tree_common*
  %code119 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common118, i32 0, i32 2
  %bf.load120 = load i32, i32* %code119, align 8
  %bf.clear121 = and i32 %bf.load120, 255
  %cmp122 = icmp eq i32 %bf.clear121, 116
  br i1 %cmp122, label %land.lhs.true.123, label %land.end.147

land.lhs.true.123:                                ; preds = %lor.lhs.false.117, %lor.lhs.false.111, %while.cond.105
  %51 = load %union.tree_node*, %union.tree_node** %output102, align 8
  %exp124 = bitcast %union.tree_node* %51 to %struct.tree_exp*
  %operands125 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp124, i32 0, i32 2
  %arrayidx126 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands125, i32 0, i64 0
  %52 = load %union.tree_node*, %union.tree_node** %arrayidx126, align 8
  %53 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp127 = icmp ne %union.tree_node* %52, %53
  br i1 %cmp127, label %land.rhs.128, label %land.end.147

land.rhs.128:                                     ; preds = %land.lhs.true.123
  %54 = load %union.tree_node*, %union.tree_node** %output102, align 8
  %common129 = bitcast %union.tree_node* %54 to %struct.tree_common*
  %type130 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common129, i32 0, i32 1
  %55 = load %union.tree_node*, %union.tree_node** %type130, align 8
  %type131 = bitcast %union.tree_node* %55 to %struct.tree_type*
  %mode132 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type131, i32 0, i32 6
  %bf.load133 = load i32, i32* %mode132, align 4
  %bf.lshr134 = lshr i32 %bf.load133, 9
  %bf.clear135 = and i32 %bf.lshr134, 127
  %56 = load %union.tree_node*, %union.tree_node** %output102, align 8
  %exp136 = bitcast %union.tree_node* %56 to %struct.tree_exp*
  %operands137 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp136, i32 0, i32 2
  %arrayidx138 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands137, i32 0, i64 0
  %57 = load %union.tree_node*, %union.tree_node** %arrayidx138, align 8
  %common139 = bitcast %union.tree_node* %57 to %struct.tree_common*
  %type140 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common139, i32 0, i32 1
  %58 = load %union.tree_node*, %union.tree_node** %type140, align 8
  %type141 = bitcast %union.tree_node* %58 to %struct.tree_type*
  %mode142 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type141, i32 0, i32 6
  %bf.load143 = load i32, i32* %mode142, align 4
  %bf.lshr144 = lshr i32 %bf.load143, 9
  %bf.clear145 = and i32 %bf.lshr144, 127
  %cmp146 = icmp eq i32 %bf.clear135, %bf.clear145
  br label %land.end.147

land.end.147:                                     ; preds = %land.rhs.128, %land.lhs.true.123, %lor.lhs.false.117
  %59 = phi i1 [ false, %land.lhs.true.123 ], [ false, %lor.lhs.false.117 ], [ %cmp146, %land.rhs.128 ]
  br i1 %59, label %while.body.148, label %while.end.152

while.body.148:                                   ; preds = %land.end.147
  %60 = load %union.tree_node*, %union.tree_node** %output102, align 8
  %exp149 = bitcast %union.tree_node* %60 to %struct.tree_exp*
  %operands150 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp149, i32 0, i32 2
  %arrayidx151 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands150, i32 0, i64 0
  %61 = load %union.tree_node*, %union.tree_node** %arrayidx151, align 8
  store %union.tree_node* %61, %union.tree_node** %output102, align 8
  br label %while.cond.105

while.end.152:                                    ; preds = %land.end.147
  %62 = load %union.tree_node*, %union.tree_node** %output102, align 8
  %63 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %list153 = bitcast %union.tree_node* %63 to %struct.tree_list*
  %value154 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list153, i32 0, i32 2
  store %union.tree_node* %62, %union.tree_node** %value154, align 8
  br label %for.inc.155

for.inc.155:                                      ; preds = %while.end.152
  %64 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %common156 = bitcast %union.tree_node* %64 to %struct.tree_common*
  %chain157 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common156, i32 0, i32 0
  %65 = load %union.tree_node*, %union.tree_node** %chain157, align 8
  store %union.tree_node* %65, %union.tree_node** %tail, align 8
  br label %for.cond.99

for.end.158:                                      ; preds = %for.cond.99
  %66 = load %union.tree_node*, %union.tree_node** %inputs.addr, align 8
  store %union.tree_node* %66, %union.tree_node** %tail, align 8
  br label %for.cond.159

for.cond.159:                                     ; preds = %for.inc.167, %for.end.158
  %67 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %tobool160 = icmp ne %union.tree_node* %67, null
  br i1 %tobool160, label %for.body.161, label %for.end.170

for.body.161:                                     ; preds = %for.cond.159
  %68 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %list162 = bitcast %union.tree_node* %68 to %struct.tree_list*
  %value163 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list162, i32 0, i32 2
  %69 = load %union.tree_node*, %union.tree_node** %value163, align 8
  %call164 = call %union.tree_node* @default_function_array_conversion(%union.tree_node* %69)
  %70 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %list165 = bitcast %union.tree_node* %70 to %struct.tree_list*
  %value166 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list165, i32 0, i32 2
  store %union.tree_node* %call164, %union.tree_node** %value166, align 8
  br label %for.inc.167

for.inc.167:                                      ; preds = %for.body.161
  %71 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %common168 = bitcast %union.tree_node* %71 to %struct.tree_common*
  %chain169 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common168, i32 0, i32 0
  %72 = load %union.tree_node*, %union.tree_node** %chain169, align 8
  store %union.tree_node* %72, %union.tree_node** %tail, align 8
  br label %for.cond.159

for.end.170:                                      ; preds = %for.cond.159
  %73 = load %union.tree_node*, %union.tree_node** %cv_qualifier.addr, align 8
  %74 = load %union.tree_node*, %union.tree_node** %string.addr, align 8
  %75 = load %union.tree_node*, %union.tree_node** %outputs.addr, align 8
  %76 = load %union.tree_node*, %union.tree_node** %inputs.addr, align 8
  %77 = load %union.tree_node*, %union.tree_node** %clobbers.addr, align 8
  %call171 = call %union.tree_node* (i32, ...) @build_stmt(i32 165, %union.tree_node* %73, %union.tree_node* %74, %union.tree_node* %75, %union.tree_node* %76, %union.tree_node* %77)
  %call172 = call %union.tree_node* @add_stmt(%union.tree_node* %call171)
  store %union.tree_node* %call172, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %for.end.170, %if.then.2
  %78 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %78
}

; Function Attrs: nounwind uwtable
define void @c_expand_asm_operands(%union.tree_node* %string, %union.tree_node* %outputs, %union.tree_node* %inputs, %union.tree_node* %clobbers, i32 %vol, i8* %filename, i32 %line) #0 {
entry:
  %string.addr = alloca %union.tree_node*, align 8
  %outputs.addr = alloca %union.tree_node*, align 8
  %inputs.addr = alloca %union.tree_node*, align 8
  %clobbers.addr = alloca %union.tree_node*, align 8
  %vol.addr = alloca i32, align 4
  %filename.addr = alloca i8*, align 8
  %line.addr = alloca i32, align 4
  %noutputs = alloca i32, align 4
  %i = alloca i32, align 4
  %o = alloca %union.tree_node**, align 8
  %tail = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  store %union.tree_node* %string, %union.tree_node** %string.addr, align 8
  store %union.tree_node* %outputs, %union.tree_node** %outputs.addr, align 8
  store %union.tree_node* %inputs, %union.tree_node** %inputs.addr, align 8
  store %union.tree_node* %clobbers, %union.tree_node** %clobbers.addr, align 8
  store i32 %vol, i32* %vol.addr, align 4
  store i8* %filename, i8** %filename.addr, align 8
  store i32 %line, i32* %line.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** %outputs.addr, align 8
  %call = call i32 @list_length(%union.tree_node* %0)
  store i32 %call, i32* %noutputs, align 4
  %1 = load i32, i32* %noutputs, align 4
  %conv = sext i32 %1 to i64
  %mul = mul i64 %conv, 8
  %2 = alloca i8, i64 %mul
  %3 = bitcast i8* %2 to %union.tree_node**
  store %union.tree_node** %3, %union.tree_node*** %o, align 8
  store i32 0, i32* %i, align 4
  %4 = load %union.tree_node*, %union.tree_node** %outputs.addr, align 8
  store %union.tree_node* %4, %union.tree_node** %tail, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %tobool = icmp ne %union.tree_node* %5, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %list = bitcast %union.tree_node* %6 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %7 = load %union.tree_node*, %union.tree_node** %value, align 8
  %8 = load i32, i32* %i, align 4
  %idxprom = sext i32 %8 to i64
  %9 = load %union.tree_node**, %union.tree_node*** %o, align 8
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %9, i64 %idxprom
  store %union.tree_node* %7, %union.tree_node** %arrayidx, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %10 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %common = bitcast %union.tree_node* %10 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 0
  %11 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %11, %union.tree_node** %tail, align 8
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %13 = load %union.tree_node*, %union.tree_node** %string.addr, align 8
  %14 = load %union.tree_node*, %union.tree_node** %outputs.addr, align 8
  %15 = load %union.tree_node*, %union.tree_node** %inputs.addr, align 8
  %16 = load %union.tree_node*, %union.tree_node** %clobbers.addr, align 8
  %17 = load i32, i32* %vol.addr, align 4
  %18 = load i8*, i8** %filename.addr, align 8
  %19 = load i32, i32* %line.addr, align 4
  call void @expand_asm_operands(%union.tree_node* %13, %union.tree_node* %14, %union.tree_node* %15, %union.tree_node* %16, i32 %17, i8* %18, i32 %19)
  store i32 0, i32* %i, align 4
  %20 = load %union.tree_node*, %union.tree_node** %outputs.addr, align 8
  store %union.tree_node* %20, %union.tree_node** %tail, align 8
  br label %for.cond.1

for.cond.1:                                       ; preds = %for.inc.55, %for.end
  %21 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %tobool2 = icmp ne %union.tree_node* %21, null
  br i1 %tobool2, label %for.body.3, label %for.end.59

for.body.3:                                       ; preds = %for.cond.1
  %22 = load i32, i32* %i, align 4
  %idxprom4 = sext i32 %22 to i64
  %23 = load %union.tree_node**, %union.tree_node*** %o, align 8
  %arrayidx5 = getelementptr inbounds %union.tree_node*, %union.tree_node** %23, i64 %idxprom4
  %24 = load %union.tree_node*, %union.tree_node** %arrayidx5, align 8
  %25 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %list6 = bitcast %union.tree_node* %25 to %struct.tree_list*
  %value7 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list6, i32 0, i32 2
  %26 = load %union.tree_node*, %union.tree_node** %value7, align 8
  %cmp = icmp ne %union.tree_node* %24, %26
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %for.body.3
  %27 = load i32, i32* %i, align 4
  %idxprom9 = sext i32 %27 to i64
  %28 = load %union.tree_node**, %union.tree_node*** %o, align 8
  %arrayidx10 = getelementptr inbounds %union.tree_node*, %union.tree_node** %28, i64 %idxprom9
  %29 = load %union.tree_node*, %union.tree_node** %arrayidx10, align 8
  %30 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %list11 = bitcast %union.tree_node* %30 to %struct.tree_list*
  %value12 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list11, i32 0, i32 2
  %31 = load %union.tree_node*, %union.tree_node** %value12, align 8
  %call13 = call %union.tree_node* @build_modify_expr(%union.tree_node* %29, i32 115, %union.tree_node* %31)
  %call14 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call13, %struct.rtx_def* null, i32 0, i32 0)
  call void @free_temp_slots()
  %32 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %32 to i64
  %33 = load %union.tree_node**, %union.tree_node*** %o, align 8
  %arrayidx16 = getelementptr inbounds %union.tree_node*, %union.tree_node** %33, i64 %idxprom15
  %34 = load %union.tree_node*, %union.tree_node** %arrayidx16, align 8
  %35 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %list17 = bitcast %union.tree_node* %35 to %struct.tree_list*
  %value18 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list17, i32 0, i32 2
  store %union.tree_node* %34, %union.tree_node** %value18, align 8
  br label %if.end.54

if.else:                                          ; preds = %for.body.3
  %36 = load i32, i32* %i, align 4
  %idxprom19 = sext i32 %36 to i64
  %37 = load %union.tree_node**, %union.tree_node*** %o, align 8
  %arrayidx20 = getelementptr inbounds %union.tree_node*, %union.tree_node** %37, i64 %idxprom19
  %38 = load %union.tree_node*, %union.tree_node** %arrayidx20, align 8
  %common21 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %type22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common21, i32 0, i32 1
  %39 = load %union.tree_node*, %union.tree_node** %type22, align 8
  store %union.tree_node* %39, %union.tree_node** %type, align 8
  %40 = load i32, i32* %i, align 4
  %idxprom23 = sext i32 %40 to i64
  %41 = load %union.tree_node**, %union.tree_node*** %o, align 8
  %arrayidx24 = getelementptr inbounds %union.tree_node*, %union.tree_node** %41, i64 %idxprom23
  %42 = load %union.tree_node*, %union.tree_node** %arrayidx24, align 8
  %common25 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common25, i32 0, i32 2
  %bf.load = load i32, i32* %readonly_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 12
  %bf.clear = and i32 %bf.lshr, 1
  %tobool26 = icmp ne i32 %bf.clear, 0
  br i1 %tobool26, label %if.then.51, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %43 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common27 = bitcast %union.tree_node* %43 to %struct.tree_common*
  %readonly_flag28 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common27, i32 0, i32 2
  %bf.load29 = load i32, i32* %readonly_flag28, align 8
  %bf.lshr30 = lshr i32 %bf.load29, 12
  %bf.clear31 = and i32 %bf.lshr30, 1
  %tobool32 = icmp ne i32 %bf.clear31, 0
  br i1 %tobool32, label %if.then.51, label %lor.lhs.false.33

lor.lhs.false.33:                                 ; preds = %lor.lhs.false
  %44 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common34 = bitcast %union.tree_node* %44 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common34, i32 0, i32 2
  %bf.load35 = load i32, i32* %code, align 8
  %bf.clear36 = and i32 %bf.load35, 255
  %cmp37 = icmp eq i32 %bf.clear36, 20
  br i1 %cmp37, label %land.lhs.true, label %lor.lhs.false.39

lor.lhs.false.39:                                 ; preds = %lor.lhs.false.33
  %45 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common40 = bitcast %union.tree_node* %45 to %struct.tree_common*
  %code41 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common40, i32 0, i32 2
  %bf.load42 = load i32, i32* %code41, align 8
  %bf.clear43 = and i32 %bf.load42, 255
  %cmp44 = icmp eq i32 %bf.clear43, 21
  br i1 %cmp44, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false.39, %lor.lhs.false.33
  %46 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common46 = bitcast %union.tree_node* %46 to %struct.tree_common*
  %lang_flag_1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common46, i32 0, i32 2
  %bf.load47 = load i32, i32* %lang_flag_1, align 8
  %bf.lshr48 = lshr i32 %bf.load47, 25
  %bf.clear49 = and i32 %bf.lshr48, 1
  %tobool50 = icmp ne i32 %bf.clear49, 0
  br i1 %tobool50, label %if.then.51, label %if.end

if.then.51:                                       ; preds = %land.lhs.true, %lor.lhs.false, %if.else
  %47 = load i32, i32* %i, align 4
  %idxprom52 = sext i32 %47 to i64
  %48 = load %union.tree_node**, %union.tree_node*** %o, align 8
  %arrayidx53 = getelementptr inbounds %union.tree_node*, %union.tree_node** %48, i64 %idxprom52
  %49 = load %union.tree_node*, %union.tree_node** %arrayidx53, align 8
  call void @readonly_warning(%union.tree_node* %49, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.140, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then.51, %land.lhs.true, %lor.lhs.false.39
  br label %if.end.54

if.end.54:                                        ; preds = %if.end, %if.then
  br label %for.inc.55

for.inc.55:                                       ; preds = %if.end.54
  %50 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %common56 = bitcast %union.tree_node* %50 to %struct.tree_common*
  %chain57 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common56, i32 0, i32 0
  %51 = load %union.tree_node*, %union.tree_node** %chain57, align 8
  store %union.tree_node* %51, %union.tree_node** %tail, align 8
  %52 = load i32, i32* %i, align 4
  %inc58 = add nsw i32 %52, 1
  store i32 %inc58, i32* %i, align 4
  br label %for.cond.1

for.end.59:                                       ; preds = %for.cond.1
  call void @emit_queue()
  ret void
}

declare void @expand_asm_operands(%union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i8*, i32) #1

declare %struct.rtx_def* @expand_expr(%union.tree_node*, %struct.rtx_def*, i32, i32) #1

declare void @free_temp_slots() #1

declare void @emit_queue() #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @c_expand_return(%union.tree_node* %retval1) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %retval.addr = alloca %union.tree_node*, align 8
  %valtype = alloca %union.tree_node*, align 8
  %t = alloca %union.tree_node*, align 8
  %res = alloca %union.tree_node*, align 8
  %inner = alloca %union.tree_node*, align 8
  %op1 = alloca %union.tree_node*, align 8
  store %union.tree_node* %retval1, %union.tree_node** %retval.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common2 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 1
  %2 = load %union.tree_node*, %union.tree_node** %type3, align 8
  store %union.tree_node* %2, %union.tree_node** %valtype, align 8
  %3 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %common4 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 2
  %bf.load = load i32, i32* %volatile_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 11
  %bf.clear = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.141, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load %union.tree_node*, %union.tree_node** %retval.addr, align 8
  %tobool5 = icmp ne %union.tree_node* %4, null
  br i1 %tobool5, label %if.else, label %if.then.6

if.then.6:                                        ; preds = %if.end
  store i32 1, i32* @current_function_returns_null, align 4
  %5 = load i32, i32* @warn_return_type, align 4
  %tobool7 = icmp ne i32 %5, 0
  br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.6
  %6 = load i32, i32* @flag_isoc99, align 4
  %tobool8 = icmp ne i32 %6, 0
  br i1 %tobool8, label %land.lhs.true, label %if.end.15

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.then.6
  %7 = load %union.tree_node*, %union.tree_node** %valtype, align 8
  %cmp = icmp ne %union.tree_node* %7, null
  br i1 %cmp, label %land.lhs.true.9, label %if.end.15

land.lhs.true.9:                                  ; preds = %land.lhs.true
  %8 = load %union.tree_node*, %union.tree_node** %valtype, align 8
  %common10 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common10, i32 0, i32 2
  %bf.load11 = load i32, i32* %code, align 8
  %bf.clear12 = and i32 %bf.load11, 255
  %cmp13 = icmp ne i32 %bf.clear12, 5
  br i1 %cmp13, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %land.lhs.true.9
  call void (i8*, ...) @pedwarn_c99(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.142, i32 0, i32 0))
  br label %if.end.15

if.end.15:                                        ; preds = %if.then.14, %land.lhs.true.9, %land.lhs.true, %lor.lhs.false
  br label %if.end.152

if.else:                                          ; preds = %if.end
  %9 = load %union.tree_node*, %union.tree_node** %valtype, align 8
  %cmp16 = icmp eq %union.tree_node* %9, null
  br i1 %cmp16, label %if.then.23, label %lor.lhs.false.17

lor.lhs.false.17:                                 ; preds = %if.else
  %10 = load %union.tree_node*, %union.tree_node** %valtype, align 8
  %common18 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %code19 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common18, i32 0, i32 2
  %bf.load20 = load i32, i32* %code19, align 8
  %bf.clear21 = and i32 %bf.load20, 255
  %cmp22 = icmp eq i32 %bf.clear21, 5
  br i1 %cmp22, label %if.then.23, label %if.else.35

if.then.23:                                       ; preds = %lor.lhs.false.17, %if.else
  store i32 1, i32* @current_function_returns_null, align 4
  %11 = load i32, i32* @pedantic, align 4
  %tobool24 = icmp ne i32 %11, 0
  br i1 %tobool24, label %if.then.33, label %lor.lhs.false.25

lor.lhs.false.25:                                 ; preds = %if.then.23
  %12 = load %union.tree_node*, %union.tree_node** %retval.addr, align 8
  %common26 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %type27 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common26, i32 0, i32 1
  %13 = load %union.tree_node*, %union.tree_node** %type27, align 8
  %common28 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %code29 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common28, i32 0, i32 2
  %bf.load30 = load i32, i32* %code29, align 8
  %bf.clear31 = and i32 %bf.load30, 255
  %cmp32 = icmp ne i32 %bf.clear31, 5
  br i1 %cmp32, label %if.then.33, label %if.end.34

if.then.33:                                       ; preds = %lor.lhs.false.25, %if.then.23
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.143, i32 0, i32 0))
  br label %if.end.34

if.end.34:                                        ; preds = %if.then.33, %lor.lhs.false.25
  br label %if.end.151

if.else.35:                                       ; preds = %lor.lhs.false.17
  %14 = load %union.tree_node*, %union.tree_node** %valtype, align 8
  %15 = load %union.tree_node*, %union.tree_node** %retval.addr, align 8
  %call = call %union.tree_node* @convert_for_assignment(%union.tree_node* %14, %union.tree_node* %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.144, i32 0, i32 0), %union.tree_node* null, %union.tree_node* null, i32 0)
  store %union.tree_node* %call, %union.tree_node** %t, align 8
  %16 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %decl = bitcast %union.tree_node* %16 to %struct.tree_decl*
  %result = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 11
  %17 = load %union.tree_node*, %union.tree_node** %result, align 8
  store %union.tree_node* %17, %union.tree_node** %res, align 8
  store i32 1, i32* @current_function_returns_value, align 4
  %18 = load %union.tree_node*, %union.tree_node** %t, align 8
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp36 = icmp eq %union.tree_node* %18, %19
  br i1 %cmp36, label %if.then.37, label %if.end.38

if.then.37:                                       ; preds = %if.else.35
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.38:                                        ; preds = %if.else.35
  %20 = load %union.tree_node*, %union.tree_node** %res, align 8
  %common39 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %type40 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common39, i32 0, i32 1
  %21 = load %union.tree_node*, %union.tree_node** %type40, align 8
  %22 = load %union.tree_node*, %union.tree_node** %t, align 8
  %call41 = call %union.tree_node* @convert(%union.tree_node* %21, %union.tree_node* %22)
  store %union.tree_node* %call41, %union.tree_node** %t, align 8
  store %union.tree_node* %call41, %union.tree_node** %inner, align 8
  br label %while.body

while.body:                                       ; preds = %if.end.38, %sw.bb, %if.end.102
  %23 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %common42 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %code43 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common42, i32 0, i32 2
  %bf.load44 = load i32, i32* %code43, align 8
  %bf.clear45 = and i32 %bf.load44, 255
  switch i32 %bf.clear45, label %sw.default [
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 114, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb.46
    i32 121, label %sw.bb.106
  ]

sw.bb:                                            ; preds = %while.body, %while.body, %while.body, %while.body
  %24 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %exp = bitcast %union.tree_node* %24 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %25 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  store %union.tree_node* %25, %union.tree_node** %inner, align 8
  br label %while.body

sw.bb.46:                                         ; preds = %while.body
  %26 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %exp47 = bitcast %union.tree_node* %26 to %struct.tree_exp*
  %operands48 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp47, i32 0, i32 2
  %arrayidx49 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands48, i32 0, i64 1
  %27 = load %union.tree_node*, %union.tree_node** %arrayidx49, align 8
  store %union.tree_node* %27, %union.tree_node** %op1, align 8
  br label %while.cond.50

while.cond.50:                                    ; preds = %while.body.82, %sw.bb.46
  %28 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common51 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %type52 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common51, i32 0, i32 1
  %29 = load %union.tree_node*, %union.tree_node** %type52, align 8
  %common53 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %code54 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common53, i32 0, i32 2
  %bf.load55 = load i32, i32* %code54, align 8
  %bf.clear56 = and i32 %bf.load55, 255
  %cmp57 = icmp eq i32 %bf.clear56, 13
  br i1 %cmp57, label %land.end, label %lor.lhs.false.58

lor.lhs.false.58:                                 ; preds = %while.cond.50
  %30 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common59 = bitcast %union.tree_node* %30 to %struct.tree_common*
  %type60 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common59, i32 0, i32 1
  %31 = load %union.tree_node*, %union.tree_node** %type60, align 8
  %common61 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %code62 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common61, i32 0, i32 2
  %bf.load63 = load i32, i32* %code62, align 8
  %bf.clear64 = and i32 %bf.load63, 255
  %cmp65 = icmp eq i32 %bf.clear64, 15
  br i1 %cmp65, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %lor.lhs.false.58
  %32 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common66 = bitcast %union.tree_node* %32 to %struct.tree_common*
  %code67 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common66, i32 0, i32 2
  %bf.load68 = load i32, i32* %code67, align 8
  %bf.clear69 = and i32 %bf.load68, 255
  %cmp70 = icmp eq i32 %bf.clear69, 115
  br i1 %cmp70, label %lor.end, label %lor.lhs.false.71

lor.lhs.false.71:                                 ; preds = %land.rhs
  %33 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common72 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %code73 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common72, i32 0, i32 2
  %bf.load74 = load i32, i32* %code73, align 8
  %bf.clear75 = and i32 %bf.load74, 255
  %cmp76 = icmp eq i32 %bf.clear75, 116
  br i1 %cmp76, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.71
  %34 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common77 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %code78 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common77, i32 0, i32 2
  %bf.load79 = load i32, i32* %code78, align 8
  %bf.clear80 = and i32 %bf.load79, 255
  %cmp81 = icmp eq i32 %bf.clear80, 114
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.71, %land.rhs
  %35 = phi i1 [ true, %lor.lhs.false.71 ], [ true, %land.rhs ], [ %cmp81, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %lor.lhs.false.58, %while.cond.50
  %36 = phi i1 [ false, %lor.lhs.false.58 ], [ false, %while.cond.50 ], [ %35, %lor.end ]
  br i1 %36, label %while.body.82, label %while.end

while.body.82:                                    ; preds = %land.end
  %37 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %exp83 = bitcast %union.tree_node* %37 to %struct.tree_exp*
  %operands84 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp83, i32 0, i32 2
  %arrayidx85 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands84, i32 0, i64 0
  %38 = load %union.tree_node*, %union.tree_node** %arrayidx85, align 8
  store %union.tree_node* %38, %union.tree_node** %op1, align 8
  br label %while.cond.50

while.end:                                        ; preds = %land.end
  %39 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common86 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %type87 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common86, i32 0, i32 1
  %40 = load %union.tree_node*, %union.tree_node** %type87, align 8
  %common88 = bitcast %union.tree_node* %40 to %struct.tree_common*
  %code89 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common88, i32 0, i32 2
  %bf.load90 = load i32, i32* %code89, align 8
  %bf.clear91 = and i32 %bf.load90, 255
  %cmp92 = icmp eq i32 %bf.clear91, 13
  br i1 %cmp92, label %if.then.101, label %lor.lhs.false.93

lor.lhs.false.93:                                 ; preds = %while.end
  %41 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common94 = bitcast %union.tree_node* %41 to %struct.tree_common*
  %type95 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common94, i32 0, i32 1
  %42 = load %union.tree_node*, %union.tree_node** %type95, align 8
  %common96 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %code97 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common96, i32 0, i32 2
  %bf.load98 = load i32, i32* %code97, align 8
  %bf.clear99 = and i32 %bf.load98, 255
  %cmp100 = icmp eq i32 %bf.clear99, 15
  br i1 %cmp100, label %if.then.101, label %if.end.102

if.then.101:                                      ; preds = %lor.lhs.false.93, %while.end
  br label %sw.epilog

if.end.102:                                       ; preds = %lor.lhs.false.93
  %43 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %exp103 = bitcast %union.tree_node* %43 to %struct.tree_exp*
  %operands104 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp103, i32 0, i32 2
  %arrayidx105 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands104, i32 0, i64 0
  %44 = load %union.tree_node*, %union.tree_node** %arrayidx105, align 8
  store %union.tree_node* %44, %union.tree_node** %inner, align 8
  br label %while.body

sw.bb.106:                                        ; preds = %while.body
  %45 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %exp107 = bitcast %union.tree_node* %45 to %struct.tree_exp*
  %operands108 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp107, i32 0, i32 2
  %arrayidx109 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands108, i32 0, i64 0
  %46 = load %union.tree_node*, %union.tree_node** %arrayidx109, align 8
  store %union.tree_node* %46, %union.tree_node** %inner, align 8
  br label %while.cond.110

while.cond.110:                                   ; preds = %while.body.118, %sw.bb.106
  %47 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %common111 = bitcast %union.tree_node* %47 to %struct.tree_common*
  %code112 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common111, i32 0, i32 2
  %bf.load113 = load i32, i32* %code112, align 8
  %bf.clear114 = and i32 %bf.load113, 255
  %idxprom = sext i32 %bf.clear114 to i64
  %arrayidx115 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom
  %48 = load i8, i8* %arrayidx115, align 1
  %conv = sext i8 %48 to i32
  %cmp116 = icmp eq i32 %conv, 114
  br i1 %cmp116, label %while.body.118, label %while.end.122

while.body.118:                                   ; preds = %while.cond.110
  %49 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %exp119 = bitcast %union.tree_node* %49 to %struct.tree_exp*
  %operands120 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp119, i32 0, i32 2
  %arrayidx121 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands120, i32 0, i64 0
  %50 = load %union.tree_node*, %union.tree_node** %arrayidx121, align 8
  store %union.tree_node* %50, %union.tree_node** %inner, align 8
  br label %while.cond.110

while.end.122:                                    ; preds = %while.cond.110
  %51 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %common123 = bitcast %union.tree_node* %51 to %struct.tree_common*
  %code124 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common123, i32 0, i32 2
  %bf.load125 = load i32, i32* %code124, align 8
  %bf.clear126 = and i32 %bf.load125, 255
  %cmp127 = icmp eq i32 %bf.clear126, 34
  br i1 %cmp127, label %land.lhs.true.129, label %if.end.146

land.lhs.true.129:                                ; preds = %while.end.122
  %52 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %decl130 = bitcast %union.tree_node* %52 to %struct.tree_decl*
  %external_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl130, i32 0, i32 5
  %53 = bitcast i48* %external_flag to i64*
  %bf.load131 = load i64, i64* %53, align 8
  %bf.lshr132 = lshr i64 %bf.load131, 8
  %bf.clear133 = and i64 %bf.lshr132, 1
  %bf.cast = trunc i64 %bf.clear133 to i32
  %tobool134 = icmp ne i32 %bf.cast, 0
  br i1 %tobool134, label %if.end.146, label %land.lhs.true.135

land.lhs.true.135:                                ; preds = %land.lhs.true.129
  %54 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %common136 = bitcast %union.tree_node* %54 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common136, i32 0, i32 2
  %bf.load137 = load i32, i32* %static_flag, align 8
  %bf.lshr138 = lshr i32 %bf.load137, 18
  %bf.clear139 = and i32 %bf.lshr138, 1
  %tobool140 = icmp ne i32 %bf.clear139, 0
  br i1 %tobool140, label %if.end.146, label %land.lhs.true.141

land.lhs.true.141:                                ; preds = %land.lhs.true.135
  %55 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %decl142 = bitcast %union.tree_node* %55 to %struct.tree_decl*
  %context = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl142, i32 0, i32 9
  %56 = load %union.tree_node*, %union.tree_node** %context, align 8
  %57 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %cmp143 = icmp eq %union.tree_node* %56, %57
  br i1 %cmp143, label %if.then.145, label %if.end.146

if.then.145:                                      ; preds = %land.lhs.true.141
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.145, i32 0, i32 0))
  br label %if.end.146

if.end.146:                                       ; preds = %if.then.145, %land.lhs.true.141, %land.lhs.true.135, %land.lhs.true.129, %while.end.122
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.146, %if.then.101
  br label %while.end.147

while.end.147:                                    ; preds = %sw.epilog
  %58 = load %union.tree_node*, %union.tree_node** %res, align 8
  %common148 = bitcast %union.tree_node* %58 to %struct.tree_common*
  %type149 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common148, i32 0, i32 1
  %59 = load %union.tree_node*, %union.tree_node** %type149, align 8
  %60 = load %union.tree_node*, %union.tree_node** %res, align 8
  %61 = load %union.tree_node*, %union.tree_node** %t, align 8
  %call150 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 48, %union.tree_node* %59, %union.tree_node* %60, %union.tree_node* %61)
  store %union.tree_node* %call150, %union.tree_node** %retval.addr, align 8
  br label %if.end.151

if.end.151:                                       ; preds = %while.end.147, %if.end.34
  br label %if.end.152

if.end.152:                                       ; preds = %if.end.151, %if.end.15
  %62 = load %union.tree_node*, %union.tree_node** %retval.addr, align 8
  %call153 = call %union.tree_node* @build_return_stmt(%union.tree_node* %62)
  %call154 = call %union.tree_node* @add_stmt(%union.tree_node* %call153)
  store %union.tree_node* %call154, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.152, %if.then.37
  %63 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %63
}

declare void @pedwarn_c99(i8*, ...) #1

declare %union.tree_node* @build_return_stmt(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @c_start_case(%union.tree_node* %exp) #0 {
entry:
  %exp.addr = alloca %union.tree_node*, align 8
  %code = alloca i32, align 4
  %type = alloca %union.tree_node*, align 8
  %orig_type = alloca %union.tree_node*, align 8
  %cs = alloca %struct.c_switch*, align 8
  store %union.tree_node* %exp, %union.tree_node** %exp.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %0, %union.tree_node** %orig_type, align 8
  %1 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp = icmp ne %union.tree_node* %1, %2
  br i1 %cmp, label %if.then, label %if.end.43

if.then:                                          ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common = bitcast %union.tree_node* %3 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %4 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %common2 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load = load i32, i32* %code3, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %code, align 4
  %5 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common4 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 1
  %6 = load %union.tree_node*, %union.tree_node** %type5, align 8
  store %union.tree_node* %6, %union.tree_node** %orig_type, align 8
  %7 = load %union.tree_node*, %union.tree_node** %orig_type, align 8
  %common6 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %code7 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6, i32 0, i32 2
  %bf.load8 = load i32, i32* %code7, align 8
  %bf.clear9 = and i32 %bf.load8, 255
  %cmp10 = icmp eq i32 %bf.clear9, 6
  br i1 %cmp10, label %if.else, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %8 = load %union.tree_node*, %union.tree_node** %orig_type, align 8
  %common11 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %code12 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 2
  %bf.load13 = load i32, i32* %code12, align 8
  %bf.clear14 = and i32 %bf.load13, 255
  %cmp15 = icmp eq i32 %bf.clear14, 10
  br i1 %cmp15, label %if.else, label %lor.lhs.false.16

lor.lhs.false.16:                                 ; preds = %lor.lhs.false
  %9 = load %union.tree_node*, %union.tree_node** %orig_type, align 8
  %common17 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %code18 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common17, i32 0, i32 2
  %bf.load19 = load i32, i32* %code18, align 8
  %bf.clear20 = and i32 %bf.load19, 255
  %cmp21 = icmp eq i32 %bf.clear20, 11
  br i1 %cmp21, label %if.else, label %lor.lhs.false.22

lor.lhs.false.22:                                 ; preds = %lor.lhs.false.16
  %10 = load %union.tree_node*, %union.tree_node** %orig_type, align 8
  %common23 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %code24 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common23, i32 0, i32 2
  %bf.load25 = load i32, i32* %code24, align 8
  %bf.clear26 = and i32 %bf.load25, 255
  %cmp27 = icmp eq i32 %bf.clear26, 12
  br i1 %cmp27, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false.22
  %11 = load i32, i32* %code, align 4
  %cmp28 = icmp ne i32 %11, 0
  br i1 %cmp28, label %if.then.29, label %if.else

if.then.29:                                       ; preds = %land.lhs.true
  call void (i8*, ...) @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.146, i32 0, i32 0))
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  store %union.tree_node* %12, %union.tree_node** %exp.addr, align 8
  br label %if.end.42

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false.22, %lor.lhs.false.16, %lor.lhs.false, %if.then
  %13 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common30 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %type31 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common30, i32 0, i32 1
  %14 = load %union.tree_node*, %union.tree_node** %type31, align 8
  %type32 = bitcast %union.tree_node* %14 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type32, i32 0, i32 15
  %15 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  store %union.tree_node* %15, %union.tree_node** %type, align 8
  %16 = load i32, i32* @warn_traditional, align 4
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %land.lhs.true.33, label %if.end

land.lhs.true.33:                                 ; preds = %if.else
  %17 = load i32, i32* @in_system_header, align 4
  %tobool34 = icmp ne i32 %17, 0
  br i1 %tobool34, label %if.end, label %land.lhs.true.35

land.lhs.true.35:                                 ; preds = %land.lhs.true.33
  %18 = load %union.tree_node*, %union.tree_node** %type, align 8
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 7), align 8
  %cmp36 = icmp eq %union.tree_node* %18, %19
  br i1 %cmp36, label %if.then.39, label %lor.lhs.false.37

lor.lhs.false.37:                                 ; preds = %land.lhs.true.35
  %20 = load %union.tree_node*, %union.tree_node** %type, align 8
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 8), align 8
  %cmp38 = icmp eq %union.tree_node* %20, %21
  br i1 %cmp38, label %if.then.39, label %if.end

if.then.39:                                       ; preds = %lor.lhs.false.37, %land.lhs.true.35
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.147, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then.39, %lor.lhs.false.37, %land.lhs.true.33, %if.else
  %22 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %call = call %union.tree_node* @default_conversion(%union.tree_node* %22)
  store %union.tree_node* %call, %union.tree_node** %exp.addr, align 8
  %23 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common40 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %type41 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common40, i32 0, i32 1
  %24 = load %union.tree_node*, %union.tree_node** %type41, align 8
  store %union.tree_node* %24, %union.tree_node** %type, align 8
  br label %if.end.42

if.end.42:                                        ; preds = %if.end, %if.then.29
  br label %if.end.43

if.end.43:                                        ; preds = %if.end.42, %entry
  %call44 = call noalias i8* @xmalloc(i64 24)
  %25 = bitcast i8* %call44 to %struct.c_switch*
  store %struct.c_switch* %25, %struct.c_switch** %cs, align 8
  %26 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %27 = load %union.tree_node*, %union.tree_node** %orig_type, align 8
  %call45 = call %union.tree_node* (i32, ...) @build_stmt(i32 162, %union.tree_node* %26, %union.tree_node* null, %union.tree_node* %27)
  %28 = load %struct.c_switch*, %struct.c_switch** %cs, align 8
  %switch_stmt = getelementptr inbounds %struct.c_switch, %struct.c_switch* %28, i32 0, i32 0
  store %union.tree_node* %call45, %union.tree_node** %switch_stmt, align 8
  %call46 = call %struct.splay_tree_s* @splay_tree_new(i32 (i64, i64)* @case_compare, void (i64)* null, void (i64)* null)
  %29 = load %struct.c_switch*, %struct.c_switch** %cs, align 8
  %cases = getelementptr inbounds %struct.c_switch, %struct.c_switch* %29, i32 0, i32 1
  store %struct.splay_tree_s* %call46, %struct.splay_tree_s** %cases, align 8
  %30 = load %struct.c_switch*, %struct.c_switch** @switch_stack, align 8
  %31 = load %struct.c_switch*, %struct.c_switch** %cs, align 8
  %next = getelementptr inbounds %struct.c_switch, %struct.c_switch* %31, i32 0, i32 2
  store %struct.c_switch* %30, %struct.c_switch** %next, align 8
  %32 = load %struct.c_switch*, %struct.c_switch** %cs, align 8
  store %struct.c_switch* %32, %struct.c_switch** @switch_stack, align 8
  %33 = load %struct.c_switch*, %struct.c_switch** @switch_stack, align 8
  %switch_stmt47 = getelementptr inbounds %struct.c_switch, %struct.c_switch* %33, i32 0, i32 0
  %34 = load %union.tree_node*, %union.tree_node** %switch_stmt47, align 8
  %call48 = call %union.tree_node* @add_stmt(%union.tree_node* %34)
  ret %union.tree_node* %call48
}

declare %struct.splay_tree_s* @splay_tree_new(i32 (i64, i64)*, void (i64)*, void (i64)*) #1

declare i32 @case_compare(i64, i64) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @do_case(%union.tree_node* %low_value, %union.tree_node* %high_value) #0 {
entry:
  %low_value.addr = alloca %union.tree_node*, align 8
  %high_value.addr = alloca %union.tree_node*, align 8
  %label = alloca %union.tree_node*, align 8
  store %union.tree_node* %low_value, %union.tree_node** %low_value.addr, align 8
  store %union.tree_node* %high_value, %union.tree_node** %high_value.addr, align 8
  store %union.tree_node* null, %union.tree_node** %label, align 8
  %0 = load %struct.c_switch*, %struct.c_switch** @switch_stack, align 8
  %tobool = icmp ne %struct.c_switch* %0, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %struct.c_switch*, %struct.c_switch** @switch_stack, align 8
  %cases = getelementptr inbounds %struct.c_switch, %struct.c_switch* %1, i32 0, i32 1
  %2 = load %struct.splay_tree_s*, %struct.splay_tree_s** %cases, align 8
  %3 = load %struct.c_switch*, %struct.c_switch** @switch_stack, align 8
  %switch_stmt = getelementptr inbounds %struct.c_switch, %struct.c_switch* %3, i32 0, i32 0
  %4 = load %union.tree_node*, %union.tree_node** %switch_stmt, align 8
  %exp = bitcast %union.tree_node* %4 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %6 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8
  %7 = load %union.tree_node*, %union.tree_node** %high_value.addr, align 8
  %call = call %union.tree_node* @c_add_case_label(%struct.splay_tree_s* %2, %union.tree_node* %5, %union.tree_node* %6, %union.tree_node* %7)
  store %union.tree_node* %call, %union.tree_node** %label, align 8
  %8 = load %union.tree_node*, %union.tree_node** %label, align 8
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp = icmp eq %union.tree_node* %8, %9
  br i1 %cmp, label %if.then.1, label %if.end

if.then.1:                                        ; preds = %if.then
  store %union.tree_node* null, %union.tree_node** %label, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.1, %if.then
  br label %if.end.6

if.else:                                          ; preds = %entry
  %10 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8
  %tobool2 = icmp ne %union.tree_node* %10, null
  br i1 %tobool2, label %if.then.3, label %if.else.4

if.then.3:                                        ; preds = %if.else
  call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.148, i32 0, i32 0))
  br label %if.end.5

if.else.4:                                        ; preds = %if.else
  call void (i8*, ...) @error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.149, i32 0, i32 0))
  br label %if.end.5

if.end.5:                                         ; preds = %if.else.4, %if.then.3
  br label %if.end.6

if.end.6:                                         ; preds = %if.end.5, %if.end
  %11 = load %union.tree_node*, %union.tree_node** %label, align 8
  ret %union.tree_node* %11
}

declare %union.tree_node* @c_add_case_label(%struct.splay_tree_s*, %union.tree_node*, %union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @c_finish_case() #0 {
entry:
  %cs = alloca %struct.c_switch*, align 8
  %0 = load %struct.c_switch*, %struct.c_switch** @switch_stack, align 8
  store %struct.c_switch* %0, %struct.c_switch** %cs, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %1 = load %struct.c_switch*, %struct.c_switch** %cs, align 8
  %switch_stmt = getelementptr inbounds %struct.c_switch, %struct.c_switch* %1, i32 0, i32 0
  %2 = load %union.tree_node*, %union.tree_node** %switch_stmt, align 8
  %common = bitcast %union.tree_node* %2 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 0
  %3 = load %union.tree_node*, %union.tree_node** %chain, align 8
  %4 = load %struct.c_switch*, %struct.c_switch** %cs, align 8
  %switch_stmt1 = getelementptr inbounds %struct.c_switch, %struct.c_switch* %4, i32 0, i32 0
  %5 = load %union.tree_node*, %union.tree_node** %switch_stmt1, align 8
  %exp = bitcast %union.tree_node* %5 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 1
  store %union.tree_node* %3, %union.tree_node** %arrayidx, align 8
  %6 = load %struct.c_switch*, %struct.c_switch** %cs, align 8
  %switch_stmt2 = getelementptr inbounds %struct.c_switch, %struct.c_switch* %6, i32 0, i32 0
  %7 = load %union.tree_node*, %union.tree_node** %switch_stmt2, align 8
  %common3 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %chain4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3, i32 0, i32 0
  store %union.tree_node* null, %union.tree_node** %chain4, align 8
  %8 = load %struct.c_switch*, %struct.c_switch** %cs, align 8
  %switch_stmt5 = getelementptr inbounds %struct.c_switch, %struct.c_switch* %8, i32 0, i32 0
  %9 = load %union.tree_node*, %union.tree_node** %switch_stmt5, align 8
  %call = call %struct.stmt_tree_s* @current_stmt_tree()
  %x_last_stmt = getelementptr inbounds %struct.stmt_tree_s, %struct.stmt_tree_s* %call, i32 0, i32 0
  store %union.tree_node* %9, %union.tree_node** %x_last_stmt, align 8
  br label %do.end

do.end:                                           ; preds = %do.body
  %10 = load %struct.c_switch*, %struct.c_switch** @switch_stack, align 8
  %next = getelementptr inbounds %struct.c_switch, %struct.c_switch* %10, i32 0, i32 2
  %11 = load %struct.c_switch*, %struct.c_switch** %next, align 8
  store %struct.c_switch* %11, %struct.c_switch** @switch_stack, align 8
  %12 = load %struct.c_switch*, %struct.c_switch** %cs, align 8
  %cases = getelementptr inbounds %struct.c_switch, %struct.c_switch* %12, i32 0, i32 1
  %13 = load %struct.splay_tree_s*, %struct.splay_tree_s** %cases, align 8
  call void @splay_tree_delete(%struct.splay_tree_s* %13)
  %14 = load %struct.c_switch*, %struct.c_switch** %cs, align 8
  %15 = bitcast %struct.c_switch* %14 to i8*
  call void @free(i8* %15) #6
  ret void
}

declare %struct.stmt_tree_s* @current_stmt_tree() #1

declare void @splay_tree_delete(%struct.splay_tree_s*) #1

declare i32 @self_promoting_args_p(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal i32 @type_lists_compatible_p(%union.tree_node* %args1, %union.tree_node* %args2) #0 {
entry:
  %retval = alloca i32, align 4
  %args1.addr = alloca %union.tree_node*, align 8
  %args2.addr = alloca %union.tree_node*, align 8
  %val = alloca i32, align 4
  %newval = alloca i32, align 4
  %memb = alloca %union.tree_node*, align 8
  %memb129 = alloca %union.tree_node*, align 8
  store %union.tree_node* %args1, %union.tree_node** %args1.addr, align 8
  store %union.tree_node* %args2, %union.tree_node** %args2.addr, align 8
  store i32 1, i32* %val, align 4
  store i32 0, i32* %newval, align 4
  br label %while.body

while.body:                                       ; preds = %entry, %if.end.160
  %0 = load %union.tree_node*, %union.tree_node** %args1.addr, align 8
  %cmp = icmp eq %union.tree_node* %0, null
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %while.body
  %1 = load %union.tree_node*, %union.tree_node** %args2.addr, align 8
  %cmp1 = icmp eq %union.tree_node* %1, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* %val, align 4
  store i32 %2, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %while.body
  %3 = load %union.tree_node*, %union.tree_node** %args1.addr, align 8
  %cmp2 = icmp eq %union.tree_node* %3, null
  br i1 %cmp2, label %if.then.4, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %union.tree_node*, %union.tree_node** %args2.addr, align 8
  %cmp3 = icmp eq %union.tree_node* %4, null
  br i1 %cmp3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %retval
  br label %return

if.end.5:                                         ; preds = %lor.lhs.false
  %5 = load %union.tree_node*, %union.tree_node** %args1.addr, align 8
  %list = bitcast %union.tree_node* %5 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %6 = load %union.tree_node*, %union.tree_node** %value, align 8
  %cmp6 = icmp eq %union.tree_node* %6, null
  br i1 %cmp6, label %if.then.7, label %if.else

if.then.7:                                        ; preds = %if.end.5
  %7 = load %union.tree_node*, %union.tree_node** %args2.addr, align 8
  %list8 = bitcast %union.tree_node* %7 to %struct.tree_list*
  %value9 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list8, i32 0, i32 2
  %8 = load %union.tree_node*, %union.tree_node** %value9, align 8
  %call = call %union.tree_node* @simple_type_promotes_to(%union.tree_node* %8)
  %cmp10 = icmp ne %union.tree_node* %call, null
  br i1 %cmp10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.then.7
  store i32 0, i32* %retval
  br label %return

if.end.12:                                        ; preds = %if.then.7
  br label %if.end.157

if.else:                                          ; preds = %if.end.5
  %9 = load %union.tree_node*, %union.tree_node** %args2.addr, align 8
  %list13 = bitcast %union.tree_node* %9 to %struct.tree_list*
  %value14 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list13, i32 0, i32 2
  %10 = load %union.tree_node*, %union.tree_node** %value14, align 8
  %cmp15 = icmp eq %union.tree_node* %10, null
  br i1 %cmp15, label %if.then.16, label %if.else.23

if.then.16:                                       ; preds = %if.else
  %11 = load %union.tree_node*, %union.tree_node** %args1.addr, align 8
  %list17 = bitcast %union.tree_node* %11 to %struct.tree_list*
  %value18 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list17, i32 0, i32 2
  %12 = load %union.tree_node*, %union.tree_node** %value18, align 8
  %call19 = call %union.tree_node* @simple_type_promotes_to(%union.tree_node* %12)
  %cmp20 = icmp ne %union.tree_node* %call19, null
  br i1 %cmp20, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %if.then.16
  store i32 0, i32* %retval
  br label %return

if.end.22:                                        ; preds = %if.then.16
  br label %if.end.156

if.else.23:                                       ; preds = %if.else
  %13 = load %union.tree_node*, %union.tree_node** %args1.addr, align 8
  %list24 = bitcast %union.tree_node* %13 to %struct.tree_list*
  %value25 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list24, i32 0, i32 2
  %14 = load %union.tree_node*, %union.tree_node** %value25, align 8
  %type = bitcast %union.tree_node* %14 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i32 0, i32 15
  %15 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %16 = load %union.tree_node*, %union.tree_node** %args2.addr, align 8
  %list26 = bitcast %union.tree_node* %16 to %struct.tree_list*
  %value27 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list26, i32 0, i32 2
  %17 = load %union.tree_node*, %union.tree_node** %value27, align 8
  %type28 = bitcast %union.tree_node* %17 to %struct.tree_type*
  %main_variant29 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type28, i32 0, i32 15
  %18 = load %union.tree_node*, %union.tree_node** %main_variant29, align 8
  %call30 = call i32 @comptypes(%union.tree_node* %15, %union.tree_node* %18)
  store i32 %call30, i32* %newval, align 4
  %tobool = icmp ne i32 %call30, 0
  br i1 %tobool, label %if.end.155, label %if.then.31

if.then.31:                                       ; preds = %if.else.23
  %19 = load %union.tree_node*, %union.tree_node** %args1.addr, align 8
  %list32 = bitcast %union.tree_node* %19 to %struct.tree_list*
  %value33 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list32, i32 0, i32 2
  %20 = load %union.tree_node*, %union.tree_node** %value33, align 8
  %common = bitcast %union.tree_node* %20 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp34 = icmp eq i32 %bf.clear, 21
  br i1 %cmp34, label %land.lhs.true.35, label %if.else.84

land.lhs.true.35:                                 ; preds = %if.then.31
  %21 = load %union.tree_node*, %union.tree_node** %args1.addr, align 8
  %list36 = bitcast %union.tree_node* %21 to %struct.tree_list*
  %value37 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list36, i32 0, i32 2
  %22 = load %union.tree_node*, %union.tree_node** %value37, align 8
  %type38 = bitcast %union.tree_node* %22 to %struct.tree_type*
  %name = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type38, i32 0, i32 11
  %23 = load %union.tree_node*, %union.tree_node** %name, align 8
  %cmp39 = icmp eq %union.tree_node* %23, null
  br i1 %cmp39, label %land.lhs.true.47, label %lor.lhs.false.40

lor.lhs.false.40:                                 ; preds = %land.lhs.true.35
  %24 = load %union.tree_node*, %union.tree_node** %args1.addr, align 8
  %list41 = bitcast %union.tree_node* %24 to %struct.tree_list*
  %value42 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list41, i32 0, i32 2
  %25 = load %union.tree_node*, %union.tree_node** %value42, align 8
  %type43 = bitcast %union.tree_node* %25 to %struct.tree_type*
  %transparent_union_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type43, i32 0, i32 6
  %bf.load44 = load i32, i32* %transparent_union_flag, align 4
  %bf.lshr = lshr i32 %bf.load44, 19
  %bf.clear45 = and i32 %bf.lshr, 1
  %tobool46 = icmp ne i32 %bf.clear45, 0
  br i1 %tobool46, label %land.lhs.true.47, label %if.else.84

land.lhs.true.47:                                 ; preds = %lor.lhs.false.40, %land.lhs.true.35
  %26 = load %union.tree_node*, %union.tree_node** %args1.addr, align 8
  %list48 = bitcast %union.tree_node* %26 to %struct.tree_list*
  %value49 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list48, i32 0, i32 2
  %27 = load %union.tree_node*, %union.tree_node** %value49, align 8
  %type50 = bitcast %union.tree_node* %27 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type50, i32 0, i32 2
  %28 = load %union.tree_node*, %union.tree_node** %size, align 8
  %common51 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %code52 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common51, i32 0, i32 2
  %bf.load53 = load i32, i32* %code52, align 8
  %bf.clear54 = and i32 %bf.load53, 255
  %cmp55 = icmp eq i32 %bf.clear54, 25
  br i1 %cmp55, label %land.lhs.true.56, label %if.else.84

land.lhs.true.56:                                 ; preds = %land.lhs.true.47
  %29 = load %union.tree_node*, %union.tree_node** %args1.addr, align 8
  %list57 = bitcast %union.tree_node* %29 to %struct.tree_list*
  %value58 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list57, i32 0, i32 2
  %30 = load %union.tree_node*, %union.tree_node** %value58, align 8
  %type59 = bitcast %union.tree_node* %30 to %struct.tree_type*
  %size60 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type59, i32 0, i32 2
  %31 = load %union.tree_node*, %union.tree_node** %size60, align 8
  %32 = load %union.tree_node*, %union.tree_node** %args2.addr, align 8
  %list61 = bitcast %union.tree_node* %32 to %struct.tree_list*
  %value62 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list61, i32 0, i32 2
  %33 = load %union.tree_node*, %union.tree_node** %value62, align 8
  %type63 = bitcast %union.tree_node* %33 to %struct.tree_type*
  %size64 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type63, i32 0, i32 2
  %34 = load %union.tree_node*, %union.tree_node** %size64, align 8
  %call65 = call i32 @tree_int_cst_equal(%union.tree_node* %31, %union.tree_node* %34)
  %tobool66 = icmp ne i32 %call65, 0
  br i1 %tobool66, label %if.then.67, label %if.else.84

if.then.67:                                       ; preds = %land.lhs.true.56
  %35 = load %union.tree_node*, %union.tree_node** %args1.addr, align 8
  %list68 = bitcast %union.tree_node* %35 to %struct.tree_list*
  %value69 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list68, i32 0, i32 2
  %36 = load %union.tree_node*, %union.tree_node** %value69, align 8
  %type70 = bitcast %union.tree_node* %36 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type70, i32 0, i32 1
  %37 = load %union.tree_node*, %union.tree_node** %values, align 8
  store %union.tree_node* %37, %union.tree_node** %memb, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.67
  %38 = load %union.tree_node*, %union.tree_node** %memb, align 8
  %tobool71 = icmp ne %union.tree_node* %38, null
  br i1 %tobool71, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %39 = load %union.tree_node*, %union.tree_node** %memb, align 8
  %common72 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %type73 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common72, i32 0, i32 1
  %40 = load %union.tree_node*, %union.tree_node** %type73, align 8
  %41 = load %union.tree_node*, %union.tree_node** %args2.addr, align 8
  %list74 = bitcast %union.tree_node* %41 to %struct.tree_list*
  %value75 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list74, i32 0, i32 2
  %42 = load %union.tree_node*, %union.tree_node** %value75, align 8
  %call76 = call i32 @comptypes(%union.tree_node* %40, %union.tree_node* %42)
  %tobool77 = icmp ne i32 %call76, 0
  br i1 %tobool77, label %if.then.78, label %if.end.79

if.then.78:                                       ; preds = %for.body
  br label %for.end

if.end.79:                                        ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.79
  %43 = load %union.tree_node*, %union.tree_node** %memb, align 8
  %common80 = bitcast %union.tree_node* %43 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common80, i32 0, i32 0
  %44 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %44, %union.tree_node** %memb, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.78, %for.cond
  %45 = load %union.tree_node*, %union.tree_node** %memb, align 8
  %cmp81 = icmp eq %union.tree_node* %45, null
  br i1 %cmp81, label %if.then.82, label %if.end.83

if.then.82:                                       ; preds = %for.end
  store i32 0, i32* %retval
  br label %return

if.end.83:                                        ; preds = %for.end
  br label %if.end.154

if.else.84:                                       ; preds = %land.lhs.true.56, %land.lhs.true.47, %lor.lhs.false.40, %if.then.31
  %46 = load %union.tree_node*, %union.tree_node** %args2.addr, align 8
  %list85 = bitcast %union.tree_node* %46 to %struct.tree_list*
  %value86 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list85, i32 0, i32 2
  %47 = load %union.tree_node*, %union.tree_node** %value86, align 8
  %common87 = bitcast %union.tree_node* %47 to %struct.tree_common*
  %code88 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common87, i32 0, i32 2
  %bf.load89 = load i32, i32* %code88, align 8
  %bf.clear90 = and i32 %bf.load89, 255
  %cmp91 = icmp eq i32 %bf.clear90, 21
  br i1 %cmp91, label %land.lhs.true.92, label %if.else.152

land.lhs.true.92:                                 ; preds = %if.else.84
  %48 = load %union.tree_node*, %union.tree_node** %args2.addr, align 8
  %list93 = bitcast %union.tree_node* %48 to %struct.tree_list*
  %value94 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list93, i32 0, i32 2
  %49 = load %union.tree_node*, %union.tree_node** %value94, align 8
  %type95 = bitcast %union.tree_node* %49 to %struct.tree_type*
  %name96 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type95, i32 0, i32 11
  %50 = load %union.tree_node*, %union.tree_node** %name96, align 8
  %cmp97 = icmp eq %union.tree_node* %50, null
  br i1 %cmp97, label %land.lhs.true.107, label %lor.lhs.false.98

lor.lhs.false.98:                                 ; preds = %land.lhs.true.92
  %51 = load %union.tree_node*, %union.tree_node** %args2.addr, align 8
  %list99 = bitcast %union.tree_node* %51 to %struct.tree_list*
  %value100 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list99, i32 0, i32 2
  %52 = load %union.tree_node*, %union.tree_node** %value100, align 8
  %type101 = bitcast %union.tree_node* %52 to %struct.tree_type*
  %transparent_union_flag102 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type101, i32 0, i32 6
  %bf.load103 = load i32, i32* %transparent_union_flag102, align 4
  %bf.lshr104 = lshr i32 %bf.load103, 19
  %bf.clear105 = and i32 %bf.lshr104, 1
  %tobool106 = icmp ne i32 %bf.clear105, 0
  br i1 %tobool106, label %land.lhs.true.107, label %if.else.152

land.lhs.true.107:                                ; preds = %lor.lhs.false.98, %land.lhs.true.92
  %53 = load %union.tree_node*, %union.tree_node** %args2.addr, align 8
  %list108 = bitcast %union.tree_node* %53 to %struct.tree_list*
  %value109 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list108, i32 0, i32 2
  %54 = load %union.tree_node*, %union.tree_node** %value109, align 8
  %type110 = bitcast %union.tree_node* %54 to %struct.tree_type*
  %size111 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type110, i32 0, i32 2
  %55 = load %union.tree_node*, %union.tree_node** %size111, align 8
  %common112 = bitcast %union.tree_node* %55 to %struct.tree_common*
  %code113 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common112, i32 0, i32 2
  %bf.load114 = load i32, i32* %code113, align 8
  %bf.clear115 = and i32 %bf.load114, 255
  %cmp116 = icmp eq i32 %bf.clear115, 25
  br i1 %cmp116, label %land.lhs.true.117, label %if.else.152

land.lhs.true.117:                                ; preds = %land.lhs.true.107
  %56 = load %union.tree_node*, %union.tree_node** %args2.addr, align 8
  %list118 = bitcast %union.tree_node* %56 to %struct.tree_list*
  %value119 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list118, i32 0, i32 2
  %57 = load %union.tree_node*, %union.tree_node** %value119, align 8
  %type120 = bitcast %union.tree_node* %57 to %struct.tree_type*
  %size121 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type120, i32 0, i32 2
  %58 = load %union.tree_node*, %union.tree_node** %size121, align 8
  %59 = load %union.tree_node*, %union.tree_node** %args1.addr, align 8
  %list122 = bitcast %union.tree_node* %59 to %struct.tree_list*
  %value123 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list122, i32 0, i32 2
  %60 = load %union.tree_node*, %union.tree_node** %value123, align 8
  %type124 = bitcast %union.tree_node* %60 to %struct.tree_type*
  %size125 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type124, i32 0, i32 2
  %61 = load %union.tree_node*, %union.tree_node** %size125, align 8
  %call126 = call i32 @tree_int_cst_equal(%union.tree_node* %58, %union.tree_node* %61)
  %tobool127 = icmp ne i32 %call126, 0
  br i1 %tobool127, label %if.then.128, label %if.else.152

if.then.128:                                      ; preds = %land.lhs.true.117
  %62 = load %union.tree_node*, %union.tree_node** %args2.addr, align 8
  %list130 = bitcast %union.tree_node* %62 to %struct.tree_list*
  %value131 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list130, i32 0, i32 2
  %63 = load %union.tree_node*, %union.tree_node** %value131, align 8
  %type132 = bitcast %union.tree_node* %63 to %struct.tree_type*
  %values133 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type132, i32 0, i32 1
  %64 = load %union.tree_node*, %union.tree_node** %values133, align 8
  store %union.tree_node* %64, %union.tree_node** %memb129, align 8
  br label %for.cond.134

for.cond.134:                                     ; preds = %for.inc.145, %if.then.128
  %65 = load %union.tree_node*, %union.tree_node** %memb129, align 8
  %tobool135 = icmp ne %union.tree_node* %65, null
  br i1 %tobool135, label %for.body.136, label %for.end.148

for.body.136:                                     ; preds = %for.cond.134
  %66 = load %union.tree_node*, %union.tree_node** %memb129, align 8
  %common137 = bitcast %union.tree_node* %66 to %struct.tree_common*
  %type138 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common137, i32 0, i32 1
  %67 = load %union.tree_node*, %union.tree_node** %type138, align 8
  %68 = load %union.tree_node*, %union.tree_node** %args1.addr, align 8
  %list139 = bitcast %union.tree_node* %68 to %struct.tree_list*
  %value140 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list139, i32 0, i32 2
  %69 = load %union.tree_node*, %union.tree_node** %value140, align 8
  %call141 = call i32 @comptypes(%union.tree_node* %67, %union.tree_node* %69)
  %tobool142 = icmp ne i32 %call141, 0
  br i1 %tobool142, label %if.then.143, label %if.end.144

if.then.143:                                      ; preds = %for.body.136
  br label %for.end.148

if.end.144:                                       ; preds = %for.body.136
  br label %for.inc.145

for.inc.145:                                      ; preds = %if.end.144
  %70 = load %union.tree_node*, %union.tree_node** %memb129, align 8
  %common146 = bitcast %union.tree_node* %70 to %struct.tree_common*
  %chain147 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common146, i32 0, i32 0
  %71 = load %union.tree_node*, %union.tree_node** %chain147, align 8
  store %union.tree_node* %71, %union.tree_node** %memb129, align 8
  br label %for.cond.134

for.end.148:                                      ; preds = %if.then.143, %for.cond.134
  %72 = load %union.tree_node*, %union.tree_node** %memb129, align 8
  %cmp149 = icmp eq %union.tree_node* %72, null
  br i1 %cmp149, label %if.then.150, label %if.end.151

if.then.150:                                      ; preds = %for.end.148
  store i32 0, i32* %retval
  br label %return

if.end.151:                                       ; preds = %for.end.148
  br label %if.end.153

if.else.152:                                      ; preds = %land.lhs.true.117, %land.lhs.true.107, %lor.lhs.false.98, %if.else.84
  store i32 0, i32* %retval
  br label %return

if.end.153:                                       ; preds = %if.end.151
  br label %if.end.154

if.end.154:                                       ; preds = %if.end.153, %if.end.83
  br label %if.end.155

if.end.155:                                       ; preds = %if.end.154, %if.else.23
  br label %if.end.156

if.end.156:                                       ; preds = %if.end.155, %if.end.22
  br label %if.end.157

if.end.157:                                       ; preds = %if.end.156, %if.end.12
  %73 = load i32, i32* %newval, align 4
  %74 = load i32, i32* %val, align 4
  %cmp158 = icmp sgt i32 %73, %74
  br i1 %cmp158, label %if.then.159, label %if.end.160

if.then.159:                                      ; preds = %if.end.157
  %75 = load i32, i32* %newval, align 4
  store i32 %75, i32* %val, align 4
  br label %if.end.160

if.end.160:                                       ; preds = %if.then.159, %if.end.157
  %76 = load %union.tree_node*, %union.tree_node** %args1.addr, align 8
  %common161 = bitcast %union.tree_node* %76 to %struct.tree_common*
  %chain162 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common161, i32 0, i32 0
  %77 = load %union.tree_node*, %union.tree_node** %chain162, align 8
  store %union.tree_node* %77, %union.tree_node** %args1.addr, align 8
  %78 = load %union.tree_node*, %union.tree_node** %args2.addr, align 8
  %common163 = bitcast %union.tree_node* %78 to %struct.tree_common*
  %chain164 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common163, i32 0, i32 0
  %79 = load %union.tree_node*, %union.tree_node** %chain164, align 8
  store %union.tree_node* %79, %union.tree_node** %args2.addr, align 8
  br label %while.body

return:                                           ; preds = %if.else.152, %if.then.150, %if.then.82, %if.then.21, %if.then.11, %if.then.4, %if.then
  %80 = load i32, i32* %retval
  ret i32 %80
}

declare %union.tree_node* @simple_type_promotes_to(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal void @warn_for_assignment(i8* %msgid, i8* %opname, %union.tree_node* %function, i32 %argnum) #0 {
entry:
  %msgid.addr = alloca i8*, align 8
  %opname.addr = alloca i8*, align 8
  %function.addr = alloca %union.tree_node*, align 8
  %argnum.addr = alloca i32, align 4
  store i8* %msgid, i8** %msgid.addr, align 8
  store i8* %opname, i8** %opname.addr, align 8
  store %union.tree_node* %function, %union.tree_node** %function.addr, align 8
  store i32 %argnum, i32* %argnum.addr, align 4
  ret void
}

declare i32 @operand_equal_p(%union.tree_node*, %union.tree_node*, i32) #1

declare i32 @warn_if_unused_value(%union.tree_node*) #1

declare %union.tree_node* @unsigned_type(%union.tree_node*) #1

declare %union.tree_node* @maybe_building_objc_message_expr() #1

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #3

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #4

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @valid_compound_expr_initializer(%union.tree_node* %value, %union.tree_node* %endtype) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %value.addr = alloca %union.tree_node*, align 8
  %endtype.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %value, %union.tree_node** %value.addr, align 8
  store %union.tree_node* %endtype, %union.tree_node** %endtype.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 47
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %exp = bitcast %union.tree_node* %1 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %3 = load %union.tree_node*, %union.tree_node** %endtype.addr, align 8
  %call = call %union.tree_node* @valid_compound_expr_initializer(%union.tree_node* %2, %union.tree_node* %3)
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp1 = icmp eq %union.tree_node* %call, %4
  br i1 %cmp1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %if.then
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %5, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %if.then
  %6 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %exp3 = bitcast %union.tree_node* %6 to %struct.tree_exp*
  %operands4 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3, i32 0, i32 2
  %arrayidx5 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4, i32 0, i64 1
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx5, align 8
  %8 = load %union.tree_node*, %union.tree_node** %endtype.addr, align 8
  %call6 = call %union.tree_node* @valid_compound_expr_initializer(%union.tree_node* %7, %union.tree_node* %8)
  store %union.tree_node* %call6, %union.tree_node** %retval
  br label %return

if.else:                                          ; preds = %entry
  %9 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common7 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 2
  %bf.load8 = load i32, i32* %constant_flag, align 8
  %bf.lshr = lshr i32 %bf.load8, 9
  %bf.clear9 = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear9, 0
  br i1 %tobool, label %if.else.13, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else
  %10 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %11 = load %union.tree_node*, %union.tree_node** %endtype.addr, align 8
  %call10 = call %union.tree_node* @initializer_constant_valid_p(%union.tree_node* %10, %union.tree_node* %11)
  %tobool11 = icmp ne %union.tree_node* %call10, null
  br i1 %tobool11, label %if.else.13, label %if.then.12

if.then.12:                                       ; preds = %land.lhs.true
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %12, %union.tree_node** %retval
  br label %return

if.else.13:                                       ; preds = %land.lhs.true, %if.else
  %13 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  store %union.tree_node* %13, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.else.13, %if.then.12, %if.end, %if.then.2
  %14 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %14
}

declare %union.tree_node* @initializer_constant_valid_p(%union.tree_node*, %union.tree_node*) #1

declare i8* @xrealloc(i8*, i64) #1

declare i8* @ggc_alloc(i64) #1

; Function Attrs: nounwind uwtable
define internal void @add_pending_init(%union.tree_node* %purpose, %union.tree_node* %value) #0 {
entry:
  %purpose.addr = alloca %union.tree_node*, align 8
  %value.addr = alloca %union.tree_node*, align 8
  %p = alloca %struct.init_node*, align 8
  %q = alloca %struct.init_node**, align 8
  %r = alloca %struct.init_node*, align 8
  %bitpos = alloca %union.tree_node*, align 8
  %s = alloca %struct.init_node*, align 8
  %t = alloca %struct.init_node*, align 8
  %t186 = alloca %struct.init_node*, align 8
  store %union.tree_node* %purpose, %union.tree_node** %purpose.addr, align 8
  store %union.tree_node* %value, %union.tree_node** %value.addr, align 8
  store %struct.init_node** @constructor_pending_elts, %struct.init_node*** %q, align 8
  store %struct.init_node* null, %struct.init_node** %p, align 8
  %0 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 18
  br i1 %cmp, label %if.then, label %if.else.18

if.then:                                          ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %if.end.17, %if.then
  %1 = load %struct.init_node**, %struct.init_node*** %q, align 8
  %2 = load %struct.init_node*, %struct.init_node** %1, align 8
  %cmp1 = icmp ne %struct.init_node* %2, null
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load %struct.init_node**, %struct.init_node*** %q, align 8
  %4 = load %struct.init_node*, %struct.init_node** %3, align 8
  store %struct.init_node* %4, %struct.init_node** %p, align 8
  %5 = load %union.tree_node*, %union.tree_node** %purpose.addr, align 8
  %6 = load %struct.init_node*, %struct.init_node** %p, align 8
  %purpose2 = getelementptr inbounds %struct.init_node, %struct.init_node* %6, i32 0, i32 4
  %7 = load %union.tree_node*, %union.tree_node** %purpose2, align 8
  %call = call i32 @tree_int_cst_lt(%union.tree_node* %5, %union.tree_node* %7)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then.3, label %if.else

if.then.3:                                        ; preds = %while.body
  %8 = load %struct.init_node*, %struct.init_node** %p, align 8
  %left = getelementptr inbounds %struct.init_node, %struct.init_node* %8, i32 0, i32 0
  store %struct.init_node** %left, %struct.init_node*** %q, align 8
  br label %if.end.17

if.else:                                          ; preds = %while.body
  %9 = load %struct.init_node*, %struct.init_node** %p, align 8
  %purpose4 = getelementptr inbounds %struct.init_node, %struct.init_node* %9, i32 0, i32 4
  %10 = load %union.tree_node*, %union.tree_node** %purpose4, align 8
  %11 = load %union.tree_node*, %union.tree_node** %purpose.addr, align 8
  %call5 = call i32 @tree_int_cst_lt(%union.tree_node* %10, %union.tree_node* %11)
  %tobool6 = icmp ne i32 %call5, 0
  br i1 %tobool6, label %if.then.7, label %if.else.8

if.then.7:                                        ; preds = %if.else
  %12 = load %struct.init_node*, %struct.init_node** %p, align 8
  %right = getelementptr inbounds %struct.init_node, %struct.init_node* %12, i32 0, i32 1
  store %struct.init_node** %right, %struct.init_node*** %q, align 8
  br label %if.end.16

if.else.8:                                        ; preds = %if.else
  %13 = load %struct.init_node*, %struct.init_node** %p, align 8
  %value9 = getelementptr inbounds %struct.init_node, %struct.init_node* %13, i32 0, i32 5
  %14 = load %union.tree_node*, %union.tree_node** %value9, align 8
  %common10 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common10, i32 0, i32 2
  %bf.load11 = load i32, i32* %side_effects_flag, align 8
  %bf.lshr = lshr i32 %bf.load11, 8
  %bf.clear12 = and i32 %bf.lshr, 1
  %tobool13 = icmp ne i32 %bf.clear12, 0
  br i1 %tobool13, label %if.then.14, label %if.end

if.then.14:                                       ; preds = %if.else.8
  call void @warning_init(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.195, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then.14, %if.else.8
  %15 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %16 = load %struct.init_node*, %struct.init_node** %p, align 8
  %value15 = getelementptr inbounds %struct.init_node, %struct.init_node* %16, i32 0, i32 5
  store %union.tree_node* %15, %union.tree_node** %value15, align 8
  br label %while.end.238

if.end.16:                                        ; preds = %if.then.7
  br label %if.end.17

if.end.17:                                        ; preds = %if.end.16, %if.then.3
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end.48

if.else.18:                                       ; preds = %entry
  %17 = load %union.tree_node*, %union.tree_node** %purpose.addr, align 8
  %call19 = call %union.tree_node* @bit_position(%union.tree_node* %17)
  store %union.tree_node* %call19, %union.tree_node** %bitpos, align 8
  br label %while.cond.20

while.cond.20:                                    ; preds = %if.end.46, %if.else.18
  %18 = load %struct.init_node**, %struct.init_node*** %q, align 8
  %19 = load %struct.init_node*, %struct.init_node** %18, align 8
  %cmp21 = icmp ne %struct.init_node* %19, null
  br i1 %cmp21, label %while.body.22, label %while.end.47

while.body.22:                                    ; preds = %while.cond.20
  %20 = load %struct.init_node**, %struct.init_node*** %q, align 8
  %21 = load %struct.init_node*, %struct.init_node** %20, align 8
  store %struct.init_node* %21, %struct.init_node** %p, align 8
  %22 = load %union.tree_node*, %union.tree_node** %bitpos, align 8
  %23 = load %struct.init_node*, %struct.init_node** %p, align 8
  %purpose23 = getelementptr inbounds %struct.init_node, %struct.init_node* %23, i32 0, i32 4
  %24 = load %union.tree_node*, %union.tree_node** %purpose23, align 8
  %call24 = call %union.tree_node* @bit_position(%union.tree_node* %24)
  %call25 = call i32 @tree_int_cst_lt(%union.tree_node* %22, %union.tree_node* %call24)
  %tobool26 = icmp ne i32 %call25, 0
  br i1 %tobool26, label %if.then.27, label %if.else.29

if.then.27:                                       ; preds = %while.body.22
  %25 = load %struct.init_node*, %struct.init_node** %p, align 8
  %left28 = getelementptr inbounds %struct.init_node, %struct.init_node* %25, i32 0, i32 0
  store %struct.init_node** %left28, %struct.init_node*** %q, align 8
  br label %if.end.46

if.else.29:                                       ; preds = %while.body.22
  %26 = load %struct.init_node*, %struct.init_node** %p, align 8
  %purpose30 = getelementptr inbounds %struct.init_node, %struct.init_node* %26, i32 0, i32 4
  %27 = load %union.tree_node*, %union.tree_node** %purpose30, align 8
  %28 = load %union.tree_node*, %union.tree_node** %purpose.addr, align 8
  %cmp31 = icmp ne %union.tree_node* %27, %28
  br i1 %cmp31, label %if.then.32, label %if.else.34

if.then.32:                                       ; preds = %if.else.29
  %29 = load %struct.init_node*, %struct.init_node** %p, align 8
  %right33 = getelementptr inbounds %struct.init_node, %struct.init_node* %29, i32 0, i32 1
  store %struct.init_node** %right33, %struct.init_node*** %q, align 8
  br label %if.end.45

if.else.34:                                       ; preds = %if.else.29
  %30 = load %struct.init_node*, %struct.init_node** %p, align 8
  %value35 = getelementptr inbounds %struct.init_node, %struct.init_node* %30, i32 0, i32 5
  %31 = load %union.tree_node*, %union.tree_node** %value35, align 8
  %common36 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %side_effects_flag37 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common36, i32 0, i32 2
  %bf.load38 = load i32, i32* %side_effects_flag37, align 8
  %bf.lshr39 = lshr i32 %bf.load38, 8
  %bf.clear40 = and i32 %bf.lshr39, 1
  %tobool41 = icmp ne i32 %bf.clear40, 0
  br i1 %tobool41, label %if.then.42, label %if.end.43

if.then.42:                                       ; preds = %if.else.34
  call void @warning_init(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.195, i32 0, i32 0))
  br label %if.end.43

if.end.43:                                        ; preds = %if.then.42, %if.else.34
  %32 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %33 = load %struct.init_node*, %struct.init_node** %p, align 8
  %value44 = getelementptr inbounds %struct.init_node, %struct.init_node* %33, i32 0, i32 5
  store %union.tree_node* %32, %union.tree_node** %value44, align 8
  br label %while.end.238

if.end.45:                                        ; preds = %if.then.32
  br label %if.end.46

if.end.46:                                        ; preds = %if.end.45, %if.then.27
  br label %while.cond.20

while.end.47:                                     ; preds = %while.cond.20
  br label %if.end.48

if.end.48:                                        ; preds = %while.end.47, %while.end
  %call49 = call i8* @ggc_alloc(i64 48)
  %34 = bitcast i8* %call49 to %struct.init_node*
  store %struct.init_node* %34, %struct.init_node** %r, align 8
  %35 = load %union.tree_node*, %union.tree_node** %purpose.addr, align 8
  %36 = load %struct.init_node*, %struct.init_node** %r, align 8
  %purpose50 = getelementptr inbounds %struct.init_node, %struct.init_node* %36, i32 0, i32 4
  store %union.tree_node* %35, %union.tree_node** %purpose50, align 8
  %37 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %38 = load %struct.init_node*, %struct.init_node** %r, align 8
  %value51 = getelementptr inbounds %struct.init_node, %struct.init_node* %38, i32 0, i32 5
  store %union.tree_node* %37, %union.tree_node** %value51, align 8
  %39 = load %struct.init_node*, %struct.init_node** %r, align 8
  %40 = load %struct.init_node**, %struct.init_node*** %q, align 8
  store %struct.init_node* %39, %struct.init_node** %40, align 8
  %41 = load %struct.init_node*, %struct.init_node** %p, align 8
  %42 = load %struct.init_node*, %struct.init_node** %r, align 8
  %parent = getelementptr inbounds %struct.init_node, %struct.init_node* %42, i32 0, i32 2
  store %struct.init_node* %41, %struct.init_node** %parent, align 8
  %43 = load %struct.init_node*, %struct.init_node** %r, align 8
  %left52 = getelementptr inbounds %struct.init_node, %struct.init_node* %43, i32 0, i32 0
  store %struct.init_node* null, %struct.init_node** %left52, align 8
  %44 = load %struct.init_node*, %struct.init_node** %r, align 8
  %right53 = getelementptr inbounds %struct.init_node, %struct.init_node* %44, i32 0, i32 1
  store %struct.init_node* null, %struct.init_node** %right53, align 8
  %45 = load %struct.init_node*, %struct.init_node** %r, align 8
  %balance = getelementptr inbounds %struct.init_node, %struct.init_node* %45, i32 0, i32 3
  store i32 0, i32* %balance, align 4
  br label %while.cond.54

while.cond.54:                                    ; preds = %if.end.236, %if.end.48
  %46 = load %struct.init_node*, %struct.init_node** %p, align 8
  %tobool55 = icmp ne %struct.init_node* %46, null
  br i1 %tobool55, label %while.body.56, label %while.end.238

while.body.56:                                    ; preds = %while.cond.54
  %47 = load %struct.init_node*, %struct.init_node** %r, align 8
  %48 = load %struct.init_node*, %struct.init_node** %p, align 8
  %left57 = getelementptr inbounds %struct.init_node, %struct.init_node* %48, i32 0, i32 0
  %49 = load %struct.init_node*, %struct.init_node** %left57, align 8
  %cmp58 = icmp eq %struct.init_node* %47, %49
  br i1 %cmp58, label %if.then.59, label %if.else.144

if.then.59:                                       ; preds = %while.body.56
  %50 = load %struct.init_node*, %struct.init_node** %p, align 8
  %balance60 = getelementptr inbounds %struct.init_node, %struct.init_node* %50, i32 0, i32 3
  %51 = load i32, i32* %balance60, align 4
  %cmp61 = icmp eq i32 %51, 0
  br i1 %cmp61, label %if.then.62, label %if.else.64

if.then.62:                                       ; preds = %if.then.59
  %52 = load %struct.init_node*, %struct.init_node** %p, align 8
  %balance63 = getelementptr inbounds %struct.init_node, %struct.init_node* %52, i32 0, i32 3
  store i32 -1, i32* %balance63, align 4
  br label %if.end.143

if.else.64:                                       ; preds = %if.then.59
  %53 = load %struct.init_node*, %struct.init_node** %p, align 8
  %balance65 = getelementptr inbounds %struct.init_node, %struct.init_node* %53, i32 0, i32 3
  %54 = load i32, i32* %balance65, align 4
  %cmp66 = icmp slt i32 %54, 0
  br i1 %cmp66, label %if.then.67, label %if.else.141

if.then.67:                                       ; preds = %if.else.64
  %55 = load %struct.init_node*, %struct.init_node** %r, align 8
  %balance68 = getelementptr inbounds %struct.init_node, %struct.init_node* %55, i32 0, i32 3
  %56 = load i32, i32* %balance68, align 4
  %cmp69 = icmp slt i32 %56, 0
  br i1 %cmp69, label %if.then.70, label %if.else.96

if.then.70:                                       ; preds = %if.then.67
  %57 = load %struct.init_node*, %struct.init_node** %r, align 8
  %right71 = getelementptr inbounds %struct.init_node, %struct.init_node* %57, i32 0, i32 1
  %58 = load %struct.init_node*, %struct.init_node** %right71, align 8
  %59 = load %struct.init_node*, %struct.init_node** %p, align 8
  %left72 = getelementptr inbounds %struct.init_node, %struct.init_node* %59, i32 0, i32 0
  store %struct.init_node* %58, %struct.init_node** %left72, align 8
  %60 = load %struct.init_node*, %struct.init_node** %p, align 8
  %left73 = getelementptr inbounds %struct.init_node, %struct.init_node* %60, i32 0, i32 0
  %61 = load %struct.init_node*, %struct.init_node** %left73, align 8
  %tobool74 = icmp ne %struct.init_node* %61, null
  br i1 %tobool74, label %if.then.75, label %if.end.78

if.then.75:                                       ; preds = %if.then.70
  %62 = load %struct.init_node*, %struct.init_node** %p, align 8
  %63 = load %struct.init_node*, %struct.init_node** %p, align 8
  %left76 = getelementptr inbounds %struct.init_node, %struct.init_node* %63, i32 0, i32 0
  %64 = load %struct.init_node*, %struct.init_node** %left76, align 8
  %parent77 = getelementptr inbounds %struct.init_node, %struct.init_node* %64, i32 0, i32 2
  store %struct.init_node* %62, %struct.init_node** %parent77, align 8
  br label %if.end.78

if.end.78:                                        ; preds = %if.then.75, %if.then.70
  %65 = load %struct.init_node*, %struct.init_node** %p, align 8
  %66 = load %struct.init_node*, %struct.init_node** %r, align 8
  %right79 = getelementptr inbounds %struct.init_node, %struct.init_node* %66, i32 0, i32 1
  store %struct.init_node* %65, %struct.init_node** %right79, align 8
  %67 = load %struct.init_node*, %struct.init_node** %p, align 8
  %balance80 = getelementptr inbounds %struct.init_node, %struct.init_node* %67, i32 0, i32 3
  store i32 0, i32* %balance80, align 4
  %68 = load %struct.init_node*, %struct.init_node** %r, align 8
  %balance81 = getelementptr inbounds %struct.init_node, %struct.init_node* %68, i32 0, i32 3
  store i32 0, i32* %balance81, align 4
  %69 = load %struct.init_node*, %struct.init_node** %p, align 8
  %parent82 = getelementptr inbounds %struct.init_node, %struct.init_node* %69, i32 0, i32 2
  %70 = load %struct.init_node*, %struct.init_node** %parent82, align 8
  store %struct.init_node* %70, %struct.init_node** %s, align 8
  %71 = load %struct.init_node*, %struct.init_node** %r, align 8
  %72 = load %struct.init_node*, %struct.init_node** %p, align 8
  %parent83 = getelementptr inbounds %struct.init_node, %struct.init_node* %72, i32 0, i32 2
  store %struct.init_node* %71, %struct.init_node** %parent83, align 8
  %73 = load %struct.init_node*, %struct.init_node** %s, align 8
  %74 = load %struct.init_node*, %struct.init_node** %r, align 8
  %parent84 = getelementptr inbounds %struct.init_node, %struct.init_node* %74, i32 0, i32 2
  store %struct.init_node* %73, %struct.init_node** %parent84, align 8
  %75 = load %struct.init_node*, %struct.init_node** %s, align 8
  %tobool85 = icmp ne %struct.init_node* %75, null
  br i1 %tobool85, label %if.then.86, label %if.else.94

if.then.86:                                       ; preds = %if.end.78
  %76 = load %struct.init_node*, %struct.init_node** %s, align 8
  %left87 = getelementptr inbounds %struct.init_node, %struct.init_node* %76, i32 0, i32 0
  %77 = load %struct.init_node*, %struct.init_node** %left87, align 8
  %78 = load %struct.init_node*, %struct.init_node** %p, align 8
  %cmp88 = icmp eq %struct.init_node* %77, %78
  br i1 %cmp88, label %if.then.89, label %if.else.91

if.then.89:                                       ; preds = %if.then.86
  %79 = load %struct.init_node*, %struct.init_node** %r, align 8
  %80 = load %struct.init_node*, %struct.init_node** %s, align 8
  %left90 = getelementptr inbounds %struct.init_node, %struct.init_node* %80, i32 0, i32 0
  store %struct.init_node* %79, %struct.init_node** %left90, align 8
  br label %if.end.93

if.else.91:                                       ; preds = %if.then.86
  %81 = load %struct.init_node*, %struct.init_node** %r, align 8
  %82 = load %struct.init_node*, %struct.init_node** %s, align 8
  %right92 = getelementptr inbounds %struct.init_node, %struct.init_node* %82, i32 0, i32 1
  store %struct.init_node* %81, %struct.init_node** %right92, align 8
  br label %if.end.93

if.end.93:                                        ; preds = %if.else.91, %if.then.89
  br label %if.end.95

if.else.94:                                       ; preds = %if.end.78
  %83 = load %struct.init_node*, %struct.init_node** %r, align 8
  store %struct.init_node* %83, %struct.init_node** @constructor_pending_elts, align 8
  br label %if.end.95

if.end.95:                                        ; preds = %if.else.94, %if.end.93
  br label %if.end.140

if.else.96:                                       ; preds = %if.then.67
  %84 = load %struct.init_node*, %struct.init_node** %r, align 8
  %right97 = getelementptr inbounds %struct.init_node, %struct.init_node* %84, i32 0, i32 1
  %85 = load %struct.init_node*, %struct.init_node** %right97, align 8
  store %struct.init_node* %85, %struct.init_node** %t, align 8
  %86 = load %struct.init_node*, %struct.init_node** %t, align 8
  %left98 = getelementptr inbounds %struct.init_node, %struct.init_node* %86, i32 0, i32 0
  %87 = load %struct.init_node*, %struct.init_node** %left98, align 8
  %88 = load %struct.init_node*, %struct.init_node** %r, align 8
  %right99 = getelementptr inbounds %struct.init_node, %struct.init_node* %88, i32 0, i32 1
  store %struct.init_node* %87, %struct.init_node** %right99, align 8
  %89 = load %struct.init_node*, %struct.init_node** %r, align 8
  %right100 = getelementptr inbounds %struct.init_node, %struct.init_node* %89, i32 0, i32 1
  %90 = load %struct.init_node*, %struct.init_node** %right100, align 8
  %tobool101 = icmp ne %struct.init_node* %90, null
  br i1 %tobool101, label %if.then.102, label %if.end.105

if.then.102:                                      ; preds = %if.else.96
  %91 = load %struct.init_node*, %struct.init_node** %r, align 8
  %92 = load %struct.init_node*, %struct.init_node** %r, align 8
  %right103 = getelementptr inbounds %struct.init_node, %struct.init_node* %92, i32 0, i32 1
  %93 = load %struct.init_node*, %struct.init_node** %right103, align 8
  %parent104 = getelementptr inbounds %struct.init_node, %struct.init_node* %93, i32 0, i32 2
  store %struct.init_node* %91, %struct.init_node** %parent104, align 8
  br label %if.end.105

if.end.105:                                       ; preds = %if.then.102, %if.else.96
  %94 = load %struct.init_node*, %struct.init_node** %r, align 8
  %95 = load %struct.init_node*, %struct.init_node** %t, align 8
  %left106 = getelementptr inbounds %struct.init_node, %struct.init_node* %95, i32 0, i32 0
  store %struct.init_node* %94, %struct.init_node** %left106, align 8
  %96 = load %struct.init_node*, %struct.init_node** %t, align 8
  %right107 = getelementptr inbounds %struct.init_node, %struct.init_node* %96, i32 0, i32 1
  %97 = load %struct.init_node*, %struct.init_node** %right107, align 8
  %98 = load %struct.init_node*, %struct.init_node** %p, align 8
  %left108 = getelementptr inbounds %struct.init_node, %struct.init_node* %98, i32 0, i32 0
  store %struct.init_node* %97, %struct.init_node** %left108, align 8
  %99 = load %struct.init_node*, %struct.init_node** %p, align 8
  %left109 = getelementptr inbounds %struct.init_node, %struct.init_node* %99, i32 0, i32 0
  %100 = load %struct.init_node*, %struct.init_node** %left109, align 8
  %tobool110 = icmp ne %struct.init_node* %100, null
  br i1 %tobool110, label %if.then.111, label %if.end.114

if.then.111:                                      ; preds = %if.end.105
  %101 = load %struct.init_node*, %struct.init_node** %p, align 8
  %102 = load %struct.init_node*, %struct.init_node** %p, align 8
  %left112 = getelementptr inbounds %struct.init_node, %struct.init_node* %102, i32 0, i32 0
  %103 = load %struct.init_node*, %struct.init_node** %left112, align 8
  %parent113 = getelementptr inbounds %struct.init_node, %struct.init_node* %103, i32 0, i32 2
  store %struct.init_node* %101, %struct.init_node** %parent113, align 8
  br label %if.end.114

if.end.114:                                       ; preds = %if.then.111, %if.end.105
  %104 = load %struct.init_node*, %struct.init_node** %p, align 8
  %105 = load %struct.init_node*, %struct.init_node** %t, align 8
  %right115 = getelementptr inbounds %struct.init_node, %struct.init_node* %105, i32 0, i32 1
  store %struct.init_node* %104, %struct.init_node** %right115, align 8
  %106 = load %struct.init_node*, %struct.init_node** %t, align 8
  %balance116 = getelementptr inbounds %struct.init_node, %struct.init_node* %106, i32 0, i32 3
  %107 = load i32, i32* %balance116, align 4
  %cmp117 = icmp slt i32 %107, 0
  %conv = zext i1 %cmp117 to i32
  %108 = load %struct.init_node*, %struct.init_node** %p, align 8
  %balance118 = getelementptr inbounds %struct.init_node, %struct.init_node* %108, i32 0, i32 3
  store i32 %conv, i32* %balance118, align 4
  %109 = load %struct.init_node*, %struct.init_node** %t, align 8
  %balance119 = getelementptr inbounds %struct.init_node, %struct.init_node* %109, i32 0, i32 3
  %110 = load i32, i32* %balance119, align 4
  %cmp120 = icmp sgt i32 %110, 0
  %conv121 = zext i1 %cmp120 to i32
  %sub = sub nsw i32 0, %conv121
  %111 = load %struct.init_node*, %struct.init_node** %r, align 8
  %balance122 = getelementptr inbounds %struct.init_node, %struct.init_node* %111, i32 0, i32 3
  store i32 %sub, i32* %balance122, align 4
  %112 = load %struct.init_node*, %struct.init_node** %t, align 8
  %balance123 = getelementptr inbounds %struct.init_node, %struct.init_node* %112, i32 0, i32 3
  store i32 0, i32* %balance123, align 4
  %113 = load %struct.init_node*, %struct.init_node** %p, align 8
  %parent124 = getelementptr inbounds %struct.init_node, %struct.init_node* %113, i32 0, i32 2
  %114 = load %struct.init_node*, %struct.init_node** %parent124, align 8
  store %struct.init_node* %114, %struct.init_node** %s, align 8
  %115 = load %struct.init_node*, %struct.init_node** %t, align 8
  %116 = load %struct.init_node*, %struct.init_node** %p, align 8
  %parent125 = getelementptr inbounds %struct.init_node, %struct.init_node* %116, i32 0, i32 2
  store %struct.init_node* %115, %struct.init_node** %parent125, align 8
  %117 = load %struct.init_node*, %struct.init_node** %t, align 8
  %118 = load %struct.init_node*, %struct.init_node** %r, align 8
  %parent126 = getelementptr inbounds %struct.init_node, %struct.init_node* %118, i32 0, i32 2
  store %struct.init_node* %117, %struct.init_node** %parent126, align 8
  %119 = load %struct.init_node*, %struct.init_node** %s, align 8
  %120 = load %struct.init_node*, %struct.init_node** %t, align 8
  %parent127 = getelementptr inbounds %struct.init_node, %struct.init_node* %120, i32 0, i32 2
  store %struct.init_node* %119, %struct.init_node** %parent127, align 8
  %121 = load %struct.init_node*, %struct.init_node** %s, align 8
  %tobool128 = icmp ne %struct.init_node* %121, null
  br i1 %tobool128, label %if.then.129, label %if.else.138

if.then.129:                                      ; preds = %if.end.114
  %122 = load %struct.init_node*, %struct.init_node** %s, align 8
  %left130 = getelementptr inbounds %struct.init_node, %struct.init_node* %122, i32 0, i32 0
  %123 = load %struct.init_node*, %struct.init_node** %left130, align 8
  %124 = load %struct.init_node*, %struct.init_node** %p, align 8
  %cmp131 = icmp eq %struct.init_node* %123, %124
  br i1 %cmp131, label %if.then.133, label %if.else.135

if.then.133:                                      ; preds = %if.then.129
  %125 = load %struct.init_node*, %struct.init_node** %t, align 8
  %126 = load %struct.init_node*, %struct.init_node** %s, align 8
  %left134 = getelementptr inbounds %struct.init_node, %struct.init_node* %126, i32 0, i32 0
  store %struct.init_node* %125, %struct.init_node** %left134, align 8
  br label %if.end.137

if.else.135:                                      ; preds = %if.then.129
  %127 = load %struct.init_node*, %struct.init_node** %t, align 8
  %128 = load %struct.init_node*, %struct.init_node** %s, align 8
  %right136 = getelementptr inbounds %struct.init_node, %struct.init_node* %128, i32 0, i32 1
  store %struct.init_node* %127, %struct.init_node** %right136, align 8
  br label %if.end.137

if.end.137:                                       ; preds = %if.else.135, %if.then.133
  br label %if.end.139

if.else.138:                                      ; preds = %if.end.114
  %129 = load %struct.init_node*, %struct.init_node** %t, align 8
  store %struct.init_node* %129, %struct.init_node** @constructor_pending_elts, align 8
  br label %if.end.139

if.end.139:                                       ; preds = %if.else.138, %if.end.137
  br label %if.end.140

if.end.140:                                       ; preds = %if.end.139, %if.end.95
  br label %while.end.238

if.else.141:                                      ; preds = %if.else.64
  %130 = load %struct.init_node*, %struct.init_node** %p, align 8
  %balance142 = getelementptr inbounds %struct.init_node, %struct.init_node* %130, i32 0, i32 3
  store i32 0, i32* %balance142, align 4
  br label %while.end.238

if.end.143:                                       ; preds = %if.then.62
  br label %if.end.236

if.else.144:                                      ; preds = %while.body.56
  %131 = load %struct.init_node*, %struct.init_node** %p, align 8
  %balance145 = getelementptr inbounds %struct.init_node, %struct.init_node* %131, i32 0, i32 3
  %132 = load i32, i32* %balance145, align 4
  %cmp146 = icmp eq i32 %132, 0
  br i1 %cmp146, label %if.then.148, label %if.else.150

if.then.148:                                      ; preds = %if.else.144
  %133 = load %struct.init_node*, %struct.init_node** %p, align 8
  %balance149 = getelementptr inbounds %struct.init_node, %struct.init_node* %133, i32 0, i32 3
  %134 = load i32, i32* %balance149, align 4
  %inc = add nsw i32 %134, 1
  store i32 %inc, i32* %balance149, align 4
  br label %if.end.235

if.else.150:                                      ; preds = %if.else.144
  %135 = load %struct.init_node*, %struct.init_node** %p, align 8
  %balance151 = getelementptr inbounds %struct.init_node, %struct.init_node* %135, i32 0, i32 3
  %136 = load i32, i32* %balance151, align 4
  %cmp152 = icmp sgt i32 %136, 0
  br i1 %cmp152, label %if.then.154, label %if.else.233

if.then.154:                                      ; preds = %if.else.150
  %137 = load %struct.init_node*, %struct.init_node** %r, align 8
  %balance155 = getelementptr inbounds %struct.init_node, %struct.init_node* %137, i32 0, i32 3
  %138 = load i32, i32* %balance155, align 4
  %cmp156 = icmp sgt i32 %138, 0
  br i1 %cmp156, label %if.then.158, label %if.else.185

if.then.158:                                      ; preds = %if.then.154
  %139 = load %struct.init_node*, %struct.init_node** %r, align 8
  %left159 = getelementptr inbounds %struct.init_node, %struct.init_node* %139, i32 0, i32 0
  %140 = load %struct.init_node*, %struct.init_node** %left159, align 8
  %141 = load %struct.init_node*, %struct.init_node** %p, align 8
  %right160 = getelementptr inbounds %struct.init_node, %struct.init_node* %141, i32 0, i32 1
  store %struct.init_node* %140, %struct.init_node** %right160, align 8
  %142 = load %struct.init_node*, %struct.init_node** %p, align 8
  %right161 = getelementptr inbounds %struct.init_node, %struct.init_node* %142, i32 0, i32 1
  %143 = load %struct.init_node*, %struct.init_node** %right161, align 8
  %tobool162 = icmp ne %struct.init_node* %143, null
  br i1 %tobool162, label %if.then.163, label %if.end.166

if.then.163:                                      ; preds = %if.then.158
  %144 = load %struct.init_node*, %struct.init_node** %p, align 8
  %145 = load %struct.init_node*, %struct.init_node** %p, align 8
  %right164 = getelementptr inbounds %struct.init_node, %struct.init_node* %145, i32 0, i32 1
  %146 = load %struct.init_node*, %struct.init_node** %right164, align 8
  %parent165 = getelementptr inbounds %struct.init_node, %struct.init_node* %146, i32 0, i32 2
  store %struct.init_node* %144, %struct.init_node** %parent165, align 8
  br label %if.end.166

if.end.166:                                       ; preds = %if.then.163, %if.then.158
  %147 = load %struct.init_node*, %struct.init_node** %p, align 8
  %148 = load %struct.init_node*, %struct.init_node** %r, align 8
  %left167 = getelementptr inbounds %struct.init_node, %struct.init_node* %148, i32 0, i32 0
  store %struct.init_node* %147, %struct.init_node** %left167, align 8
  %149 = load %struct.init_node*, %struct.init_node** %p, align 8
  %balance168 = getelementptr inbounds %struct.init_node, %struct.init_node* %149, i32 0, i32 3
  store i32 0, i32* %balance168, align 4
  %150 = load %struct.init_node*, %struct.init_node** %r, align 8
  %balance169 = getelementptr inbounds %struct.init_node, %struct.init_node* %150, i32 0, i32 3
  store i32 0, i32* %balance169, align 4
  %151 = load %struct.init_node*, %struct.init_node** %p, align 8
  %parent170 = getelementptr inbounds %struct.init_node, %struct.init_node* %151, i32 0, i32 2
  %152 = load %struct.init_node*, %struct.init_node** %parent170, align 8
  store %struct.init_node* %152, %struct.init_node** %s, align 8
  %153 = load %struct.init_node*, %struct.init_node** %r, align 8
  %154 = load %struct.init_node*, %struct.init_node** %p, align 8
  %parent171 = getelementptr inbounds %struct.init_node, %struct.init_node* %154, i32 0, i32 2
  store %struct.init_node* %153, %struct.init_node** %parent171, align 8
  %155 = load %struct.init_node*, %struct.init_node** %s, align 8
  %156 = load %struct.init_node*, %struct.init_node** %r, align 8
  %parent172 = getelementptr inbounds %struct.init_node, %struct.init_node* %156, i32 0, i32 2
  store %struct.init_node* %155, %struct.init_node** %parent172, align 8
  %157 = load %struct.init_node*, %struct.init_node** %s, align 8
  %tobool173 = icmp ne %struct.init_node* %157, null
  br i1 %tobool173, label %if.then.174, label %if.else.183

if.then.174:                                      ; preds = %if.end.166
  %158 = load %struct.init_node*, %struct.init_node** %s, align 8
  %left175 = getelementptr inbounds %struct.init_node, %struct.init_node* %158, i32 0, i32 0
  %159 = load %struct.init_node*, %struct.init_node** %left175, align 8
  %160 = load %struct.init_node*, %struct.init_node** %p, align 8
  %cmp176 = icmp eq %struct.init_node* %159, %160
  br i1 %cmp176, label %if.then.178, label %if.else.180

if.then.178:                                      ; preds = %if.then.174
  %161 = load %struct.init_node*, %struct.init_node** %r, align 8
  %162 = load %struct.init_node*, %struct.init_node** %s, align 8
  %left179 = getelementptr inbounds %struct.init_node, %struct.init_node* %162, i32 0, i32 0
  store %struct.init_node* %161, %struct.init_node** %left179, align 8
  br label %if.end.182

if.else.180:                                      ; preds = %if.then.174
  %163 = load %struct.init_node*, %struct.init_node** %r, align 8
  %164 = load %struct.init_node*, %struct.init_node** %s, align 8
  %right181 = getelementptr inbounds %struct.init_node, %struct.init_node* %164, i32 0, i32 1
  store %struct.init_node* %163, %struct.init_node** %right181, align 8
  br label %if.end.182

if.end.182:                                       ; preds = %if.else.180, %if.then.178
  br label %if.end.184

if.else.183:                                      ; preds = %if.end.166
  %165 = load %struct.init_node*, %struct.init_node** %r, align 8
  store %struct.init_node* %165, %struct.init_node** @constructor_pending_elts, align 8
  br label %if.end.184

if.end.184:                                       ; preds = %if.else.183, %if.end.182
  br label %if.end.232

if.else.185:                                      ; preds = %if.then.154
  %166 = load %struct.init_node*, %struct.init_node** %r, align 8
  %left187 = getelementptr inbounds %struct.init_node, %struct.init_node* %166, i32 0, i32 0
  %167 = load %struct.init_node*, %struct.init_node** %left187, align 8
  store %struct.init_node* %167, %struct.init_node** %t186, align 8
  %168 = load %struct.init_node*, %struct.init_node** %t186, align 8
  %right188 = getelementptr inbounds %struct.init_node, %struct.init_node* %168, i32 0, i32 1
  %169 = load %struct.init_node*, %struct.init_node** %right188, align 8
  %170 = load %struct.init_node*, %struct.init_node** %r, align 8
  %left189 = getelementptr inbounds %struct.init_node, %struct.init_node* %170, i32 0, i32 0
  store %struct.init_node* %169, %struct.init_node** %left189, align 8
  %171 = load %struct.init_node*, %struct.init_node** %r, align 8
  %left190 = getelementptr inbounds %struct.init_node, %struct.init_node* %171, i32 0, i32 0
  %172 = load %struct.init_node*, %struct.init_node** %left190, align 8
  %tobool191 = icmp ne %struct.init_node* %172, null
  br i1 %tobool191, label %if.then.192, label %if.end.195

if.then.192:                                      ; preds = %if.else.185
  %173 = load %struct.init_node*, %struct.init_node** %r, align 8
  %174 = load %struct.init_node*, %struct.init_node** %r, align 8
  %left193 = getelementptr inbounds %struct.init_node, %struct.init_node* %174, i32 0, i32 0
  %175 = load %struct.init_node*, %struct.init_node** %left193, align 8
  %parent194 = getelementptr inbounds %struct.init_node, %struct.init_node* %175, i32 0, i32 2
  store %struct.init_node* %173, %struct.init_node** %parent194, align 8
  br label %if.end.195

if.end.195:                                       ; preds = %if.then.192, %if.else.185
  %176 = load %struct.init_node*, %struct.init_node** %r, align 8
  %177 = load %struct.init_node*, %struct.init_node** %t186, align 8
  %right196 = getelementptr inbounds %struct.init_node, %struct.init_node* %177, i32 0, i32 1
  store %struct.init_node* %176, %struct.init_node** %right196, align 8
  %178 = load %struct.init_node*, %struct.init_node** %t186, align 8
  %left197 = getelementptr inbounds %struct.init_node, %struct.init_node* %178, i32 0, i32 0
  %179 = load %struct.init_node*, %struct.init_node** %left197, align 8
  %180 = load %struct.init_node*, %struct.init_node** %p, align 8
  %right198 = getelementptr inbounds %struct.init_node, %struct.init_node* %180, i32 0, i32 1
  store %struct.init_node* %179, %struct.init_node** %right198, align 8
  %181 = load %struct.init_node*, %struct.init_node** %p, align 8
  %right199 = getelementptr inbounds %struct.init_node, %struct.init_node* %181, i32 0, i32 1
  %182 = load %struct.init_node*, %struct.init_node** %right199, align 8
  %tobool200 = icmp ne %struct.init_node* %182, null
  br i1 %tobool200, label %if.then.201, label %if.end.204

if.then.201:                                      ; preds = %if.end.195
  %183 = load %struct.init_node*, %struct.init_node** %p, align 8
  %184 = load %struct.init_node*, %struct.init_node** %p, align 8
  %right202 = getelementptr inbounds %struct.init_node, %struct.init_node* %184, i32 0, i32 1
  %185 = load %struct.init_node*, %struct.init_node** %right202, align 8
  %parent203 = getelementptr inbounds %struct.init_node, %struct.init_node* %185, i32 0, i32 2
  store %struct.init_node* %183, %struct.init_node** %parent203, align 8
  br label %if.end.204

if.end.204:                                       ; preds = %if.then.201, %if.end.195
  %186 = load %struct.init_node*, %struct.init_node** %p, align 8
  %187 = load %struct.init_node*, %struct.init_node** %t186, align 8
  %left205 = getelementptr inbounds %struct.init_node, %struct.init_node* %187, i32 0, i32 0
  store %struct.init_node* %186, %struct.init_node** %left205, align 8
  %188 = load %struct.init_node*, %struct.init_node** %t186, align 8
  %balance206 = getelementptr inbounds %struct.init_node, %struct.init_node* %188, i32 0, i32 3
  %189 = load i32, i32* %balance206, align 4
  %cmp207 = icmp slt i32 %189, 0
  %conv208 = zext i1 %cmp207 to i32
  %190 = load %struct.init_node*, %struct.init_node** %r, align 8
  %balance209 = getelementptr inbounds %struct.init_node, %struct.init_node* %190, i32 0, i32 3
  store i32 %conv208, i32* %balance209, align 4
  %191 = load %struct.init_node*, %struct.init_node** %t186, align 8
  %balance210 = getelementptr inbounds %struct.init_node, %struct.init_node* %191, i32 0, i32 3
  %192 = load i32, i32* %balance210, align 4
  %cmp211 = icmp sgt i32 %192, 0
  %conv212 = zext i1 %cmp211 to i32
  %sub213 = sub nsw i32 0, %conv212
  %193 = load %struct.init_node*, %struct.init_node** %p, align 8
  %balance214 = getelementptr inbounds %struct.init_node, %struct.init_node* %193, i32 0, i32 3
  store i32 %sub213, i32* %balance214, align 4
  %194 = load %struct.init_node*, %struct.init_node** %t186, align 8
  %balance215 = getelementptr inbounds %struct.init_node, %struct.init_node* %194, i32 0, i32 3
  store i32 0, i32* %balance215, align 4
  %195 = load %struct.init_node*, %struct.init_node** %p, align 8
  %parent216 = getelementptr inbounds %struct.init_node, %struct.init_node* %195, i32 0, i32 2
  %196 = load %struct.init_node*, %struct.init_node** %parent216, align 8
  store %struct.init_node* %196, %struct.init_node** %s, align 8
  %197 = load %struct.init_node*, %struct.init_node** %t186, align 8
  %198 = load %struct.init_node*, %struct.init_node** %p, align 8
  %parent217 = getelementptr inbounds %struct.init_node, %struct.init_node* %198, i32 0, i32 2
  store %struct.init_node* %197, %struct.init_node** %parent217, align 8
  %199 = load %struct.init_node*, %struct.init_node** %t186, align 8
  %200 = load %struct.init_node*, %struct.init_node** %r, align 8
  %parent218 = getelementptr inbounds %struct.init_node, %struct.init_node* %200, i32 0, i32 2
  store %struct.init_node* %199, %struct.init_node** %parent218, align 8
  %201 = load %struct.init_node*, %struct.init_node** %s, align 8
  %202 = load %struct.init_node*, %struct.init_node** %t186, align 8
  %parent219 = getelementptr inbounds %struct.init_node, %struct.init_node* %202, i32 0, i32 2
  store %struct.init_node* %201, %struct.init_node** %parent219, align 8
  %203 = load %struct.init_node*, %struct.init_node** %s, align 8
  %tobool220 = icmp ne %struct.init_node* %203, null
  br i1 %tobool220, label %if.then.221, label %if.else.230

if.then.221:                                      ; preds = %if.end.204
  %204 = load %struct.init_node*, %struct.init_node** %s, align 8
  %left222 = getelementptr inbounds %struct.init_node, %struct.init_node* %204, i32 0, i32 0
  %205 = load %struct.init_node*, %struct.init_node** %left222, align 8
  %206 = load %struct.init_node*, %struct.init_node** %p, align 8
  %cmp223 = icmp eq %struct.init_node* %205, %206
  br i1 %cmp223, label %if.then.225, label %if.else.227

if.then.225:                                      ; preds = %if.then.221
  %207 = load %struct.init_node*, %struct.init_node** %t186, align 8
  %208 = load %struct.init_node*, %struct.init_node** %s, align 8
  %left226 = getelementptr inbounds %struct.init_node, %struct.init_node* %208, i32 0, i32 0
  store %struct.init_node* %207, %struct.init_node** %left226, align 8
  br label %if.end.229

if.else.227:                                      ; preds = %if.then.221
  %209 = load %struct.init_node*, %struct.init_node** %t186, align 8
  %210 = load %struct.init_node*, %struct.init_node** %s, align 8
  %right228 = getelementptr inbounds %struct.init_node, %struct.init_node* %210, i32 0, i32 1
  store %struct.init_node* %209, %struct.init_node** %right228, align 8
  br label %if.end.229

if.end.229:                                       ; preds = %if.else.227, %if.then.225
  br label %if.end.231

if.else.230:                                      ; preds = %if.end.204
  %211 = load %struct.init_node*, %struct.init_node** %t186, align 8
  store %struct.init_node* %211, %struct.init_node** @constructor_pending_elts, align 8
  br label %if.end.231

if.end.231:                                       ; preds = %if.else.230, %if.end.229
  br label %if.end.232

if.end.232:                                       ; preds = %if.end.231, %if.end.184
  br label %while.end.238

if.else.233:                                      ; preds = %if.else.150
  %212 = load %struct.init_node*, %struct.init_node** %p, align 8
  %balance234 = getelementptr inbounds %struct.init_node, %struct.init_node* %212, i32 0, i32 3
  store i32 0, i32* %balance234, align 4
  br label %while.end.238

if.end.235:                                       ; preds = %if.then.148
  br label %if.end.236

if.end.236:                                       ; preds = %if.end.235, %if.end.143
  %213 = load %struct.init_node*, %struct.init_node** %p, align 8
  store %struct.init_node* %213, %struct.init_node** %r, align 8
  %214 = load %struct.init_node*, %struct.init_node** %p, align 8
  %parent237 = getelementptr inbounds %struct.init_node, %struct.init_node* %214, i32 0, i32 2
  %215 = load %struct.init_node*, %struct.init_node** %parent237, align 8
  store %struct.init_node* %215, %struct.init_node** %p, align 8
  br label %while.cond.54

while.end.238:                                    ; preds = %if.end, %if.end.43, %if.else.233, %if.end.232, %if.else.141, %if.end.140, %while.cond.54
  ret void
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn }
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
