; ModuleID = 'combine.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.simple_bitmap_def = type { i32, i32, i32, [1 x i64] }
%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.undobuf = type { %struct.undo*, %struct.undo*, %struct.rtx_def* }
%struct.undo = type { %struct.undo*, i32, %union.anon, %union.anon.0 }
%union.anon = type { %struct.rtx_def* }
%union.anon.0 = type { %struct.rtx_def** }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%union.tree_node = type opaque
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.basic_block_def = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %union.tree_node*, %struct.edge_def*, %struct.edge_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i8*, i32, i32, i64, i32, i32 }
%struct.edge_def = type { %struct.edge_def*, %struct.edge_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def*, i8*, i32, i32, i64 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32 }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.reg_info_def = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@combine_attempts = internal global i32 0, align 4
@combine_merges = internal global i32 0, align 4
@combine_extras = internal global i32 0, align 4
@combine_successes = internal global i32 0, align 4
@combine_max_regno = internal global i32 0, align 4
@reg_nonzero_bits = internal global i64* null, align 8
@reg_sign_bit_copies = internal global i8* null, align 8
@reg_last_death = internal global %struct.rtx_def** null, align 8
@reg_last_set = internal global %struct.rtx_def** null, align 8
@reg_last_set_value = internal global %struct.rtx_def** null, align 8
@reg_last_set_table_tick = internal global i32* null, align 8
@reg_last_set_label = internal global i32* null, align 8
@reg_last_set_invalid = internal global i8* null, align 8
@reg_last_set_mode = internal global i32* null, align 8
@reg_last_set_nonzero_bits = internal global i64* null, align 8
@reg_last_set_sign_bit_copies = internal global i8* null, align 8
@uid_cuid = internal global i32* null, align 8
@max_uid_cuid = internal global i32 0, align 4
@nonzero_bits_mode = internal global i32 0, align 4
@nonzero_sign_valid = internal global i32 0, align 4
@label_tick = internal global i32 0, align 4
@subst_prev_insn = internal global %struct.rtx_def* null, align 8
@n_basic_blocks = external global i32, align 4
@refresh_blocks = internal global %struct.simple_bitmap_def* null, align 8
@need_refresh = internal global i32 0, align 4
@subst_low_cuid = internal global i32 0, align 4
@subst_insn = internal global %struct.rtx_def* null, align 8
@rtx_class = external constant [153 x i8], align 16
@this_basic_block = internal global i32 0, align 4
@last_call_cuid = internal global i32 0, align 4
@mem_last_set = internal global i32 0, align 4
@basic_block_info = external global %struct.varray_head_tag*, align 8
@undobuf = internal global %struct.undobuf zeroinitializer, align 8
@total_attempts = internal global i32 0, align 4
@total_merges = internal global i32 0, align 4
@total_extras = internal global i32 0, align 4
@total_successes = internal global i32 0, align 4
@mode_bitsize = external constant [59 x i16], align 16
@reg_n_info = external global %struct.varray_head_tag*, align 8
@.str = private unnamed_addr constant [99 x i8] c";; Combiner statistics: %d attempts, %d substitutions (%d requiring new space),\0A;; %d successes.\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [95 x i8] c"\0A;; Combiner totals: %d attempts, %d substitutions (%d requiring new space),\0A;; %d successes.\0A\00", align 1
@mode_mask_array = external constant [59 x i64], align 16
@mode_size = external constant [59 x i8], align 16
@target_flags = external global i32, align 4
@mode_class = external constant [59 x i32], align 16
@const_int_rtx = external global [129 x %struct.rtx_def*], align 16
@newpat_used_regs = internal global i64 0, align 8
@added_links_insn = internal global %struct.rtx_def* null, align 8
@.str.2 = private unnamed_addr constant [10 x i8] c"combine.c\00", align 1
@__FUNCTION__.try_combine = private unnamed_addr constant [12 x i8] c"try_combine\00", align 1
@flag_expensive_optimizations = external global i32, align 4
@global_rtl = external global [11 x %struct.rtx_def*], align 16
@cfun = external global %struct.function*, align 8
@n_occurrences = internal global i32 0, align 4
@word_mode = external global i32, align 4
@fixed_regs = external global [53 x i8], align 16
@__FUNCTION__.insn_cuid = private unnamed_addr constant [10 x i8] c"insn_cuid\00", align 1
@__FUNCTION__.do_SUBST = private unnamed_addr constant [9 x i8] c"do_SUBST\00", align 1
@global_regs = external global [53 x i8], align 16
@rtx_length = external constant [153 x i8], align 16
@rtx_format = external constant [153 x i8*], align 16
@.str.3 = private unnamed_addr constant [3 x i8] c"ie\00", align 1
@x86_partial_reg_stall = external constant i32, align 4
@ix86_cpu = external global i32, align 4
@__FUNCTION__.subst = private unnamed_addr constant [6 x i8] c"subst\00", align 1
@const_true_rtx = external global %struct.rtx_def*, align 8
@flag_unsafe_math_optimizations = external global i32, align 4
@__FUNCTION__.combine_simplify_rtx = private unnamed_addr constant [21 x i8] c"combine_simplify_rtx\00", align 1
@class_narrowest_mode = external constant [9 x i32], align 16
@mode_wider_mode = external constant [59 x i8], align 16
@byte_mode = external global i32, align 4
@__FUNCTION__.simplify_logical = private unnamed_addr constant [17 x i8] c"simplify_logical\00", align 1
@reg_dead_regno = internal global i32 0, align 4
@reg_dead_endregno = internal global i32 0, align 4
@reg_dead_flag = internal global i32 0, align 4
@__FUNCTION__.distribute_notes = private unnamed_addr constant [17 x i8] c"distribute_notes\00", align 1
@flag_non_call_exceptions = external global i32, align 4
@reg_raw_mode = external global [53 x i32], align 16
@__FUNCTION__.nonzero_bits = private unnamed_addr constant [13 x i8] c"nonzero_bits\00", align 1
@regs_invalidated_by_call = external global i64, align 8

; Function Attrs: nounwind uwtable
define i32 @combine_instructions(%struct.rtx_def* %f, i32 %nregs) #0 {
entry:
  %f.addr = alloca %struct.rtx_def*, align 8
  %nregs.addr = alloca i32, align 4
  %insn = alloca %struct.rtx_def*, align 8
  %next = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %links = alloca %struct.rtx_def*, align 8
  %nextlinks = alloca %struct.rtx_def*, align 8
  %new_direct_jump_p = alloca i32, align 4
  %link = alloca %struct.rtx_def*, align 8
  %undo = alloca %struct.undo*, align 8
  %next208 = alloca %struct.undo*, align 8
  store %struct.rtx_def* %f, %struct.rtx_def** %f.addr, align 8
  store i32 %nregs, i32* %nregs.addr, align 4
  store i32 0, i32* %new_direct_jump_p, align 4
  store i32 0, i32* @combine_attempts, align 4
  store i32 0, i32* @combine_merges, align 4
  store i32 0, i32* @combine_extras, align 4
  store i32 0, i32* @combine_successes, align 4
  %0 = load i32, i32* %nregs.addr, align 4
  store i32 %0, i32* @combine_max_regno, align 4
  %1 = load i32, i32* %nregs.addr, align 4
  %conv = zext i32 %1 to i64
  %call = call noalias i8* @xcalloc(i64 %conv, i64 8)
  %2 = bitcast i8* %call to i64*
  store i64* %2, i64** @reg_nonzero_bits, align 8
  %3 = load i32, i32* %nregs.addr, align 4
  %conv1 = zext i32 %3 to i64
  %call2 = call noalias i8* @xcalloc(i64 %conv1, i64 1)
  store i8* %call2, i8** @reg_sign_bit_copies, align 8
  %4 = load i32, i32* %nregs.addr, align 4
  %conv3 = zext i32 %4 to i64
  %mul = mul i64 %conv3, 8
  %call4 = call noalias i8* @xmalloc(i64 %mul)
  %5 = bitcast i8* %call4 to %struct.rtx_def**
  store %struct.rtx_def** %5, %struct.rtx_def*** @reg_last_death, align 8
  %6 = load i32, i32* %nregs.addr, align 4
  %conv5 = zext i32 %6 to i64
  %mul6 = mul i64 %conv5, 8
  %call7 = call noalias i8* @xmalloc(i64 %mul6)
  %7 = bitcast i8* %call7 to %struct.rtx_def**
  store %struct.rtx_def** %7, %struct.rtx_def*** @reg_last_set, align 8
  %8 = load i32, i32* %nregs.addr, align 4
  %conv8 = zext i32 %8 to i64
  %mul9 = mul i64 %conv8, 8
  %call10 = call noalias i8* @xmalloc(i64 %mul9)
  %9 = bitcast i8* %call10 to %struct.rtx_def**
  store %struct.rtx_def** %9, %struct.rtx_def*** @reg_last_set_value, align 8
  %10 = load i32, i32* %nregs.addr, align 4
  %conv11 = zext i32 %10 to i64
  %mul12 = mul i64 %conv11, 4
  %call13 = call noalias i8* @xmalloc(i64 %mul12)
  %11 = bitcast i8* %call13 to i32*
  store i32* %11, i32** @reg_last_set_table_tick, align 8
  %12 = load i32, i32* %nregs.addr, align 4
  %conv14 = zext i32 %12 to i64
  %mul15 = mul i64 %conv14, 4
  %call16 = call noalias i8* @xmalloc(i64 %mul15)
  %13 = bitcast i8* %call16 to i32*
  store i32* %13, i32** @reg_last_set_label, align 8
  %14 = load i32, i32* %nregs.addr, align 4
  %conv17 = zext i32 %14 to i64
  %mul18 = mul i64 %conv17, 1
  %call19 = call noalias i8* @xmalloc(i64 %mul18)
  store i8* %call19, i8** @reg_last_set_invalid, align 8
  %15 = load i32, i32* %nregs.addr, align 4
  %conv20 = zext i32 %15 to i64
  %mul21 = mul i64 %conv20, 4
  %call22 = call noalias i8* @xmalloc(i64 %mul21)
  %16 = bitcast i8* %call22 to i32*
  store i32* %16, i32** @reg_last_set_mode, align 8
  %17 = load i32, i32* %nregs.addr, align 4
  %conv23 = zext i32 %17 to i64
  %mul24 = mul i64 %conv23, 8
  %call25 = call noalias i8* @xmalloc(i64 %mul24)
  %18 = bitcast i8* %call25 to i64*
  store i64* %18, i64** @reg_last_set_nonzero_bits, align 8
  %19 = load i32, i32* %nregs.addr, align 4
  %conv26 = zext i32 %19 to i64
  %mul27 = mul i64 %conv26, 1
  %call28 = call noalias i8* @xmalloc(i64 %mul27)
  store i8* %call28, i8** @reg_last_set_sign_bit_copies, align 8
  call void @init_reg_last_arrays()
  call void @init_recog_no_volatile()
  %20 = load %struct.rtx_def*, %struct.rtx_def** %f.addr, align 8
  store %struct.rtx_def* %20, %struct.rtx_def** %insn, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %tobool = icmp ne %struct.rtx_def* %21, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %23 = load i32, i32* %rtint, align 4
  %24 = load i32, i32* %i, align 4
  %cmp = icmp sgt i32 %23, %24
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i32 0, i64 0
  %rtint32 = bitcast %union.rtunion_def* %arrayidx31 to i32*
  %26 = load i32, i32* %rtint32, align 4
  store i32 %26, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx34 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld33, i32 0, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %28, %struct.rtx_def** %insn, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %29 = load i32, i32* %i, align 4
  %add = add nsw i32 %29, 1
  %conv35 = sext i32 %add to i64
  %mul36 = mul i64 %conv35, 4
  %call37 = call noalias i8* @xmalloc(i64 %mul36)
  %30 = bitcast i8* %call37 to i32*
  store i32* %30, i32** @uid_cuid, align 8
  %31 = load i32, i32* %i, align 4
  store i32 %31, i32* @max_uid_cuid, align 4
  %call38 = call i32 @mode_for_size(i32 64, i32 1, i32 0)
  store i32 %call38, i32* @nonzero_bits_mode, align 4
  store i32 0, i32* @nonzero_sign_valid, align 4
  store i32 1, i32* @label_tick, align 4
  store %struct.rtx_def* null, %struct.rtx_def** @subst_prev_insn, align 8
  call void @setup_incoming_promotions()
  %32 = load i32, i32* @n_basic_blocks, align 4
  %call39 = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %32)
  store %struct.simple_bitmap_def* %call39, %struct.simple_bitmap_def** @refresh_blocks, align 8
  %33 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @refresh_blocks, align 8
  call void @sbitmap_zero(%struct.simple_bitmap_def* %33)
  store i32 0, i32* @need_refresh, align 4
  %34 = load %struct.rtx_def*, %struct.rtx_def** %f.addr, align 8
  store %struct.rtx_def* %34, %struct.rtx_def** %insn, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.40

for.cond.40:                                      ; preds = %for.inc.64, %for.end
  %35 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %tobool41 = icmp ne %struct.rtx_def* %35, null
  br i1 %tobool41, label %for.body.42, label %for.end.68

for.body.42:                                      ; preds = %for.cond.40
  %36 = load i32, i32* %i, align 4
  %inc = add nsw i32 %36, 1
  store i32 %inc, i32* %i, align 4
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i32 0, i64 0
  %rtint45 = bitcast %union.rtunion_def* %arrayidx44 to i32*
  %38 = load i32, i32* %rtint45, align 4
  %idxprom = sext i32 %38 to i64
  %39 = load i32*, i32** @uid_cuid, align 8
  %arrayidx46 = getelementptr inbounds i32, i32* %39, i64 %idxprom
  store i32 %inc, i32* %arrayidx46, align 4
  %40 = load i32, i32* %i, align 4
  store i32 %40, i32* @subst_low_cuid, align 4
  %41 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  store %struct.rtx_def* %41, %struct.rtx_def** @subst_insn, align 8
  %42 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %43 = bitcast %struct.rtx_def* %42 to i32*
  %bf.load = load i32, i32* %43, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom47 = sext i32 %bf.clear to i64
  %arrayidx48 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom47
  %44 = load i8, i8* %arrayidx48, align 1
  %conv49 = sext i8 %44 to i32
  %cmp50 = icmp eq i32 %conv49, 105
  br i1 %cmp50, label %if.then.52, label %if.end.56

if.then.52:                                       ; preds = %for.body.42
  %45 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i32 0, i64 3
  %rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rtx55, align 8
  call void @note_stores(%struct.rtx_def* %46, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @set_nonzero_bits_and_sign_copies, i8* null)
  %47 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  call void @record_dead_and_set_regs(%struct.rtx_def* %47)
  br label %if.end.56

if.end.56:                                        ; preds = %if.then.52, %for.body.42
  %48 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %49 = bitcast %struct.rtx_def* %48 to i32*
  %bf.load57 = load i32, i32* %49, align 8
  %bf.clear58 = and i32 %bf.load57, 65535
  %cmp59 = icmp eq i32 %bf.clear58, 36
  br i1 %cmp59, label %if.then.61, label %if.end.63

if.then.61:                                       ; preds = %if.end.56
  %50 = load i32, i32* @label_tick, align 4
  %inc62 = add nsw i32 %50, 1
  store i32 %inc62, i32* @label_tick, align 4
  br label %if.end.63

if.end.63:                                        ; preds = %if.then.61, %if.end.56
  br label %for.inc.64

for.inc.64:                                       ; preds = %if.end.63
  %51 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %arrayidx66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i32 0, i64 2
  %rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rtx67, align 8
  store %struct.rtx_def* %52, %struct.rtx_def** %insn, align 8
  br label %for.cond.40

for.end.68:                                       ; preds = %for.cond.40
  store i32 1, i32* @nonzero_sign_valid, align 4
  store i32 -1, i32* @this_basic_block, align 4
  store i32 1, i32* @label_tick, align 4
  store i32 0, i32* @last_call_cuid, align 4
  store i32 0, i32* @mem_last_set, align 4
  call void @init_reg_last_arrays()
  call void @setup_incoming_promotions()
  %53 = load %struct.rtx_def*, %struct.rtx_def** %f.addr, align 8
  store %struct.rtx_def* %53, %struct.rtx_def** %insn, align 8
  br label %for.cond.69

for.cond.69:                                      ; preds = %cond.end, %for.end.68
  %54 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %tobool70 = icmp ne %struct.rtx_def* %54, null
  br i1 %tobool70, label %for.body.71, label %for.end.204

for.body.71:                                      ; preds = %for.cond.69
  store %struct.rtx_def* null, %struct.rtx_def** %next, align 8
  %55 = load i32, i32* @this_basic_block, align 4
  %add72 = add nsw i32 %55, 1
  %56 = load i32, i32* @n_basic_blocks, align 4
  %cmp73 = icmp slt i32 %add72, %56
  br i1 %cmp73, label %land.lhs.true, label %if.end.82

land.lhs.true:                                    ; preds = %for.body.71
  %57 = load i32, i32* @this_basic_block, align 4
  %add75 = add nsw i32 %57, 1
  %idxprom76 = sext i32 %add75 to i64
  %58 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %58, i32 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx77 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %bb, i32 0, i64 %idxprom76
  %59 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx77, align 8
  %head = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %59, i32 0, i32 0
  %60 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8
  %61 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %cmp78 = icmp eq %struct.rtx_def* %60, %61
  br i1 %cmp78, label %if.then.80, label %if.end.82

if.then.80:                                       ; preds = %land.lhs.true
  %62 = load i32, i32* @this_basic_block, align 4
  %inc81 = add nsw i32 %62, 1
  store i32 %inc81, i32* @this_basic_block, align 4
  br label %if.end.82

if.end.82:                                        ; preds = %if.then.80, %land.lhs.true, %for.body.71
  %63 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %64 = bitcast %struct.rtx_def* %63 to i32*
  %bf.load83 = load i32, i32* %64, align 8
  %bf.clear84 = and i32 %bf.load83, 65535
  %cmp85 = icmp eq i32 %bf.clear84, 36
  br i1 %cmp85, label %if.then.87, label %if.else

if.then.87:                                       ; preds = %if.end.82
  %65 = load i32, i32* @label_tick, align 4
  %inc88 = add nsw i32 %65, 1
  store i32 %inc88, i32* @label_tick, align 4
  br label %if.end.198

if.else:                                          ; preds = %if.end.82
  %66 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %67 = bitcast %struct.rtx_def* %66 to i32*
  %bf.load89 = load i32, i32* %67, align 8
  %bf.clear90 = and i32 %bf.load89, 65535
  %idxprom91 = sext i32 %bf.clear90 to i64
  %arrayidx92 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom91
  %68 = load i8, i8* %arrayidx92, align 1
  %conv93 = sext i8 %68 to i32
  %cmp94 = icmp eq i32 %conv93, 105
  br i1 %cmp94, label %if.then.96, label %if.end.197

if.then.96:                                       ; preds = %if.else
  %69 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %70 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld97, i32 0, i64 3
  %rtx99 = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtx_def**
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rtx99, align 8
  call void @check_promoted_subreg(%struct.rtx_def* %69, %struct.rtx_def* %71)
  %72 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1
  %arrayidx101 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld100, i32 0, i64 5
  %rtx102 = bitcast %union.rtunion_def* %arrayidx101 to %struct.rtx_def**
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rtx102, align 8
  store %struct.rtx_def* %73, %struct.rtx_def** %links, align 8
  br label %for.cond.103

for.cond.103:                                     ; preds = %for.inc.114, %if.then.96
  %74 = load %struct.rtx_def*, %struct.rtx_def** %links, align 8
  %tobool104 = icmp ne %struct.rtx_def* %74, null
  br i1 %tobool104, label %for.body.105, label %for.end.118

for.body.105:                                     ; preds = %for.cond.103
  %75 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %76 = load %struct.rtx_def*, %struct.rtx_def** %links, align 8
  %fld106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %arrayidx107 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld106, i32 0, i64 0
  %rtx108 = bitcast %union.rtunion_def* %arrayidx107 to %struct.rtx_def**
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rtx108, align 8
  %call109 = call %struct.rtx_def* @try_combine(%struct.rtx_def* %75, %struct.rtx_def* %77, %struct.rtx_def* null, i32* %new_direct_jump_p)
  store %struct.rtx_def* %call109, %struct.rtx_def** %next, align 8
  %cmp110 = icmp ne %struct.rtx_def* %call109, null
  br i1 %cmp110, label %if.then.112, label %if.end.113

if.then.112:                                      ; preds = %for.body.105
  br label %retry

if.end.113:                                       ; preds = %for.body.105
  br label %for.inc.114

for.inc.114:                                      ; preds = %if.end.113
  %78 = load %struct.rtx_def*, %struct.rtx_def** %links, align 8
  %fld115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx116 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld115, i32 0, i64 1
  %rtx117 = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtx_def**
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rtx117, align 8
  store %struct.rtx_def* %79, %struct.rtx_def** %links, align 8
  br label %for.cond.103

for.end.118:                                      ; preds = %for.cond.103
  %80 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1
  %arrayidx120 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld119, i32 0, i64 5
  %rtx121 = bitcast %union.rtunion_def* %arrayidx120 to %struct.rtx_def**
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rtx121, align 8
  store %struct.rtx_def* %81, %struct.rtx_def** %links, align 8
  br label %for.cond.122

for.cond.122:                                     ; preds = %for.inc.153, %for.end.118
  %82 = load %struct.rtx_def*, %struct.rtx_def** %links, align 8
  %tobool123 = icmp ne %struct.rtx_def* %82, null
  br i1 %tobool123, label %for.body.124, label %for.end.157

for.body.124:                                     ; preds = %for.cond.122
  %83 = load %struct.rtx_def*, %struct.rtx_def** %links, align 8
  %fld125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i32 0, i64 0
  %rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rtx127, align 8
  store %struct.rtx_def* %84, %struct.rtx_def** %link, align 8
  %85 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %86 = bitcast %struct.rtx_def* %85 to i32*
  %bf.load128 = load i32, i32* %86, align 8
  %bf.clear129 = and i32 %bf.load128, 65535
  %cmp130 = icmp eq i32 %bf.clear129, 37
  br i1 %cmp130, label %if.then.132, label %if.end.133

if.then.132:                                      ; preds = %for.body.124
  br label %for.inc.153

if.end.133:                                       ; preds = %for.body.124
  %87 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1
  %arrayidx135 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld134, i32 0, i64 5
  %rtx136 = bitcast %union.rtunion_def* %arrayidx135 to %struct.rtx_def**
  %88 = load %struct.rtx_def*, %struct.rtx_def** %rtx136, align 8
  store %struct.rtx_def* %88, %struct.rtx_def** %nextlinks, align 8
  br label %for.cond.137

for.cond.137:                                     ; preds = %for.inc.148, %if.end.133
  %89 = load %struct.rtx_def*, %struct.rtx_def** %nextlinks, align 8
  %tobool138 = icmp ne %struct.rtx_def* %89, null
  br i1 %tobool138, label %for.body.139, label %for.end.152

for.body.139:                                     ; preds = %for.cond.137
  %90 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %91 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %92 = load %struct.rtx_def*, %struct.rtx_def** %nextlinks, align 8
  %fld140 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1
  %arrayidx141 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld140, i32 0, i64 0
  %rtx142 = bitcast %union.rtunion_def* %arrayidx141 to %struct.rtx_def**
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rtx142, align 8
  %call143 = call %struct.rtx_def* @try_combine(%struct.rtx_def* %90, %struct.rtx_def* %91, %struct.rtx_def* %93, i32* %new_direct_jump_p)
  store %struct.rtx_def* %call143, %struct.rtx_def** %next, align 8
  %cmp144 = icmp ne %struct.rtx_def* %call143, null
  br i1 %cmp144, label %if.then.146, label %if.end.147

if.then.146:                                      ; preds = %for.body.139
  br label %retry

if.end.147:                                       ; preds = %for.body.139
  br label %for.inc.148

for.inc.148:                                      ; preds = %if.end.147
  %94 = load %struct.rtx_def*, %struct.rtx_def** %nextlinks, align 8
  %fld149 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1
  %arrayidx150 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld149, i32 0, i64 1
  %rtx151 = bitcast %union.rtunion_def* %arrayidx150 to %struct.rtx_def**
  %95 = load %struct.rtx_def*, %struct.rtx_def** %rtx151, align 8
  store %struct.rtx_def* %95, %struct.rtx_def** %nextlinks, align 8
  br label %for.cond.137

for.end.152:                                      ; preds = %for.cond.137
  br label %for.inc.153

for.inc.153:                                      ; preds = %for.end.152, %if.then.132
  %96 = load %struct.rtx_def*, %struct.rtx_def** %links, align 8
  %fld154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1
  %arrayidx155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld154, i32 0, i64 1
  %rtx156 = bitcast %union.rtunion_def* %arrayidx155 to %struct.rtx_def**
  %97 = load %struct.rtx_def*, %struct.rtx_def** %rtx156, align 8
  store %struct.rtx_def* %97, %struct.rtx_def** %links, align 8
  br label %for.cond.122

for.end.157:                                      ; preds = %for.cond.122
  %98 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld158 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %98, i32 0, i32 1
  %arrayidx159 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld158, i32 0, i64 5
  %rtx160 = bitcast %union.rtunion_def* %arrayidx159 to %struct.rtx_def**
  %99 = load %struct.rtx_def*, %struct.rtx_def** %rtx160, align 8
  store %struct.rtx_def* %99, %struct.rtx_def** %links, align 8
  br label %for.cond.161

for.cond.161:                                     ; preds = %for.inc.186, %for.end.157
  %100 = load %struct.rtx_def*, %struct.rtx_def** %links, align 8
  %tobool162 = icmp ne %struct.rtx_def* %100, null
  br i1 %tobool162, label %for.body.163, label %for.end.190

for.body.163:                                     ; preds = %for.cond.161
  %101 = load %struct.rtx_def*, %struct.rtx_def** %links, align 8
  %fld164 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i32 0, i32 1
  %arrayidx165 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld164, i32 0, i64 1
  %rtx166 = bitcast %union.rtunion_def* %arrayidx165 to %struct.rtx_def**
  %102 = load %struct.rtx_def*, %struct.rtx_def** %rtx166, align 8
  store %struct.rtx_def* %102, %struct.rtx_def** %nextlinks, align 8
  br label %for.cond.167

for.cond.167:                                     ; preds = %for.inc.181, %for.body.163
  %103 = load %struct.rtx_def*, %struct.rtx_def** %nextlinks, align 8
  %tobool168 = icmp ne %struct.rtx_def* %103, null
  br i1 %tobool168, label %for.body.169, label %for.end.185

for.body.169:                                     ; preds = %for.cond.167
  %104 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %105 = load %struct.rtx_def*, %struct.rtx_def** %links, align 8
  %fld170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1
  %arrayidx171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld170, i32 0, i64 0
  %rtx172 = bitcast %union.rtunion_def* %arrayidx171 to %struct.rtx_def**
  %106 = load %struct.rtx_def*, %struct.rtx_def** %rtx172, align 8
  %107 = load %struct.rtx_def*, %struct.rtx_def** %nextlinks, align 8
  %fld173 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1
  %arrayidx174 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld173, i32 0, i64 0
  %rtx175 = bitcast %union.rtunion_def* %arrayidx174 to %struct.rtx_def**
  %108 = load %struct.rtx_def*, %struct.rtx_def** %rtx175, align 8
  %call176 = call %struct.rtx_def* @try_combine(%struct.rtx_def* %104, %struct.rtx_def* %106, %struct.rtx_def* %108, i32* %new_direct_jump_p)
  store %struct.rtx_def* %call176, %struct.rtx_def** %next, align 8
  %cmp177 = icmp ne %struct.rtx_def* %call176, null
  br i1 %cmp177, label %if.then.179, label %if.end.180

if.then.179:                                      ; preds = %for.body.169
  br label %retry

if.end.180:                                       ; preds = %for.body.169
  br label %for.inc.181

for.inc.181:                                      ; preds = %if.end.180
  %109 = load %struct.rtx_def*, %struct.rtx_def** %nextlinks, align 8
  %fld182 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1
  %arrayidx183 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld182, i32 0, i64 1
  %rtx184 = bitcast %union.rtunion_def* %arrayidx183 to %struct.rtx_def**
  %110 = load %struct.rtx_def*, %struct.rtx_def** %rtx184, align 8
  store %struct.rtx_def* %110, %struct.rtx_def** %nextlinks, align 8
  br label %for.cond.167

for.end.185:                                      ; preds = %for.cond.167
  br label %for.inc.186

for.inc.186:                                      ; preds = %for.end.185
  %111 = load %struct.rtx_def*, %struct.rtx_def** %links, align 8
  %fld187 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i32 0, i32 1
  %arrayidx188 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld187, i32 0, i64 1
  %rtx189 = bitcast %union.rtunion_def* %arrayidx188 to %struct.rtx_def**
  %112 = load %struct.rtx_def*, %struct.rtx_def** %rtx189, align 8
  store %struct.rtx_def* %112, %struct.rtx_def** %links, align 8
  br label %for.cond.161

for.end.190:                                      ; preds = %for.cond.161
  %113 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %114 = bitcast %struct.rtx_def* %113 to i32*
  %bf.load191 = load i32, i32* %114, align 8
  %bf.clear192 = and i32 %bf.load191, 65535
  %cmp193 = icmp ne i32 %bf.clear192, 37
  br i1 %cmp193, label %if.then.195, label %if.end.196

if.then.195:                                      ; preds = %for.end.190
  %115 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  call void @record_dead_and_set_regs(%struct.rtx_def* %115)
  br label %if.end.196

if.end.196:                                       ; preds = %if.then.195, %for.end.190
  br label %retry

retry:                                            ; preds = %if.end.196, %if.then.179, %if.then.146, %if.then.112
  br label %if.end.197

if.end.197:                                       ; preds = %retry, %if.else
  br label %if.end.198

if.end.198:                                       ; preds = %if.end.197, %if.then.87
  br label %for.inc.199

for.inc.199:                                      ; preds = %if.end.198
  %116 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %tobool200 = icmp ne %struct.rtx_def* %116, null
  br i1 %tobool200, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.inc.199
  %117 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  br label %cond.end

cond.false:                                       ; preds = %for.inc.199
  %118 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld201 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1
  %arrayidx202 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld201, i32 0, i64 2
  %rtx203 = bitcast %union.rtunion_def* %arrayidx202 to %struct.rtx_def**
  %119 = load %struct.rtx_def*, %struct.rtx_def** %rtx203, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %117, %cond.true ], [ %119, %cond.false ]
  store %struct.rtx_def* %cond, %struct.rtx_def** %insn, align 8
  br label %for.cond.69

for.end.204:                                      ; preds = %for.cond.69
  %120 = load %struct.rtx_def*, %struct.rtx_def** %f.addr, align 8
  call void @delete_noop_moves(%struct.rtx_def* %120)
  %121 = load i32, i32* @need_refresh, align 4
  %tobool205 = icmp ne i32 %121, 0
  br i1 %tobool205, label %if.then.206, label %if.end.207

if.then.206:                                      ; preds = %for.end.204
  %122 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @refresh_blocks, align 8
  call void @update_life_info(%struct.simple_bitmap_def* %122, i32 2, i32 1)
  br label %if.end.207

if.end.207:                                       ; preds = %if.then.206, %for.end.204
  %123 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @refresh_blocks, align 8
  %124 = bitcast %struct.simple_bitmap_def* %123 to i8*
  call void @free(i8* %124) #3
  %125 = load i64*, i64** @reg_nonzero_bits, align 8
  %126 = bitcast i64* %125 to i8*
  call void @free(i8* %126) #3
  %127 = load i8*, i8** @reg_sign_bit_copies, align 8
  call void @free(i8* %127) #3
  %128 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_death, align 8
  %129 = bitcast %struct.rtx_def** %128 to i8*
  call void @free(i8* %129) #3
  %130 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set, align 8
  %131 = bitcast %struct.rtx_def** %130 to i8*
  call void @free(i8* %131) #3
  %132 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set_value, align 8
  %133 = bitcast %struct.rtx_def** %132 to i8*
  call void @free(i8* %133) #3
  %134 = load i32*, i32** @reg_last_set_table_tick, align 8
  %135 = bitcast i32* %134 to i8*
  call void @free(i8* %135) #3
  %136 = load i32*, i32** @reg_last_set_label, align 8
  %137 = bitcast i32* %136 to i8*
  call void @free(i8* %137) #3
  %138 = load i8*, i8** @reg_last_set_invalid, align 8
  call void @free(i8* %138) #3
  %139 = load i32*, i32** @reg_last_set_mode, align 8
  %140 = bitcast i32* %139 to i8*
  call void @free(i8* %140) #3
  %141 = load i64*, i64** @reg_last_set_nonzero_bits, align 8
  %142 = bitcast i64* %141 to i8*
  call void @free(i8* %142) #3
  %143 = load i8*, i8** @reg_last_set_sign_bit_copies, align 8
  call void @free(i8* %143) #3
  %144 = load i32*, i32** @uid_cuid, align 8
  %145 = bitcast i32* %144 to i8*
  call void @free(i8* %145) #3
  %146 = load %struct.undo*, %struct.undo** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 1), align 8
  store %struct.undo* %146, %struct.undo** %undo, align 8
  br label %for.cond.209

for.cond.209:                                     ; preds = %for.inc.213, %if.end.207
  %147 = load %struct.undo*, %struct.undo** %undo, align 8
  %tobool210 = icmp ne %struct.undo* %147, null
  br i1 %tobool210, label %for.body.211, label %for.end.214

for.body.211:                                     ; preds = %for.cond.209
  %148 = load %struct.undo*, %struct.undo** %undo, align 8
  %next212 = getelementptr inbounds %struct.undo, %struct.undo* %148, i32 0, i32 0
  %149 = load %struct.undo*, %struct.undo** %next212, align 8
  store %struct.undo* %149, %struct.undo** %next208, align 8
  %150 = load %struct.undo*, %struct.undo** %undo, align 8
  %151 = bitcast %struct.undo* %150 to i8*
  call void @free(i8* %151) #3
  br label %for.inc.213

for.inc.213:                                      ; preds = %for.body.211
  %152 = load %struct.undo*, %struct.undo** %next208, align 8
  store %struct.undo* %152, %struct.undo** %undo, align 8
  br label %for.cond.209

for.end.214:                                      ; preds = %for.cond.209
  store %struct.undo* null, %struct.undo** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 1), align 8
  %153 = load i32, i32* @combine_attempts, align 4
  %154 = load i32, i32* @total_attempts, align 4
  %add215 = add nsw i32 %154, %153
  store i32 %add215, i32* @total_attempts, align 4
  %155 = load i32, i32* @combine_merges, align 4
  %156 = load i32, i32* @total_merges, align 4
  %add216 = add nsw i32 %156, %155
  store i32 %add216, i32* @total_merges, align 4
  %157 = load i32, i32* @combine_extras, align 4
  %158 = load i32, i32* @total_extras, align 4
  %add217 = add nsw i32 %158, %157
  store i32 %add217, i32* @total_extras, align 4
  %159 = load i32, i32* @combine_successes, align 4
  %160 = load i32, i32* @total_successes, align 4
  %add218 = add nsw i32 %160, %159
  store i32 %add218, i32* @total_successes, align 4
  store i32 0, i32* @nonzero_sign_valid, align 4
  call void @init_recog()
  %161 = load i32, i32* %new_direct_jump_p, align 4
  ret i32 %161
}

declare noalias i8* @xcalloc(i64, i64) #1

declare noalias i8* @xmalloc(i64) #1

; Function Attrs: nounwind uwtable
define internal void @init_reg_last_arrays() #0 {
entry:
  %nregs = alloca i32, align 4
  %0 = load i32, i32* @combine_max_regno, align 4
  store i32 %0, i32* %nregs, align 4
  %1 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_death, align 8
  %2 = bitcast %struct.rtx_def** %1 to i8*
  %3 = load i32, i32* %nregs, align 4
  %conv = zext i32 %3 to i64
  %mul = mul i64 %conv, 8
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 %mul, i32 1, i1 false)
  %4 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set, align 8
  %5 = bitcast %struct.rtx_def** %4 to i8*
  %6 = load i32, i32* %nregs, align 4
  %conv1 = zext i32 %6 to i64
  %mul2 = mul i64 %conv1, 8
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 %mul2, i32 1, i1 false)
  %7 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set_value, align 8
  %8 = bitcast %struct.rtx_def** %7 to i8*
  %9 = load i32, i32* %nregs, align 4
  %conv3 = zext i32 %9 to i64
  %mul4 = mul i64 %conv3, 8
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 %mul4, i32 1, i1 false)
  %10 = load i32*, i32** @reg_last_set_table_tick, align 8
  %11 = bitcast i32* %10 to i8*
  %12 = load i32, i32* %nregs, align 4
  %conv5 = zext i32 %12 to i64
  %mul6 = mul i64 %conv5, 4
  call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 %mul6, i32 1, i1 false)
  %13 = load i32*, i32** @reg_last_set_label, align 8
  %14 = bitcast i32* %13 to i8*
  %15 = load i32, i32* %nregs, align 4
  %conv7 = zext i32 %15 to i64
  %mul8 = mul i64 %conv7, 4
  call void @llvm.memset.p0i8.i64(i8* %14, i8 0, i64 %mul8, i32 1, i1 false)
  %16 = load i8*, i8** @reg_last_set_invalid, align 8
  %17 = load i32, i32* %nregs, align 4
  %conv9 = zext i32 %17 to i64
  %mul10 = mul i64 %conv9, 1
  call void @llvm.memset.p0i8.i64(i8* %16, i8 0, i64 %mul10, i32 1, i1 false)
  %18 = load i32*, i32** @reg_last_set_mode, align 8
  %19 = bitcast i32* %18 to i8*
  %20 = load i32, i32* %nregs, align 4
  %conv11 = zext i32 %20 to i64
  %mul12 = mul i64 %conv11, 4
  call void @llvm.memset.p0i8.i64(i8* %19, i8 0, i64 %mul12, i32 1, i1 false)
  %21 = load i64*, i64** @reg_last_set_nonzero_bits, align 8
  %22 = bitcast i64* %21 to i8*
  %23 = load i32, i32* %nregs, align 4
  %conv13 = zext i32 %23 to i64
  %mul14 = mul i64 %conv13, 8
  call void @llvm.memset.p0i8.i64(i8* %22, i8 0, i64 %mul14, i32 1, i1 false)
  %24 = load i8*, i8** @reg_last_set_sign_bit_copies, align 8
  %25 = load i32, i32* %nregs, align 4
  %conv15 = zext i32 %25 to i64
  %mul16 = mul i64 %conv15, 1
  call void @llvm.memset.p0i8.i64(i8* %24, i8 0, i64 %mul16, i32 1, i1 false)
  ret void
}

declare void @init_recog_no_volatile() #1

declare i32 @mode_for_size(i32, i32, i32) #1

; Function Attrs: nounwind uwtable
define internal void @setup_incoming_promotions() #0 {
entry:
  ret void
}

declare %struct.simple_bitmap_def* @sbitmap_alloc(i32) #1

declare void @sbitmap_zero(%struct.simple_bitmap_def*) #1

declare void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) #1

; Function Attrs: nounwind uwtable
define internal void @set_nonzero_bits_and_sign_copies(%struct.rtx_def* %x, %struct.rtx_def* %set, i8* %data) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %set.addr = alloca %struct.rtx_def*, align 8
  %data.addr = alloca i8*, align 8
  %num = alloca i32, align 4
  %src = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %set, %struct.rtx_def** %set.addr, align 8
  store i8* %data, i8** %data.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %land.lhs.true, label %if.end.149

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %3 = load i32, i32* %rtuint, align 4
  %cmp1 = icmp uge i32 %3, 53
  br i1 %cmp1, label %land.lhs.true.2, label %if.end.149

land.lhs.true.2:                                  ; preds = %land.lhs.true
  %4 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %data3 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %4, i32 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data3 to [1 x %struct.basic_block_def*]*
  %arrayidx4 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %bb, i32 0, i64 0
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx4, align 8
  %global_live_at_start = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i32 0, i32 8
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %global_live_at_start, align 8
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i32 0, i64 0
  %rtuint7 = bitcast %union.rtunion_def* %arrayidx6 to i32*
  %8 = load i32, i32* %rtuint7, align 4
  %call = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %6, i32 %8)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end.149, label %land.lhs.true.8

land.lhs.true.8:                                  ; preds = %land.lhs.true.2
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load9 = load i32, i32* %10, align 8
  %bf.lshr = lshr i32 %bf.load9, 16
  %bf.clear10 = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear10 to i64
  %arrayidx11 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom
  %11 = load i16, i16* %arrayidx11, align 2
  %conv = zext i16 %11 to i32
  %cmp12 = icmp sle i32 %conv, 64
  br i1 %cmp12, label %if.then, label %if.end.149

if.then:                                          ; preds = %land.lhs.true.8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %cmp14 = icmp eq %struct.rtx_def* %12, null
  br i1 %cmp14, label %if.then.20, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %13 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load16 = load i32, i32* %14, align 8
  %bf.clear17 = and i32 %bf.load16, 65535
  %cmp18 = icmp eq i32 %bf.clear17, 49
  br i1 %cmp18, label %if.then.20, label %if.end

if.then.20:                                       ; preds = %lor.lhs.false, %if.then
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %16 = bitcast %struct.rtx_def* %15 to i32*
  %bf.load21 = load i32, i32* %16, align 8
  %bf.lshr22 = lshr i32 %bf.load21, 16
  %bf.clear23 = and i32 %bf.lshr22, 255
  %idxprom24 = sext i32 %bf.clear23 to i64
  %arrayidx25 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom24
  %17 = load i64, i64* %arrayidx25, align 8
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i32 0, i64 0
  %rtuint28 = bitcast %union.rtunion_def* %arrayidx27 to i32*
  %19 = load i32, i32* %rtuint28, align 4
  %idxprom29 = zext i32 %19 to i64
  %20 = load i64*, i64** @reg_nonzero_bits, align 8
  %arrayidx30 = getelementptr inbounds i64, i64* %20, i64 %idxprom29
  store i64 %17, i64* %arrayidx30, align 8
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i32 0, i64 0
  %rtuint33 = bitcast %union.rtunion_def* %arrayidx32 to i32*
  %22 = load i32, i32* %rtuint33, align 4
  %idxprom34 = zext i32 %22 to i64
  %23 = load i8*, i8** @reg_sign_bit_copies, align 8
  %arrayidx35 = getelementptr inbounds i8, i8* %23, i64 %idxprom34
  store i8 1, i8* %arrayidx35, align 1
  br label %if.end.149

if.end:                                           ; preds = %lor.lhs.false
  %24 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %call36 = call %struct.rtx_def* @expand_field_assignment(%struct.rtx_def* %24)
  store %struct.rtx_def* %call36, %struct.rtx_def** %set.addr, align 8
  %25 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %cmp39 = icmp eq %struct.rtx_def* %26, %27
  br i1 %cmp39, label %if.then.82, label %lor.lhs.false.41

lor.lhs.false.41:                                 ; preds = %if.end
  %28 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i32 0, i64 0
  %rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rtx44, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load45 = load i32, i32* %30, align 8
  %bf.clear46 = and i32 %bf.load45, 65535
  %cmp47 = icmp eq i32 %bf.clear46, 63
  br i1 %cmp47, label %land.lhs.true.49, label %if.else

land.lhs.true.49:                                 ; preds = %lor.lhs.false.41
  %31 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i32 0, i64 0
  %rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rtx52, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load53 = load i32, i32* %33, align 8
  %bf.lshr54 = lshr i32 %bf.load53, 16
  %bf.clear55 = and i32 %bf.lshr54, 255
  %idxprom56 = sext i32 %bf.clear55 to i64
  %arrayidx57 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom56
  %34 = load i8, i8* %arrayidx57, align 1
  %conv58 = zext i8 %34 to i32
  %35 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i32 0, i64 0
  %rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rtx61, align 8
  %fld62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1
  %arrayidx63 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld62, i32 0, i64 0
  %rtx64 = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtx_def**
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rtx64, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load65 = load i32, i32* %38, align 8
  %bf.lshr66 = lshr i32 %bf.load65, 16
  %bf.clear67 = and i32 %bf.lshr66, 255
  %idxprom68 = sext i32 %bf.clear67 to i64
  %arrayidx69 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom68
  %39 = load i8, i8* %arrayidx69, align 1
  %conv70 = zext i8 %39 to i32
  %cmp71 = icmp sgt i32 %conv58, %conv70
  br i1 %cmp71, label %land.lhs.true.73, label %if.else

land.lhs.true.73:                                 ; preds = %land.lhs.true.49
  %40 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1
  %arrayidx75 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld74, i32 0, i64 0
  %rtx76 = bitcast %union.rtunion_def* %arrayidx75 to %struct.rtx_def**
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rtx76, align 8
  %fld77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i32 0, i64 0
  %rtx79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtx_def**
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rtx79, align 8
  %43 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %cmp80 = icmp eq %struct.rtx_def* %42, %43
  br i1 %cmp80, label %if.then.82, label %if.else

if.then.82:                                       ; preds = %land.lhs.true.73, %if.end
  %44 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i32 0, i64 1
  %rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rtx85, align 8
  store %struct.rtx_def* %45, %struct.rtx_def** %src, align 8
  %46 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld86 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx87 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld86, i32 0, i64 0
  %rtuint88 = bitcast %union.rtunion_def* %arrayidx87 to i32*
  %47 = load i32, i32* %rtuint88, align 4
  %idxprom89 = zext i32 %47 to i64
  %48 = load i64*, i64** @reg_nonzero_bits, align 8
  %arrayidx90 = getelementptr inbounds i64, i64* %48, i64 %idxprom89
  %49 = load i64, i64* %arrayidx90, align 8
  %cmp91 = icmp ne i64 %49, -1
  br i1 %cmp91, label %if.then.93, label %if.end.100

if.then.93:                                       ; preds = %if.then.82
  %50 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %51 = load i32, i32* @nonzero_bits_mode, align 4
  %call94 = call i64 @nonzero_bits(%struct.rtx_def* %50, i32 %51)
  %52 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1
  %arrayidx96 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld95, i32 0, i64 0
  %rtuint97 = bitcast %union.rtunion_def* %arrayidx96 to i32*
  %53 = load i32, i32* %rtuint97, align 4
  %idxprom98 = zext i32 %53 to i64
  %54 = load i64*, i64** @reg_nonzero_bits, align 8
  %arrayidx99 = getelementptr inbounds i64, i64* %54, i64 %idxprom98
  %55 = load i64, i64* %arrayidx99, align 8
  %or = or i64 %55, %call94
  store i64 %or, i64* %arrayidx99, align 8
  br label %if.end.100

if.end.100:                                       ; preds = %if.then.93, %if.then.82
  %56 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1
  %arrayidx102 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld101, i32 0, i64 1
  %rtx103 = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtx_def**
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rtx103, align 8
  %58 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %59 = bitcast %struct.rtx_def* %58 to i32*
  %bf.load104 = load i32, i32* %59, align 8
  %bf.lshr105 = lshr i32 %bf.load104, 16
  %bf.clear106 = and i32 %bf.lshr105, 255
  %call107 = call i32 @num_sign_bit_copies(%struct.rtx_def* %57, i32 %bf.clear106)
  store i32 %call107, i32* %num, align 4
  %60 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld108, i32 0, i64 0
  %rtuint110 = bitcast %union.rtunion_def* %arrayidx109 to i32*
  %61 = load i32, i32* %rtuint110, align 4
  %idxprom111 = zext i32 %61 to i64
  %62 = load i8*, i8** @reg_sign_bit_copies, align 8
  %arrayidx112 = getelementptr inbounds i8, i8* %62, i64 %idxprom111
  %63 = load i8, i8* %arrayidx112, align 1
  %conv113 = zext i8 %63 to i32
  %cmp114 = icmp eq i32 %conv113, 0
  br i1 %cmp114, label %if.then.125, label %lor.lhs.false.116

lor.lhs.false.116:                                ; preds = %if.end.100
  %64 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld117 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1
  %arrayidx118 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld117, i32 0, i64 0
  %rtuint119 = bitcast %union.rtunion_def* %arrayidx118 to i32*
  %65 = load i32, i32* %rtuint119, align 4
  %idxprom120 = zext i32 %65 to i64
  %66 = load i8*, i8** @reg_sign_bit_copies, align 8
  %arrayidx121 = getelementptr inbounds i8, i8* %66, i64 %idxprom120
  %67 = load i8, i8* %arrayidx121, align 1
  %conv122 = zext i8 %67 to i32
  %68 = load i32, i32* %num, align 4
  %cmp123 = icmp ugt i32 %conv122, %68
  br i1 %cmp123, label %if.then.125, label %if.end.132

if.then.125:                                      ; preds = %lor.lhs.false.116, %if.end.100
  %69 = load i32, i32* %num, align 4
  %conv126 = trunc i32 %69 to i8
  %70 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx128 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld127, i32 0, i64 0
  %rtuint129 = bitcast %union.rtunion_def* %arrayidx128 to i32*
  %71 = load i32, i32* %rtuint129, align 4
  %idxprom130 = zext i32 %71 to i64
  %72 = load i8*, i8** @reg_sign_bit_copies, align 8
  %arrayidx131 = getelementptr inbounds i8, i8* %72, i64 %idxprom130
  store i8 %conv126, i8* %arrayidx131, align 1
  br label %if.end.132

if.end.132:                                       ; preds = %if.then.125, %lor.lhs.false.116
  br label %if.end.148

if.else:                                          ; preds = %land.lhs.true.73, %land.lhs.true.49, %lor.lhs.false.41
  %73 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %74 = bitcast %struct.rtx_def* %73 to i32*
  %bf.load133 = load i32, i32* %74, align 8
  %bf.lshr134 = lshr i32 %bf.load133, 16
  %bf.clear135 = and i32 %bf.lshr134, 255
  %idxprom136 = sext i32 %bf.clear135 to i64
  %arrayidx137 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom136
  %75 = load i64, i64* %arrayidx137, align 8
  %76 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld138 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %arrayidx139 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld138, i32 0, i64 0
  %rtuint140 = bitcast %union.rtunion_def* %arrayidx139 to i32*
  %77 = load i32, i32* %rtuint140, align 4
  %idxprom141 = zext i32 %77 to i64
  %78 = load i64*, i64** @reg_nonzero_bits, align 8
  %arrayidx142 = getelementptr inbounds i64, i64* %78, i64 %idxprom141
  store i64 %75, i64* %arrayidx142, align 8
  %79 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1
  %arrayidx144 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld143, i32 0, i64 0
  %rtuint145 = bitcast %union.rtunion_def* %arrayidx144 to i32*
  %80 = load i32, i32* %rtuint145, align 4
  %idxprom146 = zext i32 %80 to i64
  %81 = load i8*, i8** @reg_sign_bit_copies, align 8
  %arrayidx147 = getelementptr inbounds i8, i8* %81, i64 %idxprom146
  store i8 1, i8* %arrayidx147, align 1
  br label %if.end.148

if.end.148:                                       ; preds = %if.else, %if.end.132
  br label %if.end.149

if.end.149:                                       ; preds = %if.then.20, %if.end.148, %land.lhs.true.8, %land.lhs.true.2, %land.lhs.true, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @record_dead_and_set_regs(%struct.rtx_def* %insn) #0 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %link = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %regno = alloca i32, align 4
  %endregno = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 6
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %link, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc.107, %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %tobool = icmp ne %struct.rtx_def* %2, null
  br i1 %tobool, label %for.body, label %for.end.111

for.body:                                         ; preds = %for.cond
  %3 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load = load i32, i32* %4, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp = icmp eq i32 %bf.clear, 1
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %for.body
  %5 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1, i32 0, i64 0
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtx3, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load4 = load i32, i32* %7, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 61
  br i1 %cmp6, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i32 0, i64 0
  %rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rtx9, align 8
  %fld10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx11 to i32*
  %10 = load i32, i32* %rtuint, align 4
  store i32 %10, i32* %regno, align 4
  %11 = load i32, i32* %regno, align 4
  %12 = load i32, i32* %regno, align 4
  %cmp12 = icmp ult i32 %12, 53
  br i1 %cmp12, label %cond.true, label %cond.false.87

cond.true:                                        ; preds = %if.then
  %13 = load i32, i32* %regno, align 4
  %cmp13 = icmp uge i32 %13, 8
  br i1 %cmp13, label %land.lhs.true.14, label %lor.lhs.false

land.lhs.true.14:                                 ; preds = %cond.true
  %14 = load i32, i32* %regno, align 4
  %cmp15 = icmp ule i32 %14, 15
  br i1 %cmp15, label %cond.true.27, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.14, %cond.true
  %15 = load i32, i32* %regno, align 4
  %cmp16 = icmp uge i32 %15, 21
  br i1 %cmp16, label %land.lhs.true.17, label %lor.lhs.false.19

land.lhs.true.17:                                 ; preds = %lor.lhs.false
  %16 = load i32, i32* %regno, align 4
  %cmp18 = icmp ule i32 %16, 28
  br i1 %cmp18, label %cond.true.27, label %lor.lhs.false.19

lor.lhs.false.19:                                 ; preds = %land.lhs.true.17, %lor.lhs.false
  %17 = load i32, i32* %regno, align 4
  %cmp20 = icmp uge i32 %17, 45
  br i1 %cmp20, label %land.lhs.true.21, label %lor.lhs.false.23

land.lhs.true.21:                                 ; preds = %lor.lhs.false.19
  %18 = load i32, i32* %regno, align 4
  %cmp22 = icmp ule i32 %18, 52
  br i1 %cmp22, label %cond.true.27, label %lor.lhs.false.23

lor.lhs.false.23:                                 ; preds = %land.lhs.true.21, %lor.lhs.false.19
  %19 = load i32, i32* %regno, align 4
  %cmp24 = icmp uge i32 %19, 29
  br i1 %cmp24, label %land.lhs.true.25, label %cond.false

land.lhs.true.25:                                 ; preds = %lor.lhs.false.23
  %20 = load i32, i32* %regno, align 4
  %cmp26 = icmp ule i32 %20, 36
  br i1 %cmp26, label %cond.true.27, label %cond.false

cond.true.27:                                     ; preds = %land.lhs.true.25, %land.lhs.true.21, %land.lhs.true.17, %land.lhs.true.14
  %21 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i32 0, i64 0
  %rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rtx30, align 8
  %23 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load31 = load i32, i32* %23, align 8
  %bf.lshr32 = lshr i32 %bf.load31, 16
  %bf.clear33 = and i32 %bf.lshr32, 255
  %idxprom = sext i32 %bf.clear33 to i64
  %arrayidx34 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %24 = load i32, i32* %arrayidx34, align 4
  %cmp35 = icmp eq i32 %24, 5
  br i1 %cmp35, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.27
  %25 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i32 0, i64 0
  %rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rtx38, align 8
  %27 = bitcast %struct.rtx_def* %26 to i32*
  %bf.load39 = load i32, i32* %27, align 8
  %bf.lshr40 = lshr i32 %bf.load39, 16
  %bf.clear41 = and i32 %bf.lshr40, 255
  %idxprom42 = sext i32 %bf.clear41 to i64
  %arrayidx43 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom42
  %28 = load i32, i32* %arrayidx43, align 4
  %cmp44 = icmp eq i32 %28, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.27
  %29 = phi i1 [ true, %cond.true.27 ], [ %cmp44, %lor.rhs ]
  %cond = select i1 %29, i32 2, i32 1
  br label %cond.end.85

cond.false:                                       ; preds = %land.lhs.true.25, %lor.lhs.false.23
  %30 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i32 0, i64 0
  %rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rtx47, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load48 = load i32, i32* %32, align 8
  %bf.lshr49 = lshr i32 %bf.load48, 16
  %bf.clear50 = and i32 %bf.lshr49, 255
  %cmp51 = icmp eq i32 %bf.clear50, 18
  br i1 %cmp51, label %cond.true.52, label %cond.false.55

cond.true.52:                                     ; preds = %cond.false
  %33 = load i32, i32* @target_flags, align 4
  %and = and i32 %33, 33554432
  %tobool53 = icmp ne i32 %and, 0
  %cond54 = select i1 %tobool53, i32 2, i32 3
  br label %cond.end.83

cond.false.55:                                    ; preds = %cond.false
  %34 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i32 0, i64 0
  %rtx58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rtx58, align 8
  %36 = bitcast %struct.rtx_def* %35 to i32*
  %bf.load59 = load i32, i32* %36, align 8
  %bf.lshr60 = lshr i32 %bf.load59, 16
  %bf.clear61 = and i32 %bf.lshr60, 255
  %cmp62 = icmp eq i32 %bf.clear61, 24
  br i1 %cmp62, label %cond.true.63, label %cond.false.67

cond.true.63:                                     ; preds = %cond.false.55
  %37 = load i32, i32* @target_flags, align 4
  %and64 = and i32 %37, 33554432
  %tobool65 = icmp ne i32 %and64, 0
  %cond66 = select i1 %tobool65, i32 4, i32 6
  br label %cond.end

cond.false.67:                                    ; preds = %cond.false.55
  %38 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1
  %arrayidx69 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld68, i32 0, i64 0
  %rtx70 = bitcast %union.rtunion_def* %arrayidx69 to %struct.rtx_def**
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rtx70, align 8
  %40 = bitcast %struct.rtx_def* %39 to i32*
  %bf.load71 = load i32, i32* %40, align 8
  %bf.lshr72 = lshr i32 %bf.load71, 16
  %bf.clear73 = and i32 %bf.lshr72, 255
  %idxprom74 = sext i32 %bf.clear73 to i64
  %arrayidx75 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom74
  %41 = load i8, i8* %arrayidx75, align 1
  %conv = zext i8 %41 to i32
  %42 = load i32, i32* @target_flags, align 4
  %and76 = and i32 %42, 33554432
  %tobool77 = icmp ne i32 %and76, 0
  %cond78 = select i1 %tobool77, i32 8, i32 4
  %add = add nsw i32 %conv, %cond78
  %sub = sub nsw i32 %add, 1
  %43 = load i32, i32* @target_flags, align 4
  %and79 = and i32 %43, 33554432
  %tobool80 = icmp ne i32 %and79, 0
  %cond81 = select i1 %tobool80, i32 8, i32 4
  %div = sdiv i32 %sub, %cond81
  br label %cond.end

cond.end:                                         ; preds = %cond.false.67, %cond.true.63
  %cond82 = phi i32 [ %cond66, %cond.true.63 ], [ %div, %cond.false.67 ]
  br label %cond.end.83

cond.end.83:                                      ; preds = %cond.end, %cond.true.52
  %cond84 = phi i32 [ %cond54, %cond.true.52 ], [ %cond82, %cond.end ]
  br label %cond.end.85

cond.end.85:                                      ; preds = %cond.end.83, %lor.end
  %cond86 = phi i32 [ %cond, %lor.end ], [ %cond84, %cond.end.83 ]
  br label %cond.end.88

cond.false.87:                                    ; preds = %if.then
  br label %cond.end.88

cond.end.88:                                      ; preds = %cond.false.87, %cond.end.85
  %cond89 = phi i32 [ %cond86, %cond.end.85 ], [ 1, %cond.false.87 ]
  %add90 = add i32 %11, %cond89
  store i32 %add90, i32* %endregno, align 4
  %44 = load i32, i32* %regno, align 4
  store i32 %44, i32* %i, align 4
  br label %for.cond.91

for.cond.91:                                      ; preds = %for.inc, %cond.end.88
  %45 = load i32, i32* %i, align 4
  %46 = load i32, i32* %endregno, align 4
  %cmp92 = icmp ult i32 %45, %46
  br i1 %cmp92, label %for.body.94, label %for.end

for.body.94:                                      ; preds = %for.cond.91
  %47 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %48 = load i32, i32* %i, align 4
  %idxprom95 = zext i32 %48 to i64
  %49 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_death, align 8
  %arrayidx96 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %49, i64 %idxprom95
  store %struct.rtx_def* %47, %struct.rtx_def** %arrayidx96, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body.94
  %50 = load i32, i32* %i, align 4
  %inc = add i32 %50, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.91

for.end:                                          ; preds = %for.cond.91
  br label %if.end.106

if.else:                                          ; preds = %land.lhs.true, %for.body
  %51 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %52 = bitcast %struct.rtx_def* %51 to i32*
  %bf.load97 = load i32, i32* %52, align 8
  %bf.lshr98 = lshr i32 %bf.load97, 16
  %bf.clear99 = and i32 %bf.lshr98, 255
  %cmp100 = icmp eq i32 %bf.clear99, 2
  br i1 %cmp100, label %if.then.102, label %if.end

if.then.102:                                      ; preds = %if.else
  %53 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx104 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld103, i32 0, i64 0
  %rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx105, align 8
  %55 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  call void @record_value_for_reg(%struct.rtx_def* %54, %struct.rtx_def* %55, %struct.rtx_def* null)
  br label %if.end

if.end:                                           ; preds = %if.then.102, %if.else
  br label %if.end.106

if.end.106:                                       ; preds = %if.end, %for.end
  br label %for.inc.107

for.inc.107:                                      ; preds = %if.end.106
  %56 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld108, i32 0, i64 1
  %rtx110 = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rtx110, align 8
  store %struct.rtx_def* %57, %struct.rtx_def** %link, align 8
  br label %for.cond

for.end.111:                                      ; preds = %for.cond
  %58 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %59 = bitcast %struct.rtx_def* %58 to i32*
  %bf.load112 = load i32, i32* %59, align 8
  %bf.clear113 = and i32 %bf.load112, 65535
  %cmp114 = icmp eq i32 %bf.clear113, 34
  br i1 %cmp114, label %if.then.116, label %if.end.151

if.then.116:                                      ; preds = %for.end.111
  store i32 0, i32* %i, align 4
  br label %for.cond.117

for.cond.117:                                     ; preds = %for.inc.135, %if.then.116
  %60 = load i32, i32* %i, align 4
  %cmp118 = icmp ult i32 %60, 53
  br i1 %cmp118, label %for.body.120, label %for.end.137

for.body.120:                                     ; preds = %for.cond.117
  %61 = load i64, i64* @regs_invalidated_by_call, align 8
  %62 = load i32, i32* %i, align 4
  %sh_prom = zext i32 %62 to i64
  %shl = shl i64 1, %sh_prom
  %and121 = and i64 %61, %shl
  %tobool122 = icmp ne i64 %and121, 0
  br i1 %tobool122, label %if.then.123, label %if.end.134

if.then.123:                                      ; preds = %for.body.120
  %63 = load i32, i32* %i, align 4
  %idxprom124 = zext i32 %63 to i64
  %64 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set_value, align 8
  %arrayidx125 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %64, i64 %idxprom124
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx125, align 8
  %65 = load i32, i32* %i, align 4
  %idxprom126 = zext i32 %65 to i64
  %66 = load i32*, i32** @reg_last_set_mode, align 8
  %arrayidx127 = getelementptr inbounds i32, i32* %66, i64 %idxprom126
  store i32 0, i32* %arrayidx127, align 4
  %67 = load i32, i32* %i, align 4
  %idxprom128 = zext i32 %67 to i64
  %68 = load i64*, i64** @reg_last_set_nonzero_bits, align 8
  %arrayidx129 = getelementptr inbounds i64, i64* %68, i64 %idxprom128
  store i64 0, i64* %arrayidx129, align 8
  %69 = load i32, i32* %i, align 4
  %idxprom130 = zext i32 %69 to i64
  %70 = load i8*, i8** @reg_last_set_sign_bit_copies, align 8
  %arrayidx131 = getelementptr inbounds i8, i8* %70, i64 %idxprom130
  store i8 0, i8* %arrayidx131, align 1
  %71 = load i32, i32* %i, align 4
  %idxprom132 = zext i32 %71 to i64
  %72 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_death, align 8
  %arrayidx133 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %72, i64 %idxprom132
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx133, align 8
  br label %if.end.134

if.end.134:                                       ; preds = %if.then.123, %for.body.120
  br label %for.inc.135

for.inc.135:                                      ; preds = %if.end.134
  %73 = load i32, i32* %i, align 4
  %inc136 = add i32 %73, 1
  store i32 %inc136, i32* %i, align 4
  br label %for.cond.117

for.end.137:                                      ; preds = %for.cond.117
  %74 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld138 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1
  %arrayidx139 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld138, i32 0, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx139 to i32*
  %75 = load i32, i32* %rtint, align 4
  %76 = load i32, i32* @max_uid_cuid, align 4
  %cmp140 = icmp sgt i32 %75, %76
  br i1 %cmp140, label %cond.true.142, label %cond.false.143

cond.true.142:                                    ; preds = %for.end.137
  %77 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call = call i32 @insn_cuid(%struct.rtx_def* %77)
  br label %cond.end.149

cond.false.143:                                   ; preds = %for.end.137
  %78 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx145 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld144, i32 0, i64 0
  %rtint146 = bitcast %union.rtunion_def* %arrayidx145 to i32*
  %79 = load i32, i32* %rtint146, align 4
  %idxprom147 = sext i32 %79 to i64
  %80 = load i32*, i32** @uid_cuid, align 8
  %arrayidx148 = getelementptr inbounds i32, i32* %80, i64 %idxprom147
  %81 = load i32, i32* %arrayidx148, align 4
  br label %cond.end.149

cond.end.149:                                     ; preds = %cond.false.143, %cond.true.142
  %cond150 = phi i32 [ %call, %cond.true.142 ], [ %81, %cond.false.143 ]
  store i32 %cond150, i32* @mem_last_set, align 4
  store i32 %cond150, i32* @last_call_cuid, align 4
  br label %return

if.end.151:                                       ; preds = %for.end.111
  %82 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1
  %arrayidx153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld152, i32 0, i64 3
  %rtx154 = bitcast %union.rtunion_def* %arrayidx153 to %struct.rtx_def**
  %83 = load %struct.rtx_def*, %struct.rtx_def** %rtx154, align 8
  %84 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %85 = bitcast %struct.rtx_def* %84 to i8*
  call void @note_stores(%struct.rtx_def* %83, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @record_dead_and_set_regs_1, i8* %85)
  br label %return

return:                                           ; preds = %if.end.151, %cond.end.149
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @check_promoted_subreg(%struct.rtx_def* %insn, %struct.rtx_def* %x) #0 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %format = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 63
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load1 = load i32, i32* %3, align 8
  %bf.lshr = lshr i32 %bf.load1, 28
  %bf.clear2 = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear2, 0
  br i1 %tobool, label %land.lhs.true.3, label %if.else

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load4 = load i32, i32* %6, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 61
  br i1 %cmp6, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true.3
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  call void @record_promoted_value(%struct.rtx_def* %7, %struct.rtx_def* %8)
  br label %if.end.47

if.else:                                          ; preds = %land.lhs.true.3, %land.lhs.true, %entry
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load7 = load i32, i32* %10, align 8
  %bf.clear8 = and i32 %bf.load7, 65535
  %idxprom = sext i32 %bf.clear8 to i64
  %arrayidx9 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom
  %11 = load i8*, i8** %arrayidx9, align 8
  store i8* %11, i8** %format, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.44, %if.else
  %12 = load i32, i32* %i, align 4
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load10 = load i32, i32* %14, align 8
  %bf.clear11 = and i32 %bf.load10, 65535
  %idxprom12 = sext i32 %bf.clear11 to i64
  %arrayidx13 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom12
  %15 = load i8, i8* %arrayidx13, align 1
  %conv = zext i8 %15 to i32
  %cmp14 = icmp slt i32 %12, %conv
  br i1 %cmp14, label %for.body, label %for.end.46

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %16 to i64
  %17 = load i8*, i8** %format, align 8
  %arrayidx17 = getelementptr inbounds i8, i8* %17, i64 %idxprom16
  %18 = load i8, i8* %arrayidx17, align 1
  %conv18 = sext i8 %18 to i32
  switch i32 %conv18, label %sw.epilog [
    i32 101, label %sw.bb
    i32 86, label %sw.bb.23
    i32 69, label %sw.bb.23
  ]

sw.bb:                                            ; preds = %for.body
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %20 = load i32, i32* %i, align 4
  %idxprom19 = sext i32 %20 to i64
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i32 0, i64 %idxprom19
  %rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rtx22, align 8
  call void @check_promoted_subreg(%struct.rtx_def* %19, %struct.rtx_def* %22)
  br label %sw.epilog

sw.bb.23:                                         ; preds = %for.body, %for.body
  %23 = load i32, i32* %i, align 4
  %idxprom24 = sext i32 %23 to i64
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i32 0, i64 %idxprom24
  %rtvec = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtvec_def**
  %25 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %cmp27 = icmp ne %struct.rtvec_def* %25, null
  br i1 %cmp27, label %if.then.29, label %if.end

if.then.29:                                       ; preds = %sw.bb.23
  store i32 0, i32* %j, align 4
  br label %for.cond.30

for.cond.30:                                      ; preds = %for.inc, %if.then.29
  %26 = load i32, i32* %j, align 4
  %27 = load i32, i32* %i, align 4
  %idxprom31 = sext i32 %27 to i64
  %28 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i32 0, i64 %idxprom31
  %rtvec34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtvec_def**
  %29 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec34, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %29, i32 0, i32 0
  %30 = load i32, i32* %num_elem, align 4
  %cmp35 = icmp slt i32 %26, %30
  br i1 %cmp35, label %for.body.37, label %for.end

for.body.37:                                      ; preds = %for.cond.30
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %32 = load i32, i32* %j, align 4
  %idxprom38 = sext i32 %32 to i64
  %33 = load i32, i32* %i, align 4
  %idxprom39 = sext i32 %33 to i64
  %34 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i32 0, i64 %idxprom39
  %rtvec42 = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtvec_def**
  %35 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec42, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %35, i32 0, i32 1
  %arrayidx43 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom38
  %36 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx43, align 8
  call void @check_promoted_subreg(%struct.rtx_def* %31, %struct.rtx_def* %36)
  br label %for.inc

for.inc:                                          ; preds = %for.body.37
  %37 = load i32, i32* %j, align 4
  %inc = add nsw i32 %37, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond.30

for.end:                                          ; preds = %for.cond.30
  br label %if.end

if.end:                                           ; preds = %for.end, %sw.bb.23
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.body, %if.end, %sw.bb
  br label %for.inc.44

for.inc.44:                                       ; preds = %sw.epilog
  %38 = load i32, i32* %i, align 4
  %inc45 = add nsw i32 %38, 1
  store i32 %inc45, i32* %i, align 4
  br label %for.cond

for.end.46:                                       ; preds = %for.cond
  br label %if.end.47

if.end.47:                                        ; preds = %for.end.46, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @try_combine(%struct.rtx_def* %i3, %struct.rtx_def* %i2, %struct.rtx_def* %i1, i32* %new_direct_jump_p) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %i3.addr = alloca %struct.rtx_def*, align 8
  %i2.addr = alloca %struct.rtx_def*, align 8
  %i1.addr = alloca %struct.rtx_def*, align 8
  %new_direct_jump_p.addr = alloca i32*, align 8
  %newpat = alloca %struct.rtx_def*, align 8
  %newi2pat = alloca %struct.rtx_def*, align 8
  %substed_i2 = alloca i32, align 4
  %substed_i1 = alloca i32, align 4
  %added_sets_1 = alloca i32, align 4
  %added_sets_2 = alloca i32, align 4
  %total_sets = alloca i32, align 4
  %i2_is_used = alloca i32, align 4
  %insn_code_number = alloca i32, align 4
  %i2_code_number = alloca i32, align 4
  %other_code_number = alloca i32, align 4
  %i3dest_killed = alloca %struct.rtx_def*, align 8
  %i2dest = alloca %struct.rtx_def*, align 8
  %i2src = alloca %struct.rtx_def*, align 8
  %i1dest = alloca %struct.rtx_def*, align 8
  %i1src = alloca %struct.rtx_def*, align 8
  %i2pat = alloca %struct.rtx_def*, align 8
  %i2dest_in_i2src = alloca i32, align 4
  %i1dest_in_i1src = alloca i32, align 4
  %i2dest_in_i1src = alloca i32, align 4
  %i1_feeds_i3 = alloca i32, align 4
  %new_i3_notes = alloca %struct.rtx_def*, align 8
  %new_i2_notes = alloca %struct.rtx_def*, align 8
  %i3_subst_into_i2 = alloca i32, align 4
  %have_mult = alloca i32, align 4
  %maxreg = alloca i32, align 4
  %temp = alloca %struct.rtx_def*, align 8
  %link = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %p2 = alloca %struct.rtx_def*, align 8
  %lo = alloca i64, align 8
  %hi = alloca i64, align 8
  %sign = alloca i32, align 4
  %cc_use = alloca %struct.rtx_def**, align 8
  %compare_mode = alloca i32, align 4
  %regno = alloca i32, align 4
  %new_dest = alloca %struct.rtx_def*, align 8
  %old = alloca %struct.rtvec_def*, align 8
  %old1209 = alloca %struct.rtx_def*, align 8
  %m_split = alloca %struct.rtx_def*, align 8
  %split = alloca %struct.rtx_def**, align 8
  %ni2dest = alloca %struct.rtx_def*, align 8
  %i2set = alloca %struct.rtx_def*, align 8
  %i3set = alloca %struct.rtx_def*, align 8
  %newi3pat = alloca %struct.rtx_def*, align 8
  %new_i3_dest = alloca %struct.rtx_def*, align 8
  %new_i2_dest = alloca %struct.rtx_def*, align 8
  %newdest = alloca %struct.rtx_def*, align 8
  %split_code = alloca i32, align 4
  %split_mode = alloca i32, align 4
  %ni2dest2309 = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %link2347 = alloca %struct.rtx_def*, align 8
  %other_pat = alloca %struct.rtx_def*, align 8
  %new_other_notes = alloca %struct.rtx_def*, align 8
  %note = alloca %struct.rtx_def*, align 8
  %next = alloca %struct.rtx_def*, align 8
  %i3notes = alloca %struct.rtx_def*, align 8
  %i2notes = alloca %struct.rtx_def*, align 8
  %i1notes = alloca %struct.rtx_def*, align 8
  %i3links = alloca %struct.rtx_def*, align 8
  %i2links = alloca %struct.rtx_def*, align 8
  %i1links = alloca %struct.rtx_def*, align 8
  %midnotes = alloca %struct.rtx_def*, align 8
  %regno2738 = alloca i32, align 4
  %elim_i2 = alloca %struct.rtx_def*, align 8
  %elim_i1 = alloca %struct.rtx_def*, align 8
  %call_usage = alloca %struct.rtx_def*, align 8
  %link2980 = alloca %struct.rtx_def*, align 8
  %link3312 = alloca %struct.rtx_def*, align 8
  %i2_insn = alloca %struct.rtx_def*, align 8
  %i2_val = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %link3412 = alloca %struct.rtx_def*, align 8
  %i1_insn = alloca %struct.rtx_def*, align 8
  %i1_val = alloca %struct.rtx_def*, align 8
  %set3413 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %i3, %struct.rtx_def** %i3.addr, align 8
  store %struct.rtx_def* %i2, %struct.rtx_def** %i2.addr, align 8
  store %struct.rtx_def* %i1, %struct.rtx_def** %i1.addr, align 8
  store i32* %new_direct_jump_p, i32** %new_direct_jump_p.addr, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %newi2pat, align 8
  store i32 0, i32* %substed_i2, align 4
  store i32 0, i32* %substed_i1, align 4
  store i32 0, i32* %i2_code_number, align 4
  store i32 0, i32* %other_code_number, align 4
  store %struct.rtx_def* null, %struct.rtx_def** %i3dest_killed, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %i1dest, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %i1src, align 8
  store i32 0, i32* %i2dest_in_i2src, align 4
  store i32 0, i32* %i1dest_in_i1src, align 4
  store i32 0, i32* %i2dest_in_i1src, align 4
  store i32 0, i32* %i1_feeds_i3, align 4
  store i32 0, i32* %i3_subst_into_i2, align 4
  store i32 0, i32* %have_mult, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call = call i32 @cant_combine_insn_p(%struct.rtx_def* %0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call1 = call i32 @cant_combine_insn_p(%struct.rtx_def* %1)
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.then, label %lor.lhs.false.3

lor.lhs.false.3:                                  ; preds = %lor.lhs.false
  %2 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %tobool4 = icmp ne %struct.rtx_def* %2, null
  br i1 %tobool4, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false.3
  %3 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %call5 = call i32 @cant_combine_insn_p(%struct.rtx_def* %3)
  %tobool6 = icmp ne i32 %call5, 0
  br i1 %tobool6, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false, %entry
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false.3
  %4 = load i32, i32* @combine_attempts, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* @combine_attempts, align 4
  store %struct.rtx_def* null, %struct.rtx_def** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 2), align 8
  store i64 0, i64* @newpat_used_regs, align 8
  %5 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %tobool7 = icmp ne %struct.rtx_def* %5, null
  br i1 %tobool7, label %land.lhs.true.8, label %if.end.30

land.lhs.true.8:                                  ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %7 = load i32, i32* %rtint, align 4
  %8 = load i32, i32* @max_uid_cuid, align 4
  %cmp = icmp sgt i32 %7, %8
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.8
  %9 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %call9 = call i32 @insn_cuid(%struct.rtx_def* %9)
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.8
  %10 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %fld10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i32 0, i64 0
  %rtint12 = bitcast %union.rtunion_def* %arrayidx11 to i32*
  %11 = load i32, i32* %rtint12, align 4
  %idxprom = sext i32 %11 to i64
  %12 = load i32*, i32** @uid_cuid, align 8
  %arrayidx13 = getelementptr inbounds i32, i32* %12, i64 %idxprom
  %13 = load i32, i32* %arrayidx13, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call9, %cond.true ], [ %13, %cond.false ]
  %14 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i32 0, i64 0
  %rtint16 = bitcast %union.rtunion_def* %arrayidx15 to i32*
  %15 = load i32, i32* %rtint16, align 4
  %16 = load i32, i32* @max_uid_cuid, align 4
  %cmp17 = icmp sgt i32 %15, %16
  br i1 %cmp17, label %cond.true.18, label %cond.false.20

cond.true.18:                                     ; preds = %cond.end
  %17 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call19 = call i32 @insn_cuid(%struct.rtx_def* %17)
  br label %cond.end.26

cond.false.20:                                    ; preds = %cond.end
  %18 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i32 0, i64 0
  %rtint23 = bitcast %union.rtunion_def* %arrayidx22 to i32*
  %19 = load i32, i32* %rtint23, align 4
  %idxprom24 = sext i32 %19 to i64
  %20 = load i32*, i32** @uid_cuid, align 8
  %arrayidx25 = getelementptr inbounds i32, i32* %20, i64 %idxprom24
  %21 = load i32, i32* %arrayidx25, align 4
  br label %cond.end.26

cond.end.26:                                      ; preds = %cond.false.20, %cond.true.18
  %cond27 = phi i32 [ %call19, %cond.true.18 ], [ %21, %cond.false.20 ]
  %cmp28 = icmp sgt i32 %cond, %cond27
  br i1 %cmp28, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %cond.end.26
  %22 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  store %struct.rtx_def* %22, %struct.rtx_def** %temp, align 8
  %23 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  store %struct.rtx_def* %23, %struct.rtx_def** %i1.addr, align 8
  %24 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  store %struct.rtx_def* %24, %struct.rtx_def** %i2.addr, align 8
  br label %if.end.30

if.end.30:                                        ; preds = %if.then.29, %cond.end.26, %if.end
  store %struct.rtx_def* null, %struct.rtx_def** @added_links_insn, align 8
  %25 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %cmp31 = icmp eq %struct.rtx_def* %25, null
  br i1 %cmp31, label %land.lhs.true.32, label %if.end.260

land.lhs.true.32:                                 ; preds = %if.end.30
  %26 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %27 = bitcast %struct.rtx_def* %26 to i32*
  %bf.load = load i32, i32* %27, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp33 = icmp eq i32 %bf.clear, 32
  br i1 %cmp33, label %land.lhs.true.34, label %if.end.260

land.lhs.true.34:                                 ; preds = %land.lhs.true.32
  %28 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load37 = load i32, i32* %30, align 8
  %bf.clear38 = and i32 %bf.load37, 65535
  %cmp39 = icmp eq i32 %bf.clear38, 47
  br i1 %cmp39, label %land.lhs.true.40, label %if.end.260

land.lhs.true.40:                                 ; preds = %land.lhs.true.34
  %31 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld41, i32 0, i64 3
  %rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rtx43, align 8
  %fld44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i32 0, i64 1
  %rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rtx46, align 8
  %34 = bitcast %struct.rtx_def* %33 to i32*
  %bf.load47 = load i32, i32* %34, align 8
  %bf.clear48 = and i32 %bf.load47, 65535
  %cmp49 = icmp eq i32 %bf.clear48, 61
  br i1 %cmp49, label %land.lhs.true.50, label %if.end.260

land.lhs.true.50:                                 ; preds = %land.lhs.true.40
  %35 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i32 0, i64 3
  %rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rtx53, align 8
  %fld54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld54, i32 0, i64 1
  %rtx56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtx_def**
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rtx56, align 8
  %fld57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1
  %arrayidx58 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld57, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx58 to i32*
  %38 = load i32, i32* %rtuint, align 4
  %cmp59 = icmp uge i32 %38, 53
  br i1 %cmp59, label %land.lhs.true.60, label %if.end.260

land.lhs.true.60:                                 ; preds = %land.lhs.true.50
  %39 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %40 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i32 0, i64 3
  %rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rtx63, align 8
  %fld64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld64, i32 0, i64 1
  %rtx66 = bitcast %union.rtunion_def* %arrayidx65 to %struct.rtx_def**
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rtx66, align 8
  %call67 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %39, i32 1, %struct.rtx_def* %42)
  %tobool68 = icmp ne %struct.rtx_def* %call67, null
  br i1 %tobool68, label %land.lhs.true.69, label %if.end.260

land.lhs.true.69:                                 ; preds = %land.lhs.true.60
  %43 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i32 0, i64 3
  %rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rtx72, align 8
  %45 = bitcast %struct.rtx_def* %44 to i32*
  %bf.load73 = load i32, i32* %45, align 8
  %bf.clear74 = and i32 %bf.load73, 65535
  %cmp75 = icmp eq i32 %bf.clear74, 39
  br i1 %cmp75, label %land.lhs.true.76, label %if.end.260

land.lhs.true.76:                                 ; preds = %land.lhs.true.69
  %46 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i32 0, i64 3
  %rtx79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtx_def**
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rtx79, align 8
  %fld80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1
  %arrayidx81 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld80, i32 0, i64 0
  %rtx82 = bitcast %union.rtunion_def* %arrayidx81 to %struct.rtx_def**
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rtx82, align 8
  %call83 = call i32 @side_effects_p(%struct.rtx_def* %48)
  %tobool84 = icmp ne i32 %call83, 0
  br i1 %tobool84, label %if.end.260, label %land.lhs.true.85

land.lhs.true.85:                                 ; preds = %land.lhs.true.76
  %49 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld86 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1
  %arrayidx87 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld86, i32 0, i64 3
  %rtx88 = bitcast %union.rtunion_def* %arrayidx87 to %struct.rtx_def**
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rtx88, align 8
  %fld89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i32 0, i64 0
  %rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rtx91, align 8
  %52 = bitcast %struct.rtx_def* %51 to i32*
  %bf.load92 = load i32, i32* %52, align 8
  %bf.clear93 = and i32 %bf.load92, 65535
  %cmp94 = icmp ne i32 %bf.clear93, 133
  br i1 %cmp94, label %land.lhs.true.95, label %if.end.260

land.lhs.true.95:                                 ; preds = %land.lhs.true.85
  %53 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx97 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld96, i32 0, i64 3
  %rtx98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx98, align 8
  %fld99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1
  %arrayidx100 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld99, i32 0, i64 0
  %rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rtx101, align 8
  %56 = bitcast %struct.rtx_def* %55 to i32*
  %bf.load102 = load i32, i32* %56, align 8
  %bf.clear103 = and i32 %bf.load102, 65535
  %cmp104 = icmp ne i32 %bf.clear103, 64
  br i1 %cmp104, label %land.lhs.true.105, label %if.end.260

land.lhs.true.105:                                ; preds = %land.lhs.true.95
  %57 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1
  %arrayidx107 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld106, i32 0, i64 3
  %rtx108 = bitcast %union.rtunion_def* %arrayidx107 to %struct.rtx_def**
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rtx108, align 8
  %fld109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1
  %arrayidx110 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld109, i32 0, i64 1
  %rtx111 = bitcast %union.rtunion_def* %arrayidx110 to %struct.rtx_def**
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rtx111, align 8
  %60 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1
  %arrayidx113 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld112, i32 0, i64 3
  %rtx114 = bitcast %union.rtunion_def* %arrayidx113 to %struct.rtx_def**
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rtx114, align 8
  %fld115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1
  %arrayidx116 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld115, i32 0, i64 0
  %rtx117 = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtx_def**
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rtx117, align 8
  %call118 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %59, %struct.rtx_def* %62)
  %tobool119 = icmp ne i32 %call118, 0
  br i1 %tobool119, label %if.end.260, label %land.lhs.true.120

land.lhs.true.120:                                ; preds = %land.lhs.true.105
  %63 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call121 = call %struct.rtx_def* @next_real_insn(%struct.rtx_def* %63)
  %64 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %cmp122 = icmp eq %struct.rtx_def* %call121, %64
  br i1 %cmp122, label %if.then.123, label %if.end.260

if.then.123:                                      ; preds = %land.lhs.true.120
  %65 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1
  %arrayidx125 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld124, i32 0, i64 3
  %rtx126 = bitcast %union.rtunion_def* %arrayidx125 to %struct.rtx_def**
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rtx126, align 8
  store %struct.rtx_def* %66, %struct.rtx_def** %p2, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.123
  %67 = load i32, i32* %i, align 4
  %68 = load %struct.rtx_def*, %struct.rtx_def** %p2, align 8
  %fld127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1
  %arrayidx128 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld127, i32 0, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx128 to %struct.rtvec_def**
  %69 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %69, i32 0, i32 0
  %70 = load i32, i32* %num_elem, align 4
  %cmp129 = icmp slt i32 %67, %70
  br i1 %cmp129, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %71 = load i32, i32* %i, align 4
  %idxprom130 = sext i32 %71 to i64
  %72 = load %struct.rtx_def*, %struct.rtx_def** %p2, align 8
  %fld131 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1
  %arrayidx132 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld131, i32 0, i64 0
  %rtvec133 = bitcast %union.rtunion_def* %arrayidx132 to %struct.rtvec_def**
  %73 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec133, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %73, i32 0, i32 1
  %arrayidx134 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom130
  %74 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx134, align 8
  %75 = bitcast %struct.rtx_def* %74 to i32*
  %bf.load135 = load i32, i32* %75, align 8
  %bf.clear136 = and i32 %bf.load135, 65535
  %cmp137 = icmp eq i32 %bf.clear136, 47
  br i1 %cmp137, label %land.lhs.true.148, label %lor.lhs.false.138

lor.lhs.false.138:                                ; preds = %for.body
  %76 = load i32, i32* %i, align 4
  %idxprom139 = sext i32 %76 to i64
  %77 = load %struct.rtx_def*, %struct.rtx_def** %p2, align 8
  %fld140 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1
  %arrayidx141 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld140, i32 0, i64 0
  %rtvec142 = bitcast %union.rtunion_def* %arrayidx141 to %struct.rtvec_def**
  %78 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec142, align 8
  %elem143 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %78, i32 0, i32 1
  %arrayidx144 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem143, i32 0, i64 %idxprom139
  %79 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx144, align 8
  %80 = bitcast %struct.rtx_def* %79 to i32*
  %bf.load145 = load i32, i32* %80, align 8
  %bf.clear146 = and i32 %bf.load145, 65535
  %cmp147 = icmp eq i32 %bf.clear146, 49
  br i1 %cmp147, label %land.lhs.true.148, label %if.end.167

land.lhs.true.148:                                ; preds = %lor.lhs.false.138, %for.body
  %81 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld149 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1
  %arrayidx150 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld149, i32 0, i64 3
  %rtx151 = bitcast %union.rtunion_def* %arrayidx150 to %struct.rtx_def**
  %82 = load %struct.rtx_def*, %struct.rtx_def** %rtx151, align 8
  %fld152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1
  %arrayidx153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld152, i32 0, i64 0
  %rtx154 = bitcast %union.rtunion_def* %arrayidx153 to %struct.rtx_def**
  %83 = load %struct.rtx_def*, %struct.rtx_def** %rtx154, align 8
  %84 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %84 to i64
  %85 = load %struct.rtx_def*, %struct.rtx_def** %p2, align 8
  %fld156 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1
  %arrayidx157 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld156, i32 0, i64 0
  %rtvec158 = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtvec_def**
  %86 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec158, align 8
  %elem159 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %86, i32 0, i32 1
  %arrayidx160 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem159, i32 0, i64 %idxprom155
  %87 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx160, align 8
  %fld161 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1
  %arrayidx162 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld161, i32 0, i64 0
  %rtx163 = bitcast %union.rtunion_def* %arrayidx162 to %struct.rtx_def**
  %88 = load %struct.rtx_def*, %struct.rtx_def** %rtx163, align 8
  %call164 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %83, %struct.rtx_def* %88)
  %tobool165 = icmp ne i32 %call164, 0
  br i1 %tobool165, label %if.then.166, label %if.end.167

if.then.166:                                      ; preds = %land.lhs.true.148
  br label %for.end

if.end.167:                                       ; preds = %land.lhs.true.148, %lor.lhs.false.138
  br label %for.inc

for.inc:                                          ; preds = %if.end.167
  %89 = load i32, i32* %i, align 4
  %inc168 = add nsw i32 %89, 1
  store i32 %inc168, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then.166, %for.cond
  %90 = load i32, i32* %i, align 4
  %91 = load %struct.rtx_def*, %struct.rtx_def** %p2, align 8
  %fld169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1
  %arrayidx170 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld169, i32 0, i64 0
  %rtvec171 = bitcast %union.rtunion_def* %arrayidx170 to %struct.rtvec_def**
  %92 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec171, align 8
  %num_elem172 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %92, i32 0, i32 0
  %93 = load i32, i32* %num_elem172, align 4
  %cmp173 = icmp eq i32 %90, %93
  br i1 %cmp173, label %if.then.174, label %if.end.259

if.then.174:                                      ; preds = %for.end
  store i32 0, i32* %i, align 4
  br label %for.cond.175

for.cond.175:                                     ; preds = %for.inc.256, %if.then.174
  %94 = load i32, i32* %i, align 4
  %95 = load %struct.rtx_def*, %struct.rtx_def** %p2, align 8
  %fld176 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1
  %arrayidx177 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld176, i32 0, i64 0
  %rtvec178 = bitcast %union.rtunion_def* %arrayidx177 to %struct.rtvec_def**
  %96 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec178, align 8
  %num_elem179 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %96, i32 0, i32 0
  %97 = load i32, i32* %num_elem179, align 4
  %cmp180 = icmp slt i32 %94, %97
  br i1 %cmp180, label %for.body.181, label %for.end.258

for.body.181:                                     ; preds = %for.cond.175
  %98 = load i32, i32* %i, align 4
  %idxprom182 = sext i32 %98 to i64
  %99 = load %struct.rtx_def*, %struct.rtx_def** %p2, align 8
  %fld183 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %99, i32 0, i32 1
  %arrayidx184 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld183, i32 0, i64 0
  %rtvec185 = bitcast %union.rtunion_def* %arrayidx184 to %struct.rtvec_def**
  %100 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec185, align 8
  %elem186 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %100, i32 0, i32 1
  %arrayidx187 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem186, i32 0, i64 %idxprom182
  %101 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx187, align 8
  %102 = bitcast %struct.rtx_def* %101 to i32*
  %bf.load188 = load i32, i32* %102, align 8
  %bf.clear189 = and i32 %bf.load188, 65535
  %cmp190 = icmp eq i32 %bf.clear189, 47
  br i1 %cmp190, label %land.lhs.true.201, label %lor.lhs.false.191

lor.lhs.false.191:                                ; preds = %for.body.181
  %103 = load i32, i32* %i, align 4
  %idxprom192 = sext i32 %103 to i64
  %104 = load %struct.rtx_def*, %struct.rtx_def** %p2, align 8
  %fld193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %104, i32 0, i32 1
  %arrayidx194 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld193, i32 0, i64 0
  %rtvec195 = bitcast %union.rtunion_def* %arrayidx194 to %struct.rtvec_def**
  %105 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec195, align 8
  %elem196 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %105, i32 0, i32 1
  %arrayidx197 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem196, i32 0, i64 %idxprom192
  %106 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx197, align 8
  %107 = bitcast %struct.rtx_def* %106 to i32*
  %bf.load198 = load i32, i32* %107, align 8
  %bf.clear199 = and i32 %bf.load198, 65535
  %cmp200 = icmp eq i32 %bf.clear199, 49
  br i1 %cmp200, label %land.lhs.true.201, label %if.end.255

land.lhs.true.201:                                ; preds = %lor.lhs.false.191, %for.body.181
  %108 = load i32, i32* %i, align 4
  %idxprom202 = sext i32 %108 to i64
  %109 = load %struct.rtx_def*, %struct.rtx_def** %p2, align 8
  %fld203 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1
  %arrayidx204 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld203, i32 0, i64 0
  %rtvec205 = bitcast %union.rtunion_def* %arrayidx204 to %struct.rtvec_def**
  %110 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec205, align 8
  %elem206 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %110, i32 0, i32 1
  %arrayidx207 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem206, i32 0, i64 %idxprom202
  %111 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx207, align 8
  %fld208 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i32 0, i32 1
  %arrayidx209 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld208, i32 0, i64 0
  %rtx210 = bitcast %union.rtunion_def* %arrayidx209 to %struct.rtx_def**
  %112 = load %struct.rtx_def*, %struct.rtx_def** %rtx210, align 8
  %113 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld211 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %113, i32 0, i32 1
  %arrayidx212 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld211, i32 0, i64 3
  %rtx213 = bitcast %union.rtunion_def* %arrayidx212 to %struct.rtx_def**
  %114 = load %struct.rtx_def*, %struct.rtx_def** %rtx213, align 8
  %fld214 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %114, i32 0, i32 1
  %arrayidx215 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld214, i32 0, i64 1
  %rtx216 = bitcast %union.rtunion_def* %arrayidx215 to %struct.rtx_def**
  %115 = load %struct.rtx_def*, %struct.rtx_def** %rtx216, align 8
  %cmp217 = icmp eq %struct.rtx_def* %112, %115
  br i1 %cmp217, label %if.then.218, label %if.end.255

if.then.218:                                      ; preds = %land.lhs.true.201
  %116 = load i32, i32* @combine_merges, align 4
  %inc219 = add nsw i32 %116, 1
  store i32 %inc219, i32* @combine_merges, align 4
  %117 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  store %struct.rtx_def* %117, %struct.rtx_def** @subst_insn, align 8
  %118 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld220 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1
  %arrayidx221 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld220, i32 0, i64 0
  %rtint222 = bitcast %union.rtunion_def* %arrayidx221 to i32*
  %119 = load i32, i32* %rtint222, align 4
  %120 = load i32, i32* @max_uid_cuid, align 4
  %cmp223 = icmp sgt i32 %119, %120
  br i1 %cmp223, label %cond.true.224, label %cond.false.226

cond.true.224:                                    ; preds = %if.then.218
  %121 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call225 = call i32 @insn_cuid(%struct.rtx_def* %121)
  br label %cond.end.232

cond.false.226:                                   ; preds = %if.then.218
  %122 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld227 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i32 0, i32 1
  %arrayidx228 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld227, i32 0, i64 0
  %rtint229 = bitcast %union.rtunion_def* %arrayidx228 to i32*
  %123 = load i32, i32* %rtint229, align 4
  %idxprom230 = sext i32 %123 to i64
  %124 = load i32*, i32** @uid_cuid, align 8
  %arrayidx231 = getelementptr inbounds i32, i32* %124, i64 %idxprom230
  %125 = load i32, i32* %arrayidx231, align 4
  br label %cond.end.232

cond.end.232:                                     ; preds = %cond.false.226, %cond.true.224
  %cond233 = phi i32 [ %call225, %cond.true.224 ], [ %125, %cond.false.226 ]
  store i32 %cond233, i32* @subst_low_cuid, align 4
  store i32 0, i32* %added_sets_1, align 4
  store i32 0, i32* %added_sets_2, align 4
  %126 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld234 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1
  %arrayidx235 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld234, i32 0, i64 3
  %rtx236 = bitcast %union.rtunion_def* %arrayidx235 to %struct.rtx_def**
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rtx236, align 8
  %fld237 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %127, i32 0, i32 1
  %arrayidx238 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld237, i32 0, i64 1
  %rtx239 = bitcast %union.rtunion_def* %arrayidx238 to %struct.rtx_def**
  %128 = load %struct.rtx_def*, %struct.rtx_def** %rtx239, align 8
  store %struct.rtx_def* %128, %struct.rtx_def** %i2dest, align 8
  %129 = load i32, i32* %i, align 4
  %idxprom240 = sext i32 %129 to i64
  %130 = load %struct.rtx_def*, %struct.rtx_def** %p2, align 8
  %fld241 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1
  %arrayidx242 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld241, i32 0, i64 0
  %rtvec243 = bitcast %union.rtunion_def* %arrayidx242 to %struct.rtvec_def**
  %131 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec243, align 8
  %elem244 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %131, i32 0, i32 1
  %arrayidx245 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem244, i32 0, i64 %idxprom240
  %132 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx245, align 8
  %fld246 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1
  %arrayidx247 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld246, i32 0, i64 0
  %rtx248 = bitcast %union.rtunion_def* %arrayidx247 to %struct.rtx_def**
  %133 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld249 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %133, i32 0, i32 1
  %arrayidx250 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld249, i32 0, i64 3
  %rtx251 = bitcast %union.rtunion_def* %arrayidx250 to %struct.rtx_def**
  %134 = load %struct.rtx_def*, %struct.rtx_def** %rtx251, align 8
  %fld252 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %134, i32 0, i32 1
  %arrayidx253 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld252, i32 0, i64 0
  %rtx254 = bitcast %union.rtunion_def* %arrayidx253 to %struct.rtx_def**
  %135 = load %struct.rtx_def*, %struct.rtx_def** %rtx254, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx248, %struct.rtx_def* %135)
  %136 = load %struct.rtx_def*, %struct.rtx_def** %p2, align 8
  store %struct.rtx_def* %136, %struct.rtx_def** %newpat, align 8
  store i32 1, i32* %i3_subst_into_i2, align 4
  br label %validate_replacement

if.end.255:                                       ; preds = %land.lhs.true.201, %lor.lhs.false.191
  br label %for.inc.256

for.inc.256:                                      ; preds = %if.end.255
  %137 = load i32, i32* %i, align 4
  %inc257 = add nsw i32 %137, 1
  store i32 %inc257, i32* %i, align 4
  br label %for.cond.175

for.end.258:                                      ; preds = %for.cond.175
  br label %if.end.259

if.end.259:                                       ; preds = %for.end.258, %for.end
  br label %if.end.260

if.end.260:                                       ; preds = %if.end.259, %land.lhs.true.120, %land.lhs.true.105, %land.lhs.true.95, %land.lhs.true.85, %land.lhs.true.76, %land.lhs.true.69, %land.lhs.true.60, %land.lhs.true.50, %land.lhs.true.40, %land.lhs.true.34, %land.lhs.true.32, %if.end.30
  %138 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %cmp261 = icmp eq %struct.rtx_def* %138, null
  br i1 %cmp261, label %land.lhs.true.262, label %if.end.594

land.lhs.true.262:                                ; preds = %if.end.260
  %139 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %140 = bitcast %struct.rtx_def* %139 to i32*
  %bf.load263 = load i32, i32* %140, align 8
  %bf.clear264 = and i32 %bf.load263, 65535
  %idxprom265 = sext i32 %bf.clear264 to i64
  %arrayidx266 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom265
  %141 = load i8, i8* %arrayidx266, align 1
  %conv = sext i8 %141 to i32
  %cmp267 = icmp eq i32 %conv, 105
  br i1 %cmp267, label %cond.true.269, label %cond.false.288

cond.true.269:                                    ; preds = %land.lhs.true.262
  %142 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld270 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i32 0, i32 1
  %arrayidx271 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld270, i32 0, i64 3
  %rtx272 = bitcast %union.rtunion_def* %arrayidx271 to %struct.rtx_def**
  %143 = load %struct.rtx_def*, %struct.rtx_def** %rtx272, align 8
  %144 = bitcast %struct.rtx_def* %143 to i32*
  %bf.load273 = load i32, i32* %144, align 8
  %bf.clear274 = and i32 %bf.load273, 65535
  %cmp275 = icmp eq i32 %bf.clear274, 47
  br i1 %cmp275, label %cond.true.277, label %cond.false.281

cond.true.277:                                    ; preds = %cond.true.269
  %145 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld278 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %145, i32 0, i32 1
  %arrayidx279 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld278, i32 0, i64 3
  %rtx280 = bitcast %union.rtunion_def* %arrayidx279 to %struct.rtx_def**
  %146 = load %struct.rtx_def*, %struct.rtx_def** %rtx280, align 8
  br label %cond.end.286

cond.false.281:                                   ; preds = %cond.true.269
  %147 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %148 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld282 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %148, i32 0, i32 1
  %arrayidx283 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld282, i32 0, i64 3
  %rtx284 = bitcast %union.rtunion_def* %arrayidx283 to %struct.rtx_def**
  %149 = load %struct.rtx_def*, %struct.rtx_def** %rtx284, align 8
  %call285 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %147, %struct.rtx_def* %149)
  br label %cond.end.286

cond.end.286:                                     ; preds = %cond.false.281, %cond.true.277
  %cond287 = phi %struct.rtx_def* [ %146, %cond.true.277 ], [ %call285, %cond.false.281 ]
  br label %cond.end.289

cond.false.288:                                   ; preds = %land.lhs.true.262
  br label %cond.end.289

cond.end.289:                                     ; preds = %cond.false.288, %cond.end.286
  %cond290 = phi %struct.rtx_def* [ %cond287, %cond.end.286 ], [ null, %cond.false.288 ]
  store %struct.rtx_def* %cond290, %struct.rtx_def** %temp, align 8
  %cmp291 = icmp ne %struct.rtx_def* %cond290, null
  br i1 %cmp291, label %land.lhs.true.293, label %if.end.594

land.lhs.true.293:                                ; preds = %cond.end.289
  %150 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld294 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %150, i32 0, i32 1
  %arrayidx295 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld294, i32 0, i64 1
  %rtx296 = bitcast %union.rtunion_def* %arrayidx295 to %struct.rtx_def**
  %151 = load %struct.rtx_def*, %struct.rtx_def** %rtx296, align 8
  %152 = bitcast %struct.rtx_def* %151 to i32*
  %bf.load297 = load i32, i32* %152, align 8
  %bf.clear298 = and i32 %bf.load297, 65535
  %cmp299 = icmp eq i32 %bf.clear298, 54
  br i1 %cmp299, label %land.lhs.true.309, label %lor.lhs.false.301

lor.lhs.false.301:                                ; preds = %land.lhs.true.293
  %153 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld302 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1
  %arrayidx303 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld302, i32 0, i64 1
  %rtx304 = bitcast %union.rtunion_def* %arrayidx303 to %struct.rtx_def**
  %154 = load %struct.rtx_def*, %struct.rtx_def** %rtx304, align 8
  %155 = bitcast %struct.rtx_def* %154 to i32*
  %bf.load305 = load i32, i32* %155, align 8
  %bf.clear306 = and i32 %bf.load305, 65535
  %cmp307 = icmp eq i32 %bf.clear306, 55
  br i1 %cmp307, label %land.lhs.true.309, label %if.end.594

land.lhs.true.309:                                ; preds = %lor.lhs.false.301, %land.lhs.true.293
  %156 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld310 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %156, i32 0, i32 1
  %arrayidx311 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld310, i32 0, i64 0
  %rtx312 = bitcast %union.rtunion_def* %arrayidx311 to %struct.rtx_def**
  %157 = load %struct.rtx_def*, %struct.rtx_def** %rtx312, align 8
  %158 = bitcast %struct.rtx_def* %157 to i32*
  %bf.load313 = load i32, i32* %158, align 8
  %bf.clear314 = and i32 %bf.load313, 65535
  %cmp315 = icmp eq i32 %bf.clear314, 61
  br i1 %cmp315, label %land.lhs.true.317, label %if.end.594

land.lhs.true.317:                                ; preds = %land.lhs.true.309
  %159 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld318 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1
  %arrayidx319 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld318, i32 0, i64 0
  %rtx320 = bitcast %union.rtunion_def* %arrayidx319 to %struct.rtx_def**
  %160 = load %struct.rtx_def*, %struct.rtx_def** %rtx320, align 8
  %161 = bitcast %struct.rtx_def* %160 to i32*
  %bf.load321 = load i32, i32* %161, align 8
  %bf.lshr = lshr i32 %bf.load321, 16
  %bf.clear322 = and i32 %bf.lshr, 255
  %idxprom323 = sext i32 %bf.clear322 to i64
  %arrayidx324 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom323
  %162 = load i32, i32* %arrayidx324, align 4
  %cmp325 = icmp eq i32 %162, 1
  br i1 %cmp325, label %land.lhs.true.327, label %if.end.594

land.lhs.true.327:                                ; preds = %land.lhs.true.317
  %163 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld328 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %163, i32 0, i32 1
  %arrayidx329 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld328, i32 0, i64 0
  %rtx330 = bitcast %union.rtunion_def* %arrayidx329 to %struct.rtx_def**
  %164 = load %struct.rtx_def*, %struct.rtx_def** %rtx330, align 8
  %165 = bitcast %struct.rtx_def* %164 to i32*
  %bf.load331 = load i32, i32* %165, align 8
  %bf.lshr332 = lshr i32 %bf.load331, 16
  %bf.clear333 = and i32 %bf.lshr332, 255
  %idxprom334 = sext i32 %bf.clear333 to i64
  %arrayidx335 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom334
  %166 = load i8, i8* %arrayidx335, align 1
  %conv336 = zext i8 %166 to i32
  %167 = load i32, i32* @target_flags, align 4
  %and = and i32 %167, 33554432
  %tobool337 = icmp ne i32 %and, 0
  %cond338 = select i1 %tobool337, i32 8, i32 4
  %mul = mul nsw i32 2, %cond338
  %cmp339 = icmp eq i32 %conv336, %mul
  br i1 %cmp339, label %land.lhs.true.341, label %if.end.594

land.lhs.true.341:                                ; preds = %land.lhs.true.327
  %168 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld342 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %168, i32 0, i32 1
  %arrayidx343 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld342, i32 0, i64 3
  %rtx344 = bitcast %union.rtunion_def* %arrayidx343 to %struct.rtx_def**
  %169 = load %struct.rtx_def*, %struct.rtx_def** %rtx344, align 8
  %170 = bitcast %struct.rtx_def* %169 to i32*
  %bf.load345 = load i32, i32* %170, align 8
  %bf.clear346 = and i32 %bf.load345, 65535
  %cmp347 = icmp eq i32 %bf.clear346, 47
  br i1 %cmp347, label %land.lhs.true.349, label %if.end.594

land.lhs.true.349:                                ; preds = %land.lhs.true.341
  %171 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld350 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %171, i32 0, i32 1
  %arrayidx351 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld350, i32 0, i64 3
  %rtx352 = bitcast %union.rtunion_def* %arrayidx351 to %struct.rtx_def**
  %172 = load %struct.rtx_def*, %struct.rtx_def** %rtx352, align 8
  %fld353 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %172, i32 0, i32 1
  %arrayidx354 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld353, i32 0, i64 0
  %rtx355 = bitcast %union.rtunion_def* %arrayidx354 to %struct.rtx_def**
  %173 = load %struct.rtx_def*, %struct.rtx_def** %rtx355, align 8
  %174 = bitcast %struct.rtx_def* %173 to i32*
  %bf.load356 = load i32, i32* %174, align 8
  %bf.clear357 = and i32 %bf.load356, 65535
  %cmp358 = icmp eq i32 %bf.clear357, 63
  br i1 %cmp358, label %land.lhs.true.360, label %if.end.594

land.lhs.true.360:                                ; preds = %land.lhs.true.349
  %175 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld361 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %175, i32 0, i32 1
  %arrayidx362 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld361, i32 0, i64 3
  %rtx363 = bitcast %union.rtunion_def* %arrayidx362 to %struct.rtx_def**
  %176 = load %struct.rtx_def*, %struct.rtx_def** %rtx363, align 8
  %fld364 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %176, i32 0, i32 1
  %arrayidx365 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld364, i32 0, i64 0
  %rtx366 = bitcast %union.rtunion_def* %arrayidx365 to %struct.rtx_def**
  %177 = load %struct.rtx_def*, %struct.rtx_def** %rtx366, align 8
  %fld367 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %177, i32 0, i32 1
  %arrayidx368 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld367, i32 0, i64 0
  %rtx369 = bitcast %union.rtunion_def* %arrayidx368 to %struct.rtx_def**
  %178 = load %struct.rtx_def*, %struct.rtx_def** %rtx369, align 8
  %179 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld370 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %179, i32 0, i32 1
  %arrayidx371 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld370, i32 0, i64 0
  %rtx372 = bitcast %union.rtunion_def* %arrayidx371 to %struct.rtx_def**
  %180 = load %struct.rtx_def*, %struct.rtx_def** %rtx372, align 8
  %cmp373 = icmp eq %struct.rtx_def* %178, %180
  br i1 %cmp373, label %land.lhs.true.375, label %if.end.594

land.lhs.true.375:                                ; preds = %land.lhs.true.360
  %181 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld376 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %181, i32 0, i32 1
  %arrayidx377 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld376, i32 0, i64 3
  %rtx378 = bitcast %union.rtunion_def* %arrayidx377 to %struct.rtx_def**
  %182 = load %struct.rtx_def*, %struct.rtx_def** %rtx378, align 8
  %fld379 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %182, i32 0, i32 1
  %arrayidx380 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld379, i32 0, i64 0
  %rtx381 = bitcast %union.rtunion_def* %arrayidx380 to %struct.rtx_def**
  %183 = load %struct.rtx_def*, %struct.rtx_def** %rtx381, align 8
  %184 = bitcast %struct.rtx_def* %183 to i32*
  %bf.load382 = load i32, i32* %184, align 8
  %bf.lshr383 = lshr i32 %bf.load382, 16
  %bf.clear384 = and i32 %bf.lshr383, 255
  %idxprom385 = sext i32 %bf.clear384 to i64
  %arrayidx386 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom385
  %185 = load i32, i32* %arrayidx386, align 4
  %cmp387 = icmp eq i32 %185, 1
  br i1 %cmp387, label %land.lhs.true.389, label %if.end.594

land.lhs.true.389:                                ; preds = %land.lhs.true.375
  %186 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld390 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %186, i32 0, i32 1
  %arrayidx391 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld390, i32 0, i64 3
  %rtx392 = bitcast %union.rtunion_def* %arrayidx391 to %struct.rtx_def**
  %187 = load %struct.rtx_def*, %struct.rtx_def** %rtx392, align 8
  %fld393 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %187, i32 0, i32 1
  %arrayidx394 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld393, i32 0, i64 0
  %rtx395 = bitcast %union.rtunion_def* %arrayidx394 to %struct.rtx_def**
  %188 = load %struct.rtx_def*, %struct.rtx_def** %rtx395, align 8
  %189 = bitcast %struct.rtx_def* %188 to i32*
  %bf.load396 = load i32, i32* %189, align 8
  %bf.lshr397 = lshr i32 %bf.load396, 16
  %bf.clear398 = and i32 %bf.lshr397, 255
  %idxprom399 = sext i32 %bf.clear398 to i64
  %arrayidx400 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom399
  %190 = load i8, i8* %arrayidx400, align 1
  %conv401 = zext i8 %190 to i32
  %191 = load i32, i32* @target_flags, align 4
  %and402 = and i32 %191, 33554432
  %tobool403 = icmp ne i32 %and402, 0
  %cond404 = select i1 %tobool403, i32 8, i32 4
  %cmp405 = icmp eq i32 %conv401, %cond404
  br i1 %cmp405, label %land.lhs.true.407, label %if.end.594

land.lhs.true.407:                                ; preds = %land.lhs.true.389
  %192 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld408 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %192, i32 0, i32 1
  %arrayidx409 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld408, i32 0, i64 3
  %rtx410 = bitcast %union.rtunion_def* %arrayidx409 to %struct.rtx_def**
  %193 = load %struct.rtx_def*, %struct.rtx_def** %rtx410, align 8
  %fld411 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %193, i32 0, i32 1
  %arrayidx412 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld411, i32 0, i64 1
  %rtx413 = bitcast %union.rtunion_def* %arrayidx412 to %struct.rtx_def**
  %194 = load %struct.rtx_def*, %struct.rtx_def** %rtx413, align 8
  %195 = bitcast %struct.rtx_def* %194 to i32*
  %bf.load414 = load i32, i32* %195, align 8
  %bf.clear415 = and i32 %bf.load414, 65535
  %cmp416 = icmp eq i32 %bf.clear415, 54
  br i1 %cmp416, label %if.then.418, label %if.end.594

if.then.418:                                      ; preds = %land.lhs.true.407
  %196 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld419 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %196, i32 0, i32 1
  %arrayidx420 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld419, i32 0, i64 1
  %rtx421 = bitcast %union.rtunion_def* %arrayidx420 to %struct.rtx_def**
  %197 = load %struct.rtx_def*, %struct.rtx_def** %rtx421, align 8
  %198 = bitcast %struct.rtx_def* %197 to i32*
  %bf.load422 = load i32, i32* %198, align 8
  %bf.clear423 = and i32 %bf.load422, 65535
  %cmp424 = icmp eq i32 %bf.clear423, 54
  br i1 %cmp424, label %if.then.426, label %if.else

if.then.426:                                      ; preds = %if.then.418
  %199 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld427 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %199, i32 0, i32 1
  %arrayidx428 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld427, i32 0, i64 1
  %rtx429 = bitcast %union.rtunion_def* %arrayidx428 to %struct.rtx_def**
  %200 = load %struct.rtx_def*, %struct.rtx_def** %rtx429, align 8
  %fld430 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %200, i32 0, i32 1
  %arrayidx431 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld430, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx431 to i64*
  %201 = load i64, i64* %rtwint, align 8
  store i64 %201, i64* %lo, align 8
  %202 = load i64, i64* %lo, align 8
  %cmp432 = icmp slt i64 %202, 0
  %cond434 = select i1 %cmp432, i32 -1, i32 0
  %conv435 = sext i32 %cond434 to i64
  store i64 %conv435, i64* %hi, align 8
  br label %if.end.448

if.else:                                          ; preds = %if.then.418
  %203 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld436 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %203, i32 0, i32 1
  %arrayidx437 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld436, i32 0, i64 1
  %rtx438 = bitcast %union.rtunion_def* %arrayidx437 to %struct.rtx_def**
  %204 = load %struct.rtx_def*, %struct.rtx_def** %rtx438, align 8
  %fld439 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %204, i32 0, i32 1
  %arrayidx440 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld439, i32 0, i64 1
  %rtwint441 = bitcast %union.rtunion_def* %arrayidx440 to i64*
  %205 = load i64, i64* %rtwint441, align 8
  store i64 %205, i64* %lo, align 8
  %206 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld442 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %206, i32 0, i32 1
  %arrayidx443 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld442, i32 0, i64 1
  %rtx444 = bitcast %union.rtunion_def* %arrayidx443 to %struct.rtx_def**
  %207 = load %struct.rtx_def*, %struct.rtx_def** %rtx444, align 8
  %fld445 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %207, i32 0, i32 1
  %arrayidx446 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld445, i32 0, i64 2
  %rtwint447 = bitcast %union.rtunion_def* %arrayidx446 to i64*
  %208 = load i64, i64* %rtwint447, align 8
  store i64 %208, i64* %hi, align 8
  br label %if.end.448

if.end.448:                                       ; preds = %if.else, %if.then.426
  %209 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld449 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %209, i32 0, i32 1
  %arrayidx450 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld449, i32 0, i64 3
  %rtx451 = bitcast %union.rtunion_def* %arrayidx450 to %struct.rtx_def**
  %210 = load %struct.rtx_def*, %struct.rtx_def** %rtx451, align 8
  %fld452 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %210, i32 0, i32 1
  %arrayidx453 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld452, i32 0, i64 0
  %rtx454 = bitcast %union.rtunion_def* %arrayidx453 to %struct.rtx_def**
  %211 = load %struct.rtx_def*, %struct.rtx_def** %rtx454, align 8
  %call455 = call i32 @subreg_lowpart_p(%struct.rtx_def* %211)
  %tobool456 = icmp ne i32 %call455, 0
  br i1 %tobool456, label %if.then.457, label %if.else.489

if.then.457:                                      ; preds = %if.end.448
  %212 = load i32, i32* @target_flags, align 4
  %and458 = and i32 %212, 33554432
  %tobool459 = icmp ne i32 %and458, 0
  %cond460 = select i1 %tobool459, i32 64, i32 32
  %cmp461 = icmp slt i32 64, %cond460
  br i1 %cmp461, label %if.then.463, label %if.end.464

if.then.463:                                      ; preds = %if.then.457
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 1681, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__FUNCTION__.try_combine, i32 0, i32 0)) #5
  unreachable

if.end.464:                                       ; preds = %if.then.457
  %213 = load i32, i32* @target_flags, align 4
  %and465 = and i32 %213, 33554432
  %tobool466 = icmp ne i32 %and465, 0
  %cond467 = select i1 %tobool466, i32 64, i32 32
  %sub = sub nsw i32 %cond467, 1
  %sh_prom = zext i32 %sub to i64
  %shl = shl i64 1, %sh_prom
  %shl468 = shl i64 %shl, 1
  %sub469 = sub i64 %shl468, 1
  %neg = xor i64 %sub469, -1
  %214 = load i64, i64* %lo, align 8
  %and470 = and i64 %214, %neg
  store i64 %and470, i64* %lo, align 8
  %215 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld471 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %215, i32 0, i32 1
  %arrayidx472 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld471, i32 0, i64 3
  %rtx473 = bitcast %union.rtunion_def* %arrayidx472 to %struct.rtx_def**
  %216 = load %struct.rtx_def*, %struct.rtx_def** %rtx473, align 8
  %fld474 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %216, i32 0, i32 1
  %arrayidx475 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld474, i32 0, i64 1
  %rtx476 = bitcast %union.rtunion_def* %arrayidx475 to %struct.rtx_def**
  %217 = load %struct.rtx_def*, %struct.rtx_def** %rtx476, align 8
  %fld477 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %217, i32 0, i32 1
  %arrayidx478 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld477, i32 0, i64 0
  %rtwint479 = bitcast %union.rtunion_def* %arrayidx478 to i64*
  %218 = load i64, i64* %rtwint479, align 8
  %219 = load i32, i32* @target_flags, align 4
  %and480 = and i32 %219, 33554432
  %tobool481 = icmp ne i32 %and480, 0
  %cond482 = select i1 %tobool481, i32 64, i32 32
  %sub483 = sub nsw i32 %cond482, 1
  %sh_prom484 = zext i32 %sub483 to i64
  %shl485 = shl i64 1, %sh_prom484
  %shl486 = shl i64 %shl485, 1
  %sub487 = sub i64 %shl486, 1
  %and488 = and i64 %218, %sub487
  %220 = load i64, i64* %lo, align 8
  %or = or i64 %220, %and488
  store i64 %or, i64* %lo, align 8
  br label %if.end.561

if.else.489:                                      ; preds = %if.end.448
  %221 = load i32, i32* @target_flags, align 4
  %and490 = and i32 %221, 33554432
  %tobool491 = icmp ne i32 %and490, 0
  %cond492 = select i1 %tobool491, i32 64, i32 32
  %cmp493 = icmp eq i32 64, %cond492
  br i1 %cmp493, label %if.then.495, label %if.else.505

if.then.495:                                      ; preds = %if.else.489
  %222 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld496 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %222, i32 0, i32 1
  %arrayidx497 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld496, i32 0, i64 3
  %rtx498 = bitcast %union.rtunion_def* %arrayidx497 to %struct.rtx_def**
  %223 = load %struct.rtx_def*, %struct.rtx_def** %rtx498, align 8
  %fld499 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %223, i32 0, i32 1
  %arrayidx500 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld499, i32 0, i64 1
  %rtx501 = bitcast %union.rtunion_def* %arrayidx500 to %struct.rtx_def**
  %224 = load %struct.rtx_def*, %struct.rtx_def** %rtx501, align 8
  %fld502 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %224, i32 0, i32 1
  %arrayidx503 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld502, i32 0, i64 0
  %rtwint504 = bitcast %union.rtunion_def* %arrayidx503 to i64*
  %225 = load i64, i64* %rtwint504, align 8
  store i64 %225, i64* %hi, align 8
  br label %if.end.560

if.else.505:                                      ; preds = %if.else.489
  %226 = load i32, i32* @target_flags, align 4
  %and506 = and i32 %226, 33554432
  %tobool507 = icmp ne i32 %and506, 0
  %cond508 = select i1 %tobool507, i32 64, i32 32
  %mul509 = mul nsw i32 2, %cond508
  %cmp510 = icmp sge i32 64, %mul509
  br i1 %cmp510, label %if.then.512, label %if.else.558

if.then.512:                                      ; preds = %if.else.505
  %227 = load i64, i64* %lo, align 8
  %shr = lshr i64 %227, 63
  %conv513 = trunc i64 %shr to i32
  %sub514 = sub nsw i32 0, %conv513
  store i32 %sub514, i32* %sign, align 4
  %228 = load i32, i32* @target_flags, align 4
  %and515 = and i32 %228, 33554432
  %tobool516 = icmp ne i32 %and515, 0
  %cond517 = select i1 %tobool516, i32 64, i32 32
  %sub518 = sub nsw i32 %cond517, 1
  %sh_prom519 = zext i32 %sub518 to i64
  %shl520 = shl i64 1, %sh_prom519
  %shl521 = shl i64 %shl520, 1
  %sub522 = sub i64 %shl521, 1
  %229 = load i32, i32* @target_flags, align 4
  %and523 = and i32 %229, 33554432
  %tobool524 = icmp ne i32 %and523, 0
  %cond525 = select i1 %tobool524, i32 64, i32 32
  %sub526 = sub nsw i32 %cond525, 1
  %sh_prom527 = zext i32 %sub526 to i64
  %shl528 = shl i64 %sub522, %sh_prom527
  %shl529 = shl i64 %shl528, 1
  %neg530 = xor i64 %shl529, -1
  %230 = load i64, i64* %lo, align 8
  %and531 = and i64 %230, %neg530
  store i64 %and531, i64* %lo, align 8
  %231 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld532 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %231, i32 0, i32 1
  %arrayidx533 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld532, i32 0, i64 3
  %rtx534 = bitcast %union.rtunion_def* %arrayidx533 to %struct.rtx_def**
  %232 = load %struct.rtx_def*, %struct.rtx_def** %rtx534, align 8
  %fld535 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %232, i32 0, i32 1
  %arrayidx536 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld535, i32 0, i64 1
  %rtx537 = bitcast %union.rtunion_def* %arrayidx536 to %struct.rtx_def**
  %233 = load %struct.rtx_def*, %struct.rtx_def** %rtx537, align 8
  %fld538 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %233, i32 0, i32 1
  %arrayidx539 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld538, i32 0, i64 0
  %rtwint540 = bitcast %union.rtunion_def* %arrayidx539 to i64*
  %234 = load i64, i64* %rtwint540, align 8
  %235 = load i32, i32* @target_flags, align 4
  %and541 = and i32 %235, 33554432
  %tobool542 = icmp ne i32 %and541, 0
  %cond543 = select i1 %tobool542, i32 64, i32 32
  %sub544 = sub nsw i32 %cond543, 1
  %sh_prom545 = zext i32 %sub544 to i64
  %shl546 = shl i64 %234, %sh_prom545
  %shl547 = shl i64 %shl546, 1
  %236 = load i64, i64* %lo, align 8
  %or548 = or i64 %236, %shl547
  store i64 %or548, i64* %lo, align 8
  %237 = load i64, i64* %hi, align 8
  %238 = load i32, i32* %sign, align 4
  %conv549 = sext i32 %238 to i64
  %cmp550 = icmp eq i64 %237, %conv549
  br i1 %cmp550, label %if.then.552, label %if.end.557

if.then.552:                                      ; preds = %if.then.512
  %239 = load i64, i64* %lo, align 8
  %cmp553 = icmp slt i64 %239, 0
  %cond555 = select i1 %cmp553, i32 -1, i32 0
  %conv556 = sext i32 %cond555 to i64
  store i64 %conv556, i64* %hi, align 8
  br label %if.end.557

if.end.557:                                       ; preds = %if.then.552, %if.then.512
  br label %if.end.559

if.else.558:                                      ; preds = %if.else.505
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 1704, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__FUNCTION__.try_combine, i32 0, i32 0)) #5
  unreachable

if.end.559:                                       ; preds = %if.end.557
  br label %if.end.560

if.end.560:                                       ; preds = %if.end.559, %if.then.495
  br label %if.end.561

if.end.561:                                       ; preds = %if.end.560, %if.end.464
  %240 = load i32, i32* @combine_merges, align 4
  %inc562 = add nsw i32 %240, 1
  store i32 %inc562, i32* @combine_merges, align 4
  %241 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  store %struct.rtx_def* %241, %struct.rtx_def** @subst_insn, align 8
  %242 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld563 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %242, i32 0, i32 1
  %arrayidx564 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld563, i32 0, i64 0
  %rtint565 = bitcast %union.rtunion_def* %arrayidx564 to i32*
  %243 = load i32, i32* %rtint565, align 4
  %244 = load i32, i32* @max_uid_cuid, align 4
  %cmp566 = icmp sgt i32 %243, %244
  br i1 %cmp566, label %cond.true.568, label %cond.false.570

cond.true.568:                                    ; preds = %if.end.561
  %245 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call569 = call i32 @insn_cuid(%struct.rtx_def* %245)
  br label %cond.end.576

cond.false.570:                                   ; preds = %if.end.561
  %246 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld571 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %246, i32 0, i32 1
  %arrayidx572 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld571, i32 0, i64 0
  %rtint573 = bitcast %union.rtunion_def* %arrayidx572 to i32*
  %247 = load i32, i32* %rtint573, align 4
  %idxprom574 = sext i32 %247 to i64
  %248 = load i32*, i32** @uid_cuid, align 8
  %arrayidx575 = getelementptr inbounds i32, i32* %248, i64 %idxprom574
  %249 = load i32, i32* %arrayidx575, align 4
  br label %cond.end.576

cond.end.576:                                     ; preds = %cond.false.570, %cond.true.568
  %cond577 = phi i32 [ %call569, %cond.true.568 ], [ %249, %cond.false.570 ]
  store i32 %cond577, i32* @subst_low_cuid, align 4
  store i32 0, i32* %added_sets_1, align 4
  store i32 0, i32* %added_sets_2, align 4
  %250 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld578 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %250, i32 0, i32 1
  %arrayidx579 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld578, i32 0, i64 0
  %rtx580 = bitcast %union.rtunion_def* %arrayidx579 to %struct.rtx_def**
  %251 = load %struct.rtx_def*, %struct.rtx_def** %rtx580, align 8
  store %struct.rtx_def* %251, %struct.rtx_def** %i2dest, align 8
  %252 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld581 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %252, i32 0, i32 1
  %arrayidx582 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld581, i32 0, i64 1
  %rtx583 = bitcast %union.rtunion_def* %arrayidx582 to %struct.rtx_def**
  %253 = load i64, i64* %lo, align 8
  %254 = load i64, i64* %hi, align 8
  %255 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld584 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %255, i32 0, i32 1
  %arrayidx585 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld584, i32 0, i64 0
  %rtx586 = bitcast %union.rtunion_def* %arrayidx585 to %struct.rtx_def**
  %256 = load %struct.rtx_def*, %struct.rtx_def** %rtx586, align 8
  %257 = bitcast %struct.rtx_def* %256 to i32*
  %bf.load587 = load i32, i32* %257, align 8
  %bf.lshr588 = lshr i32 %bf.load587, 16
  %bf.clear589 = and i32 %bf.lshr588, 255
  %call590 = call %struct.rtx_def* @immed_double_const(i64 %253, i64 %254, i32 %bf.clear589)
  call void @do_SUBST(%struct.rtx_def** %rtx583, %struct.rtx_def* %call590)
  %258 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld591 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %258, i32 0, i32 1
  %arrayidx592 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld591, i32 0, i64 3
  %rtx593 = bitcast %union.rtunion_def* %arrayidx592 to %struct.rtx_def**
  %259 = load %struct.rtx_def*, %struct.rtx_def** %rtx593, align 8
  store %struct.rtx_def* %259, %struct.rtx_def** %newpat, align 8
  br label %validate_replacement

if.end.594:                                       ; preds = %land.lhs.true.407, %land.lhs.true.389, %land.lhs.true.375, %land.lhs.true.360, %land.lhs.true.349, %land.lhs.true.341, %land.lhs.true.327, %land.lhs.true.317, %land.lhs.true.309, %lor.lhs.false.301, %cond.end.289, %if.end.260
  %260 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %cmp595 = icmp eq %struct.rtx_def* %260, null
  br i1 %cmp595, label %land.lhs.true.597, label %if.end.809

land.lhs.true.597:                                ; preds = %if.end.594
  %261 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld598 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %261, i32 0, i32 1
  %arrayidx599 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld598, i32 0, i64 3
  %rtx600 = bitcast %union.rtunion_def* %arrayidx599 to %struct.rtx_def**
  %262 = load %struct.rtx_def*, %struct.rtx_def** %rtx600, align 8
  %263 = bitcast %struct.rtx_def* %262 to i32*
  %bf.load601 = load i32, i32* %263, align 8
  %bf.clear602 = and i32 %bf.load601, 65535
  %cmp603 = icmp eq i32 %bf.clear602, 39
  br i1 %cmp603, label %land.lhs.true.605, label %if.end.809

land.lhs.true.605:                                ; preds = %land.lhs.true.597
  %264 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld606 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %264, i32 0, i32 1
  %arrayidx607 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld606, i32 0, i64 3
  %rtx608 = bitcast %union.rtunion_def* %arrayidx607 to %struct.rtx_def**
  %265 = load %struct.rtx_def*, %struct.rtx_def** %rtx608, align 8
  %fld609 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %265, i32 0, i32 1
  %arrayidx610 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld609, i32 0, i64 0
  %rtvec611 = bitcast %union.rtunion_def* %arrayidx610 to %struct.rtvec_def**
  %266 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec611, align 8
  %num_elem612 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %266, i32 0, i32 0
  %267 = load i32, i32* %num_elem612, align 4
  %cmp613 = icmp sge i32 %267, 2
  br i1 %cmp613, label %land.lhs.true.615, label %if.end.809

land.lhs.true.615:                                ; preds = %land.lhs.true.605
  %268 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld616 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %268, i32 0, i32 1
  %arrayidx617 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld616, i32 0, i64 3
  %rtx618 = bitcast %union.rtunion_def* %arrayidx617 to %struct.rtx_def**
  %269 = load %struct.rtx_def*, %struct.rtx_def** %rtx618, align 8
  %fld619 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %269, i32 0, i32 1
  %arrayidx620 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld619, i32 0, i64 0
  %rtvec621 = bitcast %union.rtunion_def* %arrayidx620 to %struct.rtvec_def**
  %270 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec621, align 8
  %elem622 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %270, i32 0, i32 1
  %arrayidx623 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem622, i32 0, i64 0
  %271 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx623, align 8
  %272 = bitcast %struct.rtx_def* %271 to i32*
  %bf.load624 = load i32, i32* %272, align 8
  %bf.clear625 = and i32 %bf.load624, 65535
  %cmp626 = icmp eq i32 %bf.clear625, 47
  br i1 %cmp626, label %land.lhs.true.628, label %if.end.809

land.lhs.true.628:                                ; preds = %land.lhs.true.615
  %273 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld629 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %273, i32 0, i32 1
  %arrayidx630 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld629, i32 0, i64 3
  %rtx631 = bitcast %union.rtunion_def* %arrayidx630 to %struct.rtx_def**
  %274 = load %struct.rtx_def*, %struct.rtx_def** %rtx631, align 8
  %fld632 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %274, i32 0, i32 1
  %arrayidx633 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld632, i32 0, i64 0
  %rtvec634 = bitcast %union.rtunion_def* %arrayidx633 to %struct.rtvec_def**
  %275 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec634, align 8
  %elem635 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %275, i32 0, i32 1
  %arrayidx636 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem635, i32 0, i64 0
  %276 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx636, align 8
  %fld637 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %276, i32 0, i32 1
  %arrayidx638 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld637, i32 0, i64 0
  %rtx639 = bitcast %union.rtunion_def* %arrayidx638 to %struct.rtx_def**
  %277 = load %struct.rtx_def*, %struct.rtx_def** %rtx639, align 8
  %278 = bitcast %struct.rtx_def* %277 to i32*
  %bf.load640 = load i32, i32* %278, align 8
  %bf.lshr641 = lshr i32 %bf.load640, 16
  %bf.clear642 = and i32 %bf.lshr641, 255
  %idxprom643 = sext i32 %bf.clear642 to i64
  %arrayidx644 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom643
  %279 = load i32, i32* %arrayidx644, align 4
  %cmp645 = icmp eq i32 %279, 4
  br i1 %cmp645, label %land.lhs.true.647, label %if.end.809

land.lhs.true.647:                                ; preds = %land.lhs.true.628
  %280 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld648 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %280, i32 0, i32 1
  %arrayidx649 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld648, i32 0, i64 3
  %rtx650 = bitcast %union.rtunion_def* %arrayidx649 to %struct.rtx_def**
  %281 = load %struct.rtx_def*, %struct.rtx_def** %rtx650, align 8
  %fld651 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %281, i32 0, i32 1
  %arrayidx652 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld651, i32 0, i64 0
  %rtvec653 = bitcast %union.rtunion_def* %arrayidx652 to %struct.rtvec_def**
  %282 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec653, align 8
  %elem654 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %282, i32 0, i32 1
  %arrayidx655 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem654, i32 0, i64 0
  %283 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx655, align 8
  %fld656 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %283, i32 0, i32 1
  %arrayidx657 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld656, i32 0, i64 1
  %rtx658 = bitcast %union.rtunion_def* %arrayidx657 to %struct.rtx_def**
  %284 = load %struct.rtx_def*, %struct.rtx_def** %rtx658, align 8
  %285 = bitcast %struct.rtx_def* %284 to i32*
  %bf.load659 = load i32, i32* %285, align 8
  %bf.clear660 = and i32 %bf.load659, 65535
  %cmp661 = icmp eq i32 %bf.clear660, 74
  br i1 %cmp661, label %land.lhs.true.663, label %if.end.809

land.lhs.true.663:                                ; preds = %land.lhs.true.647
  %286 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld664 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %286, i32 0, i32 1
  %arrayidx665 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld664, i32 0, i64 3
  %rtx666 = bitcast %union.rtunion_def* %arrayidx665 to %struct.rtx_def**
  %287 = load %struct.rtx_def*, %struct.rtx_def** %rtx666, align 8
  %fld667 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %287, i32 0, i32 1
  %arrayidx668 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld667, i32 0, i64 0
  %rtvec669 = bitcast %union.rtunion_def* %arrayidx668 to %struct.rtvec_def**
  %288 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec669, align 8
  %elem670 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %288, i32 0, i32 1
  %arrayidx671 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem670, i32 0, i64 0
  %289 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx671, align 8
  %fld672 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %289, i32 0, i32 1
  %arrayidx673 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld672, i32 0, i64 1
  %rtx674 = bitcast %union.rtunion_def* %arrayidx673 to %struct.rtx_def**
  %290 = load %struct.rtx_def*, %struct.rtx_def** %rtx674, align 8
  %fld675 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %290, i32 0, i32 1
  %arrayidx676 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld675, i32 0, i64 1
  %rtx677 = bitcast %union.rtunion_def* %arrayidx676 to %struct.rtx_def**
  %291 = load %struct.rtx_def*, %struct.rtx_def** %rtx677, align 8
  %292 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp678 = icmp eq %struct.rtx_def* %291, %292
  br i1 %cmp678, label %land.lhs.true.680, label %if.end.809

land.lhs.true.680:                                ; preds = %land.lhs.true.663
  %293 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld681 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %293, i32 0, i32 1
  %arrayidx682 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld681, i32 0, i64 3
  %rtx683 = bitcast %union.rtunion_def* %arrayidx682 to %struct.rtx_def**
  %294 = load %struct.rtx_def*, %struct.rtx_def** %rtx683, align 8
  %fld684 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %294, i32 0, i32 1
  %arrayidx685 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld684, i32 0, i64 0
  %rtvec686 = bitcast %union.rtunion_def* %arrayidx685 to %struct.rtvec_def**
  %295 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec686, align 8
  %elem687 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %295, i32 0, i32 1
  %arrayidx688 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem687, i32 0, i64 1
  %296 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx688, align 8
  %297 = bitcast %struct.rtx_def* %296 to i32*
  %bf.load689 = load i32, i32* %297, align 8
  %bf.clear690 = and i32 %bf.load689, 65535
  %cmp691 = icmp eq i32 %bf.clear690, 47
  br i1 %cmp691, label %land.lhs.true.693, label %if.end.809

land.lhs.true.693:                                ; preds = %land.lhs.true.680
  %298 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld694 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %298, i32 0, i32 1
  %arrayidx695 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld694, i32 0, i64 3
  %rtx696 = bitcast %union.rtunion_def* %arrayidx695 to %struct.rtx_def**
  %299 = load %struct.rtx_def*, %struct.rtx_def** %rtx696, align 8
  %fld697 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %299, i32 0, i32 1
  %arrayidx698 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld697, i32 0, i64 0
  %rtvec699 = bitcast %union.rtunion_def* %arrayidx698 to %struct.rtvec_def**
  %300 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec699, align 8
  %elem700 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %300, i32 0, i32 1
  %arrayidx701 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem700, i32 0, i64 1
  %301 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx701, align 8
  %fld702 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %301, i32 0, i32 1
  %arrayidx703 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld702, i32 0, i64 0
  %rtx704 = bitcast %union.rtunion_def* %arrayidx703 to %struct.rtx_def**
  %302 = load %struct.rtx_def*, %struct.rtx_def** %rtx704, align 8
  %303 = bitcast %struct.rtx_def* %302 to i32*
  %bf.load705 = load i32, i32* %303, align 8
  %bf.clear706 = and i32 %bf.load705, 65535
  %cmp707 = icmp eq i32 %bf.clear706, 61
  br i1 %cmp707, label %land.lhs.true.709, label %if.end.809

land.lhs.true.709:                                ; preds = %land.lhs.true.693
  %304 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld710 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %304, i32 0, i32 1
  %arrayidx711 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld710, i32 0, i64 3
  %rtx712 = bitcast %union.rtunion_def* %arrayidx711 to %struct.rtx_def**
  %305 = load %struct.rtx_def*, %struct.rtx_def** %rtx712, align 8
  %fld713 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %305, i32 0, i32 1
  %arrayidx714 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld713, i32 0, i64 0
  %rtvec715 = bitcast %union.rtunion_def* %arrayidx714 to %struct.rtvec_def**
  %306 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec715, align 8
  %elem716 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %306, i32 0, i32 1
  %arrayidx717 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem716, i32 0, i64 0
  %307 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx717, align 8
  %fld718 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %307, i32 0, i32 1
  %arrayidx719 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld718, i32 0, i64 1
  %rtx720 = bitcast %union.rtunion_def* %arrayidx719 to %struct.rtx_def**
  %308 = load %struct.rtx_def*, %struct.rtx_def** %rtx720, align 8
  %fld721 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %308, i32 0, i32 1
  %arrayidx722 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld721, i32 0, i64 0
  %rtx723 = bitcast %union.rtunion_def* %arrayidx722 to %struct.rtx_def**
  %309 = load %struct.rtx_def*, %struct.rtx_def** %rtx723, align 8
  %310 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld724 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %310, i32 0, i32 1
  %arrayidx725 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld724, i32 0, i64 3
  %rtx726 = bitcast %union.rtunion_def* %arrayidx725 to %struct.rtx_def**
  %311 = load %struct.rtx_def*, %struct.rtx_def** %rtx726, align 8
  %fld727 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %311, i32 0, i32 1
  %arrayidx728 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld727, i32 0, i64 0
  %rtvec729 = bitcast %union.rtunion_def* %arrayidx728 to %struct.rtvec_def**
  %312 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec729, align 8
  %elem730 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %312, i32 0, i32 1
  %arrayidx731 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem730, i32 0, i64 1
  %313 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx731, align 8
  %fld732 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %313, i32 0, i32 1
  %arrayidx733 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld732, i32 0, i64 1
  %rtx734 = bitcast %union.rtunion_def* %arrayidx733 to %struct.rtx_def**
  %314 = load %struct.rtx_def*, %struct.rtx_def** %rtx734, align 8
  %call735 = call i32 @rtx_equal_p(%struct.rtx_def* %309, %struct.rtx_def* %314)
  %tobool736 = icmp ne i32 %call735, 0
  br i1 %tobool736, label %if.then.737, label %if.end.809

if.then.737:                                      ; preds = %land.lhs.true.709
  %315 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld738 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %315, i32 0, i32 1
  %arrayidx739 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld738, i32 0, i64 3
  %rtx740 = bitcast %union.rtunion_def* %arrayidx739 to %struct.rtx_def**
  %316 = load %struct.rtx_def*, %struct.rtx_def** %rtx740, align 8
  %fld741 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %316, i32 0, i32 1
  %arrayidx742 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld741, i32 0, i64 0
  %rtvec743 = bitcast %union.rtunion_def* %arrayidx742 to %struct.rtvec_def**
  %317 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec743, align 8
  %num_elem744 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %317, i32 0, i32 0
  %318 = load i32, i32* %num_elem744, align 4
  %sub745 = sub nsw i32 %318, 1
  store i32 %sub745, i32* %i, align 4
  br label %for.cond.746

for.cond.746:                                     ; preds = %for.inc.765, %if.then.737
  %319 = load i32, i32* %i, align 4
  %cmp747 = icmp sge i32 %319, 2
  br i1 %cmp747, label %for.body.749, label %for.end.766

for.body.749:                                     ; preds = %for.cond.746
  %320 = load i32, i32* %i, align 4
  %idxprom750 = sext i32 %320 to i64
  %321 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld751 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %321, i32 0, i32 1
  %arrayidx752 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld751, i32 0, i64 3
  %rtx753 = bitcast %union.rtunion_def* %arrayidx752 to %struct.rtx_def**
  %322 = load %struct.rtx_def*, %struct.rtx_def** %rtx753, align 8
  %fld754 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %322, i32 0, i32 1
  %arrayidx755 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld754, i32 0, i64 0
  %rtvec756 = bitcast %union.rtunion_def* %arrayidx755 to %struct.rtvec_def**
  %323 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec756, align 8
  %elem757 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %323, i32 0, i32 1
  %arrayidx758 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem757, i32 0, i64 %idxprom750
  %324 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx758, align 8
  %325 = bitcast %struct.rtx_def* %324 to i32*
  %bf.load759 = load i32, i32* %325, align 8
  %bf.clear760 = and i32 %bf.load759, 65535
  %cmp761 = icmp ne i32 %bf.clear760, 49
  br i1 %cmp761, label %if.then.763, label %if.end.764

if.then.763:                                      ; preds = %for.body.749
  br label %for.end.766

if.end.764:                                       ; preds = %for.body.749
  br label %for.inc.765

for.inc.765:                                      ; preds = %if.end.764
  %326 = load i32, i32* %i, align 4
  %dec = add nsw i32 %326, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond.746

for.end.766:                                      ; preds = %if.then.763, %for.cond.746
  %327 = load i32, i32* %i, align 4
  %cmp767 = icmp eq i32 %327, 1
  br i1 %cmp767, label %if.then.769, label %if.end.808

if.then.769:                                      ; preds = %for.end.766
  %328 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld770 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %328, i32 0, i32 1
  %arrayidx771 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld770, i32 0, i64 0
  %rtint772 = bitcast %union.rtunion_def* %arrayidx771 to i32*
  %329 = load i32, i32* %rtint772, align 4
  %330 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %331 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld773 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %331, i32 0, i32 1
  %arrayidx774 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld773, i32 0, i64 3
  %rtx775 = bitcast %union.rtunion_def* %arrayidx774 to %struct.rtx_def**
  %332 = load %struct.rtx_def*, %struct.rtx_def** %rtx775, align 8
  %fld776 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %332, i32 0, i32 1
  %arrayidx777 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld776, i32 0, i64 0
  %rtvec778 = bitcast %union.rtunion_def* %arrayidx777 to %struct.rtvec_def**
  %333 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec778, align 8
  %elem779 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %333, i32 0, i32 1
  %arrayidx780 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem779, i32 0, i64 1
  %334 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx780, align 8
  %call781 = call %struct.rtx_def* @gen_rtx_fmt_iuueiee(i32 32, i32 0, i32 %329, %struct.rtx_def* null, %struct.rtx_def* %330, %struct.rtx_def* %334, i32 -1, %struct.rtx_def* null, %struct.rtx_def* null)
  store %struct.rtx_def* %call781, %struct.rtx_def** %i1.addr, align 8
  store %struct.rtx_def* %call781, %struct.rtx_def** @subst_prev_insn, align 8
  %335 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld782 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %335, i32 0, i32 1
  %arrayidx783 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld782, i32 0, i64 3
  %rtx784 = bitcast %union.rtunion_def* %arrayidx783 to %struct.rtx_def**
  %336 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld785 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %336, i32 0, i32 1
  %arrayidx786 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld785, i32 0, i64 3
  %rtx787 = bitcast %union.rtunion_def* %arrayidx786 to %struct.rtx_def**
  %337 = load %struct.rtx_def*, %struct.rtx_def** %rtx787, align 8
  %fld788 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %337, i32 0, i32 1
  %arrayidx789 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld788, i32 0, i64 0
  %rtvec790 = bitcast %union.rtunion_def* %arrayidx789 to %struct.rtvec_def**
  %338 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec790, align 8
  %elem791 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %338, i32 0, i32 1
  %arrayidx792 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem791, i32 0, i64 0
  %339 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx792, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx784, %struct.rtx_def* %339)
  %340 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld793 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %340, i32 0, i32 1
  %arrayidx794 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld793, i32 0, i64 3
  %rtx795 = bitcast %union.rtunion_def* %arrayidx794 to %struct.rtx_def**
  %341 = load %struct.rtx_def*, %struct.rtx_def** %rtx795, align 8
  %fld796 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %341, i32 0, i32 1
  %arrayidx797 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld796, i32 0, i64 1
  %rtx798 = bitcast %union.rtunion_def* %arrayidx797 to %struct.rtx_def**
  %342 = load %struct.rtx_def*, %struct.rtx_def** %rtx798, align 8
  %fld799 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %342, i32 0, i32 1
  %arrayidx800 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld799, i32 0, i64 0
  %rtx801 = bitcast %union.rtunion_def* %arrayidx800 to %struct.rtx_def**
  %343 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %fld802 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %343, i32 0, i32 1
  %arrayidx803 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld802, i32 0, i64 3
  %rtx804 = bitcast %union.rtunion_def* %arrayidx803 to %struct.rtx_def**
  %344 = load %struct.rtx_def*, %struct.rtx_def** %rtx804, align 8
  %fld805 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %344, i32 0, i32 1
  %arrayidx806 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld805, i32 0, i64 0
  %rtx807 = bitcast %union.rtunion_def* %arrayidx806 to %struct.rtx_def**
  %345 = load %struct.rtx_def*, %struct.rtx_def** %rtx807, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx801, %struct.rtx_def* %345)
  br label %if.end.808

if.end.808:                                       ; preds = %if.then.769, %for.end.766
  br label %if.end.809

if.end.809:                                       ; preds = %if.end.808, %land.lhs.true.709, %land.lhs.true.693, %land.lhs.true.680, %land.lhs.true.663, %land.lhs.true.647, %land.lhs.true.628, %land.lhs.true.615, %land.lhs.true.605, %land.lhs.true.597, %if.end.594
  %346 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %347 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %348 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %call810 = call i32 @can_combine_p(%struct.rtx_def* %346, %struct.rtx_def* %347, %struct.rtx_def* %348, %struct.rtx_def* null, %struct.rtx_def** %i2dest, %struct.rtx_def** %i2src)
  %tobool811 = icmp ne i32 %call810, 0
  br i1 %tobool811, label %lor.lhs.false.812, label %if.then.817

lor.lhs.false.812:                                ; preds = %if.end.809
  %349 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %tobool813 = icmp ne %struct.rtx_def* %349, null
  br i1 %tobool813, label %land.lhs.true.814, label %if.end.818

land.lhs.true.814:                                ; preds = %lor.lhs.false.812
  %350 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %351 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %352 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call815 = call i32 @can_combine_p(%struct.rtx_def* %350, %struct.rtx_def* %351, %struct.rtx_def* null, %struct.rtx_def* %352, %struct.rtx_def** %i1dest, %struct.rtx_def** %i1src)
  %tobool816 = icmp ne i32 %call815, 0
  br i1 %tobool816, label %if.end.818, label %if.then.817

if.then.817:                                      ; preds = %land.lhs.true.814, %if.end.809
  call void @undo_all()
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.818:                                       ; preds = %land.lhs.true.814, %lor.lhs.false.812
  %353 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %354 = load %struct.rtx_def*, %struct.rtx_def** %i2src, align 8
  %call819 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %353, %struct.rtx_def* %354)
  store i32 %call819, i32* %i2dest_in_i2src, align 4
  %355 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %tobool820 = icmp ne %struct.rtx_def* %355, null
  br i1 %tobool820, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end.818
  %356 = load %struct.rtx_def*, %struct.rtx_def** %i1dest, align 8
  %357 = load %struct.rtx_def*, %struct.rtx_def** %i1src, align 8
  %call821 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %356, %struct.rtx_def* %357)
  %tobool822 = icmp ne i32 %call821, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.818
  %358 = phi i1 [ false, %if.end.818 ], [ %tobool822, %land.rhs ]
  %land.ext = zext i1 %358 to i32
  store i32 %land.ext, i32* %i1dest_in_i1src, align 4
  %359 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %tobool823 = icmp ne %struct.rtx_def* %359, null
  br i1 %tobool823, label %land.rhs.824, label %land.end.827

land.rhs.824:                                     ; preds = %land.end
  %360 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %361 = load %struct.rtx_def*, %struct.rtx_def** %i1src, align 8
  %call825 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %360, %struct.rtx_def* %361)
  %tobool826 = icmp ne i32 %call825, 0
  br label %land.end.827

land.end.827:                                     ; preds = %land.rhs.824, %land.end
  %362 = phi i1 [ false, %land.end ], [ %tobool826, %land.rhs.824 ]
  %land.ext828 = zext i1 %362 to i32
  store i32 %land.ext828, i32* %i2dest_in_i1src, align 4
  %363 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %tobool829 = icmp ne %struct.rtx_def* %363, null
  br i1 %tobool829, label %land.rhs.830, label %land.end.833

land.rhs.830:                                     ; preds = %land.end.827
  %364 = load %struct.rtx_def*, %struct.rtx_def** %i1dest, align 8
  %365 = load %struct.rtx_def*, %struct.rtx_def** %i2src, align 8
  %call831 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %364, %struct.rtx_def* %365)
  %tobool832 = icmp ne i32 %call831, 0
  %lnot = xor i1 %tobool832, true
  br label %land.end.833

land.end.833:                                     ; preds = %land.rhs.830, %land.end.827
  %366 = phi i1 [ false, %land.end.827 ], [ %lnot, %land.rhs.830 ]
  %land.ext834 = zext i1 %366 to i32
  store i32 %land.ext834, i32* %i1_feeds_i3, align 4
  %367 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %368 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld835 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %368, i32 0, i32 1
  %arrayidx836 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld835, i32 0, i64 3
  %rtx837 = bitcast %union.rtunion_def* %arrayidx836 to %struct.rtx_def**
  %369 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %370 = load %struct.rtx_def*, %struct.rtx_def** %i1dest, align 8
  %371 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %tobool838 = icmp ne %struct.rtx_def* %371, null
  br i1 %tobool838, label %land.lhs.true.839, label %land.end.843

land.lhs.true.839:                                ; preds = %land.end.833
  %372 = load i32, i32* %i2dest_in_i1src, align 4
  %tobool840 = icmp ne i32 %372, 0
  br i1 %tobool840, label %land.rhs.841, label %land.end.843

land.rhs.841:                                     ; preds = %land.lhs.true.839
  %373 = load i32, i32* %i1_feeds_i3, align 4
  %tobool842 = icmp ne i32 %373, 0
  br label %land.end.843

land.end.843:                                     ; preds = %land.rhs.841, %land.lhs.true.839, %land.end.833
  %374 = phi i1 [ false, %land.lhs.true.839 ], [ false, %land.end.833 ], [ %tobool842, %land.rhs.841 ]
  %land.ext844 = zext i1 %374 to i32
  %call845 = call i32 @combinable_i3pat(%struct.rtx_def* %367, %struct.rtx_def** %rtx837, %struct.rtx_def* %369, %struct.rtx_def* %370, i32 %land.ext844, %struct.rtx_def** %i3dest_killed)
  %tobool846 = icmp ne i32 %call845, 0
  br i1 %tobool846, label %if.end.848, label %if.then.847

if.then.847:                                      ; preds = %land.end.843
  call void @undo_all()
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.848:                                       ; preds = %land.end.843
  %375 = load %struct.rtx_def*, %struct.rtx_def** %i2src, align 8
  %376 = bitcast %struct.rtx_def* %375 to i32*
  %bf.load849 = load i32, i32* %376, align 8
  %bf.clear850 = and i32 %bf.load849, 65535
  %cmp851 = icmp eq i32 %bf.clear850, 78
  br i1 %cmp851, label %if.then.880, label %lor.lhs.false.853

lor.lhs.false.853:                                ; preds = %if.end.848
  %377 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %cmp854 = icmp ne %struct.rtx_def* %377, null
  br i1 %cmp854, label %land.lhs.true.856, label %lor.lhs.false.861

land.lhs.true.856:                                ; preds = %lor.lhs.false.853
  %378 = load %struct.rtx_def*, %struct.rtx_def** %i1src, align 8
  %379 = bitcast %struct.rtx_def* %378 to i32*
  %bf.load857 = load i32, i32* %379, align 8
  %bf.clear858 = and i32 %bf.load857, 65535
  %cmp859 = icmp eq i32 %bf.clear858, 78
  br i1 %cmp859, label %if.then.880, label %lor.lhs.false.861

lor.lhs.false.861:                                ; preds = %land.lhs.true.856, %lor.lhs.false.853
  %380 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld862 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %380, i32 0, i32 1
  %arrayidx863 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld862, i32 0, i64 3
  %rtx864 = bitcast %union.rtunion_def* %arrayidx863 to %struct.rtx_def**
  %381 = load %struct.rtx_def*, %struct.rtx_def** %rtx864, align 8
  %382 = bitcast %struct.rtx_def* %381 to i32*
  %bf.load865 = load i32, i32* %382, align 8
  %bf.clear866 = and i32 %bf.load865, 65535
  %cmp867 = icmp eq i32 %bf.clear866, 47
  br i1 %cmp867, label %land.lhs.true.869, label %if.end.881

land.lhs.true.869:                                ; preds = %lor.lhs.false.861
  %383 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld870 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %383, i32 0, i32 1
  %arrayidx871 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld870, i32 0, i64 3
  %rtx872 = bitcast %union.rtunion_def* %arrayidx871 to %struct.rtx_def**
  %384 = load %struct.rtx_def*, %struct.rtx_def** %rtx872, align 8
  %fld873 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %384, i32 0, i32 1
  %arrayidx874 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld873, i32 0, i64 1
  %rtx875 = bitcast %union.rtunion_def* %arrayidx874 to %struct.rtx_def**
  %385 = load %struct.rtx_def*, %struct.rtx_def** %rtx875, align 8
  %386 = bitcast %struct.rtx_def* %385 to i32*
  %bf.load876 = load i32, i32* %386, align 8
  %bf.clear877 = and i32 %bf.load876, 65535
  %cmp878 = icmp eq i32 %bf.clear877, 78
  br i1 %cmp878, label %if.then.880, label %if.end.881

if.then.880:                                      ; preds = %land.lhs.true.869, %land.lhs.true.856, %if.end.848
  store i32 1, i32* %have_mult, align 4
  br label %if.end.881

if.end.881:                                       ; preds = %if.then.880, %land.lhs.true.869, %lor.lhs.false.861
  %387 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %388 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %call882 = call i32 @dead_or_set_p(%struct.rtx_def* %387, %struct.rtx_def* %388)
  %tobool883 = icmp ne i32 %call882, 0
  %lnot884 = xor i1 %tobool883, true
  %lnot.ext = zext i1 %lnot884 to i32
  store i32 %lnot.ext, i32* %added_sets_2, align 4
  %389 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %tobool885 = icmp ne %struct.rtx_def* %389, null
  br i1 %tobool885, label %land.rhs.886, label %land.end.900

land.rhs.886:                                     ; preds = %if.end.881
  %390 = load i32, i32* %i1_feeds_i3, align 4
  %tobool887 = icmp ne i32 %390, 0
  br i1 %tobool887, label %cond.true.888, label %cond.false.890

cond.true.888:                                    ; preds = %land.rhs.886
  %391 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %392 = load %struct.rtx_def*, %struct.rtx_def** %i1dest, align 8
  %call889 = call i32 @dead_or_set_p(%struct.rtx_def* %391, %struct.rtx_def* %392)
  br label %cond.end.895

cond.false.890:                                   ; preds = %land.rhs.886
  %393 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %394 = load %struct.rtx_def*, %struct.rtx_def** %i1dest, align 8
  %call891 = call i32 @dead_or_set_p(%struct.rtx_def* %393, %struct.rtx_def* %394)
  %tobool892 = icmp ne i32 %call891, 0
  br i1 %tobool892, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.false.890
  %395 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %396 = load %struct.rtx_def*, %struct.rtx_def** %i1dest, align 8
  %call893 = call i32 @dead_or_set_p(%struct.rtx_def* %395, %struct.rtx_def* %396)
  %tobool894 = icmp ne i32 %call893, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.false.890
  %397 = phi i1 [ true, %cond.false.890 ], [ %tobool894, %lor.rhs ]
  %lor.ext = zext i1 %397 to i32
  br label %cond.end.895

cond.end.895:                                     ; preds = %lor.end, %cond.true.888
  %cond896 = phi i32 [ %call889, %cond.true.888 ], [ %lor.ext, %lor.end ]
  %tobool897 = icmp ne i32 %cond896, 0
  %lnot898 = xor i1 %tobool897, true
  br label %land.end.900

land.end.900:                                     ; preds = %cond.end.895, %if.end.881
  %398 = phi i1 [ false, %if.end.881 ], [ %lnot898, %cond.end.895 ]
  %land.ext901 = zext i1 %398 to i32
  store i32 %land.ext901, i32* %added_sets_1, align 4
  %399 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld902 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %399, i32 0, i32 1
  %arrayidx903 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld902, i32 0, i64 3
  %rtx904 = bitcast %union.rtunion_def* %arrayidx903 to %struct.rtx_def**
  %400 = load %struct.rtx_def*, %struct.rtx_def** %rtx904, align 8
  %401 = bitcast %struct.rtx_def* %400 to i32*
  %bf.load905 = load i32, i32* %401, align 8
  %bf.clear906 = and i32 %bf.load905, 65535
  %cmp907 = icmp eq i32 %bf.clear906, 39
  br i1 %cmp907, label %cond.true.909, label %cond.false.911

cond.true.909:                                    ; preds = %land.end.900
  %402 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %403 = load %struct.rtx_def*, %struct.rtx_def** %i2src, align 8
  %call910 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %402, %struct.rtx_def* %403)
  br label %cond.end.915

cond.false.911:                                   ; preds = %land.end.900
  %404 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld912 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %404, i32 0, i32 1
  %arrayidx913 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld912, i32 0, i64 3
  %rtx914 = bitcast %union.rtunion_def* %arrayidx913 to %struct.rtx_def**
  %405 = load %struct.rtx_def*, %struct.rtx_def** %rtx914, align 8
  br label %cond.end.915

cond.end.915:                                     ; preds = %cond.false.911, %cond.true.909
  %cond916 = phi %struct.rtx_def* [ %call910, %cond.true.909 ], [ %405, %cond.false.911 ]
  store %struct.rtx_def* %cond916, %struct.rtx_def** %i2pat, align 8
  %406 = load i32, i32* %added_sets_2, align 4
  %tobool917 = icmp ne i32 %406, 0
  br i1 %tobool917, label %if.then.918, label %if.end.920

if.then.918:                                      ; preds = %cond.end.915
  %407 = load %struct.rtx_def*, %struct.rtx_def** %i2pat, align 8
  %call919 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %407)
  store %struct.rtx_def* %call919, %struct.rtx_def** %i2pat, align 8
  br label %if.end.920

if.end.920:                                       ; preds = %if.then.918, %cond.end.915
  %408 = load i32, i32* @combine_merges, align 4
  %inc921 = add nsw i32 %408, 1
  store i32 %inc921, i32* @combine_merges, align 4
  %call922 = call i32 @max_reg_num()
  store i32 %call922, i32* %maxreg, align 4
  %409 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  store %struct.rtx_def* %409, %struct.rtx_def** @subst_insn, align 8
  %410 = load i32, i32* @flag_expensive_optimizations, align 4
  %tobool923 = icmp ne i32 %410, 0
  br i1 %tobool923, label %if.then.924, label %if.end.961

if.then.924:                                      ; preds = %if.end.920
  %411 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %tobool925 = icmp ne %struct.rtx_def* %411, null
  br i1 %tobool925, label %if.then.926, label %if.else.943

if.then.926:                                      ; preds = %if.then.924
  %412 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %fld927 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %412, i32 0, i32 1
  %arrayidx928 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld927, i32 0, i64 0
  %rtint929 = bitcast %union.rtunion_def* %arrayidx928 to i32*
  %413 = load i32, i32* %rtint929, align 4
  %414 = load i32, i32* @max_uid_cuid, align 4
  %cmp930 = icmp sgt i32 %413, %414
  br i1 %cmp930, label %cond.true.932, label %cond.false.934

cond.true.932:                                    ; preds = %if.then.926
  %415 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %call933 = call i32 @insn_cuid(%struct.rtx_def* %415)
  br label %cond.end.940

cond.false.934:                                   ; preds = %if.then.926
  %416 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %fld935 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %416, i32 0, i32 1
  %arrayidx936 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld935, i32 0, i64 0
  %rtint937 = bitcast %union.rtunion_def* %arrayidx936 to i32*
  %417 = load i32, i32* %rtint937, align 4
  %idxprom938 = sext i32 %417 to i64
  %418 = load i32*, i32** @uid_cuid, align 8
  %arrayidx939 = getelementptr inbounds i32, i32* %418, i64 %idxprom938
  %419 = load i32, i32* %arrayidx939, align 4
  br label %cond.end.940

cond.end.940:                                     ; preds = %cond.false.934, %cond.true.932
  %cond941 = phi i32 [ %call933, %cond.true.932 ], [ %419, %cond.false.934 ]
  store i32 %cond941, i32* @subst_low_cuid, align 4
  %420 = load %struct.rtx_def*, %struct.rtx_def** %i1src, align 8
  %421 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %422 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %call942 = call %struct.rtx_def* @subst(%struct.rtx_def* %420, %struct.rtx_def* %421, %struct.rtx_def* %422, i32 0, i32 0)
  store %struct.rtx_def* %call942, %struct.rtx_def** %i1src, align 8
  br label %if.end.960

if.else.943:                                      ; preds = %if.then.924
  %423 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld944 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %423, i32 0, i32 1
  %arrayidx945 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld944, i32 0, i64 0
  %rtint946 = bitcast %union.rtunion_def* %arrayidx945 to i32*
  %424 = load i32, i32* %rtint946, align 4
  %425 = load i32, i32* @max_uid_cuid, align 4
  %cmp947 = icmp sgt i32 %424, %425
  br i1 %cmp947, label %cond.true.949, label %cond.false.951

cond.true.949:                                    ; preds = %if.else.943
  %426 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call950 = call i32 @insn_cuid(%struct.rtx_def* %426)
  br label %cond.end.957

cond.false.951:                                   ; preds = %if.else.943
  %427 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld952 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %427, i32 0, i32 1
  %arrayidx953 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld952, i32 0, i64 0
  %rtint954 = bitcast %union.rtunion_def* %arrayidx953 to i32*
  %428 = load i32, i32* %rtint954, align 4
  %idxprom955 = sext i32 %428 to i64
  %429 = load i32*, i32** @uid_cuid, align 8
  %arrayidx956 = getelementptr inbounds i32, i32* %429, i64 %idxprom955
  %430 = load i32, i32* %arrayidx956, align 4
  br label %cond.end.957

cond.end.957:                                     ; preds = %cond.false.951, %cond.true.949
  %cond958 = phi i32 [ %call950, %cond.true.949 ], [ %430, %cond.false.951 ]
  store i32 %cond958, i32* @subst_low_cuid, align 4
  %431 = load %struct.rtx_def*, %struct.rtx_def** %i2src, align 8
  %432 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %433 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %call959 = call %struct.rtx_def* @subst(%struct.rtx_def* %431, %struct.rtx_def* %432, %struct.rtx_def* %433, i32 0, i32 0)
  store %struct.rtx_def* %call959, %struct.rtx_def** %i2src, align 8
  br label %if.end.960

if.end.960:                                       ; preds = %cond.end.957, %cond.end.940
  br label %if.end.961

if.end.961:                                       ; preds = %if.end.960, %if.end.920
  %434 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %cmp962 = icmp eq %struct.rtx_def* %434, null
  br i1 %cmp962, label %land.lhs.true.964, label %if.else.1084

land.lhs.true.964:                                ; preds = %if.end.961
  %435 = load i32, i32* %added_sets_2, align 4
  %tobool965 = icmp ne i32 %435, 0
  br i1 %tobool965, label %land.lhs.true.966, label %if.else.1084

land.lhs.true.966:                                ; preds = %land.lhs.true.964
  %436 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld967 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %436, i32 0, i32 1
  %arrayidx968 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld967, i32 0, i64 3
  %rtx969 = bitcast %union.rtunion_def* %arrayidx968 to %struct.rtx_def**
  %437 = load %struct.rtx_def*, %struct.rtx_def** %rtx969, align 8
  %438 = bitcast %struct.rtx_def* %437 to i32*
  %bf.load970 = load i32, i32* %438, align 8
  %bf.clear971 = and i32 %bf.load970, 65535
  %cmp972 = icmp eq i32 %bf.clear971, 47
  br i1 %cmp972, label %land.lhs.true.974, label %if.else.1084

land.lhs.true.974:                                ; preds = %land.lhs.true.966
  %439 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld975 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %439, i32 0, i32 1
  %arrayidx976 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld975, i32 0, i64 3
  %rtx977 = bitcast %union.rtunion_def* %arrayidx976 to %struct.rtx_def**
  %440 = load %struct.rtx_def*, %struct.rtx_def** %rtx977, align 8
  %fld978 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %440, i32 0, i32 1
  %arrayidx979 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld978, i32 0, i64 1
  %rtx980 = bitcast %union.rtunion_def* %arrayidx979 to %struct.rtx_def**
  %441 = load %struct.rtx_def*, %struct.rtx_def** %rtx980, align 8
  %442 = bitcast %struct.rtx_def* %441 to i32*
  %bf.load981 = load i32, i32* %442, align 8
  %bf.clear982 = and i32 %bf.load981, 65535
  %cmp983 = icmp eq i32 %bf.clear982, 74
  br i1 %cmp983, label %land.lhs.true.985, label %if.else.1084

land.lhs.true.985:                                ; preds = %land.lhs.true.974
  %443 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld986 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %443, i32 0, i32 1
  %arrayidx987 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld986, i32 0, i64 3
  %rtx988 = bitcast %union.rtunion_def* %arrayidx987 to %struct.rtx_def**
  %444 = load %struct.rtx_def*, %struct.rtx_def** %rtx988, align 8
  %fld989 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %444, i32 0, i32 1
  %arrayidx990 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld989, i32 0, i64 1
  %rtx991 = bitcast %union.rtunion_def* %arrayidx990 to %struct.rtx_def**
  %445 = load %struct.rtx_def*, %struct.rtx_def** %rtx991, align 8
  %fld992 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %445, i32 0, i32 1
  %arrayidx993 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld992, i32 0, i64 1
  %rtx994 = bitcast %union.rtunion_def* %arrayidx993 to %struct.rtx_def**
  %446 = load %struct.rtx_def*, %struct.rtx_def** %rtx994, align 8
  %447 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp995 = icmp eq %struct.rtx_def* %446, %447
  br i1 %cmp995, label %land.lhs.true.997, label %if.else.1084

land.lhs.true.997:                                ; preds = %land.lhs.true.985
  %448 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld998 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %448, i32 0, i32 1
  %arrayidx999 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld998, i32 0, i64 3
  %rtx1000 = bitcast %union.rtunion_def* %arrayidx999 to %struct.rtx_def**
  %449 = load %struct.rtx_def*, %struct.rtx_def** %rtx1000, align 8
  %fld1001 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %449, i32 0, i32 1
  %arrayidx1002 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1001, i32 0, i64 1
  %rtx1003 = bitcast %union.rtunion_def* %arrayidx1002 to %struct.rtx_def**
  %450 = load %struct.rtx_def*, %struct.rtx_def** %rtx1003, align 8
  %fld1004 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %450, i32 0, i32 1
  %arrayidx1005 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1004, i32 0, i64 0
  %rtx1006 = bitcast %union.rtunion_def* %arrayidx1005 to %struct.rtx_def**
  %451 = load %struct.rtx_def*, %struct.rtx_def** %rtx1006, align 8
  %452 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %call1007 = call i32 @rtx_equal_p(%struct.rtx_def* %451, %struct.rtx_def* %452)
  %tobool1008 = icmp ne i32 %call1007, 0
  br i1 %tobool1008, label %if.then.1009, label %if.else.1084

if.then.1009:                                     ; preds = %land.lhs.true.997
  %453 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld1010 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %453, i32 0, i32 1
  %arrayidx1011 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1010, i32 0, i64 3
  %rtx1012 = bitcast %union.rtunion_def* %arrayidx1011 to %struct.rtx_def**
  %454 = load %struct.rtx_def*, %struct.rtx_def** %rtx1012, align 8
  store %struct.rtx_def* %454, %struct.rtx_def** %newpat, align 8
  %455 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1013 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %455, i32 0, i32 1
  %arrayidx1014 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1013, i32 0, i64 1
  %rtx1015 = bitcast %union.rtunion_def* %arrayidx1014 to %struct.rtx_def**
  %456 = load %struct.rtx_def*, %struct.rtx_def** %rtx1015, align 8
  %fld1016 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %456, i32 0, i32 1
  %arrayidx1017 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1016, i32 0, i64 0
  %rtx1018 = bitcast %union.rtunion_def* %arrayidx1017 to %struct.rtx_def**
  %457 = load %struct.rtx_def*, %struct.rtx_def** %i2src, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx1018, %struct.rtx_def* %457)
  store i32 1, i32* %i2_is_used, align 4
  %458 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 2), align 8
  %cmp1019 = icmp eq %struct.rtx_def* %458, null
  br i1 %cmp1019, label %land.lhs.true.1021, label %if.end.1083

land.lhs.true.1021:                               ; preds = %if.then.1009
  %459 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1022 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %459, i32 0, i32 1
  %arrayidx1023 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1022, i32 0, i64 0
  %rtx1024 = bitcast %union.rtunion_def* %arrayidx1023 to %struct.rtx_def**
  %460 = load %struct.rtx_def*, %struct.rtx_def** %rtx1024, align 8
  %461 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call1025 = call %struct.rtx_def** @find_single_use(%struct.rtx_def* %460, %struct.rtx_def* %461, %struct.rtx_def** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 2))
  store %struct.rtx_def** %call1025, %struct.rtx_def*** %cc_use, align 8
  %tobool1026 = icmp ne %struct.rtx_def** %call1025, null
  br i1 %tobool1026, label %land.lhs.true.1027, label %if.end.1083

land.lhs.true.1027:                               ; preds = %land.lhs.true.1021
  %462 = load %struct.rtx_def**, %struct.rtx_def*** %cc_use, align 8
  %463 = load %struct.rtx_def*, %struct.rtx_def** %462, align 8
  %464 = bitcast %struct.rtx_def* %463 to i32*
  %bf.load1028 = load i32, i32* %464, align 8
  %bf.clear1029 = and i32 %bf.load1028, 65535
  %465 = load %struct.rtx_def*, %struct.rtx_def** %i2src, align 8
  %466 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %call1030 = call i32 @ix86_cc_mode(i32 %bf.clear1029, %struct.rtx_def* %465, %struct.rtx_def* %466)
  store i32 %call1030, i32* %compare_mode, align 4
  %467 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1031 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %467, i32 0, i32 1
  %arrayidx1032 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1031, i32 0, i64 0
  %rtx1033 = bitcast %union.rtunion_def* %arrayidx1032 to %struct.rtx_def**
  %468 = load %struct.rtx_def*, %struct.rtx_def** %rtx1033, align 8
  %469 = bitcast %struct.rtx_def* %468 to i32*
  %bf.load1034 = load i32, i32* %469, align 8
  %bf.lshr1035 = lshr i32 %bf.load1034, 16
  %bf.clear1036 = and i32 %bf.lshr1035, 255
  %cmp1037 = icmp ne i32 %call1030, %bf.clear1036
  br i1 %cmp1037, label %if.then.1039, label %if.end.1083

if.then.1039:                                     ; preds = %land.lhs.true.1027
  %470 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1040 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %470, i32 0, i32 1
  %arrayidx1041 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1040, i32 0, i64 0
  %rtx1042 = bitcast %union.rtunion_def* %arrayidx1041 to %struct.rtx_def**
  %471 = load %struct.rtx_def*, %struct.rtx_def** %rtx1042, align 8
  %fld1043 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %471, i32 0, i32 1
  %arrayidx1044 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1043, i32 0, i64 0
  %rtuint1045 = bitcast %union.rtunion_def* %arrayidx1044 to i32*
  %472 = load i32, i32* %rtuint1045, align 4
  store i32 %472, i32* %regno, align 4
  %473 = load i32, i32* %compare_mode, align 4
  %474 = load i32, i32* %regno, align 4
  %call1046 = call %struct.rtx_def* @gen_rtx_REG(i32 %473, i32 %474)
  store %struct.rtx_def* %call1046, %struct.rtx_def** %new_dest, align 8
  %475 = load i32, i32* %regno, align 4
  %cmp1047 = icmp ult i32 %475, 53
  br i1 %cmp1047, label %if.then.1064, label %lor.lhs.false.1049

lor.lhs.false.1049:                               ; preds = %if.then.1039
  %476 = load i32, i32* %regno, align 4
  %idxprom1050 = zext i32 %476 to i64
  %477 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %477, i32 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx1051 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg, i32 0, i64 %idxprom1050
  %478 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx1051, align 8
  %sets = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %478, i32 0, i32 3
  %479 = load i32, i32* %sets, align 4
  %cmp1052 = icmp eq i32 %479, 1
  br i1 %cmp1052, label %land.lhs.true.1054, label %if.else.1081

land.lhs.true.1054:                               ; preds = %lor.lhs.false.1049
  %480 = load i32, i32* %added_sets_2, align 4
  %tobool1055 = icmp ne i32 %480, 0
  br i1 %tobool1055, label %if.else.1081, label %land.lhs.true.1056

land.lhs.true.1056:                               ; preds = %land.lhs.true.1054
  %481 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1057 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %481, i32 0, i32 1
  %arrayidx1058 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1057, i32 0, i64 0
  %rtx1059 = bitcast %union.rtunion_def* %arrayidx1058 to %struct.rtx_def**
  %482 = load %struct.rtx_def*, %struct.rtx_def** %rtx1059, align 8
  %483 = bitcast %struct.rtx_def* %482 to i32*
  %bf.load1060 = load i32, i32* %483, align 8
  %bf.lshr1061 = lshr i32 %bf.load1060, 27
  %bf.clear1062 = and i32 %bf.lshr1061, 1
  %tobool1063 = icmp ne i32 %bf.clear1062, 0
  br i1 %tobool1063, label %if.else.1081, label %if.then.1064

if.then.1064:                                     ; preds = %land.lhs.true.1056, %if.then.1039
  %484 = load i32, i32* %regno, align 4
  %cmp1065 = icmp uge i32 %484, 53
  br i1 %cmp1065, label %if.then.1067, label %if.end.1070

if.then.1067:                                     ; preds = %if.then.1064
  %485 = load i32, i32* %regno, align 4
  %idxprom1068 = zext i32 %485 to i64
  %486 = load %struct.function*, %struct.function** @cfun, align 8
  %emit = getelementptr inbounds %struct.function, %struct.function* %486, i32 0, i32 3
  %487 = load %struct.emit_status*, %struct.emit_status** %emit, align 8
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status, %struct.emit_status* %487, i32 0, i32 12
  %488 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx, align 8
  %arrayidx1069 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %488, i64 %idxprom1068
  %489 = load %struct.rtx_def*, %struct.rtx_def** %new_dest, align 8
  call void @do_SUBST(%struct.rtx_def** %arrayidx1069, %struct.rtx_def* %489)
  br label %if.end.1070

if.end.1070:                                      ; preds = %if.then.1067, %if.then.1064
  %490 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1071 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %490, i32 0, i32 1
  %arrayidx1072 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1071, i32 0, i64 0
  %rtx1073 = bitcast %union.rtunion_def* %arrayidx1072 to %struct.rtx_def**
  %491 = load %struct.rtx_def*, %struct.rtx_def** %new_dest, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx1073, %struct.rtx_def* %491)
  %492 = load %struct.rtx_def**, %struct.rtx_def*** %cc_use, align 8
  %493 = load %struct.rtx_def*, %struct.rtx_def** %492, align 8
  %fld1074 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %493, i32 0, i32 1
  %arrayidx1075 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1074, i32 0, i64 0
  %rtx1076 = bitcast %union.rtunion_def* %arrayidx1075 to %struct.rtx_def**
  %494 = load %struct.rtx_def*, %struct.rtx_def** %new_dest, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx1076, %struct.rtx_def* %494)
  %495 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1077 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %495, i32 0, i32 1
  %arrayidx1078 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1077, i32 0, i64 1
  %rtx1079 = bitcast %union.rtunion_def* %arrayidx1078 to %struct.rtx_def**
  %496 = load i32, i32* %compare_mode, align 4
  %497 = load %struct.rtx_def*, %struct.rtx_def** %i2src, align 8
  %498 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %call1080 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 %496, %struct.rtx_def* %497, %struct.rtx_def* %498)
  call void @do_SUBST(%struct.rtx_def** %rtx1079, %struct.rtx_def* %call1080)
  br label %if.end.1082

if.else.1081:                                     ; preds = %land.lhs.true.1056, %land.lhs.true.1054, %lor.lhs.false.1049
  store %struct.rtx_def* null, %struct.rtx_def** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 2), align 8
  br label %if.end.1082

if.end.1082:                                      ; preds = %if.else.1081, %if.end.1070
  br label %if.end.1083

if.end.1083:                                      ; preds = %if.end.1082, %land.lhs.true.1027, %land.lhs.true.1021, %if.then.1009
  br label %if.end.1109

if.else.1084:                                     ; preds = %land.lhs.true.997, %land.lhs.true.985, %land.lhs.true.974, %land.lhs.true.966, %land.lhs.true.964, %if.end.961
  store i32 0, i32* @n_occurrences, align 4
  %499 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld1085 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %499, i32 0, i32 1
  %arrayidx1086 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1085, i32 0, i64 0
  %rtint1087 = bitcast %union.rtunion_def* %arrayidx1086 to i32*
  %500 = load i32, i32* %rtint1087, align 4
  %501 = load i32, i32* @max_uid_cuid, align 4
  %cmp1088 = icmp sgt i32 %500, %501
  br i1 %cmp1088, label %cond.true.1090, label %cond.false.1092

cond.true.1090:                                   ; preds = %if.else.1084
  %502 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call1091 = call i32 @insn_cuid(%struct.rtx_def* %502)
  br label %cond.end.1098

cond.false.1092:                                  ; preds = %if.else.1084
  %503 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld1093 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %503, i32 0, i32 1
  %arrayidx1094 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1093, i32 0, i64 0
  %rtint1095 = bitcast %union.rtunion_def* %arrayidx1094 to i32*
  %504 = load i32, i32* %rtint1095, align 4
  %idxprom1096 = sext i32 %504 to i64
  %505 = load i32*, i32** @uid_cuid, align 8
  %arrayidx1097 = getelementptr inbounds i32, i32* %505, i64 %idxprom1096
  %506 = load i32, i32* %arrayidx1097, align 4
  br label %cond.end.1098

cond.end.1098:                                    ; preds = %cond.false.1092, %cond.true.1090
  %cond1099 = phi i32 [ %call1091, %cond.true.1090 ], [ %506, %cond.false.1092 ]
  store i32 %cond1099, i32* @subst_low_cuid, align 4
  %507 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld1100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %507, i32 0, i32 1
  %arrayidx1101 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1100, i32 0, i64 3
  %rtx1102 = bitcast %union.rtunion_def* %arrayidx1101 to %struct.rtx_def**
  %508 = load %struct.rtx_def*, %struct.rtx_def** %rtx1102, align 8
  %509 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %510 = load %struct.rtx_def*, %struct.rtx_def** %i2src, align 8
  %511 = load i32, i32* %i1_feeds_i3, align 4
  %tobool1103 = icmp ne i32 %511, 0
  br i1 %tobool1103, label %land.end.1106, label %land.rhs.1104

land.rhs.1104:                                    ; preds = %cond.end.1098
  %512 = load i32, i32* %i1dest_in_i1src, align 4
  %tobool1105 = icmp ne i32 %512, 0
  br label %land.end.1106

land.end.1106:                                    ; preds = %land.rhs.1104, %cond.end.1098
  %513 = phi i1 [ false, %cond.end.1098 ], [ %tobool1105, %land.rhs.1104 ]
  %land.ext1107 = zext i1 %513 to i32
  %call1108 = call %struct.rtx_def* @subst(%struct.rtx_def* %508, %struct.rtx_def* %509, %struct.rtx_def* %510, i32 0, i32 %land.ext1107)
  store %struct.rtx_def* %call1108, %struct.rtx_def** %newpat, align 8
  store i32 1, i32* %substed_i2, align 4
  %514 = load i32, i32* @n_occurrences, align 4
  store i32 %514, i32* %i2_is_used, align 4
  br label %if.end.1109

if.end.1109:                                      ; preds = %land.end.1106, %if.end.1083
  %515 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %tobool1110 = icmp ne %struct.rtx_def* %515, null
  br i1 %tobool1110, label %land.lhs.true.1111, label %if.end.1137

land.lhs.true.1111:                               ; preds = %if.end.1109
  %516 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %517 = bitcast %struct.rtx_def* %516 to i32*
  %bf.load1112 = load i32, i32* %517, align 8
  %bf.clear1113 = and i32 %bf.load1112, 65535
  %cmp1114 = icmp ne i32 %bf.clear1113, 49
  br i1 %cmp1114, label %if.then.1116, label %if.end.1137

if.then.1116:                                     ; preds = %land.lhs.true.1111
  %518 = load %struct.rtx_def*, %struct.rtx_def** %i1dest, align 8
  %call1117 = call i32 @combinable_i3pat(%struct.rtx_def* null, %struct.rtx_def** %newpat, %struct.rtx_def* %518, %struct.rtx_def* null, i32 0, %struct.rtx_def** null)
  %tobool1118 = icmp ne i32 %call1117, 0
  br i1 %tobool1118, label %if.end.1120, label %if.then.1119

if.then.1119:                                     ; preds = %if.then.1116
  call void @undo_all()
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.1120:                                      ; preds = %if.then.1116
  store i32 0, i32* @n_occurrences, align 4
  %519 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %fld1121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %519, i32 0, i32 1
  %arrayidx1122 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1121, i32 0, i64 0
  %rtint1123 = bitcast %union.rtunion_def* %arrayidx1122 to i32*
  %520 = load i32, i32* %rtint1123, align 4
  %521 = load i32, i32* @max_uid_cuid, align 4
  %cmp1124 = icmp sgt i32 %520, %521
  br i1 %cmp1124, label %cond.true.1126, label %cond.false.1128

cond.true.1126:                                   ; preds = %if.end.1120
  %522 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %call1127 = call i32 @insn_cuid(%struct.rtx_def* %522)
  br label %cond.end.1134

cond.false.1128:                                  ; preds = %if.end.1120
  %523 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %fld1129 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %523, i32 0, i32 1
  %arrayidx1130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1129, i32 0, i64 0
  %rtint1131 = bitcast %union.rtunion_def* %arrayidx1130 to i32*
  %524 = load i32, i32* %rtint1131, align 4
  %idxprom1132 = sext i32 %524 to i64
  %525 = load i32*, i32** @uid_cuid, align 8
  %arrayidx1133 = getelementptr inbounds i32, i32* %525, i64 %idxprom1132
  %526 = load i32, i32* %arrayidx1133, align 4
  br label %cond.end.1134

cond.end.1134:                                    ; preds = %cond.false.1128, %cond.true.1126
  %cond1135 = phi i32 [ %call1127, %cond.true.1126 ], [ %526, %cond.false.1128 ]
  store i32 %cond1135, i32* @subst_low_cuid, align 4
  %527 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %528 = load %struct.rtx_def*, %struct.rtx_def** %i1dest, align 8
  %529 = load %struct.rtx_def*, %struct.rtx_def** %i1src, align 8
  %call1136 = call %struct.rtx_def* @subst(%struct.rtx_def* %527, %struct.rtx_def* %528, %struct.rtx_def* %529, i32 0, i32 0)
  store %struct.rtx_def* %call1136, %struct.rtx_def** %newpat, align 8
  store i32 1, i32* %substed_i1, align 4
  br label %if.end.1137

if.end.1137:                                      ; preds = %cond.end.1134, %land.lhs.true.1111, %if.end.1109
  %530 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %cmp1138 = icmp ne %struct.rtx_def* %530, null
  br i1 %cmp1138, label %land.lhs.true.1140, label %lor.lhs.false.1152

land.lhs.true.1140:                               ; preds = %if.end.1137
  br i1 false, label %land.lhs.true.1141, label %lor.lhs.false.1152

land.lhs.true.1141:                               ; preds = %land.lhs.true.1140
  %531 = load i32, i32* @n_occurrences, align 4
  %532 = load i32, i32* %added_sets_1, align 4
  %add = add nsw i32 %531, %532
  %533 = load i32, i32* %added_sets_2, align 4
  %tobool1142 = icmp ne i32 %533, 0
  br i1 %tobool1142, label %land.rhs.1143, label %land.end.1147

land.rhs.1143:                                    ; preds = %land.lhs.true.1141
  %534 = load i32, i32* %i1_feeds_i3, align 4
  %tobool1144 = icmp ne i32 %534, 0
  %lnot1145 = xor i1 %tobool1144, true
  br label %land.end.1147

land.end.1147:                                    ; preds = %land.rhs.1143, %land.lhs.true.1141
  %535 = phi i1 [ false, %land.lhs.true.1141 ], [ %lnot1145, %land.rhs.1143 ]
  %land.ext1148 = zext i1 %535 to i32
  %add1149 = add nsw i32 %add, %land.ext1148
  %cmp1150 = icmp sgt i32 %add1149, 1
  br i1 %cmp1150, label %if.then.1176, label %lor.lhs.false.1152

lor.lhs.false.1152:                               ; preds = %land.end.1147, %land.lhs.true.1140, %if.end.1137
  %call1153 = call i32 @max_reg_num()
  %536 = load i32, i32* %maxreg, align 4
  %cmp1154 = icmp ne i32 %call1153, %536
  br i1 %cmp1154, label %if.then.1176, label %lor.lhs.false.1156

lor.lhs.false.1156:                               ; preds = %lor.lhs.false.1152
  %537 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %538 = bitcast %struct.rtx_def* %537 to i32*
  %bf.load1157 = load i32, i32* %538, align 8
  %bf.clear1158 = and i32 %bf.load1157, 65535
  %cmp1159 = icmp eq i32 %bf.clear1158, 49
  br i1 %cmp1159, label %if.then.1176, label %lor.lhs.false.1161

lor.lhs.false.1161:                               ; preds = %lor.lhs.false.1156
  %539 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %540 = bitcast %struct.rtx_def* %539 to i32*
  %bf.load1162 = load i32, i32* %540, align 8
  %bf.clear1163 = and i32 %bf.load1162, 65535
  %cmp1164 = icmp eq i32 %bf.clear1163, 47
  br i1 %cmp1164, label %land.lhs.true.1166, label %if.end.1177

land.lhs.true.1166:                               ; preds = %lor.lhs.false.1161
  %541 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1167 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %541, i32 0, i32 1
  %arrayidx1168 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1167, i32 0, i64 1
  %rtx1169 = bitcast %union.rtunion_def* %arrayidx1168 to %struct.rtx_def**
  %542 = load %struct.rtx_def*, %struct.rtx_def** %rtx1169, align 8
  %543 = bitcast %struct.rtx_def* %542 to i32*
  %bf.load1170 = load i32, i32* %543, align 8
  %bf.clear1171 = and i32 %bf.load1170, 65535
  %cmp1172 = icmp eq i32 %bf.clear1171, 78
  br i1 %cmp1172, label %land.lhs.true.1174, label %if.end.1177

land.lhs.true.1174:                               ; preds = %land.lhs.true.1166
  %544 = load i32, i32* %have_mult, align 4
  %tobool1175 = icmp ne i32 %544, 0
  br i1 %tobool1175, label %if.end.1177, label %if.then.1176

if.then.1176:                                     ; preds = %land.lhs.true.1174, %lor.lhs.false.1156, %lor.lhs.false.1152, %land.end.1147
  call void @undo_all()
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.1177:                                      ; preds = %land.lhs.true.1174, %land.lhs.true.1166, %lor.lhs.false.1161
  %545 = load i32, i32* %added_sets_1, align 4
  %tobool1178 = icmp ne i32 %545, 0
  br i1 %tobool1178, label %if.then.1181, label %lor.lhs.false.1179

lor.lhs.false.1179:                               ; preds = %if.end.1177
  %546 = load i32, i32* %added_sets_2, align 4
  %tobool1180 = icmp ne i32 %546, 0
  br i1 %tobool1180, label %if.then.1181, label %if.end.1268

if.then.1181:                                     ; preds = %lor.lhs.false.1179, %if.end.1177
  %547 = load i32, i32* @combine_extras, align 4
  %inc1182 = add nsw i32 %547, 1
  store i32 %inc1182, i32* @combine_extras, align 4
  %548 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %549 = bitcast %struct.rtx_def* %548 to i32*
  %bf.load1183 = load i32, i32* %549, align 8
  %bf.clear1184 = and i32 %bf.load1183, 65535
  %cmp1185 = icmp eq i32 %bf.clear1184, 39
  br i1 %cmp1185, label %if.then.1187, label %if.else.1208

if.then.1187:                                     ; preds = %if.then.1181
  %550 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1188 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %550, i32 0, i32 1
  %arrayidx1189 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1188, i32 0, i64 0
  %rtvec1190 = bitcast %union.rtunion_def* %arrayidx1189 to %struct.rtvec_def**
  %551 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1190, align 8
  store %struct.rtvec_def* %551, %struct.rtvec_def** %old, align 8
  %552 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1191 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %552, i32 0, i32 1
  %arrayidx1192 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1191, i32 0, i64 0
  %rtvec1193 = bitcast %union.rtunion_def* %arrayidx1192 to %struct.rtvec_def**
  %553 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1193, align 8
  %num_elem1194 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %553, i32 0, i32 0
  %554 = load i32, i32* %num_elem1194, align 4
  %555 = load i32, i32* %added_sets_1, align 4
  %add1195 = add nsw i32 %554, %555
  %556 = load i32, i32* %added_sets_2, align 4
  %add1196 = add nsw i32 %add1195, %556
  store i32 %add1196, i32* %total_sets, align 4
  %557 = load i32, i32* %total_sets, align 4
  %call1197 = call %struct.rtvec_def* @rtvec_alloc(i32 %557)
  %call1198 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call1197)
  store %struct.rtx_def* %call1198, %struct.rtx_def** %newpat, align 8
  %558 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1199 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %558, i32 0, i32 1
  %arrayidx1200 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1199, i32 0, i64 0
  %rtvec1201 = bitcast %union.rtunion_def* %arrayidx1200 to %struct.rtvec_def**
  %559 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1201, align 8
  %elem1202 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %559, i32 0, i32 1
  %560 = bitcast [1 x %struct.rtx_def*]* %elem1202 to i8*
  %561 = load %struct.rtvec_def*, %struct.rtvec_def** %old, align 8
  %elem1203 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %561, i32 0, i32 1
  %arrayidx1204 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1203, i32 0, i64 0
  %562 = bitcast %struct.rtx_def** %arrayidx1204 to i8*
  %563 = load %struct.rtvec_def*, %struct.rtvec_def** %old, align 8
  %num_elem1205 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %563, i32 0, i32 0
  %564 = load i32, i32* %num_elem1205, align 4
  %conv1206 = sext i32 %564 to i64
  %mul1207 = mul i64 8, %conv1206
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %560, i8* %562, i64 %mul1207, i32 8, i1 false)
  br label %if.end.1219

if.else.1208:                                     ; preds = %if.then.1181
  %565 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  store %struct.rtx_def* %565, %struct.rtx_def** %old1209, align 8
  %566 = load i32, i32* %added_sets_1, align 4
  %add1210 = add nsw i32 1, %566
  %567 = load i32, i32* %added_sets_2, align 4
  %add1211 = add nsw i32 %add1210, %567
  store i32 %add1211, i32* %total_sets, align 4
  %568 = load i32, i32* %total_sets, align 4
  %call1212 = call %struct.rtvec_def* @rtvec_alloc(i32 %568)
  %call1213 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call1212)
  store %struct.rtx_def* %call1213, %struct.rtx_def** %newpat, align 8
  %569 = load %struct.rtx_def*, %struct.rtx_def** %old1209, align 8
  %570 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1214 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %570, i32 0, i32 1
  %arrayidx1215 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1214, i32 0, i64 0
  %rtvec1216 = bitcast %union.rtunion_def* %arrayidx1215 to %struct.rtvec_def**
  %571 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1216, align 8
  %elem1217 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %571, i32 0, i32 1
  %arrayidx1218 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1217, i32 0, i64 0
  store %struct.rtx_def* %569, %struct.rtx_def** %arrayidx1218, align 8
  br label %if.end.1219

if.end.1219:                                      ; preds = %if.else.1208, %if.then.1187
  %572 = load i32, i32* %added_sets_1, align 4
  %tobool1220 = icmp ne i32 %572, 0
  br i1 %tobool1220, label %if.then.1221, label %if.end.1244

if.then.1221:                                     ; preds = %if.end.1219
  %573 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %fld1222 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %573, i32 0, i32 1
  %arrayidx1223 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1222, i32 0, i64 3
  %rtx1224 = bitcast %union.rtunion_def* %arrayidx1223 to %struct.rtx_def**
  %574 = load %struct.rtx_def*, %struct.rtx_def** %rtx1224, align 8
  %575 = bitcast %struct.rtx_def* %574 to i32*
  %bf.load1225 = load i32, i32* %575, align 8
  %bf.clear1226 = and i32 %bf.load1225, 65535
  %cmp1227 = icmp eq i32 %bf.clear1226, 39
  br i1 %cmp1227, label %cond.true.1229, label %cond.false.1231

cond.true.1229:                                   ; preds = %if.then.1221
  %576 = load %struct.rtx_def*, %struct.rtx_def** %i1dest, align 8
  %577 = load %struct.rtx_def*, %struct.rtx_def** %i1src, align 8
  %call1230 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %576, %struct.rtx_def* %577)
  br label %cond.end.1235

cond.false.1231:                                  ; preds = %if.then.1221
  %578 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %fld1232 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %578, i32 0, i32 1
  %arrayidx1233 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1232, i32 0, i64 3
  %rtx1234 = bitcast %union.rtunion_def* %arrayidx1233 to %struct.rtx_def**
  %579 = load %struct.rtx_def*, %struct.rtx_def** %rtx1234, align 8
  br label %cond.end.1235

cond.end.1235:                                    ; preds = %cond.false.1231, %cond.true.1229
  %cond1236 = phi %struct.rtx_def* [ %call1230, %cond.true.1229 ], [ %579, %cond.false.1231 ]
  %580 = load i32, i32* %total_sets, align 4
  %dec1237 = add nsw i32 %580, -1
  store i32 %dec1237, i32* %total_sets, align 4
  %idxprom1238 = sext i32 %dec1237 to i64
  %581 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1239 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %581, i32 0, i32 1
  %arrayidx1240 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1239, i32 0, i64 0
  %rtvec1241 = bitcast %union.rtunion_def* %arrayidx1240 to %struct.rtvec_def**
  %582 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1241, align 8
  %elem1242 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %582, i32 0, i32 1
  %arrayidx1243 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1242, i32 0, i64 %idxprom1238
  store %struct.rtx_def* %cond1236, %struct.rtx_def** %arrayidx1243, align 8
  br label %if.end.1244

if.end.1244:                                      ; preds = %cond.end.1235, %if.end.1219
  %583 = load i32, i32* %added_sets_2, align 4
  %tobool1245 = icmp ne i32 %583, 0
  br i1 %tobool1245, label %if.then.1246, label %if.end.1267

if.then.1246:                                     ; preds = %if.end.1244
  %584 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %cmp1247 = icmp eq %struct.rtx_def* %584, null
  br i1 %cmp1247, label %if.then.1249, label %if.else.1257

if.then.1249:                                     ; preds = %if.then.1246
  %585 = load %struct.rtx_def*, %struct.rtx_def** %i2pat, align 8
  %586 = load i32, i32* %total_sets, align 4
  %dec1250 = add nsw i32 %586, -1
  store i32 %dec1250, i32* %total_sets, align 4
  %idxprom1251 = sext i32 %dec1250 to i64
  %587 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1252 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %587, i32 0, i32 1
  %arrayidx1253 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1252, i32 0, i64 0
  %rtvec1254 = bitcast %union.rtunion_def* %arrayidx1253 to %struct.rtvec_def**
  %588 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1254, align 8
  %elem1255 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %588, i32 0, i32 1
  %arrayidx1256 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1255, i32 0, i64 %idxprom1251
  store %struct.rtx_def* %585, %struct.rtx_def** %arrayidx1256, align 8
  br label %if.end.1266

if.else.1257:                                     ; preds = %if.then.1246
  %589 = load %struct.rtx_def*, %struct.rtx_def** %i2pat, align 8
  %590 = load %struct.rtx_def*, %struct.rtx_def** %i1dest, align 8
  %591 = load %struct.rtx_def*, %struct.rtx_def** %i1src, align 8
  %call1258 = call %struct.rtx_def* @subst(%struct.rtx_def* %589, %struct.rtx_def* %590, %struct.rtx_def* %591, i32 0, i32 0)
  %592 = load i32, i32* %total_sets, align 4
  %dec1259 = add nsw i32 %592, -1
  store i32 %dec1259, i32* %total_sets, align 4
  %idxprom1260 = sext i32 %dec1259 to i64
  %593 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1261 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %593, i32 0, i32 1
  %arrayidx1262 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1261, i32 0, i64 0
  %rtvec1263 = bitcast %union.rtunion_def* %arrayidx1262 to %struct.rtvec_def**
  %594 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1263, align 8
  %elem1264 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %594, i32 0, i32 1
  %arrayidx1265 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1264, i32 0, i64 %idxprom1260
  store %struct.rtx_def* %call1258, %struct.rtx_def** %arrayidx1265, align 8
  br label %if.end.1266

if.end.1266:                                      ; preds = %if.else.1257, %if.then.1249
  br label %if.end.1267

if.end.1267:                                      ; preds = %if.end.1266, %if.end.1244
  br label %if.end.1268

if.end.1268:                                      ; preds = %if.end.1267, %lor.lhs.false.1179
  br label %validate_replacement

validate_replacement:                             ; preds = %if.end.1268, %cond.end.576, %cond.end.232
  %595 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  call void @mark_used_regs_combine(%struct.rtx_def* %595)
  %596 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call1269 = call i32 @recog_for_combine(%struct.rtx_def** %newpat, %struct.rtx_def* %596, %struct.rtx_def** %new_i3_notes)
  store i32 %call1269, i32* %insn_code_number, align 4
  %597 = load i32, i32* %insn_code_number, align 4
  %cmp1270 = icmp slt i32 %597, 0
  br i1 %cmp1270, label %land.lhs.true.1272, label %if.else.1350

land.lhs.true.1272:                               ; preds = %validate_replacement
  %598 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %599 = bitcast %struct.rtx_def* %598 to i32*
  %bf.load1273 = load i32, i32* %599, align 8
  %bf.clear1274 = and i32 %bf.load1273, 65535
  %cmp1275 = icmp eq i32 %bf.clear1274, 39
  br i1 %cmp1275, label %land.lhs.true.1277, label %if.else.1350

land.lhs.true.1277:                               ; preds = %land.lhs.true.1272
  %600 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1278 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %600, i32 0, i32 1
  %arrayidx1279 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1278, i32 0, i64 0
  %rtvec1280 = bitcast %union.rtunion_def* %arrayidx1279 to %struct.rtvec_def**
  %601 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1280, align 8
  %num_elem1281 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %601, i32 0, i32 0
  %602 = load i32, i32* %num_elem1281, align 4
  %cmp1282 = icmp eq i32 %602, 2
  br i1 %cmp1282, label %land.lhs.true.1284, label %if.else.1350

land.lhs.true.1284:                               ; preds = %land.lhs.true.1277
  %603 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1285 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %603, i32 0, i32 1
  %arrayidx1286 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1285, i32 0, i64 0
  %rtvec1287 = bitcast %union.rtunion_def* %arrayidx1286 to %struct.rtvec_def**
  %604 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1287, align 8
  %elem1288 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %604, i32 0, i32 1
  %arrayidx1289 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1288, i32 0, i64 0
  %605 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1289, align 8
  %606 = bitcast %struct.rtx_def* %605 to i32*
  %bf.load1290 = load i32, i32* %606, align 8
  %bf.clear1291 = and i32 %bf.load1290, 65535
  %cmp1292 = icmp eq i32 %bf.clear1291, 47
  br i1 %cmp1292, label %land.lhs.true.1294, label %if.else.1350

land.lhs.true.1294:                               ; preds = %land.lhs.true.1284
  %607 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1295 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %607, i32 0, i32 1
  %arrayidx1296 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1295, i32 0, i64 0
  %rtvec1297 = bitcast %union.rtunion_def* %arrayidx1296 to %struct.rtvec_def**
  %608 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1297, align 8
  %elem1298 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %608, i32 0, i32 1
  %arrayidx1299 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1298, i32 0, i64 1
  %609 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1299, align 8
  %610 = bitcast %struct.rtx_def* %609 to i32*
  %bf.load1300 = load i32, i32* %610, align 8
  %bf.clear1301 = and i32 %bf.load1300, 65535
  %cmp1302 = icmp eq i32 %bf.clear1301, 47
  br i1 %cmp1302, label %land.lhs.true.1304, label %if.else.1350

land.lhs.true.1304:                               ; preds = %land.lhs.true.1294
  %611 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1305 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %611, i32 0, i32 1
  %arrayidx1306 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1305, i32 0, i64 0
  %rtvec1307 = bitcast %union.rtunion_def* %arrayidx1306 to %struct.rtvec_def**
  %612 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1307, align 8
  %elem1308 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %612, i32 0, i32 1
  %arrayidx1309 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1308, i32 0, i64 1
  %613 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1309, align 8
  %fld1310 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %613, i32 0, i32 1
  %arrayidx1311 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1310, i32 0, i64 0
  %rtx1312 = bitcast %union.rtunion_def* %arrayidx1311 to %struct.rtx_def**
  %614 = load %struct.rtx_def*, %struct.rtx_def** %rtx1312, align 8
  %615 = bitcast %struct.rtx_def* %614 to i32*
  %bf.load1313 = load i32, i32* %615, align 8
  %bf.clear1314 = and i32 %bf.load1313, 65535
  %cmp1315 = icmp eq i32 %bf.clear1314, 61
  br i1 %cmp1315, label %land.lhs.true.1317, label %if.else.1350

land.lhs.true.1317:                               ; preds = %land.lhs.true.1304
  %616 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %617 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1318 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %617, i32 0, i32 1
  %arrayidx1319 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1318, i32 0, i64 0
  %rtvec1320 = bitcast %union.rtunion_def* %arrayidx1319 to %struct.rtvec_def**
  %618 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1320, align 8
  %elem1321 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %618, i32 0, i32 1
  %arrayidx1322 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1321, i32 0, i64 1
  %619 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1322, align 8
  %fld1323 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %619, i32 0, i32 1
  %arrayidx1324 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1323, i32 0, i64 0
  %rtx1325 = bitcast %union.rtunion_def* %arrayidx1324 to %struct.rtx_def**
  %620 = load %struct.rtx_def*, %struct.rtx_def** %rtx1325, align 8
  %call1326 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %616, i32 10, %struct.rtx_def* %620)
  %tobool1327 = icmp ne %struct.rtx_def* %call1326, null
  br i1 %tobool1327, label %land.lhs.true.1328, label %if.else.1350

land.lhs.true.1328:                               ; preds = %land.lhs.true.1317
  %621 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1329 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %621, i32 0, i32 1
  %arrayidx1330 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1329, i32 0, i64 0
  %rtvec1331 = bitcast %union.rtunion_def* %arrayidx1330 to %struct.rtvec_def**
  %622 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1331, align 8
  %elem1332 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %622, i32 0, i32 1
  %arrayidx1333 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1332, i32 0, i64 1
  %623 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1333, align 8
  %fld1334 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %623, i32 0, i32 1
  %arrayidx1335 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1334, i32 0, i64 1
  %rtx1336 = bitcast %union.rtunion_def* %arrayidx1335 to %struct.rtx_def**
  %624 = load %struct.rtx_def*, %struct.rtx_def** %rtx1336, align 8
  %call1337 = call i32 @side_effects_p(%struct.rtx_def* %624)
  %tobool1338 = icmp ne i32 %call1337, 0
  br i1 %tobool1338, label %if.else.1350, label %land.lhs.true.1339

land.lhs.true.1339:                               ; preds = %land.lhs.true.1328
  %625 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %call1340 = call i32 @asm_noperands(%struct.rtx_def* %625)
  %cmp1341 = icmp slt i32 %call1340, 0
  br i1 %cmp1341, label %if.then.1343, label %if.else.1350

if.then.1343:                                     ; preds = %land.lhs.true.1339
  %626 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1344 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %626, i32 0, i32 1
  %arrayidx1345 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1344, i32 0, i64 0
  %rtvec1346 = bitcast %union.rtunion_def* %arrayidx1345 to %struct.rtvec_def**
  %627 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1346, align 8
  %elem1347 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %627, i32 0, i32 1
  %arrayidx1348 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1347, i32 0, i64 0
  %628 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1348, align 8
  store %struct.rtx_def* %628, %struct.rtx_def** %newpat, align 8
  %629 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call1349 = call i32 @recog_for_combine(%struct.rtx_def** %newpat, %struct.rtx_def* %629, %struct.rtx_def** %new_i3_notes)
  store i32 %call1349, i32* %insn_code_number, align 4
  br label %if.end.1432

if.else.1350:                                     ; preds = %land.lhs.true.1339, %land.lhs.true.1328, %land.lhs.true.1317, %land.lhs.true.1304, %land.lhs.true.1294, %land.lhs.true.1284, %land.lhs.true.1277, %land.lhs.true.1272, %validate_replacement
  %630 = load i32, i32* %insn_code_number, align 4
  %cmp1351 = icmp slt i32 %630, 0
  br i1 %cmp1351, label %land.lhs.true.1353, label %if.end.1431

land.lhs.true.1353:                               ; preds = %if.else.1350
  %631 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %632 = bitcast %struct.rtx_def* %631 to i32*
  %bf.load1354 = load i32, i32* %632, align 8
  %bf.clear1355 = and i32 %bf.load1354, 65535
  %cmp1356 = icmp eq i32 %bf.clear1355, 39
  br i1 %cmp1356, label %land.lhs.true.1358, label %if.end.1431

land.lhs.true.1358:                               ; preds = %land.lhs.true.1353
  %633 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1359 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %633, i32 0, i32 1
  %arrayidx1360 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1359, i32 0, i64 0
  %rtvec1361 = bitcast %union.rtunion_def* %arrayidx1360 to %struct.rtvec_def**
  %634 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1361, align 8
  %num_elem1362 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %634, i32 0, i32 0
  %635 = load i32, i32* %num_elem1362, align 4
  %cmp1363 = icmp eq i32 %635, 2
  br i1 %cmp1363, label %land.lhs.true.1365, label %if.end.1431

land.lhs.true.1365:                               ; preds = %land.lhs.true.1358
  %636 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1366 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %636, i32 0, i32 1
  %arrayidx1367 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1366, i32 0, i64 0
  %rtvec1368 = bitcast %union.rtunion_def* %arrayidx1367 to %struct.rtvec_def**
  %637 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1368, align 8
  %elem1369 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %637, i32 0, i32 1
  %arrayidx1370 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1369, i32 0, i64 0
  %638 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1370, align 8
  %639 = bitcast %struct.rtx_def* %638 to i32*
  %bf.load1371 = load i32, i32* %639, align 8
  %bf.clear1372 = and i32 %bf.load1371, 65535
  %cmp1373 = icmp eq i32 %bf.clear1372, 47
  br i1 %cmp1373, label %land.lhs.true.1375, label %if.end.1431

land.lhs.true.1375:                               ; preds = %land.lhs.true.1365
  %640 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1376 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %640, i32 0, i32 1
  %arrayidx1377 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1376, i32 0, i64 0
  %rtvec1378 = bitcast %union.rtunion_def* %arrayidx1377 to %struct.rtvec_def**
  %641 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1378, align 8
  %elem1379 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %641, i32 0, i32 1
  %arrayidx1380 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1379, i32 0, i64 1
  %642 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1380, align 8
  %643 = bitcast %struct.rtx_def* %642 to i32*
  %bf.load1381 = load i32, i32* %643, align 8
  %bf.clear1382 = and i32 %bf.load1381, 65535
  %cmp1383 = icmp eq i32 %bf.clear1382, 47
  br i1 %cmp1383, label %land.lhs.true.1385, label %if.end.1431

land.lhs.true.1385:                               ; preds = %land.lhs.true.1375
  %644 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1386 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %644, i32 0, i32 1
  %arrayidx1387 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1386, i32 0, i64 0
  %rtvec1388 = bitcast %union.rtunion_def* %arrayidx1387 to %struct.rtvec_def**
  %645 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1388, align 8
  %elem1389 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %645, i32 0, i32 1
  %arrayidx1390 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1389, i32 0, i64 0
  %646 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1390, align 8
  %fld1391 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %646, i32 0, i32 1
  %arrayidx1392 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1391, i32 0, i64 0
  %rtx1393 = bitcast %union.rtunion_def* %arrayidx1392 to %struct.rtx_def**
  %647 = load %struct.rtx_def*, %struct.rtx_def** %rtx1393, align 8
  %648 = bitcast %struct.rtx_def* %647 to i32*
  %bf.load1394 = load i32, i32* %648, align 8
  %bf.clear1395 = and i32 %bf.load1394, 65535
  %cmp1396 = icmp eq i32 %bf.clear1395, 61
  br i1 %cmp1396, label %land.lhs.true.1398, label %if.end.1431

land.lhs.true.1398:                               ; preds = %land.lhs.true.1385
  %649 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %650 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1399 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %650, i32 0, i32 1
  %arrayidx1400 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1399, i32 0, i64 0
  %rtvec1401 = bitcast %union.rtunion_def* %arrayidx1400 to %struct.rtvec_def**
  %651 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1401, align 8
  %elem1402 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %651, i32 0, i32 1
  %arrayidx1403 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1402, i32 0, i64 0
  %652 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1403, align 8
  %fld1404 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %652, i32 0, i32 1
  %arrayidx1405 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1404, i32 0, i64 0
  %rtx1406 = bitcast %union.rtunion_def* %arrayidx1405 to %struct.rtx_def**
  %653 = load %struct.rtx_def*, %struct.rtx_def** %rtx1406, align 8
  %call1407 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %649, i32 10, %struct.rtx_def* %653)
  %tobool1408 = icmp ne %struct.rtx_def* %call1407, null
  br i1 %tobool1408, label %land.lhs.true.1409, label %if.end.1431

land.lhs.true.1409:                               ; preds = %land.lhs.true.1398
  %654 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1410 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %654, i32 0, i32 1
  %arrayidx1411 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1410, i32 0, i64 0
  %rtvec1412 = bitcast %union.rtunion_def* %arrayidx1411 to %struct.rtvec_def**
  %655 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1412, align 8
  %elem1413 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %655, i32 0, i32 1
  %arrayidx1414 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1413, i32 0, i64 0
  %656 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1414, align 8
  %fld1415 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %656, i32 0, i32 1
  %arrayidx1416 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1415, i32 0, i64 1
  %rtx1417 = bitcast %union.rtunion_def* %arrayidx1416 to %struct.rtx_def**
  %657 = load %struct.rtx_def*, %struct.rtx_def** %rtx1417, align 8
  %call1418 = call i32 @side_effects_p(%struct.rtx_def* %657)
  %tobool1419 = icmp ne i32 %call1418, 0
  br i1 %tobool1419, label %if.end.1431, label %land.lhs.true.1420

land.lhs.true.1420:                               ; preds = %land.lhs.true.1409
  %658 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %call1421 = call i32 @asm_noperands(%struct.rtx_def* %658)
  %cmp1422 = icmp slt i32 %call1421, 0
  br i1 %cmp1422, label %if.then.1424, label %if.end.1431

if.then.1424:                                     ; preds = %land.lhs.true.1420
  %659 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1425 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %659, i32 0, i32 1
  %arrayidx1426 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1425, i32 0, i64 0
  %rtvec1427 = bitcast %union.rtunion_def* %arrayidx1426 to %struct.rtvec_def**
  %660 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1427, align 8
  %elem1428 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %660, i32 0, i32 1
  %arrayidx1429 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1428, i32 0, i64 1
  %661 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1429, align 8
  store %struct.rtx_def* %661, %struct.rtx_def** %newpat, align 8
  %662 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call1430 = call i32 @recog_for_combine(%struct.rtx_def** %newpat, %struct.rtx_def* %662, %struct.rtx_def** %new_i3_notes)
  store i32 %call1430, i32* %insn_code_number, align 4
  br label %if.end.1431

if.end.1431:                                      ; preds = %if.then.1424, %land.lhs.true.1420, %land.lhs.true.1409, %land.lhs.true.1398, %land.lhs.true.1385, %land.lhs.true.1375, %land.lhs.true.1365, %land.lhs.true.1358, %land.lhs.true.1353, %if.else.1350
  br label %if.end.1432

if.end.1432:                                      ; preds = %if.end.1431, %if.then.1343
  %663 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %tobool1433 = icmp ne %struct.rtx_def* %663, null
  br i1 %tobool1433, label %land.lhs.true.1434, label %if.else.2026

land.lhs.true.1434:                               ; preds = %if.end.1432
  %664 = load i32, i32* %insn_code_number, align 4
  %cmp1435 = icmp slt i32 %664, 0
  br i1 %cmp1435, label %land.lhs.true.1437, label %if.else.2026

land.lhs.true.1437:                               ; preds = %land.lhs.true.1434
  %665 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %666 = bitcast %struct.rtx_def* %665 to i32*
  %bf.load1438 = load i32, i32* %666, align 8
  %bf.clear1439 = and i32 %bf.load1438, 65535
  %cmp1440 = icmp eq i32 %bf.clear1439, 47
  br i1 %cmp1440, label %land.lhs.true.1442, label %if.else.2026

land.lhs.true.1442:                               ; preds = %land.lhs.true.1437
  %667 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %call1443 = call i32 @asm_noperands(%struct.rtx_def* %667)
  %cmp1444 = icmp slt i32 %call1443, 0
  br i1 %cmp1444, label %if.then.1446, label %if.else.2026

if.then.1446:                                     ; preds = %land.lhs.true.1442
  %668 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  store %struct.rtx_def* %668, %struct.rtx_def** %ni2dest, align 8
  %669 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %670 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call1447 = call %struct.rtx_def* @split_insns(%struct.rtx_def* %669, %struct.rtx_def* %670)
  store %struct.rtx_def* %call1447, %struct.rtx_def** %m_split, align 8
  %671 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %cmp1448 = icmp eq %struct.rtx_def* %671, null
  br i1 %cmp1448, label %land.lhs.true.1450, label %if.end.1529

land.lhs.true.1450:                               ; preds = %if.then.1446
  %672 = load %struct.rtx_def*, %struct.rtx_def** %ni2dest, align 8
  %673 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %call1451 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %672, %struct.rtx_def* %673)
  %tobool1452 = icmp ne i32 %call1451, 0
  br i1 %tobool1452, label %if.end.1529, label %if.then.1453

if.then.1453:                                     ; preds = %land.lhs.true.1450
  %674 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1454 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %674, i32 0, i32 1
  %arrayidx1455 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1454, i32 0, i64 0
  %rtx1456 = bitcast %union.rtunion_def* %arrayidx1455 to %struct.rtx_def**
  %675 = load %struct.rtx_def*, %struct.rtx_def** %rtx1456, align 8
  %676 = bitcast %struct.rtx_def* %675 to i32*
  %bf.load1457 = load i32, i32* %676, align 8
  %bf.lshr1458 = lshr i32 %bf.load1457, 16
  %bf.clear1459 = and i32 %bf.lshr1458, 255
  %677 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %678 = bitcast %struct.rtx_def* %677 to i32*
  %bf.load1460 = load i32, i32* %678, align 8
  %bf.lshr1461 = lshr i32 %bf.load1460, 16
  %bf.clear1462 = and i32 %bf.lshr1461, 255
  %cmp1463 = icmp ne i32 %bf.clear1459, %bf.clear1462
  br i1 %cmp1463, label %land.lhs.true.1465, label %if.end.1514

land.lhs.true.1465:                               ; preds = %if.then.1453
  %679 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1466 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %679, i32 0, i32 1
  %arrayidx1467 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1466, i32 0, i64 0
  %rtx1468 = bitcast %union.rtunion_def* %arrayidx1467 to %struct.rtx_def**
  %680 = load %struct.rtx_def*, %struct.rtx_def** %rtx1468, align 8
  %681 = bitcast %struct.rtx_def* %680 to i32*
  %bf.load1469 = load i32, i32* %681, align 8
  %bf.lshr1470 = lshr i32 %bf.load1469, 16
  %bf.clear1471 = and i32 %bf.lshr1470, 255
  %cmp1472 = icmp ne i32 %bf.clear1471, 0
  br i1 %cmp1472, label %land.lhs.true.1474, label %if.end.1514

land.lhs.true.1474:                               ; preds = %land.lhs.true.1465
  %682 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %683 = bitcast %struct.rtx_def* %682 to i32*
  %bf.load1475 = load i32, i32* %683, align 8
  %bf.clear1476 = and i32 %bf.load1475, 65535
  %cmp1477 = icmp eq i32 %bf.clear1476, 61
  br i1 %cmp1477, label %land.lhs.true.1479, label %if.end.1514

land.lhs.true.1479:                               ; preds = %land.lhs.true.1474
  %684 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %fld1480 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %684, i32 0, i32 1
  %arrayidx1481 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1480, i32 0, i64 0
  %rtuint1482 = bitcast %union.rtunion_def* %arrayidx1481 to i32*
  %685 = load i32, i32* %rtuint1482, align 4
  %cmp1483 = icmp ult i32 %685, 53
  br i1 %cmp1483, label %if.then.1503, label %lor.lhs.false.1485

lor.lhs.false.1485:                               ; preds = %land.lhs.true.1479
  %686 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %fld1486 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %686, i32 0, i32 1
  %arrayidx1487 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1486, i32 0, i64 0
  %rtuint1488 = bitcast %union.rtunion_def* %arrayidx1487 to i32*
  %687 = load i32, i32* %rtuint1488, align 4
  %idxprom1489 = zext i32 %687 to i64
  %688 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data1490 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %688, i32 0, i32 4
  %reg1491 = bitcast %union.varray_data_tag* %data1490 to [1 x %struct.reg_info_def*]*
  %arrayidx1492 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg1491, i32 0, i64 %idxprom1489
  %689 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx1492, align 8
  %sets1493 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %689, i32 0, i32 3
  %690 = load i32, i32* %sets1493, align 4
  %cmp1494 = icmp eq i32 %690, 1
  br i1 %cmp1494, label %land.lhs.true.1496, label %if.end.1514

land.lhs.true.1496:                               ; preds = %lor.lhs.false.1485
  %691 = load i32, i32* %added_sets_2, align 4
  %tobool1497 = icmp ne i32 %691, 0
  br i1 %tobool1497, label %if.end.1514, label %land.lhs.true.1498

land.lhs.true.1498:                               ; preds = %land.lhs.true.1496
  %692 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %693 = bitcast %struct.rtx_def* %692 to i32*
  %bf.load1499 = load i32, i32* %693, align 8
  %bf.lshr1500 = lshr i32 %bf.load1499, 27
  %bf.clear1501 = and i32 %bf.lshr1500, 1
  %tobool1502 = icmp ne i32 %bf.clear1501, 0
  br i1 %tobool1502, label %if.end.1514, label %if.then.1503

if.then.1503:                                     ; preds = %land.lhs.true.1498, %land.lhs.true.1479
  %694 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld1504 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %694, i32 0, i32 1
  %arrayidx1505 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1504, i32 0, i64 0
  %rtx1506 = bitcast %union.rtunion_def* %arrayidx1505 to %struct.rtx_def**
  %695 = load %struct.rtx_def*, %struct.rtx_def** %rtx1506, align 8
  %696 = bitcast %struct.rtx_def* %695 to i32*
  %bf.load1507 = load i32, i32* %696, align 8
  %bf.lshr1508 = lshr i32 %bf.load1507, 16
  %bf.clear1509 = and i32 %bf.lshr1508, 255
  %697 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %fld1510 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %697, i32 0, i32 1
  %arrayidx1511 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1510, i32 0, i64 0
  %rtuint1512 = bitcast %union.rtunion_def* %arrayidx1511 to i32*
  %698 = load i32, i32* %rtuint1512, align 4
  %call1513 = call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear1509, i32 %698)
  store %struct.rtx_def* %call1513, %struct.rtx_def** %ni2dest, align 8
  br label %if.end.1514

if.end.1514:                                      ; preds = %if.then.1503, %land.lhs.true.1498, %land.lhs.true.1496, %lor.lhs.false.1485, %land.lhs.true.1474, %land.lhs.true.1465, %if.then.1453
  %699 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %700 = load %struct.rtx_def*, %struct.rtx_def** %ni2dest, align 8
  %call1515 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %700)
  %call1516 = call %struct.rtvec_def* (i32, ...) @gen_rtvec(i32 2, %struct.rtx_def* %699, %struct.rtx_def* %call1515)
  %call1517 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call1516)
  %701 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call1518 = call %struct.rtx_def* @split_insns(%struct.rtx_def* %call1517, %struct.rtx_def* %701)
  store %struct.rtx_def* %call1518, %struct.rtx_def** %m_split, align 8
  %702 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %tobool1519 = icmp ne %struct.rtx_def* %702, null
  br i1 %tobool1519, label %if.end.1528, label %land.lhs.true.1520

land.lhs.true.1520:                               ; preds = %if.end.1514
  %703 = load %struct.rtx_def*, %struct.rtx_def** %ni2dest, align 8
  %704 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %cmp1521 = icmp ne %struct.rtx_def* %703, %704
  br i1 %cmp1521, label %if.then.1523, label %if.end.1528

if.then.1523:                                     ; preds = %land.lhs.true.1520
  %705 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  store %struct.rtx_def* %705, %struct.rtx_def** %ni2dest, align 8
  %706 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %707 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %call1524 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %707)
  %call1525 = call %struct.rtvec_def* (i32, ...) @gen_rtvec(i32 2, %struct.rtx_def* %706, %struct.rtx_def* %call1524)
  %call1526 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call1525)
  %708 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call1527 = call %struct.rtx_def* @split_insns(%struct.rtx_def* %call1526, %struct.rtx_def* %708)
  store %struct.rtx_def* %call1527, %struct.rtx_def** %m_split, align 8
  br label %if.end.1528

if.end.1528:                                      ; preds = %if.then.1523, %land.lhs.true.1520, %if.end.1514
  br label %if.end.1529

if.end.1529:                                      ; preds = %if.end.1528, %land.lhs.true.1450, %if.then.1446
  %709 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %tobool1530 = icmp ne %struct.rtx_def* %709, null
  br i1 %tobool1530, label %land.lhs.true.1531, label %if.end.1552

land.lhs.true.1531:                               ; preds = %if.end.1529
  %710 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %711 = bitcast %struct.rtx_def* %710 to i32*
  %bf.load1532 = load i32, i32* %711, align 8
  %bf.clear1533 = and i32 %bf.load1532, 65535
  %cmp1534 = icmp eq i32 %bf.clear1533, 24
  br i1 %cmp1534, label %land.lhs.true.1536, label %if.end.1552

land.lhs.true.1536:                               ; preds = %land.lhs.true.1531
  %712 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %fld1537 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %712, i32 0, i32 1
  %arrayidx1538 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1537, i32 0, i64 0
  %rtvec1539 = bitcast %union.rtunion_def* %arrayidx1538 to %struct.rtvec_def**
  %713 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1539, align 8
  %num_elem1540 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %713, i32 0, i32 0
  %714 = load i32, i32* %num_elem1540, align 4
  %cmp1541 = icmp eq i32 %714, 1
  br i1 %cmp1541, label %if.then.1543, label %if.end.1552

if.then.1543:                                     ; preds = %land.lhs.true.1536
  %715 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %fld1544 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %715, i32 0, i32 1
  %arrayidx1545 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1544, i32 0, i64 0
  %rtvec1546 = bitcast %union.rtunion_def* %arrayidx1545 to %struct.rtvec_def**
  %716 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1546, align 8
  %elem1547 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %716, i32 0, i32 1
  %arrayidx1548 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1547, i32 0, i64 0
  %717 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1548, align 8
  %fld1549 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %717, i32 0, i32 1
  %arrayidx1550 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1549, i32 0, i64 3
  %rtx1551 = bitcast %union.rtunion_def* %arrayidx1550 to %struct.rtx_def**
  %718 = load %struct.rtx_def*, %struct.rtx_def** %rtx1551, align 8
  store %struct.rtx_def* %718, %struct.rtx_def** %m_split, align 8
  br label %if.end.1552

if.end.1552:                                      ; preds = %if.then.1543, %land.lhs.true.1536, %land.lhs.true.1531, %if.end.1529
  %719 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %tobool1553 = icmp ne %struct.rtx_def* %719, null
  br i1 %tobool1553, label %land.lhs.true.1554, label %if.else.1565

land.lhs.true.1554:                               ; preds = %if.end.1552
  %720 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %721 = bitcast %struct.rtx_def* %720 to i32*
  %bf.load1555 = load i32, i32* %721, align 8
  %bf.clear1556 = and i32 %bf.load1555, 65535
  %cmp1557 = icmp ne i32 %bf.clear1556, 24
  br i1 %cmp1557, label %if.then.1559, label %if.else.1565

if.then.1559:                                     ; preds = %land.lhs.true.1554
  %722 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call1560 = call i32 @recog_for_combine(%struct.rtx_def** %m_split, %struct.rtx_def* %722, %struct.rtx_def** %new_i3_notes)
  store i32 %call1560, i32* %insn_code_number, align 4
  %723 = load i32, i32* %insn_code_number, align 4
  %cmp1561 = icmp sge i32 %723, 0
  br i1 %cmp1561, label %if.then.1563, label %if.end.1564

if.then.1563:                                     ; preds = %if.then.1559
  %724 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  store %struct.rtx_def* %724, %struct.rtx_def** %newpat, align 8
  br label %if.end.1564

if.end.1564:                                      ; preds = %if.then.1563, %if.then.1559
  br label %if.end.1853

if.else.1565:                                     ; preds = %land.lhs.true.1554, %if.end.1552
  %725 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %tobool1566 = icmp ne %struct.rtx_def* %725, null
  br i1 %tobool1566, label %land.lhs.true.1567, label %if.end.1852

land.lhs.true.1567:                               ; preds = %if.else.1565
  %726 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %727 = bitcast %struct.rtx_def* %726 to i32*
  %bf.load1568 = load i32, i32* %727, align 8
  %bf.clear1569 = and i32 %bf.load1568, 65535
  %cmp1570 = icmp eq i32 %bf.clear1569, 24
  br i1 %cmp1570, label %land.lhs.true.1572, label %if.end.1852

land.lhs.true.1572:                               ; preds = %land.lhs.true.1567
  %728 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %fld1573 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %728, i32 0, i32 1
  %arrayidx1574 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1573, i32 0, i64 0
  %rtvec1575 = bitcast %union.rtunion_def* %arrayidx1574 to %struct.rtvec_def**
  %729 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1575, align 8
  %num_elem1576 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %729, i32 0, i32 0
  %730 = load i32, i32* %num_elem1576, align 4
  %cmp1577 = icmp eq i32 %730, 2
  br i1 %cmp1577, label %land.lhs.true.1579, label %if.end.1852

land.lhs.true.1579:                               ; preds = %land.lhs.true.1572
  %731 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call1580 = call %struct.rtx_def* @next_real_insn(%struct.rtx_def* %731)
  %732 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %cmp1581 = icmp eq %struct.rtx_def* %call1580, %732
  br i1 %cmp1581, label %if.then.1609, label %lor.lhs.false.1583

lor.lhs.false.1583:                               ; preds = %land.lhs.true.1579
  %733 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %fld1584 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %733, i32 0, i32 1
  %arrayidx1585 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1584, i32 0, i64 0
  %rtvec1586 = bitcast %union.rtunion_def* %arrayidx1585 to %struct.rtvec_def**
  %734 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1586, align 8
  %elem1587 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %734, i32 0, i32 1
  %arrayidx1588 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1587, i32 0, i64 0
  %735 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1588, align 8
  %fld1589 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %735, i32 0, i32 1
  %arrayidx1590 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1589, i32 0, i64 3
  %rtx1591 = bitcast %union.rtunion_def* %arrayidx1590 to %struct.rtx_def**
  %736 = load %struct.rtx_def*, %struct.rtx_def** %rtx1591, align 8
  %737 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld1592 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %737, i32 0, i32 1
  %arrayidx1593 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1592, i32 0, i64 0
  %rtint1594 = bitcast %union.rtunion_def* %arrayidx1593 to i32*
  %738 = load i32, i32* %rtint1594, align 4
  %739 = load i32, i32* @max_uid_cuid, align 4
  %cmp1595 = icmp sgt i32 %738, %739
  br i1 %cmp1595, label %cond.true.1597, label %cond.false.1599

cond.true.1597:                                   ; preds = %lor.lhs.false.1583
  %740 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call1598 = call i32 @insn_cuid(%struct.rtx_def* %740)
  br label %cond.end.1605

cond.false.1599:                                  ; preds = %lor.lhs.false.1583
  %741 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld1600 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %741, i32 0, i32 1
  %arrayidx1601 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1600, i32 0, i64 0
  %rtint1602 = bitcast %union.rtunion_def* %arrayidx1601 to i32*
  %742 = load i32, i32* %rtint1602, align 4
  %idxprom1603 = sext i32 %742 to i64
  %743 = load i32*, i32** @uid_cuid, align 8
  %arrayidx1604 = getelementptr inbounds i32, i32* %743, i64 %idxprom1603
  %744 = load i32, i32* %arrayidx1604, align 4
  br label %cond.end.1605

cond.end.1605:                                    ; preds = %cond.false.1599, %cond.true.1597
  %cond1606 = phi i32 [ %call1598, %cond.true.1597 ], [ %744, %cond.false.1599 ]
  %call1607 = call i32 @use_crosses_set_p(%struct.rtx_def* %736, i32 %cond1606)
  %tobool1608 = icmp ne i32 %call1607, 0
  br i1 %tobool1608, label %if.end.1852, label %if.then.1609

if.then.1609:                                     ; preds = %cond.end.1605, %land.lhs.true.1579
  %745 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %fld1610 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %745, i32 0, i32 1
  %arrayidx1611 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1610, i32 0, i64 0
  %rtvec1612 = bitcast %union.rtunion_def* %arrayidx1611 to %struct.rtvec_def**
  %746 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1612, align 8
  %elem1613 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %746, i32 0, i32 1
  %arrayidx1614 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1613, i32 0, i64 1
  %747 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1614, align 8
  %fld1615 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %747, i32 0, i32 1
  %arrayidx1616 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1615, i32 0, i64 3
  %rtx1617 = bitcast %union.rtunion_def* %arrayidx1616 to %struct.rtx_def**
  %748 = load %struct.rtx_def*, %struct.rtx_def** %rtx1617, align 8
  store %struct.rtx_def* %748, %struct.rtx_def** %newi3pat, align 8
  %749 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %fld1618 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %749, i32 0, i32 1
  %arrayidx1619 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1618, i32 0, i64 0
  %rtvec1620 = bitcast %union.rtunion_def* %arrayidx1619 to %struct.rtvec_def**
  %750 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1620, align 8
  %elem1621 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %750, i32 0, i32 1
  %arrayidx1622 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1621, i32 0, i64 0
  %751 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1622, align 8
  %fld1623 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %751, i32 0, i32 1
  %arrayidx1624 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1623, i32 0, i64 3
  %rtx1625 = bitcast %union.rtunion_def* %arrayidx1624 to %struct.rtx_def**
  %752 = load %struct.rtx_def*, %struct.rtx_def** %rtx1625, align 8
  store %struct.rtx_def* %752, %struct.rtx_def** %newi2pat, align 8
  %753 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %fld1626 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %753, i32 0, i32 1
  %arrayidx1627 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1626, i32 0, i64 0
  %rtvec1628 = bitcast %union.rtunion_def* %arrayidx1627 to %struct.rtvec_def**
  %754 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1628, align 8
  %elem1629 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %754, i32 0, i32 1
  %arrayidx1630 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1629, i32 0, i64 1
  %755 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1630, align 8
  %756 = bitcast %struct.rtx_def* %755 to i32*
  %bf.load1631 = load i32, i32* %756, align 8
  %bf.clear1632 = and i32 %bf.load1631, 65535
  %idxprom1633 = sext i32 %bf.clear1632 to i64
  %arrayidx1634 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom1633
  %757 = load i8, i8* %arrayidx1634, align 1
  %conv1635 = sext i8 %757 to i32
  %cmp1636 = icmp eq i32 %conv1635, 105
  br i1 %cmp1636, label %cond.true.1638, label %cond.false.1677

cond.true.1638:                                   ; preds = %if.then.1609
  %758 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %fld1639 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %758, i32 0, i32 1
  %arrayidx1640 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1639, i32 0, i64 0
  %rtvec1641 = bitcast %union.rtunion_def* %arrayidx1640 to %struct.rtvec_def**
  %759 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1641, align 8
  %elem1642 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %759, i32 0, i32 1
  %arrayidx1643 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1642, i32 0, i64 1
  %760 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1643, align 8
  %fld1644 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %760, i32 0, i32 1
  %arrayidx1645 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1644, i32 0, i64 3
  %rtx1646 = bitcast %union.rtunion_def* %arrayidx1645 to %struct.rtx_def**
  %761 = load %struct.rtx_def*, %struct.rtx_def** %rtx1646, align 8
  %762 = bitcast %struct.rtx_def* %761 to i32*
  %bf.load1647 = load i32, i32* %762, align 8
  %bf.clear1648 = and i32 %bf.load1647, 65535
  %cmp1649 = icmp eq i32 %bf.clear1648, 47
  br i1 %cmp1649, label %cond.true.1651, label %cond.false.1660

cond.true.1651:                                   ; preds = %cond.true.1638
  %763 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %fld1652 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %763, i32 0, i32 1
  %arrayidx1653 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1652, i32 0, i64 0
  %rtvec1654 = bitcast %union.rtunion_def* %arrayidx1653 to %struct.rtvec_def**
  %764 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1654, align 8
  %elem1655 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %764, i32 0, i32 1
  %arrayidx1656 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1655, i32 0, i64 1
  %765 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1656, align 8
  %fld1657 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %765, i32 0, i32 1
  %arrayidx1658 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1657, i32 0, i64 3
  %rtx1659 = bitcast %union.rtunion_def* %arrayidx1658 to %struct.rtx_def**
  %766 = load %struct.rtx_def*, %struct.rtx_def** %rtx1659, align 8
  br label %cond.end.1675

cond.false.1660:                                  ; preds = %cond.true.1638
  %767 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %fld1661 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %767, i32 0, i32 1
  %arrayidx1662 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1661, i32 0, i64 0
  %rtvec1663 = bitcast %union.rtunion_def* %arrayidx1662 to %struct.rtvec_def**
  %768 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1663, align 8
  %elem1664 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %768, i32 0, i32 1
  %arrayidx1665 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1664, i32 0, i64 1
  %769 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1665, align 8
  %770 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %fld1666 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %770, i32 0, i32 1
  %arrayidx1667 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1666, i32 0, i64 0
  %rtvec1668 = bitcast %union.rtunion_def* %arrayidx1667 to %struct.rtvec_def**
  %771 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1668, align 8
  %elem1669 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %771, i32 0, i32 1
  %arrayidx1670 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1669, i32 0, i64 1
  %772 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1670, align 8
  %fld1671 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %772, i32 0, i32 1
  %arrayidx1672 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1671, i32 0, i64 3
  %rtx1673 = bitcast %union.rtunion_def* %arrayidx1672 to %struct.rtx_def**
  %773 = load %struct.rtx_def*, %struct.rtx_def** %rtx1673, align 8
  %call1674 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %769, %struct.rtx_def* %773)
  br label %cond.end.1675

cond.end.1675:                                    ; preds = %cond.false.1660, %cond.true.1651
  %cond1676 = phi %struct.rtx_def* [ %766, %cond.true.1651 ], [ %call1674, %cond.false.1660 ]
  br label %cond.end.1678

cond.false.1677:                                  ; preds = %if.then.1609
  br label %cond.end.1678

cond.end.1678:                                    ; preds = %cond.false.1677, %cond.end.1675
  %cond1679 = phi %struct.rtx_def* [ %cond1676, %cond.end.1675 ], [ null, %cond.false.1677 ]
  store %struct.rtx_def* %cond1679, %struct.rtx_def** %i3set, align 8
  %774 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %fld1680 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %774, i32 0, i32 1
  %arrayidx1681 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1680, i32 0, i64 0
  %rtvec1682 = bitcast %union.rtunion_def* %arrayidx1681 to %struct.rtvec_def**
  %775 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1682, align 8
  %elem1683 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %775, i32 0, i32 1
  %arrayidx1684 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1683, i32 0, i64 0
  %776 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1684, align 8
  %777 = bitcast %struct.rtx_def* %776 to i32*
  %bf.load1685 = load i32, i32* %777, align 8
  %bf.clear1686 = and i32 %bf.load1685, 65535
  %idxprom1687 = sext i32 %bf.clear1686 to i64
  %arrayidx1688 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom1687
  %778 = load i8, i8* %arrayidx1688, align 1
  %conv1689 = sext i8 %778 to i32
  %cmp1690 = icmp eq i32 %conv1689, 105
  br i1 %cmp1690, label %cond.true.1692, label %cond.false.1731

cond.true.1692:                                   ; preds = %cond.end.1678
  %779 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %fld1693 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %779, i32 0, i32 1
  %arrayidx1694 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1693, i32 0, i64 0
  %rtvec1695 = bitcast %union.rtunion_def* %arrayidx1694 to %struct.rtvec_def**
  %780 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1695, align 8
  %elem1696 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %780, i32 0, i32 1
  %arrayidx1697 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1696, i32 0, i64 0
  %781 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1697, align 8
  %fld1698 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %781, i32 0, i32 1
  %arrayidx1699 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1698, i32 0, i64 3
  %rtx1700 = bitcast %union.rtunion_def* %arrayidx1699 to %struct.rtx_def**
  %782 = load %struct.rtx_def*, %struct.rtx_def** %rtx1700, align 8
  %783 = bitcast %struct.rtx_def* %782 to i32*
  %bf.load1701 = load i32, i32* %783, align 8
  %bf.clear1702 = and i32 %bf.load1701, 65535
  %cmp1703 = icmp eq i32 %bf.clear1702, 47
  br i1 %cmp1703, label %cond.true.1705, label %cond.false.1714

cond.true.1705:                                   ; preds = %cond.true.1692
  %784 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %fld1706 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %784, i32 0, i32 1
  %arrayidx1707 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1706, i32 0, i64 0
  %rtvec1708 = bitcast %union.rtunion_def* %arrayidx1707 to %struct.rtvec_def**
  %785 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1708, align 8
  %elem1709 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %785, i32 0, i32 1
  %arrayidx1710 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1709, i32 0, i64 0
  %786 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1710, align 8
  %fld1711 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %786, i32 0, i32 1
  %arrayidx1712 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1711, i32 0, i64 3
  %rtx1713 = bitcast %union.rtunion_def* %arrayidx1712 to %struct.rtx_def**
  %787 = load %struct.rtx_def*, %struct.rtx_def** %rtx1713, align 8
  br label %cond.end.1729

cond.false.1714:                                  ; preds = %cond.true.1692
  %788 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %fld1715 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %788, i32 0, i32 1
  %arrayidx1716 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1715, i32 0, i64 0
  %rtvec1717 = bitcast %union.rtunion_def* %arrayidx1716 to %struct.rtvec_def**
  %789 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1717, align 8
  %elem1718 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %789, i32 0, i32 1
  %arrayidx1719 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1718, i32 0, i64 0
  %790 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1719, align 8
  %791 = load %struct.rtx_def*, %struct.rtx_def** %m_split, align 8
  %fld1720 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %791, i32 0, i32 1
  %arrayidx1721 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1720, i32 0, i64 0
  %rtvec1722 = bitcast %union.rtunion_def* %arrayidx1721 to %struct.rtvec_def**
  %792 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1722, align 8
  %elem1723 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %792, i32 0, i32 1
  %arrayidx1724 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1723, i32 0, i64 0
  %793 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1724, align 8
  %fld1725 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %793, i32 0, i32 1
  %arrayidx1726 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1725, i32 0, i64 3
  %rtx1727 = bitcast %union.rtunion_def* %arrayidx1726 to %struct.rtx_def**
  %794 = load %struct.rtx_def*, %struct.rtx_def** %rtx1727, align 8
  %call1728 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %790, %struct.rtx_def* %794)
  br label %cond.end.1729

cond.end.1729:                                    ; preds = %cond.false.1714, %cond.true.1705
  %cond1730 = phi %struct.rtx_def* [ %787, %cond.true.1705 ], [ %call1728, %cond.false.1714 ]
  br label %cond.end.1732

cond.false.1731:                                  ; preds = %cond.end.1678
  br label %cond.end.1732

cond.end.1732:                                    ; preds = %cond.false.1731, %cond.end.1729
  %cond1733 = phi %struct.rtx_def* [ %cond1730, %cond.end.1729 ], [ null, %cond.false.1731 ]
  store %struct.rtx_def* %cond1733, %struct.rtx_def** %i2set, align 8
  %795 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %fld1734 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %795, i32 0, i32 1
  %arrayidx1735 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1734, i32 0, i64 0
  %rtuint1736 = bitcast %union.rtunion_def* %arrayidx1735 to i32*
  %796 = load i32, i32* %rtuint1736, align 4
  %cmp1737 = icmp uge i32 %796, 53
  br i1 %cmp1737, label %if.then.1739, label %if.end.1747

if.then.1739:                                     ; preds = %cond.end.1732
  %797 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %fld1740 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %797, i32 0, i32 1
  %arrayidx1741 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1740, i32 0, i64 0
  %rtuint1742 = bitcast %union.rtunion_def* %arrayidx1741 to i32*
  %798 = load i32, i32* %rtuint1742, align 4
  %idxprom1743 = zext i32 %798 to i64
  %799 = load %struct.function*, %struct.function** @cfun, align 8
  %emit1744 = getelementptr inbounds %struct.function, %struct.function* %799, i32 0, i32 3
  %800 = load %struct.emit_status*, %struct.emit_status** %emit1744, align 8
  %x_regno_reg_rtx1745 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %800, i32 0, i32 12
  %801 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx1745, align 8
  %arrayidx1746 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %801, i64 %idxprom1743
  %802 = load %struct.rtx_def*, %struct.rtx_def** %ni2dest, align 8
  call void @do_SUBST(%struct.rtx_def** %arrayidx1746, %struct.rtx_def* %802)
  br label %if.end.1747

if.end.1747:                                      ; preds = %if.then.1739, %cond.end.1732
  %803 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call1748 = call i32 @recog_for_combine(%struct.rtx_def** %newi2pat, %struct.rtx_def* %803, %struct.rtx_def** %new_i2_notes)
  store i32 %call1748, i32* %i2_code_number, align 4
  %804 = load i32, i32* %i2_code_number, align 4
  %cmp1749 = icmp sge i32 %804, 0
  br i1 %cmp1749, label %land.lhs.true.1751, label %if.end.1767

land.lhs.true.1751:                               ; preds = %if.end.1747
  %805 = load %struct.rtx_def*, %struct.rtx_def** %i2set, align 8
  %tobool1752 = icmp ne %struct.rtx_def* %805, null
  br i1 %tobool1752, label %land.lhs.true.1753, label %if.end.1767

land.lhs.true.1753:                               ; preds = %land.lhs.true.1751
  %806 = load %struct.rtx_def*, %struct.rtx_def** %i3set, align 8
  %tobool1754 = icmp ne %struct.rtx_def* %806, null
  br i1 %tobool1754, label %land.lhs.true.1755, label %if.end.1767

land.lhs.true.1755:                               ; preds = %land.lhs.true.1753
  %807 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call1756 = call %struct.rtx_def* @next_real_insn(%struct.rtx_def* %807)
  %808 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %cmp1757 = icmp eq %struct.rtx_def* %call1756, %808
  br i1 %cmp1757, label %if.then.1765, label %lor.lhs.false.1759

lor.lhs.false.1759:                               ; preds = %land.lhs.true.1755
  %809 = load %struct.rtx_def*, %struct.rtx_def** %i2set, align 8
  %fld1760 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %809, i32 0, i32 1
  %arrayidx1761 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1760, i32 0, i64 0
  %rtx1762 = bitcast %union.rtunion_def* %arrayidx1761 to %struct.rtx_def**
  %810 = load %struct.rtx_def*, %struct.rtx_def** %rtx1762, align 8
  %811 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %812 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call1763 = call i32 @reg_used_between_p(%struct.rtx_def* %810, %struct.rtx_def* %811, %struct.rtx_def* %812)
  %tobool1764 = icmp ne i32 %call1763, 0
  br i1 %tobool1764, label %if.end.1767, label %if.then.1765

if.then.1765:                                     ; preds = %lor.lhs.false.1759, %land.lhs.true.1755
  %813 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call1766 = call i32 @recog_for_combine(%struct.rtx_def** %newi3pat, %struct.rtx_def* %813, %struct.rtx_def** %new_i3_notes)
  store i32 %call1766, i32* %insn_code_number, align 4
  br label %if.end.1767

if.end.1767:                                      ; preds = %if.then.1765, %lor.lhs.false.1759, %land.lhs.true.1753, %land.lhs.true.1751, %if.end.1747
  %814 = load i32, i32* %insn_code_number, align 4
  %cmp1768 = icmp sge i32 %814, 0
  br i1 %cmp1768, label %if.then.1770, label %if.end.1771

if.then.1770:                                     ; preds = %if.end.1767
  %815 = load %struct.rtx_def*, %struct.rtx_def** %newi3pat, align 8
  store %struct.rtx_def* %815, %struct.rtx_def** %newpat, align 8
  br label %if.end.1771

if.end.1771:                                      ; preds = %if.then.1770, %if.end.1767
  %816 = load i32, i32* %insn_code_number, align 4
  %cmp1772 = icmp sge i32 %816, 0
  br i1 %cmp1772, label %if.then.1774, label %if.end.1851

if.then.1774:                                     ; preds = %if.end.1771
  %817 = load %struct.rtx_def*, %struct.rtx_def** %i3set, align 8
  %fld1775 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %817, i32 0, i32 1
  %arrayidx1776 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1775, i32 0, i64 0
  %rtx1777 = bitcast %union.rtunion_def* %arrayidx1776 to %struct.rtx_def**
  %818 = load %struct.rtx_def*, %struct.rtx_def** %rtx1777, align 8
  store %struct.rtx_def* %818, %struct.rtx_def** %new_i3_dest, align 8
  %819 = load %struct.rtx_def*, %struct.rtx_def** %i2set, align 8
  %fld1778 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %819, i32 0, i32 1
  %arrayidx1779 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1778, i32 0, i64 0
  %rtx1780 = bitcast %union.rtunion_def* %arrayidx1779 to %struct.rtx_def**
  %820 = load %struct.rtx_def*, %struct.rtx_def** %rtx1780, align 8
  store %struct.rtx_def* %820, %struct.rtx_def** %new_i2_dest, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then.1774
  %821 = load %struct.rtx_def*, %struct.rtx_def** %new_i3_dest, align 8
  %822 = bitcast %struct.rtx_def* %821 to i32*
  %bf.load1781 = load i32, i32* %822, align 8
  %bf.clear1782 = and i32 %bf.load1781, 65535
  %cmp1783 = icmp eq i32 %bf.clear1782, 133
  br i1 %cmp1783, label %lor.end.1795, label %lor.lhs.false.1785

lor.lhs.false.1785:                               ; preds = %while.cond
  %823 = load %struct.rtx_def*, %struct.rtx_def** %new_i3_dest, align 8
  %824 = bitcast %struct.rtx_def* %823 to i32*
  %bf.load1786 = load i32, i32* %824, align 8
  %bf.clear1787 = and i32 %bf.load1786, 65535
  %cmp1788 = icmp eq i32 %bf.clear1787, 64
  br i1 %cmp1788, label %lor.end.1795, label %lor.rhs.1790

lor.rhs.1790:                                     ; preds = %lor.lhs.false.1785
  %825 = load %struct.rtx_def*, %struct.rtx_def** %new_i3_dest, align 8
  %826 = bitcast %struct.rtx_def* %825 to i32*
  %bf.load1791 = load i32, i32* %826, align 8
  %bf.clear1792 = and i32 %bf.load1791, 65535
  %cmp1793 = icmp eq i32 %bf.clear1792, 63
  br label %lor.end.1795

lor.end.1795:                                     ; preds = %lor.rhs.1790, %lor.lhs.false.1785, %while.cond
  %827 = phi i1 [ true, %lor.lhs.false.1785 ], [ true, %while.cond ], [ %cmp1793, %lor.rhs.1790 ]
  br i1 %827, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end.1795
  %828 = load %struct.rtx_def*, %struct.rtx_def** %new_i3_dest, align 8
  %fld1797 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %828, i32 0, i32 1
  %arrayidx1798 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1797, i32 0, i64 0
  %rtx1799 = bitcast %union.rtunion_def* %arrayidx1798 to %struct.rtx_def**
  %829 = load %struct.rtx_def*, %struct.rtx_def** %rtx1799, align 8
  store %struct.rtx_def* %829, %struct.rtx_def** %new_i3_dest, align 8
  br label %while.cond

while.end:                                        ; preds = %lor.end.1795
  br label %while.cond.1800

while.cond.1800:                                  ; preds = %while.body.1817, %while.end
  %830 = load %struct.rtx_def*, %struct.rtx_def** %new_i2_dest, align 8
  %831 = bitcast %struct.rtx_def* %830 to i32*
  %bf.load1801 = load i32, i32* %831, align 8
  %bf.clear1802 = and i32 %bf.load1801, 65535
  %cmp1803 = icmp eq i32 %bf.clear1802, 133
  br i1 %cmp1803, label %lor.end.1815, label %lor.lhs.false.1805

lor.lhs.false.1805:                               ; preds = %while.cond.1800
  %832 = load %struct.rtx_def*, %struct.rtx_def** %new_i2_dest, align 8
  %833 = bitcast %struct.rtx_def* %832 to i32*
  %bf.load1806 = load i32, i32* %833, align 8
  %bf.clear1807 = and i32 %bf.load1806, 65535
  %cmp1808 = icmp eq i32 %bf.clear1807, 64
  br i1 %cmp1808, label %lor.end.1815, label %lor.rhs.1810

lor.rhs.1810:                                     ; preds = %lor.lhs.false.1805
  %834 = load %struct.rtx_def*, %struct.rtx_def** %new_i2_dest, align 8
  %835 = bitcast %struct.rtx_def* %834 to i32*
  %bf.load1811 = load i32, i32* %835, align 8
  %bf.clear1812 = and i32 %bf.load1811, 65535
  %cmp1813 = icmp eq i32 %bf.clear1812, 63
  br label %lor.end.1815

lor.end.1815:                                     ; preds = %lor.rhs.1810, %lor.lhs.false.1805, %while.cond.1800
  %836 = phi i1 [ true, %lor.lhs.false.1805 ], [ true, %while.cond.1800 ], [ %cmp1813, %lor.rhs.1810 ]
  br i1 %836, label %while.body.1817, label %while.end.1821

while.body.1817:                                  ; preds = %lor.end.1815
  %837 = load %struct.rtx_def*, %struct.rtx_def** %new_i2_dest, align 8
  %fld1818 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %837, i32 0, i32 1
  %arrayidx1819 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1818, i32 0, i64 0
  %rtx1820 = bitcast %union.rtunion_def* %arrayidx1819 to %struct.rtx_def**
  %838 = load %struct.rtx_def*, %struct.rtx_def** %rtx1820, align 8
  store %struct.rtx_def* %838, %struct.rtx_def** %new_i2_dest, align 8
  br label %while.cond.1800

while.end.1821:                                   ; preds = %lor.end.1815
  %839 = load %struct.rtx_def*, %struct.rtx_def** %new_i3_dest, align 8
  %840 = bitcast %struct.rtx_def* %839 to i32*
  %bf.load1822 = load i32, i32* %840, align 8
  %bf.clear1823 = and i32 %bf.load1822, 65535
  %cmp1824 = icmp eq i32 %bf.clear1823, 61
  br i1 %cmp1824, label %land.lhs.true.1826, label %if.end.1850

land.lhs.true.1826:                               ; preds = %while.end.1821
  %841 = load %struct.rtx_def*, %struct.rtx_def** %new_i2_dest, align 8
  %842 = bitcast %struct.rtx_def* %841 to i32*
  %bf.load1827 = load i32, i32* %842, align 8
  %bf.clear1828 = and i32 %bf.load1827, 65535
  %cmp1829 = icmp eq i32 %bf.clear1828, 61
  br i1 %cmp1829, label %land.lhs.true.1831, label %if.end.1850

land.lhs.true.1831:                               ; preds = %land.lhs.true.1826
  %843 = load %struct.rtx_def*, %struct.rtx_def** %new_i3_dest, align 8
  %fld1832 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %843, i32 0, i32 1
  %arrayidx1833 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1832, i32 0, i64 0
  %rtuint1834 = bitcast %union.rtunion_def* %arrayidx1833 to i32*
  %844 = load i32, i32* %rtuint1834, align 4
  %845 = load %struct.rtx_def*, %struct.rtx_def** %new_i2_dest, align 8
  %fld1835 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %845, i32 0, i32 1
  %arrayidx1836 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1835, i32 0, i64 0
  %rtuint1837 = bitcast %union.rtunion_def* %arrayidx1836 to i32*
  %846 = load i32, i32* %rtuint1837, align 4
  %cmp1838 = icmp eq i32 %844, %846
  br i1 %cmp1838, label %if.then.1840, label %if.end.1850

if.then.1840:                                     ; preds = %land.lhs.true.1831
  %847 = load %struct.rtx_def*, %struct.rtx_def** %new_i2_dest, align 8
  %fld1841 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %847, i32 0, i32 1
  %arrayidx1842 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1841, i32 0, i64 0
  %rtuint1843 = bitcast %union.rtunion_def* %arrayidx1842 to i32*
  %848 = load i32, i32* %rtuint1843, align 4
  %idxprom1844 = zext i32 %848 to i64
  %849 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data1845 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %849, i32 0, i32 4
  %reg1846 = bitcast %union.varray_data_tag* %data1845 to [1 x %struct.reg_info_def*]*
  %arrayidx1847 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg1846, i32 0, i64 %idxprom1844
  %850 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx1847, align 8
  %sets1848 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %850, i32 0, i32 3
  %851 = load i32, i32* %sets1848, align 4
  %inc1849 = add nsw i32 %851, 1
  store i32 %inc1849, i32* %sets1848, align 4
  br label %if.end.1850

if.end.1850:                                      ; preds = %if.then.1840, %land.lhs.true.1831, %land.lhs.true.1826, %while.end.1821
  br label %if.end.1851

if.end.1851:                                      ; preds = %if.end.1850, %if.end.1771
  br label %if.end.1852

if.end.1852:                                      ; preds = %if.end.1851, %cond.end.1605, %land.lhs.true.1572, %land.lhs.true.1567, %if.else.1565
  br label %if.end.1853

if.end.1853:                                      ; preds = %if.end.1852, %if.end.1564
  %852 = load i32, i32* %insn_code_number, align 4
  %cmp1854 = icmp slt i32 %852, 0
  br i1 %cmp1854, label %land.lhs.true.1856, label %if.end.2025

land.lhs.true.1856:                               ; preds = %if.end.1853
  %853 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call1857 = call %struct.rtx_def** @find_split_point(%struct.rtx_def** %newpat, %struct.rtx_def* %853)
  store %struct.rtx_def** %call1857, %struct.rtx_def*** %split, align 8
  %cmp1858 = icmp ne %struct.rtx_def** %call1857, null
  br i1 %cmp1858, label %land.lhs.true.1860, label %if.end.2025

land.lhs.true.1860:                               ; preds = %land.lhs.true.1856
  %854 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %855 = load %struct.rtx_def*, %struct.rtx_def** %854, align 8
  %856 = bitcast %struct.rtx_def* %855 to i32*
  %bf.load1861 = load i32, i32* %856, align 8
  %bf.lshr1862 = lshr i32 %bf.load1861, 16
  %bf.clear1863 = and i32 %bf.lshr1862, 255
  %857 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %858 = bitcast %struct.rtx_def* %857 to i32*
  %bf.load1864 = load i32, i32* %858, align 8
  %bf.lshr1865 = lshr i32 %bf.load1864, 16
  %bf.clear1866 = and i32 %bf.lshr1865, 255
  %cmp1867 = icmp eq i32 %bf.clear1863, %bf.clear1866
  br i1 %cmp1867, label %land.lhs.true.1899, label %lor.lhs.false.1869

lor.lhs.false.1869:                               ; preds = %land.lhs.true.1860
  %859 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %860 = load %struct.rtx_def*, %struct.rtx_def** %859, align 8
  %861 = bitcast %struct.rtx_def* %860 to i32*
  %bf.load1870 = load i32, i32* %861, align 8
  %bf.lshr1871 = lshr i32 %bf.load1870, 16
  %bf.clear1872 = and i32 %bf.lshr1871, 255
  %cmp1873 = icmp eq i32 %bf.clear1872, 0
  br i1 %cmp1873, label %land.lhs.true.1899, label %lor.lhs.false.1875

lor.lhs.false.1875:                               ; preds = %lor.lhs.false.1869
  %862 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %fld1876 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %862, i32 0, i32 1
  %arrayidx1877 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1876, i32 0, i64 0
  %rtuint1878 = bitcast %union.rtunion_def* %arrayidx1877 to i32*
  %863 = load i32, i32* %rtuint1878, align 4
  %cmp1879 = icmp ult i32 %863, 53
  br i1 %cmp1879, label %land.lhs.true.1899, label %lor.lhs.false.1881

lor.lhs.false.1881:                               ; preds = %lor.lhs.false.1875
  %864 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %fld1882 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %864, i32 0, i32 1
  %arrayidx1883 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1882, i32 0, i64 0
  %rtuint1884 = bitcast %union.rtunion_def* %arrayidx1883 to i32*
  %865 = load i32, i32* %rtuint1884, align 4
  %idxprom1885 = zext i32 %865 to i64
  %866 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data1886 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %866, i32 0, i32 4
  %reg1887 = bitcast %union.varray_data_tag* %data1886 to [1 x %struct.reg_info_def*]*
  %arrayidx1888 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg1887, i32 0, i64 %idxprom1885
  %867 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx1888, align 8
  %sets1889 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %867, i32 0, i32 3
  %868 = load i32, i32* %sets1889, align 4
  %cmp1890 = icmp eq i32 %868, 1
  br i1 %cmp1890, label %land.lhs.true.1892, label %if.end.2025

land.lhs.true.1892:                               ; preds = %lor.lhs.false.1881
  %869 = load i32, i32* %added_sets_2, align 4
  %tobool1893 = icmp ne i32 %869, 0
  br i1 %tobool1893, label %if.end.2025, label %land.lhs.true.1894

land.lhs.true.1894:                               ; preds = %land.lhs.true.1892
  %870 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %871 = bitcast %struct.rtx_def* %870 to i32*
  %bf.load1895 = load i32, i32* %871, align 8
  %bf.lshr1896 = lshr i32 %bf.load1895, 27
  %bf.clear1897 = and i32 %bf.lshr1896, 1
  %tobool1898 = icmp ne i32 %bf.clear1897, 0
  br i1 %tobool1898, label %if.end.2025, label %land.lhs.true.1899

land.lhs.true.1899:                               ; preds = %land.lhs.true.1894, %lor.lhs.false.1875, %lor.lhs.false.1869, %land.lhs.true.1860
  %872 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call1900 = call %struct.rtx_def* @next_real_insn(%struct.rtx_def* %872)
  %873 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %cmp1901 = icmp eq %struct.rtx_def* %call1900, %873
  br i1 %cmp1901, label %land.lhs.true.1921, label %lor.lhs.false.1903

lor.lhs.false.1903:                               ; preds = %land.lhs.true.1899
  %874 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %875 = load %struct.rtx_def*, %struct.rtx_def** %874, align 8
  %876 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld1904 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %876, i32 0, i32 1
  %arrayidx1905 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1904, i32 0, i64 0
  %rtint1906 = bitcast %union.rtunion_def* %arrayidx1905 to i32*
  %877 = load i32, i32* %rtint1906, align 4
  %878 = load i32, i32* @max_uid_cuid, align 4
  %cmp1907 = icmp sgt i32 %877, %878
  br i1 %cmp1907, label %cond.true.1909, label %cond.false.1911

cond.true.1909:                                   ; preds = %lor.lhs.false.1903
  %879 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call1910 = call i32 @insn_cuid(%struct.rtx_def* %879)
  br label %cond.end.1917

cond.false.1911:                                  ; preds = %lor.lhs.false.1903
  %880 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld1912 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %880, i32 0, i32 1
  %arrayidx1913 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1912, i32 0, i64 0
  %rtint1914 = bitcast %union.rtunion_def* %arrayidx1913 to i32*
  %881 = load i32, i32* %rtint1914, align 4
  %idxprom1915 = sext i32 %881 to i64
  %882 = load i32*, i32** @uid_cuid, align 8
  %arrayidx1916 = getelementptr inbounds i32, i32* %882, i64 %idxprom1915
  %883 = load i32, i32* %arrayidx1916, align 4
  br label %cond.end.1917

cond.end.1917:                                    ; preds = %cond.false.1911, %cond.true.1909
  %cond1918 = phi i32 [ %call1910, %cond.true.1909 ], [ %883, %cond.false.1911 ]
  %call1919 = call i32 @use_crosses_set_p(%struct.rtx_def* %875, i32 %cond1918)
  %tobool1920 = icmp ne i32 %call1919, 0
  br i1 %tobool1920, label %if.end.2025, label %land.lhs.true.1921

land.lhs.true.1921:                               ; preds = %cond.end.1917, %land.lhs.true.1899
  %884 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %885 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %call1922 = call i32 @reg_referenced_p(%struct.rtx_def* %884, %struct.rtx_def* %885)
  %tobool1923 = icmp ne i32 %call1922, 0
  br i1 %tobool1923, label %if.end.2025, label %if.then.1924

if.then.1924:                                     ; preds = %land.lhs.true.1921
  %886 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  store %struct.rtx_def* %886, %struct.rtx_def** %newdest, align 8
  %887 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %888 = load %struct.rtx_def*, %struct.rtx_def** %887, align 8
  %889 = bitcast %struct.rtx_def* %888 to i32*
  %bf.load1925 = load i32, i32* %889, align 8
  %bf.clear1926 = and i32 %bf.load1925, 65535
  store i32 %bf.clear1926, i32* %split_code, align 4
  %890 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %891 = load %struct.rtx_def*, %struct.rtx_def** %890, align 8
  %892 = bitcast %struct.rtx_def* %891 to i32*
  %bf.load1927 = load i32, i32* %892, align 8
  %bf.lshr1928 = lshr i32 %bf.load1927, 16
  %bf.clear1929 = and i32 %bf.lshr1928, 255
  store i32 %bf.clear1929, i32* %split_mode, align 4
  %893 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %894 = bitcast %struct.rtx_def* %893 to i32*
  %bf.load1930 = load i32, i32* %894, align 8
  %bf.lshr1931 = lshr i32 %bf.load1930, 16
  %bf.clear1932 = and i32 %bf.lshr1931, 255
  %895 = load i32, i32* %split_mode, align 4
  %cmp1933 = icmp ne i32 %bf.clear1932, %895
  br i1 %cmp1933, label %land.lhs.true.1935, label %if.end.1957

land.lhs.true.1935:                               ; preds = %if.then.1924
  %896 = load i32, i32* %split_mode, align 4
  %cmp1936 = icmp ne i32 %896, 0
  br i1 %cmp1936, label %if.then.1938, label %if.end.1957

if.then.1938:                                     ; preds = %land.lhs.true.1935
  %897 = load i32, i32* %split_mode, align 4
  %898 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %fld1939 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %898, i32 0, i32 1
  %arrayidx1940 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1939, i32 0, i64 0
  %rtuint1941 = bitcast %union.rtunion_def* %arrayidx1940 to i32*
  %899 = load i32, i32* %rtuint1941, align 4
  %call1942 = call %struct.rtx_def* @gen_rtx_REG(i32 %897, i32 %899)
  store %struct.rtx_def* %call1942, %struct.rtx_def** %newdest, align 8
  %900 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %fld1943 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %900, i32 0, i32 1
  %arrayidx1944 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1943, i32 0, i64 0
  %rtuint1945 = bitcast %union.rtunion_def* %arrayidx1944 to i32*
  %901 = load i32, i32* %rtuint1945, align 4
  %cmp1946 = icmp uge i32 %901, 53
  br i1 %cmp1946, label %if.then.1948, label %if.end.1956

if.then.1948:                                     ; preds = %if.then.1938
  %902 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %fld1949 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %902, i32 0, i32 1
  %arrayidx1950 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1949, i32 0, i64 0
  %rtuint1951 = bitcast %union.rtunion_def* %arrayidx1950 to i32*
  %903 = load i32, i32* %rtuint1951, align 4
  %idxprom1952 = zext i32 %903 to i64
  %904 = load %struct.function*, %struct.function** @cfun, align 8
  %emit1953 = getelementptr inbounds %struct.function, %struct.function* %904, i32 0, i32 3
  %905 = load %struct.emit_status*, %struct.emit_status** %emit1953, align 8
  %x_regno_reg_rtx1954 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %905, i32 0, i32 12
  %906 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx1954, align 8
  %arrayidx1955 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %906, i64 %idxprom1952
  %907 = load %struct.rtx_def*, %struct.rtx_def** %newdest, align 8
  call void @do_SUBST(%struct.rtx_def** %arrayidx1955, %struct.rtx_def* %907)
  br label %if.end.1956

if.end.1956:                                      ; preds = %if.then.1948, %if.then.1938
  br label %if.end.1957

if.end.1957:                                      ; preds = %if.end.1956, %land.lhs.true.1935, %if.then.1924
  %908 = load i32, i32* %split_code, align 4
  %cmp1958 = icmp eq i32 %908, 78
  br i1 %cmp1958, label %land.lhs.true.1960, label %if.end.1996

land.lhs.true.1960:                               ; preds = %if.end.1957
  %909 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %910 = load %struct.rtx_def*, %struct.rtx_def** %909, align 8
  %fld1961 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %910, i32 0, i32 1
  %arrayidx1962 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1961, i32 0, i64 1
  %rtx1963 = bitcast %union.rtunion_def* %arrayidx1962 to %struct.rtx_def**
  %911 = load %struct.rtx_def*, %struct.rtx_def** %rtx1963, align 8
  %912 = bitcast %struct.rtx_def* %911 to i32*
  %bf.load1964 = load i32, i32* %912, align 8
  %bf.clear1965 = and i32 %bf.load1964, 65535
  %cmp1966 = icmp eq i32 %bf.clear1965, 54
  br i1 %cmp1966, label %land.lhs.true.1968, label %if.end.1996

land.lhs.true.1968:                               ; preds = %land.lhs.true.1960
  %913 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %914 = load %struct.rtx_def*, %struct.rtx_def** %913, align 8
  %fld1969 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %914, i32 0, i32 1
  %arrayidx1970 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1969, i32 0, i64 1
  %rtx1971 = bitcast %union.rtunion_def* %arrayidx1970 to %struct.rtx_def**
  %915 = load %struct.rtx_def*, %struct.rtx_def** %rtx1971, align 8
  %fld1972 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %915, i32 0, i32 1
  %arrayidx1973 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1972, i32 0, i64 0
  %rtwint1974 = bitcast %union.rtunion_def* %arrayidx1973 to i64*
  %916 = load i64, i64* %rtwint1974, align 8
  %cmp1975 = icmp sgt i64 %916, 0
  br i1 %cmp1975, label %land.lhs.true.1977, label %if.end.1996

land.lhs.true.1977:                               ; preds = %land.lhs.true.1968
  %917 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %918 = load %struct.rtx_def*, %struct.rtx_def** %917, align 8
  %fld1978 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %918, i32 0, i32 1
  %arrayidx1979 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1978, i32 0, i64 1
  %rtx1980 = bitcast %union.rtunion_def* %arrayidx1979 to %struct.rtx_def**
  %919 = load %struct.rtx_def*, %struct.rtx_def** %rtx1980, align 8
  %fld1981 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %919, i32 0, i32 1
  %arrayidx1982 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1981, i32 0, i64 0
  %rtwint1983 = bitcast %union.rtunion_def* %arrayidx1982 to i64*
  %920 = load i64, i64* %rtwint1983, align 8
  %call1984 = call i32 @exact_log2_wide(i64 %920)
  store i32 %call1984, i32* %i, align 4
  %cmp1985 = icmp sge i32 %call1984, 0
  br i1 %cmp1985, label %if.then.1987, label %if.end.1996

if.then.1987:                                     ; preds = %land.lhs.true.1977
  %921 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %922 = load i32, i32* %split_mode, align 4
  %923 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %924 = load %struct.rtx_def*, %struct.rtx_def** %923, align 8
  %fld1988 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %924, i32 0, i32 1
  %arrayidx1989 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1988, i32 0, i64 0
  %rtx1990 = bitcast %union.rtunion_def* %arrayidx1989 to %struct.rtx_def**
  %925 = load %struct.rtx_def*, %struct.rtx_def** %rtx1990, align 8
  %926 = load i32, i32* %i, align 4
  %conv1991 = sext i32 %926 to i64
  %call1992 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv1991)
  %call1993 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 %922, %struct.rtx_def* %925, %struct.rtx_def* %call1992)
  call void @do_SUBST(%struct.rtx_def** %921, %struct.rtx_def* %call1993)
  %927 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %928 = load %struct.rtx_def*, %struct.rtx_def** %927, align 8
  %929 = bitcast %struct.rtx_def* %928 to i32*
  %bf.load1994 = load i32, i32* %929, align 8
  %bf.clear1995 = and i32 %bf.load1994, 65535
  store i32 %bf.clear1995, i32* %split_code, align 4
  br label %if.end.1996

if.end.1996:                                      ; preds = %if.then.1987, %land.lhs.true.1977, %land.lhs.true.1968, %land.lhs.true.1960, %if.end.1957
  %930 = load i32, i32* %split_code, align 4
  %cmp1997 = icmp eq i32 %930, 63
  br i1 %cmp1997, label %land.lhs.true.1999, label %if.end.2012

land.lhs.true.1999:                               ; preds = %if.end.1996
  %931 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %932 = load %struct.rtx_def*, %struct.rtx_def** %931, align 8
  %fld2000 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %932, i32 0, i32 1
  %arrayidx2001 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2000, i32 0, i64 0
  %rtx2002 = bitcast %union.rtunion_def* %arrayidx2001 to %struct.rtx_def**
  %933 = load %struct.rtx_def*, %struct.rtx_def** %rtx2002, align 8
  %934 = bitcast %struct.rtx_def* %933 to i32*
  %bf.load2003 = load i32, i32* %934, align 8
  %bf.clear2004 = and i32 %bf.load2003, 65535
  %cmp2005 = icmp eq i32 %bf.clear2004, 66
  br i1 %cmp2005, label %if.then.2007, label %if.end.2012

if.then.2007:                                     ; preds = %land.lhs.true.1999
  %935 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %936 = load i32, i32* %split_mode, align 4
  %937 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %938 = load %struct.rtx_def*, %struct.rtx_def** %937, align 8
  %fld2008 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %938, i32 0, i32 1
  %arrayidx2009 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2008, i32 0, i64 0
  %rtx2010 = bitcast %union.rtunion_def* %arrayidx2009 to %struct.rtx_def**
  %939 = load %struct.rtx_def*, %struct.rtx_def** %rtx2010, align 8
  %call2011 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 %936, %struct.rtx_def* %939)
  call void @do_SUBST(%struct.rtx_def** %935, %struct.rtx_def* %call2011)
  br label %if.end.2012

if.end.2012:                                      ; preds = %if.then.2007, %land.lhs.true.1999, %if.end.1996
  %940 = load %struct.rtx_def*, %struct.rtx_def** %newdest, align 8
  %941 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %942 = load %struct.rtx_def*, %struct.rtx_def** %941, align 8
  %call2013 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %940, %struct.rtx_def* %942)
  store %struct.rtx_def* %call2013, %struct.rtx_def** %newi2pat, align 8
  %943 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %944 = load %struct.rtx_def*, %struct.rtx_def** %newdest, align 8
  call void @do_SUBST(%struct.rtx_def** %943, %struct.rtx_def* %944)
  %945 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call2014 = call i32 @recog_for_combine(%struct.rtx_def** %newi2pat, %struct.rtx_def* %945, %struct.rtx_def** %new_i2_notes)
  store i32 %call2014, i32* %i2_code_number, align 4
  %946 = load i32, i32* %i2_code_number, align 4
  %cmp2015 = icmp sge i32 %946, 0
  br i1 %cmp2015, label %land.lhs.true.2017, label %if.end.2024

land.lhs.true.2017:                               ; preds = %if.end.2012
  %947 = load i32, i32* %split_code, align 4
  %cmp2018 = icmp eq i32 %947, 78
  br i1 %cmp2018, label %land.lhs.true.2020, label %if.then.2022

land.lhs.true.2020:                               ; preds = %land.lhs.true.2017
  %948 = load i32, i32* %have_mult, align 4
  %tobool2021 = icmp ne i32 %948, 0
  br i1 %tobool2021, label %if.then.2022, label %if.end.2024

if.then.2022:                                     ; preds = %land.lhs.true.2020, %land.lhs.true.2017
  %949 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call2023 = call i32 @recog_for_combine(%struct.rtx_def** %newpat, %struct.rtx_def* %949, %struct.rtx_def** %new_i3_notes)
  store i32 %call2023, i32* %insn_code_number, align 4
  br label %if.end.2024

if.end.2024:                                      ; preds = %if.then.2022, %land.lhs.true.2020, %if.end.2012
  br label %if.end.2025

if.end.2025:                                      ; preds = %if.end.2024, %land.lhs.true.1921, %cond.end.1917, %land.lhs.true.1894, %land.lhs.true.1892, %lor.lhs.false.1881, %land.lhs.true.1856, %if.end.1853
  br label %if.end.2633

if.else.2026:                                     ; preds = %land.lhs.true.1442, %land.lhs.true.1437, %land.lhs.true.1434, %if.end.1432
  %950 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %tobool2027 = icmp ne %struct.rtx_def* %950, null
  br i1 %tobool2027, label %land.lhs.true.2028, label %if.else.2415

land.lhs.true.2028:                               ; preds = %if.else.2026
  %951 = load i32, i32* %insn_code_number, align 4
  %cmp2029 = icmp slt i32 %951, 0
  br i1 %cmp2029, label %land.lhs.true.2031, label %if.else.2415

land.lhs.true.2031:                               ; preds = %land.lhs.true.2028
  %952 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %call2032 = call i32 @asm_noperands(%struct.rtx_def* %952)
  %cmp2033 = icmp slt i32 %call2032, 0
  br i1 %cmp2033, label %land.lhs.true.2035, label %if.else.2415

land.lhs.true.2035:                               ; preds = %land.lhs.true.2031
  %953 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %954 = bitcast %struct.rtx_def* %953 to i32*
  %bf.load2036 = load i32, i32* %954, align 8
  %bf.clear2037 = and i32 %bf.load2036, 65535
  %cmp2038 = icmp eq i32 %bf.clear2037, 39
  br i1 %cmp2038, label %land.lhs.true.2040, label %if.else.2415

land.lhs.true.2040:                               ; preds = %land.lhs.true.2035
  %955 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2041 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %955, i32 0, i32 1
  %arrayidx2042 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2041, i32 0, i64 0
  %rtvec2043 = bitcast %union.rtunion_def* %arrayidx2042 to %struct.rtvec_def**
  %956 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2043, align 8
  %num_elem2044 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %956, i32 0, i32 0
  %957 = load i32, i32* %num_elem2044, align 4
  %cmp2045 = icmp eq i32 %957, 2
  br i1 %cmp2045, label %land.lhs.true.2047, label %if.else.2415

land.lhs.true.2047:                               ; preds = %land.lhs.true.2040
  %958 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2048 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %958, i32 0, i32 1
  %arrayidx2049 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2048, i32 0, i64 0
  %rtvec2050 = bitcast %union.rtunion_def* %arrayidx2049 to %struct.rtvec_def**
  %959 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2050, align 8
  %elem2051 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %959, i32 0, i32 1
  %arrayidx2052 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2051, i32 0, i64 0
  %960 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2052, align 8
  %961 = bitcast %struct.rtx_def* %960 to i32*
  %bf.load2053 = load i32, i32* %961, align 8
  %bf.clear2054 = and i32 %bf.load2053, 65535
  %cmp2055 = icmp eq i32 %bf.clear2054, 47
  br i1 %cmp2055, label %land.lhs.true.2057, label %if.else.2415

land.lhs.true.2057:                               ; preds = %land.lhs.true.2047
  %962 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2058 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %962, i32 0, i32 1
  %arrayidx2059 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2058, i32 0, i64 0
  %rtvec2060 = bitcast %union.rtunion_def* %arrayidx2059 to %struct.rtvec_def**
  %963 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2060, align 8
  %elem2061 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %963, i32 0, i32 1
  %arrayidx2062 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2061, i32 0, i64 0
  %964 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2062, align 8
  %fld2063 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %964, i32 0, i32 1
  %arrayidx2064 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2063, i32 0, i64 1
  %rtx2065 = bitcast %union.rtunion_def* %arrayidx2064 to %struct.rtx_def**
  %965 = load %struct.rtx_def*, %struct.rtx_def** %rtx2065, align 8
  %966 = bitcast %struct.rtx_def* %965 to i32*
  %bf.load2066 = load i32, i32* %966, align 8
  %bf.clear2067 = and i32 %bf.load2066, 65535
  %cmp2068 = icmp eq i32 %bf.clear2067, 120
  br i1 %cmp2068, label %land.lhs.true.2070, label %if.else.2415

land.lhs.true.2070:                               ; preds = %land.lhs.true.2057
  %967 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2071 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %967, i32 0, i32 1
  %arrayidx2072 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2071, i32 0, i64 0
  %rtvec2073 = bitcast %union.rtunion_def* %arrayidx2072 to %struct.rtvec_def**
  %968 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2073, align 8
  %elem2074 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %968, i32 0, i32 1
  %arrayidx2075 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2074, i32 0, i64 1
  %969 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2075, align 8
  %970 = bitcast %struct.rtx_def* %969 to i32*
  %bf.load2076 = load i32, i32* %970, align 8
  %bf.clear2077 = and i32 %bf.load2076, 65535
  %cmp2078 = icmp eq i32 %bf.clear2077, 47
  br i1 %cmp2078, label %land.lhs.true.2080, label %if.else.2415

land.lhs.true.2080:                               ; preds = %land.lhs.true.2070
  %971 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2081 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %971, i32 0, i32 1
  %arrayidx2082 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2081, i32 0, i64 0
  %rtvec2083 = bitcast %union.rtunion_def* %arrayidx2082 to %struct.rtvec_def**
  %972 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2083, align 8
  %elem2084 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %972, i32 0, i32 1
  %arrayidx2085 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2084, i32 0, i64 1
  %973 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2085, align 8
  %fld2086 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %973, i32 0, i32 1
  %arrayidx2087 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2086, i32 0, i64 1
  %rtx2088 = bitcast %union.rtunion_def* %arrayidx2087 to %struct.rtx_def**
  %974 = load %struct.rtx_def*, %struct.rtx_def** %rtx2088, align 8
  %975 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2089 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %975, i32 0, i32 1
  %arrayidx2090 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2089, i32 0, i64 0
  %rtvec2091 = bitcast %union.rtunion_def* %arrayidx2090 to %struct.rtvec_def**
  %976 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2091, align 8
  %elem2092 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %976, i32 0, i32 1
  %arrayidx2093 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2092, i32 0, i64 0
  %977 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2093, align 8
  %fld2094 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %977, i32 0, i32 1
  %arrayidx2095 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2094, i32 0, i64 1
  %rtx2096 = bitcast %union.rtunion_def* %arrayidx2095 to %struct.rtx_def**
  %978 = load %struct.rtx_def*, %struct.rtx_def** %rtx2096, align 8
  %fld2097 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %978, i32 0, i32 1
  %arrayidx2098 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2097, i32 0, i64 0
  %rtx2099 = bitcast %union.rtunion_def* %arrayidx2098 to %struct.rtx_def**
  %979 = load %struct.rtx_def*, %struct.rtx_def** %rtx2099, align 8
  %call2100 = call i32 @rtx_equal_p(%struct.rtx_def* %974, %struct.rtx_def* %979)
  %tobool2101 = icmp ne i32 %call2100, 0
  br i1 %tobool2101, label %land.lhs.true.2102, label %if.else.2415

land.lhs.true.2102:                               ; preds = %land.lhs.true.2080
  %980 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %980, i32 0, i32 1
  %arrayidx2104 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2103, i32 0, i64 0
  %rtvec2105 = bitcast %union.rtunion_def* %arrayidx2104 to %struct.rtvec_def**
  %981 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2105, align 8
  %elem2106 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %981, i32 0, i32 1
  %arrayidx2107 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2106, i32 0, i64 1
  %982 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2107, align 8
  %fld2108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %982, i32 0, i32 1
  %arrayidx2109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2108, i32 0, i64 1
  %rtx2110 = bitcast %union.rtunion_def* %arrayidx2109 to %struct.rtx_def**
  %983 = load %struct.rtx_def*, %struct.rtx_def** %rtx2110, align 8
  %984 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld2111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %984, i32 0, i32 1
  %arrayidx2112 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2111, i32 0, i64 0
  %rtint2113 = bitcast %union.rtunion_def* %arrayidx2112 to i32*
  %985 = load i32, i32* %rtint2113, align 4
  %986 = load i32, i32* @max_uid_cuid, align 4
  %cmp2114 = icmp sgt i32 %985, %986
  br i1 %cmp2114, label %cond.true.2116, label %cond.false.2118

cond.true.2116:                                   ; preds = %land.lhs.true.2102
  %987 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call2117 = call i32 @insn_cuid(%struct.rtx_def* %987)
  br label %cond.end.2124

cond.false.2118:                                  ; preds = %land.lhs.true.2102
  %988 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld2119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %988, i32 0, i32 1
  %arrayidx2120 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2119, i32 0, i64 0
  %rtint2121 = bitcast %union.rtunion_def* %arrayidx2120 to i32*
  %989 = load i32, i32* %rtint2121, align 4
  %idxprom2122 = sext i32 %989 to i64
  %990 = load i32*, i32** @uid_cuid, align 8
  %arrayidx2123 = getelementptr inbounds i32, i32* %990, i64 %idxprom2122
  %991 = load i32, i32* %arrayidx2123, align 4
  br label %cond.end.2124

cond.end.2124:                                    ; preds = %cond.false.2118, %cond.true.2116
  %cond2125 = phi i32 [ %call2117, %cond.true.2116 ], [ %991, %cond.false.2118 ]
  %call2126 = call i32 @use_crosses_set_p(%struct.rtx_def* %983, i32 %cond2125)
  %tobool2127 = icmp ne i32 %call2126, 0
  br i1 %tobool2127, label %if.else.2415, label %land.lhs.true.2128

land.lhs.true.2128:                               ; preds = %cond.end.2124
  %992 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2129 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %992, i32 0, i32 1
  %arrayidx2130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2129, i32 0, i64 0
  %rtvec2131 = bitcast %union.rtunion_def* %arrayidx2130 to %struct.rtvec_def**
  %993 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2131, align 8
  %elem2132 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %993, i32 0, i32 1
  %arrayidx2133 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2132, i32 0, i64 1
  %994 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2133, align 8
  %fld2134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %994, i32 0, i32 1
  %arrayidx2135 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2134, i32 0, i64 0
  %rtx2136 = bitcast %union.rtunion_def* %arrayidx2135 to %struct.rtx_def**
  %995 = load %struct.rtx_def*, %struct.rtx_def** %rtx2136, align 8
  %996 = bitcast %struct.rtx_def* %995 to i32*
  %bf.load2137 = load i32, i32* %996, align 8
  %bf.clear2138 = and i32 %bf.load2137, 65535
  %cmp2139 = icmp ne i32 %bf.clear2138, 133
  br i1 %cmp2139, label %land.lhs.true.2141, label %if.else.2415

land.lhs.true.2141:                               ; preds = %land.lhs.true.2128
  %997 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2142 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %997, i32 0, i32 1
  %arrayidx2143 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2142, i32 0, i64 0
  %rtvec2144 = bitcast %union.rtunion_def* %arrayidx2143 to %struct.rtvec_def**
  %998 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2144, align 8
  %elem2145 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %998, i32 0, i32 1
  %arrayidx2146 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2145, i32 0, i64 1
  %999 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2146, align 8
  %fld2147 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %999, i32 0, i32 1
  %arrayidx2148 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2147, i32 0, i64 0
  %rtx2149 = bitcast %union.rtunion_def* %arrayidx2148 to %struct.rtx_def**
  %1000 = load %struct.rtx_def*, %struct.rtx_def** %rtx2149, align 8
  %1001 = bitcast %struct.rtx_def* %1000 to i32*
  %bf.load2150 = load i32, i32* %1001, align 8
  %bf.clear2151 = and i32 %bf.load2150, 65535
  %cmp2152 = icmp ne i32 %bf.clear2151, 64
  br i1 %cmp2152, label %land.lhs.true.2154, label %if.else.2415

land.lhs.true.2154:                               ; preds = %land.lhs.true.2141
  %1002 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2155 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1002, i32 0, i32 1
  %arrayidx2156 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2155, i32 0, i64 0
  %rtvec2157 = bitcast %union.rtunion_def* %arrayidx2156 to %struct.rtvec_def**
  %1003 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2157, align 8
  %elem2158 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1003, i32 0, i32 1
  %arrayidx2159 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2158, i32 0, i64 1
  %1004 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2159, align 8
  %fld2160 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1004, i32 0, i32 1
  %arrayidx2161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2160, i32 0, i64 0
  %rtx2162 = bitcast %union.rtunion_def* %arrayidx2161 to %struct.rtx_def**
  %1005 = load %struct.rtx_def*, %struct.rtx_def** %rtx2162, align 8
  store %struct.rtx_def* %1005, %struct.rtx_def** %temp, align 8
  %1006 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %1007 = bitcast %struct.rtx_def* %1006 to i32*
  %bf.load2163 = load i32, i32* %1007, align 8
  %bf.clear2164 = and i32 %bf.load2163, 65535
  %cmp2165 = icmp eq i32 %bf.clear2164, 61
  br i1 %cmp2165, label %land.lhs.true.2167, label %land.end.2206

land.lhs.true.2167:                               ; preds = %land.lhs.true.2154
  %1008 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld2168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1008, i32 0, i32 1
  %arrayidx2169 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2168, i32 0, i64 0
  %rtuint2170 = bitcast %union.rtunion_def* %arrayidx2169 to i32*
  %1009 = load i32, i32* %rtuint2170, align 4
  %idxprom2171 = zext i32 %1009 to i64
  %1010 = load i64*, i64** @reg_nonzero_bits, align 8
  %arrayidx2172 = getelementptr inbounds i64, i64* %1010, i64 %idxprom2171
  %1011 = load i64, i64* %arrayidx2172, align 8
  %cmp2173 = icmp ne i64 %1011, 0
  br i1 %cmp2173, label %land.lhs.true.2175, label %land.end.2206

land.lhs.true.2175:                               ; preds = %land.lhs.true.2167
  %1012 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %1013 = bitcast %struct.rtx_def* %1012 to i32*
  %bf.load2176 = load i32, i32* %1013, align 8
  %bf.lshr2177 = lshr i32 %bf.load2176, 16
  %bf.clear2178 = and i32 %bf.lshr2177, 255
  %idxprom2179 = sext i32 %bf.clear2178 to i64
  %arrayidx2180 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2179
  %1014 = load i16, i16* %arrayidx2180, align 2
  %conv2181 = zext i16 %1014 to i32
  %1015 = load i32, i32* @target_flags, align 4
  %and2182 = and i32 %1015, 33554432
  %tobool2183 = icmp ne i32 %and2182, 0
  %cond2184 = select i1 %tobool2183, i32 64, i32 32
  %cmp2185 = icmp slt i32 %conv2181, %cond2184
  br i1 %cmp2185, label %land.lhs.true.2187, label %land.end.2206

land.lhs.true.2187:                               ; preds = %land.lhs.true.2175
  %1016 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %1017 = bitcast %struct.rtx_def* %1016 to i32*
  %bf.load2188 = load i32, i32* %1017, align 8
  %bf.lshr2189 = lshr i32 %bf.load2188, 16
  %bf.clear2190 = and i32 %bf.lshr2189, 255
  %idxprom2191 = sext i32 %bf.clear2190 to i64
  %arrayidx2192 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2191
  %1018 = load i16, i16* %arrayidx2192, align 2
  %conv2193 = zext i16 %1018 to i32
  %cmp2194 = icmp slt i32 %conv2193, 32
  br i1 %cmp2194, label %land.rhs.2196, label %land.end.2206

land.rhs.2196:                                    ; preds = %land.lhs.true.2187
  %1019 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld2197 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1019, i32 0, i32 1
  %arrayidx2198 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2197, i32 0, i64 0
  %rtuint2199 = bitcast %union.rtunion_def* %arrayidx2198 to i32*
  %1020 = load i32, i32* %rtuint2199, align 4
  %idxprom2200 = zext i32 %1020 to i64
  %1021 = load i64*, i64** @reg_nonzero_bits, align 8
  %arrayidx2201 = getelementptr inbounds i64, i64* %1021, i64 %idxprom2200
  %1022 = load i64, i64* %arrayidx2201, align 8
  %1023 = load i32, i32* @word_mode, align 4
  %idxprom2202 = sext i32 %1023 to i64
  %arrayidx2203 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom2202
  %1024 = load i64, i64* %arrayidx2203, align 8
  %cmp2204 = icmp ne i64 %1022, %1024
  br label %land.end.2206

land.end.2206:                                    ; preds = %land.rhs.2196, %land.lhs.true.2187, %land.lhs.true.2175, %land.lhs.true.2167, %land.lhs.true.2154
  %1025 = phi i1 [ false, %land.lhs.true.2187 ], [ false, %land.lhs.true.2175 ], [ false, %land.lhs.true.2167 ], [ false, %land.lhs.true.2154 ], [ %cmp2204, %land.rhs.2196 ]
  br i1 %1025, label %if.else.2415, label %land.lhs.true.2208

land.lhs.true.2208:                               ; preds = %land.end.2206
  %1026 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2209 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1026, i32 0, i32 1
  %arrayidx2210 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2209, i32 0, i64 0
  %rtvec2211 = bitcast %union.rtunion_def* %arrayidx2210 to %struct.rtvec_def**
  %1027 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2211, align 8
  %elem2212 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1027, i32 0, i32 1
  %arrayidx2213 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2212, i32 0, i64 1
  %1028 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2213, align 8
  %fld2214 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1028, i32 0, i32 1
  %arrayidx2215 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2214, i32 0, i64 0
  %rtx2216 = bitcast %union.rtunion_def* %arrayidx2215 to %struct.rtx_def**
  %1029 = load %struct.rtx_def*, %struct.rtx_def** %rtx2216, align 8
  %1030 = bitcast %struct.rtx_def* %1029 to i32*
  %bf.load2217 = load i32, i32* %1030, align 8
  %bf.clear2218 = and i32 %bf.load2217, 65535
  %cmp2219 = icmp eq i32 %bf.clear2218, 63
  br i1 %cmp2219, label %land.lhs.true.2221, label %land.lhs.true.2278

land.lhs.true.2221:                               ; preds = %land.lhs.true.2208
  %1031 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2222 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1031, i32 0, i32 1
  %arrayidx2223 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2222, i32 0, i64 0
  %rtvec2224 = bitcast %union.rtunion_def* %arrayidx2223 to %struct.rtvec_def**
  %1032 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2224, align 8
  %elem2225 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1032, i32 0, i32 1
  %arrayidx2226 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2225, i32 0, i64 1
  %1033 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2226, align 8
  %fld2227 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1033, i32 0, i32 1
  %arrayidx2228 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2227, i32 0, i64 0
  %rtx2229 = bitcast %union.rtunion_def* %arrayidx2228 to %struct.rtx_def**
  %1034 = load %struct.rtx_def*, %struct.rtx_def** %rtx2229, align 8
  %fld2230 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1034, i32 0, i32 1
  %arrayidx2231 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2230, i32 0, i64 0
  %rtx2232 = bitcast %union.rtunion_def* %arrayidx2231 to %struct.rtx_def**
  %1035 = load %struct.rtx_def*, %struct.rtx_def** %rtx2232, align 8
  store %struct.rtx_def* %1035, %struct.rtx_def** %temp, align 8
  %1036 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %1037 = bitcast %struct.rtx_def* %1036 to i32*
  %bf.load2233 = load i32, i32* %1037, align 8
  %bf.clear2234 = and i32 %bf.load2233, 65535
  %cmp2235 = icmp eq i32 %bf.clear2234, 61
  br i1 %cmp2235, label %land.lhs.true.2237, label %land.end.2276

land.lhs.true.2237:                               ; preds = %land.lhs.true.2221
  %1038 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld2238 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1038, i32 0, i32 1
  %arrayidx2239 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2238, i32 0, i64 0
  %rtuint2240 = bitcast %union.rtunion_def* %arrayidx2239 to i32*
  %1039 = load i32, i32* %rtuint2240, align 4
  %idxprom2241 = zext i32 %1039 to i64
  %1040 = load i64*, i64** @reg_nonzero_bits, align 8
  %arrayidx2242 = getelementptr inbounds i64, i64* %1040, i64 %idxprom2241
  %1041 = load i64, i64* %arrayidx2242, align 8
  %cmp2243 = icmp ne i64 %1041, 0
  br i1 %cmp2243, label %land.lhs.true.2245, label %land.end.2276

land.lhs.true.2245:                               ; preds = %land.lhs.true.2237
  %1042 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %1043 = bitcast %struct.rtx_def* %1042 to i32*
  %bf.load2246 = load i32, i32* %1043, align 8
  %bf.lshr2247 = lshr i32 %bf.load2246, 16
  %bf.clear2248 = and i32 %bf.lshr2247, 255
  %idxprom2249 = sext i32 %bf.clear2248 to i64
  %arrayidx2250 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2249
  %1044 = load i16, i16* %arrayidx2250, align 2
  %conv2251 = zext i16 %1044 to i32
  %1045 = load i32, i32* @target_flags, align 4
  %and2252 = and i32 %1045, 33554432
  %tobool2253 = icmp ne i32 %and2252, 0
  %cond2254 = select i1 %tobool2253, i32 64, i32 32
  %cmp2255 = icmp slt i32 %conv2251, %cond2254
  br i1 %cmp2255, label %land.lhs.true.2257, label %land.end.2276

land.lhs.true.2257:                               ; preds = %land.lhs.true.2245
  %1046 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %1047 = bitcast %struct.rtx_def* %1046 to i32*
  %bf.load2258 = load i32, i32* %1047, align 8
  %bf.lshr2259 = lshr i32 %bf.load2258, 16
  %bf.clear2260 = and i32 %bf.lshr2259, 255
  %idxprom2261 = sext i32 %bf.clear2260 to i64
  %arrayidx2262 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2261
  %1048 = load i16, i16* %arrayidx2262, align 2
  %conv2263 = zext i16 %1048 to i32
  %cmp2264 = icmp slt i32 %conv2263, 32
  br i1 %cmp2264, label %land.rhs.2266, label %land.end.2276

land.rhs.2266:                                    ; preds = %land.lhs.true.2257
  %1049 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld2267 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1049, i32 0, i32 1
  %arrayidx2268 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2267, i32 0, i64 0
  %rtuint2269 = bitcast %union.rtunion_def* %arrayidx2268 to i32*
  %1050 = load i32, i32* %rtuint2269, align 4
  %idxprom2270 = zext i32 %1050 to i64
  %1051 = load i64*, i64** @reg_nonzero_bits, align 8
  %arrayidx2271 = getelementptr inbounds i64, i64* %1051, i64 %idxprom2270
  %1052 = load i64, i64* %arrayidx2271, align 8
  %1053 = load i32, i32* @word_mode, align 4
  %idxprom2272 = sext i32 %1053 to i64
  %arrayidx2273 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom2272
  %1054 = load i64, i64* %arrayidx2273, align 8
  %cmp2274 = icmp ne i64 %1052, %1054
  br label %land.end.2276

land.end.2276:                                    ; preds = %land.rhs.2266, %land.lhs.true.2257, %land.lhs.true.2245, %land.lhs.true.2237, %land.lhs.true.2221
  %1055 = phi i1 [ false, %land.lhs.true.2257 ], [ false, %land.lhs.true.2245 ], [ false, %land.lhs.true.2237 ], [ false, %land.lhs.true.2221 ], [ %cmp2274, %land.rhs.2266 ]
  br i1 %1055, label %if.else.2415, label %land.lhs.true.2278

land.lhs.true.2278:                               ; preds = %land.end.2276, %land.lhs.true.2208
  %1056 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2279 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1056, i32 0, i32 1
  %arrayidx2280 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2279, i32 0, i64 0
  %rtvec2281 = bitcast %union.rtunion_def* %arrayidx2280 to %struct.rtvec_def**
  %1057 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2281, align 8
  %elem2282 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1057, i32 0, i32 1
  %arrayidx2283 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2282, i32 0, i64 1
  %1058 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2283, align 8
  %fld2284 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1058, i32 0, i32 1
  %arrayidx2285 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2284, i32 0, i64 0
  %rtx2286 = bitcast %union.rtunion_def* %arrayidx2285 to %struct.rtx_def**
  %1059 = load %struct.rtx_def*, %struct.rtx_def** %rtx2286, align 8
  %1060 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2287 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1060, i32 0, i32 1
  %arrayidx2288 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2287, i32 0, i64 0
  %rtvec2289 = bitcast %union.rtunion_def* %arrayidx2288 to %struct.rtvec_def**
  %1061 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2289, align 8
  %elem2290 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1061, i32 0, i32 1
  %arrayidx2291 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2290, i32 0, i64 1
  %1062 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2291, align 8
  %fld2292 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1062, i32 0, i32 1
  %arrayidx2293 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2292, i32 0, i64 1
  %rtx2294 = bitcast %union.rtunion_def* %arrayidx2293 to %struct.rtx_def**
  %1063 = load %struct.rtx_def*, %struct.rtx_def** %rtx2294, align 8
  %call2295 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %1059, %struct.rtx_def* %1063)
  %tobool2296 = icmp ne i32 %call2295, 0
  br i1 %tobool2296, label %if.else.2415, label %land.lhs.true.2297

land.lhs.true.2297:                               ; preds = %land.lhs.true.2278
  %1064 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %1065 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2298 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1065, i32 0, i32 1
  %arrayidx2299 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2298, i32 0, i64 0
  %rtvec2300 = bitcast %union.rtunion_def* %arrayidx2299 to %struct.rtvec_def**
  %1066 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2300, align 8
  %elem2301 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1066, i32 0, i32 1
  %arrayidx2302 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2301, i32 0, i64 0
  %1067 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2302, align 8
  %fld2303 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1067, i32 0, i32 1
  %arrayidx2304 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2303, i32 0, i64 0
  %rtx2305 = bitcast %union.rtunion_def* %arrayidx2304 to %struct.rtx_def**
  %1068 = load %struct.rtx_def*, %struct.rtx_def** %rtx2305, align 8
  %call2306 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %1064, i32 10, %struct.rtx_def* %1068)
  %tobool2307 = icmp ne %struct.rtx_def* %call2306, null
  br i1 %tobool2307, label %if.else.2415, label %if.then.2308

if.then.2308:                                     ; preds = %land.lhs.true.2297
  %1069 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2310 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1069, i32 0, i32 1
  %arrayidx2311 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2310, i32 0, i64 0
  %rtvec2312 = bitcast %union.rtunion_def* %arrayidx2311 to %struct.rtvec_def**
  %1070 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2312, align 8
  %elem2313 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1070, i32 0, i32 1
  %arrayidx2314 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2313, i32 0, i64 0
  %1071 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2314, align 8
  store %struct.rtx_def* %1071, %struct.rtx_def** %newi2pat, align 8
  %1072 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2315 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1072, i32 0, i32 1
  %arrayidx2316 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2315, i32 0, i64 0
  %rtvec2317 = bitcast %union.rtunion_def* %arrayidx2316 to %struct.rtvec_def**
  %1073 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2317, align 8
  %elem2318 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1073, i32 0, i32 1
  %arrayidx2319 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2318, i32 0, i64 0
  %1074 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2319, align 8
  %fld2320 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1074, i32 0, i32 1
  %arrayidx2321 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2320, i32 0, i64 0
  %rtx2322 = bitcast %union.rtunion_def* %arrayidx2321 to %struct.rtx_def**
  %1075 = load %struct.rtx_def*, %struct.rtx_def** %rtx2322, align 8
  store %struct.rtx_def* %1075, %struct.rtx_def** %ni2dest2309, align 8
  %1076 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2323 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1076, i32 0, i32 1
  %arrayidx2324 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2323, i32 0, i64 0
  %rtvec2325 = bitcast %union.rtunion_def* %arrayidx2324 to %struct.rtvec_def**
  %1077 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2325, align 8
  %elem2326 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1077, i32 0, i32 1
  %arrayidx2327 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2326, i32 0, i64 1
  %1078 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2327, align 8
  store %struct.rtx_def* %1078, %struct.rtx_def** %newpat, align 8
  %1079 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2328 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1079, i32 0, i32 1
  %arrayidx2329 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2328, i32 0, i64 1
  %rtx2330 = bitcast %union.rtunion_def* %arrayidx2329 to %struct.rtx_def**
  %1080 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2331 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1080, i32 0, i32 1
  %arrayidx2332 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2331, i32 0, i64 1
  %rtx2333 = bitcast %union.rtunion_def* %arrayidx2332 to %struct.rtx_def**
  %1081 = load %struct.rtx_def*, %struct.rtx_def** %rtx2333, align 8
  %1082 = bitcast %struct.rtx_def* %1081 to i32*
  %bf.load2334 = load i32, i32* %1082, align 8
  %bf.lshr2335 = lshr i32 %bf.load2334, 16
  %bf.clear2336 = and i32 %bf.lshr2335, 255
  %1083 = load %struct.rtx_def*, %struct.rtx_def** %ni2dest2309, align 8
  %call2337 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %bf.clear2336, %struct.rtx_def* %1083)
  call void @do_SUBST(%struct.rtx_def** %rtx2330, %struct.rtx_def* %call2337)
  %1084 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call2338 = call i32 @recog_for_combine(%struct.rtx_def** %newi2pat, %struct.rtx_def* %1084, %struct.rtx_def** %new_i2_notes)
  store i32 %call2338, i32* %i2_code_number, align 4
  %1085 = load i32, i32* %i2_code_number, align 4
  %cmp2339 = icmp sge i32 %1085, 0
  br i1 %cmp2339, label %if.then.2341, label %if.end.2343

if.then.2341:                                     ; preds = %if.then.2308
  %1086 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call2342 = call i32 @recog_for_combine(%struct.rtx_def** %newpat, %struct.rtx_def* %1086, %struct.rtx_def** %new_i3_notes)
  store i32 %call2342, i32* %insn_code_number, align 4
  br label %if.end.2343

if.end.2343:                                      ; preds = %if.then.2341, %if.then.2308
  %1087 = load i32, i32* %insn_code_number, align 4
  %cmp2344 = icmp sge i32 %1087, 0
  br i1 %cmp2344, label %if.then.2346, label %if.end.2414

if.then.2346:                                     ; preds = %if.end.2343
  %1088 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %1089 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld2348 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1089, i32 0, i32 1
  %arrayidx2349 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2348, i32 0, i64 3
  %rtx2350 = bitcast %union.rtunion_def* %arrayidx2349 to %struct.rtx_def**
  store %struct.rtx_def* %1088, %struct.rtx_def** %rtx2350, align 8
  %1090 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call2351 = call %struct.rtx_def* @gen_rtx_fmt_ue(i32 4, i32 0, %struct.rtx_def* %1090, %struct.rtx_def* null)
  call void @distribute_links(%struct.rtx_def* %call2351)
  %1091 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld2352 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1091, i32 0, i32 1
  %arrayidx2353 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2352, i32 0, i64 2
  %rtx2354 = bitcast %union.rtunion_def* %arrayidx2353 to %struct.rtx_def**
  %1092 = load %struct.rtx_def*, %struct.rtx_def** %rtx2354, align 8
  store %struct.rtx_def* %1092, %struct.rtx_def** %insn, align 8
  br label %for.cond.2355

for.cond.2355:                                    ; preds = %for.inc.2409, %if.then.2346
  %1093 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %tobool2356 = icmp ne %struct.rtx_def* %1093, null
  br i1 %tobool2356, label %land.rhs.2357, label %land.end.2370

land.rhs.2357:                                    ; preds = %for.cond.2355
  %1094 = load i32, i32* @this_basic_block, align 4
  %1095 = load i32, i32* @n_basic_blocks, align 4
  %sub2358 = sub nsw i32 %1095, 1
  %cmp2359 = icmp eq i32 %1094, %sub2358
  br i1 %cmp2359, label %lor.end.2368, label %lor.rhs.2361

lor.rhs.2361:                                     ; preds = %land.rhs.2357
  %1096 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %1097 = load i32, i32* @this_basic_block, align 4
  %add2362 = add nsw i32 %1097, 1
  %idxprom2363 = sext i32 %add2362 to i64
  %1098 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %data2364 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %1098, i32 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data2364 to [1 x %struct.basic_block_def*]*
  %arrayidx2365 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %bb, i32 0, i64 %idxprom2363
  %1099 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx2365, align 8
  %head = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1099, i32 0, i32 0
  %1100 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8
  %cmp2366 = icmp ne %struct.rtx_def* %1096, %1100
  br label %lor.end.2368

lor.end.2368:                                     ; preds = %lor.rhs.2361, %land.rhs.2357
  %1101 = phi i1 [ true, %land.rhs.2357 ], [ %cmp2366, %lor.rhs.2361 ]
  br label %land.end.2370

land.end.2370:                                    ; preds = %lor.end.2368, %for.cond.2355
  %1102 = phi i1 [ false, %for.cond.2355 ], [ %1101, %lor.end.2368 ]
  br i1 %1102, label %for.body.2372, label %for.end.2413

for.body.2372:                                    ; preds = %land.end.2370
  %1103 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %1104 = bitcast %struct.rtx_def* %1103 to i32*
  %bf.load2373 = load i32, i32* %1104, align 8
  %bf.clear2374 = and i32 %bf.load2373, 65535
  %idxprom2375 = sext i32 %bf.clear2374 to i64
  %arrayidx2376 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom2375
  %1105 = load i8, i8* %arrayidx2376, align 1
  %conv2377 = sext i8 %1105 to i32
  %cmp2378 = icmp eq i32 %conv2377, 105
  br i1 %cmp2378, label %land.lhs.true.2380, label %if.end.2408

land.lhs.true.2380:                               ; preds = %for.body.2372
  %1106 = load %struct.rtx_def*, %struct.rtx_def** %ni2dest2309, align 8
  %1107 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld2381 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1107, i32 0, i32 1
  %arrayidx2382 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2381, i32 0, i64 3
  %rtx2383 = bitcast %union.rtunion_def* %arrayidx2382 to %struct.rtx_def**
  %1108 = load %struct.rtx_def*, %struct.rtx_def** %rtx2383, align 8
  %call2384 = call i32 @reg_referenced_p(%struct.rtx_def* %1106, %struct.rtx_def* %1108)
  %tobool2385 = icmp ne i32 %call2384, 0
  br i1 %tobool2385, label %if.then.2386, label %if.end.2408

if.then.2386:                                     ; preds = %land.lhs.true.2380
  %1109 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld2387 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1109, i32 0, i32 1
  %arrayidx2388 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2387, i32 0, i64 5
  %rtx2389 = bitcast %union.rtunion_def* %arrayidx2388 to %struct.rtx_def**
  %1110 = load %struct.rtx_def*, %struct.rtx_def** %rtx2389, align 8
  store %struct.rtx_def* %1110, %struct.rtx_def** %link2347, align 8
  br label %for.cond.2390

for.cond.2390:                                    ; preds = %for.inc.2403, %if.then.2386
  %1111 = load %struct.rtx_def*, %struct.rtx_def** %link2347, align 8
  %tobool2391 = icmp ne %struct.rtx_def* %1111, null
  br i1 %tobool2391, label %for.body.2392, label %for.end.2407

for.body.2392:                                    ; preds = %for.cond.2390
  %1112 = load %struct.rtx_def*, %struct.rtx_def** %link2347, align 8
  %fld2393 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1112, i32 0, i32 1
  %arrayidx2394 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2393, i32 0, i64 0
  %rtx2395 = bitcast %union.rtunion_def* %arrayidx2394 to %struct.rtx_def**
  %1113 = load %struct.rtx_def*, %struct.rtx_def** %rtx2395, align 8
  %1114 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %cmp2396 = icmp eq %struct.rtx_def* %1113, %1114
  br i1 %cmp2396, label %if.then.2398, label %if.end.2402

if.then.2398:                                     ; preds = %for.body.2392
  %1115 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %1116 = load %struct.rtx_def*, %struct.rtx_def** %link2347, align 8
  %fld2399 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1116, i32 0, i32 1
  %arrayidx2400 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2399, i32 0, i64 0
  %rtx2401 = bitcast %union.rtunion_def* %arrayidx2400 to %struct.rtx_def**
  store %struct.rtx_def* %1115, %struct.rtx_def** %rtx2401, align 8
  br label %if.end.2402

if.end.2402:                                      ; preds = %if.then.2398, %for.body.2392
  br label %for.inc.2403

for.inc.2403:                                     ; preds = %if.end.2402
  %1117 = load %struct.rtx_def*, %struct.rtx_def** %link2347, align 8
  %fld2404 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1117, i32 0, i32 1
  %arrayidx2405 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2404, i32 0, i64 1
  %rtx2406 = bitcast %union.rtunion_def* %arrayidx2405 to %struct.rtx_def**
  %1118 = load %struct.rtx_def*, %struct.rtx_def** %rtx2406, align 8
  store %struct.rtx_def* %1118, %struct.rtx_def** %link2347, align 8
  br label %for.cond.2390

for.end.2407:                                     ; preds = %for.cond.2390
  br label %for.end.2413

if.end.2408:                                      ; preds = %land.lhs.true.2380, %for.body.2372
  br label %for.inc.2409

for.inc.2409:                                     ; preds = %if.end.2408
  %1119 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld2410 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1119, i32 0, i32 1
  %arrayidx2411 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2410, i32 0, i64 2
  %rtx2412 = bitcast %union.rtunion_def* %arrayidx2411 to %struct.rtx_def**
  %1120 = load %struct.rtx_def*, %struct.rtx_def** %rtx2412, align 8
  store %struct.rtx_def* %1120, %struct.rtx_def** %insn, align 8
  br label %for.cond.2355

for.end.2413:                                     ; preds = %for.end.2407, %land.end.2370
  br label %if.end.2414

if.end.2414:                                      ; preds = %for.end.2413, %if.end.2343
  br label %if.end.2632

if.else.2415:                                     ; preds = %land.lhs.true.2297, %land.lhs.true.2278, %land.end.2276, %land.end.2206, %land.lhs.true.2141, %land.lhs.true.2128, %cond.end.2124, %land.lhs.true.2080, %land.lhs.true.2070, %land.lhs.true.2057, %land.lhs.true.2047, %land.lhs.true.2040, %land.lhs.true.2035, %land.lhs.true.2031, %land.lhs.true.2028, %if.else.2026
  %1121 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %tobool2416 = icmp ne %struct.rtx_def* %1121, null
  br i1 %tobool2416, label %land.lhs.true.2417, label %if.end.2631

land.lhs.true.2417:                               ; preds = %if.else.2415
  %1122 = load i32, i32* %insn_code_number, align 4
  %cmp2418 = icmp slt i32 %1122, 0
  br i1 %cmp2418, label %land.lhs.true.2420, label %if.end.2631

land.lhs.true.2420:                               ; preds = %land.lhs.true.2417
  %1123 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %call2421 = call i32 @asm_noperands(%struct.rtx_def* %1123)
  %cmp2422 = icmp slt i32 %call2421, 0
  br i1 %cmp2422, label %land.lhs.true.2424, label %if.end.2631

land.lhs.true.2424:                               ; preds = %land.lhs.true.2420
  %1124 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %1125 = bitcast %struct.rtx_def* %1124 to i32*
  %bf.load2425 = load i32, i32* %1125, align 8
  %bf.clear2426 = and i32 %bf.load2425, 65535
  %cmp2427 = icmp eq i32 %bf.clear2426, 39
  br i1 %cmp2427, label %land.lhs.true.2429, label %if.end.2631

land.lhs.true.2429:                               ; preds = %land.lhs.true.2424
  %1126 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2430 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1126, i32 0, i32 1
  %arrayidx2431 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2430, i32 0, i64 0
  %rtvec2432 = bitcast %union.rtunion_def* %arrayidx2431 to %struct.rtvec_def**
  %1127 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2432, align 8
  %num_elem2433 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1127, i32 0, i32 0
  %1128 = load i32, i32* %num_elem2433, align 4
  %cmp2434 = icmp eq i32 %1128, 2
  br i1 %cmp2434, label %land.lhs.true.2436, label %if.end.2631

land.lhs.true.2436:                               ; preds = %land.lhs.true.2429
  %1129 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2437 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1129, i32 0, i32 1
  %arrayidx2438 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2437, i32 0, i64 0
  %rtvec2439 = bitcast %union.rtunion_def* %arrayidx2438 to %struct.rtvec_def**
  %1130 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2439, align 8
  %elem2440 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1130, i32 0, i32 1
  %arrayidx2441 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2440, i32 0, i64 0
  %1131 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2441, align 8
  %1132 = bitcast %struct.rtx_def* %1131 to i32*
  %bf.load2442 = load i32, i32* %1132, align 8
  %bf.clear2443 = and i32 %bf.load2442, 65535
  %cmp2444 = icmp eq i32 %bf.clear2443, 47
  br i1 %cmp2444, label %land.lhs.true.2446, label %if.end.2631

land.lhs.true.2446:                               ; preds = %land.lhs.true.2436
  %1133 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2447 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1133, i32 0, i32 1
  %arrayidx2448 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2447, i32 0, i64 0
  %rtvec2449 = bitcast %union.rtunion_def* %arrayidx2448 to %struct.rtvec_def**
  %1134 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2449, align 8
  %elem2450 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1134, i32 0, i32 1
  %arrayidx2451 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2450, i32 0, i64 0
  %1135 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2451, align 8
  %fld2452 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1135, i32 0, i32 1
  %arrayidx2453 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2452, i32 0, i64 0
  %rtx2454 = bitcast %union.rtunion_def* %arrayidx2453 to %struct.rtx_def**
  %1136 = load %struct.rtx_def*, %struct.rtx_def** %rtx2454, align 8
  %1137 = bitcast %struct.rtx_def* %1136 to i32*
  %bf.load2455 = load i32, i32* %1137, align 8
  %bf.clear2456 = and i32 %bf.load2455, 65535
  %cmp2457 = icmp ne i32 %bf.clear2456, 133
  br i1 %cmp2457, label %land.lhs.true.2459, label %if.end.2631

land.lhs.true.2459:                               ; preds = %land.lhs.true.2446
  %1138 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2460 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1138, i32 0, i32 1
  %arrayidx2461 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2460, i32 0, i64 0
  %rtvec2462 = bitcast %union.rtunion_def* %arrayidx2461 to %struct.rtvec_def**
  %1139 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2462, align 8
  %elem2463 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1139, i32 0, i32 1
  %arrayidx2464 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2463, i32 0, i64 0
  %1140 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2464, align 8
  %fld2465 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1140, i32 0, i32 1
  %arrayidx2466 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2465, i32 0, i64 0
  %rtx2467 = bitcast %union.rtunion_def* %arrayidx2466 to %struct.rtx_def**
  %1141 = load %struct.rtx_def*, %struct.rtx_def** %rtx2467, align 8
  %1142 = bitcast %struct.rtx_def* %1141 to i32*
  %bf.load2468 = load i32, i32* %1142, align 8
  %bf.clear2469 = and i32 %bf.load2468, 65535
  %cmp2470 = icmp ne i32 %bf.clear2469, 64
  br i1 %cmp2470, label %land.lhs.true.2472, label %if.end.2631

land.lhs.true.2472:                               ; preds = %land.lhs.true.2459
  %1143 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2473 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1143, i32 0, i32 1
  %arrayidx2474 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2473, i32 0, i64 0
  %rtvec2475 = bitcast %union.rtunion_def* %arrayidx2474 to %struct.rtvec_def**
  %1144 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2475, align 8
  %elem2476 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1144, i32 0, i32 1
  %arrayidx2477 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2476, i32 0, i64 1
  %1145 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2477, align 8
  %1146 = bitcast %struct.rtx_def* %1145 to i32*
  %bf.load2478 = load i32, i32* %1146, align 8
  %bf.clear2479 = and i32 %bf.load2478, 65535
  %cmp2480 = icmp eq i32 %bf.clear2479, 47
  br i1 %cmp2480, label %land.lhs.true.2482, label %if.end.2631

land.lhs.true.2482:                               ; preds = %land.lhs.true.2472
  %1147 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2483 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1147, i32 0, i32 1
  %arrayidx2484 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2483, i32 0, i64 0
  %rtvec2485 = bitcast %union.rtunion_def* %arrayidx2484 to %struct.rtvec_def**
  %1148 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2485, align 8
  %elem2486 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1148, i32 0, i32 1
  %arrayidx2487 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2486, i32 0, i64 1
  %1149 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2487, align 8
  %fld2488 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1149, i32 0, i32 1
  %arrayidx2489 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2488, i32 0, i64 0
  %rtx2490 = bitcast %union.rtunion_def* %arrayidx2489 to %struct.rtx_def**
  %1150 = load %struct.rtx_def*, %struct.rtx_def** %rtx2490, align 8
  %1151 = bitcast %struct.rtx_def* %1150 to i32*
  %bf.load2491 = load i32, i32* %1151, align 8
  %bf.clear2492 = and i32 %bf.load2491, 65535
  %cmp2493 = icmp ne i32 %bf.clear2492, 133
  br i1 %cmp2493, label %land.lhs.true.2495, label %if.end.2631

land.lhs.true.2495:                               ; preds = %land.lhs.true.2482
  %1152 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2496 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1152, i32 0, i32 1
  %arrayidx2497 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2496, i32 0, i64 0
  %rtvec2498 = bitcast %union.rtunion_def* %arrayidx2497 to %struct.rtvec_def**
  %1153 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2498, align 8
  %elem2499 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1153, i32 0, i32 1
  %arrayidx2500 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2499, i32 0, i64 1
  %1154 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2500, align 8
  %fld2501 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1154, i32 0, i32 1
  %arrayidx2502 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2501, i32 0, i64 0
  %rtx2503 = bitcast %union.rtunion_def* %arrayidx2502 to %struct.rtx_def**
  %1155 = load %struct.rtx_def*, %struct.rtx_def** %rtx2503, align 8
  %1156 = bitcast %struct.rtx_def* %1155 to i32*
  %bf.load2504 = load i32, i32* %1156, align 8
  %bf.clear2505 = and i32 %bf.load2504, 65535
  %cmp2506 = icmp ne i32 %bf.clear2505, 64
  br i1 %cmp2506, label %land.lhs.true.2508, label %if.end.2631

land.lhs.true.2508:                               ; preds = %land.lhs.true.2495
  %1157 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2509 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1157, i32 0, i32 1
  %arrayidx2510 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2509, i32 0, i64 0
  %rtvec2511 = bitcast %union.rtunion_def* %arrayidx2510 to %struct.rtvec_def**
  %1158 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2511, align 8
  %elem2512 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1158, i32 0, i32 1
  %arrayidx2513 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2512, i32 0, i64 1
  %1159 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2513, align 8
  %fld2514 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1159, i32 0, i32 1
  %arrayidx2515 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2514, i32 0, i64 1
  %rtx2516 = bitcast %union.rtunion_def* %arrayidx2515 to %struct.rtx_def**
  %1160 = load %struct.rtx_def*, %struct.rtx_def** %rtx2516, align 8
  %1161 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld2517 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1161, i32 0, i32 1
  %arrayidx2518 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2517, i32 0, i64 0
  %rtint2519 = bitcast %union.rtunion_def* %arrayidx2518 to i32*
  %1162 = load i32, i32* %rtint2519, align 4
  %1163 = load i32, i32* @max_uid_cuid, align 4
  %cmp2520 = icmp sgt i32 %1162, %1163
  br i1 %cmp2520, label %cond.true.2522, label %cond.false.2524

cond.true.2522:                                   ; preds = %land.lhs.true.2508
  %1164 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call2523 = call i32 @insn_cuid(%struct.rtx_def* %1164)
  br label %cond.end.2530

cond.false.2524:                                  ; preds = %land.lhs.true.2508
  %1165 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld2525 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1165, i32 0, i32 1
  %arrayidx2526 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2525, i32 0, i64 0
  %rtint2527 = bitcast %union.rtunion_def* %arrayidx2526 to i32*
  %1166 = load i32, i32* %rtint2527, align 4
  %idxprom2528 = sext i32 %1166 to i64
  %1167 = load i32*, i32** @uid_cuid, align 8
  %arrayidx2529 = getelementptr inbounds i32, i32* %1167, i64 %idxprom2528
  %1168 = load i32, i32* %arrayidx2529, align 4
  br label %cond.end.2530

cond.end.2530:                                    ; preds = %cond.false.2524, %cond.true.2522
  %cond2531 = phi i32 [ %call2523, %cond.true.2522 ], [ %1168, %cond.false.2524 ]
  %call2532 = call i32 @use_crosses_set_p(%struct.rtx_def* %1160, i32 %cond2531)
  %tobool2533 = icmp ne i32 %call2532, 0
  br i1 %tobool2533, label %if.end.2631, label %land.lhs.true.2534

land.lhs.true.2534:                               ; preds = %cond.end.2530
  %1169 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2535 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1169, i32 0, i32 1
  %arrayidx2536 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2535, i32 0, i64 0
  %rtvec2537 = bitcast %union.rtunion_def* %arrayidx2536 to %struct.rtvec_def**
  %1170 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2537, align 8
  %elem2538 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1170, i32 0, i32 1
  %arrayidx2539 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2538, i32 0, i64 1
  %1171 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2539, align 8
  %fld2540 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1171, i32 0, i32 1
  %arrayidx2541 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2540, i32 0, i64 0
  %rtx2542 = bitcast %union.rtunion_def* %arrayidx2541 to %struct.rtx_def**
  %1172 = load %struct.rtx_def*, %struct.rtx_def** %rtx2542, align 8
  %1173 = bitcast %struct.rtx_def* %1172 to i32*
  %bf.load2543 = load i32, i32* %1173, align 8
  %bf.clear2544 = and i32 %bf.load2543, 65535
  %cmp2545 = icmp ne i32 %bf.clear2544, 48
  br i1 %cmp2545, label %land.lhs.true.2547, label %if.end.2631

land.lhs.true.2547:                               ; preds = %land.lhs.true.2534
  %1174 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2548 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1174, i32 0, i32 1
  %arrayidx2549 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2548, i32 0, i64 0
  %rtvec2550 = bitcast %union.rtunion_def* %arrayidx2549 to %struct.rtvec_def**
  %1175 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2550, align 8
  %elem2551 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1175, i32 0, i32 1
  %arrayidx2552 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2551, i32 0, i64 0
  %1176 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2552, align 8
  %fld2553 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1176, i32 0, i32 1
  %arrayidx2554 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2553, i32 0, i64 0
  %rtx2555 = bitcast %union.rtunion_def* %arrayidx2554 to %struct.rtx_def**
  %1177 = load %struct.rtx_def*, %struct.rtx_def** %rtx2555, align 8
  %1178 = bitcast %struct.rtx_def* %1177 to i32*
  %bf.load2556 = load i32, i32* %1178, align 8
  %bf.clear2557 = and i32 %bf.load2556, 65535
  %cmp2558 = icmp ne i32 %bf.clear2557, 48
  br i1 %cmp2558, label %land.lhs.true.2560, label %if.end.2631

land.lhs.true.2560:                               ; preds = %land.lhs.true.2547
  %1179 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2561 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1179, i32 0, i32 1
  %arrayidx2562 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2561, i32 0, i64 0
  %rtvec2563 = bitcast %union.rtunion_def* %arrayidx2562 to %struct.rtvec_def**
  %1180 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2563, align 8
  %elem2564 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1180, i32 0, i32 1
  %arrayidx2565 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2564, i32 0, i64 1
  %1181 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2565, align 8
  %fld2566 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1181, i32 0, i32 1
  %arrayidx2567 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2566, i32 0, i64 0
  %rtx2568 = bitcast %union.rtunion_def* %arrayidx2567 to %struct.rtx_def**
  %1182 = load %struct.rtx_def*, %struct.rtx_def** %rtx2568, align 8
  %1183 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2569 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1183, i32 0, i32 1
  %arrayidx2570 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2569, i32 0, i64 0
  %rtvec2571 = bitcast %union.rtunion_def* %arrayidx2570 to %struct.rtvec_def**
  %1184 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2571, align 8
  %elem2572 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1184, i32 0, i32 1
  %arrayidx2573 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2572, i32 0, i64 0
  %1185 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2573, align 8
  %call2574 = call i32 @reg_referenced_p(%struct.rtx_def* %1182, %struct.rtx_def* %1185)
  %tobool2575 = icmp ne i32 %call2574, 0
  br i1 %tobool2575, label %if.end.2631, label %land.lhs.true.2576

land.lhs.true.2576:                               ; preds = %land.lhs.true.2560
  %1186 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2577 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1186, i32 0, i32 1
  %arrayidx2578 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2577, i32 0, i64 0
  %rtvec2579 = bitcast %union.rtunion_def* %arrayidx2578 to %struct.rtvec_def**
  %1187 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2579, align 8
  %elem2580 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1187, i32 0, i32 1
  %arrayidx2581 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2580, i32 0, i64 0
  %1188 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2581, align 8
  %fld2582 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1188, i32 0, i32 1
  %arrayidx2583 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2582, i32 0, i64 0
  %rtx2584 = bitcast %union.rtunion_def* %arrayidx2583 to %struct.rtx_def**
  %1189 = load %struct.rtx_def*, %struct.rtx_def** %rtx2584, align 8
  %1190 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2585 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1190, i32 0, i32 1
  %arrayidx2586 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2585, i32 0, i64 0
  %rtvec2587 = bitcast %union.rtunion_def* %arrayidx2586 to %struct.rtvec_def**
  %1191 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2587, align 8
  %elem2588 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1191, i32 0, i32 1
  %arrayidx2589 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2588, i32 0, i64 1
  %1192 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2589, align 8
  %call2590 = call i32 @reg_referenced_p(%struct.rtx_def* %1189, %struct.rtx_def* %1192)
  %tobool2591 = icmp ne i32 %call2590, 0
  br i1 %tobool2591, label %if.end.2631, label %land.lhs.true.2592

land.lhs.true.2592:                               ; preds = %land.lhs.true.2576
  %1193 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2593 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1193, i32 0, i32 1
  %arrayidx2594 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2593, i32 0, i64 0
  %rtvec2595 = bitcast %union.rtunion_def* %arrayidx2594 to %struct.rtvec_def**
  %1194 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2595, align 8
  %elem2596 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1194, i32 0, i32 1
  %arrayidx2597 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2596, i32 0, i64 0
  %1195 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2597, align 8
  %fld2598 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1195, i32 0, i32 1
  %arrayidx2599 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2598, i32 0, i64 1
  %rtx2600 = bitcast %union.rtunion_def* %arrayidx2599 to %struct.rtx_def**
  %1196 = load %struct.rtx_def*, %struct.rtx_def** %rtx2600, align 8
  %call2601 = call i32 @contains_muldiv(%struct.rtx_def* %1196)
  %tobool2602 = icmp ne i32 %call2601, 0
  br i1 %tobool2602, label %land.lhs.true.2603, label %if.then.2614

land.lhs.true.2603:                               ; preds = %land.lhs.true.2592
  %1197 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2604 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1197, i32 0, i32 1
  %arrayidx2605 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2604, i32 0, i64 0
  %rtvec2606 = bitcast %union.rtunion_def* %arrayidx2605 to %struct.rtvec_def**
  %1198 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2606, align 8
  %elem2607 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1198, i32 0, i32 1
  %arrayidx2608 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2607, i32 0, i64 1
  %1199 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2608, align 8
  %fld2609 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1199, i32 0, i32 1
  %arrayidx2610 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2609, i32 0, i64 1
  %rtx2611 = bitcast %union.rtunion_def* %arrayidx2610 to %struct.rtx_def**
  %1200 = load %struct.rtx_def*, %struct.rtx_def** %rtx2611, align 8
  %call2612 = call i32 @contains_muldiv(%struct.rtx_def* %1200)
  %tobool2613 = icmp ne i32 %call2612, 0
  br i1 %tobool2613, label %if.end.2631, label %if.then.2614

if.then.2614:                                     ; preds = %land.lhs.true.2603, %land.lhs.true.2592
  %1201 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2615 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1201, i32 0, i32 1
  %arrayidx2616 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2615, i32 0, i64 0
  %rtvec2617 = bitcast %union.rtunion_def* %arrayidx2616 to %struct.rtvec_def**
  %1202 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2617, align 8
  %elem2618 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1202, i32 0, i32 1
  %arrayidx2619 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2618, i32 0, i64 1
  %1203 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2619, align 8
  store %struct.rtx_def* %1203, %struct.rtx_def** %newi2pat, align 8
  %1204 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld2620 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1204, i32 0, i32 1
  %arrayidx2621 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2620, i32 0, i64 0
  %rtvec2622 = bitcast %union.rtunion_def* %arrayidx2621 to %struct.rtvec_def**
  %1205 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2622, align 8
  %elem2623 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1205, i32 0, i32 1
  %arrayidx2624 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2623, i32 0, i64 0
  %1206 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2624, align 8
  store %struct.rtx_def* %1206, %struct.rtx_def** %newpat, align 8
  %1207 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call2625 = call i32 @recog_for_combine(%struct.rtx_def** %newi2pat, %struct.rtx_def* %1207, %struct.rtx_def** %new_i2_notes)
  store i32 %call2625, i32* %i2_code_number, align 4
  %1208 = load i32, i32* %i2_code_number, align 4
  %cmp2626 = icmp sge i32 %1208, 0
  br i1 %cmp2626, label %if.then.2628, label %if.end.2630

if.then.2628:                                     ; preds = %if.then.2614
  %1209 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call2629 = call i32 @recog_for_combine(%struct.rtx_def** %newpat, %struct.rtx_def* %1209, %struct.rtx_def** %new_i3_notes)
  store i32 %call2629, i32* %insn_code_number, align 4
  br label %if.end.2630

if.end.2630:                                      ; preds = %if.then.2628, %if.then.2614
  br label %if.end.2631

if.end.2631:                                      ; preds = %if.end.2630, %land.lhs.true.2603, %land.lhs.true.2576, %land.lhs.true.2560, %land.lhs.true.2547, %land.lhs.true.2534, %cond.end.2530, %land.lhs.true.2495, %land.lhs.true.2482, %land.lhs.true.2472, %land.lhs.true.2459, %land.lhs.true.2446, %land.lhs.true.2436, %land.lhs.true.2429, %land.lhs.true.2424, %land.lhs.true.2420, %land.lhs.true.2417, %if.else.2415
  br label %if.end.2632

if.end.2632:                                      ; preds = %if.end.2631, %if.end.2414
  br label %if.end.2633

if.end.2633:                                      ; preds = %if.end.2632, %if.end.2025
  %1210 = load i32, i32* %insn_code_number, align 4
  %cmp2634 = icmp slt i32 %1210, 0
  br i1 %cmp2634, label %land.lhs.true.2636, label %if.end.2644

land.lhs.true.2636:                               ; preds = %if.end.2633
  %1211 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %call2637 = call i32 @check_asm_operands(%struct.rtx_def* %1211)
  %tobool2638 = icmp ne i32 %call2637, 0
  br i1 %tobool2638, label %lor.lhs.false.2639, label %if.then.2643

lor.lhs.false.2639:                               ; preds = %land.lhs.true.2636
  %1212 = load i32, i32* %added_sets_1, align 4
  %tobool2640 = icmp ne i32 %1212, 0
  br i1 %tobool2640, label %if.then.2643, label %lor.lhs.false.2641

lor.lhs.false.2641:                               ; preds = %lor.lhs.false.2639
  %1213 = load i32, i32* %added_sets_2, align 4
  %tobool2642 = icmp ne i32 %1213, 0
  br i1 %tobool2642, label %if.then.2643, label %if.end.2644

if.then.2643:                                     ; preds = %lor.lhs.false.2641, %lor.lhs.false.2639, %land.lhs.true.2636
  call void @undo_all()
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.2644:                                      ; preds = %lor.lhs.false.2641, %if.end.2633
  %1214 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 2), align 8
  %tobool2645 = icmp ne %struct.rtx_def* %1214, null
  br i1 %tobool2645, label %if.then.2646, label %if.end.2737

if.then.2646:                                     ; preds = %if.end.2644
  %1215 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 2), align 8
  %fld2647 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1215, i32 0, i32 1
  %arrayidx2648 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2647, i32 0, i64 3
  %rtx2649 = bitcast %union.rtunion_def* %arrayidx2648 to %struct.rtx_def**
  %1216 = load %struct.rtx_def*, %struct.rtx_def** %rtx2649, align 8
  store %struct.rtx_def* %1216, %struct.rtx_def** %other_pat, align 8
  store i64 0, i64* @newpat_used_regs, align 8
  %1217 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 2), align 8
  %call2650 = call i32 @recog_for_combine(%struct.rtx_def** %other_pat, %struct.rtx_def* %1217, %struct.rtx_def** %new_other_notes)
  store i32 %call2650, i32* %other_code_number, align 4
  %1218 = load i32, i32* %other_code_number, align 4
  %cmp2651 = icmp slt i32 %1218, 0
  br i1 %cmp2651, label %land.lhs.true.2653, label %if.end.2657

land.lhs.true.2653:                               ; preds = %if.then.2646
  %1219 = load %struct.rtx_def*, %struct.rtx_def** %other_pat, align 8
  %call2654 = call i32 @check_asm_operands(%struct.rtx_def* %1219)
  %tobool2655 = icmp ne i32 %call2654, 0
  br i1 %tobool2655, label %if.end.2657, label %if.then.2656

if.then.2656:                                     ; preds = %land.lhs.true.2653
  call void @undo_all()
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.2657:                                      ; preds = %land.lhs.true.2653, %if.then.2646
  %1220 = load %struct.rtx_def*, %struct.rtx_def** %other_pat, align 8
  %1221 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 2), align 8
  %fld2658 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1221, i32 0, i32 1
  %arrayidx2659 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2658, i32 0, i64 3
  %rtx2660 = bitcast %union.rtunion_def* %arrayidx2659 to %struct.rtx_def**
  store %struct.rtx_def* %1220, %struct.rtx_def** %rtx2660, align 8
  %1222 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 2), align 8
  %fld2661 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1222, i32 0, i32 1
  %arrayidx2662 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2661, i32 0, i64 6
  %rtx2663 = bitcast %union.rtunion_def* %arrayidx2662 to %struct.rtx_def**
  %1223 = load %struct.rtx_def*, %struct.rtx_def** %rtx2663, align 8
  store %struct.rtx_def* %1223, %struct.rtx_def** %note, align 8
  br label %for.cond.2664

for.cond.2664:                                    ; preds = %for.inc.2706, %if.end.2657
  %1224 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %tobool2665 = icmp ne %struct.rtx_def* %1224, null
  br i1 %tobool2665, label %for.body.2666, label %for.end.2707

for.body.2666:                                    ; preds = %for.cond.2664
  %1225 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld2667 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1225, i32 0, i32 1
  %arrayidx2668 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2667, i32 0, i64 1
  %rtx2669 = bitcast %union.rtunion_def* %arrayidx2668 to %struct.rtx_def**
  %1226 = load %struct.rtx_def*, %struct.rtx_def** %rtx2669, align 8
  store %struct.rtx_def* %1226, %struct.rtx_def** %next, align 8
  %1227 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %1228 = bitcast %struct.rtx_def* %1227 to i32*
  %bf.load2670 = load i32, i32* %1228, align 8
  %bf.lshr2671 = lshr i32 %bf.load2670, 16
  %bf.clear2672 = and i32 %bf.lshr2671, 255
  %cmp2673 = icmp eq i32 %bf.clear2672, 10
  br i1 %cmp2673, label %land.lhs.true.2675, label %if.end.2705

land.lhs.true.2675:                               ; preds = %for.body.2666
  %1229 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld2676 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1229, i32 0, i32 1
  %arrayidx2677 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2676, i32 0, i64 0
  %rtx2678 = bitcast %union.rtunion_def* %arrayidx2677 to %struct.rtx_def**
  %1230 = load %struct.rtx_def*, %struct.rtx_def** %rtx2678, align 8
  %1231 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 2), align 8
  %fld2679 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1231, i32 0, i32 1
  %arrayidx2680 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2679, i32 0, i64 3
  %rtx2681 = bitcast %union.rtunion_def* %arrayidx2680 to %struct.rtx_def**
  %1232 = load %struct.rtx_def*, %struct.rtx_def** %rtx2681, align 8
  %call2682 = call i32 @reg_set_p(%struct.rtx_def* %1230, %struct.rtx_def* %1232)
  %tobool2683 = icmp ne i32 %call2682, 0
  br i1 %tobool2683, label %if.end.2705, label %if.then.2684

if.then.2684:                                     ; preds = %land.lhs.true.2675
  %1233 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld2685 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1233, i32 0, i32 1
  %arrayidx2686 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2685, i32 0, i64 0
  %rtx2687 = bitcast %union.rtunion_def* %arrayidx2686 to %struct.rtx_def**
  %1234 = load %struct.rtx_def*, %struct.rtx_def** %rtx2687, align 8
  %1235 = bitcast %struct.rtx_def* %1234 to i32*
  %bf.load2688 = load i32, i32* %1235, align 8
  %bf.clear2689 = and i32 %bf.load2688, 65535
  %cmp2690 = icmp eq i32 %bf.clear2689, 61
  br i1 %cmp2690, label %if.then.2692, label %if.end.2704

if.then.2692:                                     ; preds = %if.then.2684
  %1236 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld2693 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1236, i32 0, i32 1
  %arrayidx2694 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2693, i32 0, i64 0
  %rtx2695 = bitcast %union.rtunion_def* %arrayidx2694 to %struct.rtx_def**
  %1237 = load %struct.rtx_def*, %struct.rtx_def** %rtx2695, align 8
  %fld2696 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1237, i32 0, i32 1
  %arrayidx2697 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2696, i32 0, i64 0
  %rtuint2698 = bitcast %union.rtunion_def* %arrayidx2697 to i32*
  %1238 = load i32, i32* %rtuint2698, align 4
  %idxprom2699 = zext i32 %1238 to i64
  %1239 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data2700 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %1239, i32 0, i32 4
  %reg2701 = bitcast %union.varray_data_tag* %data2700 to [1 x %struct.reg_info_def*]*
  %arrayidx2702 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg2701, i32 0, i64 %idxprom2699
  %1240 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx2702, align 8
  %deaths = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %1240, i32 0, i32 6
  %1241 = load i32, i32* %deaths, align 4
  %dec2703 = add nsw i32 %1241, -1
  store i32 %dec2703, i32* %deaths, align 4
  br label %if.end.2704

if.end.2704:                                      ; preds = %if.then.2692, %if.then.2684
  %1242 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 2), align 8
  %1243 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  call void @remove_note(%struct.rtx_def* %1242, %struct.rtx_def* %1243)
  br label %if.end.2705

if.end.2705:                                      ; preds = %if.end.2704, %land.lhs.true.2675, %for.body.2666
  br label %for.inc.2706

for.inc.2706:                                     ; preds = %if.end.2705
  %1244 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  store %struct.rtx_def* %1244, %struct.rtx_def** %note, align 8
  br label %for.cond.2664

for.end.2707:                                     ; preds = %for.cond.2664
  %1245 = load %struct.rtx_def*, %struct.rtx_def** %new_other_notes, align 8
  store %struct.rtx_def* %1245, %struct.rtx_def** %note, align 8
  br label %for.cond.2708

for.cond.2708:                                    ; preds = %for.inc.2732, %for.end.2707
  %1246 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %tobool2709 = icmp ne %struct.rtx_def* %1246, null
  br i1 %tobool2709, label %for.body.2710, label %for.end.2736

for.body.2710:                                    ; preds = %for.cond.2708
  %1247 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld2711 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1247, i32 0, i32 1
  %arrayidx2712 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2711, i32 0, i64 0
  %rtx2713 = bitcast %union.rtunion_def* %arrayidx2712 to %struct.rtx_def**
  %1248 = load %struct.rtx_def*, %struct.rtx_def** %rtx2713, align 8
  %1249 = bitcast %struct.rtx_def* %1248 to i32*
  %bf.load2714 = load i32, i32* %1249, align 8
  %bf.clear2715 = and i32 %bf.load2714, 65535
  %cmp2716 = icmp eq i32 %bf.clear2715, 61
  br i1 %cmp2716, label %if.then.2718, label %if.end.2731

if.then.2718:                                     ; preds = %for.body.2710
  %1250 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld2719 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1250, i32 0, i32 1
  %arrayidx2720 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2719, i32 0, i64 0
  %rtx2721 = bitcast %union.rtunion_def* %arrayidx2720 to %struct.rtx_def**
  %1251 = load %struct.rtx_def*, %struct.rtx_def** %rtx2721, align 8
  %fld2722 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1251, i32 0, i32 1
  %arrayidx2723 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2722, i32 0, i64 0
  %rtuint2724 = bitcast %union.rtunion_def* %arrayidx2723 to i32*
  %1252 = load i32, i32* %rtuint2724, align 4
  %idxprom2725 = zext i32 %1252 to i64
  %1253 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data2726 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %1253, i32 0, i32 4
  %reg2727 = bitcast %union.varray_data_tag* %data2726 to [1 x %struct.reg_info_def*]*
  %arrayidx2728 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg2727, i32 0, i64 %idxprom2725
  %1254 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx2728, align 8
  %deaths2729 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %1254, i32 0, i32 6
  %1255 = load i32, i32* %deaths2729, align 4
  %inc2730 = add nsw i32 %1255, 1
  store i32 %inc2730, i32* %deaths2729, align 4
  br label %if.end.2731

if.end.2731:                                      ; preds = %if.then.2718, %for.body.2710
  br label %for.inc.2732

for.inc.2732:                                     ; preds = %if.end.2731
  %1256 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld2733 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1256, i32 0, i32 1
  %arrayidx2734 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2733, i32 0, i64 1
  %rtx2735 = bitcast %union.rtunion_def* %arrayidx2734 to %struct.rtx_def**
  %1257 = load %struct.rtx_def*, %struct.rtx_def** %rtx2735, align 8
  store %struct.rtx_def* %1257, %struct.rtx_def** %note, align 8
  br label %for.cond.2708

for.end.2736:                                     ; preds = %for.cond.2708
  %1258 = load %struct.rtx_def*, %struct.rtx_def** %new_other_notes, align 8
  %1259 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 2), align 8
  %1260 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 2), align 8
  call void @distribute_notes(%struct.rtx_def* %1258, %struct.rtx_def* %1259, %struct.rtx_def* %1260, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* null)
  br label %if.end.2737

if.end.2737:                                      ; preds = %for.end.2736, %if.end.2644
  store %struct.rtx_def* null, %struct.rtx_def** %i1notes, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %i1links, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %midnotes, align 8
  %1261 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %tobool2739 = icmp ne %struct.rtx_def* %1261, null
  br i1 %tobool2739, label %land.lhs.true.2740, label %lor.lhs.false.2743

land.lhs.true.2740:                               ; preds = %if.end.2737
  %1262 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %1263 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %call2741 = call i32 @reg_set_p(%struct.rtx_def* %1262, %struct.rtx_def* %1263)
  %tobool2742 = icmp ne i32 %call2741, 0
  br i1 %tobool2742, label %cond.true.2747, label %lor.lhs.false.2743

lor.lhs.false.2743:                               ; preds = %land.lhs.true.2740, %if.end.2737
  %1264 = load i32, i32* %i2dest_in_i2src, align 4
  %tobool2744 = icmp ne i32 %1264, 0
  br i1 %tobool2744, label %cond.true.2747, label %lor.lhs.false.2745

lor.lhs.false.2745:                               ; preds = %lor.lhs.false.2743
  %1265 = load i32, i32* %i2dest_in_i1src, align 4
  %tobool2746 = icmp ne i32 %1265, 0
  br i1 %tobool2746, label %cond.true.2747, label %cond.false.2748

cond.true.2747:                                   ; preds = %lor.lhs.false.2745, %lor.lhs.false.2743, %land.lhs.true.2740
  br label %cond.end.2749

cond.false.2748:                                  ; preds = %lor.lhs.false.2745
  %1266 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  br label %cond.end.2749

cond.end.2749:                                    ; preds = %cond.false.2748, %cond.true.2747
  %cond2750 = phi %struct.rtx_def* [ null, %cond.true.2747 ], [ %1266, %cond.false.2748 ]
  store %struct.rtx_def* %cond2750, %struct.rtx_def** %elim_i2, align 8
  %1267 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %cmp2751 = icmp eq %struct.rtx_def* %1267, null
  br i1 %cmp2751, label %cond.true.2760, label %lor.lhs.false.2753

lor.lhs.false.2753:                               ; preds = %cond.end.2749
  %1268 = load i32, i32* %i1dest_in_i1src, align 4
  %tobool2754 = icmp ne i32 %1268, 0
  br i1 %tobool2754, label %cond.true.2760, label %lor.lhs.false.2755

lor.lhs.false.2755:                               ; preds = %lor.lhs.false.2753
  %1269 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %tobool2756 = icmp ne %struct.rtx_def* %1269, null
  br i1 %tobool2756, label %land.lhs.true.2757, label %cond.false.2761

land.lhs.true.2757:                               ; preds = %lor.lhs.false.2755
  %1270 = load %struct.rtx_def*, %struct.rtx_def** %i1dest, align 8
  %1271 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %call2758 = call i32 @reg_set_p(%struct.rtx_def* %1270, %struct.rtx_def* %1271)
  %tobool2759 = icmp ne i32 %call2758, 0
  br i1 %tobool2759, label %cond.true.2760, label %cond.false.2761

cond.true.2760:                                   ; preds = %land.lhs.true.2757, %lor.lhs.false.2753, %cond.end.2749
  br label %cond.end.2762

cond.false.2761:                                  ; preds = %land.lhs.true.2757, %lor.lhs.false.2755
  %1272 = load %struct.rtx_def*, %struct.rtx_def** %i1dest, align 8
  br label %cond.end.2762

cond.end.2762:                                    ; preds = %cond.false.2761, %cond.true.2760
  %cond2763 = phi %struct.rtx_def* [ null, %cond.true.2760 ], [ %1272, %cond.false.2761 ]
  store %struct.rtx_def* %cond2763, %struct.rtx_def** %elim_i1, align 8
  %1273 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld2764 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1273, i32 0, i32 1
  %arrayidx2765 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2764, i32 0, i64 6
  %rtx2766 = bitcast %union.rtunion_def* %arrayidx2765 to %struct.rtx_def**
  %1274 = load %struct.rtx_def*, %struct.rtx_def** %rtx2766, align 8
  store %struct.rtx_def* %1274, %struct.rtx_def** %i3notes, align 8
  %1275 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld2767 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1275, i32 0, i32 1
  %arrayidx2768 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2767, i32 0, i64 5
  %rtx2769 = bitcast %union.rtunion_def* %arrayidx2768 to %struct.rtx_def**
  %1276 = load %struct.rtx_def*, %struct.rtx_def** %rtx2769, align 8
  store %struct.rtx_def* %1276, %struct.rtx_def** %i3links, align 8
  %1277 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld2770 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1277, i32 0, i32 1
  %arrayidx2771 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2770, i32 0, i64 6
  %rtx2772 = bitcast %union.rtunion_def* %arrayidx2771 to %struct.rtx_def**
  %1278 = load %struct.rtx_def*, %struct.rtx_def** %rtx2772, align 8
  store %struct.rtx_def* %1278, %struct.rtx_def** %i2notes, align 8
  %1279 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld2773 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1279, i32 0, i32 1
  %arrayidx2774 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2773, i32 0, i64 5
  %rtx2775 = bitcast %union.rtunion_def* %arrayidx2774 to %struct.rtx_def**
  %1280 = load %struct.rtx_def*, %struct.rtx_def** %rtx2775, align 8
  store %struct.rtx_def* %1280, %struct.rtx_def** %i2links, align 8
  %1281 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %tobool2776 = icmp ne %struct.rtx_def* %1281, null
  br i1 %tobool2776, label %if.then.2777, label %if.end.2784

if.then.2777:                                     ; preds = %cond.end.2762
  %1282 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %fld2778 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1282, i32 0, i32 1
  %arrayidx2779 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2778, i32 0, i64 6
  %rtx2780 = bitcast %union.rtunion_def* %arrayidx2779 to %struct.rtx_def**
  %1283 = load %struct.rtx_def*, %struct.rtx_def** %rtx2780, align 8
  store %struct.rtx_def* %1283, %struct.rtx_def** %i1notes, align 8
  %1284 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %fld2781 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1284, i32 0, i32 1
  %arrayidx2782 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2781, i32 0, i64 5
  %rtx2783 = bitcast %union.rtunion_def* %arrayidx2782 to %struct.rtx_def**
  %1285 = load %struct.rtx_def*, %struct.rtx_def** %rtx2783, align 8
  store %struct.rtx_def* %1285, %struct.rtx_def** %i1links, align 8
  br label %if.end.2784

if.end.2784:                                      ; preds = %if.then.2777, %cond.end.2762
  %1286 = load %struct.rtx_def*, %struct.rtx_def** %i3notes, align 8
  call void @reset_used_flags(%struct.rtx_def* %1286)
  %1287 = load %struct.rtx_def*, %struct.rtx_def** %i2notes, align 8
  call void @reset_used_flags(%struct.rtx_def* %1287)
  %1288 = load %struct.rtx_def*, %struct.rtx_def** %i1notes, align 8
  call void @reset_used_flags(%struct.rtx_def* %1288)
  %1289 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  call void @reset_used_flags(%struct.rtx_def* %1289)
  %1290 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  call void @reset_used_flags(%struct.rtx_def* %1290)
  %1291 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 2), align 8
  %tobool2785 = icmp ne %struct.rtx_def* %1291, null
  br i1 %tobool2785, label %if.then.2786, label %if.end.2790

if.then.2786:                                     ; preds = %if.end.2784
  %1292 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 2), align 8
  %fld2787 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1292, i32 0, i32 1
  %arrayidx2788 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2787, i32 0, i64 3
  %rtx2789 = bitcast %union.rtunion_def* %arrayidx2788 to %struct.rtx_def**
  %1293 = load %struct.rtx_def*, %struct.rtx_def** %rtx2789, align 8
  call void @reset_used_flags(%struct.rtx_def* %1293)
  br label %if.end.2790

if.end.2790:                                      ; preds = %if.then.2786, %if.end.2784
  %1294 = load %struct.rtx_def*, %struct.rtx_def** %i3notes, align 8
  %call2791 = call %struct.rtx_def* @copy_rtx_if_shared(%struct.rtx_def* %1294)
  store %struct.rtx_def* %call2791, %struct.rtx_def** %i3notes, align 8
  %1295 = load %struct.rtx_def*, %struct.rtx_def** %i2notes, align 8
  %call2792 = call %struct.rtx_def* @copy_rtx_if_shared(%struct.rtx_def* %1295)
  store %struct.rtx_def* %call2792, %struct.rtx_def** %i2notes, align 8
  %1296 = load %struct.rtx_def*, %struct.rtx_def** %i1notes, align 8
  %call2793 = call %struct.rtx_def* @copy_rtx_if_shared(%struct.rtx_def* %1296)
  store %struct.rtx_def* %call2793, %struct.rtx_def** %i1notes, align 8
  %1297 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %call2794 = call %struct.rtx_def* @copy_rtx_if_shared(%struct.rtx_def* %1297)
  store %struct.rtx_def* %call2794, %struct.rtx_def** %newpat, align 8
  %1298 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %call2795 = call %struct.rtx_def* @copy_rtx_if_shared(%struct.rtx_def* %1298)
  store %struct.rtx_def* %call2795, %struct.rtx_def** %newi2pat, align 8
  %1299 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 2), align 8
  %tobool2796 = icmp ne %struct.rtx_def* %1299, null
  br i1 %tobool2796, label %if.then.2797, label %if.end.2801

if.then.2797:                                     ; preds = %if.end.2790
  %1300 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 2), align 8
  %fld2798 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1300, i32 0, i32 1
  %arrayidx2799 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2798, i32 0, i64 3
  %rtx2800 = bitcast %union.rtunion_def* %arrayidx2799 to %struct.rtx_def**
  %1301 = load %struct.rtx_def*, %struct.rtx_def** %rtx2800, align 8
  call void @reset_used_flags(%struct.rtx_def* %1301)
  br label %if.end.2801

if.end.2801:                                      ; preds = %if.then.2797, %if.end.2790
  %1302 = load i32, i32* %insn_code_number, align 4
  %1303 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld2802 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1303, i32 0, i32 1
  %arrayidx2803 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2802, i32 0, i64 4
  %rtint2804 = bitcast %union.rtunion_def* %arrayidx2803 to i32*
  store i32 %1302, i32* %rtint2804, align 4
  %1304 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %1305 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld2805 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1305, i32 0, i32 1
  %arrayidx2806 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2805, i32 0, i64 3
  %rtx2807 = bitcast %union.rtunion_def* %arrayidx2806 to %struct.rtx_def**
  store %struct.rtx_def* %1304, %struct.rtx_def** %rtx2807, align 8
  %1306 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %1307 = bitcast %struct.rtx_def* %1306 to i32*
  %bf.load2808 = load i32, i32* %1307, align 8
  %bf.clear2809 = and i32 %bf.load2808, 65535
  %cmp2810 = icmp eq i32 %bf.clear2809, 34
  br i1 %cmp2810, label %land.lhs.true.2812, label %if.end.2833

land.lhs.true.2812:                               ; preds = %if.end.2801
  %1308 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld2813 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1308, i32 0, i32 1
  %arrayidx2814 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2813, i32 0, i64 7
  %rtx2815 = bitcast %union.rtunion_def* %arrayidx2814 to %struct.rtx_def**
  %1309 = load %struct.rtx_def*, %struct.rtx_def** %rtx2815, align 8
  %tobool2816 = icmp ne %struct.rtx_def* %1309, null
  br i1 %tobool2816, label %if.then.2817, label %if.end.2833

if.then.2817:                                     ; preds = %land.lhs.true.2812
  %1310 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld2818 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1310, i32 0, i32 1
  %arrayidx2819 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2818, i32 0, i64 7
  %rtx2820 = bitcast %union.rtunion_def* %arrayidx2819 to %struct.rtx_def**
  %1311 = load %struct.rtx_def*, %struct.rtx_def** %rtx2820, align 8
  store %struct.rtx_def* %1311, %struct.rtx_def** %call_usage, align 8
  %1312 = load %struct.rtx_def*, %struct.rtx_def** %call_usage, align 8
  call void @reset_used_flags(%struct.rtx_def* %1312)
  %1313 = load %struct.rtx_def*, %struct.rtx_def** %call_usage, align 8
  %call2821 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1313)
  store %struct.rtx_def* %call2821, %struct.rtx_def** %call_usage, align 8
  %1314 = load i32, i32* %substed_i2, align 4
  %tobool2822 = icmp ne i32 %1314, 0
  br i1 %tobool2822, label %if.then.2823, label %if.end.2825

if.then.2823:                                     ; preds = %if.then.2817
  %1315 = load %struct.rtx_def*, %struct.rtx_def** %call_usage, align 8
  %1316 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %1317 = load %struct.rtx_def*, %struct.rtx_def** %i2src, align 8
  %call2824 = call %struct.rtx_def* @replace_rtx(%struct.rtx_def* %1315, %struct.rtx_def* %1316, %struct.rtx_def* %1317)
  br label %if.end.2825

if.end.2825:                                      ; preds = %if.then.2823, %if.then.2817
  %1318 = load i32, i32* %substed_i1, align 4
  %tobool2826 = icmp ne i32 %1318, 0
  br i1 %tobool2826, label %if.then.2827, label %if.end.2829

if.then.2827:                                     ; preds = %if.end.2825
  %1319 = load %struct.rtx_def*, %struct.rtx_def** %call_usage, align 8
  %1320 = load %struct.rtx_def*, %struct.rtx_def** %i1dest, align 8
  %1321 = load %struct.rtx_def*, %struct.rtx_def** %i1src, align 8
  %call2828 = call %struct.rtx_def* @replace_rtx(%struct.rtx_def* %1319, %struct.rtx_def* %1320, %struct.rtx_def* %1321)
  br label %if.end.2829

if.end.2829:                                      ; preds = %if.then.2827, %if.end.2825
  %1322 = load %struct.rtx_def*, %struct.rtx_def** %call_usage, align 8
  %1323 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld2830 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1323, i32 0, i32 1
  %arrayidx2831 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2830, i32 0, i64 7
  %rtx2832 = bitcast %union.rtunion_def* %arrayidx2831 to %struct.rtx_def**
  store %struct.rtx_def* %1322, %struct.rtx_def** %rtx2832, align 8
  br label %if.end.2833

if.end.2833:                                      ; preds = %if.end.2829, %land.lhs.true.2812, %if.end.2801
  %1324 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 2), align 8
  %tobool2834 = icmp ne %struct.rtx_def* %1324, null
  br i1 %tobool2834, label %if.then.2835, label %if.end.2839

if.then.2835:                                     ; preds = %if.end.2833
  %1325 = load i32, i32* %other_code_number, align 4
  %1326 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 2), align 8
  %fld2836 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1326, i32 0, i32 1
  %arrayidx2837 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2836, i32 0, i64 4
  %rtint2838 = bitcast %union.rtunion_def* %arrayidx2837 to i32*
  store i32 %1325, i32* %rtint2838, align 4
  br label %if.end.2839

if.end.2839:                                      ; preds = %if.then.2835, %if.end.2833
  %1327 = load i32, i32* %i3_subst_into_i2, align 4
  %tobool2840 = icmp ne i32 %1327, 0
  br i1 %tobool2840, label %if.then.2841, label %if.end.2996

if.then.2841:                                     ; preds = %if.end.2839
  store i32 0, i32* %i, align 4
  br label %for.cond.2842

for.cond.2842:                                    ; preds = %for.inc.2975, %if.then.2841
  %1328 = load i32, i32* %i, align 4
  %1329 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld2843 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1329, i32 0, i32 1
  %arrayidx2844 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2843, i32 0, i64 3
  %rtx2845 = bitcast %union.rtunion_def* %arrayidx2844 to %struct.rtx_def**
  %1330 = load %struct.rtx_def*, %struct.rtx_def** %rtx2845, align 8
  %fld2846 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1330, i32 0, i32 1
  %arrayidx2847 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2846, i32 0, i64 0
  %rtvec2848 = bitcast %union.rtunion_def* %arrayidx2847 to %struct.rtvec_def**
  %1331 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2848, align 8
  %num_elem2849 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1331, i32 0, i32 0
  %1332 = load i32, i32* %num_elem2849, align 4
  %cmp2850 = icmp slt i32 %1328, %1332
  br i1 %cmp2850, label %for.body.2852, label %for.end.2977

for.body.2852:                                    ; preds = %for.cond.2842
  %1333 = load i32, i32* %i, align 4
  %idxprom2853 = sext i32 %1333 to i64
  %1334 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld2854 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1334, i32 0, i32 1
  %arrayidx2855 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2854, i32 0, i64 3
  %rtx2856 = bitcast %union.rtunion_def* %arrayidx2855 to %struct.rtx_def**
  %1335 = load %struct.rtx_def*, %struct.rtx_def** %rtx2856, align 8
  %fld2857 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1335, i32 0, i32 1
  %arrayidx2858 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2857, i32 0, i64 0
  %rtvec2859 = bitcast %union.rtunion_def* %arrayidx2858 to %struct.rtvec_def**
  %1336 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2859, align 8
  %elem2860 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1336, i32 0, i32 1
  %arrayidx2861 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2860, i32 0, i64 %idxprom2853
  %1337 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2861, align 8
  %1338 = bitcast %struct.rtx_def* %1337 to i32*
  %bf.load2862 = load i32, i32* %1338, align 8
  %bf.clear2863 = and i32 %bf.load2862, 65535
  %cmp2864 = icmp ne i32 %bf.clear2863, 48
  br i1 %cmp2864, label %land.lhs.true.2866, label %if.end.2974

land.lhs.true.2866:                               ; preds = %for.body.2852
  %1339 = load i32, i32* %i, align 4
  %idxprom2867 = sext i32 %1339 to i64
  %1340 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld2868 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1340, i32 0, i32 1
  %arrayidx2869 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2868, i32 0, i64 3
  %rtx2870 = bitcast %union.rtunion_def* %arrayidx2869 to %struct.rtx_def**
  %1341 = load %struct.rtx_def*, %struct.rtx_def** %rtx2870, align 8
  %fld2871 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1341, i32 0, i32 1
  %arrayidx2872 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2871, i32 0, i64 0
  %rtvec2873 = bitcast %union.rtunion_def* %arrayidx2872 to %struct.rtvec_def**
  %1342 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2873, align 8
  %elem2874 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1342, i32 0, i32 1
  %arrayidx2875 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2874, i32 0, i64 %idxprom2867
  %1343 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2875, align 8
  %fld2876 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1343, i32 0, i32 1
  %arrayidx2877 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2876, i32 0, i64 0
  %rtx2878 = bitcast %union.rtunion_def* %arrayidx2877 to %struct.rtx_def**
  %1344 = load %struct.rtx_def*, %struct.rtx_def** %rtx2878, align 8
  %1345 = bitcast %struct.rtx_def* %1344 to i32*
  %bf.load2879 = load i32, i32* %1345, align 8
  %bf.clear2880 = and i32 %bf.load2879, 65535
  %cmp2881 = icmp eq i32 %bf.clear2880, 61
  br i1 %cmp2881, label %land.lhs.true.2883, label %if.end.2974

land.lhs.true.2883:                               ; preds = %land.lhs.true.2866
  %1346 = load i32, i32* %i, align 4
  %idxprom2884 = sext i32 %1346 to i64
  %1347 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld2885 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1347, i32 0, i32 1
  %arrayidx2886 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2885, i32 0, i64 3
  %rtx2887 = bitcast %union.rtunion_def* %arrayidx2886 to %struct.rtx_def**
  %1348 = load %struct.rtx_def*, %struct.rtx_def** %rtx2887, align 8
  %fld2888 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1348, i32 0, i32 1
  %arrayidx2889 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2888, i32 0, i64 0
  %rtvec2890 = bitcast %union.rtunion_def* %arrayidx2889 to %struct.rtvec_def**
  %1349 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2890, align 8
  %elem2891 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1349, i32 0, i32 1
  %arrayidx2892 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2891, i32 0, i64 %idxprom2884
  %1350 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2892, align 8
  %fld2893 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1350, i32 0, i32 1
  %arrayidx2894 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2893, i32 0, i64 0
  %rtx2895 = bitcast %union.rtunion_def* %arrayidx2894 to %struct.rtx_def**
  %1351 = load %struct.rtx_def*, %struct.rtx_def** %rtx2895, align 8
  %1352 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %cmp2896 = icmp ne %struct.rtx_def* %1351, %1352
  br i1 %cmp2896, label %land.lhs.true.2898, label %if.end.2974

land.lhs.true.2898:                               ; preds = %land.lhs.true.2883
  %1353 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %1354 = load i32, i32* %i, align 4
  %idxprom2899 = sext i32 %1354 to i64
  %1355 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld2900 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1355, i32 0, i32 1
  %arrayidx2901 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2900, i32 0, i64 3
  %rtx2902 = bitcast %union.rtunion_def* %arrayidx2901 to %struct.rtx_def**
  %1356 = load %struct.rtx_def*, %struct.rtx_def** %rtx2902, align 8
  %fld2903 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1356, i32 0, i32 1
  %arrayidx2904 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2903, i32 0, i64 0
  %rtvec2905 = bitcast %union.rtunion_def* %arrayidx2904 to %struct.rtvec_def**
  %1357 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2905, align 8
  %elem2906 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1357, i32 0, i32 1
  %arrayidx2907 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2906, i32 0, i64 %idxprom2899
  %1358 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2907, align 8
  %fld2908 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1358, i32 0, i32 1
  %arrayidx2909 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2908, i32 0, i64 0
  %rtx2910 = bitcast %union.rtunion_def* %arrayidx2909 to %struct.rtx_def**
  %1359 = load %struct.rtx_def*, %struct.rtx_def** %rtx2910, align 8
  %call2911 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %1353, i32 10, %struct.rtx_def* %1359)
  %tobool2912 = icmp ne %struct.rtx_def* %call2911, null
  br i1 %tobool2912, label %if.end.2974, label %if.then.2913

if.then.2913:                                     ; preds = %land.lhs.true.2898
  %1360 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld2914 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1360, i32 0, i32 1
  %arrayidx2915 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2914, i32 0, i64 2
  %rtx2916 = bitcast %union.rtunion_def* %arrayidx2915 to %struct.rtx_def**
  %1361 = load %struct.rtx_def*, %struct.rtx_def** %rtx2916, align 8
  store %struct.rtx_def* %1361, %struct.rtx_def** %temp, align 8
  br label %for.cond.2917

for.cond.2917:                                    ; preds = %for.inc.2969, %if.then.2913
  %1362 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %tobool2918 = icmp ne %struct.rtx_def* %1362, null
  br i1 %tobool2918, label %land.rhs.2919, label %land.end.2933

land.rhs.2919:                                    ; preds = %for.cond.2917
  %1363 = load i32, i32* @this_basic_block, align 4
  %1364 = load i32, i32* @n_basic_blocks, align 4
  %sub2920 = sub nsw i32 %1364, 1
  %cmp2921 = icmp eq i32 %1363, %sub2920
  br i1 %cmp2921, label %lor.end.2931, label %lor.rhs.2923

lor.rhs.2923:                                     ; preds = %land.rhs.2919
  %1365 = load i32, i32* @this_basic_block, align 4
  %idxprom2924 = sext i32 %1365 to i64
  %1366 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %data2925 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %1366, i32 0, i32 4
  %bb2926 = bitcast %union.varray_data_tag* %data2925 to [1 x %struct.basic_block_def*]*
  %arrayidx2927 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %bb2926, i32 0, i64 %idxprom2924
  %1367 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx2927, align 8
  %head2928 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1367, i32 0, i32 0
  %1368 = load %struct.rtx_def*, %struct.rtx_def** %head2928, align 8
  %1369 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %cmp2929 = icmp ne %struct.rtx_def* %1368, %1369
  br label %lor.end.2931

lor.end.2931:                                     ; preds = %lor.rhs.2923, %land.rhs.2919
  %1370 = phi i1 [ true, %land.rhs.2919 ], [ %cmp2929, %lor.rhs.2923 ]
  br label %land.end.2933

land.end.2933:                                    ; preds = %lor.end.2931, %for.cond.2917
  %1371 = phi i1 [ false, %for.cond.2917 ], [ %1370, %lor.end.2931 ]
  br i1 %1371, label %for.body.2935, label %for.end.2973

for.body.2935:                                    ; preds = %land.end.2933
  %1372 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %1373 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %cmp2936 = icmp ne %struct.rtx_def* %1372, %1373
  br i1 %cmp2936, label %land.lhs.true.2938, label %if.end.2968

land.lhs.true.2938:                               ; preds = %for.body.2935
  %1374 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %1375 = bitcast %struct.rtx_def* %1374 to i32*
  %bf.load2939 = load i32, i32* %1375, align 8
  %bf.clear2940 = and i32 %bf.load2939, 65535
  %idxprom2941 = sext i32 %bf.clear2940 to i64
  %arrayidx2942 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom2941
  %1376 = load i8, i8* %arrayidx2942, align 1
  %conv2943 = sext i8 %1376 to i32
  %cmp2944 = icmp eq i32 %conv2943, 105
  br i1 %cmp2944, label %if.then.2946, label %if.end.2968

if.then.2946:                                     ; preds = %land.lhs.true.2938
  %1377 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld2947 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1377, i32 0, i32 1
  %arrayidx2948 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2947, i32 0, i64 5
  %rtx2949 = bitcast %union.rtunion_def* %arrayidx2948 to %struct.rtx_def**
  %1378 = load %struct.rtx_def*, %struct.rtx_def** %rtx2949, align 8
  store %struct.rtx_def* %1378, %struct.rtx_def** %link, align 8
  br label %for.cond.2950

for.cond.2950:                                    ; preds = %for.inc.2963, %if.then.2946
  %1379 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %tobool2951 = icmp ne %struct.rtx_def* %1379, null
  br i1 %tobool2951, label %for.body.2952, label %for.end.2967

for.body.2952:                                    ; preds = %for.cond.2950
  %1380 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld2953 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1380, i32 0, i32 1
  %arrayidx2954 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2953, i32 0, i64 0
  %rtx2955 = bitcast %union.rtunion_def* %arrayidx2954 to %struct.rtx_def**
  %1381 = load %struct.rtx_def*, %struct.rtx_def** %rtx2955, align 8
  %1382 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %cmp2956 = icmp eq %struct.rtx_def* %1381, %1382
  br i1 %cmp2956, label %if.then.2958, label %if.end.2962

if.then.2958:                                     ; preds = %for.body.2952
  %1383 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %1384 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld2959 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1384, i32 0, i32 1
  %arrayidx2960 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2959, i32 0, i64 0
  %rtx2961 = bitcast %union.rtunion_def* %arrayidx2960 to %struct.rtx_def**
  store %struct.rtx_def* %1383, %struct.rtx_def** %rtx2961, align 8
  br label %if.end.2962

if.end.2962:                                      ; preds = %if.then.2958, %for.body.2952
  br label %for.inc.2963

for.inc.2963:                                     ; preds = %if.end.2962
  %1385 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld2964 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1385, i32 0, i32 1
  %arrayidx2965 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2964, i32 0, i64 1
  %rtx2966 = bitcast %union.rtunion_def* %arrayidx2965 to %struct.rtx_def**
  %1386 = load %struct.rtx_def*, %struct.rtx_def** %rtx2966, align 8
  store %struct.rtx_def* %1386, %struct.rtx_def** %link, align 8
  br label %for.cond.2950

for.end.2967:                                     ; preds = %for.cond.2950
  br label %if.end.2968

if.end.2968:                                      ; preds = %for.end.2967, %land.lhs.true.2938, %for.body.2935
  br label %for.inc.2969

for.inc.2969:                                     ; preds = %if.end.2968
  %1387 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld2970 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1387, i32 0, i32 1
  %arrayidx2971 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2970, i32 0, i64 2
  %rtx2972 = bitcast %union.rtunion_def* %arrayidx2971 to %struct.rtx_def**
  %1388 = load %struct.rtx_def*, %struct.rtx_def** %rtx2972, align 8
  store %struct.rtx_def* %1388, %struct.rtx_def** %temp, align 8
  br label %for.cond.2917

for.end.2973:                                     ; preds = %land.end.2933
  br label %if.end.2974

if.end.2974:                                      ; preds = %for.end.2973, %land.lhs.true.2898, %land.lhs.true.2883, %land.lhs.true.2866, %for.body.2852
  br label %for.inc.2975

for.inc.2975:                                     ; preds = %if.end.2974
  %1389 = load i32, i32* %i, align 4
  %inc2976 = add nsw i32 %1389, 1
  store i32 %inc2976, i32* %i, align 4
  br label %for.cond.2842

for.end.2977:                                     ; preds = %for.cond.2842
  %1390 = load %struct.rtx_def*, %struct.rtx_def** %i3notes, align 8
  %tobool2978 = icmp ne %struct.rtx_def* %1390, null
  br i1 %tobool2978, label %if.then.2979, label %if.else.2994

if.then.2979:                                     ; preds = %for.end.2977
  %1391 = load %struct.rtx_def*, %struct.rtx_def** %i3notes, align 8
  store %struct.rtx_def* %1391, %struct.rtx_def** %link2980, align 8
  br label %while.cond.2981

while.cond.2981:                                  ; preds = %while.body.2986, %if.then.2979
  %1392 = load %struct.rtx_def*, %struct.rtx_def** %link2980, align 8
  %fld2982 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1392, i32 0, i32 1
  %arrayidx2983 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2982, i32 0, i64 1
  %rtx2984 = bitcast %union.rtunion_def* %arrayidx2983 to %struct.rtx_def**
  %1393 = load %struct.rtx_def*, %struct.rtx_def** %rtx2984, align 8
  %tobool2985 = icmp ne %struct.rtx_def* %1393, null
  br i1 %tobool2985, label %while.body.2986, label %while.end.2990

while.body.2986:                                  ; preds = %while.cond.2981
  %1394 = load %struct.rtx_def*, %struct.rtx_def** %link2980, align 8
  %fld2987 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1394, i32 0, i32 1
  %arrayidx2988 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2987, i32 0, i64 1
  %rtx2989 = bitcast %union.rtunion_def* %arrayidx2988 to %struct.rtx_def**
  %1395 = load %struct.rtx_def*, %struct.rtx_def** %rtx2989, align 8
  store %struct.rtx_def* %1395, %struct.rtx_def** %link2980, align 8
  br label %while.cond.2981

while.end.2990:                                   ; preds = %while.cond.2981
  %1396 = load %struct.rtx_def*, %struct.rtx_def** %i2notes, align 8
  %1397 = load %struct.rtx_def*, %struct.rtx_def** %link2980, align 8
  %fld2991 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1397, i32 0, i32 1
  %arrayidx2992 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2991, i32 0, i64 1
  %rtx2993 = bitcast %union.rtunion_def* %arrayidx2992 to %struct.rtx_def**
  store %struct.rtx_def* %1396, %struct.rtx_def** %rtx2993, align 8
  br label %if.end.2995

if.else.2994:                                     ; preds = %for.end.2977
  %1398 = load %struct.rtx_def*, %struct.rtx_def** %i2notes, align 8
  store %struct.rtx_def* %1398, %struct.rtx_def** %i3notes, align 8
  br label %if.end.2995

if.end.2995:                                      ; preds = %if.else.2994, %while.end.2990
  store %struct.rtx_def* null, %struct.rtx_def** %i2notes, align 8
  br label %if.end.2996

if.end.2996:                                      ; preds = %if.end.2995, %if.end.2839
  %1399 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld2997 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1399, i32 0, i32 1
  %arrayidx2998 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2997, i32 0, i64 5
  %rtx2999 = bitcast %union.rtunion_def* %arrayidx2998 to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %rtx2999, align 8
  %1400 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld3000 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1400, i32 0, i32 1
  %arrayidx3001 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3000, i32 0, i64 6
  %rtx3002 = bitcast %union.rtunion_def* %arrayidx3001 to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %rtx3002, align 8
  %1401 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld3003 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1401, i32 0, i32 1
  %arrayidx3004 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3003, i32 0, i64 5
  %rtx3005 = bitcast %union.rtunion_def* %arrayidx3004 to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %rtx3005, align 8
  %1402 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld3006 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1402, i32 0, i32 1
  %arrayidx3007 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3006, i32 0, i64 6
  %rtx3008 = bitcast %union.rtunion_def* %arrayidx3007 to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %rtx3008, align 8
  %1403 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %tobool3009 = icmp ne %struct.rtx_def* %1403, null
  br i1 %tobool3009, label %if.then.3010, label %if.else.3017

if.then.3010:                                     ; preds = %if.end.2996
  %1404 = load i32, i32* %i2_code_number, align 4
  %1405 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld3011 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1405, i32 0, i32 1
  %arrayidx3012 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3011, i32 0, i64 4
  %rtint3013 = bitcast %union.rtunion_def* %arrayidx3012 to i32*
  store i32 %1404, i32* %rtint3013, align 4
  %1406 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %1407 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld3014 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1407, i32 0, i32 1
  %arrayidx3015 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3014, i32 0, i64 3
  %rtx3016 = bitcast %union.rtunion_def* %arrayidx3015 to %struct.rtx_def**
  store %struct.rtx_def* %1406, %struct.rtx_def** %rtx3016, align 8
  br label %if.end.3025

if.else.3017:                                     ; preds = %if.end.2996
  %1408 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %1409 = bitcast %struct.rtx_def* %1408 to i32*
  %bf.load3018 = load i32, i32* %1409, align 8
  %bf.clear3019 = and i32 %bf.load3018, -65536
  %bf.set = or i32 %bf.clear3019, 37
  store i32 %bf.set, i32* %1409, align 8
  %1410 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld3020 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1410, i32 0, i32 1
  %arrayidx3021 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3020, i32 0, i64 4
  %rtint3022 = bitcast %union.rtunion_def* %arrayidx3021 to i32*
  store i32 -99, i32* %rtint3022, align 4
  %1411 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld3023 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1411, i32 0, i32 1
  %arrayidx3024 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3023, i32 0, i64 3
  %rtstr = bitcast %union.rtunion_def* %arrayidx3024 to i8**
  store i8* null, i8** %rtstr, align 8
  br label %if.end.3025

if.end.3025:                                      ; preds = %if.else.3017, %if.then.3010
  %1412 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %tobool3026 = icmp ne %struct.rtx_def* %1412, null
  br i1 %tobool3026, label %if.then.3027, label %if.end.3043

if.then.3027:                                     ; preds = %if.end.3025
  %1413 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %fld3028 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1413, i32 0, i32 1
  %arrayidx3029 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3028, i32 0, i64 5
  %rtx3030 = bitcast %union.rtunion_def* %arrayidx3029 to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %rtx3030, align 8
  %1414 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %fld3031 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1414, i32 0, i32 1
  %arrayidx3032 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3031, i32 0, i64 6
  %rtx3033 = bitcast %union.rtunion_def* %arrayidx3032 to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %rtx3033, align 8
  %1415 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %1416 = bitcast %struct.rtx_def* %1415 to i32*
  %bf.load3034 = load i32, i32* %1416, align 8
  %bf.clear3035 = and i32 %bf.load3034, -65536
  %bf.set3036 = or i32 %bf.clear3035, 37
  store i32 %bf.set3036, i32* %1416, align 8
  %1417 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %fld3037 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1417, i32 0, i32 1
  %arrayidx3038 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3037, i32 0, i64 4
  %rtint3039 = bitcast %union.rtunion_def* %arrayidx3038 to i32*
  store i32 -99, i32* %rtint3039, align 4
  %1418 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %fld3040 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1418, i32 0, i32 1
  %arrayidx3041 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3040, i32 0, i64 3
  %rtstr3042 = bitcast %union.rtunion_def* %arrayidx3041 to i8**
  store i8* null, i8** %rtstr3042, align 8
  br label %if.end.3043

if.end.3043:                                      ; preds = %if.then.3027, %if.end.3025
  %1419 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %tobool3044 = icmp ne %struct.rtx_def* %1419, null
  br i1 %tobool3044, label %if.then.3045, label %if.else.3076

if.then.3045:                                     ; preds = %if.end.3043
  %1420 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %1421 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %fld3046 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1421, i32 0, i32 1
  %arrayidx3047 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3046, i32 0, i64 0
  %rtint3048 = bitcast %union.rtunion_def* %arrayidx3047 to i32*
  %1422 = load i32, i32* %rtint3048, align 4
  %1423 = load i32, i32* @max_uid_cuid, align 4
  %cmp3049 = icmp sgt i32 %1422, %1423
  br i1 %cmp3049, label %cond.true.3051, label %cond.false.3053

cond.true.3051:                                   ; preds = %if.then.3045
  %1424 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %call3052 = call i32 @insn_cuid(%struct.rtx_def* %1424)
  br label %cond.end.3059

cond.false.3053:                                  ; preds = %if.then.3045
  %1425 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %fld3054 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1425, i32 0, i32 1
  %arrayidx3055 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3054, i32 0, i64 0
  %rtint3056 = bitcast %union.rtunion_def* %arrayidx3055 to i32*
  %1426 = load i32, i32* %rtint3056, align 4
  %idxprom3057 = sext i32 %1426 to i64
  %1427 = load i32*, i32** @uid_cuid, align 8
  %arrayidx3058 = getelementptr inbounds i32, i32* %1427, i64 %idxprom3057
  %1428 = load i32, i32* %arrayidx3058, align 4
  br label %cond.end.3059

cond.end.3059:                                    ; preds = %cond.false.3053, %cond.true.3051
  %cond3060 = phi i32 [ %call3052, %cond.true.3051 ], [ %1428, %cond.false.3053 ]
  %1429 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  call void @move_deaths(%struct.rtx_def* %1420, %struct.rtx_def* null, i32 %cond3060, %struct.rtx_def* %1429, %struct.rtx_def** %midnotes)
  %1430 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %1431 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %1432 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %fld3061 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1432, i32 0, i32 1
  %arrayidx3062 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3061, i32 0, i64 0
  %rtint3063 = bitcast %union.rtunion_def* %arrayidx3062 to i32*
  %1433 = load i32, i32* %rtint3063, align 4
  %1434 = load i32, i32* @max_uid_cuid, align 4
  %cmp3064 = icmp sgt i32 %1433, %1434
  br i1 %cmp3064, label %cond.true.3066, label %cond.false.3068

cond.true.3066:                                   ; preds = %cond.end.3059
  %1435 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %call3067 = call i32 @insn_cuid(%struct.rtx_def* %1435)
  br label %cond.end.3074

cond.false.3068:                                  ; preds = %cond.end.3059
  %1436 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %fld3069 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1436, i32 0, i32 1
  %arrayidx3070 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3069, i32 0, i64 0
  %rtint3071 = bitcast %union.rtunion_def* %arrayidx3070 to i32*
  %1437 = load i32, i32* %rtint3071, align 4
  %idxprom3072 = sext i32 %1437 to i64
  %1438 = load i32*, i32** @uid_cuid, align 8
  %arrayidx3073 = getelementptr inbounds i32, i32* %1438, i64 %idxprom3072
  %1439 = load i32, i32* %arrayidx3073, align 4
  br label %cond.end.3074

cond.end.3074:                                    ; preds = %cond.false.3068, %cond.true.3066
  %cond3075 = phi i32 [ %call3067, %cond.true.3066 ], [ %1439, %cond.false.3068 ]
  %1440 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  call void @move_deaths(%struct.rtx_def* %1430, %struct.rtx_def* %1431, i32 %cond3075, %struct.rtx_def* %1440, %struct.rtx_def** %midnotes)
  br label %if.end.3112

if.else.3076:                                     ; preds = %if.end.3043
  %1441 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %1442 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %tobool3077 = icmp ne %struct.rtx_def* %1442, null
  br i1 %tobool3077, label %cond.true.3078, label %cond.false.3094

cond.true.3078:                                   ; preds = %if.else.3076
  %1443 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %fld3079 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1443, i32 0, i32 1
  %arrayidx3080 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3079, i32 0, i64 0
  %rtint3081 = bitcast %union.rtunion_def* %arrayidx3080 to i32*
  %1444 = load i32, i32* %rtint3081, align 4
  %1445 = load i32, i32* @max_uid_cuid, align 4
  %cmp3082 = icmp sgt i32 %1444, %1445
  br i1 %cmp3082, label %cond.true.3084, label %cond.false.3086

cond.true.3084:                                   ; preds = %cond.true.3078
  %1446 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %call3085 = call i32 @insn_cuid(%struct.rtx_def* %1446)
  br label %cond.end.3092

cond.false.3086:                                  ; preds = %cond.true.3078
  %1447 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %fld3087 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1447, i32 0, i32 1
  %arrayidx3088 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3087, i32 0, i64 0
  %rtint3089 = bitcast %union.rtunion_def* %arrayidx3088 to i32*
  %1448 = load i32, i32* %rtint3089, align 4
  %idxprom3090 = sext i32 %1448 to i64
  %1449 = load i32*, i32** @uid_cuid, align 8
  %arrayidx3091 = getelementptr inbounds i32, i32* %1449, i64 %idxprom3090
  %1450 = load i32, i32* %arrayidx3091, align 4
  br label %cond.end.3092

cond.end.3092:                                    ; preds = %cond.false.3086, %cond.true.3084
  %cond3093 = phi i32 [ %call3085, %cond.true.3084 ], [ %1450, %cond.false.3086 ]
  br label %cond.end.3110

cond.false.3094:                                  ; preds = %if.else.3076
  %1451 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld3095 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1451, i32 0, i32 1
  %arrayidx3096 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3095, i32 0, i64 0
  %rtint3097 = bitcast %union.rtunion_def* %arrayidx3096 to i32*
  %1452 = load i32, i32* %rtint3097, align 4
  %1453 = load i32, i32* @max_uid_cuid, align 4
  %cmp3098 = icmp sgt i32 %1452, %1453
  br i1 %cmp3098, label %cond.true.3100, label %cond.false.3102

cond.true.3100:                                   ; preds = %cond.false.3094
  %1454 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call3101 = call i32 @insn_cuid(%struct.rtx_def* %1454)
  br label %cond.end.3108

cond.false.3102:                                  ; preds = %cond.false.3094
  %1455 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld3103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1455, i32 0, i32 1
  %arrayidx3104 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3103, i32 0, i64 0
  %rtint3105 = bitcast %union.rtunion_def* %arrayidx3104 to i32*
  %1456 = load i32, i32* %rtint3105, align 4
  %idxprom3106 = sext i32 %1456 to i64
  %1457 = load i32*, i32** @uid_cuid, align 8
  %arrayidx3107 = getelementptr inbounds i32, i32* %1457, i64 %idxprom3106
  %1458 = load i32, i32* %arrayidx3107, align 4
  br label %cond.end.3108

cond.end.3108:                                    ; preds = %cond.false.3102, %cond.true.3100
  %cond3109 = phi i32 [ %call3101, %cond.true.3100 ], [ %1458, %cond.false.3102 ]
  br label %cond.end.3110

cond.end.3110:                                    ; preds = %cond.end.3108, %cond.end.3092
  %cond3111 = phi i32 [ %cond3093, %cond.end.3092 ], [ %cond3109, %cond.end.3108 ]
  %1459 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  call void @move_deaths(%struct.rtx_def* %1441, %struct.rtx_def* null, i32 %cond3111, %struct.rtx_def* %1459, %struct.rtx_def** %midnotes)
  br label %if.end.3112

if.end.3112:                                      ; preds = %cond.end.3110, %cond.end.3074
  %1460 = load %struct.rtx_def*, %struct.rtx_def** %i3notes, align 8
  %tobool3113 = icmp ne %struct.rtx_def* %1460, null
  br i1 %tobool3113, label %if.then.3114, label %if.end.3120

if.then.3114:                                     ; preds = %if.end.3112
  %1461 = load %struct.rtx_def*, %struct.rtx_def** %i3notes, align 8
  %1462 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %1463 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %1464 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %tobool3115 = icmp ne %struct.rtx_def* %1464, null
  br i1 %tobool3115, label %cond.true.3116, label %cond.false.3117

cond.true.3116:                                   ; preds = %if.then.3114
  %1465 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  br label %cond.end.3118

cond.false.3117:                                  ; preds = %if.then.3114
  br label %cond.end.3118

cond.end.3118:                                    ; preds = %cond.false.3117, %cond.true.3116
  %cond3119 = phi %struct.rtx_def* [ %1465, %cond.true.3116 ], [ null, %cond.false.3117 ]
  %1466 = load %struct.rtx_def*, %struct.rtx_def** %elim_i2, align 8
  %1467 = load %struct.rtx_def*, %struct.rtx_def** %elim_i1, align 8
  call void @distribute_notes(%struct.rtx_def* %1461, %struct.rtx_def* %1462, %struct.rtx_def* %1463, %struct.rtx_def* %cond3119, %struct.rtx_def* %1466, %struct.rtx_def* %1467)
  br label %if.end.3120

if.end.3120:                                      ; preds = %cond.end.3118, %if.end.3112
  %1468 = load %struct.rtx_def*, %struct.rtx_def** %i2notes, align 8
  %tobool3121 = icmp ne %struct.rtx_def* %1468, null
  br i1 %tobool3121, label %if.then.3122, label %if.end.3128

if.then.3122:                                     ; preds = %if.end.3120
  %1469 = load %struct.rtx_def*, %struct.rtx_def** %i2notes, align 8
  %1470 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %1471 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %1472 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %tobool3123 = icmp ne %struct.rtx_def* %1472, null
  br i1 %tobool3123, label %cond.true.3124, label %cond.false.3125

cond.true.3124:                                   ; preds = %if.then.3122
  %1473 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  br label %cond.end.3126

cond.false.3125:                                  ; preds = %if.then.3122
  br label %cond.end.3126

cond.end.3126:                                    ; preds = %cond.false.3125, %cond.true.3124
  %cond3127 = phi %struct.rtx_def* [ %1473, %cond.true.3124 ], [ null, %cond.false.3125 ]
  %1474 = load %struct.rtx_def*, %struct.rtx_def** %elim_i2, align 8
  %1475 = load %struct.rtx_def*, %struct.rtx_def** %elim_i1, align 8
  call void @distribute_notes(%struct.rtx_def* %1469, %struct.rtx_def* %1470, %struct.rtx_def* %1471, %struct.rtx_def* %cond3127, %struct.rtx_def* %1474, %struct.rtx_def* %1475)
  br label %if.end.3128

if.end.3128:                                      ; preds = %cond.end.3126, %if.end.3120
  %1476 = load %struct.rtx_def*, %struct.rtx_def** %i1notes, align 8
  %tobool3129 = icmp ne %struct.rtx_def* %1476, null
  br i1 %tobool3129, label %if.then.3130, label %if.end.3136

if.then.3130:                                     ; preds = %if.end.3128
  %1477 = load %struct.rtx_def*, %struct.rtx_def** %i1notes, align 8
  %1478 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %1479 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %1480 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %tobool3131 = icmp ne %struct.rtx_def* %1480, null
  br i1 %tobool3131, label %cond.true.3132, label %cond.false.3133

cond.true.3132:                                   ; preds = %if.then.3130
  %1481 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  br label %cond.end.3134

cond.false.3133:                                  ; preds = %if.then.3130
  br label %cond.end.3134

cond.end.3134:                                    ; preds = %cond.false.3133, %cond.true.3132
  %cond3135 = phi %struct.rtx_def* [ %1481, %cond.true.3132 ], [ null, %cond.false.3133 ]
  %1482 = load %struct.rtx_def*, %struct.rtx_def** %elim_i2, align 8
  %1483 = load %struct.rtx_def*, %struct.rtx_def** %elim_i1, align 8
  call void @distribute_notes(%struct.rtx_def* %1477, %struct.rtx_def* %1478, %struct.rtx_def* %1479, %struct.rtx_def* %cond3135, %struct.rtx_def* %1482, %struct.rtx_def* %1483)
  br label %if.end.3136

if.end.3136:                                      ; preds = %cond.end.3134, %if.end.3128
  %1484 = load %struct.rtx_def*, %struct.rtx_def** %midnotes, align 8
  %tobool3137 = icmp ne %struct.rtx_def* %1484, null
  br i1 %tobool3137, label %if.then.3138, label %if.end.3144

if.then.3138:                                     ; preds = %if.end.3136
  %1485 = load %struct.rtx_def*, %struct.rtx_def** %midnotes, align 8
  %1486 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %1487 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %tobool3139 = icmp ne %struct.rtx_def* %1487, null
  br i1 %tobool3139, label %cond.true.3140, label %cond.false.3141

cond.true.3140:                                   ; preds = %if.then.3138
  %1488 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  br label %cond.end.3142

cond.false.3141:                                  ; preds = %if.then.3138
  br label %cond.end.3142

cond.end.3142:                                    ; preds = %cond.false.3141, %cond.true.3140
  %cond3143 = phi %struct.rtx_def* [ %1488, %cond.true.3140 ], [ null, %cond.false.3141 ]
  %1489 = load %struct.rtx_def*, %struct.rtx_def** %elim_i2, align 8
  %1490 = load %struct.rtx_def*, %struct.rtx_def** %elim_i1, align 8
  call void @distribute_notes(%struct.rtx_def* %1485, %struct.rtx_def* null, %struct.rtx_def* %1486, %struct.rtx_def* %cond3143, %struct.rtx_def* %1489, %struct.rtx_def* %1490)
  br label %if.end.3144

if.end.3144:                                      ; preds = %cond.end.3142, %if.end.3136
  %1491 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %tobool3145 = icmp ne %struct.rtx_def* %1491, null
  br i1 %tobool3145, label %land.lhs.true.3146, label %if.end.3178

land.lhs.true.3146:                               ; preds = %if.end.3144
  %1492 = load %struct.rtx_def*, %struct.rtx_def** %new_i2_notes, align 8
  %tobool3147 = icmp ne %struct.rtx_def* %1492, null
  br i1 %tobool3147, label %if.then.3148, label %if.end.3178

if.then.3148:                                     ; preds = %land.lhs.true.3146
  %1493 = load %struct.rtx_def*, %struct.rtx_def** %new_i2_notes, align 8
  store %struct.rtx_def* %1493, %struct.rtx_def** %temp, align 8
  br label %for.cond.3149

for.cond.3149:                                    ; preds = %for.inc.3173, %if.then.3148
  %1494 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %tobool3150 = icmp ne %struct.rtx_def* %1494, null
  br i1 %tobool3150, label %for.body.3151, label %for.end.3177

for.body.3151:                                    ; preds = %for.cond.3149
  %1495 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld3152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1495, i32 0, i32 1
  %arrayidx3153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3152, i32 0, i64 0
  %rtx3154 = bitcast %union.rtunion_def* %arrayidx3153 to %struct.rtx_def**
  %1496 = load %struct.rtx_def*, %struct.rtx_def** %rtx3154, align 8
  %1497 = bitcast %struct.rtx_def* %1496 to i32*
  %bf.load3155 = load i32, i32* %1497, align 8
  %bf.clear3156 = and i32 %bf.load3155, 65535
  %cmp3157 = icmp eq i32 %bf.clear3156, 61
  br i1 %cmp3157, label %if.then.3159, label %if.end.3172

if.then.3159:                                     ; preds = %for.body.3151
  %1498 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld3160 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1498, i32 0, i32 1
  %arrayidx3161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3160, i32 0, i64 0
  %rtx3162 = bitcast %union.rtunion_def* %arrayidx3161 to %struct.rtx_def**
  %1499 = load %struct.rtx_def*, %struct.rtx_def** %rtx3162, align 8
  %fld3163 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1499, i32 0, i32 1
  %arrayidx3164 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3163, i32 0, i64 0
  %rtuint3165 = bitcast %union.rtunion_def* %arrayidx3164 to i32*
  %1500 = load i32, i32* %rtuint3165, align 4
  %idxprom3166 = zext i32 %1500 to i64
  %1501 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data3167 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %1501, i32 0, i32 4
  %reg3168 = bitcast %union.varray_data_tag* %data3167 to [1 x %struct.reg_info_def*]*
  %arrayidx3169 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg3168, i32 0, i64 %idxprom3166
  %1502 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx3169, align 8
  %deaths3170 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %1502, i32 0, i32 6
  %1503 = load i32, i32* %deaths3170, align 4
  %inc3171 = add nsw i32 %1503, 1
  store i32 %inc3171, i32* %deaths3170, align 4
  br label %if.end.3172

if.end.3172:                                      ; preds = %if.then.3159, %for.body.3151
  br label %for.inc.3173

for.inc.3173:                                     ; preds = %if.end.3172
  %1504 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld3174 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1504, i32 0, i32 1
  %arrayidx3175 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3174, i32 0, i64 1
  %rtx3176 = bitcast %union.rtunion_def* %arrayidx3175 to %struct.rtx_def**
  %1505 = load %struct.rtx_def*, %struct.rtx_def** %rtx3176, align 8
  store %struct.rtx_def* %1505, %struct.rtx_def** %temp, align 8
  br label %for.cond.3149

for.end.3177:                                     ; preds = %for.cond.3149
  %1506 = load %struct.rtx_def*, %struct.rtx_def** %new_i2_notes, align 8
  %1507 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %1508 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  call void @distribute_notes(%struct.rtx_def* %1506, %struct.rtx_def* %1507, %struct.rtx_def* %1508, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* null)
  br label %if.end.3178

if.end.3178:                                      ; preds = %for.end.3177, %land.lhs.true.3146, %if.end.3144
  %1509 = load %struct.rtx_def*, %struct.rtx_def** %new_i3_notes, align 8
  %tobool3179 = icmp ne %struct.rtx_def* %1509, null
  br i1 %tobool3179, label %if.then.3180, label %if.end.3210

if.then.3180:                                     ; preds = %if.end.3178
  %1510 = load %struct.rtx_def*, %struct.rtx_def** %new_i3_notes, align 8
  store %struct.rtx_def* %1510, %struct.rtx_def** %temp, align 8
  br label %for.cond.3181

for.cond.3181:                                    ; preds = %for.inc.3205, %if.then.3180
  %1511 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %tobool3182 = icmp ne %struct.rtx_def* %1511, null
  br i1 %tobool3182, label %for.body.3183, label %for.end.3209

for.body.3183:                                    ; preds = %for.cond.3181
  %1512 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld3184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1512, i32 0, i32 1
  %arrayidx3185 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3184, i32 0, i64 0
  %rtx3186 = bitcast %union.rtunion_def* %arrayidx3185 to %struct.rtx_def**
  %1513 = load %struct.rtx_def*, %struct.rtx_def** %rtx3186, align 8
  %1514 = bitcast %struct.rtx_def* %1513 to i32*
  %bf.load3187 = load i32, i32* %1514, align 8
  %bf.clear3188 = and i32 %bf.load3187, 65535
  %cmp3189 = icmp eq i32 %bf.clear3188, 61
  br i1 %cmp3189, label %if.then.3191, label %if.end.3204

if.then.3191:                                     ; preds = %for.body.3183
  %1515 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld3192 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1515, i32 0, i32 1
  %arrayidx3193 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3192, i32 0, i64 0
  %rtx3194 = bitcast %union.rtunion_def* %arrayidx3193 to %struct.rtx_def**
  %1516 = load %struct.rtx_def*, %struct.rtx_def** %rtx3194, align 8
  %fld3195 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1516, i32 0, i32 1
  %arrayidx3196 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3195, i32 0, i64 0
  %rtuint3197 = bitcast %union.rtunion_def* %arrayidx3196 to i32*
  %1517 = load i32, i32* %rtuint3197, align 4
  %idxprom3198 = zext i32 %1517 to i64
  %1518 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data3199 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %1518, i32 0, i32 4
  %reg3200 = bitcast %union.varray_data_tag* %data3199 to [1 x %struct.reg_info_def*]*
  %arrayidx3201 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg3200, i32 0, i64 %idxprom3198
  %1519 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx3201, align 8
  %deaths3202 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %1519, i32 0, i32 6
  %1520 = load i32, i32* %deaths3202, align 4
  %inc3203 = add nsw i32 %1520, 1
  store i32 %inc3203, i32* %deaths3202, align 4
  br label %if.end.3204

if.end.3204:                                      ; preds = %if.then.3191, %for.body.3183
  br label %for.inc.3205

for.inc.3205:                                     ; preds = %if.end.3204
  %1521 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld3206 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1521, i32 0, i32 1
  %arrayidx3207 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3206, i32 0, i64 1
  %rtx3208 = bitcast %union.rtunion_def* %arrayidx3207 to %struct.rtx_def**
  %1522 = load %struct.rtx_def*, %struct.rtx_def** %rtx3208, align 8
  store %struct.rtx_def* %1522, %struct.rtx_def** %temp, align 8
  br label %for.cond.3181

for.end.3209:                                     ; preds = %for.cond.3181
  %1523 = load %struct.rtx_def*, %struct.rtx_def** %new_i3_notes, align 8
  %1524 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %1525 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  call void @distribute_notes(%struct.rtx_def* %1523, %struct.rtx_def* %1524, %struct.rtx_def* %1525, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* null)
  br label %if.end.3210

if.end.3210:                                      ; preds = %for.end.3209, %if.end.3178
  %1526 = load %struct.rtx_def*, %struct.rtx_def** %i3dest_killed, align 8
  %tobool3211 = icmp ne %struct.rtx_def* %1526, null
  br i1 %tobool3211, label %if.then.3212, label %if.end.3242

if.then.3212:                                     ; preds = %if.end.3210
  %1527 = load %struct.rtx_def*, %struct.rtx_def** %i3dest_killed, align 8
  %1528 = bitcast %struct.rtx_def* %1527 to i32*
  %bf.load3213 = load i32, i32* %1528, align 8
  %bf.clear3214 = and i32 %bf.load3213, 65535
  %cmp3215 = icmp eq i32 %bf.clear3214, 61
  br i1 %cmp3215, label %if.then.3217, label %if.end.3227

if.then.3217:                                     ; preds = %if.then.3212
  %1529 = load %struct.rtx_def*, %struct.rtx_def** %i3dest_killed, align 8
  %fld3218 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1529, i32 0, i32 1
  %arrayidx3219 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3218, i32 0, i64 0
  %rtuint3220 = bitcast %union.rtunion_def* %arrayidx3219 to i32*
  %1530 = load i32, i32* %rtuint3220, align 4
  %idxprom3221 = zext i32 %1530 to i64
  %1531 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data3222 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %1531, i32 0, i32 4
  %reg3223 = bitcast %union.varray_data_tag* %data3222 to [1 x %struct.reg_info_def*]*
  %arrayidx3224 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg3223, i32 0, i64 %idxprom3221
  %1532 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx3224, align 8
  %deaths3225 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %1532, i32 0, i32 6
  %1533 = load i32, i32* %deaths3225, align 4
  %inc3226 = add nsw i32 %1533, 1
  store i32 %inc3226, i32* %deaths3225, align 4
  br label %if.end.3227

if.end.3227:                                      ; preds = %if.then.3217, %if.then.3212
  %1534 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %tobool3228 = icmp ne %struct.rtx_def* %1534, null
  br i1 %tobool3228, label %land.lhs.true.3229, label %if.else.3234

land.lhs.true.3229:                               ; preds = %if.end.3227
  %1535 = load %struct.rtx_def*, %struct.rtx_def** %i3dest_killed, align 8
  %1536 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %call3230 = call i32 @reg_set_p(%struct.rtx_def* %1535, %struct.rtx_def* %1536)
  %tobool3231 = icmp ne i32 %call3230, 0
  br i1 %tobool3231, label %if.then.3232, label %if.else.3234

if.then.3232:                                     ; preds = %land.lhs.true.3229
  %1537 = load %struct.rtx_def*, %struct.rtx_def** %i3dest_killed, align 8
  %call3233 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 1, %struct.rtx_def* %1537, %struct.rtx_def* null)
  %1538 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %1539 = load %struct.rtx_def*, %struct.rtx_def** %elim_i2, align 8
  %1540 = load %struct.rtx_def*, %struct.rtx_def** %elim_i1, align 8
  call void @distribute_notes(%struct.rtx_def* %call3233, %struct.rtx_def* null, %struct.rtx_def* %1538, %struct.rtx_def* null, %struct.rtx_def* %1539, %struct.rtx_def* %1540)
  br label %if.end.3241

if.else.3234:                                     ; preds = %land.lhs.true.3229, %if.end.3227
  %1541 = load %struct.rtx_def*, %struct.rtx_def** %i3dest_killed, align 8
  %call3235 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 1, %struct.rtx_def* %1541, %struct.rtx_def* null)
  %1542 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %1543 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %tobool3236 = icmp ne %struct.rtx_def* %1543, null
  br i1 %tobool3236, label %cond.true.3237, label %cond.false.3238

cond.true.3237:                                   ; preds = %if.else.3234
  %1544 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  br label %cond.end.3239

cond.false.3238:                                  ; preds = %if.else.3234
  br label %cond.end.3239

cond.end.3239:                                    ; preds = %cond.false.3238, %cond.true.3237
  %cond3240 = phi %struct.rtx_def* [ %1544, %cond.true.3237 ], [ null, %cond.false.3238 ]
  %1545 = load %struct.rtx_def*, %struct.rtx_def** %elim_i2, align 8
  %1546 = load %struct.rtx_def*, %struct.rtx_def** %elim_i1, align 8
  call void @distribute_notes(%struct.rtx_def* %call3235, %struct.rtx_def* null, %struct.rtx_def* %1542, %struct.rtx_def* %cond3240, %struct.rtx_def* %1545, %struct.rtx_def* %1546)
  br label %if.end.3241

if.end.3241:                                      ; preds = %cond.end.3239, %if.then.3232
  br label %if.end.3242

if.end.3242:                                      ; preds = %if.end.3241, %if.end.3210
  %1547 = load i32, i32* %i2dest_in_i2src, align 4
  %tobool3243 = icmp ne i32 %1547, 0
  br i1 %tobool3243, label %if.then.3244, label %if.end.3274

if.then.3244:                                     ; preds = %if.end.3242
  %1548 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %1549 = bitcast %struct.rtx_def* %1548 to i32*
  %bf.load3245 = load i32, i32* %1549, align 8
  %bf.clear3246 = and i32 %bf.load3245, 65535
  %cmp3247 = icmp eq i32 %bf.clear3246, 61
  br i1 %cmp3247, label %if.then.3249, label %if.end.3259

if.then.3249:                                     ; preds = %if.then.3244
  %1550 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %fld3250 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1550, i32 0, i32 1
  %arrayidx3251 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3250, i32 0, i64 0
  %rtuint3252 = bitcast %union.rtunion_def* %arrayidx3251 to i32*
  %1551 = load i32, i32* %rtuint3252, align 4
  %idxprom3253 = zext i32 %1551 to i64
  %1552 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data3254 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %1552, i32 0, i32 4
  %reg3255 = bitcast %union.varray_data_tag* %data3254 to [1 x %struct.reg_info_def*]*
  %arrayidx3256 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg3255, i32 0, i64 %idxprom3253
  %1553 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx3256, align 8
  %deaths3257 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %1553, i32 0, i32 6
  %1554 = load i32, i32* %deaths3257, align 4
  %inc3258 = add nsw i32 %1554, 1
  store i32 %inc3258, i32* %deaths3257, align 4
  br label %if.end.3259

if.end.3259:                                      ; preds = %if.then.3249, %if.then.3244
  %1555 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %tobool3260 = icmp ne %struct.rtx_def* %1555, null
  br i1 %tobool3260, label %land.lhs.true.3261, label %if.else.3266

land.lhs.true.3261:                               ; preds = %if.end.3259
  %1556 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %1557 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %call3262 = call i32 @reg_set_p(%struct.rtx_def* %1556, %struct.rtx_def* %1557)
  %tobool3263 = icmp ne i32 %call3262, 0
  br i1 %tobool3263, label %if.then.3264, label %if.else.3266

if.then.3264:                                     ; preds = %land.lhs.true.3261
  %1558 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %call3265 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 1, %struct.rtx_def* %1558, %struct.rtx_def* null)
  %1559 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  call void @distribute_notes(%struct.rtx_def* %call3265, %struct.rtx_def* null, %struct.rtx_def* %1559, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* null)
  br label %if.end.3273

if.else.3266:                                     ; preds = %land.lhs.true.3261, %if.end.3259
  %1560 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %call3267 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 1, %struct.rtx_def* %1560, %struct.rtx_def* null)
  %1561 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %1562 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %tobool3268 = icmp ne %struct.rtx_def* %1562, null
  br i1 %tobool3268, label %cond.true.3269, label %cond.false.3270

cond.true.3269:                                   ; preds = %if.else.3266
  %1563 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  br label %cond.end.3271

cond.false.3270:                                  ; preds = %if.else.3266
  br label %cond.end.3271

cond.end.3271:                                    ; preds = %cond.false.3270, %cond.true.3269
  %cond3272 = phi %struct.rtx_def* [ %1563, %cond.true.3269 ], [ null, %cond.false.3270 ]
  call void @distribute_notes(%struct.rtx_def* %call3267, %struct.rtx_def* null, %struct.rtx_def* %1561, %struct.rtx_def* %cond3272, %struct.rtx_def* null, %struct.rtx_def* null)
  br label %if.end.3273

if.end.3273:                                      ; preds = %cond.end.3271, %if.then.3264
  br label %if.end.3274

if.end.3274:                                      ; preds = %if.end.3273, %if.end.3242
  %1564 = load i32, i32* %i1dest_in_i1src, align 4
  %tobool3275 = icmp ne i32 %1564, 0
  br i1 %tobool3275, label %if.then.3276, label %if.end.3306

if.then.3276:                                     ; preds = %if.end.3274
  %1565 = load %struct.rtx_def*, %struct.rtx_def** %i1dest, align 8
  %1566 = bitcast %struct.rtx_def* %1565 to i32*
  %bf.load3277 = load i32, i32* %1566, align 8
  %bf.clear3278 = and i32 %bf.load3277, 65535
  %cmp3279 = icmp eq i32 %bf.clear3278, 61
  br i1 %cmp3279, label %if.then.3281, label %if.end.3291

if.then.3281:                                     ; preds = %if.then.3276
  %1567 = load %struct.rtx_def*, %struct.rtx_def** %i1dest, align 8
  %fld3282 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1567, i32 0, i32 1
  %arrayidx3283 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3282, i32 0, i64 0
  %rtuint3284 = bitcast %union.rtunion_def* %arrayidx3283 to i32*
  %1568 = load i32, i32* %rtuint3284, align 4
  %idxprom3285 = zext i32 %1568 to i64
  %1569 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data3286 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %1569, i32 0, i32 4
  %reg3287 = bitcast %union.varray_data_tag* %data3286 to [1 x %struct.reg_info_def*]*
  %arrayidx3288 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg3287, i32 0, i64 %idxprom3285
  %1570 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx3288, align 8
  %deaths3289 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %1570, i32 0, i32 6
  %1571 = load i32, i32* %deaths3289, align 4
  %inc3290 = add nsw i32 %1571, 1
  store i32 %inc3290, i32* %deaths3289, align 4
  br label %if.end.3291

if.end.3291:                                      ; preds = %if.then.3281, %if.then.3276
  %1572 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %tobool3292 = icmp ne %struct.rtx_def* %1572, null
  br i1 %tobool3292, label %land.lhs.true.3293, label %if.else.3298

land.lhs.true.3293:                               ; preds = %if.end.3291
  %1573 = load %struct.rtx_def*, %struct.rtx_def** %i1dest, align 8
  %1574 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %call3294 = call i32 @reg_set_p(%struct.rtx_def* %1573, %struct.rtx_def* %1574)
  %tobool3295 = icmp ne i32 %call3294, 0
  br i1 %tobool3295, label %if.then.3296, label %if.else.3298

if.then.3296:                                     ; preds = %land.lhs.true.3293
  %1575 = load %struct.rtx_def*, %struct.rtx_def** %i1dest, align 8
  %call3297 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 1, %struct.rtx_def* %1575, %struct.rtx_def* null)
  %1576 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  call void @distribute_notes(%struct.rtx_def* %call3297, %struct.rtx_def* null, %struct.rtx_def* %1576, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* null)
  br label %if.end.3305

if.else.3298:                                     ; preds = %land.lhs.true.3293, %if.end.3291
  %1577 = load %struct.rtx_def*, %struct.rtx_def** %i1dest, align 8
  %call3299 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 1, %struct.rtx_def* %1577, %struct.rtx_def* null)
  %1578 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %1579 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %tobool3300 = icmp ne %struct.rtx_def* %1579, null
  br i1 %tobool3300, label %cond.true.3301, label %cond.false.3302

cond.true.3301:                                   ; preds = %if.else.3298
  %1580 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  br label %cond.end.3303

cond.false.3302:                                  ; preds = %if.else.3298
  br label %cond.end.3303

cond.end.3303:                                    ; preds = %cond.false.3302, %cond.true.3301
  %cond3304 = phi %struct.rtx_def* [ %1580, %cond.true.3301 ], [ null, %cond.false.3302 ]
  call void @distribute_notes(%struct.rtx_def* %call3299, %struct.rtx_def* null, %struct.rtx_def* %1578, %struct.rtx_def* %cond3304, %struct.rtx_def* null, %struct.rtx_def* null)
  br label %if.end.3305

if.end.3305:                                      ; preds = %cond.end.3303, %if.then.3296
  br label %if.end.3306

if.end.3306:                                      ; preds = %if.end.3305, %if.end.3274
  %1581 = load %struct.rtx_def*, %struct.rtx_def** %i3links, align 8
  call void @distribute_links(%struct.rtx_def* %1581)
  %1582 = load %struct.rtx_def*, %struct.rtx_def** %i2links, align 8
  call void @distribute_links(%struct.rtx_def* %1582)
  %1583 = load %struct.rtx_def*, %struct.rtx_def** %i1links, align 8
  call void @distribute_links(%struct.rtx_def* %1583)
  %1584 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %1585 = bitcast %struct.rtx_def* %1584 to i32*
  %bf.load3307 = load i32, i32* %1585, align 8
  %bf.clear3308 = and i32 %bf.load3307, 65535
  %cmp3309 = icmp eq i32 %bf.clear3308, 61
  br i1 %cmp3309, label %if.then.3311, label %if.end.3404

if.then.3311:                                     ; preds = %if.end.3306
  store %struct.rtx_def* null, %struct.rtx_def** %i2_insn, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %i2_val, align 8
  %1586 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld3313 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1586, i32 0, i32 1
  %arrayidx3314 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3313, i32 0, i64 5
  %rtx3315 = bitcast %union.rtunion_def* %arrayidx3314 to %struct.rtx_def**
  %1587 = load %struct.rtx_def*, %struct.rtx_def** %rtx3315, align 8
  store %struct.rtx_def* %1587, %struct.rtx_def** %link3312, align 8
  br label %for.cond.3316

for.cond.3316:                                    ; preds = %for.inc.3379, %if.then.3311
  %1588 = load %struct.rtx_def*, %struct.rtx_def** %link3312, align 8
  %tobool3317 = icmp ne %struct.rtx_def* %1588, null
  br i1 %tobool3317, label %for.body.3318, label %for.end.3383

for.body.3318:                                    ; preds = %for.cond.3316
  %1589 = load %struct.rtx_def*, %struct.rtx_def** %link3312, align 8
  %fld3319 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1589, i32 0, i32 1
  %arrayidx3320 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3319, i32 0, i64 0
  %rtx3321 = bitcast %union.rtunion_def* %arrayidx3320 to %struct.rtx_def**
  %1590 = load %struct.rtx_def*, %struct.rtx_def** %rtx3321, align 8
  %1591 = bitcast %struct.rtx_def* %1590 to i32*
  %bf.load3322 = load i32, i32* %1591, align 8
  %bf.clear3323 = and i32 %bf.load3322, 65535
  %idxprom3324 = sext i32 %bf.clear3323 to i64
  %arrayidx3325 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom3324
  %1592 = load i8, i8* %arrayidx3325, align 1
  %conv3326 = sext i8 %1592 to i32
  %cmp3327 = icmp eq i32 %conv3326, 105
  br i1 %cmp3327, label %cond.true.3329, label %cond.false.3360

cond.true.3329:                                   ; preds = %for.body.3318
  %1593 = load %struct.rtx_def*, %struct.rtx_def** %link3312, align 8
  %fld3330 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1593, i32 0, i32 1
  %arrayidx3331 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3330, i32 0, i64 0
  %rtx3332 = bitcast %union.rtunion_def* %arrayidx3331 to %struct.rtx_def**
  %1594 = load %struct.rtx_def*, %struct.rtx_def** %rtx3332, align 8
  %fld3333 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1594, i32 0, i32 1
  %arrayidx3334 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3333, i32 0, i64 3
  %rtx3335 = bitcast %union.rtunion_def* %arrayidx3334 to %struct.rtx_def**
  %1595 = load %struct.rtx_def*, %struct.rtx_def** %rtx3335, align 8
  %1596 = bitcast %struct.rtx_def* %1595 to i32*
  %bf.load3336 = load i32, i32* %1596, align 8
  %bf.clear3337 = and i32 %bf.load3336, 65535
  %cmp3338 = icmp eq i32 %bf.clear3337, 47
  br i1 %cmp3338, label %cond.true.3340, label %cond.false.3347

cond.true.3340:                                   ; preds = %cond.true.3329
  %1597 = load %struct.rtx_def*, %struct.rtx_def** %link3312, align 8
  %fld3341 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1597, i32 0, i32 1
  %arrayidx3342 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3341, i32 0, i64 0
  %rtx3343 = bitcast %union.rtunion_def* %arrayidx3342 to %struct.rtx_def**
  %1598 = load %struct.rtx_def*, %struct.rtx_def** %rtx3343, align 8
  %fld3344 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1598, i32 0, i32 1
  %arrayidx3345 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3344, i32 0, i64 3
  %rtx3346 = bitcast %union.rtunion_def* %arrayidx3345 to %struct.rtx_def**
  %1599 = load %struct.rtx_def*, %struct.rtx_def** %rtx3346, align 8
  br label %cond.end.3358

cond.false.3347:                                  ; preds = %cond.true.3329
  %1600 = load %struct.rtx_def*, %struct.rtx_def** %link3312, align 8
  %fld3348 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1600, i32 0, i32 1
  %arrayidx3349 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3348, i32 0, i64 0
  %rtx3350 = bitcast %union.rtunion_def* %arrayidx3349 to %struct.rtx_def**
  %1601 = load %struct.rtx_def*, %struct.rtx_def** %rtx3350, align 8
  %1602 = load %struct.rtx_def*, %struct.rtx_def** %link3312, align 8
  %fld3351 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1602, i32 0, i32 1
  %arrayidx3352 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3351, i32 0, i64 0
  %rtx3353 = bitcast %union.rtunion_def* %arrayidx3352 to %struct.rtx_def**
  %1603 = load %struct.rtx_def*, %struct.rtx_def** %rtx3353, align 8
  %fld3354 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1603, i32 0, i32 1
  %arrayidx3355 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3354, i32 0, i64 3
  %rtx3356 = bitcast %union.rtunion_def* %arrayidx3355 to %struct.rtx_def**
  %1604 = load %struct.rtx_def*, %struct.rtx_def** %rtx3356, align 8
  %call3357 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %1601, %struct.rtx_def* %1604)
  br label %cond.end.3358

cond.end.3358:                                    ; preds = %cond.false.3347, %cond.true.3340
  %cond3359 = phi %struct.rtx_def* [ %1599, %cond.true.3340 ], [ %call3357, %cond.false.3347 ]
  br label %cond.end.3361

cond.false.3360:                                  ; preds = %for.body.3318
  br label %cond.end.3361

cond.end.3361:                                    ; preds = %cond.false.3360, %cond.end.3358
  %cond3362 = phi %struct.rtx_def* [ %cond3359, %cond.end.3358 ], [ null, %cond.false.3360 ]
  store %struct.rtx_def* %cond3362, %struct.rtx_def** %set, align 8
  %cmp3363 = icmp ne %struct.rtx_def* %cond3362, null
  br i1 %cmp3363, label %land.lhs.true.3365, label %if.end.3378

land.lhs.true.3365:                               ; preds = %cond.end.3361
  %1605 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %1606 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld3366 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1606, i32 0, i32 1
  %arrayidx3367 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3366, i32 0, i64 0
  %rtx3368 = bitcast %union.rtunion_def* %arrayidx3367 to %struct.rtx_def**
  %1607 = load %struct.rtx_def*, %struct.rtx_def** %rtx3368, align 8
  %call3369 = call i32 @rtx_equal_p(%struct.rtx_def* %1605, %struct.rtx_def* %1607)
  %tobool3370 = icmp ne i32 %call3369, 0
  br i1 %tobool3370, label %if.then.3371, label %if.end.3378

if.then.3371:                                     ; preds = %land.lhs.true.3365
  %1608 = load %struct.rtx_def*, %struct.rtx_def** %link3312, align 8
  %fld3372 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1608, i32 0, i32 1
  %arrayidx3373 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3372, i32 0, i64 0
  %rtx3374 = bitcast %union.rtunion_def* %arrayidx3373 to %struct.rtx_def**
  %1609 = load %struct.rtx_def*, %struct.rtx_def** %rtx3374, align 8
  store %struct.rtx_def* %1609, %struct.rtx_def** %i2_insn, align 8
  %1610 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld3375 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1610, i32 0, i32 1
  %arrayidx3376 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3375, i32 0, i64 1
  %rtx3377 = bitcast %union.rtunion_def* %arrayidx3376 to %struct.rtx_def**
  %1611 = load %struct.rtx_def*, %struct.rtx_def** %rtx3377, align 8
  store %struct.rtx_def* %1611, %struct.rtx_def** %i2_val, align 8
  br label %if.end.3378

if.end.3378:                                      ; preds = %if.then.3371, %land.lhs.true.3365, %cond.end.3361
  br label %for.inc.3379

for.inc.3379:                                     ; preds = %if.end.3378
  %1612 = load %struct.rtx_def*, %struct.rtx_def** %link3312, align 8
  %fld3380 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1612, i32 0, i32 1
  %arrayidx3381 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3380, i32 0, i64 1
  %rtx3382 = bitcast %union.rtunion_def* %arrayidx3381 to %struct.rtx_def**
  %1613 = load %struct.rtx_def*, %struct.rtx_def** %rtx3382, align 8
  store %struct.rtx_def* %1613, %struct.rtx_def** %link3312, align 8
  br label %for.cond.3316

for.end.3383:                                     ; preds = %for.cond.3316
  %1614 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %1615 = load %struct.rtx_def*, %struct.rtx_def** %i2_insn, align 8
  %1616 = load %struct.rtx_def*, %struct.rtx_def** %i2_val, align 8
  call void @record_value_for_reg(%struct.rtx_def* %1614, %struct.rtx_def* %1615, %struct.rtx_def* %1616)
  %1617 = load i32, i32* %added_sets_2, align 4
  %tobool3384 = icmp ne i32 %1617, 0
  br i1 %tobool3384, label %if.end.3403, label %land.lhs.true.3385

land.lhs.true.3385:                               ; preds = %for.end.3383
  %1618 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %cmp3386 = icmp eq %struct.rtx_def* %1618, null
  br i1 %cmp3386, label %land.lhs.true.3391, label %lor.lhs.false.3388

lor.lhs.false.3388:                               ; preds = %land.lhs.true.3385
  %1619 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %1620 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %call3389 = call i32 @reg_mentioned_p(%struct.rtx_def* %1619, %struct.rtx_def* %1620)
  %tobool3390 = icmp ne i32 %call3389, 0
  br i1 %tobool3390, label %if.end.3403, label %land.lhs.true.3391

land.lhs.true.3391:                               ; preds = %lor.lhs.false.3388, %land.lhs.true.3385
  %1621 = load i32, i32* %i2dest_in_i2src, align 4
  %tobool3392 = icmp ne i32 %1621, 0
  br i1 %tobool3392, label %if.end.3403, label %if.then.3393

if.then.3393:                                     ; preds = %land.lhs.true.3391
  %1622 = load %struct.rtx_def*, %struct.rtx_def** %i2dest, align 8
  %fld3394 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1622, i32 0, i32 1
  %arrayidx3395 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3394, i32 0, i64 0
  %rtuint3396 = bitcast %union.rtunion_def* %arrayidx3395 to i32*
  %1623 = load i32, i32* %rtuint3396, align 4
  store i32 %1623, i32* %regno2738, align 4
  %1624 = load i32, i32* %regno2738, align 4
  %idxprom3397 = zext i32 %1624 to i64
  %1625 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data3398 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %1625, i32 0, i32 4
  %reg3399 = bitcast %union.varray_data_tag* %data3398 to [1 x %struct.reg_info_def*]*
  %arrayidx3400 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg3399, i32 0, i64 %idxprom3397
  %1626 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx3400, align 8
  %sets3401 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %1626, i32 0, i32 3
  %1627 = load i32, i32* %sets3401, align 4
  %dec3402 = add nsw i32 %1627, -1
  store i32 %dec3402, i32* %sets3401, align 4
  br label %if.end.3403

if.end.3403:                                      ; preds = %if.then.3393, %land.lhs.true.3391, %lor.lhs.false.3388, %for.end.3383
  br label %if.end.3404

if.end.3404:                                      ; preds = %if.end.3403, %if.end.3306
  %1628 = load %struct.rtx_def*, %struct.rtx_def** %i1.addr, align 8
  %tobool3405 = icmp ne %struct.rtx_def* %1628, null
  br i1 %tobool3405, label %land.lhs.true.3406, label %if.end.3499

land.lhs.true.3406:                               ; preds = %if.end.3404
  %1629 = load %struct.rtx_def*, %struct.rtx_def** %i1dest, align 8
  %1630 = bitcast %struct.rtx_def* %1629 to i32*
  %bf.load3407 = load i32, i32* %1630, align 8
  %bf.clear3408 = and i32 %bf.load3407, 65535
  %cmp3409 = icmp eq i32 %bf.clear3408, 61
  br i1 %cmp3409, label %if.then.3411, label %if.end.3499

if.then.3411:                                     ; preds = %land.lhs.true.3406
  store %struct.rtx_def* null, %struct.rtx_def** %i1_insn, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %i1_val, align 8
  %1631 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld3414 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1631, i32 0, i32 1
  %arrayidx3415 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3414, i32 0, i64 5
  %rtx3416 = bitcast %union.rtunion_def* %arrayidx3415 to %struct.rtx_def**
  %1632 = load %struct.rtx_def*, %struct.rtx_def** %rtx3416, align 8
  store %struct.rtx_def* %1632, %struct.rtx_def** %link3412, align 8
  br label %for.cond.3417

for.cond.3417:                                    ; preds = %for.inc.3480, %if.then.3411
  %1633 = load %struct.rtx_def*, %struct.rtx_def** %link3412, align 8
  %tobool3418 = icmp ne %struct.rtx_def* %1633, null
  br i1 %tobool3418, label %for.body.3419, label %for.end.3484

for.body.3419:                                    ; preds = %for.cond.3417
  %1634 = load %struct.rtx_def*, %struct.rtx_def** %link3412, align 8
  %fld3420 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1634, i32 0, i32 1
  %arrayidx3421 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3420, i32 0, i64 0
  %rtx3422 = bitcast %union.rtunion_def* %arrayidx3421 to %struct.rtx_def**
  %1635 = load %struct.rtx_def*, %struct.rtx_def** %rtx3422, align 8
  %1636 = bitcast %struct.rtx_def* %1635 to i32*
  %bf.load3423 = load i32, i32* %1636, align 8
  %bf.clear3424 = and i32 %bf.load3423, 65535
  %idxprom3425 = sext i32 %bf.clear3424 to i64
  %arrayidx3426 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom3425
  %1637 = load i8, i8* %arrayidx3426, align 1
  %conv3427 = sext i8 %1637 to i32
  %cmp3428 = icmp eq i32 %conv3427, 105
  br i1 %cmp3428, label %cond.true.3430, label %cond.false.3461

cond.true.3430:                                   ; preds = %for.body.3419
  %1638 = load %struct.rtx_def*, %struct.rtx_def** %link3412, align 8
  %fld3431 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1638, i32 0, i32 1
  %arrayidx3432 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3431, i32 0, i64 0
  %rtx3433 = bitcast %union.rtunion_def* %arrayidx3432 to %struct.rtx_def**
  %1639 = load %struct.rtx_def*, %struct.rtx_def** %rtx3433, align 8
  %fld3434 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1639, i32 0, i32 1
  %arrayidx3435 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3434, i32 0, i64 3
  %rtx3436 = bitcast %union.rtunion_def* %arrayidx3435 to %struct.rtx_def**
  %1640 = load %struct.rtx_def*, %struct.rtx_def** %rtx3436, align 8
  %1641 = bitcast %struct.rtx_def* %1640 to i32*
  %bf.load3437 = load i32, i32* %1641, align 8
  %bf.clear3438 = and i32 %bf.load3437, 65535
  %cmp3439 = icmp eq i32 %bf.clear3438, 47
  br i1 %cmp3439, label %cond.true.3441, label %cond.false.3448

cond.true.3441:                                   ; preds = %cond.true.3430
  %1642 = load %struct.rtx_def*, %struct.rtx_def** %link3412, align 8
  %fld3442 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1642, i32 0, i32 1
  %arrayidx3443 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3442, i32 0, i64 0
  %rtx3444 = bitcast %union.rtunion_def* %arrayidx3443 to %struct.rtx_def**
  %1643 = load %struct.rtx_def*, %struct.rtx_def** %rtx3444, align 8
  %fld3445 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1643, i32 0, i32 1
  %arrayidx3446 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3445, i32 0, i64 3
  %rtx3447 = bitcast %union.rtunion_def* %arrayidx3446 to %struct.rtx_def**
  %1644 = load %struct.rtx_def*, %struct.rtx_def** %rtx3447, align 8
  br label %cond.end.3459

cond.false.3448:                                  ; preds = %cond.true.3430
  %1645 = load %struct.rtx_def*, %struct.rtx_def** %link3412, align 8
  %fld3449 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1645, i32 0, i32 1
  %arrayidx3450 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3449, i32 0, i64 0
  %rtx3451 = bitcast %union.rtunion_def* %arrayidx3450 to %struct.rtx_def**
  %1646 = load %struct.rtx_def*, %struct.rtx_def** %rtx3451, align 8
  %1647 = load %struct.rtx_def*, %struct.rtx_def** %link3412, align 8
  %fld3452 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1647, i32 0, i32 1
  %arrayidx3453 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3452, i32 0, i64 0
  %rtx3454 = bitcast %union.rtunion_def* %arrayidx3453 to %struct.rtx_def**
  %1648 = load %struct.rtx_def*, %struct.rtx_def** %rtx3454, align 8
  %fld3455 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1648, i32 0, i32 1
  %arrayidx3456 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3455, i32 0, i64 3
  %rtx3457 = bitcast %union.rtunion_def* %arrayidx3456 to %struct.rtx_def**
  %1649 = load %struct.rtx_def*, %struct.rtx_def** %rtx3457, align 8
  %call3458 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %1646, %struct.rtx_def* %1649)
  br label %cond.end.3459

cond.end.3459:                                    ; preds = %cond.false.3448, %cond.true.3441
  %cond3460 = phi %struct.rtx_def* [ %1644, %cond.true.3441 ], [ %call3458, %cond.false.3448 ]
  br label %cond.end.3462

cond.false.3461:                                  ; preds = %for.body.3419
  br label %cond.end.3462

cond.end.3462:                                    ; preds = %cond.false.3461, %cond.end.3459
  %cond3463 = phi %struct.rtx_def* [ %cond3460, %cond.end.3459 ], [ null, %cond.false.3461 ]
  store %struct.rtx_def* %cond3463, %struct.rtx_def** %set3413, align 8
  %cmp3464 = icmp ne %struct.rtx_def* %cond3463, null
  br i1 %cmp3464, label %land.lhs.true.3466, label %if.end.3479

land.lhs.true.3466:                               ; preds = %cond.end.3462
  %1650 = load %struct.rtx_def*, %struct.rtx_def** %i1dest, align 8
  %1651 = load %struct.rtx_def*, %struct.rtx_def** %set3413, align 8
  %fld3467 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1651, i32 0, i32 1
  %arrayidx3468 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3467, i32 0, i64 0
  %rtx3469 = bitcast %union.rtunion_def* %arrayidx3468 to %struct.rtx_def**
  %1652 = load %struct.rtx_def*, %struct.rtx_def** %rtx3469, align 8
  %call3470 = call i32 @rtx_equal_p(%struct.rtx_def* %1650, %struct.rtx_def* %1652)
  %tobool3471 = icmp ne i32 %call3470, 0
  br i1 %tobool3471, label %if.then.3472, label %if.end.3479

if.then.3472:                                     ; preds = %land.lhs.true.3466
  %1653 = load %struct.rtx_def*, %struct.rtx_def** %link3412, align 8
  %fld3473 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1653, i32 0, i32 1
  %arrayidx3474 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3473, i32 0, i64 0
  %rtx3475 = bitcast %union.rtunion_def* %arrayidx3474 to %struct.rtx_def**
  %1654 = load %struct.rtx_def*, %struct.rtx_def** %rtx3475, align 8
  store %struct.rtx_def* %1654, %struct.rtx_def** %i1_insn, align 8
  %1655 = load %struct.rtx_def*, %struct.rtx_def** %set3413, align 8
  %fld3476 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1655, i32 0, i32 1
  %arrayidx3477 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3476, i32 0, i64 1
  %rtx3478 = bitcast %union.rtunion_def* %arrayidx3477 to %struct.rtx_def**
  %1656 = load %struct.rtx_def*, %struct.rtx_def** %rtx3478, align 8
  store %struct.rtx_def* %1656, %struct.rtx_def** %i1_val, align 8
  br label %if.end.3479

if.end.3479:                                      ; preds = %if.then.3472, %land.lhs.true.3466, %cond.end.3462
  br label %for.inc.3480

for.inc.3480:                                     ; preds = %if.end.3479
  %1657 = load %struct.rtx_def*, %struct.rtx_def** %link3412, align 8
  %fld3481 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1657, i32 0, i32 1
  %arrayidx3482 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3481, i32 0, i64 1
  %rtx3483 = bitcast %union.rtunion_def* %arrayidx3482 to %struct.rtx_def**
  %1658 = load %struct.rtx_def*, %struct.rtx_def** %rtx3483, align 8
  store %struct.rtx_def* %1658, %struct.rtx_def** %link3412, align 8
  br label %for.cond.3417

for.end.3484:                                     ; preds = %for.cond.3417
  %1659 = load %struct.rtx_def*, %struct.rtx_def** %i1dest, align 8
  %1660 = load %struct.rtx_def*, %struct.rtx_def** %i1_insn, align 8
  %1661 = load %struct.rtx_def*, %struct.rtx_def** %i1_val, align 8
  call void @record_value_for_reg(%struct.rtx_def* %1659, %struct.rtx_def* %1660, %struct.rtx_def* %1661)
  %1662 = load %struct.rtx_def*, %struct.rtx_def** %i1dest, align 8
  %fld3485 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1662, i32 0, i32 1
  %arrayidx3486 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3485, i32 0, i64 0
  %rtuint3487 = bitcast %union.rtunion_def* %arrayidx3486 to i32*
  %1663 = load i32, i32* %rtuint3487, align 4
  store i32 %1663, i32* %regno2738, align 4
  %1664 = load i32, i32* %added_sets_1, align 4
  %tobool3488 = icmp ne i32 %1664, 0
  br i1 %tobool3488, label %if.end.3498, label %land.lhs.true.3489

land.lhs.true.3489:                               ; preds = %for.end.3484
  %1665 = load i32, i32* %i1dest_in_i1src, align 4
  %tobool3490 = icmp ne i32 %1665, 0
  br i1 %tobool3490, label %if.end.3498, label %if.then.3491

if.then.3491:                                     ; preds = %land.lhs.true.3489
  %1666 = load i32, i32* %regno2738, align 4
  %idxprom3492 = zext i32 %1666 to i64
  %1667 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data3493 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %1667, i32 0, i32 4
  %reg3494 = bitcast %union.varray_data_tag* %data3493 to [1 x %struct.reg_info_def*]*
  %arrayidx3495 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg3494, i32 0, i64 %idxprom3492
  %1668 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx3495, align 8
  %sets3496 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %1668, i32 0, i32 3
  %1669 = load i32, i32* %sets3496, align 4
  %dec3497 = add nsw i32 %1669, -1
  store i32 %dec3497, i32* %sets3496, align 4
  br label %if.end.3498

if.end.3498:                                      ; preds = %if.then.3491, %land.lhs.true.3489, %for.end.3484
  br label %if.end.3499

if.end.3499:                                      ; preds = %if.end.3498, %land.lhs.true.3406, %if.end.3404
  %1670 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %tobool3500 = icmp ne %struct.rtx_def* %1670, null
  br i1 %tobool3500, label %if.then.3501, label %if.end.3502

if.then.3501:                                     ; preds = %if.end.3499
  %1671 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  call void @note_stores(%struct.rtx_def* %1671, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @set_nonzero_bits_and_sign_copies, i8* null)
  br label %if.end.3502

if.end.3502:                                      ; preds = %if.then.3501, %if.end.3499
  %1672 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  call void @note_stores(%struct.rtx_def* %1672, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @set_nonzero_bits_and_sign_copies, i8* null)
  %1673 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %1674 = bitcast %struct.rtx_def* %1673 to i32*
  %bf.load3503 = load i32, i32* %1674, align 8
  %bf.clear3504 = and i32 %bf.load3503, 65535
  %cmp3505 = icmp eq i32 %bf.clear3504, 51
  br i1 %cmp3505, label %if.then.3510, label %lor.lhs.false.3507

lor.lhs.false.3507:                               ; preds = %if.end.3502
  %1675 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call3508 = call i32 @any_uncondjump_p(%struct.rtx_def* %1675)
  %tobool3509 = icmp ne i32 %call3508, 0
  br i1 %tobool3509, label %if.then.3510, label %if.end.3522

if.then.3510:                                     ; preds = %lor.lhs.false.3507, %if.end.3502
  %1676 = load i32*, i32** %new_direct_jump_p.addr, align 8
  store i32 1, i32* %1676, align 4
  %1677 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call3511 = call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %1677)
  store %struct.rtx_def* %call3511, %struct.rtx_def** %temp, align 8
  %cmp3512 = icmp eq %struct.rtx_def* %call3511, null
  br i1 %cmp3512, label %if.then.3519, label %lor.lhs.false.3514

lor.lhs.false.3514:                               ; preds = %if.then.3510
  %1678 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %1679 = bitcast %struct.rtx_def* %1678 to i32*
  %bf.load3515 = load i32, i32* %1679, align 8
  %bf.clear3516 = and i32 %bf.load3515, 65535
  %cmp3517 = icmp ne i32 %bf.clear3516, 35
  br i1 %cmp3517, label %if.then.3519, label %if.end.3521

if.then.3519:                                     ; preds = %lor.lhs.false.3514, %if.then.3510
  %1680 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call3520 = call %struct.rtx_def* @emit_barrier_after(%struct.rtx_def* %1680)
  br label %if.end.3521

if.end.3521:                                      ; preds = %if.then.3519, %lor.lhs.false.3514
  br label %if.end.3522

if.end.3522:                                      ; preds = %if.end.3521, %lor.lhs.false.3507
  %1681 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %1682 = bitcast %struct.rtx_def* %1681 to i32*
  %bf.load3523 = load i32, i32* %1682, align 8
  %bf.clear3524 = and i32 %bf.load3523, 65535
  %cmp3525 = icmp eq i32 %bf.clear3524, 47
  br i1 %cmp3525, label %land.lhs.true.3527, label %if.end.3540

land.lhs.true.3527:                               ; preds = %if.end.3522
  %1683 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld3528 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1683, i32 0, i32 1
  %arrayidx3529 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3528, i32 0, i64 1
  %rtx3530 = bitcast %union.rtunion_def* %arrayidx3529 to %struct.rtx_def**
  %1684 = load %struct.rtx_def*, %struct.rtx_def** %rtx3530, align 8
  %1685 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %cmp3531 = icmp eq %struct.rtx_def* %1684, %1685
  br i1 %cmp3531, label %land.lhs.true.3533, label %if.end.3540

land.lhs.true.3533:                               ; preds = %land.lhs.true.3527
  %1686 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld3534 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1686, i32 0, i32 1
  %arrayidx3535 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3534, i32 0, i64 0
  %rtx3536 = bitcast %union.rtunion_def* %arrayidx3535 to %struct.rtx_def**
  %1687 = load %struct.rtx_def*, %struct.rtx_def** %rtx3536, align 8
  %1688 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %cmp3537 = icmp eq %struct.rtx_def* %1687, %1688
  br i1 %cmp3537, label %if.then.3539, label %if.end.3540

if.then.3539:                                     ; preds = %land.lhs.true.3533
  %1689 = load i32*, i32** %new_direct_jump_p.addr, align 8
  store i32 1, i32* %1689, align 4
  br label %if.end.3540

if.end.3540:                                      ; preds = %if.then.3539, %land.lhs.true.3533, %land.lhs.true.3527, %if.end.3522
  %1690 = load i32, i32* @combine_successes, align 4
  %inc3541 = add nsw i32 %1690, 1
  store i32 %inc3541, i32* @combine_successes, align 4
  call void @undo_commit()
  store %struct.rtx_def* null, %struct.rtx_def** @subst_prev_insn, align 8
  %1691 = load %struct.rtx_def*, %struct.rtx_def** @added_links_insn, align 8
  %tobool3542 = icmp ne %struct.rtx_def* %1691, null
  br i1 %tobool3542, label %land.lhs.true.3543, label %if.else.3613

land.lhs.true.3543:                               ; preds = %if.end.3540
  %1692 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %cmp3544 = icmp eq %struct.rtx_def* %1692, null
  br i1 %cmp3544, label %land.lhs.true.3579, label %lor.lhs.false.3546

lor.lhs.false.3546:                               ; preds = %land.lhs.true.3543
  %1693 = load %struct.rtx_def*, %struct.rtx_def** @added_links_insn, align 8
  %fld3547 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1693, i32 0, i32 1
  %arrayidx3548 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3547, i32 0, i64 0
  %rtint3549 = bitcast %union.rtunion_def* %arrayidx3548 to i32*
  %1694 = load i32, i32* %rtint3549, align 4
  %1695 = load i32, i32* @max_uid_cuid, align 4
  %cmp3550 = icmp sgt i32 %1694, %1695
  br i1 %cmp3550, label %cond.true.3552, label %cond.false.3554

cond.true.3552:                                   ; preds = %lor.lhs.false.3546
  %1696 = load %struct.rtx_def*, %struct.rtx_def** @added_links_insn, align 8
  %call3553 = call i32 @insn_cuid(%struct.rtx_def* %1696)
  br label %cond.end.3560

cond.false.3554:                                  ; preds = %lor.lhs.false.3546
  %1697 = load %struct.rtx_def*, %struct.rtx_def** @added_links_insn, align 8
  %fld3555 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1697, i32 0, i32 1
  %arrayidx3556 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3555, i32 0, i64 0
  %rtint3557 = bitcast %union.rtunion_def* %arrayidx3556 to i32*
  %1698 = load i32, i32* %rtint3557, align 4
  %idxprom3558 = sext i32 %1698 to i64
  %1699 = load i32*, i32** @uid_cuid, align 8
  %arrayidx3559 = getelementptr inbounds i32, i32* %1699, i64 %idxprom3558
  %1700 = load i32, i32* %arrayidx3559, align 4
  br label %cond.end.3560

cond.end.3560:                                    ; preds = %cond.false.3554, %cond.true.3552
  %cond3561 = phi i32 [ %call3553, %cond.true.3552 ], [ %1700, %cond.false.3554 ]
  %1701 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld3562 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1701, i32 0, i32 1
  %arrayidx3563 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3562, i32 0, i64 0
  %rtint3564 = bitcast %union.rtunion_def* %arrayidx3563 to i32*
  %1702 = load i32, i32* %rtint3564, align 4
  %1703 = load i32, i32* @max_uid_cuid, align 4
  %cmp3565 = icmp sgt i32 %1702, %1703
  br i1 %cmp3565, label %cond.true.3567, label %cond.false.3569

cond.true.3567:                                   ; preds = %cond.end.3560
  %1704 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call3568 = call i32 @insn_cuid(%struct.rtx_def* %1704)
  br label %cond.end.3575

cond.false.3569:                                  ; preds = %cond.end.3560
  %1705 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld3570 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1705, i32 0, i32 1
  %arrayidx3571 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3570, i32 0, i64 0
  %rtint3572 = bitcast %union.rtunion_def* %arrayidx3571 to i32*
  %1706 = load i32, i32* %rtint3572, align 4
  %idxprom3573 = sext i32 %1706 to i64
  %1707 = load i32*, i32** @uid_cuid, align 8
  %arrayidx3574 = getelementptr inbounds i32, i32* %1707, i64 %idxprom3573
  %1708 = load i32, i32* %arrayidx3574, align 4
  br label %cond.end.3575

cond.end.3575:                                    ; preds = %cond.false.3569, %cond.true.3567
  %cond3576 = phi i32 [ %call3568, %cond.true.3567 ], [ %1708, %cond.false.3569 ]
  %cmp3577 = icmp slt i32 %cond3561, %cond3576
  br i1 %cmp3577, label %land.lhs.true.3579, label %if.else.3613

land.lhs.true.3579:                               ; preds = %cond.end.3575, %land.lhs.true.3543
  %1709 = load %struct.rtx_def*, %struct.rtx_def** @added_links_insn, align 8
  %fld3580 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1709, i32 0, i32 1
  %arrayidx3581 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3580, i32 0, i64 0
  %rtint3582 = bitcast %union.rtunion_def* %arrayidx3581 to i32*
  %1710 = load i32, i32* %rtint3582, align 4
  %1711 = load i32, i32* @max_uid_cuid, align 4
  %cmp3583 = icmp sgt i32 %1710, %1711
  br i1 %cmp3583, label %cond.true.3585, label %cond.false.3587

cond.true.3585:                                   ; preds = %land.lhs.true.3579
  %1712 = load %struct.rtx_def*, %struct.rtx_def** @added_links_insn, align 8
  %call3586 = call i32 @insn_cuid(%struct.rtx_def* %1712)
  br label %cond.end.3593

cond.false.3587:                                  ; preds = %land.lhs.true.3579
  %1713 = load %struct.rtx_def*, %struct.rtx_def** @added_links_insn, align 8
  %fld3588 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1713, i32 0, i32 1
  %arrayidx3589 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3588, i32 0, i64 0
  %rtint3590 = bitcast %union.rtunion_def* %arrayidx3589 to i32*
  %1714 = load i32, i32* %rtint3590, align 4
  %idxprom3591 = sext i32 %1714 to i64
  %1715 = load i32*, i32** @uid_cuid, align 8
  %arrayidx3592 = getelementptr inbounds i32, i32* %1715, i64 %idxprom3591
  %1716 = load i32, i32* %arrayidx3592, align 4
  br label %cond.end.3593

cond.end.3593:                                    ; preds = %cond.false.3587, %cond.true.3585
  %cond3594 = phi i32 [ %call3586, %cond.true.3585 ], [ %1716, %cond.false.3587 ]
  %1717 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld3595 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1717, i32 0, i32 1
  %arrayidx3596 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3595, i32 0, i64 0
  %rtint3597 = bitcast %union.rtunion_def* %arrayidx3596 to i32*
  %1718 = load i32, i32* %rtint3597, align 4
  %1719 = load i32, i32* @max_uid_cuid, align 4
  %cmp3598 = icmp sgt i32 %1718, %1719
  br i1 %cmp3598, label %cond.true.3600, label %cond.false.3602

cond.true.3600:                                   ; preds = %cond.end.3593
  %1720 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call3601 = call i32 @insn_cuid(%struct.rtx_def* %1720)
  br label %cond.end.3608

cond.false.3602:                                  ; preds = %cond.end.3593
  %1721 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld3603 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1721, i32 0, i32 1
  %arrayidx3604 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3603, i32 0, i64 0
  %rtint3605 = bitcast %union.rtunion_def* %arrayidx3604 to i32*
  %1722 = load i32, i32* %rtint3605, align 4
  %idxprom3606 = sext i32 %1722 to i64
  %1723 = load i32*, i32** @uid_cuid, align 8
  %arrayidx3607 = getelementptr inbounds i32, i32* %1723, i64 %idxprom3606
  %1724 = load i32, i32* %arrayidx3607, align 4
  br label %cond.end.3608

cond.end.3608:                                    ; preds = %cond.false.3602, %cond.true.3600
  %cond3609 = phi i32 [ %call3601, %cond.true.3600 ], [ %1724, %cond.false.3602 ]
  %cmp3610 = icmp slt i32 %cond3594, %cond3609
  br i1 %cmp3610, label %if.then.3612, label %if.else.3613

if.then.3612:                                     ; preds = %cond.end.3608
  %1725 = load %struct.rtx_def*, %struct.rtx_def** @added_links_insn, align 8
  store %struct.rtx_def* %1725, %struct.rtx_def** %retval
  br label %return

if.else.3613:                                     ; preds = %cond.end.3608, %cond.end.3575, %if.end.3540
  %1726 = load %struct.rtx_def*, %struct.rtx_def** %newi2pat, align 8
  %tobool3614 = icmp ne %struct.rtx_def* %1726, null
  br i1 %tobool3614, label %cond.true.3615, label %cond.false.3616

cond.true.3615:                                   ; preds = %if.else.3613
  %1727 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  br label %cond.end.3617

cond.false.3616:                                  ; preds = %if.else.3613
  %1728 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  br label %cond.end.3617

cond.end.3617:                                    ; preds = %cond.false.3616, %cond.true.3615
  %cond3618 = phi %struct.rtx_def* [ %1727, %cond.true.3615 ], [ %1728, %cond.false.3616 ]
  store %struct.rtx_def* %cond3618, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %cond.end.3617, %if.then.3612, %if.then.2656, %if.then.2643, %if.then.1176, %if.then.1119, %if.then.847, %if.then.817, %if.then
  %1729 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %1729
}

declare void @delete_noop_moves(%struct.rtx_def*) #1

declare void @update_life_info(%struct.simple_bitmap_def*, i32, i32) #1

; Function Attrs: nounwind
declare void @free(i8*) #2

declare void @init_recog() #1

; Function Attrs: nounwind uwtable
define i32 @extended_count(%struct.rtx_def* %x, i32 %mode, i32 %unsignedp) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %unsignedp.addr = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %mode, i32* %mode.addr, align 4
  store i32 %unsignedp, i32* %unsignedp.addr, align 4
  %0 = load i32, i32* @nonzero_sign_valid, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %unsignedp.addr, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %cond.true, label %cond.false.9

cond.true:                                        ; preds = %if.end
  %2 = load i32, i32* %mode.addr, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom
  %3 = load i16, i16* %arrayidx, align 2
  %conv = zext i16 %3 to i32
  %cmp1 = icmp sle i32 %conv, 64
  br i1 %cmp1, label %cond.true.3, label %cond.false

cond.true.3:                                      ; preds = %cond.true
  %4 = load i32, i32* %mode.addr, align 4
  %idxprom4 = sext i32 %4 to i64
  %arrayidx5 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom4
  %5 = load i16, i16* %arrayidx5, align 2
  %conv6 = zext i16 %5 to i32
  %sub = sub nsw i32 %conv6, 1
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %7 = load i32, i32* %mode.addr, align 4
  %call = call i64 @nonzero_bits(%struct.rtx_def* %6, i32 %7)
  %call7 = call i32 @floor_log2_wide(i64 %call)
  %sub8 = sub nsw i32 %sub, %call7
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.3
  %cond = phi i32 [ %sub8, %cond.true.3 ], [ 0, %cond.false ]
  br label %cond.end.12

cond.false.9:                                     ; preds = %if.end
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %9 = load i32, i32* %mode.addr, align 4
  %call10 = call i32 @num_sign_bit_copies(%struct.rtx_def* %8, i32 %9)
  %sub11 = sub i32 %call10, 1
  br label %cond.end.12

cond.end.12:                                      ; preds = %cond.false.9, %cond.end
  %cond13 = phi i32 [ %cond, %cond.end ], [ %sub11, %cond.false.9 ]
  store i32 %cond13, i32* %retval
  br label %return

return:                                           ; preds = %cond.end.12, %if.then
  %10 = load i32, i32* %retval
  ret i32 %10
}

declare i32 @floor_log2_wide(i64) #1

; Function Attrs: nounwind uwtable
define internal i64 @nonzero_bits(%struct.rtx_def* %x, i32 %mode) #0 {
entry:
  %retval = alloca i64, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %nonzero = alloca i64, align 8
  %inner_nz = alloca i64, align 8
  %code = alloca i32, align 4
  %mode_width = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  %alignment = alloca i64, align 8
  %mask = alloca i64, align 8
  %nonzero0 = alloca i64, align 8
  %nz0 = alloca i64, align 8
  %nz1 = alloca i64, align 8
  %width0 = alloca i32, align 4
  %width1 = alloca i32, align 4
  %low0 = alloca i32, align 4
  %low1 = alloca i32, align 4
  %op0_maybe_minusp = alloca i64, align 8
  %op1_maybe_minusp = alloca i64, align 8
  %result_width = alloca i32, align 4
  %result_low = alloca i32, align 4
  %inner_mode = alloca i32, align 4
  %width = alloca i32, align 4
  %count = alloca i32, align 4
  %mode_mask = alloca i64, align 8
  %op_nonzero = alloca i64, align 8
  %inner = alloca i64, align 8
  %outer = alloca i64, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %mode, i32* %mode.addr, align 4
  %0 = load i32, i32* %mode.addr, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom
  %1 = load i64, i64* %arrayidx, align 8
  store i64 %1, i64* %nonzero, align 8
  %2 = load i32, i32* %mode.addr, align 4
  %idxprom1 = sext i32 %2 to i64
  %arrayidx2 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1
  %3 = load i16, i16* %arrayidx2, align 2
  %conv = zext i16 %3 to i32
  store i32 %conv, i32* %mode_width, align 4
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load = load i32, i32* %5, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom3 = sext i32 %bf.clear to i64
  %arrayidx4 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom3
  %6 = load i32, i32* %arrayidx4, align 4
  %cmp = icmp eq i32 %6, 2
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load6 = load i32, i32* %8, align 8
  %bf.lshr7 = lshr i32 %bf.load6, 16
  %bf.clear8 = and i32 %bf.lshr7, 255
  %idxprom9 = sext i32 %bf.clear8 to i64
  %arrayidx10 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom9
  %9 = load i32, i32* %arrayidx10, align 4
  %cmp11 = icmp eq i32 %9, 6
  br i1 %cmp11, label %if.then, label %lor.lhs.false.13

lor.lhs.false.13:                                 ; preds = %lor.lhs.false
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load14 = load i32, i32* %11, align 8
  %bf.lshr15 = lshr i32 %bf.load14, 16
  %bf.clear16 = and i32 %bf.lshr15, 255
  %idxprom17 = sext i32 %bf.clear16 to i64
  %arrayidx18 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom17
  %12 = load i32, i32* %arrayidx18, align 4
  %cmp19 = icmp eq i32 %12, 8
  br i1 %cmp19, label %if.then, label %lor.lhs.false.21

lor.lhs.false.21:                                 ; preds = %lor.lhs.false.13
  %13 = load i32, i32* %mode.addr, align 4
  %idxprom22 = sext i32 %13 to i64
  %arrayidx23 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom22
  %14 = load i32, i32* %arrayidx23, align 4
  %cmp24 = icmp eq i32 %14, 2
  br i1 %cmp24, label %if.then, label %lor.lhs.false.26

lor.lhs.false.26:                                 ; preds = %lor.lhs.false.21
  %15 = load i32, i32* %mode.addr, align 4
  %idxprom27 = sext i32 %15 to i64
  %arrayidx28 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom27
  %16 = load i32, i32* %arrayidx28, align 4
  %cmp29 = icmp eq i32 %16, 6
  br i1 %cmp29, label %if.then, label %lor.lhs.false.31

lor.lhs.false.31:                                 ; preds = %lor.lhs.false.26
  %17 = load i32, i32* %mode.addr, align 4
  %idxprom32 = sext i32 %17 to i64
  %arrayidx33 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom32
  %18 = load i32, i32* %arrayidx33, align 4
  %cmp34 = icmp eq i32 %18, 8
  br i1 %cmp34, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.31, %lor.lhs.false.26, %lor.lhs.false.21, %lor.lhs.false.13, %lor.lhs.false, %entry
  %19 = load i64, i64* %nonzero, align 8
  store i64 %19, i64* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.31
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load36 = load i32, i32* %21, align 8
  %bf.lshr37 = lshr i32 %bf.load36, 16
  %bf.clear38 = and i32 %bf.lshr37, 255
  %idxprom39 = sext i32 %bf.clear38 to i64
  %arrayidx40 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom39
  %22 = load i16, i16* %arrayidx40, align 2
  %conv41 = zext i16 %22 to i32
  %23 = load i32, i32* %mode_width, align 4
  %cmp42 = icmp ugt i32 %conv41, %23
  br i1 %cmp42, label %if.then.44, label %if.end.53

if.then.44:                                       ; preds = %if.end
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load45 = load i32, i32* %25, align 8
  %bf.lshr46 = lshr i32 %bf.load45, 16
  %bf.clear47 = and i32 %bf.lshr46, 255
  store i32 %bf.clear47, i32* %mode.addr, align 4
  %26 = load i32, i32* %mode.addr, align 4
  %idxprom48 = sext i32 %26 to i64
  %arrayidx49 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom48
  %27 = load i64, i64* %arrayidx49, align 8
  store i64 %27, i64* %nonzero, align 8
  %28 = load i32, i32* %mode.addr, align 4
  %idxprom50 = sext i32 %28 to i64
  %arrayidx51 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom50
  %29 = load i16, i16* %arrayidx51, align 2
  %conv52 = zext i16 %29 to i32
  store i32 %conv52, i32* %mode_width, align 4
  br label %if.end.53

if.end.53:                                        ; preds = %if.then.44, %if.end
  %30 = load i32, i32* %mode_width, align 4
  %cmp54 = icmp ugt i32 %30, 64
  br i1 %cmp54, label %if.then.56, label %if.end.57

if.then.56:                                       ; preds = %if.end.53
  %31 = load i64, i64* %nonzero, align 8
  store i64 %31, i64* %retval
  br label %return

if.end.57:                                        ; preds = %if.end.53
  %32 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load58 = load i32, i32* %33, align 8
  %bf.lshr59 = lshr i32 %bf.load58, 16
  %bf.clear60 = and i32 %bf.lshr59, 255
  %cmp61 = icmp ne i32 %bf.clear60, 0
  br i1 %cmp61, label %land.lhs.true, label %if.end.111

land.lhs.true:                                    ; preds = %if.end.57
  %34 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %35 = bitcast %struct.rtx_def* %34 to i32*
  %bf.load63 = load i32, i32* %35, align 8
  %bf.lshr64 = lshr i32 %bf.load63, 16
  %bf.clear65 = and i32 %bf.lshr64, 255
  %36 = load i32, i32* %mode.addr, align 4
  %cmp66 = icmp ne i32 %bf.clear65, %36
  br i1 %cmp66, label %land.lhs.true.68, label %if.end.111

land.lhs.true.68:                                 ; preds = %land.lhs.true
  %37 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load69 = load i32, i32* %38, align 8
  %bf.lshr70 = lshr i32 %bf.load69, 16
  %bf.clear71 = and i32 %bf.lshr70, 255
  %idxprom72 = sext i32 %bf.clear71 to i64
  %arrayidx73 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom72
  %39 = load i16, i16* %arrayidx73, align 2
  %conv74 = zext i16 %39 to i32
  %40 = load i32, i32* @target_flags, align 4
  %and = and i32 %40, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond = select i1 %tobool, i32 64, i32 32
  %cmp75 = icmp sle i32 %conv74, %cond
  br i1 %cmp75, label %land.lhs.true.77, label %if.end.111

land.lhs.true.77:                                 ; preds = %land.lhs.true.68
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %42 = bitcast %struct.rtx_def* %41 to i32*
  %bf.load78 = load i32, i32* %42, align 8
  %bf.lshr79 = lshr i32 %bf.load78, 16
  %bf.clear80 = and i32 %bf.lshr79, 255
  %idxprom81 = sext i32 %bf.clear80 to i64
  %arrayidx82 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom81
  %43 = load i16, i16* %arrayidx82, align 2
  %conv83 = zext i16 %43 to i32
  %cmp84 = icmp sle i32 %conv83, 64
  br i1 %cmp84, label %land.lhs.true.86, label %if.end.111

land.lhs.true.86:                                 ; preds = %land.lhs.true.77
  %44 = load i32, i32* %mode.addr, align 4
  %idxprom87 = sext i32 %44 to i64
  %arrayidx88 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom87
  %45 = load i16, i16* %arrayidx88, align 2
  %conv89 = zext i16 %45 to i32
  %46 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %47 = bitcast %struct.rtx_def* %46 to i32*
  %bf.load90 = load i32, i32* %47, align 8
  %bf.lshr91 = lshr i32 %bf.load90, 16
  %bf.clear92 = and i32 %bf.lshr91, 255
  %idxprom93 = sext i32 %bf.clear92 to i64
  %arrayidx94 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom93
  %48 = load i16, i16* %arrayidx94, align 2
  %conv95 = zext i16 %48 to i32
  %cmp96 = icmp sgt i32 %conv89, %conv95
  br i1 %cmp96, label %if.then.98, label %if.end.111

if.then.98:                                       ; preds = %land.lhs.true.86
  %49 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %50 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %51 = bitcast %struct.rtx_def* %50 to i32*
  %bf.load99 = load i32, i32* %51, align 8
  %bf.lshr100 = lshr i32 %bf.load99, 16
  %bf.clear101 = and i32 %bf.lshr100, 255
  %call = call i64 @nonzero_bits(%struct.rtx_def* %49, i32 %bf.clear101)
  %52 = load i64, i64* %nonzero, align 8
  %and102 = and i64 %52, %call
  store i64 %and102, i64* %nonzero, align 8
  %53 = load i32, i32* %mode.addr, align 4
  %idxprom103 = sext i32 %53 to i64
  %arrayidx104 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom103
  %54 = load i64, i64* %arrayidx104, align 8
  %55 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %56 = bitcast %struct.rtx_def* %55 to i32*
  %bf.load105 = load i32, i32* %56, align 8
  %bf.lshr106 = lshr i32 %bf.load105, 16
  %bf.clear107 = and i32 %bf.lshr106, 255
  %idxprom108 = sext i32 %bf.clear107 to i64
  %arrayidx109 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom108
  %57 = load i64, i64* %arrayidx109, align 8
  %neg = xor i64 %57, -1
  %and110 = and i64 %54, %neg
  %58 = load i64, i64* %nonzero, align 8
  %or = or i64 %58, %and110
  store i64 %or, i64* %nonzero, align 8
  %59 = load i64, i64* %nonzero, align 8
  store i64 %59, i64* %retval
  br label %return

if.end.111:                                       ; preds = %land.lhs.true.86, %land.lhs.true.77, %land.lhs.true.68, %land.lhs.true, %if.end.57
  %60 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %61 = bitcast %struct.rtx_def* %60 to i32*
  %bf.load112 = load i32, i32* %61, align 8
  %bf.clear113 = and i32 %bf.load112, 65535
  store i32 %bf.clear113, i32* %code, align 4
  %62 = load i32, i32* %code, align 4
  switch i32 %62, label %sw.default.809 [
    i32 61, label %sw.bb
    i32 54, label %sw.bb.301
    i32 66, label %sw.bb.304
    i32 103, label %sw.bb.305
    i32 102, label %sw.bb.305
    i32 114, label %sw.bb.305
    i32 119, label %sw.bb.305
    i32 105, label %sw.bb.305
    i32 109, label %sw.bb.305
    i32 116, label %sw.bb.305
    i32 107, label %sw.bb.305
    i32 111, label %sw.bb.305
    i32 118, label %sw.bb.305
    i32 104, label %sw.bb.305
    i32 108, label %sw.bb.305
    i32 115, label %sw.bb.305
    i32 106, label %sw.bb.305
    i32 110, label %sw.bb.305
    i32 117, label %sw.bb.305
    i32 112, label %sw.bb.305
    i32 113, label %sw.bb.305
    i32 77, label %sw.bb.315
    i32 129, label %sw.bb.336
    i32 122, label %sw.bb.337
    i32 121, label %sw.bb.345
    i32 120, label %sw.bb.370
    i32 83, label %sw.bb.422
    i32 85, label %sw.bb.433
    i32 84, label %sw.bb.433
    i32 94, label %sw.bb.433
    i32 95, label %sw.bb.433
    i32 92, label %sw.bb.433
    i32 93, label %sw.bb.433
    i32 75, label %sw.bb.449
    i32 76, label %sw.bb.449
    i32 78, label %sw.bb.449
    i32 79, label %sw.bb.449
    i32 81, label %sw.bb.449
    i32 80, label %sw.bb.449
    i32 82, label %sw.bb.449
    i32 133, label %sw.bb.570
    i32 63, label %sw.bb.598
    i32 89, label %sw.bb.691
    i32 90, label %sw.bb.691
    i32 87, label %sw.bb.691
    i32 88, label %sw.bb.691
    i32 131, label %sw.bb.791
    i32 72, label %sw.bb.798
  ]

sw.bb:                                            ; preds = %if.end.111
  %63 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %64 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 2), align 8
  %cmp114 = icmp eq %struct.rtx_def* %63, %64
  br i1 %cmp114, label %land.lhs.true.122, label %lor.lhs.false.116

lor.lhs.false.116:                                ; preds = %sw.bb
  %65 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %66 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 3), align 8
  %cmp117 = icmp eq %struct.rtx_def* %65, %66
  br i1 %cmp117, label %land.lhs.true.122, label %lor.lhs.false.119

lor.lhs.false.119:                                ; preds = %lor.lhs.false.116
  %67 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %68 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 5), align 8
  %cmp120 = icmp eq %struct.rtx_def* %67, %68
  br i1 %cmp120, label %land.lhs.true.122, label %if.end.161

land.lhs.true.122:                                ; preds = %lor.lhs.false.119, %lor.lhs.false.116, %sw.bb
  %69 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1
  %arrayidx123 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx123 to i32*
  %70 = load i32, i32* %rtuint, align 4
  %idxprom124 = zext i32 %70 to i64
  %71 = load %struct.function*, %struct.function** @cfun, align 8
  %emit = getelementptr inbounds %struct.function, %struct.function* %71, i32 0, i32 3
  %72 = load %struct.emit_status*, %struct.emit_status** %emit, align 8
  %regno_pointer_align = getelementptr inbounds %struct.emit_status, %struct.emit_status* %72, i32 0, i32 10
  %73 = load i8*, i8** %regno_pointer_align, align 8
  %arrayidx125 = getelementptr inbounds i8, i8* %73, i64 %idxprom124
  %74 = load i8, i8* %arrayidx125, align 1
  %conv126 = zext i8 %74 to i32
  %tobool127 = icmp ne i32 %conv126, 0
  br i1 %tobool127, label %if.then.128, label %if.end.161

if.then.128:                                      ; preds = %land.lhs.true.122
  %75 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld129 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld129, i32 0, i64 0
  %rtuint131 = bitcast %union.rtunion_def* %arrayidx130 to i32*
  %76 = load i32, i32* %rtuint131, align 4
  %idxprom132 = zext i32 %76 to i64
  %77 = load %struct.function*, %struct.function** @cfun, align 8
  %emit133 = getelementptr inbounds %struct.function, %struct.function* %77, i32 0, i32 3
  %78 = load %struct.emit_status*, %struct.emit_status** %emit133, align 8
  %regno_pointer_align134 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %78, i32 0, i32 10
  %79 = load i8*, i8** %regno_pointer_align134, align 8
  %arrayidx135 = getelementptr inbounds i8, i8* %79, i64 %idxprom132
  %80 = load i8, i8* %arrayidx135, align 1
  %conv136 = zext i8 %80 to i32
  %div = sdiv i32 %conv136, 8
  %conv137 = sext i32 %div to i64
  store i64 %conv137, i64* %alignment, align 8
  %81 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %82 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 2), align 8
  %cmp138 = icmp eq %struct.rtx_def* %81, %82
  br i1 %cmp138, label %land.lhs.true.140, label %if.end.158

land.lhs.true.140:                                ; preds = %if.then.128
  %83 = load i32, i32* @target_flags, align 4
  %and141 = and i32 %83, 2048
  %tobool142 = icmp ne i32 %and141, 0
  br i1 %tobool142, label %if.end.158, label %land.lhs.true.143

land.lhs.true.143:                                ; preds = %land.lhs.true.140
  %84 = load i32, i32* @target_flags, align 4
  %and144 = and i32 %84, 4096
  %tobool145 = icmp ne i32 %and144, 0
  br i1 %tobool145, label %if.end.158, label %if.then.146

if.then.146:                                      ; preds = %land.lhs.true.143
  %85 = load i32, i32* @target_flags, align 4
  %and147 = and i32 %85, 33554432
  %tobool148 = icmp ne i32 %and147, 0
  %cond149 = select i1 %tobool148, i32 8, i32 2
  %conv150 = sext i32 %cond149 to i64
  %86 = load i64, i64* %alignment, align 8
  %cmp151 = icmp ult i64 %conv150, %86
  br i1 %cmp151, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.146
  %87 = load i32, i32* @target_flags, align 4
  %and153 = and i32 %87, 33554432
  %tobool154 = icmp ne i32 %and153, 0
  %cond155 = select i1 %tobool154, i32 8, i32 2
  %conv156 = sext i32 %cond155 to i64
  br label %cond.end

cond.false:                                       ; preds = %if.then.146
  %88 = load i64, i64* %alignment, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond157 = phi i64 [ %conv156, %cond.true ], [ %88, %cond.false ]
  store i64 %cond157, i64* %alignment, align 8
  br label %if.end.158

if.end.158:                                       ; preds = %cond.end, %land.lhs.true.143, %land.lhs.true.140, %if.then.128
  %89 = load i64, i64* %alignment, align 8
  %sub = sub i64 %89, 1
  %neg159 = xor i64 %sub, -1
  %90 = load i64, i64* %nonzero, align 8
  %and160 = and i64 %90, %neg159
  store i64 %and160, i64* %nonzero, align 8
  br label %if.end.161

if.end.161:                                       ; preds = %if.end.158, %land.lhs.true.122, %lor.lhs.false.119
  %91 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld162 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1
  %arrayidx163 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld162, i32 0, i64 0
  %rtuint164 = bitcast %union.rtunion_def* %arrayidx163 to i32*
  %92 = load i32, i32* %rtuint164, align 4
  %idxprom165 = zext i32 %92 to i64
  %93 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set_value, align 8
  %arrayidx166 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %93, i64 %idxprom165
  %94 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx166, align 8
  %cmp167 = icmp ne %struct.rtx_def* %94, null
  br i1 %cmp167, label %land.lhs.true.169, label %if.end.261

land.lhs.true.169:                                ; preds = %if.end.161
  %95 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1
  %arrayidx171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld170, i32 0, i64 0
  %rtuint172 = bitcast %union.rtunion_def* %arrayidx171 to i32*
  %96 = load i32, i32* %rtuint172, align 4
  %idxprom173 = zext i32 %96 to i64
  %97 = load i32*, i32** @reg_last_set_mode, align 8
  %arrayidx174 = getelementptr inbounds i32, i32* %97, i64 %idxprom173
  %98 = load i32, i32* %arrayidx174, align 4
  %99 = load i32, i32* %mode.addr, align 4
  %cmp175 = icmp eq i32 %98, %99
  br i1 %cmp175, label %land.lhs.true.192, label %lor.lhs.false.177

lor.lhs.false.177:                                ; preds = %land.lhs.true.169
  %100 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld178 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1
  %arrayidx179 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld178, i32 0, i64 0
  %rtuint180 = bitcast %union.rtunion_def* %arrayidx179 to i32*
  %101 = load i32, i32* %rtuint180, align 4
  %idxprom181 = zext i32 %101 to i64
  %102 = load i32*, i32** @reg_last_set_mode, align 8
  %arrayidx182 = getelementptr inbounds i32, i32* %102, i64 %idxprom181
  %103 = load i32, i32* %arrayidx182, align 4
  %idxprom183 = sext i32 %103 to i64
  %arrayidx184 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom183
  %104 = load i32, i32* %arrayidx184, align 4
  %cmp185 = icmp eq i32 %104, 1
  br i1 %cmp185, label %land.lhs.true.187, label %if.end.261

land.lhs.true.187:                                ; preds = %lor.lhs.false.177
  %105 = load i32, i32* %mode.addr, align 4
  %idxprom188 = sext i32 %105 to i64
  %arrayidx189 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom188
  %106 = load i32, i32* %arrayidx189, align 4
  %cmp190 = icmp eq i32 %106, 1
  br i1 %cmp190, label %land.lhs.true.192, label %if.end.261

land.lhs.true.192:                                ; preds = %land.lhs.true.187, %land.lhs.true.169
  %107 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1
  %arrayidx194 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld193, i32 0, i64 0
  %rtuint195 = bitcast %union.rtunion_def* %arrayidx194 to i32*
  %108 = load i32, i32* %rtuint195, align 4
  %idxprom196 = zext i32 %108 to i64
  %109 = load i32*, i32** @reg_last_set_label, align 8
  %arrayidx197 = getelementptr inbounds i32, i32* %109, i64 %idxprom196
  %110 = load i32, i32* %arrayidx197, align 4
  %111 = load i32, i32* @label_tick, align 4
  %cmp198 = icmp eq i32 %110, %111
  br i1 %cmp198, label %land.lhs.true.222, label %lor.lhs.false.200

lor.lhs.false.200:                                ; preds = %land.lhs.true.192
  %112 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld201 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1
  %arrayidx202 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld201, i32 0, i64 0
  %rtuint203 = bitcast %union.rtunion_def* %arrayidx202 to i32*
  %113 = load i32, i32* %rtuint203, align 4
  %cmp204 = icmp uge i32 %113, 53
  br i1 %cmp204, label %land.lhs.true.206, label %if.end.261

land.lhs.true.206:                                ; preds = %lor.lhs.false.200
  %114 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld207 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %114, i32 0, i32 1
  %arrayidx208 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld207, i32 0, i64 0
  %rtuint209 = bitcast %union.rtunion_def* %arrayidx208 to i32*
  %115 = load i32, i32* %rtuint209, align 4
  %idxprom210 = zext i32 %115 to i64
  %116 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %116, i32 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx211 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg, i32 0, i64 %idxprom210
  %117 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx211, align 8
  %sets = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %117, i32 0, i32 3
  %118 = load i32, i32* %sets, align 4
  %cmp212 = icmp eq i32 %118, 1
  br i1 %cmp212, label %land.lhs.true.214, label %if.end.261

land.lhs.true.214:                                ; preds = %land.lhs.true.206
  %119 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %data215 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %119, i32 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data215 to [1 x %struct.basic_block_def*]*
  %arrayidx216 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %bb, i32 0, i64 0
  %120 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx216, align 8
  %global_live_at_start = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %120, i32 0, i32 8
  %121 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %global_live_at_start, align 8
  %122 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld217 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i32 0, i32 1
  %arrayidx218 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld217, i32 0, i64 0
  %rtuint219 = bitcast %union.rtunion_def* %arrayidx218 to i32*
  %123 = load i32, i32* %rtuint219, align 4
  %call220 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %121, i32 %123)
  %tobool221 = icmp ne i32 %call220, 0
  br i1 %tobool221, label %if.end.261, label %land.lhs.true.222

land.lhs.true.222:                                ; preds = %land.lhs.true.214, %land.lhs.true.192
  %124 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld223 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1
  %arrayidx224 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld223, i32 0, i64 0
  %rtuint225 = bitcast %union.rtunion_def* %arrayidx224 to i32*
  %125 = load i32, i32* %rtuint225, align 4
  %idxprom226 = zext i32 %125 to i64
  %126 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set, align 8
  %arrayidx227 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %126, i64 %idxprom226
  %127 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx227, align 8
  %fld228 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %127, i32 0, i32 1
  %arrayidx229 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld228, i32 0, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx229 to i32*
  %128 = load i32, i32* %rtint, align 4
  %129 = load i32, i32* @max_uid_cuid, align 4
  %cmp230 = icmp sgt i32 %128, %129
  br i1 %cmp230, label %cond.true.232, label %cond.false.239

cond.true.232:                                    ; preds = %land.lhs.true.222
  %130 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld233 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1
  %arrayidx234 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld233, i32 0, i64 0
  %rtuint235 = bitcast %union.rtunion_def* %arrayidx234 to i32*
  %131 = load i32, i32* %rtuint235, align 4
  %idxprom236 = zext i32 %131 to i64
  %132 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set, align 8
  %arrayidx237 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %132, i64 %idxprom236
  %133 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx237, align 8
  %call238 = call i32 @insn_cuid(%struct.rtx_def* %133)
  br label %cond.end.250

cond.false.239:                                   ; preds = %land.lhs.true.222
  %134 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld240 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %134, i32 0, i32 1
  %arrayidx241 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld240, i32 0, i64 0
  %rtuint242 = bitcast %union.rtunion_def* %arrayidx241 to i32*
  %135 = load i32, i32* %rtuint242, align 4
  %idxprom243 = zext i32 %135 to i64
  %136 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set, align 8
  %arrayidx244 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %136, i64 %idxprom243
  %137 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx244, align 8
  %fld245 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %137, i32 0, i32 1
  %arrayidx246 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld245, i32 0, i64 0
  %rtint247 = bitcast %union.rtunion_def* %arrayidx246 to i32*
  %138 = load i32, i32* %rtint247, align 4
  %idxprom248 = sext i32 %138 to i64
  %139 = load i32*, i32** @uid_cuid, align 8
  %arrayidx249 = getelementptr inbounds i32, i32* %139, i64 %idxprom248
  %140 = load i32, i32* %arrayidx249, align 4
  br label %cond.end.250

cond.end.250:                                     ; preds = %cond.false.239, %cond.true.232
  %cond251 = phi i32 [ %call238, %cond.true.232 ], [ %140, %cond.false.239 ]
  %141 = load i32, i32* @subst_low_cuid, align 4
  %cmp252 = icmp slt i32 %cond251, %141
  br i1 %cmp252, label %if.then.254, label %if.end.261

if.then.254:                                      ; preds = %cond.end.250
  %142 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld255 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i32 0, i32 1
  %arrayidx256 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld255, i32 0, i64 0
  %rtuint257 = bitcast %union.rtunion_def* %arrayidx256 to i32*
  %143 = load i32, i32* %rtuint257, align 4
  %idxprom258 = zext i32 %143 to i64
  %144 = load i64*, i64** @reg_last_set_nonzero_bits, align 8
  %arrayidx259 = getelementptr inbounds i64, i64* %144, i64 %idxprom258
  %145 = load i64, i64* %arrayidx259, align 8
  %146 = load i64, i64* %nonzero, align 8
  %and260 = and i64 %145, %146
  store i64 %and260, i64* %retval
  br label %return

if.end.261:                                       ; preds = %cond.end.250, %land.lhs.true.214, %land.lhs.true.206, %lor.lhs.false.200, %land.lhs.true.187, %lor.lhs.false.177, %if.end.161
  %147 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call262 = call %struct.rtx_def* @get_last_value(%struct.rtx_def* %147)
  store %struct.rtx_def* %call262, %struct.rtx_def** %tem, align 8
  %148 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %tobool263 = icmp ne %struct.rtx_def* %148, null
  br i1 %tobool263, label %if.then.264, label %if.else

if.then.264:                                      ; preds = %if.end.261
  %149 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %150 = load i32, i32* %mode.addr, align 4
  %call265 = call i64 @nonzero_bits(%struct.rtx_def* %149, i32 %150)
  %151 = load i64, i64* %nonzero, align 8
  %and266 = and i64 %call265, %151
  store i64 %and266, i64* %retval
  br label %return

if.else:                                          ; preds = %if.end.261
  %152 = load i32, i32* @nonzero_sign_valid, align 4
  %tobool267 = icmp ne i32 %152, 0
  br i1 %tobool267, label %land.lhs.true.268, label %if.else.300

land.lhs.true.268:                                ; preds = %if.else
  %153 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld269 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1
  %arrayidx270 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld269, i32 0, i64 0
  %rtuint271 = bitcast %union.rtunion_def* %arrayidx270 to i32*
  %154 = load i32, i32* %rtuint271, align 4
  %idxprom272 = zext i32 %154 to i64
  %155 = load i64*, i64** @reg_nonzero_bits, align 8
  %arrayidx273 = getelementptr inbounds i64, i64* %155, i64 %idxprom272
  %156 = load i64, i64* %arrayidx273, align 8
  %tobool274 = icmp ne i64 %156, 0
  br i1 %tobool274, label %if.then.275, label %if.else.300

if.then.275:                                      ; preds = %land.lhs.true.268
  %157 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld276 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %157, i32 0, i32 1
  %arrayidx277 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld276, i32 0, i64 0
  %rtuint278 = bitcast %union.rtunion_def* %arrayidx277 to i32*
  %158 = load i32, i32* %rtuint278, align 4
  %idxprom279 = zext i32 %158 to i64
  %159 = load i64*, i64** @reg_nonzero_bits, align 8
  %arrayidx280 = getelementptr inbounds i64, i64* %159, i64 %idxprom279
  %160 = load i64, i64* %arrayidx280, align 8
  store i64 %160, i64* %mask, align 8
  %161 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %162 = bitcast %struct.rtx_def* %161 to i32*
  %bf.load281 = load i32, i32* %162, align 8
  %bf.lshr282 = lshr i32 %bf.load281, 16
  %bf.clear283 = and i32 %bf.lshr282, 255
  %idxprom284 = sext i32 %bf.clear283 to i64
  %arrayidx285 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom284
  %163 = load i16, i16* %arrayidx285, align 2
  %conv286 = zext i16 %163 to i32
  %164 = load i32, i32* %mode_width, align 4
  %cmp287 = icmp ult i32 %conv286, %164
  br i1 %cmp287, label %if.then.289, label %if.end.298

if.then.289:                                      ; preds = %if.then.275
  %165 = load i32, i32* %mode.addr, align 4
  %idxprom290 = sext i32 %165 to i64
  %arrayidx291 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom290
  %166 = load i64, i64* %arrayidx291, align 8
  %167 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %168 = bitcast %struct.rtx_def* %167 to i32*
  %bf.load292 = load i32, i32* %168, align 8
  %bf.lshr293 = lshr i32 %bf.load292, 16
  %bf.clear294 = and i32 %bf.lshr293, 255
  %idxprom295 = sext i32 %bf.clear294 to i64
  %arrayidx296 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom295
  %169 = load i64, i64* %arrayidx296, align 8
  %xor = xor i64 %166, %169
  %170 = load i64, i64* %mask, align 8
  %or297 = or i64 %170, %xor
  store i64 %or297, i64* %mask, align 8
  br label %if.end.298

if.end.298:                                       ; preds = %if.then.289, %if.then.275
  %171 = load i64, i64* %nonzero, align 8
  %172 = load i64, i64* %mask, align 8
  %and299 = and i64 %171, %172
  store i64 %and299, i64* %retval
  br label %return

if.else.300:                                      ; preds = %land.lhs.true.268, %if.else
  %173 = load i64, i64* %nonzero, align 8
  store i64 %173, i64* %retval
  br label %return

sw.bb.301:                                        ; preds = %if.end.111
  %174 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld302 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %174, i32 0, i32 1
  %arrayidx303 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld302, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx303 to i64*
  %175 = load i64, i64* %rtwint, align 8
  store i64 %175, i64* %retval
  br label %return

sw.bb.304:                                        ; preds = %if.end.111
  br label %sw.epilog.810

sw.bb.305:                                        ; preds = %if.end.111, %if.end.111, %if.end.111, %if.end.111, %if.end.111, %if.end.111, %if.end.111, %if.end.111, %if.end.111, %if.end.111, %if.end.111, %if.end.111, %if.end.111, %if.end.111, %if.end.111, %if.end.111, %if.end.111, %if.end.111
  %176 = load i32, i32* %mode.addr, align 4
  %idxprom306 = sext i32 %176 to i64
  %arrayidx307 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom306
  %177 = load i32, i32* %arrayidx307, align 4
  %cmp308 = icmp eq i32 %177, 1
  br i1 %cmp308, label %land.lhs.true.310, label %if.end.314

land.lhs.true.310:                                ; preds = %sw.bb.305
  %178 = load i32, i32* %mode_width, align 4
  %cmp311 = icmp ule i32 %178, 64
  br i1 %cmp311, label %if.then.313, label %if.end.314

if.then.313:                                      ; preds = %land.lhs.true.310
  store i64 1, i64* %nonzero, align 8
  br label %if.end.314

if.end.314:                                       ; preds = %if.then.313, %land.lhs.true.310, %sw.bb.305
  br label %sw.epilog.810

sw.bb.315:                                        ; preds = %if.end.111
  %179 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %180 = bitcast %struct.rtx_def* %179 to i32*
  %bf.load316 = load i32, i32* %180, align 8
  %bf.lshr317 = lshr i32 %bf.load316, 16
  %bf.clear318 = and i32 %bf.lshr317, 255
  %idxprom319 = sext i32 %bf.clear318 to i64
  %arrayidx320 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom319
  %181 = load i8, i8* %arrayidx320, align 1
  %conv321 = zext i8 %181 to i32
  %182 = load i32, i32* %mode_width, align 4
  %cmp322 = icmp ult i32 %conv321, %182
  br i1 %cmp322, label %if.then.324, label %if.end.335

if.then.324:                                      ; preds = %sw.bb.315
  %183 = load i32, i32* %mode.addr, align 4
  %idxprom325 = sext i32 %183 to i64
  %arrayidx326 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom325
  %184 = load i64, i64* %arrayidx326, align 8
  %185 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %186 = bitcast %struct.rtx_def* %185 to i32*
  %bf.load327 = load i32, i32* %186, align 8
  %bf.lshr328 = lshr i32 %bf.load327, 16
  %bf.clear329 = and i32 %bf.lshr328, 255
  %idxprom330 = sext i32 %bf.clear329 to i64
  %arrayidx331 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom330
  %187 = load i64, i64* %arrayidx331, align 8
  %neg332 = xor i64 %187, -1
  %and333 = and i64 %184, %neg332
  %188 = load i64, i64* %nonzero, align 8
  %or334 = or i64 %188, %and333
  store i64 %or334, i64* %nonzero, align 8
  br label %if.end.335

if.end.335:                                       ; preds = %if.then.324, %sw.bb.315
  br label %sw.epilog.810

sw.bb.336:                                        ; preds = %if.end.111
  br label %sw.epilog.810

sw.bb.337:                                        ; preds = %if.end.111
  %189 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld338 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %189, i32 0, i32 1
  %arrayidx339 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld338, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx339 to %struct.rtx_def**
  %190 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %191 = load i32, i32* %mode.addr, align 4
  %call340 = call i64 @nonzero_bits(%struct.rtx_def* %190, i32 %191)
  %192 = load i32, i32* %mode.addr, align 4
  %idxprom341 = sext i32 %192 to i64
  %arrayidx342 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom341
  %193 = load i64, i64* %arrayidx342, align 8
  %and343 = and i64 %call340, %193
  %194 = load i64, i64* %nonzero, align 8
  %and344 = and i64 %194, %and343
  store i64 %and344, i64* %nonzero, align 8
  br label %sw.epilog.810

sw.bb.345:                                        ; preds = %if.end.111
  %195 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld346 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %195, i32 0, i32 1
  %arrayidx347 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld346, i32 0, i64 0
  %rtx348 = bitcast %union.rtunion_def* %arrayidx347 to %struct.rtx_def**
  %196 = load %struct.rtx_def*, %struct.rtx_def** %rtx348, align 8
  %197 = load i32, i32* %mode.addr, align 4
  %call349 = call i64 @nonzero_bits(%struct.rtx_def* %196, i32 %197)
  %198 = load i64, i64* %nonzero, align 8
  %and350 = and i64 %198, %call349
  store i64 %and350, i64* %nonzero, align 8
  %199 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld351 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %199, i32 0, i32 1
  %arrayidx352 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld351, i32 0, i64 0
  %rtx353 = bitcast %union.rtunion_def* %arrayidx352 to %struct.rtx_def**
  %200 = load %struct.rtx_def*, %struct.rtx_def** %rtx353, align 8
  %201 = bitcast %struct.rtx_def* %200 to i32*
  %bf.load354 = load i32, i32* %201, align 8
  %bf.lshr355 = lshr i32 %bf.load354, 16
  %bf.clear356 = and i32 %bf.lshr355, 255
  %cmp357 = icmp ne i32 %bf.clear356, 0
  br i1 %cmp357, label %if.then.359, label %if.end.369

if.then.359:                                      ; preds = %sw.bb.345
  %202 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld360 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %202, i32 0, i32 1
  %arrayidx361 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld360, i32 0, i64 0
  %rtx362 = bitcast %union.rtunion_def* %arrayidx361 to %struct.rtx_def**
  %203 = load %struct.rtx_def*, %struct.rtx_def** %rtx362, align 8
  %204 = bitcast %struct.rtx_def* %203 to i32*
  %bf.load363 = load i32, i32* %204, align 8
  %bf.lshr364 = lshr i32 %bf.load363, 16
  %bf.clear365 = and i32 %bf.lshr364, 255
  %idxprom366 = sext i32 %bf.clear365 to i64
  %arrayidx367 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom366
  %205 = load i64, i64* %arrayidx367, align 8
  %206 = load i64, i64* %nonzero, align 8
  %and368 = and i64 %206, %205
  store i64 %and368, i64* %nonzero, align 8
  br label %if.end.369

if.end.369:                                       ; preds = %if.then.359, %sw.bb.345
  br label %sw.epilog.810

sw.bb.370:                                        ; preds = %if.end.111
  %207 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld371 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %207, i32 0, i32 1
  %arrayidx372 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld371, i32 0, i64 0
  %rtx373 = bitcast %union.rtunion_def* %arrayidx372 to %struct.rtx_def**
  %208 = load %struct.rtx_def*, %struct.rtx_def** %rtx373, align 8
  %209 = load i32, i32* %mode.addr, align 4
  %call374 = call i64 @nonzero_bits(%struct.rtx_def* %208, i32 %209)
  store i64 %call374, i64* %inner_nz, align 8
  %210 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld375 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %210, i32 0, i32 1
  %arrayidx376 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld375, i32 0, i64 0
  %rtx377 = bitcast %union.rtunion_def* %arrayidx376 to %struct.rtx_def**
  %211 = load %struct.rtx_def*, %struct.rtx_def** %rtx377, align 8
  %212 = bitcast %struct.rtx_def* %211 to i32*
  %bf.load378 = load i32, i32* %212, align 8
  %bf.lshr379 = lshr i32 %bf.load378, 16
  %bf.clear380 = and i32 %bf.lshr379, 255
  %cmp381 = icmp ne i32 %bf.clear380, 0
  br i1 %cmp381, label %if.then.383, label %if.end.420

if.then.383:                                      ; preds = %sw.bb.370
  %213 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld384 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %213, i32 0, i32 1
  %arrayidx385 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld384, i32 0, i64 0
  %rtx386 = bitcast %union.rtunion_def* %arrayidx385 to %struct.rtx_def**
  %214 = load %struct.rtx_def*, %struct.rtx_def** %rtx386, align 8
  %215 = bitcast %struct.rtx_def* %214 to i32*
  %bf.load387 = load i32, i32* %215, align 8
  %bf.lshr388 = lshr i32 %bf.load387, 16
  %bf.clear389 = and i32 %bf.lshr388, 255
  %idxprom390 = sext i32 %bf.clear389 to i64
  %arrayidx391 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom390
  %216 = load i64, i64* %arrayidx391, align 8
  %217 = load i64, i64* %inner_nz, align 8
  %and392 = and i64 %217, %216
  store i64 %and392, i64* %inner_nz, align 8
  %218 = load i64, i64* %inner_nz, align 8
  %219 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld393 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %219, i32 0, i32 1
  %arrayidx394 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld393, i32 0, i64 0
  %rtx395 = bitcast %union.rtunion_def* %arrayidx394 to %struct.rtx_def**
  %220 = load %struct.rtx_def*, %struct.rtx_def** %rtx395, align 8
  %221 = bitcast %struct.rtx_def* %220 to i32*
  %bf.load396 = load i32, i32* %221, align 8
  %bf.lshr397 = lshr i32 %bf.load396, 16
  %bf.clear398 = and i32 %bf.lshr397, 255
  %idxprom399 = sext i32 %bf.clear398 to i64
  %arrayidx400 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom399
  %222 = load i16, i16* %arrayidx400, align 2
  %conv401 = zext i16 %222 to i32
  %sub402 = sub nsw i32 %conv401, 1
  %sh_prom = zext i32 %sub402 to i64
  %shl = shl i64 1, %sh_prom
  %and403 = and i64 %218, %shl
  %tobool404 = icmp ne i64 %and403, 0
  br i1 %tobool404, label %if.then.405, label %if.end.419

if.then.405:                                      ; preds = %if.then.383
  %223 = load i32, i32* %mode.addr, align 4
  %idxprom406 = sext i32 %223 to i64
  %arrayidx407 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom406
  %224 = load i64, i64* %arrayidx407, align 8
  %225 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld408 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %225, i32 0, i32 1
  %arrayidx409 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld408, i32 0, i64 0
  %rtx410 = bitcast %union.rtunion_def* %arrayidx409 to %struct.rtx_def**
  %226 = load %struct.rtx_def*, %struct.rtx_def** %rtx410, align 8
  %227 = bitcast %struct.rtx_def* %226 to i32*
  %bf.load411 = load i32, i32* %227, align 8
  %bf.lshr412 = lshr i32 %bf.load411, 16
  %bf.clear413 = and i32 %bf.lshr412, 255
  %idxprom414 = sext i32 %bf.clear413 to i64
  %arrayidx415 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom414
  %228 = load i64, i64* %arrayidx415, align 8
  %neg416 = xor i64 %228, -1
  %and417 = and i64 %224, %neg416
  %229 = load i64, i64* %inner_nz, align 8
  %or418 = or i64 %229, %and417
  store i64 %or418, i64* %inner_nz, align 8
  br label %if.end.419

if.end.419:                                       ; preds = %if.then.405, %if.then.383
  br label %if.end.420

if.end.420:                                       ; preds = %if.end.419, %sw.bb.370
  %230 = load i64, i64* %inner_nz, align 8
  %231 = load i64, i64* %nonzero, align 8
  %and421 = and i64 %231, %230
  store i64 %and421, i64* %nonzero, align 8
  br label %sw.epilog.810

sw.bb.422:                                        ; preds = %if.end.111
  %232 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld423 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %232, i32 0, i32 1
  %arrayidx424 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld423, i32 0, i64 0
  %rtx425 = bitcast %union.rtunion_def* %arrayidx424 to %struct.rtx_def**
  %233 = load %struct.rtx_def*, %struct.rtx_def** %rtx425, align 8
  %234 = load i32, i32* %mode.addr, align 4
  %call426 = call i64 @nonzero_bits(%struct.rtx_def* %233, i32 %234)
  %235 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld427 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %235, i32 0, i32 1
  %arrayidx428 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld427, i32 0, i64 1
  %rtx429 = bitcast %union.rtunion_def* %arrayidx428 to %struct.rtx_def**
  %236 = load %struct.rtx_def*, %struct.rtx_def** %rtx429, align 8
  %237 = load i32, i32* %mode.addr, align 4
  %call430 = call i64 @nonzero_bits(%struct.rtx_def* %236, i32 %237)
  %and431 = and i64 %call426, %call430
  %238 = load i64, i64* %nonzero, align 8
  %and432 = and i64 %238, %and431
  store i64 %and432, i64* %nonzero, align 8
  br label %sw.epilog.810

sw.bb.433:                                        ; preds = %if.end.111, %if.end.111, %if.end.111, %if.end.111, %if.end.111, %if.end.111
  %239 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld434 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %239, i32 0, i32 1
  %arrayidx435 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld434, i32 0, i64 0
  %rtx436 = bitcast %union.rtunion_def* %arrayidx435 to %struct.rtx_def**
  %240 = load %struct.rtx_def*, %struct.rtx_def** %rtx436, align 8
  %241 = load i32, i32* %mode.addr, align 4
  %call437 = call i64 @nonzero_bits(%struct.rtx_def* %240, i32 %241)
  store i64 %call437, i64* %nonzero0, align 8
  %242 = load i64, i64* %nonzero, align 8
  %243 = load i64, i64* %nonzero0, align 8
  %and438 = and i64 %242, %243
  %244 = load i64, i64* %nonzero, align 8
  %cmp439 = icmp ne i64 %and438, %244
  br i1 %cmp439, label %if.then.441, label %if.end.448

if.then.441:                                      ; preds = %sw.bb.433
  %245 = load i64, i64* %nonzero0, align 8
  %246 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld442 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %246, i32 0, i32 1
  %arrayidx443 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld442, i32 0, i64 1
  %rtx444 = bitcast %union.rtunion_def* %arrayidx443 to %struct.rtx_def**
  %247 = load %struct.rtx_def*, %struct.rtx_def** %rtx444, align 8
  %248 = load i32, i32* %mode.addr, align 4
  %call445 = call i64 @nonzero_bits(%struct.rtx_def* %247, i32 %248)
  %or446 = or i64 %245, %call445
  %249 = load i64, i64* %nonzero, align 8
  %and447 = and i64 %249, %or446
  store i64 %and447, i64* %nonzero, align 8
  br label %if.end.448

if.end.448:                                       ; preds = %if.then.441, %sw.bb.433
  br label %sw.epilog.810

sw.bb.449:                                        ; preds = %if.end.111, %if.end.111, %if.end.111, %if.end.111, %if.end.111, %if.end.111, %if.end.111
  %250 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld450 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %250, i32 0, i32 1
  %arrayidx451 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld450, i32 0, i64 0
  %rtx452 = bitcast %union.rtunion_def* %arrayidx451 to %struct.rtx_def**
  %251 = load %struct.rtx_def*, %struct.rtx_def** %rtx452, align 8
  %252 = load i32, i32* %mode.addr, align 4
  %call453 = call i64 @nonzero_bits(%struct.rtx_def* %251, i32 %252)
  store i64 %call453, i64* %nz0, align 8
  %253 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld454 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %253, i32 0, i32 1
  %arrayidx455 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld454, i32 0, i64 1
  %rtx456 = bitcast %union.rtunion_def* %arrayidx455 to %struct.rtx_def**
  %254 = load %struct.rtx_def*, %struct.rtx_def** %rtx456, align 8
  %255 = load i32, i32* %mode.addr, align 4
  %call457 = call i64 @nonzero_bits(%struct.rtx_def* %254, i32 %255)
  store i64 %call457, i64* %nz1, align 8
  %256 = load i64, i64* %nz0, align 8
  %call458 = call i32 @floor_log2_wide(i64 %256)
  %add = add nsw i32 %call458, 1
  store i32 %add, i32* %width0, align 4
  %257 = load i64, i64* %nz1, align 8
  %call459 = call i32 @floor_log2_wide(i64 %257)
  %add460 = add nsw i32 %call459, 1
  store i32 %add460, i32* %width1, align 4
  %258 = load i64, i64* %nz0, align 8
  %259 = load i64, i64* %nz0, align 8
  %sub461 = sub i64 0, %259
  %and462 = and i64 %258, %sub461
  %call463 = call i32 @floor_log2_wide(i64 %and462)
  store i32 %call463, i32* %low0, align 4
  %260 = load i64, i64* %nz1, align 8
  %261 = load i64, i64* %nz1, align 8
  %sub464 = sub i64 0, %261
  %and465 = and i64 %260, %sub464
  %call466 = call i32 @floor_log2_wide(i64 %and465)
  store i32 %call466, i32* %low1, align 4
  %262 = load i64, i64* %nz0, align 8
  %263 = load i32, i32* %mode_width, align 4
  %sub467 = sub i32 %263, 1
  %sh_prom468 = zext i32 %sub467 to i64
  %shl469 = shl i64 1, %sh_prom468
  %and470 = and i64 %262, %shl469
  store i64 %and470, i64* %op0_maybe_minusp, align 8
  %264 = load i64, i64* %nz1, align 8
  %265 = load i32, i32* %mode_width, align 4
  %sub471 = sub i32 %265, 1
  %sh_prom472 = zext i32 %sub471 to i64
  %shl473 = shl i64 1, %sh_prom472
  %and474 = and i64 %264, %shl473
  store i64 %and474, i64* %op1_maybe_minusp, align 8
  %266 = load i32, i32* %mode_width, align 4
  store i32 %266, i32* %result_width, align 4
  store i32 0, i32* %result_low, align 4
  %267 = load i32, i32* %code, align 4
  switch i32 %267, label %sw.default [
    i32 75, label %sw.bb.475
    i32 76, label %sw.bb.489
    i32 78, label %sw.bb.496
    i32 79, label %sw.bb.499
    i32 81, label %sw.bb.509
    i32 80, label %sw.bb.514
    i32 82, label %sw.bb.536
  ]

sw.bb.475:                                        ; preds = %sw.bb.449
  %268 = load i32, i32* %width0, align 4
  %269 = load i32, i32* %width1, align 4
  %cmp476 = icmp sgt i32 %268, %269
  br i1 %cmp476, label %cond.true.478, label %cond.false.479

cond.true.478:                                    ; preds = %sw.bb.475
  %270 = load i32, i32* %width0, align 4
  br label %cond.end.480

cond.false.479:                                   ; preds = %sw.bb.475
  %271 = load i32, i32* %width1, align 4
  br label %cond.end.480

cond.end.480:                                     ; preds = %cond.false.479, %cond.true.478
  %cond481 = phi i32 [ %270, %cond.true.478 ], [ %271, %cond.false.479 ]
  %add482 = add nsw i32 %cond481, 1
  store i32 %add482, i32* %result_width, align 4
  %272 = load i32, i32* %low0, align 4
  %273 = load i32, i32* %low1, align 4
  %cmp483 = icmp slt i32 %272, %273
  br i1 %cmp483, label %cond.true.485, label %cond.false.486

cond.true.485:                                    ; preds = %cond.end.480
  %274 = load i32, i32* %low0, align 4
  br label %cond.end.487

cond.false.486:                                   ; preds = %cond.end.480
  %275 = load i32, i32* %low1, align 4
  br label %cond.end.487

cond.end.487:                                     ; preds = %cond.false.486, %cond.true.485
  %cond488 = phi i32 [ %274, %cond.true.485 ], [ %275, %cond.false.486 ]
  store i32 %cond488, i32* %result_low, align 4
  br label %sw.epilog

sw.bb.489:                                        ; preds = %sw.bb.449
  %276 = load i32, i32* %low0, align 4
  %277 = load i32, i32* %low1, align 4
  %cmp490 = icmp slt i32 %276, %277
  br i1 %cmp490, label %cond.true.492, label %cond.false.493

cond.true.492:                                    ; preds = %sw.bb.489
  %278 = load i32, i32* %low0, align 4
  br label %cond.end.494

cond.false.493:                                   ; preds = %sw.bb.489
  %279 = load i32, i32* %low1, align 4
  br label %cond.end.494

cond.end.494:                                     ; preds = %cond.false.493, %cond.true.492
  %cond495 = phi i32 [ %278, %cond.true.492 ], [ %279, %cond.false.493 ]
  store i32 %cond495, i32* %result_low, align 4
  br label %sw.epilog

sw.bb.496:                                        ; preds = %sw.bb.449
  %280 = load i32, i32* %width0, align 4
  %281 = load i32, i32* %width1, align 4
  %add497 = add nsw i32 %280, %281
  store i32 %add497, i32* %result_width, align 4
  %282 = load i32, i32* %low0, align 4
  %283 = load i32, i32* %low1, align 4
  %add498 = add nsw i32 %282, %283
  store i32 %add498, i32* %result_low, align 4
  br label %sw.epilog

sw.bb.499:                                        ; preds = %sw.bb.449
  %284 = load i32, i32* %width1, align 4
  %cmp500 = icmp eq i32 %284, 0
  br i1 %cmp500, label %if.then.502, label %if.end.503

if.then.502:                                      ; preds = %sw.bb.499
  br label %sw.epilog

if.end.503:                                       ; preds = %sw.bb.499
  %285 = load i64, i64* %op0_maybe_minusp, align 8
  %tobool504 = icmp ne i64 %285, 0
  br i1 %tobool504, label %if.end.508, label %land.lhs.true.505

land.lhs.true.505:                                ; preds = %if.end.503
  %286 = load i64, i64* %op1_maybe_minusp, align 8
  %tobool506 = icmp ne i64 %286, 0
  br i1 %tobool506, label %if.end.508, label %if.then.507

if.then.507:                                      ; preds = %land.lhs.true.505
  %287 = load i32, i32* %width0, align 4
  store i32 %287, i32* %result_width, align 4
  br label %if.end.508

if.end.508:                                       ; preds = %if.then.507, %land.lhs.true.505, %if.end.503
  br label %sw.epilog

sw.bb.509:                                        ; preds = %sw.bb.449
  %288 = load i32, i32* %width1, align 4
  %cmp510 = icmp eq i32 %288, 0
  br i1 %cmp510, label %if.then.512, label %if.end.513

if.then.512:                                      ; preds = %sw.bb.509
  br label %sw.epilog

if.end.513:                                       ; preds = %sw.bb.509
  %289 = load i32, i32* %width0, align 4
  store i32 %289, i32* %result_width, align 4
  br label %sw.epilog

sw.bb.514:                                        ; preds = %sw.bb.449
  %290 = load i32, i32* %width1, align 4
  %cmp515 = icmp eq i32 %290, 0
  br i1 %cmp515, label %if.then.517, label %if.end.518

if.then.517:                                      ; preds = %sw.bb.514
  br label %sw.epilog

if.end.518:                                       ; preds = %sw.bb.514
  %291 = load i64, i64* %op0_maybe_minusp, align 8
  %tobool519 = icmp ne i64 %291, 0
  br i1 %tobool519, label %if.end.529, label %land.lhs.true.520

land.lhs.true.520:                                ; preds = %if.end.518
  %292 = load i64, i64* %op1_maybe_minusp, align 8
  %tobool521 = icmp ne i64 %292, 0
  br i1 %tobool521, label %if.end.529, label %if.then.522

if.then.522:                                      ; preds = %land.lhs.true.520
  %293 = load i32, i32* %width0, align 4
  %294 = load i32, i32* %width1, align 4
  %cmp523 = icmp slt i32 %293, %294
  br i1 %cmp523, label %cond.true.525, label %cond.false.526

cond.true.525:                                    ; preds = %if.then.522
  %295 = load i32, i32* %width0, align 4
  br label %cond.end.527

cond.false.526:                                   ; preds = %if.then.522
  %296 = load i32, i32* %width1, align 4
  br label %cond.end.527

cond.end.527:                                     ; preds = %cond.false.526, %cond.true.525
  %cond528 = phi i32 [ %295, %cond.true.525 ], [ %296, %cond.false.526 ]
  store i32 %cond528, i32* %result_width, align 4
  br label %if.end.529

if.end.529:                                       ; preds = %cond.end.527, %land.lhs.true.520, %if.end.518
  %297 = load i32, i32* %low0, align 4
  %298 = load i32, i32* %low1, align 4
  %cmp530 = icmp slt i32 %297, %298
  br i1 %cmp530, label %cond.true.532, label %cond.false.533

cond.true.532:                                    ; preds = %if.end.529
  %299 = load i32, i32* %low0, align 4
  br label %cond.end.534

cond.false.533:                                   ; preds = %if.end.529
  %300 = load i32, i32* %low1, align 4
  br label %cond.end.534

cond.end.534:                                     ; preds = %cond.false.533, %cond.true.532
  %cond535 = phi i32 [ %299, %cond.true.532 ], [ %300, %cond.false.533 ]
  store i32 %cond535, i32* %result_low, align 4
  br label %sw.epilog

sw.bb.536:                                        ; preds = %sw.bb.449
  %301 = load i32, i32* %width1, align 4
  %cmp537 = icmp eq i32 %301, 0
  br i1 %cmp537, label %if.then.539, label %if.end.540

if.then.539:                                      ; preds = %sw.bb.536
  br label %sw.epilog

if.end.540:                                       ; preds = %sw.bb.536
  %302 = load i32, i32* %width0, align 4
  %303 = load i32, i32* %width1, align 4
  %cmp541 = icmp slt i32 %302, %303
  br i1 %cmp541, label %cond.true.543, label %cond.false.544

cond.true.543:                                    ; preds = %if.end.540
  %304 = load i32, i32* %width0, align 4
  br label %cond.end.545

cond.false.544:                                   ; preds = %if.end.540
  %305 = load i32, i32* %width1, align 4
  br label %cond.end.545

cond.end.545:                                     ; preds = %cond.false.544, %cond.true.543
  %cond546 = phi i32 [ %304, %cond.true.543 ], [ %305, %cond.false.544 ]
  store i32 %cond546, i32* %result_width, align 4
  %306 = load i32, i32* %low0, align 4
  %307 = load i32, i32* %low1, align 4
  %cmp547 = icmp slt i32 %306, %307
  br i1 %cmp547, label %cond.true.549, label %cond.false.550

cond.true.549:                                    ; preds = %cond.end.545
  %308 = load i32, i32* %low0, align 4
  br label %cond.end.551

cond.false.550:                                   ; preds = %cond.end.545
  %309 = load i32, i32* %low1, align 4
  br label %cond.end.551

cond.end.551:                                     ; preds = %cond.false.550, %cond.true.549
  %cond552 = phi i32 [ %308, %cond.true.549 ], [ %309, %cond.false.550 ]
  store i32 %cond552, i32* %result_low, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %sw.bb.449
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 8256, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.nonzero_bits, i32 0, i32 0)) #5
  unreachable

sw.epilog:                                        ; preds = %cond.end.551, %if.then.539, %cond.end.534, %if.then.517, %if.end.513, %if.then.512, %if.end.508, %if.then.502, %sw.bb.496, %cond.end.494, %cond.end.487
  %310 = load i32, i32* %result_width, align 4
  %311 = load i32, i32* %mode_width, align 4
  %cmp553 = icmp ult i32 %310, %311
  br i1 %cmp553, label %if.then.555, label %if.end.560

if.then.555:                                      ; preds = %sw.epilog
  %312 = load i32, i32* %result_width, align 4
  %sh_prom556 = zext i32 %312 to i64
  %shl557 = shl i64 1, %sh_prom556
  %sub558 = sub nsw i64 %shl557, 1
  %313 = load i64, i64* %nonzero, align 8
  %and559 = and i64 %313, %sub558
  store i64 %and559, i64* %nonzero, align 8
  br label %if.end.560

if.end.560:                                       ; preds = %if.then.555, %sw.epilog
  %314 = load i32, i32* %result_low, align 4
  %cmp561 = icmp sgt i32 %314, 0
  br i1 %cmp561, label %if.then.563, label %if.end.569

if.then.563:                                      ; preds = %if.end.560
  %315 = load i32, i32* %result_low, align 4
  %sh_prom564 = zext i32 %315 to i64
  %shl565 = shl i64 1, %sh_prom564
  %sub566 = sub nsw i64 %shl565, 1
  %neg567 = xor i64 %sub566, -1
  %316 = load i64, i64* %nonzero, align 8
  %and568 = and i64 %316, %neg567
  store i64 %and568, i64* %nonzero, align 8
  br label %if.end.569

if.end.569:                                       ; preds = %if.then.563, %if.end.560
  br label %sw.epilog.810

sw.bb.570:                                        ; preds = %if.end.111
  %317 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld571 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %317, i32 0, i32 1
  %arrayidx572 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld571, i32 0, i64 1
  %rtx573 = bitcast %union.rtunion_def* %arrayidx572 to %struct.rtx_def**
  %318 = load %struct.rtx_def*, %struct.rtx_def** %rtx573, align 8
  %319 = bitcast %struct.rtx_def* %318 to i32*
  %bf.load574 = load i32, i32* %319, align 8
  %bf.clear575 = and i32 %bf.load574, 65535
  %cmp576 = icmp eq i32 %bf.clear575, 54
  br i1 %cmp576, label %land.lhs.true.578, label %if.end.597

land.lhs.true.578:                                ; preds = %sw.bb.570
  %320 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld579 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %320, i32 0, i32 1
  %arrayidx580 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld579, i32 0, i64 1
  %rtx581 = bitcast %union.rtunion_def* %arrayidx580 to %struct.rtx_def**
  %321 = load %struct.rtx_def*, %struct.rtx_def** %rtx581, align 8
  %fld582 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %321, i32 0, i32 1
  %arrayidx583 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld582, i32 0, i64 0
  %rtwint584 = bitcast %union.rtunion_def* %arrayidx583 to i64*
  %322 = load i64, i64* %rtwint584, align 8
  %cmp585 = icmp slt i64 %322, 64
  br i1 %cmp585, label %if.then.587, label %if.end.597

if.then.587:                                      ; preds = %land.lhs.true.578
  %323 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld588 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %323, i32 0, i32 1
  %arrayidx589 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld588, i32 0, i64 1
  %rtx590 = bitcast %union.rtunion_def* %arrayidx589 to %struct.rtx_def**
  %324 = load %struct.rtx_def*, %struct.rtx_def** %rtx590, align 8
  %fld591 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %324, i32 0, i32 1
  %arrayidx592 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld591, i32 0, i64 0
  %rtwint593 = bitcast %union.rtunion_def* %arrayidx592 to i64*
  %325 = load i64, i64* %rtwint593, align 8
  %shl594 = shl i64 1, %325
  %sub595 = sub nsw i64 %shl594, 1
  %326 = load i64, i64* %nonzero, align 8
  %and596 = and i64 %326, %sub595
  store i64 %and596, i64* %nonzero, align 8
  br label %if.end.597

if.end.597:                                       ; preds = %if.then.587, %land.lhs.true.578, %sw.bb.570
  br label %sw.epilog.810

sw.bb.598:                                        ; preds = %if.end.111
  %327 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %328 = bitcast %struct.rtx_def* %327 to i32*
  %bf.load599 = load i32, i32* %328, align 8
  %bf.lshr600 = lshr i32 %bf.load599, 28
  %bf.clear601 = and i32 %bf.lshr600, 1
  %tobool602 = icmp ne i32 %bf.clear601, 0
  br i1 %tobool602, label %land.lhs.true.603, label %if.end.622

land.lhs.true.603:                                ; preds = %sw.bb.598
  %329 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %330 = bitcast %struct.rtx_def* %329 to i32*
  %bf.load604 = load i32, i32* %330, align 8
  %bf.lshr605 = lshr i32 %bf.load604, 26
  %bf.clear606 = and i32 %bf.lshr605, 1
  %tobool607 = icmp ne i32 %bf.clear606, 0
  br i1 %tobool607, label %if.then.608, label %if.end.622

if.then.608:                                      ; preds = %land.lhs.true.603
  %331 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %332 = bitcast %struct.rtx_def* %331 to i32*
  %bf.load609 = load i32, i32* %332, align 8
  %bf.lshr610 = lshr i32 %bf.load609, 16
  %bf.clear611 = and i32 %bf.lshr610, 255
  %idxprom612 = sext i32 %bf.clear611 to i64
  %arrayidx613 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom612
  %333 = load i64, i64* %arrayidx613, align 8
  %334 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld614 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %334, i32 0, i32 1
  %arrayidx615 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld614, i32 0, i64 0
  %rtx616 = bitcast %union.rtunion_def* %arrayidx615 to %struct.rtx_def**
  %335 = load %struct.rtx_def*, %struct.rtx_def** %rtx616, align 8
  %336 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %337 = bitcast %struct.rtx_def* %336 to i32*
  %bf.load617 = load i32, i32* %337, align 8
  %bf.lshr618 = lshr i32 %bf.load617, 16
  %bf.clear619 = and i32 %bf.lshr618, 255
  %call620 = call i64 @nonzero_bits(%struct.rtx_def* %335, i32 %bf.clear619)
  %and621 = and i64 %333, %call620
  store i64 %and621, i64* %nonzero, align 8
  br label %if.end.622

if.end.622:                                       ; preds = %if.then.608, %land.lhs.true.603, %sw.bb.598
  %338 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld623 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %338, i32 0, i32 1
  %arrayidx624 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld623, i32 0, i64 0
  %rtx625 = bitcast %union.rtunion_def* %arrayidx624 to %struct.rtx_def**
  %339 = load %struct.rtx_def*, %struct.rtx_def** %rtx625, align 8
  %340 = bitcast %struct.rtx_def* %339 to i32*
  %bf.load626 = load i32, i32* %340, align 8
  %bf.lshr627 = lshr i32 %bf.load626, 16
  %bf.clear628 = and i32 %bf.lshr627, 255
  %idxprom629 = sext i32 %bf.clear628 to i64
  %arrayidx630 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom629
  %341 = load i16, i16* %arrayidx630, align 2
  %conv631 = zext i16 %341 to i32
  %342 = load i32, i32* @target_flags, align 4
  %and632 = and i32 %342, 33554432
  %tobool633 = icmp ne i32 %and632, 0
  %cond634 = select i1 %tobool633, i32 64, i32 32
  %cmp635 = icmp sle i32 %conv631, %cond634
  br i1 %cmp635, label %land.lhs.true.637, label %if.end.690

land.lhs.true.637:                                ; preds = %if.end.622
  %343 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld638 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %343, i32 0, i32 1
  %arrayidx639 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld638, i32 0, i64 0
  %rtx640 = bitcast %union.rtunion_def* %arrayidx639 to %struct.rtx_def**
  %344 = load %struct.rtx_def*, %struct.rtx_def** %rtx640, align 8
  %345 = bitcast %struct.rtx_def* %344 to i32*
  %bf.load641 = load i32, i32* %345, align 8
  %bf.lshr642 = lshr i32 %bf.load641, 16
  %bf.clear643 = and i32 %bf.lshr642, 255
  %idxprom644 = sext i32 %bf.clear643 to i64
  %arrayidx645 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom644
  %346 = load i16, i16* %arrayidx645, align 2
  %conv646 = zext i16 %346 to i32
  %cmp647 = icmp sle i32 %conv646, 64
  br i1 %cmp647, label %if.then.649, label %if.end.690

if.then.649:                                      ; preds = %land.lhs.true.637
  %347 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld650 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %347, i32 0, i32 1
  %arrayidx651 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld650, i32 0, i64 0
  %rtx652 = bitcast %union.rtunion_def* %arrayidx651 to %struct.rtx_def**
  %348 = load %struct.rtx_def*, %struct.rtx_def** %rtx652, align 8
  %349 = load i32, i32* %mode.addr, align 4
  %call653 = call i64 @nonzero_bits(%struct.rtx_def* %348, i32 %349)
  %350 = load i64, i64* %nonzero, align 8
  %and654 = and i64 %350, %call653
  store i64 %and654, i64* %nonzero, align 8
  %351 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %352 = bitcast %struct.rtx_def* %351 to i32*
  %bf.load655 = load i32, i32* %352, align 8
  %bf.lshr656 = lshr i32 %bf.load655, 16
  %bf.clear657 = and i32 %bf.lshr656, 255
  %idxprom658 = sext i32 %bf.clear657 to i64
  %arrayidx659 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom658
  %353 = load i8, i8* %arrayidx659, align 1
  %conv660 = zext i8 %353 to i32
  %354 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld661 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %354, i32 0, i32 1
  %arrayidx662 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld661, i32 0, i64 0
  %rtx663 = bitcast %union.rtunion_def* %arrayidx662 to %struct.rtx_def**
  %355 = load %struct.rtx_def*, %struct.rtx_def** %rtx663, align 8
  %356 = bitcast %struct.rtx_def* %355 to i32*
  %bf.load664 = load i32, i32* %356, align 8
  %bf.lshr665 = lshr i32 %bf.load664, 16
  %bf.clear666 = and i32 %bf.lshr665, 255
  %idxprom667 = sext i32 %bf.clear666 to i64
  %arrayidx668 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom667
  %357 = load i8, i8* %arrayidx668, align 1
  %conv669 = zext i8 %357 to i32
  %cmp670 = icmp sgt i32 %conv660, %conv669
  br i1 %cmp670, label %if.then.672, label %if.end.689

if.then.672:                                      ; preds = %if.then.649
  %358 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %359 = bitcast %struct.rtx_def* %358 to i32*
  %bf.load673 = load i32, i32* %359, align 8
  %bf.lshr674 = lshr i32 %bf.load673, 16
  %bf.clear675 = and i32 %bf.lshr674, 255
  %idxprom676 = sext i32 %bf.clear675 to i64
  %arrayidx677 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom676
  %360 = load i64, i64* %arrayidx677, align 8
  %361 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld678 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %361, i32 0, i32 1
  %arrayidx679 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld678, i32 0, i64 0
  %rtx680 = bitcast %union.rtunion_def* %arrayidx679 to %struct.rtx_def**
  %362 = load %struct.rtx_def*, %struct.rtx_def** %rtx680, align 8
  %363 = bitcast %struct.rtx_def* %362 to i32*
  %bf.load681 = load i32, i32* %363, align 8
  %bf.lshr682 = lshr i32 %bf.load681, 16
  %bf.clear683 = and i32 %bf.lshr682, 255
  %idxprom684 = sext i32 %bf.clear683 to i64
  %arrayidx685 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom684
  %364 = load i64, i64* %arrayidx685, align 8
  %neg686 = xor i64 %364, -1
  %and687 = and i64 %360, %neg686
  %365 = load i64, i64* %nonzero, align 8
  %or688 = or i64 %365, %and687
  store i64 %or688, i64* %nonzero, align 8
  br label %if.end.689

if.end.689:                                       ; preds = %if.then.672, %if.then.649
  br label %if.end.690

if.end.690:                                       ; preds = %if.end.689, %land.lhs.true.637, %if.end.622
  br label %sw.epilog.810

sw.bb.691:                                        ; preds = %if.end.111, %if.end.111, %if.end.111, %if.end.111
  %366 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld692 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %366, i32 0, i32 1
  %arrayidx693 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld692, i32 0, i64 1
  %rtx694 = bitcast %union.rtunion_def* %arrayidx693 to %struct.rtx_def**
  %367 = load %struct.rtx_def*, %struct.rtx_def** %rtx694, align 8
  %368 = bitcast %struct.rtx_def* %367 to i32*
  %bf.load695 = load i32, i32* %368, align 8
  %bf.clear696 = and i32 %bf.load695, 65535
  %cmp697 = icmp eq i32 %bf.clear696, 54
  br i1 %cmp697, label %land.lhs.true.699, label %if.end.790

land.lhs.true.699:                                ; preds = %sw.bb.691
  %369 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld700 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %369, i32 0, i32 1
  %arrayidx701 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld700, i32 0, i64 1
  %rtx702 = bitcast %union.rtunion_def* %arrayidx701 to %struct.rtx_def**
  %370 = load %struct.rtx_def*, %struct.rtx_def** %rtx702, align 8
  %fld703 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %370, i32 0, i32 1
  %arrayidx704 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld703, i32 0, i64 0
  %rtwint705 = bitcast %union.rtunion_def* %arrayidx704 to i64*
  %371 = load i64, i64* %rtwint705, align 8
  %cmp706 = icmp sge i64 %371, 0
  br i1 %cmp706, label %land.lhs.true.708, label %if.end.790

land.lhs.true.708:                                ; preds = %land.lhs.true.699
  %372 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld709 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %372, i32 0, i32 1
  %arrayidx710 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld709, i32 0, i64 1
  %rtx711 = bitcast %union.rtunion_def* %arrayidx710 to %struct.rtx_def**
  %373 = load %struct.rtx_def*, %struct.rtx_def** %rtx711, align 8
  %fld712 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %373, i32 0, i32 1
  %arrayidx713 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld712, i32 0, i64 0
  %rtwint714 = bitcast %union.rtunion_def* %arrayidx713 to i64*
  %374 = load i64, i64* %rtwint714, align 8
  %cmp715 = icmp slt i64 %374, 64
  br i1 %cmp715, label %if.then.717, label %if.end.790

if.then.717:                                      ; preds = %land.lhs.true.708
  %375 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %376 = bitcast %struct.rtx_def* %375 to i32*
  %bf.load718 = load i32, i32* %376, align 8
  %bf.lshr719 = lshr i32 %bf.load718, 16
  %bf.clear720 = and i32 %bf.lshr719, 255
  store i32 %bf.clear720, i32* %inner_mode, align 4
  %377 = load i32, i32* %inner_mode, align 4
  %idxprom721 = sext i32 %377 to i64
  %arrayidx722 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom721
  %378 = load i16, i16* %arrayidx722, align 2
  %conv723 = zext i16 %378 to i32
  store i32 %conv723, i32* %width, align 4
  %379 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld724 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %379, i32 0, i32 1
  %arrayidx725 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld724, i32 0, i64 1
  %rtx726 = bitcast %union.rtunion_def* %arrayidx725 to %struct.rtx_def**
  %380 = load %struct.rtx_def*, %struct.rtx_def** %rtx726, align 8
  %fld727 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %380, i32 0, i32 1
  %arrayidx728 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld727, i32 0, i64 0
  %rtwint729 = bitcast %union.rtunion_def* %arrayidx728 to i64*
  %381 = load i64, i64* %rtwint729, align 8
  %conv730 = trunc i64 %381 to i32
  store i32 %conv730, i32* %count, align 4
  %382 = load i32, i32* %inner_mode, align 4
  %idxprom731 = sext i32 %382 to i64
  %arrayidx732 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom731
  %383 = load i64, i64* %arrayidx732, align 8
  store i64 %383, i64* %mode_mask, align 8
  %384 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld733 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %384, i32 0, i32 1
  %arrayidx734 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld733, i32 0, i64 0
  %rtx735 = bitcast %union.rtunion_def* %arrayidx734 to %struct.rtx_def**
  %385 = load %struct.rtx_def*, %struct.rtx_def** %rtx735, align 8
  %386 = load i32, i32* %mode.addr, align 4
  %call736 = call i64 @nonzero_bits(%struct.rtx_def* %385, i32 %386)
  store i64 %call736, i64* %op_nonzero, align 8
  %387 = load i64, i64* %op_nonzero, align 8
  %388 = load i64, i64* %mode_mask, align 8
  %and737 = and i64 %387, %388
  store i64 %and737, i64* %inner, align 8
  store i64 0, i64* %outer, align 8
  %389 = load i32, i32* %mode_width, align 4
  %390 = load i32, i32* %width, align 4
  %cmp738 = icmp ugt i32 %389, %390
  br i1 %cmp738, label %if.then.740, label %if.end.744

if.then.740:                                      ; preds = %if.then.717
  %391 = load i64, i64* %op_nonzero, align 8
  %392 = load i64, i64* %nonzero, align 8
  %and741 = and i64 %391, %392
  %393 = load i64, i64* %mode_mask, align 8
  %neg742 = xor i64 %393, -1
  %and743 = and i64 %and741, %neg742
  store i64 %and743, i64* %outer, align 8
  br label %if.end.744

if.end.744:                                       ; preds = %if.then.740, %if.then.717
  %394 = load i32, i32* %code, align 4
  %cmp745 = icmp eq i32 %394, 90
  br i1 %cmp745, label %if.then.747, label %if.else.749

if.then.747:                                      ; preds = %if.end.744
  %395 = load i32, i32* %count, align 4
  %396 = load i64, i64* %inner, align 8
  %sh_prom748 = zext i32 %395 to i64
  %shr = lshr i64 %396, %sh_prom748
  store i64 %shr, i64* %inner, align 8
  br label %if.end.787

if.else.749:                                      ; preds = %if.end.744
  %397 = load i32, i32* %code, align 4
  %cmp750 = icmp eq i32 %397, 89
  br i1 %cmp750, label %if.then.752, label %if.else.770

if.then.752:                                      ; preds = %if.else.749
  %398 = load i32, i32* %count, align 4
  %399 = load i64, i64* %inner, align 8
  %sh_prom753 = zext i32 %398 to i64
  %shr754 = lshr i64 %399, %sh_prom753
  store i64 %shr754, i64* %inner, align 8
  %400 = load i64, i64* %inner, align 8
  %401 = load i32, i32* %width, align 4
  %sub755 = sub i32 %401, 1
  %402 = load i32, i32* %count, align 4
  %sub756 = sub i32 %sub755, %402
  %sh_prom757 = zext i32 %sub756 to i64
  %shl758 = shl i64 1, %sh_prom757
  %and759 = and i64 %400, %shl758
  %tobool760 = icmp ne i64 %and759, 0
  br i1 %tobool760, label %if.then.761, label %if.end.769

if.then.761:                                      ; preds = %if.then.752
  %403 = load i32, i32* %count, align 4
  %sh_prom762 = zext i32 %403 to i64
  %shl763 = shl i64 1, %sh_prom762
  %sub764 = sub nsw i64 %shl763, 1
  %404 = load i32, i32* %width, align 4
  %405 = load i32, i32* %count, align 4
  %sub765 = sub i32 %404, %405
  %sh_prom766 = zext i32 %sub765 to i64
  %shl767 = shl i64 %sub764, %sh_prom766
  %406 = load i64, i64* %inner, align 8
  %or768 = or i64 %406, %shl767
  store i64 %or768, i64* %inner, align 8
  br label %if.end.769

if.end.769:                                       ; preds = %if.then.761, %if.then.752
  br label %if.end.786

if.else.770:                                      ; preds = %if.else.749
  %407 = load i32, i32* %code, align 4
  %cmp771 = icmp eq i32 %407, 87
  br i1 %cmp771, label %if.then.773, label %if.else.776

if.then.773:                                      ; preds = %if.else.770
  %408 = load i32, i32* %count, align 4
  %409 = load i64, i64* %inner, align 8
  %sh_prom774 = zext i32 %408 to i64
  %shl775 = shl i64 %409, %sh_prom774
  store i64 %shl775, i64* %inner, align 8
  br label %if.end.785

if.else.776:                                      ; preds = %if.else.770
  %410 = load i64, i64* %inner, align 8
  %411 = load i32, i32* %count, align 4
  %412 = load i32, i32* %width, align 4
  %rem = urem i32 %411, %412
  %sh_prom777 = zext i32 %rem to i64
  %shl778 = shl i64 %410, %sh_prom777
  %413 = load i64, i64* %inner, align 8
  %414 = load i32, i32* %width, align 4
  %415 = load i32, i32* %count, align 4
  %416 = load i32, i32* %width, align 4
  %rem779 = urem i32 %415, %416
  %sub780 = sub i32 %414, %rem779
  %sh_prom781 = zext i32 %sub780 to i64
  %shr782 = lshr i64 %413, %sh_prom781
  %or783 = or i64 %shl778, %shr782
  %417 = load i64, i64* %mode_mask, align 8
  %and784 = and i64 %or783, %417
  store i64 %and784, i64* %inner, align 8
  br label %if.end.785

if.end.785:                                       ; preds = %if.else.776, %if.then.773
  br label %if.end.786

if.end.786:                                       ; preds = %if.end.785, %if.end.769
  br label %if.end.787

if.end.787:                                       ; preds = %if.end.786, %if.then.747
  %418 = load i64, i64* %outer, align 8
  %419 = load i64, i64* %inner, align 8
  %or788 = or i64 %418, %419
  %420 = load i64, i64* %nonzero, align 8
  %and789 = and i64 %420, %or788
  store i64 %and789, i64* %nonzero, align 8
  br label %if.end.790

if.end.790:                                       ; preds = %if.end.787, %land.lhs.true.708, %land.lhs.true.699, %sw.bb.691
  br label %sw.epilog.810

sw.bb.791:                                        ; preds = %if.end.111
  %421 = load i32, i32* %mode_width, align 4
  %conv792 = zext i32 %421 to i64
  %call793 = call i32 @floor_log2_wide(i64 %conv792)
  %add794 = add nsw i32 %call793, 1
  %sh_prom795 = zext i32 %add794 to i64
  %shl796 = shl i64 1, %sh_prom795
  %sub797 = sub nsw i64 %shl796, 1
  store i64 %sub797, i64* %nonzero, align 8
  br label %sw.epilog.810

sw.bb.798:                                        ; preds = %if.end.111
  %422 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld799 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %422, i32 0, i32 1
  %arrayidx800 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld799, i32 0, i64 1
  %rtx801 = bitcast %union.rtunion_def* %arrayidx800 to %struct.rtx_def**
  %423 = load %struct.rtx_def*, %struct.rtx_def** %rtx801, align 8
  %424 = load i32, i32* %mode.addr, align 4
  %call802 = call i64 @nonzero_bits(%struct.rtx_def* %423, i32 %424)
  %425 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld803 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %425, i32 0, i32 1
  %arrayidx804 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld803, i32 0, i64 2
  %rtx805 = bitcast %union.rtunion_def* %arrayidx804 to %struct.rtx_def**
  %426 = load %struct.rtx_def*, %struct.rtx_def** %rtx805, align 8
  %427 = load i32, i32* %mode.addr, align 4
  %call806 = call i64 @nonzero_bits(%struct.rtx_def* %426, i32 %427)
  %or807 = or i64 %call802, %call806
  %428 = load i64, i64* %nonzero, align 8
  %and808 = and i64 %428, %or807
  store i64 %and808, i64* %nonzero, align 8
  br label %sw.epilog.810

sw.default.809:                                   ; preds = %if.end.111
  br label %sw.epilog.810

sw.epilog.810:                                    ; preds = %sw.default.809, %sw.bb.798, %sw.bb.791, %if.end.790, %if.end.690, %if.end.597, %if.end.569, %if.end.448, %sw.bb.422, %if.end.420, %if.end.369, %sw.bb.337, %sw.bb.336, %if.end.335, %if.end.314, %sw.bb.304
  %429 = load i64, i64* %nonzero, align 8
  store i64 %429, i64* %retval
  br label %return

return:                                           ; preds = %sw.epilog.810, %sw.bb.301, %if.else.300, %if.end.298, %if.then.264, %if.then.254, %if.then.98, %if.then.56, %if.then
  %430 = load i64, i64* %retval
  ret i64 %430
}

; Function Attrs: nounwind uwtable
define internal i32 @num_sign_bit_copies(%struct.rtx_def* %x, i32 %mode) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %bitwidth = alloca i32, align 4
  %num0 = alloca i32, align 4
  %num1 = alloca i32, align 4
  %result = alloca i32, align 4
  %nonzero = alloca i64, align 8
  %tem = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %mode, i32* %mode.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %2 = load i32, i32* %mode.addr, align 4
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load1 = load i32, i32* %4, align 8
  %bf.lshr = lshr i32 %bf.load1, 16
  %bf.clear2 = and i32 %bf.lshr, 255
  store i32 %bf.clear2, i32* %mode.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %mode.addr, align 4
  %cmp3 = icmp eq i32 %5, 0
  br i1 %cmp3, label %if.then.34, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i32, i32* %mode.addr, align 4
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %7 = load i32, i32* %arrayidx, align 4
  %cmp4 = icmp eq i32 %7, 2
  br i1 %cmp4, label %if.then.34, label %lor.lhs.false.5

lor.lhs.false.5:                                  ; preds = %lor.lhs.false
  %8 = load i32, i32* %mode.addr, align 4
  %idxprom6 = sext i32 %8 to i64
  %arrayidx7 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom6
  %9 = load i32, i32* %arrayidx7, align 4
  %cmp8 = icmp eq i32 %9, 6
  br i1 %cmp8, label %if.then.34, label %lor.lhs.false.9

lor.lhs.false.9:                                  ; preds = %lor.lhs.false.5
  %10 = load i32, i32* %mode.addr, align 4
  %idxprom10 = sext i32 %10 to i64
  %arrayidx11 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom10
  %11 = load i32, i32* %arrayidx11, align 4
  %cmp12 = icmp eq i32 %11, 8
  br i1 %cmp12, label %if.then.34, label %lor.lhs.false.13

lor.lhs.false.13:                                 ; preds = %lor.lhs.false.9
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load14 = load i32, i32* %13, align 8
  %bf.lshr15 = lshr i32 %bf.load14, 16
  %bf.clear16 = and i32 %bf.lshr15, 255
  %idxprom17 = sext i32 %bf.clear16 to i64
  %arrayidx18 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom17
  %14 = load i32, i32* %arrayidx18, align 4
  %cmp19 = icmp eq i32 %14, 2
  br i1 %cmp19, label %if.then.34, label %lor.lhs.false.20

lor.lhs.false.20:                                 ; preds = %lor.lhs.false.13
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %16 = bitcast %struct.rtx_def* %15 to i32*
  %bf.load21 = load i32, i32* %16, align 8
  %bf.lshr22 = lshr i32 %bf.load21, 16
  %bf.clear23 = and i32 %bf.lshr22, 255
  %idxprom24 = sext i32 %bf.clear23 to i64
  %arrayidx25 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom24
  %17 = load i32, i32* %arrayidx25, align 4
  %cmp26 = icmp eq i32 %17, 6
  br i1 %cmp26, label %if.then.34, label %lor.lhs.false.27

lor.lhs.false.27:                                 ; preds = %lor.lhs.false.20
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load28 = load i32, i32* %19, align 8
  %bf.lshr29 = lshr i32 %bf.load28, 16
  %bf.clear30 = and i32 %bf.lshr29, 255
  %idxprom31 = sext i32 %bf.clear30 to i64
  %arrayidx32 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom31
  %20 = load i32, i32* %arrayidx32, align 4
  %cmp33 = icmp eq i32 %20, 8
  br i1 %cmp33, label %if.then.34, label %if.end.35

if.then.34:                                       ; preds = %lor.lhs.false.27, %lor.lhs.false.20, %lor.lhs.false.13, %lor.lhs.false.9, %lor.lhs.false.5, %lor.lhs.false, %if.end
  store i32 1, i32* %retval
  br label %return

if.end.35:                                        ; preds = %lor.lhs.false.27
  %21 = load i32, i32* %mode.addr, align 4
  %idxprom36 = sext i32 %21 to i64
  %arrayidx37 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom36
  %22 = load i16, i16* %arrayidx37, align 2
  %conv = zext i16 %22 to i32
  store i32 %conv, i32* %bitwidth, align 4
  %23 = load i32, i32* %bitwidth, align 4
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load38 = load i32, i32* %25, align 8
  %bf.lshr39 = lshr i32 %bf.load38, 16
  %bf.clear40 = and i32 %bf.lshr39, 255
  %idxprom41 = sext i32 %bf.clear40 to i64
  %arrayidx42 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom41
  %26 = load i16, i16* %arrayidx42, align 2
  %conv43 = zext i16 %26 to i32
  %cmp44 = icmp ult i32 %23, %conv43
  br i1 %cmp44, label %if.then.46, label %if.end.67

if.then.46:                                       ; preds = %if.end.35
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %28 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load47 = load i32, i32* %29, align 8
  %bf.lshr48 = lshr i32 %bf.load47, 16
  %bf.clear49 = and i32 %bf.lshr48, 255
  %call = call i32 @num_sign_bit_copies(%struct.rtx_def* %27, i32 %bf.clear49)
  store i32 %call, i32* %num0, align 4
  %30 = load i32, i32* %num0, align 4
  %31 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load50 = load i32, i32* %32, align 8
  %bf.lshr51 = lshr i32 %bf.load50, 16
  %bf.clear52 = and i32 %bf.lshr51, 255
  %idxprom53 = sext i32 %bf.clear52 to i64
  %arrayidx54 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom53
  %33 = load i16, i16* %arrayidx54, align 2
  %conv55 = zext i16 %33 to i32
  %34 = load i32, i32* %bitwidth, align 4
  %sub = sub i32 %conv55, %34
  %sub56 = sub nsw i32 %30, %sub
  %cmp57 = icmp sgt i32 1, %sub56
  br i1 %cmp57, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.46
  br label %cond.end

cond.false:                                       ; preds = %if.then.46
  %35 = load i32, i32* %num0, align 4
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %37 = bitcast %struct.rtx_def* %36 to i32*
  %bf.load59 = load i32, i32* %37, align 8
  %bf.lshr60 = lshr i32 %bf.load59, 16
  %bf.clear61 = and i32 %bf.lshr60, 255
  %idxprom62 = sext i32 %bf.clear61 to i64
  %arrayidx63 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom62
  %38 = load i16, i16* %arrayidx63, align 2
  %conv64 = zext i16 %38 to i32
  %39 = load i32, i32* %bitwidth, align 4
  %sub65 = sub i32 %conv64, %39
  %sub66 = sub nsw i32 %35, %sub65
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %sub66, %cond.false ]
  store i32 %cond, i32* %retval
  br label %return

if.end.67:                                        ; preds = %if.end.35
  %40 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load68 = load i32, i32* %41, align 8
  %bf.lshr69 = lshr i32 %bf.load68, 16
  %bf.clear70 = and i32 %bf.lshr69, 255
  %cmp71 = icmp ne i32 %bf.clear70, 0
  br i1 %cmp71, label %land.lhs.true, label %if.end.82

land.lhs.true:                                    ; preds = %if.end.67
  %42 = load i32, i32* %bitwidth, align 4
  %43 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %44 = bitcast %struct.rtx_def* %43 to i32*
  %bf.load73 = load i32, i32* %44, align 8
  %bf.lshr74 = lshr i32 %bf.load73, 16
  %bf.clear75 = and i32 %bf.lshr74, 255
  %idxprom76 = sext i32 %bf.clear75 to i64
  %arrayidx77 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom76
  %45 = load i16, i16* %arrayidx77, align 2
  %conv78 = zext i16 %45 to i32
  %cmp79 = icmp ugt i32 %42, %conv78
  br i1 %cmp79, label %if.then.81, label %if.end.82

if.then.81:                                       ; preds = %land.lhs.true
  store i32 1, i32* %retval
  br label %return

if.end.82:                                        ; preds = %land.lhs.true, %if.end.67
  %46 = load i32, i32* %code, align 4
  switch i32 %46, label %sw.default [
    i32 61, label %sw.bb
    i32 66, label %sw.bb.198
    i32 54, label %sw.bb.199
    i32 63, label %sw.bb.225
    i32 132, label %sw.bb.306
    i32 120, label %sw.bb.339
    i32 122, label %sw.bb.355
    i32 86, label %sw.bb.388
    i32 88, label %sw.bb.393
    i32 91, label %sw.bb.393
    i32 77, label %sw.bb.477
    i32 84, label %sw.bb.511
    i32 83, label %sw.bb.511
    i32 85, label %sw.bb.511
    i32 92, label %sw.bb.511
    i32 93, label %sw.bb.511
    i32 94, label %sw.bb.511
    i32 95, label %sw.bb.511
    i32 75, label %sw.bb.526
    i32 76, label %sw.bb.526
    i32 78, label %sw.bb.592
    i32 81, label %sw.bb.641
    i32 82, label %sw.bb.661
    i32 79, label %sw.bb.666
    i32 80, label %sw.bb.690
    i32 89, label %sw.bb.714
    i32 87, label %sw.bb.762
    i32 72, label %sw.bb.818
    i32 103, label %sw.bb.833
    i32 102, label %sw.bb.833
    i32 104, label %sw.bb.833
    i32 105, label %sw.bb.833
    i32 106, label %sw.bb.833
    i32 107, label %sw.bb.833
    i32 114, label %sw.bb.833
    i32 119, label %sw.bb.833
    i32 115, label %sw.bb.833
    i32 116, label %sw.bb.833
    i32 117, label %sw.bb.833
    i32 118, label %sw.bb.833
    i32 108, label %sw.bb.833
    i32 109, label %sw.bb.833
    i32 110, label %sw.bb.833
    i32 111, label %sw.bb.833
    i32 112, label %sw.bb.833
    i32 113, label %sw.bb.833
  ]

sw.bb:                                            ; preds = %if.end.82
  %47 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1
  %arrayidx83 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx83 to i32*
  %48 = load i32, i32* %rtuint, align 4
  %idxprom84 = zext i32 %48 to i64
  %49 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set_value, align 8
  %arrayidx85 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %49, i64 %idxprom84
  %50 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx85, align 8
  %cmp86 = icmp ne %struct.rtx_def* %50, null
  br i1 %cmp86, label %land.lhs.true.88, label %if.end.164

land.lhs.true.88:                                 ; preds = %sw.bb
  %51 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i32 0, i64 0
  %rtuint91 = bitcast %union.rtunion_def* %arrayidx90 to i32*
  %52 = load i32, i32* %rtuint91, align 4
  %idxprom92 = zext i32 %52 to i64
  %53 = load i32*, i32** @reg_last_set_mode, align 8
  %arrayidx93 = getelementptr inbounds i32, i32* %53, i64 %idxprom92
  %54 = load i32, i32* %arrayidx93, align 4
  %55 = load i32, i32* %mode.addr, align 4
  %cmp94 = icmp eq i32 %54, %55
  br i1 %cmp94, label %land.lhs.true.96, label %if.end.164

land.lhs.true.96:                                 ; preds = %land.lhs.true.88
  %56 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld97, i32 0, i64 0
  %rtuint99 = bitcast %union.rtunion_def* %arrayidx98 to i32*
  %57 = load i32, i32* %rtuint99, align 4
  %idxprom100 = zext i32 %57 to i64
  %58 = load i32*, i32** @reg_last_set_label, align 8
  %arrayidx101 = getelementptr inbounds i32, i32* %58, i64 %idxprom100
  %59 = load i32, i32* %arrayidx101, align 4
  %60 = load i32, i32* @label_tick, align 4
  %cmp102 = icmp eq i32 %59, %60
  br i1 %cmp102, label %land.lhs.true.125, label %lor.lhs.false.104

lor.lhs.false.104:                                ; preds = %land.lhs.true.96
  %61 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld105 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1
  %arrayidx106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld105, i32 0, i64 0
  %rtuint107 = bitcast %union.rtunion_def* %arrayidx106 to i32*
  %62 = load i32, i32* %rtuint107, align 4
  %cmp108 = icmp uge i32 %62, 53
  br i1 %cmp108, label %land.lhs.true.110, label %if.end.164

land.lhs.true.110:                                ; preds = %lor.lhs.false.104
  %63 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1
  %arrayidx112 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld111, i32 0, i64 0
  %rtuint113 = bitcast %union.rtunion_def* %arrayidx112 to i32*
  %64 = load i32, i32* %rtuint113, align 4
  %idxprom114 = zext i32 %64 to i64
  %65 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %65, i32 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx115 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg, i32 0, i64 %idxprom114
  %66 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx115, align 8
  %sets = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %66, i32 0, i32 3
  %67 = load i32, i32* %sets, align 4
  %cmp116 = icmp eq i32 %67, 1
  br i1 %cmp116, label %land.lhs.true.118, label %if.end.164

land.lhs.true.118:                                ; preds = %land.lhs.true.110
  %68 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %data119 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %68, i32 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data119 to [1 x %struct.basic_block_def*]*
  %arrayidx120 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %bb, i32 0, i64 0
  %69 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx120, align 8
  %global_live_at_start = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %69, i32 0, i32 8
  %70 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %global_live_at_start, align 8
  %71 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1
  %arrayidx122 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld121, i32 0, i64 0
  %rtuint123 = bitcast %union.rtunion_def* %arrayidx122 to i32*
  %72 = load i32, i32* %rtuint123, align 4
  %call124 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %70, i32 %72)
  %tobool = icmp ne i32 %call124, 0
  br i1 %tobool, label %if.end.164, label %land.lhs.true.125

land.lhs.true.125:                                ; preds = %land.lhs.true.118, %land.lhs.true.96
  %73 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld126 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1
  %arrayidx127 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld126, i32 0, i64 0
  %rtuint128 = bitcast %union.rtunion_def* %arrayidx127 to i32*
  %74 = load i32, i32* %rtuint128, align 4
  %idxprom129 = zext i32 %74 to i64
  %75 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set, align 8
  %arrayidx130 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %75, i64 %idxprom129
  %76 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx130, align 8
  %fld131 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %arrayidx132 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld131, i32 0, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx132 to i32*
  %77 = load i32, i32* %rtint, align 4
  %78 = load i32, i32* @max_uid_cuid, align 4
  %cmp133 = icmp sgt i32 %77, %78
  br i1 %cmp133, label %cond.true.135, label %cond.false.142

cond.true.135:                                    ; preds = %land.lhs.true.125
  %79 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld136 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1
  %arrayidx137 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld136, i32 0, i64 0
  %rtuint138 = bitcast %union.rtunion_def* %arrayidx137 to i32*
  %80 = load i32, i32* %rtuint138, align 4
  %idxprom139 = zext i32 %80 to i64
  %81 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set, align 8
  %arrayidx140 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %81, i64 %idxprom139
  %82 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx140, align 8
  %call141 = call i32 @insn_cuid(%struct.rtx_def* %82)
  br label %cond.end.153

cond.false.142:                                   ; preds = %land.lhs.true.125
  %83 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx144 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld143, i32 0, i64 0
  %rtuint145 = bitcast %union.rtunion_def* %arrayidx144 to i32*
  %84 = load i32, i32* %rtuint145, align 4
  %idxprom146 = zext i32 %84 to i64
  %85 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set, align 8
  %arrayidx147 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %85, i64 %idxprom146
  %86 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx147, align 8
  %fld148 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1
  %arrayidx149 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld148, i32 0, i64 0
  %rtint150 = bitcast %union.rtunion_def* %arrayidx149 to i32*
  %87 = load i32, i32* %rtint150, align 4
  %idxprom151 = sext i32 %87 to i64
  %88 = load i32*, i32** @uid_cuid, align 8
  %arrayidx152 = getelementptr inbounds i32, i32* %88, i64 %idxprom151
  %89 = load i32, i32* %arrayidx152, align 4
  br label %cond.end.153

cond.end.153:                                     ; preds = %cond.false.142, %cond.true.135
  %cond154 = phi i32 [ %call141, %cond.true.135 ], [ %89, %cond.false.142 ]
  %90 = load i32, i32* @subst_low_cuid, align 4
  %cmp155 = icmp slt i32 %cond154, %90
  br i1 %cmp155, label %if.then.157, label %if.end.164

if.then.157:                                      ; preds = %cond.end.153
  %91 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld158 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1
  %arrayidx159 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld158, i32 0, i64 0
  %rtuint160 = bitcast %union.rtunion_def* %arrayidx159 to i32*
  %92 = load i32, i32* %rtuint160, align 4
  %idxprom161 = zext i32 %92 to i64
  %93 = load i8*, i8** @reg_last_set_sign_bit_copies, align 8
  %arrayidx162 = getelementptr inbounds i8, i8* %93, i64 %idxprom161
  %94 = load i8, i8* %arrayidx162, align 1
  %conv163 = sext i8 %94 to i32
  store i32 %conv163, i32* %retval
  br label %return

if.end.164:                                       ; preds = %cond.end.153, %land.lhs.true.118, %land.lhs.true.110, %lor.lhs.false.104, %land.lhs.true.88, %sw.bb
  %95 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call165 = call %struct.rtx_def* @get_last_value(%struct.rtx_def* %95)
  store %struct.rtx_def* %call165, %struct.rtx_def** %tem, align 8
  %96 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %cmp166 = icmp ne %struct.rtx_def* %96, null
  br i1 %cmp166, label %if.then.168, label %if.end.170

if.then.168:                                      ; preds = %if.end.164
  %97 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %98 = load i32, i32* %mode.addr, align 4
  %call169 = call i32 @num_sign_bit_copies(%struct.rtx_def* %97, i32 %98)
  store i32 %call169, i32* %retval
  br label %return

if.end.170:                                       ; preds = %if.end.164
  %99 = load i32, i32* @nonzero_sign_valid, align 4
  %tobool171 = icmp ne i32 %99, 0
  br i1 %tobool171, label %land.lhs.true.172, label %if.end.197

land.lhs.true.172:                                ; preds = %if.end.170
  %100 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld173 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1
  %arrayidx174 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld173, i32 0, i64 0
  %rtuint175 = bitcast %union.rtunion_def* %arrayidx174 to i32*
  %101 = load i32, i32* %rtuint175, align 4
  %idxprom176 = zext i32 %101 to i64
  %102 = load i8*, i8** @reg_sign_bit_copies, align 8
  %arrayidx177 = getelementptr inbounds i8, i8* %102, i64 %idxprom176
  %103 = load i8, i8* %arrayidx177, align 1
  %conv178 = zext i8 %103 to i32
  %cmp179 = icmp ne i32 %conv178, 0
  br i1 %cmp179, label %land.lhs.true.181, label %if.end.197

land.lhs.true.181:                                ; preds = %land.lhs.true.172
  %104 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %105 = bitcast %struct.rtx_def* %104 to i32*
  %bf.load182 = load i32, i32* %105, align 8
  %bf.lshr183 = lshr i32 %bf.load182, 16
  %bf.clear184 = and i32 %bf.lshr183, 255
  %idxprom185 = sext i32 %bf.clear184 to i64
  %arrayidx186 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom185
  %106 = load i16, i16* %arrayidx186, align 2
  %conv187 = zext i16 %106 to i32
  %107 = load i32, i32* %bitwidth, align 4
  %cmp188 = icmp eq i32 %conv187, %107
  br i1 %cmp188, label %if.then.190, label %if.end.197

if.then.190:                                      ; preds = %land.lhs.true.181
  %108 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld191 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1
  %arrayidx192 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld191, i32 0, i64 0
  %rtuint193 = bitcast %union.rtunion_def* %arrayidx192 to i32*
  %109 = load i32, i32* %rtuint193, align 4
  %idxprom194 = zext i32 %109 to i64
  %110 = load i8*, i8** @reg_sign_bit_copies, align 8
  %arrayidx195 = getelementptr inbounds i8, i8* %110, i64 %idxprom194
  %111 = load i8, i8* %arrayidx195, align 1
  %conv196 = zext i8 %111 to i32
  store i32 %conv196, i32* %retval
  br label %return

if.end.197:                                       ; preds = %land.lhs.true.181, %land.lhs.true.172, %if.end.170
  br label %sw.epilog

sw.bb.198:                                        ; preds = %if.end.82
  br label %sw.epilog

sw.bb.199:                                        ; preds = %if.end.82
  %112 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld200 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1
  %arrayidx201 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld200, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx201 to i64*
  %113 = load i64, i64* %rtwint, align 8
  %114 = load i32, i32* %mode.addr, align 4
  %idxprom202 = sext i32 %114 to i64
  %arrayidx203 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom202
  %115 = load i64, i64* %arrayidx203, align 8
  %and = and i64 %113, %115
  store i64 %and, i64* %nonzero, align 8
  %116 = load i32, i32* %bitwidth, align 4
  %cmp204 = icmp ule i32 %116, 64
  br i1 %cmp204, label %land.lhs.true.206, label %if.end.215

land.lhs.true.206:                                ; preds = %sw.bb.199
  %117 = load i64, i64* %nonzero, align 8
  %118 = load i32, i32* %bitwidth, align 4
  %sub207 = sub i32 %118, 1
  %sh_prom = zext i32 %sub207 to i64
  %shl = shl i64 1, %sh_prom
  %and208 = and i64 %117, %shl
  %cmp209 = icmp ne i64 %and208, 0
  br i1 %cmp209, label %if.then.211, label %if.end.215

if.then.211:                                      ; preds = %land.lhs.true.206
  %119 = load i64, i64* %nonzero, align 8
  %neg = xor i64 %119, -1
  %120 = load i32, i32* %mode.addr, align 4
  %idxprom212 = sext i32 %120 to i64
  %arrayidx213 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom212
  %121 = load i64, i64* %arrayidx213, align 8
  %and214 = and i64 %neg, %121
  store i64 %and214, i64* %nonzero, align 8
  br label %if.end.215

if.end.215:                                       ; preds = %if.then.211, %land.lhs.true.206, %sw.bb.199
  %122 = load i64, i64* %nonzero, align 8
  %cmp216 = icmp eq i64 %122, 0
  br i1 %cmp216, label %cond.true.218, label %cond.false.219

cond.true.218:                                    ; preds = %if.end.215
  %123 = load i32, i32* %bitwidth, align 4
  br label %cond.end.223

cond.false.219:                                   ; preds = %if.end.215
  %124 = load i32, i32* %bitwidth, align 4
  %125 = load i64, i64* %nonzero, align 8
  %call220 = call i32 @floor_log2_wide(i64 %125)
  %sub221 = sub i32 %124, %call220
  %sub222 = sub i32 %sub221, 1
  br label %cond.end.223

cond.end.223:                                     ; preds = %cond.false.219, %cond.true.218
  %cond224 = phi i32 [ %123, %cond.true.218 ], [ %sub222, %cond.false.219 ]
  store i32 %cond224, i32* %retval
  br label %return

sw.bb.225:                                        ; preds = %if.end.82
  %126 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %127 = bitcast %struct.rtx_def* %126 to i32*
  %bf.load226 = load i32, i32* %127, align 8
  %bf.lshr227 = lshr i32 %bf.load226, 28
  %bf.clear228 = and i32 %bf.lshr227, 1
  %tobool229 = icmp ne i32 %bf.clear228, 0
  br i1 %tobool229, label %land.lhs.true.230, label %if.end.260

land.lhs.true.230:                                ; preds = %sw.bb.225
  %128 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %129 = bitcast %struct.rtx_def* %128 to i32*
  %bf.load231 = load i32, i32* %129, align 8
  %bf.lshr232 = lshr i32 %bf.load231, 26
  %bf.clear233 = and i32 %bf.lshr232, 1
  %tobool234 = icmp ne i32 %bf.clear233, 0
  br i1 %tobool234, label %if.end.260, label %if.then.235

if.then.235:                                      ; preds = %land.lhs.true.230
  %130 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1
  %arrayidx237 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld236, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx237 to %struct.rtx_def**
  %131 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %132 = load i32, i32* %mode.addr, align 4
  %call238 = call i32 @num_sign_bit_copies(%struct.rtx_def* %131, i32 %132)
  store i32 %call238, i32* %num0, align 4
  %133 = load i32, i32* %bitwidth, align 4
  %134 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %135 = bitcast %struct.rtx_def* %134 to i32*
  %bf.load239 = load i32, i32* %135, align 8
  %bf.lshr240 = lshr i32 %bf.load239, 16
  %bf.clear241 = and i32 %bf.lshr240, 255
  %idxprom242 = sext i32 %bf.clear241 to i64
  %arrayidx243 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom242
  %136 = load i16, i16* %arrayidx243, align 2
  %conv244 = zext i16 %136 to i32
  %sub245 = sub nsw i32 %133, %conv244
  %add = add nsw i32 %sub245, 1
  %137 = load i32, i32* %num0, align 4
  %cmp246 = icmp sgt i32 %add, %137
  br i1 %cmp246, label %cond.true.248, label %cond.false.257

cond.true.248:                                    ; preds = %if.then.235
  %138 = load i32, i32* %bitwidth, align 4
  %139 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %140 = bitcast %struct.rtx_def* %139 to i32*
  %bf.load249 = load i32, i32* %140, align 8
  %bf.lshr250 = lshr i32 %bf.load249, 16
  %bf.clear251 = and i32 %bf.lshr250, 255
  %idxprom252 = sext i32 %bf.clear251 to i64
  %arrayidx253 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom252
  %141 = load i16, i16* %arrayidx253, align 2
  %conv254 = zext i16 %141 to i32
  %sub255 = sub nsw i32 %138, %conv254
  %add256 = add nsw i32 %sub255, 1
  br label %cond.end.258

cond.false.257:                                   ; preds = %if.then.235
  %142 = load i32, i32* %num0, align 4
  br label %cond.end.258

cond.end.258:                                     ; preds = %cond.false.257, %cond.true.248
  %cond259 = phi i32 [ %add256, %cond.true.248 ], [ %142, %cond.false.257 ]
  store i32 %cond259, i32* %retval
  br label %return

if.end.260:                                       ; preds = %land.lhs.true.230, %sw.bb.225
  %143 = load i32, i32* %bitwidth, align 4
  %144 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld261 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1
  %arrayidx262 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld261, i32 0, i64 0
  %rtx263 = bitcast %union.rtunion_def* %arrayidx262 to %struct.rtx_def**
  %145 = load %struct.rtx_def*, %struct.rtx_def** %rtx263, align 8
  %146 = bitcast %struct.rtx_def* %145 to i32*
  %bf.load264 = load i32, i32* %146, align 8
  %bf.lshr265 = lshr i32 %bf.load264, 16
  %bf.clear266 = and i32 %bf.lshr265, 255
  %idxprom267 = sext i32 %bf.clear266 to i64
  %arrayidx268 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom267
  %147 = load i16, i16* %arrayidx268, align 2
  %conv269 = zext i16 %147 to i32
  %cmp270 = icmp ule i32 %143, %conv269
  br i1 %cmp270, label %if.then.272, label %if.end.305

if.then.272:                                      ; preds = %if.end.260
  %148 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld273 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %148, i32 0, i32 1
  %arrayidx274 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld273, i32 0, i64 0
  %rtx275 = bitcast %union.rtunion_def* %arrayidx274 to %struct.rtx_def**
  %149 = load %struct.rtx_def*, %struct.rtx_def** %rtx275, align 8
  %call276 = call i32 @num_sign_bit_copies(%struct.rtx_def* %149, i32 0)
  store i32 %call276, i32* %num0, align 4
  %150 = load i32, i32* %num0, align 4
  %151 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld277 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %151, i32 0, i32 1
  %arrayidx278 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld277, i32 0, i64 0
  %rtx279 = bitcast %union.rtunion_def* %arrayidx278 to %struct.rtx_def**
  %152 = load %struct.rtx_def*, %struct.rtx_def** %rtx279, align 8
  %153 = bitcast %struct.rtx_def* %152 to i32*
  %bf.load280 = load i32, i32* %153, align 8
  %bf.lshr281 = lshr i32 %bf.load280, 16
  %bf.clear282 = and i32 %bf.lshr281, 255
  %idxprom283 = sext i32 %bf.clear282 to i64
  %arrayidx284 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom283
  %154 = load i16, i16* %arrayidx284, align 2
  %conv285 = zext i16 %154 to i32
  %155 = load i32, i32* %bitwidth, align 4
  %sub286 = sub i32 %conv285, %155
  %sub287 = sub nsw i32 %150, %sub286
  %cmp288 = icmp sgt i32 1, %sub287
  br i1 %cmp288, label %cond.true.290, label %cond.false.291

cond.true.290:                                    ; preds = %if.then.272
  br label %cond.end.303

cond.false.291:                                   ; preds = %if.then.272
  %156 = load i32, i32* %num0, align 4
  %157 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld292 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %157, i32 0, i32 1
  %arrayidx293 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld292, i32 0, i64 0
  %rtx294 = bitcast %union.rtunion_def* %arrayidx293 to %struct.rtx_def**
  %158 = load %struct.rtx_def*, %struct.rtx_def** %rtx294, align 8
  %159 = bitcast %struct.rtx_def* %158 to i32*
  %bf.load295 = load i32, i32* %159, align 8
  %bf.lshr296 = lshr i32 %bf.load295, 16
  %bf.clear297 = and i32 %bf.lshr296, 255
  %idxprom298 = sext i32 %bf.clear297 to i64
  %arrayidx299 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom298
  %160 = load i16, i16* %arrayidx299, align 2
  %conv300 = zext i16 %160 to i32
  %161 = load i32, i32* %bitwidth, align 4
  %sub301 = sub i32 %conv300, %161
  %sub302 = sub nsw i32 %156, %sub301
  br label %cond.end.303

cond.end.303:                                     ; preds = %cond.false.291, %cond.true.290
  %cond304 = phi i32 [ 1, %cond.true.290 ], [ %sub302, %cond.false.291 ]
  store i32 %cond304, i32* %retval
  br label %return

if.end.305:                                       ; preds = %if.end.260
  br label %sw.epilog

sw.bb.306:                                        ; preds = %if.end.82
  %162 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld307 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %162, i32 0, i32 1
  %arrayidx308 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld307, i32 0, i64 1
  %rtx309 = bitcast %union.rtunion_def* %arrayidx308 to %struct.rtx_def**
  %163 = load %struct.rtx_def*, %struct.rtx_def** %rtx309, align 8
  %164 = bitcast %struct.rtx_def* %163 to i32*
  %bf.load310 = load i32, i32* %164, align 8
  %bf.clear311 = and i32 %bf.load310, 65535
  %cmp312 = icmp eq i32 %bf.clear311, 54
  br i1 %cmp312, label %if.then.314, label %if.end.338

if.then.314:                                      ; preds = %sw.bb.306
  %165 = load i32, i32* %bitwidth, align 4
  %conv315 = sext i32 %165 to i64
  %166 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld316 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %166, i32 0, i32 1
  %arrayidx317 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld316, i32 0, i64 1
  %rtx318 = bitcast %union.rtunion_def* %arrayidx317 to %struct.rtx_def**
  %167 = load %struct.rtx_def*, %struct.rtx_def** %rtx318, align 8
  %fld319 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %167, i32 0, i32 1
  %arrayidx320 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld319, i32 0, i64 0
  %rtwint321 = bitcast %union.rtunion_def* %arrayidx320 to i64*
  %168 = load i64, i64* %rtwint321, align 8
  %sub322 = sub nsw i64 %conv315, %168
  %cmp323 = icmp sgt i64 1, %sub322
  br i1 %cmp323, label %cond.true.325, label %cond.false.326

cond.true.325:                                    ; preds = %if.then.314
  br label %cond.end.335

cond.false.326:                                   ; preds = %if.then.314
  %169 = load i32, i32* %bitwidth, align 4
  %conv327 = sext i32 %169 to i64
  %170 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld328 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %170, i32 0, i32 1
  %arrayidx329 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld328, i32 0, i64 1
  %rtx330 = bitcast %union.rtunion_def* %arrayidx329 to %struct.rtx_def**
  %171 = load %struct.rtx_def*, %struct.rtx_def** %rtx330, align 8
  %fld331 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %171, i32 0, i32 1
  %arrayidx332 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld331, i32 0, i64 0
  %rtwint333 = bitcast %union.rtunion_def* %arrayidx332 to i64*
  %172 = load i64, i64* %rtwint333, align 8
  %sub334 = sub nsw i64 %conv327, %172
  br label %cond.end.335

cond.end.335:                                     ; preds = %cond.false.326, %cond.true.325
  %cond336 = phi i64 [ 1, %cond.true.325 ], [ %sub334, %cond.false.326 ]
  %conv337 = trunc i64 %cond336 to i32
  store i32 %conv337, i32* %retval
  br label %return

if.end.338:                                       ; preds = %sw.bb.306
  br label %sw.epilog

sw.bb.339:                                        ; preds = %if.end.82
  %173 = load i32, i32* %bitwidth, align 4
  %174 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld340 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %174, i32 0, i32 1
  %arrayidx341 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld340, i32 0, i64 0
  %rtx342 = bitcast %union.rtunion_def* %arrayidx341 to %struct.rtx_def**
  %175 = load %struct.rtx_def*, %struct.rtx_def** %rtx342, align 8
  %176 = bitcast %struct.rtx_def* %175 to i32*
  %bf.load343 = load i32, i32* %176, align 8
  %bf.lshr344 = lshr i32 %bf.load343, 16
  %bf.clear345 = and i32 %bf.lshr344, 255
  %idxprom346 = sext i32 %bf.clear345 to i64
  %arrayidx347 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom346
  %177 = load i16, i16* %arrayidx347, align 2
  %conv348 = zext i16 %177 to i32
  %sub349 = sub i32 %173, %conv348
  %178 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld350 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %178, i32 0, i32 1
  %arrayidx351 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld350, i32 0, i64 0
  %rtx352 = bitcast %union.rtunion_def* %arrayidx351 to %struct.rtx_def**
  %179 = load %struct.rtx_def*, %struct.rtx_def** %rtx352, align 8
  %call353 = call i32 @num_sign_bit_copies(%struct.rtx_def* %179, i32 0)
  %add354 = add i32 %sub349, %call353
  store i32 %add354, i32* %retval
  br label %return

sw.bb.355:                                        ; preds = %if.end.82
  %180 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld356 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %180, i32 0, i32 1
  %arrayidx357 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld356, i32 0, i64 0
  %rtx358 = bitcast %union.rtunion_def* %arrayidx357 to %struct.rtx_def**
  %181 = load %struct.rtx_def*, %struct.rtx_def** %rtx358, align 8
  %call359 = call i32 @num_sign_bit_copies(%struct.rtx_def* %181, i32 0)
  store i32 %call359, i32* %num0, align 4
  %182 = load i32, i32* %num0, align 4
  %183 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld360 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %183, i32 0, i32 1
  %arrayidx361 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld360, i32 0, i64 0
  %rtx362 = bitcast %union.rtunion_def* %arrayidx361 to %struct.rtx_def**
  %184 = load %struct.rtx_def*, %struct.rtx_def** %rtx362, align 8
  %185 = bitcast %struct.rtx_def* %184 to i32*
  %bf.load363 = load i32, i32* %185, align 8
  %bf.lshr364 = lshr i32 %bf.load363, 16
  %bf.clear365 = and i32 %bf.lshr364, 255
  %idxprom366 = sext i32 %bf.clear365 to i64
  %arrayidx367 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom366
  %186 = load i16, i16* %arrayidx367, align 2
  %conv368 = zext i16 %186 to i32
  %187 = load i32, i32* %bitwidth, align 4
  %sub369 = sub i32 %conv368, %187
  %sub370 = sub nsw i32 %182, %sub369
  %cmp371 = icmp sgt i32 1, %sub370
  br i1 %cmp371, label %cond.true.373, label %cond.false.374

cond.true.373:                                    ; preds = %sw.bb.355
  br label %cond.end.386

cond.false.374:                                   ; preds = %sw.bb.355
  %188 = load i32, i32* %num0, align 4
  %189 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld375 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %189, i32 0, i32 1
  %arrayidx376 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld375, i32 0, i64 0
  %rtx377 = bitcast %union.rtunion_def* %arrayidx376 to %struct.rtx_def**
  %190 = load %struct.rtx_def*, %struct.rtx_def** %rtx377, align 8
  %191 = bitcast %struct.rtx_def* %190 to i32*
  %bf.load378 = load i32, i32* %191, align 8
  %bf.lshr379 = lshr i32 %bf.load378, 16
  %bf.clear380 = and i32 %bf.lshr379, 255
  %idxprom381 = sext i32 %bf.clear380 to i64
  %arrayidx382 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom381
  %192 = load i16, i16* %arrayidx382, align 2
  %conv383 = zext i16 %192 to i32
  %193 = load i32, i32* %bitwidth, align 4
  %sub384 = sub i32 %conv383, %193
  %sub385 = sub nsw i32 %188, %sub384
  br label %cond.end.386

cond.end.386:                                     ; preds = %cond.false.374, %cond.true.373
  %cond387 = phi i32 [ 1, %cond.true.373 ], [ %sub385, %cond.false.374 ]
  store i32 %cond387, i32* %retval
  br label %return

sw.bb.388:                                        ; preds = %if.end.82
  %194 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld389 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %194, i32 0, i32 1
  %arrayidx390 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld389, i32 0, i64 0
  %rtx391 = bitcast %union.rtunion_def* %arrayidx390 to %struct.rtx_def**
  %195 = load %struct.rtx_def*, %struct.rtx_def** %rtx391, align 8
  %196 = load i32, i32* %mode.addr, align 4
  %call392 = call i32 @num_sign_bit_copies(%struct.rtx_def* %195, i32 %196)
  store i32 %call392, i32* %retval
  br label %return

sw.bb.393:                                        ; preds = %if.end.82, %if.end.82
  %197 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld394 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %197, i32 0, i32 1
  %arrayidx395 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld394, i32 0, i64 1
  %rtx396 = bitcast %union.rtunion_def* %arrayidx395 to %struct.rtx_def**
  %198 = load %struct.rtx_def*, %struct.rtx_def** %rtx396, align 8
  %199 = bitcast %struct.rtx_def* %198 to i32*
  %bf.load397 = load i32, i32* %199, align 8
  %bf.clear398 = and i32 %bf.load397, 65535
  %cmp399 = icmp eq i32 %bf.clear398, 54
  br i1 %cmp399, label %land.lhs.true.401, label %if.end.476

land.lhs.true.401:                                ; preds = %sw.bb.393
  %200 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld402 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %200, i32 0, i32 1
  %arrayidx403 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld402, i32 0, i64 1
  %rtx404 = bitcast %union.rtunion_def* %arrayidx403 to %struct.rtx_def**
  %201 = load %struct.rtx_def*, %struct.rtx_def** %rtx404, align 8
  %fld405 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %201, i32 0, i32 1
  %arrayidx406 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld405, i32 0, i64 0
  %rtwint407 = bitcast %union.rtunion_def* %arrayidx406 to i64*
  %202 = load i64, i64* %rtwint407, align 8
  %cmp408 = icmp sge i64 %202, 0
  br i1 %cmp408, label %land.lhs.true.410, label %if.end.476

land.lhs.true.410:                                ; preds = %land.lhs.true.401
  %203 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld411 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %203, i32 0, i32 1
  %arrayidx412 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld411, i32 0, i64 1
  %rtx413 = bitcast %union.rtunion_def* %arrayidx412 to %struct.rtx_def**
  %204 = load %struct.rtx_def*, %struct.rtx_def** %rtx413, align 8
  %fld414 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %204, i32 0, i32 1
  %arrayidx415 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld414, i32 0, i64 0
  %rtwint416 = bitcast %union.rtunion_def* %arrayidx415 to i64*
  %205 = load i64, i64* %rtwint416, align 8
  %206 = load i32, i32* %bitwidth, align 4
  %conv417 = sext i32 %206 to i64
  %cmp418 = icmp slt i64 %205, %conv417
  br i1 %cmp418, label %if.then.420, label %if.end.476

if.then.420:                                      ; preds = %land.lhs.true.410
  %207 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld421 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %207, i32 0, i32 1
  %arrayidx422 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld421, i32 0, i64 0
  %rtx423 = bitcast %union.rtunion_def* %arrayidx422 to %struct.rtx_def**
  %208 = load %struct.rtx_def*, %struct.rtx_def** %rtx423, align 8
  %209 = load i32, i32* %mode.addr, align 4
  %call424 = call i32 @num_sign_bit_copies(%struct.rtx_def* %208, i32 %209)
  store i32 %call424, i32* %num0, align 4
  %210 = load i32, i32* %num0, align 4
  %conv425 = sext i32 %210 to i64
  %211 = load i32, i32* %code, align 4
  %cmp426 = icmp eq i32 %211, 88
  br i1 %cmp426, label %cond.true.428, label %cond.false.435

cond.true.428:                                    ; preds = %if.then.420
  %212 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld429 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %212, i32 0, i32 1
  %arrayidx430 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld429, i32 0, i64 1
  %rtx431 = bitcast %union.rtunion_def* %arrayidx430 to %struct.rtx_def**
  %213 = load %struct.rtx_def*, %struct.rtx_def** %rtx431, align 8
  %fld432 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %213, i32 0, i32 1
  %arrayidx433 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld432, i32 0, i64 0
  %rtwint434 = bitcast %union.rtunion_def* %arrayidx433 to i64*
  %214 = load i64, i64* %rtwint434, align 8
  br label %cond.end.444

cond.false.435:                                   ; preds = %if.then.420
  %215 = load i32, i32* %bitwidth, align 4
  %conv436 = sext i32 %215 to i64
  %216 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld437 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %216, i32 0, i32 1
  %arrayidx438 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld437, i32 0, i64 1
  %rtx439 = bitcast %union.rtunion_def* %arrayidx438 to %struct.rtx_def**
  %217 = load %struct.rtx_def*, %struct.rtx_def** %rtx439, align 8
  %fld440 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %217, i32 0, i32 1
  %arrayidx441 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld440, i32 0, i64 0
  %rtwint442 = bitcast %union.rtunion_def* %arrayidx441 to i64*
  %218 = load i64, i64* %rtwint442, align 8
  %sub443 = sub nsw i64 %conv436, %218
  br label %cond.end.444

cond.end.444:                                     ; preds = %cond.false.435, %cond.true.428
  %cond445 = phi i64 [ %214, %cond.true.428 ], [ %sub443, %cond.false.435 ]
  %sub446 = sub nsw i64 %conv425, %cond445
  %cmp447 = icmp sgt i64 1, %sub446
  br i1 %cmp447, label %cond.true.449, label %cond.false.450

cond.true.449:                                    ; preds = %cond.end.444
  br label %cond.end.473

cond.false.450:                                   ; preds = %cond.end.444
  %219 = load i32, i32* %num0, align 4
  %conv451 = sext i32 %219 to i64
  %220 = load i32, i32* %code, align 4
  %cmp452 = icmp eq i32 %220, 88
  br i1 %cmp452, label %cond.true.454, label %cond.false.461

cond.true.454:                                    ; preds = %cond.false.450
  %221 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld455 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %221, i32 0, i32 1
  %arrayidx456 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld455, i32 0, i64 1
  %rtx457 = bitcast %union.rtunion_def* %arrayidx456 to %struct.rtx_def**
  %222 = load %struct.rtx_def*, %struct.rtx_def** %rtx457, align 8
  %fld458 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %222, i32 0, i32 1
  %arrayidx459 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld458, i32 0, i64 0
  %rtwint460 = bitcast %union.rtunion_def* %arrayidx459 to i64*
  %223 = load i64, i64* %rtwint460, align 8
  br label %cond.end.470

cond.false.461:                                   ; preds = %cond.false.450
  %224 = load i32, i32* %bitwidth, align 4
  %conv462 = sext i32 %224 to i64
  %225 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld463 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %225, i32 0, i32 1
  %arrayidx464 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld463, i32 0, i64 1
  %rtx465 = bitcast %union.rtunion_def* %arrayidx464 to %struct.rtx_def**
  %226 = load %struct.rtx_def*, %struct.rtx_def** %rtx465, align 8
  %fld466 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %226, i32 0, i32 1
  %arrayidx467 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld466, i32 0, i64 0
  %rtwint468 = bitcast %union.rtunion_def* %arrayidx467 to i64*
  %227 = load i64, i64* %rtwint468, align 8
  %sub469 = sub nsw i64 %conv462, %227
  br label %cond.end.470

cond.end.470:                                     ; preds = %cond.false.461, %cond.true.454
  %cond471 = phi i64 [ %223, %cond.true.454 ], [ %sub469, %cond.false.461 ]
  %sub472 = sub nsw i64 %conv451, %cond471
  br label %cond.end.473

cond.end.473:                                     ; preds = %cond.end.470, %cond.true.449
  %cond474 = phi i64 [ 1, %cond.true.449 ], [ %sub472, %cond.end.470 ]
  %conv475 = trunc i64 %cond474 to i32
  store i32 %conv475, i32* %retval
  br label %return

if.end.476:                                       ; preds = %land.lhs.true.410, %land.lhs.true.401, %sw.bb.393
  br label %sw.epilog

sw.bb.477:                                        ; preds = %if.end.82
  %228 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld478 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %228, i32 0, i32 1
  %arrayidx479 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld478, i32 0, i64 0
  %rtx480 = bitcast %union.rtunion_def* %arrayidx479 to %struct.rtx_def**
  %229 = load %struct.rtx_def*, %struct.rtx_def** %rtx480, align 8
  %230 = load i32, i32* %mode.addr, align 4
  %call481 = call i32 @num_sign_bit_copies(%struct.rtx_def* %229, i32 %230)
  store i32 %call481, i32* %num0, align 4
  %231 = load i32, i32* %bitwidth, align 4
  %cmp482 = icmp ugt i32 %231, 64
  br i1 %cmp482, label %if.then.484, label %if.end.492

if.then.484:                                      ; preds = %sw.bb.477
  %232 = load i32, i32* %num0, align 4
  %cmp485 = icmp sgt i32 %232, 1
  br i1 %cmp485, label %cond.true.487, label %cond.false.489

cond.true.487:                                    ; preds = %if.then.484
  %233 = load i32, i32* %num0, align 4
  %sub488 = sub nsw i32 %233, 1
  br label %cond.end.490

cond.false.489:                                   ; preds = %if.then.484
  br label %cond.end.490

cond.end.490:                                     ; preds = %cond.false.489, %cond.true.487
  %cond491 = phi i32 [ %sub488, %cond.true.487 ], [ 1, %cond.false.489 ]
  store i32 %cond491, i32* %retval
  br label %return

if.end.492:                                       ; preds = %sw.bb.477
  %234 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld493 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %234, i32 0, i32 1
  %arrayidx494 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld493, i32 0, i64 0
  %rtx495 = bitcast %union.rtunion_def* %arrayidx494 to %struct.rtx_def**
  %235 = load %struct.rtx_def*, %struct.rtx_def** %rtx495, align 8
  %236 = load i32, i32* %mode.addr, align 4
  %call496 = call i64 @nonzero_bits(%struct.rtx_def* %235, i32 %236)
  store i64 %call496, i64* %nonzero, align 8
  %237 = load i64, i64* %nonzero, align 8
  %cmp497 = icmp eq i64 %237, 1
  br i1 %cmp497, label %if.then.499, label %if.end.500

if.then.499:                                      ; preds = %if.end.492
  %238 = load i32, i32* %bitwidth, align 4
  store i32 %238, i32* %retval
  br label %return

if.end.500:                                       ; preds = %if.end.492
  %239 = load i32, i32* %num0, align 4
  %cmp501 = icmp sgt i32 %239, 1
  br i1 %cmp501, label %land.lhs.true.503, label %if.end.510

land.lhs.true.503:                                ; preds = %if.end.500
  %240 = load i32, i32* %bitwidth, align 4
  %sub504 = sub i32 %240, 1
  %sh_prom505 = zext i32 %sub504 to i64
  %shl506 = shl i64 1, %sh_prom505
  %241 = load i64, i64* %nonzero, align 8
  %and507 = and i64 %shl506, %241
  %tobool508 = icmp ne i64 %and507, 0
  br i1 %tobool508, label %if.then.509, label %if.end.510

if.then.509:                                      ; preds = %land.lhs.true.503
  %242 = load i32, i32* %num0, align 4
  %dec = add nsw i32 %242, -1
  store i32 %dec, i32* %num0, align 4
  br label %if.end.510

if.end.510:                                       ; preds = %if.then.509, %land.lhs.true.503, %if.end.500
  %243 = load i32, i32* %num0, align 4
  store i32 %243, i32* %retval
  br label %return

sw.bb.511:                                        ; preds = %if.end.82, %if.end.82, %if.end.82, %if.end.82, %if.end.82, %if.end.82, %if.end.82
  %244 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld512 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %244, i32 0, i32 1
  %arrayidx513 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld512, i32 0, i64 0
  %rtx514 = bitcast %union.rtunion_def* %arrayidx513 to %struct.rtx_def**
  %245 = load %struct.rtx_def*, %struct.rtx_def** %rtx514, align 8
  %246 = load i32, i32* %mode.addr, align 4
  %call515 = call i32 @num_sign_bit_copies(%struct.rtx_def* %245, i32 %246)
  store i32 %call515, i32* %num0, align 4
  %247 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld516 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %247, i32 0, i32 1
  %arrayidx517 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld516, i32 0, i64 1
  %rtx518 = bitcast %union.rtunion_def* %arrayidx517 to %struct.rtx_def**
  %248 = load %struct.rtx_def*, %struct.rtx_def** %rtx518, align 8
  %249 = load i32, i32* %mode.addr, align 4
  %call519 = call i32 @num_sign_bit_copies(%struct.rtx_def* %248, i32 %249)
  store i32 %call519, i32* %num1, align 4
  %250 = load i32, i32* %num0, align 4
  %251 = load i32, i32* %num1, align 4
  %cmp520 = icmp slt i32 %250, %251
  br i1 %cmp520, label %cond.true.522, label %cond.false.523

cond.true.522:                                    ; preds = %sw.bb.511
  %252 = load i32, i32* %num0, align 4
  br label %cond.end.524

cond.false.523:                                   ; preds = %sw.bb.511
  %253 = load i32, i32* %num1, align 4
  br label %cond.end.524

cond.end.524:                                     ; preds = %cond.false.523, %cond.true.522
  %cond525 = phi i32 [ %252, %cond.true.522 ], [ %253, %cond.false.523 ]
  store i32 %cond525, i32* %retval
  br label %return

sw.bb.526:                                        ; preds = %if.end.82, %if.end.82
  %254 = load i32, i32* %code, align 4
  %cmp527 = icmp eq i32 %254, 75
  br i1 %cmp527, label %land.lhs.true.529, label %if.end.563

land.lhs.true.529:                                ; preds = %sw.bb.526
  %255 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld530 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %255, i32 0, i32 1
  %arrayidx531 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld530, i32 0, i64 1
  %rtx532 = bitcast %union.rtunion_def* %arrayidx531 to %struct.rtx_def**
  %256 = load %struct.rtx_def*, %struct.rtx_def** %rtx532, align 8
  %257 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 63), align 8
  %cmp533 = icmp eq %struct.rtx_def* %256, %257
  br i1 %cmp533, label %land.lhs.true.535, label %if.end.563

land.lhs.true.535:                                ; preds = %land.lhs.true.529
  %258 = load i32, i32* %bitwidth, align 4
  %cmp536 = icmp ule i32 %258, 64
  br i1 %cmp536, label %if.then.538, label %if.end.563

if.then.538:                                      ; preds = %land.lhs.true.535
  %259 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld539 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %259, i32 0, i32 1
  %arrayidx540 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld539, i32 0, i64 0
  %rtx541 = bitcast %union.rtunion_def* %arrayidx540 to %struct.rtx_def**
  %260 = load %struct.rtx_def*, %struct.rtx_def** %rtx541, align 8
  %261 = load i32, i32* %mode.addr, align 4
  %call542 = call i64 @nonzero_bits(%struct.rtx_def* %260, i32 %261)
  store i64 %call542, i64* %nonzero, align 8
  %262 = load i32, i32* %bitwidth, align 4
  %sub543 = sub i32 %262, 1
  %sh_prom544 = zext i32 %sub543 to i64
  %shl545 = shl i64 1, %sh_prom544
  %263 = load i64, i64* %nonzero, align 8
  %and546 = and i64 %shl545, %263
  %cmp547 = icmp eq i64 %and546, 0
  br i1 %cmp547, label %if.then.549, label %if.end.562

if.then.549:                                      ; preds = %if.then.538
  %264 = load i64, i64* %nonzero, align 8
  %cmp550 = icmp eq i64 %264, 1
  br i1 %cmp550, label %cond.true.555, label %lor.lhs.false.552

lor.lhs.false.552:                                ; preds = %if.then.549
  %265 = load i64, i64* %nonzero, align 8
  %cmp553 = icmp eq i64 %265, 0
  br i1 %cmp553, label %cond.true.555, label %cond.false.556

cond.true.555:                                    ; preds = %lor.lhs.false.552, %if.then.549
  %266 = load i32, i32* %bitwidth, align 4
  br label %cond.end.560

cond.false.556:                                   ; preds = %lor.lhs.false.552
  %267 = load i32, i32* %bitwidth, align 4
  %268 = load i64, i64* %nonzero, align 8
  %call557 = call i32 @floor_log2_wide(i64 %268)
  %sub558 = sub i32 %267, %call557
  %sub559 = sub i32 %sub558, 1
  br label %cond.end.560

cond.end.560:                                     ; preds = %cond.false.556, %cond.true.555
  %cond561 = phi i32 [ %266, %cond.true.555 ], [ %sub559, %cond.false.556 ]
  store i32 %cond561, i32* %retval
  br label %return

if.end.562:                                       ; preds = %if.then.538
  br label %if.end.563

if.end.563:                                       ; preds = %if.end.562, %land.lhs.true.535, %land.lhs.true.529, %sw.bb.526
  %269 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld564 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %269, i32 0, i32 1
  %arrayidx565 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld564, i32 0, i64 0
  %rtx566 = bitcast %union.rtunion_def* %arrayidx565 to %struct.rtx_def**
  %270 = load %struct.rtx_def*, %struct.rtx_def** %rtx566, align 8
  %271 = load i32, i32* %mode.addr, align 4
  %call567 = call i32 @num_sign_bit_copies(%struct.rtx_def* %270, i32 %271)
  store i32 %call567, i32* %num0, align 4
  %272 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld568 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %272, i32 0, i32 1
  %arrayidx569 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld568, i32 0, i64 1
  %rtx570 = bitcast %union.rtunion_def* %arrayidx569 to %struct.rtx_def**
  %273 = load %struct.rtx_def*, %struct.rtx_def** %rtx570, align 8
  %274 = load i32, i32* %mode.addr, align 4
  %call571 = call i32 @num_sign_bit_copies(%struct.rtx_def* %273, i32 %274)
  store i32 %call571, i32* %num1, align 4
  %275 = load i32, i32* %num0, align 4
  %276 = load i32, i32* %num1, align 4
  %cmp572 = icmp slt i32 %275, %276
  br i1 %cmp572, label %cond.true.574, label %cond.false.575

cond.true.574:                                    ; preds = %if.end.563
  %277 = load i32, i32* %num0, align 4
  br label %cond.end.576

cond.false.575:                                   ; preds = %if.end.563
  %278 = load i32, i32* %num1, align 4
  br label %cond.end.576

cond.end.576:                                     ; preds = %cond.false.575, %cond.true.574
  %cond577 = phi i32 [ %277, %cond.true.574 ], [ %278, %cond.false.575 ]
  %sub578 = sub nsw i32 %cond577, 1
  %cmp579 = icmp sgt i32 1, %sub578
  br i1 %cmp579, label %cond.true.581, label %cond.false.582

cond.true.581:                                    ; preds = %cond.end.576
  br label %cond.end.590

cond.false.582:                                   ; preds = %cond.end.576
  %279 = load i32, i32* %num0, align 4
  %280 = load i32, i32* %num1, align 4
  %cmp583 = icmp slt i32 %279, %280
  br i1 %cmp583, label %cond.true.585, label %cond.false.586

cond.true.585:                                    ; preds = %cond.false.582
  %281 = load i32, i32* %num0, align 4
  br label %cond.end.587

cond.false.586:                                   ; preds = %cond.false.582
  %282 = load i32, i32* %num1, align 4
  br label %cond.end.587

cond.end.587:                                     ; preds = %cond.false.586, %cond.true.585
  %cond588 = phi i32 [ %281, %cond.true.585 ], [ %282, %cond.false.586 ]
  %sub589 = sub nsw i32 %cond588, 1
  br label %cond.end.590

cond.end.590:                                     ; preds = %cond.end.587, %cond.true.581
  %cond591 = phi i32 [ 1, %cond.true.581 ], [ %sub589, %cond.end.587 ]
  store i32 %cond591, i32* %result, align 4
  %283 = load i32, i32* %result, align 4
  store i32 %283, i32* %retval
  br label %return

sw.bb.592:                                        ; preds = %if.end.82
  %284 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld593 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %284, i32 0, i32 1
  %arrayidx594 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld593, i32 0, i64 0
  %rtx595 = bitcast %union.rtunion_def* %arrayidx594 to %struct.rtx_def**
  %285 = load %struct.rtx_def*, %struct.rtx_def** %rtx595, align 8
  %286 = load i32, i32* %mode.addr, align 4
  %call596 = call i32 @num_sign_bit_copies(%struct.rtx_def* %285, i32 %286)
  store i32 %call596, i32* %num0, align 4
  %287 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld597 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %287, i32 0, i32 1
  %arrayidx598 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld597, i32 0, i64 1
  %rtx599 = bitcast %union.rtunion_def* %arrayidx598 to %struct.rtx_def**
  %288 = load %struct.rtx_def*, %struct.rtx_def** %rtx599, align 8
  %289 = load i32, i32* %mode.addr, align 4
  %call600 = call i32 @num_sign_bit_copies(%struct.rtx_def* %288, i32 %289)
  store i32 %call600, i32* %num1, align 4
  %290 = load i32, i32* %bitwidth, align 4
  %291 = load i32, i32* %bitwidth, align 4
  %292 = load i32, i32* %num0, align 4
  %sub601 = sub i32 %291, %292
  %sub602 = sub i32 %290, %sub601
  %293 = load i32, i32* %bitwidth, align 4
  %294 = load i32, i32* %num1, align 4
  %sub603 = sub i32 %293, %294
  %sub604 = sub i32 %sub602, %sub603
  store i32 %sub604, i32* %result, align 4
  %295 = load i32, i32* %result, align 4
  %cmp605 = icmp sgt i32 %295, 0
  br i1 %cmp605, label %land.lhs.true.607, label %if.end.634

land.lhs.true.607:                                ; preds = %sw.bb.592
  %296 = load i32, i32* %bitwidth, align 4
  %cmp608 = icmp ugt i32 %296, 64
  br i1 %cmp608, label %if.then.632, label %lor.lhs.false.610

lor.lhs.false.610:                                ; preds = %land.lhs.true.607
  %297 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld611 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %297, i32 0, i32 1
  %arrayidx612 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld611, i32 0, i64 0
  %rtx613 = bitcast %union.rtunion_def* %arrayidx612 to %struct.rtx_def**
  %298 = load %struct.rtx_def*, %struct.rtx_def** %rtx613, align 8
  %299 = load i32, i32* %mode.addr, align 4
  %call614 = call i64 @nonzero_bits(%struct.rtx_def* %298, i32 %299)
  %300 = load i32, i32* %bitwidth, align 4
  %sub615 = sub i32 %300, 1
  %sh_prom616 = zext i32 %sub615 to i64
  %shl617 = shl i64 1, %sh_prom616
  %and618 = and i64 %call614, %shl617
  %cmp619 = icmp ne i64 %and618, 0
  br i1 %cmp619, label %land.lhs.true.621, label %if.end.634

land.lhs.true.621:                                ; preds = %lor.lhs.false.610
  %301 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld622 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %301, i32 0, i32 1
  %arrayidx623 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld622, i32 0, i64 1
  %rtx624 = bitcast %union.rtunion_def* %arrayidx623 to %struct.rtx_def**
  %302 = load %struct.rtx_def*, %struct.rtx_def** %rtx624, align 8
  %303 = load i32, i32* %mode.addr, align 4
  %call625 = call i64 @nonzero_bits(%struct.rtx_def* %302, i32 %303)
  %304 = load i32, i32* %bitwidth, align 4
  %sub626 = sub i32 %304, 1
  %sh_prom627 = zext i32 %sub626 to i64
  %shl628 = shl i64 1, %sh_prom627
  %and629 = and i64 %call625, %shl628
  %cmp630 = icmp ne i64 %and629, 0
  br i1 %cmp630, label %if.then.632, label %if.end.634

if.then.632:                                      ; preds = %land.lhs.true.621, %land.lhs.true.607
  %305 = load i32, i32* %result, align 4
  %dec633 = add nsw i32 %305, -1
  store i32 %dec633, i32* %result, align 4
  br label %if.end.634

if.end.634:                                       ; preds = %if.then.632, %land.lhs.true.621, %lor.lhs.false.610, %sw.bb.592
  %306 = load i32, i32* %result, align 4
  %cmp635 = icmp sgt i32 1, %306
  br i1 %cmp635, label %cond.true.637, label %cond.false.638

cond.true.637:                                    ; preds = %if.end.634
  br label %cond.end.639

cond.false.638:                                   ; preds = %if.end.634
  %307 = load i32, i32* %result, align 4
  br label %cond.end.639

cond.end.639:                                     ; preds = %cond.false.638, %cond.true.637
  %cond640 = phi i32 [ 1, %cond.true.637 ], [ %307, %cond.false.638 ]
  store i32 %cond640, i32* %retval
  br label %return

sw.bb.641:                                        ; preds = %if.end.82
  %308 = load i32, i32* %bitwidth, align 4
  %cmp642 = icmp ugt i32 %308, 64
  br i1 %cmp642, label %if.then.644, label %if.else

if.then.644:                                      ; preds = %sw.bb.641
  store i32 1, i32* %retval
  br label %return

if.else:                                          ; preds = %sw.bb.641
  %309 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld645 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %309, i32 0, i32 1
  %arrayidx646 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld645, i32 0, i64 0
  %rtx647 = bitcast %union.rtunion_def* %arrayidx646 to %struct.rtx_def**
  %310 = load %struct.rtx_def*, %struct.rtx_def** %rtx647, align 8
  %311 = load i32, i32* %mode.addr, align 4
  %call648 = call i64 @nonzero_bits(%struct.rtx_def* %310, i32 %311)
  %312 = load i32, i32* %bitwidth, align 4
  %sub649 = sub i32 %312, 1
  %sh_prom650 = zext i32 %sub649 to i64
  %shl651 = shl i64 1, %sh_prom650
  %and652 = and i64 %call648, %shl651
  %cmp653 = icmp ne i64 %and652, 0
  br i1 %cmp653, label %if.then.655, label %if.else.656

if.then.655:                                      ; preds = %if.else
  store i32 1, i32* %retval
  br label %return

if.else.656:                                      ; preds = %if.else
  %313 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld657 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %313, i32 0, i32 1
  %arrayidx658 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld657, i32 0, i64 0
  %rtx659 = bitcast %union.rtunion_def* %arrayidx658 to %struct.rtx_def**
  %314 = load %struct.rtx_def*, %struct.rtx_def** %rtx659, align 8
  %315 = load i32, i32* %mode.addr, align 4
  %call660 = call i32 @num_sign_bit_copies(%struct.rtx_def* %314, i32 %315)
  store i32 %call660, i32* %retval
  br label %return

sw.bb.661:                                        ; preds = %if.end.82
  %316 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld662 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %316, i32 0, i32 1
  %arrayidx663 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld662, i32 0, i64 1
  %rtx664 = bitcast %union.rtunion_def* %arrayidx663 to %struct.rtx_def**
  %317 = load %struct.rtx_def*, %struct.rtx_def** %rtx664, align 8
  %318 = load i32, i32* %mode.addr, align 4
  %call665 = call i32 @num_sign_bit_copies(%struct.rtx_def* %317, i32 %318)
  store i32 %call665, i32* %retval
  br label %return

sw.bb.666:                                        ; preds = %if.end.82
  %319 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld667 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %319, i32 0, i32 1
  %arrayidx668 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld667, i32 0, i64 0
  %rtx669 = bitcast %union.rtunion_def* %arrayidx668 to %struct.rtx_def**
  %320 = load %struct.rtx_def*, %struct.rtx_def** %rtx669, align 8
  %321 = load i32, i32* %mode.addr, align 4
  %call670 = call i32 @num_sign_bit_copies(%struct.rtx_def* %320, i32 %321)
  store i32 %call670, i32* %result, align 4
  %322 = load i32, i32* %result, align 4
  %cmp671 = icmp sgt i32 %322, 1
  br i1 %cmp671, label %land.lhs.true.673, label %if.end.689

land.lhs.true.673:                                ; preds = %sw.bb.666
  %323 = load i32, i32* %bitwidth, align 4
  %cmp674 = icmp ugt i32 %323, 64
  br i1 %cmp674, label %if.then.687, label %lor.lhs.false.676

lor.lhs.false.676:                                ; preds = %land.lhs.true.673
  %324 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld677 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %324, i32 0, i32 1
  %arrayidx678 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld677, i32 0, i64 1
  %rtx679 = bitcast %union.rtunion_def* %arrayidx678 to %struct.rtx_def**
  %325 = load %struct.rtx_def*, %struct.rtx_def** %rtx679, align 8
  %326 = load i32, i32* %mode.addr, align 4
  %call680 = call i64 @nonzero_bits(%struct.rtx_def* %325, i32 %326)
  %327 = load i32, i32* %bitwidth, align 4
  %sub681 = sub i32 %327, 1
  %sh_prom682 = zext i32 %sub681 to i64
  %shl683 = shl i64 1, %sh_prom682
  %and684 = and i64 %call680, %shl683
  %cmp685 = icmp ne i64 %and684, 0
  br i1 %cmp685, label %if.then.687, label %if.end.689

if.then.687:                                      ; preds = %lor.lhs.false.676, %land.lhs.true.673
  %328 = load i32, i32* %result, align 4
  %dec688 = add nsw i32 %328, -1
  store i32 %dec688, i32* %result, align 4
  br label %if.end.689

if.end.689:                                       ; preds = %if.then.687, %lor.lhs.false.676, %sw.bb.666
  %329 = load i32, i32* %result, align 4
  store i32 %329, i32* %retval
  br label %return

sw.bb.690:                                        ; preds = %if.end.82
  %330 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld691 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %330, i32 0, i32 1
  %arrayidx692 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld691, i32 0, i64 1
  %rtx693 = bitcast %union.rtunion_def* %arrayidx692 to %struct.rtx_def**
  %331 = load %struct.rtx_def*, %struct.rtx_def** %rtx693, align 8
  %332 = load i32, i32* %mode.addr, align 4
  %call694 = call i32 @num_sign_bit_copies(%struct.rtx_def* %331, i32 %332)
  store i32 %call694, i32* %result, align 4
  %333 = load i32, i32* %result, align 4
  %cmp695 = icmp sgt i32 %333, 1
  br i1 %cmp695, label %land.lhs.true.697, label %if.end.713

land.lhs.true.697:                                ; preds = %sw.bb.690
  %334 = load i32, i32* %bitwidth, align 4
  %cmp698 = icmp ugt i32 %334, 64
  br i1 %cmp698, label %if.then.711, label %lor.lhs.false.700

lor.lhs.false.700:                                ; preds = %land.lhs.true.697
  %335 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld701 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %335, i32 0, i32 1
  %arrayidx702 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld701, i32 0, i64 1
  %rtx703 = bitcast %union.rtunion_def* %arrayidx702 to %struct.rtx_def**
  %336 = load %struct.rtx_def*, %struct.rtx_def** %rtx703, align 8
  %337 = load i32, i32* %mode.addr, align 4
  %call704 = call i64 @nonzero_bits(%struct.rtx_def* %336, i32 %337)
  %338 = load i32, i32* %bitwidth, align 4
  %sub705 = sub i32 %338, 1
  %sh_prom706 = zext i32 %sub705 to i64
  %shl707 = shl i64 1, %sh_prom706
  %and708 = and i64 %call704, %shl707
  %cmp709 = icmp ne i64 %and708, 0
  br i1 %cmp709, label %if.then.711, label %if.end.713

if.then.711:                                      ; preds = %lor.lhs.false.700, %land.lhs.true.697
  %339 = load i32, i32* %result, align 4
  %dec712 = add nsw i32 %339, -1
  store i32 %dec712, i32* %result, align 4
  br label %if.end.713

if.end.713:                                       ; preds = %if.then.711, %lor.lhs.false.700, %sw.bb.690
  %340 = load i32, i32* %result, align 4
  store i32 %340, i32* %retval
  br label %return

sw.bb.714:                                        ; preds = %if.end.82
  %341 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld715 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %341, i32 0, i32 1
  %arrayidx716 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld715, i32 0, i64 0
  %rtx717 = bitcast %union.rtunion_def* %arrayidx716 to %struct.rtx_def**
  %342 = load %struct.rtx_def*, %struct.rtx_def** %rtx717, align 8
  %343 = load i32, i32* %mode.addr, align 4
  %call718 = call i32 @num_sign_bit_copies(%struct.rtx_def* %342, i32 %343)
  store i32 %call718, i32* %num0, align 4
  %344 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld719 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %344, i32 0, i32 1
  %arrayidx720 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld719, i32 0, i64 1
  %rtx721 = bitcast %union.rtunion_def* %arrayidx720 to %struct.rtx_def**
  %345 = load %struct.rtx_def*, %struct.rtx_def** %rtx721, align 8
  %346 = bitcast %struct.rtx_def* %345 to i32*
  %bf.load722 = load i32, i32* %346, align 8
  %bf.clear723 = and i32 %bf.load722, 65535
  %cmp724 = icmp eq i32 %bf.clear723, 54
  br i1 %cmp724, label %land.lhs.true.726, label %if.end.761

land.lhs.true.726:                                ; preds = %sw.bb.714
  %347 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld727 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %347, i32 0, i32 1
  %arrayidx728 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld727, i32 0, i64 1
  %rtx729 = bitcast %union.rtunion_def* %arrayidx728 to %struct.rtx_def**
  %348 = load %struct.rtx_def*, %struct.rtx_def** %rtx729, align 8
  %fld730 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %348, i32 0, i32 1
  %arrayidx731 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld730, i32 0, i64 0
  %rtwint732 = bitcast %union.rtunion_def* %arrayidx731 to i64*
  %349 = load i64, i64* %rtwint732, align 8
  %cmp733 = icmp sgt i64 %349, 0
  br i1 %cmp733, label %if.then.735, label %if.end.761

if.then.735:                                      ; preds = %land.lhs.true.726
  %350 = load i32, i32* %bitwidth, align 4
  %conv736 = sext i32 %350 to i64
  %351 = load i32, i32* %num0, align 4
  %conv737 = sext i32 %351 to i64
  %352 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld738 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %352, i32 0, i32 1
  %arrayidx739 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld738, i32 0, i64 1
  %rtx740 = bitcast %union.rtunion_def* %arrayidx739 to %struct.rtx_def**
  %353 = load %struct.rtx_def*, %struct.rtx_def** %rtx740, align 8
  %fld741 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %353, i32 0, i32 1
  %arrayidx742 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld741, i32 0, i64 0
  %rtwint743 = bitcast %union.rtunion_def* %arrayidx742 to i64*
  %354 = load i64, i64* %rtwint743, align 8
  %add744 = add nsw i64 %conv737, %354
  %cmp745 = icmp slt i64 %conv736, %add744
  br i1 %cmp745, label %cond.true.747, label %cond.false.749

cond.true.747:                                    ; preds = %if.then.735
  %355 = load i32, i32* %bitwidth, align 4
  %conv748 = sext i32 %355 to i64
  br label %cond.end.758

cond.false.749:                                   ; preds = %if.then.735
  %356 = load i32, i32* %num0, align 4
  %conv750 = sext i32 %356 to i64
  %357 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld751 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %357, i32 0, i32 1
  %arrayidx752 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld751, i32 0, i64 1
  %rtx753 = bitcast %union.rtunion_def* %arrayidx752 to %struct.rtx_def**
  %358 = load %struct.rtx_def*, %struct.rtx_def** %rtx753, align 8
  %fld754 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %358, i32 0, i32 1
  %arrayidx755 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld754, i32 0, i64 0
  %rtwint756 = bitcast %union.rtunion_def* %arrayidx755 to i64*
  %359 = load i64, i64* %rtwint756, align 8
  %add757 = add nsw i64 %conv750, %359
  br label %cond.end.758

cond.end.758:                                     ; preds = %cond.false.749, %cond.true.747
  %cond759 = phi i64 [ %conv748, %cond.true.747 ], [ %add757, %cond.false.749 ]
  %conv760 = trunc i64 %cond759 to i32
  store i32 %conv760, i32* %num0, align 4
  br label %if.end.761

if.end.761:                                       ; preds = %cond.end.758, %land.lhs.true.726, %sw.bb.714
  %360 = load i32, i32* %num0, align 4
  store i32 %360, i32* %retval
  br label %return

sw.bb.762:                                        ; preds = %if.end.82
  %361 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld763 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %361, i32 0, i32 1
  %arrayidx764 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld763, i32 0, i64 1
  %rtx765 = bitcast %union.rtunion_def* %arrayidx764 to %struct.rtx_def**
  %362 = load %struct.rtx_def*, %struct.rtx_def** %rtx765, align 8
  %363 = bitcast %struct.rtx_def* %362 to i32*
  %bf.load766 = load i32, i32* %363, align 8
  %bf.clear767 = and i32 %bf.load766, 65535
  %cmp768 = icmp ne i32 %bf.clear767, 54
  br i1 %cmp768, label %if.then.789, label %lor.lhs.false.770

lor.lhs.false.770:                                ; preds = %sw.bb.762
  %364 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld771 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %364, i32 0, i32 1
  %arrayidx772 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld771, i32 0, i64 1
  %rtx773 = bitcast %union.rtunion_def* %arrayidx772 to %struct.rtx_def**
  %365 = load %struct.rtx_def*, %struct.rtx_def** %rtx773, align 8
  %fld774 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %365, i32 0, i32 1
  %arrayidx775 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld774, i32 0, i64 0
  %rtwint776 = bitcast %union.rtunion_def* %arrayidx775 to i64*
  %366 = load i64, i64* %rtwint776, align 8
  %cmp777 = icmp slt i64 %366, 0
  br i1 %cmp777, label %if.then.789, label %lor.lhs.false.779

lor.lhs.false.779:                                ; preds = %lor.lhs.false.770
  %367 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld780 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %367, i32 0, i32 1
  %arrayidx781 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld780, i32 0, i64 1
  %rtx782 = bitcast %union.rtunion_def* %arrayidx781 to %struct.rtx_def**
  %368 = load %struct.rtx_def*, %struct.rtx_def** %rtx782, align 8
  %fld783 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %368, i32 0, i32 1
  %arrayidx784 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld783, i32 0, i64 0
  %rtwint785 = bitcast %union.rtunion_def* %arrayidx784 to i64*
  %369 = load i64, i64* %rtwint785, align 8
  %370 = load i32, i32* %bitwidth, align 4
  %conv786 = sext i32 %370 to i64
  %cmp787 = icmp sge i64 %369, %conv786
  br i1 %cmp787, label %if.then.789, label %if.end.790

if.then.789:                                      ; preds = %lor.lhs.false.779, %lor.lhs.false.770, %sw.bb.762
  store i32 1, i32* %retval
  br label %return

if.end.790:                                       ; preds = %lor.lhs.false.779
  %371 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld791 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %371, i32 0, i32 1
  %arrayidx792 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld791, i32 0, i64 0
  %rtx793 = bitcast %union.rtunion_def* %arrayidx792 to %struct.rtx_def**
  %372 = load %struct.rtx_def*, %struct.rtx_def** %rtx793, align 8
  %373 = load i32, i32* %mode.addr, align 4
  %call794 = call i32 @num_sign_bit_copies(%struct.rtx_def* %372, i32 %373)
  store i32 %call794, i32* %num0, align 4
  %374 = load i32, i32* %num0, align 4
  %conv795 = sext i32 %374 to i64
  %375 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld796 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %375, i32 0, i32 1
  %arrayidx797 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld796, i32 0, i64 1
  %rtx798 = bitcast %union.rtunion_def* %arrayidx797 to %struct.rtx_def**
  %376 = load %struct.rtx_def*, %struct.rtx_def** %rtx798, align 8
  %fld799 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %376, i32 0, i32 1
  %arrayidx800 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld799, i32 0, i64 0
  %rtwint801 = bitcast %union.rtunion_def* %arrayidx800 to i64*
  %377 = load i64, i64* %rtwint801, align 8
  %sub802 = sub nsw i64 %conv795, %377
  %cmp803 = icmp sgt i64 1, %sub802
  br i1 %cmp803, label %cond.true.805, label %cond.false.806

cond.true.805:                                    ; preds = %if.end.790
  br label %cond.end.815

cond.false.806:                                   ; preds = %if.end.790
  %378 = load i32, i32* %num0, align 4
  %conv807 = sext i32 %378 to i64
  %379 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld808 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %379, i32 0, i32 1
  %arrayidx809 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld808, i32 0, i64 1
  %rtx810 = bitcast %union.rtunion_def* %arrayidx809 to %struct.rtx_def**
  %380 = load %struct.rtx_def*, %struct.rtx_def** %rtx810, align 8
  %fld811 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %380, i32 0, i32 1
  %arrayidx812 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld811, i32 0, i64 0
  %rtwint813 = bitcast %union.rtunion_def* %arrayidx812 to i64*
  %381 = load i64, i64* %rtwint813, align 8
  %sub814 = sub nsw i64 %conv807, %381
  br label %cond.end.815

cond.end.815:                                     ; preds = %cond.false.806, %cond.true.805
  %cond816 = phi i64 [ 1, %cond.true.805 ], [ %sub814, %cond.false.806 ]
  %conv817 = trunc i64 %cond816 to i32
  store i32 %conv817, i32* %retval
  br label %return

sw.bb.818:                                        ; preds = %if.end.82
  %382 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld819 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %382, i32 0, i32 1
  %arrayidx820 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld819, i32 0, i64 1
  %rtx821 = bitcast %union.rtunion_def* %arrayidx820 to %struct.rtx_def**
  %383 = load %struct.rtx_def*, %struct.rtx_def** %rtx821, align 8
  %384 = load i32, i32* %mode.addr, align 4
  %call822 = call i32 @num_sign_bit_copies(%struct.rtx_def* %383, i32 %384)
  store i32 %call822, i32* %num0, align 4
  %385 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld823 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %385, i32 0, i32 1
  %arrayidx824 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld823, i32 0, i64 2
  %rtx825 = bitcast %union.rtunion_def* %arrayidx824 to %struct.rtx_def**
  %386 = load %struct.rtx_def*, %struct.rtx_def** %rtx825, align 8
  %387 = load i32, i32* %mode.addr, align 4
  %call826 = call i32 @num_sign_bit_copies(%struct.rtx_def* %386, i32 %387)
  store i32 %call826, i32* %num1, align 4
  %388 = load i32, i32* %num0, align 4
  %389 = load i32, i32* %num1, align 4
  %cmp827 = icmp slt i32 %388, %389
  br i1 %cmp827, label %cond.true.829, label %cond.false.830

cond.true.829:                                    ; preds = %sw.bb.818
  %390 = load i32, i32* %num0, align 4
  br label %cond.end.831

cond.false.830:                                   ; preds = %sw.bb.818
  %391 = load i32, i32* %num1, align 4
  br label %cond.end.831

cond.end.831:                                     ; preds = %cond.false.830, %cond.true.829
  %cond832 = phi i32 [ %390, %cond.true.829 ], [ %391, %cond.false.830 ]
  store i32 %cond832, i32* %retval
  br label %return

sw.bb.833:                                        ; preds = %if.end.82, %if.end.82, %if.end.82, %if.end.82, %if.end.82, %if.end.82, %if.end.82, %if.end.82, %if.end.82, %if.end.82, %if.end.82, %if.end.82, %if.end.82, %if.end.82, %if.end.82, %if.end.82, %if.end.82, %if.end.82
  store i64 1, i64* %nonzero, align 8
  %392 = load i32, i32* %bitwidth, align 4
  %cmp834 = icmp ule i32 %392, 64
  br i1 %cmp834, label %land.lhs.true.836, label %if.end.848

land.lhs.true.836:                                ; preds = %sw.bb.833
  %393 = load i64, i64* %nonzero, align 8
  %394 = load i32, i32* %bitwidth, align 4
  %sub837 = sub i32 %394, 1
  %sh_prom838 = zext i32 %sub837 to i64
  %shl839 = shl i64 1, %sh_prom838
  %and840 = and i64 %393, %shl839
  %cmp841 = icmp ne i64 %and840, 0
  br i1 %cmp841, label %if.then.843, label %if.end.848

if.then.843:                                      ; preds = %land.lhs.true.836
  %395 = load i64, i64* %nonzero, align 8
  %neg844 = xor i64 %395, -1
  %396 = load i32, i32* %mode.addr, align 4
  %idxprom845 = sext i32 %396 to i64
  %arrayidx846 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom845
  %397 = load i64, i64* %arrayidx846, align 8
  %and847 = and i64 %neg844, %397
  store i64 %and847, i64* %nonzero, align 8
  br label %if.end.848

if.end.848:                                       ; preds = %if.then.843, %land.lhs.true.836, %sw.bb.833
  %398 = load i64, i64* %nonzero, align 8
  %cmp849 = icmp eq i64 %398, 0
  br i1 %cmp849, label %cond.true.851, label %cond.false.852

cond.true.851:                                    ; preds = %if.end.848
  %399 = load i32, i32* %bitwidth, align 4
  br label %cond.end.856

cond.false.852:                                   ; preds = %if.end.848
  %400 = load i32, i32* %bitwidth, align 4
  %401 = load i64, i64* %nonzero, align 8
  %call853 = call i32 @floor_log2_wide(i64 %401)
  %sub854 = sub i32 %400, %call853
  %sub855 = sub i32 %sub854, 1
  br label %cond.end.856

cond.end.856:                                     ; preds = %cond.false.852, %cond.true.851
  %cond857 = phi i32 [ %399, %cond.true.851 ], [ %sub855, %cond.false.852 ]
  store i32 %cond857, i32* %retval
  br label %return

sw.default:                                       ; preds = %if.end.82
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.476, %if.end.338, %if.end.305, %sw.bb.198, %if.end.197
  %402 = load i32, i32* %bitwidth, align 4
  %cmp858 = icmp ugt i32 %402, 64
  br i1 %cmp858, label %if.then.860, label %if.end.861

if.then.860:                                      ; preds = %sw.epilog
  store i32 1, i32* %retval
  br label %return

if.end.861:                                       ; preds = %sw.epilog
  %403 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %404 = load i32, i32* %mode.addr, align 4
  %call862 = call i64 @nonzero_bits(%struct.rtx_def* %403, i32 %404)
  store i64 %call862, i64* %nonzero, align 8
  %405 = load i64, i64* %nonzero, align 8
  %406 = load i32, i32* %bitwidth, align 4
  %sub863 = sub i32 %406, 1
  %sh_prom864 = zext i32 %sub863 to i64
  %shl865 = shl i64 1, %sh_prom864
  %and866 = and i64 %405, %shl865
  %tobool867 = icmp ne i64 %and866, 0
  br i1 %tobool867, label %cond.true.868, label %cond.false.869

cond.true.868:                                    ; preds = %if.end.861
  br label %cond.end.873

cond.false.869:                                   ; preds = %if.end.861
  %407 = load i32, i32* %bitwidth, align 4
  %408 = load i64, i64* %nonzero, align 8
  %call870 = call i32 @floor_log2_wide(i64 %408)
  %sub871 = sub i32 %407, %call870
  %sub872 = sub i32 %sub871, 1
  br label %cond.end.873

cond.end.873:                                     ; preds = %cond.false.869, %cond.true.868
  %cond874 = phi i32 [ 1, %cond.true.868 ], [ %sub872, %cond.false.869 ]
  store i32 %cond874, i32* %retval
  br label %return

return:                                           ; preds = %cond.end.873, %if.then.860, %cond.end.856, %cond.end.831, %cond.end.815, %if.then.789, %if.end.761, %if.end.713, %if.end.689, %sw.bb.661, %if.else.656, %if.then.655, %if.then.644, %cond.end.639, %cond.end.590, %cond.end.560, %cond.end.524, %if.end.510, %if.then.499, %cond.end.490, %cond.end.473, %sw.bb.388, %cond.end.386, %sw.bb.339, %cond.end.335, %cond.end.303, %cond.end.258, %cond.end.223, %if.then.190, %if.then.168, %if.then.157, %if.then.81, %cond.end, %if.then.34
  %409 = load i32, i32* %retval
  ret i32 %409
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @remove_death(i32 %regno, %struct.rtx_def* %insn) #0 {
entry:
  %regno.addr = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %note = alloca %struct.rtx_def*, align 8
  store i32 %regno, i32* %regno.addr, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %1 = load i32, i32* %regno.addr, align 4
  %call = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %0, i32 1, i32 %1)
  store %struct.rtx_def* %call, %struct.rtx_def** %note, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %tobool = icmp ne %struct.rtx_def* %2, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %regno.addr, align 4
  %idxprom = zext i32 %3 to i64
  %4 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %4, i32 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg, i32 0, i64 %idxprom
  %5 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx, align 8
  %deaths = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %5, i32 0, i32 6
  %6 = load i32, i32* %deaths, align 4
  %dec = add nsw i32 %6, -1
  store i32 %dec, i32* %deaths, align 4
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %8 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  call void @remove_note(%struct.rtx_def* %7, %struct.rtx_def* %8)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  ret %struct.rtx_def* %9
}

declare %struct.rtx_def* @find_regno_note(%struct.rtx_def*, i32, i32) #1

declare void @remove_note(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define void @dump_combine_stats(%struct._IO_FILE* %file) #0 {
entry:
  %file.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8
  %1 = load i32, i32* @combine_attempts, align 4
  %2 = load i32, i32* @combine_merges, align 4
  %3 = load i32, i32* @combine_extras, align 4
  %4 = load i32, i32* @combine_successes, align 4
  call void (%struct._IO_FILE*, i8*, ...) @fnotice(%struct._IO_FILE* %0, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str, i32 0, i32 0), i32 %1, i32 %2, i32 %3, i32 %4)
  ret void
}

declare void @fnotice(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define void @dump_combine_total_stats(%struct._IO_FILE* %file) #0 {
entry:
  %file.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8
  %1 = load i32, i32* @total_attempts, align 4
  %2 = load i32, i32* @total_merges, align 4
  %3 = load i32, i32* @total_extras, align 4
  %4 = load i32, i32* @total_successes, align 4
  call void (%struct._IO_FILE*, i8*, ...) @fnotice(%struct._IO_FILE* %0, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.1, i32 0, i32 0), i32 %1, i32 %2, i32 %3, i32 %4)
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #3

declare i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @expand_field_assignment(%struct.rtx_def* %x) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %inner = alloca %struct.rtx_def*, align 8
  %pos = alloca %struct.rtx_def*, align 8
  %len = alloca i32, align 4
  %mask = alloca %struct.rtx_def*, align 8
  %compute_mode = alloca i32, align 4
  %imode = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  br label %while.body

while.body:                                       ; preds = %entry, %if.then.148, %if.end.237
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load = load i32, i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 64
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %while.body
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1, i32 0, i64 0
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rtx3, align 8
  %fld4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i32 0, i64 0
  %rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rtx6, align 8
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load7 = load i32, i32* %6, align 8
  %bf.clear8 = and i32 %bf.load7, 65535
  %cmp9 = icmp eq i32 %bf.clear8, 63
  br i1 %cmp9, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i32 0, i64 0
  %rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rtx12, align 8
  %fld13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i32 0, i64 0
  %rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rtx15, align 8
  %fld16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i32 0, i64 0
  %rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rtx18, align 8
  store %struct.rtx_def* %10, %struct.rtx_def** %inner, align 8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i32 0, i64 0
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rtx21, align 8
  %fld22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i32 0, i64 0
  %rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rtx24, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load25 = load i32, i32* %14, align 8
  %bf.lshr = lshr i32 %bf.load25, 16
  %bf.clear26 = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear26 to i64
  %arrayidx27 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom
  %15 = load i16, i16* %arrayidx27, align 2
  %conv = zext i16 %15 to i32
  store i32 %conv, i32* %len, align 4
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i32 0, i64 0
  %rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rtx30, align 8
  %fld31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i32 0, i64 0
  %rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rtx33, align 8
  %call = call i32 @subreg_lsb(%struct.rtx_def* %18)
  %conv34 = zext i32 %call to i64
  %call35 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv34)
  store %struct.rtx_def* %call35, %struct.rtx_def** %pos, align 8
  br label %if.end.171

if.else:                                          ; preds = %land.lhs.true, %while.body
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i32 0, i64 0
  %rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rtx38, align 8
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load39 = load i32, i32* %21, align 8
  %bf.clear40 = and i32 %bf.load39, 65535
  %cmp41 = icmp eq i32 %bf.clear40, 133
  br i1 %cmp41, label %land.lhs.true.43, label %if.else.101

land.lhs.true.43:                                 ; preds = %if.else
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i32 0, i64 0
  %rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rtx46, align 8
  %fld47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i32 0, i64 1
  %rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rtx49, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load50 = load i32, i32* %25, align 8
  %bf.clear51 = and i32 %bf.load50, 65535
  %cmp52 = icmp eq i32 %bf.clear51, 54
  br i1 %cmp52, label %if.then.54, label %if.else.101

if.then.54:                                       ; preds = %land.lhs.true.43
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1
  %arrayidx56 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld55, i32 0, i64 0
  %rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rtx57, align 8
  %fld58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i32 0, i64 0
  %rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rtx60, align 8
  store %struct.rtx_def* %28, %struct.rtx_def** %inner, align 8
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i32 0, i64 0
  %rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rtx63, align 8
  %fld64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld64, i32 0, i64 1
  %rtx66 = bitcast %union.rtunion_def* %arrayidx65 to %struct.rtx_def**
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rtx66, align 8
  %fld67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx68 to i64*
  %32 = load i64, i64* %rtwint, align 8
  %conv69 = trunc i64 %32 to i32
  store i32 %conv69, i32* %len, align 4
  %33 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i32 0, i64 0
  %rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rtx72, align 8
  %fld73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i32 0, i64 2
  %rtx75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rtx75, align 8
  store %struct.rtx_def* %35, %struct.rtx_def** %pos, align 8
  %36 = load %struct.rtx_def*, %struct.rtx_def** %pos, align 8
  %37 = bitcast %struct.rtx_def* %36 to i32*
  %bf.load76 = load i32, i32* %37, align 8
  %bf.clear77 = and i32 %bf.load76, 65535
  %cmp78 = icmp eq i32 %bf.clear77, 54
  br i1 %cmp78, label %land.lhs.true.80, label %if.end

land.lhs.true.80:                                 ; preds = %if.then.54
  %38 = load %struct.rtx_def*, %struct.rtx_def** %pos, align 8
  %fld81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1
  %arrayidx82 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld81, i32 0, i64 0
  %rtwint83 = bitcast %union.rtunion_def* %arrayidx82 to i64*
  %39 = load i64, i64* %rtwint83, align 8
  %40 = load i32, i32* %len, align 4
  %conv84 = sext i32 %40 to i64
  %add = add nsw i64 %39, %conv84
  %41 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %42 = bitcast %struct.rtx_def* %41 to i32*
  %bf.load85 = load i32, i32* %42, align 8
  %bf.lshr86 = lshr i32 %bf.load85, 16
  %bf.clear87 = and i32 %bf.lshr86, 255
  %idxprom88 = sext i32 %bf.clear87 to i64
  %arrayidx89 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom88
  %43 = load i16, i16* %arrayidx89, align 2
  %conv90 = zext i16 %43 to i64
  %cmp91 = icmp sgt i64 %add, %conv90
  br i1 %cmp91, label %if.then.93, label %if.end

if.then.93:                                       ; preds = %land.lhs.true.80
  %44 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1
  %arrayidx95 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i32 0, i64 0
  %rtx96 = bitcast %union.rtunion_def* %arrayidx95 to %struct.rtx_def**
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rtx96, align 8
  %46 = bitcast %struct.rtx_def* %45 to i32*
  %bf.load97 = load i32, i32* %46, align 8
  %bf.lshr98 = lshr i32 %bf.load97, 16
  %bf.clear99 = and i32 %bf.lshr98, 255
  %47 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %call100 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 %bf.clear99, %struct.rtx_def* %47)
  store %struct.rtx_def* %call100, %struct.rtx_def** %inner, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.93, %land.lhs.true.80, %if.then.54
  br label %if.end.170

if.else.101:                                      ; preds = %land.lhs.true.43, %if.else
  %48 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i32 0, i64 0
  %rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rtx104, align 8
  %50 = bitcast %struct.rtx_def* %49 to i32*
  %bf.load105 = load i32, i32* %50, align 8
  %bf.clear106 = and i32 %bf.load105, 65535
  %cmp107 = icmp eq i32 %bf.clear106, 63
  br i1 %cmp107, label %land.lhs.true.109, label %if.else.169

land.lhs.true.109:                                ; preds = %if.else.101
  %51 = load i32, i32* @nonzero_sign_valid, align 4
  %tobool = icmp ne i32 %51, 0
  br i1 %tobool, label %land.lhs.true.110, label %if.else.169

land.lhs.true.110:                                ; preds = %land.lhs.true.109
  %52 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1
  %arrayidx112 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld111, i32 0, i64 0
  %rtx113 = bitcast %union.rtunion_def* %arrayidx112 to %struct.rtx_def**
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rtx113, align 8
  %54 = bitcast %struct.rtx_def* %53 to i32*
  %bf.load114 = load i32, i32* %54, align 8
  %bf.lshr115 = lshr i32 %bf.load114, 16
  %bf.clear116 = and i32 %bf.lshr115, 255
  %idxprom117 = sext i32 %bf.clear116 to i64
  %arrayidx118 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom117
  %55 = load i8, i8* %arrayidx118, align 1
  %conv119 = zext i8 %55 to i32
  %56 = load i32, i32* @target_flags, align 4
  %and = and i32 %56, 33554432
  %tobool120 = icmp ne i32 %and, 0
  %cond = select i1 %tobool120, i32 8, i32 4
  %sub = sub nsw i32 %cond, 1
  %add121 = add nsw i32 %conv119, %sub
  %57 = load i32, i32* @target_flags, align 4
  %and122 = and i32 %57, 33554432
  %tobool123 = icmp ne i32 %and122, 0
  %cond124 = select i1 %tobool123, i32 8, i32 4
  %div = sdiv i32 %add121, %cond124
  %58 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i32 0, i64 0
  %rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rtx127, align 8
  %fld128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1
  %arrayidx129 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld128, i32 0, i64 0
  %rtx130 = bitcast %union.rtunion_def* %arrayidx129 to %struct.rtx_def**
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rtx130, align 8
  %61 = bitcast %struct.rtx_def* %60 to i32*
  %bf.load131 = load i32, i32* %61, align 8
  %bf.lshr132 = lshr i32 %bf.load131, 16
  %bf.clear133 = and i32 %bf.lshr132, 255
  %idxprom134 = sext i32 %bf.clear133 to i64
  %arrayidx135 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom134
  %62 = load i8, i8* %arrayidx135, align 1
  %conv136 = zext i8 %62 to i32
  %63 = load i32, i32* @target_flags, align 4
  %and137 = and i32 %63, 33554432
  %tobool138 = icmp ne i32 %and137, 0
  %cond139 = select i1 %tobool138, i32 8, i32 4
  %sub140 = sub nsw i32 %cond139, 1
  %add141 = add nsw i32 %conv136, %sub140
  %64 = load i32, i32* @target_flags, align 4
  %and142 = and i32 %64, 33554432
  %tobool143 = icmp ne i32 %and142, 0
  %cond144 = select i1 %tobool143, i32 8, i32 4
  %div145 = sdiv i32 %add141, %cond144
  %cmp146 = icmp eq i32 %div, %div145
  br i1 %cmp146, label %if.then.148, label %if.else.169

if.then.148:                                      ; preds = %land.lhs.true.110
  %65 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld149 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1
  %arrayidx150 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld149, i32 0, i64 0
  %rtx151 = bitcast %union.rtunion_def* %arrayidx150 to %struct.rtx_def**
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rtx151, align 8
  %fld152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1
  %arrayidx153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld152, i32 0, i64 0
  %rtx154 = bitcast %union.rtunion_def* %arrayidx153 to %struct.rtx_def**
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rtx154, align 8
  %68 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld155 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1
  %arrayidx156 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld155, i32 0, i64 0
  %rtx157 = bitcast %union.rtunion_def* %arrayidx156 to %struct.rtx_def**
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rtx157, align 8
  %fld158 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1
  %arrayidx159 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld158, i32 0, i64 0
  %rtx160 = bitcast %union.rtunion_def* %arrayidx159 to %struct.rtx_def**
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rtx160, align 8
  %71 = bitcast %struct.rtx_def* %70 to i32*
  %bf.load161 = load i32, i32* %71, align 8
  %bf.lshr162 = lshr i32 %bf.load161, 16
  %bf.clear163 = and i32 %bf.lshr162, 255
  %72 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld164 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1
  %arrayidx165 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld164, i32 0, i64 1
  %rtx166 = bitcast %union.rtunion_def* %arrayidx165 to %struct.rtx_def**
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rtx166, align 8
  %call167 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %bf.clear163, %struct.rtx_def* %73)
  %call168 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %67, %struct.rtx_def* %call167)
  store %struct.rtx_def* %call168, %struct.rtx_def** %x.addr, align 8
  br label %while.body

if.else.169:                                      ; preds = %land.lhs.true.110, %land.lhs.true.109, %if.else.101
  br label %while.end.250

if.end.170:                                       ; preds = %if.end
  br label %if.end.171

if.end.171:                                       ; preds = %if.end.170, %if.then
  br label %while.cond.172

while.cond.172:                                   ; preds = %while.body.179, %if.end.171
  %74 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %75 = bitcast %struct.rtx_def* %74 to i32*
  %bf.load173 = load i32, i32* %75, align 8
  %bf.clear174 = and i32 %bf.load173, 65535
  %cmp175 = icmp eq i32 %bf.clear174, 63
  br i1 %cmp175, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.172
  %76 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %call177 = call i32 @subreg_lowpart_p(%struct.rtx_def* %76)
  %tobool178 = icmp ne i32 %call177, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.172
  %77 = phi i1 [ false, %while.cond.172 ], [ %tobool178, %land.rhs ]
  br i1 %77, label %while.body.179, label %while.end

while.body.179:                                   ; preds = %land.end
  %78 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %fld180 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx181 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld180, i32 0, i64 0
  %rtx182 = bitcast %union.rtunion_def* %arrayidx181 to %struct.rtx_def**
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rtx182, align 8
  store %struct.rtx_def* %79, %struct.rtx_def** %inner, align 8
  br label %while.cond.172

while.end:                                        ; preds = %land.end
  %80 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %81 = bitcast %struct.rtx_def* %80 to i32*
  %bf.load183 = load i32, i32* %81, align 8
  %bf.lshr184 = lshr i32 %bf.load183, 16
  %bf.clear185 = and i32 %bf.lshr184, 255
  store i32 %bf.clear185, i32* %compute_mode, align 4
  %82 = load i32, i32* %compute_mode, align 4
  %idxprom186 = sext i32 %82 to i64
  %arrayidx187 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom186
  %83 = load i32, i32* %arrayidx187, align 4
  %cmp188 = icmp eq i32 %83, 1
  br i1 %cmp188, label %if.end.230, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.end
  %84 = load i32, i32* %compute_mode, align 4
  %idxprom190 = sext i32 %84 to i64
  %arrayidx191 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom190
  %85 = load i32, i32* %arrayidx191, align 4
  %cmp192 = icmp eq i32 %85, 3
  br i1 %cmp192, label %if.end.230, label %lor.lhs.false.194

lor.lhs.false.194:                                ; preds = %lor.lhs.false
  %86 = load i32, i32* %compute_mode, align 4
  %idxprom195 = sext i32 %86 to i64
  %arrayidx196 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom195
  %87 = load i32, i32* %arrayidx196, align 4
  %cmp197 = icmp eq i32 %87, 5
  br i1 %cmp197, label %if.end.230, label %lor.lhs.false.199

lor.lhs.false.199:                                ; preds = %lor.lhs.false.194
  %88 = load i32, i32* %compute_mode, align 4
  %idxprom200 = sext i32 %88 to i64
  %arrayidx201 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom200
  %89 = load i32, i32* %arrayidx201, align 4
  %cmp202 = icmp eq i32 %89, 7
  br i1 %cmp202, label %if.end.230, label %if.then.204

if.then.204:                                      ; preds = %lor.lhs.false.199
  %90 = load i32, i32* %compute_mode, align 4
  %idxprom205 = sext i32 %90 to i64
  %arrayidx206 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom205
  %91 = load i32, i32* %arrayidx206, align 4
  %cmp207 = icmp eq i32 %91, 2
  br i1 %cmp207, label %if.end.220, label %lor.lhs.false.209

lor.lhs.false.209:                                ; preds = %if.then.204
  %92 = load i32, i32* %compute_mode, align 4
  %idxprom210 = sext i32 %92 to i64
  %arrayidx211 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom210
  %93 = load i32, i32* %arrayidx211, align 4
  %cmp212 = icmp eq i32 %93, 6
  br i1 %cmp212, label %if.end.220, label %lor.lhs.false.214

lor.lhs.false.214:                                ; preds = %lor.lhs.false.209
  %94 = load i32, i32* %compute_mode, align 4
  %idxprom215 = sext i32 %94 to i64
  %arrayidx216 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom215
  %95 = load i32, i32* %arrayidx216, align 4
  %cmp217 = icmp eq i32 %95, 8
  br i1 %cmp217, label %if.end.220, label %if.then.219

if.then.219:                                      ; preds = %lor.lhs.false.214
  br label %while.end.250

if.end.220:                                       ; preds = %lor.lhs.false.214, %lor.lhs.false.209, %if.then.204
  %96 = load i32, i32* %compute_mode, align 4
  %idxprom221 = sext i32 %96 to i64
  %arrayidx222 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom221
  %97 = load i16, i16* %arrayidx222, align 2
  %conv223 = zext i16 %97 to i32
  %call224 = call i32 @mode_for_size(i32 %conv223, i32 1, i32 0)
  store i32 %call224, i32* %imode, align 4
  %98 = load i32, i32* %imode, align 4
  %cmp225 = icmp eq i32 %98, 51
  br i1 %cmp225, label %if.then.227, label %if.end.228

if.then.227:                                      ; preds = %if.end.220
  br label %while.end.250

if.end.228:                                       ; preds = %if.end.220
  %99 = load i32, i32* %imode, align 4
  store i32 %99, i32* %compute_mode, align 4
  %100 = load i32, i32* %imode, align 4
  %101 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %call229 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %100, %struct.rtx_def* %101)
  store %struct.rtx_def* %call229, %struct.rtx_def** %inner, align 8
  br label %if.end.230

if.end.230:                                       ; preds = %if.end.228, %lor.lhs.false.199, %lor.lhs.false.194, %lor.lhs.false, %while.end
  %102 = load i32, i32* %len, align 4
  %cmp231 = icmp slt i32 %102, 64
  br i1 %cmp231, label %if.then.233, label %if.else.236

if.then.233:                                      ; preds = %if.end.230
  %103 = load i32, i32* %len, align 4
  %sh_prom = zext i32 %103 to i64
  %shl = shl i64 1, %sh_prom
  %sub234 = sub nsw i64 %shl, 1
  %call235 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub234)
  store %struct.rtx_def* %call235, %struct.rtx_def** %mask, align 8
  br label %if.end.237

if.else.236:                                      ; preds = %if.end.230
  br label %while.end.250

if.end.237:                                       ; preds = %if.then.233
  %104 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %call238 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %104)
  %105 = load i32, i32* %compute_mode, align 4
  %106 = load i32, i32* %compute_mode, align 4
  %107 = load i32, i32* %compute_mode, align 4
  %108 = load i32, i32* %compute_mode, align 4
  %109 = load %struct.rtx_def*, %struct.rtx_def** %mask, align 8
  %110 = load %struct.rtx_def*, %struct.rtx_def** %pos, align 8
  %call239 = call %struct.rtx_def* @gen_binary(i32 87, i32 %108, %struct.rtx_def* %109, %struct.rtx_def* %110)
  %111 = load i32, i32* %compute_mode, align 4
  %call240 = call %struct.rtx_def* @simplify_gen_unary(i32 86, i32 %107, %struct.rtx_def* %call239, i32 %111)
  %112 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %call241 = call %struct.rtx_def* @gen_binary(i32 83, i32 %106, %struct.rtx_def* %call240, %struct.rtx_def* %112)
  %113 = load i32, i32* %compute_mode, align 4
  %114 = load i32, i32* %compute_mode, align 4
  %115 = load i32, i32* %compute_mode, align 4
  %116 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld242 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i32 0, i32 1
  %arrayidx243 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld242, i32 0, i64 1
  %rtx244 = bitcast %union.rtunion_def* %arrayidx243 to %struct.rtx_def**
  %117 = load %struct.rtx_def*, %struct.rtx_def** %rtx244, align 8
  %call245 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %115, %struct.rtx_def* %117)
  %118 = load %struct.rtx_def*, %struct.rtx_def** %mask, align 8
  %call246 = call %struct.rtx_def* @gen_binary(i32 83, i32 %114, %struct.rtx_def* %call245, %struct.rtx_def* %118)
  %119 = load %struct.rtx_def*, %struct.rtx_def** %pos, align 8
  %call247 = call %struct.rtx_def* @gen_binary(i32 87, i32 %113, %struct.rtx_def* %call246, %struct.rtx_def* %119)
  %call248 = call %struct.rtx_def* @gen_binary(i32 84, i32 %105, %struct.rtx_def* %call241, %struct.rtx_def* %call247)
  %call249 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call238, %struct.rtx_def* %call248)
  store %struct.rtx_def* %call249, %struct.rtx_def** %x.addr, align 8
  br label %while.body

while.end.250:                                    ; preds = %if.else.236, %if.then.227, %if.then.219, %if.else.169
  %120 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  ret %struct.rtx_def* %120
}

declare %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #1

declare i32 @subreg_lsb(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_e(i32, i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_ee(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @gen_lowpart_for_combine(i32 %mode, %struct.rtx_def* %x) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %result = alloca %struct.rtx_def*, align 8
  %offset = alloca i32, align 4
  %offset115 = alloca i32, align 4
  %res = alloca %struct.rtx_def*, align 8
  store i32 %mode, i32* %mode.addr, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %2 = load i32, i32* %mode.addr, align 4
  %cmp = icmp eq i32 %bf.clear, %2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %mode.addr, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom
  %5 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %5 to i32
  %6 = load i32, i32* @target_flags, align 4
  %and = and i32 %6, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond = select i1 %tobool, i32 8, i32 4
  %cmp1 = icmp sgt i32 %conv, %cond
  br i1 %cmp1, label %land.lhs.true, label %if.end.33

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load3 = load i32, i32* %8, align 8
  %bf.lshr4 = lshr i32 %bf.load3, 16
  %bf.clear5 = and i32 %bf.lshr4, 255
  %cmp6 = icmp eq i32 %bf.clear5, 0
  br i1 %cmp6, label %land.lhs.true.8, label %lor.lhs.false.17

land.lhs.true.8:                                  ; preds = %land.lhs.true
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load9 = load i32, i32* %10, align 8
  %bf.clear10 = and i32 %bf.load9, 65535
  %cmp11 = icmp eq i32 %bf.clear10, 54
  br i1 %cmp11, label %if.end.33, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load13 = load i32, i32* %12, align 8
  %bf.clear14 = and i32 %bf.load13, 65535
  %cmp15 = icmp eq i32 %bf.clear14, 55
  br i1 %cmp15, label %if.end.33, label %lor.lhs.false.17

lor.lhs.false.17:                                 ; preds = %lor.lhs.false, %land.lhs.true
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load18 = load i32, i32* %14, align 8
  %bf.lshr19 = lshr i32 %bf.load18, 16
  %bf.clear20 = and i32 %bf.lshr19, 255
  %idxprom21 = sext i32 %bf.clear20 to i64
  %arrayidx22 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom21
  %15 = load i8, i8* %arrayidx22, align 1
  %conv23 = zext i8 %15 to i32
  %16 = load i32, i32* %mode.addr, align 4
  %idxprom24 = sext i32 %16 to i64
  %arrayidx25 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom24
  %17 = load i8, i8* %arrayidx25, align 1
  %conv26 = zext i8 %17 to i32
  %cmp27 = icmp eq i32 %conv23, %conv26
  br i1 %cmp27, label %if.end.33, label %if.then.29

if.then.29:                                       ; preds = %lor.lhs.false.17
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load30 = load i32, i32* %19, align 8
  %bf.lshr31 = lshr i32 %bf.load30, 16
  %bf.clear32 = and i32 %bf.lshr31, 255
  %20 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %call = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 %bf.clear32, %struct.rtx_def* %20)
  store %struct.rtx_def* %call, %struct.rtx_def** %retval
  br label %return

if.end.33:                                        ; preds = %lor.lhs.false.17, %lor.lhs.false, %land.lhs.true.8, %if.end
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %22 = bitcast %struct.rtx_def* %21 to i32*
  %bf.load34 = load i32, i32* %22, align 8
  %bf.clear35 = and i32 %bf.load34, 65535
  %cmp36 = icmp eq i32 %bf.clear35, 63
  br i1 %cmp36, label %land.lhs.true.38, label %if.end.55

land.lhs.true.38:                                 ; preds = %if.end.33
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load40 = load i32, i32* %25, align 8
  %bf.clear41 = and i32 %bf.load40, 65535
  %cmp42 = icmp eq i32 %bf.clear41, 66
  br i1 %cmp42, label %if.then.44, label %if.end.55

if.then.44:                                       ; preds = %land.lhs.true.38
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i32 0, i64 0
  %rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rtx47, align 8
  store %struct.rtx_def* %27, %struct.rtx_def** %x.addr, align 8
  %28 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load48 = load i32, i32* %29, align 8
  %bf.lshr49 = lshr i32 %bf.load48, 16
  %bf.clear50 = and i32 %bf.lshr49, 255
  %30 = load i32, i32* %mode.addr, align 4
  %cmp51 = icmp eq i32 %bf.clear50, %30
  br i1 %cmp51, label %if.then.53, label %if.end.54

if.then.53:                                       ; preds = %if.then.44
  %31 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %31, %struct.rtx_def** %retval
  br label %return

if.end.54:                                        ; preds = %if.then.44
  br label %if.end.55

if.end.55:                                        ; preds = %if.end.54, %land.lhs.true.38, %if.end.33
  %32 = load i32, i32* %mode.addr, align 4
  %33 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call56 = call %struct.rtx_def* @gen_lowpart_common(i32 %32, %struct.rtx_def* %33)
  store %struct.rtx_def* %call56, %struct.rtx_def** %result, align 8
  %34 = load %struct.rtx_def*, %struct.rtx_def** %result, align 8
  %tobool57 = icmp ne %struct.rtx_def* %34, null
  br i1 %tobool57, label %if.then.58, label %if.end.59

if.then.58:                                       ; preds = %if.end.55
  %35 = load %struct.rtx_def*, %struct.rtx_def** %result, align 8
  store %struct.rtx_def* %35, %struct.rtx_def** %retval
  br label %return

if.end.59:                                        ; preds = %if.end.55
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %37 = bitcast %struct.rtx_def* %36 to i32*
  %bf.load60 = load i32, i32* %37, align 8
  %bf.clear61 = and i32 %bf.load60, 65535
  %cmp62 = icmp eq i32 %bf.clear61, 66
  br i1 %cmp62, label %if.then.64, label %if.else

if.then.64:                                       ; preds = %if.end.59
  store i32 0, i32* %offset, align 4
  %38 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %39 = bitcast %struct.rtx_def* %38 to i32*
  %bf.load65 = load i32, i32* %39, align 8
  %bf.lshr66 = lshr i32 %bf.load65, 27
  %bf.clear67 = and i32 %bf.lshr66, 1
  %tobool68 = icmp ne i32 %bf.clear67, 0
  br i1 %tobool68, label %if.then.75, label %lor.lhs.false.69

lor.lhs.false.69:                                 ; preds = %if.then.64
  %40 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i32 0, i64 0
  %rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rtx72, align 8
  %call73 = call i32 @mode_dependent_address_p(%struct.rtx_def* %41)
  %tobool74 = icmp ne i32 %call73, 0
  br i1 %tobool74, label %if.then.75, label %if.end.80

if.then.75:                                       ; preds = %lor.lhs.false.69, %if.then.64
  %42 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %43 = bitcast %struct.rtx_def* %42 to i32*
  %bf.load76 = load i32, i32* %43, align 8
  %bf.lshr77 = lshr i32 %bf.load76, 16
  %bf.clear78 = and i32 %bf.lshr77, 255
  %44 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %call79 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 %bf.clear78, %struct.rtx_def* %44)
  store %struct.rtx_def* %call79, %struct.rtx_def** %retval
  br label %return

if.end.80:                                        ; preds = %lor.lhs.false.69
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %46 = bitcast %struct.rtx_def* %45 to i32*
  %bf.load81 = load i32, i32* %46, align 8
  %bf.lshr82 = lshr i32 %bf.load81, 16
  %bf.clear83 = and i32 %bf.lshr82, 255
  %idxprom84 = sext i32 %bf.clear83 to i64
  %arrayidx85 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom84
  %47 = load i8, i8* %arrayidx85, align 1
  %conv86 = zext i8 %47 to i32
  %48 = load i32, i32* %mode.addr, align 4
  %idxprom87 = sext i32 %48 to i64
  %arrayidx88 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom87
  %49 = load i8, i8* %arrayidx88, align 1
  %conv89 = zext i8 %49 to i32
  %cmp90 = icmp slt i32 %conv86, %conv89
  br i1 %cmp90, label %if.then.92, label %if.end.94

if.then.92:                                       ; preds = %if.end.80
  %50 = load i32, i32* %mode.addr, align 4
  %51 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call93 = call %struct.rtx_def* @gen_rtx_SUBREG(i32 %50, %struct.rtx_def* %51, i32 0)
  store %struct.rtx_def* %call93, %struct.rtx_def** %retval
  br label %return

if.end.94:                                        ; preds = %if.end.80
  %52 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %53 = load i32, i32* %mode.addr, align 4
  %54 = load i32, i32* %offset, align 4
  %conv95 = sext i32 %54 to i64
  %call96 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %52, i32 %53, i64 %conv95, i32 0, i32 1)
  store %struct.rtx_def* %call96, %struct.rtx_def** %retval
  br label %return

if.else:                                          ; preds = %if.end.59
  %55 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %56 = bitcast %struct.rtx_def* %55 to i32*
  %bf.load97 = load i32, i32* %56, align 8
  %bf.clear98 = and i32 %bf.load97, 65535
  %idxprom99 = sext i32 %bf.clear98 to i64
  %arrayidx100 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom99
  %57 = load i8, i8* %arrayidx100, align 1
  %conv101 = sext i8 %57 to i32
  %cmp102 = icmp eq i32 %conv101, 60
  br i1 %cmp102, label %if.then.104, label %if.else.114

if.then.104:                                      ; preds = %if.else
  %58 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %59 = bitcast %struct.rtx_def* %58 to i32*
  %bf.load105 = load i32, i32* %59, align 8
  %bf.clear106 = and i32 %bf.load105, 65535
  %60 = load i32, i32* %mode.addr, align 4
  %61 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld107 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1
  %arrayidx108 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld107, i32 0, i64 0
  %rtx109 = bitcast %union.rtunion_def* %arrayidx108 to %struct.rtx_def**
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rtx109, align 8
  %63 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1
  %arrayidx111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld110, i32 0, i64 1
  %rtx112 = bitcast %union.rtunion_def* %arrayidx111 to %struct.rtx_def**
  %64 = load %struct.rtx_def*, %struct.rtx_def** %rtx112, align 8
  %call113 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %bf.clear106, i32 %60, %struct.rtx_def* %62, %struct.rtx_def* %64)
  store %struct.rtx_def* %call113, %struct.rtx_def** %retval
  br label %return

if.else.114:                                      ; preds = %if.else
  store i32 0, i32* %offset115, align 4
  %65 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %66 = bitcast %struct.rtx_def* %65 to i32*
  %bf.load116 = load i32, i32* %66, align 8
  %bf.lshr117 = lshr i32 %bf.load116, 16
  %bf.clear118 = and i32 %bf.lshr117, 255
  %cmp119 = icmp eq i32 %bf.clear118, 0
  br i1 %cmp119, label %if.then.121, label %if.end.126

if.then.121:                                      ; preds = %if.else.114
  %67 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %68 = bitcast %struct.rtx_def* %67 to i32*
  %bf.load122 = load i32, i32* %68, align 8
  %bf.lshr123 = lshr i32 %bf.load122, 16
  %bf.clear124 = and i32 %bf.lshr123, 255
  %69 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %call125 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 %bf.clear124, %struct.rtx_def* %69)
  store %struct.rtx_def* %call125, %struct.rtx_def** %retval
  br label %return

if.end.126:                                       ; preds = %if.else.114
  %70 = load i32, i32* %mode.addr, align 4
  %71 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %72 = bitcast %struct.rtx_def* %71 to i32*
  %bf.load127 = load i32, i32* %72, align 8
  %bf.lshr128 = lshr i32 %bf.load127, 16
  %bf.clear129 = and i32 %bf.lshr128, 255
  %call130 = call i32 @subreg_lowpart_offset(i32 %70, i32 %bf.clear129)
  store i32 %call130, i32* %offset115, align 4
  %73 = load i32, i32* %mode.addr, align 4
  %74 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %75 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %76 = bitcast %struct.rtx_def* %75 to i32*
  %bf.load131 = load i32, i32* %76, align 8
  %bf.lshr132 = lshr i32 %bf.load131, 16
  %bf.clear133 = and i32 %bf.lshr132, 255
  %77 = load i32, i32* %offset115, align 4
  %call134 = call %struct.rtx_def* @simplify_gen_subreg(i32 %73, %struct.rtx_def* %74, i32 %bf.clear133, i32 %77)
  store %struct.rtx_def* %call134, %struct.rtx_def** %res, align 8
  %78 = load %struct.rtx_def*, %struct.rtx_def** %res, align 8
  %tobool135 = icmp ne %struct.rtx_def* %78, null
  br i1 %tobool135, label %if.then.136, label %if.end.137

if.then.136:                                      ; preds = %if.end.126
  %79 = load %struct.rtx_def*, %struct.rtx_def** %res, align 8
  store %struct.rtx_def* %79, %struct.rtx_def** %retval
  br label %return

if.end.137:                                       ; preds = %if.end.126
  %80 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %81 = bitcast %struct.rtx_def* %80 to i32*
  %bf.load138 = load i32, i32* %81, align 8
  %bf.lshr139 = lshr i32 %bf.load138, 16
  %bf.clear140 = and i32 %bf.lshr139, 255
  %82 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %call141 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 %bf.clear140, %struct.rtx_def* %82)
  store %struct.rtx_def* %call141, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %if.end.137, %if.then.136, %if.then.121, %if.then.104, %if.end.94, %if.then.92, %if.then.75, %if.then.58, %if.then.53, %if.then.29, %if.then
  %83 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %83
}

declare i32 @subreg_lowpart_p(%struct.rtx_def*) #1

declare %struct.rtx_def* @copy_rtx(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @gen_binary(i32 %code, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %op0.addr = alloca %struct.rtx_def*, align 8
  %op1.addr = alloca %struct.rtx_def*, align 8
  %result = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  %op_mode = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  store i32 %mode, i32* %mode.addr, align 4
  store %struct.rtx_def* %op0, %struct.rtx_def** %op0.addr, align 8
  store %struct.rtx_def* %op1, %struct.rtx_def** %op1.addr, align 8
  %0 = load i32, i32* %code.addr, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %1 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 99
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %3 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %call = call i32 @swap_commutative_operands_p(%struct.rtx_def* %2, %struct.rtx_def* %3)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  store %struct.rtx_def* %4, %struct.rtx_def** %tem, align 8
  %5 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  store %struct.rtx_def* %5, %struct.rtx_def** %op0.addr, align 8
  %6 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %6, %struct.rtx_def** %op1.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load i32, i32* %code.addr, align 4
  %idxprom2 = sext i32 %7 to i64
  %arrayidx3 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom2
  %8 = load i8, i8* %arrayidx3, align 1
  %conv4 = sext i8 %8 to i32
  %cmp5 = icmp eq i32 %conv4, 60
  br i1 %cmp5, label %if.then.7, label %if.else

if.then.7:                                        ; preds = %if.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load = load i32, i32* %10, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  store i32 %bf.clear, i32* %op_mode, align 4
  %11 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load8 = load i32, i32* %12, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  %cmp10 = icmp eq i32 %bf.clear9, 74
  br i1 %cmp10, label %land.lhs.true.12, label %if.end.23

land.lhs.true.12:                                 ; preds = %if.then.7
  %13 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %14 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp13 = icmp eq %struct.rtx_def* %13, %14
  br i1 %cmp13, label %if.then.15, label %if.end.23

if.then.15:                                       ; preds = %land.lhs.true.12
  %15 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %16, %struct.rtx_def** %op1.addr, align 8
  %17 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %fld17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i32 0, i64 0
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rtx19, align 8
  store %struct.rtx_def* %18, %struct.rtx_def** %op0.addr, align 8
  %19 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load20 = load i32, i32* %20, align 8
  %bf.lshr21 = lshr i32 %bf.load20, 16
  %bf.clear22 = and i32 %bf.lshr21, 255
  store i32 %bf.clear22, i32* %op_mode, align 4
  br label %if.end.23

if.end.23:                                        ; preds = %if.then.15, %land.lhs.true.12, %if.then.7
  %21 = load i32, i32* %op_mode, align 4
  %cmp24 = icmp eq i32 %21, 0
  br i1 %cmp24, label %if.then.26, label %if.end.30

if.then.26:                                       ; preds = %if.end.23
  %22 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %23 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load27 = load i32, i32* %23, align 8
  %bf.lshr28 = lshr i32 %bf.load27, 16
  %bf.clear29 = and i32 %bf.lshr28, 255
  store i32 %bf.clear29, i32* %op_mode, align 4
  br label %if.end.30

if.end.30:                                        ; preds = %if.then.26, %if.end.23
  %24 = load i32, i32* %code.addr, align 4
  %25 = load i32, i32* %op_mode, align 4
  %26 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %27 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %call31 = call %struct.rtx_def* @simplify_relational_operation(i32 %24, i32 %25, %struct.rtx_def* %26, %struct.rtx_def* %27)
  store %struct.rtx_def* %call31, %struct.rtx_def** %result, align 8
  br label %if.end.33

if.else:                                          ; preds = %if.end
  %28 = load i32, i32* %code.addr, align 4
  %29 = load i32, i32* %mode.addr, align 4
  %30 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %31 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %call32 = call %struct.rtx_def* @simplify_binary_operation(i32 %28, i32 %29, %struct.rtx_def* %30, %struct.rtx_def* %31)
  store %struct.rtx_def* %call32, %struct.rtx_def** %result, align 8
  br label %if.end.33

if.end.33:                                        ; preds = %if.else, %if.end.30
  %32 = load %struct.rtx_def*, %struct.rtx_def** %result, align 8
  %tobool34 = icmp ne %struct.rtx_def* %32, null
  br i1 %tobool34, label %if.then.35, label %if.end.36

if.then.35:                                       ; preds = %if.end.33
  %33 = load %struct.rtx_def*, %struct.rtx_def** %result, align 8
  store %struct.rtx_def* %33, %struct.rtx_def** %retval
  br label %return

if.end.36:                                        ; preds = %if.end.33
  %34 = load i32, i32* %code.addr, align 4
  %idxprom37 = sext i32 %34 to i64
  %arrayidx38 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom37
  %35 = load i8, i8* %arrayidx38, align 1
  %conv39 = sext i8 %35 to i32
  %cmp40 = icmp eq i32 %conv39, 99
  br i1 %cmp40, label %land.lhs.true.42, label %if.else.47

land.lhs.true.42:                                 ; preds = %if.end.36
  %36 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %37 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %call43 = call i32 @swap_commutative_operands_p(%struct.rtx_def* %36, %struct.rtx_def* %37)
  %tobool44 = icmp ne i32 %call43, 0
  br i1 %tobool44, label %if.then.45, label %if.else.47

if.then.45:                                       ; preds = %land.lhs.true.42
  %38 = load i32, i32* %code.addr, align 4
  %39 = load i32, i32* %mode.addr, align 4
  %40 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %41 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %call46 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %38, i32 %39, %struct.rtx_def* %40, %struct.rtx_def* %41)
  store %struct.rtx_def* %call46, %struct.rtx_def** %retval
  br label %return

if.else.47:                                       ; preds = %land.lhs.true.42, %if.end.36
  %42 = load i32, i32* %code.addr, align 4
  %cmp48 = icmp eq i32 %42, 83
  br i1 %cmp48, label %land.lhs.true.50, label %if.end.68

land.lhs.true.50:                                 ; preds = %if.else.47
  %43 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %44 = bitcast %struct.rtx_def* %43 to i32*
  %bf.load51 = load i32, i32* %44, align 8
  %bf.clear52 = and i32 %bf.load51, 65535
  %cmp53 = icmp eq i32 %bf.clear52, 54
  br i1 %cmp53, label %land.lhs.true.55, label %if.end.68

land.lhs.true.55:                                 ; preds = %land.lhs.true.50
  %45 = load i32, i32* %mode.addr, align 4
  %idxprom56 = sext i32 %45 to i64
  %arrayidx57 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom56
  %46 = load i16, i16* %arrayidx57, align 2
  %conv58 = zext i16 %46 to i32
  %cmp59 = icmp sle i32 %conv58, 64
  br i1 %cmp59, label %land.lhs.true.61, label %if.end.68

land.lhs.true.61:                                 ; preds = %land.lhs.true.55
  %47 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %48 = load i32, i32* %mode.addr, align 4
  %call62 = call i64 @nonzero_bits(%struct.rtx_def* %47, i32 %48)
  %49 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %fld63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1
  %arrayidx64 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx64 to i64*
  %50 = load i64, i64* %rtwint, align 8
  %neg = xor i64 %50, -1
  %and = and i64 %call62, %neg
  %cmp65 = icmp eq i64 %and, 0
  br i1 %cmp65, label %if.then.67, label %if.end.68

if.then.67:                                       ; preds = %land.lhs.true.61
  %51 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  store %struct.rtx_def* %51, %struct.rtx_def** %retval
  br label %return

if.end.68:                                        ; preds = %land.lhs.true.61, %land.lhs.true.55, %land.lhs.true.50, %if.else.47
  br label %if.end.69

if.end.69:                                        ; preds = %if.end.68
  %52 = load i32, i32* %code.addr, align 4
  %53 = load i32, i32* %mode.addr, align 4
  %54 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %55 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %call70 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %52, i32 %53, %struct.rtx_def* %54, %struct.rtx_def* %55)
  store %struct.rtx_def* %call70, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %if.end.69, %if.then.67, %if.then.45, %if.then.35
  %56 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %56
}

declare %struct.rtx_def* @simplify_gen_unary(i32, i32, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @gen_lowpart_common(i32, %struct.rtx_def*) #1

declare i32 @mode_dependent_address_p(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_SUBREG(i32, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) #1

declare i32 @subreg_lowpart_offset(i32, i32) #1

declare %struct.rtx_def* @simplify_gen_subreg(i32, %struct.rtx_def*, i32, i32) #1

declare i32 @swap_commutative_operands_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @simplify_relational_operation(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @simplify_binary_operation(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal i32 @cant_combine_insn_p(%struct.rtx_def* %insn) #0 {
entry:
  %retval = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %src = alloca %struct.rtx_def*, align 8
  %dest = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom = sext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %2 to i32
  %cmp = icmp eq i32 %conv, 105
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load2 = load i32, i32* %4, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  %idxprom4 = sext i32 %bf.clear3 to i64
  %arrayidx5 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom4
  %5 = load i8, i8* %arrayidx5, align 1
  %conv6 = sext i8 %5 to i32
  %cmp7 = icmp eq i32 %conv6, 105
  br i1 %cmp7, label %cond.true, label %cond.false.21

cond.true:                                        ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load10 = load i32, i32* %8, align 8
  %bf.clear11 = and i32 %bf.load10, 65535
  %cmp12 = icmp eq i32 %bf.clear11, 47
  br i1 %cmp12, label %cond.true.14, label %cond.false

cond.true.14:                                     ; preds = %cond.true
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i32 0, i64 3
  %rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rtx17, align 8
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i32 0, i64 3
  %rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rtx20, align 8
  %call = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %11, %struct.rtx_def* %13)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.14
  %cond = phi %struct.rtx_def* [ %10, %cond.true.14 ], [ %call, %cond.false ]
  br label %cond.end.22

cond.false.21:                                    ; preds = %if.end
  br label %cond.end.22

cond.end.22:                                      ; preds = %cond.false.21, %cond.end
  %cond23 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false.21 ]
  store %struct.rtx_def* %cond23, %struct.rtx_def** %set, align 8
  %14 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %tobool = icmp ne %struct.rtx_def* %14, null
  br i1 %tobool, label %if.end.25, label %if.then.24

if.then.24:                                       ; preds = %cond.end.22
  store i32 0, i32* %retval
  br label %return

if.end.25:                                        ; preds = %cond.end.22
  %15 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i32 0, i64 1
  %rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rtx28, align 8
  store %struct.rtx_def* %16, %struct.rtx_def** %src, align 8
  %17 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i32 0, i64 0
  %rtx31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rtx31, align 8
  store %struct.rtx_def* %18, %struct.rtx_def** %dest, align 8
  %19 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load32 = load i32, i32* %20, align 8
  %bf.clear33 = and i32 %bf.load32, 65535
  %cmp34 = icmp eq i32 %bf.clear33, 63
  br i1 %cmp34, label %if.then.36, label %if.end.40

if.then.36:                                       ; preds = %if.end.25
  %21 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i32 0, i64 0
  %rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rtx39, align 8
  store %struct.rtx_def* %22, %struct.rtx_def** %src, align 8
  br label %if.end.40

if.end.40:                                        ; preds = %if.then.36, %if.end.25
  %23 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %24 = bitcast %struct.rtx_def* %23 to i32*
  %bf.load41 = load i32, i32* %24, align 8
  %bf.clear42 = and i32 %bf.load41, 65535
  %cmp43 = icmp eq i32 %bf.clear42, 63
  br i1 %cmp43, label %if.then.45, label %if.end.49

if.then.45:                                       ; preds = %if.end.40
  %25 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i32 0, i64 0
  %rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rtx48, align 8
  store %struct.rtx_def* %26, %struct.rtx_def** %dest, align 8
  br label %if.end.49

if.end.49:                                        ; preds = %if.then.45, %if.end.40
  %27 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load50 = load i32, i32* %28, align 8
  %bf.clear51 = and i32 %bf.load50, 65535
  %cmp52 = icmp eq i32 %bf.clear51, 61
  br i1 %cmp52, label %land.lhs.true, label %if.end.83

land.lhs.true:                                    ; preds = %if.end.49
  %29 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load54 = load i32, i32* %30, align 8
  %bf.clear55 = and i32 %bf.load54, 65535
  %cmp56 = icmp eq i32 %bf.clear55, 61
  br i1 %cmp56, label %land.lhs.true.58, label %if.end.83

land.lhs.true.58:                                 ; preds = %land.lhs.true
  %31 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx60 to i32*
  %32 = load i32, i32* %rtuint, align 4
  %cmp61 = icmp ult i32 %32, 53
  br i1 %cmp61, label %land.lhs.true.63, label %lor.lhs.false

land.lhs.true.63:                                 ; preds = %land.lhs.true.58
  %33 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld64, i32 0, i64 0
  %rtuint66 = bitcast %union.rtunion_def* %arrayidx65 to i32*
  %34 = load i32, i32* %rtuint66, align 4
  %idxprom67 = zext i32 %34 to i64
  %arrayidx68 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 %idxprom67
  %35 = load i8, i8* %arrayidx68, align 1
  %tobool69 = icmp ne i8 %35, 0
  br i1 %tobool69, label %lor.lhs.false, label %if.then.82

lor.lhs.false:                                    ; preds = %land.lhs.true.63, %land.lhs.true.58
  %36 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i32 0, i64 0
  %rtuint72 = bitcast %union.rtunion_def* %arrayidx71 to i32*
  %37 = load i32, i32* %rtuint72, align 4
  %cmp73 = icmp ult i32 %37, 53
  br i1 %cmp73, label %land.lhs.true.75, label %if.end.83

land.lhs.true.75:                                 ; preds = %lor.lhs.false
  %38 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1
  %arrayidx77 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld76, i32 0, i64 0
  %rtuint78 = bitcast %union.rtunion_def* %arrayidx77 to i32*
  %39 = load i32, i32* %rtuint78, align 4
  %idxprom79 = zext i32 %39 to i64
  %arrayidx80 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 %idxprom79
  %40 = load i8, i8* %arrayidx80, align 1
  %tobool81 = icmp ne i8 %40, 0
  br i1 %tobool81, label %if.end.83, label %if.then.82

if.then.82:                                       ; preds = %land.lhs.true.75, %land.lhs.true.63
  store i32 1, i32* %retval
  br label %return

if.end.83:                                        ; preds = %land.lhs.true.75, %lor.lhs.false, %land.lhs.true, %if.end.49
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.83, %if.then.82, %if.then.24, %if.then
  %41 = load i32, i32* %retval
  ret i32 %41
}

; Function Attrs: nounwind uwtable
define internal i32 @insn_cuid(%struct.rtx_def* %insn) #0 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %cmp = icmp ne %struct.rtx_def* %0, null
  br i1 %cmp, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %while.cond
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %2 = load i32, i32* %rtint, align 4
  %3 = load i32, i32* @max_uid_cuid, align 4
  %cmp1 = icmp sgt i32 %2, %3
  br i1 %cmp1, label %land.lhs.true.2, label %land.end

land.lhs.true.2:                                  ; preds = %land.lhs.true
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load = load i32, i32* %5, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp3 = icmp eq i32 %bf.clear, 32
  br i1 %cmp3, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.2
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load6 = load i32, i32* %8, align 8
  %bf.clear7 = and i32 %bf.load6, 65535
  %cmp8 = icmp eq i32 %bf.clear7, 48
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.2, %land.lhs.true, %while.cond
  %9 = phi i1 [ false, %land.lhs.true.2 ], [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp8, %land.rhs ]
  br i1 %9, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld9, i32 0, i64 2
  %rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rtx11, align 8
  store %struct.rtx_def* %11, %struct.rtx_def** %insn.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i32 0, i64 0
  %rtint14 = bitcast %union.rtunion_def* %arrayidx13 to i32*
  %13 = load i32, i32* %rtint14, align 4
  %14 = load i32, i32* @max_uid_cuid, align 4
  %cmp15 = icmp sgt i32 %13, %14
  br i1 %cmp15, label %if.then, label %if.end

if.then:                                          ; preds = %while.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 12750, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.insn_cuid, i32 0, i32 0)) #5
  unreachable

if.end:                                           ; preds = %while.end
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i32 0, i64 0
  %rtint18 = bitcast %union.rtunion_def* %arrayidx17 to i32*
  %16 = load i32, i32* %rtint18, align 4
  %17 = load i32, i32* @max_uid_cuid, align 4
  %cmp19 = icmp sgt i32 %16, %17
  br i1 %cmp19, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call = call i32 @insn_cuid(%struct.rtx_def* %18)
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i32 0, i64 0
  %rtint22 = bitcast %union.rtunion_def* %arrayidx21 to i32*
  %20 = load i32, i32* %rtint22, align 4
  %idxprom = sext i32 %20 to i64
  %21 = load i32*, i32** @uid_cuid, align 8
  %arrayidx23 = getelementptr inbounds i32, i32* %21, i64 %idxprom
  %22 = load i32, i32* %arrayidx23, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %22, %cond.false ]
  ret i32 %cond
}

declare %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #1

declare i32 @side_effects_p(%struct.rtx_def*) #1

declare i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @next_real_insn(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @do_SUBST(%struct.rtx_def** %into, %struct.rtx_def* %newval) #0 {
entry:
  %into.addr = alloca %struct.rtx_def**, align 8
  %newval.addr = alloca %struct.rtx_def*, align 8
  %buf = alloca %struct.undo*, align 8
  %oldval = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def** %into, %struct.rtx_def*** %into.addr, align 8
  store %struct.rtx_def* %newval, %struct.rtx_def** %newval.addr, align 8
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %into.addr, align 8
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %oldval, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %oldval, align 8
  %3 = load %struct.rtx_def*, %struct.rtx_def** %newval.addr, align 8
  %cmp = icmp eq %struct.rtx_def* %2, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %oldval, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load = load i32, i32* %5, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %6 = load i32, i32* %arrayidx, align 4
  %cmp1 = icmp eq i32 %6, 1
  br i1 %cmp1, label %land.lhs.true, label %if.end.37

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %newval.addr, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load2 = load i32, i32* %8, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  %cmp4 = icmp eq i32 %bf.clear3, 54
  br i1 %cmp4, label %if.then.5, label %if.end.37

if.then.5:                                        ; preds = %land.lhs.true
  %9 = load %struct.rtx_def*, %struct.rtx_def** %newval.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx6 to i64*
  %10 = load i64, i64* %rtwint, align 8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %newval.addr, align 8
  %fld7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i32 0, i64 0
  %rtwint9 = bitcast %union.rtunion_def* %arrayidx8 to i64*
  %12 = load i64, i64* %rtwint9, align 8
  %13 = load %struct.rtx_def*, %struct.rtx_def** %oldval, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load10 = load i32, i32* %14, align 8
  %bf.lshr11 = lshr i32 %bf.load10, 16
  %bf.clear12 = and i32 %bf.lshr11, 255
  %call = call i64 @trunc_int_for_mode(i64 %12, i32 %bf.clear12)
  %cmp13 = icmp ne i64 %10, %call
  br i1 %cmp13, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.then.5
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 439, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.do_SUBST, i32 0, i32 0)) #5
  unreachable

if.end.15:                                        ; preds = %if.then.5
  %15 = load %struct.rtx_def*, %struct.rtx_def** %oldval, align 8
  %16 = bitcast %struct.rtx_def* %15 to i32*
  %bf.load16 = load i32, i32* %16, align 8
  %bf.clear17 = and i32 %bf.load16, 65535
  %cmp18 = icmp eq i32 %bf.clear17, 63
  br i1 %cmp18, label %land.lhs.true.19, label %lor.lhs.false

land.lhs.true.19:                                 ; preds = %if.end.15
  %17 = load %struct.rtx_def*, %struct.rtx_def** %oldval, align 8
  %fld20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load22 = load i32, i32* %19, align 8
  %bf.clear23 = and i32 %bf.load22, 65535
  %cmp24 = icmp eq i32 %bf.clear23, 54
  br i1 %cmp24, label %if.then.35, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.19, %if.end.15
  %20 = load %struct.rtx_def*, %struct.rtx_def** %oldval, align 8
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load25 = load i32, i32* %21, align 8
  %bf.clear26 = and i32 %bf.load25, 65535
  %cmp27 = icmp eq i32 %bf.clear26, 121
  br i1 %cmp27, label %land.lhs.true.28, label %if.end.36

land.lhs.true.28:                                 ; preds = %lor.lhs.false
  %22 = load %struct.rtx_def*, %struct.rtx_def** %oldval, align 8
  %fld29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i32 0, i64 0
  %rtx31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rtx31, align 8
  %24 = bitcast %struct.rtx_def* %23 to i32*
  %bf.load32 = load i32, i32* %24, align 8
  %bf.clear33 = and i32 %bf.load32, 65535
  %cmp34 = icmp eq i32 %bf.clear33, 54
  br i1 %cmp34, label %if.then.35, label %if.end.36

if.then.35:                                       ; preds = %land.lhs.true.28, %land.lhs.true.19
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 451, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.do_SUBST, i32 0, i32 0)) #5
  unreachable

if.end.36:                                        ; preds = %land.lhs.true.28, %lor.lhs.false
  br label %if.end.37

if.end.37:                                        ; preds = %if.end.36, %land.lhs.true, %if.end
  %25 = load %struct.undo*, %struct.undo** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 1), align 8
  %tobool = icmp ne %struct.undo* %25, null
  br i1 %tobool, label %if.then.38, label %if.else

if.then.38:                                       ; preds = %if.end.37
  %26 = load %struct.undo*, %struct.undo** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 1), align 8
  store %struct.undo* %26, %struct.undo** %buf, align 8
  %27 = load %struct.undo*, %struct.undo** %buf, align 8
  %next = getelementptr inbounds %struct.undo, %struct.undo* %27, i32 0, i32 0
  %28 = load %struct.undo*, %struct.undo** %next, align 8
  store %struct.undo* %28, %struct.undo** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 1), align 8
  br label %if.end.40

if.else:                                          ; preds = %if.end.37
  %call39 = call noalias i8* @xmalloc(i64 32)
  %29 = bitcast i8* %call39 to %struct.undo*
  store %struct.undo* %29, %struct.undo** %buf, align 8
  br label %if.end.40

if.end.40:                                        ; preds = %if.else, %if.then.38
  %30 = load %struct.undo*, %struct.undo** %buf, align 8
  %is_int = getelementptr inbounds %struct.undo, %struct.undo* %30, i32 0, i32 1
  store i32 0, i32* %is_int, align 4
  %31 = load %struct.rtx_def**, %struct.rtx_def*** %into.addr, align 8
  %32 = load %struct.undo*, %struct.undo** %buf, align 8
  %where = getelementptr inbounds %struct.undo, %struct.undo* %32, i32 0, i32 3
  %r = bitcast %union.anon.0* %where to %struct.rtx_def***
  store %struct.rtx_def** %31, %struct.rtx_def*** %r, align 8
  %33 = load %struct.rtx_def*, %struct.rtx_def** %oldval, align 8
  %34 = load %struct.undo*, %struct.undo** %buf, align 8
  %old_contents = getelementptr inbounds %struct.undo, %struct.undo* %34, i32 0, i32 2
  %r41 = bitcast %union.anon* %old_contents to %struct.rtx_def**
  store %struct.rtx_def* %33, %struct.rtx_def** %r41, align 8
  %35 = load %struct.rtx_def*, %struct.rtx_def** %newval.addr, align 8
  %36 = load %struct.rtx_def**, %struct.rtx_def*** %into.addr, align 8
  store %struct.rtx_def* %35, %struct.rtx_def** %36, align 8
  %37 = load %struct.undo*, %struct.undo** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 0), align 8
  %38 = load %struct.undo*, %struct.undo** %buf, align 8
  %next42 = getelementptr inbounds %struct.undo, %struct.undo* %38, i32 0, i32 0
  store %struct.undo* %37, %struct.undo** %next42, align 8
  %39 = load %struct.undo*, %struct.undo** %buf, align 8
  store %struct.undo* %39, %struct.undo** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 0), align 8
  br label %return

return:                                           ; preds = %if.end.40, %if.then
  ret void
}

declare %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #4

declare %struct.rtx_def* @immed_double_const(i64, i64, i32) #1

declare i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_iuueiee(i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal i32 @can_combine_p(%struct.rtx_def* %insn, %struct.rtx_def* %i3, %struct.rtx_def* %pred, %struct.rtx_def* %succ, %struct.rtx_def** %pdest, %struct.rtx_def** %psrc) #0 {
entry:
  %retval = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %i3.addr = alloca %struct.rtx_def*, align 8
  %pred.addr = alloca %struct.rtx_def*, align 8
  %succ.addr = alloca %struct.rtx_def*, align 8
  %pdest.addr = alloca %struct.rtx_def**, align 8
  %psrc.addr = alloca %struct.rtx_def**, align 8
  %i = alloca i32, align 4
  %set = alloca %struct.rtx_def*, align 8
  %src = alloca %struct.rtx_def*, align 8
  %dest = alloca %struct.rtx_def*, align 8
  %p = alloca %struct.rtx_def*, align 8
  %all_adjacent = alloca i32, align 4
  %elt = alloca %struct.rtx_def*, align 8
  %i3pat = alloca %struct.rtx_def*, align 8
  %i65 = alloca i32, align 4
  %regno = alloca i32, align 4
  %i3elt = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store %struct.rtx_def* %i3, %struct.rtx_def** %i3.addr, align 8
  store %struct.rtx_def* %pred, %struct.rtx_def** %pred.addr, align 8
  store %struct.rtx_def* %succ, %struct.rtx_def** %succ.addr, align 8
  store %struct.rtx_def** %pdest, %struct.rtx_def*** %pdest.addr, align 8
  store %struct.rtx_def** %psrc, %struct.rtx_def*** %psrc.addr, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %set, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %succ.addr, align 8
  %tobool = icmp ne %struct.rtx_def* %0, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call = call %struct.rtx_def* @next_active_insn(%struct.rtx_def* %1)
  %2 = load %struct.rtx_def*, %struct.rtx_def** %succ.addr, align 8
  %cmp = icmp eq %struct.rtx_def* %call, %2
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.true
  %3 = load %struct.rtx_def*, %struct.rtx_def** %succ.addr, align 8
  %call1 = call %struct.rtx_def* @next_active_insn(%struct.rtx_def* %3)
  %4 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %cmp2 = icmp eq %struct.rtx_def* %call1, %4
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.true
  %5 = phi i1 [ false, %cond.true ], [ %cmp2, %land.rhs ]
  %land.ext = zext i1 %5 to i32
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call3 = call %struct.rtx_def* @next_active_insn(%struct.rtx_def* %6)
  %7 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %cmp4 = icmp eq %struct.rtx_def* %call3, %7
  %conv = zext i1 %cmp4 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %land.end
  %cond = phi i32 [ %land.ext, %land.end ], [ %conv, %cond.false ]
  store i32 %cond, i32* %all_adjacent, align 4
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load = load i32, i32* %10, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp5 = icmp eq i32 %bf.clear, 47
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i32 0, i64 3
  %rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rtx9, align 8
  store %struct.rtx_def* %12, %struct.rtx_def** %set, align 8
  br label %if.end.146

if.else:                                          ; preds = %cond.end
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i32 0, i64 3
  %rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rtx12, align 8
  %15 = bitcast %struct.rtx_def* %14 to i32*
  %bf.load13 = load i32, i32* %15, align 8
  %bf.clear14 = and i32 %bf.load13, 65535
  %cmp15 = icmp eq i32 %bf.clear14, 39
  br i1 %cmp15, label %land.lhs.true, label %if.else.144

land.lhs.true:                                    ; preds = %if.else
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i32 0, i64 3
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rtx19, align 8
  %fld20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i32 0, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtvec_def**
  %18 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %18, i32 0, i32 1
  %arrayidx22 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 0
  %19 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx22, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load23 = load i32, i32* %20, align 8
  %bf.clear24 = and i32 %bf.load23, 65535
  %cmp25 = icmp eq i32 %bf.clear24, 47
  br i1 %cmp25, label %if.then.27, label %if.else.144

if.then.27:                                       ; preds = %land.lhs.true
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.27
  %21 = load i32, i32* %i, align 4
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i32 0, i64 3
  %rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rtx30, align 8
  %fld31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i32 0, i64 0
  %rtvec33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtvec_def**
  %24 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec33, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %24, i32 0, i32 0
  %25 = load i32, i32* %num_elem, align 4
  %cmp34 = icmp slt i32 %21, %25
  br i1 %cmp34, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %26 = load i32, i32* %i, align 4
  %idxprom = sext i32 %26 to i64
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i32 0, i64 3
  %rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rtx38, align 8
  %fld39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i32 0, i64 0
  %rtvec41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtvec_def**
  %29 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec41, align 8
  %elem42 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %29, i32 0, i32 1
  %arrayidx43 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem42, i32 0, i64 %idxprom
  %30 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx43, align 8
  store %struct.rtx_def* %30, %struct.rtx_def** %elt, align 8
  %31 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load44 = load i32, i32* %32, align 8
  %bf.clear45 = and i32 %bf.load44, 65535
  switch i32 %bf.clear45, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb.118
    i32 47, label %sw.bb.119
  ]

sw.bb:                                            ; preds = %for.body
  %33 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8
  %fld46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i32 0, i64 0
  %rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rtx48, align 8
  %35 = bitcast %struct.rtx_def* %34 to i32*
  %bf.load49 = load i32, i32* %35, align 8
  %bf.clear50 = and i32 %bf.load49, 65535
  %cmp51 = icmp eq i32 %bf.clear50, 61
  br i1 %cmp51, label %land.lhs.true.53, label %if.end.117

land.lhs.true.53:                                 ; preds = %sw.bb
  %36 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld54, i32 0, i64 3
  %rtx56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtx_def**
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rtx56, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load57 = load i32, i32* %38, align 8
  %bf.clear58 = and i32 %bf.load57, 65535
  %cmp59 = icmp eq i32 %bf.clear58, 39
  br i1 %cmp59, label %if.then.61, label %if.end.117

if.then.61:                                       ; preds = %land.lhs.true.53
  %39 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1
  %arrayidx63 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld62, i32 0, i64 3
  %rtx64 = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtx_def**
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rtx64, align 8
  store %struct.rtx_def* %40, %struct.rtx_def** %i3pat, align 8
  %41 = load %struct.rtx_def*, %struct.rtx_def** %i3pat, align 8
  %fld66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx67 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld66, i32 0, i64 0
  %rtvec68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtvec_def**
  %42 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec68, align 8
  %num_elem69 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %42, i32 0, i32 0
  %43 = load i32, i32* %num_elem69, align 4
  %sub = sub nsw i32 %43, 1
  store i32 %sub, i32* %i65, align 4
  %44 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8
  %fld70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i32 0, i64 0
  %rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rtx72, align 8
  %fld73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx74 to i32*
  %46 = load i32, i32* %rtuint, align 4
  store i32 %46, i32* %regno, align 4
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then.61
  %47 = load i32, i32* %i65, align 4
  %idxprom75 = sext i32 %47 to i64
  %48 = load %struct.rtx_def*, %struct.rtx_def** %i3pat, align 8
  %fld76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1
  %arrayidx77 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld76, i32 0, i64 0
  %rtvec78 = bitcast %union.rtunion_def* %arrayidx77 to %struct.rtvec_def**
  %49 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec78, align 8
  %elem79 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %49, i32 0, i32 1
  %arrayidx80 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem79, i32 0, i64 %idxprom75
  %50 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx80, align 8
  store %struct.rtx_def* %50, %struct.rtx_def** %i3elt, align 8
  %51 = load %struct.rtx_def*, %struct.rtx_def** %i3elt, align 8
  %52 = bitcast %struct.rtx_def* %51 to i32*
  %bf.load81 = load i32, i32* %52, align 8
  %bf.clear82 = and i32 %bf.load81, 65535
  %cmp83 = icmp eq i32 %bf.clear82, 48
  br i1 %cmp83, label %land.lhs.true.85, label %if.end

land.lhs.true.85:                                 ; preds = %do.body
  %53 = load %struct.rtx_def*, %struct.rtx_def** %i3elt, align 8
  %fld86 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx87 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld86, i32 0, i64 0
  %rtx88 = bitcast %union.rtunion_def* %arrayidx87 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx88, align 8
  %55 = bitcast %struct.rtx_def* %54 to i32*
  %bf.load89 = load i32, i32* %55, align 8
  %bf.clear90 = and i32 %bf.load89, 65535
  %cmp91 = icmp eq i32 %bf.clear90, 61
  br i1 %cmp91, label %land.lhs.true.93, label %if.end

land.lhs.true.93:                                 ; preds = %land.lhs.true.85
  %56 = load %struct.rtx_def*, %struct.rtx_def** %i3elt, align 8
  %fld94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1
  %arrayidx95 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i32 0, i64 0
  %rtx96 = bitcast %union.rtunion_def* %arrayidx95 to %struct.rtx_def**
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rtx96, align 8
  %fld97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld97, i32 0, i64 0
  %rtuint99 = bitcast %union.rtunion_def* %arrayidx98 to i32*
  %58 = load i32, i32* %rtuint99, align 4
  %59 = load i32, i32* %regno, align 4
  %cmp100 = icmp eq i32 %58, %59
  br i1 %cmp100, label %cond.true.102, label %cond.false.111

cond.true.102:                                    ; preds = %land.lhs.true.93
  %60 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8
  %fld103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1
  %arrayidx104 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld103, i32 0, i64 0
  %rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rtx105, align 8
  %62 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1
  %arrayidx107 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld106, i32 0, i64 1
  %rtx108 = bitcast %union.rtunion_def* %arrayidx107 to %struct.rtx_def**
  %63 = load %struct.rtx_def*, %struct.rtx_def** %rtx108, align 8
  %64 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call109 = call i32 @reg_set_between_p(%struct.rtx_def* %61, %struct.rtx_def* %63, %struct.rtx_def* %64)
  %tobool110 = icmp ne i32 %call109, 0
  br i1 %tobool110, label %if.then.114, label %if.end

cond.false.111:                                   ; preds = %land.lhs.true.93
  %65 = load i32, i32* %regno, align 4
  %cmp112 = icmp uge i32 %65, 53
  br i1 %cmp112, label %if.then.114, label %if.end

if.then.114:                                      ; preds = %cond.false.111, %cond.true.102
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.false.111, %cond.true.102, %land.lhs.true.85, %do.body
  br label %do.cond

do.cond:                                          ; preds = %if.end
  %66 = load i32, i32* %i65, align 4
  %dec = add nsw i32 %66, -1
  store i32 %dec, i32* %i65, align 4
  %cmp115 = icmp sge i32 %dec, 0
  br i1 %cmp115, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end.117

if.end.117:                                       ; preds = %do.end, %land.lhs.true.53, %sw.bb
  br label %sw.epilog

sw.bb.118:                                        ; preds = %for.body
  br label %sw.epilog

sw.bb.119:                                        ; preds = %for.body
  %67 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %68 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8
  %fld120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1
  %arrayidx121 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld120, i32 0, i64 0
  %rtx122 = bitcast %union.rtunion_def* %arrayidx121 to %struct.rtx_def**
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rtx122, align 8
  %call123 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %67, i32 10, %struct.rtx_def* %69)
  %tobool124 = icmp ne %struct.rtx_def* %call123, null
  br i1 %tobool124, label %land.lhs.true.125, label %if.end.129

land.lhs.true.125:                                ; preds = %sw.bb.119
  %70 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8
  %call126 = call i32 @side_effects_p(%struct.rtx_def* %70)
  %tobool127 = icmp ne i32 %call126, 0
  br i1 %tobool127, label %if.end.129, label %if.then.128

if.then.128:                                      ; preds = %land.lhs.true.125
  br label %sw.epilog

if.end.129:                                       ; preds = %land.lhs.true.125, %sw.bb.119
  %71 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %tobool130 = icmp ne %struct.rtx_def* %71, null
  br i1 %tobool130, label %if.then.131, label %if.end.132

if.then.131:                                      ; preds = %if.end.129
  store i32 0, i32* %retval
  br label %return

if.end.132:                                       ; preds = %if.end.129
  %72 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8
  store %struct.rtx_def* %72, %struct.rtx_def** %set, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %for.body
  store i32 0, i32* %retval
  br label %return

sw.epilog:                                        ; preds = %if.end.132, %if.then.128, %sw.bb.118, %if.end.117
  br label %for.inc

for.inc:                                          ; preds = %sw.epilog
  %73 = load i32, i32* %i, align 4
  %inc = add nsw i32 %73, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %74 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %cmp133 = icmp eq %struct.rtx_def* %74, null
  br i1 %cmp133, label %if.then.142, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %75 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx136 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld135, i32 0, i64 1
  %rtx137 = bitcast %union.rtunion_def* %arrayidx136 to %struct.rtx_def**
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rtx137, align 8
  %77 = bitcast %struct.rtx_def* %76 to i32*
  %bf.load138 = load i32, i32* %77, align 8
  %bf.clear139 = and i32 %bf.load138, 65535
  %cmp140 = icmp eq i32 %bf.clear139, 41
  br i1 %cmp140, label %if.then.142, label %if.end.143

if.then.142:                                      ; preds = %lor.lhs.false, %for.end
  store i32 0, i32* %retval
  br label %return

if.end.143:                                       ; preds = %lor.lhs.false
  br label %if.end.145

if.else.144:                                      ; preds = %land.lhs.true, %if.else
  store i32 0, i32* %retval
  br label %return

if.end.145:                                       ; preds = %if.end.143
  br label %if.end.146

if.end.146:                                       ; preds = %if.end.145, %if.then
  %78 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %cmp147 = icmp eq %struct.rtx_def* %78, null
  br i1 %cmp147, label %if.then.149, label %if.end.150

if.then.149:                                      ; preds = %if.end.146
  store i32 0, i32* %retval
  br label %return

if.end.150:                                       ; preds = %if.end.146
  %79 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %call151 = call %struct.rtx_def* @expand_field_assignment(%struct.rtx_def* %79)
  store %struct.rtx_def* %call151, %struct.rtx_def** %set, align 8
  %80 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1
  %arrayidx153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld152, i32 0, i64 1
  %rtx154 = bitcast %union.rtunion_def* %arrayidx153 to %struct.rtx_def**
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rtx154, align 8
  store %struct.rtx_def* %81, %struct.rtx_def** %src, align 8
  %82 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld155 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1
  %arrayidx156 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld155, i32 0, i64 0
  %rtx157 = bitcast %union.rtunion_def* %arrayidx156 to %struct.rtx_def**
  %83 = load %struct.rtx_def*, %struct.rtx_def** %rtx157, align 8
  store %struct.rtx_def* %83, %struct.rtx_def** %dest, align 8
  %84 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %85 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 2), align 8
  %cmp158 = icmp eq %struct.rtx_def* %84, %85
  br i1 %cmp158, label %if.then.330, label %lor.lhs.false.160

lor.lhs.false.160:                                ; preds = %if.end.150
  %86 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %87 = bitcast %struct.rtx_def* %86 to i32*
  %bf.load161 = load i32, i32* %87, align 8
  %bf.clear162 = and i32 %bf.load161, 65535
  %cmp163 = icmp eq i32 %bf.clear162, 133
  br i1 %cmp163, label %if.then.330, label %lor.lhs.false.165

lor.lhs.false.165:                                ; preds = %lor.lhs.false.160
  %88 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %89 = bitcast %struct.rtx_def* %88 to i32*
  %bf.load166 = load i32, i32* %89, align 8
  %bf.clear167 = and i32 %bf.load166, 65535
  %cmp168 = icmp eq i32 %bf.clear167, 64
  br i1 %cmp168, label %if.then.330, label %lor.lhs.false.170

lor.lhs.false.170:                                ; preds = %lor.lhs.false.165
  %90 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %91 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %call171 = call i32 @rtx_equal_p(%struct.rtx_def* %90, %struct.rtx_def* %91)
  %tobool172 = icmp ne i32 %call171, 0
  br i1 %tobool172, label %land.lhs.true.173, label %lor.lhs.false.176

land.lhs.true.173:                                ; preds = %lor.lhs.false.170
  %92 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call174 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %92, i32 4, %struct.rtx_def* null)
  %tobool175 = icmp ne %struct.rtx_def* %call174, null
  br i1 %tobool175, label %if.then.330, label %lor.lhs.false.176

lor.lhs.false.176:                                ; preds = %land.lhs.true.173, %lor.lhs.false.170
  %93 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %94 = bitcast %struct.rtx_def* %93 to i32*
  %bf.load177 = load i32, i32* %94, align 8
  %bf.clear178 = and i32 %bf.load177, 65535
  %cmp179 = icmp eq i32 %bf.clear178, 41
  br i1 %cmp179, label %if.then.330, label %lor.lhs.false.181

lor.lhs.false.181:                                ; preds = %lor.lhs.false.176
  %95 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %96 = bitcast %struct.rtx_def* %95 to i32*
  %bf.load182 = load i32, i32* %96, align 8
  %bf.clear183 = and i32 %bf.load182, 65535
  %cmp184 = icmp eq i32 %bf.clear183, 50
  br i1 %cmp184, label %if.then.330, label %lor.lhs.false.186

lor.lhs.false.186:                                ; preds = %lor.lhs.false.181
  %97 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %98 = bitcast %struct.rtx_def* %97 to i32*
  %bf.load187 = load i32, i32* %98, align 8
  %bf.clear188 = and i32 %bf.load187, 65535
  %cmp189 = icmp eq i32 %bf.clear188, 34
  br i1 %cmp189, label %land.lhs.true.191, label %lor.lhs.false.213

land.lhs.true.191:                                ; preds = %lor.lhs.false.186
  %99 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %100 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %call192 = call i32 @find_reg_fusage(%struct.rtx_def* %99, i32 48, %struct.rtx_def* %100)
  %tobool193 = icmp ne i32 %call192, 0
  br i1 %tobool193, label %if.then.330, label %lor.lhs.false.194

lor.lhs.false.194:                                ; preds = %land.lhs.true.191
  %101 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %102 = bitcast %struct.rtx_def* %101 to i32*
  %bf.load195 = load i32, i32* %102, align 8
  %bf.clear196 = and i32 %bf.load195, 65535
  %cmp197 = icmp eq i32 %bf.clear196, 61
  br i1 %cmp197, label %land.lhs.true.199, label %lor.lhs.false.213

land.lhs.true.199:                                ; preds = %lor.lhs.false.194
  %103 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld200 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1
  %arrayidx201 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld200, i32 0, i64 0
  %rtuint202 = bitcast %union.rtunion_def* %arrayidx201 to i32*
  %104 = load i32, i32* %rtuint202, align 4
  %cmp203 = icmp ult i32 %104, 53
  br i1 %cmp203, label %land.lhs.true.205, label %lor.lhs.false.213

land.lhs.true.205:                                ; preds = %land.lhs.true.199
  %105 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld206 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1
  %arrayidx207 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld206, i32 0, i64 0
  %rtuint208 = bitcast %union.rtunion_def* %arrayidx207 to i32*
  %106 = load i32, i32* %rtuint208, align 4
  %idxprom209 = zext i32 %106 to i64
  %arrayidx210 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i32 0, i64 %idxprom209
  %107 = load i8, i8* %arrayidx210, align 1
  %conv211 = sext i8 %107 to i32
  %tobool212 = icmp ne i32 %conv211, 0
  br i1 %tobool212, label %if.then.330, label %lor.lhs.false.213

lor.lhs.false.213:                                ; preds = %land.lhs.true.205, %land.lhs.true.199, %lor.lhs.false.194, %lor.lhs.false.186
  %108 = load %struct.rtx_def*, %struct.rtx_def** %succ.addr, align 8
  %tobool214 = icmp ne %struct.rtx_def* %108, null
  br i1 %tobool214, label %land.lhs.true.215, label %lor.lhs.false.216

land.lhs.true.215:                                ; preds = %lor.lhs.false.213
  br i1 false, label %if.then.330, label %lor.lhs.false.216

lor.lhs.false.216:                                ; preds = %land.lhs.true.215, %lor.lhs.false.213
  %109 = load %struct.rtx_def*, %struct.rtx_def** %succ.addr, align 8
  %tobool217 = icmp ne %struct.rtx_def* %109, null
  br i1 %tobool217, label %land.lhs.true.218, label %lor.lhs.false.223

land.lhs.true.218:                                ; preds = %lor.lhs.false.216
  %110 = load i32, i32* %all_adjacent, align 4
  %tobool219 = icmp ne i32 %110, 0
  br i1 %tobool219, label %lor.lhs.false.223, label %land.lhs.true.220

land.lhs.true.220:                                ; preds = %land.lhs.true.218
  %111 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %112 = load %struct.rtx_def*, %struct.rtx_def** %succ.addr, align 8
  %113 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call221 = call i32 @reg_used_between_p(%struct.rtx_def* %111, %struct.rtx_def* %112, %struct.rtx_def* %113)
  %tobool222 = icmp ne i32 %call221, 0
  br i1 %tobool222, label %if.then.330, label %lor.lhs.false.223

lor.lhs.false.223:                                ; preds = %land.lhs.true.220, %land.lhs.true.218, %lor.lhs.false.216
  %114 = load i32, i32* %all_adjacent, align 4
  %tobool224 = icmp ne i32 %114, 0
  br i1 %tobool224, label %lor.lhs.false.264, label %land.lhs.true.225

land.lhs.true.225:                                ; preds = %lor.lhs.false.223
  %115 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %116 = bitcast %struct.rtx_def* %115 to i32*
  %bf.load226 = load i32, i32* %116, align 8
  %bf.clear227 = and i32 %bf.load226, 65535
  %cmp228 = icmp ne i32 %bf.clear227, 66
  br i1 %cmp228, label %land.lhs.true.233, label %lor.lhs.false.230

lor.lhs.false.230:                                ; preds = %land.lhs.true.225
  %117 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %118 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %call231 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %117, i32 3, %struct.rtx_def* %118)
  %tobool232 = icmp ne %struct.rtx_def* %call231, null
  br i1 %tobool232, label %lor.lhs.false.250, label %land.lhs.true.233

land.lhs.true.233:                                ; preds = %lor.lhs.false.230, %land.lhs.true.225
  %119 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %120 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld234 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1
  %arrayidx235 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld234, i32 0, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx235 to i32*
  %121 = load i32, i32* %rtint, align 4
  %122 = load i32, i32* @max_uid_cuid, align 4
  %cmp236 = icmp sgt i32 %121, %122
  br i1 %cmp236, label %cond.true.238, label %cond.false.240

cond.true.238:                                    ; preds = %land.lhs.true.233
  %123 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call239 = call i32 @insn_cuid(%struct.rtx_def* %123)
  br label %cond.end.246

cond.false.240:                                   ; preds = %land.lhs.true.233
  %124 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld241 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1
  %arrayidx242 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld241, i32 0, i64 0
  %rtint243 = bitcast %union.rtunion_def* %arrayidx242 to i32*
  %125 = load i32, i32* %rtint243, align 4
  %idxprom244 = sext i32 %125 to i64
  %126 = load i32*, i32** @uid_cuid, align 8
  %arrayidx245 = getelementptr inbounds i32, i32* %126, i64 %idxprom244
  %127 = load i32, i32* %arrayidx245, align 4
  br label %cond.end.246

cond.end.246:                                     ; preds = %cond.false.240, %cond.true.238
  %cond247 = phi i32 [ %call239, %cond.true.238 ], [ %127, %cond.false.240 ]
  %call248 = call i32 @use_crosses_set_p(%struct.rtx_def* %119, i32 %cond247)
  %tobool249 = icmp ne i32 %call248, 0
  br i1 %tobool249, label %if.then.330, label %lor.lhs.false.250

lor.lhs.false.250:                                ; preds = %cond.end.246, %lor.lhs.false.230
  %128 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %129 = bitcast %struct.rtx_def* %128 to i32*
  %bf.load251 = load i32, i32* %129, align 8
  %bf.clear252 = and i32 %bf.load251, 65535
  %cmp253 = icmp eq i32 %bf.clear252, 41
  br i1 %cmp253, label %land.lhs.true.255, label %lor.lhs.false.259

land.lhs.true.255:                                ; preds = %lor.lhs.false.250
  %130 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %131 = bitcast %struct.rtx_def* %130 to i32*
  %bf.load256 = load i32, i32* %131, align 8
  %bf.lshr = lshr i32 %bf.load256, 27
  %bf.clear257 = and i32 %bf.lshr, 1
  %tobool258 = icmp ne i32 %bf.clear257, 0
  br i1 %tobool258, label %if.then.330, label %lor.lhs.false.259

lor.lhs.false.259:                                ; preds = %land.lhs.true.255, %lor.lhs.false.250
  %132 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %133 = bitcast %struct.rtx_def* %132 to i32*
  %bf.load260 = load i32, i32* %133, align 8
  %bf.clear261 = and i32 %bf.load260, 65535
  %cmp262 = icmp eq i32 %bf.clear261, 43
  br i1 %cmp262, label %if.then.330, label %lor.lhs.false.264

lor.lhs.false.264:                                ; preds = %lor.lhs.false.259, %lor.lhs.false.223
  %134 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %135 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %call265 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %134, i32 9, %struct.rtx_def* %135)
  %tobool266 = icmp ne %struct.rtx_def* %call265, null
  br i1 %tobool266, label %if.then.330, label %lor.lhs.false.267

lor.lhs.false.267:                                ; preds = %lor.lhs.false.264
  %136 = load %struct.rtx_def*, %struct.rtx_def** %succ.addr, align 8
  %tobool268 = icmp ne %struct.rtx_def* %136, null
  br i1 %tobool268, label %land.lhs.true.269, label %lor.lhs.false.272

land.lhs.true.269:                                ; preds = %lor.lhs.false.267
  %137 = load %struct.rtx_def*, %struct.rtx_def** %succ.addr, align 8
  %138 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %call270 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %137, i32 9, %struct.rtx_def* %138)
  %tobool271 = icmp ne %struct.rtx_def* %call270, null
  br i1 %tobool271, label %if.then.330, label %lor.lhs.false.272

lor.lhs.false.272:                                ; preds = %land.lhs.true.269, %lor.lhs.false.267
  %139 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld273 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1
  %arrayidx274 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld273, i32 0, i64 0
  %rtint275 = bitcast %union.rtunion_def* %arrayidx274 to i32*
  %140 = load i32, i32* %rtint275, align 4
  %141 = load i32, i32* @max_uid_cuid, align 4
  %cmp276 = icmp sgt i32 %140, %141
  br i1 %cmp276, label %cond.true.278, label %cond.false.280

cond.true.278:                                    ; preds = %lor.lhs.false.272
  %142 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call279 = call i32 @insn_cuid(%struct.rtx_def* %142)
  br label %cond.end.286

cond.false.280:                                   ; preds = %lor.lhs.false.272
  %143 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld281 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1
  %arrayidx282 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld281, i32 0, i64 0
  %rtint283 = bitcast %union.rtunion_def* %arrayidx282 to i32*
  %144 = load i32, i32* %rtint283, align 4
  %idxprom284 = sext i32 %144 to i64
  %145 = load i32*, i32** @uid_cuid, align 8
  %arrayidx285 = getelementptr inbounds i32, i32* %145, i64 %idxprom284
  %146 = load i32, i32* %arrayidx285, align 4
  br label %cond.end.286

cond.end.286:                                     ; preds = %cond.false.280, %cond.true.278
  %cond287 = phi i32 [ %call279, %cond.true.278 ], [ %146, %cond.false.280 ]
  %147 = load i32, i32* @last_call_cuid, align 4
  %cmp288 = icmp slt i32 %cond287, %147
  br i1 %cmp288, label %land.lhs.true.290, label %if.end.331

land.lhs.true.290:                                ; preds = %cond.end.286
  %148 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %149 = bitcast %struct.rtx_def* %148 to i32*
  %bf.load291 = load i32, i32* %149, align 8
  %bf.clear292 = and i32 %bf.load291, 65535
  %cmp293 = icmp eq i32 %bf.clear292, 67
  br i1 %cmp293, label %if.end.331, label %lor.lhs.false.295

lor.lhs.false.295:                                ; preds = %land.lhs.true.290
  %150 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %151 = bitcast %struct.rtx_def* %150 to i32*
  %bf.load296 = load i32, i32* %151, align 8
  %bf.clear297 = and i32 %bf.load296, 65535
  %cmp298 = icmp eq i32 %bf.clear297, 68
  br i1 %cmp298, label %if.end.331, label %lor.lhs.false.300

lor.lhs.false.300:                                ; preds = %lor.lhs.false.295
  %152 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %153 = bitcast %struct.rtx_def* %152 to i32*
  %bf.load301 = load i32, i32* %153, align 8
  %bf.clear302 = and i32 %bf.load301, 65535
  %cmp303 = icmp eq i32 %bf.clear302, 54
  br i1 %cmp303, label %if.end.331, label %lor.lhs.false.305

lor.lhs.false.305:                                ; preds = %lor.lhs.false.300
  %154 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %155 = bitcast %struct.rtx_def* %154 to i32*
  %bf.load306 = load i32, i32* %155, align 8
  %bf.clear307 = and i32 %bf.load306, 65535
  %cmp308 = icmp eq i32 %bf.clear307, 55
  br i1 %cmp308, label %if.end.331, label %lor.lhs.false.310

lor.lhs.false.310:                                ; preds = %lor.lhs.false.305
  %156 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %157 = bitcast %struct.rtx_def* %156 to i32*
  %bf.load311 = load i32, i32* %157, align 8
  %bf.clear312 = and i32 %bf.load311, 65535
  %cmp313 = icmp eq i32 %bf.clear312, 58
  br i1 %cmp313, label %if.end.331, label %lor.lhs.false.315

lor.lhs.false.315:                                ; preds = %lor.lhs.false.310
  %158 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %159 = bitcast %struct.rtx_def* %158 to i32*
  %bf.load316 = load i32, i32* %159, align 8
  %bf.clear317 = and i32 %bf.load316, 65535
  %cmp318 = icmp eq i32 %bf.clear317, 134
  br i1 %cmp318, label %if.end.331, label %lor.lhs.false.320

lor.lhs.false.320:                                ; preds = %lor.lhs.false.315
  %160 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %161 = bitcast %struct.rtx_def* %160 to i32*
  %bf.load321 = load i32, i32* %161, align 8
  %bf.clear322 = and i32 %bf.load321, 65535
  %cmp323 = icmp eq i32 %bf.clear322, 56
  br i1 %cmp323, label %if.end.331, label %lor.lhs.false.325

lor.lhs.false.325:                                ; preds = %lor.lhs.false.320
  %162 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %163 = bitcast %struct.rtx_def* %162 to i32*
  %bf.load326 = load i32, i32* %163, align 8
  %bf.clear327 = and i32 %bf.load326, 65535
  %cmp328 = icmp eq i32 %bf.clear327, 140
  br i1 %cmp328, label %if.end.331, label %if.then.330

if.then.330:                                      ; preds = %lor.lhs.false.325, %land.lhs.true.269, %lor.lhs.false.264, %lor.lhs.false.259, %land.lhs.true.255, %cond.end.246, %land.lhs.true.220, %land.lhs.true.215, %land.lhs.true.205, %land.lhs.true.191, %lor.lhs.false.181, %lor.lhs.false.176, %land.lhs.true.173, %lor.lhs.false.165, %lor.lhs.false.160, %if.end.150
  store i32 0, i32* %retval
  br label %return

if.end.331:                                       ; preds = %lor.lhs.false.325, %lor.lhs.false.320, %lor.lhs.false.315, %lor.lhs.false.310, %lor.lhs.false.305, %lor.lhs.false.300, %lor.lhs.false.295, %land.lhs.true.290, %cond.end.286
  %164 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %165 = bitcast %struct.rtx_def* %164 to i32*
  %bf.load332 = load i32, i32* %165, align 8
  %bf.clear333 = and i32 %bf.load332, 65535
  %cmp334 = icmp eq i32 %bf.clear333, 61
  br i1 %cmp334, label %if.then.336, label %if.else.373

if.then.336:                                      ; preds = %if.end.331
  %166 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %167 = bitcast %struct.rtx_def* %166 to i32*
  %bf.load337 = load i32, i32* %167, align 8
  %bf.clear338 = and i32 %bf.load337, 65535
  %cmp339 = icmp eq i32 %bf.clear338, 61
  br i1 %cmp339, label %land.lhs.true.341, label %if.end.372

land.lhs.true.341:                                ; preds = %if.then.336
  %168 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld342 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %168, i32 0, i32 1
  %arrayidx343 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld342, i32 0, i64 0
  %rtuint344 = bitcast %union.rtunion_def* %arrayidx343 to i32*
  %169 = load i32, i32* %rtuint344, align 4
  %cmp345 = icmp ult i32 %169, 53
  br i1 %cmp345, label %land.lhs.true.347, label %lor.lhs.false.356

land.lhs.true.347:                                ; preds = %land.lhs.true.341
  %170 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld348 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %170, i32 0, i32 1
  %arrayidx349 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld348, i32 0, i64 0
  %rtuint350 = bitcast %union.rtunion_def* %arrayidx349 to i32*
  %171 = load i32, i32* %rtuint350, align 4
  %172 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %173 = bitcast %struct.rtx_def* %172 to i32*
  %bf.load351 = load i32, i32* %173, align 8
  %bf.lshr352 = lshr i32 %bf.load351, 16
  %bf.clear353 = and i32 %bf.lshr352, 255
  %call354 = call i32 @ix86_hard_regno_mode_ok(i32 %171, i32 %bf.clear353)
  %tobool355 = icmp ne i32 %call354, 0
  br i1 %tobool355, label %lor.lhs.false.356, label %if.then.371

lor.lhs.false.356:                                ; preds = %land.lhs.true.347, %land.lhs.true.341
  %174 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld357 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %174, i32 0, i32 1
  %arrayidx358 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld357, i32 0, i64 0
  %rtuint359 = bitcast %union.rtunion_def* %arrayidx358 to i32*
  %175 = load i32, i32* %rtuint359, align 4
  %cmp360 = icmp ult i32 %175, 53
  br i1 %cmp360, label %land.lhs.true.362, label %if.end.372

land.lhs.true.362:                                ; preds = %lor.lhs.false.356
  %176 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld363 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %176, i32 0, i32 1
  %arrayidx364 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld363, i32 0, i64 0
  %rtuint365 = bitcast %union.rtunion_def* %arrayidx364 to i32*
  %177 = load i32, i32* %rtuint365, align 4
  %178 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %179 = bitcast %struct.rtx_def* %178 to i32*
  %bf.load366 = load i32, i32* %179, align 8
  %bf.lshr367 = lshr i32 %bf.load366, 16
  %bf.clear368 = and i32 %bf.lshr367, 255
  %call369 = call i32 @ix86_hard_regno_mode_ok(i32 %177, i32 %bf.clear368)
  %tobool370 = icmp ne i32 %call369, 0
  br i1 %tobool370, label %if.end.372, label %if.then.371

if.then.371:                                      ; preds = %land.lhs.true.362, %land.lhs.true.347
  store i32 0, i32* %retval
  br label %return

if.end.372:                                       ; preds = %land.lhs.true.362, %lor.lhs.false.356, %if.then.336
  br label %if.end.380

if.else.373:                                      ; preds = %if.end.331
  %180 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %181 = bitcast %struct.rtx_def* %180 to i32*
  %bf.load374 = load i32, i32* %181, align 8
  %bf.clear375 = and i32 %bf.load374, 65535
  %cmp376 = icmp ne i32 %bf.clear375, 69
  br i1 %cmp376, label %if.then.378, label %if.end.379

if.then.378:                                      ; preds = %if.else.373
  store i32 0, i32* %retval
  br label %return

if.end.379:                                       ; preds = %if.else.373
  br label %if.end.380

if.end.380:                                       ; preds = %if.end.379, %if.end.372
  %182 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld381 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %182, i32 0, i32 1
  %arrayidx382 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld381, i32 0, i64 3
  %rtx383 = bitcast %union.rtunion_def* %arrayidx382 to %struct.rtx_def**
  %183 = load %struct.rtx_def*, %struct.rtx_def** %rtx383, align 8
  %184 = bitcast %struct.rtx_def* %183 to i32*
  %bf.load384 = load i32, i32* %184, align 8
  %bf.clear385 = and i32 %bf.load384, 65535
  %cmp386 = icmp eq i32 %bf.clear385, 39
  br i1 %cmp386, label %if.then.388, label %if.end.449

if.then.388:                                      ; preds = %if.end.380
  %185 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld389 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %185, i32 0, i32 1
  %arrayidx390 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld389, i32 0, i64 3
  %rtx391 = bitcast %union.rtunion_def* %arrayidx390 to %struct.rtx_def**
  %186 = load %struct.rtx_def*, %struct.rtx_def** %rtx391, align 8
  %fld392 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %186, i32 0, i32 1
  %arrayidx393 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld392, i32 0, i64 0
  %rtvec394 = bitcast %union.rtunion_def* %arrayidx393 to %struct.rtvec_def**
  %187 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec394, align 8
  %num_elem395 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %187, i32 0, i32 0
  %188 = load i32, i32* %num_elem395, align 4
  %sub396 = sub nsw i32 %188, 1
  store i32 %sub396, i32* %i, align 4
  br label %for.cond.397

for.cond.397:                                     ; preds = %for.inc.446, %if.then.388
  %189 = load i32, i32* %i, align 4
  %cmp398 = icmp sge i32 %189, 0
  br i1 %cmp398, label %for.body.400, label %for.end.448

for.body.400:                                     ; preds = %for.cond.397
  %190 = load i32, i32* %i, align 4
  %idxprom401 = sext i32 %190 to i64
  %191 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld402 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %191, i32 0, i32 1
  %arrayidx403 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld402, i32 0, i64 3
  %rtx404 = bitcast %union.rtunion_def* %arrayidx403 to %struct.rtx_def**
  %192 = load %struct.rtx_def*, %struct.rtx_def** %rtx404, align 8
  %fld405 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %192, i32 0, i32 1
  %arrayidx406 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld405, i32 0, i64 0
  %rtvec407 = bitcast %union.rtunion_def* %arrayidx406 to %struct.rtvec_def**
  %193 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec407, align 8
  %elem408 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %193, i32 0, i32 1
  %arrayidx409 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem408, i32 0, i64 %idxprom401
  %194 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx409, align 8
  %195 = bitcast %struct.rtx_def* %194 to i32*
  %bf.load410 = load i32, i32* %195, align 8
  %bf.clear411 = and i32 %bf.load410, 65535
  %cmp412 = icmp eq i32 %bf.clear411, 49
  br i1 %cmp412, label %land.lhs.true.414, label %if.end.445

land.lhs.true.414:                                ; preds = %for.body.400
  %196 = load i32, i32* %i, align 4
  %idxprom415 = sext i32 %196 to i64
  %197 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld416 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %197, i32 0, i32 1
  %arrayidx417 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld416, i32 0, i64 3
  %rtx418 = bitcast %union.rtunion_def* %arrayidx417 to %struct.rtx_def**
  %198 = load %struct.rtx_def*, %struct.rtx_def** %rtx418, align 8
  %fld419 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %198, i32 0, i32 1
  %arrayidx420 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld419, i32 0, i64 0
  %rtvec421 = bitcast %union.rtunion_def* %arrayidx420 to %struct.rtvec_def**
  %199 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec421, align 8
  %elem422 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %199, i32 0, i32 1
  %arrayidx423 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem422, i32 0, i64 %idxprom415
  %200 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx423, align 8
  %fld424 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %200, i32 0, i32 1
  %arrayidx425 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld424, i32 0, i64 0
  %rtx426 = bitcast %union.rtunion_def* %arrayidx425 to %struct.rtx_def**
  %201 = load %struct.rtx_def*, %struct.rtx_def** %rtx426, align 8
  %202 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %call427 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %201, %struct.rtx_def* %202)
  %tobool428 = icmp ne i32 %call427, 0
  br i1 %tobool428, label %if.then.444, label %lor.lhs.false.429

lor.lhs.false.429:                                ; preds = %land.lhs.true.414
  %203 = load i32, i32* %i, align 4
  %idxprom430 = sext i32 %203 to i64
  %204 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld431 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %204, i32 0, i32 1
  %arrayidx432 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld431, i32 0, i64 3
  %rtx433 = bitcast %union.rtunion_def* %arrayidx432 to %struct.rtx_def**
  %205 = load %struct.rtx_def*, %struct.rtx_def** %rtx433, align 8
  %fld434 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %205, i32 0, i32 1
  %arrayidx435 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld434, i32 0, i64 0
  %rtvec436 = bitcast %union.rtunion_def* %arrayidx435 to %struct.rtvec_def**
  %206 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec436, align 8
  %elem437 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %206, i32 0, i32 1
  %arrayidx438 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem437, i32 0, i64 %idxprom430
  %207 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx438, align 8
  %fld439 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %207, i32 0, i32 1
  %arrayidx440 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld439, i32 0, i64 0
  %rtx441 = bitcast %union.rtunion_def* %arrayidx440 to %struct.rtx_def**
  %208 = load %struct.rtx_def*, %struct.rtx_def** %rtx441, align 8
  %209 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %call442 = call i32 @rtx_equal_p(%struct.rtx_def* %208, %struct.rtx_def* %209)
  %tobool443 = icmp ne i32 %call442, 0
  br i1 %tobool443, label %if.then.444, label %if.end.445

if.then.444:                                      ; preds = %lor.lhs.false.429, %land.lhs.true.414
  store i32 0, i32* %retval
  br label %return

if.end.445:                                       ; preds = %lor.lhs.false.429, %for.body.400
  br label %for.inc.446

for.inc.446:                                      ; preds = %if.end.445
  %210 = load i32, i32* %i, align 4
  %dec447 = add nsw i32 %210, -1
  store i32 %dec447, i32* %i, align 4
  br label %for.cond.397

for.end.448:                                      ; preds = %for.cond.397
  br label %if.end.449

if.end.449:                                       ; preds = %for.end.448, %if.end.380
  %211 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %212 = bitcast %struct.rtx_def* %211 to i32*
  %bf.load450 = load i32, i32* %212, align 8
  %bf.clear451 = and i32 %bf.load450, 65535
  %cmp452 = icmp eq i32 %bf.clear451, 41
  br i1 %cmp452, label %if.then.457, label %lor.lhs.false.454

lor.lhs.false.454:                                ; preds = %if.end.449
  %213 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %call455 = call i32 @volatile_refs_p(%struct.rtx_def* %213)
  %tobool456 = icmp ne i32 %call455, 0
  br i1 %tobool456, label %if.then.457, label %if.end.498

if.then.457:                                      ; preds = %lor.lhs.false.454, %if.end.449
  %214 = load %struct.rtx_def*, %struct.rtx_def** %succ.addr, align 8
  %cmp458 = icmp ne %struct.rtx_def* %214, null
  br i1 %cmp458, label %land.lhs.true.460, label %if.end.467

land.lhs.true.460:                                ; preds = %if.then.457
  %215 = load %struct.rtx_def*, %struct.rtx_def** %succ.addr, align 8
  %fld461 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %215, i32 0, i32 1
  %arrayidx462 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld461, i32 0, i64 3
  %rtx463 = bitcast %union.rtunion_def* %arrayidx462 to %struct.rtx_def**
  %216 = load %struct.rtx_def*, %struct.rtx_def** %rtx463, align 8
  %call464 = call i32 @volatile_refs_p(%struct.rtx_def* %216)
  %tobool465 = icmp ne i32 %call464, 0
  br i1 %tobool465, label %if.then.466, label %if.end.467

if.then.466:                                      ; preds = %land.lhs.true.460
  store i32 0, i32* %retval
  br label %return

if.end.467:                                       ; preds = %land.lhs.true.460, %if.then.457
  %217 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld468 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %217, i32 0, i32 1
  %arrayidx469 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld468, i32 0, i64 2
  %rtx470 = bitcast %union.rtunion_def* %arrayidx469 to %struct.rtx_def**
  %218 = load %struct.rtx_def*, %struct.rtx_def** %rtx470, align 8
  store %struct.rtx_def* %218, %struct.rtx_def** %p, align 8
  br label %for.cond.471

for.cond.471:                                     ; preds = %for.inc.493, %if.end.467
  %219 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %220 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %cmp472 = icmp ne %struct.rtx_def* %219, %220
  br i1 %cmp472, label %for.body.474, label %for.end.497

for.body.474:                                     ; preds = %for.cond.471
  %221 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %222 = bitcast %struct.rtx_def* %221 to i32*
  %bf.load475 = load i32, i32* %222, align 8
  %bf.clear476 = and i32 %bf.load475, 65535
  %idxprom477 = sext i32 %bf.clear476 to i64
  %arrayidx478 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom477
  %223 = load i8, i8* %arrayidx478, align 1
  %conv479 = sext i8 %223 to i32
  %cmp480 = icmp eq i32 %conv479, 105
  br i1 %cmp480, label %land.lhs.true.482, label %if.end.492

land.lhs.true.482:                                ; preds = %for.body.474
  %224 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %225 = load %struct.rtx_def*, %struct.rtx_def** %succ.addr, align 8
  %cmp483 = icmp ne %struct.rtx_def* %224, %225
  br i1 %cmp483, label %land.lhs.true.485, label %if.end.492

land.lhs.true.485:                                ; preds = %land.lhs.true.482
  %226 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld486 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %226, i32 0, i32 1
  %arrayidx487 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld486, i32 0, i64 3
  %rtx488 = bitcast %union.rtunion_def* %arrayidx487 to %struct.rtx_def**
  %227 = load %struct.rtx_def*, %struct.rtx_def** %rtx488, align 8
  %call489 = call i32 @volatile_refs_p(%struct.rtx_def* %227)
  %tobool490 = icmp ne i32 %call489, 0
  br i1 %tobool490, label %if.then.491, label %if.end.492

if.then.491:                                      ; preds = %land.lhs.true.485
  store i32 0, i32* %retval
  br label %return

if.end.492:                                       ; preds = %land.lhs.true.485, %land.lhs.true.482, %for.body.474
  br label %for.inc.493

for.inc.493:                                      ; preds = %if.end.492
  %228 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld494 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %228, i32 0, i32 1
  %arrayidx495 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld494, i32 0, i64 2
  %rtx496 = bitcast %union.rtunion_def* %arrayidx495 to %struct.rtx_def**
  %229 = load %struct.rtx_def*, %struct.rtx_def** %rtx496, align 8
  store %struct.rtx_def* %229, %struct.rtx_def** %p, align 8
  br label %for.cond.471

for.end.497:                                      ; preds = %for.cond.471
  br label %if.end.498

if.end.498:                                       ; preds = %for.end.497, %lor.lhs.false.454
  %230 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %231 = bitcast %struct.rtx_def* %230 to i32*
  %bf.load499 = load i32, i32* %231, align 8
  %bf.clear500 = and i32 %bf.load499, 65535
  %cmp501 = icmp eq i32 %bf.clear500, 41
  br i1 %cmp501, label %land.lhs.true.503, label %if.end.515

land.lhs.true.503:                                ; preds = %if.end.498
  %232 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %233 = bitcast %struct.rtx_def* %232 to i32*
  %bf.load504 = load i32, i32* %233, align 8
  %bf.clear505 = and i32 %bf.load504, 65535
  %cmp506 = icmp eq i32 %bf.clear505, 61
  br i1 %cmp506, label %land.lhs.true.508, label %if.end.515

land.lhs.true.508:                                ; preds = %land.lhs.true.503
  %234 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld509 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %234, i32 0, i32 1
  %arrayidx510 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld509, i32 0, i64 0
  %rtuint511 = bitcast %union.rtunion_def* %arrayidx510 to i32*
  %235 = load i32, i32* %rtuint511, align 4
  %cmp512 = icmp ult i32 %235, 53
  br i1 %cmp512, label %if.then.514, label %if.end.515

if.then.514:                                      ; preds = %land.lhs.true.508
  store i32 0, i32* %retval
  br label %return

if.end.515:                                       ; preds = %land.lhs.true.508, %land.lhs.true.503, %if.end.498
  %236 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld516 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %236, i32 0, i32 1
  %arrayidx517 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld516, i32 0, i64 2
  %rtx518 = bitcast %union.rtunion_def* %arrayidx517 to %struct.rtx_def**
  %237 = load %struct.rtx_def*, %struct.rtx_def** %rtx518, align 8
  store %struct.rtx_def* %237, %struct.rtx_def** %p, align 8
  br label %for.cond.519

for.cond.519:                                     ; preds = %for.inc.541, %if.end.515
  %238 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %239 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %cmp520 = icmp ne %struct.rtx_def* %238, %239
  br i1 %cmp520, label %for.body.522, label %for.end.545

for.body.522:                                     ; preds = %for.cond.519
  %240 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %241 = bitcast %struct.rtx_def* %240 to i32*
  %bf.load523 = load i32, i32* %241, align 8
  %bf.clear524 = and i32 %bf.load523, 65535
  %idxprom525 = sext i32 %bf.clear524 to i64
  %arrayidx526 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom525
  %242 = load i8, i8* %arrayidx526, align 1
  %conv527 = sext i8 %242 to i32
  %cmp528 = icmp eq i32 %conv527, 105
  br i1 %cmp528, label %land.lhs.true.530, label %if.end.540

land.lhs.true.530:                                ; preds = %for.body.522
  %243 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %244 = load %struct.rtx_def*, %struct.rtx_def** %succ.addr, align 8
  %cmp531 = icmp ne %struct.rtx_def* %243, %244
  br i1 %cmp531, label %land.lhs.true.533, label %if.end.540

land.lhs.true.533:                                ; preds = %land.lhs.true.530
  %245 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld534 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %245, i32 0, i32 1
  %arrayidx535 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld534, i32 0, i64 3
  %rtx536 = bitcast %union.rtunion_def* %arrayidx535 to %struct.rtx_def**
  %246 = load %struct.rtx_def*, %struct.rtx_def** %rtx536, align 8
  %call537 = call i32 @volatile_insn_p(%struct.rtx_def* %246)
  %tobool538 = icmp ne i32 %call537, 0
  br i1 %tobool538, label %if.then.539, label %if.end.540

if.then.539:                                      ; preds = %land.lhs.true.533
  store i32 0, i32* %retval
  br label %return

if.end.540:                                       ; preds = %land.lhs.true.533, %land.lhs.true.530, %for.body.522
  br label %for.inc.541

for.inc.541:                                      ; preds = %if.end.540
  %247 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld542 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %247, i32 0, i32 1
  %arrayidx543 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld542, i32 0, i64 2
  %rtx544 = bitcast %union.rtunion_def* %arrayidx543 to %struct.rtx_def**
  %248 = load %struct.rtx_def*, %struct.rtx_def** %rtx544, align 8
  store %struct.rtx_def* %248, %struct.rtx_def** %p, align 8
  br label %for.cond.519

for.end.545:                                      ; preds = %for.cond.519
  %249 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %250 = load %struct.rtx_def**, %struct.rtx_def*** %pdest.addr, align 8
  store %struct.rtx_def* %249, %struct.rtx_def** %250, align 8
  %251 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %252 = load %struct.rtx_def**, %struct.rtx_def*** %psrc.addr, align 8
  store %struct.rtx_def* %251, %struct.rtx_def** %252, align 8
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %for.end.545, %if.then.539, %if.then.514, %if.then.491, %if.then.466, %if.then.444, %if.then.378, %if.then.371, %if.then.330, %if.then.149, %if.else.144, %if.then.142, %sw.default, %if.then.131, %if.then.114
  %253 = load i32, i32* %retval
  ret i32 %253
}

; Function Attrs: nounwind uwtable
define internal void @undo_all() #0 {
entry:
  %undo = alloca %struct.undo*, align 8
  %next = alloca %struct.undo*, align 8
  %0 = load %struct.undo*, %struct.undo** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 0), align 8
  store %struct.undo* %0, %struct.undo** %undo, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.undo*, %struct.undo** %undo, align 8
  %tobool = icmp ne %struct.undo* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.undo*, %struct.undo** %undo, align 8
  %next1 = getelementptr inbounds %struct.undo, %struct.undo* %2, i32 0, i32 0
  %3 = load %struct.undo*, %struct.undo** %next1, align 8
  store %struct.undo* %3, %struct.undo** %next, align 8
  %4 = load %struct.undo*, %struct.undo** %undo, align 8
  %is_int = getelementptr inbounds %struct.undo, %struct.undo* %4, i32 0, i32 1
  %5 = load i32, i32* %is_int, align 4
  %tobool2 = icmp ne i32 %5, 0
  br i1 %tobool2, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %6 = load %struct.undo*, %struct.undo** %undo, align 8
  %old_contents = getelementptr inbounds %struct.undo, %struct.undo* %6, i32 0, i32 2
  %i = bitcast %union.anon* %old_contents to i32*
  %7 = load i32, i32* %i, align 4
  %8 = load %struct.undo*, %struct.undo** %undo, align 8
  %where = getelementptr inbounds %struct.undo, %struct.undo* %8, i32 0, i32 3
  %i3 = bitcast %union.anon.0* %where to i32**
  %9 = load i32*, i32** %i3, align 8
  store i32 %7, i32* %9, align 4
  br label %if.end

if.else:                                          ; preds = %for.body
  %10 = load %struct.undo*, %struct.undo** %undo, align 8
  %old_contents4 = getelementptr inbounds %struct.undo, %struct.undo* %10, i32 0, i32 2
  %r = bitcast %union.anon* %old_contents4 to %struct.rtx_def**
  %11 = load %struct.rtx_def*, %struct.rtx_def** %r, align 8
  %12 = load %struct.undo*, %struct.undo** %undo, align 8
  %where5 = getelementptr inbounds %struct.undo, %struct.undo* %12, i32 0, i32 3
  %r6 = bitcast %union.anon.0* %where5 to %struct.rtx_def***
  %13 = load %struct.rtx_def**, %struct.rtx_def*** %r6, align 8
  store %struct.rtx_def* %11, %struct.rtx_def** %13, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load %struct.undo*, %struct.undo** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 1), align 8
  %15 = load %struct.undo*, %struct.undo** %undo, align 8
  %next7 = getelementptr inbounds %struct.undo, %struct.undo* %15, i32 0, i32 0
  store %struct.undo* %14, %struct.undo** %next7, align 8
  %16 = load %struct.undo*, %struct.undo** %undo, align 8
  store %struct.undo* %16, %struct.undo** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 1), align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %17 = load %struct.undo*, %struct.undo** %next, align 8
  store %struct.undo* %17, %struct.undo** %undo, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store %struct.undo* null, %struct.undo** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 0), align 8
  store %struct.rtx_def* null, %struct.rtx_def** @subst_prev_insn, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @combinable_i3pat(%struct.rtx_def* %i3, %struct.rtx_def** %loc, %struct.rtx_def* %i2dest, %struct.rtx_def* %i1dest, i32 %i1_not_in_src, %struct.rtx_def** %pi3dest_killed) #0 {
entry:
  %retval = alloca i32, align 4
  %i3.addr = alloca %struct.rtx_def*, align 8
  %loc.addr = alloca %struct.rtx_def**, align 8
  %i2dest.addr = alloca %struct.rtx_def*, align 8
  %i1dest.addr = alloca %struct.rtx_def*, align 8
  %i1_not_in_src.addr = alloca i32, align 4
  %pi3dest_killed.addr = alloca %struct.rtx_def**, align 8
  %x = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %dest = alloca %struct.rtx_def*, align 8
  %src = alloca %struct.rtx_def*, align 8
  %inner_dest = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  store %struct.rtx_def* %i3, %struct.rtx_def** %i3.addr, align 8
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  store %struct.rtx_def* %i2dest, %struct.rtx_def** %i2dest.addr, align 8
  store %struct.rtx_def* %i1dest, %struct.rtx_def** %i1dest.addr, align 8
  store i32 %i1_not_in_src, i32* %i1_not_in_src.addr, align 4
  store %struct.rtx_def** %pi3dest_killed, %struct.rtx_def*** %pi3dest_killed.addr, align 8
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %x, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load = load i32, i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 47
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %call = call %struct.rtx_def* @expand_field_assignment(%struct.rtx_def* %4)
  store %struct.rtx_def* %call, %struct.rtx_def** %set, align 8
  %5 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %6, %struct.rtx_def** %dest, align 8
  %7 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1, i32 0, i64 1
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rtx3, align 8
  store %struct.rtx_def* %8, %struct.rtx_def** %src, align 8
  %9 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  store %struct.rtx_def* %9, %struct.rtx_def** %inner_dest, align 8
  %10 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  call void @do_SUBST(%struct.rtx_def** %10, %struct.rtx_def* %11)
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %12 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load4 = load i32, i32* %13, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 64
  br i1 %cmp6, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.cond
  %14 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest, align 8
  %15 = bitcast %struct.rtx_def* %14 to i32*
  %bf.load7 = load i32, i32* %15, align 8
  %bf.clear8 = and i32 %bf.load7, 65535
  %cmp9 = icmp eq i32 %bf.clear8, 63
  br i1 %cmp9, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false
  %16 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest, align 8
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load10 = load i32, i32* %17, align 8
  %bf.clear11 = and i32 %bf.load10, 65535
  %cmp12 = icmp eq i32 %bf.clear11, 133
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %while.cond
  %18 = phi i1 [ true, %lor.lhs.false ], [ true, %while.cond ], [ %cmp12, %lor.rhs ]
  br i1 %18, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  %19 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest, align 8
  %fld13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i32 0, i64 0
  %rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rtx15, align 8
  store %struct.rtx_def* %20, %struct.rtx_def** %inner_dest, align 8
  br label %while.cond

while.end:                                        ; preds = %lor.end
  %21 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest, align 8
  %22 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %cmp16 = icmp ne %struct.rtx_def* %21, %22
  br i1 %cmp16, label %land.lhs.true, label %lor.lhs.false.23

land.lhs.true:                                    ; preds = %while.end
  %23 = load %struct.rtx_def*, %struct.rtx_def** %i2dest.addr, align 8
  %24 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest, align 8
  %call17 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %23, %struct.rtx_def* %24)
  %tobool = icmp ne i32 %call17, 0
  br i1 %tobool, label %if.then.44, label %lor.lhs.false.18

lor.lhs.false.18:                                 ; preds = %land.lhs.true
  %25 = load %struct.rtx_def*, %struct.rtx_def** %i1dest.addr, align 8
  %tobool19 = icmp ne %struct.rtx_def* %25, null
  br i1 %tobool19, label %land.lhs.true.20, label %lor.lhs.false.23

land.lhs.true.20:                                 ; preds = %lor.lhs.false.18
  %26 = load %struct.rtx_def*, %struct.rtx_def** %i1dest.addr, align 8
  %27 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest, align 8
  %call21 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %26, %struct.rtx_def* %27)
  %tobool22 = icmp ne i32 %call21, 0
  br i1 %tobool22, label %if.then.44, label %lor.lhs.false.23

lor.lhs.false.23:                                 ; preds = %land.lhs.true.20, %lor.lhs.false.18, %while.end
  %28 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest, align 8
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load24 = load i32, i32* %29, align 8
  %bf.clear25 = and i32 %bf.load24, 65535
  %cmp26 = icmp eq i32 %bf.clear25, 61
  br i1 %cmp26, label %land.lhs.true.27, label %lor.lhs.false.39

land.lhs.true.27:                                 ; preds = %lor.lhs.false.23
  %30 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest, align 8
  %fld28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx29 to i32*
  %31 = load i32, i32* %rtuint, align 4
  %cmp30 = icmp ult i32 %31, 53
  br i1 %cmp30, label %land.lhs.true.31, label %lor.lhs.false.39

land.lhs.true.31:                                 ; preds = %land.lhs.true.27
  %32 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest, align 8
  %fld32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i32 0, i64 0
  %rtuint34 = bitcast %union.rtunion_def* %arrayidx33 to i32*
  %33 = load i32, i32* %rtuint34, align 4
  %34 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest, align 8
  %35 = bitcast %struct.rtx_def* %34 to i32*
  %bf.load35 = load i32, i32* %35, align 8
  %bf.lshr = lshr i32 %bf.load35, 16
  %bf.clear36 = and i32 %bf.lshr, 255
  %call37 = call i32 @ix86_hard_regno_mode_ok(i32 %33, i32 %bf.clear36)
  %tobool38 = icmp ne i32 %call37, 0
  br i1 %tobool38, label %lor.lhs.false.39, label %if.then.44

lor.lhs.false.39:                                 ; preds = %land.lhs.true.31, %land.lhs.true.27, %lor.lhs.false.23
  %36 = load i32, i32* %i1_not_in_src.addr, align 4
  %tobool40 = icmp ne i32 %36, 0
  br i1 %tobool40, label %land.lhs.true.41, label %if.end

land.lhs.true.41:                                 ; preds = %lor.lhs.false.39
  %37 = load %struct.rtx_def*, %struct.rtx_def** %i1dest.addr, align 8
  %38 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %call42 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %37, %struct.rtx_def* %38)
  %tobool43 = icmp ne i32 %call42, 0
  br i1 %tobool43, label %if.then.44, label %if.end

if.then.44:                                       ; preds = %land.lhs.true.41, %land.lhs.true.31, %land.lhs.true.20, %land.lhs.true
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true.41, %lor.lhs.false.39
  %39 = load %struct.rtx_def**, %struct.rtx_def*** %pi3dest_killed.addr, align 8
  %tobool45 = icmp ne %struct.rtx_def** %39, null
  br i1 %tobool45, label %land.lhs.true.46, label %if.end.86

land.lhs.true.46:                                 ; preds = %if.end
  %40 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load47 = load i32, i32* %41, align 8
  %bf.clear48 = and i32 %bf.load47, 65535
  %cmp49 = icmp eq i32 %bf.clear48, 61
  br i1 %cmp49, label %land.lhs.true.50, label %if.end.86

land.lhs.true.50:                                 ; preds = %land.lhs.true.46
  %42 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %43 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i32 0, i64 3
  %rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rtx53, align 8
  %call54 = call i32 @reg_referenced_p(%struct.rtx_def* %42, %struct.rtx_def* %44)
  %tobool55 = icmp ne i32 %call54, 0
  br i1 %tobool55, label %land.lhs.true.56, label %if.end.86

land.lhs.true.56:                                 ; preds = %land.lhs.true.50
  %45 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1
  %arrayidx58 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld57, i32 0, i64 0
  %rtuint59 = bitcast %union.rtunion_def* %arrayidx58 to i32*
  %46 = load i32, i32* %rtuint59, align 4
  %cmp60 = icmp ne i32 %46, 20
  br i1 %cmp60, label %land.lhs.true.61, label %if.end.86

land.lhs.true.61:                                 ; preds = %land.lhs.true.56
  %47 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1
  %arrayidx63 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld62, i32 0, i64 0
  %rtuint64 = bitcast %union.rtunion_def* %arrayidx63 to i32*
  %48 = load i32, i32* %rtuint64, align 4
  %cmp65 = icmp ne i32 %48, 6
  br i1 %cmp65, label %land.lhs.true.66, label %if.end.86

land.lhs.true.66:                                 ; preds = %land.lhs.true.61
  %49 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i32 0, i64 0
  %rtuint69 = bitcast %union.rtunion_def* %arrayidx68 to i32*
  %50 = load i32, i32* %rtuint69, align 4
  %cmp70 = icmp ne i32 %50, 16
  br i1 %cmp70, label %land.lhs.true.77, label %lor.lhs.false.71

lor.lhs.false.71:                                 ; preds = %land.lhs.true.66
  %51 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %arrayidx73 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld72, i32 0, i64 0
  %rtuint74 = bitcast %union.rtunion_def* %arrayidx73 to i32*
  %52 = load i32, i32* %rtuint74, align 4
  %idxprom = zext i32 %52 to i64
  %arrayidx75 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 %idxprom
  %53 = load i8, i8* %arrayidx75, align 1
  %tobool76 = icmp ne i8 %53, 0
  br i1 %tobool76, label %if.end.86, label %land.lhs.true.77

land.lhs.true.77:                                 ; preds = %lor.lhs.false.71, %land.lhs.true.66
  %54 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1
  %arrayidx79 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld78, i32 0, i64 0
  %rtuint80 = bitcast %union.rtunion_def* %arrayidx79 to i32*
  %55 = load i32, i32* %rtuint80, align 4
  %cmp81 = icmp ne i32 %55, 7
  br i1 %cmp81, label %if.then.82, label %if.end.86

if.then.82:                                       ; preds = %land.lhs.true.77
  %56 = load %struct.rtx_def**, %struct.rtx_def*** %pi3dest_killed.addr, align 8
  %57 = load %struct.rtx_def*, %struct.rtx_def** %56, align 8
  %tobool83 = icmp ne %struct.rtx_def* %57, null
  br i1 %tobool83, label %if.then.84, label %if.end.85

if.then.84:                                       ; preds = %if.then.82
  store i32 0, i32* %retval
  br label %return

if.end.85:                                        ; preds = %if.then.82
  %58 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %59 = load %struct.rtx_def**, %struct.rtx_def*** %pi3dest_killed.addr, align 8
  store %struct.rtx_def* %58, %struct.rtx_def** %59, align 8
  br label %if.end.86

if.end.86:                                        ; preds = %if.end.85, %land.lhs.true.77, %lor.lhs.false.71, %land.lhs.true.61, %land.lhs.true.56, %land.lhs.true.50, %land.lhs.true.46, %if.end
  br label %if.end.104

if.else:                                          ; preds = %entry
  %60 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %61 = bitcast %struct.rtx_def* %60 to i32*
  %bf.load87 = load i32, i32* %61, align 8
  %bf.clear88 = and i32 %bf.load87, 65535
  %cmp89 = icmp eq i32 %bf.clear88, 39
  br i1 %cmp89, label %if.then.90, label %if.end.103

if.then.90:                                       ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.90
  %62 = load i32, i32* %i, align 4
  %63 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1
  %arrayidx92 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld91, i32 0, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx92 to %struct.rtvec_def**
  %64 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %64, i32 0, i32 0
  %65 = load i32, i32* %num_elem, align 4
  %cmp93 = icmp slt i32 %62, %65
  br i1 %cmp93, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %66 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %67 = load i32, i32* %i, align 4
  %idxprom94 = sext i32 %67 to i64
  %68 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1
  %arrayidx96 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld95, i32 0, i64 0
  %rtvec97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtvec_def**
  %69 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec97, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %69, i32 0, i32 1
  %arrayidx98 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom94
  %70 = load %struct.rtx_def*, %struct.rtx_def** %i2dest.addr, align 8
  %71 = load %struct.rtx_def*, %struct.rtx_def** %i1dest.addr, align 8
  %72 = load i32, i32* %i1_not_in_src.addr, align 4
  %73 = load %struct.rtx_def**, %struct.rtx_def*** %pi3dest_killed.addr, align 8
  %call99 = call i32 @combinable_i3pat(%struct.rtx_def* %66, %struct.rtx_def** %arrayidx98, %struct.rtx_def* %70, %struct.rtx_def* %71, i32 %72, %struct.rtx_def** %73)
  %tobool100 = icmp ne i32 %call99, 0
  br i1 %tobool100, label %if.end.102, label %if.then.101

if.then.101:                                      ; preds = %for.body
  store i32 0, i32* %retval
  br label %return

if.end.102:                                       ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.102
  %74 = load i32, i32* %i, align 4
  %inc = add nsw i32 %74, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.103

if.end.103:                                       ; preds = %for.end, %if.else
  br label %if.end.104

if.end.104:                                       ; preds = %if.end.103, %if.end.86
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.104, %if.then.101, %if.then.84, %if.then.44
  %75 = load i32, i32* %retval
  ret i32 %75
}

declare i32 @dead_or_set_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @max_reg_num() #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @subst(%struct.rtx_def* %x, %struct.rtx_def* %from, %struct.rtx_def* %to, i32 %in_dest, i32 %unique_copy) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %from.addr = alloca %struct.rtx_def*, align 8
  %to.addr = alloca %struct.rtx_def*, align 8
  %in_dest.addr = alloca i32, align 4
  %unique_copy.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %op0_mode = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %new = alloca %struct.rtx_def*, align 8
  %dest = alloca %struct.rtx_def*, align 8
  %j = alloca i32, align 4
  %mode = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %from, %struct.rtx_def** %from.addr, align 8
  store %struct.rtx_def* %to, %struct.rtx_def** %to.addr, align 8
  store i32 %in_dest, i32* %in_dest.addr, align 4
  store i32 %unique_copy, i32* %unique_copy.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  store i32 0, i32* %op0_mode, align 4
  %2 = load i32, i32* %in_dest.addr, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %4 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8
  %cmp = icmp eq %struct.rtx_def* %3, %4
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load1 = load i32, i32* %6, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 61
  br i1 %cmp3, label %land.lhs.true.4, label %if.end

land.lhs.true.4:                                  ; preds = %lor.lhs.false
  %7 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load5 = load i32, i32* %8, align 8
  %bf.clear6 = and i32 %bf.load5, 65535
  %cmp7 = icmp eq i32 %bf.clear6, 61
  br i1 %cmp7, label %land.lhs.true.8, label %if.end

land.lhs.true.8:                                  ; preds = %land.lhs.true.4
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %10 = load i32, i32* %rtuint, align 4
  %11 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8
  %fld9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld9, i32 0, i64 0
  %rtuint11 = bitcast %union.rtunion_def* %arrayidx10 to i32*
  %12 = load i32, i32* %rtuint11, align 4
  %cmp12 = icmp eq i32 %10, %12
  br i1 %cmp12, label %land.lhs.true.13, label %if.end

land.lhs.true.13:                                 ; preds = %land.lhs.true.8
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load14 = load i32, i32* %14, align 8
  %bf.lshr = lshr i32 %bf.load14, 16
  %bf.clear15 = and i32 %bf.lshr, 255
  %15 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8
  %16 = bitcast %struct.rtx_def* %15 to i32*
  %bf.load16 = load i32, i32* %16, align 8
  %bf.lshr17 = lshr i32 %bf.load16, 16
  %bf.clear18 = and i32 %bf.lshr17, 255
  %cmp19 = icmp eq i32 %bf.clear15, %bf.clear18
  br i1 %cmp19, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.13, %land.lhs.true
  %17 = load i32, i32* @n_occurrences, align 4
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* @n_occurrences, align 4
  %18 = load i32, i32* %unique_copy.addr, align 4
  %tobool20 = icmp ne i32 %18, 0
  br i1 %tobool20, label %land.lhs.true.21, label %cond.false

land.lhs.true.21:                                 ; preds = %if.then
  %19 = load i32, i32* @n_occurrences, align 4
  %cmp22 = icmp sgt i32 %19, 1
  br i1 %cmp22, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.21
  %20 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %call = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %20)
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.21, %if.then
  %21 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %call, %cond.true ], [ %21, %cond.false ]
  store %struct.rtx_def* %cond, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true.13, %land.lhs.true.8, %land.lhs.true.4, %lor.lhs.false, %entry
  %22 = load i32, i32* %in_dest.addr, align 4
  %tobool23 = icmp ne i32 %22, 0
  br i1 %tobool23, label %if.end.43, label %land.lhs.true.24

land.lhs.true.24:                                 ; preds = %if.end
  %23 = load i32, i32* %code, align 4
  %cmp25 = icmp eq i32 %23, 61
  br i1 %cmp25, label %land.lhs.true.26, label %if.end.43

land.lhs.true.26:                                 ; preds = %land.lhs.true.24
  %24 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load27 = load i32, i32* %25, align 8
  %bf.clear28 = and i32 %bf.load27, 65535
  %cmp29 = icmp eq i32 %bf.clear28, 61
  br i1 %cmp29, label %land.lhs.true.30, label %if.end.43

land.lhs.true.30:                                 ; preds = %land.lhs.true.26
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i32 0, i64 0
  %rtuint33 = bitcast %union.rtunion_def* %arrayidx32 to i32*
  %27 = load i32, i32* %rtuint33, align 4
  %28 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8
  %fld34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i32 0, i64 0
  %rtuint36 = bitcast %union.rtunion_def* %arrayidx35 to i32*
  %29 = load i32, i32* %rtuint36, align 4
  %cmp37 = icmp eq i32 %27, %29
  br i1 %cmp37, label %if.then.38, label %if.end.43

if.then.38:                                       ; preds = %land.lhs.true.30
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load39 = load i32, i32* %31, align 8
  %bf.lshr40 = lshr i32 %bf.load39, 16
  %bf.clear41 = and i32 %bf.lshr40, 255
  %32 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %call42 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 %bf.clear41, %struct.rtx_def* %32)
  store %struct.rtx_def* %call42, %struct.rtx_def** %retval
  br label %return

if.end.43:                                        ; preds = %land.lhs.true.30, %land.lhs.true.26, %land.lhs.true.24, %if.end
  %33 = load i32, i32* %code, align 4
  %cmp44 = icmp ne i32 %33, 66
  br i1 %cmp44, label %land.lhs.true.45, label %if.end.52

land.lhs.true.45:                                 ; preds = %if.end.43
  %34 = load i32, i32* %code, align 4
  %cmp46 = icmp ne i32 %34, 135
  br i1 %cmp46, label %land.lhs.true.47, label %if.end.52

land.lhs.true.47:                                 ; preds = %land.lhs.true.45
  %35 = load i32, i32* %code, align 4
  %idxprom = sext i32 %35 to i64
  %arrayidx48 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %36 = load i8, i8* %arrayidx48, align 1
  %conv = sext i8 %36 to i32
  %cmp49 = icmp eq i32 %conv, 111
  br i1 %cmp49, label %if.then.51, label %if.end.52

if.then.51:                                       ; preds = %land.lhs.true.47
  %37 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %37, %struct.rtx_def** %retval
  br label %return

if.end.52:                                        ; preds = %land.lhs.true.47, %land.lhs.true.45, %if.end.43
  %38 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %39 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %cmp53 = icmp eq %struct.rtx_def* %38, %39
  br i1 %cmp53, label %if.then.83, label %lor.lhs.false.55

lor.lhs.false.55:                                 ; preds = %if.end.52
  %40 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load56 = load i32, i32* %41, align 8
  %bf.clear57 = and i32 %bf.load56, 65535
  %cmp58 = icmp eq i32 %bf.clear57, 61
  br i1 %cmp58, label %land.lhs.true.60, label %if.end.84

land.lhs.true.60:                                 ; preds = %lor.lhs.false.55
  %42 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %43 = bitcast %struct.rtx_def* %42 to i32*
  %bf.load61 = load i32, i32* %43, align 8
  %bf.clear62 = and i32 %bf.load61, 65535
  %cmp63 = icmp eq i32 %bf.clear62, 61
  br i1 %cmp63, label %land.lhs.true.65, label %if.end.84

land.lhs.true.65:                                 ; preds = %land.lhs.true.60
  %44 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1
  %arrayidx67 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld66, i32 0, i64 0
  %rtuint68 = bitcast %union.rtunion_def* %arrayidx67 to i32*
  %45 = load i32, i32* %rtuint68, align 4
  %46 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %fld69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld69, i32 0, i64 0
  %rtuint71 = bitcast %union.rtunion_def* %arrayidx70 to i32*
  %47 = load i32, i32* %rtuint71, align 4
  %cmp72 = icmp eq i32 %45, %47
  br i1 %cmp72, label %land.lhs.true.74, label %if.end.84

land.lhs.true.74:                                 ; preds = %land.lhs.true.65
  %48 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %49 = bitcast %struct.rtx_def* %48 to i32*
  %bf.load75 = load i32, i32* %49, align 8
  %bf.lshr76 = lshr i32 %bf.load75, 16
  %bf.clear77 = and i32 %bf.lshr76, 255
  %50 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %51 = bitcast %struct.rtx_def* %50 to i32*
  %bf.load78 = load i32, i32* %51, align 8
  %bf.lshr79 = lshr i32 %bf.load78, 16
  %bf.clear80 = and i32 %bf.lshr79, 255
  %cmp81 = icmp eq i32 %bf.clear77, %bf.clear80
  br i1 %cmp81, label %if.then.83, label %if.end.84

if.then.83:                                       ; preds = %land.lhs.true.74, %if.end.52
  %52 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  store %struct.rtx_def* %52, %struct.rtx_def** %retval
  br label %return

if.end.84:                                        ; preds = %land.lhs.true.74, %land.lhs.true.65, %land.lhs.true.60, %lor.lhs.false.55
  %53 = load i32, i32* %code, align 4
  %cmp85 = icmp eq i32 %53, 39
  br i1 %cmp85, label %land.lhs.true.87, label %if.else

land.lhs.true.87:                                 ; preds = %if.end.84
  %54 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1
  %arrayidx89 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld88, i32 0, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtvec_def**
  %55 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %55, i32 0, i32 1
  %arrayidx90 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 0
  %56 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx90, align 8
  %57 = bitcast %struct.rtx_def* %56 to i32*
  %bf.load91 = load i32, i32* %57, align 8
  %bf.clear92 = and i32 %bf.load91, 65535
  %cmp93 = icmp eq i32 %bf.clear92, 47
  br i1 %cmp93, label %land.lhs.true.95, label %if.else

land.lhs.true.95:                                 ; preds = %land.lhs.true.87
  %58 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1
  %arrayidx97 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld96, i32 0, i64 0
  %rtvec98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtvec_def**
  %59 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec98, align 8
  %elem99 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %59, i32 0, i32 1
  %arrayidx100 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem99, i32 0, i64 0
  %60 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx100, align 8
  %fld101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1
  %arrayidx102 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld101, i32 0, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtx_def**
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %62 = bitcast %struct.rtx_def* %61 to i32*
  %bf.load103 = load i32, i32* %62, align 8
  %bf.clear104 = and i32 %bf.load103, 65535
  %cmp105 = icmp eq i32 %bf.clear104, 41
  br i1 %cmp105, label %if.then.107, label %if.else

if.then.107:                                      ; preds = %land.lhs.true.95
  %63 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld108, i32 0, i64 0
  %rtvec110 = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtvec_def**
  %64 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec110, align 8
  %elem111 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %64, i32 0, i32 1
  %arrayidx112 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem111, i32 0, i64 0
  %65 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx112, align 8
  %66 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8
  %67 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %68 = load i32, i32* %unique_copy.addr, align 4
  %call113 = call %struct.rtx_def* @subst(%struct.rtx_def* %65, %struct.rtx_def* %66, %struct.rtx_def* %67, i32 0, i32 %68)
  store %struct.rtx_def* %call113, %struct.rtx_def** %new, align 8
  %69 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %70 = bitcast %struct.rtx_def* %69 to i32*
  %bf.load114 = load i32, i32* %70, align 8
  %bf.clear115 = and i32 %bf.load114, 65535
  %cmp116 = icmp eq i32 %bf.clear115, 49
  br i1 %cmp116, label %land.lhs.true.118, label %if.end.125

land.lhs.true.118:                                ; preds = %if.then.107
  %71 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %fld119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1
  %arrayidx120 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld119, i32 0, i64 0
  %rtx121 = bitcast %union.rtunion_def* %arrayidx120 to %struct.rtx_def**
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rtx121, align 8
  %73 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp122 = icmp eq %struct.rtx_def* %72, %73
  br i1 %cmp122, label %if.then.124, label %if.end.125

if.then.124:                                      ; preds = %land.lhs.true.118
  %74 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  store %struct.rtx_def* %74, %struct.rtx_def** %retval
  br label %return

if.end.125:                                       ; preds = %land.lhs.true.118, %if.then.107
  %75 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld126 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx127 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld126, i32 0, i64 0
  %rtvec128 = bitcast %union.rtunion_def* %arrayidx127 to %struct.rtvec_def**
  %76 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec128, align 8
  %elem129 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %76, i32 0, i32 1
  %arrayidx130 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem129, i32 0, i64 0
  %77 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  call void @do_SUBST(%struct.rtx_def** %arrayidx130, %struct.rtx_def* %77)
  %78 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld131 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx132 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld131, i32 0, i64 0
  %rtvec133 = bitcast %union.rtunion_def* %arrayidx132 to %struct.rtvec_def**
  %79 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec133, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %79, i32 0, i32 0
  %80 = load i32, i32* %num_elem, align 4
  %sub = sub nsw i32 %80, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.125
  %81 = load i32, i32* %i, align 4
  %cmp134 = icmp sge i32 %81, 1
  br i1 %cmp134, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %82 = load i32, i32* %i, align 4
  %idxprom136 = sext i32 %82 to i64
  %83 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx138 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld137, i32 0, i64 0
  %rtvec139 = bitcast %union.rtunion_def* %arrayidx138 to %struct.rtvec_def**
  %84 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec139, align 8
  %elem140 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %84, i32 0, i32 1
  %arrayidx141 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem140, i32 0, i64 %idxprom136
  %85 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx141, align 8
  %fld142 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1
  %arrayidx143 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld142, i32 0, i64 0
  %rtx144 = bitcast %union.rtunion_def* %arrayidx143 to %struct.rtx_def**
  %86 = load %struct.rtx_def*, %struct.rtx_def** %rtx144, align 8
  store %struct.rtx_def* %86, %struct.rtx_def** %dest, align 8
  %87 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %88 = bitcast %struct.rtx_def* %87 to i32*
  %bf.load145 = load i32, i32* %88, align 8
  %bf.clear146 = and i32 %bf.load145, 65535
  %cmp147 = icmp ne i32 %bf.clear146, 61
  br i1 %cmp147, label %land.lhs.true.149, label %if.end.182

land.lhs.true.149:                                ; preds = %for.body
  %89 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %90 = bitcast %struct.rtx_def* %89 to i32*
  %bf.load150 = load i32, i32* %90, align 8
  %bf.clear151 = and i32 %bf.load150, 65535
  %cmp152 = icmp ne i32 %bf.clear151, 69
  br i1 %cmp152, label %land.lhs.true.154, label %if.end.182

land.lhs.true.154:                                ; preds = %land.lhs.true.149
  %91 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %92 = bitcast %struct.rtx_def* %91 to i32*
  %bf.load155 = load i32, i32* %92, align 8
  %bf.clear156 = and i32 %bf.load155, 65535
  %cmp157 = icmp ne i32 %bf.clear156, 59
  br i1 %cmp157, label %if.then.159, label %if.end.182

if.then.159:                                      ; preds = %land.lhs.true.154
  %93 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %94 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8
  %95 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %96 = load i32, i32* %unique_copy.addr, align 4
  %call160 = call %struct.rtx_def* @subst(%struct.rtx_def* %93, %struct.rtx_def* %94, %struct.rtx_def* %95, i32 0, i32 %96)
  store %struct.rtx_def* %call160, %struct.rtx_def** %new, align 8
  %97 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %98 = bitcast %struct.rtx_def* %97 to i32*
  %bf.load161 = load i32, i32* %98, align 8
  %bf.clear162 = and i32 %bf.load161, 65535
  %cmp163 = icmp eq i32 %bf.clear162, 49
  br i1 %cmp163, label %land.lhs.true.165, label %if.end.172

land.lhs.true.165:                                ; preds = %if.then.159
  %99 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %fld166 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %99, i32 0, i32 1
  %arrayidx167 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld166, i32 0, i64 0
  %rtx168 = bitcast %union.rtunion_def* %arrayidx167 to %struct.rtx_def**
  %100 = load %struct.rtx_def*, %struct.rtx_def** %rtx168, align 8
  %101 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp169 = icmp eq %struct.rtx_def* %100, %101
  br i1 %cmp169, label %if.then.171, label %if.end.172

if.then.171:                                      ; preds = %land.lhs.true.165
  %102 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  store %struct.rtx_def* %102, %struct.rtx_def** %retval
  br label %return

if.end.172:                                       ; preds = %land.lhs.true.165, %if.then.159
  %103 = load i32, i32* %i, align 4
  %idxprom173 = sext i32 %103 to i64
  %104 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld174 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %104, i32 0, i32 1
  %arrayidx175 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld174, i32 0, i64 0
  %rtvec176 = bitcast %union.rtunion_def* %arrayidx175 to %struct.rtvec_def**
  %105 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec176, align 8
  %elem177 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %105, i32 0, i32 1
  %arrayidx178 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem177, i32 0, i64 %idxprom173
  %106 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx178, align 8
  %fld179 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %106, i32 0, i32 1
  %arrayidx180 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld179, i32 0, i64 0
  %rtx181 = bitcast %union.rtunion_def* %arrayidx180 to %struct.rtx_def**
  %107 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx181, %struct.rtx_def* %107)
  br label %if.end.182

if.end.182:                                       ; preds = %if.end.172, %land.lhs.true.154, %land.lhs.true.149, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.182
  %108 = load i32, i32* %i, align 4
  %dec = add nsw i32 %108, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.719

if.else:                                          ; preds = %land.lhs.true.95, %land.lhs.true.87, %if.end.84
  %109 = load i32, i32* %code, align 4
  %idxprom183 = sext i32 %109 to i64
  %arrayidx184 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom183
  %110 = load i8, i8* %arrayidx184, align 1
  %conv185 = zext i8 %110 to i32
  store i32 %conv185, i32* %len, align 4
  %111 = load i32, i32* %code, align 4
  %idxprom186 = sext i32 %111 to i64
  %arrayidx187 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom186
  %112 = load i8*, i8** %arrayidx187, align 8
  store i8* %112, i8** %fmt, align 8
  %113 = load i32, i32* %code, align 4
  %cmp188 = icmp eq i32 %113, 47
  br i1 %cmp188, label %land.lhs.true.190, label %if.end.215

land.lhs.true.190:                                ; preds = %if.else
  %114 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld191 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %114, i32 0, i32 1
  %arrayidx192 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld191, i32 0, i64 0
  %rtx193 = bitcast %union.rtunion_def* %arrayidx192 to %struct.rtx_def**
  %115 = load %struct.rtx_def*, %struct.rtx_def** %rtx193, align 8
  %116 = bitcast %struct.rtx_def* %115 to i32*
  %bf.load194 = load i32, i32* %116, align 8
  %bf.clear195 = and i32 %bf.load194, 65535
  %cmp196 = icmp eq i32 %bf.clear195, 61
  br i1 %cmp196, label %if.then.214, label %lor.lhs.false.198

lor.lhs.false.198:                                ; preds = %land.lhs.true.190
  %117 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld199 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %117, i32 0, i32 1
  %arrayidx200 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld199, i32 0, i64 0
  %rtx201 = bitcast %union.rtunion_def* %arrayidx200 to %struct.rtx_def**
  %118 = load %struct.rtx_def*, %struct.rtx_def** %rtx201, align 8
  %119 = bitcast %struct.rtx_def* %118 to i32*
  %bf.load202 = load i32, i32* %119, align 8
  %bf.clear203 = and i32 %bf.load202, 65535
  %cmp204 = icmp eq i32 %bf.clear203, 69
  br i1 %cmp204, label %if.then.214, label %lor.lhs.false.206

lor.lhs.false.206:                                ; preds = %lor.lhs.false.198
  %120 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld207 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1
  %arrayidx208 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld207, i32 0, i64 0
  %rtx209 = bitcast %union.rtunion_def* %arrayidx208 to %struct.rtx_def**
  %121 = load %struct.rtx_def*, %struct.rtx_def** %rtx209, align 8
  %122 = bitcast %struct.rtx_def* %121 to i32*
  %bf.load210 = load i32, i32* %122, align 8
  %bf.clear211 = and i32 %bf.load210, 65535
  %cmp212 = icmp eq i32 %bf.clear211, 59
  br i1 %cmp212, label %if.then.214, label %if.end.215

if.then.214:                                      ; preds = %lor.lhs.false.206, %lor.lhs.false.198, %land.lhs.true.190
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i8** %fmt, align 8
  br label %if.end.215

if.end.215:                                       ; preds = %if.then.214, %lor.lhs.false.206, %if.else
  %123 = load i8*, i8** %fmt, align 8
  %arrayidx216 = getelementptr inbounds i8, i8* %123, i64 0
  %124 = load i8, i8* %arrayidx216, align 1
  %conv217 = sext i8 %124 to i32
  %cmp218 = icmp eq i32 %conv217, 101
  br i1 %cmp218, label %if.then.220, label %if.end.227

if.then.220:                                      ; preds = %if.end.215
  %125 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld221 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %125, i32 0, i32 1
  %arrayidx222 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld221, i32 0, i64 0
  %rtx223 = bitcast %union.rtunion_def* %arrayidx222 to %struct.rtx_def**
  %126 = load %struct.rtx_def*, %struct.rtx_def** %rtx223, align 8
  %127 = bitcast %struct.rtx_def* %126 to i32*
  %bf.load224 = load i32, i32* %127, align 8
  %bf.lshr225 = lshr i32 %bf.load224, 16
  %bf.clear226 = and i32 %bf.lshr225, 255
  store i32 %bf.clear226, i32* %op0_mode, align 4
  br label %if.end.227

if.end.227:                                       ; preds = %if.then.220, %if.end.215
  store i32 0, i32* %i, align 4
  br label %for.cond.228

for.cond.228:                                     ; preds = %for.inc.716, %if.end.227
  %128 = load i32, i32* %i, align 4
  %129 = load i32, i32* %len, align 4
  %cmp229 = icmp slt i32 %128, %129
  br i1 %cmp229, label %for.body.231, label %for.end.718

for.body.231:                                     ; preds = %for.cond.228
  %130 = load i32, i32* %i, align 4
  %idxprom232 = sext i32 %130 to i64
  %131 = load i8*, i8** %fmt, align 8
  %arrayidx233 = getelementptr inbounds i8, i8* %131, i64 %idxprom232
  %132 = load i8, i8* %arrayidx233, align 1
  %conv234 = sext i8 %132 to i32
  %cmp235 = icmp eq i32 %conv234, 69
  br i1 %cmp235, label %if.then.237, label %if.else.348

if.then.237:                                      ; preds = %for.body.231
  %133 = load i32, i32* %i, align 4
  %idxprom238 = sext i32 %133 to i64
  %134 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld239 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %134, i32 0, i32 1
  %arrayidx240 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld239, i32 0, i64 %idxprom238
  %rtvec241 = bitcast %union.rtunion_def* %arrayidx240 to %struct.rtvec_def**
  %135 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec241, align 8
  %num_elem242 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %135, i32 0, i32 0
  %136 = load i32, i32* %num_elem242, align 4
  %sub243 = sub nsw i32 %136, 1
  store i32 %sub243, i32* %j, align 4
  br label %for.cond.244

for.cond.244:                                     ; preds = %for.inc.345, %if.then.237
  %137 = load i32, i32* %j, align 4
  %cmp245 = icmp sge i32 %137, 0
  br i1 %cmp245, label %for.body.247, label %for.end.347

for.body.247:                                     ; preds = %for.cond.244
  %138 = load i32, i32* %j, align 4
  %idxprom248 = sext i32 %138 to i64
  %139 = load i32, i32* %i, align 4
  %idxprom249 = sext i32 %139 to i64
  %140 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld250 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %140, i32 0, i32 1
  %arrayidx251 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld250, i32 0, i64 %idxprom249
  %rtvec252 = bitcast %union.rtunion_def* %arrayidx251 to %struct.rtvec_def**
  %141 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec252, align 8
  %elem253 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %141, i32 0, i32 1
  %arrayidx254 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem253, i32 0, i64 %idxprom248
  %142 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx254, align 8
  %143 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8
  %cmp255 = icmp eq %struct.rtx_def* %142, %143
  br i1 %cmp255, label %if.then.306, label %lor.lhs.false.257

lor.lhs.false.257:                                ; preds = %for.body.247
  %144 = load i32, i32* %j, align 4
  %idxprom258 = sext i32 %144 to i64
  %145 = load i32, i32* %i, align 4
  %idxprom259 = sext i32 %145 to i64
  %146 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld260 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %146, i32 0, i32 1
  %arrayidx261 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld260, i32 0, i64 %idxprom259
  %rtvec262 = bitcast %union.rtunion_def* %arrayidx261 to %struct.rtvec_def**
  %147 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec262, align 8
  %elem263 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %147, i32 0, i32 1
  %arrayidx264 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem263, i32 0, i64 %idxprom258
  %148 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx264, align 8
  %149 = bitcast %struct.rtx_def* %148 to i32*
  %bf.load265 = load i32, i32* %149, align 8
  %bf.clear266 = and i32 %bf.load265, 65535
  %cmp267 = icmp eq i32 %bf.clear266, 61
  br i1 %cmp267, label %land.lhs.true.269, label %if.else.316

land.lhs.true.269:                                ; preds = %lor.lhs.false.257
  %150 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8
  %151 = bitcast %struct.rtx_def* %150 to i32*
  %bf.load270 = load i32, i32* %151, align 8
  %bf.clear271 = and i32 %bf.load270, 65535
  %cmp272 = icmp eq i32 %bf.clear271, 61
  br i1 %cmp272, label %land.lhs.true.274, label %if.else.316

land.lhs.true.274:                                ; preds = %land.lhs.true.269
  %152 = load i32, i32* %j, align 4
  %idxprom275 = sext i32 %152 to i64
  %153 = load i32, i32* %i, align 4
  %idxprom276 = sext i32 %153 to i64
  %154 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld277 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %154, i32 0, i32 1
  %arrayidx278 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld277, i32 0, i64 %idxprom276
  %rtvec279 = bitcast %union.rtunion_def* %arrayidx278 to %struct.rtvec_def**
  %155 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec279, align 8
  %elem280 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %155, i32 0, i32 1
  %arrayidx281 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem280, i32 0, i64 %idxprom275
  %156 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx281, align 8
  %fld282 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %156, i32 0, i32 1
  %arrayidx283 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld282, i32 0, i64 0
  %rtuint284 = bitcast %union.rtunion_def* %arrayidx283 to i32*
  %157 = load i32, i32* %rtuint284, align 4
  %158 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8
  %fld285 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %158, i32 0, i32 1
  %arrayidx286 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld285, i32 0, i64 0
  %rtuint287 = bitcast %union.rtunion_def* %arrayidx286 to i32*
  %159 = load i32, i32* %rtuint287, align 4
  %cmp288 = icmp eq i32 %157, %159
  br i1 %cmp288, label %land.lhs.true.290, label %if.else.316

land.lhs.true.290:                                ; preds = %land.lhs.true.274
  %160 = load i32, i32* %j, align 4
  %idxprom291 = sext i32 %160 to i64
  %161 = load i32, i32* %i, align 4
  %idxprom292 = sext i32 %161 to i64
  %162 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld293 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %162, i32 0, i32 1
  %arrayidx294 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld293, i32 0, i64 %idxprom292
  %rtvec295 = bitcast %union.rtunion_def* %arrayidx294 to %struct.rtvec_def**
  %163 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec295, align 8
  %elem296 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %163, i32 0, i32 1
  %arrayidx297 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem296, i32 0, i64 %idxprom291
  %164 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx297, align 8
  %165 = bitcast %struct.rtx_def* %164 to i32*
  %bf.load298 = load i32, i32* %165, align 8
  %bf.lshr299 = lshr i32 %bf.load298, 16
  %bf.clear300 = and i32 %bf.lshr299, 255
  %166 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8
  %167 = bitcast %struct.rtx_def* %166 to i32*
  %bf.load301 = load i32, i32* %167, align 8
  %bf.lshr302 = lshr i32 %bf.load301, 16
  %bf.clear303 = and i32 %bf.lshr302, 255
  %cmp304 = icmp eq i32 %bf.clear300, %bf.clear303
  br i1 %cmp304, label %if.then.306, label %if.else.316

if.then.306:                                      ; preds = %land.lhs.true.290, %for.body.247
  %168 = load i32, i32* %unique_copy.addr, align 4
  %tobool307 = icmp ne i32 %168, 0
  br i1 %tobool307, label %land.lhs.true.308, label %cond.false.312

land.lhs.true.308:                                ; preds = %if.then.306
  %169 = load i32, i32* @n_occurrences, align 4
  %tobool309 = icmp ne i32 %169, 0
  br i1 %tobool309, label %cond.true.310, label %cond.false.312

cond.true.310:                                    ; preds = %land.lhs.true.308
  %170 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %call311 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %170)
  br label %cond.end.313

cond.false.312:                                   ; preds = %land.lhs.true.308, %if.then.306
  %171 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  br label %cond.end.313

cond.end.313:                                     ; preds = %cond.false.312, %cond.true.310
  %cond314 = phi %struct.rtx_def* [ %call311, %cond.true.310 ], [ %171, %cond.false.312 ]
  store %struct.rtx_def* %cond314, %struct.rtx_def** %new, align 8
  %172 = load i32, i32* @n_occurrences, align 4
  %inc315 = add nsw i32 %172, 1
  store i32 %inc315, i32* @n_occurrences, align 4
  br label %if.end.337

if.else.316:                                      ; preds = %land.lhs.true.290, %land.lhs.true.274, %land.lhs.true.269, %lor.lhs.false.257
  %173 = load i32, i32* %j, align 4
  %idxprom317 = sext i32 %173 to i64
  %174 = load i32, i32* %i, align 4
  %idxprom318 = sext i32 %174 to i64
  %175 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld319 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %175, i32 0, i32 1
  %arrayidx320 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld319, i32 0, i64 %idxprom318
  %rtvec321 = bitcast %union.rtunion_def* %arrayidx320 to %struct.rtvec_def**
  %176 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec321, align 8
  %elem322 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %176, i32 0, i32 1
  %arrayidx323 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem322, i32 0, i64 %idxprom317
  %177 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx323, align 8
  %178 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8
  %179 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %180 = load i32, i32* %unique_copy.addr, align 4
  %call324 = call %struct.rtx_def* @subst(%struct.rtx_def* %177, %struct.rtx_def* %178, %struct.rtx_def* %179, i32 0, i32 %180)
  store %struct.rtx_def* %call324, %struct.rtx_def** %new, align 8
  %181 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %182 = bitcast %struct.rtx_def* %181 to i32*
  %bf.load325 = load i32, i32* %182, align 8
  %bf.clear326 = and i32 %bf.load325, 65535
  %cmp327 = icmp eq i32 %bf.clear326, 49
  br i1 %cmp327, label %land.lhs.true.329, label %if.end.336

land.lhs.true.329:                                ; preds = %if.else.316
  %183 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %fld330 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %183, i32 0, i32 1
  %arrayidx331 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld330, i32 0, i64 0
  %rtx332 = bitcast %union.rtunion_def* %arrayidx331 to %struct.rtx_def**
  %184 = load %struct.rtx_def*, %struct.rtx_def** %rtx332, align 8
  %185 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp333 = icmp eq %struct.rtx_def* %184, %185
  br i1 %cmp333, label %if.then.335, label %if.end.336

if.then.335:                                      ; preds = %land.lhs.true.329
  %186 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  store %struct.rtx_def* %186, %struct.rtx_def** %retval
  br label %return

if.end.336:                                       ; preds = %land.lhs.true.329, %if.else.316
  br label %if.end.337

if.end.337:                                       ; preds = %if.end.336, %cond.end.313
  %187 = load i32, i32* %j, align 4
  %idxprom338 = sext i32 %187 to i64
  %188 = load i32, i32* %i, align 4
  %idxprom339 = sext i32 %188 to i64
  %189 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld340 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %189, i32 0, i32 1
  %arrayidx341 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld340, i32 0, i64 %idxprom339
  %rtvec342 = bitcast %union.rtunion_def* %arrayidx341 to %struct.rtvec_def**
  %190 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec342, align 8
  %elem343 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %190, i32 0, i32 1
  %arrayidx344 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem343, i32 0, i64 %idxprom338
  %191 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  call void @do_SUBST(%struct.rtx_def** %arrayidx344, %struct.rtx_def* %191)
  br label %for.inc.345

for.inc.345:                                      ; preds = %if.end.337
  %192 = load i32, i32* %j, align 4
  %dec346 = add nsw i32 %192, -1
  store i32 %dec346, i32* %j, align 4
  br label %for.cond.244

for.end.347:                                      ; preds = %for.cond.244
  br label %if.end.715

if.else.348:                                      ; preds = %for.body.231
  %193 = load i32, i32* %i, align 4
  %idxprom349 = sext i32 %193 to i64
  %194 = load i8*, i8** %fmt, align 8
  %arrayidx350 = getelementptr inbounds i8, i8* %194, i64 %idxprom349
  %195 = load i8, i8* %arrayidx350, align 1
  %conv351 = sext i8 %195 to i32
  %cmp352 = icmp eq i32 %conv351, 101
  br i1 %cmp352, label %if.then.354, label %if.end.714

if.then.354:                                      ; preds = %if.else.348
  %196 = load i32, i32* %i, align 4
  %idxprom355 = sext i32 %196 to i64
  %197 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld356 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %197, i32 0, i32 1
  %arrayidx357 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld356, i32 0, i64 %idxprom355
  %rtx358 = bitcast %union.rtunion_def* %arrayidx357 to %struct.rtx_def**
  %198 = load %struct.rtx_def*, %struct.rtx_def** %rtx358, align 8
  store %struct.rtx_def* %198, %struct.rtx_def** %new, align 8
  %199 = load i32, i32* %in_dest.addr, align 4
  %tobool359 = icmp ne i32 %199, 0
  br i1 %tobool359, label %land.lhs.true.360, label %if.else.378

land.lhs.true.360:                                ; preds = %if.then.354
  %200 = load i32, i32* %code, align 4
  %cmp361 = icmp eq i32 %200, 63
  br i1 %cmp361, label %land.lhs.true.369, label %lor.lhs.false.363

lor.lhs.false.363:                                ; preds = %land.lhs.true.360
  %201 = load i32, i32* %code, align 4
  %cmp364 = icmp eq i32 %201, 64
  br i1 %cmp364, label %land.lhs.true.369, label %lor.lhs.false.366

lor.lhs.false.366:                                ; preds = %lor.lhs.false.363
  %202 = load i32, i32* %code, align 4
  %cmp367 = icmp eq i32 %202, 133
  br i1 %cmp367, label %land.lhs.true.369, label %if.else.378

land.lhs.true.369:                                ; preds = %lor.lhs.false.366, %lor.lhs.false.363, %land.lhs.true.360
  %203 = load i32, i32* %i, align 4
  %cmp370 = icmp eq i32 %203, 0
  br i1 %cmp370, label %land.lhs.true.372, label %if.else.378

land.lhs.true.372:                                ; preds = %land.lhs.true.369
  %204 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %205 = bitcast %struct.rtx_def* %204 to i32*
  %bf.load373 = load i32, i32* %205, align 8
  %bf.clear374 = and i32 %bf.load373, 65535
  %cmp375 = icmp eq i32 %bf.clear374, 61
  br i1 %cmp375, label %if.then.377, label %if.else.378

if.then.377:                                      ; preds = %land.lhs.true.372
  br label %if.end.643

if.else.378:                                      ; preds = %land.lhs.true.372, %land.lhs.true.369, %lor.lhs.false.366, %if.then.354
  %206 = load i32, i32* %i, align 4
  %idxprom379 = sext i32 %206 to i64
  %207 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld380 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %207, i32 0, i32 1
  %arrayidx381 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld380, i32 0, i64 %idxprom379
  %rtx382 = bitcast %union.rtunion_def* %arrayidx381 to %struct.rtx_def**
  %208 = load %struct.rtx_def*, %struct.rtx_def** %rtx382, align 8
  %209 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8
  %cmp383 = icmp eq %struct.rtx_def* %208, %209
  br i1 %cmp383, label %if.then.425, label %lor.lhs.false.385

lor.lhs.false.385:                                ; preds = %if.else.378
  %210 = load i32, i32* %i, align 4
  %idxprom386 = sext i32 %210 to i64
  %211 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld387 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %211, i32 0, i32 1
  %arrayidx388 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld387, i32 0, i64 %idxprom386
  %rtx389 = bitcast %union.rtunion_def* %arrayidx388 to %struct.rtx_def**
  %212 = load %struct.rtx_def*, %struct.rtx_def** %rtx389, align 8
  %213 = bitcast %struct.rtx_def* %212 to i32*
  %bf.load390 = load i32, i32* %213, align 8
  %bf.clear391 = and i32 %bf.load390, 65535
  %cmp392 = icmp eq i32 %bf.clear391, 61
  br i1 %cmp392, label %land.lhs.true.394, label %if.else.621

land.lhs.true.394:                                ; preds = %lor.lhs.false.385
  %214 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8
  %215 = bitcast %struct.rtx_def* %214 to i32*
  %bf.load395 = load i32, i32* %215, align 8
  %bf.clear396 = and i32 %bf.load395, 65535
  %cmp397 = icmp eq i32 %bf.clear396, 61
  br i1 %cmp397, label %land.lhs.true.399, label %if.else.621

land.lhs.true.399:                                ; preds = %land.lhs.true.394
  %216 = load i32, i32* %i, align 4
  %idxprom400 = sext i32 %216 to i64
  %217 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld401 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %217, i32 0, i32 1
  %arrayidx402 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld401, i32 0, i64 %idxprom400
  %rtx403 = bitcast %union.rtunion_def* %arrayidx402 to %struct.rtx_def**
  %218 = load %struct.rtx_def*, %struct.rtx_def** %rtx403, align 8
  %fld404 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %218, i32 0, i32 1
  %arrayidx405 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld404, i32 0, i64 0
  %rtuint406 = bitcast %union.rtunion_def* %arrayidx405 to i32*
  %219 = load i32, i32* %rtuint406, align 4
  %220 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8
  %fld407 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %220, i32 0, i32 1
  %arrayidx408 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld407, i32 0, i64 0
  %rtuint409 = bitcast %union.rtunion_def* %arrayidx408 to i32*
  %221 = load i32, i32* %rtuint409, align 4
  %cmp410 = icmp eq i32 %219, %221
  br i1 %cmp410, label %land.lhs.true.412, label %if.else.621

land.lhs.true.412:                                ; preds = %land.lhs.true.399
  %222 = load i32, i32* %i, align 4
  %idxprom413 = sext i32 %222 to i64
  %223 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld414 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %223, i32 0, i32 1
  %arrayidx415 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld414, i32 0, i64 %idxprom413
  %rtx416 = bitcast %union.rtunion_def* %arrayidx415 to %struct.rtx_def**
  %224 = load %struct.rtx_def*, %struct.rtx_def** %rtx416, align 8
  %225 = bitcast %struct.rtx_def* %224 to i32*
  %bf.load417 = load i32, i32* %225, align 8
  %bf.lshr418 = lshr i32 %bf.load417, 16
  %bf.clear419 = and i32 %bf.lshr418, 255
  %226 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8
  %227 = bitcast %struct.rtx_def* %226 to i32*
  %bf.load420 = load i32, i32* %227, align 8
  %bf.lshr421 = lshr i32 %bf.load420, 16
  %bf.clear422 = and i32 %bf.lshr421, 255
  %cmp423 = icmp eq i32 %bf.clear419, %bf.clear422
  br i1 %cmp423, label %if.then.425, label %if.else.621

if.then.425:                                      ; preds = %land.lhs.true.412, %if.else.378
  %228 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %229 = bitcast %struct.rtx_def* %228 to i32*
  %bf.load426 = load i32, i32* %229, align 8
  %bf.clear427 = and i32 %bf.load426, 65535
  %cmp428 = icmp eq i32 %bf.clear427, 63
  br i1 %cmp428, label %land.lhs.true.430, label %if.end.611

land.lhs.true.430:                                ; preds = %if.then.425
  %230 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %231 = bitcast %struct.rtx_def* %230 to i32*
  %bf.load431 = load i32, i32* %231, align 8
  %bf.lshr432 = lshr i32 %bf.load431, 16
  %bf.clear433 = and i32 %bf.lshr432, 255
  %232 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %fld434 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %232, i32 0, i32 1
  %arrayidx435 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld434, i32 0, i64 0
  %rtx436 = bitcast %union.rtunion_def* %arrayidx435 to %struct.rtx_def**
  %233 = load %struct.rtx_def*, %struct.rtx_def** %rtx436, align 8
  %234 = bitcast %struct.rtx_def* %233 to i32*
  %bf.load437 = load i32, i32* %234, align 8
  %bf.lshr438 = lshr i32 %bf.load437, 16
  %bf.clear439 = and i32 %bf.lshr438, 255
  %cmp440 = icmp eq i32 %bf.clear433, %bf.clear439
  br i1 %cmp440, label %if.end.611, label %lor.lhs.false.442

lor.lhs.false.442:                                ; preds = %land.lhs.true.430
  %235 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %236 = bitcast %struct.rtx_def* %235 to i32*
  %bf.load443 = load i32, i32* %236, align 8
  %bf.lshr444 = lshr i32 %bf.load443, 16
  %bf.clear445 = and i32 %bf.lshr444, 255
  %cmp446 = icmp eq i32 %bf.clear445, 3
  br i1 %cmp446, label %land.lhs.true.474, label %lor.lhs.false.448

lor.lhs.false.448:                                ; preds = %lor.lhs.false.442
  %237 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %238 = bitcast %struct.rtx_def* %237 to i32*
  %bf.load449 = load i32, i32* %238, align 8
  %bf.lshr450 = lshr i32 %bf.load449, 16
  %bf.clear451 = and i32 %bf.lshr450, 255
  %cmp452 = icmp eq i32 %bf.clear451, 4
  br i1 %cmp452, label %land.lhs.true.474, label %lor.lhs.false.454

lor.lhs.false.454:                                ; preds = %lor.lhs.false.448
  %239 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %240 = bitcast %struct.rtx_def* %239 to i32*
  %bf.load455 = load i32, i32* %240, align 8
  %bf.lshr456 = lshr i32 %bf.load455, 16
  %bf.clear457 = and i32 %bf.lshr456, 255
  %cmp458 = icmp eq i32 %bf.clear457, 2
  br i1 %cmp458, label %land.lhs.true.460, label %lor.lhs.false.465

land.lhs.true.460:                                ; preds = %lor.lhs.false.454
  %241 = load i32, i32* @target_flags, align 4
  %and = and i32 %241, 33554432
  %tobool461 = icmp ne i32 %and, 0
  br i1 %tobool461, label %land.lhs.true.474, label %lor.lhs.false.462

lor.lhs.false.462:                                ; preds = %land.lhs.true.460
  %242 = load i32, i32* @x86_partial_reg_stall, align 4
  %243 = load i32, i32* @ix86_cpu, align 4
  %shl = shl i32 1, %243
  %and463 = and i32 %242, %shl
  %tobool464 = icmp ne i32 %and463, 0
  br i1 %tobool464, label %lor.lhs.false.465, label %land.lhs.true.474

lor.lhs.false.465:                                ; preds = %lor.lhs.false.462, %lor.lhs.false.454
  %244 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %245 = bitcast %struct.rtx_def* %244 to i32*
  %bf.load466 = load i32, i32* %245, align 8
  %bf.lshr467 = lshr i32 %bf.load466, 16
  %bf.clear468 = and i32 %bf.lshr467, 255
  %cmp469 = icmp eq i32 %bf.clear468, 5
  br i1 %cmp469, label %land.lhs.true.471, label %land.lhs.true.517

land.lhs.true.471:                                ; preds = %lor.lhs.false.465
  %246 = load i32, i32* @target_flags, align 4
  %and472 = and i32 %246, 33554432
  %tobool473 = icmp ne i32 %and472, 0
  br i1 %tobool473, label %land.lhs.true.474, label %land.lhs.true.517

land.lhs.true.474:                                ; preds = %land.lhs.true.471, %lor.lhs.false.462, %land.lhs.true.460, %lor.lhs.false.448, %lor.lhs.false.442
  %247 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %fld475 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %247, i32 0, i32 1
  %arrayidx476 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld475, i32 0, i64 0
  %rtx477 = bitcast %union.rtunion_def* %arrayidx476 to %struct.rtx_def**
  %248 = load %struct.rtx_def*, %struct.rtx_def** %rtx477, align 8
  %249 = bitcast %struct.rtx_def* %248 to i32*
  %bf.load478 = load i32, i32* %249, align 8
  %bf.lshr479 = lshr i32 %bf.load478, 16
  %bf.clear480 = and i32 %bf.lshr479, 255
  %cmp481 = icmp eq i32 %bf.clear480, 3
  br i1 %cmp481, label %if.end.611, label %lor.lhs.false.483

lor.lhs.false.483:                                ; preds = %land.lhs.true.474
  %250 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %fld484 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %250, i32 0, i32 1
  %arrayidx485 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld484, i32 0, i64 0
  %rtx486 = bitcast %union.rtunion_def* %arrayidx485 to %struct.rtx_def**
  %251 = load %struct.rtx_def*, %struct.rtx_def** %rtx486, align 8
  %252 = bitcast %struct.rtx_def* %251 to i32*
  %bf.load487 = load i32, i32* %252, align 8
  %bf.lshr488 = lshr i32 %bf.load487, 16
  %bf.clear489 = and i32 %bf.lshr488, 255
  %cmp490 = icmp eq i32 %bf.clear489, 4
  br i1 %cmp490, label %if.end.611, label %lor.lhs.false.492

lor.lhs.false.492:                                ; preds = %lor.lhs.false.483
  %253 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %254 = bitcast %struct.rtx_def* %253 to i32*
  %bf.load493 = load i32, i32* %254, align 8
  %bf.lshr494 = lshr i32 %bf.load493, 16
  %bf.clear495 = and i32 %bf.lshr494, 255
  %cmp496 = icmp eq i32 %bf.clear495, 2
  br i1 %cmp496, label %land.lhs.true.498, label %lor.lhs.false.505

land.lhs.true.498:                                ; preds = %lor.lhs.false.492
  %255 = load i32, i32* @target_flags, align 4
  %and499 = and i32 %255, 33554432
  %tobool500 = icmp ne i32 %and499, 0
  br i1 %tobool500, label %if.end.611, label %lor.lhs.false.501

lor.lhs.false.501:                                ; preds = %land.lhs.true.498
  %256 = load i32, i32* @x86_partial_reg_stall, align 4
  %257 = load i32, i32* @ix86_cpu, align 4
  %shl502 = shl i32 1, %257
  %and503 = and i32 %256, %shl502
  %tobool504 = icmp ne i32 %and503, 0
  br i1 %tobool504, label %lor.lhs.false.505, label %if.end.611

lor.lhs.false.505:                                ; preds = %lor.lhs.false.501, %lor.lhs.false.492
  %258 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %fld506 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %258, i32 0, i32 1
  %arrayidx507 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld506, i32 0, i64 0
  %rtx508 = bitcast %union.rtunion_def* %arrayidx507 to %struct.rtx_def**
  %259 = load %struct.rtx_def*, %struct.rtx_def** %rtx508, align 8
  %260 = bitcast %struct.rtx_def* %259 to i32*
  %bf.load509 = load i32, i32* %260, align 8
  %bf.lshr510 = lshr i32 %bf.load509, 16
  %bf.clear511 = and i32 %bf.lshr510, 255
  %cmp512 = icmp eq i32 %bf.clear511, 5
  br i1 %cmp512, label %land.lhs.true.514, label %land.lhs.true.517

land.lhs.true.514:                                ; preds = %lor.lhs.false.505
  %261 = load i32, i32* @target_flags, align 4
  %and515 = and i32 %261, 33554432
  %tobool516 = icmp ne i32 %and515, 0
  br i1 %tobool516, label %if.end.611, label %land.lhs.true.517

land.lhs.true.517:                                ; preds = %land.lhs.true.514, %lor.lhs.false.505, %land.lhs.true.471, %lor.lhs.false.465
  %262 = load i32, i32* %code, align 4
  %cmp518 = icmp eq i32 %262, 63
  br i1 %cmp518, label %land.lhs.true.520, label %if.then.609

land.lhs.true.520:                                ; preds = %land.lhs.true.517
  %263 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %264 = bitcast %struct.rtx_def* %263 to i32*
  %bf.load521 = load i32, i32* %264, align 8
  %bf.lshr522 = lshr i32 %bf.load521, 16
  %bf.clear523 = and i32 %bf.lshr522, 255
  %265 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %fld524 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %265, i32 0, i32 1
  %arrayidx525 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld524, i32 0, i64 0
  %rtx526 = bitcast %union.rtunion_def* %arrayidx525 to %struct.rtx_def**
  %266 = load %struct.rtx_def*, %struct.rtx_def** %rtx526, align 8
  %267 = bitcast %struct.rtx_def* %266 to i32*
  %bf.load527 = load i32, i32* %267, align 8
  %bf.lshr528 = lshr i32 %bf.load527, 16
  %bf.clear529 = and i32 %bf.lshr528, 255
  %cmp530 = icmp eq i32 %bf.clear523, %bf.clear529
  br i1 %cmp530, label %if.end.611, label %lor.lhs.false.532

lor.lhs.false.532:                                ; preds = %land.lhs.true.520
  %268 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %269 = bitcast %struct.rtx_def* %268 to i32*
  %bf.load533 = load i32, i32* %269, align 8
  %bf.lshr534 = lshr i32 %bf.load533, 16
  %bf.clear535 = and i32 %bf.lshr534, 255
  %cmp536 = icmp eq i32 %bf.clear535, 3
  br i1 %cmp536, label %land.lhs.true.566, label %lor.lhs.false.538

lor.lhs.false.538:                                ; preds = %lor.lhs.false.532
  %270 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %271 = bitcast %struct.rtx_def* %270 to i32*
  %bf.load539 = load i32, i32* %271, align 8
  %bf.lshr540 = lshr i32 %bf.load539, 16
  %bf.clear541 = and i32 %bf.lshr540, 255
  %cmp542 = icmp eq i32 %bf.clear541, 4
  br i1 %cmp542, label %land.lhs.true.566, label %lor.lhs.false.544

lor.lhs.false.544:                                ; preds = %lor.lhs.false.538
  %272 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %273 = bitcast %struct.rtx_def* %272 to i32*
  %bf.load545 = load i32, i32* %273, align 8
  %bf.lshr546 = lshr i32 %bf.load545, 16
  %bf.clear547 = and i32 %bf.lshr546, 255
  %cmp548 = icmp eq i32 %bf.clear547, 2
  br i1 %cmp548, label %land.lhs.true.550, label %lor.lhs.false.557

land.lhs.true.550:                                ; preds = %lor.lhs.false.544
  %274 = load i32, i32* @target_flags, align 4
  %and551 = and i32 %274, 33554432
  %tobool552 = icmp ne i32 %and551, 0
  br i1 %tobool552, label %land.lhs.true.566, label %lor.lhs.false.553

lor.lhs.false.553:                                ; preds = %land.lhs.true.550
  %275 = load i32, i32* @x86_partial_reg_stall, align 4
  %276 = load i32, i32* @ix86_cpu, align 4
  %shl554 = shl i32 1, %276
  %and555 = and i32 %275, %shl554
  %tobool556 = icmp ne i32 %and555, 0
  br i1 %tobool556, label %lor.lhs.false.557, label %land.lhs.true.566

lor.lhs.false.557:                                ; preds = %lor.lhs.false.553, %lor.lhs.false.544
  %277 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %278 = bitcast %struct.rtx_def* %277 to i32*
  %bf.load558 = load i32, i32* %278, align 8
  %bf.lshr559 = lshr i32 %bf.load558, 16
  %bf.clear560 = and i32 %bf.lshr559, 255
  %cmp561 = icmp eq i32 %bf.clear560, 5
  br i1 %cmp561, label %land.lhs.true.563, label %if.then.609

land.lhs.true.563:                                ; preds = %lor.lhs.false.557
  %279 = load i32, i32* @target_flags, align 4
  %and564 = and i32 %279, 33554432
  %tobool565 = icmp ne i32 %and564, 0
  br i1 %tobool565, label %land.lhs.true.566, label %if.then.609

land.lhs.true.566:                                ; preds = %land.lhs.true.563, %lor.lhs.false.553, %land.lhs.true.550, %lor.lhs.false.538, %lor.lhs.false.532
  %280 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %fld567 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %280, i32 0, i32 1
  %arrayidx568 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld567, i32 0, i64 0
  %rtx569 = bitcast %union.rtunion_def* %arrayidx568 to %struct.rtx_def**
  %281 = load %struct.rtx_def*, %struct.rtx_def** %rtx569, align 8
  %282 = bitcast %struct.rtx_def* %281 to i32*
  %bf.load570 = load i32, i32* %282, align 8
  %bf.lshr571 = lshr i32 %bf.load570, 16
  %bf.clear572 = and i32 %bf.lshr571, 255
  %cmp573 = icmp eq i32 %bf.clear572, 3
  br i1 %cmp573, label %if.end.611, label %lor.lhs.false.575

lor.lhs.false.575:                                ; preds = %land.lhs.true.566
  %283 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %fld576 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %283, i32 0, i32 1
  %arrayidx577 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld576, i32 0, i64 0
  %rtx578 = bitcast %union.rtunion_def* %arrayidx577 to %struct.rtx_def**
  %284 = load %struct.rtx_def*, %struct.rtx_def** %rtx578, align 8
  %285 = bitcast %struct.rtx_def* %284 to i32*
  %bf.load579 = load i32, i32* %285, align 8
  %bf.lshr580 = lshr i32 %bf.load579, 16
  %bf.clear581 = and i32 %bf.lshr580, 255
  %cmp582 = icmp eq i32 %bf.clear581, 4
  br i1 %cmp582, label %if.end.611, label %lor.lhs.false.584

lor.lhs.false.584:                                ; preds = %lor.lhs.false.575
  %286 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %287 = bitcast %struct.rtx_def* %286 to i32*
  %bf.load585 = load i32, i32* %287, align 8
  %bf.lshr586 = lshr i32 %bf.load585, 16
  %bf.clear587 = and i32 %bf.lshr586, 255
  %cmp588 = icmp eq i32 %bf.clear587, 2
  br i1 %cmp588, label %land.lhs.true.590, label %lor.lhs.false.597

land.lhs.true.590:                                ; preds = %lor.lhs.false.584
  %288 = load i32, i32* @target_flags, align 4
  %and591 = and i32 %288, 33554432
  %tobool592 = icmp ne i32 %and591, 0
  br i1 %tobool592, label %if.end.611, label %lor.lhs.false.593

lor.lhs.false.593:                                ; preds = %land.lhs.true.590
  %289 = load i32, i32* @x86_partial_reg_stall, align 4
  %290 = load i32, i32* @ix86_cpu, align 4
  %shl594 = shl i32 1, %290
  %and595 = and i32 %289, %shl594
  %tobool596 = icmp ne i32 %and595, 0
  br i1 %tobool596, label %lor.lhs.false.597, label %if.end.611

lor.lhs.false.597:                                ; preds = %lor.lhs.false.593, %lor.lhs.false.584
  %291 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %fld598 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %291, i32 0, i32 1
  %arrayidx599 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld598, i32 0, i64 0
  %rtx600 = bitcast %union.rtunion_def* %arrayidx599 to %struct.rtx_def**
  %292 = load %struct.rtx_def*, %struct.rtx_def** %rtx600, align 8
  %293 = bitcast %struct.rtx_def* %292 to i32*
  %bf.load601 = load i32, i32* %293, align 8
  %bf.lshr602 = lshr i32 %bf.load601, 16
  %bf.clear603 = and i32 %bf.lshr602, 255
  %cmp604 = icmp eq i32 %bf.clear603, 5
  br i1 %cmp604, label %land.lhs.true.606, label %if.then.609

land.lhs.true.606:                                ; preds = %lor.lhs.false.597
  %294 = load i32, i32* @target_flags, align 4
  %and607 = and i32 %294, 33554432
  %tobool608 = icmp ne i32 %and607, 0
  br i1 %tobool608, label %if.end.611, label %if.then.609

if.then.609:                                      ; preds = %land.lhs.true.606, %lor.lhs.false.597, %land.lhs.true.563, %lor.lhs.false.557, %land.lhs.true.517
  %295 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %call610 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %295)
  store %struct.rtx_def* %call610, %struct.rtx_def** %retval
  br label %return

if.end.611:                                       ; preds = %land.lhs.true.606, %lor.lhs.false.593, %land.lhs.true.590, %lor.lhs.false.575, %land.lhs.true.566, %land.lhs.true.520, %land.lhs.true.514, %lor.lhs.false.501, %land.lhs.true.498, %lor.lhs.false.483, %land.lhs.true.474, %land.lhs.true.430, %if.then.425
  %296 = load i32, i32* %unique_copy.addr, align 4
  %tobool612 = icmp ne i32 %296, 0
  br i1 %tobool612, label %land.lhs.true.613, label %cond.false.617

land.lhs.true.613:                                ; preds = %if.end.611
  %297 = load i32, i32* @n_occurrences, align 4
  %tobool614 = icmp ne i32 %297, 0
  br i1 %tobool614, label %cond.true.615, label %cond.false.617

cond.true.615:                                    ; preds = %land.lhs.true.613
  %298 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %call616 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %298)
  br label %cond.end.618

cond.false.617:                                   ; preds = %land.lhs.true.613, %if.end.611
  %299 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  br label %cond.end.618

cond.end.618:                                     ; preds = %cond.false.617, %cond.true.615
  %cond619 = phi %struct.rtx_def* [ %call616, %cond.true.615 ], [ %299, %cond.false.617 ]
  store %struct.rtx_def* %cond619, %struct.rtx_def** %new, align 8
  %300 = load i32, i32* @n_occurrences, align 4
  %inc620 = add nsw i32 %300, 1
  store i32 %inc620, i32* @n_occurrences, align 4
  br label %if.end.642

if.else.621:                                      ; preds = %land.lhs.true.412, %land.lhs.true.399, %land.lhs.true.394, %lor.lhs.false.385
  %301 = load i32, i32* %i, align 4
  %idxprom622 = sext i32 %301 to i64
  %302 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld623 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %302, i32 0, i32 1
  %arrayidx624 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld623, i32 0, i64 %idxprom622
  %rtx625 = bitcast %union.rtunion_def* %arrayidx624 to %struct.rtx_def**
  %303 = load %struct.rtx_def*, %struct.rtx_def** %rtx625, align 8
  %304 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8
  %305 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %306 = load i32, i32* %in_dest.addr, align 4
  %tobool626 = icmp ne i32 %306, 0
  br i1 %tobool626, label %land.lhs.true.627, label %lor.lhs.false.636

land.lhs.true.627:                                ; preds = %if.else.621
  %307 = load i32, i32* %code, align 4
  %cmp628 = icmp eq i32 %307, 63
  br i1 %cmp628, label %land.rhs, label %lor.lhs.false.630

lor.lhs.false.630:                                ; preds = %land.lhs.true.627
  %308 = load i32, i32* %code, align 4
  %cmp631 = icmp eq i32 %308, 64
  br i1 %cmp631, label %land.rhs, label %lor.lhs.false.633

lor.lhs.false.633:                                ; preds = %lor.lhs.false.630
  %309 = load i32, i32* %code, align 4
  %cmp634 = icmp eq i32 %309, 133
  br i1 %cmp634, label %land.rhs, label %lor.lhs.false.636

lor.lhs.false.636:                                ; preds = %lor.lhs.false.633, %if.else.621
  %310 = load i32, i32* %code, align 4
  %cmp637 = icmp eq i32 %310, 47
  br i1 %cmp637, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.lhs.false.636, %lor.lhs.false.633, %lor.lhs.false.630, %land.lhs.true.627
  %311 = load i32, i32* %i, align 4
  %cmp639 = icmp eq i32 %311, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false.636
  %312 = phi i1 [ false, %lor.lhs.false.636 ], [ %cmp639, %land.rhs ]
  %land.ext = zext i1 %312 to i32
  %313 = load i32, i32* %unique_copy.addr, align 4
  %call641 = call %struct.rtx_def* @subst(%struct.rtx_def* %303, %struct.rtx_def* %304, %struct.rtx_def* %305, i32 %land.ext, i32 %313)
  store %struct.rtx_def* %call641, %struct.rtx_def** %new, align 8
  br label %if.end.642

if.end.642:                                       ; preds = %land.end, %cond.end.618
  br label %if.end.643

if.end.643:                                       ; preds = %if.end.642, %if.then.377
  %314 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %315 = bitcast %struct.rtx_def* %314 to i32*
  %bf.load644 = load i32, i32* %315, align 8
  %bf.clear645 = and i32 %bf.load644, 65535
  %cmp646 = icmp eq i32 %bf.clear645, 49
  br i1 %cmp646, label %land.lhs.true.648, label %if.end.655

land.lhs.true.648:                                ; preds = %if.end.643
  %316 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %fld649 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %316, i32 0, i32 1
  %arrayidx650 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld649, i32 0, i64 0
  %rtx651 = bitcast %union.rtunion_def* %arrayidx650 to %struct.rtx_def**
  %317 = load %struct.rtx_def*, %struct.rtx_def** %rtx651, align 8
  %318 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp652 = icmp eq %struct.rtx_def* %317, %318
  br i1 %cmp652, label %if.then.654, label %if.end.655

if.then.654:                                      ; preds = %land.lhs.true.648
  %319 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  store %struct.rtx_def* %319, %struct.rtx_def** %retval
  br label %return

if.end.655:                                       ; preds = %land.lhs.true.648, %if.end.643
  %320 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %321 = bitcast %struct.rtx_def* %320 to i32*
  %bf.load656 = load i32, i32* %321, align 8
  %bf.clear657 = and i32 %bf.load656, 65535
  %cmp658 = icmp eq i32 %bf.clear657, 54
  br i1 %cmp658, label %land.lhs.true.660, label %if.else.683

land.lhs.true.660:                                ; preds = %if.end.655
  %322 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %323 = bitcast %struct.rtx_def* %322 to i32*
  %bf.load661 = load i32, i32* %323, align 8
  %bf.clear662 = and i32 %bf.load661, 65535
  %cmp663 = icmp eq i32 %bf.clear662, 63
  br i1 %cmp663, label %if.then.665, label %if.else.683

if.then.665:                                      ; preds = %land.lhs.true.660
  %324 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %325 = bitcast %struct.rtx_def* %324 to i32*
  %bf.load666 = load i32, i32* %325, align 8
  %bf.lshr667 = lshr i32 %bf.load666, 16
  %bf.clear668 = and i32 %bf.lshr667, 255
  store i32 %bf.clear668, i32* %mode, align 4
  %326 = load i32, i32* %mode, align 4
  %327 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %328 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld669 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %328, i32 0, i32 1
  %arrayidx670 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld669, i32 0, i64 0
  %rtx671 = bitcast %union.rtunion_def* %arrayidx670 to %struct.rtx_def**
  %329 = load %struct.rtx_def*, %struct.rtx_def** %rtx671, align 8
  %330 = bitcast %struct.rtx_def* %329 to i32*
  %bf.load672 = load i32, i32* %330, align 8
  %bf.lshr673 = lshr i32 %bf.load672, 16
  %bf.clear674 = and i32 %bf.lshr673, 255
  %331 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld675 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %331, i32 0, i32 1
  %arrayidx676 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld675, i32 0, i64 1
  %rtuint677 = bitcast %union.rtunion_def* %arrayidx676 to i32*
  %332 = load i32, i32* %rtuint677, align 4
  %call678 = call %struct.rtx_def* @simplify_subreg(i32 %326, %struct.rtx_def* %327, i32 %bf.clear674, i32 %332)
  store %struct.rtx_def* %call678, %struct.rtx_def** %x.addr, align 8
  %333 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %tobool679 = icmp ne %struct.rtx_def* %333, null
  br i1 %tobool679, label %if.end.682, label %if.then.680

if.then.680:                                      ; preds = %if.then.665
  %334 = load i32, i32* %mode, align 4
  %335 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %call681 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 %334, %struct.rtx_def* %335)
  store %struct.rtx_def* %call681, %struct.rtx_def** %x.addr, align 8
  br label %if.end.682

if.end.682:                                       ; preds = %if.then.680, %if.then.665
  br label %if.end.713

if.else.683:                                      ; preds = %land.lhs.true.660, %if.end.655
  %336 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %337 = bitcast %struct.rtx_def* %336 to i32*
  %bf.load684 = load i32, i32* %337, align 8
  %bf.clear685 = and i32 %bf.load684, 65535
  %cmp686 = icmp eq i32 %bf.clear685, 54
  br i1 %cmp686, label %land.lhs.true.688, label %if.else.707

land.lhs.true.688:                                ; preds = %if.else.683
  %338 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %339 = bitcast %struct.rtx_def* %338 to i32*
  %bf.load689 = load i32, i32* %339, align 8
  %bf.clear690 = and i32 %bf.load689, 65535
  %cmp691 = icmp eq i32 %bf.clear690, 121
  br i1 %cmp691, label %if.then.693, label %if.else.707

if.then.693:                                      ; preds = %land.lhs.true.688
  %340 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %341 = bitcast %struct.rtx_def* %340 to i32*
  %bf.load694 = load i32, i32* %341, align 8
  %bf.lshr695 = lshr i32 %bf.load694, 16
  %bf.clear696 = and i32 %bf.lshr695, 255
  %342 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %343 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld697 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %343, i32 0, i32 1
  %arrayidx698 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld697, i32 0, i64 0
  %rtx699 = bitcast %union.rtunion_def* %arrayidx698 to %struct.rtx_def**
  %344 = load %struct.rtx_def*, %struct.rtx_def** %rtx699, align 8
  %345 = bitcast %struct.rtx_def* %344 to i32*
  %bf.load700 = load i32, i32* %345, align 8
  %bf.lshr701 = lshr i32 %bf.load700, 16
  %bf.clear702 = and i32 %bf.lshr701, 255
  %call703 = call %struct.rtx_def* @simplify_unary_operation(i32 121, i32 %bf.clear696, %struct.rtx_def* %342, i32 %bf.clear702)
  store %struct.rtx_def* %call703, %struct.rtx_def** %x.addr, align 8
  %346 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %tobool704 = icmp ne %struct.rtx_def* %346, null
  br i1 %tobool704, label %if.end.706, label %if.then.705

if.then.705:                                      ; preds = %if.then.693
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3556, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__FUNCTION__.subst, i32 0, i32 0)) #5
  unreachable

if.end.706:                                       ; preds = %if.then.693
  br label %if.end.712

if.else.707:                                      ; preds = %land.lhs.true.688, %if.else.683
  %347 = load i32, i32* %i, align 4
  %idxprom708 = sext i32 %347 to i64
  %348 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld709 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %348, i32 0, i32 1
  %arrayidx710 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld709, i32 0, i64 %idxprom708
  %rtx711 = bitcast %union.rtunion_def* %arrayidx710 to %struct.rtx_def**
  %349 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx711, %struct.rtx_def* %349)
  br label %if.end.712

if.end.712:                                       ; preds = %if.else.707, %if.end.706
  br label %if.end.713

if.end.713:                                       ; preds = %if.end.712, %if.end.682
  br label %if.end.714

if.end.714:                                       ; preds = %if.end.713, %if.else.348
  br label %if.end.715

if.end.715:                                       ; preds = %if.end.714, %for.end.347
  br label %for.inc.716

for.inc.716:                                      ; preds = %if.end.715
  %350 = load i32, i32* %i, align 4
  %inc717 = add nsw i32 %350, 1
  store i32 %inc717, i32* %i, align 4
  br label %for.cond.228

for.end.718:                                      ; preds = %for.cond.228
  br label %if.end.719

if.end.719:                                       ; preds = %for.end.718, %for.end
  store i32 0, i32* %i, align 4
  br label %for.cond.720

for.cond.720:                                     ; preds = %for.inc.745, %if.end.719
  %351 = load i32, i32* %i, align 4
  %cmp721 = icmp slt i32 %351, 4
  br i1 %cmp721, label %for.body.723, label %for.end.747

for.body.723:                                     ; preds = %for.cond.720
  %352 = load i32, i32* %code, align 4
  %cmp724 = icmp ne i32 %352, 54
  br i1 %cmp724, label %land.lhs.true.726, label %if.end.736

land.lhs.true.726:                                ; preds = %for.body.723
  %353 = load i32, i32* %code, align 4
  %cmp727 = icmp ne i32 %353, 61
  br i1 %cmp727, label %land.lhs.true.729, label %if.end.736

land.lhs.true.729:                                ; preds = %land.lhs.true.726
  %354 = load i32, i32* %code, align 4
  %cmp730 = icmp ne i32 %354, 49
  br i1 %cmp730, label %if.then.732, label %if.end.736

if.then.732:                                      ; preds = %land.lhs.true.729
  %355 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %356 = load i32, i32* %op0_mode, align 4
  %357 = load i32, i32* %i, align 4
  %cmp733 = icmp eq i32 %357, 3
  %conv734 = zext i1 %cmp733 to i32
  %358 = load i32, i32* %in_dest.addr, align 4
  %call735 = call %struct.rtx_def* @combine_simplify_rtx(%struct.rtx_def* %355, i32 %356, i32 %conv734, i32 %358)
  store %struct.rtx_def* %call735, %struct.rtx_def** %x.addr, align 8
  br label %if.end.736

if.end.736:                                       ; preds = %if.then.732, %land.lhs.true.729, %land.lhs.true.726, %for.body.723
  %359 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %360 = bitcast %struct.rtx_def* %359 to i32*
  %bf.load737 = load i32, i32* %360, align 8
  %bf.clear738 = and i32 %bf.load737, 65535
  %361 = load i32, i32* %code, align 4
  %cmp739 = icmp eq i32 %bf.clear738, %361
  br i1 %cmp739, label %if.then.741, label %if.end.742

if.then.741:                                      ; preds = %if.end.736
  br label %for.end.747

if.end.742:                                       ; preds = %if.end.736
  %362 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %363 = bitcast %struct.rtx_def* %362 to i32*
  %bf.load743 = load i32, i32* %363, align 8
  %bf.clear744 = and i32 %bf.load743, 65535
  store i32 %bf.clear744, i32* %code, align 4
  store i32 0, i32* %op0_mode, align 4
  br label %for.inc.745

for.inc.745:                                      ; preds = %if.end.742
  %364 = load i32, i32* %i, align 4
  %inc746 = add nsw i32 %364, 1
  store i32 %inc746, i32* %i, align 4
  br label %for.cond.720

for.end.747:                                      ; preds = %if.then.741, %for.cond.720
  %365 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %365, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %for.end.747, %if.then.654, %if.then.609, %if.then.335, %if.then.171, %if.then.124, %if.then.83, %if.then.51, %if.then.38, %cond.end
  %366 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %366
}

declare %struct.rtx_def** @find_single_use(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def**) #1

declare i32 @ix86_cc_mode(i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_REG(i32, i32) #1

declare %struct.rtx_def* @gen_rtx_fmt_E(i32, i32, %struct.rtvec_def*) #1

declare %struct.rtvec_def* @rtvec_alloc(i32) #1

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #3

; Function Attrs: nounwind uwtable
define internal void @mark_used_regs_combine(%struct.rtx_def* %x) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %regno = alloca i32, align 4
  %i = alloca i32, align 4
  %endregno = alloca i32, align 4
  %r = alloca i32, align 4
  %testreg = alloca %struct.rtx_def*, align 8
  %fmt = alloca i8*, align 8
  %j = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %2 = load i32, i32* %code, align 4
  switch i32 %2, label %sw.default [
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 54, label %sw.bb
    i32 58, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 59, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 40, label %sw.bb
    i32 49, label %sw.bb.1
    i32 61, label %sw.bb.10
    i32 47, label %sw.bb.101
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %for.end.185

sw.bb.1:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load2 = load i32, i32* %5, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  %cmp = icmp eq i32 %bf.clear3, 66
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb.1
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i32 0, i64 0
  %rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtx6, align 8
  %fld7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i32 0, i64 0
  %rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rtx9, align 8
  call void @mark_used_regs_combine(%struct.rtx_def* %8)
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.bb.1
  br label %for.end.185

sw.bb.10:                                         ; preds = %entry
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx12 to i32*
  %10 = load i32, i32* %rtuint, align 4
  store i32 %10, i32* %regno, align 4
  %11 = load i32, i32* %regno, align 4
  %cmp13 = icmp ult i32 %11, 53
  br i1 %cmp13, label %if.then.14, label %if.end.100

if.then.14:                                       ; preds = %sw.bb.10
  %12 = load i32, i32* %regno, align 4
  %cmp15 = icmp eq i32 %12, 7
  br i1 %cmp15, label %if.then.23, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.14
  %13 = load i32, i32* %regno, align 4
  %cmp16 = icmp eq i32 %13, 6
  br i1 %cmp16, label %if.then.23, label %lor.lhs.false.17

lor.lhs.false.17:                                 ; preds = %lor.lhs.false
  %14 = load i32, i32* %regno, align 4
  %cmp18 = icmp eq i32 %14, 16
  br i1 %cmp18, label %land.lhs.true, label %lor.lhs.false.20

land.lhs.true:                                    ; preds = %lor.lhs.false.17
  %15 = load i32, i32* %regno, align 4
  %idxprom = zext i32 %15 to i64
  %arrayidx19 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 %idxprom
  %16 = load i8, i8* %arrayidx19, align 1
  %conv = sext i8 %16 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %if.then.23, label %lor.lhs.false.20

lor.lhs.false.20:                                 ; preds = %land.lhs.true, %lor.lhs.false.17
  %17 = load i32, i32* %regno, align 4
  %cmp21 = icmp eq i32 %17, 20
  br i1 %cmp21, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %lor.lhs.false.20, %land.lhs.true, %lor.lhs.false, %if.then.14
  br label %for.end.185

if.end.24:                                        ; preds = %lor.lhs.false.20
  %18 = load i32, i32* %regno, align 4
  %19 = load i32, i32* %regno, align 4
  %cmp25 = icmp uge i32 %19, 8
  br i1 %cmp25, label %land.lhs.true.27, label %lor.lhs.false.30

land.lhs.true.27:                                 ; preds = %if.end.24
  %20 = load i32, i32* %regno, align 4
  %cmp28 = icmp ule i32 %20, 15
  br i1 %cmp28, label %cond.true, label %lor.lhs.false.30

lor.lhs.false.30:                                 ; preds = %land.lhs.true.27, %if.end.24
  %21 = load i32, i32* %regno, align 4
  %cmp31 = icmp uge i32 %21, 21
  br i1 %cmp31, label %land.lhs.true.33, label %lor.lhs.false.36

land.lhs.true.33:                                 ; preds = %lor.lhs.false.30
  %22 = load i32, i32* %regno, align 4
  %cmp34 = icmp ule i32 %22, 28
  br i1 %cmp34, label %cond.true, label %lor.lhs.false.36

lor.lhs.false.36:                                 ; preds = %land.lhs.true.33, %lor.lhs.false.30
  %23 = load i32, i32* %regno, align 4
  %cmp37 = icmp uge i32 %23, 45
  br i1 %cmp37, label %land.lhs.true.39, label %lor.lhs.false.42

land.lhs.true.39:                                 ; preds = %lor.lhs.false.36
  %24 = load i32, i32* %regno, align 4
  %cmp40 = icmp ule i32 %24, 52
  br i1 %cmp40, label %cond.true, label %lor.lhs.false.42

lor.lhs.false.42:                                 ; preds = %land.lhs.true.39, %lor.lhs.false.36
  %25 = load i32, i32* %regno, align 4
  %cmp43 = icmp uge i32 %25, 29
  br i1 %cmp43, label %land.lhs.true.45, label %cond.false

land.lhs.true.45:                                 ; preds = %lor.lhs.false.42
  %26 = load i32, i32* %regno, align 4
  %cmp46 = icmp ule i32 %26, 36
  br i1 %cmp46, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.45, %land.lhs.true.39, %land.lhs.true.33, %land.lhs.true.27
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load48 = load i32, i32* %28, align 8
  %bf.lshr = lshr i32 %bf.load48, 16
  %bf.clear49 = and i32 %bf.lshr, 255
  %idxprom50 = sext i32 %bf.clear49 to i64
  %arrayidx51 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom50
  %29 = load i32, i32* %arrayidx51, align 4
  %cmp52 = icmp eq i32 %29, 5
  br i1 %cmp52, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load54 = load i32, i32* %31, align 8
  %bf.lshr55 = lshr i32 %bf.load54, 16
  %bf.clear56 = and i32 %bf.lshr55, 255
  %idxprom57 = sext i32 %bf.clear56 to i64
  %arrayidx58 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom57
  %32 = load i32, i32* %arrayidx58, align 4
  %cmp59 = icmp eq i32 %32, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %33 = phi i1 [ true, %cond.true ], [ %cmp59, %lor.rhs ]
  %cond = select i1 %33, i32 2, i32 1
  br label %cond.end.95

cond.false:                                       ; preds = %land.lhs.true.45, %lor.lhs.false.42
  %34 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %35 = bitcast %struct.rtx_def* %34 to i32*
  %bf.load61 = load i32, i32* %35, align 8
  %bf.lshr62 = lshr i32 %bf.load61, 16
  %bf.clear63 = and i32 %bf.lshr62, 255
  %cmp64 = icmp eq i32 %bf.clear63, 18
  br i1 %cmp64, label %cond.true.66, label %cond.false.69

cond.true.66:                                     ; preds = %cond.false
  %36 = load i32, i32* @target_flags, align 4
  %and = and i32 %36, 33554432
  %tobool67 = icmp ne i32 %and, 0
  %cond68 = select i1 %tobool67, i32 2, i32 3
  br label %cond.end.93

cond.false.69:                                    ; preds = %cond.false
  %37 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load70 = load i32, i32* %38, align 8
  %bf.lshr71 = lshr i32 %bf.load70, 16
  %bf.clear72 = and i32 %bf.lshr71, 255
  %cmp73 = icmp eq i32 %bf.clear72, 24
  br i1 %cmp73, label %cond.true.75, label %cond.false.79

cond.true.75:                                     ; preds = %cond.false.69
  %39 = load i32, i32* @target_flags, align 4
  %and76 = and i32 %39, 33554432
  %tobool77 = icmp ne i32 %and76, 0
  %cond78 = select i1 %tobool77, i32 4, i32 6
  br label %cond.end

cond.false.79:                                    ; preds = %cond.false.69
  %40 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load80 = load i32, i32* %41, align 8
  %bf.lshr81 = lshr i32 %bf.load80, 16
  %bf.clear82 = and i32 %bf.lshr81, 255
  %idxprom83 = sext i32 %bf.clear82 to i64
  %arrayidx84 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom83
  %42 = load i8, i8* %arrayidx84, align 1
  %conv85 = zext i8 %42 to i32
  %43 = load i32, i32* @target_flags, align 4
  %and86 = and i32 %43, 33554432
  %tobool87 = icmp ne i32 %and86, 0
  %cond88 = select i1 %tobool87, i32 8, i32 4
  %add = add nsw i32 %conv85, %cond88
  %sub = sub nsw i32 %add, 1
  %44 = load i32, i32* @target_flags, align 4
  %and89 = and i32 %44, 33554432
  %tobool90 = icmp ne i32 %and89, 0
  %cond91 = select i1 %tobool90, i32 8, i32 4
  %div = sdiv i32 %sub, %cond91
  br label %cond.end

cond.end:                                         ; preds = %cond.false.79, %cond.true.75
  %cond92 = phi i32 [ %cond78, %cond.true.75 ], [ %div, %cond.false.79 ]
  br label %cond.end.93

cond.end.93:                                      ; preds = %cond.end, %cond.true.66
  %cond94 = phi i32 [ %cond68, %cond.true.66 ], [ %cond92, %cond.end ]
  br label %cond.end.95

cond.end.95:                                      ; preds = %cond.end.93, %lor.end
  %cond96 = phi i32 [ %cond, %lor.end ], [ %cond94, %cond.end.93 ]
  %add97 = add i32 %18, %cond96
  store i32 %add97, i32* %endregno, align 4
  %45 = load i32, i32* %regno, align 4
  store i32 %45, i32* %r, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.95
  %46 = load i32, i32* %r, align 4
  %47 = load i32, i32* %endregno, align 4
  %cmp98 = icmp ult i32 %46, %47
  br i1 %cmp98, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %48 = load i32, i32* %r, align 4
  %sh_prom = zext i32 %48 to i64
  %shl = shl i64 1, %sh_prom
  %49 = load i64, i64* @newpat_used_regs, align 8
  %or = or i64 %49, %shl
  store i64 %or, i64* @newpat_used_regs, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %50 = load i32, i32* %r, align 4
  %inc = add i32 %50, 1
  store i32 %inc, i32* %r, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.100

if.end.100:                                       ; preds = %for.end, %sw.bb.10
  br label %for.end.185

sw.bb.101:                                        ; preds = %entry
  %51 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i32 0, i64 0
  %rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rtx104, align 8
  store %struct.rtx_def* %52, %struct.rtx_def** %testreg, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %sw.bb.101
  %53 = load %struct.rtx_def*, %struct.rtx_def** %testreg, align 8
  %54 = bitcast %struct.rtx_def* %53 to i32*
  %bf.load105 = load i32, i32* %54, align 8
  %bf.clear106 = and i32 %bf.load105, 65535
  %cmp107 = icmp eq i32 %bf.clear106, 63
  br i1 %cmp107, label %lor.end.124, label %lor.lhs.false.109

lor.lhs.false.109:                                ; preds = %while.cond
  %55 = load %struct.rtx_def*, %struct.rtx_def** %testreg, align 8
  %56 = bitcast %struct.rtx_def* %55 to i32*
  %bf.load110 = load i32, i32* %56, align 8
  %bf.clear111 = and i32 %bf.load110, 65535
  %cmp112 = icmp eq i32 %bf.clear111, 133
  br i1 %cmp112, label %lor.end.124, label %lor.lhs.false.114

lor.lhs.false.114:                                ; preds = %lor.lhs.false.109
  %57 = load %struct.rtx_def*, %struct.rtx_def** %testreg, align 8
  %58 = bitcast %struct.rtx_def* %57 to i32*
  %bf.load115 = load i32, i32* %58, align 8
  %bf.clear116 = and i32 %bf.load115, 65535
  %cmp117 = icmp eq i32 %bf.clear116, 132
  br i1 %cmp117, label %lor.end.124, label %lor.rhs.119

lor.rhs.119:                                      ; preds = %lor.lhs.false.114
  %59 = load %struct.rtx_def*, %struct.rtx_def** %testreg, align 8
  %60 = bitcast %struct.rtx_def* %59 to i32*
  %bf.load120 = load i32, i32* %60, align 8
  %bf.clear121 = and i32 %bf.load120, 65535
  %cmp122 = icmp eq i32 %bf.clear121, 64
  br label %lor.end.124

lor.end.124:                                      ; preds = %lor.rhs.119, %lor.lhs.false.114, %lor.lhs.false.109, %while.cond
  %61 = phi i1 [ true, %lor.lhs.false.114 ], [ true, %lor.lhs.false.109 ], [ true, %while.cond ], [ %cmp122, %lor.rhs.119 ]
  br i1 %61, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end.124
  %62 = load %struct.rtx_def*, %struct.rtx_def** %testreg, align 8
  %fld125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i32 0, i64 0
  %rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**
  %63 = load %struct.rtx_def*, %struct.rtx_def** %rtx127, align 8
  store %struct.rtx_def* %63, %struct.rtx_def** %testreg, align 8
  br label %while.cond

while.end:                                        ; preds = %lor.end.124
  %64 = load %struct.rtx_def*, %struct.rtx_def** %testreg, align 8
  %65 = bitcast %struct.rtx_def* %64 to i32*
  %bf.load128 = load i32, i32* %65, align 8
  %bf.clear129 = and i32 %bf.load128, 65535
  %cmp130 = icmp eq i32 %bf.clear129, 66
  br i1 %cmp130, label %if.then.132, label %if.end.136

if.then.132:                                      ; preds = %while.end
  %66 = load %struct.rtx_def*, %struct.rtx_def** %testreg, align 8
  %fld133 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1
  %arrayidx134 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld133, i32 0, i64 0
  %rtx135 = bitcast %union.rtunion_def* %arrayidx134 to %struct.rtx_def**
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rtx135, align 8
  call void @mark_used_regs_combine(%struct.rtx_def* %67)
  br label %if.end.136

if.end.136:                                       ; preds = %if.then.132, %while.end
  %68 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1
  %arrayidx138 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld137, i32 0, i64 1
  %rtx139 = bitcast %union.rtunion_def* %arrayidx138 to %struct.rtx_def**
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rtx139, align 8
  call void @mark_used_regs_combine(%struct.rtx_def* %69)
  br label %for.end.185

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  %70 = load i32, i32* %code, align 4
  %idxprom140 = sext i32 %70 to i64
  %arrayidx141 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom140
  %71 = load i8*, i8** %arrayidx141, align 8
  store i8* %71, i8** %fmt, align 8
  %72 = load i32, i32* %code, align 4
  %idxprom142 = sext i32 %72 to i64
  %arrayidx143 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom142
  %73 = load i8, i8* %arrayidx143, align 1
  %conv144 = zext i8 %73 to i32
  %sub145 = sub nsw i32 %conv144, 1
  store i32 %sub145, i32* %i, align 4
  br label %for.cond.146

for.cond.146:                                     ; preds = %for.inc.184, %sw.epilog
  %74 = load i32, i32* %i, align 4
  %cmp147 = icmp sge i32 %74, 0
  br i1 %cmp147, label %for.body.149, label %for.end.185

for.body.149:                                     ; preds = %for.cond.146
  %75 = load i32, i32* %i, align 4
  %idxprom150 = sext i32 %75 to i64
  %76 = load i8*, i8** %fmt, align 8
  %arrayidx151 = getelementptr inbounds i8, i8* %76, i64 %idxprom150
  %77 = load i8, i8* %arrayidx151, align 1
  %conv152 = sext i8 %77 to i32
  %cmp153 = icmp eq i32 %conv152, 101
  br i1 %cmp153, label %if.then.155, label %if.else

if.then.155:                                      ; preds = %for.body.149
  %78 = load i32, i32* %i, align 4
  %idxprom156 = sext i32 %78 to i64
  %79 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld157 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1
  %arrayidx158 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld157, i32 0, i64 %idxprom156
  %rtx159 = bitcast %union.rtunion_def* %arrayidx158 to %struct.rtx_def**
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rtx159, align 8
  call void @mark_used_regs_combine(%struct.rtx_def* %80)
  br label %if.end.183

if.else:                                          ; preds = %for.body.149
  %81 = load i32, i32* %i, align 4
  %idxprom160 = sext i32 %81 to i64
  %82 = load i8*, i8** %fmt, align 8
  %arrayidx161 = getelementptr inbounds i8, i8* %82, i64 %idxprom160
  %83 = load i8, i8* %arrayidx161, align 1
  %conv162 = sext i8 %83 to i32
  %cmp163 = icmp eq i32 %conv162, 69
  br i1 %cmp163, label %if.then.165, label %if.end.182

if.then.165:                                      ; preds = %if.else
  store i32 0, i32* %j, align 4
  br label %for.cond.166

for.cond.166:                                     ; preds = %for.inc.179, %if.then.165
  %84 = load i32, i32* %j, align 4
  %85 = load i32, i32* %i, align 4
  %idxprom167 = sext i32 %85 to i64
  %86 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1
  %arrayidx169 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld168, i32 0, i64 %idxprom167
  %rtvec = bitcast %union.rtunion_def* %arrayidx169 to %struct.rtvec_def**
  %87 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %87, i32 0, i32 0
  %88 = load i32, i32* %num_elem, align 4
  %cmp170 = icmp slt i32 %84, %88
  br i1 %cmp170, label %for.body.172, label %for.end.181

for.body.172:                                     ; preds = %for.cond.166
  %89 = load i32, i32* %j, align 4
  %idxprom173 = sext i32 %89 to i64
  %90 = load i32, i32* %i, align 4
  %idxprom174 = sext i32 %90 to i64
  %91 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld175 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1
  %arrayidx176 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld175, i32 0, i64 %idxprom174
  %rtvec177 = bitcast %union.rtunion_def* %arrayidx176 to %struct.rtvec_def**
  %92 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec177, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %92, i32 0, i32 1
  %arrayidx178 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom173
  %93 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx178, align 8
  call void @mark_used_regs_combine(%struct.rtx_def* %93)
  br label %for.inc.179

for.inc.179:                                      ; preds = %for.body.172
  %94 = load i32, i32* %j, align 4
  %inc180 = add nsw i32 %94, 1
  store i32 %inc180, i32* %j, align 4
  br label %for.cond.166

for.end.181:                                      ; preds = %for.cond.166
  br label %if.end.182

if.end.182:                                       ; preds = %for.end.181, %if.else
  br label %if.end.183

if.end.183:                                       ; preds = %if.end.182, %if.then.155
  br label %for.inc.184

for.inc.184:                                      ; preds = %if.end.183
  %95 = load i32, i32* %i, align 4
  %dec = add nsw i32 %95, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond.146

for.end.185:                                      ; preds = %sw.bb, %if.end, %if.then.23, %if.end.100, %if.end.136, %for.cond.146
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @recog_for_combine(%struct.rtx_def** %pnewpat, %struct.rtx_def* %insn, %struct.rtx_def** %pnotes) #0 {
entry:
  %retval = alloca i32, align 4
  %pnewpat.addr = alloca %struct.rtx_def**, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %pnotes.addr = alloca %struct.rtx_def**, align 8
  %pat = alloca %struct.rtx_def*, align 8
  %insn_code_number = alloca i32, align 4
  %num_clobbers_to_add = alloca i32, align 4
  %i = alloca i32, align 4
  %notes = alloca %struct.rtx_def*, align 8
  %dummy_insn = alloca %struct.rtx_def*, align 8
  %pos = alloca i32, align 4
  %newpat = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def** %pnewpat, %struct.rtx_def*** %pnewpat.addr, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store %struct.rtx_def** %pnotes, %struct.rtx_def*** %pnotes.addr, align 8
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %pnewpat.addr, align 8
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %pat, align 8
  store i32 0, i32* %num_clobbers_to_add, align 4
  store %struct.rtx_def* null, %struct.rtx_def** %notes, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load = load i32, i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 39
  br i1 %cmp, label %if.then, label %if.end.19

if.then:                                          ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**
  %5 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %5, i32 0, i32 0
  %6 = load i32, i32* %num_elem, align 4
  %sub = sub nsw i32 %6, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load i32, i32* %i, align 4
  %cmp1 = icmp sge i32 %7, 0
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4
  %idxprom = sext i32 %8 to i64
  %9 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i32 0, i64 0
  %rtvec4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtvec_def**
  %10 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec4, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %10, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom
  %11 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx5, align 8
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load6 = load i32, i32* %12, align 8
  %bf.clear7 = and i32 %bf.load6, 65535
  %cmp8 = icmp eq i32 %bf.clear7, 49
  br i1 %cmp8, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %13 = load i32, i32* %i, align 4
  %idxprom9 = sext i32 %13 to i64
  %14 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i32 0, i64 0
  %rtvec12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtvec_def**
  %15 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec12, align 8
  %elem13 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %15, i32 0, i32 1
  %arrayidx14 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem13, i32 0, i64 %idxprom9
  %16 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx14, align 8
  %fld15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %18 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp17 = icmp eq %struct.rtx_def* %17, %18
  br i1 %cmp17, label %if.then.18, label %if.end

if.then.18:                                       ; preds = %land.lhs.true
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %19 = load i32, i32* %i, align 4
  %dec = add nsw i32 %19, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.19

if.end.19:                                        ; preds = %for.end, %entry
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call = call %struct.rtx_def* @shallow_copy_rtx(%struct.rtx_def* %20)
  store %struct.rtx_def* %call, %struct.rtx_def** %dummy_insn, align 8
  %21 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %22 = load %struct.rtx_def*, %struct.rtx_def** %dummy_insn, align 8
  %fld20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i32 0, i64 3
  %rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**
  store %struct.rtx_def* %21, %struct.rtx_def** %rtx22, align 8
  %23 = load %struct.rtx_def*, %struct.rtx_def** %dummy_insn, align 8
  %fld23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i32 0, i64 6
  %rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %rtx25, align 8
  %24 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %25 = load %struct.rtx_def*, %struct.rtx_def** %dummy_insn, align 8
  %call26 = call i32 @recog(%struct.rtx_def* %24, %struct.rtx_def* %25, i32* %num_clobbers_to_add)
  store i32 %call26, i32* %insn_code_number, align 4
  %26 = load i32, i32* %insn_code_number, align 4
  %cmp27 = icmp slt i32 %26, 0
  br i1 %cmp27, label %land.lhs.true.28, label %if.end.87

land.lhs.true.28:                                 ; preds = %if.end.19
  %27 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %call29 = call i32 @check_asm_operands(%struct.rtx_def* %27)
  %tobool = icmp ne i32 %call29, 0
  br i1 %tobool, label %if.end.87, label %land.lhs.true.30

land.lhs.true.30:                                 ; preds = %land.lhs.true.28
  %28 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load31 = load i32, i32* %29, align 8
  %bf.clear32 = and i32 %bf.load31, 65535
  %cmp33 = icmp eq i32 %bf.clear32, 39
  br i1 %cmp33, label %if.then.34, label %if.end.87

if.then.34:                                       ; preds = %land.lhs.true.30
  store i32 0, i32* %pos, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.35

for.cond.35:                                      ; preds = %for.inc.68, %if.then.34
  %30 = load i32, i32* %i, align 4
  %31 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i32 0, i64 0
  %rtvec38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtvec_def**
  %32 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec38, align 8
  %num_elem39 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %32, i32 0, i32 0
  %33 = load i32, i32* %num_elem39, align 4
  %cmp40 = icmp slt i32 %30, %33
  br i1 %cmp40, label %for.body.41, label %for.end.70

for.body.41:                                      ; preds = %for.cond.35
  %34 = load i32, i32* %i, align 4
  %idxprom42 = sext i32 %34 to i64
  %35 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i32 0, i64 0
  %rtvec45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtvec_def**
  %36 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec45, align 8
  %elem46 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %36, i32 0, i32 1
  %arrayidx47 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem46, i32 0, i64 %idxprom42
  %37 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx47, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load48 = load i32, i32* %38, align 8
  %bf.clear49 = and i32 %bf.load48, 65535
  %cmp50 = icmp ne i32 %bf.clear49, 49
  br i1 %cmp50, label %if.then.51, label %if.end.67

if.then.51:                                       ; preds = %for.body.41
  %39 = load i32, i32* %i, align 4
  %40 = load i32, i32* %pos, align 4
  %cmp52 = icmp ne i32 %39, %40
  br i1 %cmp52, label %if.then.53, label %if.end.66

if.then.53:                                       ; preds = %if.then.51
  %41 = load i32, i32* %pos, align 4
  %idxprom54 = sext i32 %41 to i64
  %42 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1
  %arrayidx56 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld55, i32 0, i64 0
  %rtvec57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtvec_def**
  %43 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec57, align 8
  %elem58 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %43, i32 0, i32 1
  %arrayidx59 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem58, i32 0, i64 %idxprom54
  %44 = load i32, i32* %i, align 4
  %idxprom60 = sext i32 %44 to i64
  %45 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i32 0, i64 0
  %rtvec63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtvec_def**
  %46 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec63, align 8
  %elem64 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %46, i32 0, i32 1
  %arrayidx65 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem64, i32 0, i64 %idxprom60
  %47 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx65, align 8
  call void @do_SUBST(%struct.rtx_def** %arrayidx59, %struct.rtx_def* %47)
  br label %if.end.66

if.end.66:                                        ; preds = %if.then.53, %if.then.51
  %48 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %48, 1
  store i32 %inc, i32* %pos, align 4
  br label %if.end.67

if.end.67:                                        ; preds = %if.end.66, %for.body.41
  br label %for.inc.68

for.inc.68:                                       ; preds = %if.end.67
  %49 = load i32, i32* %i, align 4
  %inc69 = add nsw i32 %49, 1
  store i32 %inc69, i32* %i, align 4
  br label %for.cond.35

for.end.70:                                       ; preds = %for.cond.35
  %50 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i32 0, i64 0
  %rtvec73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtvec_def**
  %51 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec73, align 8
  %num_elem74 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %51, i32 0, i32 0
  %52 = load i32, i32* %pos, align 4
  call void @do_SUBST_INT(i32* %num_elem74, i32 %52)
  %53 = load i32, i32* %pos, align 4
  %cmp75 = icmp eq i32 %53, 1
  br i1 %cmp75, label %if.then.76, label %if.end.82

if.then.76:                                       ; preds = %for.end.70
  %54 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i32 0, i64 0
  %rtvec79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtvec_def**
  %55 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec79, align 8
  %elem80 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %55, i32 0, i32 1
  %arrayidx81 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem80, i32 0, i64 0
  %56 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx81, align 8
  store %struct.rtx_def* %56, %struct.rtx_def** %pat, align 8
  br label %if.end.82

if.end.82:                                        ; preds = %if.then.76, %for.end.70
  %57 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %58 = load %struct.rtx_def*, %struct.rtx_def** %dummy_insn, align 8
  %fld83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i32 0, i64 3
  %rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**
  store %struct.rtx_def* %57, %struct.rtx_def** %rtx85, align 8
  %59 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %60 = load %struct.rtx_def*, %struct.rtx_def** %dummy_insn, align 8
  %call86 = call i32 @recog(%struct.rtx_def* %59, %struct.rtx_def* %60, i32* %num_clobbers_to_add)
  store i32 %call86, i32* %insn_code_number, align 4
  br label %if.end.87

if.end.87:                                        ; preds = %if.end.82, %land.lhs.true.30, %land.lhs.true.28, %if.end.19
  %61 = load i32, i32* %insn_code_number, align 4
  %cmp88 = icmp slt i32 %61, 0
  br i1 %cmp88, label %land.lhs.true.89, label %if.end.97

land.lhs.true.89:                                 ; preds = %if.end.87
  %62 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %63 = bitcast %struct.rtx_def* %62 to i32*
  %bf.load90 = load i32, i32* %63, align 8
  %bf.clear91 = and i32 %bf.load90, 65535
  %cmp92 = icmp eq i32 %bf.clear91, 47
  br i1 %cmp92, label %land.lhs.true.93, label %if.end.97

land.lhs.true.93:                                 ; preds = %land.lhs.true.89
  %64 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %call94 = call i32 @set_noop_p(%struct.rtx_def* %64)
  %tobool95 = icmp ne i32 %call94, 0
  br i1 %tobool95, label %if.then.96, label %if.end.97

if.then.96:                                       ; preds = %land.lhs.true.93
  store i32 2147483647, i32* %insn_code_number, align 4
  store i32 0, i32* %num_clobbers_to_add, align 4
  br label %if.end.97

if.end.97:                                        ; preds = %if.then.96, %land.lhs.true.93, %land.lhs.true.89, %if.end.87
  %65 = load i32, i32* %num_clobbers_to_add, align 4
  %tobool98 = icmp ne i32 %65, 0
  br i1 %tobool98, label %if.then.99, label %if.end.193

if.then.99:                                       ; preds = %if.end.97
  %66 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %67 = bitcast %struct.rtx_def* %66 to i32*
  %bf.load100 = load i32, i32* %67, align 8
  %bf.clear101 = and i32 %bf.load100, 65535
  %cmp102 = icmp eq i32 %bf.clear101, 39
  br i1 %cmp102, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.99
  %68 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1
  %arrayidx104 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld103, i32 0, i64 0
  %rtvec105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtvec_def**
  %69 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec105, align 8
  %num_elem106 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %69, i32 0, i32 0
  %70 = load i32, i32* %num_elem106, align 4
  %71 = load i32, i32* %num_clobbers_to_add, align 4
  %add = add nsw i32 %70, %71
  br label %cond.end

cond.false:                                       ; preds = %if.then.99
  %72 = load i32, i32* %num_clobbers_to_add, align 4
  %add107 = add nsw i32 %72, 1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %add107, %cond.false ]
  %call108 = call %struct.rtvec_def* @rtvec_alloc(i32 %cond)
  %call109 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call108)
  store %struct.rtx_def* %call109, %struct.rtx_def** %newpat, align 8
  %73 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %74 = bitcast %struct.rtx_def* %73 to i32*
  %bf.load110 = load i32, i32* %74, align 8
  %bf.clear111 = and i32 %bf.load110, 65535
  %cmp112 = icmp eq i32 %bf.clear111, 39
  br i1 %cmp112, label %if.then.113, label %if.else

if.then.113:                                      ; preds = %cond.end
  store i32 0, i32* %i, align 4
  br label %for.cond.114

for.cond.114:                                     ; preds = %for.inc.133, %if.then.113
  %75 = load i32, i32* %i, align 4
  %76 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %arrayidx116 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld115, i32 0, i64 0
  %rtvec117 = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtvec_def**
  %77 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec117, align 8
  %num_elem118 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %77, i32 0, i32 0
  %78 = load i32, i32* %num_elem118, align 4
  %cmp119 = icmp slt i32 %75, %78
  br i1 %cmp119, label %for.body.120, label %for.end.135

for.body.120:                                     ; preds = %for.cond.114
  %79 = load i32, i32* %i, align 4
  %idxprom121 = sext i32 %79 to i64
  %80 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld122 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1
  %arrayidx123 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld122, i32 0, i64 0
  %rtvec124 = bitcast %union.rtunion_def* %arrayidx123 to %struct.rtvec_def**
  %81 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec124, align 8
  %elem125 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %81, i32 0, i32 1
  %arrayidx126 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem125, i32 0, i64 %idxprom121
  %82 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx126, align 8
  %83 = load i32, i32* %i, align 4
  %idxprom127 = sext i32 %83 to i64
  %84 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1
  %arrayidx129 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld128, i32 0, i64 0
  %rtvec130 = bitcast %union.rtunion_def* %arrayidx129 to %struct.rtvec_def**
  %85 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec130, align 8
  %elem131 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %85, i32 0, i32 1
  %arrayidx132 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem131, i32 0, i64 %idxprom127
  store %struct.rtx_def* %82, %struct.rtx_def** %arrayidx132, align 8
  br label %for.inc.133

for.inc.133:                                      ; preds = %for.body.120
  %86 = load i32, i32* %i, align 4
  %inc134 = add nsw i32 %86, 1
  store i32 %inc134, i32* %i, align 4
  br label %for.cond.114

for.end.135:                                      ; preds = %for.cond.114
  br label %if.end.141

if.else:                                          ; preds = %cond.end
  %87 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %88 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld136 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1
  %arrayidx137 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld136, i32 0, i64 0
  %rtvec138 = bitcast %union.rtunion_def* %arrayidx137 to %struct.rtvec_def**
  %89 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec138, align 8
  %elem139 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %89, i32 0, i32 1
  %arrayidx140 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem139, i32 0, i64 0
  store %struct.rtx_def* %87, %struct.rtx_def** %arrayidx140, align 8
  br label %if.end.141

if.end.141:                                       ; preds = %if.else, %for.end.135
  %90 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %91 = load i32, i32* %insn_code_number, align 4
  call void @add_clobbers(%struct.rtx_def* %90, i32 %91)
  %92 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld142 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1
  %arrayidx143 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld142, i32 0, i64 0
  %rtvec144 = bitcast %union.rtunion_def* %arrayidx143 to %struct.rtvec_def**
  %93 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec144, align 8
  %num_elem145 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %93, i32 0, i32 0
  %94 = load i32, i32* %num_elem145, align 4
  %95 = load i32, i32* %num_clobbers_to_add, align 4
  %sub146 = sub nsw i32 %94, %95
  store i32 %sub146, i32* %i, align 4
  br label %for.cond.147

for.cond.147:                                     ; preds = %for.inc.190, %if.end.141
  %96 = load i32, i32* %i, align 4
  %97 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld148 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %97, i32 0, i32 1
  %arrayidx149 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld148, i32 0, i64 0
  %rtvec150 = bitcast %union.rtunion_def* %arrayidx149 to %struct.rtvec_def**
  %98 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec150, align 8
  %num_elem151 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %98, i32 0, i32 0
  %99 = load i32, i32* %num_elem151, align 4
  %cmp152 = icmp slt i32 %96, %99
  br i1 %cmp152, label %for.body.153, label %for.end.192

for.body.153:                                     ; preds = %for.cond.147
  %100 = load i32, i32* %i, align 4
  %idxprom154 = sext i32 %100 to i64
  %101 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld155 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i32 0, i32 1
  %arrayidx156 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld155, i32 0, i64 0
  %rtvec157 = bitcast %union.rtunion_def* %arrayidx156 to %struct.rtvec_def**
  %102 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec157, align 8
  %elem158 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %102, i32 0, i32 1
  %arrayidx159 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem158, i32 0, i64 %idxprom154
  %103 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx159, align 8
  %fld160 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1
  %arrayidx161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld160, i32 0, i64 0
  %rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**
  %104 = load %struct.rtx_def*, %struct.rtx_def** %rtx162, align 8
  %105 = bitcast %struct.rtx_def* %104 to i32*
  %bf.load163 = load i32, i32* %105, align 8
  %bf.clear164 = and i32 %bf.load163, 65535
  %cmp165 = icmp eq i32 %bf.clear164, 61
  br i1 %cmp165, label %land.lhs.true.166, label %if.end.179

land.lhs.true.166:                                ; preds = %for.body.153
  %106 = load i32, i32* %i, align 4
  %idxprom167 = sext i32 %106 to i64
  %107 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1
  %arrayidx169 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld168, i32 0, i64 0
  %rtvec170 = bitcast %union.rtunion_def* %arrayidx169 to %struct.rtvec_def**
  %108 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec170, align 8
  %elem171 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %108, i32 0, i32 1
  %arrayidx172 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem171, i32 0, i64 %idxprom167
  %109 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx172, align 8
  %fld173 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1
  %arrayidx174 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld173, i32 0, i64 0
  %rtx175 = bitcast %union.rtunion_def* %arrayidx174 to %struct.rtx_def**
  %110 = load %struct.rtx_def*, %struct.rtx_def** %rtx175, align 8
  %111 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call176 = call i32 @reg_dead_at_p(%struct.rtx_def* %110, %struct.rtx_def* %111)
  %tobool177 = icmp ne i32 %call176, 0
  br i1 %tobool177, label %if.end.179, label %if.then.178

if.then.178:                                      ; preds = %land.lhs.true.166
  store i32 -1, i32* %retval
  br label %return

if.end.179:                                       ; preds = %land.lhs.true.166, %for.body.153
  %112 = load i32, i32* %i, align 4
  %idxprom180 = sext i32 %112 to i64
  %113 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  %fld181 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %113, i32 0, i32 1
  %arrayidx182 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld181, i32 0, i64 0
  %rtvec183 = bitcast %union.rtunion_def* %arrayidx182 to %struct.rtvec_def**
  %114 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec183, align 8
  %elem184 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %114, i32 0, i32 1
  %arrayidx185 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem184, i32 0, i64 %idxprom180
  %115 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx185, align 8
  %fld186 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1
  %arrayidx187 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld186, i32 0, i64 0
  %rtx188 = bitcast %union.rtunion_def* %arrayidx187 to %struct.rtx_def**
  %116 = load %struct.rtx_def*, %struct.rtx_def** %rtx188, align 8
  %117 = load %struct.rtx_def*, %struct.rtx_def** %notes, align 8
  %call189 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 10, %struct.rtx_def* %116, %struct.rtx_def* %117)
  store %struct.rtx_def* %call189, %struct.rtx_def** %notes, align 8
  br label %for.inc.190

for.inc.190:                                      ; preds = %if.end.179
  %118 = load i32, i32* %i, align 4
  %inc191 = add nsw i32 %118, 1
  store i32 %inc191, i32* %i, align 4
  br label %for.cond.147

for.end.192:                                      ; preds = %for.cond.147
  %119 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8
  store %struct.rtx_def* %119, %struct.rtx_def** %pat, align 8
  br label %if.end.193

if.end.193:                                       ; preds = %for.end.192, %if.end.97
  %120 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %121 = load %struct.rtx_def**, %struct.rtx_def*** %pnewpat.addr, align 8
  store %struct.rtx_def* %120, %struct.rtx_def** %121, align 8
  %122 = load %struct.rtx_def*, %struct.rtx_def** %notes, align 8
  %123 = load %struct.rtx_def**, %struct.rtx_def*** %pnotes.addr, align 8
  store %struct.rtx_def* %122, %struct.rtx_def** %123, align 8
  %124 = load i32, i32* %insn_code_number, align 4
  store i32 %124, i32* %retval
  br label %return

return:                                           ; preds = %if.end.193, %if.then.178, %if.then.18
  %125 = load i32, i32* %retval
  ret i32 %125
}

declare i32 @asm_noperands(%struct.rtx_def*) #1

declare %struct.rtx_def* @split_insns(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtvec_def* @gen_rtvec(i32, ...) #1

; Function Attrs: nounwind uwtable
define internal i32 @use_crosses_set_p(%struct.rtx_def* %x, i32 %from_cuid) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %from_cuid.addr = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %regno = alloca i32, align 4
  %endreg = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %from_cuid, i32* %from_cuid.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %2 = load i32, i32* %code, align 4
  %cmp = icmp eq i32 %2, 61
  br i1 %cmp, label %if.then, label %if.end.100

if.then:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %4 = load i32, i32* %rtuint, align 4
  store i32 %4, i32* %regno, align 4
  %5 = load i32, i32* %regno, align 4
  %6 = load i32, i32* %regno, align 4
  %cmp1 = icmp ult i32 %6, 53
  br i1 %cmp1, label %cond.true, label %cond.false.58

cond.true:                                        ; preds = %if.then
  %7 = load i32, i32* %regno, align 4
  %cmp2 = icmp uge i32 %7, 8
  br i1 %cmp2, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %cond.true
  %8 = load i32, i32* %regno, align 4
  %cmp3 = icmp ule i32 %8, 15
  br i1 %cmp3, label %cond.true.15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %cond.true
  %9 = load i32, i32* %regno, align 4
  %cmp4 = icmp uge i32 %9, 21
  br i1 %cmp4, label %land.lhs.true.5, label %lor.lhs.false.7

land.lhs.true.5:                                  ; preds = %lor.lhs.false
  %10 = load i32, i32* %regno, align 4
  %cmp6 = icmp ule i32 %10, 28
  br i1 %cmp6, label %cond.true.15, label %lor.lhs.false.7

lor.lhs.false.7:                                  ; preds = %land.lhs.true.5, %lor.lhs.false
  %11 = load i32, i32* %regno, align 4
  %cmp8 = icmp uge i32 %11, 45
  br i1 %cmp8, label %land.lhs.true.9, label %lor.lhs.false.11

land.lhs.true.9:                                  ; preds = %lor.lhs.false.7
  %12 = load i32, i32* %regno, align 4
  %cmp10 = icmp ule i32 %12, 52
  br i1 %cmp10, label %cond.true.15, label %lor.lhs.false.11

lor.lhs.false.11:                                 ; preds = %land.lhs.true.9, %lor.lhs.false.7
  %13 = load i32, i32* %regno, align 4
  %cmp12 = icmp uge i32 %13, 29
  br i1 %cmp12, label %land.lhs.true.13, label %cond.false

land.lhs.true.13:                                 ; preds = %lor.lhs.false.11
  %14 = load i32, i32* %regno, align 4
  %cmp14 = icmp ule i32 %14, 36
  br i1 %cmp14, label %cond.true.15, label %cond.false

cond.true.15:                                     ; preds = %land.lhs.true.13, %land.lhs.true.9, %land.lhs.true.5, %land.lhs.true
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %16 = bitcast %struct.rtx_def* %15 to i32*
  %bf.load16 = load i32, i32* %16, align 8
  %bf.lshr = lshr i32 %bf.load16, 16
  %bf.clear17 = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear17 to i64
  %arrayidx18 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %17 = load i32, i32* %arrayidx18, align 4
  %cmp19 = icmp eq i32 %17, 5
  br i1 %cmp19, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.15
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load20 = load i32, i32* %19, align 8
  %bf.lshr21 = lshr i32 %bf.load20, 16
  %bf.clear22 = and i32 %bf.lshr21, 255
  %idxprom23 = sext i32 %bf.clear22 to i64
  %arrayidx24 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom23
  %20 = load i32, i32* %arrayidx24, align 4
  %cmp25 = icmp eq i32 %20, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.15
  %21 = phi i1 [ true, %cond.true.15 ], [ %cmp25, %lor.rhs ]
  %cond = select i1 %21, i32 2, i32 1
  br label %cond.end.56

cond.false:                                       ; preds = %land.lhs.true.13, %lor.lhs.false.11
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %23 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load26 = load i32, i32* %23, align 8
  %bf.lshr27 = lshr i32 %bf.load26, 16
  %bf.clear28 = and i32 %bf.lshr27, 255
  %cmp29 = icmp eq i32 %bf.clear28, 18
  br i1 %cmp29, label %cond.true.30, label %cond.false.32

cond.true.30:                                     ; preds = %cond.false
  %24 = load i32, i32* @target_flags, align 4
  %and = and i32 %24, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond31 = select i1 %tobool, i32 2, i32 3
  br label %cond.end.54

cond.false.32:                                    ; preds = %cond.false
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load33 = load i32, i32* %26, align 8
  %bf.lshr34 = lshr i32 %bf.load33, 16
  %bf.clear35 = and i32 %bf.lshr34, 255
  %cmp36 = icmp eq i32 %bf.clear35, 24
  br i1 %cmp36, label %cond.true.37, label %cond.false.41

cond.true.37:                                     ; preds = %cond.false.32
  %27 = load i32, i32* @target_flags, align 4
  %and38 = and i32 %27, 33554432
  %tobool39 = icmp ne i32 %and38, 0
  %cond40 = select i1 %tobool39, i32 4, i32 6
  br label %cond.end

cond.false.41:                                    ; preds = %cond.false.32
  %28 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load42 = load i32, i32* %29, align 8
  %bf.lshr43 = lshr i32 %bf.load42, 16
  %bf.clear44 = and i32 %bf.lshr43, 255
  %idxprom45 = sext i32 %bf.clear44 to i64
  %arrayidx46 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom45
  %30 = load i8, i8* %arrayidx46, align 1
  %conv = zext i8 %30 to i32
  %31 = load i32, i32* @target_flags, align 4
  %and47 = and i32 %31, 33554432
  %tobool48 = icmp ne i32 %and47, 0
  %cond49 = select i1 %tobool48, i32 8, i32 4
  %add = add nsw i32 %conv, %cond49
  %sub = sub nsw i32 %add, 1
  %32 = load i32, i32* @target_flags, align 4
  %and50 = and i32 %32, 33554432
  %tobool51 = icmp ne i32 %and50, 0
  %cond52 = select i1 %tobool51, i32 8, i32 4
  %div = sdiv i32 %sub, %cond52
  br label %cond.end

cond.end:                                         ; preds = %cond.false.41, %cond.true.37
  %cond53 = phi i32 [ %cond40, %cond.true.37 ], [ %div, %cond.false.41 ]
  br label %cond.end.54

cond.end.54:                                      ; preds = %cond.end, %cond.true.30
  %cond55 = phi i32 [ %cond31, %cond.true.30 ], [ %cond53, %cond.end ]
  br label %cond.end.56

cond.end.56:                                      ; preds = %cond.end.54, %lor.end
  %cond57 = phi i32 [ %cond, %lor.end ], [ %cond55, %cond.end.54 ]
  br label %cond.end.59

cond.false.58:                                    ; preds = %if.then
  br label %cond.end.59

cond.end.59:                                      ; preds = %cond.false.58, %cond.end.56
  %cond60 = phi i32 [ %cond57, %cond.end.56 ], [ 1, %cond.false.58 ]
  %add61 = add i32 %5, %cond60
  store i32 %add61, i32* %endreg, align 4
  %33 = load i32, i32* %regno, align 4
  %cmp62 = icmp eq i32 %33, 7
  br i1 %cmp62, label %land.lhs.true.64, label %if.end

land.lhs.true.64:                                 ; preds = %cond.end.59
  %34 = load i32, i32* @target_flags, align 4
  %and65 = and i32 %34, 2048
  %tobool66 = icmp ne i32 %and65, 0
  br i1 %tobool66, label %if.end, label %land.lhs.true.67

land.lhs.true.67:                                 ; preds = %land.lhs.true.64
  %35 = load i32, i32* @target_flags, align 4
  %and68 = and i32 %35, 4096
  %tobool69 = icmp ne i32 %and68, 0
  br i1 %tobool69, label %if.end, label %if.then.70

if.then.70:                                       ; preds = %land.lhs.true.67
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true.67, %land.lhs.true.64, %cond.end.59
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %36 = load i32, i32* %regno, align 4
  %37 = load i32, i32* %endreg, align 4
  %cmp71 = icmp ult i32 %36, %37
  br i1 %cmp71, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %38 = load i32, i32* %regno, align 4
  %idxprom73 = zext i32 %38 to i64
  %39 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set, align 8
  %arrayidx74 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %39, i64 %idxprom73
  %40 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx74, align 8
  %tobool75 = icmp ne %struct.rtx_def* %40, null
  br i1 %tobool75, label %land.lhs.true.76, label %if.end.99

land.lhs.true.76:                                 ; preds = %for.body
  %41 = load i32, i32* %regno, align 4
  %idxprom77 = zext i32 %41 to i64
  %42 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set, align 8
  %arrayidx78 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %42, i64 %idxprom77
  %43 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx78, align 8
  %fld79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx80 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld79, i32 0, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx80 to i32*
  %44 = load i32, i32* %rtint, align 4
  %45 = load i32, i32* @max_uid_cuid, align 4
  %cmp81 = icmp sgt i32 %44, %45
  br i1 %cmp81, label %cond.true.83, label %cond.false.86

cond.true.83:                                     ; preds = %land.lhs.true.76
  %46 = load i32, i32* %regno, align 4
  %idxprom84 = zext i32 %46 to i64
  %47 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set, align 8
  %arrayidx85 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %47, i64 %idxprom84
  %48 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx85, align 8
  %call = call i32 @insn_cuid(%struct.rtx_def* %48)
  br label %cond.end.94

cond.false.86:                                    ; preds = %land.lhs.true.76
  %49 = load i32, i32* %regno, align 4
  %idxprom87 = zext i32 %49 to i64
  %50 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set, align 8
  %arrayidx88 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %50, i64 %idxprom87
  %51 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx88, align 8
  %fld89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i32 0, i64 0
  %rtint91 = bitcast %union.rtunion_def* %arrayidx90 to i32*
  %52 = load i32, i32* %rtint91, align 4
  %idxprom92 = sext i32 %52 to i64
  %53 = load i32*, i32** @uid_cuid, align 8
  %arrayidx93 = getelementptr inbounds i32, i32* %53, i64 %idxprom92
  %54 = load i32, i32* %arrayidx93, align 4
  br label %cond.end.94

cond.end.94:                                      ; preds = %cond.false.86, %cond.true.83
  %cond95 = phi i32 [ %call, %cond.true.83 ], [ %54, %cond.false.86 ]
  %55 = load i32, i32* %from_cuid.addr, align 4
  %cmp96 = icmp sgt i32 %cond95, %55
  br i1 %cmp96, label %if.then.98, label %if.end.99

if.then.98:                                       ; preds = %cond.end.94
  store i32 1, i32* %retval
  br label %return

if.end.99:                                        ; preds = %cond.end.94, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.99
  %56 = load i32, i32* %regno, align 4
  %inc = add i32 %56, 1
  store i32 %inc, i32* %regno, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval
  br label %return

if.end.100:                                       ; preds = %entry
  %57 = load i32, i32* %code, align 4
  %cmp101 = icmp eq i32 %57, 66
  br i1 %cmp101, label %land.lhs.true.103, label %if.end.107

land.lhs.true.103:                                ; preds = %if.end.100
  %58 = load i32, i32* @mem_last_set, align 4
  %59 = load i32, i32* %from_cuid.addr, align 4
  %cmp104 = icmp sgt i32 %58, %59
  br i1 %cmp104, label %if.then.106, label %if.end.107

if.then.106:                                      ; preds = %land.lhs.true.103
  store i32 1, i32* %retval
  br label %return

if.end.107:                                       ; preds = %land.lhs.true.103, %if.end.100
  %60 = load i32, i32* %code, align 4
  %idxprom108 = sext i32 %60 to i64
  %arrayidx109 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom108
  %61 = load i8*, i8** %arrayidx109, align 8
  store i8* %61, i8** %fmt, align 8
  %62 = load i32, i32* %code, align 4
  %idxprom110 = sext i32 %62 to i64
  %arrayidx111 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom110
  %63 = load i8, i8* %arrayidx111, align 1
  %conv112 = zext i8 %63 to i32
  %sub113 = sub nsw i32 %conv112, 1
  store i32 %sub113, i32* %i, align 4
  br label %for.cond.114

for.cond.114:                                     ; preds = %for.inc.158, %if.end.107
  %64 = load i32, i32* %i, align 4
  %cmp115 = icmp sge i32 %64, 0
  br i1 %cmp115, label %for.body.117, label %for.end.160

for.body.117:                                     ; preds = %for.cond.114
  %65 = load i32, i32* %i, align 4
  %idxprom118 = sext i32 %65 to i64
  %66 = load i8*, i8** %fmt, align 8
  %arrayidx119 = getelementptr inbounds i8, i8* %66, i64 %idxprom118
  %67 = load i8, i8* %arrayidx119, align 1
  %conv120 = sext i8 %67 to i32
  %cmp121 = icmp eq i32 %conv120, 69
  br i1 %cmp121, label %if.then.123, label %if.else

if.then.123:                                      ; preds = %for.body.117
  %68 = load i32, i32* %i, align 4
  %idxprom124 = sext i32 %68 to i64
  %69 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i32 0, i64 %idxprom124
  %rtvec = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtvec_def**
  %70 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %70, i32 0, i32 0
  %71 = load i32, i32* %num_elem, align 4
  %sub127 = sub nsw i32 %71, 1
  store i32 %sub127, i32* %j, align 4
  br label %for.cond.128

for.cond.128:                                     ; preds = %for.inc.142, %if.then.123
  %72 = load i32, i32* %j, align 4
  %cmp129 = icmp sge i32 %72, 0
  br i1 %cmp129, label %for.body.131, label %for.end.143

for.body.131:                                     ; preds = %for.cond.128
  %73 = load i32, i32* %j, align 4
  %idxprom132 = sext i32 %73 to i64
  %74 = load i32, i32* %i, align 4
  %idxprom133 = sext i32 %74 to i64
  %75 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx135 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld134, i32 0, i64 %idxprom133
  %rtvec136 = bitcast %union.rtunion_def* %arrayidx135 to %struct.rtvec_def**
  %76 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec136, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %76, i32 0, i32 1
  %arrayidx137 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom132
  %77 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx137, align 8
  %78 = load i32, i32* %from_cuid.addr, align 4
  %call138 = call i32 @use_crosses_set_p(%struct.rtx_def* %77, i32 %78)
  %tobool139 = icmp ne i32 %call138, 0
  br i1 %tobool139, label %if.then.140, label %if.end.141

if.then.140:                                      ; preds = %for.body.131
  store i32 1, i32* %retval
  br label %return

if.end.141:                                       ; preds = %for.body.131
  br label %for.inc.142

for.inc.142:                                      ; preds = %if.end.141
  %79 = load i32, i32* %j, align 4
  %dec = add nsw i32 %79, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond.128

for.end.143:                                      ; preds = %for.cond.128
  br label %if.end.157

if.else:                                          ; preds = %for.body.117
  %80 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %80 to i64
  %81 = load i8*, i8** %fmt, align 8
  %arrayidx145 = getelementptr inbounds i8, i8* %81, i64 %idxprom144
  %82 = load i8, i8* %arrayidx145, align 1
  %conv146 = sext i8 %82 to i32
  %cmp147 = icmp eq i32 %conv146, 101
  br i1 %cmp147, label %land.lhs.true.149, label %if.end.156

land.lhs.true.149:                                ; preds = %if.else
  %83 = load i32, i32* %i, align 4
  %idxprom150 = sext i32 %83 to i64
  %84 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld151 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1
  %arrayidx152 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld151, i32 0, i64 %idxprom150
  %rtx = bitcast %union.rtunion_def* %arrayidx152 to %struct.rtx_def**
  %85 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %86 = load i32, i32* %from_cuid.addr, align 4
  %call153 = call i32 @use_crosses_set_p(%struct.rtx_def* %85, i32 %86)
  %tobool154 = icmp ne i32 %call153, 0
  br i1 %tobool154, label %if.then.155, label %if.end.156

if.then.155:                                      ; preds = %land.lhs.true.149
  store i32 1, i32* %retval
  br label %return

if.end.156:                                       ; preds = %land.lhs.true.149, %if.else
  br label %if.end.157

if.end.157:                                       ; preds = %if.end.156, %for.end.143
  br label %for.inc.158

for.inc.158:                                      ; preds = %if.end.157
  %87 = load i32, i32* %i, align 4
  %dec159 = add nsw i32 %87, -1
  store i32 %dec159, i32* %i, align 4
  br label %for.cond.114

for.end.160:                                      ; preds = %for.cond.114
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %for.end.160, %if.then.155, %if.then.140, %if.then.106, %for.end, %if.then.98, %if.then.70
  %88 = load i32, i32* %retval
  ret i32 %88
}

declare i32 @reg_used_between_p(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def** @find_split_point(%struct.rtx_def** %loc, %struct.rtx_def* %insn) #0 {
entry:
  %retval = alloca %struct.rtx_def**, align 8
  %loc.addr = alloca %struct.rtx_def**, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %x = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %split = alloca %struct.rtx_def**, align 8
  %len = alloca i64, align 8
  %pos = alloca i64, align 8
  %unsignedp = alloca i32, align 4
  %inner = alloca %struct.rtx_def*, align 8
  %reg = alloca %struct.rtx_def*, align 8
  %seq = alloca %struct.rtx_def*, align 8
  %src1 = alloca %struct.rtx_def*, align 8
  %src2 = alloca %struct.rtx_def*, align 8
  %pos377 = alloca i64, align 8
  %len387 = alloca i64, align 8
  %src = alloca i64, align 8
  %dest = alloca %struct.rtx_def*, align 8
  %mode = alloca i32, align 4
  %mask = alloca i64, align 8
  %extraction = alloca %struct.rtx_def*, align 8
  %mode654 = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %x, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load = load i32, i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  store i64 0, i64* %len, align 8
  store i64 0, i64* %pos, align 8
  store i32 0, i32* %unsignedp, align 4
  store %struct.rtx_def* null, %struct.rtx_def** %inner, align 8
  %4 = load i32, i32* %code, align 4
  switch i32 %4, label %sw.default.1016 [
    i32 63, label %sw.bb
    i32 66, label %sw.bb.6
    i32 47, label %sw.bb.256
    i32 83, label %sw.bb.953
    i32 84, label %sw.bb.953
  ]

sw.bb:                                            ; preds = %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load1 = load i32, i32* %7, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp = icmp eq i32 %bf.clear2, 66
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  store %struct.rtx_def** %8, %struct.rtx_def*** %retval
  br label %return

if.end:                                           ; preds = %sw.bb
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i32 0, i64 0
  %rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call = call %struct.rtx_def** @find_split_point(%struct.rtx_def** %rtx5, %struct.rtx_def* %10)
  store %struct.rtx_def** %call, %struct.rtx_def*** %retval
  br label %return

sw.bb.6:                                          ; preds = %entry
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i32 0, i64 0
  %rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rtx9, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load10 = load i32, i32* %13, align 8
  %bf.clear11 = and i32 %bf.load10, 65535
  %cmp12 = icmp eq i32 %bf.clear11, 75
  br i1 %cmp12, label %land.lhs.true, label %if.end.255

land.lhs.true:                                    ; preds = %sw.bb.6
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i32 0, i64 0
  %rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rtx15, align 8
  %fld16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i32 0, i64 1
  %rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rtx18, align 8
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load19 = load i32, i32* %17, align 8
  %bf.clear20 = and i32 %bf.load19, 65535
  %cmp21 = icmp eq i32 %bf.clear20, 54
  br i1 %cmp21, label %land.lhs.true.22, label %if.end.255

land.lhs.true.22:                                 ; preds = %land.lhs.true
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load23 = load i32, i32* %19, align 8
  %bf.lshr = lshr i32 %bf.load23, 16
  %bf.clear24 = and i32 %bf.lshr, 255
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i32 0, i64 0
  %rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rtx27, align 8
  %call28 = call i32 @memory_address_p(i32 %bf.clear24, %struct.rtx_def* %21)
  %tobool = icmp ne i32 %call28, 0
  br i1 %tobool, label %if.end.255, label %if.then.29

if.then.29:                                       ; preds = %land.lhs.true.22
  %22 = load %struct.function*, %struct.function** @cfun, align 8
  %emit = getelementptr inbounds %struct.function, %struct.function* %22, i32 0, i32 3
  %23 = load %struct.emit_status*, %struct.emit_status** %emit, align 8
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status, %struct.emit_status* %23, i32 0, i32 12
  %24 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx, align 8
  %arrayidx30 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %24, i64 53
  %25 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx30, align 8
  store %struct.rtx_def* %25, %struct.rtx_def** %reg, align 8
  %26 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i32 0, i64 0
  %rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rtx33, align 8
  %call34 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %26, %struct.rtx_def* %28)
  %29 = load %struct.rtx_def*, %struct.rtx_def** @subst_insn, align 8
  %call35 = call %struct.rtx_def* @split_insns(%struct.rtx_def* %call34, %struct.rtx_def* %29)
  store %struct.rtx_def* %call35, %struct.rtx_def** %seq, align 8
  %30 = load %struct.rtx_def*, %struct.rtx_def** %seq, align 8
  %tobool36 = icmp ne %struct.rtx_def* %30, null
  br i1 %tobool36, label %land.lhs.true.37, label %if.else.204

land.lhs.true.37:                                 ; preds = %if.then.29
  %31 = load %struct.rtx_def*, %struct.rtx_def** %seq, align 8
  %fld38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i32 0, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtvec_def**
  %32 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %32, i32 0, i32 0
  %33 = load i32, i32* %num_elem, align 4
  %cmp40 = icmp eq i32 %33, 2
  br i1 %cmp40, label %land.lhs.true.41, label %if.else.204

land.lhs.true.41:                                 ; preds = %land.lhs.true.37
  %34 = load %struct.rtx_def*, %struct.rtx_def** %seq, align 8
  %fld42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i32 0, i64 0
  %rtvec44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtvec_def**
  %35 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec44, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %35, i32 0, i32 1
  %arrayidx45 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 0
  %36 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx45, align 8
  %37 = bitcast %struct.rtx_def* %36 to i32*
  %bf.load46 = load i32, i32* %37, align 8
  %bf.clear47 = and i32 %bf.load46, 65535
  %cmp48 = icmp eq i32 %bf.clear47, 32
  br i1 %cmp48, label %land.lhs.true.49, label %if.else.204

land.lhs.true.49:                                 ; preds = %land.lhs.true.41
  %38 = load %struct.rtx_def*, %struct.rtx_def** %seq, align 8
  %fld50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i32 0, i64 0
  %rtvec52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtvec_def**
  %39 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec52, align 8
  %elem53 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %39, i32 0, i32 1
  %arrayidx54 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem53, i32 0, i64 0
  %40 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx54, align 8
  %fld55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1
  %arrayidx56 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld55, i32 0, i64 3
  %rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rtx57, align 8
  %42 = bitcast %struct.rtx_def* %41 to i32*
  %bf.load58 = load i32, i32* %42, align 8
  %bf.clear59 = and i32 %bf.load58, 65535
  %cmp60 = icmp eq i32 %bf.clear59, 47
  br i1 %cmp60, label %land.lhs.true.61, label %if.else.204

land.lhs.true.61:                                 ; preds = %land.lhs.true.49
  %43 = load %struct.rtx_def*, %struct.rtx_def** %seq, align 8
  %fld62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx63 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld62, i32 0, i64 0
  %rtvec64 = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtvec_def**
  %44 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec64, align 8
  %elem65 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %44, i32 0, i32 1
  %arrayidx66 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem65, i32 0, i64 0
  %45 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx66, align 8
  %fld67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i32 0, i64 3
  %rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rtx69, align 8
  %fld70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i32 0, i64 0
  %rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rtx72, align 8
  %48 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %cmp73 = icmp eq %struct.rtx_def* %47, %48
  br i1 %cmp73, label %land.lhs.true.74, label %if.else.204

land.lhs.true.74:                                 ; preds = %land.lhs.true.61
  %49 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %50 = load %struct.rtx_def*, %struct.rtx_def** %seq, align 8
  %fld75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1
  %arrayidx76 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld75, i32 0, i64 0
  %rtvec77 = bitcast %union.rtunion_def* %arrayidx76 to %struct.rtvec_def**
  %51 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec77, align 8
  %elem78 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %51, i32 0, i32 1
  %arrayidx79 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem78, i32 0, i64 0
  %52 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx79, align 8
  %fld80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1
  %arrayidx81 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld80, i32 0, i64 3
  %rtx82 = bitcast %union.rtunion_def* %arrayidx81 to %struct.rtx_def**
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rtx82, align 8
  %fld83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i32 0, i64 1
  %rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx85, align 8
  %call86 = call i32 @reg_mentioned_p(%struct.rtx_def* %49, %struct.rtx_def* %54)
  %tobool87 = icmp ne i32 %call86, 0
  br i1 %tobool87, label %if.else.204, label %land.lhs.true.88

land.lhs.true.88:                                 ; preds = %land.lhs.true.74
  %55 = load %struct.rtx_def*, %struct.rtx_def** %seq, align 8
  %fld89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i32 0, i64 0
  %rtvec91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtvec_def**
  %56 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec91, align 8
  %elem92 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %56, i32 0, i32 1
  %arrayidx93 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem92, i32 0, i64 1
  %57 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx93, align 8
  %58 = bitcast %struct.rtx_def* %57 to i32*
  %bf.load94 = load i32, i32* %58, align 8
  %bf.clear95 = and i32 %bf.load94, 65535
  %cmp96 = icmp eq i32 %bf.clear95, 32
  br i1 %cmp96, label %land.lhs.true.97, label %if.else.204

land.lhs.true.97:                                 ; preds = %land.lhs.true.88
  %59 = load %struct.rtx_def*, %struct.rtx_def** %seq, align 8
  %fld98 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1
  %arrayidx99 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld98, i32 0, i64 0
  %rtvec100 = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtvec_def**
  %60 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec100, align 8
  %elem101 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %60, i32 0, i32 1
  %arrayidx102 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem101, i32 0, i64 1
  %61 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx102, align 8
  %fld103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1
  %arrayidx104 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld103, i32 0, i64 3
  %rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rtx105, align 8
  %63 = bitcast %struct.rtx_def* %62 to i32*
  %bf.load106 = load i32, i32* %63, align 8
  %bf.clear107 = and i32 %bf.load106, 65535
  %cmp108 = icmp eq i32 %bf.clear107, 47
  br i1 %cmp108, label %land.lhs.true.109, label %if.else.204

land.lhs.true.109:                                ; preds = %land.lhs.true.97
  %64 = load %struct.rtx_def*, %struct.rtx_def** %seq, align 8
  %fld110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1
  %arrayidx111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld110, i32 0, i64 0
  %rtvec112 = bitcast %union.rtunion_def* %arrayidx111 to %struct.rtvec_def**
  %65 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec112, align 8
  %elem113 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %65, i32 0, i32 1
  %arrayidx114 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem113, i32 0, i64 1
  %66 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx114, align 8
  %fld115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1
  %arrayidx116 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld115, i32 0, i64 3
  %rtx117 = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtx_def**
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rtx117, align 8
  %fld118 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1
  %arrayidx119 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld118, i32 0, i64 0
  %rtx120 = bitcast %union.rtunion_def* %arrayidx119 to %struct.rtx_def**
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rtx120, align 8
  %69 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %cmp121 = icmp eq %struct.rtx_def* %68, %69
  br i1 %cmp121, label %land.lhs.true.122, label %if.else.204

land.lhs.true.122:                                ; preds = %land.lhs.true.109
  %70 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %71 = bitcast %struct.rtx_def* %70 to i32*
  %bf.load123 = load i32, i32* %71, align 8
  %bf.lshr124 = lshr i32 %bf.load123, 16
  %bf.clear125 = and i32 %bf.lshr124, 255
  %72 = load %struct.rtx_def*, %struct.rtx_def** %seq, align 8
  %fld126 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1
  %arrayidx127 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld126, i32 0, i64 0
  %rtvec128 = bitcast %union.rtunion_def* %arrayidx127 to %struct.rtvec_def**
  %73 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec128, align 8
  %elem129 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %73, i32 0, i32 1
  %arrayidx130 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem129, i32 0, i64 1
  %74 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx130, align 8
  %fld131 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1
  %arrayidx132 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld131, i32 0, i64 3
  %rtx133 = bitcast %union.rtunion_def* %arrayidx132 to %struct.rtx_def**
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rtx133, align 8
  %fld134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx135 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld134, i32 0, i64 1
  %rtx136 = bitcast %union.rtunion_def* %arrayidx135 to %struct.rtx_def**
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rtx136, align 8
  %call137 = call i32 @memory_address_p(i32 %bf.clear125, %struct.rtx_def* %76)
  %tobool138 = icmp ne i32 %call137, 0
  br i1 %tobool138, label %if.then.139, label %if.else.204

if.then.139:                                      ; preds = %land.lhs.true.122
  %77 = load %struct.rtx_def*, %struct.rtx_def** %seq, align 8
  %fld140 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1
  %arrayidx141 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld140, i32 0, i64 0
  %rtvec142 = bitcast %union.rtunion_def* %arrayidx141 to %struct.rtvec_def**
  %78 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec142, align 8
  %elem143 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %78, i32 0, i32 1
  %arrayidx144 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem143, i32 0, i64 0
  %79 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx144, align 8
  %fld145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1
  %arrayidx146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld145, i32 0, i64 3
  %rtx147 = bitcast %union.rtunion_def* %arrayidx146 to %struct.rtx_def**
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rtx147, align 8
  %fld148 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1
  %arrayidx149 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld148, i32 0, i64 1
  %rtx150 = bitcast %union.rtunion_def* %arrayidx149 to %struct.rtx_def**
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rtx150, align 8
  store %struct.rtx_def* %81, %struct.rtx_def** %src1, align 8
  %82 = load %struct.rtx_def*, %struct.rtx_def** %seq, align 8
  %fld151 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1
  %arrayidx152 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld151, i32 0, i64 0
  %rtvec153 = bitcast %union.rtunion_def* %arrayidx152 to %struct.rtvec_def**
  %83 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec153, align 8
  %elem154 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %83, i32 0, i32 1
  %arrayidx155 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem154, i32 0, i64 1
  %84 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx155, align 8
  %fld156 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1
  %arrayidx157 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld156, i32 0, i64 3
  %rtx158 = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtx_def**
  %85 = load %struct.rtx_def*, %struct.rtx_def** %rtx158, align 8
  %fld159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1
  %arrayidx160 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld159, i32 0, i64 1
  %rtx161 = bitcast %union.rtunion_def* %arrayidx160 to %struct.rtx_def**
  %86 = load %struct.rtx_def*, %struct.rtx_def** %rtx161, align 8
  store %struct.rtx_def* %86, %struct.rtx_def** %src2, align 8
  %87 = load %struct.rtx_def*, %struct.rtx_def** %src2, align 8
  %88 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %89 = load %struct.rtx_def*, %struct.rtx_def** %src1, align 8
  %call162 = call %struct.rtx_def* @replace_rtx(%struct.rtx_def* %87, %struct.rtx_def* %88, %struct.rtx_def* %89)
  store %struct.rtx_def* %call162, %struct.rtx_def** %src2, align 8
  store %struct.rtx_def** null, %struct.rtx_def*** %split, align 8
  %90 = load %struct.rtx_def*, %struct.rtx_def** %src2, align 8
  %fld163 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1
  %arrayidx164 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld163, i32 0, i64 0
  %rtx165 = bitcast %union.rtunion_def* %arrayidx164 to %struct.rtx_def**
  %91 = load %struct.rtx_def*, %struct.rtx_def** %rtx165, align 8
  %92 = load %struct.rtx_def*, %struct.rtx_def** %src1, align 8
  %cmp166 = icmp eq %struct.rtx_def* %91, %92
  br i1 %cmp166, label %if.then.167, label %if.else

if.then.167:                                      ; preds = %if.then.139
  %93 = load %struct.rtx_def*, %struct.rtx_def** %src2, align 8
  %fld168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %93, i32 0, i32 1
  %arrayidx169 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld168, i32 0, i64 0
  %rtx170 = bitcast %union.rtunion_def* %arrayidx169 to %struct.rtx_def**
  store %struct.rtx_def** %rtx170, %struct.rtx_def*** %split, align 8
  br label %if.end.197

if.else:                                          ; preds = %if.then.139
  %94 = load %struct.rtx_def*, %struct.rtx_def** %src2, align 8
  %fld171 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1
  %arrayidx172 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld171, i32 0, i64 0
  %rtx173 = bitcast %union.rtunion_def* %arrayidx172 to %struct.rtx_def**
  %95 = load %struct.rtx_def*, %struct.rtx_def** %rtx173, align 8
  %96 = bitcast %struct.rtx_def* %95 to i32*
  %bf.load174 = load i32, i32* %96, align 8
  %bf.clear175 = and i32 %bf.load174, 65535
  %idxprom = sext i32 %bf.clear175 to i64
  %arrayidx176 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom
  %97 = load i8*, i8** %arrayidx176, align 8
  %arrayidx177 = getelementptr inbounds i8, i8* %97, i64 0
  %98 = load i8, i8* %arrayidx177, align 1
  %conv = sext i8 %98 to i32
  %cmp178 = icmp eq i32 %conv, 101
  br i1 %cmp178, label %land.lhs.true.180, label %if.end.196

land.lhs.true.180:                                ; preds = %if.else
  %99 = load %struct.rtx_def*, %struct.rtx_def** %src2, align 8
  %fld181 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %99, i32 0, i32 1
  %arrayidx182 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld181, i32 0, i64 0
  %rtx183 = bitcast %union.rtunion_def* %arrayidx182 to %struct.rtx_def**
  %100 = load %struct.rtx_def*, %struct.rtx_def** %rtx183, align 8
  %fld184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1
  %arrayidx185 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld184, i32 0, i64 0
  %rtx186 = bitcast %union.rtunion_def* %arrayidx185 to %struct.rtx_def**
  %101 = load %struct.rtx_def*, %struct.rtx_def** %rtx186, align 8
  %102 = load %struct.rtx_def*, %struct.rtx_def** %src1, align 8
  %cmp187 = icmp eq %struct.rtx_def* %101, %102
  br i1 %cmp187, label %if.then.189, label %if.end.196

if.then.189:                                      ; preds = %land.lhs.true.180
  %103 = load %struct.rtx_def*, %struct.rtx_def** %src2, align 8
  %fld190 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1
  %arrayidx191 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld190, i32 0, i64 0
  %rtx192 = bitcast %union.rtunion_def* %arrayidx191 to %struct.rtx_def**
  %104 = load %struct.rtx_def*, %struct.rtx_def** %rtx192, align 8
  %fld193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %104, i32 0, i32 1
  %arrayidx194 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld193, i32 0, i64 0
  %rtx195 = bitcast %union.rtunion_def* %arrayidx194 to %struct.rtx_def**
  store %struct.rtx_def** %rtx195, %struct.rtx_def*** %split, align 8
  br label %if.end.196

if.end.196:                                       ; preds = %if.then.189, %land.lhs.true.180, %if.else
  br label %if.end.197

if.end.197:                                       ; preds = %if.end.196, %if.then.167
  %105 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %tobool198 = icmp ne %struct.rtx_def** %105, null
  br i1 %tobool198, label %if.then.199, label %if.end.203

if.then.199:                                      ; preds = %if.end.197
  %106 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld200 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %106, i32 0, i32 1
  %arrayidx201 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld200, i32 0, i64 0
  %rtx202 = bitcast %union.rtunion_def* %arrayidx201 to %struct.rtx_def**
  %107 = load %struct.rtx_def*, %struct.rtx_def** %src2, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx202, %struct.rtx_def* %107)
  %108 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  store %struct.rtx_def** %108, %struct.rtx_def*** %retval
  br label %return

if.end.203:                                       ; preds = %if.end.197
  br label %if.end.254

if.else.204:                                      ; preds = %land.lhs.true.122, %land.lhs.true.109, %land.lhs.true.97, %land.lhs.true.88, %land.lhs.true.74, %land.lhs.true.61, %land.lhs.true.49, %land.lhs.true.41, %land.lhs.true.37, %if.then.29
  %109 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld205 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1
  %arrayidx206 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld205, i32 0, i64 0
  %rtx207 = bitcast %union.rtunion_def* %arrayidx206 to %struct.rtx_def**
  %110 = load %struct.rtx_def*, %struct.rtx_def** %rtx207, align 8
  %fld208 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %110, i32 0, i32 1
  %arrayidx209 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld208, i32 0, i64 0
  %rtx210 = bitcast %union.rtunion_def* %arrayidx209 to %struct.rtx_def**
  %111 = load %struct.rtx_def*, %struct.rtx_def** %rtx210, align 8
  %112 = bitcast %struct.rtx_def* %111 to i32*
  %bf.load211 = load i32, i32* %112, align 8
  %bf.clear212 = and i32 %bf.load211, 65535
  %idxprom213 = sext i32 %bf.clear212 to i64
  %arrayidx214 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom213
  %113 = load i8, i8* %arrayidx214, align 1
  %conv215 = sext i8 %113 to i32
  %cmp216 = icmp ne i32 %conv215, 111
  br i1 %cmp216, label %land.lhs.true.218, label %if.end.253

land.lhs.true.218:                                ; preds = %if.else.204
  %114 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld219 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %114, i32 0, i32 1
  %arrayidx220 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld219, i32 0, i64 0
  %rtx221 = bitcast %union.rtunion_def* %arrayidx220 to %struct.rtx_def**
  %115 = load %struct.rtx_def*, %struct.rtx_def** %rtx221, align 8
  %fld222 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1
  %arrayidx223 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld222, i32 0, i64 0
  %rtx224 = bitcast %union.rtunion_def* %arrayidx223 to %struct.rtx_def**
  %116 = load %struct.rtx_def*, %struct.rtx_def** %rtx224, align 8
  %117 = bitcast %struct.rtx_def* %116 to i32*
  %bf.load225 = load i32, i32* %117, align 8
  %bf.clear226 = and i32 %bf.load225, 65535
  %cmp227 = icmp eq i32 %bf.clear226, 63
  br i1 %cmp227, label %land.lhs.true.229, label %if.then.246

land.lhs.true.229:                                ; preds = %land.lhs.true.218
  %118 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld230 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1
  %arrayidx231 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld230, i32 0, i64 0
  %rtx232 = bitcast %union.rtunion_def* %arrayidx231 to %struct.rtx_def**
  %119 = load %struct.rtx_def*, %struct.rtx_def** %rtx232, align 8
  %fld233 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %119, i32 0, i32 1
  %arrayidx234 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld233, i32 0, i64 0
  %rtx235 = bitcast %union.rtunion_def* %arrayidx234 to %struct.rtx_def**
  %120 = load %struct.rtx_def*, %struct.rtx_def** %rtx235, align 8
  %fld236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1
  %arrayidx237 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld236, i32 0, i64 0
  %rtx238 = bitcast %union.rtunion_def* %arrayidx237 to %struct.rtx_def**
  %121 = load %struct.rtx_def*, %struct.rtx_def** %rtx238, align 8
  %122 = bitcast %struct.rtx_def* %121 to i32*
  %bf.load239 = load i32, i32* %122, align 8
  %bf.clear240 = and i32 %bf.load239, 65535
  %idxprom241 = sext i32 %bf.clear240 to i64
  %arrayidx242 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom241
  %123 = load i8, i8* %arrayidx242, align 1
  %conv243 = sext i8 %123 to i32
  %cmp244 = icmp eq i32 %conv243, 111
  br i1 %cmp244, label %if.end.253, label %if.then.246

if.then.246:                                      ; preds = %land.lhs.true.229, %land.lhs.true.218
  %124 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld247 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1
  %arrayidx248 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld247, i32 0, i64 0
  %rtx249 = bitcast %union.rtunion_def* %arrayidx248 to %struct.rtx_def**
  %125 = load %struct.rtx_def*, %struct.rtx_def** %rtx249, align 8
  %fld250 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %125, i32 0, i32 1
  %arrayidx251 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld250, i32 0, i64 0
  %rtx252 = bitcast %union.rtunion_def* %arrayidx251 to %struct.rtx_def**
  store %struct.rtx_def** %rtx252, %struct.rtx_def*** %retval
  br label %return

if.end.253:                                       ; preds = %land.lhs.true.229, %if.else.204
  br label %if.end.254

if.end.254:                                       ; preds = %if.end.253, %if.end.203
  br label %if.end.255

if.end.255:                                       ; preds = %if.end.254, %land.lhs.true.22, %land.lhs.true, %sw.bb.6
  br label %sw.epilog.1017

sw.bb.256:                                        ; preds = %entry
  %126 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld257 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1
  %arrayidx258 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld257, i32 0, i64 1
  %rtx259 = bitcast %union.rtunion_def* %arrayidx258 to %struct.rtx_def**
  %127 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call260 = call %struct.rtx_def** @find_split_point(%struct.rtx_def** %rtx259, %struct.rtx_def* %127)
  store %struct.rtx_def** %call260, %struct.rtx_def*** %split, align 8
  %128 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %tobool261 = icmp ne %struct.rtx_def** %128, null
  br i1 %tobool261, label %land.lhs.true.262, label %if.end.269

land.lhs.true.262:                                ; preds = %sw.bb.256
  %129 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %130 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld263 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1
  %arrayidx264 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld263, i32 0, i64 1
  %rtx265 = bitcast %union.rtunion_def* %arrayidx264 to %struct.rtx_def**
  %cmp266 = icmp ne %struct.rtx_def** %129, %rtx265
  br i1 %cmp266, label %if.then.268, label %if.end.269

if.then.268:                                      ; preds = %land.lhs.true.262
  %131 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  store %struct.rtx_def** %131, %struct.rtx_def*** %retval
  br label %return

if.end.269:                                       ; preds = %land.lhs.true.262, %sw.bb.256
  %132 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld270 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1
  %arrayidx271 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld270, i32 0, i64 0
  %rtx272 = bitcast %union.rtunion_def* %arrayidx271 to %struct.rtx_def**
  %133 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call273 = call %struct.rtx_def** @find_split_point(%struct.rtx_def** %rtx272, %struct.rtx_def* %133)
  store %struct.rtx_def** %call273, %struct.rtx_def*** %split, align 8
  %134 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %tobool274 = icmp ne %struct.rtx_def** %134, null
  br i1 %tobool274, label %land.lhs.true.275, label %if.end.282

land.lhs.true.275:                                ; preds = %if.end.269
  %135 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %136 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld276 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1
  %arrayidx277 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld276, i32 0, i64 0
  %rtx278 = bitcast %union.rtunion_def* %arrayidx277 to %struct.rtx_def**
  %cmp279 = icmp ne %struct.rtx_def** %135, %rtx278
  br i1 %cmp279, label %if.then.281, label %if.end.282

if.then.281:                                      ; preds = %land.lhs.true.275
  %137 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  store %struct.rtx_def** %137, %struct.rtx_def*** %retval
  br label %return

if.end.282:                                       ; preds = %land.lhs.true.275, %if.end.269
  %138 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld283 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %138, i32 0, i32 1
  %arrayidx284 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld283, i32 0, i64 0
  %rtx285 = bitcast %union.rtunion_def* %arrayidx284 to %struct.rtx_def**
  %139 = load %struct.rtx_def*, %struct.rtx_def** %rtx285, align 8
  %140 = bitcast %struct.rtx_def* %139 to i32*
  %bf.load286 = load i32, i32* %140, align 8
  %bf.clear287 = and i32 %bf.load286, 65535
  %cmp288 = icmp eq i32 %bf.clear287, 133
  br i1 %cmp288, label %land.lhs.true.290, label %if.end.451

land.lhs.true.290:                                ; preds = %if.end.282
  %141 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld291 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %141, i32 0, i32 1
  %arrayidx292 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld291, i32 0, i64 0
  %rtx293 = bitcast %union.rtunion_def* %arrayidx292 to %struct.rtx_def**
  %142 = load %struct.rtx_def*, %struct.rtx_def** %rtx293, align 8
  %fld294 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i32 0, i32 1
  %arrayidx295 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld294, i32 0, i64 0
  %rtx296 = bitcast %union.rtunion_def* %arrayidx295 to %struct.rtx_def**
  %143 = load %struct.rtx_def*, %struct.rtx_def** %rtx296, align 8
  %144 = bitcast %struct.rtx_def* %143 to i32*
  %bf.load297 = load i32, i32* %144, align 8
  %bf.lshr298 = lshr i32 %bf.load297, 16
  %bf.clear299 = and i32 %bf.lshr298, 255
  %idxprom300 = sext i32 %bf.clear299 to i64
  %arrayidx301 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom300
  %145 = load i16, i16* %arrayidx301, align 2
  %conv302 = zext i16 %145 to i32
  %cmp303 = icmp sle i32 %conv302, 64
  br i1 %cmp303, label %land.lhs.true.305, label %if.end.451

land.lhs.true.305:                                ; preds = %land.lhs.true.290
  %146 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld306 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %146, i32 0, i32 1
  %arrayidx307 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld306, i32 0, i64 0
  %rtx308 = bitcast %union.rtunion_def* %arrayidx307 to %struct.rtx_def**
  %147 = load %struct.rtx_def*, %struct.rtx_def** %rtx308, align 8
  %fld309 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %147, i32 0, i32 1
  %arrayidx310 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld309, i32 0, i64 1
  %rtx311 = bitcast %union.rtunion_def* %arrayidx310 to %struct.rtx_def**
  %148 = load %struct.rtx_def*, %struct.rtx_def** %rtx311, align 8
  %149 = bitcast %struct.rtx_def* %148 to i32*
  %bf.load312 = load i32, i32* %149, align 8
  %bf.clear313 = and i32 %bf.load312, 65535
  %cmp314 = icmp eq i32 %bf.clear313, 54
  br i1 %cmp314, label %land.lhs.true.316, label %if.end.451

land.lhs.true.316:                                ; preds = %land.lhs.true.305
  %150 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld317 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %150, i32 0, i32 1
  %arrayidx318 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld317, i32 0, i64 0
  %rtx319 = bitcast %union.rtunion_def* %arrayidx318 to %struct.rtx_def**
  %151 = load %struct.rtx_def*, %struct.rtx_def** %rtx319, align 8
  %fld320 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %151, i32 0, i32 1
  %arrayidx321 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld320, i32 0, i64 2
  %rtx322 = bitcast %union.rtunion_def* %arrayidx321 to %struct.rtx_def**
  %152 = load %struct.rtx_def*, %struct.rtx_def** %rtx322, align 8
  %153 = bitcast %struct.rtx_def* %152 to i32*
  %bf.load323 = load i32, i32* %153, align 8
  %bf.clear324 = and i32 %bf.load323, 65535
  %cmp325 = icmp eq i32 %bf.clear324, 54
  br i1 %cmp325, label %land.lhs.true.327, label %if.end.451

land.lhs.true.327:                                ; preds = %land.lhs.true.316
  %154 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld328 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %154, i32 0, i32 1
  %arrayidx329 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld328, i32 0, i64 1
  %rtx330 = bitcast %union.rtunion_def* %arrayidx329 to %struct.rtx_def**
  %155 = load %struct.rtx_def*, %struct.rtx_def** %rtx330, align 8
  %156 = bitcast %struct.rtx_def* %155 to i32*
  %bf.load331 = load i32, i32* %156, align 8
  %bf.clear332 = and i32 %bf.load331, 65535
  %cmp333 = icmp eq i32 %bf.clear332, 54
  br i1 %cmp333, label %land.lhs.true.335, label %if.end.451

land.lhs.true.335:                                ; preds = %land.lhs.true.327
  %157 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld336 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %157, i32 0, i32 1
  %arrayidx337 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld336, i32 0, i64 0
  %rtx338 = bitcast %union.rtunion_def* %arrayidx337 to %struct.rtx_def**
  %158 = load %struct.rtx_def*, %struct.rtx_def** %rtx338, align 8
  %fld339 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %158, i32 0, i32 1
  %arrayidx340 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld339, i32 0, i64 1
  %rtx341 = bitcast %union.rtunion_def* %arrayidx340 to %struct.rtx_def**
  %159 = load %struct.rtx_def*, %struct.rtx_def** %rtx341, align 8
  %fld342 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1
  %arrayidx343 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld342, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx343 to i64*
  %160 = load i64, i64* %rtwint, align 8
  %161 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld344 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %161, i32 0, i32 1
  %arrayidx345 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld344, i32 0, i64 0
  %rtx346 = bitcast %union.rtunion_def* %arrayidx345 to %struct.rtx_def**
  %162 = load %struct.rtx_def*, %struct.rtx_def** %rtx346, align 8
  %fld347 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %162, i32 0, i32 1
  %arrayidx348 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld347, i32 0, i64 2
  %rtx349 = bitcast %union.rtunion_def* %arrayidx348 to %struct.rtx_def**
  %163 = load %struct.rtx_def*, %struct.rtx_def** %rtx349, align 8
  %fld350 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %163, i32 0, i32 1
  %arrayidx351 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld350, i32 0, i64 0
  %rtwint352 = bitcast %union.rtunion_def* %arrayidx351 to i64*
  %164 = load i64, i64* %rtwint352, align 8
  %add = add nsw i64 %160, %164
  %165 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld353 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %165, i32 0, i32 1
  %arrayidx354 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld353, i32 0, i64 0
  %rtx355 = bitcast %union.rtunion_def* %arrayidx354 to %struct.rtx_def**
  %166 = load %struct.rtx_def*, %struct.rtx_def** %rtx355, align 8
  %fld356 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %166, i32 0, i32 1
  %arrayidx357 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld356, i32 0, i64 0
  %rtx358 = bitcast %union.rtunion_def* %arrayidx357 to %struct.rtx_def**
  %167 = load %struct.rtx_def*, %struct.rtx_def** %rtx358, align 8
  %168 = bitcast %struct.rtx_def* %167 to i32*
  %bf.load359 = load i32, i32* %168, align 8
  %bf.lshr360 = lshr i32 %bf.load359, 16
  %bf.clear361 = and i32 %bf.lshr360, 255
  %idxprom362 = sext i32 %bf.clear361 to i64
  %arrayidx363 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom362
  %169 = load i16, i16* %arrayidx363, align 2
  %conv364 = zext i16 %169 to i64
  %cmp365 = icmp sle i64 %add, %conv364
  br i1 %cmp365, label %land.lhs.true.367, label %if.end.451

land.lhs.true.367:                                ; preds = %land.lhs.true.335
  %170 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld368 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %170, i32 0, i32 1
  %arrayidx369 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld368, i32 0, i64 0
  %rtx370 = bitcast %union.rtunion_def* %arrayidx369 to %struct.rtx_def**
  %171 = load %struct.rtx_def*, %struct.rtx_def** %rtx370, align 8
  %fld371 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %171, i32 0, i32 1
  %arrayidx372 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld371, i32 0, i64 0
  %rtx373 = bitcast %union.rtunion_def* %arrayidx372 to %struct.rtx_def**
  %172 = load %struct.rtx_def*, %struct.rtx_def** %rtx373, align 8
  %call374 = call i32 @side_effects_p(%struct.rtx_def* %172)
  %tobool375 = icmp ne i32 %call374, 0
  br i1 %tobool375, label %if.end.451, label %if.then.376

if.then.376:                                      ; preds = %land.lhs.true.367
  %173 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld378 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %173, i32 0, i32 1
  %arrayidx379 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld378, i32 0, i64 0
  %rtx380 = bitcast %union.rtunion_def* %arrayidx379 to %struct.rtx_def**
  %174 = load %struct.rtx_def*, %struct.rtx_def** %rtx380, align 8
  %fld381 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %174, i32 0, i32 1
  %arrayidx382 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld381, i32 0, i64 2
  %rtx383 = bitcast %union.rtunion_def* %arrayidx382 to %struct.rtx_def**
  %175 = load %struct.rtx_def*, %struct.rtx_def** %rtx383, align 8
  %fld384 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %175, i32 0, i32 1
  %arrayidx385 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld384, i32 0, i64 0
  %rtwint386 = bitcast %union.rtunion_def* %arrayidx385 to i64*
  %176 = load i64, i64* %rtwint386, align 8
  store i64 %176, i64* %pos377, align 8
  %177 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld388 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %177, i32 0, i32 1
  %arrayidx389 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld388, i32 0, i64 0
  %rtx390 = bitcast %union.rtunion_def* %arrayidx389 to %struct.rtx_def**
  %178 = load %struct.rtx_def*, %struct.rtx_def** %rtx390, align 8
  %fld391 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %178, i32 0, i32 1
  %arrayidx392 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld391, i32 0, i64 1
  %rtx393 = bitcast %union.rtunion_def* %arrayidx392 to %struct.rtx_def**
  %179 = load %struct.rtx_def*, %struct.rtx_def** %rtx393, align 8
  %fld394 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %179, i32 0, i32 1
  %arrayidx395 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld394, i32 0, i64 0
  %rtwint396 = bitcast %union.rtunion_def* %arrayidx395 to i64*
  %180 = load i64, i64* %rtwint396, align 8
  store i64 %180, i64* %len387, align 8
  %181 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld397 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %181, i32 0, i32 1
  %arrayidx398 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld397, i32 0, i64 1
  %rtx399 = bitcast %union.rtunion_def* %arrayidx398 to %struct.rtx_def**
  %182 = load %struct.rtx_def*, %struct.rtx_def** %rtx399, align 8
  %fld400 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %182, i32 0, i32 1
  %arrayidx401 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld400, i32 0, i64 0
  %rtwint402 = bitcast %union.rtunion_def* %arrayidx401 to i64*
  %183 = load i64, i64* %rtwint402, align 8
  store i64 %183, i64* %src, align 8
  %184 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld403 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %184, i32 0, i32 1
  %arrayidx404 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld403, i32 0, i64 0
  %rtx405 = bitcast %union.rtunion_def* %arrayidx404 to %struct.rtx_def**
  %185 = load %struct.rtx_def*, %struct.rtx_def** %rtx405, align 8
  %fld406 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %185, i32 0, i32 1
  %arrayidx407 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld406, i32 0, i64 0
  %rtx408 = bitcast %union.rtunion_def* %arrayidx407 to %struct.rtx_def**
  %186 = load %struct.rtx_def*, %struct.rtx_def** %rtx408, align 8
  store %struct.rtx_def* %186, %struct.rtx_def** %dest, align 8
  %187 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %188 = bitcast %struct.rtx_def* %187 to i32*
  %bf.load409 = load i32, i32* %188, align 8
  %bf.lshr410 = lshr i32 %bf.load409, 16
  %bf.clear411 = and i32 %bf.lshr410, 255
  store i32 %bf.clear411, i32* %mode, align 4
  %189 = load i64, i64* %len387, align 8
  %shl = shl i64 1, %189
  %sub = sub nsw i64 %shl, 1
  store i64 %sub, i64* %mask, align 8
  %190 = load i64, i64* %src, align 8
  %191 = load i64, i64* %mask, align 8
  %cmp412 = icmp eq i64 %190, %191
  br i1 %cmp412, label %if.then.414, label %if.else.421

if.then.414:                                      ; preds = %if.then.376
  %192 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld415 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %192, i32 0, i32 1
  %arrayidx416 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld415, i32 0, i64 1
  %rtx417 = bitcast %union.rtunion_def* %arrayidx416 to %struct.rtx_def**
  %193 = load i32, i32* %mode, align 4
  %194 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %195 = load i64, i64* %src, align 8
  %196 = load i64, i64* %pos377, align 8
  %shl418 = shl i64 %195, %196
  %call419 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %shl418)
  %call420 = call %struct.rtx_def* @gen_binary(i32 84, i32 %193, %struct.rtx_def* %194, %struct.rtx_def* %call419)
  call void @do_SUBST(%struct.rtx_def** %rtx417, %struct.rtx_def* %call420)
  br label %if.end.434

if.else.421:                                      ; preds = %if.then.376
  %197 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld422 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %197, i32 0, i32 1
  %arrayidx423 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld422, i32 0, i64 1
  %rtx424 = bitcast %union.rtunion_def* %arrayidx423 to %struct.rtx_def**
  %198 = load i32, i32* %mode, align 4
  %199 = load i32, i32* %mode, align 4
  %200 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %201 = load i64, i64* %mask, align 8
  %202 = load i64, i64* %pos377, align 8
  %shl425 = shl i64 %201, %202
  %neg = xor i64 %shl425, -1
  %203 = load i32, i32* %mode, align 4
  %idxprom426 = sext i32 %203 to i64
  %arrayidx427 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom426
  %204 = load i64, i64* %arrayidx427, align 8
  %and = and i64 %neg, %204
  %205 = load i32, i32* %mode, align 4
  %call428 = call i64 @trunc_int_for_mode(i64 %and, i32 %205)
  %call429 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call428)
  %call430 = call %struct.rtx_def* @gen_binary(i32 83, i32 %199, %struct.rtx_def* %200, %struct.rtx_def* %call429)
  %206 = load i64, i64* %src, align 8
  %207 = load i64, i64* %pos377, align 8
  %shl431 = shl i64 %206, %207
  %call432 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %shl431)
  %call433 = call %struct.rtx_def* @gen_binary(i32 84, i32 %198, %struct.rtx_def* %call430, %struct.rtx_def* %call432)
  call void @do_SUBST(%struct.rtx_def** %rtx424, %struct.rtx_def* %call433)
  br label %if.end.434

if.end.434:                                       ; preds = %if.else.421, %if.then.414
  %208 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld435 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %208, i32 0, i32 1
  %arrayidx436 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld435, i32 0, i64 0
  %rtx437 = bitcast %union.rtunion_def* %arrayidx436 to %struct.rtx_def**
  %209 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx437, %struct.rtx_def* %209)
  %210 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld438 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %210, i32 0, i32 1
  %arrayidx439 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld438, i32 0, i64 1
  %rtx440 = bitcast %union.rtunion_def* %arrayidx439 to %struct.rtx_def**
  %211 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call441 = call %struct.rtx_def** @find_split_point(%struct.rtx_def** %rtx440, %struct.rtx_def* %211)
  store %struct.rtx_def** %call441, %struct.rtx_def*** %split, align 8
  %212 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %tobool442 = icmp ne %struct.rtx_def** %212, null
  br i1 %tobool442, label %land.lhs.true.443, label %if.end.450

land.lhs.true.443:                                ; preds = %if.end.434
  %213 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %214 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld444 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %214, i32 0, i32 1
  %arrayidx445 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld444, i32 0, i64 1
  %rtx446 = bitcast %union.rtunion_def* %arrayidx445 to %struct.rtx_def**
  %cmp447 = icmp ne %struct.rtx_def** %213, %rtx446
  br i1 %cmp447, label %if.then.449, label %if.end.450

if.then.449:                                      ; preds = %land.lhs.true.443
  %215 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  store %struct.rtx_def** %215, %struct.rtx_def*** %retval
  br label %return

if.end.450:                                       ; preds = %land.lhs.true.443, %if.end.434
  br label %if.end.451

if.end.451:                                       ; preds = %if.end.450, %land.lhs.true.367, %land.lhs.true.335, %land.lhs.true.327, %land.lhs.true.316, %land.lhs.true.305, %land.lhs.true.290, %if.end.282
  %216 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld452 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %216, i32 0, i32 1
  %arrayidx453 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld452, i32 0, i64 1
  %rtx454 = bitcast %union.rtunion_def* %arrayidx453 to %struct.rtx_def**
  %217 = load %struct.rtx_def*, %struct.rtx_def** %rtx454, align 8
  %218 = bitcast %struct.rtx_def* %217 to i32*
  %bf.load455 = load i32, i32* %218, align 8
  %bf.clear456 = and i32 %bf.load455, 65535
  store i32 %bf.clear456, i32* %code, align 4
  %219 = load i32, i32* %code, align 4
  switch i32 %219, label %sw.default [
    i32 83, label %sw.bb.457
    i32 102, label %sw.bb.555
    i32 120, label %sw.bb.556
    i32 132, label %sw.bb.589
    i32 133, label %sw.bb.589
  ]

sw.bb.457:                                        ; preds = %if.end.451
  %220 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld458 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %220, i32 0, i32 1
  %arrayidx459 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld458, i32 0, i64 1
  %rtx460 = bitcast %union.rtunion_def* %arrayidx459 to %struct.rtx_def**
  %221 = load %struct.rtx_def*, %struct.rtx_def** %rtx460, align 8
  %fld461 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %221, i32 0, i32 1
  %arrayidx462 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld461, i32 0, i64 1
  %rtx463 = bitcast %union.rtunion_def* %arrayidx462 to %struct.rtx_def**
  %222 = load %struct.rtx_def*, %struct.rtx_def** %rtx463, align 8
  %223 = bitcast %struct.rtx_def* %222 to i32*
  %bf.load464 = load i32, i32* %223, align 8
  %bf.clear465 = and i32 %bf.load464, 65535
  %cmp466 = icmp eq i32 %bf.clear465, 54
  br i1 %cmp466, label %land.lhs.true.468, label %if.end.554

land.lhs.true.468:                                ; preds = %sw.bb.457
  %224 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld469 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %224, i32 0, i32 1
  %arrayidx470 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld469, i32 0, i64 1
  %rtx471 = bitcast %union.rtunion_def* %arrayidx470 to %struct.rtx_def**
  %225 = load %struct.rtx_def*, %struct.rtx_def** %rtx471, align 8
  %fld472 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %225, i32 0, i32 1
  %arrayidx473 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld472, i32 0, i64 0
  %rtx474 = bitcast %union.rtunion_def* %arrayidx473 to %struct.rtx_def**
  %226 = load %struct.rtx_def*, %struct.rtx_def** %rtx474, align 8
  %227 = bitcast %struct.rtx_def* %226 to i32*
  %bf.load475 = load i32, i32* %227, align 8
  %bf.clear476 = and i32 %bf.load475, 65535
  %cmp477 = icmp eq i32 %bf.clear476, 61
  br i1 %cmp477, label %land.lhs.true.479, label %if.end.554

land.lhs.true.479:                                ; preds = %land.lhs.true.468
  %228 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld480 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %228, i32 0, i32 1
  %arrayidx481 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld480, i32 0, i64 1
  %rtx482 = bitcast %union.rtunion_def* %arrayidx481 to %struct.rtx_def**
  %229 = load %struct.rtx_def*, %struct.rtx_def** %rtx482, align 8
  %fld483 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %229, i32 0, i32 1
  %arrayidx484 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld483, i32 0, i64 1
  %rtx485 = bitcast %union.rtunion_def* %arrayidx484 to %struct.rtx_def**
  %230 = load %struct.rtx_def*, %struct.rtx_def** %rtx485, align 8
  %fld486 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %230, i32 0, i32 1
  %arrayidx487 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld486, i32 0, i64 0
  %rtwint488 = bitcast %union.rtunion_def* %arrayidx487 to i64*
  %231 = load i64, i64* %rtwint488, align 8
  %call489 = call i32 @exact_log2_wide(i64 %231)
  %conv490 = sext i32 %call489 to i64
  store i64 %conv490, i64* %pos, align 8
  %cmp491 = icmp sge i64 %conv490, 7
  br i1 %cmp491, label %land.lhs.true.493, label %if.end.554

land.lhs.true.493:                                ; preds = %land.lhs.true.479
  %232 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld494 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %232, i32 0, i32 1
  %arrayidx495 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld494, i32 0, i64 0
  %rtx496 = bitcast %union.rtunion_def* %arrayidx495 to %struct.rtx_def**
  %233 = load %struct.rtx_def*, %struct.rtx_def** %rtx496, align 8
  %234 = bitcast %struct.rtx_def* %233 to i32*
  %bf.load497 = load i32, i32* %234, align 8
  %bf.clear498 = and i32 %bf.load497, 65535
  %cmp499 = icmp eq i32 %bf.clear498, 61
  br i1 %cmp499, label %land.lhs.true.501, label %if.end.554

land.lhs.true.501:                                ; preds = %land.lhs.true.493
  %235 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld502 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %235, i32 0, i32 1
  %arrayidx503 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld502, i32 0, i64 0
  %rtx504 = bitcast %union.rtunion_def* %arrayidx503 to %struct.rtx_def**
  %236 = load %struct.rtx_def*, %struct.rtx_def** %rtx504, align 8
  %237 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call505 = call %struct.rtx_def** @find_single_use(%struct.rtx_def* %236, %struct.rtx_def* %237, %struct.rtx_def** null)
  store %struct.rtx_def** %call505, %struct.rtx_def*** %split, align 8
  %cmp506 = icmp ne %struct.rtx_def** %call505, null
  br i1 %cmp506, label %land.lhs.true.508, label %if.end.554

land.lhs.true.508:                                ; preds = %land.lhs.true.501
  %238 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %239 = load %struct.rtx_def*, %struct.rtx_def** %238, align 8
  %240 = bitcast %struct.rtx_def* %239 to i32*
  %bf.load509 = load i32, i32* %240, align 8
  %bf.clear510 = and i32 %bf.load509, 65535
  %cmp511 = icmp eq i32 %bf.clear510, 103
  br i1 %cmp511, label %land.lhs.true.517, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.508
  %241 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %242 = load %struct.rtx_def*, %struct.rtx_def** %241, align 8
  %243 = bitcast %struct.rtx_def* %242 to i32*
  %bf.load513 = load i32, i32* %243, align 8
  %bf.clear514 = and i32 %bf.load513, 65535
  %cmp515 = icmp eq i32 %bf.clear514, 102
  br i1 %cmp515, label %land.lhs.true.517, label %if.end.554

land.lhs.true.517:                                ; preds = %lor.lhs.false, %land.lhs.true.508
  %244 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %245 = load %struct.rtx_def*, %struct.rtx_def** %244, align 8
  %fld518 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %245, i32 0, i32 1
  %arrayidx519 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld518, i32 0, i64 0
  %rtx520 = bitcast %union.rtunion_def* %arrayidx519 to %struct.rtx_def**
  %246 = load %struct.rtx_def*, %struct.rtx_def** %rtx520, align 8
  %247 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld521 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %247, i32 0, i32 1
  %arrayidx522 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld521, i32 0, i64 0
  %rtx523 = bitcast %union.rtunion_def* %arrayidx522 to %struct.rtx_def**
  %248 = load %struct.rtx_def*, %struct.rtx_def** %rtx523, align 8
  %cmp524 = icmp eq %struct.rtx_def* %246, %248
  br i1 %cmp524, label %land.lhs.true.526, label %if.end.554

land.lhs.true.526:                                ; preds = %land.lhs.true.517
  %249 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %250 = load %struct.rtx_def*, %struct.rtx_def** %249, align 8
  %fld527 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %250, i32 0, i32 1
  %arrayidx528 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld527, i32 0, i64 1
  %rtx529 = bitcast %union.rtunion_def* %arrayidx528 to %struct.rtx_def**
  %251 = load %struct.rtx_def*, %struct.rtx_def** %rtx529, align 8
  %252 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp530 = icmp eq %struct.rtx_def* %251, %252
  br i1 %cmp530, label %if.then.532, label %if.end.554

if.then.532:                                      ; preds = %land.lhs.true.526
  %253 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld533 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %253, i32 0, i32 1
  %arrayidx534 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld533, i32 0, i64 0
  %rtx535 = bitcast %union.rtunion_def* %arrayidx534 to %struct.rtx_def**
  %254 = load %struct.rtx_def*, %struct.rtx_def** %rtx535, align 8
  %255 = bitcast %struct.rtx_def* %254 to i32*
  %bf.load536 = load i32, i32* %255, align 8
  %bf.lshr537 = lshr i32 %bf.load536, 16
  %bf.clear538 = and i32 %bf.lshr537, 255
  %256 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld539 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %256, i32 0, i32 1
  %arrayidx540 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld539, i32 0, i64 1
  %rtx541 = bitcast %union.rtunion_def* %arrayidx540 to %struct.rtx_def**
  %257 = load %struct.rtx_def*, %struct.rtx_def** %rtx541, align 8
  %fld542 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %257, i32 0, i32 1
  %arrayidx543 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld542, i32 0, i64 0
  %rtx544 = bitcast %union.rtunion_def* %arrayidx543 to %struct.rtx_def**
  %258 = load %struct.rtx_def*, %struct.rtx_def** %rtx544, align 8
  %259 = load i64, i64* %pos, align 8
  %call545 = call %struct.rtx_def* @make_extraction(i32 %bf.clear538, %struct.rtx_def* %258, i64 %259, %struct.rtx_def* null, i64 1, i32 1, i32 0, i32 0)
  store %struct.rtx_def* %call545, %struct.rtx_def** %extraction, align 8
  %260 = load %struct.rtx_def*, %struct.rtx_def** %extraction, align 8
  %cmp546 = icmp ne %struct.rtx_def* %260, null
  br i1 %cmp546, label %if.then.548, label %if.end.553

if.then.548:                                      ; preds = %if.then.532
  %261 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld549 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %261, i32 0, i32 1
  %arrayidx550 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld549, i32 0, i64 1
  %rtx551 = bitcast %union.rtunion_def* %arrayidx550 to %struct.rtx_def**
  %262 = load %struct.rtx_def*, %struct.rtx_def** %extraction, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx551, %struct.rtx_def* %262)
  %263 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %264 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call552 = call %struct.rtx_def** @find_split_point(%struct.rtx_def** %263, %struct.rtx_def* %264)
  store %struct.rtx_def** %call552, %struct.rtx_def*** %retval
  br label %return

if.end.553:                                       ; preds = %if.then.532
  br label %if.end.554

if.end.554:                                       ; preds = %if.end.553, %land.lhs.true.526, %land.lhs.true.517, %lor.lhs.false, %land.lhs.true.501, %land.lhs.true.493, %land.lhs.true.479, %land.lhs.true.468, %sw.bb.457
  br label %sw.epilog

sw.bb.555:                                        ; preds = %if.end.451
  br label %sw.epilog

sw.bb.556:                                        ; preds = %if.end.451
  %265 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld557 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %265, i32 0, i32 1
  %arrayidx558 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld557, i32 0, i64 1
  %rtx559 = bitcast %union.rtunion_def* %arrayidx558 to %struct.rtx_def**
  %266 = load %struct.rtx_def*, %struct.rtx_def** %rtx559, align 8
  %fld560 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %266, i32 0, i32 1
  %arrayidx561 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld560, i32 0, i64 0
  %rtx562 = bitcast %union.rtunion_def* %arrayidx561 to %struct.rtx_def**
  %267 = load %struct.rtx_def*, %struct.rtx_def** %rtx562, align 8
  store %struct.rtx_def* %267, %struct.rtx_def** %inner, align 8
  %268 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %269 = bitcast %struct.rtx_def* %268 to i32*
  %bf.load563 = load i32, i32* %269, align 8
  %bf.lshr564 = lshr i32 %bf.load563, 16
  %bf.clear565 = and i32 %bf.lshr564, 255
  %idxprom566 = sext i32 %bf.clear565 to i64
  %arrayidx567 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom566
  %270 = load i32, i32* %arrayidx567, align 4
  %cmp568 = icmp eq i32 %270, 3
  br i1 %cmp568, label %if.then.581, label %lor.lhs.false.570

lor.lhs.false.570:                                ; preds = %sw.bb.556
  %271 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld571 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %271, i32 0, i32 1
  %arrayidx572 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld571, i32 0, i64 1
  %rtx573 = bitcast %union.rtunion_def* %arrayidx572 to %struct.rtx_def**
  %272 = load %struct.rtx_def*, %struct.rtx_def** %rtx573, align 8
  %273 = bitcast %struct.rtx_def* %272 to i32*
  %bf.load574 = load i32, i32* %273, align 8
  %bf.lshr575 = lshr i32 %bf.load574, 16
  %bf.clear576 = and i32 %bf.lshr575, 255
  %idxprom577 = sext i32 %bf.clear576 to i64
  %arrayidx578 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom577
  %274 = load i32, i32* %arrayidx578, align 4
  %cmp579 = icmp eq i32 %274, 3
  br i1 %cmp579, label %if.then.581, label %if.end.582

if.then.581:                                      ; preds = %lor.lhs.false.570, %sw.bb.556
  br label %sw.epilog

if.end.582:                                       ; preds = %lor.lhs.false.570
  store i64 0, i64* %pos, align 8
  %275 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %276 = bitcast %struct.rtx_def* %275 to i32*
  %bf.load583 = load i32, i32* %276, align 8
  %bf.lshr584 = lshr i32 %bf.load583, 16
  %bf.clear585 = and i32 %bf.lshr584, 255
  %idxprom586 = sext i32 %bf.clear585 to i64
  %arrayidx587 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom586
  %277 = load i16, i16* %arrayidx587, align 2
  %conv588 = zext i16 %277 to i64
  store i64 %conv588, i64* %len, align 8
  store i32 0, i32* %unsignedp, align 4
  br label %sw.epilog

sw.bb.589:                                        ; preds = %if.end.451, %if.end.451
  %278 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld590 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %278, i32 0, i32 1
  %arrayidx591 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld590, i32 0, i64 1
  %rtx592 = bitcast %union.rtunion_def* %arrayidx591 to %struct.rtx_def**
  %279 = load %struct.rtx_def*, %struct.rtx_def** %rtx592, align 8
  %fld593 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %279, i32 0, i32 1
  %arrayidx594 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld593, i32 0, i64 1
  %rtx595 = bitcast %union.rtunion_def* %arrayidx594 to %struct.rtx_def**
  %280 = load %struct.rtx_def*, %struct.rtx_def** %rtx595, align 8
  %281 = bitcast %struct.rtx_def* %280 to i32*
  %bf.load596 = load i32, i32* %281, align 8
  %bf.clear597 = and i32 %bf.load596, 65535
  %cmp598 = icmp eq i32 %bf.clear597, 54
  br i1 %cmp598, label %land.lhs.true.600, label %if.end.638

land.lhs.true.600:                                ; preds = %sw.bb.589
  %282 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld601 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %282, i32 0, i32 1
  %arrayidx602 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld601, i32 0, i64 1
  %rtx603 = bitcast %union.rtunion_def* %arrayidx602 to %struct.rtx_def**
  %283 = load %struct.rtx_def*, %struct.rtx_def** %rtx603, align 8
  %fld604 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %283, i32 0, i32 1
  %arrayidx605 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld604, i32 0, i64 2
  %rtx606 = bitcast %union.rtunion_def* %arrayidx605 to %struct.rtx_def**
  %284 = load %struct.rtx_def*, %struct.rtx_def** %rtx606, align 8
  %285 = bitcast %struct.rtx_def* %284 to i32*
  %bf.load607 = load i32, i32* %285, align 8
  %bf.clear608 = and i32 %bf.load607, 65535
  %cmp609 = icmp eq i32 %bf.clear608, 54
  br i1 %cmp609, label %if.then.611, label %if.end.638

if.then.611:                                      ; preds = %land.lhs.true.600
  %286 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld612 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %286, i32 0, i32 1
  %arrayidx613 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld612, i32 0, i64 1
  %rtx614 = bitcast %union.rtunion_def* %arrayidx613 to %struct.rtx_def**
  %287 = load %struct.rtx_def*, %struct.rtx_def** %rtx614, align 8
  %fld615 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %287, i32 0, i32 1
  %arrayidx616 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld615, i32 0, i64 0
  %rtx617 = bitcast %union.rtunion_def* %arrayidx616 to %struct.rtx_def**
  %288 = load %struct.rtx_def*, %struct.rtx_def** %rtx617, align 8
  store %struct.rtx_def* %288, %struct.rtx_def** %inner, align 8
  %289 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld618 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %289, i32 0, i32 1
  %arrayidx619 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld618, i32 0, i64 1
  %rtx620 = bitcast %union.rtunion_def* %arrayidx619 to %struct.rtx_def**
  %290 = load %struct.rtx_def*, %struct.rtx_def** %rtx620, align 8
  %fld621 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %290, i32 0, i32 1
  %arrayidx622 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld621, i32 0, i64 1
  %rtx623 = bitcast %union.rtunion_def* %arrayidx622 to %struct.rtx_def**
  %291 = load %struct.rtx_def*, %struct.rtx_def** %rtx623, align 8
  %fld624 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %291, i32 0, i32 1
  %arrayidx625 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld624, i32 0, i64 0
  %rtwint626 = bitcast %union.rtunion_def* %arrayidx625 to i64*
  %292 = load i64, i64* %rtwint626, align 8
  store i64 %292, i64* %len, align 8
  %293 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld627 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %293, i32 0, i32 1
  %arrayidx628 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld627, i32 0, i64 1
  %rtx629 = bitcast %union.rtunion_def* %arrayidx628 to %struct.rtx_def**
  %294 = load %struct.rtx_def*, %struct.rtx_def** %rtx629, align 8
  %fld630 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %294, i32 0, i32 1
  %arrayidx631 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld630, i32 0, i64 2
  %rtx632 = bitcast %union.rtunion_def* %arrayidx631 to %struct.rtx_def**
  %295 = load %struct.rtx_def*, %struct.rtx_def** %rtx632, align 8
  %fld633 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %295, i32 0, i32 1
  %arrayidx634 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld633, i32 0, i64 0
  %rtwint635 = bitcast %union.rtunion_def* %arrayidx634 to i64*
  %296 = load i64, i64* %rtwint635, align 8
  store i64 %296, i64* %pos, align 8
  %297 = load i32, i32* %code, align 4
  %cmp636 = icmp eq i32 %297, 133
  %conv637 = zext i1 %cmp636 to i32
  store i32 %conv637, i32* %unsignedp, align 4
  br label %if.end.638

if.end.638:                                       ; preds = %if.then.611, %land.lhs.true.600, %sw.bb.589
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.451
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.638, %if.end.582, %if.then.581, %sw.bb.555, %if.end.554
  %298 = load i64, i64* %len, align 8
  %tobool639 = icmp ne i64 %298, 0
  br i1 %tobool639, label %land.lhs.true.640, label %if.end.722

land.lhs.true.640:                                ; preds = %sw.epilog
  %299 = load i64, i64* %pos, align 8
  %cmp641 = icmp sge i64 %299, 0
  br i1 %cmp641, label %land.lhs.true.643, label %if.end.722

land.lhs.true.643:                                ; preds = %land.lhs.true.640
  %300 = load i64, i64* %pos, align 8
  %301 = load i64, i64* %len, align 8
  %add644 = add i64 %300, %301
  %302 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %303 = bitcast %struct.rtx_def* %302 to i32*
  %bf.load645 = load i32, i32* %303, align 8
  %bf.lshr646 = lshr i32 %bf.load645, 16
  %bf.clear647 = and i32 %bf.lshr646, 255
  %idxprom648 = sext i32 %bf.clear647 to i64
  %arrayidx649 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom648
  %304 = load i16, i16* %arrayidx649, align 2
  %conv650 = zext i16 %304 to i64
  %cmp651 = icmp ule i64 %add644, %conv650
  br i1 %cmp651, label %if.then.653, label %if.end.722

if.then.653:                                      ; preds = %land.lhs.true.643
  %305 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld655 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %305, i32 0, i32 1
  %arrayidx656 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld655, i32 0, i64 1
  %rtx657 = bitcast %union.rtunion_def* %arrayidx656 to %struct.rtx_def**
  %306 = load %struct.rtx_def*, %struct.rtx_def** %rtx657, align 8
  %307 = bitcast %struct.rtx_def* %306 to i32*
  %bf.load658 = load i32, i32* %307, align 8
  %bf.lshr659 = lshr i32 %bf.load658, 16
  %bf.clear660 = and i32 %bf.lshr659, 255
  store i32 %bf.clear660, i32* %mode654, align 4
  %308 = load i32, i32* %unsignedp, align 4
  %tobool661 = icmp ne i32 %308, 0
  br i1 %tobool661, label %land.lhs.true.662, label %if.else.689

land.lhs.true.662:                                ; preds = %if.then.653
  %309 = load i64, i64* %len, align 8
  %cmp663 = icmp ule i64 %309, 8
  br i1 %cmp663, label %if.then.665, label %if.else.689

if.then.665:                                      ; preds = %land.lhs.true.662
  %310 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld666 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %310, i32 0, i32 1
  %arrayidx667 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld666, i32 0, i64 1
  %rtx668 = bitcast %union.rtunion_def* %arrayidx667 to %struct.rtx_def**
  %311 = load i32, i32* %mode654, align 4
  %312 = load i32, i32* %mode654, align 4
  %313 = load i32, i32* %mode654, align 4
  %314 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %call669 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %313, %struct.rtx_def* %314)
  %315 = load i64, i64* %pos, align 8
  %call670 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %315)
  %call671 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 90, i32 %312, %struct.rtx_def* %call669, %struct.rtx_def* %call670)
  %316 = load i64, i64* %len, align 8
  %shl672 = shl i64 1, %316
  %sub673 = sub nsw i64 %shl672, 1
  %call674 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub673)
  %call675 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 %311, %struct.rtx_def* %call671, %struct.rtx_def* %call674)
  call void @do_SUBST(%struct.rtx_def** %rtx668, %struct.rtx_def* %call675)
  %317 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld676 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %317, i32 0, i32 1
  %arrayidx677 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld676, i32 0, i64 1
  %rtx678 = bitcast %union.rtunion_def* %arrayidx677 to %struct.rtx_def**
  %318 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call679 = call %struct.rtx_def** @find_split_point(%struct.rtx_def** %rtx678, %struct.rtx_def* %318)
  store %struct.rtx_def** %call679, %struct.rtx_def*** %split, align 8
  %319 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %tobool680 = icmp ne %struct.rtx_def** %319, null
  br i1 %tobool680, label %land.lhs.true.681, label %if.end.688

land.lhs.true.681:                                ; preds = %if.then.665
  %320 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %321 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld682 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %321, i32 0, i32 1
  %arrayidx683 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld682, i32 0, i64 1
  %rtx684 = bitcast %union.rtunion_def* %arrayidx683 to %struct.rtx_def**
  %cmp685 = icmp ne %struct.rtx_def** %320, %rtx684
  br i1 %cmp685, label %if.then.687, label %if.end.688

if.then.687:                                      ; preds = %land.lhs.true.681
  %322 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  store %struct.rtx_def** %322, %struct.rtx_def*** %retval
  br label %return

if.end.688:                                       ; preds = %land.lhs.true.681, %if.then.665
  br label %if.end.721

if.else.689:                                      ; preds = %land.lhs.true.662, %if.then.653
  %323 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld690 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %323, i32 0, i32 1
  %arrayidx691 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld690, i32 0, i64 1
  %rtx692 = bitcast %union.rtunion_def* %arrayidx691 to %struct.rtx_def**
  %324 = load i32, i32* %unsignedp, align 4
  %tobool693 = icmp ne i32 %324, 0
  %cond = select i1 %tobool693, i32 90, i32 89
  %325 = load i32, i32* %mode654, align 4
  %326 = load i32, i32* %mode654, align 4
  %327 = load i32, i32* %mode654, align 4
  %328 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %call694 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %327, %struct.rtx_def* %328)
  %329 = load i32, i32* %mode654, align 4
  %idxprom695 = sext i32 %329 to i64
  %arrayidx696 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom695
  %330 = load i16, i16* %arrayidx696, align 2
  %conv697 = zext i16 %330 to i64
  %331 = load i64, i64* %len, align 8
  %sub698 = sub i64 %conv697, %331
  %332 = load i64, i64* %pos, align 8
  %sub699 = sub i64 %sub698, %332
  %call700 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub699)
  %call701 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 %326, %struct.rtx_def* %call694, %struct.rtx_def* %call700)
  %333 = load i32, i32* %mode654, align 4
  %idxprom702 = sext i32 %333 to i64
  %arrayidx703 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom702
  %334 = load i16, i16* %arrayidx703, align 2
  %conv704 = zext i16 %334 to i64
  %335 = load i64, i64* %len, align 8
  %sub705 = sub i64 %conv704, %335
  %call706 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub705)
  %call707 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %cond, i32 %325, %struct.rtx_def* %call701, %struct.rtx_def* %call706)
  call void @do_SUBST(%struct.rtx_def** %rtx692, %struct.rtx_def* %call707)
  %336 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld708 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %336, i32 0, i32 1
  %arrayidx709 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld708, i32 0, i64 1
  %rtx710 = bitcast %union.rtunion_def* %arrayidx709 to %struct.rtx_def**
  %337 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call711 = call %struct.rtx_def** @find_split_point(%struct.rtx_def** %rtx710, %struct.rtx_def* %337)
  store %struct.rtx_def** %call711, %struct.rtx_def*** %split, align 8
  %338 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %tobool712 = icmp ne %struct.rtx_def** %338, null
  br i1 %tobool712, label %land.lhs.true.713, label %if.end.720

land.lhs.true.713:                                ; preds = %if.else.689
  %339 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %340 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld714 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %340, i32 0, i32 1
  %arrayidx715 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld714, i32 0, i64 1
  %rtx716 = bitcast %union.rtunion_def* %arrayidx715 to %struct.rtx_def**
  %cmp717 = icmp ne %struct.rtx_def** %339, %rtx716
  br i1 %cmp717, label %if.then.719, label %if.end.720

if.then.719:                                      ; preds = %land.lhs.true.713
  %341 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  store %struct.rtx_def** %341, %struct.rtx_def*** %retval
  br label %return

if.end.720:                                       ; preds = %land.lhs.true.713, %if.else.689
  br label %if.end.721

if.end.721:                                       ; preds = %if.end.720, %if.end.688
  br label %if.end.722

if.end.722:                                       ; preds = %if.end.721, %land.lhs.true.643, %land.lhs.true.640, %sw.epilog
  %342 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld723 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %342, i32 0, i32 1
  %arrayidx724 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld723, i32 0, i64 1
  %rtx725 = bitcast %union.rtunion_def* %arrayidx724 to %struct.rtx_def**
  %343 = load %struct.rtx_def*, %struct.rtx_def** %rtx725, align 8
  %344 = bitcast %struct.rtx_def* %343 to i32*
  %bf.load726 = load i32, i32* %344, align 8
  %bf.clear727 = and i32 %bf.load726, 65535
  %idxprom728 = sext i32 %bf.clear727 to i64
  %arrayidx729 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom728
  %345 = load i8, i8* %arrayidx729, align 1
  %conv730 = sext i8 %345 to i32
  %cmp731 = icmp eq i32 %conv730, 50
  br i1 %cmp731, label %land.lhs.true.755, label %lor.lhs.false.733

lor.lhs.false.733:                                ; preds = %if.end.722
  %346 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld734 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %346, i32 0, i32 1
  %arrayidx735 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld734, i32 0, i64 1
  %rtx736 = bitcast %union.rtunion_def* %arrayidx735 to %struct.rtx_def**
  %347 = load %struct.rtx_def*, %struct.rtx_def** %rtx736, align 8
  %348 = bitcast %struct.rtx_def* %347 to i32*
  %bf.load737 = load i32, i32* %348, align 8
  %bf.clear738 = and i32 %bf.load737, 65535
  %idxprom739 = sext i32 %bf.clear738 to i64
  %arrayidx740 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom739
  %349 = load i8, i8* %arrayidx740, align 1
  %conv741 = sext i8 %349 to i32
  %cmp742 = icmp eq i32 %conv741, 99
  br i1 %cmp742, label %land.lhs.true.755, label %lor.lhs.false.744

lor.lhs.false.744:                                ; preds = %lor.lhs.false.733
  %350 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld745 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %350, i32 0, i32 1
  %arrayidx746 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld745, i32 0, i64 1
  %rtx747 = bitcast %union.rtunion_def* %arrayidx746 to %struct.rtx_def**
  %351 = load %struct.rtx_def*, %struct.rtx_def** %rtx747, align 8
  %352 = bitcast %struct.rtx_def* %351 to i32*
  %bf.load748 = load i32, i32* %352, align 8
  %bf.clear749 = and i32 %bf.load748, 65535
  %idxprom750 = sext i32 %bf.clear749 to i64
  %arrayidx751 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom750
  %353 = load i8, i8* %arrayidx751, align 1
  %conv752 = sext i8 %353 to i32
  %cmp753 = icmp eq i32 %conv752, 60
  br i1 %cmp753, label %land.lhs.true.755, label %if.end.892

land.lhs.true.755:                                ; preds = %lor.lhs.false.744, %lor.lhs.false.733, %if.end.722
  %354 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld756 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %354, i32 0, i32 1
  %arrayidx757 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld756, i32 0, i64 1
  %rtx758 = bitcast %union.rtunion_def* %arrayidx757 to %struct.rtx_def**
  %355 = load %struct.rtx_def*, %struct.rtx_def** %rtx758, align 8
  %fld759 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %355, i32 0, i32 1
  %arrayidx760 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld759, i32 0, i64 1
  %rtx761 = bitcast %union.rtunion_def* %arrayidx760 to %struct.rtx_def**
  %356 = load %struct.rtx_def*, %struct.rtx_def** %rtx761, align 8
  %357 = bitcast %struct.rtx_def* %356 to i32*
  %bf.load762 = load i32, i32* %357, align 8
  %bf.clear763 = and i32 %bf.load762, 65535
  %cmp764 = icmp eq i32 %bf.clear763, 67
  br i1 %cmp764, label %land.lhs.true.843, label %lor.lhs.false.766

lor.lhs.false.766:                                ; preds = %land.lhs.true.755
  %358 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld767 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %358, i32 0, i32 1
  %arrayidx768 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld767, i32 0, i64 1
  %rtx769 = bitcast %union.rtunion_def* %arrayidx768 to %struct.rtx_def**
  %359 = load %struct.rtx_def*, %struct.rtx_def** %rtx769, align 8
  %fld770 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %359, i32 0, i32 1
  %arrayidx771 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld770, i32 0, i64 1
  %rtx772 = bitcast %union.rtunion_def* %arrayidx771 to %struct.rtx_def**
  %360 = load %struct.rtx_def*, %struct.rtx_def** %rtx772, align 8
  %361 = bitcast %struct.rtx_def* %360 to i32*
  %bf.load773 = load i32, i32* %361, align 8
  %bf.clear774 = and i32 %bf.load773, 65535
  %cmp775 = icmp eq i32 %bf.clear774, 68
  br i1 %cmp775, label %land.lhs.true.843, label %lor.lhs.false.777

lor.lhs.false.777:                                ; preds = %lor.lhs.false.766
  %362 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld778 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %362, i32 0, i32 1
  %arrayidx779 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld778, i32 0, i64 1
  %rtx780 = bitcast %union.rtunion_def* %arrayidx779 to %struct.rtx_def**
  %363 = load %struct.rtx_def*, %struct.rtx_def** %rtx780, align 8
  %fld781 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %363, i32 0, i32 1
  %arrayidx782 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld781, i32 0, i64 1
  %rtx783 = bitcast %union.rtunion_def* %arrayidx782 to %struct.rtx_def**
  %364 = load %struct.rtx_def*, %struct.rtx_def** %rtx783, align 8
  %365 = bitcast %struct.rtx_def* %364 to i32*
  %bf.load784 = load i32, i32* %365, align 8
  %bf.clear785 = and i32 %bf.load784, 65535
  %cmp786 = icmp eq i32 %bf.clear785, 54
  br i1 %cmp786, label %land.lhs.true.843, label %lor.lhs.false.788

lor.lhs.false.788:                                ; preds = %lor.lhs.false.777
  %366 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld789 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %366, i32 0, i32 1
  %arrayidx790 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld789, i32 0, i64 1
  %rtx791 = bitcast %union.rtunion_def* %arrayidx790 to %struct.rtx_def**
  %367 = load %struct.rtx_def*, %struct.rtx_def** %rtx791, align 8
  %fld792 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %367, i32 0, i32 1
  %arrayidx793 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld792, i32 0, i64 1
  %rtx794 = bitcast %union.rtunion_def* %arrayidx793 to %struct.rtx_def**
  %368 = load %struct.rtx_def*, %struct.rtx_def** %rtx794, align 8
  %369 = bitcast %struct.rtx_def* %368 to i32*
  %bf.load795 = load i32, i32* %369, align 8
  %bf.clear796 = and i32 %bf.load795, 65535
  %cmp797 = icmp eq i32 %bf.clear796, 55
  br i1 %cmp797, label %land.lhs.true.843, label %lor.lhs.false.799

lor.lhs.false.799:                                ; preds = %lor.lhs.false.788
  %370 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld800 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %370, i32 0, i32 1
  %arrayidx801 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld800, i32 0, i64 1
  %rtx802 = bitcast %union.rtunion_def* %arrayidx801 to %struct.rtx_def**
  %371 = load %struct.rtx_def*, %struct.rtx_def** %rtx802, align 8
  %fld803 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %371, i32 0, i32 1
  %arrayidx804 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld803, i32 0, i64 1
  %rtx805 = bitcast %union.rtunion_def* %arrayidx804 to %struct.rtx_def**
  %372 = load %struct.rtx_def*, %struct.rtx_def** %rtx805, align 8
  %373 = bitcast %struct.rtx_def* %372 to i32*
  %bf.load806 = load i32, i32* %373, align 8
  %bf.clear807 = and i32 %bf.load806, 65535
  %cmp808 = icmp eq i32 %bf.clear807, 58
  br i1 %cmp808, label %land.lhs.true.843, label %lor.lhs.false.810

lor.lhs.false.810:                                ; preds = %lor.lhs.false.799
  %374 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld811 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %374, i32 0, i32 1
  %arrayidx812 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld811, i32 0, i64 1
  %rtx813 = bitcast %union.rtunion_def* %arrayidx812 to %struct.rtx_def**
  %375 = load %struct.rtx_def*, %struct.rtx_def** %rtx813, align 8
  %fld814 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %375, i32 0, i32 1
  %arrayidx815 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld814, i32 0, i64 1
  %rtx816 = bitcast %union.rtunion_def* %arrayidx815 to %struct.rtx_def**
  %376 = load %struct.rtx_def*, %struct.rtx_def** %rtx816, align 8
  %377 = bitcast %struct.rtx_def* %376 to i32*
  %bf.load817 = load i32, i32* %377, align 8
  %bf.clear818 = and i32 %bf.load817, 65535
  %cmp819 = icmp eq i32 %bf.clear818, 134
  br i1 %cmp819, label %land.lhs.true.843, label %lor.lhs.false.821

lor.lhs.false.821:                                ; preds = %lor.lhs.false.810
  %378 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld822 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %378, i32 0, i32 1
  %arrayidx823 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld822, i32 0, i64 1
  %rtx824 = bitcast %union.rtunion_def* %arrayidx823 to %struct.rtx_def**
  %379 = load %struct.rtx_def*, %struct.rtx_def** %rtx824, align 8
  %fld825 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %379, i32 0, i32 1
  %arrayidx826 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld825, i32 0, i64 1
  %rtx827 = bitcast %union.rtunion_def* %arrayidx826 to %struct.rtx_def**
  %380 = load %struct.rtx_def*, %struct.rtx_def** %rtx827, align 8
  %381 = bitcast %struct.rtx_def* %380 to i32*
  %bf.load828 = load i32, i32* %381, align 8
  %bf.clear829 = and i32 %bf.load828, 65535
  %cmp830 = icmp eq i32 %bf.clear829, 56
  br i1 %cmp830, label %land.lhs.true.843, label %lor.lhs.false.832

lor.lhs.false.832:                                ; preds = %lor.lhs.false.821
  %382 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld833 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %382, i32 0, i32 1
  %arrayidx834 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld833, i32 0, i64 1
  %rtx835 = bitcast %union.rtunion_def* %arrayidx834 to %struct.rtx_def**
  %383 = load %struct.rtx_def*, %struct.rtx_def** %rtx835, align 8
  %fld836 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %383, i32 0, i32 1
  %arrayidx837 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld836, i32 0, i64 1
  %rtx838 = bitcast %union.rtunion_def* %arrayidx837 to %struct.rtx_def**
  %384 = load %struct.rtx_def*, %struct.rtx_def** %rtx838, align 8
  %385 = bitcast %struct.rtx_def* %384 to i32*
  %bf.load839 = load i32, i32* %385, align 8
  %bf.clear840 = and i32 %bf.load839, 65535
  %cmp841 = icmp eq i32 %bf.clear840, 140
  br i1 %cmp841, label %land.lhs.true.843, label %if.end.892

land.lhs.true.843:                                ; preds = %lor.lhs.false.832, %lor.lhs.false.821, %lor.lhs.false.810, %lor.lhs.false.799, %lor.lhs.false.788, %lor.lhs.false.777, %lor.lhs.false.766, %land.lhs.true.755
  %386 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld844 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %386, i32 0, i32 1
  %arrayidx845 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld844, i32 0, i64 1
  %rtx846 = bitcast %union.rtunion_def* %arrayidx845 to %struct.rtx_def**
  %387 = load %struct.rtx_def*, %struct.rtx_def** %rtx846, align 8
  %fld847 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %387, i32 0, i32 1
  %arrayidx848 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld847, i32 0, i64 0
  %rtx849 = bitcast %union.rtunion_def* %arrayidx848 to %struct.rtx_def**
  %388 = load %struct.rtx_def*, %struct.rtx_def** %rtx849, align 8
  %389 = bitcast %struct.rtx_def* %388 to i32*
  %bf.load850 = load i32, i32* %389, align 8
  %bf.clear851 = and i32 %bf.load850, 65535
  %idxprom852 = sext i32 %bf.clear851 to i64
  %arrayidx853 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom852
  %390 = load i8, i8* %arrayidx853, align 1
  %conv854 = sext i8 %390 to i32
  %cmp855 = icmp eq i32 %conv854, 111
  br i1 %cmp855, label %if.then.885, label %lor.lhs.false.857

lor.lhs.false.857:                                ; preds = %land.lhs.true.843
  %391 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld858 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %391, i32 0, i32 1
  %arrayidx859 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld858, i32 0, i64 1
  %rtx860 = bitcast %union.rtunion_def* %arrayidx859 to %struct.rtx_def**
  %392 = load %struct.rtx_def*, %struct.rtx_def** %rtx860, align 8
  %fld861 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %392, i32 0, i32 1
  %arrayidx862 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld861, i32 0, i64 0
  %rtx863 = bitcast %union.rtunion_def* %arrayidx862 to %struct.rtx_def**
  %393 = load %struct.rtx_def*, %struct.rtx_def** %rtx863, align 8
  %394 = bitcast %struct.rtx_def* %393 to i32*
  %bf.load864 = load i32, i32* %394, align 8
  %bf.clear865 = and i32 %bf.load864, 65535
  %cmp866 = icmp eq i32 %bf.clear865, 63
  br i1 %cmp866, label %land.lhs.true.868, label %if.end.892

land.lhs.true.868:                                ; preds = %lor.lhs.false.857
  %395 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld869 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %395, i32 0, i32 1
  %arrayidx870 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld869, i32 0, i64 1
  %rtx871 = bitcast %union.rtunion_def* %arrayidx870 to %struct.rtx_def**
  %396 = load %struct.rtx_def*, %struct.rtx_def** %rtx871, align 8
  %fld872 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %396, i32 0, i32 1
  %arrayidx873 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld872, i32 0, i64 0
  %rtx874 = bitcast %union.rtunion_def* %arrayidx873 to %struct.rtx_def**
  %397 = load %struct.rtx_def*, %struct.rtx_def** %rtx874, align 8
  %fld875 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %397, i32 0, i32 1
  %arrayidx876 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld875, i32 0, i64 0
  %rtx877 = bitcast %union.rtunion_def* %arrayidx876 to %struct.rtx_def**
  %398 = load %struct.rtx_def*, %struct.rtx_def** %rtx877, align 8
  %399 = bitcast %struct.rtx_def* %398 to i32*
  %bf.load878 = load i32, i32* %399, align 8
  %bf.clear879 = and i32 %bf.load878, 65535
  %idxprom880 = sext i32 %bf.clear879 to i64
  %arrayidx881 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom880
  %400 = load i8, i8* %arrayidx881, align 1
  %conv882 = sext i8 %400 to i32
  %cmp883 = icmp eq i32 %conv882, 111
  br i1 %cmp883, label %if.then.885, label %if.end.892

if.then.885:                                      ; preds = %land.lhs.true.868, %land.lhs.true.843
  %401 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld886 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %401, i32 0, i32 1
  %arrayidx887 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld886, i32 0, i64 1
  %rtx888 = bitcast %union.rtunion_def* %arrayidx887 to %struct.rtx_def**
  %402 = load %struct.rtx_def*, %struct.rtx_def** %rtx888, align 8
  %fld889 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %402, i32 0, i32 1
  %arrayidx890 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld889, i32 0, i64 1
  %rtx891 = bitcast %union.rtunion_def* %arrayidx890 to %struct.rtx_def**
  store %struct.rtx_def** %rtx891, %struct.rtx_def*** %retval
  br label %return

if.end.892:                                       ; preds = %land.lhs.true.868, %lor.lhs.false.857, %lor.lhs.false.832, %lor.lhs.false.744
  %403 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld893 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %403, i32 0, i32 1
  %arrayidx894 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld893, i32 0, i64 1
  %rtx895 = bitcast %union.rtunion_def* %arrayidx894 to %struct.rtx_def**
  %404 = load %struct.rtx_def*, %struct.rtx_def** %rtx895, align 8
  %405 = bitcast %struct.rtx_def* %404 to i32*
  %bf.load896 = load i32, i32* %405, align 8
  %bf.clear897 = and i32 %bf.load896, 65535
  %idxprom898 = sext i32 %bf.clear897 to i64
  %arrayidx899 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom898
  %406 = load i8, i8* %arrayidx899, align 1
  %conv900 = sext i8 %406 to i32
  %cmp901 = icmp eq i32 %conv900, 50
  br i1 %cmp901, label %land.lhs.true.936, label %lor.lhs.false.903

lor.lhs.false.903:                                ; preds = %if.end.892
  %407 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld904 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %407, i32 0, i32 1
  %arrayidx905 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld904, i32 0, i64 1
  %rtx906 = bitcast %union.rtunion_def* %arrayidx905 to %struct.rtx_def**
  %408 = load %struct.rtx_def*, %struct.rtx_def** %rtx906, align 8
  %409 = bitcast %struct.rtx_def* %408 to i32*
  %bf.load907 = load i32, i32* %409, align 8
  %bf.clear908 = and i32 %bf.load907, 65535
  %idxprom909 = sext i32 %bf.clear908 to i64
  %arrayidx910 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom909
  %410 = load i8, i8* %arrayidx910, align 1
  %conv911 = sext i8 %410 to i32
  %cmp912 = icmp eq i32 %conv911, 99
  br i1 %cmp912, label %land.lhs.true.936, label %lor.lhs.false.914

lor.lhs.false.914:                                ; preds = %lor.lhs.false.903
  %411 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld915 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %411, i32 0, i32 1
  %arrayidx916 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld915, i32 0, i64 1
  %rtx917 = bitcast %union.rtunion_def* %arrayidx916 to %struct.rtx_def**
  %412 = load %struct.rtx_def*, %struct.rtx_def** %rtx917, align 8
  %413 = bitcast %struct.rtx_def* %412 to i32*
  %bf.load918 = load i32, i32* %413, align 8
  %bf.clear919 = and i32 %bf.load918, 65535
  %idxprom920 = sext i32 %bf.clear919 to i64
  %arrayidx921 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom920
  %414 = load i8, i8* %arrayidx921, align 1
  %conv922 = sext i8 %414 to i32
  %cmp923 = icmp eq i32 %conv922, 60
  br i1 %cmp923, label %land.lhs.true.936, label %lor.lhs.false.925

lor.lhs.false.925:                                ; preds = %lor.lhs.false.914
  %415 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld926 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %415, i32 0, i32 1
  %arrayidx927 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld926, i32 0, i64 1
  %rtx928 = bitcast %union.rtunion_def* %arrayidx927 to %struct.rtx_def**
  %416 = load %struct.rtx_def*, %struct.rtx_def** %rtx928, align 8
  %417 = bitcast %struct.rtx_def* %416 to i32*
  %bf.load929 = load i32, i32* %417, align 8
  %bf.clear930 = and i32 %bf.load929, 65535
  %idxprom931 = sext i32 %bf.clear930 to i64
  %arrayidx932 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom931
  %418 = load i8, i8* %arrayidx932, align 1
  %conv933 = sext i8 %418 to i32
  %cmp934 = icmp eq i32 %conv933, 49
  br i1 %cmp934, label %land.lhs.true.936, label %if.end.952

land.lhs.true.936:                                ; preds = %lor.lhs.false.925, %lor.lhs.false.914, %lor.lhs.false.903, %if.end.892
  %419 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld937 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %419, i32 0, i32 1
  %arrayidx938 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld937, i32 0, i64 1
  %rtx939 = bitcast %union.rtunion_def* %arrayidx938 to %struct.rtx_def**
  %420 = load %struct.rtx_def*, %struct.rtx_def** %rtx939, align 8
  %fld940 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %420, i32 0, i32 1
  %arrayidx941 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld940, i32 0, i64 0
  %rtx942 = bitcast %union.rtunion_def* %arrayidx941 to %struct.rtx_def**
  %421 = load %struct.rtx_def*, %struct.rtx_def** %rtx942, align 8
  %call943 = call i32 @register_operand(%struct.rtx_def* %421, i32 0)
  %tobool944 = icmp ne i32 %call943, 0
  br i1 %tobool944, label %if.end.952, label %if.then.945

if.then.945:                                      ; preds = %land.lhs.true.936
  %422 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld946 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %422, i32 0, i32 1
  %arrayidx947 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld946, i32 0, i64 1
  %rtx948 = bitcast %union.rtunion_def* %arrayidx947 to %struct.rtx_def**
  %423 = load %struct.rtx_def*, %struct.rtx_def** %rtx948, align 8
  %fld949 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %423, i32 0, i32 1
  %arrayidx950 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld949, i32 0, i64 0
  %rtx951 = bitcast %union.rtunion_def* %arrayidx950 to %struct.rtx_def**
  store %struct.rtx_def** %rtx951, %struct.rtx_def*** %retval
  br label %return

if.end.952:                                       ; preds = %land.lhs.true.936, %lor.lhs.false.925
  store %struct.rtx_def** null, %struct.rtx_def*** %retval
  br label %return

sw.bb.953:                                        ; preds = %entry, %entry
  %424 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld954 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %424, i32 0, i32 1
  %arrayidx955 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld954, i32 0, i64 0
  %rtx956 = bitcast %union.rtunion_def* %arrayidx955 to %struct.rtx_def**
  %425 = load %struct.rtx_def*, %struct.rtx_def** %rtx956, align 8
  %426 = bitcast %struct.rtx_def* %425 to i32*
  %bf.load957 = load i32, i32* %426, align 8
  %bf.clear958 = and i32 %bf.load957, 65535
  %cmp959 = icmp eq i32 %bf.clear958, 86
  br i1 %cmp959, label %land.lhs.true.961, label %if.end.994

land.lhs.true.961:                                ; preds = %sw.bb.953
  %427 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld962 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %427, i32 0, i32 1
  %arrayidx963 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld962, i32 0, i64 1
  %rtx964 = bitcast %union.rtunion_def* %arrayidx963 to %struct.rtx_def**
  %428 = load %struct.rtx_def*, %struct.rtx_def** %rtx964, align 8
  %429 = bitcast %struct.rtx_def* %428 to i32*
  %bf.load965 = load i32, i32* %429, align 8
  %bf.clear966 = and i32 %bf.load965, 65535
  %cmp967 = icmp eq i32 %bf.clear966, 86
  br i1 %cmp967, label %if.then.969, label %if.end.994

if.then.969:                                      ; preds = %land.lhs.true.961
  %430 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %431 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %432 = bitcast %struct.rtx_def* %431 to i32*
  %bf.load970 = load i32, i32* %432, align 8
  %bf.lshr971 = lshr i32 %bf.load970, 16
  %bf.clear972 = and i32 %bf.lshr971, 255
  %433 = load i32, i32* %code, align 4
  %cmp973 = icmp eq i32 %433, 84
  %cond975 = select i1 %cmp973, i32 83, i32 84
  %434 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %435 = bitcast %struct.rtx_def* %434 to i32*
  %bf.load976 = load i32, i32* %435, align 8
  %bf.lshr977 = lshr i32 %bf.load976, 16
  %bf.clear978 = and i32 %bf.lshr977, 255
  %436 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld979 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %436, i32 0, i32 1
  %arrayidx980 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld979, i32 0, i64 0
  %rtx981 = bitcast %union.rtunion_def* %arrayidx980 to %struct.rtx_def**
  %437 = load %struct.rtx_def*, %struct.rtx_def** %rtx981, align 8
  %fld982 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %437, i32 0, i32 1
  %arrayidx983 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld982, i32 0, i64 0
  %rtx984 = bitcast %union.rtunion_def* %arrayidx983 to %struct.rtx_def**
  %438 = load %struct.rtx_def*, %struct.rtx_def** %rtx984, align 8
  %439 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld985 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %439, i32 0, i32 1
  %arrayidx986 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld985, i32 0, i64 1
  %rtx987 = bitcast %union.rtunion_def* %arrayidx986 to %struct.rtx_def**
  %440 = load %struct.rtx_def*, %struct.rtx_def** %rtx987, align 8
  %fld988 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %440, i32 0, i32 1
  %arrayidx989 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld988, i32 0, i64 0
  %rtx990 = bitcast %union.rtunion_def* %arrayidx989 to %struct.rtx_def**
  %441 = load %struct.rtx_def*, %struct.rtx_def** %rtx990, align 8
  %call991 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %cond975, i32 %bf.clear978, %struct.rtx_def* %438, %struct.rtx_def* %441)
  %call992 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 86, i32 %bf.clear972, %struct.rtx_def* %call991)
  call void @do_SUBST(%struct.rtx_def** %430, %struct.rtx_def* %call992)
  %442 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %443 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call993 = call %struct.rtx_def** @find_split_point(%struct.rtx_def** %442, %struct.rtx_def* %443)
  store %struct.rtx_def** %call993, %struct.rtx_def*** %retval
  br label %return

if.end.994:                                       ; preds = %land.lhs.true.961, %sw.bb.953
  %444 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld995 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %444, i32 0, i32 1
  %arrayidx996 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld995, i32 0, i64 1
  %rtx997 = bitcast %union.rtunion_def* %arrayidx996 to %struct.rtx_def**
  %445 = load %struct.rtx_def*, %struct.rtx_def** %rtx997, align 8
  %446 = bitcast %struct.rtx_def* %445 to i32*
  %bf.load998 = load i32, i32* %446, align 8
  %bf.clear999 = and i32 %bf.load998, 65535
  %cmp1000 = icmp eq i32 %bf.clear999, 86
  br i1 %cmp1000, label %if.then.1002, label %if.end.1015

if.then.1002:                                     ; preds = %if.end.994
  %447 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld1003 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %447, i32 0, i32 1
  %arrayidx1004 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1003, i32 0, i64 0
  %rtx1005 = bitcast %union.rtunion_def* %arrayidx1004 to %struct.rtx_def**
  %448 = load %struct.rtx_def*, %struct.rtx_def** %rtx1005, align 8
  store %struct.rtx_def* %448, %struct.rtx_def** %tem, align 8
  %449 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld1006 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %449, i32 0, i32 1
  %arrayidx1007 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1006, i32 0, i64 0
  %rtx1008 = bitcast %union.rtunion_def* %arrayidx1007 to %struct.rtx_def**
  %450 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld1009 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %450, i32 0, i32 1
  %arrayidx1010 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1009, i32 0, i64 1
  %rtx1011 = bitcast %union.rtunion_def* %arrayidx1010 to %struct.rtx_def**
  %451 = load %struct.rtx_def*, %struct.rtx_def** %rtx1011, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx1008, %struct.rtx_def* %451)
  %452 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld1012 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %452, i32 0, i32 1
  %arrayidx1013 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1012, i32 0, i64 1
  %rtx1014 = bitcast %union.rtunion_def* %arrayidx1013 to %struct.rtx_def**
  %453 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx1014, %struct.rtx_def* %453)
  br label %if.end.1015

if.end.1015:                                      ; preds = %if.then.1002, %if.end.994
  br label %sw.epilog.1017

sw.default.1016:                                  ; preds = %entry
  br label %sw.epilog.1017

sw.epilog.1017:                                   ; preds = %sw.default.1016, %if.end.1015, %if.end.255
  %454 = load i32, i32* %code, align 4
  %idxprom1018 = sext i32 %454 to i64
  %arrayidx1019 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom1018
  %455 = load i8, i8* %arrayidx1019, align 1
  %conv1020 = sext i8 %455 to i32
  switch i32 %conv1020, label %sw.epilog.1062 [
    i32 98, label %sw.bb.1021
    i32 51, label %sw.bb.1021
    i32 50, label %sw.bb.1029
    i32 99, label %sw.bb.1029
    i32 60, label %sw.bb.1029
    i32 49, label %sw.bb.1037
  ]

sw.bb.1021:                                       ; preds = %sw.epilog.1017, %sw.epilog.1017
  %456 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld1022 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %456, i32 0, i32 1
  %arrayidx1023 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1022, i32 0, i64 2
  %rtx1024 = bitcast %union.rtunion_def* %arrayidx1023 to %struct.rtx_def**
  %457 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call1025 = call %struct.rtx_def** @find_split_point(%struct.rtx_def** %rtx1024, %struct.rtx_def* %457)
  store %struct.rtx_def** %call1025, %struct.rtx_def*** %split, align 8
  %458 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %tobool1026 = icmp ne %struct.rtx_def** %458, null
  br i1 %tobool1026, label %if.then.1027, label %if.end.1028

if.then.1027:                                     ; preds = %sw.bb.1021
  %459 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  store %struct.rtx_def** %459, %struct.rtx_def*** %retval
  br label %return

if.end.1028:                                      ; preds = %sw.bb.1021
  br label %sw.bb.1029

sw.bb.1029:                                       ; preds = %sw.epilog.1017, %sw.epilog.1017, %sw.epilog.1017, %if.end.1028
  %460 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld1030 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %460, i32 0, i32 1
  %arrayidx1031 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1030, i32 0, i64 1
  %rtx1032 = bitcast %union.rtunion_def* %arrayidx1031 to %struct.rtx_def**
  %461 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call1033 = call %struct.rtx_def** @find_split_point(%struct.rtx_def** %rtx1032, %struct.rtx_def* %461)
  store %struct.rtx_def** %call1033, %struct.rtx_def*** %split, align 8
  %462 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %tobool1034 = icmp ne %struct.rtx_def** %462, null
  br i1 %tobool1034, label %if.then.1035, label %if.end.1036

if.then.1035:                                     ; preds = %sw.bb.1029
  %463 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  store %struct.rtx_def** %463, %struct.rtx_def*** %retval
  br label %return

if.end.1036:                                      ; preds = %sw.bb.1029
  br label %sw.bb.1037

sw.bb.1037:                                       ; preds = %sw.epilog.1017, %if.end.1036
  %464 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %465 = bitcast %struct.rtx_def* %464 to i32*
  %bf.load1038 = load i32, i32* %465, align 8
  %bf.clear1039 = and i32 %bf.load1038, 65535
  %cmp1040 = icmp ne i32 %bf.clear1039, 83
  br i1 %cmp1040, label %land.lhs.true.1042, label %if.end.1054

land.lhs.true.1042:                               ; preds = %sw.bb.1037
  %466 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld1043 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %466, i32 0, i32 1
  %arrayidx1044 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1043, i32 0, i64 0
  %rtx1045 = bitcast %union.rtunion_def* %arrayidx1044 to %struct.rtx_def**
  %467 = load %struct.rtx_def*, %struct.rtx_def** %rtx1045, align 8
  %468 = bitcast %struct.rtx_def* %467 to i32*
  %bf.load1046 = load i32, i32* %468, align 8
  %bf.clear1047 = and i32 %bf.load1046, 65535
  %cmp1048 = icmp eq i32 %bf.clear1047, 83
  br i1 %cmp1048, label %if.then.1050, label %if.end.1054

if.then.1050:                                     ; preds = %land.lhs.true.1042
  %469 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld1051 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %469, i32 0, i32 1
  %arrayidx1052 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1051, i32 0, i64 0
  %rtx1053 = bitcast %union.rtunion_def* %arrayidx1052 to %struct.rtx_def**
  store %struct.rtx_def** %rtx1053, %struct.rtx_def*** %retval
  br label %return

if.end.1054:                                      ; preds = %land.lhs.true.1042, %sw.bb.1037
  %470 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld1055 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %470, i32 0, i32 1
  %arrayidx1056 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1055, i32 0, i64 0
  %rtx1057 = bitcast %union.rtunion_def* %arrayidx1056 to %struct.rtx_def**
  %471 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call1058 = call %struct.rtx_def** @find_split_point(%struct.rtx_def** %rtx1057, %struct.rtx_def* %471)
  store %struct.rtx_def** %call1058, %struct.rtx_def*** %split, align 8
  %472 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  %tobool1059 = icmp ne %struct.rtx_def** %472, null
  br i1 %tobool1059, label %if.then.1060, label %if.end.1061

if.then.1060:                                     ; preds = %if.end.1054
  %473 = load %struct.rtx_def**, %struct.rtx_def*** %split, align 8
  store %struct.rtx_def** %473, %struct.rtx_def*** %retval
  br label %return

if.end.1061:                                      ; preds = %if.end.1054
  %474 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  store %struct.rtx_def** %474, %struct.rtx_def*** %retval
  br label %return

sw.epilog.1062:                                   ; preds = %sw.epilog.1017
  store %struct.rtx_def** null, %struct.rtx_def*** %retval
  br label %return

return:                                           ; preds = %sw.epilog.1062, %if.end.1061, %if.then.1060, %if.then.1050, %if.then.1035, %if.then.1027, %if.then.969, %if.end.952, %if.then.945, %if.then.885, %if.then.719, %if.then.687, %if.then.548, %if.then.449, %if.then.281, %if.then.268, %if.then.246, %if.then.199, %if.end, %if.then
  %475 = load %struct.rtx_def**, %struct.rtx_def*** %retval
  ret %struct.rtx_def** %475
}

declare i32 @reg_referenced_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @exact_log2_wide(i64) #1

; Function Attrs: nounwind uwtable
define internal void @distribute_links(%struct.rtx_def* %links) #0 {
entry:
  %links.addr = alloca %struct.rtx_def*, align 8
  %link = alloca %struct.rtx_def*, align 8
  %next_link = alloca %struct.rtx_def*, align 8
  %place = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %reg = alloca %struct.rtx_def*, align 8
  %link2 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %links, %struct.rtx_def** %links.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %links.addr, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %link, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc.190, %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %tobool = icmp ne %struct.rtx_def* %1, null
  br i1 %tobool, label %for.body, label %for.end.191

for.body:                                         ; preds = %for.cond
  store %struct.rtx_def* null, %struct.rtx_def** %place, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %next_link, align 8
  %4 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1, i32 0, i64 0
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rtx3, align 8
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load = load i32, i32* %6, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 37
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %7 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i32 0, i64 0
  %rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rtx6, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load7 = load i32, i32* %9, align 8
  %bf.clear8 = and i32 %bf.load7, 65535
  %idxprom = sext i32 %bf.clear8 to i64
  %arrayidx9 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %10 = load i8, i8* %arrayidx9, align 1
  %conv = sext i8 %10 to i32
  %cmp10 = icmp eq i32 %conv, 105
  br i1 %cmp10, label %cond.true, label %cond.false.38

cond.true:                                        ; preds = %lor.lhs.false
  %11 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i32 0, i64 0
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rtx14, align 8
  %fld15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i32 0, i64 3
  %rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rtx17, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load18 = load i32, i32* %14, align 8
  %bf.clear19 = and i32 %bf.load18, 65535
  %cmp20 = icmp eq i32 %bf.clear19, 47
  br i1 %cmp20, label %cond.true.22, label %cond.false

cond.true.22:                                     ; preds = %cond.true
  %15 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i32 0, i64 0
  %rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rtx25, align 8
  %fld26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i32 0, i64 3
  %rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rtx28, align 8
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %18 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i32 0, i64 0
  %rtx31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rtx31, align 8
  %20 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i32 0, i64 0
  %rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rtx34, align 8
  %fld35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i32 0, i64 3
  %rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rtx37, align 8
  %call = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %19, %struct.rtx_def* %22)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.22
  %cond = phi %struct.rtx_def* [ %17, %cond.true.22 ], [ %call, %cond.false ]
  br label %cond.end.39

cond.false.38:                                    ; preds = %lor.lhs.false
  br label %cond.end.39

cond.end.39:                                      ; preds = %cond.false.38, %cond.end
  %cond40 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false.38 ]
  store %struct.rtx_def* %cond40, %struct.rtx_def** %set, align 8
  %cmp41 = icmp eq %struct.rtx_def* %cond40, null
  br i1 %cmp41, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.39, %for.body
  br label %for.inc.190

if.end:                                           ; preds = %cond.end.39
  %23 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i32 0, i64 0
  %rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rtx45, align 8
  store %struct.rtx_def* %24, %struct.rtx_def** %reg, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %25 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load46 = load i32, i32* %26, align 8
  %bf.clear47 = and i32 %bf.load46, 65535
  %cmp48 = icmp eq i32 %bf.clear47, 63
  br i1 %cmp48, label %lor.end, label %lor.lhs.false.50

lor.lhs.false.50:                                 ; preds = %while.cond
  %27 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load51 = load i32, i32* %28, align 8
  %bf.clear52 = and i32 %bf.load51, 65535
  %cmp53 = icmp eq i32 %bf.clear52, 133
  br i1 %cmp53, label %lor.end, label %lor.lhs.false.55

lor.lhs.false.55:                                 ; preds = %lor.lhs.false.50
  %29 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load56 = load i32, i32* %30, align 8
  %bf.clear57 = and i32 %bf.load56, 65535
  %cmp58 = icmp eq i32 %bf.clear57, 132
  br i1 %cmp58, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.55
  %31 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load60 = load i32, i32* %32, align 8
  %bf.clear61 = and i32 %bf.load60, 65535
  %cmp62 = icmp eq i32 %bf.clear61, 64
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.55, %lor.lhs.false.50, %while.cond
  %33 = phi i1 [ true, %lor.lhs.false.55 ], [ true, %lor.lhs.false.50 ], [ true, %while.cond ], [ %cmp62, %lor.rhs ]
  br i1 %33, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  %34 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld64, i32 0, i64 0
  %rtx66 = bitcast %union.rtunion_def* %arrayidx65 to %struct.rtx_def**
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rtx66, align 8
  store %struct.rtx_def* %35, %struct.rtx_def** %reg, align 8
  br label %while.cond

while.end:                                        ; preds = %lor.end
  %36 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i32 0, i64 0
  %rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rtx69, align 8
  %fld70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i32 0, i64 2
  %rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rtx72, align 8
  store %struct.rtx_def* %38, %struct.rtx_def** %insn, align 8
  br label %for.cond.73

for.cond.73:                                      ; preds = %for.inc, %while.end
  %39 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %tobool74 = icmp ne %struct.rtx_def* %39, null
  br i1 %tobool74, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond.73
  %40 = load i32, i32* @this_basic_block, align 4
  %41 = load i32, i32* @n_basic_blocks, align 4
  %sub = sub nsw i32 %41, 1
  %cmp75 = icmp eq i32 %40, %sub
  br i1 %cmp75, label %lor.end.82, label %lor.rhs.77

lor.rhs.77:                                       ; preds = %land.rhs
  %42 = load i32, i32* @this_basic_block, align 4
  %add = add nsw i32 %42, 1
  %idxprom78 = sext i32 %add to i64
  %43 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %43, i32 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx79 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %bb, i32 0, i64 %idxprom78
  %44 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx79, align 8
  %head = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %44, i32 0, i32 0
  %45 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8
  %46 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %cmp80 = icmp ne %struct.rtx_def* %45, %46
  br label %lor.end.82

lor.end.82:                                       ; preds = %lor.rhs.77, %land.rhs
  %47 = phi i1 [ true, %land.rhs ], [ %cmp80, %lor.rhs.77 ]
  br label %land.end

land.end:                                         ; preds = %lor.end.82, %for.cond.73
  %48 = phi i1 [ false, %for.cond.73 ], [ %47, %lor.end.82 ]
  br i1 %48, label %for.body.83, label %for.end

for.body.83:                                      ; preds = %land.end
  %49 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %50 = bitcast %struct.rtx_def* %49 to i32*
  %bf.load84 = load i32, i32* %50, align 8
  %bf.clear85 = and i32 %bf.load84, 65535
  %idxprom86 = sext i32 %bf.clear85 to i64
  %arrayidx87 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom86
  %51 = load i8, i8* %arrayidx87, align 1
  %conv88 = sext i8 %51 to i32
  %cmp89 = icmp eq i32 %conv88, 105
  br i1 %cmp89, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %for.body.83
  %52 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %53 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx92 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld91, i32 0, i64 3
  %rtx93 = bitcast %union.rtunion_def* %arrayidx92 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx93, align 8
  %call94 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %52, %struct.rtx_def* %54)
  %tobool95 = icmp ne i32 %call94, 0
  br i1 %tobool95, label %if.then.96, label %if.else

if.then.96:                                       ; preds = %land.lhs.true
  %55 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %56 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld97, i32 0, i64 3
  %rtx99 = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtx_def**
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rtx99, align 8
  %call100 = call i32 @reg_referenced_p(%struct.rtx_def* %55, %struct.rtx_def* %57)
  %tobool101 = icmp ne i32 %call100, 0
  br i1 %tobool101, label %if.then.102, label %if.end.103

if.then.102:                                      ; preds = %if.then.96
  %58 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  store %struct.rtx_def* %58, %struct.rtx_def** %place, align 8
  br label %if.end.103

if.end.103:                                       ; preds = %if.then.102, %if.then.96
  br label %for.end

if.else:                                          ; preds = %land.lhs.true, %for.body.83
  %59 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %60 = bitcast %struct.rtx_def* %59 to i32*
  %bf.load104 = load i32, i32* %60, align 8
  %bf.clear105 = and i32 %bf.load104, 65535
  %cmp106 = icmp eq i32 %bf.clear105, 34
  br i1 %cmp106, label %land.lhs.true.108, label %if.end.112

land.lhs.true.108:                                ; preds = %if.else
  %61 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %62 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %call109 = call i32 @find_reg_fusage(%struct.rtx_def* %61, i32 48, %struct.rtx_def* %62)
  %tobool110 = icmp ne i32 %call109, 0
  br i1 %tobool110, label %if.then.111, label %if.end.112

if.then.111:                                      ; preds = %land.lhs.true.108
  %63 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  store %struct.rtx_def* %63, %struct.rtx_def** %place, align 8
  br label %for.end

if.end.112:                                       ; preds = %land.lhs.true.108, %if.else
  br label %if.end.113

if.end.113:                                       ; preds = %if.end.112
  br label %for.inc

for.inc:                                          ; preds = %if.end.113
  %64 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1
  %arrayidx115 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld114, i32 0, i64 2
  %rtx116 = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtx_def**
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rtx116, align 8
  store %struct.rtx_def* %65, %struct.rtx_def** %insn, align 8
  br label %for.cond.73

for.end:                                          ; preds = %if.then.111, %if.end.103, %land.end
  %66 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %tobool117 = icmp ne %struct.rtx_def* %66, null
  br i1 %tobool117, label %if.then.118, label %if.end.189

if.then.118:                                      ; preds = %for.end
  %67 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %fld119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1
  %arrayidx120 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld119, i32 0, i64 5
  %rtx121 = bitcast %union.rtunion_def* %arrayidx120 to %struct.rtx_def**
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rtx121, align 8
  store %struct.rtx_def* %68, %struct.rtx_def** %link2, align 8
  br label %for.cond.122

for.cond.122:                                     ; preds = %for.inc.135, %if.then.118
  %69 = load %struct.rtx_def*, %struct.rtx_def** %link2, align 8
  %tobool123 = icmp ne %struct.rtx_def* %69, null
  br i1 %tobool123, label %for.body.124, label %for.end.139

for.body.124:                                     ; preds = %for.cond.122
  %70 = load %struct.rtx_def*, %struct.rtx_def** %link2, align 8
  %fld125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i32 0, i64 0
  %rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rtx127, align 8
  %72 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1
  %arrayidx129 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld128, i32 0, i64 0
  %rtx130 = bitcast %union.rtunion_def* %arrayidx129 to %struct.rtx_def**
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rtx130, align 8
  %cmp131 = icmp eq %struct.rtx_def* %71, %73
  br i1 %cmp131, label %if.then.133, label %if.end.134

if.then.133:                                      ; preds = %for.body.124
  br label %for.end.139

if.end.134:                                       ; preds = %for.body.124
  br label %for.inc.135

for.inc.135:                                      ; preds = %if.end.134
  %74 = load %struct.rtx_def*, %struct.rtx_def** %link2, align 8
  %fld136 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1
  %arrayidx137 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld136, i32 0, i64 1
  %rtx138 = bitcast %union.rtunion_def* %arrayidx137 to %struct.rtx_def**
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rtx138, align 8
  store %struct.rtx_def* %75, %struct.rtx_def** %link2, align 8
  br label %for.cond.122

for.end.139:                                      ; preds = %if.then.133, %for.cond.122
  %76 = load %struct.rtx_def*, %struct.rtx_def** %link2, align 8
  %cmp140 = icmp eq %struct.rtx_def* %76, null
  br i1 %cmp140, label %if.then.142, label %if.end.188

if.then.142:                                      ; preds = %for.end.139
  %77 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %fld143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1
  %arrayidx144 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld143, i32 0, i64 5
  %rtx145 = bitcast %union.rtunion_def* %arrayidx144 to %struct.rtx_def**
  %78 = load %struct.rtx_def*, %struct.rtx_def** %rtx145, align 8
  %79 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld146 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1
  %arrayidx147 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld146, i32 0, i64 1
  %rtx148 = bitcast %union.rtunion_def* %arrayidx147 to %struct.rtx_def**
  store %struct.rtx_def* %78, %struct.rtx_def** %rtx148, align 8
  %80 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %81 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %fld149 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1
  %arrayidx150 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld149, i32 0, i64 5
  %rtx151 = bitcast %union.rtunion_def* %arrayidx150 to %struct.rtx_def**
  store %struct.rtx_def* %80, %struct.rtx_def** %rtx151, align 8
  %82 = load %struct.rtx_def*, %struct.rtx_def** @added_links_insn, align 8
  %cmp152 = icmp eq %struct.rtx_def* %82, null
  br i1 %cmp152, label %if.then.186, label %lor.lhs.false.154

lor.lhs.false.154:                                ; preds = %if.then.142
  %83 = load %struct.rtx_def*, %struct.rtx_def** @added_links_insn, align 8
  %fld155 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx156 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld155, i32 0, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx156 to i32*
  %84 = load i32, i32* %rtint, align 4
  %85 = load i32, i32* @max_uid_cuid, align 4
  %cmp157 = icmp sgt i32 %84, %85
  br i1 %cmp157, label %cond.true.159, label %cond.false.161

cond.true.159:                                    ; preds = %lor.lhs.false.154
  %86 = load %struct.rtx_def*, %struct.rtx_def** @added_links_insn, align 8
  %call160 = call i32 @insn_cuid(%struct.rtx_def* %86)
  br label %cond.end.167

cond.false.161:                                   ; preds = %lor.lhs.false.154
  %87 = load %struct.rtx_def*, %struct.rtx_def** @added_links_insn, align 8
  %fld162 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1
  %arrayidx163 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld162, i32 0, i64 0
  %rtint164 = bitcast %union.rtunion_def* %arrayidx163 to i32*
  %88 = load i32, i32* %rtint164, align 4
  %idxprom165 = sext i32 %88 to i64
  %89 = load i32*, i32** @uid_cuid, align 8
  %arrayidx166 = getelementptr inbounds i32, i32* %89, i64 %idxprom165
  %90 = load i32, i32* %arrayidx166, align 4
  br label %cond.end.167

cond.end.167:                                     ; preds = %cond.false.161, %cond.true.159
  %cond168 = phi i32 [ %call160, %cond.true.159 ], [ %90, %cond.false.161 ]
  %91 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %fld169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1
  %arrayidx170 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld169, i32 0, i64 0
  %rtint171 = bitcast %union.rtunion_def* %arrayidx170 to i32*
  %92 = load i32, i32* %rtint171, align 4
  %93 = load i32, i32* @max_uid_cuid, align 4
  %cmp172 = icmp sgt i32 %92, %93
  br i1 %cmp172, label %cond.true.174, label %cond.false.176

cond.true.174:                                    ; preds = %cond.end.167
  %94 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %call175 = call i32 @insn_cuid(%struct.rtx_def* %94)
  br label %cond.end.182

cond.false.176:                                   ; preds = %cond.end.167
  %95 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %fld177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1
  %arrayidx178 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld177, i32 0, i64 0
  %rtint179 = bitcast %union.rtunion_def* %arrayidx178 to i32*
  %96 = load i32, i32* %rtint179, align 4
  %idxprom180 = sext i32 %96 to i64
  %97 = load i32*, i32** @uid_cuid, align 8
  %arrayidx181 = getelementptr inbounds i32, i32* %97, i64 %idxprom180
  %98 = load i32, i32* %arrayidx181, align 4
  br label %cond.end.182

cond.end.182:                                     ; preds = %cond.false.176, %cond.true.174
  %cond183 = phi i32 [ %call175, %cond.true.174 ], [ %98, %cond.false.176 ]
  %cmp184 = icmp sgt i32 %cond168, %cond183
  br i1 %cmp184, label %if.then.186, label %if.end.187

if.then.186:                                      ; preds = %cond.end.182, %if.then.142
  %99 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  store %struct.rtx_def* %99, %struct.rtx_def** @added_links_insn, align 8
  br label %if.end.187

if.end.187:                                       ; preds = %if.then.186, %cond.end.182
  br label %if.end.188

if.end.188:                                       ; preds = %if.end.187, %for.end.139
  br label %if.end.189

if.end.189:                                       ; preds = %if.end.188, %for.end
  br label %for.inc.190

for.inc.190:                                      ; preds = %if.end.189, %if.then
  %100 = load %struct.rtx_def*, %struct.rtx_def** %next_link, align 8
  store %struct.rtx_def* %100, %struct.rtx_def** %link, align 8
  br label %for.cond

for.end.191:                                      ; preds = %for.cond
  ret void
}

declare %struct.rtx_def* @gen_rtx_fmt_ue(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal i32 @contains_muldiv(%struct.rtx_def* %x) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.default [
    i32 80, label %sw.bb
    i32 79, label %sw.bb
    i32 82, label %sw.bb
    i32 81, label %sw.bb
    i32 78, label %sw.bb.1
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  store i32 1, i32* %retval
  br label %return

sw.bb.1:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load2 = load i32, i32* %4, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  %cmp = icmp eq i32 %bf.clear3, 54
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %sw.bb.1
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i32 0, i64 1
  %rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtx6, align 8
  %fld7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx8 to i64*
  %7 = load i64, i64* %rtwint, align 8
  %call = call i32 @exact_log2_wide(i64 %7)
  %cmp9 = icmp sge i32 %call, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb.1
  %8 = phi i1 [ false, %sw.bb.1 ], [ %cmp9, %land.rhs ]
  %lnot = xor i1 %8, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %retval
  br label %return

sw.default:                                       ; preds = %entry
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load10 = load i32, i32* %10, align 8
  %bf.clear11 = and i32 %bf.load10, 65535
  %idxprom = sext i32 %bf.clear11 to i64
  %arrayidx12 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %11 = load i8, i8* %arrayidx12, align 1
  %conv = sext i8 %11 to i32
  switch i32 %conv, label %sw.default.28 [
    i32 99, label %sw.bb.13
    i32 60, label %sw.bb.13
    i32 50, label %sw.bb.13
    i32 49, label %sw.bb.23
  ]

sw.bb.13:                                         ; preds = %sw.default, %sw.default, %sw.default
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i32 0, i64 0
  %rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rtx16, align 8
  %call17 = call i32 @contains_muldiv(%struct.rtx_def* %13)
  %tobool = icmp ne i32 %call17, 0
  br i1 %tobool, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %sw.bb.13
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i32 0, i64 1
  %rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rtx20, align 8
  %call21 = call i32 @contains_muldiv(%struct.rtx_def* %15)
  %tobool22 = icmp ne i32 %call21, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %sw.bb.13
  %16 = phi i1 [ true, %sw.bb.13 ], [ %tobool22, %lor.rhs ]
  %lor.ext = zext i1 %16 to i32
  store i32 %lor.ext, i32* %retval
  br label %return

sw.bb.23:                                         ; preds = %sw.default
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i32 0, i64 0
  %rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rtx26, align 8
  %call27 = call i32 @contains_muldiv(%struct.rtx_def* %18)
  store i32 %call27, i32* %retval
  br label %return

sw.default.28:                                    ; preds = %sw.default
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %sw.default.28, %sw.bb.23, %lor.end, %land.end, %sw.bb
  %19 = load i32, i32* %retval
  ret i32 %19
}

declare i32 @check_asm_operands(%struct.rtx_def*) #1

declare i32 @reg_set_p(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @distribute_notes(%struct.rtx_def* %notes, %struct.rtx_def* %from_insn, %struct.rtx_def* %i3, %struct.rtx_def* %i2, %struct.rtx_def* %elim_i2, %struct.rtx_def* %elim_i1) #0 {
entry:
  %notes.addr = alloca %struct.rtx_def*, align 8
  %from_insn.addr = alloca %struct.rtx_def*, align 8
  %i3.addr = alloca %struct.rtx_def*, align 8
  %i2.addr = alloca %struct.rtx_def*, align 8
  %elim_i2.addr = alloca %struct.rtx_def*, align 8
  %elim_i1.addr = alloca %struct.rtx_def*, align 8
  %note = alloca %struct.rtx_def*, align 8
  %next_note = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  %place = alloca %struct.rtx_def*, align 8
  %place2 = alloca %struct.rtx_def*, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %inner_dest = alloca %struct.rtx_def*, align 8
  %links = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %endregno = alloca i32, align 4
  %all_used = alloca i32, align 4
  %i = alloca i32, align 4
  %piece = alloca %struct.rtx_def*, align 8
  %bb1088 = alloca %struct.basic_block_def*, align 8
  %new_note = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %notes, %struct.rtx_def** %notes.addr, align 8
  store %struct.rtx_def* %from_insn, %struct.rtx_def** %from_insn.addr, align 8
  store %struct.rtx_def* %i3, %struct.rtx_def** %i3.addr, align 8
  store %struct.rtx_def* %i2, %struct.rtx_def** %i2.addr, align 8
  store %struct.rtx_def* %elim_i2, %struct.rtx_def** %elim_i2.addr, align 8
  store %struct.rtx_def* %elim_i1, %struct.rtx_def** %elim_i1.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %notes.addr, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %note, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc.1343, %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %tobool = icmp ne %struct.rtx_def* %1, null
  br i1 %tobool, label %for.body, label %for.end.1344

for.body:                                         ; preds = %for.cond
  store %struct.rtx_def* null, %struct.rtx_def** %place, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %place2, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %tobool1 = icmp ne %struct.rtx_def* %3, null
  br i1 %tobool1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %4 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i32 0, i64 0
  %rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rtx4, align 8
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load = load i32, i32* %6, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %land.lhs.true.5, label %if.end

land.lhs.true.5:                                  ; preds = %land.lhs.true
  %7 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i32 0, i64 0
  %rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rtx8, align 8
  %fld9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld9, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx10 to i32*
  %9 = load i32, i32* %rtuint, align 4
  %cmp11 = icmp uge i32 %9, 53
  br i1 %cmp11, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.5
  %10 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i32 0, i64 0
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rtx14, align 8
  %fld15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i32 0, i64 0
  %rtuint17 = bitcast %union.rtunion_def* %arrayidx16 to i32*
  %12 = load i32, i32* %rtuint17, align 4
  %idxprom = zext i32 %12 to i64
  %13 = load %struct.function*, %struct.function** @cfun, align 8
  %emit = getelementptr inbounds %struct.function, %struct.function* %13, i32 0, i32 3
  %14 = load %struct.emit_status*, %struct.emit_status** %emit, align 8
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status, %struct.emit_status* %14, i32 0, i32 12
  %15 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx, align 8
  %arrayidx18 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %15, i64 %idxprom
  %16 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx18, align 8
  %17 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i32 0, i64 0
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  store %struct.rtx_def* %16, %struct.rtx_def** %rtx21, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.5, %land.lhs.true, %for.body
  %18 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i32 0, i64 1
  %rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rtx24, align 8
  store %struct.rtx_def* %19, %struct.rtx_def** %next_note, align 8
  %20 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load25 = load i32, i32* %21, align 8
  %bf.lshr = lshr i32 %bf.load25, 16
  %bf.clear26 = and i32 %bf.lshr, 255
  switch i32 %bf.clear26, label %sw.default [
    i32 16, label %sw.bb
    i32 20, label %sw.bb
    i32 17, label %sw.bb
    i32 30, label %sw.bb.27
    i32 27, label %sw.bb.28
    i32 23, label %sw.bb.42
    i32 26, label %sw.bb.71
    i32 28, label %sw.bb.71
    i32 10, label %sw.bb.86
    i32 4, label %sw.bb.156
    i32 3, label %sw.bb.156
    i32 18, label %sw.bb.156
    i32 2, label %sw.bb.220
    i32 9, label %sw.bb.220
    i32 13, label %sw.bb.247
    i32 8, label %sw.bb.386
    i32 5, label %sw.bb.386
    i32 6, label %sw.bb.387
    i32 7, label %sw.bb.414
    i32 1, label %sw.bb.441
  ]

sw.bb:                                            ; preds = %if.end, %if.end, %if.end
  %22 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  store %struct.rtx_def* %22, %struct.rtx_def** %place, align 8
  br label %sw.epilog

sw.bb.27:                                         ; preds = %if.end
  %23 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  store %struct.rtx_def* %23, %struct.rtx_def** %place, align 8
  br label %sw.epilog

sw.bb.28:                                         ; preds = %if.end
  %24 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load29 = load i32, i32* %25, align 8
  %bf.clear30 = and i32 %bf.load29, 65535
  %cmp31 = icmp eq i32 %bf.clear30, 33
  br i1 %cmp31, label %if.then.32, label %if.else

if.then.32:                                       ; preds = %sw.bb.28
  %26 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  store %struct.rtx_def* %26, %struct.rtx_def** %place, align 8
  br label %if.end.41

if.else:                                          ; preds = %sw.bb.28
  %27 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %tobool33 = icmp ne %struct.rtx_def* %27, null
  br i1 %tobool33, label %land.lhs.true.34, label %if.else.39

land.lhs.true.34:                                 ; preds = %if.else
  %28 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load35 = load i32, i32* %29, align 8
  %bf.clear36 = and i32 %bf.load35, 65535
  %cmp37 = icmp eq i32 %bf.clear36, 33
  br i1 %cmp37, label %if.then.38, label %if.else.39

if.then.38:                                       ; preds = %land.lhs.true.34
  %30 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  store %struct.rtx_def* %30, %struct.rtx_def** %place, align 8
  br label %if.end.40

if.else.39:                                       ; preds = %land.lhs.true.34, %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 12125, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__FUNCTION__.distribute_notes, i32 0, i32 0)) #5
  unreachable

if.end.40:                                        ; preds = %if.then.38
  br label %if.end.41

if.end.41:                                        ; preds = %if.end.40, %if.then.32
  br label %sw.epilog

sw.bb.42:                                         ; preds = %if.end
  %31 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load43 = load i32, i32* %32, align 8
  %bf.clear44 = and i32 %bf.load43, 65535
  %cmp45 = icmp eq i32 %bf.clear44, 34
  br i1 %cmp45, label %if.then.46, label %if.else.47

if.then.46:                                       ; preds = %sw.bb.42
  %33 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  store %struct.rtx_def* %33, %struct.rtx_def** %place, align 8
  br label %if.end.70

if.else.47:                                       ; preds = %sw.bb.42
  %34 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %tobool48 = icmp ne %struct.rtx_def* %34, null
  br i1 %tobool48, label %land.lhs.true.49, label %if.else.54

land.lhs.true.49:                                 ; preds = %if.else.47
  %35 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %36 = bitcast %struct.rtx_def* %35 to i32*
  %bf.load50 = load i32, i32* %36, align 8
  %bf.clear51 = and i32 %bf.load50, 65535
  %cmp52 = icmp eq i32 %bf.clear51, 34
  br i1 %cmp52, label %if.then.53, label %if.else.54

if.then.53:                                       ; preds = %land.lhs.true.49
  %37 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  store %struct.rtx_def* %37, %struct.rtx_def** %place, align 8
  br label %if.end.69

if.else.54:                                       ; preds = %land.lhs.true.49, %if.else.47
  %38 = load i32, i32* @flag_non_call_exceptions, align 4
  %tobool55 = icmp ne i32 %38, 0
  br i1 %tobool55, label %if.then.56, label %if.else.67

if.then.56:                                       ; preds = %if.else.54
  %39 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call = call i32 @may_trap_p(%struct.rtx_def* %39)
  %tobool57 = icmp ne i32 %call, 0
  br i1 %tobool57, label %if.then.58, label %if.else.59

if.then.58:                                       ; preds = %if.then.56
  %40 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  store %struct.rtx_def* %40, %struct.rtx_def** %place, align 8
  br label %if.end.66

if.else.59:                                       ; preds = %if.then.56
  %41 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %tobool60 = icmp ne %struct.rtx_def* %41, null
  br i1 %tobool60, label %land.lhs.true.61, label %if.end.65

land.lhs.true.61:                                 ; preds = %if.else.59
  %42 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call62 = call i32 @may_trap_p(%struct.rtx_def* %42)
  %tobool63 = icmp ne i32 %call62, 0
  br i1 %tobool63, label %if.then.64, label %if.end.65

if.then.64:                                       ; preds = %land.lhs.true.61
  %43 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  store %struct.rtx_def* %43, %struct.rtx_def** %place, align 8
  br label %if.end.65

if.end.65:                                        ; preds = %if.then.64, %land.lhs.true.61, %if.else.59
  br label %if.end.66

if.end.66:                                        ; preds = %if.end.65, %if.then.58
  br label %if.end.68

if.else.67:                                       ; preds = %if.else.54
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 12145, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__FUNCTION__.distribute_notes, i32 0, i32 0)) #5
  unreachable

if.end.68:                                        ; preds = %if.end.66
  br label %if.end.69

if.end.69:                                        ; preds = %if.end.68, %if.then.53
  br label %if.end.70

if.end.70:                                        ; preds = %if.end.69, %if.then.46
  br label %sw.epilog

sw.bb.71:                                         ; preds = %if.end, %if.end
  %44 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %45 = bitcast %struct.rtx_def* %44 to i32*
  %bf.load72 = load i32, i32* %45, align 8
  %bf.clear73 = and i32 %bf.load72, 65535
  %cmp74 = icmp eq i32 %bf.clear73, 34
  br i1 %cmp74, label %if.then.75, label %if.else.76

if.then.75:                                       ; preds = %sw.bb.71
  %46 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  store %struct.rtx_def* %46, %struct.rtx_def** %place, align 8
  br label %if.end.85

if.else.76:                                       ; preds = %sw.bb.71
  %47 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %tobool77 = icmp ne %struct.rtx_def* %47, null
  br i1 %tobool77, label %land.lhs.true.78, label %if.else.83

land.lhs.true.78:                                 ; preds = %if.else.76
  %48 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %49 = bitcast %struct.rtx_def* %48 to i32*
  %bf.load79 = load i32, i32* %49, align 8
  %bf.clear80 = and i32 %bf.load79, 65535
  %cmp81 = icmp eq i32 %bf.clear80, 34
  br i1 %cmp81, label %if.then.82, label %if.else.83

if.then.82:                                       ; preds = %land.lhs.true.78
  %50 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  store %struct.rtx_def* %50, %struct.rtx_def** %place, align 8
  br label %if.end.84

if.else.83:                                       ; preds = %land.lhs.true.78, %if.else.76
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 12157, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__FUNCTION__.distribute_notes, i32 0, i32 0)) #5
  unreachable

if.end.84:                                        ; preds = %if.then.82
  br label %if.end.85

if.end.85:                                        ; preds = %if.end.84, %if.then.75
  br label %sw.epilog

sw.bb.86:                                         ; preds = %if.end
  %51 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %arrayidx88 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld87, i32 0, i64 0
  %rtx89 = bitcast %union.rtunion_def* %arrayidx88 to %struct.rtx_def**
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rtx89, align 8
  %53 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx91 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld90, i32 0, i64 3
  %rtx92 = bitcast %union.rtunion_def* %arrayidx91 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx92, align 8
  %call93 = call i32 @reg_set_p(%struct.rtx_def* %52, %struct.rtx_def* %54)
  %tobool94 = icmp ne i32 %call93, 0
  br i1 %tobool94, label %if.then.95, label %if.else.120

if.then.95:                                       ; preds = %sw.bb.86
  %55 = load %struct.rtx_def*, %struct.rtx_def** %from_insn.addr, align 8
  %56 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %cmp96 = icmp ne %struct.rtx_def* %55, %56
  br i1 %cmp96, label %if.then.97, label %if.end.98

if.then.97:                                       ; preds = %if.then.95
  br label %sw.epilog

if.end.98:                                        ; preds = %if.then.95
  %57 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1
  %arrayidx100 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld99, i32 0, i64 0
  %rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rtx101, align 8
  %59 = bitcast %struct.rtx_def* %58 to i32*
  %bf.load102 = load i32, i32* %59, align 8
  %bf.clear103 = and i32 %bf.load102, 65535
  %cmp104 = icmp eq i32 %bf.clear103, 61
  br i1 %cmp104, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.98
  %60 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %61 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld105 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1
  %arrayidx106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld105, i32 0, i64 0
  %rtx107 = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rtx107, align 8
  %fld108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld108, i32 0, i64 0
  %rtuint110 = bitcast %union.rtunion_def* %arrayidx109 to i32*
  %63 = load i32, i32* %rtuint110, align 4
  %call111 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %60, i32 10, i32 %63)
  %tobool112 = icmp ne %struct.rtx_def* %call111, null
  br i1 %tobool112, label %if.end.119, label %if.then.118

cond.false:                                       ; preds = %if.end.98
  %64 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %65 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1
  %arrayidx114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld113, i32 0, i64 0
  %rtx115 = bitcast %union.rtunion_def* %arrayidx114 to %struct.rtx_def**
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rtx115, align 8
  %call116 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %64, i32 10, %struct.rtx_def* %66)
  %tobool117 = icmp ne %struct.rtx_def* %call116, null
  br i1 %tobool117, label %if.end.119, label %if.then.118

if.then.118:                                      ; preds = %cond.false, %cond.true
  %67 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  store %struct.rtx_def* %67, %struct.rtx_def** %place, align 8
  br label %if.end.119

if.end.119:                                       ; preds = %if.then.118, %cond.false, %cond.true
  br label %if.end.155

if.else.120:                                      ; preds = %sw.bb.86
  %68 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1
  %arrayidx122 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld121, i32 0, i64 0
  %rtx123 = bitcast %union.rtunion_def* %arrayidx122 to %struct.rtx_def**
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rtx123, align 8
  %70 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx125 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld124, i32 0, i64 3
  %rtx126 = bitcast %union.rtunion_def* %arrayidx125 to %struct.rtx_def**
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rtx126, align 8
  %call127 = call i32 @reg_referenced_p(%struct.rtx_def* %69, %struct.rtx_def* %71)
  %tobool128 = icmp ne i32 %call127, 0
  br i1 %tobool128, label %land.lhs.true.129, label %if.end.154

land.lhs.true.129:                                ; preds = %if.else.120
  %72 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1
  %arrayidx131 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld130, i32 0, i64 0
  %rtx132 = bitcast %union.rtunion_def* %arrayidx131 to %struct.rtx_def**
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rtx132, align 8
  %74 = bitcast %struct.rtx_def* %73 to i32*
  %bf.load133 = load i32, i32* %74, align 8
  %bf.clear134 = and i32 %bf.load133, 65535
  %cmp135 = icmp eq i32 %bf.clear134, 61
  br i1 %cmp135, label %cond.true.136, label %cond.false.145

cond.true.136:                                    ; preds = %land.lhs.true.129
  %75 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %76 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %arrayidx138 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld137, i32 0, i64 0
  %rtx139 = bitcast %union.rtunion_def* %arrayidx138 to %struct.rtx_def**
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rtx139, align 8
  %fld140 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1
  %arrayidx141 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld140, i32 0, i64 0
  %rtuint142 = bitcast %union.rtunion_def* %arrayidx141 to i32*
  %78 = load i32, i32* %rtuint142, align 4
  %call143 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %75, i32 1, i32 %78)
  %tobool144 = icmp ne %struct.rtx_def* %call143, null
  br i1 %tobool144, label %if.end.154, label %if.then.151

cond.false.145:                                   ; preds = %land.lhs.true.129
  %79 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %80 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld146 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1
  %arrayidx147 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld146, i32 0, i64 0
  %rtx148 = bitcast %union.rtunion_def* %arrayidx147 to %struct.rtx_def**
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rtx148, align 8
  %call149 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %79, i32 1, %struct.rtx_def* %81)
  %tobool150 = icmp ne %struct.rtx_def* %call149, null
  br i1 %tobool150, label %if.end.154, label %if.then.151

if.then.151:                                      ; preds = %cond.false.145, %cond.true.136
  %82 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %83 = bitcast %struct.rtx_def* %82 to i32*
  %bf.load152 = load i32, i32* %83, align 8
  %bf.clear153 = and i32 %bf.load152, -16711681
  %bf.set = or i32 %bf.clear153, 65536
  store i32 %bf.set, i32* %83, align 8
  %84 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  store %struct.rtx_def* %84, %struct.rtx_def** %place, align 8
  br label %if.end.154

if.end.154:                                       ; preds = %if.then.151, %cond.false.145, %cond.true.136, %if.else.120
  br label %if.end.155

if.end.155:                                       ; preds = %if.end.154, %if.end.119
  br label %sw.epilog

sw.bb.156:                                        ; preds = %if.end, %if.end, %if.end
  %85 = load %struct.rtx_def*, %struct.rtx_def** %from_insn.addr, align 8
  %86 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %cmp157 = icmp eq %struct.rtx_def* %85, %86
  br i1 %cmp157, label %land.lhs.true.158, label %if.end.219

land.lhs.true.158:                                ; preds = %sw.bb.156
  %87 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1
  %arrayidx160 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld159, i32 0, i64 0
  %rtx161 = bitcast %union.rtunion_def* %arrayidx160 to %struct.rtx_def**
  %88 = load %struct.rtx_def*, %struct.rtx_def** %rtx161, align 8
  %cmp162 = icmp eq %struct.rtx_def* %88, null
  br i1 %cmp162, label %if.then.218, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.158
  %89 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld163 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1
  %arrayidx164 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld163, i32 0, i64 0
  %rtx165 = bitcast %union.rtunion_def* %arrayidx164 to %struct.rtx_def**
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rtx165, align 8
  %91 = bitcast %struct.rtx_def* %90 to i32*
  %bf.load166 = load i32, i32* %91, align 8
  %bf.clear167 = and i32 %bf.load166, 65535
  %cmp168 = icmp eq i32 %bf.clear167, 67
  br i1 %cmp168, label %if.then.218, label %lor.lhs.false.169

lor.lhs.false.169:                                ; preds = %lor.lhs.false
  %92 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1
  %arrayidx171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld170, i32 0, i64 0
  %rtx172 = bitcast %union.rtunion_def* %arrayidx171 to %struct.rtx_def**
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rtx172, align 8
  %94 = bitcast %struct.rtx_def* %93 to i32*
  %bf.load173 = load i32, i32* %94, align 8
  %bf.clear174 = and i32 %bf.load173, 65535
  %cmp175 = icmp eq i32 %bf.clear174, 68
  br i1 %cmp175, label %if.then.218, label %lor.lhs.false.176

lor.lhs.false.176:                                ; preds = %lor.lhs.false.169
  %95 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1
  %arrayidx178 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld177, i32 0, i64 0
  %rtx179 = bitcast %union.rtunion_def* %arrayidx178 to %struct.rtx_def**
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rtx179, align 8
  %97 = bitcast %struct.rtx_def* %96 to i32*
  %bf.load180 = load i32, i32* %97, align 8
  %bf.clear181 = and i32 %bf.load180, 65535
  %cmp182 = icmp eq i32 %bf.clear181, 54
  br i1 %cmp182, label %if.then.218, label %lor.lhs.false.183

lor.lhs.false.183:                                ; preds = %lor.lhs.false.176
  %98 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %98, i32 0, i32 1
  %arrayidx185 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld184, i32 0, i64 0
  %rtx186 = bitcast %union.rtunion_def* %arrayidx185 to %struct.rtx_def**
  %99 = load %struct.rtx_def*, %struct.rtx_def** %rtx186, align 8
  %100 = bitcast %struct.rtx_def* %99 to i32*
  %bf.load187 = load i32, i32* %100, align 8
  %bf.clear188 = and i32 %bf.load187, 65535
  %cmp189 = icmp eq i32 %bf.clear188, 55
  br i1 %cmp189, label %if.then.218, label %lor.lhs.false.190

lor.lhs.false.190:                                ; preds = %lor.lhs.false.183
  %101 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld191 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i32 0, i32 1
  %arrayidx192 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld191, i32 0, i64 0
  %rtx193 = bitcast %union.rtunion_def* %arrayidx192 to %struct.rtx_def**
  %102 = load %struct.rtx_def*, %struct.rtx_def** %rtx193, align 8
  %103 = bitcast %struct.rtx_def* %102 to i32*
  %bf.load194 = load i32, i32* %103, align 8
  %bf.clear195 = and i32 %bf.load194, 65535
  %cmp196 = icmp eq i32 %bf.clear195, 58
  br i1 %cmp196, label %if.then.218, label %lor.lhs.false.197

lor.lhs.false.197:                                ; preds = %lor.lhs.false.190
  %104 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld198 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %104, i32 0, i32 1
  %arrayidx199 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld198, i32 0, i64 0
  %rtx200 = bitcast %union.rtunion_def* %arrayidx199 to %struct.rtx_def**
  %105 = load %struct.rtx_def*, %struct.rtx_def** %rtx200, align 8
  %106 = bitcast %struct.rtx_def* %105 to i32*
  %bf.load201 = load i32, i32* %106, align 8
  %bf.clear202 = and i32 %bf.load201, 65535
  %cmp203 = icmp eq i32 %bf.clear202, 134
  br i1 %cmp203, label %if.then.218, label %lor.lhs.false.204

lor.lhs.false.204:                                ; preds = %lor.lhs.false.197
  %107 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld205 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1
  %arrayidx206 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld205, i32 0, i64 0
  %rtx207 = bitcast %union.rtunion_def* %arrayidx206 to %struct.rtx_def**
  %108 = load %struct.rtx_def*, %struct.rtx_def** %rtx207, align 8
  %109 = bitcast %struct.rtx_def* %108 to i32*
  %bf.load208 = load i32, i32* %109, align 8
  %bf.clear209 = and i32 %bf.load208, 65535
  %cmp210 = icmp eq i32 %bf.clear209, 56
  br i1 %cmp210, label %if.then.218, label %lor.lhs.false.211

lor.lhs.false.211:                                ; preds = %lor.lhs.false.204
  %110 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld212 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %110, i32 0, i32 1
  %arrayidx213 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld212, i32 0, i64 0
  %rtx214 = bitcast %union.rtunion_def* %arrayidx213 to %struct.rtx_def**
  %111 = load %struct.rtx_def*, %struct.rtx_def** %rtx214, align 8
  %112 = bitcast %struct.rtx_def* %111 to i32*
  %bf.load215 = load i32, i32* %112, align 8
  %bf.clear216 = and i32 %bf.load215, 65535
  %cmp217 = icmp eq i32 %bf.clear216, 140
  br i1 %cmp217, label %if.then.218, label %if.end.219

if.then.218:                                      ; preds = %lor.lhs.false.211, %lor.lhs.false.204, %lor.lhs.false.197, %lor.lhs.false.190, %lor.lhs.false.183, %lor.lhs.false.176, %lor.lhs.false.169, %lor.lhs.false, %land.lhs.true.158
  %113 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  store %struct.rtx_def* %113, %struct.rtx_def** %place, align 8
  br label %if.end.219

if.end.219:                                       ; preds = %if.then.218, %lor.lhs.false.211, %sw.bb.156
  br label %sw.epilog

sw.bb.220:                                        ; preds = %if.end, %if.end
  %114 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld221 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %114, i32 0, i32 1
  %arrayidx222 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld221, i32 0, i64 0
  %rtx223 = bitcast %union.rtunion_def* %arrayidx222 to %struct.rtx_def**
  %115 = load %struct.rtx_def*, %struct.rtx_def** %rtx223, align 8
  %116 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld224 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i32 0, i32 1
  %arrayidx225 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld224, i32 0, i64 3
  %rtx226 = bitcast %union.rtunion_def* %arrayidx225 to %struct.rtx_def**
  %117 = load %struct.rtx_def*, %struct.rtx_def** %rtx226, align 8
  %call227 = call i32 @reg_mentioned_p(%struct.rtx_def* %115, %struct.rtx_def* %117)
  %tobool228 = icmp ne i32 %call227, 0
  br i1 %tobool228, label %if.then.229, label %if.end.230

if.then.229:                                      ; preds = %sw.bb.220
  %118 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  store %struct.rtx_def* %118, %struct.rtx_def** %place, align 8
  br label %if.end.230

if.end.230:                                       ; preds = %if.then.229, %sw.bb.220
  %119 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %tobool231 = icmp ne %struct.rtx_def* %119, null
  br i1 %tobool231, label %land.lhs.true.232, label %if.end.246

land.lhs.true.232:                                ; preds = %if.end.230
  %120 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld233 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1
  %arrayidx234 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld233, i32 0, i64 0
  %rtx235 = bitcast %union.rtunion_def* %arrayidx234 to %struct.rtx_def**
  %121 = load %struct.rtx_def*, %struct.rtx_def** %rtx235, align 8
  %122 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i32 0, i32 1
  %arrayidx237 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld236, i32 0, i64 3
  %rtx238 = bitcast %union.rtunion_def* %arrayidx237 to %struct.rtx_def**
  %123 = load %struct.rtx_def*, %struct.rtx_def** %rtx238, align 8
  %call239 = call i32 @reg_mentioned_p(%struct.rtx_def* %121, %struct.rtx_def* %123)
  %tobool240 = icmp ne i32 %call239, 0
  br i1 %tobool240, label %if.then.241, label %if.end.246

if.then.241:                                      ; preds = %land.lhs.true.232
  %124 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %tobool242 = icmp ne %struct.rtx_def* %124, null
  br i1 %tobool242, label %if.then.243, label %if.else.244

if.then.243:                                      ; preds = %if.then.241
  %125 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  store %struct.rtx_def* %125, %struct.rtx_def** %place2, align 8
  br label %if.end.245

if.else.244:                                      ; preds = %if.then.241
  %126 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  store %struct.rtx_def* %126, %struct.rtx_def** %place, align 8
  br label %if.end.245

if.end.245:                                       ; preds = %if.else.244, %if.then.243
  br label %if.end.246

if.end.246:                                       ; preds = %if.end.245, %land.lhs.true.232, %if.end.230
  br label %sw.epilog

sw.bb.247:                                        ; preds = %if.end
  %127 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld248 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %127, i32 0, i32 1
  %arrayidx249 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld248, i32 0, i64 0
  %rtx250 = bitcast %union.rtunion_def* %arrayidx249 to %struct.rtx_def**
  %128 = load %struct.rtx_def*, %struct.rtx_def** %rtx250, align 8
  %129 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld251 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %129, i32 0, i32 1
  %arrayidx252 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld251, i32 0, i64 3
  %rtx253 = bitcast %union.rtunion_def* %arrayidx252 to %struct.rtx_def**
  %130 = load %struct.rtx_def*, %struct.rtx_def** %rtx253, align 8
  %call254 = call i32 @reg_mentioned_p(%struct.rtx_def* %128, %struct.rtx_def* %130)
  %tobool255 = icmp ne i32 %call254, 0
  br i1 %tobool255, label %if.then.277, label %lor.lhs.false.256

lor.lhs.false.256:                                ; preds = %sw.bb.247
  %131 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %call257 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %131, i32 4, %struct.rtx_def* null)
  store %struct.rtx_def* %call257, %struct.rtx_def** %tem, align 8
  %tobool258 = icmp ne %struct.rtx_def* %call257, null
  br i1 %tobool258, label %land.lhs.true.259, label %if.end.278

land.lhs.true.259:                                ; preds = %lor.lhs.false.256
  %132 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld260 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1
  %arrayidx261 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld260, i32 0, i64 0
  %rtx262 = bitcast %union.rtunion_def* %arrayidx261 to %struct.rtx_def**
  %133 = load %struct.rtx_def*, %struct.rtx_def** %rtx262, align 8
  %134 = bitcast %struct.rtx_def* %133 to i32*
  %bf.load263 = load i32, i32* %134, align 8
  %bf.clear264 = and i32 %bf.load263, 65535
  %cmp265 = icmp eq i32 %bf.clear264, 67
  br i1 %cmp265, label %land.lhs.true.266, label %if.end.278

land.lhs.true.266:                                ; preds = %land.lhs.true.259
  %135 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld267 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %135, i32 0, i32 1
  %arrayidx268 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld267, i32 0, i64 0
  %rtx269 = bitcast %union.rtunion_def* %arrayidx268 to %struct.rtx_def**
  %136 = load %struct.rtx_def*, %struct.rtx_def** %rtx269, align 8
  %fld270 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1
  %arrayidx271 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld270, i32 0, i64 0
  %rtx272 = bitcast %union.rtunion_def* %arrayidx271 to %struct.rtx_def**
  %137 = load %struct.rtx_def*, %struct.rtx_def** %rtx272, align 8
  %138 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld273 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %138, i32 0, i32 1
  %arrayidx274 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld273, i32 0, i64 0
  %rtx275 = bitcast %union.rtunion_def* %arrayidx274 to %struct.rtx_def**
  %139 = load %struct.rtx_def*, %struct.rtx_def** %rtx275, align 8
  %cmp276 = icmp eq %struct.rtx_def* %137, %139
  br i1 %cmp276, label %if.then.277, label %if.end.278

if.then.277:                                      ; preds = %land.lhs.true.266, %sw.bb.247
  %140 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  store %struct.rtx_def* %140, %struct.rtx_def** %place, align 8
  br label %if.end.278

if.end.278:                                       ; preds = %if.then.277, %land.lhs.true.266, %land.lhs.true.259, %lor.lhs.false.256
  %141 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %tobool279 = icmp ne %struct.rtx_def* %141, null
  br i1 %tobool279, label %land.lhs.true.280, label %if.end.315

land.lhs.true.280:                                ; preds = %if.end.278
  %142 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld281 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i32 0, i32 1
  %arrayidx282 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld281, i32 0, i64 0
  %rtx283 = bitcast %union.rtunion_def* %arrayidx282 to %struct.rtx_def**
  %143 = load %struct.rtx_def*, %struct.rtx_def** %rtx283, align 8
  %144 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld284 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1
  %arrayidx285 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld284, i32 0, i64 3
  %rtx286 = bitcast %union.rtunion_def* %arrayidx285 to %struct.rtx_def**
  %145 = load %struct.rtx_def*, %struct.rtx_def** %rtx286, align 8
  %call287 = call i32 @reg_mentioned_p(%struct.rtx_def* %143, %struct.rtx_def* %145)
  %tobool288 = icmp ne i32 %call287, 0
  br i1 %tobool288, label %if.then.310, label %lor.lhs.false.289

lor.lhs.false.289:                                ; preds = %land.lhs.true.280
  %146 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call290 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %146, i32 4, %struct.rtx_def* null)
  store %struct.rtx_def* %call290, %struct.rtx_def** %tem, align 8
  %tobool291 = icmp ne %struct.rtx_def* %call290, null
  br i1 %tobool291, label %land.lhs.true.292, label %if.end.315

land.lhs.true.292:                                ; preds = %lor.lhs.false.289
  %147 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld293 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %147, i32 0, i32 1
  %arrayidx294 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld293, i32 0, i64 0
  %rtx295 = bitcast %union.rtunion_def* %arrayidx294 to %struct.rtx_def**
  %148 = load %struct.rtx_def*, %struct.rtx_def** %rtx295, align 8
  %149 = bitcast %struct.rtx_def* %148 to i32*
  %bf.load296 = load i32, i32* %149, align 8
  %bf.clear297 = and i32 %bf.load296, 65535
  %cmp298 = icmp eq i32 %bf.clear297, 67
  br i1 %cmp298, label %land.lhs.true.299, label %if.end.315

land.lhs.true.299:                                ; preds = %land.lhs.true.292
  %150 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld300 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %150, i32 0, i32 1
  %arrayidx301 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld300, i32 0, i64 0
  %rtx302 = bitcast %union.rtunion_def* %arrayidx301 to %struct.rtx_def**
  %151 = load %struct.rtx_def*, %struct.rtx_def** %rtx302, align 8
  %fld303 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %151, i32 0, i32 1
  %arrayidx304 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld303, i32 0, i64 0
  %rtx305 = bitcast %union.rtunion_def* %arrayidx304 to %struct.rtx_def**
  %152 = load %struct.rtx_def*, %struct.rtx_def** %rtx305, align 8
  %153 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld306 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1
  %arrayidx307 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld306, i32 0, i64 0
  %rtx308 = bitcast %union.rtunion_def* %arrayidx307 to %struct.rtx_def**
  %154 = load %struct.rtx_def*, %struct.rtx_def** %rtx308, align 8
  %cmp309 = icmp eq %struct.rtx_def* %152, %154
  br i1 %cmp309, label %if.then.310, label %if.end.315

if.then.310:                                      ; preds = %land.lhs.true.299, %land.lhs.true.280
  %155 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %tobool311 = icmp ne %struct.rtx_def* %155, null
  br i1 %tobool311, label %if.then.312, label %if.else.313

if.then.312:                                      ; preds = %if.then.310
  %156 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  store %struct.rtx_def* %156, %struct.rtx_def** %place2, align 8
  br label %if.end.314

if.else.313:                                      ; preds = %if.then.310
  %157 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  store %struct.rtx_def* %157, %struct.rtx_def** %place, align 8
  br label %if.end.314

if.end.314:                                       ; preds = %if.else.313, %if.then.312
  br label %if.end.315

if.end.315:                                       ; preds = %if.end.314, %land.lhs.true.299, %land.lhs.true.292, %lor.lhs.false.289, %if.end.278
  %158 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %tobool316 = icmp ne %struct.rtx_def* %158, null
  br i1 %tobool316, label %land.lhs.true.317, label %if.end.349

land.lhs.true.317:                                ; preds = %if.end.315
  %159 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %160 = bitcast %struct.rtx_def* %159 to i32*
  %bf.load318 = load i32, i32* %160, align 8
  %bf.clear319 = and i32 %bf.load318, 65535
  %cmp320 = icmp eq i32 %bf.clear319, 33
  br i1 %cmp320, label %land.lhs.true.321, label %if.end.349

land.lhs.true.321:                                ; preds = %land.lhs.true.317
  %161 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %fld322 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %161, i32 0, i32 1
  %arrayidx323 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld322, i32 0, i64 7
  %rtx324 = bitcast %union.rtunion_def* %arrayidx323 to %struct.rtx_def**
  %162 = load %struct.rtx_def*, %struct.rtx_def** %rtx324, align 8
  %tobool325 = icmp ne %struct.rtx_def* %162, null
  br i1 %tobool325, label %if.then.326, label %if.end.349

if.then.326:                                      ; preds = %land.lhs.true.321
  %163 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %fld327 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %163, i32 0, i32 1
  %arrayidx328 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld327, i32 0, i64 7
  %rtx329 = bitcast %union.rtunion_def* %arrayidx328 to %struct.rtx_def**
  %164 = load %struct.rtx_def*, %struct.rtx_def** %rtx329, align 8
  %165 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld330 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %165, i32 0, i32 1
  %arrayidx331 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld330, i32 0, i64 0
  %rtx332 = bitcast %union.rtunion_def* %arrayidx331 to %struct.rtx_def**
  %166 = load %struct.rtx_def*, %struct.rtx_def** %rtx332, align 8
  %cmp333 = icmp ne %struct.rtx_def* %164, %166
  br i1 %cmp333, label %if.then.334, label %if.end.335

if.then.334:                                      ; preds = %if.then.326
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 12265, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__FUNCTION__.distribute_notes, i32 0, i32 0)) #5
  unreachable

if.end.335:                                       ; preds = %if.then.326
  %167 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %fld336 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %167, i32 0, i32 1
  %arrayidx337 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld336, i32 0, i64 7
  %rtx338 = bitcast %union.rtunion_def* %arrayidx337 to %struct.rtx_def**
  %168 = load %struct.rtx_def*, %struct.rtx_def** %rtx338, align 8
  %169 = bitcast %struct.rtx_def* %168 to i32*
  %bf.load339 = load i32, i32* %169, align 8
  %bf.clear340 = and i32 %bf.load339, 65535
  %cmp341 = icmp eq i32 %bf.clear340, 36
  br i1 %cmp341, label %if.then.342, label %if.end.348

if.then.342:                                      ; preds = %if.end.335
  %170 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %fld343 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %170, i32 0, i32 1
  %arrayidx344 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld343, i32 0, i64 7
  %rtx345 = bitcast %union.rtunion_def* %arrayidx344 to %struct.rtx_def**
  %171 = load %struct.rtx_def*, %struct.rtx_def** %rtx345, align 8
  %fld346 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %171, i32 0, i32 1
  %arrayidx347 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld346, i32 0, i64 3
  %rtint = bitcast %union.rtunion_def* %arrayidx347 to i32*
  %172 = load i32, i32* %rtint, align 4
  %dec = add nsw i32 %172, -1
  store i32 %dec, i32* %rtint, align 4
  br label %if.end.348

if.end.348:                                       ; preds = %if.then.342, %if.end.335
  store %struct.rtx_def* null, %struct.rtx_def** %place, align 8
  br label %if.end.349

if.end.349:                                       ; preds = %if.end.348, %land.lhs.true.321, %land.lhs.true.317, %if.end.315
  %173 = load %struct.rtx_def*, %struct.rtx_def** %place2, align 8
  %tobool350 = icmp ne %struct.rtx_def* %173, null
  br i1 %tobool350, label %land.lhs.true.351, label %if.end.385

land.lhs.true.351:                                ; preds = %if.end.349
  %174 = load %struct.rtx_def*, %struct.rtx_def** %place2, align 8
  %175 = bitcast %struct.rtx_def* %174 to i32*
  %bf.load352 = load i32, i32* %175, align 8
  %bf.clear353 = and i32 %bf.load352, 65535
  %cmp354 = icmp eq i32 %bf.clear353, 33
  br i1 %cmp354, label %land.lhs.true.355, label %if.end.385

land.lhs.true.355:                                ; preds = %land.lhs.true.351
  %176 = load %struct.rtx_def*, %struct.rtx_def** %place2, align 8
  %fld356 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %176, i32 0, i32 1
  %arrayidx357 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld356, i32 0, i64 7
  %rtx358 = bitcast %union.rtunion_def* %arrayidx357 to %struct.rtx_def**
  %177 = load %struct.rtx_def*, %struct.rtx_def** %rtx358, align 8
  %tobool359 = icmp ne %struct.rtx_def* %177, null
  br i1 %tobool359, label %if.then.360, label %if.end.385

if.then.360:                                      ; preds = %land.lhs.true.355
  %178 = load %struct.rtx_def*, %struct.rtx_def** %place2, align 8
  %fld361 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %178, i32 0, i32 1
  %arrayidx362 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld361, i32 0, i64 7
  %rtx363 = bitcast %union.rtunion_def* %arrayidx362 to %struct.rtx_def**
  %179 = load %struct.rtx_def*, %struct.rtx_def** %rtx363, align 8
  %180 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld364 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %180, i32 0, i32 1
  %arrayidx365 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld364, i32 0, i64 0
  %rtx366 = bitcast %union.rtunion_def* %arrayidx365 to %struct.rtx_def**
  %181 = load %struct.rtx_def*, %struct.rtx_def** %rtx366, align 8
  %cmp367 = icmp ne %struct.rtx_def* %179, %181
  br i1 %cmp367, label %if.then.368, label %if.end.369

if.then.368:                                      ; preds = %if.then.360
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 12273, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__FUNCTION__.distribute_notes, i32 0, i32 0)) #5
  unreachable

if.end.369:                                       ; preds = %if.then.360
  %182 = load %struct.rtx_def*, %struct.rtx_def** %place2, align 8
  %fld370 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %182, i32 0, i32 1
  %arrayidx371 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld370, i32 0, i64 7
  %rtx372 = bitcast %union.rtunion_def* %arrayidx371 to %struct.rtx_def**
  %183 = load %struct.rtx_def*, %struct.rtx_def** %rtx372, align 8
  %184 = bitcast %struct.rtx_def* %183 to i32*
  %bf.load373 = load i32, i32* %184, align 8
  %bf.clear374 = and i32 %bf.load373, 65535
  %cmp375 = icmp eq i32 %bf.clear374, 36
  br i1 %cmp375, label %if.then.376, label %if.end.384

if.then.376:                                      ; preds = %if.end.369
  %185 = load %struct.rtx_def*, %struct.rtx_def** %place2, align 8
  %fld377 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %185, i32 0, i32 1
  %arrayidx378 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld377, i32 0, i64 7
  %rtx379 = bitcast %union.rtunion_def* %arrayidx378 to %struct.rtx_def**
  %186 = load %struct.rtx_def*, %struct.rtx_def** %rtx379, align 8
  %fld380 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %186, i32 0, i32 1
  %arrayidx381 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld380, i32 0, i64 3
  %rtint382 = bitcast %union.rtunion_def* %arrayidx381 to i32*
  %187 = load i32, i32* %rtint382, align 4
  %dec383 = add nsw i32 %187, -1
  store i32 %dec383, i32* %rtint382, align 4
  br label %if.end.384

if.end.384:                                       ; preds = %if.then.376, %if.end.369
  store %struct.rtx_def* null, %struct.rtx_def** %place2, align 8
  br label %if.end.385

if.end.385:                                       ; preds = %if.end.384, %land.lhs.true.355, %land.lhs.true.351, %if.end.349
  br label %sw.epilog

sw.bb.386:                                        ; preds = %if.end, %if.end
  br label %sw.epilog

sw.bb.387:                                        ; preds = %if.end
  %188 = load %struct.rtx_def*, %struct.rtx_def** %from_insn.addr, align 8
  %189 = bitcast %struct.rtx_def* %188 to i32*
  %bf.load388 = load i32, i32* %189, align 8
  %bf.clear389 = and i32 %bf.load388, 65535
  %cmp390 = icmp ne i32 %bf.clear389, 37
  br i1 %cmp390, label %if.then.391, label %if.else.392

if.then.391:                                      ; preds = %sw.bb.387
  %190 = load %struct.rtx_def*, %struct.rtx_def** %from_insn.addr, align 8
  store %struct.rtx_def* %190, %struct.rtx_def** %place, align 8
  br label %if.end.413

if.else.392:                                      ; preds = %sw.bb.387
  %191 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld393 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %191, i32 0, i32 1
  %arrayidx394 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld393, i32 0, i64 0
  %rtx395 = bitcast %union.rtunion_def* %arrayidx394 to %struct.rtx_def**
  %192 = load %struct.rtx_def*, %struct.rtx_def** %rtx395, align 8
  %call396 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %192, i32 7, %struct.rtx_def* null)
  store %struct.rtx_def* %call396, %struct.rtx_def** %tem, align 8
  %193 = load %struct.rtx_def*, %struct.rtx_def** %from_insn.addr, align 8
  %call397 = call %struct.rtx_def* @prev_real_insn(%struct.rtx_def* %193)
  store %struct.rtx_def* %call397, %struct.rtx_def** %place, align 8
  %194 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %tobool398 = icmp ne %struct.rtx_def* %194, null
  br i1 %tobool398, label %land.lhs.true.399, label %if.else.405

land.lhs.true.399:                                ; preds = %if.else.392
  %195 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %tobool400 = icmp ne %struct.rtx_def* %195, null
  br i1 %tobool400, label %if.then.401, label %if.else.405

if.then.401:                                      ; preds = %land.lhs.true.399
  %196 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %197 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld402 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %197, i32 0, i32 1
  %arrayidx403 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld402, i32 0, i64 0
  %rtx404 = bitcast %union.rtunion_def* %arrayidx403 to %struct.rtx_def**
  store %struct.rtx_def* %196, %struct.rtx_def** %rtx404, align 8
  br label %if.end.412

if.else.405:                                      ; preds = %land.lhs.true.399, %if.else.392
  %198 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld406 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %198, i32 0, i32 1
  %arrayidx407 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld406, i32 0, i64 0
  %rtx408 = bitcast %union.rtunion_def* %arrayidx407 to %struct.rtx_def**
  %199 = load %struct.rtx_def*, %struct.rtx_def** %rtx408, align 8
  %200 = load %struct.rtx_def*, %struct.rtx_def** %from_insn.addr, align 8
  %cmp409 = icmp eq %struct.rtx_def* %199, %200
  br i1 %cmp409, label %if.then.410, label %if.end.411

if.then.410:                                      ; preds = %if.else.405
  store %struct.rtx_def* null, %struct.rtx_def** %place, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %tem, align 8
  br label %if.end.411

if.end.411:                                       ; preds = %if.then.410, %if.else.405
  br label %if.end.412

if.end.412:                                       ; preds = %if.end.411, %if.then.401
  br label %if.end.413

if.end.413:                                       ; preds = %if.end.412, %if.then.391
  br label %sw.epilog

sw.bb.414:                                        ; preds = %if.end
  %201 = load %struct.rtx_def*, %struct.rtx_def** %from_insn.addr, align 8
  %202 = bitcast %struct.rtx_def* %201 to i32*
  %bf.load415 = load i32, i32* %202, align 8
  %bf.clear416 = and i32 %bf.load415, 65535
  %cmp417 = icmp ne i32 %bf.clear416, 37
  br i1 %cmp417, label %if.then.418, label %if.else.419

if.then.418:                                      ; preds = %sw.bb.414
  %203 = load %struct.rtx_def*, %struct.rtx_def** %from_insn.addr, align 8
  store %struct.rtx_def* %203, %struct.rtx_def** %place, align 8
  br label %if.end.440

if.else.419:                                      ; preds = %sw.bb.414
  %204 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld420 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %204, i32 0, i32 1
  %arrayidx421 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld420, i32 0, i64 0
  %rtx422 = bitcast %union.rtunion_def* %arrayidx421 to %struct.rtx_def**
  %205 = load %struct.rtx_def*, %struct.rtx_def** %rtx422, align 8
  %call423 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %205, i32 6, %struct.rtx_def* null)
  store %struct.rtx_def* %call423, %struct.rtx_def** %tem, align 8
  %206 = load %struct.rtx_def*, %struct.rtx_def** %from_insn.addr, align 8
  %call424 = call %struct.rtx_def* @next_real_insn(%struct.rtx_def* %206)
  store %struct.rtx_def* %call424, %struct.rtx_def** %place, align 8
  %207 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %tobool425 = icmp ne %struct.rtx_def* %207, null
  br i1 %tobool425, label %land.lhs.true.426, label %if.else.432

land.lhs.true.426:                                ; preds = %if.else.419
  %208 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %tobool427 = icmp ne %struct.rtx_def* %208, null
  br i1 %tobool427, label %if.then.428, label %if.else.432

if.then.428:                                      ; preds = %land.lhs.true.426
  %209 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %210 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld429 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %210, i32 0, i32 1
  %arrayidx430 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld429, i32 0, i64 0
  %rtx431 = bitcast %union.rtunion_def* %arrayidx430 to %struct.rtx_def**
  store %struct.rtx_def* %209, %struct.rtx_def** %rtx431, align 8
  br label %if.end.439

if.else.432:                                      ; preds = %land.lhs.true.426, %if.else.419
  %211 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld433 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %211, i32 0, i32 1
  %arrayidx434 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld433, i32 0, i64 0
  %rtx435 = bitcast %union.rtunion_def* %arrayidx434 to %struct.rtx_def**
  %212 = load %struct.rtx_def*, %struct.rtx_def** %rtx435, align 8
  %213 = load %struct.rtx_def*, %struct.rtx_def** %from_insn.addr, align 8
  %cmp436 = icmp eq %struct.rtx_def* %212, %213
  br i1 %cmp436, label %if.then.437, label %if.end.438

if.then.437:                                      ; preds = %if.else.432
  store %struct.rtx_def* null, %struct.rtx_def** %place, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %tem, align 8
  br label %if.end.438

if.end.438:                                       ; preds = %if.then.437, %if.else.432
  br label %if.end.439

if.end.439:                                       ; preds = %if.end.438, %if.then.428
  br label %if.end.440

if.end.440:                                       ; preds = %if.end.439, %if.then.418
  br label %sw.epilog

sw.bb.441:                                        ; preds = %if.end
  %214 = load %struct.rtx_def*, %struct.rtx_def** %from_insn.addr, align 8
  %tobool442 = icmp ne %struct.rtx_def* %214, null
  br i1 %tobool442, label %land.lhs.true.443, label %if.else.454

land.lhs.true.443:                                ; preds = %sw.bb.441
  %215 = load %struct.rtx_def*, %struct.rtx_def** %from_insn.addr, align 8
  %216 = bitcast %struct.rtx_def* %215 to i32*
  %bf.load444 = load i32, i32* %216, align 8
  %bf.clear445 = and i32 %bf.load444, 65535
  %cmp446 = icmp eq i32 %bf.clear445, 34
  br i1 %cmp446, label %land.lhs.true.447, label %if.else.454

land.lhs.true.447:                                ; preds = %land.lhs.true.443
  %217 = load %struct.rtx_def*, %struct.rtx_def** %from_insn.addr, align 8
  %218 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld448 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %218, i32 0, i32 1
  %arrayidx449 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld448, i32 0, i64 0
  %rtx450 = bitcast %union.rtunion_def* %arrayidx449 to %struct.rtx_def**
  %219 = load %struct.rtx_def*, %struct.rtx_def** %rtx450, align 8
  %call451 = call i32 @find_reg_fusage(%struct.rtx_def* %217, i32 48, %struct.rtx_def* %219)
  %tobool452 = icmp ne i32 %call451, 0
  br i1 %tobool452, label %if.then.453, label %if.else.454

if.then.453:                                      ; preds = %land.lhs.true.447
  %220 = load %struct.rtx_def*, %struct.rtx_def** %from_insn.addr, align 8
  store %struct.rtx_def* %220, %struct.rtx_def** %place, align 8
  br label %if.end.481

if.else.454:                                      ; preds = %land.lhs.true.447, %land.lhs.true.443, %sw.bb.441
  %221 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld455 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %221, i32 0, i32 1
  %arrayidx456 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld455, i32 0, i64 0
  %rtx457 = bitcast %union.rtunion_def* %arrayidx456 to %struct.rtx_def**
  %222 = load %struct.rtx_def*, %struct.rtx_def** %rtx457, align 8
  %223 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld458 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %223, i32 0, i32 1
  %arrayidx459 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld458, i32 0, i64 3
  %rtx460 = bitcast %union.rtunion_def* %arrayidx459 to %struct.rtx_def**
  %224 = load %struct.rtx_def*, %struct.rtx_def** %rtx460, align 8
  %call461 = call i32 @reg_referenced_p(%struct.rtx_def* %222, %struct.rtx_def* %224)
  %tobool462 = icmp ne i32 %call461, 0
  br i1 %tobool462, label %if.then.463, label %if.else.464

if.then.463:                                      ; preds = %if.else.454
  %225 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  store %struct.rtx_def* %225, %struct.rtx_def** %place, align 8
  br label %if.end.480

if.else.464:                                      ; preds = %if.else.454
  %226 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %cmp465 = icmp ne %struct.rtx_def* %226, null
  br i1 %cmp465, label %land.lhs.true.466, label %if.end.479

land.lhs.true.466:                                ; preds = %if.else.464
  %227 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call467 = call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %227)
  %228 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %cmp468 = icmp eq %struct.rtx_def* %call467, %228
  br i1 %cmp468, label %land.lhs.true.469, label %if.end.479

land.lhs.true.469:                                ; preds = %land.lhs.true.466
  %229 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld470 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %229, i32 0, i32 1
  %arrayidx471 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld470, i32 0, i64 0
  %rtx472 = bitcast %union.rtunion_def* %arrayidx471 to %struct.rtx_def**
  %230 = load %struct.rtx_def*, %struct.rtx_def** %rtx472, align 8
  %231 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld473 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %231, i32 0, i32 1
  %arrayidx474 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld473, i32 0, i64 3
  %rtx475 = bitcast %union.rtunion_def* %arrayidx474 to %struct.rtx_def**
  %232 = load %struct.rtx_def*, %struct.rtx_def** %rtx475, align 8
  %call476 = call i32 @reg_referenced_p(%struct.rtx_def* %230, %struct.rtx_def* %232)
  %tobool477 = icmp ne i32 %call476, 0
  br i1 %tobool477, label %if.then.478, label %if.end.479

if.then.478:                                      ; preds = %land.lhs.true.469
  %233 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  store %struct.rtx_def* %233, %struct.rtx_def** %place, align 8
  br label %if.end.479

if.end.479:                                       ; preds = %if.then.478, %land.lhs.true.469, %land.lhs.true.466, %if.else.464
  br label %if.end.480

if.end.480:                                       ; preds = %if.end.479, %if.then.463
  br label %if.end.481

if.end.481:                                       ; preds = %if.end.480, %if.then.453
  %234 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld482 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %234, i32 0, i32 1
  %arrayidx483 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld482, i32 0, i64 0
  %rtx484 = bitcast %union.rtunion_def* %arrayidx483 to %struct.rtx_def**
  %235 = load %struct.rtx_def*, %struct.rtx_def** %rtx484, align 8
  %236 = load %struct.rtx_def*, %struct.rtx_def** %elim_i2.addr, align 8
  %call485 = call i32 @rtx_equal_p(%struct.rtx_def* %235, %struct.rtx_def* %236)
  %tobool486 = icmp ne i32 %call485, 0
  br i1 %tobool486, label %if.then.493, label %lor.lhs.false.487

lor.lhs.false.487:                                ; preds = %if.end.481
  %237 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld488 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %237, i32 0, i32 1
  %arrayidx489 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld488, i32 0, i64 0
  %rtx490 = bitcast %union.rtunion_def* %arrayidx489 to %struct.rtx_def**
  %238 = load %struct.rtx_def*, %struct.rtx_def** %rtx490, align 8
  %239 = load %struct.rtx_def*, %struct.rtx_def** %elim_i1.addr, align 8
  %call491 = call i32 @rtx_equal_p(%struct.rtx_def* %238, %struct.rtx_def* %239)
  %tobool492 = icmp ne i32 %call491, 0
  br i1 %tobool492, label %if.then.493, label %if.end.494

if.then.493:                                      ; preds = %lor.lhs.false.487, %if.end.481
  br label %sw.epilog

if.end.494:                                       ; preds = %lor.lhs.false.487
  %240 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %cmp495 = icmp eq %struct.rtx_def* %240, null
  br i1 %cmp495, label %if.then.496, label %if.end.803

if.then.496:                                      ; preds = %if.end.494
  %241 = load i32, i32* @this_basic_block, align 4
  %idxprom497 = sext i32 %241 to i64
  %242 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %242, i32 0, i32 4
  %bb498 = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx499 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %bb498, i32 0, i64 %idxprom497
  %243 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx499, align 8
  store %struct.basic_block_def* %243, %struct.basic_block_def** %bb, align 8
  %244 = load %struct.rtx_def*, %struct.rtx_def** %i3.addr, align 8
  %fld500 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %244, i32 0, i32 1
  %arrayidx501 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld500, i32 0, i64 1
  %rtx502 = bitcast %union.rtunion_def* %arrayidx501 to %struct.rtx_def**
  %245 = load %struct.rtx_def*, %struct.rtx_def** %rtx502, align 8
  store %struct.rtx_def* %245, %struct.rtx_def** %tem, align 8
  br label %for.cond.503

for.cond.503:                                     ; preds = %for.inc.777, %if.then.496
  %246 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %cmp504 = icmp eq %struct.rtx_def* %246, null
  br i1 %cmp504, label %for.body.505, label %for.end.781

for.body.505:                                     ; preds = %for.cond.503
  %247 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %248 = bitcast %struct.rtx_def* %247 to i32*
  %bf.load506 = load i32, i32* %248, align 8
  %bf.clear507 = and i32 %bf.load506, 65535
  %idxprom508 = sext i32 %bf.clear507 to i64
  %arrayidx509 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom508
  %249 = load i8, i8* %arrayidx509, align 1
  %conv = sext i8 %249 to i32
  %cmp510 = icmp eq i32 %conv, 105
  br i1 %cmp510, label %if.end.517, label %if.then.512

if.then.512:                                      ; preds = %for.body.505
  %250 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %251 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8
  %head = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %251, i32 0, i32 0
  %252 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8
  %cmp513 = icmp eq %struct.rtx_def* %250, %252
  br i1 %cmp513, label %if.then.515, label %if.end.516

if.then.515:                                      ; preds = %if.then.512
  br label %for.end.781

if.end.516:                                       ; preds = %if.then.512
  br label %for.inc.777

if.end.517:                                       ; preds = %for.body.505
  %253 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld518 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %253, i32 0, i32 1
  %arrayidx519 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld518, i32 0, i64 0
  %rtx520 = bitcast %union.rtunion_def* %arrayidx519 to %struct.rtx_def**
  %254 = load %struct.rtx_def*, %struct.rtx_def** %rtx520, align 8
  %255 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld521 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %255, i32 0, i32 1
  %arrayidx522 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld521, i32 0, i64 3
  %rtx523 = bitcast %union.rtunion_def* %arrayidx522 to %struct.rtx_def**
  %256 = load %struct.rtx_def*, %struct.rtx_def** %rtx523, align 8
  %call524 = call i32 @reg_set_p(%struct.rtx_def* %254, %struct.rtx_def* %256)
  %tobool525 = icmp ne i32 %call524, 0
  br i1 %tobool525, label %if.then.526, label %if.else.657

if.then.526:                                      ; preds = %if.end.517
  %257 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %258 = bitcast %struct.rtx_def* %257 to i32*
  %bf.load527 = load i32, i32* %258, align 8
  %bf.clear528 = and i32 %bf.load527, 65535
  %idxprom529 = sext i32 %bf.clear528 to i64
  %arrayidx530 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom529
  %259 = load i8, i8* %arrayidx530, align 1
  %conv531 = sext i8 %259 to i32
  %cmp532 = icmp eq i32 %conv531, 105
  br i1 %cmp532, label %cond.true.534, label %cond.false.551

cond.true.534:                                    ; preds = %if.then.526
  %260 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld535 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %260, i32 0, i32 1
  %arrayidx536 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld535, i32 0, i64 3
  %rtx537 = bitcast %union.rtunion_def* %arrayidx536 to %struct.rtx_def**
  %261 = load %struct.rtx_def*, %struct.rtx_def** %rtx537, align 8
  %262 = bitcast %struct.rtx_def* %261 to i32*
  %bf.load538 = load i32, i32* %262, align 8
  %bf.clear539 = and i32 %bf.load538, 65535
  %cmp540 = icmp eq i32 %bf.clear539, 47
  br i1 %cmp540, label %cond.true.542, label %cond.false.546

cond.true.542:                                    ; preds = %cond.true.534
  %263 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld543 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %263, i32 0, i32 1
  %arrayidx544 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld543, i32 0, i64 3
  %rtx545 = bitcast %union.rtunion_def* %arrayidx544 to %struct.rtx_def**
  %264 = load %struct.rtx_def*, %struct.rtx_def** %rtx545, align 8
  br label %cond.end

cond.false.546:                                   ; preds = %cond.true.534
  %265 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %266 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld547 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %266, i32 0, i32 1
  %arrayidx548 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld547, i32 0, i64 3
  %rtx549 = bitcast %union.rtunion_def* %arrayidx548 to %struct.rtx_def**
  %267 = load %struct.rtx_def*, %struct.rtx_def** %rtx549, align 8
  %call550 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %265, %struct.rtx_def* %267)
  br label %cond.end

cond.end:                                         ; preds = %cond.false.546, %cond.true.542
  %cond = phi %struct.rtx_def* [ %264, %cond.true.542 ], [ %call550, %cond.false.546 ]
  br label %cond.end.552

cond.false.551:                                   ; preds = %if.then.526
  br label %cond.end.552

cond.end.552:                                     ; preds = %cond.false.551, %cond.end
  %cond553 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false.551 ]
  store %struct.rtx_def* %cond553, %struct.rtx_def** %set, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %inner_dest, align 8
  %268 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %cmp554 = icmp ne %struct.rtx_def* %268, null
  br i1 %cmp554, label %if.then.556, label %if.end.578

if.then.556:                                      ; preds = %cond.end.552
  %269 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld557 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %269, i32 0, i32 1
  %arrayidx558 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld557, i32 0, i64 0
  %rtx559 = bitcast %union.rtunion_def* %arrayidx558 to %struct.rtx_def**
  %270 = load %struct.rtx_def*, %struct.rtx_def** %rtx559, align 8
  store %struct.rtx_def* %270, %struct.rtx_def** %inner_dest, align 8
  br label %for.cond.560

for.cond.560:                                     ; preds = %for.inc, %if.then.556
  %271 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest, align 8
  %272 = bitcast %struct.rtx_def* %271 to i32*
  %bf.load561 = load i32, i32* %272, align 8
  %bf.clear562 = and i32 %bf.load561, 65535
  %cmp563 = icmp eq i32 %bf.clear562, 64
  br i1 %cmp563, label %lor.end, label %lor.lhs.false.565

lor.lhs.false.565:                                ; preds = %for.cond.560
  %273 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest, align 8
  %274 = bitcast %struct.rtx_def* %273 to i32*
  %bf.load566 = load i32, i32* %274, align 8
  %bf.clear567 = and i32 %bf.load566, 65535
  %cmp568 = icmp eq i32 %bf.clear567, 63
  br i1 %cmp568, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.565
  %275 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest, align 8
  %276 = bitcast %struct.rtx_def* %275 to i32*
  %bf.load570 = load i32, i32* %276, align 8
  %bf.clear571 = and i32 %bf.load570, 65535
  %cmp572 = icmp eq i32 %bf.clear571, 133
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.565, %for.cond.560
  %277 = phi i1 [ true, %lor.lhs.false.565 ], [ true, %for.cond.560 ], [ %cmp572, %lor.rhs ]
  br i1 %277, label %for.body.574, label %for.end

for.body.574:                                     ; preds = %lor.end
  br label %for.inc

for.inc:                                          ; preds = %for.body.574
  %278 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest, align 8
  %fld575 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %278, i32 0, i32 1
  %arrayidx576 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld575, i32 0, i64 0
  %rtx577 = bitcast %union.rtunion_def* %arrayidx576 to %struct.rtx_def**
  %279 = load %struct.rtx_def*, %struct.rtx_def** %rtx577, align 8
  store %struct.rtx_def* %279, %struct.rtx_def** %inner_dest, align 8
  br label %for.cond.560

for.end:                                          ; preds = %lor.end
  br label %if.end.578

if.end.578:                                       ; preds = %for.end, %cond.end.552
  %280 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %cmp579 = icmp ne %struct.rtx_def* %280, null
  br i1 %cmp579, label %land.lhs.true.581, label %if.else.611

land.lhs.true.581:                                ; preds = %if.end.578
  %281 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld582 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %281, i32 0, i32 1
  %arrayidx583 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld582, i32 0, i64 1
  %rtx584 = bitcast %union.rtunion_def* %arrayidx583 to %struct.rtx_def**
  %282 = load %struct.rtx_def*, %struct.rtx_def** %rtx584, align 8
  %call585 = call i32 @side_effects_p(%struct.rtx_def* %282)
  %tobool586 = icmp ne i32 %call585, 0
  br i1 %tobool586, label %if.else.611, label %land.lhs.true.587

land.lhs.true.587:                                ; preds = %land.lhs.true.581
  %283 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld588 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %283, i32 0, i32 1
  %arrayidx589 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld588, i32 0, i64 0
  %rtx590 = bitcast %union.rtunion_def* %arrayidx589 to %struct.rtx_def**
  %284 = load %struct.rtx_def*, %struct.rtx_def** %rtx590, align 8
  %285 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest, align 8
  %call591 = call i32 @rtx_equal_p(%struct.rtx_def* %284, %struct.rtx_def* %285)
  %tobool592 = icmp ne i32 %call591, 0
  br i1 %tobool592, label %if.then.593, label %if.else.611

if.then.593:                                      ; preds = %land.lhs.true.587
  %286 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %287 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld594 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %287, i32 0, i32 1
  %arrayidx595 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld594, i32 0, i64 3
  %rtx596 = bitcast %union.rtunion_def* %arrayidx595 to %struct.rtx_def**
  store %struct.rtx_def* %286, %struct.rtx_def** %rtx596, align 8
  %288 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld597 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %288, i32 0, i32 1
  %arrayidx598 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld597, i32 0, i64 6
  %rtx599 = bitcast %union.rtunion_def* %arrayidx598 to %struct.rtx_def**
  %289 = load %struct.rtx_def*, %struct.rtx_def** %rtx599, align 8
  %290 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %291 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  call void @distribute_notes(%struct.rtx_def* %289, %struct.rtx_def* %290, %struct.rtx_def* %291, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* null)
  %292 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld600 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %292, i32 0, i32 1
  %arrayidx601 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld600, i32 0, i64 5
  %rtx602 = bitcast %union.rtunion_def* %arrayidx601 to %struct.rtx_def**
  %293 = load %struct.rtx_def*, %struct.rtx_def** %rtx602, align 8
  call void @distribute_links(%struct.rtx_def* %293)
  %294 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %295 = bitcast %struct.rtx_def* %294 to i32*
  %bf.load603 = load i32, i32* %295, align 8
  %bf.clear604 = and i32 %bf.load603, -65536
  %bf.set605 = or i32 %bf.clear604, 37
  store i32 %bf.set605, i32* %295, align 8
  %296 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld606 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %296, i32 0, i32 1
  %arrayidx607 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld606, i32 0, i64 4
  %rtint608 = bitcast %union.rtunion_def* %arrayidx607 to i32*
  store i32 -99, i32* %rtint608, align 4
  %297 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld609 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %297, i32 0, i32 1
  %arrayidx610 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld609, i32 0, i64 3
  %rtstr = bitcast %union.rtunion_def* %arrayidx610 to i8**
  store i8* null, i8** %rtstr, align 8
  br label %if.end.656

if.else.611:                                      ; preds = %land.lhs.true.587, %land.lhs.true.581, %if.end.578
  %298 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld612 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %298, i32 0, i32 1
  %arrayidx613 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld612, i32 0, i64 0
  %rtx614 = bitcast %union.rtunion_def* %arrayidx613 to %struct.rtx_def**
  %299 = load %struct.rtx_def*, %struct.rtx_def** %rtx614, align 8
  %300 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld615 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %300, i32 0, i32 1
  %arrayidx616 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld615, i32 0, i64 3
  %rtx617 = bitcast %union.rtunion_def* %arrayidx616 to %struct.rtx_def**
  %301 = load %struct.rtx_def*, %struct.rtx_def** %rtx617, align 8
  %call618 = call i32 @reg_referenced_p(%struct.rtx_def* %299, %struct.rtx_def* %301)
  %tobool619 = icmp ne i32 %call618, 0
  br i1 %tobool619, label %if.then.620, label %if.else.641

if.then.620:                                      ; preds = %if.else.611
  %302 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %302, %struct.rtx_def** %place, align 8
  %303 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %304 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld621 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %304, i32 0, i32 1
  %arrayidx622 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld621, i32 0, i64 0
  %rtx623 = bitcast %union.rtunion_def* %arrayidx622 to %struct.rtx_def**
  %305 = load %struct.rtx_def*, %struct.rtx_def** %rtx623, align 8
  %fld624 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %305, i32 0, i32 1
  %arrayidx625 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld624, i32 0, i64 0
  %rtuint626 = bitcast %union.rtunion_def* %arrayidx625 to i32*
  %306 = load i32, i32* %rtuint626, align 4
  %call627 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %303, i32 10, i32 %306)
  %tobool628 = icmp ne %struct.rtx_def* %call627, null
  br i1 %tobool628, label %if.end.640, label %if.then.629

if.then.629:                                      ; preds = %if.then.620
  %307 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld630 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %307, i32 0, i32 1
  %arrayidx631 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld630, i32 0, i64 0
  %rtx632 = bitcast %union.rtunion_def* %arrayidx631 to %struct.rtx_def**
  %308 = load %struct.rtx_def*, %struct.rtx_def** %rtx632, align 8
  %309 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld633 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %309, i32 0, i32 1
  %arrayidx634 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld633, i32 0, i64 6
  %rtx635 = bitcast %union.rtunion_def* %arrayidx634 to %struct.rtx_def**
  %310 = load %struct.rtx_def*, %struct.rtx_def** %rtx635, align 8
  %call636 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 10, %struct.rtx_def* %308, %struct.rtx_def* %310)
  %311 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld637 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %311, i32 0, i32 1
  %arrayidx638 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld637, i32 0, i64 6
  %rtx639 = bitcast %union.rtunion_def* %arrayidx638 to %struct.rtx_def**
  store %struct.rtx_def* %call636, %struct.rtx_def** %rtx639, align 8
  br label %if.end.640

if.end.640:                                       ; preds = %if.then.629, %if.then.620
  br label %if.end.655

if.else.641:                                      ; preds = %if.else.611
  %312 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %313 = bitcast %struct.rtx_def* %312 to i32*
  %bf.load642 = load i32, i32* %313, align 8
  %bf.clear643 = and i32 %bf.load642, -16711681
  %bf.set644 = or i32 %bf.clear643, 655360
  store i32 %bf.set644, i32* %313, align 8
  %314 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %315 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld645 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %315, i32 0, i32 1
  %arrayidx646 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld645, i32 0, i64 0
  %rtx647 = bitcast %union.rtunion_def* %arrayidx646 to %struct.rtx_def**
  %316 = load %struct.rtx_def*, %struct.rtx_def** %rtx647, align 8
  %fld648 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %316, i32 0, i32 1
  %arrayidx649 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld648, i32 0, i64 0
  %rtuint650 = bitcast %union.rtunion_def* %arrayidx649 to i32*
  %317 = load i32, i32* %rtuint650, align 4
  %call651 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %314, i32 10, i32 %317)
  %tobool652 = icmp ne %struct.rtx_def* %call651, null
  br i1 %tobool652, label %if.end.654, label %if.then.653

if.then.653:                                      ; preds = %if.else.641
  %318 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %318, %struct.rtx_def** %place, align 8
  br label %if.end.654

if.end.654:                                       ; preds = %if.then.653, %if.else.641
  br label %for.end.781

if.end.655:                                       ; preds = %if.end.640
  br label %if.end.656

if.end.656:                                       ; preds = %if.end.655, %if.then.593
  br label %if.end.771

if.else.657:                                      ; preds = %if.end.517
  %319 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld658 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %319, i32 0, i32 1
  %arrayidx659 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld658, i32 0, i64 0
  %rtx660 = bitcast %union.rtunion_def* %arrayidx659 to %struct.rtx_def**
  %320 = load %struct.rtx_def*, %struct.rtx_def** %rtx660, align 8
  %321 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld661 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %321, i32 0, i32 1
  %arrayidx662 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld661, i32 0, i64 3
  %rtx663 = bitcast %union.rtunion_def* %arrayidx662 to %struct.rtx_def**
  %322 = load %struct.rtx_def*, %struct.rtx_def** %rtx663, align 8
  %call664 = call i32 @reg_referenced_p(%struct.rtx_def* %320, %struct.rtx_def* %322)
  %tobool665 = icmp ne i32 %call664, 0
  br i1 %tobool665, label %if.then.677, label %lor.lhs.false.666

lor.lhs.false.666:                                ; preds = %if.else.657
  %323 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %324 = bitcast %struct.rtx_def* %323 to i32*
  %bf.load667 = load i32, i32* %324, align 8
  %bf.clear668 = and i32 %bf.load667, 65535
  %cmp669 = icmp eq i32 %bf.clear668, 34
  br i1 %cmp669, label %land.lhs.true.671, label %if.end.770

land.lhs.true.671:                                ; preds = %lor.lhs.false.666
  %325 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %326 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld672 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %326, i32 0, i32 1
  %arrayidx673 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld672, i32 0, i64 0
  %rtx674 = bitcast %union.rtunion_def* %arrayidx673 to %struct.rtx_def**
  %327 = load %struct.rtx_def*, %struct.rtx_def** %rtx674, align 8
  %call675 = call i32 @find_reg_fusage(%struct.rtx_def* %325, i32 48, %struct.rtx_def* %327)
  %tobool676 = icmp ne i32 %call675, 0
  br i1 %tobool676, label %if.then.677, label %if.end.770

if.then.677:                                      ; preds = %land.lhs.true.671, %if.else.657
  %328 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %328, %struct.rtx_def** %place, align 8
  %329 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %tobool678 = icmp ne %struct.rtx_def* %329, null
  br i1 %tobool678, label %land.lhs.true.679, label %if.end.769

land.lhs.true.679:                                ; preds = %if.then.677
  %330 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %fld680 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %330, i32 0, i32 1
  %arrayidx681 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld680, i32 0, i64 0
  %rtint682 = bitcast %union.rtunion_def* %arrayidx681 to i32*
  %331 = load i32, i32* %rtint682, align 4
  %332 = load i32, i32* @max_uid_cuid, align 4
  %cmp683 = icmp sle i32 %331, %332
  br i1 %cmp683, label %land.lhs.true.685, label %if.end.769

land.lhs.true.685:                                ; preds = %land.lhs.true.679
  %333 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %fld686 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %333, i32 0, i32 1
  %arrayidx687 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld686, i32 0, i64 0
  %rtint688 = bitcast %union.rtunion_def* %arrayidx687 to i32*
  %334 = load i32, i32* %rtint688, align 4
  %335 = load i32, i32* @max_uid_cuid, align 4
  %cmp689 = icmp sgt i32 %334, %335
  br i1 %cmp689, label %cond.true.691, label %cond.false.693

cond.true.691:                                    ; preds = %land.lhs.true.685
  %336 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %call692 = call i32 @insn_cuid(%struct.rtx_def* %336)
  br label %cond.end.699

cond.false.693:                                   ; preds = %land.lhs.true.685
  %337 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %fld694 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %337, i32 0, i32 1
  %arrayidx695 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld694, i32 0, i64 0
  %rtint696 = bitcast %union.rtunion_def* %arrayidx695 to i32*
  %338 = load i32, i32* %rtint696, align 4
  %idxprom697 = sext i32 %338 to i64
  %339 = load i32*, i32** @uid_cuid, align 8
  %arrayidx698 = getelementptr inbounds i32, i32* %339, i64 %idxprom697
  %340 = load i32, i32* %arrayidx698, align 4
  br label %cond.end.699

cond.end.699:                                     ; preds = %cond.false.693, %cond.true.691
  %cond700 = phi i32 [ %call692, %cond.true.691 ], [ %340, %cond.false.693 ]
  %341 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld701 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %341, i32 0, i32 1
  %arrayidx702 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld701, i32 0, i64 0
  %rtint703 = bitcast %union.rtunion_def* %arrayidx702 to i32*
  %342 = load i32, i32* %rtint703, align 4
  %343 = load i32, i32* @max_uid_cuid, align 4
  %cmp704 = icmp sgt i32 %342, %343
  br i1 %cmp704, label %cond.true.706, label %cond.false.708

cond.true.706:                                    ; preds = %cond.end.699
  %344 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call707 = call i32 @insn_cuid(%struct.rtx_def* %344)
  br label %cond.end.714

cond.false.708:                                   ; preds = %cond.end.699
  %345 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld709 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %345, i32 0, i32 1
  %arrayidx710 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld709, i32 0, i64 0
  %rtint711 = bitcast %union.rtunion_def* %arrayidx710 to i32*
  %346 = load i32, i32* %rtint711, align 4
  %idxprom712 = sext i32 %346 to i64
  %347 = load i32*, i32** @uid_cuid, align 8
  %arrayidx713 = getelementptr inbounds i32, i32* %347, i64 %idxprom712
  %348 = load i32, i32* %arrayidx713, align 4
  br label %cond.end.714

cond.end.714:                                     ; preds = %cond.false.708, %cond.true.706
  %cond715 = phi i32 [ %call707, %cond.true.706 ], [ %348, %cond.false.708 ]
  %cmp716 = icmp sgt i32 %cond700, %cond715
  br i1 %cmp716, label %land.lhs.true.718, label %if.end.769

land.lhs.true.718:                                ; preds = %cond.end.714
  %349 = load %struct.rtx_def*, %struct.rtx_def** %from_insn.addr, align 8
  %tobool719 = icmp ne %struct.rtx_def* %349, null
  br i1 %tobool719, label %land.lhs.true.720, label %if.end.769

land.lhs.true.720:                                ; preds = %land.lhs.true.718
  %350 = load %struct.rtx_def*, %struct.rtx_def** %from_insn.addr, align 8
  %fld721 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %350, i32 0, i32 1
  %arrayidx722 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld721, i32 0, i64 0
  %rtint723 = bitcast %union.rtunion_def* %arrayidx722 to i32*
  %351 = load i32, i32* %rtint723, align 4
  %352 = load i32, i32* @max_uid_cuid, align 4
  %cmp724 = icmp sgt i32 %351, %352
  br i1 %cmp724, label %cond.true.726, label %cond.false.728

cond.true.726:                                    ; preds = %land.lhs.true.720
  %353 = load %struct.rtx_def*, %struct.rtx_def** %from_insn.addr, align 8
  %call727 = call i32 @insn_cuid(%struct.rtx_def* %353)
  br label %cond.end.734

cond.false.728:                                   ; preds = %land.lhs.true.720
  %354 = load %struct.rtx_def*, %struct.rtx_def** %from_insn.addr, align 8
  %fld729 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %354, i32 0, i32 1
  %arrayidx730 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld729, i32 0, i64 0
  %rtint731 = bitcast %union.rtunion_def* %arrayidx730 to i32*
  %355 = load i32, i32* %rtint731, align 4
  %idxprom732 = sext i32 %355 to i64
  %356 = load i32*, i32** @uid_cuid, align 8
  %arrayidx733 = getelementptr inbounds i32, i32* %356, i64 %idxprom732
  %357 = load i32, i32* %arrayidx733, align 4
  br label %cond.end.734

cond.end.734:                                     ; preds = %cond.false.728, %cond.true.726
  %cond735 = phi i32 [ %call727, %cond.true.726 ], [ %357, %cond.false.728 ]
  %358 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld736 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %358, i32 0, i32 1
  %arrayidx737 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld736, i32 0, i64 0
  %rtint738 = bitcast %union.rtunion_def* %arrayidx737 to i32*
  %359 = load i32, i32* %rtint738, align 4
  %360 = load i32, i32* @max_uid_cuid, align 4
  %cmp739 = icmp sgt i32 %359, %360
  br i1 %cmp739, label %cond.true.741, label %cond.false.743

cond.true.741:                                    ; preds = %cond.end.734
  %361 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %call742 = call i32 @insn_cuid(%struct.rtx_def* %361)
  br label %cond.end.749

cond.false.743:                                   ; preds = %cond.end.734
  %362 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld744 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %362, i32 0, i32 1
  %arrayidx745 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld744, i32 0, i64 0
  %rtint746 = bitcast %union.rtunion_def* %arrayidx745 to i32*
  %363 = load i32, i32* %rtint746, align 4
  %idxprom747 = sext i32 %363 to i64
  %364 = load i32*, i32** @uid_cuid, align 8
  %arrayidx748 = getelementptr inbounds i32, i32* %364, i64 %idxprom747
  %365 = load i32, i32* %arrayidx748, align 4
  br label %cond.end.749

cond.end.749:                                     ; preds = %cond.false.743, %cond.true.741
  %cond750 = phi i32 [ %call742, %cond.true.741 ], [ %365, %cond.false.743 ]
  %cmp751 = icmp sgt i32 %cond735, %cond750
  br i1 %cmp751, label %land.lhs.true.753, label %if.end.769

land.lhs.true.753:                                ; preds = %cond.end.749
  %366 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld754 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %366, i32 0, i32 1
  %arrayidx755 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld754, i32 0, i64 0
  %rtx756 = bitcast %union.rtunion_def* %arrayidx755 to %struct.rtx_def**
  %367 = load %struct.rtx_def*, %struct.rtx_def** %rtx756, align 8
  %368 = load %struct.rtx_def*, %struct.rtx_def** %i2.addr, align 8
  %fld757 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %368, i32 0, i32 1
  %arrayidx758 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld757, i32 0, i64 3
  %rtx759 = bitcast %union.rtunion_def* %arrayidx758 to %struct.rtx_def**
  %369 = load %struct.rtx_def*, %struct.rtx_def** %rtx759, align 8
  %call760 = call i32 @reg_referenced_p(%struct.rtx_def* %367, %struct.rtx_def* %369)
  %tobool761 = icmp ne i32 %call760, 0
  br i1 %tobool761, label %if.then.762, label %if.end.769

if.then.762:                                      ; preds = %land.lhs.true.753
  %370 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %fld763 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %370, i32 0, i32 1
  %arrayidx764 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld763, i32 0, i64 5
  %rtx765 = bitcast %union.rtunion_def* %arrayidx764 to %struct.rtx_def**
  %371 = load %struct.rtx_def*, %struct.rtx_def** %rtx765, align 8
  store %struct.rtx_def* %371, %struct.rtx_def** %links, align 8
  %372 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %fld766 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %372, i32 0, i32 1
  %arrayidx767 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld766, i32 0, i64 5
  %rtx768 = bitcast %union.rtunion_def* %arrayidx767 to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %rtx768, align 8
  %373 = load %struct.rtx_def*, %struct.rtx_def** %links, align 8
  call void @distribute_links(%struct.rtx_def* %373)
  br label %if.end.769

if.end.769:                                       ; preds = %if.then.762, %land.lhs.true.753, %cond.end.749, %land.lhs.true.718, %cond.end.714, %land.lhs.true.679, %if.then.677
  br label %for.end.781

if.end.770:                                       ; preds = %land.lhs.true.671, %lor.lhs.false.666
  br label %if.end.771

if.end.771:                                       ; preds = %if.end.770, %if.end.656
  %374 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %375 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8
  %head772 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %375, i32 0, i32 0
  %376 = load %struct.rtx_def*, %struct.rtx_def** %head772, align 8
  %cmp773 = icmp eq %struct.rtx_def* %374, %376
  br i1 %cmp773, label %if.then.775, label %if.end.776

if.then.775:                                      ; preds = %if.end.771
  br label %for.end.781

if.end.776:                                       ; preds = %if.end.771
  br label %for.inc.777

for.inc.777:                                      ; preds = %if.end.776, %if.end.516
  %377 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld778 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %377, i32 0, i32 1
  %arrayidx779 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld778, i32 0, i64 1
  %rtx780 = bitcast %union.rtunion_def* %arrayidx779 to %struct.rtx_def**
  %378 = load %struct.rtx_def*, %struct.rtx_def** %rtx780, align 8
  store %struct.rtx_def* %378, %struct.rtx_def** %tem, align 8
  br label %for.cond.503

for.end.781:                                      ; preds = %if.then.775, %if.end.769, %if.end.654, %if.then.515, %for.cond.503
  %379 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %380 = bitcast %struct.rtx_def* %379 to i32*
  %bf.load782 = load i32, i32* %380, align 8
  %bf.lshr783 = lshr i32 %bf.load782, 16
  %bf.clear784 = and i32 %bf.lshr783, 255
  %cmp785 = icmp eq i32 %bf.clear784, 1
  br i1 %cmp785, label %land.lhs.true.787, label %if.end.802

land.lhs.true.787:                                ; preds = %for.end.781
  %381 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %cmp788 = icmp eq %struct.rtx_def* %381, null
  br i1 %cmp788, label %land.lhs.true.790, label %if.end.802

land.lhs.true.790:                                ; preds = %land.lhs.true.787
  %382 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8
  %global_live_at_start = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %382, i32 0, i32 8
  %383 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %global_live_at_start, align 8
  %384 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld791 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %384, i32 0, i32 1
  %arrayidx792 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld791, i32 0, i64 0
  %rtx793 = bitcast %union.rtunion_def* %arrayidx792 to %struct.rtx_def**
  %385 = load %struct.rtx_def*, %struct.rtx_def** %rtx793, align 8
  %fld794 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %385, i32 0, i32 1
  %arrayidx795 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld794, i32 0, i64 0
  %rtuint796 = bitcast %union.rtunion_def* %arrayidx795 to i32*
  %386 = load i32, i32* %rtuint796, align 4
  %call797 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %383, i32 %386)
  %tobool798 = icmp ne i32 %call797, 0
  br i1 %tobool798, label %if.then.799, label %if.end.802

if.then.799:                                      ; preds = %land.lhs.true.790
  %387 = load i32, i32* @this_basic_block, align 4
  %rem = urem i32 %387, 64
  %sh_prom = zext i32 %rem to i64
  %shl = shl i64 1, %sh_prom
  %388 = load i32, i32* @this_basic_block, align 4
  %div = udiv i32 %388, 64
  %idxprom800 = zext i32 %div to i64
  %389 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @refresh_blocks, align 8
  %elms = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %389, i32 0, i32 3
  %arrayidx801 = getelementptr inbounds [1 x i64], [1 x i64]* %elms, i32 0, i64 %idxprom800
  %390 = load i64, i64* %arrayidx801, align 8
  %or = or i64 %390, %shl
  store i64 %or, i64* %arrayidx801, align 8
  store i32 1, i32* @need_refresh, align 4
  br label %if.end.802

if.end.802:                                       ; preds = %if.then.799, %land.lhs.true.790, %land.lhs.true.787, %for.end.781
  br label %if.end.803

if.end.803:                                       ; preds = %if.end.802, %if.end.494
  %391 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %tobool804 = icmp ne %struct.rtx_def* %391, null
  br i1 %tobool804, label %land.lhs.true.805, label %if.end.1247

land.lhs.true.805:                                ; preds = %if.end.803
  %392 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %393 = bitcast %struct.rtx_def* %392 to i32*
  %bf.load806 = load i32, i32* %393, align 8
  %bf.lshr807 = lshr i32 %bf.load806, 16
  %bf.clear808 = and i32 %bf.lshr807, 255
  %cmp809 = icmp eq i32 %bf.clear808, 1
  br i1 %cmp809, label %if.then.811, label %if.end.1247

if.then.811:                                      ; preds = %land.lhs.true.805
  %394 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld812 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %394, i32 0, i32 1
  %arrayidx813 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld812, i32 0, i64 0
  %rtx814 = bitcast %union.rtunion_def* %arrayidx813 to %struct.rtx_def**
  %395 = load %struct.rtx_def*, %struct.rtx_def** %rtx814, align 8
  %fld815 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %395, i32 0, i32 1
  %arrayidx816 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld815, i32 0, i64 0
  %rtuint817 = bitcast %union.rtunion_def* %arrayidx816 to i32*
  %396 = load i32, i32* %rtuint817, align 4
  store i32 %396, i32* %regno, align 4
  %397 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %call818 = call i32 @noop_move_p(%struct.rtx_def* %397)
  %tobool819 = icmp ne i32 %call818, 0
  br i1 %tobool819, label %if.then.820, label %if.end.829

if.then.820:                                      ; preds = %if.then.811
  %398 = load i32, i32* @this_basic_block, align 4
  %rem821 = urem i32 %398, 64
  %sh_prom822 = zext i32 %rem821 to i64
  %shl823 = shl i64 1, %sh_prom822
  %399 = load i32, i32* @this_basic_block, align 4
  %div824 = udiv i32 %399, 64
  %idxprom825 = zext i32 %div824 to i64
  %400 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @refresh_blocks, align 8
  %elms826 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %400, i32 0, i32 3
  %arrayidx827 = getelementptr inbounds [1 x i64], [1 x i64]* %elms826, i32 0, i64 %idxprom825
  %401 = load i64, i64* %arrayidx827, align 8
  %or828 = or i64 %401, %shl823
  store i64 %or828, i64* %arrayidx827, align 8
  store i32 1, i32* @need_refresh, align 4
  br label %if.end.829

if.end.829:                                       ; preds = %if.then.820, %if.then.811
  %402 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %403 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld830 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %403, i32 0, i32 1
  %arrayidx831 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld830, i32 0, i64 0
  %rtx832 = bitcast %union.rtunion_def* %arrayidx831 to %struct.rtx_def**
  %404 = load %struct.rtx_def*, %struct.rtx_def** %rtx832, align 8
  %call833 = call i32 @dead_or_set_p(%struct.rtx_def* %402, %struct.rtx_def* %404)
  %tobool834 = icmp ne i32 %call833, 0
  br i1 %tobool834, label %if.then.844, label %lor.lhs.false.835

lor.lhs.false.835:                                ; preds = %if.end.829
  %405 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld836 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %405, i32 0, i32 1
  %arrayidx837 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld836, i32 0, i64 0
  %rtx838 = bitcast %union.rtunion_def* %arrayidx837 to %struct.rtx_def**
  %406 = load %struct.rtx_def*, %struct.rtx_def** %rtx838, align 8
  %407 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %fld839 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %407, i32 0, i32 1
  %arrayidx840 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld839, i32 0, i64 3
  %rtx841 = bitcast %union.rtunion_def* %arrayidx840 to %struct.rtx_def**
  %408 = load %struct.rtx_def*, %struct.rtx_def** %rtx841, align 8
  %call842 = call i32 @reg_bitfield_target_p(%struct.rtx_def* %406, %struct.rtx_def* %408)
  %tobool843 = icmp ne i32 %call842, 0
  br i1 %tobool843, label %if.then.844, label %if.else.853

if.then.844:                                      ; preds = %lor.lhs.false.835, %if.end.829
  %409 = load i32, i32* %regno, align 4
  %idxprom845 = zext i32 %409 to i64
  %410 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_death, align 8
  %arrayidx846 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %410, i64 %idxprom845
  %411 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx846, align 8
  %412 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %cmp847 = icmp ne %struct.rtx_def* %411, %412
  br i1 %cmp847, label %if.then.849, label %if.end.852

if.then.849:                                      ; preds = %if.then.844
  %413 = load i32, i32* %regno, align 4
  %idxprom850 = zext i32 %413 to i64
  %414 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_death, align 8
  %arrayidx851 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %414, i64 %idxprom850
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx851, align 8
  br label %if.end.852

if.end.852:                                       ; preds = %if.then.849, %if.then.844
  store %struct.rtx_def* null, %struct.rtx_def** %place, align 8
  br label %if.end.856

if.else.853:                                      ; preds = %lor.lhs.false.835
  %415 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %416 = load i32, i32* %regno, align 4
  %idxprom854 = zext i32 %416 to i64
  %417 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_death, align 8
  %arrayidx855 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %417, i64 %idxprom854
  store %struct.rtx_def* %415, %struct.rtx_def** %arrayidx855, align 8
  br label %if.end.856

if.end.856:                                       ; preds = %if.else.853, %if.end.852
  %418 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %tobool857 = icmp ne %struct.rtx_def* %418, null
  br i1 %tobool857, label %land.lhs.true.858, label %if.end.1246

land.lhs.true.858:                                ; preds = %if.end.856
  %419 = load i32, i32* %regno, align 4
  %cmp859 = icmp ult i32 %419, 53
  br i1 %cmp859, label %land.lhs.true.861, label %if.end.1246

land.lhs.true.861:                                ; preds = %land.lhs.true.858
  %420 = load i32, i32* %regno, align 4
  %cmp862 = icmp uge i32 %420, 8
  br i1 %cmp862, label %land.lhs.true.864, label %lor.lhs.false.867

land.lhs.true.864:                                ; preds = %land.lhs.true.861
  %421 = load i32, i32* %regno, align 4
  %cmp865 = icmp ule i32 %421, 15
  br i1 %cmp865, label %cond.true.885, label %lor.lhs.false.867

lor.lhs.false.867:                                ; preds = %land.lhs.true.864, %land.lhs.true.861
  %422 = load i32, i32* %regno, align 4
  %cmp868 = icmp uge i32 %422, 21
  br i1 %cmp868, label %land.lhs.true.870, label %lor.lhs.false.873

land.lhs.true.870:                                ; preds = %lor.lhs.false.867
  %423 = load i32, i32* %regno, align 4
  %cmp871 = icmp ule i32 %423, 28
  br i1 %cmp871, label %cond.true.885, label %lor.lhs.false.873

lor.lhs.false.873:                                ; preds = %land.lhs.true.870, %lor.lhs.false.867
  %424 = load i32, i32* %regno, align 4
  %cmp874 = icmp uge i32 %424, 45
  br i1 %cmp874, label %land.lhs.true.876, label %lor.lhs.false.879

land.lhs.true.876:                                ; preds = %lor.lhs.false.873
  %425 = load i32, i32* %regno, align 4
  %cmp877 = icmp ule i32 %425, 52
  br i1 %cmp877, label %cond.true.885, label %lor.lhs.false.879

lor.lhs.false.879:                                ; preds = %land.lhs.true.876, %lor.lhs.false.873
  %426 = load i32, i32* %regno, align 4
  %cmp880 = icmp uge i32 %426, 29
  br i1 %cmp880, label %land.lhs.true.882, label %cond.false.909

land.lhs.true.882:                                ; preds = %lor.lhs.false.879
  %427 = load i32, i32* %regno, align 4
  %cmp883 = icmp ule i32 %427, 36
  br i1 %cmp883, label %cond.true.885, label %cond.false.909

cond.true.885:                                    ; preds = %land.lhs.true.882, %land.lhs.true.876, %land.lhs.true.870, %land.lhs.true.864
  %428 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld886 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %428, i32 0, i32 1
  %arrayidx887 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld886, i32 0, i64 0
  %rtx888 = bitcast %union.rtunion_def* %arrayidx887 to %struct.rtx_def**
  %429 = load %struct.rtx_def*, %struct.rtx_def** %rtx888, align 8
  %430 = bitcast %struct.rtx_def* %429 to i32*
  %bf.load889 = load i32, i32* %430, align 8
  %bf.lshr890 = lshr i32 %bf.load889, 16
  %bf.clear891 = and i32 %bf.lshr890, 255
  %idxprom892 = sext i32 %bf.clear891 to i64
  %arrayidx893 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom892
  %431 = load i32, i32* %arrayidx893, align 4
  %cmp894 = icmp eq i32 %431, 5
  br i1 %cmp894, label %lor.end.907, label %lor.rhs.896

lor.rhs.896:                                      ; preds = %cond.true.885
  %432 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld897 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %432, i32 0, i32 1
  %arrayidx898 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld897, i32 0, i64 0
  %rtx899 = bitcast %union.rtunion_def* %arrayidx898 to %struct.rtx_def**
  %433 = load %struct.rtx_def*, %struct.rtx_def** %rtx899, align 8
  %434 = bitcast %struct.rtx_def* %433 to i32*
  %bf.load900 = load i32, i32* %434, align 8
  %bf.lshr901 = lshr i32 %bf.load900, 16
  %bf.clear902 = and i32 %bf.lshr901, 255
  %idxprom903 = sext i32 %bf.clear902 to i64
  %arrayidx904 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom903
  %435 = load i32, i32* %arrayidx904, align 4
  %cmp905 = icmp eq i32 %435, 6
  br label %lor.end.907

lor.end.907:                                      ; preds = %lor.rhs.896, %cond.true.885
  %436 = phi i1 [ true, %cond.true.885 ], [ %cmp905, %lor.rhs.896 ]
  %cond908 = select i1 %436, i32 2, i32 1
  br label %cond.end.955

cond.false.909:                                   ; preds = %land.lhs.true.882, %lor.lhs.false.879
  %437 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld910 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %437, i32 0, i32 1
  %arrayidx911 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld910, i32 0, i64 0
  %rtx912 = bitcast %union.rtunion_def* %arrayidx911 to %struct.rtx_def**
  %438 = load %struct.rtx_def*, %struct.rtx_def** %rtx912, align 8
  %439 = bitcast %struct.rtx_def* %438 to i32*
  %bf.load913 = load i32, i32* %439, align 8
  %bf.lshr914 = lshr i32 %bf.load913, 16
  %bf.clear915 = and i32 %bf.lshr914, 255
  %cmp916 = icmp eq i32 %bf.clear915, 18
  br i1 %cmp916, label %cond.true.918, label %cond.false.921

cond.true.918:                                    ; preds = %cond.false.909
  %440 = load i32, i32* @target_flags, align 4
  %and = and i32 %440, 33554432
  %tobool919 = icmp ne i32 %and, 0
  %cond920 = select i1 %tobool919, i32 2, i32 3
  br label %cond.end.953

cond.false.921:                                   ; preds = %cond.false.909
  %441 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld922 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %441, i32 0, i32 1
  %arrayidx923 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld922, i32 0, i64 0
  %rtx924 = bitcast %union.rtunion_def* %arrayidx923 to %struct.rtx_def**
  %442 = load %struct.rtx_def*, %struct.rtx_def** %rtx924, align 8
  %443 = bitcast %struct.rtx_def* %442 to i32*
  %bf.load925 = load i32, i32* %443, align 8
  %bf.lshr926 = lshr i32 %bf.load925, 16
  %bf.clear927 = and i32 %bf.lshr926, 255
  %cmp928 = icmp eq i32 %bf.clear927, 24
  br i1 %cmp928, label %cond.true.930, label %cond.false.934

cond.true.930:                                    ; preds = %cond.false.921
  %444 = load i32, i32* @target_flags, align 4
  %and931 = and i32 %444, 33554432
  %tobool932 = icmp ne i32 %and931, 0
  %cond933 = select i1 %tobool932, i32 4, i32 6
  br label %cond.end.951

cond.false.934:                                   ; preds = %cond.false.921
  %445 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld935 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %445, i32 0, i32 1
  %arrayidx936 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld935, i32 0, i64 0
  %rtx937 = bitcast %union.rtunion_def* %arrayidx936 to %struct.rtx_def**
  %446 = load %struct.rtx_def*, %struct.rtx_def** %rtx937, align 8
  %447 = bitcast %struct.rtx_def* %446 to i32*
  %bf.load938 = load i32, i32* %447, align 8
  %bf.lshr939 = lshr i32 %bf.load938, 16
  %bf.clear940 = and i32 %bf.lshr939, 255
  %idxprom941 = sext i32 %bf.clear940 to i64
  %arrayidx942 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom941
  %448 = load i8, i8* %arrayidx942, align 1
  %conv943 = zext i8 %448 to i32
  %449 = load i32, i32* @target_flags, align 4
  %and944 = and i32 %449, 33554432
  %tobool945 = icmp ne i32 %and944, 0
  %cond946 = select i1 %tobool945, i32 8, i32 4
  %add = add nsw i32 %conv943, %cond946
  %sub = sub nsw i32 %add, 1
  %450 = load i32, i32* @target_flags, align 4
  %and947 = and i32 %450, 33554432
  %tobool948 = icmp ne i32 %and947, 0
  %cond949 = select i1 %tobool948, i32 8, i32 4
  %div950 = sdiv i32 %sub, %cond949
  br label %cond.end.951

cond.end.951:                                     ; preds = %cond.false.934, %cond.true.930
  %cond952 = phi i32 [ %cond933, %cond.true.930 ], [ %div950, %cond.false.934 ]
  br label %cond.end.953

cond.end.953:                                     ; preds = %cond.end.951, %cond.true.918
  %cond954 = phi i32 [ %cond920, %cond.true.918 ], [ %cond952, %cond.end.951 ]
  br label %cond.end.955

cond.end.955:                                     ; preds = %cond.end.953, %lor.end.907
  %cond956 = phi i32 [ %cond908, %lor.end.907 ], [ %cond954, %cond.end.953 ]
  %cmp957 = icmp sgt i32 %cond956, 1
  br i1 %cmp957, label %if.then.959, label %if.end.1246

if.then.959:                                      ; preds = %cond.end.955
  %451 = load i32, i32* %regno, align 4
  %452 = load i32, i32* %regno, align 4
  %cmp960 = icmp uge i32 %452, 8
  br i1 %cmp960, label %land.lhs.true.962, label %lor.lhs.false.965

land.lhs.true.962:                                ; preds = %if.then.959
  %453 = load i32, i32* %regno, align 4
  %cmp963 = icmp ule i32 %453, 15
  br i1 %cmp963, label %cond.true.983, label %lor.lhs.false.965

lor.lhs.false.965:                                ; preds = %land.lhs.true.962, %if.then.959
  %454 = load i32, i32* %regno, align 4
  %cmp966 = icmp uge i32 %454, 21
  br i1 %cmp966, label %land.lhs.true.968, label %lor.lhs.false.971

land.lhs.true.968:                                ; preds = %lor.lhs.false.965
  %455 = load i32, i32* %regno, align 4
  %cmp969 = icmp ule i32 %455, 28
  br i1 %cmp969, label %cond.true.983, label %lor.lhs.false.971

lor.lhs.false.971:                                ; preds = %land.lhs.true.968, %lor.lhs.false.965
  %456 = load i32, i32* %regno, align 4
  %cmp972 = icmp uge i32 %456, 45
  br i1 %cmp972, label %land.lhs.true.974, label %lor.lhs.false.977

land.lhs.true.974:                                ; preds = %lor.lhs.false.971
  %457 = load i32, i32* %regno, align 4
  %cmp975 = icmp ule i32 %457, 52
  br i1 %cmp975, label %cond.true.983, label %lor.lhs.false.977

lor.lhs.false.977:                                ; preds = %land.lhs.true.974, %lor.lhs.false.971
  %458 = load i32, i32* %regno, align 4
  %cmp978 = icmp uge i32 %458, 29
  br i1 %cmp978, label %land.lhs.true.980, label %cond.false.1007

land.lhs.true.980:                                ; preds = %lor.lhs.false.977
  %459 = load i32, i32* %regno, align 4
  %cmp981 = icmp ule i32 %459, 36
  br i1 %cmp981, label %cond.true.983, label %cond.false.1007

cond.true.983:                                    ; preds = %land.lhs.true.980, %land.lhs.true.974, %land.lhs.true.968, %land.lhs.true.962
  %460 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld984 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %460, i32 0, i32 1
  %arrayidx985 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld984, i32 0, i64 0
  %rtx986 = bitcast %union.rtunion_def* %arrayidx985 to %struct.rtx_def**
  %461 = load %struct.rtx_def*, %struct.rtx_def** %rtx986, align 8
  %462 = bitcast %struct.rtx_def* %461 to i32*
  %bf.load987 = load i32, i32* %462, align 8
  %bf.lshr988 = lshr i32 %bf.load987, 16
  %bf.clear989 = and i32 %bf.lshr988, 255
  %idxprom990 = sext i32 %bf.clear989 to i64
  %arrayidx991 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom990
  %463 = load i32, i32* %arrayidx991, align 4
  %cmp992 = icmp eq i32 %463, 5
  br i1 %cmp992, label %lor.end.1005, label %lor.rhs.994

lor.rhs.994:                                      ; preds = %cond.true.983
  %464 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld995 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %464, i32 0, i32 1
  %arrayidx996 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld995, i32 0, i64 0
  %rtx997 = bitcast %union.rtunion_def* %arrayidx996 to %struct.rtx_def**
  %465 = load %struct.rtx_def*, %struct.rtx_def** %rtx997, align 8
  %466 = bitcast %struct.rtx_def* %465 to i32*
  %bf.load998 = load i32, i32* %466, align 8
  %bf.lshr999 = lshr i32 %bf.load998, 16
  %bf.clear1000 = and i32 %bf.lshr999, 255
  %idxprom1001 = sext i32 %bf.clear1000 to i64
  %arrayidx1002 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1001
  %467 = load i32, i32* %arrayidx1002, align 4
  %cmp1003 = icmp eq i32 %467, 6
  br label %lor.end.1005

lor.end.1005:                                     ; preds = %lor.rhs.994, %cond.true.983
  %468 = phi i1 [ true, %cond.true.983 ], [ %cmp1003, %lor.rhs.994 ]
  %cond1006 = select i1 %468, i32 2, i32 1
  br label %cond.end.1056

cond.false.1007:                                  ; preds = %land.lhs.true.980, %lor.lhs.false.977
  %469 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld1008 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %469, i32 0, i32 1
  %arrayidx1009 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1008, i32 0, i64 0
  %rtx1010 = bitcast %union.rtunion_def* %arrayidx1009 to %struct.rtx_def**
  %470 = load %struct.rtx_def*, %struct.rtx_def** %rtx1010, align 8
  %471 = bitcast %struct.rtx_def* %470 to i32*
  %bf.load1011 = load i32, i32* %471, align 8
  %bf.lshr1012 = lshr i32 %bf.load1011, 16
  %bf.clear1013 = and i32 %bf.lshr1012, 255
  %cmp1014 = icmp eq i32 %bf.clear1013, 18
  br i1 %cmp1014, label %cond.true.1016, label %cond.false.1020

cond.true.1016:                                   ; preds = %cond.false.1007
  %472 = load i32, i32* @target_flags, align 4
  %and1017 = and i32 %472, 33554432
  %tobool1018 = icmp ne i32 %and1017, 0
  %cond1019 = select i1 %tobool1018, i32 2, i32 3
  br label %cond.end.1054

cond.false.1020:                                  ; preds = %cond.false.1007
  %473 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld1021 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %473, i32 0, i32 1
  %arrayidx1022 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1021, i32 0, i64 0
  %rtx1023 = bitcast %union.rtunion_def* %arrayidx1022 to %struct.rtx_def**
  %474 = load %struct.rtx_def*, %struct.rtx_def** %rtx1023, align 8
  %475 = bitcast %struct.rtx_def* %474 to i32*
  %bf.load1024 = load i32, i32* %475, align 8
  %bf.lshr1025 = lshr i32 %bf.load1024, 16
  %bf.clear1026 = and i32 %bf.lshr1025, 255
  %cmp1027 = icmp eq i32 %bf.clear1026, 24
  br i1 %cmp1027, label %cond.true.1029, label %cond.false.1033

cond.true.1029:                                   ; preds = %cond.false.1020
  %476 = load i32, i32* @target_flags, align 4
  %and1030 = and i32 %476, 33554432
  %tobool1031 = icmp ne i32 %and1030, 0
  %cond1032 = select i1 %tobool1031, i32 4, i32 6
  br label %cond.end.1052

cond.false.1033:                                  ; preds = %cond.false.1020
  %477 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld1034 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %477, i32 0, i32 1
  %arrayidx1035 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1034, i32 0, i64 0
  %rtx1036 = bitcast %union.rtunion_def* %arrayidx1035 to %struct.rtx_def**
  %478 = load %struct.rtx_def*, %struct.rtx_def** %rtx1036, align 8
  %479 = bitcast %struct.rtx_def* %478 to i32*
  %bf.load1037 = load i32, i32* %479, align 8
  %bf.lshr1038 = lshr i32 %bf.load1037, 16
  %bf.clear1039 = and i32 %bf.lshr1038, 255
  %idxprom1040 = sext i32 %bf.clear1039 to i64
  %arrayidx1041 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1040
  %480 = load i8, i8* %arrayidx1041, align 1
  %conv1042 = zext i8 %480 to i32
  %481 = load i32, i32* @target_flags, align 4
  %and1043 = and i32 %481, 33554432
  %tobool1044 = icmp ne i32 %and1043, 0
  %cond1045 = select i1 %tobool1044, i32 8, i32 4
  %add1046 = add nsw i32 %conv1042, %cond1045
  %sub1047 = sub nsw i32 %add1046, 1
  %482 = load i32, i32* @target_flags, align 4
  %and1048 = and i32 %482, 33554432
  %tobool1049 = icmp ne i32 %and1048, 0
  %cond1050 = select i1 %tobool1049, i32 8, i32 4
  %div1051 = sdiv i32 %sub1047, %cond1050
  br label %cond.end.1052

cond.end.1052:                                    ; preds = %cond.false.1033, %cond.true.1029
  %cond1053 = phi i32 [ %cond1032, %cond.true.1029 ], [ %div1051, %cond.false.1033 ]
  br label %cond.end.1054

cond.end.1054:                                    ; preds = %cond.end.1052, %cond.true.1016
  %cond1055 = phi i32 [ %cond1019, %cond.true.1016 ], [ %cond1053, %cond.end.1052 ]
  br label %cond.end.1056

cond.end.1056:                                    ; preds = %cond.end.1054, %lor.end.1005
  %cond1057 = phi i32 [ %cond1006, %lor.end.1005 ], [ %cond1055, %cond.end.1054 ]
  %add1058 = add i32 %451, %cond1057
  store i32 %add1058, i32* %endregno, align 4
  store i32 1, i32* %all_used, align 4
  %483 = load i32, i32* %regno, align 4
  store i32 %483, i32* %i, align 4
  br label %for.cond.1059

for.cond.1059:                                    ; preds = %for.inc.1077, %cond.end.1056
  %484 = load i32, i32* %i, align 4
  %485 = load i32, i32* %endregno, align 4
  %cmp1060 = icmp ult i32 %484, %485
  br i1 %cmp1060, label %for.body.1062, label %for.end.1078

for.body.1062:                                    ; preds = %for.cond.1059
  %486 = load i32, i32* %i, align 4
  %487 = load i32, i32* %i, align 4
  %add1063 = add i32 %487, 1
  %488 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %fld1064 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %488, i32 0, i32 1
  %arrayidx1065 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1064, i32 0, i64 3
  %rtx1066 = bitcast %union.rtunion_def* %arrayidx1065 to %struct.rtx_def**
  %489 = load %struct.rtx_def*, %struct.rtx_def** %rtx1066, align 8
  %call1067 = call i32 @refers_to_regno_p(i32 %486, i32 %add1063, %struct.rtx_def* %489, %struct.rtx_def** null)
  %tobool1068 = icmp ne i32 %call1067, 0
  br i1 %tobool1068, label %lor.lhs.false.1072, label %land.lhs.true.1069

land.lhs.true.1069:                               ; preds = %for.body.1062
  %490 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %491 = load i32, i32* %i, align 4
  %call1070 = call i32 @find_regno_fusage(%struct.rtx_def* %490, i32 48, i32 %491)
  %tobool1071 = icmp ne i32 %call1070, 0
  br i1 %tobool1071, label %lor.lhs.false.1072, label %if.then.1075

lor.lhs.false.1072:                               ; preds = %land.lhs.true.1069, %for.body.1062
  %492 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %493 = load i32, i32* %i, align 4
  %call1073 = call i32 @dead_or_set_regno_p(%struct.rtx_def* %492, i32 %493)
  %tobool1074 = icmp ne i32 %call1073, 0
  br i1 %tobool1074, label %if.then.1075, label %if.end.1076

if.then.1075:                                     ; preds = %lor.lhs.false.1072, %land.lhs.true.1069
  store i32 0, i32* %all_used, align 4
  br label %if.end.1076

if.end.1076:                                      ; preds = %if.then.1075, %lor.lhs.false.1072
  br label %for.inc.1077

for.inc.1077:                                     ; preds = %if.end.1076
  %494 = load i32, i32* %i, align 4
  %inc = add i32 %494, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.1059

for.end.1078:                                     ; preds = %for.cond.1059
  %495 = load i32, i32* %all_used, align 4
  %tobool1079 = icmp ne i32 %495, 0
  br i1 %tobool1079, label %if.end.1245, label %if.then.1080

if.then.1080:                                     ; preds = %for.end.1078
  %496 = load i32, i32* %regno, align 4
  store i32 %496, i32* %i, align 4
  br label %for.cond.1081

for.cond.1081:                                    ; preds = %cond.end.1241, %if.then.1080
  %497 = load i32, i32* %i, align 4
  %498 = load i32, i32* %endregno, align 4
  %cmp1082 = icmp ult i32 %497, %498
  br i1 %cmp1082, label %for.body.1084, label %for.end.1244

for.body.1084:                                    ; preds = %for.cond.1081
  %499 = load i32, i32* %i, align 4
  %idxprom1085 = zext i32 %499 to i64
  %arrayidx1086 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_raw_mode, i32 0, i64 %idxprom1085
  %500 = load i32, i32* %arrayidx1086, align 4
  %501 = load i32, i32* %i, align 4
  %call1087 = call %struct.rtx_def* @gen_rtx_REG(i32 %500, i32 %501)
  store %struct.rtx_def* %call1087, %struct.rtx_def** %piece, align 8
  %502 = load i32, i32* @this_basic_block, align 4
  %idxprom1089 = sext i32 %502 to i64
  %503 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %data1090 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %503, i32 0, i32 4
  %bb1091 = bitcast %union.varray_data_tag* %data1090 to [1 x %struct.basic_block_def*]*
  %arrayidx1092 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %bb1091, i32 0, i64 %idxprom1089
  %504 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx1092, align 8
  store %struct.basic_block_def* %504, %struct.basic_block_def** %bb1088, align 8
  %505 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %506 = load %struct.rtx_def*, %struct.rtx_def** %piece, align 8
  %call1093 = call i32 @dead_or_set_p(%struct.rtx_def* %505, %struct.rtx_def* %506)
  %tobool1094 = icmp ne i32 %call1093, 0
  br i1 %tobool1094, label %if.else.1103, label %land.lhs.true.1095

land.lhs.true.1095:                               ; preds = %for.body.1084
  %507 = load %struct.rtx_def*, %struct.rtx_def** %piece, align 8
  %508 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %fld1096 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %508, i32 0, i32 1
  %arrayidx1097 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1096, i32 0, i64 3
  %rtx1098 = bitcast %union.rtunion_def* %arrayidx1097 to %struct.rtx_def**
  %509 = load %struct.rtx_def*, %struct.rtx_def** %rtx1098, align 8
  %call1099 = call i32 @reg_bitfield_target_p(%struct.rtx_def* %507, %struct.rtx_def* %509)
  %tobool1100 = icmp ne i32 %call1099, 0
  br i1 %tobool1100, label %if.else.1103, label %if.then.1101

if.then.1101:                                     ; preds = %land.lhs.true.1095
  %510 = load %struct.rtx_def*, %struct.rtx_def** %piece, align 8
  %call1102 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 1, %struct.rtx_def* %510, %struct.rtx_def* null)
  store %struct.rtx_def* %call1102, %struct.rtx_def** %new_note, align 8
  %511 = load %struct.rtx_def*, %struct.rtx_def** %new_note, align 8
  %512 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %513 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  call void @distribute_notes(%struct.rtx_def* %511, %struct.rtx_def* %512, %struct.rtx_def* %513, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* null)
  br label %if.end.1163

if.else.1103:                                     ; preds = %land.lhs.true.1095, %for.body.1084
  %514 = load i32, i32* %i, align 4
  %515 = load i32, i32* %i, align 4
  %add1104 = add i32 %515, 1
  %516 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %fld1105 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %516, i32 0, i32 1
  %arrayidx1106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1105, i32 0, i64 3
  %rtx1107 = bitcast %union.rtunion_def* %arrayidx1106 to %struct.rtx_def**
  %517 = load %struct.rtx_def*, %struct.rtx_def** %rtx1107, align 8
  %call1108 = call i32 @refers_to_regno_p(i32 %514, i32 %add1104, %struct.rtx_def* %517, %struct.rtx_def** null)
  %tobool1109 = icmp ne i32 %call1108, 0
  br i1 %tobool1109, label %if.end.1162, label %land.lhs.true.1110

land.lhs.true.1110:                               ; preds = %if.else.1103
  %518 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %519 = load i32, i32* %i, align 4
  %call1111 = call i32 @find_regno_fusage(%struct.rtx_def* %518, i32 48, i32 %519)
  %tobool1112 = icmp ne i32 %call1111, 0
  br i1 %tobool1112, label %if.end.1162, label %if.then.1113

if.then.1113:                                     ; preds = %land.lhs.true.1110
  %520 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %fld1114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %520, i32 0, i32 1
  %arrayidx1115 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1114, i32 0, i64 1
  %rtx1116 = bitcast %union.rtunion_def* %arrayidx1115 to %struct.rtx_def**
  %521 = load %struct.rtx_def*, %struct.rtx_def** %rtx1116, align 8
  store %struct.rtx_def* %521, %struct.rtx_def** %tem, align 8
  br label %for.cond.1117

for.cond.1117:                                    ; preds = %for.inc.1157, %if.then.1113
  %522 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %523 = bitcast %struct.rtx_def* %522 to i32*
  %bf.load1118 = load i32, i32* %523, align 8
  %bf.clear1119 = and i32 %bf.load1118, 65535
  %idxprom1120 = sext i32 %bf.clear1119 to i64
  %arrayidx1121 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom1120
  %524 = load i8, i8* %arrayidx1121, align 1
  %conv1122 = sext i8 %524 to i32
  %cmp1123 = icmp eq i32 %conv1122, 105
  br i1 %cmp1123, label %if.end.1139, label %if.then.1125

if.then.1125:                                     ; preds = %for.cond.1117
  %525 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %526 = load %struct.basic_block_def*, %struct.basic_block_def** %bb1088, align 8
  %head1126 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %526, i32 0, i32 0
  %527 = load %struct.rtx_def*, %struct.rtx_def** %head1126, align 8
  %cmp1127 = icmp eq %struct.rtx_def* %525, %527
  br i1 %cmp1127, label %if.then.1129, label %if.end.1138

if.then.1129:                                     ; preds = %if.then.1125
  %528 = load i32, i32* @this_basic_block, align 4
  %rem1130 = urem i32 %528, 64
  %sh_prom1131 = zext i32 %rem1130 to i64
  %shl1132 = shl i64 1, %sh_prom1131
  %529 = load i32, i32* @this_basic_block, align 4
  %div1133 = udiv i32 %529, 64
  %idxprom1134 = zext i32 %div1133 to i64
  %530 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @refresh_blocks, align 8
  %elms1135 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %530, i32 0, i32 3
  %arrayidx1136 = getelementptr inbounds [1 x i64], [1 x i64]* %elms1135, i32 0, i64 %idxprom1134
  %531 = load i64, i64* %arrayidx1136, align 8
  %or1137 = or i64 %531, %shl1132
  store i64 %or1137, i64* %arrayidx1136, align 8
  store i32 1, i32* @need_refresh, align 4
  br label %for.end.1161

if.end.1138:                                      ; preds = %if.then.1125
  br label %for.inc.1157

if.end.1139:                                      ; preds = %for.cond.1117
  %532 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %533 = load %struct.rtx_def*, %struct.rtx_def** %piece, align 8
  %call1140 = call i32 @dead_or_set_p(%struct.rtx_def* %532, %struct.rtx_def* %533)
  %tobool1141 = icmp ne i32 %call1140, 0
  br i1 %tobool1141, label %if.then.1148, label %lor.lhs.false.1142

lor.lhs.false.1142:                               ; preds = %if.end.1139
  %534 = load %struct.rtx_def*, %struct.rtx_def** %piece, align 8
  %535 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld1143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %535, i32 0, i32 1
  %arrayidx1144 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1143, i32 0, i64 3
  %rtx1145 = bitcast %union.rtunion_def* %arrayidx1144 to %struct.rtx_def**
  %536 = load %struct.rtx_def*, %struct.rtx_def** %rtx1145, align 8
  %call1146 = call i32 @reg_bitfield_target_p(%struct.rtx_def* %534, %struct.rtx_def* %536)
  %tobool1147 = icmp ne i32 %call1146, 0
  br i1 %tobool1147, label %if.then.1148, label %if.end.1156

if.then.1148:                                     ; preds = %lor.lhs.false.1142, %if.end.1139
  %537 = load %struct.rtx_def*, %struct.rtx_def** %piece, align 8
  %538 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld1149 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %538, i32 0, i32 1
  %arrayidx1150 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1149, i32 0, i64 6
  %rtx1151 = bitcast %union.rtunion_def* %arrayidx1150 to %struct.rtx_def**
  %539 = load %struct.rtx_def*, %struct.rtx_def** %rtx1151, align 8
  %call1152 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 10, %struct.rtx_def* %537, %struct.rtx_def* %539)
  %540 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld1153 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %540, i32 0, i32 1
  %arrayidx1154 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1153, i32 0, i64 6
  %rtx1155 = bitcast %union.rtunion_def* %arrayidx1154 to %struct.rtx_def**
  store %struct.rtx_def* %call1152, %struct.rtx_def** %rtx1155, align 8
  br label %for.end.1161

if.end.1156:                                      ; preds = %lor.lhs.false.1142
  br label %for.inc.1157

for.inc.1157:                                     ; preds = %if.end.1156, %if.end.1138
  %541 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld1158 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %541, i32 0, i32 1
  %arrayidx1159 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1158, i32 0, i64 1
  %rtx1160 = bitcast %union.rtunion_def* %arrayidx1159 to %struct.rtx_def**
  %542 = load %struct.rtx_def*, %struct.rtx_def** %rtx1160, align 8
  store %struct.rtx_def* %542, %struct.rtx_def** %tem, align 8
  br label %for.cond.1117

for.end.1161:                                     ; preds = %if.then.1148, %if.then.1129
  br label %if.end.1162

if.end.1162:                                      ; preds = %for.end.1161, %land.lhs.true.1110, %if.else.1103
  br label %if.end.1163

if.end.1163:                                      ; preds = %if.end.1162, %if.then.1101
  br label %for.inc.1164

for.inc.1164:                                     ; preds = %if.end.1163
  %543 = load i32, i32* %i, align 4
  %cmp1165 = icmp uge i32 %543, 8
  br i1 %cmp1165, label %land.lhs.true.1167, label %lor.lhs.false.1170

land.lhs.true.1167:                               ; preds = %for.inc.1164
  %544 = load i32, i32* %i, align 4
  %cmp1168 = icmp ule i32 %544, 15
  br i1 %cmp1168, label %cond.true.1188, label %lor.lhs.false.1170

lor.lhs.false.1170:                               ; preds = %land.lhs.true.1167, %for.inc.1164
  %545 = load i32, i32* %i, align 4
  %cmp1171 = icmp uge i32 %545, 21
  br i1 %cmp1171, label %land.lhs.true.1173, label %lor.lhs.false.1176

land.lhs.true.1173:                               ; preds = %lor.lhs.false.1170
  %546 = load i32, i32* %i, align 4
  %cmp1174 = icmp ule i32 %546, 28
  br i1 %cmp1174, label %cond.true.1188, label %lor.lhs.false.1176

lor.lhs.false.1176:                               ; preds = %land.lhs.true.1173, %lor.lhs.false.1170
  %547 = load i32, i32* %i, align 4
  %cmp1177 = icmp uge i32 %547, 45
  br i1 %cmp1177, label %land.lhs.true.1179, label %lor.lhs.false.1182

land.lhs.true.1179:                               ; preds = %lor.lhs.false.1176
  %548 = load i32, i32* %i, align 4
  %cmp1180 = icmp ule i32 %548, 52
  br i1 %cmp1180, label %cond.true.1188, label %lor.lhs.false.1182

lor.lhs.false.1182:                               ; preds = %land.lhs.true.1179, %lor.lhs.false.1176
  %549 = load i32, i32* %i, align 4
  %cmp1183 = icmp uge i32 %549, 29
  br i1 %cmp1183, label %land.lhs.true.1185, label %cond.false.1204

land.lhs.true.1185:                               ; preds = %lor.lhs.false.1182
  %550 = load i32, i32* %i, align 4
  %cmp1186 = icmp ule i32 %550, 36
  br i1 %cmp1186, label %cond.true.1188, label %cond.false.1204

cond.true.1188:                                   ; preds = %land.lhs.true.1185, %land.lhs.true.1179, %land.lhs.true.1173, %land.lhs.true.1167
  %551 = load i32, i32* %i, align 4
  %idxprom1189 = zext i32 %551 to i64
  %arrayidx1190 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_raw_mode, i32 0, i64 %idxprom1189
  %552 = load i32, i32* %arrayidx1190, align 4
  %idxprom1191 = sext i32 %552 to i64
  %arrayidx1192 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1191
  %553 = load i32, i32* %arrayidx1192, align 4
  %cmp1193 = icmp eq i32 %553, 5
  br i1 %cmp1193, label %lor.end.1202, label %lor.rhs.1195

lor.rhs.1195:                                     ; preds = %cond.true.1188
  %554 = load i32, i32* %i, align 4
  %idxprom1196 = zext i32 %554 to i64
  %arrayidx1197 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_raw_mode, i32 0, i64 %idxprom1196
  %555 = load i32, i32* %arrayidx1197, align 4
  %idxprom1198 = sext i32 %555 to i64
  %arrayidx1199 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1198
  %556 = load i32, i32* %arrayidx1199, align 4
  %cmp1200 = icmp eq i32 %556, 6
  br label %lor.end.1202

lor.end.1202:                                     ; preds = %lor.rhs.1195, %cond.true.1188
  %557 = phi i1 [ true, %cond.true.1188 ], [ %cmp1200, %lor.rhs.1195 ]
  %cond1203 = select i1 %557, i32 2, i32 1
  br label %cond.end.1241

cond.false.1204:                                  ; preds = %land.lhs.true.1185, %lor.lhs.false.1182
  %558 = load i32, i32* %i, align 4
  %idxprom1205 = zext i32 %558 to i64
  %arrayidx1206 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_raw_mode, i32 0, i64 %idxprom1205
  %559 = load i32, i32* %arrayidx1206, align 4
  %cmp1207 = icmp eq i32 %559, 18
  br i1 %cmp1207, label %cond.true.1209, label %cond.false.1213

cond.true.1209:                                   ; preds = %cond.false.1204
  %560 = load i32, i32* @target_flags, align 4
  %and1210 = and i32 %560, 33554432
  %tobool1211 = icmp ne i32 %and1210, 0
  %cond1212 = select i1 %tobool1211, i32 2, i32 3
  br label %cond.end.1239

cond.false.1213:                                  ; preds = %cond.false.1204
  %561 = load i32, i32* %i, align 4
  %idxprom1214 = zext i32 %561 to i64
  %arrayidx1215 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_raw_mode, i32 0, i64 %idxprom1214
  %562 = load i32, i32* %arrayidx1215, align 4
  %cmp1216 = icmp eq i32 %562, 24
  br i1 %cmp1216, label %cond.true.1218, label %cond.false.1222

cond.true.1218:                                   ; preds = %cond.false.1213
  %563 = load i32, i32* @target_flags, align 4
  %and1219 = and i32 %563, 33554432
  %tobool1220 = icmp ne i32 %and1219, 0
  %cond1221 = select i1 %tobool1220, i32 4, i32 6
  br label %cond.end.1237

cond.false.1222:                                  ; preds = %cond.false.1213
  %564 = load i32, i32* %i, align 4
  %idxprom1223 = zext i32 %564 to i64
  %arrayidx1224 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_raw_mode, i32 0, i64 %idxprom1223
  %565 = load i32, i32* %arrayidx1224, align 4
  %idxprom1225 = sext i32 %565 to i64
  %arrayidx1226 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1225
  %566 = load i8, i8* %arrayidx1226, align 1
  %conv1227 = zext i8 %566 to i32
  %567 = load i32, i32* @target_flags, align 4
  %and1228 = and i32 %567, 33554432
  %tobool1229 = icmp ne i32 %and1228, 0
  %cond1230 = select i1 %tobool1229, i32 8, i32 4
  %add1231 = add nsw i32 %conv1227, %cond1230
  %sub1232 = sub nsw i32 %add1231, 1
  %568 = load i32, i32* @target_flags, align 4
  %and1233 = and i32 %568, 33554432
  %tobool1234 = icmp ne i32 %and1233, 0
  %cond1235 = select i1 %tobool1234, i32 8, i32 4
  %div1236 = sdiv i32 %sub1232, %cond1235
  br label %cond.end.1237

cond.end.1237:                                    ; preds = %cond.false.1222, %cond.true.1218
  %cond1238 = phi i32 [ %cond1221, %cond.true.1218 ], [ %div1236, %cond.false.1222 ]
  br label %cond.end.1239

cond.end.1239:                                    ; preds = %cond.end.1237, %cond.true.1209
  %cond1240 = phi i32 [ %cond1212, %cond.true.1209 ], [ %cond1238, %cond.end.1237 ]
  br label %cond.end.1241

cond.end.1241:                                    ; preds = %cond.end.1239, %lor.end.1202
  %cond1242 = phi i32 [ %cond1203, %lor.end.1202 ], [ %cond1240, %cond.end.1239 ]
  %569 = load i32, i32* %i, align 4
  %add1243 = add i32 %569, %cond1242
  store i32 %add1243, i32* %i, align 4
  br label %for.cond.1081

for.end.1244:                                     ; preds = %for.cond.1081
  store %struct.rtx_def* null, %struct.rtx_def** %place, align 8
  br label %if.end.1245

if.end.1245:                                      ; preds = %for.end.1244, %for.end.1078
  br label %if.end.1246

if.end.1246:                                      ; preds = %if.end.1245, %cond.end.955, %land.lhs.true.858, %if.end.856
  br label %if.end.1247

if.end.1247:                                      ; preds = %if.end.1246, %land.lhs.true.805, %if.end.803
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 12620, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__FUNCTION__.distribute_notes, i32 0, i32 0)) #5
  unreachable

sw.epilog:                                        ; preds = %if.end.1247, %if.then.493, %if.end.440, %if.end.413, %sw.bb.386, %if.end.385, %if.end.246, %if.end.219, %if.end.155, %if.then.97, %if.end.85, %if.end.70, %if.end.41, %sw.bb.27, %sw.bb
  %570 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %tobool1248 = icmp ne %struct.rtx_def* %570, null
  br i1 %tobool1248, label %if.then.1249, label %if.else.1259

if.then.1249:                                     ; preds = %sw.epilog
  %571 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %fld1250 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %571, i32 0, i32 1
  %arrayidx1251 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1250, i32 0, i64 6
  %rtx1252 = bitcast %union.rtunion_def* %arrayidx1251 to %struct.rtx_def**
  %572 = load %struct.rtx_def*, %struct.rtx_def** %rtx1252, align 8
  %573 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld1253 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %573, i32 0, i32 1
  %arrayidx1254 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1253, i32 0, i64 1
  %rtx1255 = bitcast %union.rtunion_def* %arrayidx1254 to %struct.rtx_def**
  store %struct.rtx_def* %572, %struct.rtx_def** %rtx1255, align 8
  %574 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %575 = load %struct.rtx_def*, %struct.rtx_def** %place, align 8
  %fld1256 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %575, i32 0, i32 1
  %arrayidx1257 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1256, i32 0, i64 6
  %rtx1258 = bitcast %union.rtunion_def* %arrayidx1257 to %struct.rtx_def**
  store %struct.rtx_def* %574, %struct.rtx_def** %rtx1258, align 8
  br label %if.end.1291

if.else.1259:                                     ; preds = %sw.epilog
  %576 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %577 = bitcast %struct.rtx_def* %576 to i32*
  %bf.load1260 = load i32, i32* %577, align 8
  %bf.lshr1261 = lshr i32 %bf.load1260, 16
  %bf.clear1262 = and i32 %bf.lshr1261, 255
  %cmp1263 = icmp eq i32 %bf.clear1262, 1
  br i1 %cmp1263, label %land.lhs.true.1271, label %lor.lhs.false.1265

lor.lhs.false.1265:                               ; preds = %if.else.1259
  %578 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %579 = bitcast %struct.rtx_def* %578 to i32*
  %bf.load1266 = load i32, i32* %579, align 8
  %bf.lshr1267 = lshr i32 %bf.load1266, 16
  %bf.clear1268 = and i32 %bf.lshr1267, 255
  %cmp1269 = icmp eq i32 %bf.clear1268, 10
  br i1 %cmp1269, label %land.lhs.true.1271, label %if.end.1290

land.lhs.true.1271:                               ; preds = %lor.lhs.false.1265, %if.else.1259
  %580 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld1272 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %580, i32 0, i32 1
  %arrayidx1273 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1272, i32 0, i64 0
  %rtx1274 = bitcast %union.rtunion_def* %arrayidx1273 to %struct.rtx_def**
  %581 = load %struct.rtx_def*, %struct.rtx_def** %rtx1274, align 8
  %582 = bitcast %struct.rtx_def* %581 to i32*
  %bf.load1275 = load i32, i32* %582, align 8
  %bf.clear1276 = and i32 %bf.load1275, 65535
  %cmp1277 = icmp eq i32 %bf.clear1276, 61
  br i1 %cmp1277, label %if.then.1279, label %if.end.1290

if.then.1279:                                     ; preds = %land.lhs.true.1271
  %583 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld1280 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %583, i32 0, i32 1
  %arrayidx1281 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1280, i32 0, i64 0
  %rtx1282 = bitcast %union.rtunion_def* %arrayidx1281 to %struct.rtx_def**
  %584 = load %struct.rtx_def*, %struct.rtx_def** %rtx1282, align 8
  %fld1283 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %584, i32 0, i32 1
  %arrayidx1284 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1283, i32 0, i64 0
  %rtuint1285 = bitcast %union.rtunion_def* %arrayidx1284 to i32*
  %585 = load i32, i32* %rtuint1285, align 4
  %idxprom1286 = zext i32 %585 to i64
  %586 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data1287 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %586, i32 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data1287 to [1 x %struct.reg_info_def*]*
  %arrayidx1288 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg, i32 0, i64 %idxprom1286
  %587 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx1288, align 8
  %deaths = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %587, i32 0, i32 6
  %588 = load i32, i32* %deaths, align 4
  %dec1289 = add nsw i32 %588, -1
  store i32 %dec1289, i32* %deaths, align 4
  br label %if.end.1290

if.end.1290:                                      ; preds = %if.then.1279, %land.lhs.true.1271, %lor.lhs.false.1265
  br label %if.end.1291

if.end.1291:                                      ; preds = %if.end.1290, %if.then.1249
  %589 = load %struct.rtx_def*, %struct.rtx_def** %place2, align 8
  %tobool1292 = icmp ne %struct.rtx_def* %589, null
  br i1 %tobool1292, label %if.then.1293, label %if.end.1342

if.then.1293:                                     ; preds = %if.end.1291
  %590 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %591 = bitcast %struct.rtx_def* %590 to i32*
  %bf.load1294 = load i32, i32* %591, align 8
  %bf.lshr1295 = lshr i32 %bf.load1294, 16
  %bf.clear1296 = and i32 %bf.lshr1295, 255
  %cmp1297 = icmp eq i32 %bf.clear1296, 1
  br i1 %cmp1297, label %land.lhs.true.1305, label %lor.lhs.false.1299

lor.lhs.false.1299:                               ; preds = %if.then.1293
  %592 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %593 = bitcast %struct.rtx_def* %592 to i32*
  %bf.load1300 = load i32, i32* %593, align 8
  %bf.lshr1301 = lshr i32 %bf.load1300, 16
  %bf.clear1302 = and i32 %bf.lshr1301, 255
  %cmp1303 = icmp eq i32 %bf.clear1302, 10
  br i1 %cmp1303, label %land.lhs.true.1305, label %if.end.1326

land.lhs.true.1305:                               ; preds = %lor.lhs.false.1299, %if.then.1293
  %594 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld1306 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %594, i32 0, i32 1
  %arrayidx1307 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1306, i32 0, i64 0
  %rtx1308 = bitcast %union.rtunion_def* %arrayidx1307 to %struct.rtx_def**
  %595 = load %struct.rtx_def*, %struct.rtx_def** %rtx1308, align 8
  %596 = bitcast %struct.rtx_def* %595 to i32*
  %bf.load1309 = load i32, i32* %596, align 8
  %bf.clear1310 = and i32 %bf.load1309, 65535
  %cmp1311 = icmp eq i32 %bf.clear1310, 61
  br i1 %cmp1311, label %if.then.1313, label %if.end.1326

if.then.1313:                                     ; preds = %land.lhs.true.1305
  %597 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld1314 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %597, i32 0, i32 1
  %arrayidx1315 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1314, i32 0, i64 0
  %rtx1316 = bitcast %union.rtunion_def* %arrayidx1315 to %struct.rtx_def**
  %598 = load %struct.rtx_def*, %struct.rtx_def** %rtx1316, align 8
  %fld1317 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %598, i32 0, i32 1
  %arrayidx1318 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1317, i32 0, i64 0
  %rtuint1319 = bitcast %union.rtunion_def* %arrayidx1318 to i32*
  %599 = load i32, i32* %rtuint1319, align 4
  %idxprom1320 = zext i32 %599 to i64
  %600 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data1321 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %600, i32 0, i32 4
  %reg1322 = bitcast %union.varray_data_tag* %data1321 to [1 x %struct.reg_info_def*]*
  %arrayidx1323 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg1322, i32 0, i64 %idxprom1320
  %601 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx1323, align 8
  %deaths1324 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %601, i32 0, i32 6
  %602 = load i32, i32* %deaths1324, align 4
  %inc1325 = add nsw i32 %602, 1
  store i32 %inc1325, i32* %deaths1324, align 4
  br label %if.end.1326

if.end.1326:                                      ; preds = %if.then.1313, %land.lhs.true.1305, %lor.lhs.false.1299
  %603 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %604 = bitcast %struct.rtx_def* %603 to i32*
  %bf.load1327 = load i32, i32* %604, align 8
  %bf.clear1328 = and i32 %bf.load1327, 65535
  %605 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %606 = bitcast %struct.rtx_def* %605 to i32*
  %bf.load1329 = load i32, i32* %606, align 8
  %bf.lshr1330 = lshr i32 %bf.load1329, 16
  %bf.clear1331 = and i32 %bf.lshr1330, 255
  %607 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld1332 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %607, i32 0, i32 1
  %arrayidx1333 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1332, i32 0, i64 0
  %rtx1334 = bitcast %union.rtunion_def* %arrayidx1333 to %struct.rtx_def**
  %608 = load %struct.rtx_def*, %struct.rtx_def** %rtx1334, align 8
  %609 = load %struct.rtx_def*, %struct.rtx_def** %place2, align 8
  %fld1335 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %609, i32 0, i32 1
  %arrayidx1336 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1335, i32 0, i64 6
  %rtx1337 = bitcast %union.rtunion_def* %arrayidx1336 to %struct.rtx_def**
  %610 = load %struct.rtx_def*, %struct.rtx_def** %rtx1337, align 8
  %call1338 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %bf.clear1328, i32 %bf.clear1331, %struct.rtx_def* %608, %struct.rtx_def* %610)
  %611 = load %struct.rtx_def*, %struct.rtx_def** %place2, align 8
  %fld1339 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %611, i32 0, i32 1
  %arrayidx1340 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1339, i32 0, i64 6
  %rtx1341 = bitcast %union.rtunion_def* %arrayidx1340 to %struct.rtx_def**
  store %struct.rtx_def* %call1338, %struct.rtx_def** %rtx1341, align 8
  br label %if.end.1342

if.end.1342:                                      ; preds = %if.end.1326, %if.end.1291
  br label %for.inc.1343

for.inc.1343:                                     ; preds = %if.end.1342
  %612 = load %struct.rtx_def*, %struct.rtx_def** %next_note, align 8
  store %struct.rtx_def* %612, %struct.rtx_def** %note, align 8
  br label %for.cond

for.end.1344:                                     ; preds = %for.cond
  ret void
}

declare void @reset_used_flags(%struct.rtx_def*) #1

declare %struct.rtx_def* @copy_rtx_if_shared(%struct.rtx_def*) #1

declare %struct.rtx_def* @replace_rtx(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @move_deaths(%struct.rtx_def* %x, %struct.rtx_def* %maybe_kill_insn, i32 %from_cuid, %struct.rtx_def* %to_insn, %struct.rtx_def** %pnotes) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %maybe_kill_insn.addr = alloca %struct.rtx_def*, align 8
  %from_cuid.addr = alloca i32, align 4
  %to_insn.addr = alloca %struct.rtx_def*, align 8
  %pnotes.addr = alloca %struct.rtx_def**, align 8
  %fmt = alloca i8*, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %regno = alloca i32, align 4
  %where_dead = alloca %struct.rtx_def*, align 8
  %before_dead = alloca %struct.rtx_def*, align 8
  %after_dead = alloca %struct.rtx_def*, align 8
  %note = alloca %struct.rtx_def*, align 8
  %deadregno = alloca i32, align 4
  %deadend = alloca i32, align 4
  %ourend = alloca i32, align 4
  %i307 = alloca i32, align 4
  %ourend440 = alloca i32, align 4
  %i525 = alloca i32, align 4
  %offset = alloca i32, align 4
  %oldnotes = alloca %struct.rtx_def*, align 8
  %dest = alloca %struct.rtx_def*, align 8
  %j = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %maybe_kill_insn, %struct.rtx_def** %maybe_kill_insn.addr, align 8
  store i32 %from_cuid, i32* %from_cuid.addr, align 4
  store %struct.rtx_def* %to_insn, %struct.rtx_def** %to_insn.addr, align 8
  store %struct.rtx_def** %pnotes, %struct.rtx_def*** %pnotes.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %2 = load i32, i32* %code, align 4
  %cmp = icmp eq i32 %2, 61
  br i1 %cmp, label %if.then, label %if.else.666

if.then:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %4 = load i32, i32* %rtuint, align 4
  store i32 %4, i32* %regno, align 4
  %5 = load i32, i32* %regno, align 4
  %idxprom = zext i32 %5 to i64
  %6 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_death, align 8
  %arrayidx1 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %6, i64 %idxprom
  %7 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1, align 8
  store %struct.rtx_def* %7, %struct.rtx_def** %where_dead, align 8
  %8 = load %struct.rtx_def*, %struct.rtx_def** %maybe_kill_insn.addr, align 8
  %tobool = icmp ne %struct.rtx_def* %8, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %10 = load %struct.rtx_def*, %struct.rtx_def** %maybe_kill_insn.addr, align 8
  %call = call i32 @reg_set_p(%struct.rtx_def* %9, %struct.rtx_def* %10)
  %tobool2 = icmp ne i32 %call, 0
  br i1 %tobool2, label %land.lhs.true.3, label %if.end

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %maybe_kill_insn.addr, align 8
  %call4 = call i32 @reg_referenced_p(%struct.rtx_def* %11, %struct.rtx_def* %12)
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.end, label %if.then.6

if.then.6:                                        ; preds = %land.lhs.true.3
  br label %for.end.803

if.end:                                           ; preds = %land.lhs.true.3, %land.lhs.true, %if.then
  %13 = load %struct.rtx_def*, %struct.rtx_def** %where_dead, align 8
  store %struct.rtx_def* %13, %struct.rtx_def** %before_dead, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %14 = load %struct.rtx_def*, %struct.rtx_def** %before_dead, align 8
  %tobool7 = icmp ne %struct.rtx_def* %14, null
  br i1 %tobool7, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %15 = load %struct.rtx_def*, %struct.rtx_def** %before_dead, align 8
  %fld8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i32 0, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx9 to i32*
  %16 = load i32, i32* %rtint, align 4
  %17 = load i32, i32* @max_uid_cuid, align 4
  %cmp10 = icmp sgt i32 %16, %17
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %18 = phi i1 [ false, %while.cond ], [ %cmp10, %land.rhs ]
  br i1 %18, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %19 = load %struct.rtx_def*, %struct.rtx_def** %before_dead, align 8
  %fld11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i32 0, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %20, %struct.rtx_def** %before_dead, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %21 = load %struct.rtx_def*, %struct.rtx_def** %where_dead, align 8
  store %struct.rtx_def* %21, %struct.rtx_def** %after_dead, align 8
  br label %while.cond.13

while.cond.13:                                    ; preds = %while.body.21, %while.end
  %22 = load %struct.rtx_def*, %struct.rtx_def** %after_dead, align 8
  %tobool14 = icmp ne %struct.rtx_def* %22, null
  br i1 %tobool14, label %land.rhs.15, label %land.end.20

land.rhs.15:                                      ; preds = %while.cond.13
  %23 = load %struct.rtx_def*, %struct.rtx_def** %after_dead, align 8
  %fld16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i32 0, i64 0
  %rtint18 = bitcast %union.rtunion_def* %arrayidx17 to i32*
  %24 = load i32, i32* %rtint18, align 4
  %25 = load i32, i32* @max_uid_cuid, align 4
  %cmp19 = icmp sgt i32 %24, %25
  br label %land.end.20

land.end.20:                                      ; preds = %land.rhs.15, %while.cond.13
  %26 = phi i1 [ false, %while.cond.13 ], [ %cmp19, %land.rhs.15 ]
  br i1 %26, label %while.body.21, label %while.end.25

while.body.21:                                    ; preds = %land.end.20
  %27 = load %struct.rtx_def*, %struct.rtx_def** %after_dead, align 8
  %fld22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i32 0, i64 2
  %rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rtx24, align 8
  store %struct.rtx_def* %28, %struct.rtx_def** %after_dead, align 8
  br label %while.cond.13

while.end.25:                                     ; preds = %land.end.20
  %29 = load %struct.rtx_def*, %struct.rtx_def** %before_dead, align 8
  %tobool26 = icmp ne %struct.rtx_def* %29, null
  br i1 %tobool26, label %land.lhs.true.27, label %if.end.665

land.lhs.true.27:                                 ; preds = %while.end.25
  %30 = load %struct.rtx_def*, %struct.rtx_def** %after_dead, align 8
  %tobool28 = icmp ne %struct.rtx_def* %30, null
  br i1 %tobool28, label %land.lhs.true.29, label %if.end.665

land.lhs.true.29:                                 ; preds = %land.lhs.true.27
  %31 = load %struct.rtx_def*, %struct.rtx_def** %before_dead, align 8
  %fld30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i32 0, i64 0
  %rtint32 = bitcast %union.rtunion_def* %arrayidx31 to i32*
  %32 = load i32, i32* %rtint32, align 4
  %33 = load i32, i32* @max_uid_cuid, align 4
  %cmp33 = icmp sgt i32 %32, %33
  br i1 %cmp33, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.29
  %34 = load %struct.rtx_def*, %struct.rtx_def** %before_dead, align 8
  %call34 = call i32 @insn_cuid(%struct.rtx_def* %34)
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.29
  %35 = load %struct.rtx_def*, %struct.rtx_def** %before_dead, align 8
  %fld35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i32 0, i64 0
  %rtint37 = bitcast %union.rtunion_def* %arrayidx36 to i32*
  %36 = load i32, i32* %rtint37, align 4
  %idxprom38 = sext i32 %36 to i64
  %37 = load i32*, i32** @uid_cuid, align 8
  %arrayidx39 = getelementptr inbounds i32, i32* %37, i64 %idxprom38
  %38 = load i32, i32* %arrayidx39, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call34, %cond.true ], [ %38, %cond.false ]
  %39 = load i32, i32* %from_cuid.addr, align 4
  %cmp40 = icmp sge i32 %cond, %39
  br i1 %cmp40, label %land.lhs.true.41, label %if.end.665

land.lhs.true.41:                                 ; preds = %cond.end
  %40 = load %struct.rtx_def*, %struct.rtx_def** %after_dead, align 8
  %fld42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i32 0, i64 0
  %rtint44 = bitcast %union.rtunion_def* %arrayidx43 to i32*
  %41 = load i32, i32* %rtint44, align 4
  %42 = load i32, i32* @max_uid_cuid, align 4
  %cmp45 = icmp sgt i32 %41, %42
  br i1 %cmp45, label %cond.true.46, label %cond.false.48

cond.true.46:                                     ; preds = %land.lhs.true.41
  %43 = load %struct.rtx_def*, %struct.rtx_def** %after_dead, align 8
  %call47 = call i32 @insn_cuid(%struct.rtx_def* %43)
  br label %cond.end.54

cond.false.48:                                    ; preds = %land.lhs.true.41
  %44 = load %struct.rtx_def*, %struct.rtx_def** %after_dead, align 8
  %fld49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i32 0, i64 0
  %rtint51 = bitcast %union.rtunion_def* %arrayidx50 to i32*
  %45 = load i32, i32* %rtint51, align 4
  %idxprom52 = sext i32 %45 to i64
  %46 = load i32*, i32** @uid_cuid, align 8
  %arrayidx53 = getelementptr inbounds i32, i32* %46, i64 %idxprom52
  %47 = load i32, i32* %arrayidx53, align 4
  br label %cond.end.54

cond.end.54:                                      ; preds = %cond.false.48, %cond.true.46
  %cond55 = phi i32 [ %call47, %cond.true.46 ], [ %47, %cond.false.48 ]
  %48 = load %struct.rtx_def*, %struct.rtx_def** %to_insn.addr, align 8
  %fld56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i32 0, i64 0
  %rtint58 = bitcast %union.rtunion_def* %arrayidx57 to i32*
  %49 = load i32, i32* %rtint58, align 4
  %50 = load i32, i32* @max_uid_cuid, align 4
  %cmp59 = icmp sgt i32 %49, %50
  br i1 %cmp59, label %cond.true.60, label %cond.false.62

cond.true.60:                                     ; preds = %cond.end.54
  %51 = load %struct.rtx_def*, %struct.rtx_def** %to_insn.addr, align 8
  %call61 = call i32 @insn_cuid(%struct.rtx_def* %51)
  br label %cond.end.68

cond.false.62:                                    ; preds = %cond.end.54
  %52 = load %struct.rtx_def*, %struct.rtx_def** %to_insn.addr, align 8
  %fld63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1
  %arrayidx64 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i32 0, i64 0
  %rtint65 = bitcast %union.rtunion_def* %arrayidx64 to i32*
  %53 = load i32, i32* %rtint65, align 4
  %idxprom66 = sext i32 %53 to i64
  %54 = load i32*, i32** @uid_cuid, align 8
  %arrayidx67 = getelementptr inbounds i32, i32* %54, i64 %idxprom66
  %55 = load i32, i32* %arrayidx67, align 4
  br label %cond.end.68

cond.end.68:                                      ; preds = %cond.false.62, %cond.true.60
  %cond69 = phi i32 [ %call61, %cond.true.60 ], [ %55, %cond.false.62 ]
  %cmp70 = icmp slt i32 %cond55, %cond69
  br i1 %cmp70, label %if.then.102, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.end.68
  %56 = load %struct.rtx_def*, %struct.rtx_def** %where_dead, align 8
  %57 = load %struct.rtx_def*, %struct.rtx_def** %after_dead, align 8
  %cmp71 = icmp ne %struct.rtx_def* %56, %57
  br i1 %cmp71, label %land.lhs.true.72, label %if.end.665

land.lhs.true.72:                                 ; preds = %lor.lhs.false
  %58 = load %struct.rtx_def*, %struct.rtx_def** %after_dead, align 8
  %fld73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i32 0, i64 0
  %rtint75 = bitcast %union.rtunion_def* %arrayidx74 to i32*
  %59 = load i32, i32* %rtint75, align 4
  %60 = load i32, i32* @max_uid_cuid, align 4
  %cmp76 = icmp sgt i32 %59, %60
  br i1 %cmp76, label %cond.true.77, label %cond.false.79

cond.true.77:                                     ; preds = %land.lhs.true.72
  %61 = load %struct.rtx_def*, %struct.rtx_def** %after_dead, align 8
  %call78 = call i32 @insn_cuid(%struct.rtx_def* %61)
  br label %cond.end.85

cond.false.79:                                    ; preds = %land.lhs.true.72
  %62 = load %struct.rtx_def*, %struct.rtx_def** %after_dead, align 8
  %fld80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1
  %arrayidx81 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld80, i32 0, i64 0
  %rtint82 = bitcast %union.rtunion_def* %arrayidx81 to i32*
  %63 = load i32, i32* %rtint82, align 4
  %idxprom83 = sext i32 %63 to i64
  %64 = load i32*, i32** @uid_cuid, align 8
  %arrayidx84 = getelementptr inbounds i32, i32* %64, i64 %idxprom83
  %65 = load i32, i32* %arrayidx84, align 4
  br label %cond.end.85

cond.end.85:                                      ; preds = %cond.false.79, %cond.true.77
  %cond86 = phi i32 [ %call78, %cond.true.77 ], [ %65, %cond.false.79 ]
  %66 = load %struct.rtx_def*, %struct.rtx_def** %to_insn.addr, align 8
  %fld87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1
  %arrayidx88 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld87, i32 0, i64 0
  %rtint89 = bitcast %union.rtunion_def* %arrayidx88 to i32*
  %67 = load i32, i32* %rtint89, align 4
  %68 = load i32, i32* @max_uid_cuid, align 4
  %cmp90 = icmp sgt i32 %67, %68
  br i1 %cmp90, label %cond.true.91, label %cond.false.93

cond.true.91:                                     ; preds = %cond.end.85
  %69 = load %struct.rtx_def*, %struct.rtx_def** %to_insn.addr, align 8
  %call92 = call i32 @insn_cuid(%struct.rtx_def* %69)
  br label %cond.end.99

cond.false.93:                                    ; preds = %cond.end.85
  %70 = load %struct.rtx_def*, %struct.rtx_def** %to_insn.addr, align 8
  %fld94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx95 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i32 0, i64 0
  %rtint96 = bitcast %union.rtunion_def* %arrayidx95 to i32*
  %71 = load i32, i32* %rtint96, align 4
  %idxprom97 = sext i32 %71 to i64
  %72 = load i32*, i32** @uid_cuid, align 8
  %arrayidx98 = getelementptr inbounds i32, i32* %72, i64 %idxprom97
  %73 = load i32, i32* %arrayidx98, align 4
  br label %cond.end.99

cond.end.99:                                      ; preds = %cond.false.93, %cond.true.91
  %cond100 = phi i32 [ %call92, %cond.true.91 ], [ %73, %cond.false.93 ]
  %cmp101 = icmp eq i32 %cond86, %cond100
  br i1 %cmp101, label %if.then.102, label %if.end.665

if.then.102:                                      ; preds = %cond.end.99, %cond.end.68
  %74 = load i32, i32* %regno, align 4
  %75 = load %struct.rtx_def*, %struct.rtx_def** %where_dead, align 8
  %call103 = call %struct.rtx_def* @remove_death(i32 %74, %struct.rtx_def* %75)
  store %struct.rtx_def* %call103, %struct.rtx_def** %note, align 8
  %76 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %cmp104 = icmp ne %struct.rtx_def* %76, null
  br i1 %cmp104, label %land.lhs.true.105, label %if.else

land.lhs.true.105:                                ; preds = %if.then.102
  %77 = load i32, i32* %regno, align 4
  %cmp106 = icmp ult i32 %77, 53
  br i1 %cmp106, label %land.lhs.true.107, label %if.else

land.lhs.true.107:                                ; preds = %land.lhs.true.105
  %78 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld108, i32 0, i64 0
  %rtx110 = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rtx110, align 8
  %80 = bitcast %struct.rtx_def* %79 to i32*
  %bf.load111 = load i32, i32* %80, align 8
  %bf.lshr = lshr i32 %bf.load111, 16
  %bf.clear112 = and i32 %bf.lshr, 255
  %idxprom113 = sext i32 %bf.clear112 to i64
  %arrayidx114 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom113
  %81 = load i8, i8* %arrayidx114, align 1
  %conv = zext i8 %81 to i32
  %82 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %83 = bitcast %struct.rtx_def* %82 to i32*
  %bf.load115 = load i32, i32* %83, align 8
  %bf.lshr116 = lshr i32 %bf.load115, 16
  %bf.clear117 = and i32 %bf.lshr116, 255
  %idxprom118 = sext i32 %bf.clear117 to i64
  %arrayidx119 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom118
  %84 = load i8, i8* %arrayidx119, align 1
  %conv120 = zext i8 %84 to i32
  %cmp121 = icmp sgt i32 %conv, %conv120
  br i1 %cmp121, label %if.then.123, label %if.else

if.then.123:                                      ; preds = %land.lhs.true.107
  %85 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1
  %arrayidx125 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld124, i32 0, i64 0
  %rtx126 = bitcast %union.rtunion_def* %arrayidx125 to %struct.rtx_def**
  %86 = load %struct.rtx_def*, %struct.rtx_def** %rtx126, align 8
  %fld127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1
  %arrayidx128 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld127, i32 0, i64 0
  %rtuint129 = bitcast %union.rtunion_def* %arrayidx128 to i32*
  %87 = load i32, i32* %rtuint129, align 4
  store i32 %87, i32* %deadregno, align 4
  %88 = load i32, i32* %deadregno, align 4
  %89 = load i32, i32* %deadregno, align 4
  %cmp130 = icmp uge i32 %89, 8
  br i1 %cmp130, label %land.lhs.true.132, label %lor.lhs.false.135

land.lhs.true.132:                                ; preds = %if.then.123
  %90 = load i32, i32* %deadregno, align 4
  %cmp133 = icmp ule i32 %90, 15
  br i1 %cmp133, label %cond.true.153, label %lor.lhs.false.135

lor.lhs.false.135:                                ; preds = %land.lhs.true.132, %if.then.123
  %91 = load i32, i32* %deadregno, align 4
  %cmp136 = icmp uge i32 %91, 21
  br i1 %cmp136, label %land.lhs.true.138, label %lor.lhs.false.141

land.lhs.true.138:                                ; preds = %lor.lhs.false.135
  %92 = load i32, i32* %deadregno, align 4
  %cmp139 = icmp ule i32 %92, 28
  br i1 %cmp139, label %cond.true.153, label %lor.lhs.false.141

lor.lhs.false.141:                                ; preds = %land.lhs.true.138, %lor.lhs.false.135
  %93 = load i32, i32* %deadregno, align 4
  %cmp142 = icmp uge i32 %93, 45
  br i1 %cmp142, label %land.lhs.true.144, label %lor.lhs.false.147

land.lhs.true.144:                                ; preds = %lor.lhs.false.141
  %94 = load i32, i32* %deadregno, align 4
  %cmp145 = icmp ule i32 %94, 52
  br i1 %cmp145, label %cond.true.153, label %lor.lhs.false.147

lor.lhs.false.147:                                ; preds = %land.lhs.true.144, %lor.lhs.false.141
  %95 = load i32, i32* %deadregno, align 4
  %cmp148 = icmp uge i32 %95, 29
  br i1 %cmp148, label %land.lhs.true.150, label %cond.false.175

land.lhs.true.150:                                ; preds = %lor.lhs.false.147
  %96 = load i32, i32* %deadregno, align 4
  %cmp151 = icmp ule i32 %96, 36
  br i1 %cmp151, label %cond.true.153, label %cond.false.175

cond.true.153:                                    ; preds = %land.lhs.true.150, %land.lhs.true.144, %land.lhs.true.138, %land.lhs.true.132
  %97 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %97, i32 0, i32 1
  %arrayidx155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld154, i32 0, i64 0
  %rtx156 = bitcast %union.rtunion_def* %arrayidx155 to %struct.rtx_def**
  %98 = load %struct.rtx_def*, %struct.rtx_def** %rtx156, align 8
  %99 = bitcast %struct.rtx_def* %98 to i32*
  %bf.load157 = load i32, i32* %99, align 8
  %bf.lshr158 = lshr i32 %bf.load157, 16
  %bf.clear159 = and i32 %bf.lshr158, 255
  %idxprom160 = sext i32 %bf.clear159 to i64
  %arrayidx161 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom160
  %100 = load i32, i32* %arrayidx161, align 4
  %cmp162 = icmp eq i32 %100, 5
  br i1 %cmp162, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.153
  %101 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld164 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i32 0, i32 1
  %arrayidx165 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld164, i32 0, i64 0
  %rtx166 = bitcast %union.rtunion_def* %arrayidx165 to %struct.rtx_def**
  %102 = load %struct.rtx_def*, %struct.rtx_def** %rtx166, align 8
  %103 = bitcast %struct.rtx_def* %102 to i32*
  %bf.load167 = load i32, i32* %103, align 8
  %bf.lshr168 = lshr i32 %bf.load167, 16
  %bf.clear169 = and i32 %bf.lshr168, 255
  %idxprom170 = sext i32 %bf.clear169 to i64
  %arrayidx171 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom170
  %104 = load i32, i32* %arrayidx171, align 4
  %cmp172 = icmp eq i32 %104, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.153
  %105 = phi i1 [ true, %cond.true.153 ], [ %cmp172, %lor.rhs ]
  %cond174 = select i1 %105, i32 2, i32 1
  br label %cond.end.220

cond.false.175:                                   ; preds = %land.lhs.true.150, %lor.lhs.false.147
  %106 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld176 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %106, i32 0, i32 1
  %arrayidx177 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld176, i32 0, i64 0
  %rtx178 = bitcast %union.rtunion_def* %arrayidx177 to %struct.rtx_def**
  %107 = load %struct.rtx_def*, %struct.rtx_def** %rtx178, align 8
  %108 = bitcast %struct.rtx_def* %107 to i32*
  %bf.load179 = load i32, i32* %108, align 8
  %bf.lshr180 = lshr i32 %bf.load179, 16
  %bf.clear181 = and i32 %bf.lshr180, 255
  %cmp182 = icmp eq i32 %bf.clear181, 18
  br i1 %cmp182, label %cond.true.184, label %cond.false.187

cond.true.184:                                    ; preds = %cond.false.175
  %109 = load i32, i32* @target_flags, align 4
  %and = and i32 %109, 33554432
  %tobool185 = icmp ne i32 %and, 0
  %cond186 = select i1 %tobool185, i32 2, i32 3
  br label %cond.end.218

cond.false.187:                                   ; preds = %cond.false.175
  %110 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld188 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %110, i32 0, i32 1
  %arrayidx189 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld188, i32 0, i64 0
  %rtx190 = bitcast %union.rtunion_def* %arrayidx189 to %struct.rtx_def**
  %111 = load %struct.rtx_def*, %struct.rtx_def** %rtx190, align 8
  %112 = bitcast %struct.rtx_def* %111 to i32*
  %bf.load191 = load i32, i32* %112, align 8
  %bf.lshr192 = lshr i32 %bf.load191, 16
  %bf.clear193 = and i32 %bf.lshr192, 255
  %cmp194 = icmp eq i32 %bf.clear193, 24
  br i1 %cmp194, label %cond.true.196, label %cond.false.200

cond.true.196:                                    ; preds = %cond.false.187
  %113 = load i32, i32* @target_flags, align 4
  %and197 = and i32 %113, 33554432
  %tobool198 = icmp ne i32 %and197, 0
  %cond199 = select i1 %tobool198, i32 4, i32 6
  br label %cond.end.216

cond.false.200:                                   ; preds = %cond.false.187
  %114 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld201 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %114, i32 0, i32 1
  %arrayidx202 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld201, i32 0, i64 0
  %rtx203 = bitcast %union.rtunion_def* %arrayidx202 to %struct.rtx_def**
  %115 = load %struct.rtx_def*, %struct.rtx_def** %rtx203, align 8
  %116 = bitcast %struct.rtx_def* %115 to i32*
  %bf.load204 = load i32, i32* %116, align 8
  %bf.lshr205 = lshr i32 %bf.load204, 16
  %bf.clear206 = and i32 %bf.lshr205, 255
  %idxprom207 = sext i32 %bf.clear206 to i64
  %arrayidx208 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom207
  %117 = load i8, i8* %arrayidx208, align 1
  %conv209 = zext i8 %117 to i32
  %118 = load i32, i32* @target_flags, align 4
  %and210 = and i32 %118, 33554432
  %tobool211 = icmp ne i32 %and210, 0
  %cond212 = select i1 %tobool211, i32 8, i32 4
  %add = add nsw i32 %conv209, %cond212
  %sub = sub nsw i32 %add, 1
  %119 = load i32, i32* @target_flags, align 4
  %and213 = and i32 %119, 33554432
  %tobool214 = icmp ne i32 %and213, 0
  %cond215 = select i1 %tobool214, i32 8, i32 4
  %div = sdiv i32 %sub, %cond215
  br label %cond.end.216

cond.end.216:                                     ; preds = %cond.false.200, %cond.true.196
  %cond217 = phi i32 [ %cond199, %cond.true.196 ], [ %div, %cond.false.200 ]
  br label %cond.end.218

cond.end.218:                                     ; preds = %cond.end.216, %cond.true.184
  %cond219 = phi i32 [ %cond186, %cond.true.184 ], [ %cond217, %cond.end.216 ]
  br label %cond.end.220

cond.end.220:                                     ; preds = %cond.end.218, %lor.end
  %cond221 = phi i32 [ %cond174, %lor.end ], [ %cond219, %cond.end.218 ]
  %add222 = add i32 %88, %cond221
  store i32 %add222, i32* %deadend, align 4
  %120 = load i32, i32* %regno, align 4
  %121 = load i32, i32* %regno, align 4
  %cmp223 = icmp uge i32 %121, 8
  br i1 %cmp223, label %land.lhs.true.225, label %lor.lhs.false.228

land.lhs.true.225:                                ; preds = %cond.end.220
  %122 = load i32, i32* %regno, align 4
  %cmp226 = icmp ule i32 %122, 15
  br i1 %cmp226, label %cond.true.246, label %lor.lhs.false.228

lor.lhs.false.228:                                ; preds = %land.lhs.true.225, %cond.end.220
  %123 = load i32, i32* %regno, align 4
  %cmp229 = icmp uge i32 %123, 21
  br i1 %cmp229, label %land.lhs.true.231, label %lor.lhs.false.234

land.lhs.true.231:                                ; preds = %lor.lhs.false.228
  %124 = load i32, i32* %regno, align 4
  %cmp232 = icmp ule i32 %124, 28
  br i1 %cmp232, label %cond.true.246, label %lor.lhs.false.234

lor.lhs.false.234:                                ; preds = %land.lhs.true.231, %lor.lhs.false.228
  %125 = load i32, i32* %regno, align 4
  %cmp235 = icmp uge i32 %125, 45
  br i1 %cmp235, label %land.lhs.true.237, label %lor.lhs.false.240

land.lhs.true.237:                                ; preds = %lor.lhs.false.234
  %126 = load i32, i32* %regno, align 4
  %cmp238 = icmp ule i32 %126, 52
  br i1 %cmp238, label %cond.true.246, label %lor.lhs.false.240

lor.lhs.false.240:                                ; preds = %land.lhs.true.237, %lor.lhs.false.234
  %127 = load i32, i32* %regno, align 4
  %cmp241 = icmp uge i32 %127, 29
  br i1 %cmp241, label %land.lhs.true.243, label %cond.false.264

land.lhs.true.243:                                ; preds = %lor.lhs.false.240
  %128 = load i32, i32* %regno, align 4
  %cmp244 = icmp ule i32 %128, 36
  br i1 %cmp244, label %cond.true.246, label %cond.false.264

cond.true.246:                                    ; preds = %land.lhs.true.243, %land.lhs.true.237, %land.lhs.true.231, %land.lhs.true.225
  %129 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %130 = bitcast %struct.rtx_def* %129 to i32*
  %bf.load247 = load i32, i32* %130, align 8
  %bf.lshr248 = lshr i32 %bf.load247, 16
  %bf.clear249 = and i32 %bf.lshr248, 255
  %idxprom250 = sext i32 %bf.clear249 to i64
  %arrayidx251 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom250
  %131 = load i32, i32* %arrayidx251, align 4
  %cmp252 = icmp eq i32 %131, 5
  br i1 %cmp252, label %lor.end.262, label %lor.rhs.254

lor.rhs.254:                                      ; preds = %cond.true.246
  %132 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %133 = bitcast %struct.rtx_def* %132 to i32*
  %bf.load255 = load i32, i32* %133, align 8
  %bf.lshr256 = lshr i32 %bf.load255, 16
  %bf.clear257 = and i32 %bf.lshr256, 255
  %idxprom258 = sext i32 %bf.clear257 to i64
  %arrayidx259 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom258
  %134 = load i32, i32* %arrayidx259, align 4
  %cmp260 = icmp eq i32 %134, 6
  br label %lor.end.262

lor.end.262:                                      ; preds = %lor.rhs.254, %cond.true.246
  %135 = phi i1 [ true, %cond.true.246 ], [ %cmp260, %lor.rhs.254 ]
  %cond263 = select i1 %135, i32 2, i32 1
  br label %cond.end.304

cond.false.264:                                   ; preds = %land.lhs.true.243, %lor.lhs.false.240
  %136 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %137 = bitcast %struct.rtx_def* %136 to i32*
  %bf.load265 = load i32, i32* %137, align 8
  %bf.lshr266 = lshr i32 %bf.load265, 16
  %bf.clear267 = and i32 %bf.lshr266, 255
  %cmp268 = icmp eq i32 %bf.clear267, 18
  br i1 %cmp268, label %cond.true.270, label %cond.false.274

cond.true.270:                                    ; preds = %cond.false.264
  %138 = load i32, i32* @target_flags, align 4
  %and271 = and i32 %138, 33554432
  %tobool272 = icmp ne i32 %and271, 0
  %cond273 = select i1 %tobool272, i32 2, i32 3
  br label %cond.end.302

cond.false.274:                                   ; preds = %cond.false.264
  %139 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %140 = bitcast %struct.rtx_def* %139 to i32*
  %bf.load275 = load i32, i32* %140, align 8
  %bf.lshr276 = lshr i32 %bf.load275, 16
  %bf.clear277 = and i32 %bf.lshr276, 255
  %cmp278 = icmp eq i32 %bf.clear277, 24
  br i1 %cmp278, label %cond.true.280, label %cond.false.284

cond.true.280:                                    ; preds = %cond.false.274
  %141 = load i32, i32* @target_flags, align 4
  %and281 = and i32 %141, 33554432
  %tobool282 = icmp ne i32 %and281, 0
  %cond283 = select i1 %tobool282, i32 4, i32 6
  br label %cond.end.300

cond.false.284:                                   ; preds = %cond.false.274
  %142 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %143 = bitcast %struct.rtx_def* %142 to i32*
  %bf.load285 = load i32, i32* %143, align 8
  %bf.lshr286 = lshr i32 %bf.load285, 16
  %bf.clear287 = and i32 %bf.lshr286, 255
  %idxprom288 = sext i32 %bf.clear287 to i64
  %arrayidx289 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom288
  %144 = load i8, i8* %arrayidx289, align 1
  %conv290 = zext i8 %144 to i32
  %145 = load i32, i32* @target_flags, align 4
  %and291 = and i32 %145, 33554432
  %tobool292 = icmp ne i32 %and291, 0
  %cond293 = select i1 %tobool292, i32 8, i32 4
  %add294 = add nsw i32 %conv290, %cond293
  %sub295 = sub nsw i32 %add294, 1
  %146 = load i32, i32* @target_flags, align 4
  %and296 = and i32 %146, 33554432
  %tobool297 = icmp ne i32 %and296, 0
  %cond298 = select i1 %tobool297, i32 8, i32 4
  %div299 = sdiv i32 %sub295, %cond298
  br label %cond.end.300

cond.end.300:                                     ; preds = %cond.false.284, %cond.true.280
  %cond301 = phi i32 [ %cond283, %cond.true.280 ], [ %div299, %cond.false.284 ]
  br label %cond.end.302

cond.end.302:                                     ; preds = %cond.end.300, %cond.true.270
  %cond303 = phi i32 [ %cond273, %cond.true.270 ], [ %cond301, %cond.end.300 ]
  br label %cond.end.304

cond.end.304:                                     ; preds = %cond.end.302, %lor.end.262
  %cond305 = phi i32 [ %cond263, %lor.end.262 ], [ %cond303, %cond.end.302 ]
  %add306 = add i32 %120, %cond305
  store i32 %add306, i32* %ourend, align 4
  %147 = load i32, i32* %deadregno, align 4
  store i32 %147, i32* %i307, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.304
  %148 = load i32, i32* %i307, align 4
  %149 = load i32, i32* %deadend, align 4
  %cmp308 = icmp ult i32 %148, %149
  br i1 %cmp308, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %150 = load i32, i32* %i307, align 4
  %151 = load i32, i32* %regno, align 4
  %cmp310 = icmp ult i32 %150, %151
  br i1 %cmp310, label %if.then.315, label %lor.lhs.false.312

lor.lhs.false.312:                                ; preds = %for.body
  %152 = load i32, i32* %i307, align 4
  %153 = load i32, i32* %ourend, align 4
  %cmp313 = icmp uge i32 %152, %153
  br i1 %cmp313, label %if.then.315, label %if.end.326

if.then.315:                                      ; preds = %lor.lhs.false.312, %for.body
  %154 = load i32, i32* %i307, align 4
  %idxprom316 = zext i32 %154 to i64
  %arrayidx317 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_raw_mode, i32 0, i64 %idxprom316
  %155 = load i32, i32* %arrayidx317, align 4
  %156 = load i32, i32* %i307, align 4
  %call318 = call %struct.rtx_def* @gen_rtx_REG(i32 %155, i32 %156)
  %157 = load %struct.rtx_def*, %struct.rtx_def** %where_dead, align 8
  %fld319 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %157, i32 0, i32 1
  %arrayidx320 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld319, i32 0, i64 6
  %rtx321 = bitcast %union.rtunion_def* %arrayidx320 to %struct.rtx_def**
  %158 = load %struct.rtx_def*, %struct.rtx_def** %rtx321, align 8
  %call322 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 1, %struct.rtx_def* %call318, %struct.rtx_def* %158)
  %159 = load %struct.rtx_def*, %struct.rtx_def** %where_dead, align 8
  %fld323 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1
  %arrayidx324 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld323, i32 0, i64 6
  %rtx325 = bitcast %union.rtunion_def* %arrayidx324 to %struct.rtx_def**
  store %struct.rtx_def* %call322, %struct.rtx_def** %rtx325, align 8
  br label %if.end.326

if.end.326:                                       ; preds = %if.then.315, %lor.lhs.false.312
  br label %for.inc

for.inc:                                          ; preds = %if.end.326
  %160 = load i32, i32* %i307, align 4
  %inc = add i32 %160, 1
  store i32 %inc, i32* %i307, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.640

if.else:                                          ; preds = %land.lhs.true.107, %land.lhs.true.105, %if.then.102
  %161 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %cmp327 = icmp eq %struct.rtx_def* %161, null
  br i1 %cmp327, label %land.lhs.true.350, label %lor.lhs.false.329

lor.lhs.false.329:                                ; preds = %if.else
  %162 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %cmp330 = icmp ne %struct.rtx_def* %162, null
  br i1 %cmp330, label %land.lhs.true.332, label %if.end.639

land.lhs.true.332:                                ; preds = %lor.lhs.false.329
  %163 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld333 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %163, i32 0, i32 1
  %arrayidx334 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld333, i32 0, i64 0
  %rtx335 = bitcast %union.rtunion_def* %arrayidx334 to %struct.rtx_def**
  %164 = load %struct.rtx_def*, %struct.rtx_def** %rtx335, align 8
  %165 = bitcast %struct.rtx_def* %164 to i32*
  %bf.load336 = load i32, i32* %165, align 8
  %bf.lshr337 = lshr i32 %bf.load336, 16
  %bf.clear338 = and i32 %bf.lshr337, 255
  %idxprom339 = sext i32 %bf.clear338 to i64
  %arrayidx340 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom339
  %166 = load i8, i8* %arrayidx340, align 1
  %conv341 = zext i8 %166 to i32
  %167 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %168 = bitcast %struct.rtx_def* %167 to i32*
  %bf.load342 = load i32, i32* %168, align 8
  %bf.lshr343 = lshr i32 %bf.load342, 16
  %bf.clear344 = and i32 %bf.lshr343, 255
  %idxprom345 = sext i32 %bf.clear344 to i64
  %arrayidx346 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom345
  %169 = load i8, i8* %arrayidx346, align 1
  %conv347 = zext i8 %169 to i32
  %cmp348 = icmp slt i32 %conv341, %conv347
  br i1 %cmp348, label %land.lhs.true.350, label %if.end.639

land.lhs.true.350:                                ; preds = %land.lhs.true.332, %if.else
  %170 = load i32, i32* %regno, align 4
  %cmp351 = icmp ult i32 %170, 53
  br i1 %cmp351, label %land.lhs.true.353, label %if.end.639

land.lhs.true.353:                                ; preds = %land.lhs.true.350
  %171 = load i32, i32* %regno, align 4
  %cmp354 = icmp uge i32 %171, 8
  br i1 %cmp354, label %land.lhs.true.356, label %lor.lhs.false.359

land.lhs.true.356:                                ; preds = %land.lhs.true.353
  %172 = load i32, i32* %regno, align 4
  %cmp357 = icmp ule i32 %172, 15
  br i1 %cmp357, label %cond.true.377, label %lor.lhs.false.359

lor.lhs.false.359:                                ; preds = %land.lhs.true.356, %land.lhs.true.353
  %173 = load i32, i32* %regno, align 4
  %cmp360 = icmp uge i32 %173, 21
  br i1 %cmp360, label %land.lhs.true.362, label %lor.lhs.false.365

land.lhs.true.362:                                ; preds = %lor.lhs.false.359
  %174 = load i32, i32* %regno, align 4
  %cmp363 = icmp ule i32 %174, 28
  br i1 %cmp363, label %cond.true.377, label %lor.lhs.false.365

lor.lhs.false.365:                                ; preds = %land.lhs.true.362, %lor.lhs.false.359
  %175 = load i32, i32* %regno, align 4
  %cmp366 = icmp uge i32 %175, 45
  br i1 %cmp366, label %land.lhs.true.368, label %lor.lhs.false.371

land.lhs.true.368:                                ; preds = %lor.lhs.false.365
  %176 = load i32, i32* %regno, align 4
  %cmp369 = icmp ule i32 %176, 52
  br i1 %cmp369, label %cond.true.377, label %lor.lhs.false.371

lor.lhs.false.371:                                ; preds = %land.lhs.true.368, %lor.lhs.false.365
  %177 = load i32, i32* %regno, align 4
  %cmp372 = icmp uge i32 %177, 29
  br i1 %cmp372, label %land.lhs.true.374, label %cond.false.395

land.lhs.true.374:                                ; preds = %lor.lhs.false.371
  %178 = load i32, i32* %regno, align 4
  %cmp375 = icmp ule i32 %178, 36
  br i1 %cmp375, label %cond.true.377, label %cond.false.395

cond.true.377:                                    ; preds = %land.lhs.true.374, %land.lhs.true.368, %land.lhs.true.362, %land.lhs.true.356
  %179 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %180 = bitcast %struct.rtx_def* %179 to i32*
  %bf.load378 = load i32, i32* %180, align 8
  %bf.lshr379 = lshr i32 %bf.load378, 16
  %bf.clear380 = and i32 %bf.lshr379, 255
  %idxprom381 = sext i32 %bf.clear380 to i64
  %arrayidx382 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom381
  %181 = load i32, i32* %arrayidx382, align 4
  %cmp383 = icmp eq i32 %181, 5
  br i1 %cmp383, label %lor.end.393, label %lor.rhs.385

lor.rhs.385:                                      ; preds = %cond.true.377
  %182 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %183 = bitcast %struct.rtx_def* %182 to i32*
  %bf.load386 = load i32, i32* %183, align 8
  %bf.lshr387 = lshr i32 %bf.load386, 16
  %bf.clear388 = and i32 %bf.lshr387, 255
  %idxprom389 = sext i32 %bf.clear388 to i64
  %arrayidx390 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom389
  %184 = load i32, i32* %arrayidx390, align 4
  %cmp391 = icmp eq i32 %184, 6
  br label %lor.end.393

lor.end.393:                                      ; preds = %lor.rhs.385, %cond.true.377
  %185 = phi i1 [ true, %cond.true.377 ], [ %cmp391, %lor.rhs.385 ]
  %cond394 = select i1 %185, i32 2, i32 1
  br label %cond.end.435

cond.false.395:                                   ; preds = %land.lhs.true.374, %lor.lhs.false.371
  %186 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %187 = bitcast %struct.rtx_def* %186 to i32*
  %bf.load396 = load i32, i32* %187, align 8
  %bf.lshr397 = lshr i32 %bf.load396, 16
  %bf.clear398 = and i32 %bf.lshr397, 255
  %cmp399 = icmp eq i32 %bf.clear398, 18
  br i1 %cmp399, label %cond.true.401, label %cond.false.405

cond.true.401:                                    ; preds = %cond.false.395
  %188 = load i32, i32* @target_flags, align 4
  %and402 = and i32 %188, 33554432
  %tobool403 = icmp ne i32 %and402, 0
  %cond404 = select i1 %tobool403, i32 2, i32 3
  br label %cond.end.433

cond.false.405:                                   ; preds = %cond.false.395
  %189 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %190 = bitcast %struct.rtx_def* %189 to i32*
  %bf.load406 = load i32, i32* %190, align 8
  %bf.lshr407 = lshr i32 %bf.load406, 16
  %bf.clear408 = and i32 %bf.lshr407, 255
  %cmp409 = icmp eq i32 %bf.clear408, 24
  br i1 %cmp409, label %cond.true.411, label %cond.false.415

cond.true.411:                                    ; preds = %cond.false.405
  %191 = load i32, i32* @target_flags, align 4
  %and412 = and i32 %191, 33554432
  %tobool413 = icmp ne i32 %and412, 0
  %cond414 = select i1 %tobool413, i32 4, i32 6
  br label %cond.end.431

cond.false.415:                                   ; preds = %cond.false.405
  %192 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %193 = bitcast %struct.rtx_def* %192 to i32*
  %bf.load416 = load i32, i32* %193, align 8
  %bf.lshr417 = lshr i32 %bf.load416, 16
  %bf.clear418 = and i32 %bf.lshr417, 255
  %idxprom419 = sext i32 %bf.clear418 to i64
  %arrayidx420 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom419
  %194 = load i8, i8* %arrayidx420, align 1
  %conv421 = zext i8 %194 to i32
  %195 = load i32, i32* @target_flags, align 4
  %and422 = and i32 %195, 33554432
  %tobool423 = icmp ne i32 %and422, 0
  %cond424 = select i1 %tobool423, i32 8, i32 4
  %add425 = add nsw i32 %conv421, %cond424
  %sub426 = sub nsw i32 %add425, 1
  %196 = load i32, i32* @target_flags, align 4
  %and427 = and i32 %196, 33554432
  %tobool428 = icmp ne i32 %and427, 0
  %cond429 = select i1 %tobool428, i32 8, i32 4
  %div430 = sdiv i32 %sub426, %cond429
  br label %cond.end.431

cond.end.431:                                     ; preds = %cond.false.415, %cond.true.411
  %cond432 = phi i32 [ %cond414, %cond.true.411 ], [ %div430, %cond.false.415 ]
  br label %cond.end.433

cond.end.433:                                     ; preds = %cond.end.431, %cond.true.401
  %cond434 = phi i32 [ %cond404, %cond.true.401 ], [ %cond432, %cond.end.431 ]
  br label %cond.end.435

cond.end.435:                                     ; preds = %cond.end.433, %lor.end.393
  %cond436 = phi i32 [ %cond394, %lor.end.393 ], [ %cond434, %cond.end.433 ]
  %cmp437 = icmp sgt i32 %cond436, 1
  br i1 %cmp437, label %if.then.439, label %if.end.639

if.then.439:                                      ; preds = %cond.end.435
  %197 = load i32, i32* %regno, align 4
  %198 = load i32, i32* %regno, align 4
  %cmp441 = icmp uge i32 %198, 8
  br i1 %cmp441, label %land.lhs.true.443, label %lor.lhs.false.446

land.lhs.true.443:                                ; preds = %if.then.439
  %199 = load i32, i32* %regno, align 4
  %cmp444 = icmp ule i32 %199, 15
  br i1 %cmp444, label %cond.true.464, label %lor.lhs.false.446

lor.lhs.false.446:                                ; preds = %land.lhs.true.443, %if.then.439
  %200 = load i32, i32* %regno, align 4
  %cmp447 = icmp uge i32 %200, 21
  br i1 %cmp447, label %land.lhs.true.449, label %lor.lhs.false.452

land.lhs.true.449:                                ; preds = %lor.lhs.false.446
  %201 = load i32, i32* %regno, align 4
  %cmp450 = icmp ule i32 %201, 28
  br i1 %cmp450, label %cond.true.464, label %lor.lhs.false.452

lor.lhs.false.452:                                ; preds = %land.lhs.true.449, %lor.lhs.false.446
  %202 = load i32, i32* %regno, align 4
  %cmp453 = icmp uge i32 %202, 45
  br i1 %cmp453, label %land.lhs.true.455, label %lor.lhs.false.458

land.lhs.true.455:                                ; preds = %lor.lhs.false.452
  %203 = load i32, i32* %regno, align 4
  %cmp456 = icmp ule i32 %203, 52
  br i1 %cmp456, label %cond.true.464, label %lor.lhs.false.458

lor.lhs.false.458:                                ; preds = %land.lhs.true.455, %lor.lhs.false.452
  %204 = load i32, i32* %regno, align 4
  %cmp459 = icmp uge i32 %204, 29
  br i1 %cmp459, label %land.lhs.true.461, label %cond.false.482

land.lhs.true.461:                                ; preds = %lor.lhs.false.458
  %205 = load i32, i32* %regno, align 4
  %cmp462 = icmp ule i32 %205, 36
  br i1 %cmp462, label %cond.true.464, label %cond.false.482

cond.true.464:                                    ; preds = %land.lhs.true.461, %land.lhs.true.455, %land.lhs.true.449, %land.lhs.true.443
  %206 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %207 = bitcast %struct.rtx_def* %206 to i32*
  %bf.load465 = load i32, i32* %207, align 8
  %bf.lshr466 = lshr i32 %bf.load465, 16
  %bf.clear467 = and i32 %bf.lshr466, 255
  %idxprom468 = sext i32 %bf.clear467 to i64
  %arrayidx469 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom468
  %208 = load i32, i32* %arrayidx469, align 4
  %cmp470 = icmp eq i32 %208, 5
  br i1 %cmp470, label %lor.end.480, label %lor.rhs.472

lor.rhs.472:                                      ; preds = %cond.true.464
  %209 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %210 = bitcast %struct.rtx_def* %209 to i32*
  %bf.load473 = load i32, i32* %210, align 8
  %bf.lshr474 = lshr i32 %bf.load473, 16
  %bf.clear475 = and i32 %bf.lshr474, 255
  %idxprom476 = sext i32 %bf.clear475 to i64
  %arrayidx477 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom476
  %211 = load i32, i32* %arrayidx477, align 4
  %cmp478 = icmp eq i32 %211, 6
  br label %lor.end.480

lor.end.480:                                      ; preds = %lor.rhs.472, %cond.true.464
  %212 = phi i1 [ true, %cond.true.464 ], [ %cmp478, %lor.rhs.472 ]
  %cond481 = select i1 %212, i32 2, i32 1
  br label %cond.end.522

cond.false.482:                                   ; preds = %land.lhs.true.461, %lor.lhs.false.458
  %213 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %214 = bitcast %struct.rtx_def* %213 to i32*
  %bf.load483 = load i32, i32* %214, align 8
  %bf.lshr484 = lshr i32 %bf.load483, 16
  %bf.clear485 = and i32 %bf.lshr484, 255
  %cmp486 = icmp eq i32 %bf.clear485, 18
  br i1 %cmp486, label %cond.true.488, label %cond.false.492

cond.true.488:                                    ; preds = %cond.false.482
  %215 = load i32, i32* @target_flags, align 4
  %and489 = and i32 %215, 33554432
  %tobool490 = icmp ne i32 %and489, 0
  %cond491 = select i1 %tobool490, i32 2, i32 3
  br label %cond.end.520

cond.false.492:                                   ; preds = %cond.false.482
  %216 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %217 = bitcast %struct.rtx_def* %216 to i32*
  %bf.load493 = load i32, i32* %217, align 8
  %bf.lshr494 = lshr i32 %bf.load493, 16
  %bf.clear495 = and i32 %bf.lshr494, 255
  %cmp496 = icmp eq i32 %bf.clear495, 24
  br i1 %cmp496, label %cond.true.498, label %cond.false.502

cond.true.498:                                    ; preds = %cond.false.492
  %218 = load i32, i32* @target_flags, align 4
  %and499 = and i32 %218, 33554432
  %tobool500 = icmp ne i32 %and499, 0
  %cond501 = select i1 %tobool500, i32 4, i32 6
  br label %cond.end.518

cond.false.502:                                   ; preds = %cond.false.492
  %219 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %220 = bitcast %struct.rtx_def* %219 to i32*
  %bf.load503 = load i32, i32* %220, align 8
  %bf.lshr504 = lshr i32 %bf.load503, 16
  %bf.clear505 = and i32 %bf.lshr504, 255
  %idxprom506 = sext i32 %bf.clear505 to i64
  %arrayidx507 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom506
  %221 = load i8, i8* %arrayidx507, align 1
  %conv508 = zext i8 %221 to i32
  %222 = load i32, i32* @target_flags, align 4
  %and509 = and i32 %222, 33554432
  %tobool510 = icmp ne i32 %and509, 0
  %cond511 = select i1 %tobool510, i32 8, i32 4
  %add512 = add nsw i32 %conv508, %cond511
  %sub513 = sub nsw i32 %add512, 1
  %223 = load i32, i32* @target_flags, align 4
  %and514 = and i32 %223, 33554432
  %tobool515 = icmp ne i32 %and514, 0
  %cond516 = select i1 %tobool515, i32 8, i32 4
  %div517 = sdiv i32 %sub513, %cond516
  br label %cond.end.518

cond.end.518:                                     ; preds = %cond.false.502, %cond.true.498
  %cond519 = phi i32 [ %cond501, %cond.true.498 ], [ %div517, %cond.false.502 ]
  br label %cond.end.520

cond.end.520:                                     ; preds = %cond.end.518, %cond.true.488
  %cond521 = phi i32 [ %cond491, %cond.true.488 ], [ %cond519, %cond.end.518 ]
  br label %cond.end.522

cond.end.522:                                     ; preds = %cond.end.520, %lor.end.480
  %cond523 = phi i32 [ %cond481, %lor.end.480 ], [ %cond521, %cond.end.520 ]
  %add524 = add i32 %197, %cond523
  store i32 %add524, i32* %ourend440, align 4
  store %struct.rtx_def* null, %struct.rtx_def** %oldnotes, align 8
  %224 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %tobool526 = icmp ne %struct.rtx_def* %224, null
  br i1 %tobool526, label %if.then.527, label %if.else.626

if.then.527:                                      ; preds = %cond.end.522
  %225 = load i32, i32* %regno, align 4
  %cmp528 = icmp uge i32 %225, 8
  br i1 %cmp528, label %land.lhs.true.530, label %lor.lhs.false.533

land.lhs.true.530:                                ; preds = %if.then.527
  %226 = load i32, i32* %regno, align 4
  %cmp531 = icmp ule i32 %226, 15
  br i1 %cmp531, label %cond.true.551, label %lor.lhs.false.533

lor.lhs.false.533:                                ; preds = %land.lhs.true.530, %if.then.527
  %227 = load i32, i32* %regno, align 4
  %cmp534 = icmp uge i32 %227, 21
  br i1 %cmp534, label %land.lhs.true.536, label %lor.lhs.false.539

land.lhs.true.536:                                ; preds = %lor.lhs.false.533
  %228 = load i32, i32* %regno, align 4
  %cmp537 = icmp ule i32 %228, 28
  br i1 %cmp537, label %cond.true.551, label %lor.lhs.false.539

lor.lhs.false.539:                                ; preds = %land.lhs.true.536, %lor.lhs.false.533
  %229 = load i32, i32* %regno, align 4
  %cmp540 = icmp uge i32 %229, 45
  br i1 %cmp540, label %land.lhs.true.542, label %lor.lhs.false.545

land.lhs.true.542:                                ; preds = %lor.lhs.false.539
  %230 = load i32, i32* %regno, align 4
  %cmp543 = icmp ule i32 %230, 52
  br i1 %cmp543, label %cond.true.551, label %lor.lhs.false.545

lor.lhs.false.545:                                ; preds = %land.lhs.true.542, %lor.lhs.false.539
  %231 = load i32, i32* %regno, align 4
  %cmp546 = icmp uge i32 %231, 29
  br i1 %cmp546, label %land.lhs.true.548, label %cond.false.575

land.lhs.true.548:                                ; preds = %lor.lhs.false.545
  %232 = load i32, i32* %regno, align 4
  %cmp549 = icmp ule i32 %232, 36
  br i1 %cmp549, label %cond.true.551, label %cond.false.575

cond.true.551:                                    ; preds = %land.lhs.true.548, %land.lhs.true.542, %land.lhs.true.536, %land.lhs.true.530
  %233 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld552 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %233, i32 0, i32 1
  %arrayidx553 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld552, i32 0, i64 0
  %rtx554 = bitcast %union.rtunion_def* %arrayidx553 to %struct.rtx_def**
  %234 = load %struct.rtx_def*, %struct.rtx_def** %rtx554, align 8
  %235 = bitcast %struct.rtx_def* %234 to i32*
  %bf.load555 = load i32, i32* %235, align 8
  %bf.lshr556 = lshr i32 %bf.load555, 16
  %bf.clear557 = and i32 %bf.lshr556, 255
  %idxprom558 = sext i32 %bf.clear557 to i64
  %arrayidx559 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom558
  %236 = load i32, i32* %arrayidx559, align 4
  %cmp560 = icmp eq i32 %236, 5
  br i1 %cmp560, label %lor.end.573, label %lor.rhs.562

lor.rhs.562:                                      ; preds = %cond.true.551
  %237 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld563 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %237, i32 0, i32 1
  %arrayidx564 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld563, i32 0, i64 0
  %rtx565 = bitcast %union.rtunion_def* %arrayidx564 to %struct.rtx_def**
  %238 = load %struct.rtx_def*, %struct.rtx_def** %rtx565, align 8
  %239 = bitcast %struct.rtx_def* %238 to i32*
  %bf.load566 = load i32, i32* %239, align 8
  %bf.lshr567 = lshr i32 %bf.load566, 16
  %bf.clear568 = and i32 %bf.lshr567, 255
  %idxprom569 = sext i32 %bf.clear568 to i64
  %arrayidx570 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom569
  %240 = load i32, i32* %arrayidx570, align 4
  %cmp571 = icmp eq i32 %240, 6
  br label %lor.end.573

lor.end.573:                                      ; preds = %lor.rhs.562, %cond.true.551
  %241 = phi i1 [ true, %cond.true.551 ], [ %cmp571, %lor.rhs.562 ]
  %cond574 = select i1 %241, i32 2, i32 1
  br label %cond.end.624

cond.false.575:                                   ; preds = %land.lhs.true.548, %lor.lhs.false.545
  %242 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld576 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %242, i32 0, i32 1
  %arrayidx577 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld576, i32 0, i64 0
  %rtx578 = bitcast %union.rtunion_def* %arrayidx577 to %struct.rtx_def**
  %243 = load %struct.rtx_def*, %struct.rtx_def** %rtx578, align 8
  %244 = bitcast %struct.rtx_def* %243 to i32*
  %bf.load579 = load i32, i32* %244, align 8
  %bf.lshr580 = lshr i32 %bf.load579, 16
  %bf.clear581 = and i32 %bf.lshr580, 255
  %cmp582 = icmp eq i32 %bf.clear581, 18
  br i1 %cmp582, label %cond.true.584, label %cond.false.588

cond.true.584:                                    ; preds = %cond.false.575
  %245 = load i32, i32* @target_flags, align 4
  %and585 = and i32 %245, 33554432
  %tobool586 = icmp ne i32 %and585, 0
  %cond587 = select i1 %tobool586, i32 2, i32 3
  br label %cond.end.622

cond.false.588:                                   ; preds = %cond.false.575
  %246 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld589 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %246, i32 0, i32 1
  %arrayidx590 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld589, i32 0, i64 0
  %rtx591 = bitcast %union.rtunion_def* %arrayidx590 to %struct.rtx_def**
  %247 = load %struct.rtx_def*, %struct.rtx_def** %rtx591, align 8
  %248 = bitcast %struct.rtx_def* %247 to i32*
  %bf.load592 = load i32, i32* %248, align 8
  %bf.lshr593 = lshr i32 %bf.load592, 16
  %bf.clear594 = and i32 %bf.lshr593, 255
  %cmp595 = icmp eq i32 %bf.clear594, 24
  br i1 %cmp595, label %cond.true.597, label %cond.false.601

cond.true.597:                                    ; preds = %cond.false.588
  %249 = load i32, i32* @target_flags, align 4
  %and598 = and i32 %249, 33554432
  %tobool599 = icmp ne i32 %and598, 0
  %cond600 = select i1 %tobool599, i32 4, i32 6
  br label %cond.end.620

cond.false.601:                                   ; preds = %cond.false.588
  %250 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld602 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %250, i32 0, i32 1
  %arrayidx603 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld602, i32 0, i64 0
  %rtx604 = bitcast %union.rtunion_def* %arrayidx603 to %struct.rtx_def**
  %251 = load %struct.rtx_def*, %struct.rtx_def** %rtx604, align 8
  %252 = bitcast %struct.rtx_def* %251 to i32*
  %bf.load605 = load i32, i32* %252, align 8
  %bf.lshr606 = lshr i32 %bf.load605, 16
  %bf.clear607 = and i32 %bf.lshr606, 255
  %idxprom608 = sext i32 %bf.clear607 to i64
  %arrayidx609 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom608
  %253 = load i8, i8* %arrayidx609, align 1
  %conv610 = zext i8 %253 to i32
  %254 = load i32, i32* @target_flags, align 4
  %and611 = and i32 %254, 33554432
  %tobool612 = icmp ne i32 %and611, 0
  %cond613 = select i1 %tobool612, i32 8, i32 4
  %add614 = add nsw i32 %conv610, %cond613
  %sub615 = sub nsw i32 %add614, 1
  %255 = load i32, i32* @target_flags, align 4
  %and616 = and i32 %255, 33554432
  %tobool617 = icmp ne i32 %and616, 0
  %cond618 = select i1 %tobool617, i32 8, i32 4
  %div619 = sdiv i32 %sub615, %cond618
  br label %cond.end.620

cond.end.620:                                     ; preds = %cond.false.601, %cond.true.597
  %cond621 = phi i32 [ %cond600, %cond.true.597 ], [ %div619, %cond.false.601 ]
  br label %cond.end.622

cond.end.622:                                     ; preds = %cond.end.620, %cond.true.584
  %cond623 = phi i32 [ %cond587, %cond.true.584 ], [ %cond621, %cond.end.620 ]
  br label %cond.end.624

cond.end.624:                                     ; preds = %cond.end.622, %lor.end.573
  %cond625 = phi i32 [ %cond574, %lor.end.573 ], [ %cond623, %cond.end.622 ]
  store i32 %cond625, i32* %offset, align 4
  br label %if.end.627

if.else.626:                                      ; preds = %cond.end.522
  store i32 1, i32* %offset, align 4
  br label %if.end.627

if.end.627:                                       ; preds = %if.else.626, %cond.end.624
  %256 = load i32, i32* %regno, align 4
  %257 = load i32, i32* %offset, align 4
  %add628 = add i32 %256, %257
  store i32 %add628, i32* %i525, align 4
  br label %for.cond.629

for.cond.629:                                     ; preds = %for.inc.636, %if.end.627
  %258 = load i32, i32* %i525, align 4
  %259 = load i32, i32* %ourend440, align 4
  %cmp630 = icmp ult i32 %258, %259
  br i1 %cmp630, label %for.body.632, label %for.end.638

for.body.632:                                     ; preds = %for.cond.629
  %260 = load i32, i32* %i525, align 4
  %idxprom633 = zext i32 %260 to i64
  %arrayidx634 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_raw_mode, i32 0, i64 %idxprom633
  %261 = load i32, i32* %arrayidx634, align 4
  %262 = load i32, i32* %i525, align 4
  %call635 = call %struct.rtx_def* @gen_rtx_REG(i32 %261, i32 %262)
  %263 = load %struct.rtx_def*, %struct.rtx_def** %maybe_kill_insn.addr, align 8
  %264 = load i32, i32* %from_cuid.addr, align 4
  %265 = load %struct.rtx_def*, %struct.rtx_def** %to_insn.addr, align 8
  call void @move_deaths(%struct.rtx_def* %call635, %struct.rtx_def* %263, i32 %264, %struct.rtx_def* %265, %struct.rtx_def** %oldnotes)
  br label %for.inc.636

for.inc.636:                                      ; preds = %for.body.632
  %266 = load i32, i32* %i525, align 4
  %inc637 = add i32 %266, 1
  store i32 %inc637, i32* %i525, align 4
  br label %for.cond.629

for.end.638:                                      ; preds = %for.cond.629
  br label %if.end.639

if.end.639:                                       ; preds = %for.end.638, %cond.end.435, %land.lhs.true.350, %land.lhs.true.332, %lor.lhs.false.329
  br label %if.end.640

if.end.640:                                       ; preds = %if.end.639, %for.end
  %267 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %cmp641 = icmp ne %struct.rtx_def* %267, null
  br i1 %cmp641, label %land.lhs.true.643, label %if.else.659

land.lhs.true.643:                                ; preds = %if.end.640
  %268 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld644 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %268, i32 0, i32 1
  %arrayidx645 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld644, i32 0, i64 0
  %rtx646 = bitcast %union.rtunion_def* %arrayidx645 to %struct.rtx_def**
  %269 = load %struct.rtx_def*, %struct.rtx_def** %rtx646, align 8
  %270 = bitcast %struct.rtx_def* %269 to i32*
  %bf.load647 = load i32, i32* %270, align 8
  %bf.lshr648 = lshr i32 %bf.load647, 16
  %bf.clear649 = and i32 %bf.lshr648, 255
  %271 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %272 = bitcast %struct.rtx_def* %271 to i32*
  %bf.load650 = load i32, i32* %272, align 8
  %bf.lshr651 = lshr i32 %bf.load650, 16
  %bf.clear652 = and i32 %bf.lshr651, 255
  %cmp653 = icmp eq i32 %bf.clear649, %bf.clear652
  br i1 %cmp653, label %if.then.655, label %if.else.659

if.then.655:                                      ; preds = %land.lhs.true.643
  %273 = load %struct.rtx_def**, %struct.rtx_def*** %pnotes.addr, align 8
  %274 = load %struct.rtx_def*, %struct.rtx_def** %273, align 8
  %275 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld656 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %275, i32 0, i32 1
  %arrayidx657 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld656, i32 0, i64 1
  %rtx658 = bitcast %union.rtunion_def* %arrayidx657 to %struct.rtx_def**
  store %struct.rtx_def* %274, %struct.rtx_def** %rtx658, align 8
  %276 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %277 = load %struct.rtx_def**, %struct.rtx_def*** %pnotes.addr, align 8
  store %struct.rtx_def* %276, %struct.rtx_def** %277, align 8
  br label %if.end.661

if.else.659:                                      ; preds = %land.lhs.true.643, %if.end.640
  %278 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %279 = load %struct.rtx_def**, %struct.rtx_def*** %pnotes.addr, align 8
  %280 = load %struct.rtx_def*, %struct.rtx_def** %279, align 8
  %call660 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 1, %struct.rtx_def* %278, %struct.rtx_def* %280)
  %281 = load %struct.rtx_def**, %struct.rtx_def*** %pnotes.addr, align 8
  store %struct.rtx_def* %call660, %struct.rtx_def** %281, align 8
  br label %if.end.661

if.end.661:                                       ; preds = %if.else.659, %if.then.655
  %282 = load i32, i32* %regno, align 4
  %idxprom662 = zext i32 %282 to i64
  %283 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %283, i32 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx663 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg, i32 0, i64 %idxprom662
  %284 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx663, align 8
  %deaths = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %284, i32 0, i32 6
  %285 = load i32, i32* %deaths, align 4
  %inc664 = add nsw i32 %285, 1
  store i32 %inc664, i32* %deaths, align 4
  br label %if.end.665

if.end.665:                                       ; preds = %if.end.661, %cond.end.99, %lor.lhs.false, %cond.end, %land.lhs.true.27, %while.end.25
  br label %for.end.803

if.else.666:                                      ; preds = %entry
  %286 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %287 = bitcast %struct.rtx_def* %286 to i32*
  %bf.load667 = load i32, i32* %287, align 8
  %bf.clear668 = and i32 %bf.load667, 65535
  %cmp669 = icmp eq i32 %bf.clear668, 47
  br i1 %cmp669, label %if.then.671, label %if.else.748

if.then.671:                                      ; preds = %if.else.666
  %288 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld672 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %288, i32 0, i32 1
  %arrayidx673 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld672, i32 0, i64 0
  %rtx674 = bitcast %union.rtunion_def* %arrayidx673 to %struct.rtx_def**
  %289 = load %struct.rtx_def*, %struct.rtx_def** %rtx674, align 8
  store %struct.rtx_def* %289, %struct.rtx_def** %dest, align 8
  %290 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld675 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %290, i32 0, i32 1
  %arrayidx676 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld675, i32 0, i64 1
  %rtx677 = bitcast %union.rtunion_def* %arrayidx676 to %struct.rtx_def**
  %291 = load %struct.rtx_def*, %struct.rtx_def** %rtx677, align 8
  %292 = load %struct.rtx_def*, %struct.rtx_def** %maybe_kill_insn.addr, align 8
  %293 = load i32, i32* %from_cuid.addr, align 4
  %294 = load %struct.rtx_def*, %struct.rtx_def** %to_insn.addr, align 8
  %295 = load %struct.rtx_def**, %struct.rtx_def*** %pnotes.addr, align 8
  call void @move_deaths(%struct.rtx_def* %291, %struct.rtx_def* %292, i32 %293, %struct.rtx_def* %294, %struct.rtx_def** %295)
  %296 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %297 = bitcast %struct.rtx_def* %296 to i32*
  %bf.load678 = load i32, i32* %297, align 8
  %bf.clear679 = and i32 %bf.load678, 65535
  %cmp680 = icmp eq i32 %bf.clear679, 133
  br i1 %cmp680, label %if.then.728, label %lor.lhs.false.682

lor.lhs.false.682:                                ; preds = %if.then.671
  %298 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %299 = bitcast %struct.rtx_def* %298 to i32*
  %bf.load683 = load i32, i32* %299, align 8
  %bf.clear684 = and i32 %bf.load683, 65535
  %cmp685 = icmp eq i32 %bf.clear684, 64
  br i1 %cmp685, label %if.then.728, label %lor.lhs.false.687

lor.lhs.false.687:                                ; preds = %lor.lhs.false.682
  %300 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %301 = bitcast %struct.rtx_def* %300 to i32*
  %bf.load688 = load i32, i32* %301, align 8
  %bf.clear689 = and i32 %bf.load688, 65535
  %cmp690 = icmp eq i32 %bf.clear689, 63
  br i1 %cmp690, label %land.lhs.true.692, label %if.end.729

land.lhs.true.692:                                ; preds = %lor.lhs.false.687
  %302 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %303 = bitcast %struct.rtx_def* %302 to i32*
  %bf.load693 = load i32, i32* %303, align 8
  %bf.lshr694 = lshr i32 %bf.load693, 16
  %bf.clear695 = and i32 %bf.lshr694, 255
  %idxprom696 = sext i32 %bf.clear695 to i64
  %arrayidx697 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom696
  %304 = load i8, i8* %arrayidx697, align 1
  %conv698 = zext i8 %304 to i32
  %305 = load i32, i32* @target_flags, align 4
  %and699 = and i32 %305, 33554432
  %tobool700 = icmp ne i32 %and699, 0
  %cond701 = select i1 %tobool700, i32 8, i32 4
  %add702 = add nsw i32 %conv698, %cond701
  %sub703 = sub nsw i32 %add702, 1
  %306 = load i32, i32* @target_flags, align 4
  %and704 = and i32 %306, 33554432
  %tobool705 = icmp ne i32 %and704, 0
  %cond706 = select i1 %tobool705, i32 8, i32 4
  %div707 = sdiv i32 %sub703, %cond706
  %307 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld708 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %307, i32 0, i32 1
  %arrayidx709 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld708, i32 0, i64 0
  %rtx710 = bitcast %union.rtunion_def* %arrayidx709 to %struct.rtx_def**
  %308 = load %struct.rtx_def*, %struct.rtx_def** %rtx710, align 8
  %309 = bitcast %struct.rtx_def* %308 to i32*
  %bf.load711 = load i32, i32* %309, align 8
  %bf.lshr712 = lshr i32 %bf.load711, 16
  %bf.clear713 = and i32 %bf.lshr712, 255
  %idxprom714 = sext i32 %bf.clear713 to i64
  %arrayidx715 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom714
  %310 = load i8, i8* %arrayidx715, align 1
  %conv716 = zext i8 %310 to i32
  %311 = load i32, i32* @target_flags, align 4
  %and717 = and i32 %311, 33554432
  %tobool718 = icmp ne i32 %and717, 0
  %cond719 = select i1 %tobool718, i32 8, i32 4
  %add720 = add nsw i32 %conv716, %cond719
  %sub721 = sub nsw i32 %add720, 1
  %312 = load i32, i32* @target_flags, align 4
  %and722 = and i32 %312, 33554432
  %tobool723 = icmp ne i32 %and722, 0
  %cond724 = select i1 %tobool723, i32 8, i32 4
  %div725 = sdiv i32 %sub721, %cond724
  %cmp726 = icmp eq i32 %div707, %div725
  br i1 %cmp726, label %if.then.728, label %if.end.729

if.then.728:                                      ; preds = %land.lhs.true.692, %lor.lhs.false.682, %if.then.671
  %313 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %314 = load %struct.rtx_def*, %struct.rtx_def** %maybe_kill_insn.addr, align 8
  %315 = load i32, i32* %from_cuid.addr, align 4
  %316 = load %struct.rtx_def*, %struct.rtx_def** %to_insn.addr, align 8
  %317 = load %struct.rtx_def**, %struct.rtx_def*** %pnotes.addr, align 8
  call void @move_deaths(%struct.rtx_def* %313, %struct.rtx_def* %314, i32 %315, %struct.rtx_def* %316, %struct.rtx_def** %317)
  br label %for.end.803

if.end.729:                                       ; preds = %land.lhs.true.692, %lor.lhs.false.687
  %318 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %319 = bitcast %struct.rtx_def* %318 to i32*
  %bf.load730 = load i32, i32* %319, align 8
  %bf.clear731 = and i32 %bf.load730, 65535
  %cmp732 = icmp eq i32 %bf.clear731, 63
  br i1 %cmp732, label %if.then.734, label %if.end.738

if.then.734:                                      ; preds = %if.end.729
  %320 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld735 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %320, i32 0, i32 1
  %arrayidx736 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld735, i32 0, i64 0
  %rtx737 = bitcast %union.rtunion_def* %arrayidx736 to %struct.rtx_def**
  %321 = load %struct.rtx_def*, %struct.rtx_def** %rtx737, align 8
  store %struct.rtx_def* %321, %struct.rtx_def** %dest, align 8
  br label %if.end.738

if.end.738:                                       ; preds = %if.then.734, %if.end.729
  %322 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %323 = bitcast %struct.rtx_def* %322 to i32*
  %bf.load739 = load i32, i32* %323, align 8
  %bf.clear740 = and i32 %bf.load739, 65535
  %cmp741 = icmp eq i32 %bf.clear740, 66
  br i1 %cmp741, label %if.then.743, label %if.end.747

if.then.743:                                      ; preds = %if.end.738
  %324 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld744 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %324, i32 0, i32 1
  %arrayidx745 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld744, i32 0, i64 0
  %rtx746 = bitcast %union.rtunion_def* %arrayidx745 to %struct.rtx_def**
  %325 = load %struct.rtx_def*, %struct.rtx_def** %rtx746, align 8
  %326 = load %struct.rtx_def*, %struct.rtx_def** %maybe_kill_insn.addr, align 8
  %327 = load i32, i32* %from_cuid.addr, align 4
  %328 = load %struct.rtx_def*, %struct.rtx_def** %to_insn.addr, align 8
  %329 = load %struct.rtx_def**, %struct.rtx_def*** %pnotes.addr, align 8
  call void @move_deaths(%struct.rtx_def* %325, %struct.rtx_def* %326, i32 %327, %struct.rtx_def* %328, %struct.rtx_def** %329)
  br label %if.end.747

if.end.747:                                       ; preds = %if.then.743, %if.end.738
  br label %for.end.803

if.else.748:                                      ; preds = %if.else.666
  %330 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %331 = bitcast %struct.rtx_def* %330 to i32*
  %bf.load749 = load i32, i32* %331, align 8
  %bf.clear750 = and i32 %bf.load749, 65535
  %cmp751 = icmp eq i32 %bf.clear750, 49
  br i1 %cmp751, label %if.then.753, label %if.end.754

if.then.753:                                      ; preds = %if.else.748
  br label %for.end.803

if.end.754:                                       ; preds = %if.else.748
  br label %if.end.755

if.end.755:                                       ; preds = %if.end.754
  br label %if.end.756

if.end.756:                                       ; preds = %if.end.755
  %332 = load i32, i32* %code, align 4
  %idxprom757 = sext i32 %332 to i64
  %arrayidx758 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom757
  %333 = load i8, i8* %arrayidx758, align 1
  %conv759 = zext i8 %333 to i32
  store i32 %conv759, i32* %len, align 4
  %334 = load i32, i32* %code, align 4
  %idxprom760 = sext i32 %334 to i64
  %arrayidx761 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom760
  %335 = load i8*, i8** %arrayidx761, align 8
  store i8* %335, i8** %fmt, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.762

for.cond.762:                                     ; preds = %for.inc.801, %if.end.756
  %336 = load i32, i32* %i, align 4
  %337 = load i32, i32* %len, align 4
  %cmp763 = icmp slt i32 %336, %337
  br i1 %cmp763, label %for.body.765, label %for.end.803

for.body.765:                                     ; preds = %for.cond.762
  %338 = load i32, i32* %i, align 4
  %idxprom766 = sext i32 %338 to i64
  %339 = load i8*, i8** %fmt, align 8
  %arrayidx767 = getelementptr inbounds i8, i8* %339, i64 %idxprom766
  %340 = load i8, i8* %arrayidx767, align 1
  %conv768 = sext i8 %340 to i32
  %cmp769 = icmp eq i32 %conv768, 69
  br i1 %cmp769, label %if.then.771, label %if.else.788

if.then.771:                                      ; preds = %for.body.765
  %341 = load i32, i32* %i, align 4
  %idxprom772 = sext i32 %341 to i64
  %342 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld773 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %342, i32 0, i32 1
  %arrayidx774 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld773, i32 0, i64 %idxprom772
  %rtvec = bitcast %union.rtunion_def* %arrayidx774 to %struct.rtvec_def**
  %343 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %343, i32 0, i32 0
  %344 = load i32, i32* %num_elem, align 4
  %sub775 = sub nsw i32 %344, 1
  store i32 %sub775, i32* %j, align 4
  br label %for.cond.776

for.cond.776:                                     ; preds = %for.inc.786, %if.then.771
  %345 = load i32, i32* %j, align 4
  %cmp777 = icmp sge i32 %345, 0
  br i1 %cmp777, label %for.body.779, label %for.end.787

for.body.779:                                     ; preds = %for.cond.776
  %346 = load i32, i32* %j, align 4
  %idxprom780 = sext i32 %346 to i64
  %347 = load i32, i32* %i, align 4
  %idxprom781 = sext i32 %347 to i64
  %348 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld782 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %348, i32 0, i32 1
  %arrayidx783 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld782, i32 0, i64 %idxprom781
  %rtvec784 = bitcast %union.rtunion_def* %arrayidx783 to %struct.rtvec_def**
  %349 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec784, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %349, i32 0, i32 1
  %arrayidx785 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom780
  %350 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx785, align 8
  %351 = load %struct.rtx_def*, %struct.rtx_def** %maybe_kill_insn.addr, align 8
  %352 = load i32, i32* %from_cuid.addr, align 4
  %353 = load %struct.rtx_def*, %struct.rtx_def** %to_insn.addr, align 8
  %354 = load %struct.rtx_def**, %struct.rtx_def*** %pnotes.addr, align 8
  call void @move_deaths(%struct.rtx_def* %350, %struct.rtx_def* %351, i32 %352, %struct.rtx_def* %353, %struct.rtx_def** %354)
  br label %for.inc.786

for.inc.786:                                      ; preds = %for.body.779
  %355 = load i32, i32* %j, align 4
  %dec = add nsw i32 %355, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond.776

for.end.787:                                      ; preds = %for.cond.776
  br label %if.end.800

if.else.788:                                      ; preds = %for.body.765
  %356 = load i32, i32* %i, align 4
  %idxprom789 = sext i32 %356 to i64
  %357 = load i8*, i8** %fmt, align 8
  %arrayidx790 = getelementptr inbounds i8, i8* %357, i64 %idxprom789
  %358 = load i8, i8* %arrayidx790, align 1
  %conv791 = sext i8 %358 to i32
  %cmp792 = icmp eq i32 %conv791, 101
  br i1 %cmp792, label %if.then.794, label %if.end.799

if.then.794:                                      ; preds = %if.else.788
  %359 = load i32, i32* %i, align 4
  %idxprom795 = sext i32 %359 to i64
  %360 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld796 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %360, i32 0, i32 1
  %arrayidx797 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld796, i32 0, i64 %idxprom795
  %rtx798 = bitcast %union.rtunion_def* %arrayidx797 to %struct.rtx_def**
  %361 = load %struct.rtx_def*, %struct.rtx_def** %rtx798, align 8
  %362 = load %struct.rtx_def*, %struct.rtx_def** %maybe_kill_insn.addr, align 8
  %363 = load i32, i32* %from_cuid.addr, align 4
  %364 = load %struct.rtx_def*, %struct.rtx_def** %to_insn.addr, align 8
  %365 = load %struct.rtx_def**, %struct.rtx_def*** %pnotes.addr, align 8
  call void @move_deaths(%struct.rtx_def* %361, %struct.rtx_def* %362, i32 %363, %struct.rtx_def* %364, %struct.rtx_def** %365)
  br label %if.end.799

if.end.799:                                       ; preds = %if.then.794, %if.else.788
  br label %if.end.800

if.end.800:                                       ; preds = %if.end.799, %for.end.787
  br label %for.inc.801

for.inc.801:                                      ; preds = %if.end.800
  %366 = load i32, i32* %i, align 4
  %inc802 = add nsw i32 %366, 1
  store i32 %inc802, i32* %i, align 4
  br label %for.cond.762

for.end.803:                                      ; preds = %if.then.6, %if.end.665, %if.then.728, %if.end.747, %if.then.753, %for.cond.762
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @record_value_for_reg(%struct.rtx_def* %reg, %struct.rtx_def* %insn, %struct.rtx_def* %value) #0 {
entry:
  %reg.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %value.addr = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %endregno = alloca i32, align 4
  %i = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  %mode = alloca i32, align 4
  store %struct.rtx_def* %reg, %struct.rtx_def** %reg.addr, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store %struct.rtx_def* %value, %struct.rtx_def** %value.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32, i32* %rtuint, align 4
  store i32 %1, i32* %regno, align 4
  %2 = load i32, i32* %regno, align 4
  %3 = load i32, i32* %regno, align 4
  %cmp = icmp ult i32 %3, 53
  br i1 %cmp, label %cond.true, label %cond.false.55

cond.true:                                        ; preds = %entry
  %4 = load i32, i32* %regno, align 4
  %cmp1 = icmp uge i32 %4, 8
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %cond.true
  %5 = load i32, i32* %regno, align 4
  %cmp2 = icmp ule i32 %5, 15
  br i1 %cmp2, label %cond.true.14, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %cond.true
  %6 = load i32, i32* %regno, align 4
  %cmp3 = icmp uge i32 %6, 21
  br i1 %cmp3, label %land.lhs.true.4, label %lor.lhs.false.6

land.lhs.true.4:                                  ; preds = %lor.lhs.false
  %7 = load i32, i32* %regno, align 4
  %cmp5 = icmp ule i32 %7, 28
  br i1 %cmp5, label %cond.true.14, label %lor.lhs.false.6

lor.lhs.false.6:                                  ; preds = %land.lhs.true.4, %lor.lhs.false
  %8 = load i32, i32* %regno, align 4
  %cmp7 = icmp uge i32 %8, 45
  br i1 %cmp7, label %land.lhs.true.8, label %lor.lhs.false.10

land.lhs.true.8:                                  ; preds = %lor.lhs.false.6
  %9 = load i32, i32* %regno, align 4
  %cmp9 = icmp ule i32 %9, 52
  br i1 %cmp9, label %cond.true.14, label %lor.lhs.false.10

lor.lhs.false.10:                                 ; preds = %land.lhs.true.8, %lor.lhs.false.6
  %10 = load i32, i32* %regno, align 4
  %cmp11 = icmp uge i32 %10, 29
  br i1 %cmp11, label %land.lhs.true.12, label %cond.false

land.lhs.true.12:                                 ; preds = %lor.lhs.false.10
  %11 = load i32, i32* %regno, align 4
  %cmp13 = icmp ule i32 %11, 36
  br i1 %cmp13, label %cond.true.14, label %cond.false

cond.true.14:                                     ; preds = %land.lhs.true.12, %land.lhs.true.8, %land.lhs.true.4, %land.lhs.true
  %12 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load = load i32, i32* %13, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear to i64
  %arrayidx15 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %14 = load i32, i32* %arrayidx15, align 4
  %cmp16 = icmp eq i32 %14, 5
  br i1 %cmp16, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.14
  %15 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %16 = bitcast %struct.rtx_def* %15 to i32*
  %bf.load17 = load i32, i32* %16, align 8
  %bf.lshr18 = lshr i32 %bf.load17, 16
  %bf.clear19 = and i32 %bf.lshr18, 255
  %idxprom20 = sext i32 %bf.clear19 to i64
  %arrayidx21 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom20
  %17 = load i32, i32* %arrayidx21, align 4
  %cmp22 = icmp eq i32 %17, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.14
  %18 = phi i1 [ true, %cond.true.14 ], [ %cmp22, %lor.rhs ]
  %cond = select i1 %18, i32 2, i32 1
  br label %cond.end.53

cond.false:                                       ; preds = %land.lhs.true.12, %lor.lhs.false.10
  %19 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load23 = load i32, i32* %20, align 8
  %bf.lshr24 = lshr i32 %bf.load23, 16
  %bf.clear25 = and i32 %bf.lshr24, 255
  %cmp26 = icmp eq i32 %bf.clear25, 18
  br i1 %cmp26, label %cond.true.27, label %cond.false.29

cond.true.27:                                     ; preds = %cond.false
  %21 = load i32, i32* @target_flags, align 4
  %and = and i32 %21, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond28 = select i1 %tobool, i32 2, i32 3
  br label %cond.end.51

cond.false.29:                                    ; preds = %cond.false
  %22 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %23 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load30 = load i32, i32* %23, align 8
  %bf.lshr31 = lshr i32 %bf.load30, 16
  %bf.clear32 = and i32 %bf.lshr31, 255
  %cmp33 = icmp eq i32 %bf.clear32, 24
  br i1 %cmp33, label %cond.true.34, label %cond.false.38

cond.true.34:                                     ; preds = %cond.false.29
  %24 = load i32, i32* @target_flags, align 4
  %and35 = and i32 %24, 33554432
  %tobool36 = icmp ne i32 %and35, 0
  %cond37 = select i1 %tobool36, i32 4, i32 6
  br label %cond.end

cond.false.38:                                    ; preds = %cond.false.29
  %25 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load39 = load i32, i32* %26, align 8
  %bf.lshr40 = lshr i32 %bf.load39, 16
  %bf.clear41 = and i32 %bf.lshr40, 255
  %idxprom42 = sext i32 %bf.clear41 to i64
  %arrayidx43 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom42
  %27 = load i8, i8* %arrayidx43, align 1
  %conv = zext i8 %27 to i32
  %28 = load i32, i32* @target_flags, align 4
  %and44 = and i32 %28, 33554432
  %tobool45 = icmp ne i32 %and44, 0
  %cond46 = select i1 %tobool45, i32 8, i32 4
  %add = add nsw i32 %conv, %cond46
  %sub = sub nsw i32 %add, 1
  %29 = load i32, i32* @target_flags, align 4
  %and47 = and i32 %29, 33554432
  %tobool48 = icmp ne i32 %and47, 0
  %cond49 = select i1 %tobool48, i32 8, i32 4
  %div = sdiv i32 %sub, %cond49
  br label %cond.end

cond.end:                                         ; preds = %cond.false.38, %cond.true.34
  %cond50 = phi i32 [ %cond37, %cond.true.34 ], [ %div, %cond.false.38 ]
  br label %cond.end.51

cond.end.51:                                      ; preds = %cond.end, %cond.true.27
  %cond52 = phi i32 [ %cond28, %cond.true.27 ], [ %cond50, %cond.end ]
  br label %cond.end.53

cond.end.53:                                      ; preds = %cond.end.51, %lor.end
  %cond54 = phi i32 [ %cond, %lor.end ], [ %cond52, %cond.end.51 ]
  br label %cond.end.56

cond.false.55:                                    ; preds = %entry
  br label %cond.end.56

cond.end.56:                                      ; preds = %cond.false.55, %cond.end.53
  %cond57 = phi i32 [ %cond54, %cond.end.53 ], [ 1, %cond.false.55 ]
  %add58 = add i32 %2, %cond57
  store i32 %add58, i32* %endregno, align 4
  %30 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %tobool59 = icmp ne %struct.rtx_def* %30, null
  br i1 %tobool59, label %land.lhs.true.60, label %if.end.118

land.lhs.true.60:                                 ; preds = %cond.end.56
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %tobool61 = icmp ne %struct.rtx_def* %31, null
  br i1 %tobool61, label %land.lhs.true.62, label %if.end.118

land.lhs.true.62:                                 ; preds = %land.lhs.true.60
  %32 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %33 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %call = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %32, %struct.rtx_def* %33)
  %tobool63 = icmp ne i32 %call, 0
  br i1 %tobool63, label %if.then, label %if.end.118

if.then:                                          ; preds = %land.lhs.true.62
  %34 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld64, i32 0, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx65 to i32*
  %35 = load i32, i32* %rtint, align 4
  %36 = load i32, i32* @max_uid_cuid, align 4
  %cmp66 = icmp sgt i32 %35, %36
  br i1 %cmp66, label %cond.true.68, label %cond.false.70

cond.true.68:                                     ; preds = %if.then
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call69 = call i32 @insn_cuid(%struct.rtx_def* %37)
  br label %cond.end.76

cond.false.70:                                    ; preds = %if.then
  %38 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i32 0, i64 0
  %rtint73 = bitcast %union.rtunion_def* %arrayidx72 to i32*
  %39 = load i32, i32* %rtint73, align 4
  %idxprom74 = sext i32 %39 to i64
  %40 = load i32*, i32** @uid_cuid, align 8
  %arrayidx75 = getelementptr inbounds i32, i32* %40, i64 %idxprom74
  %41 = load i32, i32* %arrayidx75, align 4
  br label %cond.end.76

cond.end.76:                                      ; preds = %cond.false.70, %cond.true.68
  %cond77 = phi i32 [ %call69, %cond.true.68 ], [ %41, %cond.false.70 ]
  store i32 %cond77, i32* @subst_low_cuid, align 4
  %42 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %call78 = call %struct.rtx_def* @get_last_value(%struct.rtx_def* %42)
  store %struct.rtx_def* %call78, %struct.rtx_def** %tem, align 8
  %43 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %tobool79 = icmp ne %struct.rtx_def* %43, null
  br i1 %tobool79, label %if.then.80, label %if.end.117

if.then.80:                                       ; preds = %cond.end.76
  %44 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %45 = bitcast %struct.rtx_def* %44 to i32*
  %bf.load81 = load i32, i32* %45, align 8
  %bf.clear82 = and i32 %bf.load81, 65535
  %idxprom83 = sext i32 %bf.clear82 to i64
  %arrayidx84 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom83
  %46 = load i8, i8* %arrayidx84, align 1
  %conv85 = sext i8 %46 to i32
  %cmp86 = icmp eq i32 %conv85, 50
  br i1 %cmp86, label %land.lhs.true.96, label %lor.lhs.false.88

lor.lhs.false.88:                                 ; preds = %if.then.80
  %47 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %48 = bitcast %struct.rtx_def* %47 to i32*
  %bf.load89 = load i32, i32* %48, align 8
  %bf.clear90 = and i32 %bf.load89, 65535
  %idxprom91 = sext i32 %bf.clear90 to i64
  %arrayidx92 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom91
  %49 = load i8, i8* %arrayidx92, align 1
  %conv93 = sext i8 %49 to i32
  %cmp94 = icmp eq i32 %conv93, 99
  br i1 %cmp94, label %land.lhs.true.96, label %if.end

land.lhs.true.96:                                 ; preds = %lor.lhs.false.88, %if.then.80
  %50 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld97, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtx_def**
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %52 = bitcast %struct.rtx_def* %51 to i32*
  %bf.load99 = load i32, i32* %52, align 8
  %bf.clear100 = and i32 %bf.load99, 65535
  %cmp101 = icmp eq i32 %bf.clear100, 49
  br i1 %cmp101, label %land.lhs.true.103, label %if.end

land.lhs.true.103:                                ; preds = %land.lhs.true.96
  %53 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx105 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld104, i32 0, i64 1
  %rtx106 = bitcast %union.rtunion_def* %arrayidx105 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx106, align 8
  %55 = bitcast %struct.rtx_def* %54 to i32*
  %bf.load107 = load i32, i32* %55, align 8
  %bf.clear108 = and i32 %bf.load107, 65535
  %cmp109 = icmp eq i32 %bf.clear108, 49
  br i1 %cmp109, label %if.then.111, label %if.end

if.then.111:                                      ; preds = %land.lhs.true.103
  %56 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1
  %arrayidx113 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld112, i32 0, i64 0
  %rtx114 = bitcast %union.rtunion_def* %arrayidx113 to %struct.rtx_def**
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rtx114, align 8
  store %struct.rtx_def* %57, %struct.rtx_def** %tem, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.111, %land.lhs.true.103, %land.lhs.true.96, %lor.lhs.false.88
  %58 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %call115 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %58)
  %59 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %60 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %call116 = call %struct.rtx_def* @replace_rtx(%struct.rtx_def* %call115, %struct.rtx_def* %59, %struct.rtx_def* %60)
  store %struct.rtx_def* %call116, %struct.rtx_def** %value.addr, align 8
  br label %if.end.117

if.end.117:                                       ; preds = %if.end, %cond.end.76
  br label %if.end.118

if.end.118:                                       ; preds = %if.end.117, %land.lhs.true.62, %land.lhs.true.60, %cond.end.56
  %61 = load i32, i32* %regno, align 4
  store i32 %61, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.118
  %62 = load i32, i32* %i, align 4
  %63 = load i32, i32* %endregno, align 4
  %cmp119 = icmp ult i32 %62, %63
  br i1 %cmp119, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %64 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %tobool121 = icmp ne %struct.rtx_def* %64, null
  br i1 %tobool121, label %if.then.122, label %if.end.125

if.then.122:                                      ; preds = %for.body
  %65 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %66 = load i32, i32* %i, align 4
  %idxprom123 = zext i32 %66 to i64
  %67 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set, align 8
  %arrayidx124 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %67, i64 %idxprom123
  store %struct.rtx_def* %65, %struct.rtx_def** %arrayidx124, align 8
  br label %if.end.125

if.end.125:                                       ; preds = %if.then.122, %for.body
  %68 = load i32, i32* %i, align 4
  %idxprom126 = zext i32 %68 to i64
  %69 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set_value, align 8
  %arrayidx127 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %69, i64 %idxprom126
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx127, align 8
  %70 = load i32, i32* %i, align 4
  %idxprom128 = zext i32 %70 to i64
  %71 = load i32*, i32** @reg_last_set_mode, align 8
  %arrayidx129 = getelementptr inbounds i32, i32* %71, i64 %idxprom128
  store i32 0, i32* %arrayidx129, align 4
  %72 = load i32, i32* %i, align 4
  %idxprom130 = zext i32 %72 to i64
  %73 = load i64*, i64** @reg_last_set_nonzero_bits, align 8
  %arrayidx131 = getelementptr inbounds i64, i64* %73, i64 %idxprom130
  store i64 0, i64* %arrayidx131, align 8
  %74 = load i32, i32* %i, align 4
  %idxprom132 = zext i32 %74 to i64
  %75 = load i8*, i8** @reg_last_set_sign_bit_copies, align 8
  %arrayidx133 = getelementptr inbounds i8, i8* %75, i64 %idxprom132
  store i8 0, i8* %arrayidx133, align 1
  %76 = load i32, i32* %i, align 4
  %idxprom134 = zext i32 %76 to i64
  %77 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_death, align 8
  %arrayidx135 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %77, i64 %idxprom134
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx135, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end.125
  %78 = load i32, i32* %i, align 4
  %inc = add i32 %78, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %79 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %tobool136 = icmp ne %struct.rtx_def* %79, null
  br i1 %tobool136, label %if.then.137, label %if.end.138

if.then.137:                                      ; preds = %for.end
  %80 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  call void @update_table_tick(%struct.rtx_def* %80)
  br label %if.end.138

if.end.138:                                       ; preds = %if.then.137, %for.end
  %81 = load i32, i32* %regno, align 4
  store i32 %81, i32* %i, align 4
  br label %for.cond.139

for.cond.139:                                     ; preds = %for.inc.157, %if.end.138
  %82 = load i32, i32* %i, align 4
  %83 = load i32, i32* %endregno, align 4
  %cmp140 = icmp ult i32 %82, %83
  br i1 %cmp140, label %for.body.142, label %for.end.159

for.body.142:                                     ; preds = %for.cond.139
  %84 = load i32, i32* @label_tick, align 4
  %85 = load i32, i32* %i, align 4
  %idxprom143 = zext i32 %85 to i64
  %86 = load i32*, i32** @reg_last_set_label, align 8
  %arrayidx144 = getelementptr inbounds i32, i32* %86, i64 %idxprom143
  store i32 %84, i32* %arrayidx144, align 4
  %87 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %tobool145 = icmp ne %struct.rtx_def* %87, null
  br i1 %tobool145, label %land.lhs.true.146, label %if.else

land.lhs.true.146:                                ; preds = %for.body.142
  %88 = load i32, i32* %i, align 4
  %idxprom147 = zext i32 %88 to i64
  %89 = load i32*, i32** @reg_last_set_table_tick, align 8
  %arrayidx148 = getelementptr inbounds i32, i32* %89, i64 %idxprom147
  %90 = load i32, i32* %arrayidx148, align 4
  %91 = load i32, i32* @label_tick, align 4
  %cmp149 = icmp eq i32 %90, %91
  br i1 %cmp149, label %if.then.151, label %if.else

if.then.151:                                      ; preds = %land.lhs.true.146
  %92 = load i32, i32* %i, align 4
  %idxprom152 = zext i32 %92 to i64
  %93 = load i8*, i8** @reg_last_set_invalid, align 8
  %arrayidx153 = getelementptr inbounds i8, i8* %93, i64 %idxprom152
  store i8 1, i8* %arrayidx153, align 1
  br label %if.end.156

if.else:                                          ; preds = %land.lhs.true.146, %for.body.142
  %94 = load i32, i32* %i, align 4
  %idxprom154 = zext i32 %94 to i64
  %95 = load i8*, i8** @reg_last_set_invalid, align 8
  %arrayidx155 = getelementptr inbounds i8, i8* %95, i64 %idxprom154
  store i8 0, i8* %arrayidx155, align 1
  br label %if.end.156

if.end.156:                                       ; preds = %if.else, %if.then.151
  br label %for.inc.157

for.inc.157:                                      ; preds = %if.end.156
  %96 = load i32, i32* %i, align 4
  %inc158 = add i32 %96, 1
  store i32 %inc158, i32* %i, align 4
  br label %for.cond.139

for.end.159:                                      ; preds = %for.cond.139
  %97 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %tobool160 = icmp ne %struct.rtx_def* %97, null
  br i1 %tobool160, label %land.lhs.true.161, label %if.end.174

land.lhs.true.161:                                ; preds = %for.end.159
  %98 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %99 = load i32, i32* %regno, align 4
  %idxprom162 = zext i32 %99 to i64
  %100 = load i32*, i32** @reg_last_set_label, align 8
  %arrayidx163 = getelementptr inbounds i32, i32* %100, i64 %idxprom162
  %101 = load i32, i32* %arrayidx163, align 4
  %call164 = call i32 @get_last_value_validate(%struct.rtx_def** %value.addr, %struct.rtx_def* %98, i32 %101, i32 0)
  %tobool165 = icmp ne i32 %call164, 0
  br i1 %tobool165, label %if.end.174, label %if.then.166

if.then.166:                                      ; preds = %land.lhs.true.161
  %102 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %call167 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %102)
  store %struct.rtx_def* %call167, %struct.rtx_def** %value.addr, align 8
  %103 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %104 = load i32, i32* %regno, align 4
  %idxprom168 = zext i32 %104 to i64
  %105 = load i32*, i32** @reg_last_set_label, align 8
  %arrayidx169 = getelementptr inbounds i32, i32* %105, i64 %idxprom168
  %106 = load i32, i32* %arrayidx169, align 4
  %call170 = call i32 @get_last_value_validate(%struct.rtx_def** %value.addr, %struct.rtx_def* %103, i32 %106, i32 1)
  %tobool171 = icmp ne i32 %call170, 0
  br i1 %tobool171, label %if.end.173, label %if.then.172

if.then.172:                                      ; preds = %if.then.166
  store %struct.rtx_def* null, %struct.rtx_def** %value.addr, align 8
  br label %if.end.173

if.end.173:                                       ; preds = %if.then.172, %if.then.166
  br label %if.end.174

if.end.174:                                       ; preds = %if.end.173, %land.lhs.true.161, %for.end.159
  %107 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %108 = load i32, i32* %regno, align 4
  %idxprom175 = zext i32 %108 to i64
  %109 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set_value, align 8
  %arrayidx176 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %109, i64 %idxprom175
  store %struct.rtx_def* %107, %struct.rtx_def** %arrayidx176, align 8
  %110 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %tobool177 = icmp ne %struct.rtx_def* %110, null
  br i1 %tobool177, label %if.then.178, label %if.end.221

if.then.178:                                      ; preds = %if.end.174
  %111 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %112 = bitcast %struct.rtx_def* %111 to i32*
  %bf.load179 = load i32, i32* %112, align 8
  %bf.lshr180 = lshr i32 %bf.load179, 16
  %bf.clear181 = and i32 %bf.lshr180, 255
  store i32 %bf.clear181, i32* %mode, align 4
  %113 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld182 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %113, i32 0, i32 1
  %arrayidx183 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld182, i32 0, i64 0
  %rtint184 = bitcast %union.rtunion_def* %arrayidx183 to i32*
  %114 = load i32, i32* %rtint184, align 4
  %115 = load i32, i32* @max_uid_cuid, align 4
  %cmp185 = icmp sgt i32 %114, %115
  br i1 %cmp185, label %cond.true.187, label %cond.false.189

cond.true.187:                                    ; preds = %if.then.178
  %116 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call188 = call i32 @insn_cuid(%struct.rtx_def* %116)
  br label %cond.end.195

cond.false.189:                                   ; preds = %if.then.178
  %117 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld190 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %117, i32 0, i32 1
  %arrayidx191 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld190, i32 0, i64 0
  %rtint192 = bitcast %union.rtunion_def* %arrayidx191 to i32*
  %118 = load i32, i32* %rtint192, align 4
  %idxprom193 = sext i32 %118 to i64
  %119 = load i32*, i32** @uid_cuid, align 8
  %arrayidx194 = getelementptr inbounds i32, i32* %119, i64 %idxprom193
  %120 = load i32, i32* %arrayidx194, align 4
  br label %cond.end.195

cond.end.195:                                     ; preds = %cond.false.189, %cond.true.187
  %cond196 = phi i32 [ %call188, %cond.true.187 ], [ %120, %cond.false.189 ]
  store i32 %cond196, i32* @subst_low_cuid, align 4
  %121 = load i32, i32* %mode, align 4
  %122 = load i32, i32* %regno, align 4
  %idxprom197 = zext i32 %122 to i64
  %123 = load i32*, i32** @reg_last_set_mode, align 8
  %arrayidx198 = getelementptr inbounds i32, i32* %123, i64 %idxprom197
  store i32 %121, i32* %arrayidx198, align 4
  %124 = load i32, i32* %mode, align 4
  %idxprom199 = sext i32 %124 to i64
  %arrayidx200 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom199
  %125 = load i32, i32* %arrayidx200, align 4
  %cmp201 = icmp eq i32 %125, 1
  br i1 %cmp201, label %land.lhs.true.203, label %if.end.210

land.lhs.true.203:                                ; preds = %cond.end.195
  %126 = load i32, i32* %mode, align 4
  %idxprom204 = sext i32 %126 to i64
  %arrayidx205 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom204
  %127 = load i16, i16* %arrayidx205, align 2
  %conv206 = zext i16 %127 to i32
  %cmp207 = icmp sle i32 %conv206, 64
  br i1 %cmp207, label %if.then.209, label %if.end.210

if.then.209:                                      ; preds = %land.lhs.true.203
  %128 = load i32, i32* @nonzero_bits_mode, align 4
  store i32 %128, i32* %mode, align 4
  br label %if.end.210

if.end.210:                                       ; preds = %if.then.209, %land.lhs.true.203, %cond.end.195
  %129 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %130 = load i32, i32* %mode, align 4
  %call211 = call i64 @nonzero_bits(%struct.rtx_def* %129, i32 %130)
  %131 = load i32, i32* %regno, align 4
  %idxprom212 = zext i32 %131 to i64
  %132 = load i64*, i64** @reg_last_set_nonzero_bits, align 8
  %arrayidx213 = getelementptr inbounds i64, i64* %132, i64 %idxprom212
  store i64 %call211, i64* %arrayidx213, align 8
  %133 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8
  %134 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %135 = bitcast %struct.rtx_def* %134 to i32*
  %bf.load214 = load i32, i32* %135, align 8
  %bf.lshr215 = lshr i32 %bf.load214, 16
  %bf.clear216 = and i32 %bf.lshr215, 255
  %call217 = call i32 @num_sign_bit_copies(%struct.rtx_def* %133, i32 %bf.clear216)
  %conv218 = trunc i32 %call217 to i8
  %136 = load i32, i32* %regno, align 4
  %idxprom219 = zext i32 %136 to i64
  %137 = load i8*, i8** @reg_last_set_sign_bit_copies, align 8
  %arrayidx220 = getelementptr inbounds i8, i8* %137, i64 %idxprom219
  store i8 %conv218, i8* %arrayidx220, align 1
  br label %if.end.221

if.end.221:                                       ; preds = %if.end.210, %if.end.174
  ret void
}

declare i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @any_uncondjump_p(%struct.rtx_def*) #1

declare %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def*) #1

declare %struct.rtx_def* @emit_barrier_after(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @undo_commit() #0 {
entry:
  %undo = alloca %struct.undo*, align 8
  %next = alloca %struct.undo*, align 8
  %0 = load %struct.undo*, %struct.undo** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 0), align 8
  store %struct.undo* %0, %struct.undo** %undo, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.undo*, %struct.undo** %undo, align 8
  %tobool = icmp ne %struct.undo* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.undo*, %struct.undo** %undo, align 8
  %next1 = getelementptr inbounds %struct.undo, %struct.undo* %2, i32 0, i32 0
  %3 = load %struct.undo*, %struct.undo** %next1, align 8
  store %struct.undo* %3, %struct.undo** %next, align 8
  %4 = load %struct.undo*, %struct.undo** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 1), align 8
  %5 = load %struct.undo*, %struct.undo** %undo, align 8
  %next2 = getelementptr inbounds %struct.undo, %struct.undo* %5, i32 0, i32 0
  store %struct.undo* %4, %struct.undo** %next2, align 8
  %6 = load %struct.undo*, %struct.undo** %undo, align 8
  store %struct.undo* %6, %struct.undo** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 1), align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %7 = load %struct.undo*, %struct.undo** %next, align 8
  store %struct.undo* %7, %struct.undo** %undo, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store %struct.undo* null, %struct.undo** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 0), align 8
  ret void
}

declare i64 @trunc_int_for_mode(i64, i32) #1

declare %struct.rtx_def* @next_active_insn(%struct.rtx_def*) #1

declare i32 @reg_set_between_p(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @find_reg_fusage(%struct.rtx_def*, i32, %struct.rtx_def*) #1

declare i32 @ix86_hard_regno_mode_ok(i32, i32) #1

declare i32 @volatile_refs_p(%struct.rtx_def*) #1

declare i32 @volatile_insn_p(%struct.rtx_def*) #1

declare %struct.rtx_def* @simplify_subreg(i32, %struct.rtx_def*, i32, i32) #1

declare %struct.rtx_def* @simplify_unary_operation(i32, i32, %struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @combine_simplify_rtx(%struct.rtx_def* %x, i32 %op0_mode, i32 %last, i32 %in_dest) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %op0_mode.addr = alloca i32, align 4
  %last.addr = alloca i32, align 4
  %in_dest.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %mode = alloca i32, align 4
  %temp = alloca %struct.rtx_def*, align 8
  %reversed = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %new = alloca %struct.rtx_def*, align 8
  %cond = alloca %struct.rtx_def*, align 8
  %true_rtx = alloca %struct.rtx_def*, align 8
  %false_rtx = alloca %struct.rtx_def*, align 8
  %cop1 = alloca %struct.rtx_def*, align 8
  %cond_code = alloca i32, align 4
  %cmp_mode = alloca i32, align 4
  %other = alloca %struct.rtx_def*, align 8
  %inner_op0 = alloca %struct.rtx_def*, align 8
  %inner_op1 = alloca %struct.rtx_def*, align 8
  %inner = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  %temp789 = alloca %struct.rtx_def*, align 8
  %inner_mode = alloca i32, align 4
  %in1 = alloca %struct.rtx_def*, align 8
  %in2 = alloca %struct.rtx_def*, align 8
  %op_mode = alloca i32, align 4
  %tem1065 = alloca %struct.rtx_def*, align 8
  %temp1 = alloca %struct.rtx_def*, align 8
  %tor = alloca %struct.rtx_def*, align 8
  %tem2308 = alloca %struct.rtx_def*, align 8
  %op0 = alloca %struct.rtx_def*, align 8
  %op1 = alloca %struct.rtx_def*, align 8
  %new_code = alloca i32, align 4
  %op02797 = alloca %struct.rtx_def*, align 8
  %op12801 = alloca %struct.rtx_def*, align 8
  %len = alloca i32, align 4
  %offset = alloca i32, align 4
  %op0_size = alloca i64, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %op0_mode, i32* %op0_mode.addr, align 4
  store i32 %last, i32* %last.addr, align 4
  store i32 %in_dest, i32* %in_dest.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load1 = load i32, i32* %3, align 8
  %bf.lshr = lshr i32 %bf.load1, 16
  %bf.clear2 = and i32 %bf.lshr, 255
  store i32 %bf.clear2, i32* %mode, align 4
  %4 = load i32, i32* %code, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %5 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %5 to i32
  %cmp = icmp eq i32 %conv, 99
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i32 0, i64 1
  %rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rtx7, align 8
  %call = call i32 @swap_commutative_operands_p(%struct.rtx_def* %7, %struct.rtx_def* %9)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i32 0, i64 0
  %rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rtx10, align 8
  store %struct.rtx_def* %11, %struct.rtx_def** %temp, align 8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i32 0, i64 0
  %rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i32 0, i64 1
  %rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rtx16, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx13, %struct.rtx_def* %14)
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i32 0, i64 1
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %16 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx19, %struct.rtx_def* %16)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %17 = load i32, i32* %code, align 4
  %cmp20 = icmp eq i32 %17, 75
  br i1 %cmp20, label %land.lhs.true.27, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %18 = load i32, i32* %code, align 4
  %cmp22 = icmp eq i32 %18, 76
  br i1 %cmp22, label %land.lhs.true.27, label %lor.lhs.false.24

lor.lhs.false.24:                                 ; preds = %lor.lhs.false
  %19 = load i32, i32* %code, align 4
  %cmp25 = icmp eq i32 %19, 78
  br i1 %cmp25, label %land.lhs.true.27, label %if.end.180

land.lhs.true.27:                                 ; preds = %lor.lhs.false.24, %lor.lhs.false, %if.end
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i32 0, i64 0
  %rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rtx30, align 8
  %22 = bitcast %struct.rtx_def* %21 to i32*
  %bf.load31 = load i32, i32* %22, align 8
  %bf.clear32 = and i32 %bf.load31, 65535
  %cmp33 = icmp eq i32 %bf.clear32, 89
  br i1 %cmp33, label %land.lhs.true.35, label %if.end.180

land.lhs.true.35:                                 ; preds = %land.lhs.true.27
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i32 0, i64 0
  %rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rtx38, align 8
  %fld39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i32 0, i64 0
  %rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rtx41, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load42 = load i32, i32* %26, align 8
  %bf.clear43 = and i32 %bf.load42, 65535
  %cmp44 = icmp eq i32 %bf.clear43, 75
  br i1 %cmp44, label %land.lhs.true.46, label %if.end.180

land.lhs.true.46:                                 ; preds = %land.lhs.true.35
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i32 0, i64 0
  %rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rtx49, align 8
  %fld50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i32 0, i64 0
  %rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rtx52, align 8
  %fld53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i32 0, i64 0
  %rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rtx55, align 8
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load56 = load i32, i32* %31, align 8
  %bf.clear57 = and i32 %bf.load56, 65535
  %cmp58 = icmp eq i32 %bf.clear57, 87
  br i1 %cmp58, label %land.lhs.true.60, label %if.end.180

land.lhs.true.60:                                 ; preds = %land.lhs.true.46
  %32 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i32 0, i64 0
  %rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rtx63, align 8
  %fld64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld64, i32 0, i64 0
  %rtx66 = bitcast %union.rtunion_def* %arrayidx65 to %struct.rtx_def**
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rtx66, align 8
  %fld67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i32 0, i64 0
  %rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rtx69, align 8
  %fld70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i32 0, i64 1
  %rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rtx72, align 8
  %37 = bitcast %struct.rtx_def* %36 to i32*
  %bf.load73 = load i32, i32* %37, align 8
  %bf.clear74 = and i32 %bf.load73, 65535
  %cmp75 = icmp eq i32 %bf.clear74, 54
  br i1 %cmp75, label %land.lhs.true.77, label %if.end.180

land.lhs.true.77:                                 ; preds = %land.lhs.true.60
  %38 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1
  %arrayidx79 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld78, i32 0, i64 0
  %rtx80 = bitcast %union.rtunion_def* %arrayidx79 to %struct.rtx_def**
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rtx80, align 8
  %fld81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1
  %arrayidx82 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld81, i32 0, i64 1
  %rtx83 = bitcast %union.rtunion_def* %arrayidx82 to %struct.rtx_def**
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rtx83, align 8
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load84 = load i32, i32* %41, align 8
  %bf.clear85 = and i32 %bf.load84, 65535
  %cmp86 = icmp eq i32 %bf.clear85, 54
  br i1 %cmp86, label %land.lhs.true.88, label %if.end.180

land.lhs.true.88:                                 ; preds = %land.lhs.true.77
  %42 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i32 0, i64 0
  %rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rtx91, align 8
  %fld92 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx93 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld92, i32 0, i64 0
  %rtx94 = bitcast %union.rtunion_def* %arrayidx93 to %struct.rtx_def**
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rtx94, align 8
  %fld95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1
  %arrayidx96 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld95, i32 0, i64 0
  %rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rtx97, align 8
  %fld98 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1
  %arrayidx99 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld98, i32 0, i64 1
  %rtx100 = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtx_def**
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rtx100, align 8
  %47 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1
  %arrayidx102 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld101, i32 0, i64 0
  %rtx103 = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtx_def**
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rtx103, align 8
  %fld104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1
  %arrayidx105 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld104, i32 0, i64 1
  %rtx106 = bitcast %union.rtunion_def* %arrayidx105 to %struct.rtx_def**
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rtx106, align 8
  %cmp107 = icmp eq %struct.rtx_def* %46, %49
  br i1 %cmp107, label %land.lhs.true.109, label %if.end.180

land.lhs.true.109:                                ; preds = %land.lhs.true.88
  %50 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1
  %arrayidx111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld110, i32 0, i64 0
  %rtx112 = bitcast %union.rtunion_def* %arrayidx111 to %struct.rtx_def**
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rtx112, align 8
  %fld113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %arrayidx114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld113, i32 0, i64 0
  %rtx115 = bitcast %union.rtunion_def* %arrayidx114 to %struct.rtx_def**
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rtx115, align 8
  %fld116 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1
  %arrayidx117 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld116, i32 0, i64 1
  %rtx118 = bitcast %union.rtunion_def* %arrayidx117 to %struct.rtx_def**
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rtx118, align 8
  %54 = bitcast %struct.rtx_def* %53 to i32*
  %bf.load119 = load i32, i32* %54, align 8
  %bf.clear120 = and i32 %bf.load119, 65535
  %cmp121 = icmp eq i32 %bf.clear120, 54
  br i1 %cmp121, label %land.lhs.true.123, label %if.end.180

land.lhs.true.123:                                ; preds = %land.lhs.true.109
  %55 = load i32, i32* %mode, align 4
  %56 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1
  %arrayidx125 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld124, i32 0, i64 0
  %rtx126 = bitcast %union.rtunion_def* %arrayidx125 to %struct.rtx_def**
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rtx126, align 8
  %fld127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1
  %arrayidx128 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld127, i32 0, i64 0
  %rtx129 = bitcast %union.rtunion_def* %arrayidx128 to %struct.rtx_def**
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rtx129, align 8
  %fld130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1
  %arrayidx131 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld130, i32 0, i64 1
  %rtx132 = bitcast %union.rtunion_def* %arrayidx131 to %struct.rtx_def**
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rtx132, align 8
  %60 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld133 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1
  %arrayidx134 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld133, i32 0, i64 0
  %rtx135 = bitcast %union.rtunion_def* %arrayidx134 to %struct.rtx_def**
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rtx135, align 8
  %fld136 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1
  %arrayidx137 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld136, i32 0, i64 1
  %rtx138 = bitcast %union.rtunion_def* %arrayidx137 to %struct.rtx_def**
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rtx138, align 8
  %call139 = call %struct.rtx_def* @simplify_binary_operation(i32 89, i32 %55, %struct.rtx_def* %59, %struct.rtx_def* %62)
  store %struct.rtx_def* %call139, %struct.rtx_def** %temp, align 8
  %cmp140 = icmp ne %struct.rtx_def* %call139, null
  br i1 %cmp140, label %if.then.142, label %if.end.180

if.then.142:                                      ; preds = %land.lhs.true.123
  %63 = load i32, i32* %mode, align 4
  %64 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1
  %arrayidx144 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld143, i32 0, i64 0
  %rtx145 = bitcast %union.rtunion_def* %arrayidx144 to %struct.rtx_def**
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rtx145, align 8
  %fld146 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1
  %arrayidx147 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld146, i32 0, i64 0
  %rtx148 = bitcast %union.rtunion_def* %arrayidx147 to %struct.rtx_def**
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rtx148, align 8
  %fld149 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1
  %arrayidx150 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld149, i32 0, i64 0
  %rtx151 = bitcast %union.rtunion_def* %arrayidx150 to %struct.rtx_def**
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rtx151, align 8
  %fld152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1
  %arrayidx153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld152, i32 0, i64 0
  %rtx154 = bitcast %union.rtunion_def* %arrayidx153 to %struct.rtx_def**
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rtx154, align 8
  %69 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld155 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1
  %arrayidx156 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld155, i32 0, i64 0
  %rtx157 = bitcast %union.rtunion_def* %arrayidx156 to %struct.rtx_def**
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rtx157, align 8
  %fld158 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx159 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld158, i32 0, i64 1
  %rtx160 = bitcast %union.rtunion_def* %arrayidx159 to %struct.rtx_def**
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rtx160, align 8
  %fld161 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1
  %arrayidx162 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld161, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx162 to i64*
  %72 = load i64, i64* %rtwint, align 8
  %conv163 = trunc i64 %72 to i32
  %call164 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 87, i32 %63, %struct.rtx_def* %68, i32 %conv163)
  store %struct.rtx_def* %call164, %struct.rtx_def** %new, align 8
  %73 = load i32, i32* %mode, align 4
  %74 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %75 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld165 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx166 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld165, i32 0, i64 0
  %rtx167 = bitcast %union.rtunion_def* %arrayidx166 to %struct.rtx_def**
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rtx167, align 8
  %fld168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %arrayidx169 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld168, i32 0, i64 1
  %rtx170 = bitcast %union.rtunion_def* %arrayidx169 to %struct.rtx_def**
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rtx170, align 8
  %fld171 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1
  %arrayidx172 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld171, i32 0, i64 0
  %rtwint173 = bitcast %union.rtunion_def* %arrayidx172 to i64*
  %78 = load i64, i64* %rtwint173, align 8
  %conv174 = trunc i64 %78 to i32
  %call175 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 89, i32 %73, %struct.rtx_def* %74, i32 %conv174)
  store %struct.rtx_def* %call175, %struct.rtx_def** %new, align 8
  %79 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld176 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1
  %arrayidx177 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld176, i32 0, i64 0
  %rtx178 = bitcast %union.rtunion_def* %arrayidx177 to %struct.rtx_def**
  %80 = load i32, i32* %mode, align 4
  %81 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %82 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %call179 = call %struct.rtx_def* @gen_binary(i32 75, i32 %80, %struct.rtx_def* %81, %struct.rtx_def* %82)
  call void @do_SUBST(%struct.rtx_def** %rtx178, %struct.rtx_def* %call179)
  br label %if.end.180

if.end.180:                                       ; preds = %if.then.142, %land.lhs.true.123, %land.lhs.true.109, %land.lhs.true.88, %land.lhs.true.77, %land.lhs.true.60, %land.lhs.true.46, %land.lhs.true.35, %land.lhs.true.27, %lor.lhs.false.24
  %83 = load i32, i32* %code, align 4
  %idxprom181 = sext i32 %83 to i64
  %arrayidx182 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom181
  %84 = load i8, i8* %arrayidx182, align 1
  %conv183 = sext i8 %84 to i32
  %cmp184 = icmp eq i32 %conv183, 50
  br i1 %cmp184, label %land.lhs.true.198, label %lor.lhs.false.186

lor.lhs.false.186:                                ; preds = %if.end.180
  %85 = load i32, i32* %code, align 4
  %idxprom187 = sext i32 %85 to i64
  %arrayidx188 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom187
  %86 = load i8, i8* %arrayidx188, align 1
  %conv189 = sext i8 %86 to i32
  %cmp190 = icmp eq i32 %conv189, 99
  br i1 %cmp190, label %land.lhs.true.198, label %lor.lhs.false.192

lor.lhs.false.192:                                ; preds = %lor.lhs.false.186
  %87 = load i32, i32* %code, align 4
  %idxprom193 = sext i32 %87 to i64
  %arrayidx194 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom193
  %88 = load i8, i8* %arrayidx194, align 1
  %conv195 = sext i8 %88 to i32
  %cmp196 = icmp eq i32 %conv195, 60
  br i1 %cmp196, label %land.lhs.true.198, label %lor.lhs.false.264

land.lhs.true.198:                                ; preds = %lor.lhs.false.192, %lor.lhs.false.186, %if.end.180
  %89 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld199 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1
  %arrayidx200 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld199, i32 0, i64 0
  %rtx201 = bitcast %union.rtunion_def* %arrayidx200 to %struct.rtx_def**
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rtx201, align 8
  %91 = bitcast %struct.rtx_def* %90 to i32*
  %bf.load202 = load i32, i32* %91, align 8
  %bf.clear203 = and i32 %bf.load202, 65535
  %idxprom204 = sext i32 %bf.clear203 to i64
  %arrayidx205 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom204
  %92 = load i8, i8* %arrayidx205, align 1
  %conv206 = sext i8 %92 to i32
  %cmp207 = icmp ne i32 %conv206, 111
  br i1 %cmp207, label %land.lhs.true.209, label %lor.lhs.false.231

land.lhs.true.209:                                ; preds = %land.lhs.true.198
  %93 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld210 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %93, i32 0, i32 1
  %arrayidx211 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld210, i32 0, i64 0
  %rtx212 = bitcast %union.rtunion_def* %arrayidx211 to %struct.rtx_def**
  %94 = load %struct.rtx_def*, %struct.rtx_def** %rtx212, align 8
  %95 = bitcast %struct.rtx_def* %94 to i32*
  %bf.load213 = load i32, i32* %95, align 8
  %bf.clear214 = and i32 %bf.load213, 65535
  %cmp215 = icmp eq i32 %bf.clear214, 63
  br i1 %cmp215, label %land.lhs.true.217, label %if.then.303

land.lhs.true.217:                                ; preds = %land.lhs.true.209
  %96 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld218 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1
  %arrayidx219 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld218, i32 0, i64 0
  %rtx220 = bitcast %union.rtunion_def* %arrayidx219 to %struct.rtx_def**
  %97 = load %struct.rtx_def*, %struct.rtx_def** %rtx220, align 8
  %fld221 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %97, i32 0, i32 1
  %arrayidx222 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld221, i32 0, i64 0
  %rtx223 = bitcast %union.rtunion_def* %arrayidx222 to %struct.rtx_def**
  %98 = load %struct.rtx_def*, %struct.rtx_def** %rtx223, align 8
  %99 = bitcast %struct.rtx_def* %98 to i32*
  %bf.load224 = load i32, i32* %99, align 8
  %bf.clear225 = and i32 %bf.load224, 65535
  %idxprom226 = sext i32 %bf.clear225 to i64
  %arrayidx227 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom226
  %100 = load i8, i8* %arrayidx227, align 1
  %conv228 = sext i8 %100 to i32
  %cmp229 = icmp eq i32 %conv228, 111
  br i1 %cmp229, label %lor.lhs.false.231, label %if.then.303

lor.lhs.false.231:                                ; preds = %land.lhs.true.217, %land.lhs.true.198
  %101 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld232 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i32 0, i32 1
  %arrayidx233 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld232, i32 0, i64 1
  %rtx234 = bitcast %union.rtunion_def* %arrayidx233 to %struct.rtx_def**
  %102 = load %struct.rtx_def*, %struct.rtx_def** %rtx234, align 8
  %103 = bitcast %struct.rtx_def* %102 to i32*
  %bf.load235 = load i32, i32* %103, align 8
  %bf.clear236 = and i32 %bf.load235, 65535
  %idxprom237 = sext i32 %bf.clear236 to i64
  %arrayidx238 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom237
  %104 = load i8, i8* %arrayidx238, align 1
  %conv239 = sext i8 %104 to i32
  %cmp240 = icmp ne i32 %conv239, 111
  br i1 %cmp240, label %land.lhs.true.242, label %lor.lhs.false.264

land.lhs.true.242:                                ; preds = %lor.lhs.false.231
  %105 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld243 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1
  %arrayidx244 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld243, i32 0, i64 1
  %rtx245 = bitcast %union.rtunion_def* %arrayidx244 to %struct.rtx_def**
  %106 = load %struct.rtx_def*, %struct.rtx_def** %rtx245, align 8
  %107 = bitcast %struct.rtx_def* %106 to i32*
  %bf.load246 = load i32, i32* %107, align 8
  %bf.clear247 = and i32 %bf.load246, 65535
  %cmp248 = icmp eq i32 %bf.clear247, 63
  br i1 %cmp248, label %land.lhs.true.250, label %if.then.303

land.lhs.true.250:                                ; preds = %land.lhs.true.242
  %108 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld251 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1
  %arrayidx252 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld251, i32 0, i64 1
  %rtx253 = bitcast %union.rtunion_def* %arrayidx252 to %struct.rtx_def**
  %109 = load %struct.rtx_def*, %struct.rtx_def** %rtx253, align 8
  %fld254 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1
  %arrayidx255 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld254, i32 0, i64 0
  %rtx256 = bitcast %union.rtunion_def* %arrayidx255 to %struct.rtx_def**
  %110 = load %struct.rtx_def*, %struct.rtx_def** %rtx256, align 8
  %111 = bitcast %struct.rtx_def* %110 to i32*
  %bf.load257 = load i32, i32* %111, align 8
  %bf.clear258 = and i32 %bf.load257, 65535
  %idxprom259 = sext i32 %bf.clear258 to i64
  %arrayidx260 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom259
  %112 = load i8, i8* %arrayidx260, align 1
  %conv261 = sext i8 %112 to i32
  %cmp262 = icmp eq i32 %conv261, 111
  br i1 %cmp262, label %lor.lhs.false.264, label %if.then.303

lor.lhs.false.264:                                ; preds = %land.lhs.true.250, %lor.lhs.false.231, %lor.lhs.false.192
  %113 = load i32, i32* %code, align 4
  %idxprom265 = sext i32 %113 to i64
  %arrayidx266 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom265
  %114 = load i8, i8* %arrayidx266, align 1
  %conv267 = sext i8 %114 to i32
  %cmp268 = icmp eq i32 %conv267, 49
  br i1 %cmp268, label %land.lhs.true.270, label %if.end.416

land.lhs.true.270:                                ; preds = %lor.lhs.false.264
  %115 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld271 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1
  %arrayidx272 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld271, i32 0, i64 0
  %rtx273 = bitcast %union.rtunion_def* %arrayidx272 to %struct.rtx_def**
  %116 = load %struct.rtx_def*, %struct.rtx_def** %rtx273, align 8
  %117 = bitcast %struct.rtx_def* %116 to i32*
  %bf.load274 = load i32, i32* %117, align 8
  %bf.clear275 = and i32 %bf.load274, 65535
  %idxprom276 = sext i32 %bf.clear275 to i64
  %arrayidx277 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom276
  %118 = load i8, i8* %arrayidx277, align 1
  %conv278 = sext i8 %118 to i32
  %cmp279 = icmp ne i32 %conv278, 111
  br i1 %cmp279, label %land.lhs.true.281, label %if.end.416

land.lhs.true.281:                                ; preds = %land.lhs.true.270
  %119 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld282 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %119, i32 0, i32 1
  %arrayidx283 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld282, i32 0, i64 0
  %rtx284 = bitcast %union.rtunion_def* %arrayidx283 to %struct.rtx_def**
  %120 = load %struct.rtx_def*, %struct.rtx_def** %rtx284, align 8
  %121 = bitcast %struct.rtx_def* %120 to i32*
  %bf.load285 = load i32, i32* %121, align 8
  %bf.clear286 = and i32 %bf.load285, 65535
  %cmp287 = icmp eq i32 %bf.clear286, 63
  br i1 %cmp287, label %land.lhs.true.289, label %if.then.303

land.lhs.true.289:                                ; preds = %land.lhs.true.281
  %122 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld290 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i32 0, i32 1
  %arrayidx291 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld290, i32 0, i64 0
  %rtx292 = bitcast %union.rtunion_def* %arrayidx291 to %struct.rtx_def**
  %123 = load %struct.rtx_def*, %struct.rtx_def** %rtx292, align 8
  %fld293 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %123, i32 0, i32 1
  %arrayidx294 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld293, i32 0, i64 0
  %rtx295 = bitcast %union.rtunion_def* %arrayidx294 to %struct.rtx_def**
  %124 = load %struct.rtx_def*, %struct.rtx_def** %rtx295, align 8
  %125 = bitcast %struct.rtx_def* %124 to i32*
  %bf.load296 = load i32, i32* %125, align 8
  %bf.clear297 = and i32 %bf.load296, 65535
  %idxprom298 = sext i32 %bf.clear297 to i64
  %arrayidx299 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom298
  %126 = load i8, i8* %arrayidx299, align 1
  %conv300 = sext i8 %126 to i32
  %cmp301 = icmp eq i32 %conv300, 111
  br i1 %cmp301, label %if.end.416, label %if.then.303

if.then.303:                                      ; preds = %land.lhs.true.289, %land.lhs.true.281, %land.lhs.true.250, %land.lhs.true.242, %land.lhs.true.217, %land.lhs.true.209
  %127 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call304 = call %struct.rtx_def* @if_then_else_cond(%struct.rtx_def* %127, %struct.rtx_def** %true_rtx, %struct.rtx_def** %false_rtx)
  store %struct.rtx_def* %call304, %struct.rtx_def** %cond, align 8
  %128 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %cmp305 = icmp ne %struct.rtx_def* %128, null
  br i1 %cmp305, label %land.lhs.true.307, label %if.end.415

land.lhs.true.307:                                ; preds = %if.then.303
  %129 = load i32, i32* %code, align 4
  %idxprom308 = sext i32 %129 to i64
  %arrayidx309 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom308
  %130 = load i8, i8* %arrayidx309, align 1
  %conv310 = sext i8 %130 to i32
  %cmp311 = icmp eq i32 %conv310, 60
  br i1 %cmp311, label %land.lhs.true.313, label %if.then.329

land.lhs.true.313:                                ; preds = %land.lhs.true.307
  %131 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %132 = bitcast %struct.rtx_def* %131 to i32*
  %bf.load314 = load i32, i32* %132, align 8
  %bf.clear315 = and i32 %bf.load314, 65535
  %idxprom316 = sext i32 %bf.clear315 to i64
  %arrayidx317 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom316
  %133 = load i8, i8* %arrayidx317, align 1
  %conv318 = sext i8 %133 to i32
  %cmp319 = icmp eq i32 %conv318, 60
  br i1 %cmp319, label %if.end.415, label %lor.lhs.false.321

lor.lhs.false.321:                                ; preds = %land.lhs.true.313
  %134 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %135 = bitcast %struct.rtx_def* %134 to i32*
  %bf.load322 = load i32, i32* %135, align 8
  %bf.clear323 = and i32 %bf.load322, 65535
  %idxprom324 = sext i32 %bf.clear323 to i64
  %arrayidx325 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom324
  %136 = load i8, i8* %arrayidx325, align 1
  %conv326 = sext i8 %136 to i32
  %cmp327 = icmp eq i32 %conv326, 60
  br i1 %cmp327, label %if.end.415, label %if.then.329

if.then.329:                                      ; preds = %lor.lhs.false.321, %land.lhs.true.307
  %137 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %137, %struct.rtx_def** %cop1, align 8
  %call330 = call i32 @simplify_comparison(i32 102, %struct.rtx_def** %cond, %struct.rtx_def** %cop1)
  store i32 %call330, i32* %cond_code, align 4
  %138 = load i32, i32* %cond_code, align 4
  %cmp331 = icmp eq i32 %138, 102
  br i1 %cmp331, label %land.lhs.true.333, label %if.end.342

land.lhs.true.333:                                ; preds = %if.then.329
  %139 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %140 = bitcast %struct.rtx_def* %139 to i32*
  %bf.load334 = load i32, i32* %140, align 8
  %bf.clear335 = and i32 %bf.load334, 65535
  %idxprom336 = sext i32 %bf.clear335 to i64
  %arrayidx337 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom336
  %141 = load i8, i8* %arrayidx337, align 1
  %conv338 = sext i8 %141 to i32
  %cmp339 = icmp eq i32 %conv338, 60
  br i1 %cmp339, label %if.then.341, label %if.end.342

if.then.341:                                      ; preds = %land.lhs.true.333
  %142 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %142, %struct.rtx_def** %retval
  br label %return

if.end.342:                                       ; preds = %land.lhs.true.333, %if.then.329
  %143 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %144 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %145 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %call343 = call %struct.rtx_def* @subst(%struct.rtx_def* %143, %struct.rtx_def* %144, %struct.rtx_def* %145, i32 0, i32 0)
  store %struct.rtx_def* %call343, %struct.rtx_def** %true_rtx, align 8
  %146 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %147 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %148 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %call344 = call %struct.rtx_def* @subst(%struct.rtx_def* %146, %struct.rtx_def* %147, %struct.rtx_def* %148, i32 0, i32 0)
  store %struct.rtx_def* %call344, %struct.rtx_def** %false_rtx, align 8
  %149 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %call345 = call i32 @general_operand(%struct.rtx_def* %149, i32 0)
  %tobool346 = icmp ne i32 %call345, 0
  br i1 %tobool346, label %land.lhs.true.347, label %if.end.414

land.lhs.true.347:                                ; preds = %if.end.342
  %150 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %call348 = call i32 @general_operand(%struct.rtx_def* %150, i32 0)
  %tobool349 = icmp ne i32 %call348, 0
  br i1 %tobool349, label %if.then.350, label %if.end.414

if.then.350:                                      ; preds = %land.lhs.true.347
  %151 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %152 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8
  %cmp351 = icmp eq %struct.rtx_def* %151, %152
  br i1 %cmp351, label %land.lhs.true.353, label %if.else

land.lhs.true.353:                                ; preds = %if.then.350
  %153 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %154 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp354 = icmp eq %struct.rtx_def* %153, %154
  br i1 %cmp354, label %if.then.356, label %if.else

if.then.356:                                      ; preds = %land.lhs.true.353
  %155 = load i32, i32* %cond_code, align 4
  %156 = load i32, i32* %mode, align 4
  %157 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %158 = load %struct.rtx_def*, %struct.rtx_def** %cop1, align 8
  %call357 = call %struct.rtx_def* @gen_binary(i32 %155, i32 %156, %struct.rtx_def* %157, %struct.rtx_def* %158)
  store %struct.rtx_def* %call357, %struct.rtx_def** %x.addr, align 8
  br label %if.end.411

if.else:                                          ; preds = %land.lhs.true.353, %if.then.350
  %159 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %160 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp358 = icmp eq %struct.rtx_def* %159, %160
  br i1 %cmp358, label %land.lhs.true.360, label %if.else.370

land.lhs.true.360:                                ; preds = %if.else
  %161 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %162 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8
  %cmp361 = icmp eq %struct.rtx_def* %161, %162
  br i1 %cmp361, label %land.lhs.true.363, label %if.else.370

land.lhs.true.363:                                ; preds = %land.lhs.true.360
  %163 = load i32, i32* %cond_code, align 4
  %call364 = call i32 @reverse_condition(i32 %163)
  %cmp365 = icmp ne i32 %call364, 0
  br i1 %cmp365, label %if.then.367, label %if.else.370

if.then.367:                                      ; preds = %land.lhs.true.363
  %164 = load i32, i32* %cond_code, align 4
  %call368 = call i32 @reverse_condition(i32 %164)
  %165 = load i32, i32* %mode, align 4
  %166 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %167 = load %struct.rtx_def*, %struct.rtx_def** %cop1, align 8
  %call369 = call %struct.rtx_def* @gen_binary(i32 %call368, i32 %165, %struct.rtx_def* %166, %struct.rtx_def* %167)
  store %struct.rtx_def* %call369, %struct.rtx_def** %x.addr, align 8
  br label %if.end.410

if.else.370:                                      ; preds = %land.lhs.true.363, %land.lhs.true.360, %if.else
  %168 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %169 = bitcast %struct.rtx_def* %168 to i32*
  %bf.load371 = load i32, i32* %169, align 8
  %bf.clear372 = and i32 %bf.load371, 65535
  %cmp373 = icmp eq i32 %bf.clear372, 54
  br i1 %cmp373, label %land.lhs.true.375, label %if.else.387

land.lhs.true.375:                                ; preds = %if.else.370
  %170 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %fld376 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %170, i32 0, i32 1
  %arrayidx377 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld376, i32 0, i64 0
  %rtwint378 = bitcast %union.rtunion_def* %arrayidx377 to i64*
  %171 = load i64, i64* %rtwint378, align 8
  %cmp379 = icmp eq i64 %171, -1
  br i1 %cmp379, label %land.lhs.true.381, label %if.else.387

land.lhs.true.381:                                ; preds = %land.lhs.true.375
  %172 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %173 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp382 = icmp eq %struct.rtx_def* %172, %173
  br i1 %cmp382, label %if.then.384, label %if.else.387

if.then.384:                                      ; preds = %land.lhs.true.381
  %174 = load i32, i32* %mode, align 4
  %175 = load i32, i32* %cond_code, align 4
  %176 = load i32, i32* %mode, align 4
  %177 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %178 = load %struct.rtx_def*, %struct.rtx_def** %cop1, align 8
  %call385 = call %struct.rtx_def* @gen_binary(i32 %175, i32 %176, %struct.rtx_def* %177, %struct.rtx_def* %178)
  %179 = load i32, i32* %mode, align 4
  %call386 = call %struct.rtx_def* @simplify_gen_unary(i32 77, i32 %174, %struct.rtx_def* %call385, i32 %179)
  store %struct.rtx_def* %call386, %struct.rtx_def** %x.addr, align 8
  br label %if.end.409

if.else.387:                                      ; preds = %land.lhs.true.381, %land.lhs.true.375, %if.else.370
  %180 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %181 = bitcast %struct.rtx_def* %180 to i32*
  %bf.load388 = load i32, i32* %181, align 8
  %bf.clear389 = and i32 %bf.load388, 65535
  %cmp390 = icmp eq i32 %bf.clear389, 54
  br i1 %cmp390, label %land.lhs.true.392, label %if.else.405

land.lhs.true.392:                                ; preds = %if.else.387
  %182 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %fld393 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %182, i32 0, i32 1
  %arrayidx394 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld393, i32 0, i64 0
  %rtwint395 = bitcast %union.rtunion_def* %arrayidx394 to i64*
  %183 = load i64, i64* %rtwint395, align 8
  %cmp396 = icmp eq i64 %183, -1
  br i1 %cmp396, label %land.lhs.true.398, label %if.else.405

land.lhs.true.398:                                ; preds = %land.lhs.true.392
  %184 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %185 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp399 = icmp eq %struct.rtx_def* %184, %185
  br i1 %cmp399, label %if.then.401, label %if.else.405

if.then.401:                                      ; preds = %land.lhs.true.398
  %186 = load i32, i32* %mode, align 4
  %187 = load i32, i32* %cond_code, align 4
  %call402 = call i32 @reverse_condition(i32 %187)
  %188 = load i32, i32* %mode, align 4
  %189 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %190 = load %struct.rtx_def*, %struct.rtx_def** %cop1, align 8
  %call403 = call %struct.rtx_def* @gen_binary(i32 %call402, i32 %188, %struct.rtx_def* %189, %struct.rtx_def* %190)
  %191 = load i32, i32* %mode, align 4
  %call404 = call %struct.rtx_def* @simplify_gen_unary(i32 77, i32 %186, %struct.rtx_def* %call403, i32 %191)
  store %struct.rtx_def* %call404, %struct.rtx_def** %x.addr, align 8
  br label %if.end.408

if.else.405:                                      ; preds = %land.lhs.true.398, %land.lhs.true.392, %if.else.387
  %192 = load i32, i32* %mode, align 4
  %193 = load i32, i32* %cond_code, align 4
  %194 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %195 = load %struct.rtx_def*, %struct.rtx_def** %cop1, align 8
  %call406 = call %struct.rtx_def* @gen_binary(i32 %193, i32 0, %struct.rtx_def* %194, %struct.rtx_def* %195)
  %196 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %197 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %call407 = call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 %192, %struct.rtx_def* %call406, %struct.rtx_def* %196, %struct.rtx_def* %197)
  store %struct.rtx_def* %call407, %struct.rtx_def** %retval
  br label %return

if.end.408:                                       ; preds = %if.then.401
  br label %if.end.409

if.end.409:                                       ; preds = %if.end.408, %if.then.384
  br label %if.end.410

if.end.410:                                       ; preds = %if.end.409, %if.then.367
  br label %if.end.411

if.end.411:                                       ; preds = %if.end.410, %if.then.356
  %198 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %199 = bitcast %struct.rtx_def* %198 to i32*
  %bf.load412 = load i32, i32* %199, align 8
  %bf.clear413 = and i32 %bf.load412, 65535
  store i32 %bf.clear413, i32* %code, align 4
  store i32 0, i32* %op0_mode.addr, align 4
  br label %if.end.414

if.end.414:                                       ; preds = %if.end.411, %land.lhs.true.347, %if.end.342
  br label %if.end.415

if.end.415:                                       ; preds = %if.end.414, %lor.lhs.false.321, %land.lhs.true.313, %if.then.303
  br label %if.end.416

if.end.416:                                       ; preds = %if.end.415, %land.lhs.true.289, %land.lhs.true.270, %lor.lhs.false.264
  store %struct.rtx_def* null, %struct.rtx_def** %temp, align 8
  %200 = load i32, i32* %code, align 4
  %idxprom417 = sext i32 %200 to i64
  %arrayidx418 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom417
  %201 = load i8, i8* %arrayidx418, align 1
  %conv419 = sext i8 %201 to i32
  switch i32 %conv419, label %sw.epilog [
    i32 49, label %sw.bb
    i32 60, label %sw.bb.424
    i32 99, label %sw.bb.452
    i32 50, label %sw.bb.452
    i32 98, label %sw.bb.460
    i32 51, label %sw.bb.460
  ]

sw.bb:                                            ; preds = %if.end.416
  %202 = load i32, i32* %code, align 4
  %203 = load i32, i32* %mode, align 4
  %204 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld420 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %204, i32 0, i32 1
  %arrayidx421 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld420, i32 0, i64 0
  %rtx422 = bitcast %union.rtunion_def* %arrayidx421 to %struct.rtx_def**
  %205 = load %struct.rtx_def*, %struct.rtx_def** %rtx422, align 8
  %206 = load i32, i32* %op0_mode.addr, align 4
  %call423 = call %struct.rtx_def* @simplify_unary_operation(i32 %202, i32 %203, %struct.rtx_def* %205, i32 %206)
  store %struct.rtx_def* %call423, %struct.rtx_def** %temp, align 8
  br label %sw.epilog

sw.bb.424:                                        ; preds = %if.end.416
  %207 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld425 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %207, i32 0, i32 1
  %arrayidx426 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld425, i32 0, i64 0
  %rtx427 = bitcast %union.rtunion_def* %arrayidx426 to %struct.rtx_def**
  %208 = load %struct.rtx_def*, %struct.rtx_def** %rtx427, align 8
  %209 = bitcast %struct.rtx_def* %208 to i32*
  %bf.load428 = load i32, i32* %209, align 8
  %bf.lshr429 = lshr i32 %bf.load428, 16
  %bf.clear430 = and i32 %bf.lshr429, 255
  store i32 %bf.clear430, i32* %cmp_mode, align 4
  %210 = load i32, i32* %cmp_mode, align 4
  %cmp431 = icmp eq i32 %210, 0
  br i1 %cmp431, label %if.then.433, label %if.end.444

if.then.433:                                      ; preds = %sw.bb.424
  %211 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld434 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %211, i32 0, i32 1
  %arrayidx435 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld434, i32 0, i64 1
  %rtx436 = bitcast %union.rtunion_def* %arrayidx435 to %struct.rtx_def**
  %212 = load %struct.rtx_def*, %struct.rtx_def** %rtx436, align 8
  %213 = bitcast %struct.rtx_def* %212 to i32*
  %bf.load437 = load i32, i32* %213, align 8
  %bf.lshr438 = lshr i32 %bf.load437, 16
  %bf.clear439 = and i32 %bf.lshr438, 255
  store i32 %bf.clear439, i32* %cmp_mode, align 4
  %214 = load i32, i32* %cmp_mode, align 4
  %cmp440 = icmp eq i32 %214, 0
  br i1 %cmp440, label %if.then.442, label %if.end.443

if.then.442:                                      ; preds = %if.then.433
  %215 = load i32, i32* %op0_mode.addr, align 4
  store i32 %215, i32* %cmp_mode, align 4
  br label %if.end.443

if.end.443:                                       ; preds = %if.then.442, %if.then.433
  br label %if.end.444

if.end.444:                                       ; preds = %if.end.443, %sw.bb.424
  %216 = load i32, i32* %code, align 4
  %217 = load i32, i32* %cmp_mode, align 4
  %218 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld445 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %218, i32 0, i32 1
  %arrayidx446 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld445, i32 0, i64 0
  %rtx447 = bitcast %union.rtunion_def* %arrayidx446 to %struct.rtx_def**
  %219 = load %struct.rtx_def*, %struct.rtx_def** %rtx447, align 8
  %220 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld448 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %220, i32 0, i32 1
  %arrayidx449 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld448, i32 0, i64 1
  %rtx450 = bitcast %union.rtunion_def* %arrayidx449 to %struct.rtx_def**
  %221 = load %struct.rtx_def*, %struct.rtx_def** %rtx450, align 8
  %call451 = call %struct.rtx_def* @simplify_relational_operation(i32 %216, i32 %217, %struct.rtx_def* %219, %struct.rtx_def* %221)
  store %struct.rtx_def* %call451, %struct.rtx_def** %temp, align 8
  br label %sw.epilog

sw.bb.452:                                        ; preds = %if.end.416, %if.end.416
  %222 = load i32, i32* %code, align 4
  %223 = load i32, i32* %mode, align 4
  %224 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld453 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %224, i32 0, i32 1
  %arrayidx454 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld453, i32 0, i64 0
  %rtx455 = bitcast %union.rtunion_def* %arrayidx454 to %struct.rtx_def**
  %225 = load %struct.rtx_def*, %struct.rtx_def** %rtx455, align 8
  %226 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld456 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %226, i32 0, i32 1
  %arrayidx457 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld456, i32 0, i64 1
  %rtx458 = bitcast %union.rtunion_def* %arrayidx457 to %struct.rtx_def**
  %227 = load %struct.rtx_def*, %struct.rtx_def** %rtx458, align 8
  %call459 = call %struct.rtx_def* @simplify_binary_operation(i32 %222, i32 %223, %struct.rtx_def* %225, %struct.rtx_def* %227)
  store %struct.rtx_def* %call459, %struct.rtx_def** %temp, align 8
  br label %sw.epilog

sw.bb.460:                                        ; preds = %if.end.416, %if.end.416
  %228 = load i32, i32* %code, align 4
  %229 = load i32, i32* %mode, align 4
  %230 = load i32, i32* %op0_mode.addr, align 4
  %231 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld461 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %231, i32 0, i32 1
  %arrayidx462 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld461, i32 0, i64 0
  %rtx463 = bitcast %union.rtunion_def* %arrayidx462 to %struct.rtx_def**
  %232 = load %struct.rtx_def*, %struct.rtx_def** %rtx463, align 8
  %233 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld464 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %233, i32 0, i32 1
  %arrayidx465 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld464, i32 0, i64 1
  %rtx466 = bitcast %union.rtunion_def* %arrayidx465 to %struct.rtx_def**
  %234 = load %struct.rtx_def*, %struct.rtx_def** %rtx466, align 8
  %235 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld467 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %235, i32 0, i32 1
  %arrayidx468 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld467, i32 0, i64 2
  %rtx469 = bitcast %union.rtunion_def* %arrayidx468 to %struct.rtx_def**
  %236 = load %struct.rtx_def*, %struct.rtx_def** %rtx469, align 8
  %call470 = call %struct.rtx_def* @simplify_ternary_operation(i32 %228, i32 %229, i32 %230, %struct.rtx_def* %232, %struct.rtx_def* %234, %struct.rtx_def* %236)
  store %struct.rtx_def* %call470, %struct.rtx_def** %temp, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.416, %sw.bb.460, %sw.bb.452, %if.end.444, %sw.bb
  %237 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %tobool471 = icmp ne %struct.rtx_def* %237, null
  br i1 %tobool471, label %if.then.472, label %if.end.478

if.then.472:                                      ; preds = %sw.epilog
  %238 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  store %struct.rtx_def* %238, %struct.rtx_def** %x.addr, align 8
  %239 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %240 = bitcast %struct.rtx_def* %239 to i32*
  %bf.load473 = load i32, i32* %240, align 8
  %bf.clear474 = and i32 %bf.load473, 65535
  store i32 %bf.clear474, i32* %code, align 4
  store i32 0, i32* %op0_mode.addr, align 4
  %241 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %242 = bitcast %struct.rtx_def* %241 to i32*
  %bf.load475 = load i32, i32* %242, align 8
  %bf.lshr476 = lshr i32 %bf.load475, 16
  %bf.clear477 = and i32 %bf.lshr476, 255
  store i32 %bf.clear477, i32* %mode, align 4
  br label %if.end.478

if.end.478:                                       ; preds = %if.then.472, %sw.epilog
  %243 = load i32, i32* %code, align 4
  %cmp479 = icmp eq i32 %243, 75
  br i1 %cmp479, label %if.then.493, label %lor.lhs.false.481

lor.lhs.false.481:                                ; preds = %if.end.478
  %244 = load i32, i32* %code, align 4
  %cmp482 = icmp eq i32 %244, 76
  br i1 %cmp482, label %if.then.493, label %lor.lhs.false.484

lor.lhs.false.484:                                ; preds = %lor.lhs.false.481
  %245 = load i32, i32* %code, align 4
  %cmp485 = icmp eq i32 %245, 83
  br i1 %cmp485, label %if.then.493, label %lor.lhs.false.487

lor.lhs.false.487:                                ; preds = %lor.lhs.false.484
  %246 = load i32, i32* %code, align 4
  %cmp488 = icmp eq i32 %246, 84
  br i1 %cmp488, label %if.then.493, label %lor.lhs.false.490

lor.lhs.false.490:                                ; preds = %lor.lhs.false.487
  %247 = load i32, i32* %code, align 4
  %cmp491 = icmp eq i32 %247, 85
  br i1 %cmp491, label %if.then.493, label %if.end.497

if.then.493:                                      ; preds = %lor.lhs.false.490, %lor.lhs.false.487, %lor.lhs.false.484, %lor.lhs.false.481, %if.end.478
  %248 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call494 = call %struct.rtx_def* @apply_distributive_law(%struct.rtx_def* %248)
  store %struct.rtx_def* %call494, %struct.rtx_def** %x.addr, align 8
  %249 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %250 = bitcast %struct.rtx_def* %249 to i32*
  %bf.load495 = load i32, i32* %250, align 8
  %bf.clear496 = and i32 %bf.load495, 65535
  store i32 %bf.clear496, i32* %code, align 4
  store i32 0, i32* %op0_mode.addr, align 4
  br label %if.end.497

if.end.497:                                       ; preds = %if.then.493, %lor.lhs.false.490
  %251 = load i32, i32* %code, align 4
  %cmp498 = icmp eq i32 %251, 75
  br i1 %cmp498, label %land.lhs.true.530, label %lor.lhs.false.500

lor.lhs.false.500:                                ; preds = %if.end.497
  %252 = load i32, i32* %code, align 4
  %cmp501 = icmp eq i32 %252, 76
  br i1 %cmp501, label %land.lhs.true.530, label %lor.lhs.false.503

lor.lhs.false.503:                                ; preds = %lor.lhs.false.500
  %253 = load i32, i32* %code, align 4
  %cmp504 = icmp eq i32 %253, 78
  br i1 %cmp504, label %land.lhs.true.530, label %lor.lhs.false.506

lor.lhs.false.506:                                ; preds = %lor.lhs.false.503
  %254 = load i32, i32* %code, align 4
  %cmp507 = icmp eq i32 %254, 79
  br i1 %cmp507, label %land.lhs.true.530, label %lor.lhs.false.509

lor.lhs.false.509:                                ; preds = %lor.lhs.false.506
  %255 = load i32, i32* %code, align 4
  %cmp510 = icmp eq i32 %255, 83
  br i1 %cmp510, label %land.lhs.true.530, label %lor.lhs.false.512

lor.lhs.false.512:                                ; preds = %lor.lhs.false.509
  %256 = load i32, i32* %code, align 4
  %cmp513 = icmp eq i32 %256, 84
  br i1 %cmp513, label %land.lhs.true.530, label %lor.lhs.false.515

lor.lhs.false.515:                                ; preds = %lor.lhs.false.512
  %257 = load i32, i32* %code, align 4
  %cmp516 = icmp eq i32 %257, 85
  br i1 %cmp516, label %land.lhs.true.530, label %lor.lhs.false.518

lor.lhs.false.518:                                ; preds = %lor.lhs.false.515
  %258 = load i32, i32* %code, align 4
  %cmp519 = icmp eq i32 %258, 93
  br i1 %cmp519, label %land.lhs.true.530, label %lor.lhs.false.521

lor.lhs.false.521:                                ; preds = %lor.lhs.false.518
  %259 = load i32, i32* %code, align 4
  %cmp522 = icmp eq i32 %259, 92
  br i1 %cmp522, label %land.lhs.true.530, label %lor.lhs.false.524

lor.lhs.false.524:                                ; preds = %lor.lhs.false.521
  %260 = load i32, i32* %code, align 4
  %cmp525 = icmp eq i32 %260, 95
  br i1 %cmp525, label %land.lhs.true.530, label %lor.lhs.false.527

lor.lhs.false.527:                                ; preds = %lor.lhs.false.524
  %261 = load i32, i32* %code, align 4
  %cmp528 = icmp eq i32 %261, 94
  br i1 %cmp528, label %land.lhs.true.530, label %if.end.682

land.lhs.true.530:                                ; preds = %lor.lhs.false.527, %lor.lhs.false.524, %lor.lhs.false.521, %lor.lhs.false.518, %lor.lhs.false.515, %lor.lhs.false.512, %lor.lhs.false.509, %lor.lhs.false.506, %lor.lhs.false.503, %lor.lhs.false.500, %if.end.497
  %262 = load i32, i32* %mode, align 4
  %idxprom531 = sext i32 %262 to i64
  %arrayidx532 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom531
  %263 = load i32, i32* %arrayidx532, align 4
  %cmp533 = icmp eq i32 %263, 1
  br i1 %cmp533, label %land.lhs.true.550, label %lor.lhs.false.535

lor.lhs.false.535:                                ; preds = %land.lhs.true.530
  %264 = load i32, i32* %mode, align 4
  %idxprom536 = sext i32 %264 to i64
  %arrayidx537 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom536
  %265 = load i32, i32* %arrayidx537, align 4
  %cmp538 = icmp eq i32 %265, 3
  br i1 %cmp538, label %land.lhs.true.550, label %lor.lhs.false.540

lor.lhs.false.540:                                ; preds = %lor.lhs.false.535
  %266 = load i32, i32* %mode, align 4
  %idxprom541 = sext i32 %266 to i64
  %arrayidx542 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom541
  %267 = load i32, i32* %arrayidx542, align 4
  %cmp543 = icmp eq i32 %267, 5
  br i1 %cmp543, label %land.lhs.true.550, label %lor.lhs.false.545

lor.lhs.false.545:                                ; preds = %lor.lhs.false.540
  %268 = load i32, i32* %mode, align 4
  %idxprom546 = sext i32 %268 to i64
  %arrayidx547 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom546
  %269 = load i32, i32* %arrayidx547, align 4
  %cmp548 = icmp eq i32 %269, 7
  br i1 %cmp548, label %land.lhs.true.550, label %lor.lhs.false.553

land.lhs.true.550:                                ; preds = %lor.lhs.false.545, %lor.lhs.false.540, %lor.lhs.false.535, %land.lhs.true.530
  %270 = load i32, i32* %code, align 4
  %cmp551 = icmp ne i32 %270, 79
  br i1 %cmp551, label %if.then.570, label %lor.lhs.false.553

lor.lhs.false.553:                                ; preds = %land.lhs.true.550, %lor.lhs.false.545
  %271 = load i32, i32* @flag_unsafe_math_optimizations, align 4
  %tobool554 = icmp ne i32 %271, 0
  br i1 %tobool554, label %land.lhs.true.555, label %if.end.682

land.lhs.true.555:                                ; preds = %lor.lhs.false.553
  %272 = load i32, i32* %mode, align 4
  %idxprom556 = sext i32 %272 to i64
  %arrayidx557 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom556
  %273 = load i32, i32* %arrayidx557, align 4
  %cmp558 = icmp eq i32 %273, 2
  br i1 %cmp558, label %if.then.570, label %lor.lhs.false.560

lor.lhs.false.560:                                ; preds = %land.lhs.true.555
  %274 = load i32, i32* %mode, align 4
  %idxprom561 = sext i32 %274 to i64
  %arrayidx562 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom561
  %275 = load i32, i32* %arrayidx562, align 4
  %cmp563 = icmp eq i32 %275, 6
  br i1 %cmp563, label %if.then.570, label %lor.lhs.false.565

lor.lhs.false.565:                                ; preds = %lor.lhs.false.560
  %276 = load i32, i32* %mode, align 4
  %idxprom566 = sext i32 %276 to i64
  %arrayidx567 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom566
  %277 = load i32, i32* %arrayidx567, align 4
  %cmp568 = icmp eq i32 %277, 8
  br i1 %cmp568, label %if.then.570, label %if.end.682

if.then.570:                                      ; preds = %lor.lhs.false.565, %lor.lhs.false.560, %land.lhs.true.555, %land.lhs.true.550
  %278 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld571 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %278, i32 0, i32 1
  %arrayidx572 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld571, i32 0, i64 0
  %rtx573 = bitcast %union.rtunion_def* %arrayidx572 to %struct.rtx_def**
  %279 = load %struct.rtx_def*, %struct.rtx_def** %rtx573, align 8
  %280 = bitcast %struct.rtx_def* %279 to i32*
  %bf.load574 = load i32, i32* %280, align 8
  %bf.clear575 = and i32 %bf.load574, 65535
  %281 = load i32, i32* %code, align 4
  %cmp576 = icmp eq i32 %bf.clear575, %281
  br i1 %cmp576, label %if.then.578, label %if.end.681

if.then.578:                                      ; preds = %if.then.570
  %282 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld579 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %282, i32 0, i32 1
  %arrayidx580 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld579, i32 0, i64 0
  %rtx581 = bitcast %union.rtunion_def* %arrayidx580 to %struct.rtx_def**
  %283 = load %struct.rtx_def*, %struct.rtx_def** %rtx581, align 8
  %fld582 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %283, i32 0, i32 1
  %arrayidx583 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld582, i32 0, i64 0
  %rtx584 = bitcast %union.rtunion_def* %arrayidx583 to %struct.rtx_def**
  %284 = load %struct.rtx_def*, %struct.rtx_def** %rtx584, align 8
  store %struct.rtx_def* %284, %struct.rtx_def** %other, align 8
  %285 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld585 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %285, i32 0, i32 1
  %arrayidx586 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld585, i32 0, i64 0
  %rtx587 = bitcast %union.rtunion_def* %arrayidx586 to %struct.rtx_def**
  %286 = load %struct.rtx_def*, %struct.rtx_def** %rtx587, align 8
  %fld588 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %286, i32 0, i32 1
  %arrayidx589 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld588, i32 0, i64 1
  %rtx590 = bitcast %union.rtunion_def* %arrayidx589 to %struct.rtx_def**
  %287 = load %struct.rtx_def*, %struct.rtx_def** %rtx590, align 8
  store %struct.rtx_def* %287, %struct.rtx_def** %inner_op0, align 8
  %288 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld591 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %288, i32 0, i32 1
  %arrayidx592 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld591, i32 0, i64 1
  %rtx593 = bitcast %union.rtunion_def* %arrayidx592 to %struct.rtx_def**
  %289 = load %struct.rtx_def*, %struct.rtx_def** %rtx593, align 8
  store %struct.rtx_def* %289, %struct.rtx_def** %inner_op1, align 8
  %290 = load %struct.rtx_def*, %struct.rtx_def** %inner_op0, align 8
  %291 = bitcast %struct.rtx_def* %290 to i32*
  %bf.load594 = load i32, i32* %291, align 8
  %bf.clear595 = and i32 %bf.load594, 65535
  %cmp596 = icmp eq i32 %bf.clear595, 67
  br i1 %cmp596, label %land.lhs.true.633, label %lor.lhs.false.598

lor.lhs.false.598:                                ; preds = %if.then.578
  %292 = load %struct.rtx_def*, %struct.rtx_def** %inner_op0, align 8
  %293 = bitcast %struct.rtx_def* %292 to i32*
  %bf.load599 = load i32, i32* %293, align 8
  %bf.clear600 = and i32 %bf.load599, 65535
  %cmp601 = icmp eq i32 %bf.clear600, 68
  br i1 %cmp601, label %land.lhs.true.633, label %lor.lhs.false.603

lor.lhs.false.603:                                ; preds = %lor.lhs.false.598
  %294 = load %struct.rtx_def*, %struct.rtx_def** %inner_op0, align 8
  %295 = bitcast %struct.rtx_def* %294 to i32*
  %bf.load604 = load i32, i32* %295, align 8
  %bf.clear605 = and i32 %bf.load604, 65535
  %cmp606 = icmp eq i32 %bf.clear605, 54
  br i1 %cmp606, label %land.lhs.true.633, label %lor.lhs.false.608

lor.lhs.false.608:                                ; preds = %lor.lhs.false.603
  %296 = load %struct.rtx_def*, %struct.rtx_def** %inner_op0, align 8
  %297 = bitcast %struct.rtx_def* %296 to i32*
  %bf.load609 = load i32, i32* %297, align 8
  %bf.clear610 = and i32 %bf.load609, 65535
  %cmp611 = icmp eq i32 %bf.clear610, 55
  br i1 %cmp611, label %land.lhs.true.633, label %lor.lhs.false.613

lor.lhs.false.613:                                ; preds = %lor.lhs.false.608
  %298 = load %struct.rtx_def*, %struct.rtx_def** %inner_op0, align 8
  %299 = bitcast %struct.rtx_def* %298 to i32*
  %bf.load614 = load i32, i32* %299, align 8
  %bf.clear615 = and i32 %bf.load614, 65535
  %cmp616 = icmp eq i32 %bf.clear615, 58
  br i1 %cmp616, label %land.lhs.true.633, label %lor.lhs.false.618

lor.lhs.false.618:                                ; preds = %lor.lhs.false.613
  %300 = load %struct.rtx_def*, %struct.rtx_def** %inner_op0, align 8
  %301 = bitcast %struct.rtx_def* %300 to i32*
  %bf.load619 = load i32, i32* %301, align 8
  %bf.clear620 = and i32 %bf.load619, 65535
  %cmp621 = icmp eq i32 %bf.clear620, 134
  br i1 %cmp621, label %land.lhs.true.633, label %lor.lhs.false.623

lor.lhs.false.623:                                ; preds = %lor.lhs.false.618
  %302 = load %struct.rtx_def*, %struct.rtx_def** %inner_op0, align 8
  %303 = bitcast %struct.rtx_def* %302 to i32*
  %bf.load624 = load i32, i32* %303, align 8
  %bf.clear625 = and i32 %bf.load624, 65535
  %cmp626 = icmp eq i32 %bf.clear625, 56
  br i1 %cmp626, label %land.lhs.true.633, label %lor.lhs.false.628

lor.lhs.false.628:                                ; preds = %lor.lhs.false.623
  %304 = load %struct.rtx_def*, %struct.rtx_def** %inner_op0, align 8
  %305 = bitcast %struct.rtx_def* %304 to i32*
  %bf.load629 = load i32, i32* %305, align 8
  %bf.clear630 = and i32 %bf.load629, 65535
  %cmp631 = icmp eq i32 %bf.clear630, 140
  br i1 %cmp631, label %land.lhs.true.633, label %if.end.640

land.lhs.true.633:                                ; preds = %lor.lhs.false.628, %lor.lhs.false.623, %lor.lhs.false.618, %lor.lhs.false.613, %lor.lhs.false.608, %lor.lhs.false.603, %lor.lhs.false.598, %if.then.578
  %306 = load i32, i32* %code, align 4
  %idxprom634 = sext i32 %306 to i64
  %arrayidx635 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom634
  %307 = load i8, i8* %arrayidx635, align 1
  %conv636 = sext i8 %307 to i32
  %cmp637 = icmp eq i32 %conv636, 99
  br i1 %cmp637, label %if.then.639, label %if.end.640

if.then.639:                                      ; preds = %land.lhs.true.633
  %308 = load %struct.rtx_def*, %struct.rtx_def** %inner_op0, align 8
  store %struct.rtx_def* %308, %struct.rtx_def** %tem, align 8
  %309 = load %struct.rtx_def*, %struct.rtx_def** %inner_op1, align 8
  store %struct.rtx_def* %309, %struct.rtx_def** %inner_op0, align 8
  %310 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %310, %struct.rtx_def** %inner_op1, align 8
  br label %if.end.640

if.end.640:                                       ; preds = %if.then.639, %land.lhs.true.633, %lor.lhs.false.628
  %311 = load i32, i32* %code, align 4
  %cmp641 = icmp eq i32 %311, 76
  br i1 %cmp641, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.640
  br label %cond.end.648

cond.false:                                       ; preds = %if.end.640
  %312 = load i32, i32* %code, align 4
  %cmp643 = icmp eq i32 %312, 79
  br i1 %cmp643, label %cond.true.645, label %cond.false.646

cond.true.645:                                    ; preds = %cond.false
  br label %cond.end

cond.false.646:                                   ; preds = %cond.false
  %313 = load i32, i32* %code, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false.646, %cond.true.645
  %cond647 = phi i32 [ 78, %cond.true.645 ], [ %313, %cond.false.646 ]
  br label %cond.end.648

cond.end.648:                                     ; preds = %cond.end, %cond.true
  %cond649 = phi i32 [ 75, %cond.true ], [ %cond647, %cond.end ]
  %314 = load i32, i32* %mode, align 4
  %315 = load %struct.rtx_def*, %struct.rtx_def** %inner_op0, align 8
  %316 = load %struct.rtx_def*, %struct.rtx_def** %inner_op1, align 8
  %call650 = call %struct.rtx_def* @simplify_binary_operation(i32 %cond649, i32 %314, %struct.rtx_def* %315, %struct.rtx_def* %316)
  store %struct.rtx_def* %call650, %struct.rtx_def** %inner, align 8
  %317 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %cmp651 = icmp eq %struct.rtx_def* %317, null
  br i1 %cmp651, label %land.lhs.true.653, label %if.end.676

land.lhs.true.653:                                ; preds = %cond.end.648
  %318 = load i32, i32* %code, align 4
  %idxprom654 = sext i32 %318 to i64
  %arrayidx655 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom654
  %319 = load i8, i8* %arrayidx655, align 1
  %conv656 = sext i8 %319 to i32
  %cmp657 = icmp eq i32 %conv656, 99
  br i1 %cmp657, label %if.then.659, label %if.end.676

if.then.659:                                      ; preds = %land.lhs.true.653
  %320 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld660 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %320, i32 0, i32 1
  %arrayidx661 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld660, i32 0, i64 0
  %rtx662 = bitcast %union.rtunion_def* %arrayidx661 to %struct.rtx_def**
  %321 = load %struct.rtx_def*, %struct.rtx_def** %rtx662, align 8
  %fld663 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %321, i32 0, i32 1
  %arrayidx664 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld663, i32 0, i64 1
  %rtx665 = bitcast %union.rtunion_def* %arrayidx664 to %struct.rtx_def**
  %322 = load %struct.rtx_def*, %struct.rtx_def** %rtx665, align 8
  store %struct.rtx_def* %322, %struct.rtx_def** %other, align 8
  %323 = load i32, i32* %code, align 4
  %324 = load i32, i32* %mode, align 4
  %325 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld666 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %325, i32 0, i32 1
  %arrayidx667 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld666, i32 0, i64 0
  %rtx668 = bitcast %union.rtunion_def* %arrayidx667 to %struct.rtx_def**
  %326 = load %struct.rtx_def*, %struct.rtx_def** %rtx668, align 8
  %fld669 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %326, i32 0, i32 1
  %arrayidx670 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld669, i32 0, i64 0
  %rtx671 = bitcast %union.rtunion_def* %arrayidx670 to %struct.rtx_def**
  %327 = load %struct.rtx_def*, %struct.rtx_def** %rtx671, align 8
  %328 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld672 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %328, i32 0, i32 1
  %arrayidx673 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld672, i32 0, i64 1
  %rtx674 = bitcast %union.rtunion_def* %arrayidx673 to %struct.rtx_def**
  %329 = load %struct.rtx_def*, %struct.rtx_def** %rtx674, align 8
  %call675 = call %struct.rtx_def* @simplify_binary_operation(i32 %323, i32 %324, %struct.rtx_def* %327, %struct.rtx_def* %329)
  store %struct.rtx_def* %call675, %struct.rtx_def** %inner, align 8
  br label %if.end.676

if.end.676:                                       ; preds = %if.then.659, %land.lhs.true.653, %cond.end.648
  %330 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %tobool677 = icmp ne %struct.rtx_def* %330, null
  br i1 %tobool677, label %if.then.678, label %if.end.680

if.then.678:                                      ; preds = %if.end.676
  %331 = load i32, i32* %code, align 4
  %332 = load i32, i32* %mode, align 4
  %333 = load %struct.rtx_def*, %struct.rtx_def** %other, align 8
  %334 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %call679 = call %struct.rtx_def* @gen_binary(i32 %331, i32 %332, %struct.rtx_def* %333, %struct.rtx_def* %334)
  store %struct.rtx_def* %call679, %struct.rtx_def** %retval
  br label %return

if.end.680:                                       ; preds = %if.end.676
  br label %if.end.681

if.end.681:                                       ; preds = %if.end.680, %if.then.570
  br label %if.end.682

if.end.682:                                       ; preds = %if.end.681, %lor.lhs.false.565, %lor.lhs.false.553, %lor.lhs.false.527
  %335 = load i32, i32* %code, align 4
  switch i32 %335, label %sw.default [
    i32 66, label %sw.bb.683
    i32 63, label %sw.bb.691
    i32 86, label %sw.bb.827
    i32 77, label %sw.bb.1077
    i32 122, label %sw.bb.1320
    i32 124, label %sw.bb.1584
    i32 58, label %sw.bb.1702
    i32 75, label %sw.bb.1721
    i32 76, label %sw.bb.2100
    i32 78, label %sw.bb.2244
    i32 81, label %sw.bb.2330
    i32 103, label %sw.bb.2394
    i32 102, label %sw.bb.2394
    i32 105, label %sw.bb.2394
    i32 109, label %sw.bb.2394
    i32 104, label %sw.bb.2394
    i32 108, label %sw.bb.2394
    i32 107, label %sw.bb.2394
    i32 111, label %sw.bb.2394
    i32 106, label %sw.bb.2394
    i32 110, label %sw.bb.2394
    i32 114, label %sw.bb.2394
    i32 119, label %sw.bb.2394
    i32 116, label %sw.bb.2394
    i32 115, label %sw.bb.2394
    i32 118, label %sw.bb.2394
    i32 117, label %sw.bb.2394
    i32 112, label %sw.bb.2394
    i32 113, label %sw.bb.2394
    i32 72, label %sw.bb.2616
    i32 133, label %sw.bb.2618
    i32 132, label %sw.bb.2618
    i32 121, label %sw.bb.2618
    i32 120, label %sw.bb.2618
    i32 47, label %sw.bb.2623
    i32 83, label %sw.bb.2625
    i32 84, label %sw.bb.2625
    i32 85, label %sw.bb.2625
    i32 129, label %sw.bb.2627
    i32 131, label %sw.bb.2729
    i32 125, label %sw.bb.2756
    i32 87, label %sw.bb.2775
    i32 90, label %sw.bb.2775
    i32 89, label %sw.bb.2775
    i32 88, label %sw.bb.2775
    i32 91, label %sw.bb.2775
    i32 143, label %sw.bb.2796
  ]

sw.bb.683:                                        ; preds = %if.end.682
  %336 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld684 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %336, i32 0, i32 1
  %arrayidx685 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld684, i32 0, i64 0
  %rtx686 = bitcast %union.rtunion_def* %arrayidx685 to %struct.rtx_def**
  %337 = load %struct.rtx_def*, %struct.rtx_def** %rtx686, align 8
  %call687 = call %struct.rtx_def* @make_compound_operation(%struct.rtx_def* %337, i32 66)
  store %struct.rtx_def* %call687, %struct.rtx_def** %temp, align 8
  %338 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld688 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %338, i32 0, i32 1
  %arrayidx689 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld688, i32 0, i64 0
  %rtx690 = bitcast %union.rtunion_def* %arrayidx689 to %struct.rtx_def**
  %339 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx690, %struct.rtx_def* %339)
  br label %sw.epilog.2887

sw.bb.691:                                        ; preds = %if.end.682
  %340 = load i32, i32* %op0_mode.addr, align 4
  %cmp692 = icmp eq i32 %340, 0
  br i1 %cmp692, label %if.then.694, label %if.end.701

if.then.694:                                      ; preds = %sw.bb.691
  %341 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld695 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %341, i32 0, i32 1
  %arrayidx696 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld695, i32 0, i64 0
  %rtx697 = bitcast %union.rtunion_def* %arrayidx696 to %struct.rtx_def**
  %342 = load %struct.rtx_def*, %struct.rtx_def** %rtx697, align 8
  %343 = bitcast %struct.rtx_def* %342 to i32*
  %bf.load698 = load i32, i32* %343, align 8
  %bf.lshr699 = lshr i32 %bf.load698, 16
  %bf.clear700 = and i32 %bf.lshr699, 255
  store i32 %bf.clear700, i32* %op0_mode.addr, align 4
  br label %if.end.701

if.end.701:                                       ; preds = %if.then.694, %sw.bb.691
  %344 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld702 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %344, i32 0, i32 1
  %arrayidx703 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld702, i32 0, i64 0
  %rtx704 = bitcast %union.rtunion_def* %arrayidx703 to %struct.rtx_def**
  %345 = load %struct.rtx_def*, %struct.rtx_def** %rtx704, align 8
  %346 = bitcast %struct.rtx_def* %345 to i32*
  %bf.load705 = load i32, i32* %346, align 8
  %bf.clear706 = and i32 %bf.load705, 65535
  %cmp707 = icmp eq i32 %bf.clear706, 67
  br i1 %cmp707, label %land.lhs.true.765, label %lor.lhs.false.709

lor.lhs.false.709:                                ; preds = %if.end.701
  %347 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld710 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %347, i32 0, i32 1
  %arrayidx711 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld710, i32 0, i64 0
  %rtx712 = bitcast %union.rtunion_def* %arrayidx711 to %struct.rtx_def**
  %348 = load %struct.rtx_def*, %struct.rtx_def** %rtx712, align 8
  %349 = bitcast %struct.rtx_def* %348 to i32*
  %bf.load713 = load i32, i32* %349, align 8
  %bf.clear714 = and i32 %bf.load713, 65535
  %cmp715 = icmp eq i32 %bf.clear714, 68
  br i1 %cmp715, label %land.lhs.true.765, label %lor.lhs.false.717

lor.lhs.false.717:                                ; preds = %lor.lhs.false.709
  %350 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld718 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %350, i32 0, i32 1
  %arrayidx719 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld718, i32 0, i64 0
  %rtx720 = bitcast %union.rtunion_def* %arrayidx719 to %struct.rtx_def**
  %351 = load %struct.rtx_def*, %struct.rtx_def** %rtx720, align 8
  %352 = bitcast %struct.rtx_def* %351 to i32*
  %bf.load721 = load i32, i32* %352, align 8
  %bf.clear722 = and i32 %bf.load721, 65535
  %cmp723 = icmp eq i32 %bf.clear722, 54
  br i1 %cmp723, label %land.lhs.true.765, label %lor.lhs.false.725

lor.lhs.false.725:                                ; preds = %lor.lhs.false.717
  %353 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld726 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %353, i32 0, i32 1
  %arrayidx727 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld726, i32 0, i64 0
  %rtx728 = bitcast %union.rtunion_def* %arrayidx727 to %struct.rtx_def**
  %354 = load %struct.rtx_def*, %struct.rtx_def** %rtx728, align 8
  %355 = bitcast %struct.rtx_def* %354 to i32*
  %bf.load729 = load i32, i32* %355, align 8
  %bf.clear730 = and i32 %bf.load729, 65535
  %cmp731 = icmp eq i32 %bf.clear730, 55
  br i1 %cmp731, label %land.lhs.true.765, label %lor.lhs.false.733

lor.lhs.false.733:                                ; preds = %lor.lhs.false.725
  %356 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld734 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %356, i32 0, i32 1
  %arrayidx735 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld734, i32 0, i64 0
  %rtx736 = bitcast %union.rtunion_def* %arrayidx735 to %struct.rtx_def**
  %357 = load %struct.rtx_def*, %struct.rtx_def** %rtx736, align 8
  %358 = bitcast %struct.rtx_def* %357 to i32*
  %bf.load737 = load i32, i32* %358, align 8
  %bf.clear738 = and i32 %bf.load737, 65535
  %cmp739 = icmp eq i32 %bf.clear738, 58
  br i1 %cmp739, label %land.lhs.true.765, label %lor.lhs.false.741

lor.lhs.false.741:                                ; preds = %lor.lhs.false.733
  %359 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld742 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %359, i32 0, i32 1
  %arrayidx743 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld742, i32 0, i64 0
  %rtx744 = bitcast %union.rtunion_def* %arrayidx743 to %struct.rtx_def**
  %360 = load %struct.rtx_def*, %struct.rtx_def** %rtx744, align 8
  %361 = bitcast %struct.rtx_def* %360 to i32*
  %bf.load745 = load i32, i32* %361, align 8
  %bf.clear746 = and i32 %bf.load745, 65535
  %cmp747 = icmp eq i32 %bf.clear746, 134
  br i1 %cmp747, label %land.lhs.true.765, label %lor.lhs.false.749

lor.lhs.false.749:                                ; preds = %lor.lhs.false.741
  %362 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld750 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %362, i32 0, i32 1
  %arrayidx751 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld750, i32 0, i64 0
  %rtx752 = bitcast %union.rtunion_def* %arrayidx751 to %struct.rtx_def**
  %363 = load %struct.rtx_def*, %struct.rtx_def** %rtx752, align 8
  %364 = bitcast %struct.rtx_def* %363 to i32*
  %bf.load753 = load i32, i32* %364, align 8
  %bf.clear754 = and i32 %bf.load753, 65535
  %cmp755 = icmp eq i32 %bf.clear754, 56
  br i1 %cmp755, label %land.lhs.true.765, label %lor.lhs.false.757

lor.lhs.false.757:                                ; preds = %lor.lhs.false.749
  %365 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld758 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %365, i32 0, i32 1
  %arrayidx759 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld758, i32 0, i64 0
  %rtx760 = bitcast %union.rtunion_def* %arrayidx759 to %struct.rtx_def**
  %366 = load %struct.rtx_def*, %struct.rtx_def** %rtx760, align 8
  %367 = bitcast %struct.rtx_def* %366 to i32*
  %bf.load761 = load i32, i32* %367, align 8
  %bf.clear762 = and i32 %bf.load761, 65535
  %cmp763 = icmp eq i32 %bf.clear762, 140
  br i1 %cmp763, label %land.lhs.true.765, label %if.end.776

land.lhs.true.765:                                ; preds = %lor.lhs.false.757, %lor.lhs.false.749, %lor.lhs.false.741, %lor.lhs.false.733, %lor.lhs.false.725, %lor.lhs.false.717, %lor.lhs.false.709, %if.end.701
  %368 = load i32, i32* %mode, align 4
  %369 = load i32, i32* %op0_mode.addr, align 4
  %call766 = call i32 @subreg_lowpart_offset(i32 %368, i32 %369)
  %370 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld767 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %370, i32 0, i32 1
  %arrayidx768 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld767, i32 0, i64 1
  %rtuint = bitcast %union.rtunion_def* %arrayidx768 to i32*
  %371 = load i32, i32* %rtuint, align 4
  %cmp769 = icmp eq i32 %call766, %371
  br i1 %cmp769, label %if.then.771, label %if.end.776

if.then.771:                                      ; preds = %land.lhs.true.765
  %372 = load i32, i32* %mode, align 4
  %373 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld772 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %373, i32 0, i32 1
  %arrayidx773 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld772, i32 0, i64 0
  %rtx774 = bitcast %union.rtunion_def* %arrayidx773 to %struct.rtx_def**
  %374 = load %struct.rtx_def*, %struct.rtx_def** %rtx774, align 8
  %call775 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %372, %struct.rtx_def* %374)
  store %struct.rtx_def* %call775, %struct.rtx_def** %retval
  br label %return

if.end.776:                                       ; preds = %land.lhs.true.765, %lor.lhs.false.757
  %375 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld777 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %375, i32 0, i32 1
  %arrayidx778 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld777, i32 0, i64 0
  %rtx779 = bitcast %union.rtunion_def* %arrayidx778 to %struct.rtx_def**
  %376 = load %struct.rtx_def*, %struct.rtx_def** %rtx779, align 8
  %377 = bitcast %struct.rtx_def* %376 to i32*
  %bf.load780 = load i32, i32* %377, align 8
  %bf.lshr781 = lshr i32 %bf.load780, 16
  %bf.clear782 = and i32 %bf.lshr781, 255
  %idxprom783 = sext i32 %bf.clear782 to i64
  %arrayidx784 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom783
  %378 = load i32, i32* %arrayidx784, align 4
  %cmp785 = icmp eq i32 %378, 4
  br i1 %cmp785, label %if.then.787, label %if.end.788

if.then.787:                                      ; preds = %if.end.776
  br label %sw.epilog.2887

if.end.788:                                       ; preds = %if.end.776
  %379 = load i32, i32* %mode, align 4
  %380 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld790 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %380, i32 0, i32 1
  %arrayidx791 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld790, i32 0, i64 0
  %rtx792 = bitcast %union.rtunion_def* %arrayidx791 to %struct.rtx_def**
  %381 = load %struct.rtx_def*, %struct.rtx_def** %rtx792, align 8
  %382 = load i32, i32* %op0_mode.addr, align 4
  %383 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld793 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %383, i32 0, i32 1
  %arrayidx794 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld793, i32 0, i64 1
  %rtuint795 = bitcast %union.rtunion_def* %arrayidx794 to i32*
  %384 = load i32, i32* %rtuint795, align 4
  %call796 = call %struct.rtx_def* @simplify_subreg(i32 %379, %struct.rtx_def* %381, i32 %382, i32 %384)
  store %struct.rtx_def* %call796, %struct.rtx_def** %temp789, align 8
  %385 = load %struct.rtx_def*, %struct.rtx_def** %temp789, align 8
  %tobool797 = icmp ne %struct.rtx_def* %385, null
  br i1 %tobool797, label %if.then.798, label %if.end.799

if.then.798:                                      ; preds = %if.end.788
  %386 = load %struct.rtx_def*, %struct.rtx_def** %temp789, align 8
  store %struct.rtx_def* %386, %struct.rtx_def** %retval
  br label %return

if.end.799:                                       ; preds = %if.end.788
  %387 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld800 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %387, i32 0, i32 1
  %arrayidx801 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld800, i32 0, i64 0
  %rtx802 = bitcast %union.rtunion_def* %arrayidx801 to %struct.rtx_def**
  %388 = load %struct.rtx_def*, %struct.rtx_def** %rtx802, align 8
  %389 = bitcast %struct.rtx_def* %388 to i32*
  %bf.load803 = load i32, i32* %389, align 8
  %bf.clear804 = and i32 %bf.load803, 65535
  %cmp805 = icmp eq i32 %bf.clear804, 66
  br i1 %cmp805, label %land.lhs.true.807, label %if.end.826

land.lhs.true.807:                                ; preds = %if.end.799
  %390 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld808 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %390, i32 0, i32 1
  %arrayidx809 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld808, i32 0, i64 0
  %rtx810 = bitcast %union.rtunion_def* %arrayidx809 to %struct.rtx_def**
  %391 = load %struct.rtx_def*, %struct.rtx_def** %rtx810, align 8
  %392 = bitcast %struct.rtx_def* %391 to i32*
  %bf.load811 = load i32, i32* %392, align 8
  %bf.lshr812 = lshr i32 %bf.load811, 27
  %bf.clear813 = and i32 %bf.lshr812, 1
  %tobool814 = icmp ne i32 %bf.clear813, 0
  br i1 %tobool814, label %if.then.824, label %lor.lhs.false.815

lor.lhs.false.815:                                ; preds = %land.lhs.true.807
  %393 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld816 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %393, i32 0, i32 1
  %arrayidx817 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld816, i32 0, i64 0
  %rtx818 = bitcast %union.rtunion_def* %arrayidx817 to %struct.rtx_def**
  %394 = load %struct.rtx_def*, %struct.rtx_def** %rtx818, align 8
  %fld819 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %394, i32 0, i32 1
  %arrayidx820 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld819, i32 0, i64 0
  %rtx821 = bitcast %union.rtunion_def* %arrayidx820 to %struct.rtx_def**
  %395 = load %struct.rtx_def*, %struct.rtx_def** %rtx821, align 8
  %call822 = call i32 @mode_dependent_address_p(%struct.rtx_def* %395)
  %tobool823 = icmp ne i32 %call822, 0
  br i1 %tobool823, label %if.then.824, label %if.end.826

if.then.824:                                      ; preds = %lor.lhs.false.815, %land.lhs.true.807
  %396 = load i32, i32* %mode, align 4
  %397 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %call825 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 %396, %struct.rtx_def* %397)
  store %struct.rtx_def* %call825, %struct.rtx_def** %retval
  br label %return

if.end.826:                                       ; preds = %lor.lhs.false.815, %if.end.799
  br label %sw.epilog.2887

sw.bb.827:                                        ; preds = %if.end.682
  %398 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld828 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %398, i32 0, i32 1
  %arrayidx829 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld828, i32 0, i64 0
  %rtx830 = bitcast %union.rtunion_def* %arrayidx829 to %struct.rtx_def**
  %399 = load %struct.rtx_def*, %struct.rtx_def** %rtx830, align 8
  %400 = bitcast %struct.rtx_def* %399 to i32*
  %bf.load831 = load i32, i32* %400, align 8
  %bf.clear832 = and i32 %bf.load831, 65535
  %cmp833 = icmp eq i32 %bf.clear832, 75
  br i1 %cmp833, label %land.lhs.true.835, label %if.end.852

land.lhs.true.835:                                ; preds = %sw.bb.827
  %401 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld836 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %401, i32 0, i32 1
  %arrayidx837 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld836, i32 0, i64 0
  %rtx838 = bitcast %union.rtunion_def* %arrayidx837 to %struct.rtx_def**
  %402 = load %struct.rtx_def*, %struct.rtx_def** %rtx838, align 8
  %fld839 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %402, i32 0, i32 1
  %arrayidx840 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld839, i32 0, i64 1
  %rtx841 = bitcast %union.rtunion_def* %arrayidx840 to %struct.rtx_def**
  %403 = load %struct.rtx_def*, %struct.rtx_def** %rtx841, align 8
  %404 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 63), align 8
  %cmp842 = icmp eq %struct.rtx_def* %403, %404
  br i1 %cmp842, label %if.then.844, label %if.end.852

if.then.844:                                      ; preds = %land.lhs.true.835
  %405 = load i32, i32* %mode, align 4
  %406 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld845 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %406, i32 0, i32 1
  %arrayidx846 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld845, i32 0, i64 0
  %rtx847 = bitcast %union.rtunion_def* %arrayidx846 to %struct.rtx_def**
  %407 = load %struct.rtx_def*, %struct.rtx_def** %rtx847, align 8
  %fld848 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %407, i32 0, i32 1
  %arrayidx849 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld848, i32 0, i64 0
  %rtx850 = bitcast %union.rtunion_def* %arrayidx849 to %struct.rtx_def**
  %408 = load %struct.rtx_def*, %struct.rtx_def** %rtx850, align 8
  %call851 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 %405, %struct.rtx_def* %408)
  store %struct.rtx_def* %call851, %struct.rtx_def** %retval
  br label %return

if.end.852:                                       ; preds = %land.lhs.true.835, %sw.bb.827
  %409 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld853 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %409, i32 0, i32 1
  %arrayidx854 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld853, i32 0, i64 0
  %rtx855 = bitcast %union.rtunion_def* %arrayidx854 to %struct.rtx_def**
  %410 = load %struct.rtx_def*, %struct.rtx_def** %rtx855, align 8
  %411 = bitcast %struct.rtx_def* %410 to i32*
  %bf.load856 = load i32, i32* %411, align 8
  %bf.clear857 = and i32 %bf.load856, 65535
  %cmp858 = icmp eq i32 %bf.clear857, 77
  br i1 %cmp858, label %if.then.860, label %if.end.868

if.then.860:                                      ; preds = %if.end.852
  %412 = load i32, i32* %mode, align 4
  %413 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld861 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %413, i32 0, i32 1
  %arrayidx862 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld861, i32 0, i64 0
  %rtx863 = bitcast %union.rtunion_def* %arrayidx862 to %struct.rtx_def**
  %414 = load %struct.rtx_def*, %struct.rtx_def** %rtx863, align 8
  %fld864 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %414, i32 0, i32 1
  %arrayidx865 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld864, i32 0, i64 0
  %rtx866 = bitcast %union.rtunion_def* %arrayidx865 to %struct.rtx_def**
  %415 = load %struct.rtx_def*, %struct.rtx_def** %rtx866, align 8
  %416 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 63), align 8
  %call867 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %412, %struct.rtx_def* %415, %struct.rtx_def* %416)
  store %struct.rtx_def* %call867, %struct.rtx_def** %retval
  br label %return

if.end.868:                                       ; preds = %if.end.852
  %417 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld869 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %417, i32 0, i32 1
  %arrayidx870 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld869, i32 0, i64 0
  %rtx871 = bitcast %union.rtunion_def* %arrayidx870 to %struct.rtx_def**
  %418 = load %struct.rtx_def*, %struct.rtx_def** %rtx871, align 8
  %419 = bitcast %struct.rtx_def* %418 to i32*
  %bf.load872 = load i32, i32* %419, align 8
  %bf.clear873 = and i32 %bf.load872, 65535
  %cmp874 = icmp eq i32 %bf.clear873, 85
  br i1 %cmp874, label %land.lhs.true.876, label %if.end.905

land.lhs.true.876:                                ; preds = %if.end.868
  %420 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld877 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %420, i32 0, i32 1
  %arrayidx878 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld877, i32 0, i64 0
  %rtx879 = bitcast %union.rtunion_def* %arrayidx878 to %struct.rtx_def**
  %421 = load %struct.rtx_def*, %struct.rtx_def** %rtx879, align 8
  %fld880 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %421, i32 0, i32 1
  %arrayidx881 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld880, i32 0, i64 1
  %rtx882 = bitcast %union.rtunion_def* %arrayidx881 to %struct.rtx_def**
  %422 = load %struct.rtx_def*, %struct.rtx_def** %rtx882, align 8
  %423 = bitcast %struct.rtx_def* %422 to i32*
  %bf.load883 = load i32, i32* %423, align 8
  %bf.clear884 = and i32 %bf.load883, 65535
  %cmp885 = icmp eq i32 %bf.clear884, 54
  br i1 %cmp885, label %land.lhs.true.887, label %if.end.905

land.lhs.true.887:                                ; preds = %land.lhs.true.876
  %424 = load i32, i32* %mode, align 4
  %425 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld888 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %425, i32 0, i32 1
  %arrayidx889 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld888, i32 0, i64 0
  %rtx890 = bitcast %union.rtunion_def* %arrayidx889 to %struct.rtx_def**
  %426 = load %struct.rtx_def*, %struct.rtx_def** %rtx890, align 8
  %fld891 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %426, i32 0, i32 1
  %arrayidx892 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld891, i32 0, i64 1
  %rtx893 = bitcast %union.rtunion_def* %arrayidx892 to %struct.rtx_def**
  %427 = load %struct.rtx_def*, %struct.rtx_def** %rtx893, align 8
  %428 = load i32, i32* %mode, align 4
  %call894 = call %struct.rtx_def* @simplify_unary_operation(i32 86, i32 %424, %struct.rtx_def* %427, i32 %428)
  store %struct.rtx_def* %call894, %struct.rtx_def** %temp, align 8
  %cmp895 = icmp ne %struct.rtx_def* %call894, null
  br i1 %cmp895, label %if.then.897, label %if.end.905

if.then.897:                                      ; preds = %land.lhs.true.887
  %429 = load i32, i32* %mode, align 4
  %430 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld898 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %430, i32 0, i32 1
  %arrayidx899 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld898, i32 0, i64 0
  %rtx900 = bitcast %union.rtunion_def* %arrayidx899 to %struct.rtx_def**
  %431 = load %struct.rtx_def*, %struct.rtx_def** %rtx900, align 8
  %fld901 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %431, i32 0, i32 1
  %arrayidx902 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld901, i32 0, i64 0
  %rtx903 = bitcast %union.rtunion_def* %arrayidx902 to %struct.rtx_def**
  %432 = load %struct.rtx_def*, %struct.rtx_def** %rtx903, align 8
  %433 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %call904 = call %struct.rtx_def* @gen_binary(i32 85, i32 %429, %struct.rtx_def* %432, %struct.rtx_def* %433)
  store %struct.rtx_def* %call904, %struct.rtx_def** %retval
  br label %return

if.end.905:                                       ; preds = %land.lhs.true.887, %land.lhs.true.876, %if.end.868
  %434 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld906 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %434, i32 0, i32 1
  %arrayidx907 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld906, i32 0, i64 0
  %rtx908 = bitcast %union.rtunion_def* %arrayidx907 to %struct.rtx_def**
  %435 = load %struct.rtx_def*, %struct.rtx_def** %rtx908, align 8
  %436 = bitcast %struct.rtx_def* %435 to i32*
  %bf.load909 = load i32, i32* %436, align 8
  %bf.clear910 = and i32 %bf.load909, 65535
  %cmp911 = icmp eq i32 %bf.clear910, 87
  br i1 %cmp911, label %land.lhs.true.913, label %if.end.931

land.lhs.true.913:                                ; preds = %if.end.905
  %437 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld914 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %437, i32 0, i32 1
  %arrayidx915 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld914, i32 0, i64 0
  %rtx916 = bitcast %union.rtunion_def* %arrayidx915 to %struct.rtx_def**
  %438 = load %struct.rtx_def*, %struct.rtx_def** %rtx916, align 8
  %fld917 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %438, i32 0, i32 1
  %arrayidx918 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld917, i32 0, i64 0
  %rtx919 = bitcast %union.rtunion_def* %arrayidx918 to %struct.rtx_def**
  %439 = load %struct.rtx_def*, %struct.rtx_def** %rtx919, align 8
  %440 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 65), align 8
  %cmp920 = icmp eq %struct.rtx_def* %439, %440
  br i1 %cmp920, label %if.then.922, label %if.end.931

if.then.922:                                      ; preds = %land.lhs.true.913
  %441 = load i32, i32* %mode, align 4
  %442 = load i32, i32* %mode, align 4
  %443 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 65), align 8
  %444 = load i32, i32* %mode, align 4
  %call923 = call %struct.rtx_def* @simplify_gen_unary(i32 86, i32 %442, %struct.rtx_def* %443, i32 %444)
  %445 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld924 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %445, i32 0, i32 1
  %arrayidx925 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld924, i32 0, i64 0
  %rtx926 = bitcast %union.rtunion_def* %arrayidx925 to %struct.rtx_def**
  %446 = load %struct.rtx_def*, %struct.rtx_def** %rtx926, align 8
  %fld927 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %446, i32 0, i32 1
  %arrayidx928 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld927, i32 0, i64 1
  %rtx929 = bitcast %union.rtunion_def* %arrayidx928 to %struct.rtx_def**
  %447 = load %struct.rtx_def*, %struct.rtx_def** %rtx929, align 8
  %call930 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 88, i32 %441, %struct.rtx_def* %call923, %struct.rtx_def* %447)
  store %struct.rtx_def* %call930, %struct.rtx_def** %retval
  br label %return

if.end.931:                                       ; preds = %land.lhs.true.913, %if.end.905
  %448 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld932 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %448, i32 0, i32 1
  %arrayidx933 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld932, i32 0, i64 0
  %rtx934 = bitcast %union.rtunion_def* %arrayidx933 to %struct.rtx_def**
  %449 = load %struct.rtx_def*, %struct.rtx_def** %rtx934, align 8
  %450 = bitcast %struct.rtx_def* %449 to i32*
  %bf.load935 = load i32, i32* %450, align 8
  %bf.clear936 = and i32 %bf.load935, 65535
  %cmp937 = icmp eq i32 %bf.clear936, 63
  br i1 %cmp937, label %land.lhs.true.939, label %if.end.1014

land.lhs.true.939:                                ; preds = %if.end.931
  %451 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld940 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %451, i32 0, i32 1
  %arrayidx941 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld940, i32 0, i64 0
  %rtx942 = bitcast %union.rtunion_def* %arrayidx941 to %struct.rtx_def**
  %452 = load %struct.rtx_def*, %struct.rtx_def** %rtx942, align 8
  %call943 = call i32 @subreg_lowpart_p(%struct.rtx_def* %452)
  %tobool944 = icmp ne i32 %call943, 0
  br i1 %tobool944, label %land.lhs.true.945, label %if.end.1014

land.lhs.true.945:                                ; preds = %land.lhs.true.939
  %453 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld946 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %453, i32 0, i32 1
  %arrayidx947 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld946, i32 0, i64 0
  %rtx948 = bitcast %union.rtunion_def* %arrayidx947 to %struct.rtx_def**
  %454 = load %struct.rtx_def*, %struct.rtx_def** %rtx948, align 8
  %455 = bitcast %struct.rtx_def* %454 to i32*
  %bf.load949 = load i32, i32* %455, align 8
  %bf.lshr950 = lshr i32 %bf.load949, 16
  %bf.clear951 = and i32 %bf.lshr950, 255
  %idxprom952 = sext i32 %bf.clear951 to i64
  %arrayidx953 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom952
  %456 = load i8, i8* %arrayidx953, align 1
  %conv954 = zext i8 %456 to i32
  %457 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld955 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %457, i32 0, i32 1
  %arrayidx956 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld955, i32 0, i64 0
  %rtx957 = bitcast %union.rtunion_def* %arrayidx956 to %struct.rtx_def**
  %458 = load %struct.rtx_def*, %struct.rtx_def** %rtx957, align 8
  %fld958 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %458, i32 0, i32 1
  %arrayidx959 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld958, i32 0, i64 0
  %rtx960 = bitcast %union.rtunion_def* %arrayidx959 to %struct.rtx_def**
  %459 = load %struct.rtx_def*, %struct.rtx_def** %rtx960, align 8
  %460 = bitcast %struct.rtx_def* %459 to i32*
  %bf.load961 = load i32, i32* %460, align 8
  %bf.lshr962 = lshr i32 %bf.load961, 16
  %bf.clear963 = and i32 %bf.lshr962, 255
  %idxprom964 = sext i32 %bf.clear963 to i64
  %arrayidx965 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom964
  %461 = load i8, i8* %arrayidx965, align 1
  %conv966 = zext i8 %461 to i32
  %cmp967 = icmp slt i32 %conv954, %conv966
  br i1 %cmp967, label %land.lhs.true.969, label %if.end.1014

land.lhs.true.969:                                ; preds = %land.lhs.true.945
  %462 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld970 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %462, i32 0, i32 1
  %arrayidx971 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld970, i32 0, i64 0
  %rtx972 = bitcast %union.rtunion_def* %arrayidx971 to %struct.rtx_def**
  %463 = load %struct.rtx_def*, %struct.rtx_def** %rtx972, align 8
  %fld973 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %463, i32 0, i32 1
  %arrayidx974 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld973, i32 0, i64 0
  %rtx975 = bitcast %union.rtunion_def* %arrayidx974 to %struct.rtx_def**
  %464 = load %struct.rtx_def*, %struct.rtx_def** %rtx975, align 8
  %465 = bitcast %struct.rtx_def* %464 to i32*
  %bf.load976 = load i32, i32* %465, align 8
  %bf.clear977 = and i32 %bf.load976, 65535
  %cmp978 = icmp eq i32 %bf.clear977, 87
  br i1 %cmp978, label %land.lhs.true.980, label %if.end.1014

land.lhs.true.980:                                ; preds = %land.lhs.true.969
  %466 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld981 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %466, i32 0, i32 1
  %arrayidx982 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld981, i32 0, i64 0
  %rtx983 = bitcast %union.rtunion_def* %arrayidx982 to %struct.rtx_def**
  %467 = load %struct.rtx_def*, %struct.rtx_def** %rtx983, align 8
  %fld984 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %467, i32 0, i32 1
  %arrayidx985 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld984, i32 0, i64 0
  %rtx986 = bitcast %union.rtunion_def* %arrayidx985 to %struct.rtx_def**
  %468 = load %struct.rtx_def*, %struct.rtx_def** %rtx986, align 8
  %fld987 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %468, i32 0, i32 1
  %arrayidx988 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld987, i32 0, i64 0
  %rtx989 = bitcast %union.rtunion_def* %arrayidx988 to %struct.rtx_def**
  %469 = load %struct.rtx_def*, %struct.rtx_def** %rtx989, align 8
  %470 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 65), align 8
  %cmp990 = icmp eq %struct.rtx_def* %469, %470
  br i1 %cmp990, label %if.then.992, label %if.end.1014

if.then.992:                                      ; preds = %land.lhs.true.980
  %471 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld993 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %471, i32 0, i32 1
  %arrayidx994 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld993, i32 0, i64 0
  %rtx995 = bitcast %union.rtunion_def* %arrayidx994 to %struct.rtx_def**
  %472 = load %struct.rtx_def*, %struct.rtx_def** %rtx995, align 8
  %fld996 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %472, i32 0, i32 1
  %arrayidx997 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld996, i32 0, i64 0
  %rtx998 = bitcast %union.rtunion_def* %arrayidx997 to %struct.rtx_def**
  %473 = load %struct.rtx_def*, %struct.rtx_def** %rtx998, align 8
  %474 = bitcast %struct.rtx_def* %473 to i32*
  %bf.load999 = load i32, i32* %474, align 8
  %bf.lshr1000 = lshr i32 %bf.load999, 16
  %bf.clear1001 = and i32 %bf.lshr1000, 255
  store i32 %bf.clear1001, i32* %inner_mode, align 4
  %475 = load i32, i32* %inner_mode, align 4
  %476 = load i32, i32* %inner_mode, align 4
  %477 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 65), align 8
  %478 = load i32, i32* %inner_mode, align 4
  %call1002 = call %struct.rtx_def* @simplify_gen_unary(i32 86, i32 %476, %struct.rtx_def* %477, i32 %478)
  %479 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1003 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %479, i32 0, i32 1
  %arrayidx1004 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1003, i32 0, i64 0
  %rtx1005 = bitcast %union.rtunion_def* %arrayidx1004 to %struct.rtx_def**
  %480 = load %struct.rtx_def*, %struct.rtx_def** %rtx1005, align 8
  %fld1006 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %480, i32 0, i32 1
  %arrayidx1007 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1006, i32 0, i64 0
  %rtx1008 = bitcast %union.rtunion_def* %arrayidx1007 to %struct.rtx_def**
  %481 = load %struct.rtx_def*, %struct.rtx_def** %rtx1008, align 8
  %fld1009 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %481, i32 0, i32 1
  %arrayidx1010 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1009, i32 0, i64 1
  %rtx1011 = bitcast %union.rtunion_def* %arrayidx1010 to %struct.rtx_def**
  %482 = load %struct.rtx_def*, %struct.rtx_def** %rtx1011, align 8
  %call1012 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 88, i32 %475, %struct.rtx_def* %call1002, %struct.rtx_def* %482)
  store %struct.rtx_def* %call1012, %struct.rtx_def** %x.addr, align 8
  %483 = load i32, i32* %mode, align 4
  %484 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call1013 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %483, %struct.rtx_def* %484)
  store %struct.rtx_def* %call1013, %struct.rtx_def** %retval
  br label %return

if.end.1014:                                      ; preds = %land.lhs.true.980, %land.lhs.true.969, %land.lhs.true.945, %land.lhs.true.939, %if.end.931
  %485 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1015 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %485, i32 0, i32 1
  %arrayidx1016 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1015, i32 0, i64 0
  %rtx1017 = bitcast %union.rtunion_def* %arrayidx1016 to %struct.rtx_def**
  %486 = load %struct.rtx_def*, %struct.rtx_def** %rtx1017, align 8
  %487 = bitcast %struct.rtx_def* %486 to i32*
  %bf.load1018 = load i32, i32* %487, align 8
  %bf.clear1019 = and i32 %bf.load1018, 65535
  %cmp1020 = icmp eq i32 %bf.clear1019, 84
  br i1 %cmp1020, label %if.then.1030, label %lor.lhs.false.1022

lor.lhs.false.1022:                               ; preds = %if.end.1014
  %488 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1023 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %488, i32 0, i32 1
  %arrayidx1024 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1023, i32 0, i64 0
  %rtx1025 = bitcast %union.rtunion_def* %arrayidx1024 to %struct.rtx_def**
  %489 = load %struct.rtx_def*, %struct.rtx_def** %rtx1025, align 8
  %490 = bitcast %struct.rtx_def* %489 to i32*
  %bf.load1026 = load i32, i32* %490, align 8
  %bf.clear1027 = and i32 %bf.load1026, 65535
  %cmp1028 = icmp eq i32 %bf.clear1027, 83
  br i1 %cmp1028, label %if.then.1030, label %if.end.1076

if.then.1030:                                     ; preds = %lor.lhs.false.1022, %if.end.1014
  %491 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1031 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %491, i32 0, i32 1
  %arrayidx1032 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1031, i32 0, i64 0
  %rtx1033 = bitcast %union.rtunion_def* %arrayidx1032 to %struct.rtx_def**
  %492 = load %struct.rtx_def*, %struct.rtx_def** %rtx1033, align 8
  %fld1034 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %492, i32 0, i32 1
  %arrayidx1035 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1034, i32 0, i64 0
  %rtx1036 = bitcast %union.rtunion_def* %arrayidx1035 to %struct.rtx_def**
  %493 = load %struct.rtx_def*, %struct.rtx_def** %rtx1036, align 8
  store %struct.rtx_def* %493, %struct.rtx_def** %in1, align 8
  %494 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1037 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %494, i32 0, i32 1
  %arrayidx1038 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1037, i32 0, i64 0
  %rtx1039 = bitcast %union.rtunion_def* %arrayidx1038 to %struct.rtx_def**
  %495 = load %struct.rtx_def*, %struct.rtx_def** %rtx1039, align 8
  %fld1040 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %495, i32 0, i32 1
  %arrayidx1041 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1040, i32 0, i64 1
  %rtx1042 = bitcast %union.rtunion_def* %arrayidx1041 to %struct.rtx_def**
  %496 = load %struct.rtx_def*, %struct.rtx_def** %rtx1042, align 8
  store %struct.rtx_def* %496, %struct.rtx_def** %in2, align 8
  %497 = load %struct.rtx_def*, %struct.rtx_def** %in1, align 8
  %498 = bitcast %struct.rtx_def* %497 to i32*
  %bf.load1043 = load i32, i32* %498, align 8
  %bf.lshr1044 = lshr i32 %bf.load1043, 16
  %bf.clear1045 = and i32 %bf.lshr1044, 255
  store i32 %bf.clear1045, i32* %op_mode, align 4
  %499 = load i32, i32* %op_mode, align 4
  %500 = load %struct.rtx_def*, %struct.rtx_def** %in1, align 8
  %501 = load i32, i32* %op_mode, align 4
  %call1046 = call %struct.rtx_def* @simplify_gen_unary(i32 86, i32 %499, %struct.rtx_def* %500, i32 %501)
  store %struct.rtx_def* %call1046, %struct.rtx_def** %in1, align 8
  %502 = load %struct.rtx_def*, %struct.rtx_def** %in2, align 8
  %503 = bitcast %struct.rtx_def* %502 to i32*
  %bf.load1047 = load i32, i32* %503, align 8
  %bf.lshr1048 = lshr i32 %bf.load1047, 16
  %bf.clear1049 = and i32 %bf.lshr1048, 255
  store i32 %bf.clear1049, i32* %op_mode, align 4
  %504 = load i32, i32* %op_mode, align 4
  %cmp1050 = icmp eq i32 %504, 0
  br i1 %cmp1050, label %if.then.1052, label %if.end.1053

if.then.1052:                                     ; preds = %if.then.1030
  %505 = load i32, i32* %mode, align 4
  store i32 %505, i32* %op_mode, align 4
  br label %if.end.1053

if.end.1053:                                      ; preds = %if.then.1052, %if.then.1030
  %506 = load i32, i32* %op_mode, align 4
  %507 = load %struct.rtx_def*, %struct.rtx_def** %in2, align 8
  %508 = load i32, i32* %op_mode, align 4
  %call1054 = call %struct.rtx_def* @simplify_gen_unary(i32 86, i32 %506, %struct.rtx_def* %507, i32 %508)
  store %struct.rtx_def* %call1054, %struct.rtx_def** %in2, align 8
  %509 = load %struct.rtx_def*, %struct.rtx_def** %in2, align 8
  %510 = bitcast %struct.rtx_def* %509 to i32*
  %bf.load1055 = load i32, i32* %510, align 8
  %bf.clear1056 = and i32 %bf.load1055, 65535
  %cmp1057 = icmp eq i32 %bf.clear1056, 86
  br i1 %cmp1057, label %land.lhs.true.1059, label %if.end.1066

land.lhs.true.1059:                               ; preds = %if.end.1053
  %511 = load %struct.rtx_def*, %struct.rtx_def** %in1, align 8
  %512 = bitcast %struct.rtx_def* %511 to i32*
  %bf.load1060 = load i32, i32* %512, align 8
  %bf.clear1061 = and i32 %bf.load1060, 65535
  %cmp1062 = icmp ne i32 %bf.clear1061, 86
  br i1 %cmp1062, label %if.then.1064, label %if.end.1066

if.then.1064:                                     ; preds = %land.lhs.true.1059
  %513 = load %struct.rtx_def*, %struct.rtx_def** %in2, align 8
  store %struct.rtx_def* %513, %struct.rtx_def** %tem1065, align 8
  %514 = load %struct.rtx_def*, %struct.rtx_def** %in1, align 8
  store %struct.rtx_def* %514, %struct.rtx_def** %in2, align 8
  %515 = load %struct.rtx_def*, %struct.rtx_def** %tem1065, align 8
  store %struct.rtx_def* %515, %struct.rtx_def** %in1, align 8
  br label %if.end.1066

if.end.1066:                                      ; preds = %if.then.1064, %land.lhs.true.1059, %if.end.1053
  %516 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1067 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %516, i32 0, i32 1
  %arrayidx1068 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1067, i32 0, i64 0
  %rtx1069 = bitcast %union.rtunion_def* %arrayidx1068 to %struct.rtx_def**
  %517 = load %struct.rtx_def*, %struct.rtx_def** %rtx1069, align 8
  %518 = bitcast %struct.rtx_def* %517 to i32*
  %bf.load1070 = load i32, i32* %518, align 8
  %bf.clear1071 = and i32 %bf.load1070, 65535
  %cmp1072 = icmp eq i32 %bf.clear1071, 84
  %cond1074 = select i1 %cmp1072, i32 83, i32 84
  %519 = load i32, i32* %mode, align 4
  %520 = load %struct.rtx_def*, %struct.rtx_def** %in1, align 8
  %521 = load %struct.rtx_def*, %struct.rtx_def** %in2, align 8
  %call1075 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %cond1074, i32 %519, %struct.rtx_def* %520, %struct.rtx_def* %521)
  store %struct.rtx_def* %call1075, %struct.rtx_def** %retval
  br label %return

if.end.1076:                                      ; preds = %lor.lhs.false.1022
  br label %sw.epilog.2887

sw.bb.1077:                                       ; preds = %if.end.682
  %522 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1078 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %522, i32 0, i32 1
  %arrayidx1079 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1078, i32 0, i64 0
  %rtx1080 = bitcast %union.rtunion_def* %arrayidx1079 to %struct.rtx_def**
  %523 = load %struct.rtx_def*, %struct.rtx_def** %rtx1080, align 8
  %524 = bitcast %struct.rtx_def* %523 to i32*
  %bf.load1081 = load i32, i32* %524, align 8
  %bf.clear1082 = and i32 %bf.load1081, 65535
  %cmp1083 = icmp eq i32 %bf.clear1082, 75
  br i1 %cmp1083, label %land.lhs.true.1085, label %if.end.1102

land.lhs.true.1085:                               ; preds = %sw.bb.1077
  %525 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1086 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %525, i32 0, i32 1
  %arrayidx1087 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1086, i32 0, i64 0
  %rtx1088 = bitcast %union.rtunion_def* %arrayidx1087 to %struct.rtx_def**
  %526 = load %struct.rtx_def*, %struct.rtx_def** %rtx1088, align 8
  %fld1089 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %526, i32 0, i32 1
  %arrayidx1090 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1089, i32 0, i64 1
  %rtx1091 = bitcast %union.rtunion_def* %arrayidx1090 to %struct.rtx_def**
  %527 = load %struct.rtx_def*, %struct.rtx_def** %rtx1091, align 8
  %528 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 65), align 8
  %cmp1092 = icmp eq %struct.rtx_def* %527, %528
  br i1 %cmp1092, label %if.then.1094, label %if.end.1102

if.then.1094:                                     ; preds = %land.lhs.true.1085
  %529 = load i32, i32* %mode, align 4
  %530 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1095 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %530, i32 0, i32 1
  %arrayidx1096 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1095, i32 0, i64 0
  %rtx1097 = bitcast %union.rtunion_def* %arrayidx1096 to %struct.rtx_def**
  %531 = load %struct.rtx_def*, %struct.rtx_def** %rtx1097, align 8
  %fld1098 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %531, i32 0, i32 1
  %arrayidx1099 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1098, i32 0, i64 0
  %rtx1100 = bitcast %union.rtunion_def* %arrayidx1099 to %struct.rtx_def**
  %532 = load %struct.rtx_def*, %struct.rtx_def** %rtx1100, align 8
  %call1101 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 86, i32 %529, %struct.rtx_def* %532)
  store %struct.rtx_def* %call1101, %struct.rtx_def** %retval
  br label %return

if.end.1102:                                      ; preds = %land.lhs.true.1085, %sw.bb.1077
  %533 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %533, i32 0, i32 1
  %arrayidx1104 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1103, i32 0, i64 0
  %rtx1105 = bitcast %union.rtunion_def* %arrayidx1104 to %struct.rtx_def**
  %534 = load %struct.rtx_def*, %struct.rtx_def** %rtx1105, align 8
  %535 = bitcast %struct.rtx_def* %534 to i32*
  %bf.load1106 = load i32, i32* %535, align 8
  %bf.clear1107 = and i32 %bf.load1106, 65535
  %cmp1108 = icmp eq i32 %bf.clear1107, 86
  br i1 %cmp1108, label %if.then.1110, label %if.end.1118

if.then.1110:                                     ; preds = %if.end.1102
  %536 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %536, i32 0, i32 1
  %arrayidx1112 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1111, i32 0, i64 0
  %rtx1113 = bitcast %union.rtunion_def* %arrayidx1112 to %struct.rtx_def**
  %537 = load %struct.rtx_def*, %struct.rtx_def** %rtx1113, align 8
  %fld1114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %537, i32 0, i32 1
  %arrayidx1115 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1114, i32 0, i64 0
  %rtx1116 = bitcast %union.rtunion_def* %arrayidx1115 to %struct.rtx_def**
  %538 = load %struct.rtx_def*, %struct.rtx_def** %rtx1116, align 8
  %call1117 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %538, i64 1)
  store %struct.rtx_def* %call1117, %struct.rtx_def** %retval
  br label %return

if.end.1118:                                      ; preds = %if.end.1102
  %539 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %539, i32 0, i32 1
  %arrayidx1120 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1119, i32 0, i64 0
  %rtx1121 = bitcast %union.rtunion_def* %arrayidx1120 to %struct.rtx_def**
  %540 = load %struct.rtx_def*, %struct.rtx_def** %rtx1121, align 8
  %541 = bitcast %struct.rtx_def* %540 to i32*
  %bf.load1122 = load i32, i32* %541, align 8
  %bf.clear1123 = and i32 %bf.load1122, 65535
  %cmp1124 = icmp eq i32 %bf.clear1123, 76
  br i1 %cmp1124, label %land.lhs.true.1126, label %if.end.1157

land.lhs.true.1126:                               ; preds = %if.end.1118
  %542 = load i32, i32* %mode, align 4
  %idxprom1127 = sext i32 %542 to i64
  %arrayidx1128 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1127
  %543 = load i32, i32* %arrayidx1128, align 4
  %cmp1129 = icmp eq i32 %543, 2
  br i1 %cmp1129, label %lor.lhs.false.1141, label %lor.lhs.false.1131

lor.lhs.false.1131:                               ; preds = %land.lhs.true.1126
  %544 = load i32, i32* %mode, align 4
  %idxprom1132 = sext i32 %544 to i64
  %arrayidx1133 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1132
  %545 = load i32, i32* %arrayidx1133, align 4
  %cmp1134 = icmp eq i32 %545, 6
  br i1 %cmp1134, label %lor.lhs.false.1141, label %lor.lhs.false.1136

lor.lhs.false.1136:                               ; preds = %lor.lhs.false.1131
  %546 = load i32, i32* %mode, align 4
  %idxprom1137 = sext i32 %546 to i64
  %arrayidx1138 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1137
  %547 = load i32, i32* %arrayidx1138, align 4
  %cmp1139 = icmp eq i32 %547, 8
  br i1 %cmp1139, label %lor.lhs.false.1141, label %if.then.1143

lor.lhs.false.1141:                               ; preds = %lor.lhs.false.1136, %lor.lhs.false.1131, %land.lhs.true.1126
  %548 = load i32, i32* @flag_unsafe_math_optimizations, align 4
  %tobool1142 = icmp ne i32 %548, 0
  br i1 %tobool1142, label %if.then.1143, label %if.end.1157

if.then.1143:                                     ; preds = %lor.lhs.false.1141, %lor.lhs.false.1136
  %549 = load i32, i32* %mode, align 4
  %550 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %550, i32 0, i32 1
  %arrayidx1145 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1144, i32 0, i64 0
  %rtx1146 = bitcast %union.rtunion_def* %arrayidx1145 to %struct.rtx_def**
  %551 = load %struct.rtx_def*, %struct.rtx_def** %rtx1146, align 8
  %fld1147 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %551, i32 0, i32 1
  %arrayidx1148 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1147, i32 0, i64 1
  %rtx1149 = bitcast %union.rtunion_def* %arrayidx1148 to %struct.rtx_def**
  %552 = load %struct.rtx_def*, %struct.rtx_def** %rtx1149, align 8
  %553 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1150 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %553, i32 0, i32 1
  %arrayidx1151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1150, i32 0, i64 0
  %rtx1152 = bitcast %union.rtunion_def* %arrayidx1151 to %struct.rtx_def**
  %554 = load %struct.rtx_def*, %struct.rtx_def** %rtx1152, align 8
  %fld1153 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %554, i32 0, i32 1
  %arrayidx1154 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1153, i32 0, i64 0
  %rtx1155 = bitcast %union.rtunion_def* %arrayidx1154 to %struct.rtx_def**
  %555 = load %struct.rtx_def*, %struct.rtx_def** %rtx1155, align 8
  %call1156 = call %struct.rtx_def* @gen_binary(i32 76, i32 %549, %struct.rtx_def* %552, %struct.rtx_def* %555)
  store %struct.rtx_def* %call1156, %struct.rtx_def** %retval
  br label %return

if.end.1157:                                      ; preds = %lor.lhs.false.1141, %if.end.1118
  %556 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1158 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %556, i32 0, i32 1
  %arrayidx1159 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1158, i32 0, i64 0
  %rtx1160 = bitcast %union.rtunion_def* %arrayidx1159 to %struct.rtx_def**
  %557 = load %struct.rtx_def*, %struct.rtx_def** %rtx1160, align 8
  %558 = bitcast %struct.rtx_def* %557 to i32*
  %bf.load1161 = load i32, i32* %558, align 8
  %bf.clear1162 = and i32 %bf.load1161, 65535
  %cmp1163 = icmp eq i32 %bf.clear1162, 85
  br i1 %cmp1163, label %land.lhs.true.1165, label %if.end.1192

land.lhs.true.1165:                               ; preds = %if.end.1157
  %559 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1166 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %559, i32 0, i32 1
  %arrayidx1167 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1166, i32 0, i64 0
  %rtx1168 = bitcast %union.rtunion_def* %arrayidx1167 to %struct.rtx_def**
  %560 = load %struct.rtx_def*, %struct.rtx_def** %rtx1168, align 8
  %fld1169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %560, i32 0, i32 1
  %arrayidx1170 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1169, i32 0, i64 1
  %rtx1171 = bitcast %union.rtunion_def* %arrayidx1170 to %struct.rtx_def**
  %561 = load %struct.rtx_def*, %struct.rtx_def** %rtx1171, align 8
  %562 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 65), align 8
  %cmp1172 = icmp eq %struct.rtx_def* %561, %562
  br i1 %cmp1172, label %land.lhs.true.1174, label %if.end.1192

land.lhs.true.1174:                               ; preds = %land.lhs.true.1165
  %563 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1175 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %563, i32 0, i32 1
  %arrayidx1176 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1175, i32 0, i64 0
  %rtx1177 = bitcast %union.rtunion_def* %arrayidx1176 to %struct.rtx_def**
  %564 = load %struct.rtx_def*, %struct.rtx_def** %rtx1177, align 8
  %fld1178 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %564, i32 0, i32 1
  %arrayidx1179 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1178, i32 0, i64 0
  %rtx1180 = bitcast %union.rtunion_def* %arrayidx1179 to %struct.rtx_def**
  %565 = load %struct.rtx_def*, %struct.rtx_def** %rtx1180, align 8
  %566 = load i32, i32* %mode, align 4
  %call1181 = call i64 @nonzero_bits(%struct.rtx_def* %565, i32 %566)
  %cmp1182 = icmp eq i64 %call1181, 1
  br i1 %cmp1182, label %if.then.1184, label %if.end.1192

if.then.1184:                                     ; preds = %land.lhs.true.1174
  %567 = load i32, i32* %mode, align 4
  %568 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1185 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %568, i32 0, i32 1
  %arrayidx1186 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1185, i32 0, i64 0
  %rtx1187 = bitcast %union.rtunion_def* %arrayidx1186 to %struct.rtx_def**
  %569 = load %struct.rtx_def*, %struct.rtx_def** %rtx1187, align 8
  %fld1188 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %569, i32 0, i32 1
  %arrayidx1189 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1188, i32 0, i64 0
  %rtx1190 = bitcast %union.rtunion_def* %arrayidx1189 to %struct.rtx_def**
  %570 = load %struct.rtx_def*, %struct.rtx_def** %rtx1190, align 8
  %571 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 63), align 8
  %call1191 = call %struct.rtx_def* @gen_binary(i32 75, i32 %567, %struct.rtx_def* %570, %struct.rtx_def* %571)
  store %struct.rtx_def* %call1191, %struct.rtx_def** %retval
  br label %return

if.end.1192:                                      ; preds = %land.lhs.true.1174, %land.lhs.true.1165, %if.end.1157
  %572 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %572, i32 0, i32 1
  %arrayidx1194 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1193, i32 0, i64 0
  %rtx1195 = bitcast %union.rtunion_def* %arrayidx1194 to %struct.rtx_def**
  %573 = load %struct.rtx_def*, %struct.rtx_def** %rtx1195, align 8
  %574 = bitcast %struct.rtx_def* %573 to i32*
  %bf.load1196 = load i32, i32* %574, align 8
  %bf.clear1197 = and i32 %bf.load1196, 65535
  %cmp1198 = icmp eq i32 %bf.clear1197, 87
  br i1 %cmp1198, label %if.then.1200, label %if.end.1218

if.then.1200:                                     ; preds = %if.end.1192
  %575 = load i32, i32* %mode, align 4
  %576 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1201 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %576, i32 0, i32 1
  %arrayidx1202 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1201, i32 0, i64 0
  %rtx1203 = bitcast %union.rtunion_def* %arrayidx1202 to %struct.rtx_def**
  %577 = load %struct.rtx_def*, %struct.rtx_def** %rtx1203, align 8
  %fld1204 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %577, i32 0, i32 1
  %arrayidx1205 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1204, i32 0, i64 0
  %rtx1206 = bitcast %union.rtunion_def* %arrayidx1205 to %struct.rtx_def**
  %578 = load %struct.rtx_def*, %struct.rtx_def** %rtx1206, align 8
  %579 = load i32, i32* %mode, align 4
  %call1207 = call %struct.rtx_def* @simplify_unary_operation(i32 77, i32 %575, %struct.rtx_def* %578, i32 %579)
  store %struct.rtx_def* %call1207, %struct.rtx_def** %temp, align 8
  %580 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %tobool1208 = icmp ne %struct.rtx_def* %580, null
  br i1 %tobool1208, label %if.then.1209, label %if.end.1217

if.then.1209:                                     ; preds = %if.then.1200
  %581 = load i32, i32* %mode, align 4
  %582 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %583 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1210 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %583, i32 0, i32 1
  %arrayidx1211 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1210, i32 0, i64 0
  %rtx1212 = bitcast %union.rtunion_def* %arrayidx1211 to %struct.rtx_def**
  %584 = load %struct.rtx_def*, %struct.rtx_def** %rtx1212, align 8
  %fld1213 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %584, i32 0, i32 1
  %arrayidx1214 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1213, i32 0, i64 1
  %rtx1215 = bitcast %union.rtunion_def* %arrayidx1214 to %struct.rtx_def**
  %585 = load %struct.rtx_def*, %struct.rtx_def** %rtx1215, align 8
  %call1216 = call %struct.rtx_def* @gen_binary(i32 87, i32 %581, %struct.rtx_def* %582, %struct.rtx_def* %585)
  store %struct.rtx_def* %call1216, %struct.rtx_def** %retval
  br label %return

if.end.1217:                                      ; preds = %if.then.1200
  br label %if.end.1218

if.end.1218:                                      ; preds = %if.end.1217, %if.end.1192
  %586 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1219 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %586, i32 0, i32 1
  %arrayidx1220 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1219, i32 0, i64 0
  %rtx1221 = bitcast %union.rtunion_def* %arrayidx1220 to %struct.rtx_def**
  %587 = load %struct.rtx_def*, %struct.rtx_def** %rtx1221, align 8
  %call1222 = call %struct.rtx_def* @expand_compound_operation(%struct.rtx_def* %587)
  store %struct.rtx_def* %call1222, %struct.rtx_def** %temp, align 8
  %588 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %589 = bitcast %struct.rtx_def* %588 to i32*
  %bf.load1223 = load i32, i32* %589, align 8
  %bf.clear1224 = and i32 %bf.load1223, 65535
  %cmp1225 = icmp eq i32 %bf.clear1224, 89
  br i1 %cmp1225, label %land.lhs.true.1227, label %if.end.1260

land.lhs.true.1227:                               ; preds = %if.end.1218
  %590 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld1228 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %590, i32 0, i32 1
  %arrayidx1229 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1228, i32 0, i64 1
  %rtx1230 = bitcast %union.rtunion_def* %arrayidx1229 to %struct.rtx_def**
  %591 = load %struct.rtx_def*, %struct.rtx_def** %rtx1230, align 8
  %592 = bitcast %struct.rtx_def* %591 to i32*
  %bf.load1231 = load i32, i32* %592, align 8
  %bf.clear1232 = and i32 %bf.load1231, 65535
  %cmp1233 = icmp eq i32 %bf.clear1232, 54
  br i1 %cmp1233, label %land.lhs.true.1235, label %if.end.1260

land.lhs.true.1235:                               ; preds = %land.lhs.true.1227
  %593 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld1236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %593, i32 0, i32 1
  %arrayidx1237 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1236, i32 0, i64 1
  %rtx1238 = bitcast %union.rtunion_def* %arrayidx1237 to %struct.rtx_def**
  %594 = load %struct.rtx_def*, %struct.rtx_def** %rtx1238, align 8
  %fld1239 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %594, i32 0, i32 1
  %arrayidx1240 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1239, i32 0, i64 0
  %rtwint1241 = bitcast %union.rtunion_def* %arrayidx1240 to i64*
  %595 = load i64, i64* %rtwint1241, align 8
  %596 = load i32, i32* %mode, align 4
  %idxprom1242 = sext i32 %596 to i64
  %arrayidx1243 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1242
  %597 = load i16, i16* %arrayidx1243, align 2
  %conv1244 = zext i16 %597 to i32
  %sub = sub nsw i32 %conv1244, 1
  %conv1245 = sext i32 %sub to i64
  %cmp1246 = icmp eq i64 %595, %conv1245
  br i1 %cmp1246, label %if.then.1248, label %if.end.1260

if.then.1248:                                     ; preds = %land.lhs.true.1235
  %598 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %599 = load i32, i32* %mode, align 4
  %600 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld1249 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %600, i32 0, i32 1
  %arrayidx1250 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1249, i32 0, i64 0
  %rtx1251 = bitcast %union.rtunion_def* %arrayidx1250 to %struct.rtx_def**
  %601 = load %struct.rtx_def*, %struct.rtx_def** %rtx1251, align 8
  %602 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld1252 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %602, i32 0, i32 1
  %arrayidx1253 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1252, i32 0, i64 1
  %rtx1254 = bitcast %union.rtunion_def* %arrayidx1253 to %struct.rtx_def**
  %603 = load %struct.rtx_def*, %struct.rtx_def** %rtx1254, align 8
  %fld1255 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %603, i32 0, i32 1
  %arrayidx1256 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1255, i32 0, i64 0
  %rtwint1257 = bitcast %union.rtunion_def* %arrayidx1256 to i64*
  %604 = load i64, i64* %rtwint1257, align 8
  %conv1258 = trunc i64 %604 to i32
  %call1259 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* %598, i32 90, i32 %599, %struct.rtx_def* %601, i32 %conv1258)
  store %struct.rtx_def* %call1259, %struct.rtx_def** %retval
  br label %return

if.end.1260:                                      ; preds = %land.lhs.true.1235, %land.lhs.true.1227, %if.end.1218
  %605 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %606 = bitcast %struct.rtx_def* %605 to i32*
  %bf.load1261 = load i32, i32* %606, align 8
  %bf.clear1262 = and i32 %bf.load1261, 65535
  %cmp1263 = icmp ne i32 %bf.clear1262, 61
  br i1 %cmp1263, label %land.lhs.true.1265, label %if.end.1319

land.lhs.true.1265:                               ; preds = %if.end.1260
  %607 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %608 = bitcast %struct.rtx_def* %607 to i32*
  %bf.load1266 = load i32, i32* %608, align 8
  %bf.clear1267 = and i32 %bf.load1266, 65535
  %cmp1268 = icmp eq i32 %bf.clear1267, 63
  br i1 %cmp1268, label %land.lhs.true.1270, label %land.lhs.true.1278

land.lhs.true.1270:                               ; preds = %land.lhs.true.1265
  %609 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld1271 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %609, i32 0, i32 1
  %arrayidx1272 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1271, i32 0, i64 0
  %rtx1273 = bitcast %union.rtunion_def* %arrayidx1272 to %struct.rtx_def**
  %610 = load %struct.rtx_def*, %struct.rtx_def** %rtx1273, align 8
  %611 = bitcast %struct.rtx_def* %610 to i32*
  %bf.load1274 = load i32, i32* %611, align 8
  %bf.clear1275 = and i32 %bf.load1274, 65535
  %cmp1276 = icmp eq i32 %bf.clear1275, 61
  br i1 %cmp1276, label %if.end.1319, label %land.lhs.true.1278

land.lhs.true.1278:                               ; preds = %land.lhs.true.1270, %land.lhs.true.1265
  %612 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %613 = load i32, i32* %mode, align 4
  %call1279 = call i64 @nonzero_bits(%struct.rtx_def* %612, i32 %613)
  %call1280 = call i32 @exact_log2_wide(i64 %call1279)
  store i32 %call1280, i32* %i, align 4
  %cmp1281 = icmp sge i32 %call1280, 0
  br i1 %cmp1281, label %if.then.1283, label %if.end.1319

if.then.1283:                                     ; preds = %land.lhs.true.1278
  %614 = load i32, i32* %mode, align 4
  %615 = load i32, i32* %mode, align 4
  %616 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %617 = load i32, i32* %mode, align 4
  %idxprom1284 = sext i32 %617 to i64
  %arrayidx1285 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1284
  %618 = load i16, i16* %arrayidx1285, align 2
  %conv1286 = zext i16 %618 to i32
  %sub1287 = sub nsw i32 %conv1286, 1
  %619 = load i32, i32* %i, align 4
  %sub1288 = sub nsw i32 %sub1287, %619
  %call1289 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 87, i32 %615, %struct.rtx_def* %616, i32 %sub1288)
  %620 = load i32, i32* %mode, align 4
  %idxprom1290 = sext i32 %620 to i64
  %arrayidx1291 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1290
  %621 = load i16, i16* %arrayidx1291, align 2
  %conv1292 = zext i16 %621 to i32
  %sub1293 = sub nsw i32 %conv1292, 1
  %622 = load i32, i32* %i, align 4
  %sub1294 = sub nsw i32 %sub1293, %622
  %call1295 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 89, i32 %614, %struct.rtx_def* %call1289, i32 %sub1294)
  store %struct.rtx_def* %call1295, %struct.rtx_def** %temp1, align 8
  %623 = load %struct.rtx_def*, %struct.rtx_def** %temp1, align 8
  %624 = bitcast %struct.rtx_def* %623 to i32*
  %bf.load1296 = load i32, i32* %624, align 8
  %bf.clear1297 = and i32 %bf.load1296, 65535
  %cmp1298 = icmp ne i32 %bf.clear1297, 89
  br i1 %cmp1298, label %if.then.1317, label %lor.lhs.false.1300

lor.lhs.false.1300:                               ; preds = %if.then.1283
  %625 = load %struct.rtx_def*, %struct.rtx_def** %temp1, align 8
  %fld1301 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %625, i32 0, i32 1
  %arrayidx1302 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1301, i32 0, i64 0
  %rtx1303 = bitcast %union.rtunion_def* %arrayidx1302 to %struct.rtx_def**
  %626 = load %struct.rtx_def*, %struct.rtx_def** %rtx1303, align 8
  %627 = bitcast %struct.rtx_def* %626 to i32*
  %bf.load1304 = load i32, i32* %627, align 8
  %bf.clear1305 = and i32 %bf.load1304, 65535
  %cmp1306 = icmp ne i32 %bf.clear1305, 87
  br i1 %cmp1306, label %if.then.1317, label %lor.lhs.false.1308

lor.lhs.false.1308:                               ; preds = %lor.lhs.false.1300
  %628 = load %struct.rtx_def*, %struct.rtx_def** %temp1, align 8
  %fld1309 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %628, i32 0, i32 1
  %arrayidx1310 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1309, i32 0, i64 0
  %rtx1311 = bitcast %union.rtunion_def* %arrayidx1310 to %struct.rtx_def**
  %629 = load %struct.rtx_def*, %struct.rtx_def** %rtx1311, align 8
  %fld1312 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %629, i32 0, i32 1
  %arrayidx1313 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1312, i32 0, i64 0
  %rtx1314 = bitcast %union.rtunion_def* %arrayidx1313 to %struct.rtx_def**
  %630 = load %struct.rtx_def*, %struct.rtx_def** %rtx1314, align 8
  %631 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %cmp1315 = icmp ne %struct.rtx_def* %630, %631
  br i1 %cmp1315, label %if.then.1317, label %if.end.1318

if.then.1317:                                     ; preds = %lor.lhs.false.1308, %lor.lhs.false.1300, %if.then.1283
  %632 = load %struct.rtx_def*, %struct.rtx_def** %temp1, align 8
  store %struct.rtx_def* %632, %struct.rtx_def** %retval
  br label %return

if.end.1318:                                      ; preds = %lor.lhs.false.1308
  br label %if.end.1319

if.end.1319:                                      ; preds = %if.end.1318, %land.lhs.true.1278, %land.lhs.true.1270, %if.end.1260
  br label %sw.epilog.2887

sw.bb.1320:                                       ; preds = %if.end.682
  %633 = load i32, i32* %mode, align 4
  %idxprom1321 = sext i32 %633 to i64
  %arrayidx1322 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1321
  %634 = load i32, i32* %arrayidx1322, align 4
  %cmp1323 = icmp eq i32 %634, 3
  br i1 %cmp1323, label %if.then.1325, label %if.end.1326

if.then.1325:                                     ; preds = %sw.bb.1320
  br label %sw.epilog.2887

if.end.1326:                                      ; preds = %sw.bb.1320
  %635 = load i32, i32* %mode, align 4
  %idxprom1327 = sext i32 %635 to i64
  %arrayidx1328 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1327
  %636 = load i16, i16* %arrayidx1328, align 2
  %conv1329 = zext i16 %636 to i32
  %cmp1330 = icmp sle i32 %conv1329, 64
  br i1 %cmp1330, label %if.then.1332, label %if.end.1348

if.then.1332:                                     ; preds = %if.end.1326
  %637 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1333 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %637, i32 0, i32 1
  %arrayidx1334 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1333, i32 0, i64 0
  %rtx1335 = bitcast %union.rtunion_def* %arrayidx1334 to %struct.rtx_def**
  %638 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1336 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %638, i32 0, i32 1
  %arrayidx1337 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1336, i32 0, i64 0
  %rtx1338 = bitcast %union.rtunion_def* %arrayidx1337 to %struct.rtx_def**
  %639 = load %struct.rtx_def*, %struct.rtx_def** %rtx1338, align 8
  %640 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1339 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %640, i32 0, i32 1
  %arrayidx1340 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1339, i32 0, i64 0
  %rtx1341 = bitcast %union.rtunion_def* %arrayidx1340 to %struct.rtx_def**
  %641 = load %struct.rtx_def*, %struct.rtx_def** %rtx1341, align 8
  %642 = bitcast %struct.rtx_def* %641 to i32*
  %bf.load1342 = load i32, i32* %642, align 8
  %bf.lshr1343 = lshr i32 %bf.load1342, 16
  %bf.clear1344 = and i32 %bf.lshr1343, 255
  %643 = load i32, i32* %mode, align 4
  %idxprom1345 = sext i32 %643 to i64
  %arrayidx1346 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom1345
  %644 = load i64, i64* %arrayidx1346, align 8
  %call1347 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %639, i32 %bf.clear1344, i64 %644, %struct.rtx_def* null, i32 0)
  call void @do_SUBST(%struct.rtx_def** %rtx1335, %struct.rtx_def* %call1347)
  br label %if.end.1348

if.end.1348:                                      ; preds = %if.then.1332, %if.end.1326
  %645 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1349 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %645, i32 0, i32 1
  %arrayidx1350 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1349, i32 0, i64 0
  %rtx1351 = bitcast %union.rtunion_def* %arrayidx1350 to %struct.rtx_def**
  %646 = load %struct.rtx_def*, %struct.rtx_def** %rtx1351, align 8
  %647 = bitcast %struct.rtx_def* %646 to i32*
  %bf.load1352 = load i32, i32* %647, align 8
  %bf.clear1353 = and i32 %bf.load1352, 65535
  %cmp1354 = icmp eq i32 %bf.clear1353, 120
  br i1 %cmp1354, label %land.lhs.true.1364, label %lor.lhs.false.1356

lor.lhs.false.1356:                               ; preds = %if.end.1348
  %648 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1357 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %648, i32 0, i32 1
  %arrayidx1358 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1357, i32 0, i64 0
  %rtx1359 = bitcast %union.rtunion_def* %arrayidx1358 to %struct.rtx_def**
  %649 = load %struct.rtx_def*, %struct.rtx_def** %rtx1359, align 8
  %650 = bitcast %struct.rtx_def* %649 to i32*
  %bf.load1360 = load i32, i32* %650, align 8
  %bf.clear1361 = and i32 %bf.load1360, 65535
  %cmp1362 = icmp eq i32 %bf.clear1361, 121
  br i1 %cmp1362, label %land.lhs.true.1364, label %if.end.1383

land.lhs.true.1364:                               ; preds = %lor.lhs.false.1356, %if.end.1348
  %651 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1365 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %651, i32 0, i32 1
  %arrayidx1366 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1365, i32 0, i64 0
  %rtx1367 = bitcast %union.rtunion_def* %arrayidx1366 to %struct.rtx_def**
  %652 = load %struct.rtx_def*, %struct.rtx_def** %rtx1367, align 8
  %fld1368 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %652, i32 0, i32 1
  %arrayidx1369 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1368, i32 0, i64 0
  %rtx1370 = bitcast %union.rtunion_def* %arrayidx1369 to %struct.rtx_def**
  %653 = load %struct.rtx_def*, %struct.rtx_def** %rtx1370, align 8
  %654 = bitcast %struct.rtx_def* %653 to i32*
  %bf.load1371 = load i32, i32* %654, align 8
  %bf.lshr1372 = lshr i32 %bf.load1371, 16
  %bf.clear1373 = and i32 %bf.lshr1372, 255
  %655 = load i32, i32* %mode, align 4
  %cmp1374 = icmp eq i32 %bf.clear1373, %655
  br i1 %cmp1374, label %if.then.1376, label %if.end.1383

if.then.1376:                                     ; preds = %land.lhs.true.1364
  %656 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1377 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %656, i32 0, i32 1
  %arrayidx1378 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1377, i32 0, i64 0
  %rtx1379 = bitcast %union.rtunion_def* %arrayidx1378 to %struct.rtx_def**
  %657 = load %struct.rtx_def*, %struct.rtx_def** %rtx1379, align 8
  %fld1380 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %657, i32 0, i32 1
  %arrayidx1381 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1380, i32 0, i64 0
  %rtx1382 = bitcast %union.rtunion_def* %arrayidx1381 to %struct.rtx_def**
  %658 = load %struct.rtx_def*, %struct.rtx_def** %rtx1382, align 8
  store %struct.rtx_def* %658, %struct.rtx_def** %retval
  br label %return

if.end.1383:                                      ; preds = %land.lhs.true.1364, %lor.lhs.false.1356
  %659 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1384 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %659, i32 0, i32 1
  %arrayidx1385 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1384, i32 0, i64 0
  %rtx1386 = bitcast %union.rtunion_def* %arrayidx1385 to %struct.rtx_def**
  %660 = load %struct.rtx_def*, %struct.rtx_def** %rtx1386, align 8
  %661 = bitcast %struct.rtx_def* %660 to i32*
  %bf.load1387 = load i32, i32* %661, align 8
  %bf.clear1388 = and i32 %bf.load1387, 65535
  %cmp1389 = icmp eq i32 %bf.clear1388, 129
  br i1 %cmp1389, label %land.lhs.true.1399, label %lor.lhs.false.1391

lor.lhs.false.1391:                               ; preds = %if.end.1383
  %662 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1392 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %662, i32 0, i32 1
  %arrayidx1393 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1392, i32 0, i64 0
  %rtx1394 = bitcast %union.rtunion_def* %arrayidx1393 to %struct.rtx_def**
  %663 = load %struct.rtx_def*, %struct.rtx_def** %rtx1394, align 8
  %664 = bitcast %struct.rtx_def* %663 to i32*
  %bf.load1395 = load i32, i32* %664, align 8
  %bf.clear1396 = and i32 %bf.load1395, 65535
  %cmp1397 = icmp eq i32 %bf.clear1396, 77
  br i1 %cmp1397, label %land.lhs.true.1399, label %if.end.1452

land.lhs.true.1399:                               ; preds = %lor.lhs.false.1391, %if.end.1383
  %665 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1400 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %665, i32 0, i32 1
  %arrayidx1401 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1400, i32 0, i64 0
  %rtx1402 = bitcast %union.rtunion_def* %arrayidx1401 to %struct.rtx_def**
  %666 = load %struct.rtx_def*, %struct.rtx_def** %rtx1402, align 8
  %fld1403 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %666, i32 0, i32 1
  %arrayidx1404 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1403, i32 0, i64 0
  %rtx1405 = bitcast %union.rtunion_def* %arrayidx1404 to %struct.rtx_def**
  %667 = load %struct.rtx_def*, %struct.rtx_def** %rtx1405, align 8
  %668 = bitcast %struct.rtx_def* %667 to i32*
  %bf.load1406 = load i32, i32* %668, align 8
  %bf.clear1407 = and i32 %bf.load1406, 65535
  %cmp1408 = icmp eq i32 %bf.clear1407, 120
  br i1 %cmp1408, label %land.lhs.true.1421, label %lor.lhs.false.1410

lor.lhs.false.1410:                               ; preds = %land.lhs.true.1399
  %669 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1411 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %669, i32 0, i32 1
  %arrayidx1412 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1411, i32 0, i64 0
  %rtx1413 = bitcast %union.rtunion_def* %arrayidx1412 to %struct.rtx_def**
  %670 = load %struct.rtx_def*, %struct.rtx_def** %rtx1413, align 8
  %fld1414 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %670, i32 0, i32 1
  %arrayidx1415 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1414, i32 0, i64 0
  %rtx1416 = bitcast %union.rtunion_def* %arrayidx1415 to %struct.rtx_def**
  %671 = load %struct.rtx_def*, %struct.rtx_def** %rtx1416, align 8
  %672 = bitcast %struct.rtx_def* %671 to i32*
  %bf.load1417 = load i32, i32* %672, align 8
  %bf.clear1418 = and i32 %bf.load1417, 65535
  %cmp1419 = icmp eq i32 %bf.clear1418, 121
  br i1 %cmp1419, label %land.lhs.true.1421, label %if.end.1452

land.lhs.true.1421:                               ; preds = %lor.lhs.false.1410, %land.lhs.true.1399
  %673 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1422 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %673, i32 0, i32 1
  %arrayidx1423 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1422, i32 0, i64 0
  %rtx1424 = bitcast %union.rtunion_def* %arrayidx1423 to %struct.rtx_def**
  %674 = load %struct.rtx_def*, %struct.rtx_def** %rtx1424, align 8
  %fld1425 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %674, i32 0, i32 1
  %arrayidx1426 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1425, i32 0, i64 0
  %rtx1427 = bitcast %union.rtunion_def* %arrayidx1426 to %struct.rtx_def**
  %675 = load %struct.rtx_def*, %struct.rtx_def** %rtx1427, align 8
  %fld1428 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %675, i32 0, i32 1
  %arrayidx1429 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1428, i32 0, i64 0
  %rtx1430 = bitcast %union.rtunion_def* %arrayidx1429 to %struct.rtx_def**
  %676 = load %struct.rtx_def*, %struct.rtx_def** %rtx1430, align 8
  %677 = bitcast %struct.rtx_def* %676 to i32*
  %bf.load1431 = load i32, i32* %677, align 8
  %bf.lshr1432 = lshr i32 %bf.load1431, 16
  %bf.clear1433 = and i32 %bf.lshr1432, 255
  %678 = load i32, i32* %mode, align 4
  %cmp1434 = icmp eq i32 %bf.clear1433, %678
  br i1 %cmp1434, label %if.then.1436, label %if.end.1452

if.then.1436:                                     ; preds = %land.lhs.true.1421
  %679 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1437 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %679, i32 0, i32 1
  %arrayidx1438 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1437, i32 0, i64 0
  %rtx1439 = bitcast %union.rtunion_def* %arrayidx1438 to %struct.rtx_def**
  %680 = load %struct.rtx_def*, %struct.rtx_def** %rtx1439, align 8
  %681 = bitcast %struct.rtx_def* %680 to i32*
  %bf.load1440 = load i32, i32* %681, align 8
  %bf.clear1441 = and i32 %bf.load1440, 65535
  %682 = load i32, i32* %mode, align 4
  %683 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1442 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %683, i32 0, i32 1
  %arrayidx1443 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1442, i32 0, i64 0
  %rtx1444 = bitcast %union.rtunion_def* %arrayidx1443 to %struct.rtx_def**
  %684 = load %struct.rtx_def*, %struct.rtx_def** %rtx1444, align 8
  %fld1445 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %684, i32 0, i32 1
  %arrayidx1446 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1445, i32 0, i64 0
  %rtx1447 = bitcast %union.rtunion_def* %arrayidx1446 to %struct.rtx_def**
  %685 = load %struct.rtx_def*, %struct.rtx_def** %rtx1447, align 8
  %fld1448 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %685, i32 0, i32 1
  %arrayidx1449 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1448, i32 0, i64 0
  %rtx1450 = bitcast %union.rtunion_def* %arrayidx1449 to %struct.rtx_def**
  %686 = load %struct.rtx_def*, %struct.rtx_def** %rtx1450, align 8
  %687 = load i32, i32* %mode, align 4
  %call1451 = call %struct.rtx_def* @simplify_gen_unary(i32 %bf.clear1441, i32 %682, %struct.rtx_def* %686, i32 %687)
  store %struct.rtx_def* %call1451, %struct.rtx_def** %retval
  br label %return

if.end.1452:                                      ; preds = %land.lhs.true.1421, %lor.lhs.false.1410, %lor.lhs.false.1391
  %688 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1453 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %688, i32 0, i32 1
  %arrayidx1454 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1453, i32 0, i64 0
  %rtx1455 = bitcast %union.rtunion_def* %arrayidx1454 to %struct.rtx_def**
  %689 = load %struct.rtx_def*, %struct.rtx_def** %rtx1455, align 8
  %690 = bitcast %struct.rtx_def* %689 to i32*
  %bf.load1456 = load i32, i32* %690, align 8
  %bf.clear1457 = and i32 %bf.load1456, 65535
  %cmp1458 = icmp eq i32 %bf.clear1457, 63
  br i1 %cmp1458, label %land.lhs.true.1460, label %if.end.1484

land.lhs.true.1460:                               ; preds = %if.end.1452
  %691 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1461 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %691, i32 0, i32 1
  %arrayidx1462 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1461, i32 0, i64 0
  %rtx1463 = bitcast %union.rtunion_def* %arrayidx1462 to %struct.rtx_def**
  %692 = load %struct.rtx_def*, %struct.rtx_def** %rtx1463, align 8
  %fld1464 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %692, i32 0, i32 1
  %arrayidx1465 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1464, i32 0, i64 0
  %rtx1466 = bitcast %union.rtunion_def* %arrayidx1465 to %struct.rtx_def**
  %693 = load %struct.rtx_def*, %struct.rtx_def** %rtx1466, align 8
  %694 = bitcast %struct.rtx_def* %693 to i32*
  %bf.load1467 = load i32, i32* %694, align 8
  %bf.clear1468 = and i32 %bf.load1467, 65535
  %cmp1469 = icmp eq i32 %bf.clear1468, 122
  br i1 %cmp1469, label %land.lhs.true.1471, label %if.end.1484

land.lhs.true.1471:                               ; preds = %land.lhs.true.1460
  %695 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1472 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %695, i32 0, i32 1
  %arrayidx1473 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1472, i32 0, i64 0
  %rtx1474 = bitcast %union.rtunion_def* %arrayidx1473 to %struct.rtx_def**
  %696 = load %struct.rtx_def*, %struct.rtx_def** %rtx1474, align 8
  %call1475 = call i32 @subreg_lowpart_p(%struct.rtx_def* %696)
  %tobool1476 = icmp ne i32 %call1475, 0
  br i1 %tobool1476, label %if.then.1477, label %if.end.1484

if.then.1477:                                     ; preds = %land.lhs.true.1471
  %697 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1478 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %697, i32 0, i32 1
  %arrayidx1479 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1478, i32 0, i64 0
  %rtx1480 = bitcast %union.rtunion_def* %arrayidx1479 to %struct.rtx_def**
  %698 = load %struct.rtx_def*, %struct.rtx_def** %rtx1480, align 8
  %fld1481 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %698, i32 0, i32 1
  %arrayidx1482 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1481, i32 0, i64 0
  %rtx1483 = bitcast %union.rtunion_def* %arrayidx1482 to %struct.rtx_def**
  %699 = load %struct.rtx_def*, %struct.rtx_def** %rtx1483, align 8
  store %struct.rtx_def* %699, %struct.rtx_def** %retval
  br label %return

if.end.1484:                                      ; preds = %land.lhs.true.1471, %land.lhs.true.1460, %if.end.1452
  %700 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1485 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %700, i32 0, i32 1
  %arrayidx1486 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1485, i32 0, i64 0
  %rtx1487 = bitcast %union.rtunion_def* %arrayidx1486 to %struct.rtx_def**
  %701 = load %struct.rtx_def*, %struct.rtx_def** %rtx1487, align 8
  %702 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1488 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %702, i32 0, i32 1
  %arrayidx1489 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1488, i32 0, i64 0
  %rtx1490 = bitcast %union.rtunion_def* %arrayidx1489 to %struct.rtx_def**
  %703 = load %struct.rtx_def*, %struct.rtx_def** %rtx1490, align 8
  %704 = bitcast %struct.rtx_def* %703 to i32*
  %bf.load1491 = load i32, i32* %704, align 8
  %bf.lshr1492 = lshr i32 %bf.load1491, 16
  %bf.clear1493 = and i32 %bf.lshr1492, 255
  %call1494 = call i32 @num_sign_bit_copies(%struct.rtx_def* %701, i32 %bf.clear1493)
  %705 = load i32, i32* %mode, align 4
  %idxprom1495 = sext i32 %705 to i64
  %arrayidx1496 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1495
  %706 = load i16, i16* %arrayidx1496, align 2
  %conv1497 = zext i16 %706 to i32
  %add = add nsw i32 %conv1497, 1
  %cmp1498 = icmp uge i32 %call1494, %add
  br i1 %cmp1498, label %land.lhs.true.1500, label %if.end.1524

land.lhs.true.1500:                               ; preds = %if.end.1484
  %707 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1501 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %707, i32 0, i32 1
  %arrayidx1502 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1501, i32 0, i64 0
  %rtx1503 = bitcast %union.rtunion_def* %arrayidx1502 to %struct.rtx_def**
  %708 = load %struct.rtx_def*, %struct.rtx_def** %rtx1503, align 8
  %709 = bitcast %struct.rtx_def* %708 to i32*
  %bf.load1504 = load i32, i32* %709, align 8
  %bf.clear1505 = and i32 %bf.load1504, 65535
  %cmp1506 = icmp eq i32 %bf.clear1505, 90
  br i1 %cmp1506, label %land.lhs.true.1508, label %if.then.1519

land.lhs.true.1508:                               ; preds = %land.lhs.true.1500
  %710 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1509 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %710, i32 0, i32 1
  %arrayidx1510 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1509, i32 0, i64 0
  %rtx1511 = bitcast %union.rtunion_def* %arrayidx1510 to %struct.rtx_def**
  %711 = load %struct.rtx_def*, %struct.rtx_def** %rtx1511, align 8
  %fld1512 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %711, i32 0, i32 1
  %arrayidx1513 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1512, i32 0, i64 0
  %rtx1514 = bitcast %union.rtunion_def* %arrayidx1513 to %struct.rtx_def**
  %712 = load %struct.rtx_def*, %struct.rtx_def** %rtx1514, align 8
  %713 = bitcast %struct.rtx_def* %712 to i32*
  %bf.load1515 = load i32, i32* %713, align 8
  %bf.clear1516 = and i32 %bf.load1515, 65535
  %cmp1517 = icmp eq i32 %bf.clear1516, 78
  br i1 %cmp1517, label %if.end.1524, label %if.then.1519

if.then.1519:                                     ; preds = %land.lhs.true.1508, %land.lhs.true.1500
  %714 = load i32, i32* %mode, align 4
  %715 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1520 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %715, i32 0, i32 1
  %arrayidx1521 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1520, i32 0, i64 0
  %rtx1522 = bitcast %union.rtunion_def* %arrayidx1521 to %struct.rtx_def**
  %716 = load %struct.rtx_def*, %struct.rtx_def** %rtx1522, align 8
  %call1523 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %714, %struct.rtx_def* %716)
  store %struct.rtx_def* %call1523, %struct.rtx_def** %retval
  br label %return

if.end.1524:                                      ; preds = %land.lhs.true.1508, %if.end.1484
  %717 = load i32, i32* %mode, align 4
  %idxprom1525 = sext i32 %717 to i64
  %arrayidx1526 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1525
  %718 = load i16, i16* %arrayidx1526, align 2
  %conv1527 = zext i16 %718 to i32
  %cmp1528 = icmp sle i32 %conv1527, 64
  br i1 %cmp1528, label %land.lhs.true.1530, label %if.end.1551

land.lhs.true.1530:                               ; preds = %if.end.1524
  %719 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1531 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %719, i32 0, i32 1
  %arrayidx1532 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1531, i32 0, i64 0
  %rtx1533 = bitcast %union.rtunion_def* %arrayidx1532 to %struct.rtx_def**
  %720 = load %struct.rtx_def*, %struct.rtx_def** %rtx1533, align 8
  %721 = bitcast %struct.rtx_def* %720 to i32*
  %bf.load1534 = load i32, i32* %721, align 8
  %bf.clear1535 = and i32 %bf.load1534, 65535
  %idxprom1536 = sext i32 %bf.clear1535 to i64
  %arrayidx1537 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom1536
  %722 = load i8, i8* %arrayidx1537, align 1
  %conv1538 = sext i8 %722 to i32
  %cmp1539 = icmp eq i32 %conv1538, 60
  br i1 %cmp1539, label %land.lhs.true.1541, label %if.end.1551

land.lhs.true.1541:                               ; preds = %land.lhs.true.1530
  %723 = load i32, i32* %mode, align 4
  %idxprom1542 = sext i32 %723 to i64
  %arrayidx1543 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom1542
  %724 = load i64, i64* %arrayidx1543, align 8
  %neg = xor i64 %724, -1
  %and = and i64 1, %neg
  %cmp1544 = icmp eq i64 %and, 0
  br i1 %cmp1544, label %if.then.1546, label %if.end.1551

if.then.1546:                                     ; preds = %land.lhs.true.1541
  %725 = load i32, i32* %mode, align 4
  %726 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1547 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %726, i32 0, i32 1
  %arrayidx1548 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1547, i32 0, i64 0
  %rtx1549 = bitcast %union.rtunion_def* %arrayidx1548 to %struct.rtx_def**
  %727 = load %struct.rtx_def*, %struct.rtx_def** %rtx1549, align 8
  %call1550 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %725, %struct.rtx_def* %727)
  store %struct.rtx_def* %call1550, %struct.rtx_def** %retval
  br label %return

if.end.1551:                                      ; preds = %land.lhs.true.1541, %land.lhs.true.1530, %if.end.1524
  %728 = load i32, i32* %mode, align 4
  %idxprom1552 = sext i32 %728 to i64
  %arrayidx1553 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1552
  %729 = load i16, i16* %arrayidx1553, align 2
  %conv1554 = zext i16 %729 to i32
  %cmp1555 = icmp sle i32 %conv1554, 64
  br i1 %cmp1555, label %land.lhs.true.1557, label %if.end.1583

land.lhs.true.1557:                               ; preds = %if.end.1551
  %730 = load i32, i32* %mode, align 4
  %idxprom1558 = sext i32 %730 to i64
  %arrayidx1559 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom1558
  %731 = load i64, i64* %arrayidx1559, align 8
  %neg1560 = xor i64 %731, -1
  %and1561 = and i64 1, %neg1560
  %cmp1562 = icmp eq i64 %and1561, 0
  br i1 %cmp1562, label %land.lhs.true.1564, label %if.end.1583

land.lhs.true.1564:                               ; preds = %land.lhs.true.1557
  %732 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1565 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %732, i32 0, i32 1
  %arrayidx1566 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1565, i32 0, i64 0
  %rtx1567 = bitcast %union.rtunion_def* %arrayidx1566 to %struct.rtx_def**
  %733 = load %struct.rtx_def*, %struct.rtx_def** %rtx1567, align 8
  %call1568 = call %struct.rtx_def* @get_last_value(%struct.rtx_def* %733)
  store %struct.rtx_def* %call1568, %struct.rtx_def** %temp, align 8
  %tobool1569 = icmp ne %struct.rtx_def* %call1568, null
  br i1 %tobool1569, label %land.lhs.true.1570, label %if.end.1583

land.lhs.true.1570:                               ; preds = %land.lhs.true.1564
  %734 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %735 = bitcast %struct.rtx_def* %734 to i32*
  %bf.load1571 = load i32, i32* %735, align 8
  %bf.clear1572 = and i32 %bf.load1571, 65535
  %idxprom1573 = sext i32 %bf.clear1572 to i64
  %arrayidx1574 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom1573
  %736 = load i8, i8* %arrayidx1574, align 1
  %conv1575 = sext i8 %736 to i32
  %cmp1576 = icmp eq i32 %conv1575, 60
  br i1 %cmp1576, label %if.then.1578, label %if.end.1583

if.then.1578:                                     ; preds = %land.lhs.true.1570
  %737 = load i32, i32* %mode, align 4
  %738 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1579 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %738, i32 0, i32 1
  %arrayidx1580 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1579, i32 0, i64 0
  %rtx1581 = bitcast %union.rtunion_def* %arrayidx1580 to %struct.rtx_def**
  %739 = load %struct.rtx_def*, %struct.rtx_def** %rtx1581, align 8
  %call1582 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %737, %struct.rtx_def* %739)
  store %struct.rtx_def* %call1582, %struct.rtx_def** %retval
  br label %return

if.end.1583:                                      ; preds = %land.lhs.true.1570, %land.lhs.true.1564, %land.lhs.true.1557, %if.end.1551
  br label %sw.epilog.2887

sw.bb.1584:                                       ; preds = %if.end.682
  %740 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1585 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %740, i32 0, i32 1
  %arrayidx1586 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1585, i32 0, i64 0
  %rtx1587 = bitcast %union.rtunion_def* %arrayidx1586 to %struct.rtx_def**
  %741 = load %struct.rtx_def*, %struct.rtx_def** %rtx1587, align 8
  %742 = bitcast %struct.rtx_def* %741 to i32*
  %bf.load1588 = load i32, i32* %742, align 8
  %bf.clear1589 = and i32 %bf.load1588, 65535
  %cmp1590 = icmp eq i32 %bf.clear1589, 123
  br i1 %cmp1590, label %land.lhs.true.1592, label %if.end.1611

land.lhs.true.1592:                               ; preds = %sw.bb.1584
  %743 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1593 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %743, i32 0, i32 1
  %arrayidx1594 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1593, i32 0, i64 0
  %rtx1595 = bitcast %union.rtunion_def* %arrayidx1594 to %struct.rtx_def**
  %744 = load %struct.rtx_def*, %struct.rtx_def** %rtx1595, align 8
  %fld1596 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %744, i32 0, i32 1
  %arrayidx1597 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1596, i32 0, i64 0
  %rtx1598 = bitcast %union.rtunion_def* %arrayidx1597 to %struct.rtx_def**
  %745 = load %struct.rtx_def*, %struct.rtx_def** %rtx1598, align 8
  %746 = bitcast %struct.rtx_def* %745 to i32*
  %bf.load1599 = load i32, i32* %746, align 8
  %bf.lshr1600 = lshr i32 %bf.load1599, 16
  %bf.clear1601 = and i32 %bf.lshr1600, 255
  %747 = load i32, i32* %mode, align 4
  %cmp1602 = icmp eq i32 %bf.clear1601, %747
  br i1 %cmp1602, label %if.then.1604, label %if.end.1611

if.then.1604:                                     ; preds = %land.lhs.true.1592
  %748 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1605 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %748, i32 0, i32 1
  %arrayidx1606 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1605, i32 0, i64 0
  %rtx1607 = bitcast %union.rtunion_def* %arrayidx1606 to %struct.rtx_def**
  %749 = load %struct.rtx_def*, %struct.rtx_def** %rtx1607, align 8
  %fld1608 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %749, i32 0, i32 1
  %arrayidx1609 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1608, i32 0, i64 0
  %rtx1610 = bitcast %union.rtunion_def* %arrayidx1609 to %struct.rtx_def**
  %750 = load %struct.rtx_def*, %struct.rtx_def** %rtx1610, align 8
  store %struct.rtx_def* %750, %struct.rtx_def** %retval
  br label %return

if.end.1611:                                      ; preds = %land.lhs.true.1592, %sw.bb.1584
  %751 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1612 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %751, i32 0, i32 1
  %arrayidx1613 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1612, i32 0, i64 0
  %rtx1614 = bitcast %union.rtunion_def* %arrayidx1613 to %struct.rtx_def**
  %752 = load %struct.rtx_def*, %struct.rtx_def** %rtx1614, align 8
  %753 = bitcast %struct.rtx_def* %752 to i32*
  %bf.load1615 = load i32, i32* %753, align 8
  %bf.clear1616 = and i32 %bf.load1615, 65535
  %cmp1617 = icmp eq i32 %bf.clear1616, 129
  br i1 %cmp1617, label %land.lhs.true.1627, label %lor.lhs.false.1619

lor.lhs.false.1619:                               ; preds = %if.end.1611
  %754 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1620 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %754, i32 0, i32 1
  %arrayidx1621 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1620, i32 0, i64 0
  %rtx1622 = bitcast %union.rtunion_def* %arrayidx1621 to %struct.rtx_def**
  %755 = load %struct.rtx_def*, %struct.rtx_def** %rtx1622, align 8
  %756 = bitcast %struct.rtx_def* %755 to i32*
  %bf.load1623 = load i32, i32* %756, align 8
  %bf.clear1624 = and i32 %bf.load1623, 65535
  %cmp1625 = icmp eq i32 %bf.clear1624, 77
  br i1 %cmp1625, label %land.lhs.true.1627, label %if.end.1669

land.lhs.true.1627:                               ; preds = %lor.lhs.false.1619, %if.end.1611
  %757 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1628 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %757, i32 0, i32 1
  %arrayidx1629 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1628, i32 0, i64 0
  %rtx1630 = bitcast %union.rtunion_def* %arrayidx1629 to %struct.rtx_def**
  %758 = load %struct.rtx_def*, %struct.rtx_def** %rtx1630, align 8
  %fld1631 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %758, i32 0, i32 1
  %arrayidx1632 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1631, i32 0, i64 0
  %rtx1633 = bitcast %union.rtunion_def* %arrayidx1632 to %struct.rtx_def**
  %759 = load %struct.rtx_def*, %struct.rtx_def** %rtx1633, align 8
  %760 = bitcast %struct.rtx_def* %759 to i32*
  %bf.load1634 = load i32, i32* %760, align 8
  %bf.clear1635 = and i32 %bf.load1634, 65535
  %cmp1636 = icmp eq i32 %bf.clear1635, 123
  br i1 %cmp1636, label %land.lhs.true.1638, label %if.end.1669

land.lhs.true.1638:                               ; preds = %land.lhs.true.1627
  %761 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1639 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %761, i32 0, i32 1
  %arrayidx1640 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1639, i32 0, i64 0
  %rtx1641 = bitcast %union.rtunion_def* %arrayidx1640 to %struct.rtx_def**
  %762 = load %struct.rtx_def*, %struct.rtx_def** %rtx1641, align 8
  %fld1642 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %762, i32 0, i32 1
  %arrayidx1643 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1642, i32 0, i64 0
  %rtx1644 = bitcast %union.rtunion_def* %arrayidx1643 to %struct.rtx_def**
  %763 = load %struct.rtx_def*, %struct.rtx_def** %rtx1644, align 8
  %fld1645 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %763, i32 0, i32 1
  %arrayidx1646 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1645, i32 0, i64 0
  %rtx1647 = bitcast %union.rtunion_def* %arrayidx1646 to %struct.rtx_def**
  %764 = load %struct.rtx_def*, %struct.rtx_def** %rtx1647, align 8
  %765 = bitcast %struct.rtx_def* %764 to i32*
  %bf.load1648 = load i32, i32* %765, align 8
  %bf.lshr1649 = lshr i32 %bf.load1648, 16
  %bf.clear1650 = and i32 %bf.lshr1649, 255
  %766 = load i32, i32* %mode, align 4
  %cmp1651 = icmp eq i32 %bf.clear1650, %766
  br i1 %cmp1651, label %if.then.1653, label %if.end.1669

if.then.1653:                                     ; preds = %land.lhs.true.1638
  %767 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1654 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %767, i32 0, i32 1
  %arrayidx1655 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1654, i32 0, i64 0
  %rtx1656 = bitcast %union.rtunion_def* %arrayidx1655 to %struct.rtx_def**
  %768 = load %struct.rtx_def*, %struct.rtx_def** %rtx1656, align 8
  %769 = bitcast %struct.rtx_def* %768 to i32*
  %bf.load1657 = load i32, i32* %769, align 8
  %bf.clear1658 = and i32 %bf.load1657, 65535
  %770 = load i32, i32* %mode, align 4
  %771 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1659 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %771, i32 0, i32 1
  %arrayidx1660 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1659, i32 0, i64 0
  %rtx1661 = bitcast %union.rtunion_def* %arrayidx1660 to %struct.rtx_def**
  %772 = load %struct.rtx_def*, %struct.rtx_def** %rtx1661, align 8
  %fld1662 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %772, i32 0, i32 1
  %arrayidx1663 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1662, i32 0, i64 0
  %rtx1664 = bitcast %union.rtunion_def* %arrayidx1663 to %struct.rtx_def**
  %773 = load %struct.rtx_def*, %struct.rtx_def** %rtx1664, align 8
  %fld1665 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %773, i32 0, i32 1
  %arrayidx1666 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1665, i32 0, i64 0
  %rtx1667 = bitcast %union.rtunion_def* %arrayidx1666 to %struct.rtx_def**
  %774 = load %struct.rtx_def*, %struct.rtx_def** %rtx1667, align 8
  %775 = load i32, i32* %mode, align 4
  %call1668 = call %struct.rtx_def* @simplify_gen_unary(i32 %bf.clear1658, i32 %770, %struct.rtx_def* %774, i32 %775)
  store %struct.rtx_def* %call1668, %struct.rtx_def** %retval
  br label %return

if.end.1669:                                      ; preds = %land.lhs.true.1638, %land.lhs.true.1627, %lor.lhs.false.1619
  %776 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1670 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %776, i32 0, i32 1
  %arrayidx1671 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1670, i32 0, i64 0
  %rtx1672 = bitcast %union.rtunion_def* %arrayidx1671 to %struct.rtx_def**
  %777 = load %struct.rtx_def*, %struct.rtx_def** %rtx1672, align 8
  %778 = bitcast %struct.rtx_def* %777 to i32*
  %bf.load1673 = load i32, i32* %778, align 8
  %bf.clear1674 = and i32 %bf.load1673, 65535
  %cmp1675 = icmp eq i32 %bf.clear1674, 63
  br i1 %cmp1675, label %land.lhs.true.1677, label %if.end.1701

land.lhs.true.1677:                               ; preds = %if.end.1669
  %779 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1678 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %779, i32 0, i32 1
  %arrayidx1679 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1678, i32 0, i64 0
  %rtx1680 = bitcast %union.rtunion_def* %arrayidx1679 to %struct.rtx_def**
  %780 = load %struct.rtx_def*, %struct.rtx_def** %rtx1680, align 8
  %call1681 = call i32 @subreg_lowpart_p(%struct.rtx_def* %780)
  %tobool1682 = icmp ne i32 %call1681, 0
  br i1 %tobool1682, label %land.lhs.true.1683, label %if.end.1701

land.lhs.true.1683:                               ; preds = %land.lhs.true.1677
  %781 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1684 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %781, i32 0, i32 1
  %arrayidx1685 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1684, i32 0, i64 0
  %rtx1686 = bitcast %union.rtunion_def* %arrayidx1685 to %struct.rtx_def**
  %782 = load %struct.rtx_def*, %struct.rtx_def** %rtx1686, align 8
  %fld1687 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %782, i32 0, i32 1
  %arrayidx1688 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1687, i32 0, i64 0
  %rtx1689 = bitcast %union.rtunion_def* %arrayidx1688 to %struct.rtx_def**
  %783 = load %struct.rtx_def*, %struct.rtx_def** %rtx1689, align 8
  %784 = bitcast %struct.rtx_def* %783 to i32*
  %bf.load1690 = load i32, i32* %784, align 8
  %bf.clear1691 = and i32 %bf.load1690, 65535
  %cmp1692 = icmp eq i32 %bf.clear1691, 124
  br i1 %cmp1692, label %if.then.1694, label %if.end.1701

if.then.1694:                                     ; preds = %land.lhs.true.1683
  %785 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1695 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %785, i32 0, i32 1
  %arrayidx1696 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1695, i32 0, i64 0
  %rtx1697 = bitcast %union.rtunion_def* %arrayidx1696 to %struct.rtx_def**
  %786 = load %struct.rtx_def*, %struct.rtx_def** %rtx1697, align 8
  %fld1698 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %786, i32 0, i32 1
  %arrayidx1699 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1698, i32 0, i64 0
  %rtx1700 = bitcast %union.rtunion_def* %arrayidx1699 to %struct.rtx_def**
  %787 = load %struct.rtx_def*, %struct.rtx_def** %rtx1700, align 8
  store %struct.rtx_def* %787, %struct.rtx_def** %retval
  br label %return

if.end.1701:                                      ; preds = %land.lhs.true.1683, %land.lhs.true.1677, %if.end.1669
  br label %sw.epilog.2887

sw.bb.1702:                                       ; preds = %if.end.682
  %788 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1703 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %788, i32 0, i32 1
  %arrayidx1704 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1703, i32 0, i64 0
  %rtx1705 = bitcast %union.rtunion_def* %arrayidx1704 to %struct.rtx_def**
  %789 = load %struct.rtx_def*, %struct.rtx_def** %rtx1705, align 8
  %790 = bitcast %struct.rtx_def* %789 to i32*
  %bf.load1706 = load i32, i32* %790, align 8
  %bf.clear1707 = and i32 %bf.load1706, 65535
  %cmp1708 = icmp eq i32 %bf.clear1707, 58
  br i1 %cmp1708, label %if.then.1710, label %if.end.1720

if.then.1710:                                     ; preds = %sw.bb.1702
  %791 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1711 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %791, i32 0, i32 1
  %arrayidx1712 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1711, i32 0, i64 0
  %rtx1713 = bitcast %union.rtunion_def* %arrayidx1712 to %struct.rtx_def**
  %792 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1714 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %792, i32 0, i32 1
  %arrayidx1715 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1714, i32 0, i64 0
  %rtx1716 = bitcast %union.rtunion_def* %arrayidx1715 to %struct.rtx_def**
  %793 = load %struct.rtx_def*, %struct.rtx_def** %rtx1716, align 8
  %fld1717 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %793, i32 0, i32 1
  %arrayidx1718 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1717, i32 0, i64 0
  %rtx1719 = bitcast %union.rtunion_def* %arrayidx1718 to %struct.rtx_def**
  %794 = load %struct.rtx_def*, %struct.rtx_def** %rtx1719, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx1713, %struct.rtx_def* %794)
  br label %if.end.1720

if.end.1720:                                      ; preds = %if.then.1710, %sw.bb.1702
  br label %sw.epilog.2887

sw.bb.1721:                                       ; preds = %if.end.682
  %795 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1722 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %795, i32 0, i32 1
  %arrayidx1723 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1722, i32 0, i64 0
  %rtx1724 = bitcast %union.rtunion_def* %arrayidx1723 to %struct.rtx_def**
  %796 = load %struct.rtx_def*, %struct.rtx_def** %rtx1724, align 8
  %797 = bitcast %struct.rtx_def* %796 to i32*
  %bf.load1725 = load i32, i32* %797, align 8
  %bf.clear1726 = and i32 %bf.load1725, 65535
  %cmp1727 = icmp eq i32 %bf.clear1726, 75
  br i1 %cmp1727, label %land.lhs.true.1729, label %if.end.1802

land.lhs.true.1729:                               ; preds = %sw.bb.1721
  %798 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1730 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %798, i32 0, i32 1
  %arrayidx1731 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1730, i32 0, i64 0
  %rtx1732 = bitcast %union.rtunion_def* %arrayidx1731 to %struct.rtx_def**
  %799 = load %struct.rtx_def*, %struct.rtx_def** %rtx1732, align 8
  %fld1733 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %799, i32 0, i32 1
  %arrayidx1734 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1733, i32 0, i64 1
  %rtx1735 = bitcast %union.rtunion_def* %arrayidx1734 to %struct.rtx_def**
  %800 = load %struct.rtx_def*, %struct.rtx_def** %rtx1735, align 8
  %801 = bitcast %struct.rtx_def* %800 to i32*
  %bf.load1736 = load i32, i32* %801, align 8
  %bf.clear1737 = and i32 %bf.load1736, 65535
  %cmp1738 = icmp eq i32 %bf.clear1737, 67
  br i1 %cmp1738, label %if.then.1784, label %lor.lhs.false.1740

lor.lhs.false.1740:                               ; preds = %land.lhs.true.1729
  %802 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1741 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %802, i32 0, i32 1
  %arrayidx1742 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1741, i32 0, i64 0
  %rtx1743 = bitcast %union.rtunion_def* %arrayidx1742 to %struct.rtx_def**
  %803 = load %struct.rtx_def*, %struct.rtx_def** %rtx1743, align 8
  %fld1744 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %803, i32 0, i32 1
  %arrayidx1745 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1744, i32 0, i64 1
  %rtx1746 = bitcast %union.rtunion_def* %arrayidx1745 to %struct.rtx_def**
  %804 = load %struct.rtx_def*, %struct.rtx_def** %rtx1746, align 8
  %805 = bitcast %struct.rtx_def* %804 to i32*
  %bf.load1747 = load i32, i32* %805, align 8
  %bf.clear1748 = and i32 %bf.load1747, 65535
  %cmp1749 = icmp eq i32 %bf.clear1748, 68
  br i1 %cmp1749, label %if.then.1784, label %lor.lhs.false.1751

lor.lhs.false.1751:                               ; preds = %lor.lhs.false.1740
  %806 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1752 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %806, i32 0, i32 1
  %arrayidx1753 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1752, i32 0, i64 0
  %rtx1754 = bitcast %union.rtunion_def* %arrayidx1753 to %struct.rtx_def**
  %807 = load %struct.rtx_def*, %struct.rtx_def** %rtx1754, align 8
  %fld1755 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %807, i32 0, i32 1
  %arrayidx1756 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1755, i32 0, i64 1
  %rtx1757 = bitcast %union.rtunion_def* %arrayidx1756 to %struct.rtx_def**
  %808 = load %struct.rtx_def*, %struct.rtx_def** %rtx1757, align 8
  %809 = bitcast %struct.rtx_def* %808 to i32*
  %bf.load1758 = load i32, i32* %809, align 8
  %bf.clear1759 = and i32 %bf.load1758, 65535
  %cmp1760 = icmp eq i32 %bf.clear1759, 54
  br i1 %cmp1760, label %if.then.1784, label %lor.lhs.false.1762

lor.lhs.false.1762:                               ; preds = %lor.lhs.false.1751
  %810 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1763 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %810, i32 0, i32 1
  %arrayidx1764 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1763, i32 0, i64 0
  %rtx1765 = bitcast %union.rtunion_def* %arrayidx1764 to %struct.rtx_def**
  %811 = load %struct.rtx_def*, %struct.rtx_def** %rtx1765, align 8
  %fld1766 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %811, i32 0, i32 1
  %arrayidx1767 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1766, i32 0, i64 1
  %rtx1768 = bitcast %union.rtunion_def* %arrayidx1767 to %struct.rtx_def**
  %812 = load %struct.rtx_def*, %struct.rtx_def** %rtx1768, align 8
  %813 = bitcast %struct.rtx_def* %812 to i32*
  %bf.load1769 = load i32, i32* %813, align 8
  %bf.clear1770 = and i32 %bf.load1769, 65535
  %cmp1771 = icmp eq i32 %bf.clear1770, 58
  br i1 %cmp1771, label %if.then.1784, label %lor.lhs.false.1773

lor.lhs.false.1773:                               ; preds = %lor.lhs.false.1762
  %814 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1774 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %814, i32 0, i32 1
  %arrayidx1775 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1774, i32 0, i64 0
  %rtx1776 = bitcast %union.rtunion_def* %arrayidx1775 to %struct.rtx_def**
  %815 = load %struct.rtx_def*, %struct.rtx_def** %rtx1776, align 8
  %fld1777 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %815, i32 0, i32 1
  %arrayidx1778 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1777, i32 0, i64 1
  %rtx1779 = bitcast %union.rtunion_def* %arrayidx1778 to %struct.rtx_def**
  %816 = load %struct.rtx_def*, %struct.rtx_def** %rtx1779, align 8
  %817 = bitcast %struct.rtx_def* %816 to i32*
  %bf.load1780 = load i32, i32* %817, align 8
  %bf.clear1781 = and i32 %bf.load1780, 65535
  %cmp1782 = icmp eq i32 %bf.clear1781, 55
  br i1 %cmp1782, label %if.then.1784, label %if.end.1802

if.then.1784:                                     ; preds = %lor.lhs.false.1773, %lor.lhs.false.1762, %lor.lhs.false.1751, %lor.lhs.false.1740, %land.lhs.true.1729
  %818 = load i32, i32* %mode, align 4
  %819 = load i32, i32* %mode, align 4
  %820 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1785 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %820, i32 0, i32 1
  %arrayidx1786 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1785, i32 0, i64 0
  %rtx1787 = bitcast %union.rtunion_def* %arrayidx1786 to %struct.rtx_def**
  %821 = load %struct.rtx_def*, %struct.rtx_def** %rtx1787, align 8
  %fld1788 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %821, i32 0, i32 1
  %arrayidx1789 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1788, i32 0, i64 0
  %rtx1790 = bitcast %union.rtunion_def* %arrayidx1789 to %struct.rtx_def**
  %822 = load %struct.rtx_def*, %struct.rtx_def** %rtx1790, align 8
  %823 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1791 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %823, i32 0, i32 1
  %arrayidx1792 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1791, i32 0, i64 1
  %rtx1793 = bitcast %union.rtunion_def* %arrayidx1792 to %struct.rtx_def**
  %824 = load %struct.rtx_def*, %struct.rtx_def** %rtx1793, align 8
  %call1794 = call %struct.rtx_def* @gen_binary(i32 75, i32 %819, %struct.rtx_def* %822, %struct.rtx_def* %824)
  %825 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1795 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %825, i32 0, i32 1
  %arrayidx1796 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1795, i32 0, i64 0
  %rtx1797 = bitcast %union.rtunion_def* %arrayidx1796 to %struct.rtx_def**
  %826 = load %struct.rtx_def*, %struct.rtx_def** %rtx1797, align 8
  %fld1798 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %826, i32 0, i32 1
  %arrayidx1799 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1798, i32 0, i64 1
  %rtx1800 = bitcast %union.rtunion_def* %arrayidx1799 to %struct.rtx_def**
  %827 = load %struct.rtx_def*, %struct.rtx_def** %rtx1800, align 8
  %call1801 = call %struct.rtx_def* @gen_binary(i32 75, i32 %818, %struct.rtx_def* %call1794, %struct.rtx_def* %827)
  store %struct.rtx_def* %call1801, %struct.rtx_def** %retval
  br label %return

if.end.1802:                                      ; preds = %lor.lhs.false.1773, %sw.bb.1721
  %828 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1803 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %828, i32 0, i32 1
  %arrayidx1804 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1803, i32 0, i64 0
  %rtx1805 = bitcast %union.rtunion_def* %arrayidx1804 to %struct.rtx_def**
  %829 = load %struct.rtx_def*, %struct.rtx_def** %rtx1805, align 8
  %830 = bitcast %struct.rtx_def* %829 to i32*
  %bf.load1806 = load i32, i32* %830, align 8
  %bf.clear1807 = and i32 %bf.load1806, 65535
  %cmp1808 = icmp eq i32 %bf.clear1807, 85
  br i1 %cmp1808, label %land.lhs.true.1810, label %if.end.1971

land.lhs.true.1810:                               ; preds = %if.end.1802
  %831 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1811 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %831, i32 0, i32 1
  %arrayidx1812 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1811, i32 0, i64 1
  %rtx1813 = bitcast %union.rtunion_def* %arrayidx1812 to %struct.rtx_def**
  %832 = load %struct.rtx_def*, %struct.rtx_def** %rtx1813, align 8
  %833 = bitcast %struct.rtx_def* %832 to i32*
  %bf.load1814 = load i32, i32* %833, align 8
  %bf.clear1815 = and i32 %bf.load1814, 65535
  %cmp1816 = icmp eq i32 %bf.clear1815, 54
  br i1 %cmp1816, label %land.lhs.true.1818, label %if.end.1971

land.lhs.true.1818:                               ; preds = %land.lhs.true.1810
  %834 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1819 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %834, i32 0, i32 1
  %arrayidx1820 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1819, i32 0, i64 0
  %rtx1821 = bitcast %union.rtunion_def* %arrayidx1820 to %struct.rtx_def**
  %835 = load %struct.rtx_def*, %struct.rtx_def** %rtx1821, align 8
  %fld1822 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %835, i32 0, i32 1
  %arrayidx1823 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1822, i32 0, i64 1
  %rtx1824 = bitcast %union.rtunion_def* %arrayidx1823 to %struct.rtx_def**
  %836 = load %struct.rtx_def*, %struct.rtx_def** %rtx1824, align 8
  %837 = bitcast %struct.rtx_def* %836 to i32*
  %bf.load1825 = load i32, i32* %837, align 8
  %bf.clear1826 = and i32 %bf.load1825, 65535
  %cmp1827 = icmp eq i32 %bf.clear1826, 54
  br i1 %cmp1827, label %land.lhs.true.1829, label %if.end.1971

land.lhs.true.1829:                               ; preds = %land.lhs.true.1818
  %838 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1830 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %838, i32 0, i32 1
  %arrayidx1831 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1830, i32 0, i64 1
  %rtx1832 = bitcast %union.rtunion_def* %arrayidx1831 to %struct.rtx_def**
  %839 = load %struct.rtx_def*, %struct.rtx_def** %rtx1832, align 8
  %fld1833 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %839, i32 0, i32 1
  %arrayidx1834 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1833, i32 0, i64 0
  %rtwint1835 = bitcast %union.rtunion_def* %arrayidx1834 to i64*
  %840 = load i64, i64* %rtwint1835, align 8
  %841 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1836 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %841, i32 0, i32 1
  %arrayidx1837 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1836, i32 0, i64 0
  %rtx1838 = bitcast %union.rtunion_def* %arrayidx1837 to %struct.rtx_def**
  %842 = load %struct.rtx_def*, %struct.rtx_def** %rtx1838, align 8
  %fld1839 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %842, i32 0, i32 1
  %arrayidx1840 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1839, i32 0, i64 1
  %rtx1841 = bitcast %union.rtunion_def* %arrayidx1840 to %struct.rtx_def**
  %843 = load %struct.rtx_def*, %struct.rtx_def** %rtx1841, align 8
  %fld1842 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %843, i32 0, i32 1
  %arrayidx1843 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1842, i32 0, i64 0
  %rtwint1844 = bitcast %union.rtunion_def* %arrayidx1843 to i64*
  %844 = load i64, i64* %rtwint1844, align 8
  %sub1845 = sub nsw i64 0, %844
  %cmp1846 = icmp eq i64 %840, %sub1845
  br i1 %cmp1846, label %land.lhs.true.1848, label %if.end.1971

land.lhs.true.1848:                               ; preds = %land.lhs.true.1829
  %845 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1849 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %845, i32 0, i32 1
  %arrayidx1850 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1849, i32 0, i64 0
  %rtx1851 = bitcast %union.rtunion_def* %arrayidx1850 to %struct.rtx_def**
  %846 = load %struct.rtx_def*, %struct.rtx_def** %rtx1851, align 8
  %fld1852 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %846, i32 0, i32 1
  %arrayidx1853 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1852, i32 0, i64 1
  %rtx1854 = bitcast %union.rtunion_def* %arrayidx1853 to %struct.rtx_def**
  %847 = load %struct.rtx_def*, %struct.rtx_def** %rtx1854, align 8
  %fld1855 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %847, i32 0, i32 1
  %arrayidx1856 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1855, i32 0, i64 0
  %rtwint1857 = bitcast %union.rtunion_def* %arrayidx1856 to i64*
  %848 = load i64, i64* %rtwint1857, align 8
  %call1858 = call i32 @exact_log2_wide(i64 %848)
  store i32 %call1858, i32* %i, align 4
  %cmp1859 = icmp sge i32 %call1858, 0
  br i1 %cmp1859, label %land.lhs.true.1871, label %lor.lhs.false.1861

lor.lhs.false.1861:                               ; preds = %land.lhs.true.1848
  %849 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1862 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %849, i32 0, i32 1
  %arrayidx1863 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1862, i32 0, i64 1
  %rtx1864 = bitcast %union.rtunion_def* %arrayidx1863 to %struct.rtx_def**
  %850 = load %struct.rtx_def*, %struct.rtx_def** %rtx1864, align 8
  %fld1865 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %850, i32 0, i32 1
  %arrayidx1866 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1865, i32 0, i64 0
  %rtwint1867 = bitcast %union.rtunion_def* %arrayidx1866 to i64*
  %851 = load i64, i64* %rtwint1867, align 8
  %call1868 = call i32 @exact_log2_wide(i64 %851)
  store i32 %call1868, i32* %i, align 4
  %cmp1869 = icmp sge i32 %call1868, 0
  br i1 %cmp1869, label %land.lhs.true.1871, label %if.end.1971

land.lhs.true.1871:                               ; preds = %lor.lhs.false.1861, %land.lhs.true.1848
  %852 = load i32, i32* %mode, align 4
  %idxprom1872 = sext i32 %852 to i64
  %arrayidx1873 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1872
  %853 = load i16, i16* %arrayidx1873, align 2
  %conv1874 = zext i16 %853 to i32
  %cmp1875 = icmp sle i32 %conv1874, 64
  br i1 %cmp1875, label %land.lhs.true.1877, label %if.end.1971

land.lhs.true.1877:                               ; preds = %land.lhs.true.1871
  %854 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1878 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %854, i32 0, i32 1
  %arrayidx1879 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1878, i32 0, i64 0
  %rtx1880 = bitcast %union.rtunion_def* %arrayidx1879 to %struct.rtx_def**
  %855 = load %struct.rtx_def*, %struct.rtx_def** %rtx1880, align 8
  %fld1881 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %855, i32 0, i32 1
  %arrayidx1882 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1881, i32 0, i64 0
  %rtx1883 = bitcast %union.rtunion_def* %arrayidx1882 to %struct.rtx_def**
  %856 = load %struct.rtx_def*, %struct.rtx_def** %rtx1883, align 8
  %857 = bitcast %struct.rtx_def* %856 to i32*
  %bf.load1884 = load i32, i32* %857, align 8
  %bf.clear1885 = and i32 %bf.load1884, 65535
  %cmp1886 = icmp eq i32 %bf.clear1885, 83
  br i1 %cmp1886, label %land.lhs.true.1888, label %lor.lhs.false.1919

land.lhs.true.1888:                               ; preds = %land.lhs.true.1877
  %858 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1889 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %858, i32 0, i32 1
  %arrayidx1890 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1889, i32 0, i64 0
  %rtx1891 = bitcast %union.rtunion_def* %arrayidx1890 to %struct.rtx_def**
  %859 = load %struct.rtx_def*, %struct.rtx_def** %rtx1891, align 8
  %fld1892 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %859, i32 0, i32 1
  %arrayidx1893 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1892, i32 0, i64 0
  %rtx1894 = bitcast %union.rtunion_def* %arrayidx1893 to %struct.rtx_def**
  %860 = load %struct.rtx_def*, %struct.rtx_def** %rtx1894, align 8
  %fld1895 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %860, i32 0, i32 1
  %arrayidx1896 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1895, i32 0, i64 1
  %rtx1897 = bitcast %union.rtunion_def* %arrayidx1896 to %struct.rtx_def**
  %861 = load %struct.rtx_def*, %struct.rtx_def** %rtx1897, align 8
  %862 = bitcast %struct.rtx_def* %861 to i32*
  %bf.load1898 = load i32, i32* %862, align 8
  %bf.clear1899 = and i32 %bf.load1898, 65535
  %cmp1900 = icmp eq i32 %bf.clear1899, 54
  br i1 %cmp1900, label %land.lhs.true.1902, label %lor.lhs.false.1919

land.lhs.true.1902:                               ; preds = %land.lhs.true.1888
  %863 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1903 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %863, i32 0, i32 1
  %arrayidx1904 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1903, i32 0, i64 0
  %rtx1905 = bitcast %union.rtunion_def* %arrayidx1904 to %struct.rtx_def**
  %864 = load %struct.rtx_def*, %struct.rtx_def** %rtx1905, align 8
  %fld1906 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %864, i32 0, i32 1
  %arrayidx1907 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1906, i32 0, i64 0
  %rtx1908 = bitcast %union.rtunion_def* %arrayidx1907 to %struct.rtx_def**
  %865 = load %struct.rtx_def*, %struct.rtx_def** %rtx1908, align 8
  %fld1909 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %865, i32 0, i32 1
  %arrayidx1910 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1909, i32 0, i64 1
  %rtx1911 = bitcast %union.rtunion_def* %arrayidx1910 to %struct.rtx_def**
  %866 = load %struct.rtx_def*, %struct.rtx_def** %rtx1911, align 8
  %fld1912 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %866, i32 0, i32 1
  %arrayidx1913 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1912, i32 0, i64 0
  %rtwint1914 = bitcast %union.rtunion_def* %arrayidx1913 to i64*
  %867 = load i64, i64* %rtwint1914, align 8
  %868 = load i32, i32* %i, align 4
  %add1915 = add nsw i32 %868, 1
  %sh_prom = zext i32 %add1915 to i64
  %shl = shl i64 1, %sh_prom
  %sub1916 = sub nsw i64 %shl, 1
  %cmp1917 = icmp eq i64 %867, %sub1916
  br i1 %cmp1917, label %if.then.1949, label %lor.lhs.false.1919

lor.lhs.false.1919:                               ; preds = %land.lhs.true.1902, %land.lhs.true.1888, %land.lhs.true.1877
  %869 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1920 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %869, i32 0, i32 1
  %arrayidx1921 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1920, i32 0, i64 0
  %rtx1922 = bitcast %union.rtunion_def* %arrayidx1921 to %struct.rtx_def**
  %870 = load %struct.rtx_def*, %struct.rtx_def** %rtx1922, align 8
  %fld1923 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %870, i32 0, i32 1
  %arrayidx1924 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1923, i32 0, i64 0
  %rtx1925 = bitcast %union.rtunion_def* %arrayidx1924 to %struct.rtx_def**
  %871 = load %struct.rtx_def*, %struct.rtx_def** %rtx1925, align 8
  %872 = bitcast %struct.rtx_def* %871 to i32*
  %bf.load1926 = load i32, i32* %872, align 8
  %bf.clear1927 = and i32 %bf.load1926, 65535
  %cmp1928 = icmp eq i32 %bf.clear1927, 121
  br i1 %cmp1928, label %land.lhs.true.1930, label %if.end.1971

land.lhs.true.1930:                               ; preds = %lor.lhs.false.1919
  %873 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1931 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %873, i32 0, i32 1
  %arrayidx1932 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1931, i32 0, i64 0
  %rtx1933 = bitcast %union.rtunion_def* %arrayidx1932 to %struct.rtx_def**
  %874 = load %struct.rtx_def*, %struct.rtx_def** %rtx1933, align 8
  %fld1934 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %874, i32 0, i32 1
  %arrayidx1935 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1934, i32 0, i64 0
  %rtx1936 = bitcast %union.rtunion_def* %arrayidx1935 to %struct.rtx_def**
  %875 = load %struct.rtx_def*, %struct.rtx_def** %rtx1936, align 8
  %fld1937 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %875, i32 0, i32 1
  %arrayidx1938 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1937, i32 0, i64 0
  %rtx1939 = bitcast %union.rtunion_def* %arrayidx1938 to %struct.rtx_def**
  %876 = load %struct.rtx_def*, %struct.rtx_def** %rtx1939, align 8
  %877 = bitcast %struct.rtx_def* %876 to i32*
  %bf.load1940 = load i32, i32* %877, align 8
  %bf.lshr1941 = lshr i32 %bf.load1940, 16
  %bf.clear1942 = and i32 %bf.lshr1941, 255
  %idxprom1943 = sext i32 %bf.clear1942 to i64
  %arrayidx1944 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1943
  %878 = load i16, i16* %arrayidx1944, align 2
  %conv1945 = zext i16 %878 to i32
  %879 = load i32, i32* %i, align 4
  %add1946 = add i32 %879, 1
  %cmp1947 = icmp eq i32 %conv1945, %add1946
  br i1 %cmp1947, label %if.then.1949, label %if.end.1971

if.then.1949:                                     ; preds = %land.lhs.true.1930, %land.lhs.true.1902
  %880 = load i32, i32* %mode, align 4
  %881 = load i32, i32* %mode, align 4
  %882 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1950 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %882, i32 0, i32 1
  %arrayidx1951 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1950, i32 0, i64 0
  %rtx1952 = bitcast %union.rtunion_def* %arrayidx1951 to %struct.rtx_def**
  %883 = load %struct.rtx_def*, %struct.rtx_def** %rtx1952, align 8
  %fld1953 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %883, i32 0, i32 1
  %arrayidx1954 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1953, i32 0, i64 0
  %rtx1955 = bitcast %union.rtunion_def* %arrayidx1954 to %struct.rtx_def**
  %884 = load %struct.rtx_def*, %struct.rtx_def** %rtx1955, align 8
  %fld1956 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %884, i32 0, i32 1
  %arrayidx1957 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1956, i32 0, i64 0
  %rtx1958 = bitcast %union.rtunion_def* %arrayidx1957 to %struct.rtx_def**
  %885 = load %struct.rtx_def*, %struct.rtx_def** %rtx1958, align 8
  %886 = load i32, i32* %mode, align 4
  %idxprom1959 = sext i32 %886 to i64
  %arrayidx1960 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1959
  %887 = load i16, i16* %arrayidx1960, align 2
  %conv1961 = zext i16 %887 to i32
  %888 = load i32, i32* %i, align 4
  %add1962 = add nsw i32 %888, 1
  %sub1963 = sub nsw i32 %conv1961, %add1962
  %call1964 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 87, i32 %881, %struct.rtx_def* %885, i32 %sub1963)
  %889 = load i32, i32* %mode, align 4
  %idxprom1965 = sext i32 %889 to i64
  %arrayidx1966 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1965
  %890 = load i16, i16* %arrayidx1966, align 2
  %conv1967 = zext i16 %890 to i32
  %891 = load i32, i32* %i, align 4
  %add1968 = add nsw i32 %891, 1
  %sub1969 = sub nsw i32 %conv1967, %add1968
  %call1970 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 89, i32 %880, %struct.rtx_def* %call1964, i32 %sub1969)
  store %struct.rtx_def* %call1970, %struct.rtx_def** %retval
  br label %return

if.end.1971:                                      ; preds = %land.lhs.true.1930, %lor.lhs.false.1919, %land.lhs.true.1871, %lor.lhs.false.1861, %land.lhs.true.1829, %land.lhs.true.1818, %land.lhs.true.1810, %if.end.1802
  %892 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1972 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %892, i32 0, i32 1
  %arrayidx1973 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1972, i32 0, i64 0
  %rtx1974 = bitcast %union.rtunion_def* %arrayidx1973 to %struct.rtx_def**
  %893 = load %struct.rtx_def*, %struct.rtx_def** %rtx1974, align 8
  %894 = bitcast %struct.rtx_def* %893 to i32*
  %bf.load1975 = load i32, i32* %894, align 8
  %bf.clear1976 = and i32 %bf.load1975, 65535
  %idxprom1977 = sext i32 %bf.clear1976 to i64
  %arrayidx1978 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom1977
  %895 = load i8, i8* %arrayidx1978, align 1
  %conv1979 = sext i8 %895 to i32
  %cmp1980 = icmp eq i32 %conv1979, 60
  br i1 %cmp1980, label %land.lhs.true.1982, label %if.end.2008

land.lhs.true.1982:                               ; preds = %if.end.1971
  %896 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1983 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %896, i32 0, i32 1
  %arrayidx1984 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1983, i32 0, i64 1
  %rtx1985 = bitcast %union.rtunion_def* %arrayidx1984 to %struct.rtx_def**
  %897 = load %struct.rtx_def*, %struct.rtx_def** %rtx1985, align 8
  %898 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 63), align 8
  %cmp1986 = icmp eq %struct.rtx_def* %897, %898
  br i1 %cmp1986, label %land.lhs.true.1988, label %if.end.2008

land.lhs.true.1988:                               ; preds = %land.lhs.true.1982
  %899 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1989 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %899, i32 0, i32 1
  %arrayidx1990 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1989, i32 0, i64 0
  %rtx1991 = bitcast %union.rtunion_def* %arrayidx1990 to %struct.rtx_def**
  %900 = load %struct.rtx_def*, %struct.rtx_def** %rtx1991, align 8
  %901 = load i32, i32* %mode, align 4
  %902 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1992 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %902, i32 0, i32 1
  %arrayidx1993 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1992, i32 0, i64 0
  %rtx1994 = bitcast %union.rtunion_def* %arrayidx1993 to %struct.rtx_def**
  %903 = load %struct.rtx_def*, %struct.rtx_def** %rtx1994, align 8
  %fld1995 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %903, i32 0, i32 1
  %arrayidx1996 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1995, i32 0, i64 0
  %rtx1997 = bitcast %union.rtunion_def* %arrayidx1996 to %struct.rtx_def**
  %904 = load %struct.rtx_def*, %struct.rtx_def** %rtx1997, align 8
  %905 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1998 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %905, i32 0, i32 1
  %arrayidx1999 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1998, i32 0, i64 0
  %rtx2000 = bitcast %union.rtunion_def* %arrayidx1999 to %struct.rtx_def**
  %906 = load %struct.rtx_def*, %struct.rtx_def** %rtx2000, align 8
  %fld2001 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %906, i32 0, i32 1
  %arrayidx2002 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2001, i32 0, i64 1
  %rtx2003 = bitcast %union.rtunion_def* %arrayidx2002 to %struct.rtx_def**
  %907 = load %struct.rtx_def*, %struct.rtx_def** %rtx2003, align 8
  %call2004 = call %struct.rtx_def* @reversed_comparison(%struct.rtx_def* %900, i32 %901, %struct.rtx_def* %904, %struct.rtx_def* %907)
  store %struct.rtx_def* %call2004, %struct.rtx_def** %reversed, align 8
  %tobool2005 = icmp ne %struct.rtx_def* %call2004, null
  br i1 %tobool2005, label %if.then.2006, label %if.end.2008

if.then.2006:                                     ; preds = %land.lhs.true.1988
  %908 = load i32, i32* %mode, align 4
  %909 = load %struct.rtx_def*, %struct.rtx_def** %reversed, align 8
  %910 = load i32, i32* %mode, align 4
  %call2007 = call %struct.rtx_def* @simplify_gen_unary(i32 77, i32 %908, %struct.rtx_def* %909, i32 %910)
  store %struct.rtx_def* %call2007, %struct.rtx_def** %retval
  br label %return

if.end.2008:                                      ; preds = %land.lhs.true.1988, %land.lhs.true.1982, %if.end.1971
  %911 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2009 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %911, i32 0, i32 1
  %arrayidx2010 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2009, i32 0, i64 1
  %rtx2011 = bitcast %union.rtunion_def* %arrayidx2010 to %struct.rtx_def**
  %912 = load %struct.rtx_def*, %struct.rtx_def** %rtx2011, align 8
  %913 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 63), align 8
  %cmp2012 = icmp eq %struct.rtx_def* %912, %913
  br i1 %cmp2012, label %land.lhs.true.2014, label %if.end.2063

land.lhs.true.2014:                               ; preds = %if.end.2008
  %914 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2015 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %914, i32 0, i32 1
  %arrayidx2016 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2015, i32 0, i64 0
  %rtx2017 = bitcast %union.rtunion_def* %arrayidx2016 to %struct.rtx_def**
  %915 = load %struct.rtx_def*, %struct.rtx_def** %rtx2017, align 8
  %916 = bitcast %struct.rtx_def* %915 to i32*
  %bf.load2018 = load i32, i32* %916, align 8
  %bf.clear2019 = and i32 %bf.load2018, 65535
  %cmp2020 = icmp ne i32 %bf.clear2019, 61
  br i1 %cmp2020, label %land.lhs.true.2022, label %if.end.2063

land.lhs.true.2022:                               ; preds = %land.lhs.true.2014
  %917 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2023 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %917, i32 0, i32 1
  %arrayidx2024 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2023, i32 0, i64 0
  %rtx2025 = bitcast %union.rtunion_def* %arrayidx2024 to %struct.rtx_def**
  %918 = load %struct.rtx_def*, %struct.rtx_def** %rtx2025, align 8
  %919 = bitcast %struct.rtx_def* %918 to i32*
  %bf.load2026 = load i32, i32* %919, align 8
  %bf.clear2027 = and i32 %bf.load2026, 65535
  %cmp2028 = icmp eq i32 %bf.clear2027, 63
  br i1 %cmp2028, label %land.lhs.true.2030, label %land.lhs.true.2041

land.lhs.true.2030:                               ; preds = %land.lhs.true.2022
  %920 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2031 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %920, i32 0, i32 1
  %arrayidx2032 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2031, i32 0, i64 0
  %rtx2033 = bitcast %union.rtunion_def* %arrayidx2032 to %struct.rtx_def**
  %921 = load %struct.rtx_def*, %struct.rtx_def** %rtx2033, align 8
  %fld2034 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %921, i32 0, i32 1
  %arrayidx2035 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2034, i32 0, i64 0
  %rtx2036 = bitcast %union.rtunion_def* %arrayidx2035 to %struct.rtx_def**
  %922 = load %struct.rtx_def*, %struct.rtx_def** %rtx2036, align 8
  %923 = bitcast %struct.rtx_def* %922 to i32*
  %bf.load2037 = load i32, i32* %923, align 8
  %bf.clear2038 = and i32 %bf.load2037, 65535
  %cmp2039 = icmp eq i32 %bf.clear2038, 61
  br i1 %cmp2039, label %if.end.2063, label %land.lhs.true.2041

land.lhs.true.2041:                               ; preds = %land.lhs.true.2030, %land.lhs.true.2022
  %924 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2042 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %924, i32 0, i32 1
  %arrayidx2043 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2042, i32 0, i64 0
  %rtx2044 = bitcast %union.rtunion_def* %arrayidx2043 to %struct.rtx_def**
  %925 = load %struct.rtx_def*, %struct.rtx_def** %rtx2044, align 8
  %926 = load i32, i32* %mode, align 4
  %call2045 = call i64 @nonzero_bits(%struct.rtx_def* %925, i32 %926)
  %cmp2046 = icmp eq i64 %call2045, 1
  br i1 %cmp2046, label %if.then.2048, label %if.end.2063

if.then.2048:                                     ; preds = %land.lhs.true.2041
  %927 = load i32, i32* %mode, align 4
  %928 = load i32, i32* %mode, align 4
  %929 = load i32, i32* %mode, align 4
  %930 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2049 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %930, i32 0, i32 1
  %arrayidx2050 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2049, i32 0, i64 0
  %rtx2051 = bitcast %union.rtunion_def* %arrayidx2050 to %struct.rtx_def**
  %931 = load %struct.rtx_def*, %struct.rtx_def** %rtx2051, align 8
  %932 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 65), align 8
  %call2052 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 %929, %struct.rtx_def* %931, %struct.rtx_def* %932)
  %933 = load i32, i32* %mode, align 4
  %idxprom2053 = sext i32 %933 to i64
  %arrayidx2054 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2053
  %934 = load i16, i16* %arrayidx2054, align 2
  %conv2055 = zext i16 %934 to i32
  %sub2056 = sub nsw i32 %conv2055, 1
  %call2057 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 87, i32 %928, %struct.rtx_def* %call2052, i32 %sub2056)
  %935 = load i32, i32* %mode, align 4
  %idxprom2058 = sext i32 %935 to i64
  %arrayidx2059 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2058
  %936 = load i16, i16* %arrayidx2059, align 2
  %conv2060 = zext i16 %936 to i32
  %sub2061 = sub nsw i32 %conv2060, 1
  %call2062 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 89, i32 %927, %struct.rtx_def* %call2057, i32 %sub2061)
  store %struct.rtx_def* %call2062, %struct.rtx_def** %retval
  br label %return

if.end.2063:                                      ; preds = %land.lhs.true.2041, %land.lhs.true.2030, %land.lhs.true.2014, %if.end.2008
  %937 = load i32, i32* %mode, align 4
  %idxprom2064 = sext i32 %937 to i64
  %arrayidx2065 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2064
  %938 = load i16, i16* %arrayidx2065, align 2
  %conv2066 = zext i16 %938 to i32
  %cmp2067 = icmp sle i32 %conv2066, 64
  br i1 %cmp2067, label %land.lhs.true.2069, label %if.end.2099

land.lhs.true.2069:                               ; preds = %if.end.2063
  %939 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2070 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %939, i32 0, i32 1
  %arrayidx2071 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2070, i32 0, i64 0
  %rtx2072 = bitcast %union.rtunion_def* %arrayidx2071 to %struct.rtx_def**
  %940 = load %struct.rtx_def*, %struct.rtx_def** %rtx2072, align 8
  %941 = load i32, i32* %mode, align 4
  %call2073 = call i64 @nonzero_bits(%struct.rtx_def* %940, i32 %941)
  %942 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2074 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %942, i32 0, i32 1
  %arrayidx2075 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2074, i32 0, i64 1
  %rtx2076 = bitcast %union.rtunion_def* %arrayidx2075 to %struct.rtx_def**
  %943 = load %struct.rtx_def*, %struct.rtx_def** %rtx2076, align 8
  %944 = load i32, i32* %mode, align 4
  %call2077 = call i64 @nonzero_bits(%struct.rtx_def* %943, i32 %944)
  %and2078 = and i64 %call2073, %call2077
  %cmp2079 = icmp eq i64 %and2078, 0
  br i1 %cmp2079, label %if.then.2081, label %if.end.2099

if.then.2081:                                     ; preds = %land.lhs.true.2069
  %945 = load i32, i32* %mode, align 4
  %946 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2082 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %946, i32 0, i32 1
  %arrayidx2083 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2082, i32 0, i64 0
  %rtx2084 = bitcast %union.rtunion_def* %arrayidx2083 to %struct.rtx_def**
  %947 = load %struct.rtx_def*, %struct.rtx_def** %rtx2084, align 8
  %948 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2085 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %948, i32 0, i32 1
  %arrayidx2086 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2085, i32 0, i64 1
  %rtx2087 = bitcast %union.rtunion_def* %arrayidx2086 to %struct.rtx_def**
  %949 = load %struct.rtx_def*, %struct.rtx_def** %rtx2087, align 8
  %call2088 = call %struct.rtx_def* @gen_binary(i32 84, i32 %945, %struct.rtx_def* %947, %struct.rtx_def* %949)
  store %struct.rtx_def* %call2088, %struct.rtx_def** %tor, align 8
  %950 = load %struct.rtx_def*, %struct.rtx_def** %tor, align 8
  %951 = load i32, i32* %mode, align 4
  %952 = load i32, i32* %last.addr, align 4
  %953 = load i32, i32* %in_dest.addr, align 4
  %call2089 = call %struct.rtx_def* @combine_simplify_rtx(%struct.rtx_def* %950, i32 %951, i32 %952, i32 %953)
  store %struct.rtx_def* %call2089, %struct.rtx_def** %temp, align 8
  %954 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %955 = bitcast %struct.rtx_def* %954 to i32*
  %bf.load2090 = load i32, i32* %955, align 8
  %bf.clear2091 = and i32 %bf.load2090, 65535
  %cmp2092 = icmp ne i32 %bf.clear2091, 49
  br i1 %cmp2092, label %land.lhs.true.2094, label %if.end.2098

land.lhs.true.2094:                               ; preds = %if.then.2081
  %956 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %957 = load %struct.rtx_def*, %struct.rtx_def** %tor, align 8
  %cmp2095 = icmp ne %struct.rtx_def* %956, %957
  br i1 %cmp2095, label %if.then.2097, label %if.end.2098

if.then.2097:                                     ; preds = %land.lhs.true.2094
  %958 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  store %struct.rtx_def* %958, %struct.rtx_def** %retval
  br label %return

if.end.2098:                                      ; preds = %land.lhs.true.2094, %if.then.2081
  br label %if.end.2099

if.end.2099:                                      ; preds = %if.end.2098, %land.lhs.true.2069, %if.end.2063
  br label %sw.epilog.2887

sw.bb.2100:                                       ; preds = %if.end.682
  %959 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %959, i32 0, i32 1
  %arrayidx2102 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2101, i32 0, i64 0
  %rtx2103 = bitcast %union.rtunion_def* %arrayidx2102 to %struct.rtx_def**
  %960 = load %struct.rtx_def*, %struct.rtx_def** %rtx2103, align 8
  %961 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 65), align 8
  %cmp2104 = icmp eq %struct.rtx_def* %960, %961
  br i1 %cmp2104, label %land.lhs.true.2106, label %if.end.2136

land.lhs.true.2106:                               ; preds = %sw.bb.2100
  %962 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2107 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %962, i32 0, i32 1
  %arrayidx2108 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2107, i32 0, i64 1
  %rtx2109 = bitcast %union.rtunion_def* %arrayidx2108 to %struct.rtx_def**
  %963 = load %struct.rtx_def*, %struct.rtx_def** %rtx2109, align 8
  %964 = bitcast %struct.rtx_def* %963 to i32*
  %bf.load2110 = load i32, i32* %964, align 8
  %bf.clear2111 = and i32 %bf.load2110, 65535
  %idxprom2112 = sext i32 %bf.clear2111 to i64
  %arrayidx2113 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom2112
  %965 = load i8, i8* %arrayidx2113, align 1
  %conv2114 = sext i8 %965 to i32
  %cmp2115 = icmp eq i32 %conv2114, 60
  br i1 %cmp2115, label %land.lhs.true.2117, label %if.end.2136

land.lhs.true.2117:                               ; preds = %land.lhs.true.2106
  %966 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2118 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %966, i32 0, i32 1
  %arrayidx2119 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2118, i32 0, i64 1
  %rtx2120 = bitcast %union.rtunion_def* %arrayidx2119 to %struct.rtx_def**
  %967 = load %struct.rtx_def*, %struct.rtx_def** %rtx2120, align 8
  %968 = load i32, i32* %mode, align 4
  %969 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %969, i32 0, i32 1
  %arrayidx2122 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2121, i32 0, i64 1
  %rtx2123 = bitcast %union.rtunion_def* %arrayidx2122 to %struct.rtx_def**
  %970 = load %struct.rtx_def*, %struct.rtx_def** %rtx2123, align 8
  %fld2124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %970, i32 0, i32 1
  %arrayidx2125 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2124, i32 0, i64 0
  %rtx2126 = bitcast %union.rtunion_def* %arrayidx2125 to %struct.rtx_def**
  %971 = load %struct.rtx_def*, %struct.rtx_def** %rtx2126, align 8
  %972 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %972, i32 0, i32 1
  %arrayidx2128 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2127, i32 0, i64 1
  %rtx2129 = bitcast %union.rtunion_def* %arrayidx2128 to %struct.rtx_def**
  %973 = load %struct.rtx_def*, %struct.rtx_def** %rtx2129, align 8
  %fld2130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %973, i32 0, i32 1
  %arrayidx2131 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2130, i32 0, i64 1
  %rtx2132 = bitcast %union.rtunion_def* %arrayidx2131 to %struct.rtx_def**
  %974 = load %struct.rtx_def*, %struct.rtx_def** %rtx2132, align 8
  %call2133 = call %struct.rtx_def* @reversed_comparison(%struct.rtx_def* %967, i32 %968, %struct.rtx_def* %971, %struct.rtx_def* %974)
  store %struct.rtx_def* %call2133, %struct.rtx_def** %reversed, align 8
  %tobool2134 = icmp ne %struct.rtx_def* %call2133, null
  br i1 %tobool2134, label %if.then.2135, label %if.end.2136

if.then.2135:                                     ; preds = %land.lhs.true.2117
  %975 = load %struct.rtx_def*, %struct.rtx_def** %reversed, align 8
  store %struct.rtx_def* %975, %struct.rtx_def** %retval
  br label %return

if.end.2136:                                      ; preds = %land.lhs.true.2117, %land.lhs.true.2106, %sw.bb.2100
  %976 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %976, i32 0, i32 1
  %arrayidx2138 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2137, i32 0, i64 1
  %rtx2139 = bitcast %union.rtunion_def* %arrayidx2138 to %struct.rtx_def**
  %977 = load %struct.rtx_def*, %struct.rtx_def** %rtx2139, align 8
  %978 = bitcast %struct.rtx_def* %977 to i32*
  %bf.load2140 = load i32, i32* %978, align 8
  %bf.clear2141 = and i32 %bf.load2140, 65535
  %cmp2142 = icmp eq i32 %bf.clear2141, 83
  br i1 %cmp2142, label %land.lhs.true.2144, label %if.end.2197

land.lhs.true.2144:                               ; preds = %if.end.2136
  %979 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %979, i32 0, i32 1
  %arrayidx2146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2145, i32 0, i64 1
  %rtx2147 = bitcast %union.rtunion_def* %arrayidx2146 to %struct.rtx_def**
  %980 = load %struct.rtx_def*, %struct.rtx_def** %rtx2147, align 8
  %fld2148 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %980, i32 0, i32 1
  %arrayidx2149 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2148, i32 0, i64 1
  %rtx2150 = bitcast %union.rtunion_def* %arrayidx2149 to %struct.rtx_def**
  %981 = load %struct.rtx_def*, %struct.rtx_def** %rtx2150, align 8
  %982 = bitcast %struct.rtx_def* %981 to i32*
  %bf.load2151 = load i32, i32* %982, align 8
  %bf.clear2152 = and i32 %bf.load2151, 65535
  %cmp2153 = icmp eq i32 %bf.clear2152, 54
  br i1 %cmp2153, label %land.lhs.true.2155, label %if.end.2197

land.lhs.true.2155:                               ; preds = %land.lhs.true.2144
  %983 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2156 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %983, i32 0, i32 1
  %arrayidx2157 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2156, i32 0, i64 1
  %rtx2158 = bitcast %union.rtunion_def* %arrayidx2157 to %struct.rtx_def**
  %984 = load %struct.rtx_def*, %struct.rtx_def** %rtx2158, align 8
  %fld2159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %984, i32 0, i32 1
  %arrayidx2160 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2159, i32 0, i64 1
  %rtx2161 = bitcast %union.rtunion_def* %arrayidx2160 to %struct.rtx_def**
  %985 = load %struct.rtx_def*, %struct.rtx_def** %rtx2161, align 8
  %fld2162 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %985, i32 0, i32 1
  %arrayidx2163 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2162, i32 0, i64 0
  %rtwint2164 = bitcast %union.rtunion_def* %arrayidx2163 to i64*
  %986 = load i64, i64* %rtwint2164, align 8
  %sub2165 = sub nsw i64 0, %986
  %call2166 = call i32 @exact_log2_wide(i64 %sub2165)
  %cmp2167 = icmp sge i32 %call2166, 0
  br i1 %cmp2167, label %land.lhs.true.2169, label %if.end.2197

land.lhs.true.2169:                               ; preds = %land.lhs.true.2155
  %987 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %987, i32 0, i32 1
  %arrayidx2171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2170, i32 0, i64 1
  %rtx2172 = bitcast %union.rtunion_def* %arrayidx2171 to %struct.rtx_def**
  %988 = load %struct.rtx_def*, %struct.rtx_def** %rtx2172, align 8
  %fld2173 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %988, i32 0, i32 1
  %arrayidx2174 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2173, i32 0, i64 0
  %rtx2175 = bitcast %union.rtunion_def* %arrayidx2174 to %struct.rtx_def**
  %989 = load %struct.rtx_def*, %struct.rtx_def** %rtx2175, align 8
  %990 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2176 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %990, i32 0, i32 1
  %arrayidx2177 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2176, i32 0, i64 0
  %rtx2178 = bitcast %union.rtunion_def* %arrayidx2177 to %struct.rtx_def**
  %991 = load %struct.rtx_def*, %struct.rtx_def** %rtx2178, align 8
  %call2179 = call i32 @rtx_equal_p(%struct.rtx_def* %989, %struct.rtx_def* %991)
  %tobool2180 = icmp ne i32 %call2179, 0
  br i1 %tobool2180, label %if.then.2181, label %if.end.2197

if.then.2181:                                     ; preds = %land.lhs.true.2169
  %992 = load i32, i32* %mode, align 4
  %993 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2182 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %993, i32 0, i32 1
  %arrayidx2183 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2182, i32 0, i64 0
  %rtx2184 = bitcast %union.rtunion_def* %arrayidx2183 to %struct.rtx_def**
  %994 = load %struct.rtx_def*, %struct.rtx_def** %rtx2184, align 8
  %995 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2185 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %995, i32 0, i32 1
  %arrayidx2186 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2185, i32 0, i64 1
  %rtx2187 = bitcast %union.rtunion_def* %arrayidx2186 to %struct.rtx_def**
  %996 = load %struct.rtx_def*, %struct.rtx_def** %rtx2187, align 8
  %fld2188 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %996, i32 0, i32 1
  %arrayidx2189 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2188, i32 0, i64 1
  %rtx2190 = bitcast %union.rtunion_def* %arrayidx2189 to %struct.rtx_def**
  %997 = load %struct.rtx_def*, %struct.rtx_def** %rtx2190, align 8
  %fld2191 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %997, i32 0, i32 1
  %arrayidx2192 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2191, i32 0, i64 0
  %rtwint2193 = bitcast %union.rtunion_def* %arrayidx2192 to i64*
  %998 = load i64, i64* %rtwint2193, align 8
  %sub2194 = sub nsw i64 0, %998
  %sub2195 = sub nsw i64 %sub2194, 1
  %call2196 = call %struct.rtx_def* @simplify_and_const_int(%struct.rtx_def* null, i32 %992, %struct.rtx_def* %994, i64 %sub2195)
  store %struct.rtx_def* %call2196, %struct.rtx_def** %retval
  br label %return

if.end.2197:                                      ; preds = %land.lhs.true.2169, %land.lhs.true.2155, %land.lhs.true.2144, %if.end.2136
  %999 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2198 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %999, i32 0, i32 1
  %arrayidx2199 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2198, i32 0, i64 1
  %rtx2200 = bitcast %union.rtunion_def* %arrayidx2199 to %struct.rtx_def**
  %1000 = load %struct.rtx_def*, %struct.rtx_def** %rtx2200, align 8
  %1001 = bitcast %struct.rtx_def* %1000 to i32*
  %bf.load2201 = load i32, i32* %1001, align 8
  %bf.clear2202 = and i32 %bf.load2201, 65535
  %cmp2203 = icmp eq i32 %bf.clear2202, 75
  br i1 %cmp2203, label %land.lhs.true.2205, label %if.end.2243

land.lhs.true.2205:                               ; preds = %if.end.2197
  %1002 = load i32, i32* %mode, align 4
  %idxprom2206 = sext i32 %1002 to i64
  %arrayidx2207 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2206
  %1003 = load i32, i32* %arrayidx2207, align 4
  %cmp2208 = icmp eq i32 %1003, 1
  br i1 %cmp2208, label %if.then.2225, label %lor.lhs.false.2210

lor.lhs.false.2210:                               ; preds = %land.lhs.true.2205
  %1004 = load i32, i32* %mode, align 4
  %idxprom2211 = sext i32 %1004 to i64
  %arrayidx2212 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2211
  %1005 = load i32, i32* %arrayidx2212, align 4
  %cmp2213 = icmp eq i32 %1005, 3
  br i1 %cmp2213, label %if.then.2225, label %lor.lhs.false.2215

lor.lhs.false.2215:                               ; preds = %lor.lhs.false.2210
  %1006 = load i32, i32* %mode, align 4
  %idxprom2216 = sext i32 %1006 to i64
  %arrayidx2217 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2216
  %1007 = load i32, i32* %arrayidx2217, align 4
  %cmp2218 = icmp eq i32 %1007, 5
  br i1 %cmp2218, label %if.then.2225, label %lor.lhs.false.2220

lor.lhs.false.2220:                               ; preds = %lor.lhs.false.2215
  %1008 = load i32, i32* %mode, align 4
  %idxprom2221 = sext i32 %1008 to i64
  %arrayidx2222 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2221
  %1009 = load i32, i32* %arrayidx2222, align 4
  %cmp2223 = icmp eq i32 %1009, 7
  br i1 %cmp2223, label %if.then.2225, label %if.end.2243

if.then.2225:                                     ; preds = %lor.lhs.false.2220, %lor.lhs.false.2215, %lor.lhs.false.2210, %land.lhs.true.2205
  %1010 = load i32, i32* %mode, align 4
  %1011 = load i32, i32* %mode, align 4
  %1012 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2226 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1012, i32 0, i32 1
  %arrayidx2227 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2226, i32 0, i64 0
  %rtx2228 = bitcast %union.rtunion_def* %arrayidx2227 to %struct.rtx_def**
  %1013 = load %struct.rtx_def*, %struct.rtx_def** %rtx2228, align 8
  %1014 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2229 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1014, i32 0, i32 1
  %arrayidx2230 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2229, i32 0, i64 1
  %rtx2231 = bitcast %union.rtunion_def* %arrayidx2230 to %struct.rtx_def**
  %1015 = load %struct.rtx_def*, %struct.rtx_def** %rtx2231, align 8
  %fld2232 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1015, i32 0, i32 1
  %arrayidx2233 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2232, i32 0, i64 0
  %rtx2234 = bitcast %union.rtunion_def* %arrayidx2233 to %struct.rtx_def**
  %1016 = load %struct.rtx_def*, %struct.rtx_def** %rtx2234, align 8
  %call2235 = call %struct.rtx_def* @gen_binary(i32 76, i32 %1011, %struct.rtx_def* %1013, %struct.rtx_def* %1016)
  %1017 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1017, i32 0, i32 1
  %arrayidx2237 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2236, i32 0, i64 1
  %rtx2238 = bitcast %union.rtunion_def* %arrayidx2237 to %struct.rtx_def**
  %1018 = load %struct.rtx_def*, %struct.rtx_def** %rtx2238, align 8
  %fld2239 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1018, i32 0, i32 1
  %arrayidx2240 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2239, i32 0, i64 1
  %rtx2241 = bitcast %union.rtunion_def* %arrayidx2240 to %struct.rtx_def**
  %1019 = load %struct.rtx_def*, %struct.rtx_def** %rtx2241, align 8
  %call2242 = call %struct.rtx_def* @gen_binary(i32 76, i32 %1010, %struct.rtx_def* %call2235, %struct.rtx_def* %1019)
  store %struct.rtx_def* %call2242, %struct.rtx_def** %retval
  br label %return

if.end.2243:                                      ; preds = %lor.lhs.false.2220, %if.end.2197
  br label %sw.epilog.2887

sw.bb.2244:                                       ; preds = %if.end.682
  %1020 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2245 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1020, i32 0, i32 1
  %arrayidx2246 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2245, i32 0, i64 0
  %rtx2247 = bitcast %union.rtunion_def* %arrayidx2246 to %struct.rtx_def**
  %1021 = load %struct.rtx_def*, %struct.rtx_def** %rtx2247, align 8
  %1022 = bitcast %struct.rtx_def* %1021 to i32*
  %bf.load2248 = load i32, i32* %1022, align 8
  %bf.clear2249 = and i32 %bf.load2248, 65535
  %cmp2250 = icmp eq i32 %bf.clear2249, 75
  br i1 %cmp2250, label %if.then.2252, label %if.end.2282

if.then.2252:                                     ; preds = %sw.bb.2244
  %1023 = load i32, i32* %mode, align 4
  %1024 = load i32, i32* %mode, align 4
  %1025 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2253 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1025, i32 0, i32 1
  %arrayidx2254 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2253, i32 0, i64 0
  %rtx2255 = bitcast %union.rtunion_def* %arrayidx2254 to %struct.rtx_def**
  %1026 = load %struct.rtx_def*, %struct.rtx_def** %rtx2255, align 8
  %fld2256 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1026, i32 0, i32 1
  %arrayidx2257 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2256, i32 0, i64 0
  %rtx2258 = bitcast %union.rtunion_def* %arrayidx2257 to %struct.rtx_def**
  %1027 = load %struct.rtx_def*, %struct.rtx_def** %rtx2258, align 8
  %1028 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2259 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1028, i32 0, i32 1
  %arrayidx2260 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2259, i32 0, i64 1
  %rtx2261 = bitcast %union.rtunion_def* %arrayidx2260 to %struct.rtx_def**
  %1029 = load %struct.rtx_def*, %struct.rtx_def** %rtx2261, align 8
  %call2262 = call %struct.rtx_def* @gen_binary(i32 78, i32 %1024, %struct.rtx_def* %1027, %struct.rtx_def* %1029)
  %1030 = load i32, i32* %mode, align 4
  %1031 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2263 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1031, i32 0, i32 1
  %arrayidx2264 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2263, i32 0, i64 0
  %rtx2265 = bitcast %union.rtunion_def* %arrayidx2264 to %struct.rtx_def**
  %1032 = load %struct.rtx_def*, %struct.rtx_def** %rtx2265, align 8
  %fld2266 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1032, i32 0, i32 1
  %arrayidx2267 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2266, i32 0, i64 1
  %rtx2268 = bitcast %union.rtunion_def* %arrayidx2267 to %struct.rtx_def**
  %1033 = load %struct.rtx_def*, %struct.rtx_def** %rtx2268, align 8
  %1034 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2269 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1034, i32 0, i32 1
  %arrayidx2270 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2269, i32 0, i64 1
  %rtx2271 = bitcast %union.rtunion_def* %arrayidx2270 to %struct.rtx_def**
  %1035 = load %struct.rtx_def*, %struct.rtx_def** %rtx2271, align 8
  %call2272 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1035)
  %call2273 = call %struct.rtx_def* @gen_binary(i32 78, i32 %1030, %struct.rtx_def* %1033, %struct.rtx_def* %call2272)
  %call2274 = call %struct.rtx_def* @gen_binary(i32 75, i32 %1023, %struct.rtx_def* %call2262, %struct.rtx_def* %call2273)
  %call2275 = call %struct.rtx_def* @apply_distributive_law(%struct.rtx_def* %call2274)
  store %struct.rtx_def* %call2275, %struct.rtx_def** %x.addr, align 8
  %1036 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1037 = bitcast %struct.rtx_def* %1036 to i32*
  %bf.load2276 = load i32, i32* %1037, align 8
  %bf.clear2277 = and i32 %bf.load2276, 65535
  %cmp2278 = icmp ne i32 %bf.clear2277, 78
  br i1 %cmp2278, label %if.then.2280, label %if.end.2281

if.then.2280:                                     ; preds = %if.then.2252
  %1038 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %1038, %struct.rtx_def** %retval
  br label %return

if.end.2281:                                      ; preds = %if.then.2252
  br label %if.end.2282

if.end.2282:                                      ; preds = %if.end.2281, %sw.bb.2244
  %1039 = load i32, i32* %mode, align 4
  %idxprom2283 = sext i32 %1039 to i64
  %arrayidx2284 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2283
  %1040 = load i32, i32* %arrayidx2284, align 4
  %cmp2285 = icmp eq i32 %1040, 2
  br i1 %cmp2285, label %land.lhs.true.2297, label %lor.lhs.false.2287

lor.lhs.false.2287:                               ; preds = %if.end.2282
  %1041 = load i32, i32* %mode, align 4
  %idxprom2288 = sext i32 %1041 to i64
  %arrayidx2289 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2288
  %1042 = load i32, i32* %arrayidx2289, align 4
  %cmp2290 = icmp eq i32 %1042, 6
  br i1 %cmp2290, label %land.lhs.true.2297, label %lor.lhs.false.2292

lor.lhs.false.2292:                               ; preds = %lor.lhs.false.2287
  %1043 = load i32, i32* %mode, align 4
  %idxprom2293 = sext i32 %1043 to i64
  %arrayidx2294 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2293
  %1044 = load i32, i32* %arrayidx2294, align 4
  %cmp2295 = icmp eq i32 %1044, 8
  br i1 %cmp2295, label %land.lhs.true.2297, label %if.end.2329

land.lhs.true.2297:                               ; preds = %lor.lhs.false.2292, %lor.lhs.false.2287, %if.end.2282
  %1045 = load i32, i32* @flag_unsafe_math_optimizations, align 4
  %tobool2298 = icmp ne i32 %1045, 0
  br i1 %tobool2298, label %land.lhs.true.2299, label %if.end.2329

land.lhs.true.2299:                               ; preds = %land.lhs.true.2297
  %1046 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2300 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1046, i32 0, i32 1
  %arrayidx2301 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2300, i32 0, i64 0
  %rtx2302 = bitcast %union.rtunion_def* %arrayidx2301 to %struct.rtx_def**
  %1047 = load %struct.rtx_def*, %struct.rtx_def** %rtx2302, align 8
  %1048 = bitcast %struct.rtx_def* %1047 to i32*
  %bf.load2303 = load i32, i32* %1048, align 8
  %bf.clear2304 = and i32 %bf.load2303, 65535
  %cmp2305 = icmp eq i32 %bf.clear2304, 79
  br i1 %cmp2305, label %if.then.2307, label %if.end.2329

if.then.2307:                                     ; preds = %land.lhs.true.2299
  %1049 = load i32, i32* %mode, align 4
  %1050 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2309 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1050, i32 0, i32 1
  %arrayidx2310 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2309, i32 0, i64 0
  %rtx2311 = bitcast %union.rtunion_def* %arrayidx2310 to %struct.rtx_def**
  %1051 = load %struct.rtx_def*, %struct.rtx_def** %rtx2311, align 8
  %fld2312 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1051, i32 0, i32 1
  %arrayidx2313 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2312, i32 0, i64 0
  %rtx2314 = bitcast %union.rtunion_def* %arrayidx2313 to %struct.rtx_def**
  %1052 = load %struct.rtx_def*, %struct.rtx_def** %rtx2314, align 8
  %1053 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2315 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1053, i32 0, i32 1
  %arrayidx2316 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2315, i32 0, i64 1
  %rtx2317 = bitcast %union.rtunion_def* %arrayidx2316 to %struct.rtx_def**
  %1054 = load %struct.rtx_def*, %struct.rtx_def** %rtx2317, align 8
  %call2318 = call %struct.rtx_def* @simplify_binary_operation(i32 78, i32 %1049, %struct.rtx_def* %1052, %struct.rtx_def* %1054)
  store %struct.rtx_def* %call2318, %struct.rtx_def** %tem2308, align 8
  %1055 = load %struct.rtx_def*, %struct.rtx_def** %tem2308, align 8
  %tobool2319 = icmp ne %struct.rtx_def* %1055, null
  br i1 %tobool2319, label %if.then.2320, label %if.end.2328

if.then.2320:                                     ; preds = %if.then.2307
  %1056 = load i32, i32* %mode, align 4
  %1057 = load %struct.rtx_def*, %struct.rtx_def** %tem2308, align 8
  %1058 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2321 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1058, i32 0, i32 1
  %arrayidx2322 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2321, i32 0, i64 0
  %rtx2323 = bitcast %union.rtunion_def* %arrayidx2322 to %struct.rtx_def**
  %1059 = load %struct.rtx_def*, %struct.rtx_def** %rtx2323, align 8
  %fld2324 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1059, i32 0, i32 1
  %arrayidx2325 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2324, i32 0, i64 1
  %rtx2326 = bitcast %union.rtunion_def* %arrayidx2325 to %struct.rtx_def**
  %1060 = load %struct.rtx_def*, %struct.rtx_def** %rtx2326, align 8
  %call2327 = call %struct.rtx_def* @gen_binary(i32 79, i32 %1056, %struct.rtx_def* %1057, %struct.rtx_def* %1060)
  store %struct.rtx_def* %call2327, %struct.rtx_def** %retval
  br label %return

if.end.2328:                                      ; preds = %if.then.2307
  br label %if.end.2329

if.end.2329:                                      ; preds = %if.end.2328, %land.lhs.true.2299, %land.lhs.true.2297, %lor.lhs.false.2292
  br label %sw.epilog.2887

sw.bb.2330:                                       ; preds = %if.end.682
  %1061 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2331 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1061, i32 0, i32 1
  %arrayidx2332 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2331, i32 0, i64 1
  %rtx2333 = bitcast %union.rtunion_def* %arrayidx2332 to %struct.rtx_def**
  %1062 = load %struct.rtx_def*, %struct.rtx_def** %rtx2333, align 8
  %1063 = bitcast %struct.rtx_def* %1062 to i32*
  %bf.load2334 = load i32, i32* %1063, align 8
  %bf.clear2335 = and i32 %bf.load2334, 65535
  %cmp2336 = icmp eq i32 %bf.clear2335, 54
  br i1 %cmp2336, label %land.lhs.true.2338, label %if.end.2393

land.lhs.true.2338:                               ; preds = %sw.bb.2330
  %1064 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2339 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1064, i32 0, i32 1
  %arrayidx2340 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2339, i32 0, i64 1
  %rtx2341 = bitcast %union.rtunion_def* %arrayidx2340 to %struct.rtx_def**
  %1065 = load %struct.rtx_def*, %struct.rtx_def** %rtx2341, align 8
  %fld2342 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1065, i32 0, i32 1
  %arrayidx2343 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2342, i32 0, i64 0
  %rtwint2344 = bitcast %union.rtunion_def* %arrayidx2343 to i64*
  %1066 = load i64, i64* %rtwint2344, align 8
  %call2345 = call i32 @exact_log2_wide(i64 %1066)
  store i32 %call2345, i32* %i, align 4
  %cmp2346 = icmp sge i32 %call2345, 0
  br i1 %cmp2346, label %land.lhs.true.2348, label %if.end.2393

land.lhs.true.2348:                               ; preds = %land.lhs.true.2338
  %1067 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2349 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1067, i32 0, i32 1
  %arrayidx2350 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2349, i32 0, i64 0
  %rtx2351 = bitcast %union.rtunion_def* %arrayidx2350 to %struct.rtx_def**
  %1068 = load %struct.rtx_def*, %struct.rtx_def** %rtx2351, align 8
  %1069 = bitcast %struct.rtx_def* %1068 to i32*
  %bf.load2352 = load i32, i32* %1069, align 8
  %bf.clear2353 = and i32 %bf.load2352, 65535
  %cmp2354 = icmp eq i32 %bf.clear2353, 87
  br i1 %cmp2354, label %if.then.2388, label %lor.lhs.false.2356

lor.lhs.false.2356:                               ; preds = %land.lhs.true.2348
  %1070 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2357 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1070, i32 0, i32 1
  %arrayidx2358 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2357, i32 0, i64 0
  %rtx2359 = bitcast %union.rtunion_def* %arrayidx2358 to %struct.rtx_def**
  %1071 = load %struct.rtx_def*, %struct.rtx_def** %rtx2359, align 8
  %1072 = bitcast %struct.rtx_def* %1071 to i32*
  %bf.load2360 = load i32, i32* %1072, align 8
  %bf.clear2361 = and i32 %bf.load2360, 65535
  %cmp2362 = icmp eq i32 %bf.clear2361, 90
  br i1 %cmp2362, label %if.then.2388, label %lor.lhs.false.2364

lor.lhs.false.2364:                               ; preds = %lor.lhs.false.2356
  %1073 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2365 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1073, i32 0, i32 1
  %arrayidx2366 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2365, i32 0, i64 0
  %rtx2367 = bitcast %union.rtunion_def* %arrayidx2366 to %struct.rtx_def**
  %1074 = load %struct.rtx_def*, %struct.rtx_def** %rtx2367, align 8
  %1075 = bitcast %struct.rtx_def* %1074 to i32*
  %bf.load2368 = load i32, i32* %1075, align 8
  %bf.clear2369 = and i32 %bf.load2368, 65535
  %cmp2370 = icmp eq i32 %bf.clear2369, 89
  br i1 %cmp2370, label %if.then.2388, label %lor.lhs.false.2372

lor.lhs.false.2372:                               ; preds = %lor.lhs.false.2364
  %1076 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2373 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1076, i32 0, i32 1
  %arrayidx2374 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2373, i32 0, i64 0
  %rtx2375 = bitcast %union.rtunion_def* %arrayidx2374 to %struct.rtx_def**
  %1077 = load %struct.rtx_def*, %struct.rtx_def** %rtx2375, align 8
  %1078 = bitcast %struct.rtx_def* %1077 to i32*
  %bf.load2376 = load i32, i32* %1078, align 8
  %bf.clear2377 = and i32 %bf.load2376, 65535
  %cmp2378 = icmp eq i32 %bf.clear2377, 88
  br i1 %cmp2378, label %if.then.2388, label %lor.lhs.false.2380

lor.lhs.false.2380:                               ; preds = %lor.lhs.false.2372
  %1079 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2381 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1079, i32 0, i32 1
  %arrayidx2382 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2381, i32 0, i64 0
  %rtx2383 = bitcast %union.rtunion_def* %arrayidx2382 to %struct.rtx_def**
  %1080 = load %struct.rtx_def*, %struct.rtx_def** %rtx2383, align 8
  %1081 = bitcast %struct.rtx_def* %1080 to i32*
  %bf.load2384 = load i32, i32* %1081, align 8
  %bf.clear2385 = and i32 %bf.load2384, 65535
  %cmp2386 = icmp eq i32 %bf.clear2385, 91
  br i1 %cmp2386, label %if.then.2388, label %if.end.2393

if.then.2388:                                     ; preds = %lor.lhs.false.2380, %lor.lhs.false.2372, %lor.lhs.false.2364, %lor.lhs.false.2356, %land.lhs.true.2348
  %1082 = load i32, i32* %mode, align 4
  %1083 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2389 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1083, i32 0, i32 1
  %arrayidx2390 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2389, i32 0, i64 0
  %rtx2391 = bitcast %union.rtunion_def* %arrayidx2390 to %struct.rtx_def**
  %1084 = load %struct.rtx_def*, %struct.rtx_def** %rtx2391, align 8
  %1085 = load i32, i32* %i, align 4
  %call2392 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 90, i32 %1082, %struct.rtx_def* %1084, i32 %1085)
  store %struct.rtx_def* %call2392, %struct.rtx_def** %retval
  br label %return

if.end.2393:                                      ; preds = %lor.lhs.false.2380, %land.lhs.true.2338, %sw.bb.2330
  br label %sw.epilog.2887

sw.bb.2394:                                       ; preds = %if.end.682, %if.end.682, %if.end.682, %if.end.682, %if.end.682, %if.end.682, %if.end.682, %if.end.682, %if.end.682, %if.end.682, %if.end.682, %if.end.682, %if.end.682, %if.end.682, %if.end.682, %if.end.682, %if.end.682, %if.end.682
  %1086 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2395 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1086, i32 0, i32 1
  %arrayidx2396 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2395, i32 0, i64 0
  %rtx2397 = bitcast %union.rtunion_def* %arrayidx2396 to %struct.rtx_def**
  %1087 = load %struct.rtx_def*, %struct.rtx_def** %rtx2397, align 8
  %1088 = bitcast %struct.rtx_def* %1087 to i32*
  %bf.load2398 = load i32, i32* %1088, align 8
  %bf.clear2399 = and i32 %bf.load2398, 65535
  %cmp2400 = icmp eq i32 %bf.clear2399, 74
  br i1 %cmp2400, label %if.then.2413, label %lor.lhs.false.2402

lor.lhs.false.2402:                               ; preds = %sw.bb.2394
  %1089 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2403 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1089, i32 0, i32 1
  %arrayidx2404 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2403, i32 0, i64 0
  %rtx2405 = bitcast %union.rtunion_def* %arrayidx2404 to %struct.rtx_def**
  %1090 = load %struct.rtx_def*, %struct.rtx_def** %rtx2405, align 8
  %1091 = bitcast %struct.rtx_def* %1090 to i32*
  %bf.load2406 = load i32, i32* %1091, align 8
  %bf.lshr2407 = lshr i32 %bf.load2406, 16
  %bf.clear2408 = and i32 %bf.lshr2407, 255
  %idxprom2409 = sext i32 %bf.clear2408 to i64
  %arrayidx2410 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2409
  %1092 = load i32, i32* %arrayidx2410, align 4
  %cmp2411 = icmp ne i32 %1092, 4
  br i1 %cmp2411, label %if.then.2413, label %if.end.2615

if.then.2413:                                     ; preds = %lor.lhs.false.2402, %sw.bb.2394
  %1093 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2414 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1093, i32 0, i32 1
  %arrayidx2415 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2414, i32 0, i64 0
  %rtx2416 = bitcast %union.rtunion_def* %arrayidx2415 to %struct.rtx_def**
  %1094 = load %struct.rtx_def*, %struct.rtx_def** %rtx2416, align 8
  store %struct.rtx_def* %1094, %struct.rtx_def** %op0, align 8
  %1095 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2417 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1095, i32 0, i32 1
  %arrayidx2418 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2417, i32 0, i64 1
  %rtx2419 = bitcast %union.rtunion_def* %arrayidx2418 to %struct.rtx_def**
  %1096 = load %struct.rtx_def*, %struct.rtx_def** %rtx2419, align 8
  store %struct.rtx_def* %1096, %struct.rtx_def** %op1, align 8
  %1097 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1098 = bitcast %struct.rtx_def* %1097 to i32*
  %bf.load2420 = load i32, i32* %1098, align 8
  %bf.clear2421 = and i32 %bf.load2420, 65535
  %cmp2422 = icmp eq i32 %bf.clear2421, 74
  br i1 %cmp2422, label %if.then.2424, label %if.end.2431

if.then.2424:                                     ; preds = %if.then.2413
  %1099 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2425 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1099, i32 0, i32 1
  %arrayidx2426 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2425, i32 0, i64 1
  %rtx2427 = bitcast %union.rtunion_def* %arrayidx2426 to %struct.rtx_def**
  %1100 = load %struct.rtx_def*, %struct.rtx_def** %rtx2427, align 8
  store %struct.rtx_def* %1100, %struct.rtx_def** %op1, align 8
  %1101 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2428 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1101, i32 0, i32 1
  %arrayidx2429 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2428, i32 0, i64 0
  %rtx2430 = bitcast %union.rtunion_def* %arrayidx2429 to %struct.rtx_def**
  %1102 = load %struct.rtx_def*, %struct.rtx_def** %rtx2430, align 8
  store %struct.rtx_def* %1102, %struct.rtx_def** %op0, align 8
  br label %if.end.2431

if.end.2431:                                      ; preds = %if.then.2424, %if.then.2413
  %1103 = load i32, i32* %code, align 4
  %call2432 = call i32 @simplify_comparison(i32 %1103, %struct.rtx_def** %op0, %struct.rtx_def** %op1)
  store i32 %call2432, i32* %new_code, align 4
  %1104 = load i32, i32* %new_code, align 4
  %cmp2433 = icmp eq i32 %1104, 102
  br i1 %cmp2433, label %land.lhs.true.2435, label %if.else.2456

land.lhs.true.2435:                               ; preds = %if.end.2431
  %1105 = load i32, i32* %mode, align 4
  %idxprom2436 = sext i32 %1105 to i64
  %arrayidx2437 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2436
  %1106 = load i32, i32* %arrayidx2437, align 4
  %cmp2438 = icmp eq i32 %1106, 1
  br i1 %cmp2438, label %land.lhs.true.2440, label %if.else.2456

land.lhs.true.2440:                               ; preds = %land.lhs.true.2435
  %1107 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %1108 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp2441 = icmp eq %struct.rtx_def* %1107, %1108
  br i1 %cmp2441, label %land.lhs.true.2443, label %if.else.2456

land.lhs.true.2443:                               ; preds = %land.lhs.true.2440
  %1109 = load i32, i32* %mode, align 4
  %1110 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1111 = bitcast %struct.rtx_def* %1110 to i32*
  %bf.load2444 = load i32, i32* %1111, align 8
  %bf.lshr2445 = lshr i32 %bf.load2444, 16
  %bf.clear2446 = and i32 %bf.lshr2445, 255
  %cmp2447 = icmp eq i32 %1109, %bf.clear2446
  br i1 %cmp2447, label %land.lhs.true.2449, label %if.else.2456

land.lhs.true.2449:                               ; preds = %land.lhs.true.2443
  %1112 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1113 = load i32, i32* %mode, align 4
  %call2450 = call i64 @nonzero_bits(%struct.rtx_def* %1112, i32 %1113)
  %cmp2451 = icmp eq i64 %call2450, 1
  br i1 %cmp2451, label %if.then.2453, label %if.else.2456

if.then.2453:                                     ; preds = %land.lhs.true.2449
  %1114 = load i32, i32* %mode, align 4
  %1115 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call2454 = call %struct.rtx_def* @expand_compound_operation(%struct.rtx_def* %1115)
  %call2455 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %1114, %struct.rtx_def* %call2454)
  store %struct.rtx_def* %call2455, %struct.rtx_def** %retval
  br label %return

if.else.2456:                                     ; preds = %land.lhs.true.2449, %land.lhs.true.2443, %land.lhs.true.2440, %land.lhs.true.2435, %if.end.2431
  %1116 = load i32, i32* %new_code, align 4
  %cmp2457 = icmp eq i32 %1116, 102
  br i1 %cmp2457, label %land.lhs.true.2459, label %if.else.2484

land.lhs.true.2459:                               ; preds = %if.else.2456
  %1117 = load i32, i32* %mode, align 4
  %idxprom2460 = sext i32 %1117 to i64
  %arrayidx2461 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2460
  %1118 = load i32, i32* %arrayidx2461, align 4
  %cmp2462 = icmp eq i32 %1118, 1
  br i1 %cmp2462, label %land.lhs.true.2464, label %if.else.2484

land.lhs.true.2464:                               ; preds = %land.lhs.true.2459
  %1119 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %1120 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp2465 = icmp eq %struct.rtx_def* %1119, %1120
  br i1 %cmp2465, label %land.lhs.true.2467, label %if.else.2484

land.lhs.true.2467:                               ; preds = %land.lhs.true.2464
  %1121 = load i32, i32* %mode, align 4
  %1122 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1123 = bitcast %struct.rtx_def* %1122 to i32*
  %bf.load2468 = load i32, i32* %1123, align 8
  %bf.lshr2469 = lshr i32 %bf.load2468, 16
  %bf.clear2470 = and i32 %bf.lshr2469, 255
  %cmp2471 = icmp eq i32 %1121, %bf.clear2470
  br i1 %cmp2471, label %land.lhs.true.2473, label %if.else.2484

land.lhs.true.2473:                               ; preds = %land.lhs.true.2467
  %1124 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1125 = load i32, i32* %mode, align 4
  %call2474 = call i32 @num_sign_bit_copies(%struct.rtx_def* %1124, i32 %1125)
  %1126 = load i32, i32* %mode, align 4
  %idxprom2475 = sext i32 %1126 to i64
  %arrayidx2476 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2475
  %1127 = load i16, i16* %arrayidx2476, align 2
  %conv2477 = zext i16 %1127 to i32
  %cmp2478 = icmp eq i32 %call2474, %conv2477
  br i1 %cmp2478, label %if.then.2480, label %if.else.2484

if.then.2480:                                     ; preds = %land.lhs.true.2473
  %1128 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call2481 = call %struct.rtx_def* @expand_compound_operation(%struct.rtx_def* %1128)
  store %struct.rtx_def* %call2481, %struct.rtx_def** %op0, align 8
  %1129 = load i32, i32* %mode, align 4
  %1130 = load i32, i32* %mode, align 4
  %1131 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call2482 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %1130, %struct.rtx_def* %1131)
  %1132 = load i32, i32* %mode, align 4
  %call2483 = call %struct.rtx_def* @simplify_gen_unary(i32 77, i32 %1129, %struct.rtx_def* %call2482, i32 %1132)
  store %struct.rtx_def* %call2483, %struct.rtx_def** %retval
  br label %return

if.else.2484:                                     ; preds = %land.lhs.true.2473, %land.lhs.true.2467, %land.lhs.true.2464, %land.lhs.true.2459, %if.else.2456
  %1133 = load i32, i32* %new_code, align 4
  %cmp2485 = icmp eq i32 %1133, 103
  br i1 %cmp2485, label %land.lhs.true.2487, label %if.else.2509

land.lhs.true.2487:                               ; preds = %if.else.2484
  %1134 = load i32, i32* %mode, align 4
  %idxprom2488 = sext i32 %1134 to i64
  %arrayidx2489 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2488
  %1135 = load i32, i32* %arrayidx2489, align 4
  %cmp2490 = icmp eq i32 %1135, 1
  br i1 %cmp2490, label %land.lhs.true.2492, label %if.else.2509

land.lhs.true.2492:                               ; preds = %land.lhs.true.2487
  %1136 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %1137 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp2493 = icmp eq %struct.rtx_def* %1136, %1137
  br i1 %cmp2493, label %land.lhs.true.2495, label %if.else.2509

land.lhs.true.2495:                               ; preds = %land.lhs.true.2492
  %1138 = load i32, i32* %mode, align 4
  %1139 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1140 = bitcast %struct.rtx_def* %1139 to i32*
  %bf.load2496 = load i32, i32* %1140, align 8
  %bf.lshr2497 = lshr i32 %bf.load2496, 16
  %bf.clear2498 = and i32 %bf.lshr2497, 255
  %cmp2499 = icmp eq i32 %1138, %bf.clear2498
  br i1 %cmp2499, label %land.lhs.true.2501, label %if.else.2509

land.lhs.true.2501:                               ; preds = %land.lhs.true.2495
  %1141 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1142 = load i32, i32* %mode, align 4
  %call2502 = call i64 @nonzero_bits(%struct.rtx_def* %1141, i32 %1142)
  %cmp2503 = icmp eq i64 %call2502, 1
  br i1 %cmp2503, label %if.then.2505, label %if.else.2509

if.then.2505:                                     ; preds = %land.lhs.true.2501
  %1143 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call2506 = call %struct.rtx_def* @expand_compound_operation(%struct.rtx_def* %1143)
  store %struct.rtx_def* %call2506, %struct.rtx_def** %op0, align 8
  %1144 = load i32, i32* %mode, align 4
  %1145 = load i32, i32* %mode, align 4
  %1146 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call2507 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %1145, %struct.rtx_def* %1146)
  %1147 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 65), align 8
  %call2508 = call %struct.rtx_def* @gen_binary(i32 85, i32 %1144, %struct.rtx_def* %call2507, %struct.rtx_def* %1147)
  store %struct.rtx_def* %call2508, %struct.rtx_def** %retval
  br label %return

if.else.2509:                                     ; preds = %land.lhs.true.2501, %land.lhs.true.2495, %land.lhs.true.2492, %land.lhs.true.2487, %if.else.2484
  %1148 = load i32, i32* %new_code, align 4
  %cmp2510 = icmp eq i32 %1148, 103
  br i1 %cmp2510, label %land.lhs.true.2512, label %if.end.2537

land.lhs.true.2512:                               ; preds = %if.else.2509
  %1149 = load i32, i32* %mode, align 4
  %idxprom2513 = sext i32 %1149 to i64
  %arrayidx2514 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2513
  %1150 = load i32, i32* %arrayidx2514, align 4
  %cmp2515 = icmp eq i32 %1150, 1
  br i1 %cmp2515, label %land.lhs.true.2517, label %if.end.2537

land.lhs.true.2517:                               ; preds = %land.lhs.true.2512
  %1151 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %1152 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp2518 = icmp eq %struct.rtx_def* %1151, %1152
  br i1 %cmp2518, label %land.lhs.true.2520, label %if.end.2537

land.lhs.true.2520:                               ; preds = %land.lhs.true.2517
  %1153 = load i32, i32* %mode, align 4
  %1154 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1155 = bitcast %struct.rtx_def* %1154 to i32*
  %bf.load2521 = load i32, i32* %1155, align 8
  %bf.lshr2522 = lshr i32 %bf.load2521, 16
  %bf.clear2523 = and i32 %bf.lshr2522, 255
  %cmp2524 = icmp eq i32 %1153, %bf.clear2523
  br i1 %cmp2524, label %land.lhs.true.2526, label %if.end.2537

land.lhs.true.2526:                               ; preds = %land.lhs.true.2520
  %1156 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1157 = load i32, i32* %mode, align 4
  %call2527 = call i32 @num_sign_bit_copies(%struct.rtx_def* %1156, i32 %1157)
  %1158 = load i32, i32* %mode, align 4
  %idxprom2528 = sext i32 %1158 to i64
  %arrayidx2529 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2528
  %1159 = load i16, i16* %arrayidx2529, align 2
  %conv2530 = zext i16 %1159 to i32
  %cmp2531 = icmp eq i32 %call2527, %conv2530
  br i1 %cmp2531, label %if.then.2533, label %if.end.2537

if.then.2533:                                     ; preds = %land.lhs.true.2526
  %1160 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call2534 = call %struct.rtx_def* @expand_compound_operation(%struct.rtx_def* %1160)
  store %struct.rtx_def* %call2534, %struct.rtx_def** %op0, align 8
  %1161 = load i32, i32* %mode, align 4
  %1162 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call2535 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %1161, %struct.rtx_def* %1162)
  %call2536 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call2535, i64 1)
  store %struct.rtx_def* %call2536, %struct.rtx_def** %retval
  br label %return

if.end.2537:                                      ; preds = %land.lhs.true.2526, %land.lhs.true.2520, %land.lhs.true.2517, %land.lhs.true.2512, %if.else.2509
  br label %if.end.2538

if.end.2538:                                      ; preds = %if.end.2537
  br label %if.end.2539

if.end.2539:                                      ; preds = %if.end.2538
  br label %if.end.2540

if.end.2540:                                      ; preds = %if.end.2539
  %1163 = load i32, i32* %new_code, align 4
  %cmp2541 = icmp eq i32 %1163, 102
  br i1 %cmp2541, label %land.lhs.true.2543, label %if.end.2603

land.lhs.true.2543:                               ; preds = %if.end.2540
  %1164 = load i32, i32* %mode, align 4
  %idxprom2544 = sext i32 %1164 to i64
  %arrayidx2545 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2544
  %1165 = load i32, i32* %arrayidx2545, align 4
  %cmp2546 = icmp eq i32 %1165, 1
  br i1 %cmp2546, label %land.lhs.true.2548, label %if.end.2603

land.lhs.true.2548:                               ; preds = %land.lhs.true.2543
  %1166 = load i32, i32* %mode, align 4
  %idxprom2549 = sext i32 %1166 to i64
  %arrayidx2550 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2549
  %1167 = load i16, i16* %arrayidx2550, align 2
  %conv2551 = zext i16 %1167 to i32
  %cmp2552 = icmp sle i32 %conv2551, 64
  br i1 %cmp2552, label %land.lhs.true.2554, label %if.end.2603

land.lhs.true.2554:                               ; preds = %land.lhs.true.2548
  %1168 = load i32, i32* %mode, align 4
  %idxprom2555 = sext i32 %1168 to i64
  %arrayidx2556 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom2555
  %1169 = load i64, i64* %arrayidx2556, align 8
  %and2557 = and i64 1, %1169
  %1170 = load i32, i32* %mode, align 4
  %idxprom2558 = sext i32 %1170 to i64
  %arrayidx2559 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2558
  %1171 = load i16, i16* %arrayidx2559, align 2
  %conv2560 = zext i16 %1171 to i32
  %sub2561 = sub nsw i32 %conv2560, 1
  %sh_prom2562 = zext i32 %sub2561 to i64
  %shl2563 = shl i64 1, %sh_prom2562
  %cmp2564 = icmp eq i64 %and2557, %shl2563
  br i1 %cmp2564, label %land.lhs.true.2566, label %if.end.2603

land.lhs.true.2566:                               ; preds = %land.lhs.true.2554
  %1172 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %1173 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp2567 = icmp eq %struct.rtx_def* %1172, %1173
  br i1 %cmp2567, label %land.lhs.true.2569, label %if.end.2603

land.lhs.true.2569:                               ; preds = %land.lhs.true.2566
  %1174 = load i32, i32* %mode, align 4
  %1175 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1176 = bitcast %struct.rtx_def* %1175 to i32*
  %bf.load2570 = load i32, i32* %1176, align 8
  %bf.lshr2571 = lshr i32 %bf.load2570, 16
  %bf.clear2572 = and i32 %bf.lshr2571, 255
  %cmp2573 = icmp eq i32 %1174, %bf.clear2572
  br i1 %cmp2573, label %land.lhs.true.2575, label %if.end.2603

land.lhs.true.2575:                               ; preds = %land.lhs.true.2569
  %1177 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1178 = load i32, i32* %mode, align 4
  %call2576 = call i64 @nonzero_bits(%struct.rtx_def* %1177, i32 %1178)
  %call2577 = call i32 @exact_log2_wide(i64 %call2576)
  store i32 %call2577, i32* %i, align 4
  %cmp2578 = icmp sge i32 %call2577, 0
  br i1 %cmp2578, label %if.then.2580, label %if.end.2603

if.then.2580:                                     ; preds = %land.lhs.true.2575
  %1179 = load i32, i32* %mode, align 4
  %1180 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call2581 = call %struct.rtx_def* @expand_compound_operation(%struct.rtx_def* %1180)
  %1181 = load i32, i32* %mode, align 4
  %idxprom2582 = sext i32 %1181 to i64
  %arrayidx2583 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2582
  %1182 = load i16, i16* %arrayidx2583, align 2
  %conv2584 = zext i16 %1182 to i32
  %sub2585 = sub nsw i32 %conv2584, 1
  %1183 = load i32, i32* %i, align 4
  %sub2586 = sub nsw i32 %sub2585, %1183
  %call2587 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 87, i32 %1179, %struct.rtx_def* %call2581, i32 %sub2586)
  store %struct.rtx_def* %call2587, %struct.rtx_def** %x.addr, align 8
  %1184 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1185 = bitcast %struct.rtx_def* %1184 to i32*
  %bf.load2588 = load i32, i32* %1185, align 8
  %bf.clear2589 = and i32 %bf.load2588, 65535
  %cmp2590 = icmp eq i32 %bf.clear2589, 83
  br i1 %cmp2590, label %land.lhs.true.2592, label %if.else.2602

land.lhs.true.2592:                               ; preds = %if.then.2580
  %1186 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2593 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1186, i32 0, i32 1
  %arrayidx2594 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2593, i32 0, i64 1
  %rtx2595 = bitcast %union.rtunion_def* %arrayidx2594 to %struct.rtx_def**
  %1187 = load %struct.rtx_def*, %struct.rtx_def** %rtx2595, align 8
  %1188 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8
  %cmp2596 = icmp eq %struct.rtx_def* %1187, %1188
  br i1 %cmp2596, label %if.then.2598, label %if.else.2602

if.then.2598:                                     ; preds = %land.lhs.true.2592
  %1189 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2599 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1189, i32 0, i32 1
  %arrayidx2600 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2599, i32 0, i64 0
  %rtx2601 = bitcast %union.rtunion_def* %arrayidx2600 to %struct.rtx_def**
  %1190 = load %struct.rtx_def*, %struct.rtx_def** %rtx2601, align 8
  store %struct.rtx_def* %1190, %struct.rtx_def** %retval
  br label %return

if.else.2602:                                     ; preds = %land.lhs.true.2592, %if.then.2580
  %1191 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %1191, %struct.rtx_def** %retval
  br label %return

if.end.2603:                                      ; preds = %land.lhs.true.2575, %land.lhs.true.2569, %land.lhs.true.2566, %land.lhs.true.2554, %land.lhs.true.2548, %land.lhs.true.2543, %if.end.2540
  %1192 = load i32, i32* %new_code, align 4
  %1193 = load i32, i32* %code, align 4
  %cmp2604 = icmp ne i32 %1192, %1193
  br i1 %cmp2604, label %if.then.2606, label %if.end.2608

if.then.2606:                                     ; preds = %if.end.2603
  %1194 = load i32, i32* %new_code, align 4
  %1195 = load i32, i32* %mode, align 4
  %1196 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1197 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call2607 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %1194, i32 %1195, %struct.rtx_def* %1196, %struct.rtx_def* %1197)
  store %struct.rtx_def* %call2607, %struct.rtx_def** %retval
  br label %return

if.end.2608:                                      ; preds = %if.end.2603
  %1198 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2609 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1198, i32 0, i32 1
  %arrayidx2610 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2609, i32 0, i64 0
  %rtx2611 = bitcast %union.rtunion_def* %arrayidx2610 to %struct.rtx_def**
  %1199 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx2611, %struct.rtx_def* %1199)
  %1200 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2612 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1200, i32 0, i32 1
  %arrayidx2613 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2612, i32 0, i64 1
  %rtx2614 = bitcast %union.rtunion_def* %arrayidx2613 to %struct.rtx_def**
  %1201 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx2614, %struct.rtx_def* %1201)
  br label %if.end.2615

if.end.2615:                                      ; preds = %if.end.2608, %lor.lhs.false.2402
  br label %sw.epilog.2887

sw.bb.2616:                                       ; preds = %if.end.682
  %1202 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call2617 = call %struct.rtx_def* @simplify_if_then_else(%struct.rtx_def* %1202)
  store %struct.rtx_def* %call2617, %struct.rtx_def** %retval
  br label %return

sw.bb.2618:                                       ; preds = %if.end.682, %if.end.682, %if.end.682, %if.end.682
  %1203 = load i32, i32* %in_dest.addr, align 4
  %tobool2619 = icmp ne i32 %1203, 0
  br i1 %tobool2619, label %if.then.2620, label %if.end.2621

if.then.2620:                                     ; preds = %sw.bb.2618
  %1204 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %1204, %struct.rtx_def** %retval
  br label %return

if.end.2621:                                      ; preds = %sw.bb.2618
  %1205 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call2622 = call %struct.rtx_def* @expand_compound_operation(%struct.rtx_def* %1205)
  store %struct.rtx_def* %call2622, %struct.rtx_def** %retval
  br label %return

sw.bb.2623:                                       ; preds = %if.end.682
  %1206 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call2624 = call %struct.rtx_def* @simplify_set(%struct.rtx_def* %1206)
  store %struct.rtx_def* %call2624, %struct.rtx_def** %retval
  br label %return

sw.bb.2625:                                       ; preds = %if.end.682, %if.end.682, %if.end.682
  %1207 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1208 = load i32, i32* %last.addr, align 4
  %call2626 = call %struct.rtx_def* @simplify_logical(%struct.rtx_def* %1207, i32 %1208)
  store %struct.rtx_def* %call2626, %struct.rtx_def** %retval
  br label %return

sw.bb.2627:                                       ; preds = %if.end.682
  %1209 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2628 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1209, i32 0, i32 1
  %arrayidx2629 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2628, i32 0, i64 0
  %rtx2630 = bitcast %union.rtunion_def* %arrayidx2629 to %struct.rtx_def**
  %1210 = load %struct.rtx_def*, %struct.rtx_def** %rtx2630, align 8
  %1211 = bitcast %struct.rtx_def* %1210 to i32*
  %bf.load2631 = load i32, i32* %1211, align 8
  %bf.clear2632 = and i32 %bf.load2631, 65535
  %cmp2633 = icmp eq i32 %bf.clear2632, 77
  br i1 %cmp2633, label %if.then.2635, label %if.end.2645

if.then.2635:                                     ; preds = %sw.bb.2627
  %1212 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2636 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1212, i32 0, i32 1
  %arrayidx2637 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2636, i32 0, i64 0
  %rtx2638 = bitcast %union.rtunion_def* %arrayidx2637 to %struct.rtx_def**
  %1213 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2639 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1213, i32 0, i32 1
  %arrayidx2640 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2639, i32 0, i64 0
  %rtx2641 = bitcast %union.rtunion_def* %arrayidx2640 to %struct.rtx_def**
  %1214 = load %struct.rtx_def*, %struct.rtx_def** %rtx2641, align 8
  %fld2642 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1214, i32 0, i32 1
  %arrayidx2643 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2642, i32 0, i64 0
  %rtx2644 = bitcast %union.rtunion_def* %arrayidx2643 to %struct.rtx_def**
  %1215 = load %struct.rtx_def*, %struct.rtx_def** %rtx2644, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx2638, %struct.rtx_def* %1215)
  br label %if.end.2645

if.end.2645:                                      ; preds = %if.then.2635, %sw.bb.2627
  %1216 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2646 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1216, i32 0, i32 1
  %arrayidx2647 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2646, i32 0, i64 0
  %rtx2648 = bitcast %union.rtunion_def* %arrayidx2647 to %struct.rtx_def**
  %1217 = load %struct.rtx_def*, %struct.rtx_def** %rtx2648, align 8
  %1218 = bitcast %struct.rtx_def* %1217 to i32*
  %bf.load2649 = load i32, i32* %1218, align 8
  %bf.lshr2650 = lshr i32 %bf.load2649, 16
  %bf.clear2651 = and i32 %bf.lshr2650, 255
  %cmp2652 = icmp eq i32 %bf.clear2651, 0
  br i1 %cmp2652, label %if.then.2654, label %if.end.2655

if.then.2654:                                     ; preds = %if.end.2645
  br label %sw.epilog.2887

if.end.2655:                                      ; preds = %if.end.2645
  %1219 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2656 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1219, i32 0, i32 1
  %arrayidx2657 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2656, i32 0, i64 0
  %rtx2658 = bitcast %union.rtunion_def* %arrayidx2657 to %struct.rtx_def**
  %1220 = load %struct.rtx_def*, %struct.rtx_def** %rtx2658, align 8
  %1221 = bitcast %struct.rtx_def* %1220 to i32*
  %bf.load2659 = load i32, i32* %1221, align 8
  %bf.clear2660 = and i32 %bf.load2659, 65535
  %cmp2661 = icmp eq i32 %bf.clear2660, 131
  br i1 %cmp2661, label %if.then.2709, label %lor.lhs.false.2663

lor.lhs.false.2663:                               ; preds = %if.end.2655
  %1222 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2664 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1222, i32 0, i32 1
  %arrayidx2665 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2664, i32 0, i64 0
  %rtx2666 = bitcast %union.rtunion_def* %arrayidx2665 to %struct.rtx_def**
  %1223 = load %struct.rtx_def*, %struct.rtx_def** %rtx2666, align 8
  %1224 = bitcast %struct.rtx_def* %1223 to i32*
  %bf.load2667 = load i32, i32* %1224, align 8
  %bf.clear2668 = and i32 %bf.load2667, 65535
  %cmp2669 = icmp eq i32 %bf.clear2668, 129
  br i1 %cmp2669, label %if.then.2709, label %lor.lhs.false.2671

lor.lhs.false.2671:                               ; preds = %lor.lhs.false.2663
  %1225 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2672 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1225, i32 0, i32 1
  %arrayidx2673 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2672, i32 0, i64 0
  %rtx2674 = bitcast %union.rtunion_def* %arrayidx2673 to %struct.rtx_def**
  %1226 = load %struct.rtx_def*, %struct.rtx_def** %rtx2674, align 8
  %1227 = bitcast %struct.rtx_def* %1226 to i32*
  %bf.load2675 = load i32, i32* %1227, align 8
  %bf.lshr2676 = lshr i32 %bf.load2675, 16
  %bf.clear2677 = and i32 %bf.lshr2676, 255
  %idxprom2678 = sext i32 %bf.clear2677 to i64
  %arrayidx2679 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2678
  %1228 = load i16, i16* %arrayidx2679, align 2
  %conv2680 = zext i16 %1228 to i32
  %cmp2681 = icmp sle i32 %conv2680, 64
  br i1 %cmp2681, label %land.lhs.true.2683, label %if.end.2713

land.lhs.true.2683:                               ; preds = %lor.lhs.false.2671
  %1229 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2684 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1229, i32 0, i32 1
  %arrayidx2685 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2684, i32 0, i64 0
  %rtx2686 = bitcast %union.rtunion_def* %arrayidx2685 to %struct.rtx_def**
  %1230 = load %struct.rtx_def*, %struct.rtx_def** %rtx2686, align 8
  %1231 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2687 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1231, i32 0, i32 1
  %arrayidx2688 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2687, i32 0, i64 0
  %rtx2689 = bitcast %union.rtunion_def* %arrayidx2688 to %struct.rtx_def**
  %1232 = load %struct.rtx_def*, %struct.rtx_def** %rtx2689, align 8
  %1233 = bitcast %struct.rtx_def* %1232 to i32*
  %bf.load2690 = load i32, i32* %1233, align 8
  %bf.lshr2691 = lshr i32 %bf.load2690, 16
  %bf.clear2692 = and i32 %bf.lshr2691, 255
  %call2693 = call i64 @nonzero_bits(%struct.rtx_def* %1230, i32 %bf.clear2692)
  %1234 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2694 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1234, i32 0, i32 1
  %arrayidx2695 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2694, i32 0, i64 0
  %rtx2696 = bitcast %union.rtunion_def* %arrayidx2695 to %struct.rtx_def**
  %1235 = load %struct.rtx_def*, %struct.rtx_def** %rtx2696, align 8
  %1236 = bitcast %struct.rtx_def* %1235 to i32*
  %bf.load2697 = load i32, i32* %1236, align 8
  %bf.lshr2698 = lshr i32 %bf.load2697, 16
  %bf.clear2699 = and i32 %bf.lshr2698, 255
  %idxprom2700 = sext i32 %bf.clear2699 to i64
  %arrayidx2701 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2700
  %1237 = load i16, i16* %arrayidx2701, align 2
  %conv2702 = zext i16 %1237 to i32
  %sub2703 = sub nsw i32 %conv2702, 1
  %sh_prom2704 = zext i32 %sub2703 to i64
  %shl2705 = shl i64 1, %sh_prom2704
  %and2706 = and i64 %call2693, %shl2705
  %cmp2707 = icmp eq i64 %and2706, 0
  br i1 %cmp2707, label %if.then.2709, label %if.end.2713

if.then.2709:                                     ; preds = %land.lhs.true.2683, %lor.lhs.false.2663, %if.end.2655
  %1238 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2710 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1238, i32 0, i32 1
  %arrayidx2711 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2710, i32 0, i64 0
  %rtx2712 = bitcast %union.rtunion_def* %arrayidx2711 to %struct.rtx_def**
  %1239 = load %struct.rtx_def*, %struct.rtx_def** %rtx2712, align 8
  store %struct.rtx_def* %1239, %struct.rtx_def** %retval
  br label %return

if.end.2713:                                      ; preds = %land.lhs.true.2683, %lor.lhs.false.2671
  %1240 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2714 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1240, i32 0, i32 1
  %arrayidx2715 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2714, i32 0, i64 0
  %rtx2716 = bitcast %union.rtunion_def* %arrayidx2715 to %struct.rtx_def**
  %1241 = load %struct.rtx_def*, %struct.rtx_def** %rtx2716, align 8
  %1242 = load i32, i32* %mode, align 4
  %call2717 = call i32 @num_sign_bit_copies(%struct.rtx_def* %1241, i32 %1242)
  %1243 = load i32, i32* %mode, align 4
  %idxprom2718 = sext i32 %1243 to i64
  %arrayidx2719 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2718
  %1244 = load i16, i16* %arrayidx2719, align 2
  %conv2720 = zext i16 %1244 to i32
  %cmp2721 = icmp eq i32 %call2717, %conv2720
  br i1 %cmp2721, label %if.then.2723, label %if.end.2728

if.then.2723:                                     ; preds = %if.end.2713
  %1245 = load i32, i32* %mode, align 4
  %1246 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2724 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1246, i32 0, i32 1
  %arrayidx2725 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2724, i32 0, i64 0
  %rtx2726 = bitcast %union.rtunion_def* %arrayidx2725 to %struct.rtx_def**
  %1247 = load %struct.rtx_def*, %struct.rtx_def** %rtx2726, align 8
  %call2727 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 %1245, %struct.rtx_def* %1247)
  store %struct.rtx_def* %call2727, %struct.rtx_def** %retval
  br label %return

if.end.2728:                                      ; preds = %if.end.2713
  br label %sw.epilog.2887

sw.bb.2729:                                       ; preds = %if.end.682
  %1248 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2730 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1248, i32 0, i32 1
  %arrayidx2731 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2730, i32 0, i64 0
  %rtx2732 = bitcast %union.rtunion_def* %arrayidx2731 to %struct.rtx_def**
  %1249 = load %struct.rtx_def*, %struct.rtx_def** %rtx2732, align 8
  %1250 = bitcast %struct.rtx_def* %1249 to i32*
  %bf.load2733 = load i32, i32* %1250, align 8
  %bf.clear2734 = and i32 %bf.load2733, 65535
  %cmp2735 = icmp eq i32 %bf.clear2734, 120
  br i1 %cmp2735, label %if.then.2745, label %lor.lhs.false.2737

lor.lhs.false.2737:                               ; preds = %sw.bb.2729
  %1251 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2738 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1251, i32 0, i32 1
  %arrayidx2739 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2738, i32 0, i64 0
  %rtx2740 = bitcast %union.rtunion_def* %arrayidx2739 to %struct.rtx_def**
  %1252 = load %struct.rtx_def*, %struct.rtx_def** %rtx2740, align 8
  %1253 = bitcast %struct.rtx_def* %1252 to i32*
  %bf.load2741 = load i32, i32* %1253, align 8
  %bf.clear2742 = and i32 %bf.load2741, 65535
  %cmp2743 = icmp eq i32 %bf.clear2742, 121
  br i1 %cmp2743, label %if.then.2745, label %if.end.2755

if.then.2745:                                     ; preds = %lor.lhs.false.2737, %sw.bb.2729
  %1254 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2746 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1254, i32 0, i32 1
  %arrayidx2747 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2746, i32 0, i64 0
  %rtx2748 = bitcast %union.rtunion_def* %arrayidx2747 to %struct.rtx_def**
  %1255 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2749 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1255, i32 0, i32 1
  %arrayidx2750 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2749, i32 0, i64 0
  %rtx2751 = bitcast %union.rtunion_def* %arrayidx2750 to %struct.rtx_def**
  %1256 = load %struct.rtx_def*, %struct.rtx_def** %rtx2751, align 8
  %fld2752 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1256, i32 0, i32 1
  %arrayidx2753 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2752, i32 0, i64 0
  %rtx2754 = bitcast %union.rtunion_def* %arrayidx2753 to %struct.rtx_def**
  %1257 = load %struct.rtx_def*, %struct.rtx_def** %rtx2754, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx2748, %struct.rtx_def* %1257)
  br label %if.end.2755

if.end.2755:                                      ; preds = %if.then.2745, %lor.lhs.false.2737
  br label %sw.epilog.2887

sw.bb.2756:                                       ; preds = %if.end.682
  %1258 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2757 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1258, i32 0, i32 1
  %arrayidx2758 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2757, i32 0, i64 0
  %rtx2759 = bitcast %union.rtunion_def* %arrayidx2758 to %struct.rtx_def**
  %1259 = load %struct.rtx_def*, %struct.rtx_def** %rtx2759, align 8
  %1260 = bitcast %struct.rtx_def* %1259 to i32*
  %bf.load2760 = load i32, i32* %1260, align 8
  %bf.clear2761 = and i32 %bf.load2760, 65535
  %cmp2762 = icmp eq i32 %bf.clear2761, 120
  br i1 %cmp2762, label %if.then.2764, label %if.end.2774

if.then.2764:                                     ; preds = %sw.bb.2756
  %1261 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2765 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1261, i32 0, i32 1
  %arrayidx2766 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2765, i32 0, i64 0
  %rtx2767 = bitcast %union.rtunion_def* %arrayidx2766 to %struct.rtx_def**
  %1262 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2768 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1262, i32 0, i32 1
  %arrayidx2769 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2768, i32 0, i64 0
  %rtx2770 = bitcast %union.rtunion_def* %arrayidx2769 to %struct.rtx_def**
  %1263 = load %struct.rtx_def*, %struct.rtx_def** %rtx2770, align 8
  %fld2771 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1263, i32 0, i32 1
  %arrayidx2772 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2771, i32 0, i64 0
  %rtx2773 = bitcast %union.rtunion_def* %arrayidx2772 to %struct.rtx_def**
  %1264 = load %struct.rtx_def*, %struct.rtx_def** %rtx2773, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx2767, %struct.rtx_def* %1264)
  br label %if.end.2774

if.end.2774:                                      ; preds = %if.then.2764, %sw.bb.2756
  br label %sw.epilog.2887

sw.bb.2775:                                       ; preds = %if.end.682, %if.end.682, %if.end.682, %if.end.682, %if.end.682
  %1265 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2776 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1265, i32 0, i32 1
  %arrayidx2777 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2776, i32 0, i64 1
  %rtx2778 = bitcast %union.rtunion_def* %arrayidx2777 to %struct.rtx_def**
  %1266 = load %struct.rtx_def*, %struct.rtx_def** %rtx2778, align 8
  %1267 = bitcast %struct.rtx_def* %1266 to i32*
  %bf.load2779 = load i32, i32* %1267, align 8
  %bf.clear2780 = and i32 %bf.load2779, 65535
  %cmp2781 = icmp eq i32 %bf.clear2780, 54
  br i1 %cmp2781, label %if.then.2783, label %if.end.2795

if.then.2783:                                     ; preds = %sw.bb.2775
  %1268 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1269 = load i32, i32* %code, align 4
  %1270 = load i32, i32* %mode, align 4
  %1271 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2784 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1271, i32 0, i32 1
  %arrayidx2785 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2784, i32 0, i64 0
  %rtx2786 = bitcast %union.rtunion_def* %arrayidx2785 to %struct.rtx_def**
  %1272 = load %struct.rtx_def*, %struct.rtx_def** %rtx2786, align 8
  %1273 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2787 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1273, i32 0, i32 1
  %arrayidx2788 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2787, i32 0, i64 1
  %rtx2789 = bitcast %union.rtunion_def* %arrayidx2788 to %struct.rtx_def**
  %1274 = load %struct.rtx_def*, %struct.rtx_def** %rtx2789, align 8
  %fld2790 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1274, i32 0, i32 1
  %arrayidx2791 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2790, i32 0, i64 0
  %rtwint2792 = bitcast %union.rtunion_def* %arrayidx2791 to i64*
  %1275 = load i64, i64* %rtwint2792, align 8
  %conv2793 = trunc i64 %1275 to i32
  %call2794 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* %1268, i32 %1269, i32 %1270, %struct.rtx_def* %1272, i32 %conv2793)
  store %struct.rtx_def* %call2794, %struct.rtx_def** %retval
  br label %return

if.end.2795:                                      ; preds = %sw.bb.2775
  br label %sw.epilog.2887

sw.bb.2796:                                       ; preds = %if.end.682
  %1276 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2798 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1276, i32 0, i32 1
  %arrayidx2799 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2798, i32 0, i64 0
  %rtx2800 = bitcast %union.rtunion_def* %arrayidx2799 to %struct.rtx_def**
  %1277 = load %struct.rtx_def*, %struct.rtx_def** %rtx2800, align 8
  store %struct.rtx_def* %1277, %struct.rtx_def** %op02797, align 8
  %1278 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2802 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1278, i32 0, i32 1
  %arrayidx2803 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2802, i32 0, i64 1
  %rtx2804 = bitcast %union.rtunion_def* %arrayidx2803 to %struct.rtx_def**
  %1279 = load %struct.rtx_def*, %struct.rtx_def** %rtx2804, align 8
  store %struct.rtx_def* %1279, %struct.rtx_def** %op12801, align 8
  %1280 = load %struct.rtx_def*, %struct.rtx_def** %op12801, align 8
  %1281 = bitcast %struct.rtx_def* %1280 to i32*
  %bf.load2805 = load i32, i32* %1281, align 8
  %bf.clear2806 = and i32 %bf.load2805, 65535
  %cmp2807 = icmp ne i32 %bf.clear2806, 39
  br i1 %cmp2807, label %if.then.2809, label %if.end.2810

if.then.2809:                                     ; preds = %sw.bb.2796
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4599, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.combine_simplify_rtx, i32 0, i32 0)) #5
  unreachable

if.end.2810:                                      ; preds = %sw.bb.2796
  %1282 = load %struct.rtx_def*, %struct.rtx_def** %op12801, align 8
  %fld2811 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1282, i32 0, i32 1
  %arrayidx2812 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2811, i32 0, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx2812 to %struct.rtvec_def**
  %1283 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1283, i32 0, i32 0
  %1284 = load i32, i32* %num_elem, align 4
  store i32 %1284, i32* %len, align 4
  %1285 = load i32, i32* %len, align 4
  %cmp2813 = icmp eq i32 %1285, 1
  br i1 %cmp2813, label %land.lhs.true.2815, label %if.end.2886

land.lhs.true.2815:                               ; preds = %if.end.2810
  %1286 = load %struct.rtx_def*, %struct.rtx_def** %op12801, align 8
  %fld2816 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1286, i32 0, i32 1
  %arrayidx2817 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2816, i32 0, i64 0
  %rtvec2818 = bitcast %union.rtunion_def* %arrayidx2817 to %struct.rtvec_def**
  %1287 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2818, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1287, i32 0, i32 1
  %arrayidx2819 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 0
  %1288 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2819, align 8
  %1289 = bitcast %struct.rtx_def* %1288 to i32*
  %bf.load2820 = load i32, i32* %1289, align 8
  %bf.clear2821 = and i32 %bf.load2820, 65535
  %cmp2822 = icmp eq i32 %bf.clear2821, 54
  br i1 %cmp2822, label %land.lhs.true.2824, label %if.end.2886

land.lhs.true.2824:                               ; preds = %land.lhs.true.2815
  %1290 = load %struct.rtx_def*, %struct.rtx_def** %op02797, align 8
  %1291 = bitcast %struct.rtx_def* %1290 to i32*
  %bf.load2825 = load i32, i32* %1291, align 8
  %bf.clear2826 = and i32 %bf.load2825, 65535
  %cmp2827 = icmp eq i32 %bf.clear2826, 144
  br i1 %cmp2827, label %if.then.2829, label %if.end.2886

if.then.2829:                                     ; preds = %land.lhs.true.2824
  %1292 = load %struct.rtx_def*, %struct.rtx_def** %op12801, align 8
  %fld2830 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1292, i32 0, i32 1
  %arrayidx2831 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2830, i32 0, i64 0
  %rtvec2832 = bitcast %union.rtunion_def* %arrayidx2831 to %struct.rtvec_def**
  %1293 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec2832, align 8
  %elem2833 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1293, i32 0, i32 1
  %arrayidx2834 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem2833, i32 0, i64 0
  %1294 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2834, align 8
  %fld2835 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1294, i32 0, i32 1
  %arrayidx2836 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2835, i32 0, i64 0
  %rtwint2837 = bitcast %union.rtunion_def* %arrayidx2836 to i64*
  %1295 = load i64, i64* %rtwint2837, align 8
  %1296 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1297 = bitcast %struct.rtx_def* %1296 to i32*
  %bf.load2838 = load i32, i32* %1297, align 8
  %bf.lshr2839 = lshr i32 %bf.load2838, 16
  %bf.clear2840 = and i32 %bf.lshr2839, 255
  %idxprom2841 = sext i32 %bf.clear2840 to i64
  %arrayidx2842 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom2841
  %1298 = load i8, i8* %arrayidx2842, align 1
  %conv2843 = zext i8 %1298 to i64
  %mul = mul nsw i64 %1295, %conv2843
  %conv2844 = trunc i64 %mul to i32
  store i32 %conv2844, i32* %offset, align 4
  br label %for.cond

for.cond:                                         ; preds = %if.end.2885, %if.then.2829
  %1299 = load %struct.rtx_def*, %struct.rtx_def** %op02797, align 8
  %1300 = bitcast %struct.rtx_def* %1299 to i32*
  %bf.load2845 = load i32, i32* %1300, align 8
  %bf.lshr2846 = lshr i32 %bf.load2845, 16
  %bf.clear2847 = and i32 %bf.lshr2846, 255
  %1301 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1302 = bitcast %struct.rtx_def* %1301 to i32*
  %bf.load2848 = load i32, i32* %1302, align 8
  %bf.lshr2849 = lshr i32 %bf.load2848, 16
  %bf.clear2850 = and i32 %bf.lshr2849, 255
  %cmp2851 = icmp eq i32 %bf.clear2847, %bf.clear2850
  br i1 %cmp2851, label %if.then.2853, label %if.end.2854

if.then.2853:                                     ; preds = %for.cond
  %1303 = load %struct.rtx_def*, %struct.rtx_def** %op02797, align 8
  store %struct.rtx_def* %1303, %struct.rtx_def** %retval
  br label %return

if.end.2854:                                      ; preds = %for.cond
  %1304 = load %struct.rtx_def*, %struct.rtx_def** %op02797, align 8
  %1305 = bitcast %struct.rtx_def* %1304 to i32*
  %bf.load2855 = load i32, i32* %1305, align 8
  %bf.clear2856 = and i32 %bf.load2855, 65535
  %cmp2857 = icmp eq i32 %bf.clear2856, 144
  br i1 %cmp2857, label %if.then.2859, label %if.else.2884

if.then.2859:                                     ; preds = %if.end.2854
  %1306 = load %struct.rtx_def*, %struct.rtx_def** %op02797, align 8
  %fld2860 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1306, i32 0, i32 1
  %arrayidx2861 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2860, i32 0, i64 0
  %rtx2862 = bitcast %union.rtunion_def* %arrayidx2861 to %struct.rtx_def**
  %1307 = load %struct.rtx_def*, %struct.rtx_def** %rtx2862, align 8
  %1308 = bitcast %struct.rtx_def* %1307 to i32*
  %bf.load2863 = load i32, i32* %1308, align 8
  %bf.lshr2864 = lshr i32 %bf.load2863, 16
  %bf.clear2865 = and i32 %bf.lshr2864, 255
  %idxprom2866 = sext i32 %bf.clear2865 to i64
  %arrayidx2867 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom2866
  %1309 = load i8, i8* %arrayidx2867, align 1
  %conv2868 = zext i8 %1309 to i64
  store i64 %conv2868, i64* %op0_size, align 8
  %1310 = load i64, i64* %op0_size, align 8
  %1311 = load i32, i32* %offset, align 4
  %conv2869 = sext i32 %1311 to i64
  %cmp2870 = icmp slt i64 %1310, %conv2869
  br i1 %cmp2870, label %if.then.2872, label %if.else.2876

if.then.2872:                                     ; preds = %if.then.2859
  %1312 = load %struct.rtx_def*, %struct.rtx_def** %op02797, align 8
  %fld2873 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1312, i32 0, i32 1
  %arrayidx2874 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2873, i32 0, i64 0
  %rtx2875 = bitcast %union.rtunion_def* %arrayidx2874 to %struct.rtx_def**
  %1313 = load %struct.rtx_def*, %struct.rtx_def** %rtx2875, align 8
  store %struct.rtx_def* %1313, %struct.rtx_def** %op02797, align 8
  br label %if.end.2883

if.else.2876:                                     ; preds = %if.then.2859
  %1314 = load i64, i64* %op0_size, align 8
  %1315 = load i32, i32* %offset, align 4
  %conv2877 = sext i32 %1315 to i64
  %sub2878 = sub nsw i64 %conv2877, %1314
  %conv2879 = trunc i64 %sub2878 to i32
  store i32 %conv2879, i32* %offset, align 4
  %1316 = load %struct.rtx_def*, %struct.rtx_def** %op02797, align 8
  %fld2880 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1316, i32 0, i32 1
  %arrayidx2881 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2880, i32 0, i64 1
  %rtx2882 = bitcast %union.rtunion_def* %arrayidx2881 to %struct.rtx_def**
  %1317 = load %struct.rtx_def*, %struct.rtx_def** %rtx2882, align 8
  store %struct.rtx_def* %1317, %struct.rtx_def** %op02797, align 8
  br label %if.end.2883

if.end.2883:                                      ; preds = %if.else.2876, %if.then.2872
  br label %if.end.2885

if.else.2884:                                     ; preds = %if.end.2854
  br label %for.end

if.end.2885:                                      ; preds = %if.end.2883
  br label %for.cond

for.end:                                          ; preds = %if.else.2884
  br label %if.end.2886

if.end.2886:                                      ; preds = %for.end, %land.lhs.true.2824, %land.lhs.true.2815, %if.end.2810
  br label %sw.epilog.2887

sw.default:                                       ; preds = %if.end.682
  br label %sw.epilog.2887

sw.epilog.2887:                                   ; preds = %sw.default, %if.end.2886, %if.end.2795, %if.end.2774, %if.end.2755, %if.end.2728, %if.then.2654, %if.end.2615, %if.end.2393, %if.end.2329, %if.end.2243, %if.end.2099, %if.end.1720, %if.end.1701, %if.end.1583, %if.then.1325, %if.end.1319, %if.end.1076, %if.end.826, %if.then.787, %sw.bb.683
  %1318 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %1318, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %sw.epilog.2887, %if.then.2853, %if.then.2783, %if.then.2723, %if.then.2709, %sw.bb.2625, %sw.bb.2623, %if.end.2621, %if.then.2620, %sw.bb.2616, %if.then.2606, %if.else.2602, %if.then.2598, %if.then.2533, %if.then.2505, %if.then.2480, %if.then.2453, %if.then.2388, %if.then.2320, %if.then.2280, %if.then.2225, %if.then.2181, %if.then.2135, %if.then.2097, %if.then.2048, %if.then.2006, %if.then.1949, %if.then.1784, %if.then.1694, %if.then.1653, %if.then.1604, %if.then.1578, %if.then.1546, %if.then.1519, %if.then.1477, %if.then.1436, %if.then.1376, %if.then.1317, %if.then.1248, %if.then.1209, %if.then.1184, %if.then.1143, %if.then.1110, %if.then.1094, %if.end.1066, %if.then.992, %if.then.922, %if.then.897, %if.then.860, %if.then.844, %if.then.824, %if.then.798, %if.then.771, %if.then.678, %if.else.405, %if.then.341
  %1319 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %1319
}

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* %x, i32 %code, i32 %result_mode, %struct.rtx_def* %varop, i32 %orig_count) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %result_mode.addr = alloca i32, align 4
  %varop.addr = alloca %struct.rtx_def*, align 8
  %orig_count.addr = alloca i32, align 4
  %orig_code = alloca i32, align 4
  %count = alloca i32, align 4
  %signed_count = alloca i32, align 4
  %mode = alloca i32, align 4
  %shift_mode = alloca i32, align 4
  %tmode = alloca i32, align 4
  %mode_words = alloca i32, align 4
  %outer_op = alloca i32, align 4
  %outer_const = alloca i64, align 8
  %const_rtx = alloca %struct.rtx_def*, align 8
  %complement_p = alloca i32, align 4
  %new = alloca %struct.rtx_def*, align 8
  %first_code = alloca i32, align 4
  %first_count = alloca i32, align 4
  %mask = alloca i64, align 8
  %mask_rtx = alloca %struct.rtx_def*, align 8
  %lhs = alloca %struct.rtx_def*, align 8
  %rhs = alloca %struct.rtx_def*, align 8
  %varop_inner = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %code, i32* %code.addr, align 4
  store i32 %result_mode, i32* %result_mode.addr, align 4
  store %struct.rtx_def* %varop, %struct.rtx_def** %varop.addr, align 8
  store i32 %orig_count, i32* %orig_count.addr, align 4
  %0 = load i32, i32* %code.addr, align 4
  store i32 %0, i32* %orig_code, align 4
  %1 = load i32, i32* %result_mode.addr, align 4
  store i32 %1, i32* %mode, align 4
  %2 = load i32, i32* %mode, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom
  %3 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %3 to i32
  %4 = load i32, i32* @target_flags, align 4
  %and = and i32 %4, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond = select i1 %tobool, i32 8, i32 4
  %sub = sub nsw i32 %cond, 1
  %add = add nsw i32 %conv, %sub
  %5 = load i32, i32* @target_flags, align 4
  %and1 = and i32 %5, 33554432
  %tobool2 = icmp ne i32 %and1, 0
  %cond3 = select i1 %tobool2, i32 8, i32 4
  %div = sdiv i32 %add, %cond3
  store i32 %div, i32* %mode_words, align 4
  store i32 1, i32* %outer_op, align 4
  store i64 0, i64* %outer_const, align 8
  store i32 0, i32* %complement_p, align 4
  %6 = load i32, i32* %orig_count.addr, align 4
  %cmp = icmp slt i32 %6, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %7 = load i32, i32* %orig_count.addr, align 4
  %8 = load i32, i32* %mode, align 4
  %idxprom5 = sext i32 %8 to i64
  %arrayidx6 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom5
  %9 = load i16, i16* %arrayidx6, align 2
  %conv7 = zext i16 %9 to i32
  %cmp8 = icmp sge i32 %7, %conv7
  br i1 %cmp8, label %if.then, label %if.end.14

if.then:                                          ; preds = %lor.lhs.false, %entry
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %tobool10 = icmp ne %struct.rtx_def* %10, null
  br i1 %tobool10, label %if.then.11, label %if.end

if.then.11:                                       ; preds = %if.then
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %11, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %if.then
  %12 = load i32, i32* %code.addr, align 4
  %13 = load i32, i32* %mode, align 4
  %14 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %15 = load i32, i32* %orig_count.addr, align 4
  %conv12 = sext i32 %15 to i64
  %call = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv12)
  %call13 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %12, i32 %13, %struct.rtx_def* %14, %struct.rtx_def* %call)
  store %struct.rtx_def* %call13, %struct.rtx_def** %retval
  br label %return

if.end.14:                                        ; preds = %lor.lhs.false
  %16 = load i32, i32* %orig_count.addr, align 4
  store i32 %16, i32* %count, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.then.1108, %if.end.1055, %if.then.971, %if.then.935, %if.then.895, %if.then.862, %if.then.831, %if.then.821, %if.then.799, %if.then.731, %if.end.700, %sw.bb.623, %if.then.616, %if.end.590, %if.end.487, %if.end.467, %if.then.426, %if.then.349, %if.then.309, %if.then.273, %if.end.254, %if.then.174, %if.then.142, %if.then.118, %if.end.14
  %17 = load i32, i32* %count, align 4
  %cmp15 = icmp ne i32 %17, 0
  br i1 %cmp15, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %18 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load = load i32, i32* %19, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp17 = icmp eq i32 %bf.clear, 49
  br i1 %cmp17, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %while.body
  %20 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  store %struct.rtx_def* %20, %struct.rtx_def** %retval
  br label %return

if.end.20:                                        ; preds = %while.body
  %21 = load i32, i32* %complement_p, align 4
  %tobool21 = icmp ne i32 %21, 0
  br i1 %tobool21, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %if.end.20
  br label %while.end

if.end.23:                                        ; preds = %if.end.20
  %22 = load i32, i32* %code.addr, align 4
  %cmp24 = icmp eq i32 %22, 91
  br i1 %cmp24, label %if.then.26, label %if.end.31

if.then.26:                                       ; preds = %if.end.23
  store i32 88, i32* %code.addr, align 4
  %23 = load i32, i32* %result_mode.addr, align 4
  %idxprom27 = sext i32 %23 to i64
  %arrayidx28 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom27
  %24 = load i16, i16* %arrayidx28, align 2
  %conv29 = zext i16 %24 to i32
  %25 = load i32, i32* %count, align 4
  %sub30 = sub i32 %conv29, %25
  store i32 %sub30, i32* %count, align 4
  br label %if.end.31

if.end.31:                                        ; preds = %if.then.26, %if.end.23
  %26 = load i32, i32* %code.addr, align 4
  %cmp32 = icmp eq i32 %26, 89
  br i1 %cmp32, label %cond.true, label %lor.lhs.false.34

lor.lhs.false.34:                                 ; preds = %if.end.31
  %27 = load i32, i32* %code.addr, align 4
  %cmp35 = icmp eq i32 %27, 90
  br i1 %cmp35, label %cond.true, label %lor.lhs.false.37

lor.lhs.false.37:                                 ; preds = %lor.lhs.false.34
  %28 = load i32, i32* %code.addr, align 4
  %cmp38 = icmp eq i32 %28, 88
  br i1 %cmp38, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false.37, %lor.lhs.false.34, %if.end.31
  %29 = load i32, i32* %result_mode.addr, align 4
  br label %cond.end

cond.false:                                       ; preds = %lor.lhs.false.37
  %30 = load i32, i32* %mode, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond40 = phi i32 [ %29, %cond.true ], [ %30, %cond.false ]
  store i32 %cond40, i32* %shift_mode, align 4
  %31 = load i32, i32* %count, align 4
  %32 = load i32, i32* %shift_mode, align 4
  %idxprom41 = sext i32 %32 to i64
  %arrayidx42 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom41
  %33 = load i16, i16* %arrayidx42, align 2
  %conv43 = zext i16 %33 to i32
  %sub44 = sub nsw i32 %conv43, 1
  %cmp45 = icmp ugt i32 %31, %sub44
  br i1 %cmp45, label %if.then.47, label %if.end.67

if.then.47:                                       ; preds = %cond.end
  %34 = load i32, i32* %code.addr, align 4
  %cmp48 = icmp eq i32 %34, 89
  br i1 %cmp48, label %if.then.50, label %if.else

if.then.50:                                       ; preds = %if.then.47
  %35 = load i32, i32* %shift_mode, align 4
  %idxprom51 = sext i32 %35 to i64
  %arrayidx52 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom51
  %36 = load i16, i16* %arrayidx52, align 2
  %conv53 = zext i16 %36 to i32
  %sub54 = sub nsw i32 %conv53, 1
  store i32 %sub54, i32* %count, align 4
  br label %if.end.66

if.else:                                          ; preds = %if.then.47
  %37 = load i32, i32* %code.addr, align 4
  %cmp55 = icmp eq i32 %37, 88
  br i1 %cmp55, label %if.then.60, label %lor.lhs.false.57

lor.lhs.false.57:                                 ; preds = %if.else
  %38 = load i32, i32* %code.addr, align 4
  %cmp58 = icmp eq i32 %38, 91
  br i1 %cmp58, label %if.then.60, label %if.else.64

if.then.60:                                       ; preds = %lor.lhs.false.57, %if.else
  %39 = load i32, i32* %shift_mode, align 4
  %idxprom61 = sext i32 %39 to i64
  %arrayidx62 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom61
  %40 = load i16, i16* %arrayidx62, align 2
  %conv63 = zext i16 %40 to i32
  %41 = load i32, i32* %count, align 4
  %rem = urem i32 %41, %conv63
  store i32 %rem, i32* %count, align 4
  br label %if.end.65

if.else.64:                                       ; preds = %lor.lhs.false.57
  %42 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %42, %struct.rtx_def** %varop.addr, align 8
  store i32 0, i32* %count, align 4
  br label %while.end

if.end.65:                                        ; preds = %if.then.60
  br label %if.end.66

if.end.66:                                        ; preds = %if.end.65, %if.then.50
  br label %if.end.67

if.end.67:                                        ; preds = %if.end.66, %cond.end
  %43 = load i32, i32* %code.addr, align 4
  %cmp68 = icmp eq i32 %43, 89
  br i1 %cmp68, label %land.lhs.true, label %if.end.77

land.lhs.true:                                    ; preds = %if.end.67
  %44 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %45 = load i32, i32* %shift_mode, align 4
  %call70 = call i32 @num_sign_bit_copies(%struct.rtx_def* %44, i32 %45)
  %46 = load i32, i32* %shift_mode, align 4
  %idxprom71 = sext i32 %46 to i64
  %arrayidx72 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom71
  %47 = load i16, i16* %arrayidx72, align 2
  %conv73 = zext i16 %47 to i32
  %cmp74 = icmp eq i32 %call70, %conv73
  br i1 %cmp74, label %if.then.76, label %if.end.77

if.then.76:                                       ; preds = %land.lhs.true
  store i32 0, i32* %count, align 4
  br label %while.end

if.end.77:                                        ; preds = %land.lhs.true, %if.end.67
  %48 = load i32, i32* %code.addr, align 4
  %cmp78 = icmp eq i32 %48, 89
  br i1 %cmp78, label %land.lhs.true.80, label %if.end.93

land.lhs.true.80:                                 ; preds = %if.end.77
  %49 = load i32, i32* %count, align 4
  %50 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %51 = load i32, i32* %shift_mode, align 4
  %call81 = call i32 @num_sign_bit_copies(%struct.rtx_def* %50, i32 %51)
  %add82 = add i32 %49, %call81
  %52 = load i32, i32* %shift_mode, align 4
  %idxprom83 = sext i32 %52 to i64
  %arrayidx84 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom83
  %53 = load i16, i16* %arrayidx84, align 2
  %conv85 = zext i16 %53 to i32
  %cmp86 = icmp uge i32 %add82, %conv85
  br i1 %cmp86, label %if.then.88, label %if.end.93

if.then.88:                                       ; preds = %land.lhs.true.80
  %54 = load i32, i32* %shift_mode, align 4
  %idxprom89 = sext i32 %54 to i64
  %arrayidx90 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom89
  %55 = load i16, i16* %arrayidx90, align 2
  %conv91 = zext i16 %55 to i32
  %sub92 = sub nsw i32 %conv91, 1
  store i32 %sub92, i32* %count, align 4
  br label %if.end.93

if.end.93:                                        ; preds = %if.then.88, %land.lhs.true.80, %if.end.77
  %56 = load i32, i32* %shift_mode, align 4
  %idxprom94 = sext i32 %56 to i64
  %arrayidx95 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom94
  %57 = load i16, i16* %arrayidx95, align 2
  %conv96 = zext i16 %57 to i32
  %cmp97 = icmp sle i32 %conv96, 64
  br i1 %cmp97, label %land.lhs.true.99, label %if.end.112

land.lhs.true.99:                                 ; preds = %if.end.93
  %58 = load i32, i32* %code.addr, align 4
  %cmp100 = icmp eq i32 %58, 89
  br i1 %cmp100, label %land.lhs.true.102, label %if.end.112

land.lhs.true.102:                                ; preds = %land.lhs.true.99
  %59 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %60 = load i32, i32* %shift_mode, align 4
  %call103 = call i64 @nonzero_bits(%struct.rtx_def* %59, i32 %60)
  %61 = load i32, i32* %shift_mode, align 4
  %idxprom104 = sext i32 %61 to i64
  %arrayidx105 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom104
  %62 = load i16, i16* %arrayidx105, align 2
  %conv106 = zext i16 %62 to i32
  %sub107 = sub nsw i32 %conv106, 1
  %sh_prom = zext i32 %sub107 to i64
  %shl = shl i64 1, %sh_prom
  %and108 = and i64 %call103, %shl
  %cmp109 = icmp eq i64 %and108, 0
  br i1 %cmp109, label %if.then.111, label %if.end.112

if.then.111:                                      ; preds = %land.lhs.true.102
  store i32 90, i32* %code.addr, align 4
  br label %if.end.112

if.end.112:                                       ; preds = %if.then.111, %land.lhs.true.102, %land.lhs.true.99, %if.end.93
  %63 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %64 = bitcast %struct.rtx_def* %63 to i32*
  %bf.load113 = load i32, i32* %64, align 8
  %bf.clear114 = and i32 %bf.load113, 65535
  switch i32 %bf.clear114, label %sw.default [
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 132, label %sw.bb
    i32 133, label %sw.bb
    i32 66, label %sw.bb.120
    i32 48, label %sw.bb.151
    i32 63, label %sw.bb.193
    i32 78, label %sw.bb.256
    i32 81, label %sw.bb.291
    i32 89, label %sw.bb.327
    i32 90, label %sw.bb.354
    i32 87, label %sw.bb.354
    i32 88, label %sw.bb.354
    i32 86, label %sw.bb.623
    i32 84, label %sw.bb.631
    i32 83, label %sw.bb.631
    i32 85, label %sw.bb.631
    i32 103, label %sw.bb.748
    i32 77, label %sw.bb.804
    i32 75, label %sw.bb.836
    i32 76, label %sw.bb.976
    i32 122, label %sw.bb.1057
  ]

sw.bb:                                            ; preds = %if.end.112, %if.end.112, %if.end.112, %if.end.112
  %65 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %call115 = call %struct.rtx_def* @expand_compound_operation(%struct.rtx_def* %65)
  store %struct.rtx_def* %call115, %struct.rtx_def** %new, align 8
  %66 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %67 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %cmp116 = icmp ne %struct.rtx_def* %66, %67
  br i1 %cmp116, label %if.then.118, label %if.end.119

if.then.118:                                      ; preds = %sw.bb
  %68 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  store %struct.rtx_def* %68, %struct.rtx_def** %varop.addr, align 8
  br label %while.cond

if.end.119:                                       ; preds = %sw.bb
  br label %sw.epilog

sw.bb.120:                                        ; preds = %if.end.112
  %69 = load i32, i32* %code.addr, align 4
  %cmp121 = icmp eq i32 %69, 89
  br i1 %cmp121, label %land.lhs.true.126, label %lor.lhs.false.123

lor.lhs.false.123:                                ; preds = %sw.bb.120
  %70 = load i32, i32* %code.addr, align 4
  %cmp124 = icmp eq i32 %70, 90
  br i1 %cmp124, label %land.lhs.true.126, label %if.end.150

land.lhs.true.126:                                ; preds = %lor.lhs.false.123, %sw.bb.120
  %71 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1
  %arrayidx127 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx127 to %struct.rtx_def**
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %call128 = call i32 @mode_dependent_address_p(%struct.rtx_def* %72)
  %tobool129 = icmp ne i32 %call128, 0
  br i1 %tobool129, label %if.end.150, label %land.lhs.true.130

land.lhs.true.130:                                ; preds = %land.lhs.true.126
  %73 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %74 = bitcast %struct.rtx_def* %73 to i32*
  %bf.load131 = load i32, i32* %74, align 8
  %bf.lshr = lshr i32 %bf.load131, 27
  %bf.clear132 = and i32 %bf.lshr, 1
  %tobool133 = icmp ne i32 %bf.clear132, 0
  br i1 %tobool133, label %if.end.150, label %land.lhs.true.134

land.lhs.true.134:                                ; preds = %land.lhs.true.130
  %75 = load i32, i32* %mode, align 4
  %idxprom135 = sext i32 %75 to i64
  %arrayidx136 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom135
  %76 = load i16, i16* %arrayidx136, align 2
  %conv137 = zext i16 %76 to i32
  %77 = load i32, i32* %count, align 4
  %sub138 = sub i32 %conv137, %77
  %call139 = call i32 @mode_for_size(i32 %sub138, i32 1, i32 1)
  store i32 %call139, i32* %tmode, align 4
  %cmp140 = icmp ne i32 %call139, 51
  br i1 %cmp140, label %if.then.142, label %if.end.150

if.then.142:                                      ; preds = %land.lhs.true.134
  %78 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %79 = load i32, i32* %tmode, align 4
  %80 = load i32, i32* %count, align 4
  %div143 = udiv i32 %80, 8
  %conv144 = zext i32 %div143 to i64
  %call145 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %78, i32 %79, i64 %conv144, i32 0, i32 1)
  store %struct.rtx_def* %call145, %struct.rtx_def** %new, align 8
  %81 = load i32, i32* %code.addr, align 4
  %cmp146 = icmp eq i32 %81, 89
  %cond148 = select i1 %cmp146, i32 120, i32 121
  %82 = load i32, i32* %mode, align 4
  %83 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %call149 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 %cond148, i32 %82, %struct.rtx_def* %83)
  store %struct.rtx_def* %call149, %struct.rtx_def** %varop.addr, align 8
  store i32 0, i32* %count, align 4
  br label %while.cond

if.end.150:                                       ; preds = %land.lhs.true.134, %land.lhs.true.130, %land.lhs.true.126, %lor.lhs.false.123
  br label %sw.epilog

sw.bb.151:                                        ; preds = %if.end.112
  %84 = load i32, i32* %code.addr, align 4
  %cmp152 = icmp eq i32 %84, 89
  br i1 %cmp152, label %land.lhs.true.157, label %lor.lhs.false.154

lor.lhs.false.154:                                ; preds = %sw.bb.151
  %85 = load i32, i32* %code.addr, align 4
  %cmp155 = icmp eq i32 %85, 90
  br i1 %cmp155, label %land.lhs.true.157, label %if.end.192

land.lhs.true.157:                                ; preds = %lor.lhs.false.154, %sw.bb.151
  %86 = load i32, i32* %mode, align 4
  %idxprom158 = sext i32 %86 to i64
  %arrayidx159 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom158
  %87 = load i16, i16* %arrayidx159, align 2
  %conv160 = zext i16 %87 to i32
  %88 = load i32, i32* %count, align 4
  %sub161 = sub i32 %conv160, %88
  %call162 = call i32 @mode_for_size(i32 %sub161, i32 1, i32 1)
  store i32 %call162, i32* %tmode, align 4
  %cmp163 = icmp ne i32 %call162, 51
  br i1 %cmp163, label %land.lhs.true.165, label %if.end.192

land.lhs.true.165:                                ; preds = %land.lhs.true.157
  %89 = load i32, i32* %tmode, align 4
  %90 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld166 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1
  %arrayidx167 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld166, i32 0, i64 0
  %rtx168 = bitcast %union.rtunion_def* %arrayidx167 to %struct.rtx_def**
  %91 = load %struct.rtx_def*, %struct.rtx_def** %rtx168, align 8
  %92 = bitcast %struct.rtx_def* %91 to i32*
  %bf.load169 = load i32, i32* %92, align 8
  %bf.lshr170 = lshr i32 %bf.load169, 16
  %bf.clear171 = and i32 %bf.lshr170, 255
  %cmp172 = icmp eq i32 %89, %bf.clear171
  br i1 %cmp172, label %if.then.174, label %if.end.192

if.then.174:                                      ; preds = %land.lhs.true.165
  %93 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld175 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %93, i32 0, i32 1
  %arrayidx176 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld175, i32 0, i64 0
  %rtx177 = bitcast %union.rtunion_def* %arrayidx176 to %struct.rtx_def**
  %94 = load %struct.rtx_def*, %struct.rtx_def** %rtx177, align 8
  %call178 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %94)
  store %struct.rtx_def* %call178, %struct.rtx_def** %new, align 8
  %95 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %fld179 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1
  %arrayidx180 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld179, i32 0, i64 0
  %rtx181 = bitcast %union.rtunion_def* %arrayidx180 to %struct.rtx_def**
  %96 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %fld182 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1
  %arrayidx183 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld182, i32 0, i64 0
  %rtx184 = bitcast %union.rtunion_def* %arrayidx183 to %struct.rtx_def**
  %97 = load %struct.rtx_def*, %struct.rtx_def** %rtx184, align 8
  %98 = load i32, i32* %count, align 4
  %div185 = udiv i32 %98, 8
  %conv186 = zext i32 %div185 to i64
  %call187 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %97, i64 %conv186)
  call void @do_SUBST(%struct.rtx_def** %rtx181, %struct.rtx_def* %call187)
  %99 = load i32, i32* %code.addr, align 4
  %cmp188 = icmp eq i32 %99, 89
  %cond190 = select i1 %cmp188, i32 120, i32 121
  %100 = load i32, i32* %mode, align 4
  %101 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %call191 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 %cond190, i32 %100, %struct.rtx_def* %101)
  store %struct.rtx_def* %call191, %struct.rtx_def** %varop.addr, align 8
  store i32 0, i32* %count, align 4
  br label %while.cond

if.end.192:                                       ; preds = %land.lhs.true.165, %land.lhs.true.157, %lor.lhs.false.154
  br label %sw.epilog

sw.bb.193:                                        ; preds = %if.end.112
  %102 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %call194 = call i32 @subreg_lowpart_p(%struct.rtx_def* %102)
  %tobool195 = icmp ne i32 %call194, 0
  br i1 %tobool195, label %land.lhs.true.196, label %if.end.255

land.lhs.true.196:                                ; preds = %sw.bb.193
  %103 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld197 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1
  %arrayidx198 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld197, i32 0, i64 0
  %rtx199 = bitcast %union.rtunion_def* %arrayidx198 to %struct.rtx_def**
  %104 = load %struct.rtx_def*, %struct.rtx_def** %rtx199, align 8
  %105 = bitcast %struct.rtx_def* %104 to i32*
  %bf.load200 = load i32, i32* %105, align 8
  %bf.lshr201 = lshr i32 %bf.load200, 16
  %bf.clear202 = and i32 %bf.lshr201, 255
  %idxprom203 = sext i32 %bf.clear202 to i64
  %arrayidx204 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom203
  %106 = load i8, i8* %arrayidx204, align 1
  %conv205 = zext i8 %106 to i32
  %107 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %108 = bitcast %struct.rtx_def* %107 to i32*
  %bf.load206 = load i32, i32* %108, align 8
  %bf.lshr207 = lshr i32 %bf.load206, 16
  %bf.clear208 = and i32 %bf.lshr207, 255
  %idxprom209 = sext i32 %bf.clear208 to i64
  %arrayidx210 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom209
  %109 = load i8, i8* %arrayidx210, align 1
  %conv211 = zext i8 %109 to i32
  %cmp212 = icmp sgt i32 %conv205, %conv211
  br i1 %cmp212, label %land.lhs.true.214, label %if.end.255

land.lhs.true.214:                                ; preds = %land.lhs.true.196
  %110 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld215 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %110, i32 0, i32 1
  %arrayidx216 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld215, i32 0, i64 0
  %rtx217 = bitcast %union.rtunion_def* %arrayidx216 to %struct.rtx_def**
  %111 = load %struct.rtx_def*, %struct.rtx_def** %rtx217, align 8
  %112 = bitcast %struct.rtx_def* %111 to i32*
  %bf.load218 = load i32, i32* %112, align 8
  %bf.lshr219 = lshr i32 %bf.load218, 16
  %bf.clear220 = and i32 %bf.lshr219, 255
  %idxprom221 = sext i32 %bf.clear220 to i64
  %arrayidx222 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom221
  %113 = load i8, i8* %arrayidx222, align 1
  %conv223 = zext i8 %113 to i32
  %114 = load i32, i32* @target_flags, align 4
  %and224 = and i32 %114, 33554432
  %tobool225 = icmp ne i32 %and224, 0
  %cond226 = select i1 %tobool225, i32 8, i32 4
  %sub227 = sub nsw i32 %cond226, 1
  %add228 = add nsw i32 %conv223, %sub227
  %115 = load i32, i32* @target_flags, align 4
  %and229 = and i32 %115, 33554432
  %tobool230 = icmp ne i32 %and229, 0
  %cond231 = select i1 %tobool230, i32 8, i32 4
  %div232 = sdiv i32 %add228, %cond231
  %116 = load i32, i32* %mode_words, align 4
  %cmp233 = icmp eq i32 %div232, %116
  br i1 %cmp233, label %if.then.235, label %if.end.255

if.then.235:                                      ; preds = %land.lhs.true.214
  %117 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %117, i32 0, i32 1
  %arrayidx237 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld236, i32 0, i64 0
  %rtx238 = bitcast %union.rtunion_def* %arrayidx237 to %struct.rtx_def**
  %118 = load %struct.rtx_def*, %struct.rtx_def** %rtx238, align 8
  store %struct.rtx_def* %118, %struct.rtx_def** %varop.addr, align 8
  %119 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %120 = bitcast %struct.rtx_def* %119 to i32*
  %bf.load239 = load i32, i32* %120, align 8
  %bf.lshr240 = lshr i32 %bf.load239, 16
  %bf.clear241 = and i32 %bf.lshr240, 255
  %idxprom242 = sext i32 %bf.clear241 to i64
  %arrayidx243 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom242
  %121 = load i8, i8* %arrayidx243, align 1
  %conv244 = zext i8 %121 to i32
  %122 = load i32, i32* %mode, align 4
  %idxprom245 = sext i32 %122 to i64
  %arrayidx246 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom245
  %123 = load i8, i8* %arrayidx246, align 1
  %conv247 = zext i8 %123 to i32
  %cmp248 = icmp sgt i32 %conv244, %conv247
  br i1 %cmp248, label %if.then.250, label %if.end.254

if.then.250:                                      ; preds = %if.then.235
  %124 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %125 = bitcast %struct.rtx_def* %124 to i32*
  %bf.load251 = load i32, i32* %125, align 8
  %bf.lshr252 = lshr i32 %bf.load251, 16
  %bf.clear253 = and i32 %bf.lshr252, 255
  store i32 %bf.clear253, i32* %mode, align 4
  br label %if.end.254

if.end.254:                                       ; preds = %if.then.250, %if.then.235
  br label %while.cond

if.end.255:                                       ; preds = %land.lhs.true.214, %land.lhs.true.196, %sw.bb.193
  br label %sw.epilog

sw.bb.256:                                        ; preds = %if.end.112
  %126 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld257 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1
  %arrayidx258 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld257, i32 0, i64 1
  %rtx259 = bitcast %union.rtunion_def* %arrayidx258 to %struct.rtx_def**
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rtx259, align 8
  %128 = bitcast %struct.rtx_def* %127 to i32*
  %bf.load260 = load i32, i32* %128, align 8
  %bf.clear261 = and i32 %bf.load260, 65535
  %cmp262 = icmp eq i32 %bf.clear261, 54
  br i1 %cmp262, label %land.lhs.true.264, label %if.end.290

land.lhs.true.264:                                ; preds = %sw.bb.256
  %129 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld265 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %129, i32 0, i32 1
  %arrayidx266 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld265, i32 0, i64 1
  %rtx267 = bitcast %union.rtunion_def* %arrayidx266 to %struct.rtx_def**
  %130 = load %struct.rtx_def*, %struct.rtx_def** %rtx267, align 8
  %fld268 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1
  %arrayidx269 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld268, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx269 to i64*
  %131 = load i64, i64* %rtwint, align 8
  %call270 = call i32 @exact_log2_wide(i64 %131)
  %cmp271 = icmp sge i32 %call270, 0
  br i1 %cmp271, label %if.then.273, label %if.end.290

if.then.273:                                      ; preds = %land.lhs.true.264
  %132 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %133 = bitcast %struct.rtx_def* %132 to i32*
  %bf.load274 = load i32, i32* %133, align 8
  %bf.lshr275 = lshr i32 %bf.load274, 16
  %bf.clear276 = and i32 %bf.lshr275, 255
  %134 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld277 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %134, i32 0, i32 1
  %arrayidx278 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld277, i32 0, i64 0
  %rtx279 = bitcast %union.rtunion_def* %arrayidx278 to %struct.rtx_def**
  %135 = load %struct.rtx_def*, %struct.rtx_def** %rtx279, align 8
  %136 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld280 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1
  %arrayidx281 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld280, i32 0, i64 1
  %rtx282 = bitcast %union.rtunion_def* %arrayidx281 to %struct.rtx_def**
  %137 = load %struct.rtx_def*, %struct.rtx_def** %rtx282, align 8
  %fld283 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %137, i32 0, i32 1
  %arrayidx284 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld283, i32 0, i64 0
  %rtwint285 = bitcast %union.rtunion_def* %arrayidx284 to i64*
  %138 = load i64, i64* %rtwint285, align 8
  %call286 = call i32 @exact_log2_wide(i64 %138)
  %conv287 = sext i32 %call286 to i64
  %call288 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv287)
  %call289 = call %struct.rtx_def* @gen_binary(i32 87, i32 %bf.clear276, %struct.rtx_def* %135, %struct.rtx_def* %call288)
  store %struct.rtx_def* %call289, %struct.rtx_def** %varop.addr, align 8
  br label %while.cond

if.end.290:                                       ; preds = %land.lhs.true.264, %sw.bb.256
  br label %sw.epilog

sw.bb.291:                                        ; preds = %if.end.112
  %139 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld292 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1
  %arrayidx293 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld292, i32 0, i64 1
  %rtx294 = bitcast %union.rtunion_def* %arrayidx293 to %struct.rtx_def**
  %140 = load %struct.rtx_def*, %struct.rtx_def** %rtx294, align 8
  %141 = bitcast %struct.rtx_def* %140 to i32*
  %bf.load295 = load i32, i32* %141, align 8
  %bf.clear296 = and i32 %bf.load295, 65535
  %cmp297 = icmp eq i32 %bf.clear296, 54
  br i1 %cmp297, label %land.lhs.true.299, label %if.end.326

land.lhs.true.299:                                ; preds = %sw.bb.291
  %142 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld300 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i32 0, i32 1
  %arrayidx301 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld300, i32 0, i64 1
  %rtx302 = bitcast %union.rtunion_def* %arrayidx301 to %struct.rtx_def**
  %143 = load %struct.rtx_def*, %struct.rtx_def** %rtx302, align 8
  %fld303 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1
  %arrayidx304 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld303, i32 0, i64 0
  %rtwint305 = bitcast %union.rtunion_def* %arrayidx304 to i64*
  %144 = load i64, i64* %rtwint305, align 8
  %call306 = call i32 @exact_log2_wide(i64 %144)
  %cmp307 = icmp sge i32 %call306, 0
  br i1 %cmp307, label %if.then.309, label %if.end.326

if.then.309:                                      ; preds = %land.lhs.true.299
  %145 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %146 = bitcast %struct.rtx_def* %145 to i32*
  %bf.load310 = load i32, i32* %146, align 8
  %bf.lshr311 = lshr i32 %bf.load310, 16
  %bf.clear312 = and i32 %bf.lshr311, 255
  %147 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld313 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %147, i32 0, i32 1
  %arrayidx314 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld313, i32 0, i64 0
  %rtx315 = bitcast %union.rtunion_def* %arrayidx314 to %struct.rtx_def**
  %148 = load %struct.rtx_def*, %struct.rtx_def** %rtx315, align 8
  %149 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld316 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %149, i32 0, i32 1
  %arrayidx317 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld316, i32 0, i64 1
  %rtx318 = bitcast %union.rtunion_def* %arrayidx317 to %struct.rtx_def**
  %150 = load %struct.rtx_def*, %struct.rtx_def** %rtx318, align 8
  %fld319 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %150, i32 0, i32 1
  %arrayidx320 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld319, i32 0, i64 0
  %rtwint321 = bitcast %union.rtunion_def* %arrayidx320 to i64*
  %151 = load i64, i64* %rtwint321, align 8
  %call322 = call i32 @exact_log2_wide(i64 %151)
  %conv323 = sext i32 %call322 to i64
  %call324 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv323)
  %call325 = call %struct.rtx_def* @gen_binary(i32 90, i32 %bf.clear312, %struct.rtx_def* %148, %struct.rtx_def* %call324)
  store %struct.rtx_def* %call325, %struct.rtx_def** %varop.addr, align 8
  br label %while.cond

if.end.326:                                       ; preds = %land.lhs.true.299, %sw.bb.291
  br label %sw.epilog

sw.bb.327:                                        ; preds = %if.end.112
  %152 = load i32, i32* %code.addr, align 4
  %cmp328 = icmp eq i32 %152, 90
  br i1 %cmp328, label %land.lhs.true.330, label %if.end.353

land.lhs.true.330:                                ; preds = %sw.bb.327
  %153 = load i32, i32* %count, align 4
  %154 = load i32, i32* %result_mode.addr, align 4
  %idxprom331 = sext i32 %154 to i64
  %arrayidx332 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom331
  %155 = load i16, i16* %arrayidx332, align 2
  %conv333 = zext i16 %155 to i32
  %sub334 = sub nsw i32 %conv333, 1
  %cmp335 = icmp eq i32 %153, %sub334
  br i1 %cmp335, label %land.lhs.true.337, label %if.end.353

land.lhs.true.337:                                ; preds = %land.lhs.true.330
  %156 = load i32, i32* %result_mode.addr, align 4
  %idxprom338 = sext i32 %156 to i64
  %arrayidx339 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom338
  %157 = load i16, i16* %arrayidx339, align 2
  %conv340 = zext i16 %157 to i32
  %158 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %159 = bitcast %struct.rtx_def* %158 to i32*
  %bf.load341 = load i32, i32* %159, align 8
  %bf.lshr342 = lshr i32 %bf.load341, 16
  %bf.clear343 = and i32 %bf.lshr342, 255
  %idxprom344 = sext i32 %bf.clear343 to i64
  %arrayidx345 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom344
  %160 = load i16, i16* %arrayidx345, align 2
  %conv346 = zext i16 %160 to i32
  %cmp347 = icmp sge i32 %conv340, %conv346
  br i1 %cmp347, label %if.then.349, label %if.end.353

if.then.349:                                      ; preds = %land.lhs.true.337
  %161 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld350 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %161, i32 0, i32 1
  %arrayidx351 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld350, i32 0, i64 0
  %rtx352 = bitcast %union.rtunion_def* %arrayidx351 to %struct.rtx_def**
  %162 = load %struct.rtx_def*, %struct.rtx_def** %rtx352, align 8
  store %struct.rtx_def* %162, %struct.rtx_def** %varop.addr, align 8
  br label %while.cond

if.end.353:                                       ; preds = %land.lhs.true.337, %land.lhs.true.330, %sw.bb.327
  br label %sw.bb.354

sw.bb.354:                                        ; preds = %if.end.112, %if.end.112, %if.end.112, %if.end.353
  %163 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld355 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %163, i32 0, i32 1
  %arrayidx356 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld355, i32 0, i64 1
  %rtx357 = bitcast %union.rtunion_def* %arrayidx356 to %struct.rtx_def**
  %164 = load %struct.rtx_def*, %struct.rtx_def** %rtx357, align 8
  %165 = bitcast %struct.rtx_def* %164 to i32*
  %bf.load358 = load i32, i32* %165, align 8
  %bf.clear359 = and i32 %bf.load358, 65535
  %cmp360 = icmp eq i32 %bf.clear359, 54
  br i1 %cmp360, label %land.lhs.true.362, label %if.else.594

land.lhs.true.362:                                ; preds = %sw.bb.354
  %166 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld363 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %166, i32 0, i32 1
  %arrayidx364 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld363, i32 0, i64 1
  %rtx365 = bitcast %union.rtunion_def* %arrayidx364 to %struct.rtx_def**
  %167 = load %struct.rtx_def*, %struct.rtx_def** %rtx365, align 8
  %fld366 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %167, i32 0, i32 1
  %arrayidx367 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld366, i32 0, i64 0
  %rtwint368 = bitcast %union.rtunion_def* %arrayidx367 to i64*
  %168 = load i64, i64* %rtwint368, align 8
  %cmp369 = icmp sge i64 %168, 0
  br i1 %cmp369, label %land.lhs.true.371, label %if.else.594

land.lhs.true.371:                                ; preds = %land.lhs.true.362
  %169 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld372 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %169, i32 0, i32 1
  %arrayidx373 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld372, i32 0, i64 1
  %rtx374 = bitcast %union.rtunion_def* %arrayidx373 to %struct.rtx_def**
  %170 = load %struct.rtx_def*, %struct.rtx_def** %rtx374, align 8
  %fld375 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %170, i32 0, i32 1
  %arrayidx376 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld375, i32 0, i64 0
  %rtwint377 = bitcast %union.rtunion_def* %arrayidx376 to i64*
  %171 = load i64, i64* %rtwint377, align 8
  %172 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %173 = bitcast %struct.rtx_def* %172 to i32*
  %bf.load378 = load i32, i32* %173, align 8
  %bf.lshr379 = lshr i32 %bf.load378, 16
  %bf.clear380 = and i32 %bf.lshr379, 255
  %idxprom381 = sext i32 %bf.clear380 to i64
  %arrayidx382 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom381
  %174 = load i16, i16* %arrayidx382, align 2
  %conv383 = zext i16 %174 to i64
  %cmp384 = icmp slt i64 %171, %conv383
  br i1 %cmp384, label %land.lhs.true.386, label %if.else.594

land.lhs.true.386:                                ; preds = %land.lhs.true.371
  %175 = load i32, i32* %result_mode.addr, align 4
  %idxprom387 = sext i32 %175 to i64
  %arrayidx388 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom387
  %176 = load i16, i16* %arrayidx388, align 2
  %conv389 = zext i16 %176 to i32
  %cmp390 = icmp sle i32 %conv389, 64
  br i1 %cmp390, label %land.lhs.true.392, label %if.else.594

land.lhs.true.392:                                ; preds = %land.lhs.true.386
  %177 = load i32, i32* %mode, align 4
  %idxprom393 = sext i32 %177 to i64
  %arrayidx394 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom393
  %178 = load i16, i16* %arrayidx394, align 2
  %conv395 = zext i16 %178 to i32
  %cmp396 = icmp sle i32 %conv395, 64
  br i1 %cmp396, label %if.then.398, label %if.else.594

if.then.398:                                      ; preds = %land.lhs.true.392
  %179 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %180 = bitcast %struct.rtx_def* %179 to i32*
  %bf.load399 = load i32, i32* %180, align 8
  %bf.clear400 = and i32 %bf.load399, 65535
  store i32 %bf.clear400, i32* %first_code, align 4
  %181 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld401 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %181, i32 0, i32 1
  %arrayidx402 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld401, i32 0, i64 1
  %rtx403 = bitcast %union.rtunion_def* %arrayidx402 to %struct.rtx_def**
  %182 = load %struct.rtx_def*, %struct.rtx_def** %rtx403, align 8
  %fld404 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %182, i32 0, i32 1
  %arrayidx405 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld404, i32 0, i64 0
  %rtwint406 = bitcast %union.rtunion_def* %arrayidx405 to i64*
  %183 = load i64, i64* %rtwint406, align 8
  %conv407 = trunc i64 %183 to i32
  store i32 %conv407, i32* %first_count, align 4
  %184 = load i32, i32* %code.addr, align 4
  %cmp408 = icmp eq i32 %184, 87
  br i1 %cmp408, label %land.lhs.true.410, label %if.end.438

land.lhs.true.410:                                ; preds = %if.then.398
  %185 = load i32, i32* %first_code, align 4
  %cmp411 = icmp eq i32 %185, 89
  br i1 %cmp411, label %land.lhs.true.413, label %if.end.438

land.lhs.true.413:                                ; preds = %land.lhs.true.410
  %186 = load i32, i32* %result_mode.addr, align 4
  %idxprom414 = sext i32 %186 to i64
  %arrayidx415 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom414
  %187 = load i16, i16* %arrayidx415, align 2
  %conv416 = zext i16 %187 to i32
  %188 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %189 = bitcast %struct.rtx_def* %188 to i32*
  %bf.load417 = load i32, i32* %189, align 8
  %bf.lshr418 = lshr i32 %bf.load417, 16
  %bf.clear419 = and i32 %bf.lshr418, 255
  %idxprom420 = sext i32 %bf.clear419 to i64
  %arrayidx421 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom420
  %190 = load i16, i16* %arrayidx421, align 2
  %conv422 = zext i16 %190 to i32
  %sub423 = sub nsw i32 %conv416, %conv422
  %191 = load i32, i32* %count, align 4
  %cmp424 = icmp eq i32 %sub423, %191
  br i1 %cmp424, label %if.then.426, label %if.end.438

if.then.426:                                      ; preds = %land.lhs.true.413
  %192 = load i32, i32* %mode, align 4
  %idxprom427 = sext i32 %192 to i64
  %arrayidx428 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom427
  %193 = load i64, i64* %arrayidx428, align 8
  %194 = load i32, i32* %first_count, align 4
  %sh_prom429 = zext i32 %194 to i64
  %shl430 = shl i64 1, %sh_prom429
  %sub431 = sub nsw i64 %shl430, 1
  %neg = xor i64 %sub431, -1
  %and432 = and i64 %193, %neg
  store i64 %and432, i64* %mask, align 8
  %195 = load i32, i32* %result_mode.addr, align 4
  %196 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld433 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %196, i32 0, i32 1
  %arrayidx434 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld433, i32 0, i64 0
  %rtx435 = bitcast %union.rtunion_def* %arrayidx434 to %struct.rtx_def**
  %197 = load %struct.rtx_def*, %struct.rtx_def** %rtx435, align 8
  %198 = load i64, i64* %mask, align 8
  %call436 = call %struct.rtx_def* @simplify_and_const_int(%struct.rtx_def* null, i32 %195, %struct.rtx_def* %197, i64 %198)
  store %struct.rtx_def* %call436, %struct.rtx_def** %varop.addr, align 8
  %199 = load i32, i32* %result_mode.addr, align 4
  %200 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %201 = load i32, i32* %count, align 4
  %call437 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 87, i32 %199, %struct.rtx_def* %200, i32 %201)
  store %struct.rtx_def* %call437, %struct.rtx_def** %varop.addr, align 8
  %202 = load i32, i32* %first_count, align 4
  store i32 %202, i32* %count, align 4
  store i32 89, i32* %code.addr, align 4
  br label %while.cond

if.end.438:                                       ; preds = %land.lhs.true.413, %land.lhs.true.410, %if.then.398
  %203 = load i32, i32* %code.addr, align 4
  %cmp439 = icmp eq i32 %203, 89
  br i1 %cmp439, label %land.lhs.true.441, label %if.end.468

land.lhs.true.441:                                ; preds = %if.end.438
  %204 = load i32, i32* %first_code, align 4
  %cmp442 = icmp eq i32 %204, 87
  br i1 %cmp442, label %land.lhs.true.444, label %if.end.468

land.lhs.true.444:                                ; preds = %land.lhs.true.441
  %205 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %206 = bitcast %struct.rtx_def* %205 to i32*
  %bf.load445 = load i32, i32* %206, align 8
  %bf.lshr446 = lshr i32 %bf.load445, 16
  %bf.clear447 = and i32 %bf.lshr446, 255
  %207 = load i32, i32* %shift_mode, align 4
  %cmp448 = icmp eq i32 %bf.clear447, %207
  br i1 %cmp448, label %land.lhs.true.450, label %if.end.468

land.lhs.true.450:                                ; preds = %land.lhs.true.444
  %208 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld451 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %208, i32 0, i32 1
  %arrayidx452 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld451, i32 0, i64 0
  %rtx453 = bitcast %union.rtunion_def* %arrayidx452 to %struct.rtx_def**
  %209 = load %struct.rtx_def*, %struct.rtx_def** %rtx453, align 8
  %210 = load i32, i32* %shift_mode, align 4
  %call454 = call i32 @num_sign_bit_copies(%struct.rtx_def* %209, i32 %210)
  %211 = load i32, i32* %first_count, align 4
  %cmp455 = icmp ugt i32 %call454, %211
  br i1 %cmp455, label %if.then.457, label %if.end.468

if.then.457:                                      ; preds = %land.lhs.true.450
  %212 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld458 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %212, i32 0, i32 1
  %arrayidx459 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld458, i32 0, i64 0
  %rtx460 = bitcast %union.rtunion_def* %arrayidx459 to %struct.rtx_def**
  %213 = load %struct.rtx_def*, %struct.rtx_def** %rtx460, align 8
  store %struct.rtx_def* %213, %struct.rtx_def** %varop.addr, align 8
  %214 = load i32, i32* %count, align 4
  %215 = load i32, i32* %first_count, align 4
  %sub461 = sub i32 %214, %215
  store i32 %sub461, i32* %signed_count, align 4
  %216 = load i32, i32* %signed_count, align 4
  %cmp462 = icmp slt i32 %216, 0
  br i1 %cmp462, label %if.then.464, label %if.else.466

if.then.464:                                      ; preds = %if.then.457
  %217 = load i32, i32* %signed_count, align 4
  %sub465 = sub nsw i32 0, %217
  store i32 %sub465, i32* %count, align 4
  store i32 87, i32* %code.addr, align 4
  br label %if.end.467

if.else.466:                                      ; preds = %if.then.457
  %218 = load i32, i32* %signed_count, align 4
  store i32 %218, i32* %count, align 4
  br label %if.end.467

if.end.467:                                       ; preds = %if.else.466, %if.then.464
  br label %while.cond

if.end.468:                                       ; preds = %land.lhs.true.450, %land.lhs.true.444, %land.lhs.true.441, %if.end.438
  %219 = load i32, i32* %code.addr, align 4
  %220 = load i32, i32* %first_code, align 4
  %cmp469 = icmp eq i32 %219, %220
  br i1 %cmp469, label %if.then.471, label %if.end.492

if.then.471:                                      ; preds = %if.end.468
  %221 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %222 = bitcast %struct.rtx_def* %221 to i32*
  %bf.load472 = load i32, i32* %222, align 8
  %bf.lshr473 = lshr i32 %bf.load472, 16
  %bf.clear474 = and i32 %bf.lshr473, 255
  %223 = load i32, i32* %result_mode.addr, align 4
  %cmp475 = icmp ne i32 %bf.clear474, %223
  br i1 %cmp475, label %land.lhs.true.477, label %if.end.487

land.lhs.true.477:                                ; preds = %if.then.471
  %224 = load i32, i32* %code.addr, align 4
  %cmp478 = icmp eq i32 %224, 89
  br i1 %cmp478, label %if.then.486, label %lor.lhs.false.480

lor.lhs.false.480:                                ; preds = %land.lhs.true.477
  %225 = load i32, i32* %code.addr, align 4
  %cmp481 = icmp eq i32 %225, 90
  br i1 %cmp481, label %if.then.486, label %lor.lhs.false.483

lor.lhs.false.483:                                ; preds = %lor.lhs.false.480
  %226 = load i32, i32* %code.addr, align 4
  %cmp484 = icmp eq i32 %226, 88
  br i1 %cmp484, label %if.then.486, label %if.end.487

if.then.486:                                      ; preds = %lor.lhs.false.483, %lor.lhs.false.480, %land.lhs.true.477
  br label %sw.epilog

if.end.487:                                       ; preds = %lor.lhs.false.483, %if.then.471
  %227 = load i32, i32* %first_count, align 4
  %228 = load i32, i32* %count, align 4
  %add488 = add i32 %228, %227
  store i32 %add488, i32* %count, align 4
  %229 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld489 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %229, i32 0, i32 1
  %arrayidx490 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld489, i32 0, i64 0
  %rtx491 = bitcast %union.rtunion_def* %arrayidx490 to %struct.rtx_def**
  %230 = load %struct.rtx_def*, %struct.rtx_def** %rtx491, align 8
  store %struct.rtx_def* %230, %struct.rtx_def** %varop.addr, align 8
  br label %while.cond

if.end.492:                                       ; preds = %if.end.468
  %231 = load i32, i32* %code.addr, align 4
  %cmp493 = icmp eq i32 %231, 89
  br i1 %cmp493, label %if.then.525, label %lor.lhs.false.495

lor.lhs.false.495:                                ; preds = %if.end.492
  %232 = load i32, i32* %code.addr, align 4
  %cmp496 = icmp eq i32 %232, 88
  br i1 %cmp496, label %land.lhs.true.498, label %lor.lhs.false.501

land.lhs.true.498:                                ; preds = %lor.lhs.false.495
  %233 = load i32, i32* %first_code, align 4
  %cmp499 = icmp eq i32 %233, 89
  br i1 %cmp499, label %if.then.525, label %lor.lhs.false.501

lor.lhs.false.501:                                ; preds = %land.lhs.true.498, %lor.lhs.false.495
  %234 = load i32, i32* %mode, align 4
  %idxprom502 = sext i32 %234 to i64
  %arrayidx503 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom502
  %235 = load i16, i16* %arrayidx503, align 2
  %conv504 = zext i16 %235 to i32
  %cmp505 = icmp sgt i32 %conv504, 64
  br i1 %cmp505, label %if.then.525, label %lor.lhs.false.507

lor.lhs.false.507:                                ; preds = %lor.lhs.false.501
  %236 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %237 = bitcast %struct.rtx_def* %236 to i32*
  %bf.load508 = load i32, i32* %237, align 8
  %bf.lshr509 = lshr i32 %bf.load508, 16
  %bf.clear510 = and i32 %bf.lshr509, 255
  %238 = load i32, i32* %result_mode.addr, align 4
  %cmp511 = icmp ne i32 %bf.clear510, %238
  br i1 %cmp511, label %land.lhs.true.513, label %if.end.526

land.lhs.true.513:                                ; preds = %lor.lhs.false.507
  %239 = load i32, i32* %first_code, align 4
  %cmp514 = icmp eq i32 %239, 89
  br i1 %cmp514, label %if.then.525, label %lor.lhs.false.516

lor.lhs.false.516:                                ; preds = %land.lhs.true.513
  %240 = load i32, i32* %first_code, align 4
  %cmp517 = icmp eq i32 %240, 90
  br i1 %cmp517, label %if.then.525, label %lor.lhs.false.519

lor.lhs.false.519:                                ; preds = %lor.lhs.false.516
  %241 = load i32, i32* %first_code, align 4
  %cmp520 = icmp eq i32 %241, 88
  br i1 %cmp520, label %if.then.525, label %lor.lhs.false.522

lor.lhs.false.522:                                ; preds = %lor.lhs.false.519
  %242 = load i32, i32* %code.addr, align 4
  %cmp523 = icmp eq i32 %242, 88
  br i1 %cmp523, label %if.then.525, label %if.end.526

if.then.525:                                      ; preds = %lor.lhs.false.522, %lor.lhs.false.519, %lor.lhs.false.516, %land.lhs.true.513, %lor.lhs.false.501, %land.lhs.true.498, %if.end.492
  br label %sw.epilog

if.end.526:                                       ; preds = %lor.lhs.false.522, %lor.lhs.false.507
  %243 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %244 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %245 = bitcast %struct.rtx_def* %244 to i32*
  %bf.load527 = load i32, i32* %245, align 8
  %bf.lshr528 = lshr i32 %bf.load527, 16
  %bf.clear529 = and i32 %bf.lshr528, 255
  %call530 = call i64 @nonzero_bits(%struct.rtx_def* %243, i32 %bf.clear529)
  %call531 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call530)
  store %struct.rtx_def* %call531, %struct.rtx_def** %mask_rtx, align 8
  %246 = load i32, i32* %code.addr, align 4
  %247 = load i32, i32* %result_mode.addr, align 4
  %248 = load %struct.rtx_def*, %struct.rtx_def** %mask_rtx, align 8
  %249 = load i32, i32* %count, align 4
  %conv532 = zext i32 %249 to i64
  %call533 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv532)
  %call534 = call %struct.rtx_def* @simplify_binary_operation(i32 %246, i32 %247, %struct.rtx_def* %248, %struct.rtx_def* %call533)
  store %struct.rtx_def* %call534, %struct.rtx_def** %mask_rtx, align 8
  %250 = load %struct.rtx_def*, %struct.rtx_def** %mask_rtx, align 8
  %cmp535 = icmp eq %struct.rtx_def* %250, null
  br i1 %cmp535, label %if.then.548, label %lor.lhs.false.537

lor.lhs.false.537:                                ; preds = %if.end.526
  %251 = load %struct.rtx_def*, %struct.rtx_def** %mask_rtx, align 8
  %252 = bitcast %struct.rtx_def* %251 to i32*
  %bf.load538 = load i32, i32* %252, align 8
  %bf.clear539 = and i32 %bf.load538, 65535
  %cmp540 = icmp ne i32 %bf.clear539, 54
  br i1 %cmp540, label %if.then.548, label %lor.lhs.false.542

lor.lhs.false.542:                                ; preds = %lor.lhs.false.537
  %253 = load %struct.rtx_def*, %struct.rtx_def** %mask_rtx, align 8
  %fld543 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %253, i32 0, i32 1
  %arrayidx544 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld543, i32 0, i64 0
  %rtwint545 = bitcast %union.rtunion_def* %arrayidx544 to i64*
  %254 = load i64, i64* %rtwint545, align 8
  %255 = load i32, i32* %result_mode.addr, align 4
  %call546 = call i32 @merge_outer_ops(i32* %outer_op, i64* %outer_const, i32 83, i64 %254, i32 %255, i32* %complement_p)
  %tobool547 = icmp ne i32 %call546, 0
  br i1 %tobool547, label %if.end.549, label %if.then.548

if.then.548:                                      ; preds = %lor.lhs.false.542, %lor.lhs.false.537, %if.end.526
  br label %sw.epilog

if.end.549:                                       ; preds = %lor.lhs.false.542
  %256 = load i32, i32* %count, align 4
  store i32 %256, i32* %signed_count, align 4
  %257 = load i32, i32* %code.addr, align 4
  %cmp550 = icmp eq i32 %257, 89
  br i1 %cmp550, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end.549
  %258 = load i32, i32* %code.addr, align 4
  %cmp552 = icmp eq i32 %258, 90
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end.549
  %259 = phi i1 [ true, %if.end.549 ], [ %cmp552, %lor.rhs ]
  %lor.ext = zext i1 %259 to i32
  %260 = load i32, i32* %first_code, align 4
  %cmp554 = icmp eq i32 %260, 89
  br i1 %cmp554, label %lor.end.559, label %lor.rhs.556

lor.rhs.556:                                      ; preds = %lor.end
  %261 = load i32, i32* %first_code, align 4
  %cmp557 = icmp eq i32 %261, 90
  br label %lor.end.559

lor.end.559:                                      ; preds = %lor.rhs.556, %lor.end
  %262 = phi i1 [ true, %lor.end ], [ %cmp557, %lor.rhs.556 ]
  %lor.ext560 = zext i1 %262 to i32
  %cmp561 = icmp eq i32 %lor.ext, %lor.ext560
  br i1 %cmp561, label %if.then.563, label %if.else.565

if.then.563:                                      ; preds = %lor.end.559
  %263 = load i32, i32* %first_count, align 4
  %264 = load i32, i32* %signed_count, align 4
  %add564 = add i32 %264, %263
  store i32 %add564, i32* %signed_count, align 4
  br label %if.end.567

if.else.565:                                      ; preds = %lor.end.559
  %265 = load i32, i32* %first_count, align 4
  %266 = load i32, i32* %signed_count, align 4
  %sub566 = sub i32 %266, %265
  store i32 %sub566, i32* %signed_count, align 4
  br label %if.end.567

if.end.567:                                       ; preds = %if.else.565, %if.then.563
  %267 = load i32, i32* %signed_count, align 4
  %cmp568 = icmp sgt i32 %267, 0
  br i1 %cmp568, label %land.lhs.true.570, label %if.else.583

land.lhs.true.570:                                ; preds = %if.end.567
  %268 = load i32, i32* %first_code, align 4
  %cmp571 = icmp eq i32 %268, 88
  br i1 %cmp571, label %land.lhs.true.573, label %lor.lhs.false.576

land.lhs.true.573:                                ; preds = %land.lhs.true.570
  %269 = load i32, i32* %code.addr, align 4
  %cmp574 = icmp eq i32 %269, 87
  br i1 %cmp574, label %if.then.582, label %lor.lhs.false.576

lor.lhs.false.576:                                ; preds = %land.lhs.true.573, %land.lhs.true.570
  %270 = load i32, i32* %first_code, align 4
  %cmp577 = icmp eq i32 %270, 89
  br i1 %cmp577, label %land.lhs.true.579, label %if.else.583

land.lhs.true.579:                                ; preds = %lor.lhs.false.576
  %271 = load i32, i32* %code.addr, align 4
  %cmp580 = icmp eq i32 %271, 90
  br i1 %cmp580, label %if.then.582, label %if.else.583

if.then.582:                                      ; preds = %land.lhs.true.579, %land.lhs.true.573
  %272 = load i32, i32* %first_code, align 4
  store i32 %272, i32* %code.addr, align 4
  %273 = load i32, i32* %signed_count, align 4
  store i32 %273, i32* %count, align 4
  br label %if.end.590

if.else.583:                                      ; preds = %land.lhs.true.579, %lor.lhs.false.576, %if.end.567
  %274 = load i32, i32* %signed_count, align 4
  %cmp584 = icmp slt i32 %274, 0
  br i1 %cmp584, label %if.then.586, label %if.else.588

if.then.586:                                      ; preds = %if.else.583
  %275 = load i32, i32* %first_code, align 4
  store i32 %275, i32* %code.addr, align 4
  %276 = load i32, i32* %signed_count, align 4
  %sub587 = sub nsw i32 0, %276
  store i32 %sub587, i32* %count, align 4
  br label %if.end.589

if.else.588:                                      ; preds = %if.else.583
  %277 = load i32, i32* %signed_count, align 4
  store i32 %277, i32* %count, align 4
  br label %if.end.589

if.end.589:                                       ; preds = %if.else.588, %if.then.586
  br label %if.end.590

if.end.590:                                       ; preds = %if.end.589, %if.then.582
  %278 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld591 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %278, i32 0, i32 1
  %arrayidx592 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld591, i32 0, i64 0
  %rtx593 = bitcast %union.rtunion_def* %arrayidx592 to %struct.rtx_def**
  %279 = load %struct.rtx_def*, %struct.rtx_def** %rtx593, align 8
  store %struct.rtx_def* %279, %struct.rtx_def** %varop.addr, align 8
  br label %while.cond

if.else.594:                                      ; preds = %land.lhs.true.392, %land.lhs.true.386, %land.lhs.true.371, %land.lhs.true.362, %sw.bb.354
  %280 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %281 = bitcast %struct.rtx_def* %280 to i32*
  %bf.load595 = load i32, i32* %281, align 8
  %bf.clear596 = and i32 %bf.load595, 65535
  %282 = load i32, i32* %code.addr, align 4
  %cmp597 = icmp eq i32 %bf.clear596, %282
  br i1 %cmp597, label %land.lhs.true.599, label %if.end.621

land.lhs.true.599:                                ; preds = %if.else.594
  %283 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld600 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %283, i32 0, i32 1
  %arrayidx601 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld600, i32 0, i64 1
  %rtx602 = bitcast %union.rtunion_def* %arrayidx601 to %struct.rtx_def**
  %284 = load %struct.rtx_def*, %struct.rtx_def** %rtx602, align 8
  %285 = bitcast %struct.rtx_def* %284 to i32*
  %bf.load603 = load i32, i32* %285, align 8
  %bf.clear604 = and i32 %bf.load603, 65535
  %cmp605 = icmp ne i32 %bf.clear604, 54
  br i1 %cmp605, label %land.lhs.true.607, label %if.end.621

land.lhs.true.607:                                ; preds = %land.lhs.true.599
  %286 = load i32, i32* %code.addr, align 4
  %287 = load i32, i32* %mode, align 4
  %288 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld608 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %288, i32 0, i32 1
  %arrayidx609 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld608, i32 0, i64 0
  %rtx610 = bitcast %union.rtunion_def* %arrayidx609 to %struct.rtx_def**
  %289 = load %struct.rtx_def*, %struct.rtx_def** %rtx610, align 8
  %290 = load i32, i32* %count, align 4
  %conv611 = zext i32 %290 to i64
  %call612 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv611)
  %call613 = call %struct.rtx_def* @simplify_binary_operation(i32 %286, i32 %287, %struct.rtx_def* %289, %struct.rtx_def* %call612)
  store %struct.rtx_def* %call613, %struct.rtx_def** %new, align 8
  %cmp614 = icmp ne %struct.rtx_def* null, %call613
  br i1 %cmp614, label %if.then.616, label %if.end.621

if.then.616:                                      ; preds = %land.lhs.true.607
  %291 = load i32, i32* %code.addr, align 4
  %292 = load i32, i32* %mode, align 4
  %293 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %294 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld617 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %294, i32 0, i32 1
  %arrayidx618 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld617, i32 0, i64 1
  %rtx619 = bitcast %union.rtunion_def* %arrayidx618 to %struct.rtx_def**
  %295 = load %struct.rtx_def*, %struct.rtx_def** %rtx619, align 8
  %call620 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %291, i32 %292, %struct.rtx_def* %293, %struct.rtx_def* %295)
  store %struct.rtx_def* %call620, %struct.rtx_def** %varop.addr, align 8
  store i32 0, i32* %count, align 4
  br label %while.cond

if.end.621:                                       ; preds = %land.lhs.true.607, %land.lhs.true.599, %if.else.594
  br label %if.end.622

if.end.622:                                       ; preds = %if.end.621
  br label %sw.epilog

sw.bb.623:                                        ; preds = %if.end.112
  %296 = load i32, i32* %mode, align 4
  %297 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld624 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %297, i32 0, i32 1
  %arrayidx625 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld624, i32 0, i64 0
  %rtx626 = bitcast %union.rtunion_def* %arrayidx625 to %struct.rtx_def**
  %298 = load %struct.rtx_def*, %struct.rtx_def** %rtx626, align 8
  %299 = load i32, i32* %mode, align 4
  %idxprom627 = sext i32 %299 to i64
  %arrayidx628 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom627
  %300 = load i64, i64* %arrayidx628, align 8
  %call629 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %300)
  %call630 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 85, i32 %296, %struct.rtx_def* %298, %struct.rtx_def* %call629)
  store %struct.rtx_def* %call630, %struct.rtx_def** %varop.addr, align 8
  br label %while.cond

sw.bb.631:                                        ; preds = %if.end.112, %if.end.112, %if.end.112
  %301 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %302 = bitcast %struct.rtx_def* %301 to i32*
  %bf.load632 = load i32, i32* %302, align 8
  %bf.clear633 = and i32 %bf.load632, 65535
  %cmp634 = icmp eq i32 %bf.clear633, 84
  br i1 %cmp634, label %land.lhs.true.636, label %if.end.701

land.lhs.true.636:                                ; preds = %sw.bb.631
  %303 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld637 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %303, i32 0, i32 1
  %arrayidx638 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld637, i32 0, i64 0
  %rtx639 = bitcast %union.rtunion_def* %arrayidx638 to %struct.rtx_def**
  %304 = load %struct.rtx_def*, %struct.rtx_def** %rtx639, align 8
  %305 = bitcast %struct.rtx_def* %304 to i32*
  %bf.load640 = load i32, i32* %305, align 8
  %bf.clear641 = and i32 %bf.load640, 65535
  %cmp642 = icmp eq i32 %bf.clear641, 75
  br i1 %cmp642, label %land.lhs.true.644, label %if.end.701

land.lhs.true.644:                                ; preds = %land.lhs.true.636
  %306 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld645 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %306, i32 0, i32 1
  %arrayidx646 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld645, i32 0, i64 0
  %rtx647 = bitcast %union.rtunion_def* %arrayidx646 to %struct.rtx_def**
  %307 = load %struct.rtx_def*, %struct.rtx_def** %rtx647, align 8
  %fld648 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %307, i32 0, i32 1
  %arrayidx649 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld648, i32 0, i64 1
  %rtx650 = bitcast %union.rtunion_def* %arrayidx649 to %struct.rtx_def**
  %308 = load %struct.rtx_def*, %struct.rtx_def** %rtx650, align 8
  %309 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 63), align 8
  %cmp651 = icmp eq %struct.rtx_def* %308, %309
  br i1 %cmp651, label %land.lhs.true.653, label %if.end.701

land.lhs.true.653:                                ; preds = %land.lhs.true.644
  %310 = load i32, i32* %code.addr, align 4
  %cmp654 = icmp eq i32 %310, 90
  br i1 %cmp654, label %land.lhs.true.659, label %lor.lhs.false.656

lor.lhs.false.656:                                ; preds = %land.lhs.true.653
  %311 = load i32, i32* %code.addr, align 4
  %cmp657 = icmp eq i32 %311, 89
  br i1 %cmp657, label %land.lhs.true.659, label %if.end.701

land.lhs.true.659:                                ; preds = %lor.lhs.false.656, %land.lhs.true.653
  %312 = load i32, i32* %count, align 4
  %313 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %314 = bitcast %struct.rtx_def* %313 to i32*
  %bf.load660 = load i32, i32* %314, align 8
  %bf.lshr661 = lshr i32 %bf.load660, 16
  %bf.clear662 = and i32 %bf.lshr661, 255
  %idxprom663 = sext i32 %bf.clear662 to i64
  %arrayidx664 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom663
  %315 = load i16, i16* %arrayidx664, align 2
  %conv665 = zext i16 %315 to i32
  %sub666 = sub nsw i32 %conv665, 1
  %cmp667 = icmp eq i32 %312, %sub666
  br i1 %cmp667, label %land.lhs.true.669, label %if.end.701

land.lhs.true.669:                                ; preds = %land.lhs.true.659
  %316 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld670 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %316, i32 0, i32 1
  %arrayidx671 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld670, i32 0, i64 0
  %rtx672 = bitcast %union.rtunion_def* %arrayidx671 to %struct.rtx_def**
  %317 = load %struct.rtx_def*, %struct.rtx_def** %rtx672, align 8
  %fld673 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %317, i32 0, i32 1
  %arrayidx674 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld673, i32 0, i64 0
  %rtx675 = bitcast %union.rtunion_def* %arrayidx674 to %struct.rtx_def**
  %318 = load %struct.rtx_def*, %struct.rtx_def** %rtx675, align 8
  %319 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld676 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %319, i32 0, i32 1
  %arrayidx677 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld676, i32 0, i64 1
  %rtx678 = bitcast %union.rtunion_def* %arrayidx677 to %struct.rtx_def**
  %320 = load %struct.rtx_def*, %struct.rtx_def** %rtx678, align 8
  %call679 = call i32 @rtx_equal_p(%struct.rtx_def* %318, %struct.rtx_def* %320)
  %tobool680 = icmp ne i32 %call679, 0
  br i1 %tobool680, label %if.then.681, label %if.end.701

if.then.681:                                      ; preds = %land.lhs.true.669
  store i32 0, i32* %count, align 4
  %321 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %322 = bitcast %struct.rtx_def* %321 to i32*
  %bf.load682 = load i32, i32* %322, align 8
  %bf.lshr683 = lshr i32 %bf.load682, 16
  %bf.clear684 = and i32 %bf.lshr683, 255
  %323 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld685 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %323, i32 0, i32 1
  %arrayidx686 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld685, i32 0, i64 1
  %rtx687 = bitcast %union.rtunion_def* %arrayidx686 to %struct.rtx_def**
  %324 = load %struct.rtx_def*, %struct.rtx_def** %rtx687, align 8
  %325 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %call688 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 106, i32 %bf.clear684, %struct.rtx_def* %324, %struct.rtx_def* %325)
  store %struct.rtx_def* %call688, %struct.rtx_def** %varop.addr, align 8
  br i1 true, label %cond.true.689, label %cond.false.692

cond.true.689:                                    ; preds = %if.then.681
  %326 = load i32, i32* %code.addr, align 4
  %cmp690 = icmp eq i32 %326, 89
  br i1 %cmp690, label %if.then.695, label %if.end.700

cond.false.692:                                   ; preds = %if.then.681
  %327 = load i32, i32* %code.addr, align 4
  %cmp693 = icmp eq i32 %327, 90
  br i1 %cmp693, label %if.then.695, label %if.end.700

if.then.695:                                      ; preds = %cond.false.692, %cond.true.689
  %328 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %329 = bitcast %struct.rtx_def* %328 to i32*
  %bf.load696 = load i32, i32* %329, align 8
  %bf.lshr697 = lshr i32 %bf.load696, 16
  %bf.clear698 = and i32 %bf.lshr697, 255
  %330 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %call699 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 %bf.clear698, %struct.rtx_def* %330)
  store %struct.rtx_def* %call699, %struct.rtx_def** %varop.addr, align 8
  br label %if.end.700

if.end.700:                                       ; preds = %if.then.695, %cond.false.692, %cond.true.689
  br label %while.cond

if.end.701:                                       ; preds = %land.lhs.true.669, %land.lhs.true.659, %lor.lhs.false.656, %land.lhs.true.644, %land.lhs.true.636, %sw.bb.631
  %331 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld702 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %331, i32 0, i32 1
  %arrayidx703 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld702, i32 0, i64 1
  %rtx704 = bitcast %union.rtunion_def* %arrayidx703 to %struct.rtx_def**
  %332 = load %struct.rtx_def*, %struct.rtx_def** %rtx704, align 8
  %333 = bitcast %struct.rtx_def* %332 to i32*
  %bf.load705 = load i32, i32* %333, align 8
  %bf.clear706 = and i32 %bf.load705, 65535
  %cmp707 = icmp eq i32 %bf.clear706, 54
  br i1 %cmp707, label %land.lhs.true.709, label %if.end.735

land.lhs.true.709:                                ; preds = %if.end.701
  %334 = load i32, i32* %code.addr, align 4
  %335 = load i32, i32* %result_mode.addr, align 4
  %336 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld710 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %336, i32 0, i32 1
  %arrayidx711 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld710, i32 0, i64 1
  %rtx712 = bitcast %union.rtunion_def* %arrayidx711 to %struct.rtx_def**
  %337 = load %struct.rtx_def*, %struct.rtx_def** %rtx712, align 8
  %338 = load i32, i32* %count, align 4
  %conv713 = zext i32 %338 to i64
  %call714 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv713)
  %call715 = call %struct.rtx_def* @simplify_binary_operation(i32 %334, i32 %335, %struct.rtx_def* %337, %struct.rtx_def* %call714)
  store %struct.rtx_def* %call715, %struct.rtx_def** %new, align 8
  %cmp716 = icmp ne %struct.rtx_def* %call715, null
  br i1 %cmp716, label %land.lhs.true.718, label %if.end.735

land.lhs.true.718:                                ; preds = %land.lhs.true.709
  %339 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %340 = bitcast %struct.rtx_def* %339 to i32*
  %bf.load719 = load i32, i32* %340, align 8
  %bf.clear720 = and i32 %bf.load719, 65535
  %cmp721 = icmp eq i32 %bf.clear720, 54
  br i1 %cmp721, label %land.lhs.true.723, label %if.end.735

land.lhs.true.723:                                ; preds = %land.lhs.true.718
  %341 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %342 = bitcast %struct.rtx_def* %341 to i32*
  %bf.load724 = load i32, i32* %342, align 8
  %bf.clear725 = and i32 %bf.load724, 65535
  %343 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %fld726 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %343, i32 0, i32 1
  %arrayidx727 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld726, i32 0, i64 0
  %rtwint728 = bitcast %union.rtunion_def* %arrayidx727 to i64*
  %344 = load i64, i64* %rtwint728, align 8
  %345 = load i32, i32* %result_mode.addr, align 4
  %call729 = call i32 @merge_outer_ops(i32* %outer_op, i64* %outer_const, i32 %bf.clear725, i64 %344, i32 %345, i32* %complement_p)
  %tobool730 = icmp ne i32 %call729, 0
  br i1 %tobool730, label %if.then.731, label %if.end.735

if.then.731:                                      ; preds = %land.lhs.true.723
  %346 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld732 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %346, i32 0, i32 1
  %arrayidx733 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld732, i32 0, i64 0
  %rtx734 = bitcast %union.rtunion_def* %arrayidx733 to %struct.rtx_def**
  %347 = load %struct.rtx_def*, %struct.rtx_def** %rtx734, align 8
  store %struct.rtx_def* %347, %struct.rtx_def** %varop.addr, align 8
  br label %while.cond

if.end.735:                                       ; preds = %land.lhs.true.723, %land.lhs.true.718, %land.lhs.true.709, %if.end.701
  %348 = load i32, i32* %code.addr, align 4
  %349 = load i32, i32* %shift_mode, align 4
  %350 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld736 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %350, i32 0, i32 1
  %arrayidx737 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld736, i32 0, i64 0
  %rtx738 = bitcast %union.rtunion_def* %arrayidx737 to %struct.rtx_def**
  %351 = load %struct.rtx_def*, %struct.rtx_def** %rtx738, align 8
  %352 = load i32, i32* %count, align 4
  %call739 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 %348, i32 %349, %struct.rtx_def* %351, i32 %352)
  store %struct.rtx_def* %call739, %struct.rtx_def** %lhs, align 8
  %353 = load i32, i32* %code.addr, align 4
  %354 = load i32, i32* %shift_mode, align 4
  %355 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld740 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %355, i32 0, i32 1
  %arrayidx741 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld740, i32 0, i64 1
  %rtx742 = bitcast %union.rtunion_def* %arrayidx741 to %struct.rtx_def**
  %356 = load %struct.rtx_def*, %struct.rtx_def** %rtx742, align 8
  %357 = load i32, i32* %count, align 4
  %call743 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 %353, i32 %354, %struct.rtx_def* %356, i32 %357)
  store %struct.rtx_def* %call743, %struct.rtx_def** %rhs, align 8
  %358 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %359 = bitcast %struct.rtx_def* %358 to i32*
  %bf.load744 = load i32, i32* %359, align 8
  %bf.clear745 = and i32 %bf.load744, 65535
  %360 = load i32, i32* %shift_mode, align 4
  %361 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %362 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %call746 = call %struct.rtx_def* @gen_binary(i32 %bf.clear745, i32 %360, %struct.rtx_def* %361, %struct.rtx_def* %362)
  store %struct.rtx_def* %call746, %struct.rtx_def** %varop.addr, align 8
  %363 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %call747 = call %struct.rtx_def* @apply_distributive_law(%struct.rtx_def* %363)
  store %struct.rtx_def* %call747, %struct.rtx_def** %varop.addr, align 8
  store i32 0, i32* %count, align 4
  br label %sw.epilog

sw.bb.748:                                        ; preds = %if.end.112
  %364 = load i32, i32* %code.addr, align 4
  %cmp749 = icmp eq i32 %364, 90
  br i1 %cmp749, label %land.lhs.true.751, label %if.end.803

land.lhs.true.751:                                ; preds = %sw.bb.748
  %365 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld752 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %365, i32 0, i32 1
  %arrayidx753 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld752, i32 0, i64 1
  %rtx754 = bitcast %union.rtunion_def* %arrayidx753 to %struct.rtx_def**
  %366 = load %struct.rtx_def*, %struct.rtx_def** %rtx754, align 8
  %367 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp755 = icmp eq %struct.rtx_def* %366, %367
  br i1 %cmp755, label %land.lhs.true.757, label %if.end.803

land.lhs.true.757:                                ; preds = %land.lhs.true.751
  %368 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld758 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %368, i32 0, i32 1
  %arrayidx759 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld758, i32 0, i64 0
  %rtx760 = bitcast %union.rtunion_def* %arrayidx759 to %struct.rtx_def**
  %369 = load %struct.rtx_def*, %struct.rtx_def** %rtx760, align 8
  %370 = bitcast %struct.rtx_def* %369 to i32*
  %bf.load761 = load i32, i32* %370, align 8
  %bf.lshr762 = lshr i32 %bf.load761, 16
  %bf.clear763 = and i32 %bf.lshr762, 255
  %371 = load i32, i32* %result_mode.addr, align 4
  %cmp764 = icmp eq i32 %bf.clear763, %371
  br i1 %cmp764, label %land.lhs.true.766, label %if.end.803

land.lhs.true.766:                                ; preds = %land.lhs.true.757
  %372 = load i32, i32* %count, align 4
  %373 = load i32, i32* %result_mode.addr, align 4
  %idxprom767 = sext i32 %373 to i64
  %arrayidx768 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom767
  %374 = load i16, i16* %arrayidx768, align 2
  %conv769 = zext i16 %374 to i32
  %sub770 = sub nsw i32 %conv769, 1
  %cmp771 = icmp eq i32 %372, %sub770
  br i1 %cmp771, label %land.lhs.true.773, label %if.end.803

land.lhs.true.773:                                ; preds = %land.lhs.true.766
  %375 = load i32, i32* %result_mode.addr, align 4
  %idxprom774 = sext i32 %375 to i64
  %arrayidx775 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom774
  %376 = load i16, i16* %arrayidx775, align 2
  %conv776 = zext i16 %376 to i32
  %cmp777 = icmp sle i32 %conv776, 64
  br i1 %cmp777, label %land.lhs.true.779, label %if.end.803

land.lhs.true.779:                                ; preds = %land.lhs.true.773
  %377 = load i32, i32* %result_mode.addr, align 4
  %idxprom780 = sext i32 %377 to i64
  %arrayidx781 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom780
  %378 = load i16, i16* %arrayidx781, align 2
  %conv782 = zext i16 %378 to i32
  %sub783 = sub nsw i32 %conv782, 1
  %conv784 = sext i32 %sub783 to i64
  %cmp785 = icmp slt i64 1, %conv784
  %conv786 = zext i1 %cmp785 to i32
  %and787 = and i32 1, %conv786
  %tobool788 = icmp ne i32 %and787, 0
  br i1 %tobool788, label %land.lhs.true.789, label %if.end.803

land.lhs.true.789:                                ; preds = %land.lhs.true.779
  %379 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld790 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %379, i32 0, i32 1
  %arrayidx791 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld790, i32 0, i64 0
  %rtx792 = bitcast %union.rtunion_def* %arrayidx791 to %struct.rtx_def**
  %380 = load %struct.rtx_def*, %struct.rtx_def** %rtx792, align 8
  %381 = load i32, i32* %result_mode.addr, align 4
  %call793 = call i64 @nonzero_bits(%struct.rtx_def* %380, i32 %381)
  %cmp794 = icmp eq i64 %call793, 1
  br i1 %cmp794, label %land.lhs.true.796, label %if.end.803

land.lhs.true.796:                                ; preds = %land.lhs.true.789
  %382 = load i32, i32* %result_mode.addr, align 4
  %call797 = call i32 @merge_outer_ops(i32* %outer_op, i64* %outer_const, i32 85, i64 1, i32 %382, i32* %complement_p)
  %tobool798 = icmp ne i32 %call797, 0
  br i1 %tobool798, label %if.then.799, label %if.end.803

if.then.799:                                      ; preds = %land.lhs.true.796
  %383 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld800 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %383, i32 0, i32 1
  %arrayidx801 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld800, i32 0, i64 0
  %rtx802 = bitcast %union.rtunion_def* %arrayidx801 to %struct.rtx_def**
  %384 = load %struct.rtx_def*, %struct.rtx_def** %rtx802, align 8
  store %struct.rtx_def* %384, %struct.rtx_def** %varop.addr, align 8
  store i32 0, i32* %count, align 4
  br label %while.cond

if.end.803:                                       ; preds = %land.lhs.true.796, %land.lhs.true.789, %land.lhs.true.779, %land.lhs.true.773, %land.lhs.true.766, %land.lhs.true.757, %land.lhs.true.751, %sw.bb.748
  br label %sw.epilog

sw.bb.804:                                        ; preds = %if.end.112
  %385 = load i32, i32* %code.addr, align 4
  %cmp805 = icmp eq i32 %385, 90
  br i1 %cmp805, label %land.lhs.true.807, label %if.end.825

land.lhs.true.807:                                ; preds = %sw.bb.804
  %386 = load i32, i32* %count, align 4
  %387 = load i32, i32* %result_mode.addr, align 4
  %idxprom808 = sext i32 %387 to i64
  %arrayidx809 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom808
  %388 = load i16, i16* %arrayidx809, align 2
  %conv810 = zext i16 %388 to i32
  %sub811 = sub nsw i32 %conv810, 1
  %cmp812 = icmp eq i32 %386, %sub811
  br i1 %cmp812, label %land.lhs.true.814, label %if.end.825

land.lhs.true.814:                                ; preds = %land.lhs.true.807
  %389 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld815 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %389, i32 0, i32 1
  %arrayidx816 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld815, i32 0, i64 0
  %rtx817 = bitcast %union.rtunion_def* %arrayidx816 to %struct.rtx_def**
  %390 = load %struct.rtx_def*, %struct.rtx_def** %rtx817, align 8
  %391 = load i32, i32* %result_mode.addr, align 4
  %call818 = call i64 @nonzero_bits(%struct.rtx_def* %390, i32 %391)
  %cmp819 = icmp eq i64 %call818, 1
  br i1 %cmp819, label %if.then.821, label %if.end.825

if.then.821:                                      ; preds = %land.lhs.true.814
  %392 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld822 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %392, i32 0, i32 1
  %arrayidx823 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld822, i32 0, i64 0
  %rtx824 = bitcast %union.rtunion_def* %arrayidx823 to %struct.rtx_def**
  %393 = load %struct.rtx_def*, %struct.rtx_def** %rtx824, align 8
  store %struct.rtx_def* %393, %struct.rtx_def** %varop.addr, align 8
  store i32 0, i32* %count, align 4
  br label %while.cond

if.end.825:                                       ; preds = %land.lhs.true.814, %land.lhs.true.807, %sw.bb.804
  %394 = load i32, i32* %code.addr, align 4
  %cmp826 = icmp eq i32 %394, 87
  br i1 %cmp826, label %land.lhs.true.828, label %if.end.835

land.lhs.true.828:                                ; preds = %if.end.825
  %395 = load i32, i32* %result_mode.addr, align 4
  %call829 = call i32 @merge_outer_ops(i32* %outer_op, i64* %outer_const, i32 77, i64 0, i32 %395, i32* %complement_p)
  %tobool830 = icmp ne i32 %call829, 0
  br i1 %tobool830, label %if.then.831, label %if.end.835

if.then.831:                                      ; preds = %land.lhs.true.828
  %396 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld832 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %396, i32 0, i32 1
  %arrayidx833 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld832, i32 0, i64 0
  %rtx834 = bitcast %union.rtunion_def* %arrayidx833 to %struct.rtx_def**
  %397 = load %struct.rtx_def*, %struct.rtx_def** %rtx834, align 8
  store %struct.rtx_def* %397, %struct.rtx_def** %varop.addr, align 8
  br label %while.cond

if.end.835:                                       ; preds = %land.lhs.true.828, %if.end.825
  br label %sw.epilog

sw.bb.836:                                        ; preds = %if.end.112
  %398 = load i32, i32* %code.addr, align 4
  %cmp837 = icmp eq i32 %398, 90
  br i1 %cmp837, label %land.lhs.true.839, label %if.end.866

land.lhs.true.839:                                ; preds = %sw.bb.836
  %399 = load i32, i32* %count, align 4
  %400 = load i32, i32* %result_mode.addr, align 4
  %idxprom840 = sext i32 %400 to i64
  %arrayidx841 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom840
  %401 = load i16, i16* %arrayidx841, align 2
  %conv842 = zext i16 %401 to i32
  %sub843 = sub nsw i32 %conv842, 1
  %cmp844 = icmp eq i32 %399, %sub843
  br i1 %cmp844, label %land.lhs.true.846, label %if.end.866

land.lhs.true.846:                                ; preds = %land.lhs.true.839
  %402 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld847 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %402, i32 0, i32 1
  %arrayidx848 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld847, i32 0, i64 1
  %rtx849 = bitcast %union.rtunion_def* %arrayidx848 to %struct.rtx_def**
  %403 = load %struct.rtx_def*, %struct.rtx_def** %rtx849, align 8
  %404 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 63), align 8
  %cmp850 = icmp eq %struct.rtx_def* %403, %404
  br i1 %cmp850, label %land.lhs.true.852, label %if.end.866

land.lhs.true.852:                                ; preds = %land.lhs.true.846
  %405 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld853 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %405, i32 0, i32 1
  %arrayidx854 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld853, i32 0, i64 0
  %rtx855 = bitcast %union.rtunion_def* %arrayidx854 to %struct.rtx_def**
  %406 = load %struct.rtx_def*, %struct.rtx_def** %rtx855, align 8
  %407 = load i32, i32* %result_mode.addr, align 4
  %call856 = call i64 @nonzero_bits(%struct.rtx_def* %406, i32 %407)
  %cmp857 = icmp eq i64 %call856, 1
  br i1 %cmp857, label %land.lhs.true.859, label %if.end.866

land.lhs.true.859:                                ; preds = %land.lhs.true.852
  %408 = load i32, i32* %result_mode.addr, align 4
  %call860 = call i32 @merge_outer_ops(i32* %outer_op, i64* %outer_const, i32 85, i64 1, i32 %408, i32* %complement_p)
  %tobool861 = icmp ne i32 %call860, 0
  br i1 %tobool861, label %if.then.862, label %if.end.866

if.then.862:                                      ; preds = %land.lhs.true.859
  store i32 0, i32* %count, align 4
  %409 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld863 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %409, i32 0, i32 1
  %arrayidx864 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld863, i32 0, i64 0
  %rtx865 = bitcast %union.rtunion_def* %arrayidx864 to %struct.rtx_def**
  %410 = load %struct.rtx_def*, %struct.rtx_def** %rtx865, align 8
  store %struct.rtx_def* %410, %struct.rtx_def** %varop.addr, align 8
  br label %while.cond

if.end.866:                                       ; preds = %land.lhs.true.859, %land.lhs.true.852, %land.lhs.true.846, %land.lhs.true.839, %sw.bb.836
  %411 = load i32, i32* %code.addr, align 4
  %cmp867 = icmp eq i32 %411, 89
  br i1 %cmp867, label %land.lhs.true.872, label %lor.lhs.false.869

lor.lhs.false.869:                                ; preds = %if.end.866
  %412 = load i32, i32* %code.addr, align 4
  %cmp870 = icmp eq i32 %412, 90
  br i1 %cmp870, label %land.lhs.true.872, label %if.else.899

land.lhs.true.872:                                ; preds = %lor.lhs.false.869, %if.end.866
  %413 = load i32, i32* %count, align 4
  %cmp873 = icmp ult i32 %413, 64
  br i1 %cmp873, label %land.lhs.true.875, label %if.else.899

land.lhs.true.875:                                ; preds = %land.lhs.true.872
  %414 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld876 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %414, i32 0, i32 1
  %arrayidx877 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld876, i32 0, i64 1
  %rtx878 = bitcast %union.rtunion_def* %arrayidx877 to %struct.rtx_def**
  %415 = load %struct.rtx_def*, %struct.rtx_def** %rtx878, align 8
  %416 = load i32, i32* %result_mode.addr, align 4
  %call879 = call i64 @nonzero_bits(%struct.rtx_def* %415, i32 %416)
  %417 = load i32, i32* %count, align 4
  %sh_prom880 = zext i32 %417 to i64
  %shr = lshr i64 %call879, %sh_prom880
  %cmp881 = icmp eq i64 %shr, 0
  br i1 %cmp881, label %land.lhs.true.883, label %if.else.899

land.lhs.true.883:                                ; preds = %land.lhs.true.875
  %418 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld884 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %418, i32 0, i32 1
  %arrayidx885 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld884, i32 0, i64 1
  %rtx886 = bitcast %union.rtunion_def* %arrayidx885 to %struct.rtx_def**
  %419 = load %struct.rtx_def*, %struct.rtx_def** %rtx886, align 8
  %420 = load i32, i32* %result_mode.addr, align 4
  %call887 = call i64 @nonzero_bits(%struct.rtx_def* %419, i32 %420)
  %421 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld888 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %421, i32 0, i32 1
  %arrayidx889 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld888, i32 0, i64 0
  %rtx890 = bitcast %union.rtunion_def* %arrayidx889 to %struct.rtx_def**
  %422 = load %struct.rtx_def*, %struct.rtx_def** %rtx890, align 8
  %423 = load i32, i32* %result_mode.addr, align 4
  %call891 = call i64 @nonzero_bits(%struct.rtx_def* %422, i32 %423)
  %and892 = and i64 %call887, %call891
  %cmp893 = icmp eq i64 %and892, 0
  br i1 %cmp893, label %if.then.895, label %if.else.899

if.then.895:                                      ; preds = %land.lhs.true.883
  %424 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld896 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %424, i32 0, i32 1
  %arrayidx897 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld896, i32 0, i64 0
  %rtx898 = bitcast %union.rtunion_def* %arrayidx897 to %struct.rtx_def**
  %425 = load %struct.rtx_def*, %struct.rtx_def** %rtx898, align 8
  store %struct.rtx_def* %425, %struct.rtx_def** %varop.addr, align 8
  br label %while.cond

if.else.899:                                      ; preds = %land.lhs.true.883, %land.lhs.true.875, %land.lhs.true.872, %lor.lhs.false.869
  %426 = load i32, i32* %code.addr, align 4
  %cmp900 = icmp eq i32 %426, 89
  br i1 %cmp900, label %land.lhs.true.905, label %lor.lhs.false.902

lor.lhs.false.902:                                ; preds = %if.else.899
  %427 = load i32, i32* %code.addr, align 4
  %cmp903 = icmp eq i32 %427, 90
  br i1 %cmp903, label %land.lhs.true.905, label %if.end.939

land.lhs.true.905:                                ; preds = %lor.lhs.false.902, %if.else.899
  %428 = load i32, i32* %count, align 4
  %cmp906 = icmp ult i32 %428, 64
  br i1 %cmp906, label %land.lhs.true.908, label %if.end.939

land.lhs.true.908:                                ; preds = %land.lhs.true.905
  %429 = load i32, i32* %result_mode.addr, align 4
  %idxprom909 = sext i32 %429 to i64
  %arrayidx910 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom909
  %430 = load i16, i16* %arrayidx910, align 2
  %conv911 = zext i16 %430 to i32
  %cmp912 = icmp sle i32 %conv911, 64
  br i1 %cmp912, label %land.lhs.true.914, label %if.end.939

land.lhs.true.914:                                ; preds = %land.lhs.true.908
  %431 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld915 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %431, i32 0, i32 1
  %arrayidx916 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld915, i32 0, i64 0
  %rtx917 = bitcast %union.rtunion_def* %arrayidx916 to %struct.rtx_def**
  %432 = load %struct.rtx_def*, %struct.rtx_def** %rtx917, align 8
  %433 = load i32, i32* %result_mode.addr, align 4
  %call918 = call i64 @nonzero_bits(%struct.rtx_def* %432, i32 %433)
  %434 = load i32, i32* %count, align 4
  %sh_prom919 = zext i32 %434 to i64
  %shr920 = lshr i64 %call918, %sh_prom919
  %cmp921 = icmp eq i64 0, %shr920
  br i1 %cmp921, label %land.lhs.true.923, label %if.end.939

land.lhs.true.923:                                ; preds = %land.lhs.true.914
  %435 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld924 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %435, i32 0, i32 1
  %arrayidx925 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld924, i32 0, i64 0
  %rtx926 = bitcast %union.rtunion_def* %arrayidx925 to %struct.rtx_def**
  %436 = load %struct.rtx_def*, %struct.rtx_def** %rtx926, align 8
  %437 = load i32, i32* %result_mode.addr, align 4
  %call927 = call i64 @nonzero_bits(%struct.rtx_def* %436, i32 %437)
  %438 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld928 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %438, i32 0, i32 1
  %arrayidx929 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld928, i32 0, i64 1
  %rtx930 = bitcast %union.rtunion_def* %arrayidx929 to %struct.rtx_def**
  %439 = load %struct.rtx_def*, %struct.rtx_def** %rtx930, align 8
  %440 = load i32, i32* %result_mode.addr, align 4
  %call931 = call i64 @nonzero_bits(%struct.rtx_def* %439, i32 %440)
  %and932 = and i64 %call927, %call931
  %cmp933 = icmp eq i64 0, %and932
  br i1 %cmp933, label %if.then.935, label %if.end.939

if.then.935:                                      ; preds = %land.lhs.true.923
  %441 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld936 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %441, i32 0, i32 1
  %arrayidx937 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld936, i32 0, i64 1
  %rtx938 = bitcast %union.rtunion_def* %arrayidx937 to %struct.rtx_def**
  %442 = load %struct.rtx_def*, %struct.rtx_def** %rtx938, align 8
  store %struct.rtx_def* %442, %struct.rtx_def** %varop.addr, align 8
  br label %while.cond

if.end.939:                                       ; preds = %land.lhs.true.923, %land.lhs.true.914, %land.lhs.true.908, %land.lhs.true.905, %lor.lhs.false.902
  br label %if.end.940

if.end.940:                                       ; preds = %if.end.939
  %443 = load i32, i32* %code.addr, align 4
  %cmp941 = icmp eq i32 %443, 87
  br i1 %cmp941, label %land.lhs.true.943, label %if.end.975

land.lhs.true.943:                                ; preds = %if.end.940
  %444 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld944 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %444, i32 0, i32 1
  %arrayidx945 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld944, i32 0, i64 1
  %rtx946 = bitcast %union.rtunion_def* %arrayidx945 to %struct.rtx_def**
  %445 = load %struct.rtx_def*, %struct.rtx_def** %rtx946, align 8
  %446 = bitcast %struct.rtx_def* %445 to i32*
  %bf.load947 = load i32, i32* %446, align 8
  %bf.clear948 = and i32 %bf.load947, 65535
  %cmp949 = icmp eq i32 %bf.clear948, 54
  br i1 %cmp949, label %land.lhs.true.951, label %if.end.975

land.lhs.true.951:                                ; preds = %land.lhs.true.943
  %447 = load i32, i32* %result_mode.addr, align 4
  %448 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld952 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %448, i32 0, i32 1
  %arrayidx953 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld952, i32 0, i64 1
  %rtx954 = bitcast %union.rtunion_def* %arrayidx953 to %struct.rtx_def**
  %449 = load %struct.rtx_def*, %struct.rtx_def** %rtx954, align 8
  %450 = load i32, i32* %count, align 4
  %conv955 = zext i32 %450 to i64
  %call956 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv955)
  %call957 = call %struct.rtx_def* @simplify_binary_operation(i32 87, i32 %447, %struct.rtx_def* %449, %struct.rtx_def* %call956)
  store %struct.rtx_def* %call957, %struct.rtx_def** %new, align 8
  %cmp958 = icmp ne %struct.rtx_def* %call957, null
  br i1 %cmp958, label %land.lhs.true.960, label %if.end.975

land.lhs.true.960:                                ; preds = %land.lhs.true.951
  %451 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %452 = bitcast %struct.rtx_def* %451 to i32*
  %bf.load961 = load i32, i32* %452, align 8
  %bf.clear962 = and i32 %bf.load961, 65535
  %cmp963 = icmp eq i32 %bf.clear962, 54
  br i1 %cmp963, label %land.lhs.true.965, label %if.end.975

land.lhs.true.965:                                ; preds = %land.lhs.true.960
  %453 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %fld966 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %453, i32 0, i32 1
  %arrayidx967 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld966, i32 0, i64 0
  %rtwint968 = bitcast %union.rtunion_def* %arrayidx967 to i64*
  %454 = load i64, i64* %rtwint968, align 8
  %455 = load i32, i32* %result_mode.addr, align 4
  %call969 = call i32 @merge_outer_ops(i32* %outer_op, i64* %outer_const, i32 75, i64 %454, i32 %455, i32* %complement_p)
  %tobool970 = icmp ne i32 %call969, 0
  br i1 %tobool970, label %if.then.971, label %if.end.975

if.then.971:                                      ; preds = %land.lhs.true.965
  %456 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld972 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %456, i32 0, i32 1
  %arrayidx973 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld972, i32 0, i64 0
  %rtx974 = bitcast %union.rtunion_def* %arrayidx973 to %struct.rtx_def**
  %457 = load %struct.rtx_def*, %struct.rtx_def** %rtx974, align 8
  store %struct.rtx_def* %457, %struct.rtx_def** %varop.addr, align 8
  br label %while.cond

if.end.975:                                       ; preds = %land.lhs.true.965, %land.lhs.true.960, %land.lhs.true.951, %land.lhs.true.943, %if.end.940
  br label %sw.epilog

sw.bb.976:                                        ; preds = %if.end.112
  %458 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld977 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %458, i32 0, i32 1
  %arrayidx978 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld977, i32 0, i64 0
  %rtx979 = bitcast %union.rtunion_def* %arrayidx978 to %struct.rtx_def**
  %459 = load %struct.rtx_def*, %struct.rtx_def** %rtx979, align 8
  %460 = bitcast %struct.rtx_def* %459 to i32*
  %bf.load980 = load i32, i32* %460, align 8
  %bf.clear981 = and i32 %bf.load980, 65535
  %cmp982 = icmp eq i32 %bf.clear981, 89
  br i1 %cmp982, label %land.lhs.true.984, label %if.end.1056

land.lhs.true.984:                                ; preds = %sw.bb.976
  %461 = load i32, i32* %count, align 4
  %462 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %463 = bitcast %struct.rtx_def* %462 to i32*
  %bf.load985 = load i32, i32* %463, align 8
  %bf.lshr986 = lshr i32 %bf.load985, 16
  %bf.clear987 = and i32 %bf.lshr986, 255
  %idxprom988 = sext i32 %bf.clear987 to i64
  %arrayidx989 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom988
  %464 = load i16, i16* %arrayidx989, align 2
  %conv990 = zext i16 %464 to i32
  %sub991 = sub nsw i32 %conv990, 1
  %cmp992 = icmp eq i32 %461, %sub991
  br i1 %cmp992, label %land.lhs.true.994, label %if.end.1056

land.lhs.true.994:                                ; preds = %land.lhs.true.984
  %465 = load i32, i32* %code.addr, align 4
  %cmp995 = icmp eq i32 %465, 90
  br i1 %cmp995, label %land.lhs.true.1000, label %lor.lhs.false.997

lor.lhs.false.997:                                ; preds = %land.lhs.true.994
  %466 = load i32, i32* %code.addr, align 4
  %cmp998 = icmp eq i32 %466, 89
  br i1 %cmp998, label %land.lhs.true.1000, label %if.end.1056

land.lhs.true.1000:                               ; preds = %lor.lhs.false.997, %land.lhs.true.994
  %467 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld1001 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %467, i32 0, i32 1
  %arrayidx1002 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1001, i32 0, i64 0
  %rtx1003 = bitcast %union.rtunion_def* %arrayidx1002 to %struct.rtx_def**
  %468 = load %struct.rtx_def*, %struct.rtx_def** %rtx1003, align 8
  %fld1004 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %468, i32 0, i32 1
  %arrayidx1005 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1004, i32 0, i64 1
  %rtx1006 = bitcast %union.rtunion_def* %arrayidx1005 to %struct.rtx_def**
  %469 = load %struct.rtx_def*, %struct.rtx_def** %rtx1006, align 8
  %470 = bitcast %struct.rtx_def* %469 to i32*
  %bf.load1007 = load i32, i32* %470, align 8
  %bf.clear1008 = and i32 %bf.load1007, 65535
  %cmp1009 = icmp eq i32 %bf.clear1008, 54
  br i1 %cmp1009, label %land.lhs.true.1011, label %if.end.1056

land.lhs.true.1011:                               ; preds = %land.lhs.true.1000
  %471 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld1012 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %471, i32 0, i32 1
  %arrayidx1013 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1012, i32 0, i64 0
  %rtx1014 = bitcast %union.rtunion_def* %arrayidx1013 to %struct.rtx_def**
  %472 = load %struct.rtx_def*, %struct.rtx_def** %rtx1014, align 8
  %fld1015 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %472, i32 0, i32 1
  %arrayidx1016 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1015, i32 0, i64 1
  %rtx1017 = bitcast %union.rtunion_def* %arrayidx1016 to %struct.rtx_def**
  %473 = load %struct.rtx_def*, %struct.rtx_def** %rtx1017, align 8
  %fld1018 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %473, i32 0, i32 1
  %arrayidx1019 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1018, i32 0, i64 0
  %rtwint1020 = bitcast %union.rtunion_def* %arrayidx1019 to i64*
  %474 = load i64, i64* %rtwint1020, align 8
  %475 = load i32, i32* %count, align 4
  %conv1021 = zext i32 %475 to i64
  %cmp1022 = icmp eq i64 %474, %conv1021
  br i1 %cmp1022, label %land.lhs.true.1024, label %if.end.1056

land.lhs.true.1024:                               ; preds = %land.lhs.true.1011
  %476 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld1025 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %476, i32 0, i32 1
  %arrayidx1026 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1025, i32 0, i64 0
  %rtx1027 = bitcast %union.rtunion_def* %arrayidx1026 to %struct.rtx_def**
  %477 = load %struct.rtx_def*, %struct.rtx_def** %rtx1027, align 8
  %fld1028 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %477, i32 0, i32 1
  %arrayidx1029 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1028, i32 0, i64 0
  %rtx1030 = bitcast %union.rtunion_def* %arrayidx1029 to %struct.rtx_def**
  %478 = load %struct.rtx_def*, %struct.rtx_def** %rtx1030, align 8
  %479 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld1031 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %479, i32 0, i32 1
  %arrayidx1032 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1031, i32 0, i64 1
  %rtx1033 = bitcast %union.rtunion_def* %arrayidx1032 to %struct.rtx_def**
  %480 = load %struct.rtx_def*, %struct.rtx_def** %rtx1033, align 8
  %call1034 = call i32 @rtx_equal_p(%struct.rtx_def* %478, %struct.rtx_def* %480)
  %tobool1035 = icmp ne i32 %call1034, 0
  br i1 %tobool1035, label %if.then.1036, label %if.end.1056

if.then.1036:                                     ; preds = %land.lhs.true.1024
  store i32 0, i32* %count, align 4
  %481 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %482 = bitcast %struct.rtx_def* %481 to i32*
  %bf.load1037 = load i32, i32* %482, align 8
  %bf.lshr1038 = lshr i32 %bf.load1037, 16
  %bf.clear1039 = and i32 %bf.lshr1038, 255
  %483 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld1040 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %483, i32 0, i32 1
  %arrayidx1041 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1040, i32 0, i64 1
  %rtx1042 = bitcast %union.rtunion_def* %arrayidx1041 to %struct.rtx_def**
  %484 = load %struct.rtx_def*, %struct.rtx_def** %rtx1042, align 8
  %485 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %call1043 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 105, i32 %bf.clear1039, %struct.rtx_def* %484, %struct.rtx_def* %485)
  store %struct.rtx_def* %call1043, %struct.rtx_def** %varop.addr, align 8
  br i1 true, label %cond.true.1044, label %cond.false.1047

cond.true.1044:                                   ; preds = %if.then.1036
  %486 = load i32, i32* %code.addr, align 4
  %cmp1045 = icmp eq i32 %486, 89
  br i1 %cmp1045, label %if.then.1050, label %if.end.1055

cond.false.1047:                                  ; preds = %if.then.1036
  %487 = load i32, i32* %code.addr, align 4
  %cmp1048 = icmp eq i32 %487, 90
  br i1 %cmp1048, label %if.then.1050, label %if.end.1055

if.then.1050:                                     ; preds = %cond.false.1047, %cond.true.1044
  %488 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %489 = bitcast %struct.rtx_def* %488 to i32*
  %bf.load1051 = load i32, i32* %489, align 8
  %bf.lshr1052 = lshr i32 %bf.load1051, 16
  %bf.clear1053 = and i32 %bf.lshr1052, 255
  %490 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %call1054 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 %bf.clear1053, %struct.rtx_def* %490)
  store %struct.rtx_def* %call1054, %struct.rtx_def** %varop.addr, align 8
  br label %if.end.1055

if.end.1055:                                      ; preds = %if.then.1050, %cond.false.1047, %cond.true.1044
  br label %while.cond

if.end.1056:                                      ; preds = %land.lhs.true.1024, %land.lhs.true.1011, %land.lhs.true.1000, %lor.lhs.false.997, %land.lhs.true.984, %sw.bb.976
  br label %sw.epilog

sw.bb.1057:                                       ; preds = %if.end.112
  %491 = load i32, i32* %code.addr, align 4
  %cmp1058 = icmp eq i32 %491, 90
  br i1 %cmp1058, label %land.lhs.true.1060, label %if.end.1132

land.lhs.true.1060:                               ; preds = %sw.bb.1057
  %492 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld1061 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %492, i32 0, i32 1
  %arrayidx1062 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1061, i32 0, i64 0
  %rtx1063 = bitcast %union.rtunion_def* %arrayidx1062 to %struct.rtx_def**
  %493 = load %struct.rtx_def*, %struct.rtx_def** %rtx1063, align 8
  %494 = bitcast %struct.rtx_def* %493 to i32*
  %bf.load1064 = load i32, i32* %494, align 8
  %bf.clear1065 = and i32 %bf.load1064, 65535
  %cmp1066 = icmp eq i32 %bf.clear1065, 90
  br i1 %cmp1066, label %land.lhs.true.1068, label %if.end.1132

land.lhs.true.1068:                               ; preds = %land.lhs.true.1060
  %495 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld1069 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %495, i32 0, i32 1
  %arrayidx1070 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1069, i32 0, i64 0
  %rtx1071 = bitcast %union.rtunion_def* %arrayidx1070 to %struct.rtx_def**
  %496 = load %struct.rtx_def*, %struct.rtx_def** %rtx1071, align 8
  %fld1072 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %496, i32 0, i32 1
  %arrayidx1073 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1072, i32 0, i64 1
  %rtx1074 = bitcast %union.rtunion_def* %arrayidx1073 to %struct.rtx_def**
  %497 = load %struct.rtx_def*, %struct.rtx_def** %rtx1074, align 8
  %498 = bitcast %struct.rtx_def* %497 to i32*
  %bf.load1075 = load i32, i32* %498, align 8
  %bf.clear1076 = and i32 %bf.load1075, 65535
  %cmp1077 = icmp eq i32 %bf.clear1076, 54
  br i1 %cmp1077, label %land.lhs.true.1079, label %if.end.1132

land.lhs.true.1079:                               ; preds = %land.lhs.true.1068
  %499 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld1080 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %499, i32 0, i32 1
  %arrayidx1081 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1080, i32 0, i64 0
  %rtx1082 = bitcast %union.rtunion_def* %arrayidx1081 to %struct.rtx_def**
  %500 = load %struct.rtx_def*, %struct.rtx_def** %rtx1082, align 8
  %fld1083 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %500, i32 0, i32 1
  %arrayidx1084 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1083, i32 0, i64 1
  %rtx1085 = bitcast %union.rtunion_def* %arrayidx1084 to %struct.rtx_def**
  %501 = load %struct.rtx_def*, %struct.rtx_def** %rtx1085, align 8
  %fld1086 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %501, i32 0, i32 1
  %arrayidx1087 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1086, i32 0, i64 0
  %rtwint1088 = bitcast %union.rtunion_def* %arrayidx1087 to i64*
  %502 = load i64, i64* %rtwint1088, align 8
  %503 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld1089 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %503, i32 0, i32 1
  %arrayidx1090 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1089, i32 0, i64 0
  %rtx1091 = bitcast %union.rtunion_def* %arrayidx1090 to %struct.rtx_def**
  %504 = load %struct.rtx_def*, %struct.rtx_def** %rtx1091, align 8
  %505 = bitcast %struct.rtx_def* %504 to i32*
  %bf.load1092 = load i32, i32* %505, align 8
  %bf.lshr1093 = lshr i32 %bf.load1092, 16
  %bf.clear1094 = and i32 %bf.lshr1093, 255
  %idxprom1095 = sext i32 %bf.clear1094 to i64
  %arrayidx1096 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1095
  %506 = load i16, i16* %arrayidx1096, align 2
  %conv1097 = zext i16 %506 to i32
  %507 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %508 = bitcast %struct.rtx_def* %507 to i32*
  %bf.load1098 = load i32, i32* %508, align 8
  %bf.lshr1099 = lshr i32 %bf.load1098, 16
  %bf.clear1100 = and i32 %bf.lshr1099, 255
  %idxprom1101 = sext i32 %bf.clear1100 to i64
  %arrayidx1102 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1101
  %509 = load i16, i16* %arrayidx1102, align 2
  %conv1103 = zext i16 %509 to i32
  %sub1104 = sub nsw i32 %conv1097, %conv1103
  %conv1105 = sext i32 %sub1104 to i64
  %cmp1106 = icmp sge i64 %502, %conv1105
  br i1 %cmp1106, label %if.then.1108, label %if.end.1132

if.then.1108:                                     ; preds = %land.lhs.true.1079
  %510 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld1109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %510, i32 0, i32 1
  %arrayidx1110 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1109, i32 0, i64 0
  %rtx1111 = bitcast %union.rtunion_def* %arrayidx1110 to %struct.rtx_def**
  %511 = load %struct.rtx_def*, %struct.rtx_def** %rtx1111, align 8
  store %struct.rtx_def* %511, %struct.rtx_def** %varop_inner, align 8
  %512 = load %struct.rtx_def*, %struct.rtx_def** %varop_inner, align 8
  %513 = bitcast %struct.rtx_def* %512 to i32*
  %bf.load1112 = load i32, i32* %513, align 8
  %bf.lshr1113 = lshr i32 %bf.load1112, 16
  %bf.clear1114 = and i32 %bf.lshr1113, 255
  %514 = load %struct.rtx_def*, %struct.rtx_def** %varop_inner, align 8
  %fld1115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %514, i32 0, i32 1
  %arrayidx1116 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1115, i32 0, i64 0
  %rtx1117 = bitcast %union.rtunion_def* %arrayidx1116 to %struct.rtx_def**
  %515 = load %struct.rtx_def*, %struct.rtx_def** %rtx1117, align 8
  %516 = load i32, i32* %count, align 4
  %conv1118 = zext i32 %516 to i64
  %517 = load %struct.rtx_def*, %struct.rtx_def** %varop_inner, align 8
  %fld1119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %517, i32 0, i32 1
  %arrayidx1120 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1119, i32 0, i64 1
  %rtx1121 = bitcast %union.rtunion_def* %arrayidx1120 to %struct.rtx_def**
  %518 = load %struct.rtx_def*, %struct.rtx_def** %rtx1121, align 8
  %fld1122 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %518, i32 0, i32 1
  %arrayidx1123 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1122, i32 0, i64 0
  %rtwint1124 = bitcast %union.rtunion_def* %arrayidx1123 to i64*
  %519 = load i64, i64* %rtwint1124, align 8
  %add1125 = add nsw i64 %conv1118, %519
  %call1126 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %add1125)
  %call1127 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 90, i32 %bf.clear1114, %struct.rtx_def* %515, %struct.rtx_def* %call1126)
  store %struct.rtx_def* %call1127, %struct.rtx_def** %varop_inner, align 8
  %520 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %521 = bitcast %struct.rtx_def* %520 to i32*
  %bf.load1128 = load i32, i32* %521, align 8
  %bf.lshr1129 = lshr i32 %bf.load1128, 16
  %bf.clear1130 = and i32 %bf.lshr1129, 255
  %522 = load %struct.rtx_def*, %struct.rtx_def** %varop_inner, align 8
  %call1131 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 122, i32 %bf.clear1130, %struct.rtx_def* %522)
  store %struct.rtx_def* %call1131, %struct.rtx_def** %varop.addr, align 8
  store i32 0, i32* %count, align 4
  br label %while.cond

if.end.1132:                                      ; preds = %land.lhs.true.1079, %land.lhs.true.1068, %land.lhs.true.1060, %sw.bb.1057
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.112
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.1132, %if.end.1056, %if.end.975, %if.end.835, %if.end.803, %if.end.735, %if.end.622, %if.then.548, %if.then.525, %if.then.486, %if.end.326, %if.end.290, %if.end.255, %if.end.192, %if.end.150, %if.end.119
  br label %while.end

while.end:                                        ; preds = %sw.epilog, %if.then.76, %if.else.64, %if.then.22, %while.cond
  %523 = load i32, i32* %code.addr, align 4
  %cmp1133 = icmp eq i32 %523, 89
  br i1 %cmp1133, label %cond.true.1141, label %lor.lhs.false.1135

lor.lhs.false.1135:                               ; preds = %while.end
  %524 = load i32, i32* %code.addr, align 4
  %cmp1136 = icmp eq i32 %524, 90
  br i1 %cmp1136, label %cond.true.1141, label %lor.lhs.false.1138

lor.lhs.false.1138:                               ; preds = %lor.lhs.false.1135
  %525 = load i32, i32* %code.addr, align 4
  %cmp1139 = icmp eq i32 %525, 88
  br i1 %cmp1139, label %cond.true.1141, label %cond.false.1142

cond.true.1141:                                   ; preds = %lor.lhs.false.1138, %lor.lhs.false.1135, %while.end
  %526 = load i32, i32* %result_mode.addr, align 4
  br label %cond.end.1143

cond.false.1142:                                  ; preds = %lor.lhs.false.1138
  %527 = load i32, i32* %mode, align 4
  br label %cond.end.1143

cond.end.1143:                                    ; preds = %cond.false.1142, %cond.true.1141
  %cond1144 = phi i32 [ %526, %cond.true.1141 ], [ %527, %cond.false.1142 ]
  store i32 %cond1144, i32* %shift_mode, align 4
  %528 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %tobool1145 = icmp ne %struct.rtx_def* %528, null
  br i1 %tobool1145, label %land.lhs.true.1146, label %if.else.1176

land.lhs.true.1146:                               ; preds = %cond.end.1143
  %529 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %530 = bitcast %struct.rtx_def* %529 to i32*
  %bf.load1147 = load i32, i32* %530, align 8
  %bf.clear1148 = and i32 %bf.load1147, 65535
  %idxprom1149 = sext i32 %bf.clear1148 to i64
  %arrayidx1150 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom1149
  %531 = load i8, i8* %arrayidx1150, align 1
  %conv1151 = sext i8 %531 to i32
  %cmp1152 = icmp eq i32 %conv1151, 50
  br i1 %cmp1152, label %land.lhs.true.1154, label %if.else.1176

land.lhs.true.1154:                               ; preds = %land.lhs.true.1146
  %532 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1155 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %532, i32 0, i32 1
  %arrayidx1156 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1155, i32 0, i64 1
  %rtx1157 = bitcast %union.rtunion_def* %arrayidx1156 to %struct.rtx_def**
  %533 = load %struct.rtx_def*, %struct.rtx_def** %rtx1157, align 8
  %534 = bitcast %struct.rtx_def* %533 to i32*
  %bf.load1158 = load i32, i32* %534, align 8
  %bf.clear1159 = and i32 %bf.load1158, 65535
  %cmp1160 = icmp eq i32 %bf.clear1159, 54
  br i1 %cmp1160, label %land.lhs.true.1162, label %if.else.1176

land.lhs.true.1162:                               ; preds = %land.lhs.true.1154
  %535 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1163 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %535, i32 0, i32 1
  %arrayidx1164 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1163, i32 0, i64 1
  %rtx1165 = bitcast %union.rtunion_def* %arrayidx1164 to %struct.rtx_def**
  %536 = load %struct.rtx_def*, %struct.rtx_def** %rtx1165, align 8
  %fld1166 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %536, i32 0, i32 1
  %arrayidx1167 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1166, i32 0, i64 0
  %rtwint1168 = bitcast %union.rtunion_def* %arrayidx1167 to i64*
  %537 = load i64, i64* %rtwint1168, align 8
  %538 = load i32, i32* %count, align 4
  %conv1169 = zext i32 %538 to i64
  %cmp1170 = icmp eq i64 %537, %conv1169
  br i1 %cmp1170, label %if.then.1172, label %if.else.1176

if.then.1172:                                     ; preds = %land.lhs.true.1162
  %539 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1173 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %539, i32 0, i32 1
  %arrayidx1174 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1173, i32 0, i64 1
  %rtx1175 = bitcast %union.rtunion_def* %arrayidx1174 to %struct.rtx_def**
  %540 = load %struct.rtx_def*, %struct.rtx_def** %rtx1175, align 8
  store %struct.rtx_def* %540, %struct.rtx_def** %const_rtx, align 8
  br label %if.end.1179

if.else.1176:                                     ; preds = %land.lhs.true.1162, %land.lhs.true.1154, %land.lhs.true.1146, %cond.end.1143
  %541 = load i32, i32* %count, align 4
  %conv1177 = zext i32 %541 to i64
  %call1178 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv1177)
  store %struct.rtx_def* %call1178, %struct.rtx_def** %const_rtx, align 8
  br label %if.end.1179

if.end.1179:                                      ; preds = %if.else.1176, %if.then.1172
  %542 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %tobool1180 = icmp ne %struct.rtx_def* %542, null
  br i1 %tobool1180, label %land.lhs.true.1181, label %if.else.1211

land.lhs.true.1181:                               ; preds = %if.end.1179
  %543 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1182 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %543, i32 0, i32 1
  %arrayidx1183 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1182, i32 0, i64 0
  %rtx1184 = bitcast %union.rtunion_def* %arrayidx1183 to %struct.rtx_def**
  %544 = load %struct.rtx_def*, %struct.rtx_def** %rtx1184, align 8
  %545 = bitcast %struct.rtx_def* %544 to i32*
  %bf.load1185 = load i32, i32* %545, align 8
  %bf.clear1186 = and i32 %bf.load1185, 65535
  %cmp1187 = icmp eq i32 %bf.clear1186, 63
  br i1 %cmp1187, label %land.lhs.true.1189, label %if.else.1211

land.lhs.true.1189:                               ; preds = %land.lhs.true.1181
  %546 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1190 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %546, i32 0, i32 1
  %arrayidx1191 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1190, i32 0, i64 0
  %rtx1192 = bitcast %union.rtunion_def* %arrayidx1191 to %struct.rtx_def**
  %547 = load %struct.rtx_def*, %struct.rtx_def** %rtx1192, align 8
  %548 = bitcast %struct.rtx_def* %547 to i32*
  %bf.load1193 = load i32, i32* %548, align 8
  %bf.lshr1194 = lshr i32 %bf.load1193, 16
  %bf.clear1195 = and i32 %bf.lshr1194, 255
  %549 = load i32, i32* %shift_mode, align 4
  %cmp1196 = icmp eq i32 %bf.clear1195, %549
  br i1 %cmp1196, label %land.lhs.true.1198, label %if.else.1211

land.lhs.true.1198:                               ; preds = %land.lhs.true.1189
  %550 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1199 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %550, i32 0, i32 1
  %arrayidx1200 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1199, i32 0, i64 0
  %rtx1201 = bitcast %union.rtunion_def* %arrayidx1200 to %struct.rtx_def**
  %551 = load %struct.rtx_def*, %struct.rtx_def** %rtx1201, align 8
  %fld1202 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %551, i32 0, i32 1
  %arrayidx1203 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1202, i32 0, i64 0
  %rtx1204 = bitcast %union.rtunion_def* %arrayidx1203 to %struct.rtx_def**
  %552 = load %struct.rtx_def*, %struct.rtx_def** %rtx1204, align 8
  %553 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %cmp1205 = icmp eq %struct.rtx_def* %552, %553
  br i1 %cmp1205, label %if.then.1207, label %if.else.1211

if.then.1207:                                     ; preds = %land.lhs.true.1198
  %554 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1208 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %554, i32 0, i32 1
  %arrayidx1209 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1208, i32 0, i64 0
  %rtx1210 = bitcast %union.rtunion_def* %arrayidx1209 to %struct.rtx_def**
  %555 = load %struct.rtx_def*, %struct.rtx_def** %rtx1210, align 8
  store %struct.rtx_def* %555, %struct.rtx_def** %varop.addr, align 8
  br label %if.end.1220

if.else.1211:                                     ; preds = %land.lhs.true.1198, %land.lhs.true.1189, %land.lhs.true.1181, %if.end.1179
  %556 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %557 = bitcast %struct.rtx_def* %556 to i32*
  %bf.load1212 = load i32, i32* %557, align 8
  %bf.lshr1213 = lshr i32 %bf.load1212, 16
  %bf.clear1214 = and i32 %bf.lshr1213, 255
  %558 = load i32, i32* %shift_mode, align 4
  %cmp1215 = icmp ne i32 %bf.clear1214, %558
  br i1 %cmp1215, label %if.then.1217, label %if.end.1219

if.then.1217:                                     ; preds = %if.else.1211
  %559 = load i32, i32* %shift_mode, align 4
  %560 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %call1218 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %559, %struct.rtx_def* %560)
  store %struct.rtx_def* %call1218, %struct.rtx_def** %varop.addr, align 8
  br label %if.end.1219

if.end.1219:                                      ; preds = %if.then.1217, %if.else.1211
  br label %if.end.1220

if.end.1220:                                      ; preds = %if.end.1219, %if.then.1207
  %561 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %562 = bitcast %struct.rtx_def* %561 to i32*
  %bf.load1221 = load i32, i32* %562, align 8
  %bf.clear1222 = and i32 %bf.load1221, 65535
  %cmp1223 = icmp eq i32 %bf.clear1222, 49
  br i1 %cmp1223, label %if.then.1225, label %if.end.1231

if.then.1225:                                     ; preds = %if.end.1220
  %563 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %tobool1226 = icmp ne %struct.rtx_def* %563, null
  br i1 %tobool1226, label %cond.true.1227, label %cond.false.1228

cond.true.1227:                                   ; preds = %if.then.1225
  %564 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  br label %cond.end.1229

cond.false.1228:                                  ; preds = %if.then.1225
  %565 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  br label %cond.end.1229

cond.end.1229:                                    ; preds = %cond.false.1228, %cond.true.1227
  %cond1230 = phi %struct.rtx_def* [ %564, %cond.true.1227 ], [ %565, %cond.false.1228 ]
  store %struct.rtx_def* %cond1230, %struct.rtx_def** %retval
  br label %return

if.end.1231:                                      ; preds = %if.end.1220
  %566 = load i32, i32* %code.addr, align 4
  %567 = load i32, i32* %shift_mode, align 4
  %568 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %569 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx, align 8
  %call1232 = call %struct.rtx_def* @simplify_binary_operation(i32 %566, i32 %567, %struct.rtx_def* %568, %struct.rtx_def* %569)
  store %struct.rtx_def* %call1232, %struct.rtx_def** %new, align 8
  %570 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %cmp1233 = icmp ne %struct.rtx_def* %570, null
  br i1 %cmp1233, label %if.then.1235, label %if.else.1236

if.then.1235:                                     ; preds = %if.end.1231
  %571 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  store %struct.rtx_def* %571, %struct.rtx_def** %x.addr, align 8
  br label %if.end.1238

if.else.1236:                                     ; preds = %if.end.1231
  %572 = load i32, i32* %code.addr, align 4
  %573 = load i32, i32* %shift_mode, align 4
  %574 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %575 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx, align 8
  %call1237 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %572, i32 %573, %struct.rtx_def* %574, %struct.rtx_def* %575)
  store %struct.rtx_def* %call1237, %struct.rtx_def** %x.addr, align 8
  br label %if.end.1238

if.end.1238:                                      ; preds = %if.else.1236, %if.then.1235
  %576 = load i32, i32* %outer_op, align 4
  %cmp1239 = icmp ne i32 %576, 1
  br i1 %cmp1239, label %land.lhs.true.1241, label %if.end.1266

land.lhs.true.1241:                               ; preds = %if.end.1238
  %577 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %578 = bitcast %struct.rtx_def* %577 to i32*
  %bf.load1242 = load i32, i32* %578, align 8
  %bf.clear1243 = and i32 %bf.load1242, 65535
  %579 = load i32, i32* %code.addr, align 4
  %cmp1244 = icmp eq i32 %bf.clear1243, %579
  br i1 %cmp1244, label %land.lhs.true.1246, label %if.end.1266

land.lhs.true.1246:                               ; preds = %land.lhs.true.1241
  %580 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1247 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %580, i32 0, i32 1
  %arrayidx1248 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1247, i32 0, i64 1
  %rtx1249 = bitcast %union.rtunion_def* %arrayidx1248 to %struct.rtx_def**
  %581 = load %struct.rtx_def*, %struct.rtx_def** %rtx1249, align 8
  %582 = bitcast %struct.rtx_def* %581 to i32*
  %bf.load1250 = load i32, i32* %582, align 8
  %bf.clear1251 = and i32 %bf.load1250, 65535
  %cmp1252 = icmp eq i32 %bf.clear1251, 54
  br i1 %cmp1252, label %if.then.1254, label %if.end.1266

if.then.1254:                                     ; preds = %land.lhs.true.1246
  %583 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %584 = load i32, i32* %code.addr, align 4
  %585 = load i32, i32* %shift_mode, align 4
  %586 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1255 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %586, i32 0, i32 1
  %arrayidx1256 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1255, i32 0, i64 0
  %rtx1257 = bitcast %union.rtunion_def* %arrayidx1256 to %struct.rtx_def**
  %587 = load %struct.rtx_def*, %struct.rtx_def** %rtx1257, align 8
  %588 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1258 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %588, i32 0, i32 1
  %arrayidx1259 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1258, i32 0, i64 1
  %rtx1260 = bitcast %union.rtunion_def* %arrayidx1259 to %struct.rtx_def**
  %589 = load %struct.rtx_def*, %struct.rtx_def** %rtx1260, align 8
  %fld1261 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %589, i32 0, i32 1
  %arrayidx1262 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1261, i32 0, i64 0
  %rtwint1263 = bitcast %union.rtunion_def* %arrayidx1262 to i64*
  %590 = load i64, i64* %rtwint1263, align 8
  %conv1264 = trunc i64 %590 to i32
  %call1265 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* %583, i32 %584, i32 %585, %struct.rtx_def* %587, i32 %conv1264)
  store %struct.rtx_def* %call1265, %struct.rtx_def** %x.addr, align 8
  br label %if.end.1266

if.end.1266:                                      ; preds = %if.then.1254, %land.lhs.true.1246, %land.lhs.true.1241, %if.end.1238
  %591 = load i32, i32* %orig_code, align 4
  %cmp1267 = icmp eq i32 %591, 90
  br i1 %cmp1267, label %land.lhs.true.1269, label %if.end.1278

land.lhs.true.1269:                               ; preds = %if.end.1266
  %592 = load i32, i32* %result_mode.addr, align 4
  %593 = load i32, i32* %shift_mode, align 4
  %cmp1270 = icmp ne i32 %592, %593
  br i1 %cmp1270, label %if.then.1272, label %if.end.1278

if.then.1272:                                     ; preds = %land.lhs.true.1269
  %594 = load i32, i32* %shift_mode, align 4
  %595 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %596 = load i32, i32* %result_mode.addr, align 4
  %idxprom1273 = sext i32 %596 to i64
  %arrayidx1274 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom1273
  %597 = load i64, i64* %arrayidx1274, align 8
  %598 = load i32, i32* %orig_count.addr, align 4
  %sh_prom1275 = zext i32 %598 to i64
  %shr1276 = lshr i64 %597, %sh_prom1275
  %call1277 = call %struct.rtx_def* @simplify_and_const_int(%struct.rtx_def* null, i32 %594, %struct.rtx_def* %595, i64 %shr1276)
  store %struct.rtx_def* %call1277, %struct.rtx_def** %x.addr, align 8
  br label %if.end.1278

if.end.1278:                                      ; preds = %if.then.1272, %land.lhs.true.1269, %if.end.1266
  %599 = load i32, i32* %result_mode.addr, align 4
  %600 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call1279 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %599, %struct.rtx_def* %600)
  store %struct.rtx_def* %call1279, %struct.rtx_def** %x.addr, align 8
  %601 = load i32, i32* %complement_p, align 4
  %tobool1280 = icmp ne i32 %601, 0
  br i1 %tobool1280, label %if.then.1281, label %if.end.1283

if.then.1281:                                     ; preds = %if.end.1278
  %602 = load i32, i32* %result_mode.addr, align 4
  %603 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %604 = load i32, i32* %result_mode.addr, align 4
  %call1282 = call %struct.rtx_def* @simplify_gen_unary(i32 86, i32 %602, %struct.rtx_def* %603, i32 %604)
  store %struct.rtx_def* %call1282, %struct.rtx_def** %x.addr, align 8
  br label %if.end.1283

if.end.1283:                                      ; preds = %if.then.1281, %if.end.1278
  %605 = load i32, i32* %outer_op, align 4
  %cmp1284 = icmp ne i32 %605, 1
  br i1 %cmp1284, label %if.then.1286, label %if.end.1318

if.then.1286:                                     ; preds = %if.end.1283
  %606 = load i32, i32* %result_mode.addr, align 4
  %idxprom1287 = sext i32 %606 to i64
  %arrayidx1288 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1287
  %607 = load i16, i16* %arrayidx1288, align 2
  %conv1289 = zext i16 %607 to i32
  %cmp1290 = icmp slt i32 %conv1289, 64
  br i1 %cmp1290, label %if.then.1292, label %if.end.1294

if.then.1292:                                     ; preds = %if.then.1286
  %608 = load i64, i64* %outer_const, align 8
  %609 = load i32, i32* %result_mode.addr, align 4
  %call1293 = call i64 @trunc_int_for_mode(i64 %608, i32 %609)
  store i64 %call1293, i64* %outer_const, align 8
  br label %if.end.1294

if.end.1294:                                      ; preds = %if.then.1292, %if.then.1286
  %610 = load i32, i32* %outer_op, align 4
  %cmp1295 = icmp eq i32 %610, 83
  br i1 %cmp1295, label %if.then.1297, label %if.else.1299

if.then.1297:                                     ; preds = %if.end.1294
  %611 = load i32, i32* %result_mode.addr, align 4
  %612 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %613 = load i64, i64* %outer_const, align 8
  %call1298 = call %struct.rtx_def* @simplify_and_const_int(%struct.rtx_def* null, i32 %611, %struct.rtx_def* %612, i64 %613)
  store %struct.rtx_def* %call1298, %struct.rtx_def** %x.addr, align 8
  br label %if.end.1317

if.else.1299:                                     ; preds = %if.end.1294
  %614 = load i32, i32* %outer_op, align 4
  %cmp1300 = icmp eq i32 %614, 47
  br i1 %cmp1300, label %if.then.1302, label %if.else.1304

if.then.1302:                                     ; preds = %if.else.1299
  %615 = load i64, i64* %outer_const, align 8
  %call1303 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %615)
  store %struct.rtx_def* %call1303, %struct.rtx_def** %x.addr, align 8
  br label %if.end.1316

if.else.1304:                                     ; preds = %if.else.1299
  %616 = load i32, i32* %outer_op, align 4
  %idxprom1305 = sext i32 %616 to i64
  %arrayidx1306 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom1305
  %617 = load i8, i8* %arrayidx1306, align 1
  %conv1307 = sext i8 %617 to i32
  %cmp1308 = icmp eq i32 %conv1307, 49
  br i1 %cmp1308, label %if.then.1310, label %if.else.1312

if.then.1310:                                     ; preds = %if.else.1304
  %618 = load i32, i32* %outer_op, align 4
  %619 = load i32, i32* %result_mode.addr, align 4
  %620 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %621 = load i32, i32* %result_mode.addr, align 4
  %call1311 = call %struct.rtx_def* @simplify_gen_unary(i32 %618, i32 %619, %struct.rtx_def* %620, i32 %621)
  store %struct.rtx_def* %call1311, %struct.rtx_def** %x.addr, align 8
  br label %if.end.1315

if.else.1312:                                     ; preds = %if.else.1304
  %622 = load i32, i32* %outer_op, align 4
  %623 = load i32, i32* %result_mode.addr, align 4
  %624 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %625 = load i64, i64* %outer_const, align 8
  %call1313 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %625)
  %call1314 = call %struct.rtx_def* @gen_binary(i32 %622, i32 %623, %struct.rtx_def* %624, %struct.rtx_def* %call1313)
  store %struct.rtx_def* %call1314, %struct.rtx_def** %x.addr, align 8
  br label %if.end.1315

if.end.1315:                                      ; preds = %if.else.1312, %if.then.1310
  br label %if.end.1316

if.end.1316:                                      ; preds = %if.end.1315, %if.then.1302
  br label %if.end.1317

if.end.1317:                                      ; preds = %if.end.1316, %if.then.1297
  br label %if.end.1318

if.end.1318:                                      ; preds = %if.end.1317, %if.end.1283
  %626 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %626, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %if.end.1318, %cond.end.1229, %if.then.19, %if.end, %if.then.11
  %627 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %627
}

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @if_then_else_cond(%struct.rtx_def* %x, %struct.rtx_def** %ptrue, %struct.rtx_def** %pfalse) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %ptrue.addr = alloca %struct.rtx_def**, align 8
  %pfalse.addr = alloca %struct.rtx_def**, align 8
  %mode = alloca i32, align 4
  %code = alloca i32, align 4
  %cond0 = alloca %struct.rtx_def*, align 8
  %cond1 = alloca %struct.rtx_def*, align 8
  %true0 = alloca %struct.rtx_def*, align 8
  %true1 = alloca %struct.rtx_def*, align 8
  %false0 = alloca %struct.rtx_def*, align 8
  %false1 = alloca %struct.rtx_def*, align 8
  %nz = alloca i64, align 8
  %op0 = alloca %struct.rtx_def*, align 8
  %op1 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def** %ptrue, %struct.rtx_def*** %ptrue.addr, align 8
  store %struct.rtx_def** %pfalse, %struct.rtx_def*** %pfalse.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  store i32 %bf.clear, i32* %mode, align 4
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load1 = load i32, i32* %3, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  store i32 %bf.clear2, i32* %code, align 4
  %4 = load i32, i32* %code, align 4
  %cmp = icmp eq i32 %4, 102
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %5 = load i32, i32* %code, align 4
  %cmp3 = icmp eq i32 %5, 103
  br i1 %cmp3, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load4 = load i32, i32* %8, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 54
  br i1 %cmp6, label %land.lhs.true.7, label %if.else

land.lhs.true.7:                                  ; preds = %land.lhs.true
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i32 0, i64 1
  %rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rtx10, align 8
  %fld11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx12 to i64*
  %11 = load i64, i64* %rtwint, align 8
  %cmp13 = icmp eq i64 %11, 0
  br i1 %cmp13, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true.7
  %12 = load i32, i32* %code, align 4
  %cmp14 = icmp eq i32 %12, 102
  br i1 %cmp14, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %13 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %14 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %13, %cond.true ], [ %14, %cond.false ]
  %15 = load %struct.rtx_def**, %struct.rtx_def*** %ptrue.addr, align 8
  store %struct.rtx_def* %cond, %struct.rtx_def** %15, align 8
  %16 = load i32, i32* %code, align 4
  %cmp15 = icmp eq i32 %16, 102
  br i1 %cmp15, label %cond.true.16, label %cond.false.17

cond.true.16:                                     ; preds = %cond.end
  %17 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  br label %cond.end.18

cond.false.17:                                    ; preds = %cond.end
  %18 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8
  br label %cond.end.18

cond.end.18:                                      ; preds = %cond.false.17, %cond.true.16
  %cond19 = phi %struct.rtx_def* [ %17, %cond.true.16 ], [ %18, %cond.false.17 ]
  %19 = load %struct.rtx_def**, %struct.rtx_def*** %pfalse.addr, align 8
  store %struct.rtx_def* %cond19, %struct.rtx_def** %19, align 8
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i32 0, i64 0
  %rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rtx22, align 8
  store %struct.rtx_def* %21, %struct.rtx_def** %retval
  br label %return

if.else:                                          ; preds = %land.lhs.true.7, %land.lhs.true, %lor.lhs.false
  %22 = load i32, i32* %code, align 4
  %idxprom = sext i32 %22 to i64
  %arrayidx23 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %23 = load i8, i8* %arrayidx23, align 1
  %conv = sext i8 %23 to i32
  %cmp24 = icmp eq i32 %conv, 49
  br i1 %cmp24, label %land.lhs.true.26, label %if.else.47

land.lhs.true.26:                                 ; preds = %if.else
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i32 0, i64 0
  %rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rtx29, align 8
  %call = call %struct.rtx_def* @if_then_else_cond(%struct.rtx_def* %25, %struct.rtx_def** %true0, %struct.rtx_def** %false0)
  store %struct.rtx_def* %call, %struct.rtx_def** %cond0, align 8
  %cmp30 = icmp ne %struct.rtx_def* %call, null
  br i1 %cmp30, label %if.then.32, label %if.else.47

if.then.32:                                       ; preds = %land.lhs.true.26
  %26 = load i32, i32* %code, align 4
  %27 = load i32, i32* %mode, align 4
  %28 = load %struct.rtx_def*, %struct.rtx_def** %true0, align 8
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %arrayidx34 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld33, i32 0, i64 0
  %rtx35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rtx35, align 8
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load36 = load i32, i32* %31, align 8
  %bf.lshr37 = lshr i32 %bf.load36, 16
  %bf.clear38 = and i32 %bf.lshr37, 255
  %call39 = call %struct.rtx_def* @simplify_gen_unary(i32 %26, i32 %27, %struct.rtx_def* %28, i32 %bf.clear38)
  %32 = load %struct.rtx_def**, %struct.rtx_def*** %ptrue.addr, align 8
  store %struct.rtx_def* %call39, %struct.rtx_def** %32, align 8
  %33 = load i32, i32* %code, align 4
  %34 = load i32, i32* %mode, align 4
  %35 = load %struct.rtx_def*, %struct.rtx_def** %false0, align 8
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i32 0, i64 0
  %rtx42 = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rtx42, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load43 = load i32, i32* %38, align 8
  %bf.lshr44 = lshr i32 %bf.load43, 16
  %bf.clear45 = and i32 %bf.lshr44, 255
  %call46 = call %struct.rtx_def* @simplify_gen_unary(i32 %33, i32 %34, %struct.rtx_def* %35, i32 %bf.clear45)
  %39 = load %struct.rtx_def**, %struct.rtx_def*** %pfalse.addr, align 8
  store %struct.rtx_def* %call46, %struct.rtx_def** %39, align 8
  %40 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  store %struct.rtx_def* %40, %struct.rtx_def** %retval
  br label %return

if.else.47:                                       ; preds = %land.lhs.true.26, %if.else
  %41 = load i32, i32* %code, align 4
  %cmp48 = icmp eq i32 %41, 74
  br i1 %cmp48, label %if.then.50, label %if.else.51

if.then.50:                                       ; preds = %if.else.47
  br label %if.end.561

if.else.51:                                       ; preds = %if.else.47
  %42 = load i32, i32* %code, align 4
  %idxprom52 = sext i32 %42 to i64
  %arrayidx53 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom52
  %43 = load i8, i8* %arrayidx53, align 1
  %conv54 = sext i8 %43 to i32
  %cmp55 = icmp eq i32 %conv54, 99
  br i1 %cmp55, label %if.then.69, label %lor.lhs.false.57

lor.lhs.false.57:                                 ; preds = %if.else.51
  %44 = load i32, i32* %code, align 4
  %idxprom58 = sext i32 %44 to i64
  %arrayidx59 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom58
  %45 = load i8, i8* %arrayidx59, align 1
  %conv60 = sext i8 %45 to i32
  %cmp61 = icmp eq i32 %conv60, 50
  br i1 %cmp61, label %if.then.69, label %lor.lhs.false.63

lor.lhs.false.63:                                 ; preds = %lor.lhs.false.57
  %46 = load i32, i32* %code, align 4
  %idxprom64 = sext i32 %46 to i64
  %arrayidx65 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom64
  %47 = load i8, i8* %arrayidx65, align 1
  %conv66 = sext i8 %47 to i32
  %cmp67 = icmp eq i32 %conv66, 60
  br i1 %cmp67, label %if.then.69, label %if.else.351

if.then.69:                                       ; preds = %lor.lhs.false.63, %lor.lhs.false.57, %if.else.51
  %48 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i32 0, i64 0
  %rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rtx72, align 8
  %call73 = call %struct.rtx_def* @if_then_else_cond(%struct.rtx_def* %49, %struct.rtx_def** %true0, %struct.rtx_def** %false0)
  store %struct.rtx_def* %call73, %struct.rtx_def** %cond0, align 8
  %50 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1
  %arrayidx75 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld74, i32 0, i64 1
  %rtx76 = bitcast %union.rtunion_def* %arrayidx75 to %struct.rtx_def**
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rtx76, align 8
  %call77 = call %struct.rtx_def* @if_then_else_cond(%struct.rtx_def* %51, %struct.rtx_def** %true1, %struct.rtx_def** %false1)
  store %struct.rtx_def* %call77, %struct.rtx_def** %cond1, align 8
  %52 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %cmp78 = icmp ne %struct.rtx_def* %52, null
  br i1 %cmp78, label %land.lhs.true.83, label %lor.lhs.false.80

lor.lhs.false.80:                                 ; preds = %if.then.69
  %53 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8
  %cmp81 = icmp ne %struct.rtx_def* %53, null
  br i1 %cmp81, label %land.lhs.true.83, label %if.end.109

land.lhs.true.83:                                 ; preds = %lor.lhs.false.80, %if.then.69
  %54 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %cmp84 = icmp ne %struct.rtx_def* %54, null
  br i1 %cmp84, label %land.lhs.true.86, label %if.then.91

land.lhs.true.86:                                 ; preds = %land.lhs.true.83
  %55 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8
  %cmp87 = icmp ne %struct.rtx_def* %55, null
  br i1 %cmp87, label %land.lhs.true.89, label %if.then.91

land.lhs.true.89:                                 ; preds = %land.lhs.true.86
  %56 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %57 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8
  %call90 = call i32 @rtx_equal_p(%struct.rtx_def* %56, %struct.rtx_def* %57)
  %tobool = icmp ne i32 %call90, 0
  br i1 %tobool, label %if.then.91, label %if.end.109

if.then.91:                                       ; preds = %land.lhs.true.89, %land.lhs.true.86, %land.lhs.true.83
  %58 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %cmp92 = icmp eq %struct.rtx_def* %58, null
  br i1 %cmp92, label %if.then.94, label %if.else.96

if.then.94:                                       ; preds = %if.then.91
  %59 = load %struct.rtx_def*, %struct.rtx_def** %true0, align 8
  %call95 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %59)
  store %struct.rtx_def* %call95, %struct.rtx_def** %true0, align 8
  br label %if.end.101

if.else.96:                                       ; preds = %if.then.91
  %60 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8
  %cmp97 = icmp eq %struct.rtx_def* %60, null
  br i1 %cmp97, label %if.then.99, label %if.end

if.then.99:                                       ; preds = %if.else.96
  %61 = load %struct.rtx_def*, %struct.rtx_def** %true1, align 8
  %call100 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %61)
  store %struct.rtx_def* %call100, %struct.rtx_def** %true1, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.99, %if.else.96
  br label %if.end.101

if.end.101:                                       ; preds = %if.end, %if.then.94
  %62 = load i32, i32* %code, align 4
  %63 = load i32, i32* %mode, align 4
  %64 = load %struct.rtx_def*, %struct.rtx_def** %true0, align 8
  %65 = load %struct.rtx_def*, %struct.rtx_def** %true1, align 8
  %call102 = call %struct.rtx_def* @gen_binary(i32 %62, i32 %63, %struct.rtx_def* %64, %struct.rtx_def* %65)
  %66 = load %struct.rtx_def**, %struct.rtx_def*** %ptrue.addr, align 8
  store %struct.rtx_def* %call102, %struct.rtx_def** %66, align 8
  %67 = load i32, i32* %code, align 4
  %68 = load i32, i32* %mode, align 4
  %69 = load %struct.rtx_def*, %struct.rtx_def** %false0, align 8
  %70 = load %struct.rtx_def*, %struct.rtx_def** %false1, align 8
  %call103 = call %struct.rtx_def* @gen_binary(i32 %67, i32 %68, %struct.rtx_def* %69, %struct.rtx_def* %70)
  %71 = load %struct.rtx_def**, %struct.rtx_def*** %pfalse.addr, align 8
  store %struct.rtx_def* %call103, %struct.rtx_def** %71, align 8
  %72 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %tobool104 = icmp ne %struct.rtx_def* %72, null
  br i1 %tobool104, label %cond.true.105, label %cond.false.106

cond.true.105:                                    ; preds = %if.end.101
  %73 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  br label %cond.end.107

cond.false.106:                                   ; preds = %if.end.101
  %74 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8
  br label %cond.end.107

cond.end.107:                                     ; preds = %cond.false.106, %cond.true.105
  %cond108 = phi %struct.rtx_def* [ %73, %cond.true.105 ], [ %74, %cond.false.106 ]
  store %struct.rtx_def* %cond108, %struct.rtx_def** %retval
  br label %return

if.end.109:                                       ; preds = %land.lhs.true.89, %lor.lhs.false.80
  %75 = load i32, i32* %code, align 4
  %cmp110 = icmp eq i32 %75, 75
  br i1 %cmp110, label %land.lhs.true.124, label %lor.lhs.false.112

lor.lhs.false.112:                                ; preds = %if.end.109
  %76 = load i32, i32* %code, align 4
  %cmp113 = icmp eq i32 %76, 84
  br i1 %cmp113, label %land.lhs.true.124, label %lor.lhs.false.115

lor.lhs.false.115:                                ; preds = %lor.lhs.false.112
  %77 = load i32, i32* %code, align 4
  %cmp116 = icmp eq i32 %77, 85
  br i1 %cmp116, label %land.lhs.true.124, label %lor.lhs.false.118

lor.lhs.false.118:                                ; preds = %lor.lhs.false.115
  %78 = load i32, i32* %code, align 4
  %cmp119 = icmp eq i32 %78, 76
  br i1 %cmp119, label %land.lhs.true.124, label %lor.lhs.false.121

lor.lhs.false.121:                                ; preds = %lor.lhs.false.118
  %79 = load i32, i32* %code, align 4
  %cmp122 = icmp eq i32 %79, 95
  br i1 %cmp122, label %land.lhs.true.124, label %if.end.243

land.lhs.true.124:                                ; preds = %lor.lhs.false.121, %lor.lhs.false.118, %lor.lhs.false.115, %lor.lhs.false.112, %if.end.109
  %80 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i32 0, i64 0
  %rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rtx127, align 8
  %82 = bitcast %struct.rtx_def* %81 to i32*
  %bf.load128 = load i32, i32* %82, align 8
  %bf.clear129 = and i32 %bf.load128, 65535
  %cmp130 = icmp eq i32 %bf.clear129, 78
  br i1 %cmp130, label %land.lhs.true.132, label %if.end.243

land.lhs.true.132:                                ; preds = %land.lhs.true.124
  %83 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld133 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx134 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld133, i32 0, i64 1
  %rtx135 = bitcast %union.rtunion_def* %arrayidx134 to %struct.rtx_def**
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rtx135, align 8
  %85 = bitcast %struct.rtx_def* %84 to i32*
  %bf.load136 = load i32, i32* %85, align 8
  %bf.clear137 = and i32 %bf.load136, 65535
  %cmp138 = icmp eq i32 %bf.clear137, 78
  br i1 %cmp138, label %if.then.140, label %if.end.243

if.then.140:                                      ; preds = %land.lhs.true.132
  %86 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld141 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1
  %arrayidx142 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld141, i32 0, i64 0
  %rtx143 = bitcast %union.rtunion_def* %arrayidx142 to %struct.rtx_def**
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rtx143, align 8
  %fld144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1
  %arrayidx145 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld144, i32 0, i64 1
  %rtx146 = bitcast %union.rtunion_def* %arrayidx145 to %struct.rtx_def**
  %88 = load %struct.rtx_def*, %struct.rtx_def** %rtx146, align 8
  store %struct.rtx_def* %88, %struct.rtx_def** %op0, align 8
  %89 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld147 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1
  %arrayidx148 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld147, i32 0, i64 1
  %rtx149 = bitcast %union.rtunion_def* %arrayidx148 to %struct.rtx_def**
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rtx149, align 8
  %fld150 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1
  %arrayidx151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld150, i32 0, i64 1
  %rtx152 = bitcast %union.rtunion_def* %arrayidx151 to %struct.rtx_def**
  %91 = load %struct.rtx_def*, %struct.rtx_def** %rtx152, align 8
  store %struct.rtx_def* %91, %struct.rtx_def** %op1, align 8
  %92 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld153 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1
  %arrayidx154 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld153, i32 0, i64 0
  %rtx155 = bitcast %union.rtunion_def* %arrayidx154 to %struct.rtx_def**
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rtx155, align 8
  %fld156 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %93, i32 0, i32 1
  %arrayidx157 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld156, i32 0, i64 0
  %rtx158 = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtx_def**
  %94 = load %struct.rtx_def*, %struct.rtx_def** %rtx158, align 8
  store %struct.rtx_def* %94, %struct.rtx_def** %cond0, align 8
  %95 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1
  %arrayidx160 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld159, i32 0, i64 1
  %rtx161 = bitcast %union.rtunion_def* %arrayidx160 to %struct.rtx_def**
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rtx161, align 8
  %fld162 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1
  %arrayidx163 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld162, i32 0, i64 0
  %rtx164 = bitcast %union.rtunion_def* %arrayidx163 to %struct.rtx_def**
  %97 = load %struct.rtx_def*, %struct.rtx_def** %rtx164, align 8
  store %struct.rtx_def* %97, %struct.rtx_def** %cond1, align 8
  %98 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %99 = bitcast %struct.rtx_def* %98 to i32*
  %bf.load165 = load i32, i32* %99, align 8
  %bf.clear166 = and i32 %bf.load165, 65535
  %idxprom167 = sext i32 %bf.clear166 to i64
  %arrayidx168 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom167
  %100 = load i8, i8* %arrayidx168, align 1
  %conv169 = sext i8 %100 to i32
  %cmp170 = icmp eq i32 %conv169, 60
  br i1 %cmp170, label %land.lhs.true.172, label %if.end.242

land.lhs.true.172:                                ; preds = %if.then.140
  %101 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8
  %102 = bitcast %struct.rtx_def* %101 to i32*
  %bf.load173 = load i32, i32* %102, align 8
  %bf.clear174 = and i32 %bf.load173, 65535
  %idxprom175 = sext i32 %bf.clear174 to i64
  %arrayidx176 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom175
  %103 = load i8, i8* %arrayidx176, align 1
  %conv177 = sext i8 %103 to i32
  %cmp178 = icmp eq i32 %conv177, 60
  br i1 %cmp178, label %land.lhs.true.180, label %if.end.242

land.lhs.true.180:                                ; preds = %land.lhs.true.172
  %104 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %105 = bitcast %struct.rtx_def* %104 to i32*
  %bf.load181 = load i32, i32* %105, align 8
  %bf.clear182 = and i32 %bf.load181, 65535
  %106 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8
  %call183 = call i32 @combine_reversed_comparison_code(%struct.rtx_def* %106)
  %cmp184 = icmp eq i32 %bf.clear182, %call183
  br i1 %cmp184, label %land.lhs.true.186, label %lor.lhs.false.204

land.lhs.true.186:                                ; preds = %land.lhs.true.180
  %107 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %fld187 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1
  %arrayidx188 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld187, i32 0, i64 0
  %rtx189 = bitcast %union.rtunion_def* %arrayidx188 to %struct.rtx_def**
  %108 = load %struct.rtx_def*, %struct.rtx_def** %rtx189, align 8
  %109 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8
  %fld190 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1
  %arrayidx191 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld190, i32 0, i64 0
  %rtx192 = bitcast %union.rtunion_def* %arrayidx191 to %struct.rtx_def**
  %110 = load %struct.rtx_def*, %struct.rtx_def** %rtx192, align 8
  %call193 = call i32 @rtx_equal_p(%struct.rtx_def* %108, %struct.rtx_def* %110)
  %tobool194 = icmp ne i32 %call193, 0
  br i1 %tobool194, label %land.lhs.true.195, label %lor.lhs.false.204

land.lhs.true.195:                                ; preds = %land.lhs.true.186
  %111 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %fld196 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i32 0, i32 1
  %arrayidx197 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld196, i32 0, i64 1
  %rtx198 = bitcast %union.rtunion_def* %arrayidx197 to %struct.rtx_def**
  %112 = load %struct.rtx_def*, %struct.rtx_def** %rtx198, align 8
  %113 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8
  %fld199 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %113, i32 0, i32 1
  %arrayidx200 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld199, i32 0, i64 1
  %rtx201 = bitcast %union.rtunion_def* %arrayidx200 to %struct.rtx_def**
  %114 = load %struct.rtx_def*, %struct.rtx_def** %rtx201, align 8
  %call202 = call i32 @rtx_equal_p(%struct.rtx_def* %112, %struct.rtx_def* %114)
  %tobool203 = icmp ne i32 %call202, 0
  br i1 %tobool203, label %land.lhs.true.229, label %lor.lhs.false.204

lor.lhs.false.204:                                ; preds = %land.lhs.true.195, %land.lhs.true.186, %land.lhs.true.180
  %115 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %116 = bitcast %struct.rtx_def* %115 to i32*
  %bf.load205 = load i32, i32* %116, align 8
  %bf.clear206 = and i32 %bf.load205, 65535
  %call207 = call i32 @swap_condition(i32 %bf.clear206)
  %117 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8
  %call208 = call i32 @combine_reversed_comparison_code(%struct.rtx_def* %117)
  %cmp209 = icmp eq i32 %call207, %call208
  br i1 %cmp209, label %land.lhs.true.211, label %if.end.242

land.lhs.true.211:                                ; preds = %lor.lhs.false.204
  %118 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %fld212 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1
  %arrayidx213 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld212, i32 0, i64 0
  %rtx214 = bitcast %union.rtunion_def* %arrayidx213 to %struct.rtx_def**
  %119 = load %struct.rtx_def*, %struct.rtx_def** %rtx214, align 8
  %120 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8
  %fld215 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1
  %arrayidx216 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld215, i32 0, i64 1
  %rtx217 = bitcast %union.rtunion_def* %arrayidx216 to %struct.rtx_def**
  %121 = load %struct.rtx_def*, %struct.rtx_def** %rtx217, align 8
  %call218 = call i32 @rtx_equal_p(%struct.rtx_def* %119, %struct.rtx_def* %121)
  %tobool219 = icmp ne i32 %call218, 0
  br i1 %tobool219, label %land.lhs.true.220, label %if.end.242

land.lhs.true.220:                                ; preds = %land.lhs.true.211
  %122 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %fld221 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i32 0, i32 1
  %arrayidx222 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld221, i32 0, i64 1
  %rtx223 = bitcast %union.rtunion_def* %arrayidx222 to %struct.rtx_def**
  %123 = load %struct.rtx_def*, %struct.rtx_def** %rtx223, align 8
  %124 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8
  %fld224 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1
  %arrayidx225 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld224, i32 0, i64 0
  %rtx226 = bitcast %union.rtunion_def* %arrayidx225 to %struct.rtx_def**
  %125 = load %struct.rtx_def*, %struct.rtx_def** %rtx226, align 8
  %call227 = call i32 @rtx_equal_p(%struct.rtx_def* %123, %struct.rtx_def* %125)
  %tobool228 = icmp ne i32 %call227, 0
  br i1 %tobool228, label %land.lhs.true.229, label %if.end.242

land.lhs.true.229:                                ; preds = %land.lhs.true.220, %land.lhs.true.195
  %126 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call230 = call i32 @side_effects_p(%struct.rtx_def* %126)
  %tobool231 = icmp ne i32 %call230, 0
  br i1 %tobool231, label %if.end.242, label %if.then.232

if.then.232:                                      ; preds = %land.lhs.true.229
  %127 = load i32, i32* %mode, align 4
  %128 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %129 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8
  %call233 = call %struct.rtx_def* @gen_binary(i32 78, i32 %127, %struct.rtx_def* %128, %struct.rtx_def* %129)
  %130 = load %struct.rtx_def**, %struct.rtx_def*** %ptrue.addr, align 8
  store %struct.rtx_def* %call233, %struct.rtx_def** %130, align 8
  %131 = load i32, i32* %mode, align 4
  %132 = load i32, i32* %code, align 4
  %cmp234 = icmp eq i32 %132, 76
  br i1 %cmp234, label %cond.true.236, label %cond.false.238

cond.true.236:                                    ; preds = %if.then.232
  %133 = load i32, i32* %mode, align 4
  %134 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %135 = load i32, i32* %mode, align 4
  %call237 = call %struct.rtx_def* @simplify_gen_unary(i32 77, i32 %133, %struct.rtx_def* %134, i32 %135)
  br label %cond.end.239

cond.false.238:                                   ; preds = %if.then.232
  %136 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  br label %cond.end.239

cond.end.239:                                     ; preds = %cond.false.238, %cond.true.236
  %cond240 = phi %struct.rtx_def* [ %call237, %cond.true.236 ], [ %136, %cond.false.238 ]
  %137 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8
  %call241 = call %struct.rtx_def* @gen_binary(i32 78, i32 %131, %struct.rtx_def* %cond240, %struct.rtx_def* %137)
  %138 = load %struct.rtx_def**, %struct.rtx_def*** %pfalse.addr, align 8
  store %struct.rtx_def* %call241, %struct.rtx_def** %138, align 8
  %139 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  store %struct.rtx_def* %139, %struct.rtx_def** %retval
  br label %return

if.end.242:                                       ; preds = %land.lhs.true.229, %land.lhs.true.220, %land.lhs.true.211, %lor.lhs.false.204, %land.lhs.true.172, %if.then.140
  br label %if.end.243

if.end.243:                                       ; preds = %if.end.242, %land.lhs.true.132, %land.lhs.true.124, %lor.lhs.false.121
  %140 = load i32, i32* %code, align 4
  %cmp244 = icmp eq i32 %140, 78
  br i1 %cmp244, label %land.lhs.true.252, label %lor.lhs.false.246

lor.lhs.false.246:                                ; preds = %if.end.243
  %141 = load i32, i32* %code, align 4
  %cmp247 = icmp eq i32 %141, 83
  br i1 %cmp247, label %land.lhs.true.252, label %lor.lhs.false.249

lor.lhs.false.249:                                ; preds = %lor.lhs.false.246
  %142 = load i32, i32* %code, align 4
  %cmp250 = icmp eq i32 %142, 94
  br i1 %cmp250, label %land.lhs.true.252, label %if.end.350

land.lhs.true.252:                                ; preds = %lor.lhs.false.249, %lor.lhs.false.246, %if.end.243
  %143 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld253 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1
  %arrayidx254 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld253, i32 0, i64 0
  %rtx255 = bitcast %union.rtunion_def* %arrayidx254 to %struct.rtx_def**
  %144 = load %struct.rtx_def*, %struct.rtx_def** %rtx255, align 8
  %145 = bitcast %struct.rtx_def* %144 to i32*
  %bf.load256 = load i32, i32* %145, align 8
  %bf.clear257 = and i32 %bf.load256, 65535
  %cmp258 = icmp eq i32 %bf.clear257, 78
  br i1 %cmp258, label %land.lhs.true.260, label %if.end.350

land.lhs.true.260:                                ; preds = %land.lhs.true.252
  %146 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld261 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %146, i32 0, i32 1
  %arrayidx262 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld261, i32 0, i64 1
  %rtx263 = bitcast %union.rtunion_def* %arrayidx262 to %struct.rtx_def**
  %147 = load %struct.rtx_def*, %struct.rtx_def** %rtx263, align 8
  %148 = bitcast %struct.rtx_def* %147 to i32*
  %bf.load264 = load i32, i32* %148, align 8
  %bf.clear265 = and i32 %bf.load264, 65535
  %cmp266 = icmp eq i32 %bf.clear265, 78
  br i1 %cmp266, label %if.then.268, label %if.end.350

if.then.268:                                      ; preds = %land.lhs.true.260
  %149 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld269 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %149, i32 0, i32 1
  %arrayidx270 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld269, i32 0, i64 0
  %rtx271 = bitcast %union.rtunion_def* %arrayidx270 to %struct.rtx_def**
  %150 = load %struct.rtx_def*, %struct.rtx_def** %rtx271, align 8
  %fld272 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %150, i32 0, i32 1
  %arrayidx273 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld272, i32 0, i64 0
  %rtx274 = bitcast %union.rtunion_def* %arrayidx273 to %struct.rtx_def**
  %151 = load %struct.rtx_def*, %struct.rtx_def** %rtx274, align 8
  store %struct.rtx_def* %151, %struct.rtx_def** %cond0, align 8
  %152 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld275 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %152, i32 0, i32 1
  %arrayidx276 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld275, i32 0, i64 1
  %rtx277 = bitcast %union.rtunion_def* %arrayidx276 to %struct.rtx_def**
  %153 = load %struct.rtx_def*, %struct.rtx_def** %rtx277, align 8
  %fld278 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1
  %arrayidx279 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld278, i32 0, i64 0
  %rtx280 = bitcast %union.rtunion_def* %arrayidx279 to %struct.rtx_def**
  %154 = load %struct.rtx_def*, %struct.rtx_def** %rtx280, align 8
  store %struct.rtx_def* %154, %struct.rtx_def** %cond1, align 8
  %155 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %156 = bitcast %struct.rtx_def* %155 to i32*
  %bf.load281 = load i32, i32* %156, align 8
  %bf.clear282 = and i32 %bf.load281, 65535
  %idxprom283 = sext i32 %bf.clear282 to i64
  %arrayidx284 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom283
  %157 = load i8, i8* %arrayidx284, align 1
  %conv285 = sext i8 %157 to i32
  %cmp286 = icmp eq i32 %conv285, 60
  br i1 %cmp286, label %land.lhs.true.288, label %if.end.349

land.lhs.true.288:                                ; preds = %if.then.268
  %158 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8
  %159 = bitcast %struct.rtx_def* %158 to i32*
  %bf.load289 = load i32, i32* %159, align 8
  %bf.clear290 = and i32 %bf.load289, 65535
  %idxprom291 = sext i32 %bf.clear290 to i64
  %arrayidx292 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom291
  %160 = load i8, i8* %arrayidx292, align 1
  %conv293 = sext i8 %160 to i32
  %cmp294 = icmp eq i32 %conv293, 60
  br i1 %cmp294, label %land.lhs.true.296, label %if.end.349

land.lhs.true.296:                                ; preds = %land.lhs.true.288
  %161 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %162 = bitcast %struct.rtx_def* %161 to i32*
  %bf.load297 = load i32, i32* %162, align 8
  %bf.clear298 = and i32 %bf.load297, 65535
  %163 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8
  %call299 = call i32 @combine_reversed_comparison_code(%struct.rtx_def* %163)
  %cmp300 = icmp eq i32 %bf.clear298, %call299
  br i1 %cmp300, label %land.lhs.true.302, label %lor.lhs.false.320

land.lhs.true.302:                                ; preds = %land.lhs.true.296
  %164 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %fld303 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %164, i32 0, i32 1
  %arrayidx304 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld303, i32 0, i64 0
  %rtx305 = bitcast %union.rtunion_def* %arrayidx304 to %struct.rtx_def**
  %165 = load %struct.rtx_def*, %struct.rtx_def** %rtx305, align 8
  %166 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8
  %fld306 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %166, i32 0, i32 1
  %arrayidx307 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld306, i32 0, i64 0
  %rtx308 = bitcast %union.rtunion_def* %arrayidx307 to %struct.rtx_def**
  %167 = load %struct.rtx_def*, %struct.rtx_def** %rtx308, align 8
  %call309 = call i32 @rtx_equal_p(%struct.rtx_def* %165, %struct.rtx_def* %167)
  %tobool310 = icmp ne i32 %call309, 0
  br i1 %tobool310, label %land.lhs.true.311, label %lor.lhs.false.320

land.lhs.true.311:                                ; preds = %land.lhs.true.302
  %168 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %fld312 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %168, i32 0, i32 1
  %arrayidx313 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld312, i32 0, i64 1
  %rtx314 = bitcast %union.rtunion_def* %arrayidx313 to %struct.rtx_def**
  %169 = load %struct.rtx_def*, %struct.rtx_def** %rtx314, align 8
  %170 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8
  %fld315 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %170, i32 0, i32 1
  %arrayidx316 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld315, i32 0, i64 1
  %rtx317 = bitcast %union.rtunion_def* %arrayidx316 to %struct.rtx_def**
  %171 = load %struct.rtx_def*, %struct.rtx_def** %rtx317, align 8
  %call318 = call i32 @rtx_equal_p(%struct.rtx_def* %169, %struct.rtx_def* %171)
  %tobool319 = icmp ne i32 %call318, 0
  br i1 %tobool319, label %land.lhs.true.345, label %lor.lhs.false.320

lor.lhs.false.320:                                ; preds = %land.lhs.true.311, %land.lhs.true.302, %land.lhs.true.296
  %172 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %173 = bitcast %struct.rtx_def* %172 to i32*
  %bf.load321 = load i32, i32* %173, align 8
  %bf.clear322 = and i32 %bf.load321, 65535
  %call323 = call i32 @swap_condition(i32 %bf.clear322)
  %174 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8
  %call324 = call i32 @combine_reversed_comparison_code(%struct.rtx_def* %174)
  %cmp325 = icmp eq i32 %call323, %call324
  br i1 %cmp325, label %land.lhs.true.327, label %if.end.349

land.lhs.true.327:                                ; preds = %lor.lhs.false.320
  %175 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %fld328 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %175, i32 0, i32 1
  %arrayidx329 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld328, i32 0, i64 0
  %rtx330 = bitcast %union.rtunion_def* %arrayidx329 to %struct.rtx_def**
  %176 = load %struct.rtx_def*, %struct.rtx_def** %rtx330, align 8
  %177 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8
  %fld331 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %177, i32 0, i32 1
  %arrayidx332 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld331, i32 0, i64 1
  %rtx333 = bitcast %union.rtunion_def* %arrayidx332 to %struct.rtx_def**
  %178 = load %struct.rtx_def*, %struct.rtx_def** %rtx333, align 8
  %call334 = call i32 @rtx_equal_p(%struct.rtx_def* %176, %struct.rtx_def* %178)
  %tobool335 = icmp ne i32 %call334, 0
  br i1 %tobool335, label %land.lhs.true.336, label %if.end.349

land.lhs.true.336:                                ; preds = %land.lhs.true.327
  %179 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %fld337 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %179, i32 0, i32 1
  %arrayidx338 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld337, i32 0, i64 1
  %rtx339 = bitcast %union.rtunion_def* %arrayidx338 to %struct.rtx_def**
  %180 = load %struct.rtx_def*, %struct.rtx_def** %rtx339, align 8
  %181 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8
  %fld340 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %181, i32 0, i32 1
  %arrayidx341 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld340, i32 0, i64 0
  %rtx342 = bitcast %union.rtunion_def* %arrayidx341 to %struct.rtx_def**
  %182 = load %struct.rtx_def*, %struct.rtx_def** %rtx342, align 8
  %call343 = call i32 @rtx_equal_p(%struct.rtx_def* %180, %struct.rtx_def* %182)
  %tobool344 = icmp ne i32 %call343, 0
  br i1 %tobool344, label %land.lhs.true.345, label %if.end.349

land.lhs.true.345:                                ; preds = %land.lhs.true.336, %land.lhs.true.311
  %183 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call346 = call i32 @side_effects_p(%struct.rtx_def* %183)
  %tobool347 = icmp ne i32 %call346, 0
  br i1 %tobool347, label %if.end.349, label %if.then.348

if.then.348:                                      ; preds = %land.lhs.true.345
  %184 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %185 = load %struct.rtx_def**, %struct.rtx_def*** %pfalse.addr, align 8
  store %struct.rtx_def* %184, %struct.rtx_def** %185, align 8
  %186 = load %struct.rtx_def**, %struct.rtx_def*** %ptrue.addr, align 8
  store %struct.rtx_def* %184, %struct.rtx_def** %186, align 8
  %187 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  store %struct.rtx_def* %187, %struct.rtx_def** %retval
  br label %return

if.end.349:                                       ; preds = %land.lhs.true.345, %land.lhs.true.336, %land.lhs.true.327, %lor.lhs.false.320, %land.lhs.true.288, %if.then.268
  br label %if.end.350

if.end.350:                                       ; preds = %if.end.349, %land.lhs.true.260, %land.lhs.true.252, %lor.lhs.false.249
  br label %if.end.560

if.else.351:                                      ; preds = %lor.lhs.false.63
  %188 = load i32, i32* %code, align 4
  %cmp352 = icmp eq i32 %188, 72
  br i1 %cmp352, label %if.then.354, label %if.else.400

if.then.354:                                      ; preds = %if.else.351
  %189 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld355 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %189, i32 0, i32 1
  %arrayidx356 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld355, i32 0, i64 0
  %rtx357 = bitcast %union.rtunion_def* %arrayidx356 to %struct.rtx_def**
  %190 = load %struct.rtx_def*, %struct.rtx_def** %rtx357, align 8
  store %struct.rtx_def* %190, %struct.rtx_def** %cond0, align 8
  %191 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld358 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %191, i32 0, i32 1
  %arrayidx359 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld358, i32 0, i64 1
  %rtx360 = bitcast %union.rtunion_def* %arrayidx359 to %struct.rtx_def**
  %192 = load %struct.rtx_def*, %struct.rtx_def** %rtx360, align 8
  %193 = load %struct.rtx_def**, %struct.rtx_def*** %ptrue.addr, align 8
  store %struct.rtx_def* %192, %struct.rtx_def** %193, align 8
  %194 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld361 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %194, i32 0, i32 1
  %arrayidx362 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld361, i32 0, i64 2
  %rtx363 = bitcast %union.rtunion_def* %arrayidx362 to %struct.rtx_def**
  %195 = load %struct.rtx_def*, %struct.rtx_def** %rtx363, align 8
  %196 = load %struct.rtx_def**, %struct.rtx_def*** %pfalse.addr, align 8
  store %struct.rtx_def* %195, %struct.rtx_def** %196, align 8
  %197 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %198 = bitcast %struct.rtx_def* %197 to i32*
  %bf.load364 = load i32, i32* %198, align 8
  %bf.clear365 = and i32 %bf.load364, 65535
  %cmp366 = icmp eq i32 %bf.clear365, 102
  br i1 %cmp366, label %land.lhs.true.368, label %if.else.378

land.lhs.true.368:                                ; preds = %if.then.354
  %199 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %fld369 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %199, i32 0, i32 1
  %arrayidx370 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld369, i32 0, i64 1
  %rtx371 = bitcast %union.rtunion_def* %arrayidx370 to %struct.rtx_def**
  %200 = load %struct.rtx_def*, %struct.rtx_def** %rtx371, align 8
  %201 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp372 = icmp eq %struct.rtx_def* %200, %201
  br i1 %cmp372, label %if.then.374, label %if.else.378

if.then.374:                                      ; preds = %land.lhs.true.368
  %202 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %fld375 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %202, i32 0, i32 1
  %arrayidx376 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld375, i32 0, i64 0
  %rtx377 = bitcast %union.rtunion_def* %arrayidx376 to %struct.rtx_def**
  %203 = load %struct.rtx_def*, %struct.rtx_def** %rtx377, align 8
  store %struct.rtx_def* %203, %struct.rtx_def** %retval
  br label %return

if.else.378:                                      ; preds = %land.lhs.true.368, %if.then.354
  %204 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %205 = bitcast %struct.rtx_def* %204 to i32*
  %bf.load379 = load i32, i32* %205, align 8
  %bf.clear380 = and i32 %bf.load379, 65535
  %cmp381 = icmp eq i32 %bf.clear380, 103
  br i1 %cmp381, label %land.lhs.true.383, label %if.else.399

land.lhs.true.383:                                ; preds = %if.else.378
  %206 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %fld384 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %206, i32 0, i32 1
  %arrayidx385 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld384, i32 0, i64 1
  %rtx386 = bitcast %union.rtunion_def* %arrayidx385 to %struct.rtx_def**
  %207 = load %struct.rtx_def*, %struct.rtx_def** %rtx386, align 8
  %208 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp387 = icmp eq %struct.rtx_def* %207, %208
  br i1 %cmp387, label %if.then.389, label %if.else.399

if.then.389:                                      ; preds = %land.lhs.true.383
  %209 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld390 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %209, i32 0, i32 1
  %arrayidx391 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld390, i32 0, i64 2
  %rtx392 = bitcast %union.rtunion_def* %arrayidx391 to %struct.rtx_def**
  %210 = load %struct.rtx_def*, %struct.rtx_def** %rtx392, align 8
  %211 = load %struct.rtx_def**, %struct.rtx_def*** %ptrue.addr, align 8
  store %struct.rtx_def* %210, %struct.rtx_def** %211, align 8
  %212 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld393 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %212, i32 0, i32 1
  %arrayidx394 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld393, i32 0, i64 1
  %rtx395 = bitcast %union.rtunion_def* %arrayidx394 to %struct.rtx_def**
  %213 = load %struct.rtx_def*, %struct.rtx_def** %rtx395, align 8
  %214 = load %struct.rtx_def**, %struct.rtx_def*** %pfalse.addr, align 8
  store %struct.rtx_def* %213, %struct.rtx_def** %214, align 8
  %215 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %fld396 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %215, i32 0, i32 1
  %arrayidx397 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld396, i32 0, i64 0
  %rtx398 = bitcast %union.rtunion_def* %arrayidx397 to %struct.rtx_def**
  %216 = load %struct.rtx_def*, %struct.rtx_def** %rtx398, align 8
  store %struct.rtx_def* %216, %struct.rtx_def** %retval
  br label %return

if.else.399:                                      ; preds = %land.lhs.true.383, %if.else.378
  %217 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  store %struct.rtx_def* %217, %struct.rtx_def** %retval
  br label %return

if.else.400:                                      ; preds = %if.else.351
  %218 = load i32, i32* %code, align 4
  %cmp401 = icmp eq i32 %218, 63
  br i1 %cmp401, label %land.lhs.true.403, label %if.else.430

land.lhs.true.403:                                ; preds = %if.else.400
  %219 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld404 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %219, i32 0, i32 1
  %arrayidx405 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld404, i32 0, i64 0
  %rtx406 = bitcast %union.rtunion_def* %arrayidx405 to %struct.rtx_def**
  %220 = load %struct.rtx_def*, %struct.rtx_def** %rtx406, align 8
  %call407 = call %struct.rtx_def* @if_then_else_cond(%struct.rtx_def* %220, %struct.rtx_def** %true0, %struct.rtx_def** %false0)
  store %struct.rtx_def* %call407, %struct.rtx_def** %cond0, align 8
  %cmp408 = icmp ne %struct.rtx_def* null, %call407
  br i1 %cmp408, label %if.then.410, label %if.else.430

if.then.410:                                      ; preds = %land.lhs.true.403
  %221 = load i32, i32* %mode, align 4
  %222 = load %struct.rtx_def*, %struct.rtx_def** %true0, align 8
  %223 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld411 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %223, i32 0, i32 1
  %arrayidx412 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld411, i32 0, i64 0
  %rtx413 = bitcast %union.rtunion_def* %arrayidx412 to %struct.rtx_def**
  %224 = load %struct.rtx_def*, %struct.rtx_def** %rtx413, align 8
  %225 = bitcast %struct.rtx_def* %224 to i32*
  %bf.load414 = load i32, i32* %225, align 8
  %bf.lshr415 = lshr i32 %bf.load414, 16
  %bf.clear416 = and i32 %bf.lshr415, 255
  %226 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld417 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %226, i32 0, i32 1
  %arrayidx418 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld417, i32 0, i64 1
  %rtuint = bitcast %union.rtunion_def* %arrayidx418 to i32*
  %227 = load i32, i32* %rtuint, align 4
  %call419 = call %struct.rtx_def* @simplify_gen_subreg(i32 %221, %struct.rtx_def* %222, i32 %bf.clear416, i32 %227)
  %228 = load %struct.rtx_def**, %struct.rtx_def*** %ptrue.addr, align 8
  store %struct.rtx_def* %call419, %struct.rtx_def** %228, align 8
  %229 = load i32, i32* %mode, align 4
  %230 = load %struct.rtx_def*, %struct.rtx_def** %false0, align 8
  %231 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld420 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %231, i32 0, i32 1
  %arrayidx421 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld420, i32 0, i64 0
  %rtx422 = bitcast %union.rtunion_def* %arrayidx421 to %struct.rtx_def**
  %232 = load %struct.rtx_def*, %struct.rtx_def** %rtx422, align 8
  %233 = bitcast %struct.rtx_def* %232 to i32*
  %bf.load423 = load i32, i32* %233, align 8
  %bf.lshr424 = lshr i32 %bf.load423, 16
  %bf.clear425 = and i32 %bf.lshr424, 255
  %234 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld426 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %234, i32 0, i32 1
  %arrayidx427 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld426, i32 0, i64 1
  %rtuint428 = bitcast %union.rtunion_def* %arrayidx427 to i32*
  %235 = load i32, i32* %rtuint428, align 4
  %call429 = call %struct.rtx_def* @simplify_gen_subreg(i32 %229, %struct.rtx_def* %230, i32 %bf.clear425, i32 %235)
  %236 = load %struct.rtx_def**, %struct.rtx_def*** %pfalse.addr, align 8
  store %struct.rtx_def* %call429, %struct.rtx_def** %236, align 8
  %237 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  store %struct.rtx_def* %237, %struct.rtx_def** %retval
  br label %return

if.else.430:                                      ; preds = %land.lhs.true.403, %if.else.400
  %238 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %239 = bitcast %struct.rtx_def* %238 to i32*
  %bf.load431 = load i32, i32* %239, align 8
  %bf.clear432 = and i32 %bf.load431, 65535
  %cmp433 = icmp eq i32 %bf.clear432, 67
  br i1 %cmp433, label %if.then.514, label %lor.lhs.false.435

lor.lhs.false.435:                                ; preds = %if.else.430
  %240 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %241 = bitcast %struct.rtx_def* %240 to i32*
  %bf.load436 = load i32, i32* %241, align 8
  %bf.clear437 = and i32 %bf.load436, 65535
  %cmp438 = icmp eq i32 %bf.clear437, 68
  br i1 %cmp438, label %if.then.514, label %lor.lhs.false.440

lor.lhs.false.440:                                ; preds = %lor.lhs.false.435
  %242 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %243 = bitcast %struct.rtx_def* %242 to i32*
  %bf.load441 = load i32, i32* %243, align 8
  %bf.clear442 = and i32 %bf.load441, 65535
  %cmp443 = icmp eq i32 %bf.clear442, 54
  br i1 %cmp443, label %if.then.514, label %lor.lhs.false.445

lor.lhs.false.445:                                ; preds = %lor.lhs.false.440
  %244 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %245 = bitcast %struct.rtx_def* %244 to i32*
  %bf.load446 = load i32, i32* %245, align 8
  %bf.clear447 = and i32 %bf.load446, 65535
  %cmp448 = icmp eq i32 %bf.clear447, 55
  br i1 %cmp448, label %if.then.514, label %lor.lhs.false.450

lor.lhs.false.450:                                ; preds = %lor.lhs.false.445
  %246 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %247 = bitcast %struct.rtx_def* %246 to i32*
  %bf.load451 = load i32, i32* %247, align 8
  %bf.clear452 = and i32 %bf.load451, 65535
  %cmp453 = icmp eq i32 %bf.clear452, 58
  br i1 %cmp453, label %if.then.514, label %lor.lhs.false.455

lor.lhs.false.455:                                ; preds = %lor.lhs.false.450
  %248 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %249 = bitcast %struct.rtx_def* %248 to i32*
  %bf.load456 = load i32, i32* %249, align 8
  %bf.clear457 = and i32 %bf.load456, 65535
  %cmp458 = icmp eq i32 %bf.clear457, 134
  br i1 %cmp458, label %if.then.514, label %lor.lhs.false.460

lor.lhs.false.460:                                ; preds = %lor.lhs.false.455
  %250 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %251 = bitcast %struct.rtx_def* %250 to i32*
  %bf.load461 = load i32, i32* %251, align 8
  %bf.clear462 = and i32 %bf.load461, 65535
  %cmp463 = icmp eq i32 %bf.clear462, 56
  br i1 %cmp463, label %if.then.514, label %lor.lhs.false.465

lor.lhs.false.465:                                ; preds = %lor.lhs.false.460
  %252 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %253 = bitcast %struct.rtx_def* %252 to i32*
  %bf.load466 = load i32, i32* %253, align 8
  %bf.clear467 = and i32 %bf.load466, 65535
  %cmp468 = icmp eq i32 %bf.clear467, 140
  br i1 %cmp468, label %if.then.514, label %lor.lhs.false.470

lor.lhs.false.470:                                ; preds = %lor.lhs.false.465
  %254 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call471 = call %struct.rtx_def* @get_last_value(%struct.rtx_def* %254)
  store %struct.rtx_def* %call471, %struct.rtx_def** %cond0, align 8
  %cmp472 = icmp ne %struct.rtx_def* %call471, null
  br i1 %cmp472, label %land.lhs.true.474, label %if.else.515

land.lhs.true.474:                                ; preds = %lor.lhs.false.470
  %255 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %256 = bitcast %struct.rtx_def* %255 to i32*
  %bf.load475 = load i32, i32* %256, align 8
  %bf.clear476 = and i32 %bf.load475, 65535
  %cmp477 = icmp eq i32 %bf.clear476, 67
  br i1 %cmp477, label %if.then.514, label %lor.lhs.false.479

lor.lhs.false.479:                                ; preds = %land.lhs.true.474
  %257 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %258 = bitcast %struct.rtx_def* %257 to i32*
  %bf.load480 = load i32, i32* %258, align 8
  %bf.clear481 = and i32 %bf.load480, 65535
  %cmp482 = icmp eq i32 %bf.clear481, 68
  br i1 %cmp482, label %if.then.514, label %lor.lhs.false.484

lor.lhs.false.484:                                ; preds = %lor.lhs.false.479
  %259 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %260 = bitcast %struct.rtx_def* %259 to i32*
  %bf.load485 = load i32, i32* %260, align 8
  %bf.clear486 = and i32 %bf.load485, 65535
  %cmp487 = icmp eq i32 %bf.clear486, 54
  br i1 %cmp487, label %if.then.514, label %lor.lhs.false.489

lor.lhs.false.489:                                ; preds = %lor.lhs.false.484
  %261 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %262 = bitcast %struct.rtx_def* %261 to i32*
  %bf.load490 = load i32, i32* %262, align 8
  %bf.clear491 = and i32 %bf.load490, 65535
  %cmp492 = icmp eq i32 %bf.clear491, 55
  br i1 %cmp492, label %if.then.514, label %lor.lhs.false.494

lor.lhs.false.494:                                ; preds = %lor.lhs.false.489
  %263 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %264 = bitcast %struct.rtx_def* %263 to i32*
  %bf.load495 = load i32, i32* %264, align 8
  %bf.clear496 = and i32 %bf.load495, 65535
  %cmp497 = icmp eq i32 %bf.clear496, 58
  br i1 %cmp497, label %if.then.514, label %lor.lhs.false.499

lor.lhs.false.499:                                ; preds = %lor.lhs.false.494
  %265 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %266 = bitcast %struct.rtx_def* %265 to i32*
  %bf.load500 = load i32, i32* %266, align 8
  %bf.clear501 = and i32 %bf.load500, 65535
  %cmp502 = icmp eq i32 %bf.clear501, 134
  br i1 %cmp502, label %if.then.514, label %lor.lhs.false.504

lor.lhs.false.504:                                ; preds = %lor.lhs.false.499
  %267 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %268 = bitcast %struct.rtx_def* %267 to i32*
  %bf.load505 = load i32, i32* %268, align 8
  %bf.clear506 = and i32 %bf.load505, 65535
  %cmp507 = icmp eq i32 %bf.clear506, 56
  br i1 %cmp507, label %if.then.514, label %lor.lhs.false.509

lor.lhs.false.509:                                ; preds = %lor.lhs.false.504
  %269 = load %struct.rtx_def*, %struct.rtx_def** %cond0, align 8
  %270 = bitcast %struct.rtx_def* %269 to i32*
  %bf.load510 = load i32, i32* %270, align 8
  %bf.clear511 = and i32 %bf.load510, 65535
  %cmp512 = icmp eq i32 %bf.clear511, 140
  br i1 %cmp512, label %if.then.514, label %if.else.515

if.then.514:                                      ; preds = %lor.lhs.false.509, %lor.lhs.false.504, %lor.lhs.false.499, %lor.lhs.false.494, %lor.lhs.false.489, %lor.lhs.false.484, %lor.lhs.false.479, %land.lhs.true.474, %lor.lhs.false.465, %lor.lhs.false.460, %lor.lhs.false.455, %lor.lhs.false.450, %lor.lhs.false.445, %lor.lhs.false.440, %lor.lhs.false.435, %if.else.430
  br label %if.end.557

if.else.515:                                      ; preds = %lor.lhs.false.509, %lor.lhs.false.470
  %271 = load i32, i32* %mode, align 4
  %cmp516 = icmp eq i32 %271, 1
  br i1 %cmp516, label %if.then.518, label %if.else.520

if.then.518:                                      ; preds = %if.else.515
  %call519 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 1)
  %272 = load %struct.rtx_def**, %struct.rtx_def*** %ptrue.addr, align 8
  store %struct.rtx_def* %call519, %struct.rtx_def** %272, align 8
  %273 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %274 = load %struct.rtx_def**, %struct.rtx_def*** %pfalse.addr, align 8
  store %struct.rtx_def* %273, %struct.rtx_def** %274, align 8
  %275 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %275, %struct.rtx_def** %retval
  br label %return

if.else.520:                                      ; preds = %if.else.515
  %276 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %277 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 63), align 8
  %cmp521 = icmp eq %struct.rtx_def* %276, %277
  br i1 %cmp521, label %if.then.536, label %lor.lhs.false.523

lor.lhs.false.523:                                ; preds = %if.else.520
  %278 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %279 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp524 = icmp eq %struct.rtx_def* %278, %279
  br i1 %cmp524, label %if.then.536, label %lor.lhs.false.526

lor.lhs.false.526:                                ; preds = %lor.lhs.false.523
  %280 = load i32, i32* %mode, align 4
  %cmp527 = icmp ne i32 %280, 0
  br i1 %cmp527, label %land.lhs.true.529, label %if.else.537

land.lhs.true.529:                                ; preds = %lor.lhs.false.526
  %281 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %282 = load i32, i32* %mode, align 4
  %call530 = call i32 @num_sign_bit_copies(%struct.rtx_def* %281, i32 %282)
  %283 = load i32, i32* %mode, align 4
  %idxprom531 = sext i32 %283 to i64
  %arrayidx532 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom531
  %284 = load i16, i16* %arrayidx532, align 2
  %conv533 = zext i16 %284 to i32
  %cmp534 = icmp eq i32 %call530, %conv533
  br i1 %cmp534, label %if.then.536, label %if.else.537

if.then.536:                                      ; preds = %land.lhs.true.529, %lor.lhs.false.523, %if.else.520
  %285 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 63), align 8
  %286 = load %struct.rtx_def**, %struct.rtx_def*** %ptrue.addr, align 8
  store %struct.rtx_def* %285, %struct.rtx_def** %286, align 8
  %287 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %288 = load %struct.rtx_def**, %struct.rtx_def*** %pfalse.addr, align 8
  store %struct.rtx_def* %287, %struct.rtx_def** %288, align 8
  %289 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %289, %struct.rtx_def** %retval
  br label %return

if.else.537:                                      ; preds = %land.lhs.true.529, %lor.lhs.false.526
  %290 = load i32, i32* %mode, align 4
  %cmp538 = icmp ne i32 %290, 0
  br i1 %cmp538, label %land.lhs.true.540, label %if.end.554

land.lhs.true.540:                                ; preds = %if.else.537
  %291 = load i32, i32* %mode, align 4
  %idxprom541 = sext i32 %291 to i64
  %arrayidx542 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom541
  %292 = load i16, i16* %arrayidx542, align 2
  %conv543 = zext i16 %292 to i32
  %cmp544 = icmp sle i32 %conv543, 64
  br i1 %cmp544, label %land.lhs.true.546, label %if.end.554

land.lhs.true.546:                                ; preds = %land.lhs.true.540
  %293 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %294 = load i32, i32* %mode, align 4
  %call547 = call i64 @nonzero_bits(%struct.rtx_def* %293, i32 %294)
  store i64 %call547, i64* %nz, align 8
  %call548 = call i32 @exact_log2_wide(i64 %call547)
  %cmp549 = icmp sge i32 %call548, 0
  br i1 %cmp549, label %if.then.551, label %if.end.554

if.then.551:                                      ; preds = %land.lhs.true.546
  %295 = load i64, i64* %nz, align 8
  %296 = load i32, i32* %mode, align 4
  %call552 = call i64 @trunc_int_for_mode(i64 %295, i32 %296)
  %call553 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call552)
  %297 = load %struct.rtx_def**, %struct.rtx_def*** %ptrue.addr, align 8
  store %struct.rtx_def* %call553, %struct.rtx_def** %297, align 8
  %298 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %299 = load %struct.rtx_def**, %struct.rtx_def*** %pfalse.addr, align 8
  store %struct.rtx_def* %298, %struct.rtx_def** %299, align 8
  %300 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %300, %struct.rtx_def** %retval
  br label %return

if.end.554:                                       ; preds = %land.lhs.true.546, %land.lhs.true.540, %if.else.537
  br label %if.end.555

if.end.555:                                       ; preds = %if.end.554
  br label %if.end.556

if.end.556:                                       ; preds = %if.end.555
  br label %if.end.557

if.end.557:                                       ; preds = %if.end.556, %if.then.514
  br label %if.end.558

if.end.558:                                       ; preds = %if.end.557
  br label %if.end.559

if.end.559:                                       ; preds = %if.end.558
  br label %if.end.560

if.end.560:                                       ; preds = %if.end.559, %if.end.350
  br label %if.end.561

if.end.561:                                       ; preds = %if.end.560, %if.then.50
  br label %if.end.562

if.end.562:                                       ; preds = %if.end.561
  br label %if.end.563

if.end.563:                                       ; preds = %if.end.562
  %301 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %302 = load %struct.rtx_def**, %struct.rtx_def*** %pfalse.addr, align 8
  store %struct.rtx_def* %301, %struct.rtx_def** %302, align 8
  %303 = load %struct.rtx_def**, %struct.rtx_def*** %ptrue.addr, align 8
  store %struct.rtx_def* %301, %struct.rtx_def** %303, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %if.end.563, %if.then.551, %if.then.536, %if.then.518, %if.then.410, %if.else.399, %if.then.389, %if.then.374, %if.then.348, %cond.end.239, %cond.end.107, %if.then.32, %cond.end.18
  %304 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %304
}

; Function Attrs: nounwind uwtable
define internal i32 @simplify_comparison(i32 %code, %struct.rtx_def** %pop0, %struct.rtx_def** %pop1) #0 {
entry:
  %code.addr = alloca i32, align 4
  %pop0.addr = alloca %struct.rtx_def**, align 8
  %pop1.addr = alloca %struct.rtx_def**, align 8
  %op0 = alloca %struct.rtx_def*, align 8
  %op1 = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  %tem1 = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %mode = alloca i32, align 4
  %tmode = alloca i32, align 4
  %mode296 = alloca i32, align 4
  %mask = alloca i64, align 8
  %shift_count = alloca i32, align 4
  %inner_op0 = alloca %struct.rtx_def*, align 8
  %inner_op1 = alloca %struct.rtx_def*, align 8
  %c0 = alloca i64, align 8
  %c1 = alloca i64, align 8
  %changed = alloca i32, align 4
  %mode573 = alloca i32, align 4
  %mode_width = alloca i32, align 4
  %mask580 = alloca i64, align 8
  %equality_comparison_p = alloca i32, align 4
  %sign_bit_comparison_p = alloca i32, align 4
  %unsigned_comparison_p = alloca i32, align 4
  %const_op = alloca i64, align 8
  %new_code = alloca i32, align 4
  %temp = alloca i64, align 8
  %inner = alloca %struct.rtx_def*, align 8
  %add_const = alloca %struct.rtx_def*, align 8
  %new_const = alloca %struct.rtx_def*, align 8
  %zero_extended = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  store %struct.rtx_def** %pop0, %struct.rtx_def*** %pop0.addr, align 8
  store %struct.rtx_def** %pop1, %struct.rtx_def*** %pop1.addr, align 8
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %pop0.addr, align 8
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %op0, align 8
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %pop1.addr, align 8
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %op1, align 8
  br label %while.body

while.body:                                       ; preds = %entry, %if.end.562
  %4 = load i32, i32* %code.addr, align 4
  %cmp = icmp ne i32 %4, 109
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %while.body
  %5 = load i32, i32* %code.addr, align 4
  %cmp1 = icmp ne i32 %5, 108
  br i1 %cmp1, label %land.lhs.true.2, label %if.end

land.lhs.true.2:                                  ; preds = %land.lhs.true
  %6 = load i32, i32* %code.addr, align 4
  %cmp3 = icmp ne i32 %6, 111
  br i1 %cmp3, label %land.lhs.true.4, label %if.end

land.lhs.true.4:                                  ; preds = %land.lhs.true.2
  %7 = load i32, i32* %code.addr, align 4
  %cmp5 = icmp ne i32 %7, 110
  br i1 %cmp5, label %land.lhs.true.6, label %if.end

land.lhs.true.6:                                  ; preds = %land.lhs.true.4
  %8 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load = load i32, i32* %9, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp7 = icmp eq i32 %bf.clear, 89
  br i1 %cmp7, label %land.lhs.true.8, label %if.end

land.lhs.true.8:                                  ; preds = %land.lhs.true.6
  %10 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load9 = load i32, i32* %11, align 8
  %bf.clear10 = and i32 %bf.load9, 65535
  %cmp11 = icmp eq i32 %bf.clear10, 89
  br i1 %cmp11, label %land.lhs.true.12, label %if.end

land.lhs.true.12:                                 ; preds = %land.lhs.true.8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load13 = load i32, i32* %14, align 8
  %bf.clear14 = and i32 %bf.load13, 65535
  %cmp15 = icmp eq i32 %bf.clear14, 87
  br i1 %cmp15, label %land.lhs.true.16, label %if.end

land.lhs.true.16:                                 ; preds = %land.lhs.true.12
  %15 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i32 0, i64 0
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rtx19, align 8
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load20 = load i32, i32* %17, align 8
  %bf.clear21 = and i32 %bf.load20, 65535
  %cmp22 = icmp eq i32 %bf.clear21, 87
  br i1 %cmp22, label %land.lhs.true.23, label %if.end

land.lhs.true.23:                                 ; preds = %land.lhs.true.16
  %18 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i32 0, i64 0
  %rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rtx26, align 8
  %fld27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i32 0, i64 0
  %rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rtx29, align 8
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load30 = load i32, i32* %21, align 8
  %bf.clear31 = and i32 %bf.load30, 65535
  %cmp32 = icmp eq i32 %bf.clear31, 63
  br i1 %cmp32, label %land.lhs.true.33, label %if.end

land.lhs.true.33:                                 ; preds = %land.lhs.true.23
  %22 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i32 0, i64 0
  %rtx36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtx_def**
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rtx36, align 8
  %fld37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i32 0, i64 0
  %rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rtx39, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load40 = load i32, i32* %25, align 8
  %bf.clear41 = and i32 %bf.load40, 65535
  %cmp42 = icmp eq i32 %bf.clear41, 63
  br i1 %cmp42, label %land.lhs.true.43, label %if.end

land.lhs.true.43:                                 ; preds = %land.lhs.true.33
  %26 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i32 0, i64 0
  %rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rtx46, align 8
  %fld47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i32 0, i64 0
  %rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rtx49, align 8
  %fld50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i32 0, i64 0
  %rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rtx52, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load53 = load i32, i32* %30, align 8
  %bf.lshr = lshr i32 %bf.load53, 16
  %bf.clear54 = and i32 %bf.lshr, 255
  %31 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx56 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld55, i32 0, i64 0
  %rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rtx57, align 8
  %fld58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i32 0, i64 0
  %rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rtx60, align 8
  %fld61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i32 0, i64 0
  %rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rtx63, align 8
  %35 = bitcast %struct.rtx_def* %34 to i32*
  %bf.load64 = load i32, i32* %35, align 8
  %bf.lshr65 = lshr i32 %bf.load64, 16
  %bf.clear66 = and i32 %bf.lshr65, 255
  %cmp67 = icmp eq i32 %bf.clear54, %bf.clear66
  br i1 %cmp67, label %land.lhs.true.68, label %if.end

land.lhs.true.68:                                 ; preds = %land.lhs.true.43
  %36 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld69, i32 0, i64 1
  %rtx71 = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtx_def**
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rtx71, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load72 = load i32, i32* %38, align 8
  %bf.clear73 = and i32 %bf.load72, 65535
  %cmp74 = icmp eq i32 %bf.clear73, 54
  br i1 %cmp74, label %land.lhs.true.75, label %if.end

land.lhs.true.75:                                 ; preds = %land.lhs.true.68
  %39 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1
  %arrayidx77 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld76, i32 0, i64 1
  %rtx78 = bitcast %union.rtunion_def* %arrayidx77 to %struct.rtx_def**
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rtx78, align 8
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load79 = load i32, i32* %41, align 8
  %bf.clear80 = and i32 %bf.load79, 65535
  %cmp81 = icmp eq i32 %bf.clear80, 54
  br i1 %cmp81, label %land.lhs.true.82, label %if.end

land.lhs.true.82:                                 ; preds = %land.lhs.true.75
  %42 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i32 0, i64 0
  %rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rtx85, align 8
  %fld86 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx87 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld86, i32 0, i64 1
  %rtx88 = bitcast %union.rtunion_def* %arrayidx87 to %struct.rtx_def**
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rtx88, align 8
  %45 = bitcast %struct.rtx_def* %44 to i32*
  %bf.load89 = load i32, i32* %45, align 8
  %bf.clear90 = and i32 %bf.load89, 65535
  %cmp91 = icmp eq i32 %bf.clear90, 54
  br i1 %cmp91, label %land.lhs.true.92, label %if.end

land.lhs.true.92:                                 ; preds = %land.lhs.true.82
  %46 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx94 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld93, i32 0, i64 0
  %rtx95 = bitcast %union.rtunion_def* %arrayidx94 to %struct.rtx_def**
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rtx95, align 8
  %fld96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1
  %arrayidx97 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld96, i32 0, i64 1
  %rtx98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtx_def**
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rtx98, align 8
  %49 = bitcast %struct.rtx_def* %48 to i32*
  %bf.load99 = load i32, i32* %49, align 8
  %bf.clear100 = and i32 %bf.load99, 65535
  %cmp101 = icmp eq i32 %bf.clear100, 54
  br i1 %cmp101, label %land.lhs.true.102, label %if.end

land.lhs.true.102:                                ; preds = %land.lhs.true.92
  %50 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1
  %arrayidx104 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld103, i32 0, i64 1
  %rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rtx105, align 8
  %fld106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %arrayidx107 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld106, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx107 to i64*
  %52 = load i64, i64* %rtwint, align 8
  %53 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld108, i32 0, i64 1
  %rtx110 = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx110, align 8
  %fld111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1
  %arrayidx112 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld111, i32 0, i64 0
  %rtwint113 = bitcast %union.rtunion_def* %arrayidx112 to i64*
  %55 = load i64, i64* %rtwint113, align 8
  %cmp114 = icmp eq i64 %52, %55
  br i1 %cmp114, label %land.lhs.true.115, label %if.end

land.lhs.true.115:                                ; preds = %land.lhs.true.102
  %56 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld116 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1
  %arrayidx117 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld116, i32 0, i64 1
  %rtx118 = bitcast %union.rtunion_def* %arrayidx117 to %struct.rtx_def**
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rtx118, align 8
  %fld119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1
  %arrayidx120 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld119, i32 0, i64 0
  %rtwint121 = bitcast %union.rtunion_def* %arrayidx120 to i64*
  %58 = load i64, i64* %rtwint121, align 8
  %59 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld122 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1
  %arrayidx123 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld122, i32 0, i64 0
  %rtx124 = bitcast %union.rtunion_def* %arrayidx123 to %struct.rtx_def**
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rtx124, align 8
  %fld125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i32 0, i64 1
  %rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rtx127, align 8
  %fld128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1
  %arrayidx129 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld128, i32 0, i64 0
  %rtwint130 = bitcast %union.rtunion_def* %arrayidx129 to i64*
  %62 = load i64, i64* %rtwint130, align 8
  %cmp131 = icmp eq i64 %58, %62
  br i1 %cmp131, label %land.lhs.true.132, label %if.end

land.lhs.true.132:                                ; preds = %land.lhs.true.115
  %63 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld133 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1
  %arrayidx134 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld133, i32 0, i64 1
  %rtx135 = bitcast %union.rtunion_def* %arrayidx134 to %struct.rtx_def**
  %64 = load %struct.rtx_def*, %struct.rtx_def** %rtx135, align 8
  %fld136 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1
  %arrayidx137 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld136, i32 0, i64 0
  %rtwint138 = bitcast %union.rtunion_def* %arrayidx137 to i64*
  %65 = load i64, i64* %rtwint138, align 8
  %66 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld139 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1
  %arrayidx140 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld139, i32 0, i64 0
  %rtx141 = bitcast %union.rtunion_def* %arrayidx140 to %struct.rtx_def**
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rtx141, align 8
  %fld142 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1
  %arrayidx143 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld142, i32 0, i64 1
  %rtx144 = bitcast %union.rtunion_def* %arrayidx143 to %struct.rtx_def**
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rtx144, align 8
  %fld145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1
  %arrayidx146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld145, i32 0, i64 0
  %rtwint147 = bitcast %union.rtunion_def* %arrayidx146 to i64*
  %69 = load i64, i64* %rtwint147, align 8
  %cmp148 = icmp eq i64 %65, %69
  br i1 %cmp148, label %land.lhs.true.149, label %if.end

land.lhs.true.149:                                ; preds = %land.lhs.true.132
  %70 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld150 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld150, i32 0, i64 1
  %rtx152 = bitcast %union.rtunion_def* %arrayidx151 to %struct.rtx_def**
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rtx152, align 8
  %fld153 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1
  %arrayidx154 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld153, i32 0, i64 0
  %rtwint155 = bitcast %union.rtunion_def* %arrayidx154 to i64*
  %72 = load i64, i64* %rtwint155, align 8
  %73 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %74 = bitcast %struct.rtx_def* %73 to i32*
  %bf.load156 = load i32, i32* %74, align 8
  %bf.lshr157 = lshr i32 %bf.load156, 16
  %bf.clear158 = and i32 %bf.lshr157, 255
  %idxprom = sext i32 %bf.clear158 to i64
  %arrayidx159 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom
  %75 = load i16, i16* %arrayidx159, align 2
  %conv = zext i16 %75 to i32
  %76 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld160 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %arrayidx161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld160, i32 0, i64 0
  %rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rtx162, align 8
  %fld163 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1
  %arrayidx164 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld163, i32 0, i64 0
  %rtx165 = bitcast %union.rtunion_def* %arrayidx164 to %struct.rtx_def**
  %78 = load %struct.rtx_def*, %struct.rtx_def** %rtx165, align 8
  %fld166 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx167 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld166, i32 0, i64 0
  %rtx168 = bitcast %union.rtunion_def* %arrayidx167 to %struct.rtx_def**
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rtx168, align 8
  %80 = bitcast %struct.rtx_def* %79 to i32*
  %bf.load169 = load i32, i32* %80, align 8
  %bf.lshr170 = lshr i32 %bf.load169, 16
  %bf.clear171 = and i32 %bf.lshr170, 255
  %idxprom172 = sext i32 %bf.clear171 to i64
  %arrayidx173 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom172
  %81 = load i16, i16* %arrayidx173, align 2
  %conv174 = zext i16 %81 to i32
  %sub = sub nsw i32 %conv, %conv174
  %conv175 = sext i32 %sub to i64
  %cmp176 = icmp eq i64 %72, %conv175
  br i1 %cmp176, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.149
  %82 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld178 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1
  %arrayidx179 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld178, i32 0, i64 0
  %rtx180 = bitcast %union.rtunion_def* %arrayidx179 to %struct.rtx_def**
  %83 = load %struct.rtx_def*, %struct.rtx_def** %rtx180, align 8
  %fld181 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx182 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld181, i32 0, i64 0
  %rtx183 = bitcast %union.rtunion_def* %arrayidx182 to %struct.rtx_def**
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rtx183, align 8
  %fld184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1
  %arrayidx185 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld184, i32 0, i64 0
  %rtx186 = bitcast %union.rtunion_def* %arrayidx185 to %struct.rtx_def**
  %85 = load %struct.rtx_def*, %struct.rtx_def** %rtx186, align 8
  store %struct.rtx_def* %85, %struct.rtx_def** %op0, align 8
  %86 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld187 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1
  %arrayidx188 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld187, i32 0, i64 0
  %rtx189 = bitcast %union.rtunion_def* %arrayidx188 to %struct.rtx_def**
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rtx189, align 8
  %fld190 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1
  %arrayidx191 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld190, i32 0, i64 0
  %rtx192 = bitcast %union.rtunion_def* %arrayidx191 to %struct.rtx_def**
  %88 = load %struct.rtx_def*, %struct.rtx_def** %rtx192, align 8
  %fld193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1
  %arrayidx194 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld193, i32 0, i64 0
  %rtx195 = bitcast %union.rtunion_def* %arrayidx194 to %struct.rtx_def**
  %89 = load %struct.rtx_def*, %struct.rtx_def** %rtx195, align 8
  store %struct.rtx_def* %89, %struct.rtx_def** %op1, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.149, %land.lhs.true.132, %land.lhs.true.115, %land.lhs.true.102, %land.lhs.true.92, %land.lhs.true.82, %land.lhs.true.75, %land.lhs.true.68, %land.lhs.true.43, %land.lhs.true.33, %land.lhs.true.23, %land.lhs.true.16, %land.lhs.true.12, %land.lhs.true.8, %land.lhs.true.6, %land.lhs.true.4, %land.lhs.true.2, %land.lhs.true, %while.body
  %90 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %91 = bitcast %struct.rtx_def* %90 to i32*
  %bf.load196 = load i32, i32* %91, align 8
  %bf.clear197 = and i32 %bf.load196, 65535
  %92 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %93 = bitcast %struct.rtx_def* %92 to i32*
  %bf.load198 = load i32, i32* %93, align 8
  %bf.clear199 = and i32 %bf.load198, 65535
  %cmp200 = icmp eq i32 %bf.clear197, %bf.clear199
  br i1 %cmp200, label %land.lhs.true.202, label %if.else.356

land.lhs.true.202:                                ; preds = %if.end
  %94 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %95 = bitcast %struct.rtx_def* %94 to i32*
  %bf.load203 = load i32, i32* %95, align 8
  %bf.lshr204 = lshr i32 %bf.load203, 16
  %bf.clear205 = and i32 %bf.lshr204, 255
  %idxprom206 = sext i32 %bf.clear205 to i64
  %arrayidx207 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom206
  %96 = load i16, i16* %arrayidx207, align 2
  %conv208 = zext i16 %96 to i32
  %cmp209 = icmp sle i32 %conv208, 64
  br i1 %cmp209, label %land.lhs.true.211, label %if.else.356

land.lhs.true.211:                                ; preds = %land.lhs.true.202
  %97 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %98 = bitcast %struct.rtx_def* %97 to i32*
  %bf.load212 = load i32, i32* %98, align 8
  %bf.clear213 = and i32 %bf.load212, 65535
  %cmp214 = icmp eq i32 %bf.clear213, 88
  br i1 %cmp214, label %land.lhs.true.216, label %lor.lhs.false.221

land.lhs.true.216:                                ; preds = %land.lhs.true.211
  %99 = load i32, i32* %code.addr, align 4
  %cmp217 = icmp eq i32 %99, 102
  br i1 %cmp217, label %land.lhs.true.260, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.216
  %100 = load i32, i32* %code.addr, align 4
  %cmp219 = icmp eq i32 %100, 103
  br i1 %cmp219, label %land.lhs.true.260, label %lor.lhs.false.221

lor.lhs.false.221:                                ; preds = %lor.lhs.false, %land.lhs.true.211
  %101 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %102 = bitcast %struct.rtx_def* %101 to i32*
  %bf.load222 = load i32, i32* %102, align 8
  %bf.clear223 = and i32 %bf.load222, 65535
  %cmp224 = icmp eq i32 %bf.clear223, 90
  br i1 %cmp224, label %land.lhs.true.231, label %lor.lhs.false.226

lor.lhs.false.226:                                ; preds = %lor.lhs.false.221
  %103 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %104 = bitcast %struct.rtx_def* %103 to i32*
  %bf.load227 = load i32, i32* %104, align 8
  %bf.clear228 = and i32 %bf.load227, 65535
  %cmp229 = icmp eq i32 %bf.clear228, 87
  br i1 %cmp229, label %land.lhs.true.231, label %lor.lhs.false.243

land.lhs.true.231:                                ; preds = %lor.lhs.false.226, %lor.lhs.false.221
  %105 = load i32, i32* %code.addr, align 4
  %cmp232 = icmp ne i32 %105, 105
  br i1 %cmp232, label %land.lhs.true.234, label %lor.lhs.false.243

land.lhs.true.234:                                ; preds = %land.lhs.true.231
  %106 = load i32, i32* %code.addr, align 4
  %cmp235 = icmp ne i32 %106, 107
  br i1 %cmp235, label %land.lhs.true.237, label %lor.lhs.false.243

land.lhs.true.237:                                ; preds = %land.lhs.true.234
  %107 = load i32, i32* %code.addr, align 4
  %cmp238 = icmp ne i32 %107, 104
  br i1 %cmp238, label %land.lhs.true.240, label %lor.lhs.false.243

land.lhs.true.240:                                ; preds = %land.lhs.true.237
  %108 = load i32, i32* %code.addr, align 4
  %cmp241 = icmp ne i32 %108, 106
  br i1 %cmp241, label %land.lhs.true.260, label %lor.lhs.false.243

lor.lhs.false.243:                                ; preds = %land.lhs.true.240, %land.lhs.true.237, %land.lhs.true.234, %land.lhs.true.231, %lor.lhs.false.226
  %109 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %110 = bitcast %struct.rtx_def* %109 to i32*
  %bf.load244 = load i32, i32* %110, align 8
  %bf.clear245 = and i32 %bf.load244, 65535
  %cmp246 = icmp eq i32 %bf.clear245, 89
  br i1 %cmp246, label %land.lhs.true.248, label %if.else.356

land.lhs.true.248:                                ; preds = %lor.lhs.false.243
  %111 = load i32, i32* %code.addr, align 4
  %cmp249 = icmp ne i32 %111, 109
  br i1 %cmp249, label %land.lhs.true.251, label %if.else.356

land.lhs.true.251:                                ; preds = %land.lhs.true.248
  %112 = load i32, i32* %code.addr, align 4
  %cmp252 = icmp ne i32 %112, 111
  br i1 %cmp252, label %land.lhs.true.254, label %if.else.356

land.lhs.true.254:                                ; preds = %land.lhs.true.251
  %113 = load i32, i32* %code.addr, align 4
  %cmp255 = icmp ne i32 %113, 108
  br i1 %cmp255, label %land.lhs.true.257, label %if.else.356

land.lhs.true.257:                                ; preds = %land.lhs.true.254
  %114 = load i32, i32* %code.addr, align 4
  %cmp258 = icmp ne i32 %114, 110
  br i1 %cmp258, label %land.lhs.true.260, label %if.else.356

land.lhs.true.260:                                ; preds = %land.lhs.true.257, %land.lhs.true.240, %lor.lhs.false, %land.lhs.true.216
  %115 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld261 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1
  %arrayidx262 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld261, i32 0, i64 1
  %rtx263 = bitcast %union.rtunion_def* %arrayidx262 to %struct.rtx_def**
  %116 = load %struct.rtx_def*, %struct.rtx_def** %rtx263, align 8
  %117 = bitcast %struct.rtx_def* %116 to i32*
  %bf.load264 = load i32, i32* %117, align 8
  %bf.clear265 = and i32 %bf.load264, 65535
  %cmp266 = icmp eq i32 %bf.clear265, 54
  br i1 %cmp266, label %land.lhs.true.268, label %if.else.356

land.lhs.true.268:                                ; preds = %land.lhs.true.260
  %118 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld269 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1
  %arrayidx270 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld269, i32 0, i64 1
  %rtx271 = bitcast %union.rtunion_def* %arrayidx270 to %struct.rtx_def**
  %119 = load %struct.rtx_def*, %struct.rtx_def** %rtx271, align 8
  %fld272 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %119, i32 0, i32 1
  %arrayidx273 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld272, i32 0, i64 0
  %rtwint274 = bitcast %union.rtunion_def* %arrayidx273 to i64*
  %120 = load i64, i64* %rtwint274, align 8
  %cmp275 = icmp sge i64 %120, 0
  br i1 %cmp275, label %land.lhs.true.277, label %if.else.356

land.lhs.true.277:                                ; preds = %land.lhs.true.268
  %121 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld278 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %121, i32 0, i32 1
  %arrayidx279 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld278, i32 0, i64 1
  %rtx280 = bitcast %union.rtunion_def* %arrayidx279 to %struct.rtx_def**
  %122 = load %struct.rtx_def*, %struct.rtx_def** %rtx280, align 8
  %fld281 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i32 0, i32 1
  %arrayidx282 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld281, i32 0, i64 0
  %rtwint283 = bitcast %union.rtunion_def* %arrayidx282 to i64*
  %123 = load i64, i64* %rtwint283, align 8
  %cmp284 = icmp slt i64 %123, 64
  br i1 %cmp284, label %land.lhs.true.286, label %if.else.356

land.lhs.true.286:                                ; preds = %land.lhs.true.277
  %124 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld287 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1
  %arrayidx288 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld287, i32 0, i64 1
  %rtx289 = bitcast %union.rtunion_def* %arrayidx288 to %struct.rtx_def**
  %125 = load %struct.rtx_def*, %struct.rtx_def** %rtx289, align 8
  %126 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld290 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1
  %arrayidx291 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld290, i32 0, i64 1
  %rtx292 = bitcast %union.rtunion_def* %arrayidx291 to %struct.rtx_def**
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rtx292, align 8
  %cmp293 = icmp eq %struct.rtx_def* %125, %127
  br i1 %cmp293, label %if.then.295, label %if.else.356

if.then.295:                                      ; preds = %land.lhs.true.286
  %128 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %129 = bitcast %struct.rtx_def* %128 to i32*
  %bf.load297 = load i32, i32* %129, align 8
  %bf.lshr298 = lshr i32 %bf.load297, 16
  %bf.clear299 = and i32 %bf.lshr298, 255
  store i32 %bf.clear299, i32* %mode296, align 4
  %130 = load i32, i32* %mode296, align 4
  %idxprom300 = sext i32 %130 to i64
  %arrayidx301 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom300
  %131 = load i64, i64* %arrayidx301, align 8
  store i64 %131, i64* %mask, align 8
  %132 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld302 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1
  %arrayidx303 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld302, i32 0, i64 1
  %rtx304 = bitcast %union.rtunion_def* %arrayidx303 to %struct.rtx_def**
  %133 = load %struct.rtx_def*, %struct.rtx_def** %rtx304, align 8
  %fld305 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %133, i32 0, i32 1
  %arrayidx306 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld305, i32 0, i64 0
  %rtwint307 = bitcast %union.rtunion_def* %arrayidx306 to i64*
  %134 = load i64, i64* %rtwint307, align 8
  %conv308 = trunc i64 %134 to i32
  store i32 %conv308, i32* %shift_count, align 4
  %135 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %136 = bitcast %struct.rtx_def* %135 to i32*
  %bf.load309 = load i32, i32* %136, align 8
  %bf.clear310 = and i32 %bf.load309, 65535
  %cmp311 = icmp eq i32 %bf.clear310, 90
  br i1 %cmp311, label %if.then.318, label %lor.lhs.false.313

lor.lhs.false.313:                                ; preds = %if.then.295
  %137 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %138 = bitcast %struct.rtx_def* %137 to i32*
  %bf.load314 = load i32, i32* %138, align 8
  %bf.clear315 = and i32 %bf.load314, 65535
  %cmp316 = icmp eq i32 %bf.clear315, 89
  br i1 %cmp316, label %if.then.318, label %if.else

if.then.318:                                      ; preds = %lor.lhs.false.313, %if.then.295
  %139 = load i64, i64* %mask, align 8
  %140 = load i32, i32* %shift_count, align 4
  %sh_prom = zext i32 %140 to i64
  %shr = lshr i64 %139, %sh_prom
  %141 = load i32, i32* %shift_count, align 4
  %sh_prom319 = zext i32 %141 to i64
  %shl = shl i64 %shr, %sh_prom319
  %142 = load i64, i64* %mask, align 8
  %and = and i64 %142, %shl
  store i64 %and, i64* %mask, align 8
  br label %if.end.331

if.else:                                          ; preds = %lor.lhs.false.313
  %143 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %144 = bitcast %struct.rtx_def* %143 to i32*
  %bf.load320 = load i32, i32* %144, align 8
  %bf.clear321 = and i32 %bf.load320, 65535
  %cmp322 = icmp eq i32 %bf.clear321, 87
  br i1 %cmp322, label %if.then.324, label %if.end.330

if.then.324:                                      ; preds = %if.else
  %145 = load i64, i64* %mask, align 8
  %146 = load i64, i64* %mask, align 8
  %147 = load i32, i32* %shift_count, align 4
  %sh_prom325 = zext i32 %147 to i64
  %shl326 = shl i64 %146, %sh_prom325
  %and327 = and i64 %145, %shl326
  %148 = load i32, i32* %shift_count, align 4
  %sh_prom328 = zext i32 %148 to i64
  %shr329 = lshr i64 %and327, %sh_prom328
  store i64 %shr329, i64* %mask, align 8
  br label %if.end.330

if.end.330:                                       ; preds = %if.then.324, %if.else
  br label %if.end.331

if.end.331:                                       ; preds = %if.end.330, %if.then.318
  %149 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld332 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %149, i32 0, i32 1
  %arrayidx333 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld332, i32 0, i64 0
  %rtx334 = bitcast %union.rtunion_def* %arrayidx333 to %struct.rtx_def**
  %150 = load %struct.rtx_def*, %struct.rtx_def** %rtx334, align 8
  %151 = load i32, i32* %mode296, align 4
  %call = call i64 @nonzero_bits(%struct.rtx_def* %150, i32 %151)
  %152 = load i64, i64* %mask, align 8
  %neg = xor i64 %152, -1
  %and335 = and i64 %call, %neg
  %cmp336 = icmp eq i64 %and335, 0
  br i1 %cmp336, label %land.lhs.true.338, label %if.else.354

land.lhs.true.338:                                ; preds = %if.end.331
  %153 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld339 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1
  %arrayidx340 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld339, i32 0, i64 0
  %rtx341 = bitcast %union.rtunion_def* %arrayidx340 to %struct.rtx_def**
  %154 = load %struct.rtx_def*, %struct.rtx_def** %rtx341, align 8
  %155 = load i32, i32* %mode296, align 4
  %call342 = call i64 @nonzero_bits(%struct.rtx_def* %154, i32 %155)
  %156 = load i64, i64* %mask, align 8
  %neg343 = xor i64 %156, -1
  %and344 = and i64 %call342, %neg343
  %cmp345 = icmp eq i64 %and344, 0
  br i1 %cmp345, label %if.then.347, label %if.else.354

if.then.347:                                      ; preds = %land.lhs.true.338
  %157 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld348 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %157, i32 0, i32 1
  %arrayidx349 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld348, i32 0, i64 0
  %rtx350 = bitcast %union.rtunion_def* %arrayidx349 to %struct.rtx_def**
  %158 = load %struct.rtx_def*, %struct.rtx_def** %rtx350, align 8
  store %struct.rtx_def* %158, %struct.rtx_def** %op0, align 8
  %159 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld351 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1
  %arrayidx352 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld351, i32 0, i64 0
  %rtx353 = bitcast %union.rtunion_def* %arrayidx352 to %struct.rtx_def**
  %160 = load %struct.rtx_def*, %struct.rtx_def** %rtx353, align 8
  store %struct.rtx_def* %160, %struct.rtx_def** %op1, align 8
  br label %if.end.355

if.else.354:                                      ; preds = %land.lhs.true.338, %if.end.331
  br label %while.end

if.end.355:                                       ; preds = %if.then.347
  br label %if.end.562

if.else.356:                                      ; preds = %land.lhs.true.286, %land.lhs.true.277, %land.lhs.true.268, %land.lhs.true.260, %land.lhs.true.257, %land.lhs.true.254, %land.lhs.true.251, %land.lhs.true.248, %lor.lhs.false.243, %land.lhs.true.202, %if.end
  %161 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %162 = bitcast %struct.rtx_def* %161 to i32*
  %bf.load357 = load i32, i32* %162, align 8
  %bf.clear358 = and i32 %bf.load357, 65535
  %cmp359 = icmp eq i32 %bf.clear358, 83
  br i1 %cmp359, label %land.lhs.true.361, label %if.else.525

land.lhs.true.361:                                ; preds = %if.else.356
  %163 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %164 = bitcast %struct.rtx_def* %163 to i32*
  %bf.load362 = load i32, i32* %164, align 8
  %bf.clear363 = and i32 %bf.load362, 65535
  %cmp364 = icmp eq i32 %bf.clear363, 83
  br i1 %cmp364, label %land.lhs.true.366, label %if.else.525

land.lhs.true.366:                                ; preds = %land.lhs.true.361
  %165 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld367 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %165, i32 0, i32 1
  %arrayidx368 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld367, i32 0, i64 1
  %rtx369 = bitcast %union.rtunion_def* %arrayidx368 to %struct.rtx_def**
  %166 = load %struct.rtx_def*, %struct.rtx_def** %rtx369, align 8
  %167 = bitcast %struct.rtx_def* %166 to i32*
  %bf.load370 = load i32, i32* %167, align 8
  %bf.clear371 = and i32 %bf.load370, 65535
  %cmp372 = icmp eq i32 %bf.clear371, 54
  br i1 %cmp372, label %land.lhs.true.374, label %if.else.525

land.lhs.true.374:                                ; preds = %land.lhs.true.366
  %168 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld375 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %168, i32 0, i32 1
  %arrayidx376 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld375, i32 0, i64 1
  %rtx377 = bitcast %union.rtunion_def* %arrayidx376 to %struct.rtx_def**
  %169 = load %struct.rtx_def*, %struct.rtx_def** %rtx377, align 8
  %170 = bitcast %struct.rtx_def* %169 to i32*
  %bf.load378 = load i32, i32* %170, align 8
  %bf.clear379 = and i32 %bf.load378, 65535
  %cmp380 = icmp eq i32 %bf.clear379, 54
  br i1 %cmp380, label %if.then.382, label %if.else.525

if.then.382:                                      ; preds = %land.lhs.true.374
  %171 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld383 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %171, i32 0, i32 1
  %arrayidx384 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld383, i32 0, i64 0
  %rtx385 = bitcast %union.rtunion_def* %arrayidx384 to %struct.rtx_def**
  %172 = load %struct.rtx_def*, %struct.rtx_def** %rtx385, align 8
  store %struct.rtx_def* %172, %struct.rtx_def** %inner_op0, align 8
  %173 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld386 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %173, i32 0, i32 1
  %arrayidx387 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld386, i32 0, i64 0
  %rtx388 = bitcast %union.rtunion_def* %arrayidx387 to %struct.rtx_def**
  %174 = load %struct.rtx_def*, %struct.rtx_def** %rtx388, align 8
  store %struct.rtx_def* %174, %struct.rtx_def** %inner_op1, align 8
  %175 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld389 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %175, i32 0, i32 1
  %arrayidx390 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld389, i32 0, i64 1
  %rtx391 = bitcast %union.rtunion_def* %arrayidx390 to %struct.rtx_def**
  %176 = load %struct.rtx_def*, %struct.rtx_def** %rtx391, align 8
  %fld392 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %176, i32 0, i32 1
  %arrayidx393 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld392, i32 0, i64 0
  %rtwint394 = bitcast %union.rtunion_def* %arrayidx393 to i64*
  %177 = load i64, i64* %rtwint394, align 8
  store i64 %177, i64* %c0, align 8
  %178 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld395 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %178, i32 0, i32 1
  %arrayidx396 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld395, i32 0, i64 1
  %rtx397 = bitcast %union.rtunion_def* %arrayidx396 to %struct.rtx_def**
  %179 = load %struct.rtx_def*, %struct.rtx_def** %rtx397, align 8
  %fld398 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %179, i32 0, i32 1
  %arrayidx399 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld398, i32 0, i64 0
  %rtwint400 = bitcast %union.rtunion_def* %arrayidx399 to i64*
  %180 = load i64, i64* %rtwint400, align 8
  store i64 %180, i64* %c1, align 8
  store i32 0, i32* %changed, align 4
  %181 = load %struct.rtx_def*, %struct.rtx_def** %inner_op0, align 8
  %182 = bitcast %struct.rtx_def* %181 to i32*
  %bf.load401 = load i32, i32* %182, align 8
  %bf.clear402 = and i32 %bf.load401, 65535
  %cmp403 = icmp eq i32 %bf.clear402, 63
  br i1 %cmp403, label %land.lhs.true.405, label %if.else.493

land.lhs.true.405:                                ; preds = %if.then.382
  %183 = load %struct.rtx_def*, %struct.rtx_def** %inner_op1, align 8
  %184 = bitcast %struct.rtx_def* %183 to i32*
  %bf.load406 = load i32, i32* %184, align 8
  %bf.clear407 = and i32 %bf.load406, 65535
  %cmp408 = icmp eq i32 %bf.clear407, 63
  br i1 %cmp408, label %land.lhs.true.410, label %if.else.493

land.lhs.true.410:                                ; preds = %land.lhs.true.405
  %185 = load %struct.rtx_def*, %struct.rtx_def** %inner_op0, align 8
  %186 = bitcast %struct.rtx_def* %185 to i32*
  %bf.load411 = load i32, i32* %186, align 8
  %bf.lshr412 = lshr i32 %bf.load411, 16
  %bf.clear413 = and i32 %bf.lshr412, 255
  %idxprom414 = sext i32 %bf.clear413 to i64
  %arrayidx415 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom414
  %187 = load i8, i8* %arrayidx415, align 1
  %conv416 = zext i8 %187 to i32
  %188 = load %struct.rtx_def*, %struct.rtx_def** %inner_op0, align 8
  %fld417 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %188, i32 0, i32 1
  %arrayidx418 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld417, i32 0, i64 0
  %rtx419 = bitcast %union.rtunion_def* %arrayidx418 to %struct.rtx_def**
  %189 = load %struct.rtx_def*, %struct.rtx_def** %rtx419, align 8
  %190 = bitcast %struct.rtx_def* %189 to i32*
  %bf.load420 = load i32, i32* %190, align 8
  %bf.lshr421 = lshr i32 %bf.load420, 16
  %bf.clear422 = and i32 %bf.lshr421, 255
  %idxprom423 = sext i32 %bf.clear422 to i64
  %arrayidx424 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom423
  %191 = load i8, i8* %arrayidx424, align 1
  %conv425 = zext i8 %191 to i32
  %cmp426 = icmp sgt i32 %conv416, %conv425
  br i1 %cmp426, label %land.lhs.true.428, label %if.else.493

land.lhs.true.428:                                ; preds = %land.lhs.true.410
  %192 = load %struct.rtx_def*, %struct.rtx_def** %inner_op0, align 8
  %fld429 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %192, i32 0, i32 1
  %arrayidx430 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld429, i32 0, i64 0
  %rtx431 = bitcast %union.rtunion_def* %arrayidx430 to %struct.rtx_def**
  %193 = load %struct.rtx_def*, %struct.rtx_def** %rtx431, align 8
  %194 = bitcast %struct.rtx_def* %193 to i32*
  %bf.load432 = load i32, i32* %194, align 8
  %bf.lshr433 = lshr i32 %bf.load432, 16
  %bf.clear434 = and i32 %bf.lshr433, 255
  %195 = load %struct.rtx_def*, %struct.rtx_def** %inner_op1, align 8
  %fld435 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %195, i32 0, i32 1
  %arrayidx436 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld435, i32 0, i64 0
  %rtx437 = bitcast %union.rtunion_def* %arrayidx436 to %struct.rtx_def**
  %196 = load %struct.rtx_def*, %struct.rtx_def** %rtx437, align 8
  %197 = bitcast %struct.rtx_def* %196 to i32*
  %bf.load438 = load i32, i32* %197, align 8
  %bf.lshr439 = lshr i32 %bf.load438, 16
  %bf.clear440 = and i32 %bf.lshr439, 255
  %cmp441 = icmp eq i32 %bf.clear434, %bf.clear440
  br i1 %cmp441, label %land.lhs.true.443, label %if.else.493

land.lhs.true.443:                                ; preds = %land.lhs.true.428
  %198 = load %struct.rtx_def*, %struct.rtx_def** %inner_op0, align 8
  %fld444 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %198, i32 0, i32 1
  %arrayidx445 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld444, i32 0, i64 0
  %rtx446 = bitcast %union.rtunion_def* %arrayidx445 to %struct.rtx_def**
  %199 = load %struct.rtx_def*, %struct.rtx_def** %rtx446, align 8
  %200 = bitcast %struct.rtx_def* %199 to i32*
  %bf.load447 = load i32, i32* %200, align 8
  %bf.lshr448 = lshr i32 %bf.load447, 16
  %bf.clear449 = and i32 %bf.lshr448, 255
  %idxprom450 = sext i32 %bf.clear449 to i64
  %arrayidx451 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom450
  %201 = load i16, i16* %arrayidx451, align 2
  %conv452 = zext i16 %201 to i32
  %cmp453 = icmp sle i32 %conv452, 64
  br i1 %cmp453, label %land.lhs.true.455, label %if.else.493

land.lhs.true.455:                                ; preds = %land.lhs.true.443
  %202 = load i64, i64* %c0, align 8
  %neg456 = xor i64 %202, -1
  %203 = load %struct.rtx_def*, %struct.rtx_def** %inner_op0, align 8
  %fld457 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %203, i32 0, i32 1
  %arrayidx458 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld457, i32 0, i64 0
  %rtx459 = bitcast %union.rtunion_def* %arrayidx458 to %struct.rtx_def**
  %204 = load %struct.rtx_def*, %struct.rtx_def** %rtx459, align 8
  %205 = load %struct.rtx_def*, %struct.rtx_def** %inner_op0, align 8
  %fld460 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %205, i32 0, i32 1
  %arrayidx461 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld460, i32 0, i64 0
  %rtx462 = bitcast %union.rtunion_def* %arrayidx461 to %struct.rtx_def**
  %206 = load %struct.rtx_def*, %struct.rtx_def** %rtx462, align 8
  %207 = bitcast %struct.rtx_def* %206 to i32*
  %bf.load463 = load i32, i32* %207, align 8
  %bf.lshr464 = lshr i32 %bf.load463, 16
  %bf.clear465 = and i32 %bf.lshr464, 255
  %call466 = call i64 @nonzero_bits(%struct.rtx_def* %204, i32 %bf.clear465)
  %and467 = and i64 %neg456, %call466
  %cmp468 = icmp eq i64 0, %and467
  br i1 %cmp468, label %land.lhs.true.470, label %if.else.493

land.lhs.true.470:                                ; preds = %land.lhs.true.455
  %208 = load i64, i64* %c1, align 8
  %neg471 = xor i64 %208, -1
  %209 = load %struct.rtx_def*, %struct.rtx_def** %inner_op1, align 8
  %fld472 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %209, i32 0, i32 1
  %arrayidx473 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld472, i32 0, i64 0
  %rtx474 = bitcast %union.rtunion_def* %arrayidx473 to %struct.rtx_def**
  %210 = load %struct.rtx_def*, %struct.rtx_def** %rtx474, align 8
  %211 = load %struct.rtx_def*, %struct.rtx_def** %inner_op1, align 8
  %fld475 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %211, i32 0, i32 1
  %arrayidx476 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld475, i32 0, i64 0
  %rtx477 = bitcast %union.rtunion_def* %arrayidx476 to %struct.rtx_def**
  %212 = load %struct.rtx_def*, %struct.rtx_def** %rtx477, align 8
  %213 = bitcast %struct.rtx_def* %212 to i32*
  %bf.load478 = load i32, i32* %213, align 8
  %bf.lshr479 = lshr i32 %bf.load478, 16
  %bf.clear480 = and i32 %bf.lshr479, 255
  %call481 = call i64 @nonzero_bits(%struct.rtx_def* %210, i32 %bf.clear480)
  %and482 = and i64 %neg471, %call481
  %cmp483 = icmp eq i64 0, %and482
  br i1 %cmp483, label %if.then.485, label %if.else.493

if.then.485:                                      ; preds = %land.lhs.true.470
  %214 = load %struct.rtx_def*, %struct.rtx_def** %inner_op0, align 8
  %fld486 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %214, i32 0, i32 1
  %arrayidx487 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld486, i32 0, i64 0
  %rtx488 = bitcast %union.rtunion_def* %arrayidx487 to %struct.rtx_def**
  %215 = load %struct.rtx_def*, %struct.rtx_def** %rtx488, align 8
  store %struct.rtx_def* %215, %struct.rtx_def** %op0, align 8
  %216 = load %struct.rtx_def*, %struct.rtx_def** %inner_op1, align 8
  %fld489 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %216, i32 0, i32 1
  %arrayidx490 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld489, i32 0, i64 0
  %rtx491 = bitcast %union.rtunion_def* %arrayidx490 to %struct.rtx_def**
  %217 = load %struct.rtx_def*, %struct.rtx_def** %rtx491, align 8
  store %struct.rtx_def* %217, %struct.rtx_def** %op1, align 8
  %218 = load i32, i32* %code.addr, align 4
  %call492 = call i32 @unsigned_condition(i32 %218)
  store i32 %call492, i32* %code.addr, align 4
  store i32 1, i32* %changed, align 4
  br label %if.end.522

if.else.493:                                      ; preds = %land.lhs.true.470, %land.lhs.true.455, %land.lhs.true.443, %land.lhs.true.428, %land.lhs.true.410, %land.lhs.true.405, %if.then.382
  %219 = load i64, i64* %c0, align 8
  %220 = load i64, i64* %c1, align 8
  %cmp494 = icmp eq i64 %219, %220
  br i1 %cmp494, label %if.then.496, label %if.end.521

if.then.496:                                      ; preds = %if.else.493
  %221 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %222 = bitcast %struct.rtx_def* %221 to i32*
  %bf.load497 = load i32, i32* %222, align 8
  %bf.lshr498 = lshr i32 %bf.load497, 16
  %bf.clear499 = and i32 %bf.lshr498, 255
  %idxprom500 = sext i32 %bf.clear499 to i64
  %arrayidx501 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom500
  %223 = load i32, i32* %arrayidx501, align 4
  %idxprom502 = sext i32 %223 to i64
  %arrayidx503 = getelementptr inbounds [9 x i32], [9 x i32]* @class_narrowest_mode, i32 0, i64 %idxprom502
  %224 = load i32, i32* %arrayidx503, align 4
  store i32 %224, i32* %tmode, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.496
  %225 = load i32, i32* %tmode, align 4
  %226 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %227 = bitcast %struct.rtx_def* %226 to i32*
  %bf.load504 = load i32, i32* %227, align 8
  %bf.lshr505 = lshr i32 %bf.load504, 16
  %bf.clear506 = and i32 %bf.lshr505, 255
  %cmp507 = icmp ne i32 %225, %bf.clear506
  br i1 %cmp507, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %228 = load i64, i64* %c0, align 8
  %229 = load i32, i32* %tmode, align 4
  %idxprom509 = sext i32 %229 to i64
  %arrayidx510 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom509
  %230 = load i64, i64* %arrayidx510, align 8
  %cmp511 = icmp eq i64 %228, %230
  br i1 %cmp511, label %if.then.513, label %if.end.517

if.then.513:                                      ; preds = %for.body
  %231 = load i32, i32* %tmode, align 4
  %232 = load %struct.rtx_def*, %struct.rtx_def** %inner_op0, align 8
  %call514 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %231, %struct.rtx_def* %232)
  store %struct.rtx_def* %call514, %struct.rtx_def** %op0, align 8
  %233 = load i32, i32* %tmode, align 4
  %234 = load %struct.rtx_def*, %struct.rtx_def** %inner_op1, align 8
  %call515 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %233, %struct.rtx_def* %234)
  store %struct.rtx_def* %call515, %struct.rtx_def** %op1, align 8
  %235 = load i32, i32* %code.addr, align 4
  %call516 = call i32 @unsigned_condition(i32 %235)
  store i32 %call516, i32* %code.addr, align 4
  store i32 1, i32* %changed, align 4
  br label %for.end

if.end.517:                                       ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.517
  %236 = load i32, i32* %tmode, align 4
  %idxprom518 = sext i32 %236 to i64
  %arrayidx519 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_wider_mode, i32 0, i64 %idxprom518
  %237 = load i8, i8* %arrayidx519, align 1
  %conv520 = zext i8 %237 to i32
  store i32 %conv520, i32* %tmode, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then.513, %for.cond
  br label %if.end.521

if.end.521:                                       ; preds = %for.end, %if.else.493
  br label %if.end.522

if.end.522:                                       ; preds = %if.end.521, %if.then.485
  %238 = load i32, i32* %changed, align 4
  %tobool = icmp ne i32 %238, 0
  br i1 %tobool, label %if.end.524, label %if.then.523

if.then.523:                                      ; preds = %if.end.522
  br label %while.end

if.end.524:                                       ; preds = %if.end.522
  br label %if.end.561

if.else.525:                                      ; preds = %land.lhs.true.374, %land.lhs.true.366, %land.lhs.true.361, %if.else.356
  %239 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %240 = bitcast %struct.rtx_def* %239 to i32*
  %bf.load526 = load i32, i32* %240, align 8
  %bf.clear527 = and i32 %bf.load526, 65535
  %cmp528 = icmp eq i32 %bf.clear527, 86
  br i1 %cmp528, label %land.lhs.true.530, label %lor.lhs.false.535

land.lhs.true.530:                                ; preds = %if.else.525
  %241 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %242 = bitcast %struct.rtx_def* %241 to i32*
  %bf.load531 = load i32, i32* %242, align 8
  %bf.clear532 = and i32 %bf.load531, 65535
  %cmp533 = icmp eq i32 %bf.clear532, 86
  br i1 %cmp533, label %if.then.551, label %lor.lhs.false.535

lor.lhs.false.535:                                ; preds = %land.lhs.true.530, %if.else.525
  %243 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %244 = bitcast %struct.rtx_def* %243 to i32*
  %bf.load536 = load i32, i32* %244, align 8
  %bf.clear537 = and i32 %bf.load536, 65535
  %cmp538 = icmp eq i32 %bf.clear537, 77
  br i1 %cmp538, label %land.lhs.true.540, label %if.else.559

land.lhs.true.540:                                ; preds = %lor.lhs.false.535
  %245 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %246 = bitcast %struct.rtx_def* %245 to i32*
  %bf.load541 = load i32, i32* %246, align 8
  %bf.clear542 = and i32 %bf.load541, 65535
  %cmp543 = icmp eq i32 %bf.clear542, 77
  br i1 %cmp543, label %land.lhs.true.545, label %if.else.559

land.lhs.true.545:                                ; preds = %land.lhs.true.540
  %247 = load i32, i32* %code.addr, align 4
  %cmp546 = icmp eq i32 %247, 103
  br i1 %cmp546, label %if.then.551, label %lor.lhs.false.548

lor.lhs.false.548:                                ; preds = %land.lhs.true.545
  %248 = load i32, i32* %code.addr, align 4
  %cmp549 = icmp eq i32 %248, 102
  br i1 %cmp549, label %if.then.551, label %if.else.559

if.then.551:                                      ; preds = %lor.lhs.false.548, %land.lhs.true.545, %land.lhs.true.530
  %249 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld552 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %249, i32 0, i32 1
  %arrayidx553 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld552, i32 0, i64 0
  %rtx554 = bitcast %union.rtunion_def* %arrayidx553 to %struct.rtx_def**
  %250 = load %struct.rtx_def*, %struct.rtx_def** %rtx554, align 8
  store %struct.rtx_def* %250, %struct.rtx_def** %op0, align 8
  %251 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld555 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %251, i32 0, i32 1
  %arrayidx556 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld555, i32 0, i64 0
  %rtx557 = bitcast %union.rtunion_def* %arrayidx556 to %struct.rtx_def**
  %252 = load %struct.rtx_def*, %struct.rtx_def** %rtx557, align 8
  store %struct.rtx_def* %252, %struct.rtx_def** %op1, align 8
  %253 = load i32, i32* %code.addr, align 4
  %call558 = call i32 @swap_condition(i32 %253)
  store i32 %call558, i32* %code.addr, align 4
  br label %if.end.560

if.else.559:                                      ; preds = %lor.lhs.false.548, %land.lhs.true.540, %lor.lhs.false.535
  br label %while.end

if.end.560:                                       ; preds = %if.then.551
  br label %if.end.561

if.end.561:                                       ; preds = %if.end.560, %if.end.524
  br label %if.end.562

if.end.562:                                       ; preds = %if.end.561, %if.end.355
  br label %while.body

while.end:                                        ; preds = %if.else.559, %if.then.523, %if.else.354
  %254 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %255 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call563 = call i32 @swap_commutative_operands_p(%struct.rtx_def* %254, %struct.rtx_def* %255)
  %tobool564 = icmp ne i32 %call563, 0
  br i1 %tobool564, label %if.then.565, label %if.end.567

if.then.565:                                      ; preds = %while.end
  %256 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  store %struct.rtx_def* %256, %struct.rtx_def** %tem, align 8
  %257 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  store %struct.rtx_def* %257, %struct.rtx_def** %op0, align 8
  %258 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %258, %struct.rtx_def** %op1, align 8
  %259 = load i32, i32* %code.addr, align 4
  %call566 = call i32 @swap_condition(i32 %259)
  store i32 %call566, i32* %code.addr, align 4
  br label %if.end.567

if.end.567:                                       ; preds = %if.then.565, %while.end
  br label %while.cond

while.cond:                                       ; preds = %lor.end.2425, %if.end.2378, %if.then.2271, %if.then.2185, %if.then.2120, %if.then.2101, %if.then.2059, %if.then.2030, %if.then.1943, %if.then.1892, %if.then.1746, %if.then.1704, %if.then.1665, %if.then.1539, %if.then.1509, %if.then.1475, %if.then.1372, %if.then.1355, %if.then.1304, %if.then.1291, %if.then.1271, %if.then.1248, %if.then.1234, %if.then.1185, %if.then.1073, %if.then.1039, %if.then.1015, %if.then.995, %if.then.972, %if.then.961, %if.then.929, %if.then.915, %if.then.909, %if.then.901, %if.then.888, %if.end.567
  %260 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %261 = bitcast %struct.rtx_def* %260 to i32*
  %bf.load568 = load i32, i32* %261, align 8
  %bf.clear569 = and i32 %bf.load568, 65535
  %cmp570 = icmp eq i32 %bf.clear569, 54
  br i1 %cmp570, label %while.body.572, label %while.end.2431

while.body.572:                                   ; preds = %while.cond
  %262 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %263 = bitcast %struct.rtx_def* %262 to i32*
  %bf.load574 = load i32, i32* %263, align 8
  %bf.lshr575 = lshr i32 %bf.load574, 16
  %bf.clear576 = and i32 %bf.lshr575, 255
  store i32 %bf.clear576, i32* %mode573, align 4
  %264 = load i32, i32* %mode573, align 4
  %idxprom577 = sext i32 %264 to i64
  %arrayidx578 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom577
  %265 = load i16, i16* %arrayidx578, align 2
  %conv579 = zext i16 %265 to i32
  store i32 %conv579, i32* %mode_width, align 4
  %266 = load i32, i32* %mode573, align 4
  %idxprom581 = sext i32 %266 to i64
  %arrayidx582 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom581
  %267 = load i64, i64* %arrayidx582, align 8
  store i64 %267, i64* %mask580, align 8
  %268 = load i32, i32* %mode573, align 4
  %idxprom583 = sext i32 %268 to i64
  %arrayidx584 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom583
  %269 = load i32, i32* %arrayidx584, align 4
  %cmp585 = icmp ne i32 %269, 1
  br i1 %cmp585, label %land.lhs.true.587, label %if.end.604

land.lhs.true.587:                                ; preds = %while.body.572
  %270 = load i32, i32* %mode573, align 4
  %cmp588 = icmp eq i32 %270, 0
  br i1 %cmp588, label %land.lhs.true.590, label %if.then.603

land.lhs.true.590:                                ; preds = %land.lhs.true.587
  %271 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %272 = bitcast %struct.rtx_def* %271 to i32*
  %bf.load591 = load i32, i32* %272, align 8
  %bf.clear592 = and i32 %bf.load591, 65535
  %cmp593 = icmp eq i32 %bf.clear592, 74
  br i1 %cmp593, label %if.end.604, label %lor.lhs.false.595

lor.lhs.false.595:                                ; preds = %land.lhs.true.590
  %273 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %274 = bitcast %struct.rtx_def* %273 to i32*
  %bf.load596 = load i32, i32* %274, align 8
  %bf.clear597 = and i32 %bf.load596, 65535
  %idxprom598 = sext i32 %bf.clear597 to i64
  %arrayidx599 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom598
  %275 = load i8, i8* %arrayidx599, align 1
  %conv600 = sext i8 %275 to i32
  %cmp601 = icmp eq i32 %conv600, 60
  br i1 %cmp601, label %if.end.604, label %if.then.603

if.then.603:                                      ; preds = %lor.lhs.false.595, %land.lhs.true.587
  br label %while.end.2431

if.end.604:                                       ; preds = %lor.lhs.false.595, %land.lhs.true.590, %while.body.572
  %276 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld605 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %276, i32 0, i32 1
  %arrayidx606 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld605, i32 0, i64 0
  %rtwint607 = bitcast %union.rtunion_def* %arrayidx606 to i64*
  %277 = load i64, i64* %rtwint607, align 8
  %278 = load i32, i32* %mode573, align 4
  %call608 = call i64 @trunc_int_for_mode(i64 %277, i32 %278)
  store i64 %call608, i64* %const_op, align 8
  %279 = load i64, i64* %const_op, align 8
  %call609 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %279)
  store %struct.rtx_def* %call609, %struct.rtx_def** %op1, align 8
  %280 = load i64, i64* %const_op, align 8
  %tobool610 = icmp ne i64 %280, 0
  br i1 %tobool610, label %land.lhs.true.611, label %if.end.648

land.lhs.true.611:                                ; preds = %if.end.604
  %281 = load i32, i32* %code.addr, align 4
  %cmp612 = icmp eq i32 %281, 103
  br i1 %cmp612, label %land.lhs.true.629, label %lor.lhs.false.614

lor.lhs.false.614:                                ; preds = %land.lhs.true.611
  %282 = load i32, i32* %code.addr, align 4
  %cmp615 = icmp eq i32 %282, 102
  br i1 %cmp615, label %land.lhs.true.629, label %lor.lhs.false.617

lor.lhs.false.617:                                ; preds = %lor.lhs.false.614
  %283 = load i32, i32* %code.addr, align 4
  %cmp618 = icmp eq i32 %283, 104
  br i1 %cmp618, label %land.lhs.true.629, label %lor.lhs.false.620

lor.lhs.false.620:                                ; preds = %lor.lhs.false.617
  %284 = load i32, i32* %code.addr, align 4
  %cmp621 = icmp eq i32 %284, 108
  br i1 %cmp621, label %land.lhs.true.629, label %lor.lhs.false.623

lor.lhs.false.623:                                ; preds = %lor.lhs.false.620
  %285 = load i32, i32* %code.addr, align 4
  %cmp624 = icmp eq i32 %285, 107
  br i1 %cmp624, label %land.lhs.true.629, label %lor.lhs.false.626

lor.lhs.false.626:                                ; preds = %lor.lhs.false.623
  %286 = load i32, i32* %code.addr, align 4
  %cmp627 = icmp eq i32 %286, 111
  br i1 %cmp627, label %land.lhs.true.629, label %if.end.648

land.lhs.true.629:                                ; preds = %lor.lhs.false.626, %lor.lhs.false.623, %lor.lhs.false.620, %lor.lhs.false.617, %lor.lhs.false.614, %land.lhs.true.611
  %287 = load i32, i32* %mode_width, align 4
  %cmp630 = icmp ule i32 %287, 64
  br i1 %cmp630, label %land.lhs.true.632, label %if.end.648

land.lhs.true.632:                                ; preds = %land.lhs.true.629
  %288 = load i64, i64* %const_op, align 8
  %call633 = call i32 @exact_log2_wide(i64 %288)
  %cmp634 = icmp sge i32 %call633, 0
  br i1 %cmp634, label %land.lhs.true.636, label %if.end.648

land.lhs.true.636:                                ; preds = %land.lhs.true.632
  %289 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %290 = load i32, i32* %mode573, align 4
  %call637 = call i64 @nonzero_bits(%struct.rtx_def* %289, i32 %290)
  %291 = load i64, i64* %const_op, align 8
  %cmp638 = icmp eq i64 %call637, %291
  br i1 %cmp638, label %if.then.640, label %if.end.648

if.then.640:                                      ; preds = %land.lhs.true.636
  %292 = load i32, i32* %code.addr, align 4
  %cmp641 = icmp eq i32 %292, 103
  br i1 %cmp641, label %lor.end, label %lor.lhs.false.643

lor.lhs.false.643:                                ; preds = %if.then.640
  %293 = load i32, i32* %code.addr, align 4
  %cmp644 = icmp eq i32 %293, 104
  br i1 %cmp644, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.643
  %294 = load i32, i32* %code.addr, align 4
  %cmp646 = icmp eq i32 %294, 108
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.643, %if.then.640
  %295 = phi i1 [ true, %lor.lhs.false.643 ], [ true, %if.then.640 ], [ %cmp646, %lor.rhs ]
  %cond = select i1 %295, i32 102, i32 103
  store i32 %cond, i32* %code.addr, align 4
  %296 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %296, %struct.rtx_def** %op1, align 8
  store i64 0, i64* %const_op, align 8
  br label %if.end.648

if.end.648:                                       ; preds = %lor.end, %land.lhs.true.636, %land.lhs.true.632, %land.lhs.true.629, %lor.lhs.false.626, %if.end.604
  %297 = load i64, i64* %const_op, align 8
  %cmp649 = icmp eq i64 %297, -1
  br i1 %cmp649, label %land.lhs.true.651, label %if.end.684

land.lhs.true.651:                                ; preds = %if.end.648
  %298 = load i32, i32* %code.addr, align 4
  %cmp652 = icmp eq i32 %298, 103
  br i1 %cmp652, label %land.lhs.true.669, label %lor.lhs.false.654

lor.lhs.false.654:                                ; preds = %land.lhs.true.651
  %299 = load i32, i32* %code.addr, align 4
  %cmp655 = icmp eq i32 %299, 102
  br i1 %cmp655, label %land.lhs.true.669, label %lor.lhs.false.657

lor.lhs.false.657:                                ; preds = %lor.lhs.false.654
  %300 = load i32, i32* %code.addr, align 4
  %cmp658 = icmp eq i32 %300, 105
  br i1 %cmp658, label %land.lhs.true.669, label %lor.lhs.false.660

lor.lhs.false.660:                                ; preds = %lor.lhs.false.657
  %301 = load i32, i32* %code.addr, align 4
  %cmp661 = icmp eq i32 %301, 106
  br i1 %cmp661, label %land.lhs.true.669, label %lor.lhs.false.663

lor.lhs.false.663:                                ; preds = %lor.lhs.false.660
  %302 = load i32, i32* %code.addr, align 4
  %cmp664 = icmp eq i32 %302, 108
  br i1 %cmp664, label %land.lhs.true.669, label %lor.lhs.false.666

lor.lhs.false.666:                                ; preds = %lor.lhs.false.663
  %303 = load i32, i32* %code.addr, align 4
  %cmp667 = icmp eq i32 %303, 111
  br i1 %cmp667, label %land.lhs.true.669, label %if.end.684

land.lhs.true.669:                                ; preds = %lor.lhs.false.666, %lor.lhs.false.663, %lor.lhs.false.660, %lor.lhs.false.657, %lor.lhs.false.654, %land.lhs.true.651
  %304 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %305 = load i32, i32* %mode573, align 4
  %call670 = call i32 @num_sign_bit_copies(%struct.rtx_def* %304, i32 %305)
  %306 = load i32, i32* %mode_width, align 4
  %cmp671 = icmp eq i32 %call670, %306
  br i1 %cmp671, label %if.then.673, label %if.end.684

if.then.673:                                      ; preds = %land.lhs.true.669
  %307 = load i32, i32* %code.addr, align 4
  %cmp674 = icmp eq i32 %307, 103
  br i1 %cmp674, label %lor.end.682, label %lor.lhs.false.676

lor.lhs.false.676:                                ; preds = %if.then.673
  %308 = load i32, i32* %code.addr, align 4
  %cmp677 = icmp eq i32 %308, 106
  br i1 %cmp677, label %lor.end.682, label %lor.rhs.679

lor.rhs.679:                                      ; preds = %lor.lhs.false.676
  %309 = load i32, i32* %code.addr, align 4
  %cmp680 = icmp eq i32 %309, 108
  br label %lor.end.682

lor.end.682:                                      ; preds = %lor.rhs.679, %lor.lhs.false.676, %if.then.673
  %310 = phi i1 [ true, %lor.lhs.false.676 ], [ true, %if.then.673 ], [ %cmp680, %lor.rhs.679 ]
  %cond683 = select i1 %310, i32 102, i32 103
  store i32 %cond683, i32* %code.addr, align 4
  %311 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %311, %struct.rtx_def** %op1, align 8
  store i64 0, i64* %const_op, align 8
  br label %if.end.684

if.end.684:                                       ; preds = %lor.end.682, %land.lhs.true.669, %lor.lhs.false.666, %if.end.648
  %312 = load i32, i32* %code.addr, align 4
  switch i32 %312, label %sw.default [
    i32 107, label %sw.bb
    i32 106, label %sw.bb.692
    i32 104, label %sw.bb.714
    i32 105, label %sw.bb.722
    i32 111, label %sw.bb.745
    i32 110, label %sw.bb.763
    i32 108, label %sw.bb.780
    i32 109, label %sw.bb.798
  ]

sw.bb:                                            ; preds = %if.end.684
  %313 = load i64, i64* %const_op, align 8
  %cmp685 = icmp sgt i64 %313, 0
  br i1 %cmp685, label %if.then.687, label %if.else.690

if.then.687:                                      ; preds = %sw.bb
  %314 = load i64, i64* %const_op, align 8
  %sub688 = sub nsw i64 %314, 1
  store i64 %sub688, i64* %const_op, align 8
  %315 = load i64, i64* %const_op, align 8
  %call689 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %315)
  store %struct.rtx_def* %call689, %struct.rtx_def** %op1, align 8
  store i32 106, i32* %code.addr, align 4
  br label %if.end.691

if.else.690:                                      ; preds = %sw.bb
  br label %sw.epilog

if.end.691:                                       ; preds = %if.then.687
  br label %sw.bb.692

sw.bb.692:                                        ; preds = %if.end.684, %if.end.691
  %316 = load i64, i64* %const_op, align 8
  %cmp693 = icmp slt i64 %316, 0
  br i1 %cmp693, label %if.then.695, label %if.else.697

if.then.695:                                      ; preds = %sw.bb.692
  %317 = load i64, i64* %const_op, align 8
  %add = add nsw i64 %317, 1
  store i64 %add, i64* %const_op, align 8
  %318 = load i64, i64* %const_op, align 8
  %call696 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %318)
  store %struct.rtx_def* %call696, %struct.rtx_def** %op1, align 8
  store i32 107, i32* %code.addr, align 4
  br label %if.end.713

if.else.697:                                      ; preds = %sw.bb.692
  %319 = load i64, i64* %const_op, align 8
  %cmp698 = icmp eq i64 %319, 0
  br i1 %cmp698, label %land.lhs.true.700, label %if.end.712

land.lhs.true.700:                                ; preds = %if.else.697
  %320 = load i32, i32* %mode_width, align 4
  %cmp701 = icmp ule i32 %320, 64
  br i1 %cmp701, label %land.lhs.true.703, label %if.end.712

land.lhs.true.703:                                ; preds = %land.lhs.true.700
  %321 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %322 = load i32, i32* %mode573, align 4
  %call704 = call i64 @nonzero_bits(%struct.rtx_def* %321, i32 %322)
  %323 = load i32, i32* %mode_width, align 4
  %sub705 = sub i32 %323, 1
  %sh_prom706 = zext i32 %sub705 to i64
  %shl707 = shl i64 1, %sh_prom706
  %and708 = and i64 %call704, %shl707
  %cmp709 = icmp eq i64 %and708, 0
  br i1 %cmp709, label %if.then.711, label %if.end.712

if.then.711:                                      ; preds = %land.lhs.true.703
  store i32 103, i32* %code.addr, align 4
  br label %if.end.712

if.end.712:                                       ; preds = %if.then.711, %land.lhs.true.703, %land.lhs.true.700, %if.else.697
  br label %if.end.713

if.end.713:                                       ; preds = %if.end.712, %if.then.695
  br label %sw.epilog

sw.bb.714:                                        ; preds = %if.end.684
  %324 = load i64, i64* %const_op, align 8
  %cmp715 = icmp sgt i64 %324, 0
  br i1 %cmp715, label %if.then.717, label %if.else.720

if.then.717:                                      ; preds = %sw.bb.714
  %325 = load i64, i64* %const_op, align 8
  %sub718 = sub nsw i64 %325, 1
  store i64 %sub718, i64* %const_op, align 8
  %326 = load i64, i64* %const_op, align 8
  %call719 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %326)
  store %struct.rtx_def* %call719, %struct.rtx_def** %op1, align 8
  store i32 105, i32* %code.addr, align 4
  br label %if.end.721

if.else.720:                                      ; preds = %sw.bb.714
  br label %sw.epilog

if.end.721:                                       ; preds = %if.then.717
  br label %sw.bb.722

sw.bb.722:                                        ; preds = %if.end.684, %if.end.721
  %327 = load i64, i64* %const_op, align 8
  %cmp723 = icmp slt i64 %327, 0
  br i1 %cmp723, label %if.then.725, label %if.else.728

if.then.725:                                      ; preds = %sw.bb.722
  %328 = load i64, i64* %const_op, align 8
  %add726 = add nsw i64 %328, 1
  store i64 %add726, i64* %const_op, align 8
  %329 = load i64, i64* %const_op, align 8
  %call727 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %329)
  store %struct.rtx_def* %call727, %struct.rtx_def** %op1, align 8
  store i32 104, i32* %code.addr, align 4
  br label %if.end.744

if.else.728:                                      ; preds = %sw.bb.722
  %330 = load i64, i64* %const_op, align 8
  %cmp729 = icmp eq i64 %330, 0
  br i1 %cmp729, label %land.lhs.true.731, label %if.end.743

land.lhs.true.731:                                ; preds = %if.else.728
  %331 = load i32, i32* %mode_width, align 4
  %cmp732 = icmp ule i32 %331, 64
  br i1 %cmp732, label %land.lhs.true.734, label %if.end.743

land.lhs.true.734:                                ; preds = %land.lhs.true.731
  %332 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %333 = load i32, i32* %mode573, align 4
  %call735 = call i64 @nonzero_bits(%struct.rtx_def* %332, i32 %333)
  %334 = load i32, i32* %mode_width, align 4
  %sub736 = sub i32 %334, 1
  %sh_prom737 = zext i32 %sub736 to i64
  %shl738 = shl i64 1, %sh_prom737
  %and739 = and i64 %call735, %shl738
  %cmp740 = icmp eq i64 %and739, 0
  br i1 %cmp740, label %if.then.742, label %if.end.743

if.then.742:                                      ; preds = %land.lhs.true.734
  store i32 102, i32* %code.addr, align 4
  br label %if.end.743

if.end.743:                                       ; preds = %if.then.742, %land.lhs.true.734, %land.lhs.true.731, %if.else.728
  br label %if.end.744

if.end.744:                                       ; preds = %if.end.743, %if.then.725
  br label %sw.epilog

sw.bb.745:                                        ; preds = %if.end.684
  %335 = load i64, i64* %const_op, align 8
  %cmp746 = icmp sgt i64 %335, 0
  br i1 %cmp746, label %if.then.748, label %if.else.751

if.then.748:                                      ; preds = %sw.bb.745
  %336 = load i64, i64* %const_op, align 8
  %sub749 = sub nsw i64 %336, 1
  store i64 %sub749, i64* %const_op, align 8
  %337 = load i64, i64* %const_op, align 8
  %call750 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %337)
  store %struct.rtx_def* %call750, %struct.rtx_def** %op1, align 8
  store i32 110, i32* %code.addr, align 4
  br label %if.end.762

if.else.751:                                      ; preds = %sw.bb.745
  %338 = load i32, i32* %mode_width, align 4
  %cmp752 = icmp ule i32 %338, 64
  br i1 %cmp752, label %land.lhs.true.754, label %if.else.761

land.lhs.true.754:                                ; preds = %if.else.751
  %339 = load i64, i64* %const_op, align 8
  %340 = load i32, i32* %mode_width, align 4
  %sub755 = sub i32 %340, 1
  %sh_prom756 = zext i32 %sub755 to i64
  %shl757 = shl i64 1, %sh_prom756
  %cmp758 = icmp eq i64 %339, %shl757
  br i1 %cmp758, label %if.then.760, label %if.else.761

if.then.760:                                      ; preds = %land.lhs.true.754
  store i64 0, i64* %const_op, align 8
  %341 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %341, %struct.rtx_def** %op1, align 8
  store i32 104, i32* %code.addr, align 4
  br label %sw.epilog

if.else.761:                                      ; preds = %land.lhs.true.754, %if.else.751
  br label %sw.epilog

if.end.762:                                       ; preds = %if.then.748
  br label %sw.bb.763

sw.bb.763:                                        ; preds = %if.end.684, %if.end.762
  %342 = load i64, i64* %const_op, align 8
  %cmp764 = icmp eq i64 %342, 0
  br i1 %cmp764, label %if.then.766, label %if.else.767

if.then.766:                                      ; preds = %sw.bb.763
  store i32 103, i32* %code.addr, align 4
  br label %if.end.779

if.else.767:                                      ; preds = %sw.bb.763
  %343 = load i32, i32* %mode_width, align 4
  %cmp768 = icmp ule i32 %343, 64
  br i1 %cmp768, label %land.lhs.true.770, label %if.end.778

land.lhs.true.770:                                ; preds = %if.else.767
  %344 = load i64, i64* %const_op, align 8
  %345 = load i32, i32* %mode_width, align 4
  %sub771 = sub i32 %345, 1
  %sh_prom772 = zext i32 %sub771 to i64
  %shl773 = shl i64 1, %sh_prom772
  %sub774 = sub nsw i64 %shl773, 1
  %cmp775 = icmp eq i64 %344, %sub774
  br i1 %cmp775, label %if.then.777, label %if.end.778

if.then.777:                                      ; preds = %land.lhs.true.770
  store i64 0, i64* %const_op, align 8
  %346 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %346, %struct.rtx_def** %op1, align 8
  store i32 104, i32* %code.addr, align 4
  br label %if.end.778

if.end.778:                                       ; preds = %if.then.777, %land.lhs.true.770, %if.else.767
  br label %if.end.779

if.end.779:                                       ; preds = %if.end.778, %if.then.766
  br label %sw.epilog

sw.bb.780:                                        ; preds = %if.end.684
  %347 = load i64, i64* %const_op, align 8
  %cmp781 = icmp sgt i64 %347, 1
  br i1 %cmp781, label %if.then.783, label %if.else.786

if.then.783:                                      ; preds = %sw.bb.780
  %348 = load i64, i64* %const_op, align 8
  %sub784 = sub nsw i64 %348, 1
  store i64 %sub784, i64* %const_op, align 8
  %349 = load i64, i64* %const_op, align 8
  %call785 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %349)
  store %struct.rtx_def* %call785, %struct.rtx_def** %op1, align 8
  store i32 109, i32* %code.addr, align 4
  br label %if.end.797

if.else.786:                                      ; preds = %sw.bb.780
  %350 = load i32, i32* %mode_width, align 4
  %cmp787 = icmp ule i32 %350, 64
  br i1 %cmp787, label %land.lhs.true.789, label %if.else.796

land.lhs.true.789:                                ; preds = %if.else.786
  %351 = load i64, i64* %const_op, align 8
  %352 = load i32, i32* %mode_width, align 4
  %sub790 = sub i32 %352, 1
  %sh_prom791 = zext i32 %sub790 to i64
  %shl792 = shl i64 1, %sh_prom791
  %cmp793 = icmp eq i64 %351, %shl792
  br i1 %cmp793, label %if.then.795, label %if.else.796

if.then.795:                                      ; preds = %land.lhs.true.789
  store i64 0, i64* %const_op, align 8
  %353 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %353, %struct.rtx_def** %op1, align 8
  store i32 107, i32* %code.addr, align 4
  br label %sw.epilog

if.else.796:                                      ; preds = %land.lhs.true.789, %if.else.786
  br label %sw.epilog

if.end.797:                                       ; preds = %if.then.783
  br label %sw.bb.798

sw.bb.798:                                        ; preds = %if.end.684, %if.end.797
  %354 = load i64, i64* %const_op, align 8
  %cmp799 = icmp eq i64 %354, 0
  br i1 %cmp799, label %if.then.801, label %if.else.802

if.then.801:                                      ; preds = %sw.bb.798
  store i32 102, i32* %code.addr, align 4
  br label %if.end.814

if.else.802:                                      ; preds = %sw.bb.798
  %355 = load i32, i32* %mode_width, align 4
  %cmp803 = icmp ule i32 %355, 64
  br i1 %cmp803, label %land.lhs.true.805, label %if.end.813

land.lhs.true.805:                                ; preds = %if.else.802
  %356 = load i64, i64* %const_op, align 8
  %357 = load i32, i32* %mode_width, align 4
  %sub806 = sub i32 %357, 1
  %sh_prom807 = zext i32 %sub806 to i64
  %shl808 = shl i64 1, %sh_prom807
  %sub809 = sub nsw i64 %shl808, 1
  %cmp810 = icmp eq i64 %356, %sub809
  br i1 %cmp810, label %if.then.812, label %if.end.813

if.then.812:                                      ; preds = %land.lhs.true.805
  store i64 0, i64* %const_op, align 8
  %358 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %358, %struct.rtx_def** %op1, align 8
  store i32 107, i32* %code.addr, align 4
  br label %if.end.813

if.end.813:                                       ; preds = %if.then.812, %land.lhs.true.805, %if.else.802
  br label %if.end.814

if.end.814:                                       ; preds = %if.end.813, %if.then.801
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.684
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.814, %if.else.796, %if.then.795, %if.end.779, %if.else.761, %if.then.760, %if.end.744, %if.else.720, %if.end.713, %if.else.690
  %359 = load i32, i32* %code.addr, align 4
  %cmp815 = icmp eq i32 %359, 103
  br i1 %cmp815, label %lor.end.820, label %lor.rhs.817

lor.rhs.817:                                      ; preds = %sw.epilog
  %360 = load i32, i32* %code.addr, align 4
  %cmp818 = icmp eq i32 %360, 102
  br label %lor.end.820

lor.end.820:                                      ; preds = %lor.rhs.817, %sw.epilog
  %361 = phi i1 [ true, %sw.epilog ], [ %cmp818, %lor.rhs.817 ]
  %lor.ext = zext i1 %361 to i32
  store i32 %lor.ext, i32* %equality_comparison_p, align 4
  %362 = load i32, i32* %code.addr, align 4
  %cmp821 = icmp eq i32 %362, 107
  br i1 %cmp821, label %land.rhs, label %lor.lhs.false.823

lor.lhs.false.823:                                ; preds = %lor.end.820
  %363 = load i32, i32* %code.addr, align 4
  %cmp824 = icmp eq i32 %363, 104
  br i1 %cmp824, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.lhs.false.823, %lor.end.820
  %364 = load i64, i64* %const_op, align 8
  %cmp826 = icmp eq i64 %364, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false.823
  %365 = phi i1 [ false, %lor.lhs.false.823 ], [ %cmp826, %land.rhs ]
  %land.ext = zext i1 %365 to i32
  store i32 %land.ext, i32* %sign_bit_comparison_p, align 4
  %366 = load i32, i32* %code.addr, align 4
  %cmp828 = icmp eq i32 %366, 111
  br i1 %cmp828, label %lor.end.839, label %lor.lhs.false.830

lor.lhs.false.830:                                ; preds = %land.end
  %367 = load i32, i32* %code.addr, align 4
  %cmp831 = icmp eq i32 %367, 110
  br i1 %cmp831, label %lor.end.839, label %lor.lhs.false.833

lor.lhs.false.833:                                ; preds = %lor.lhs.false.830
  %368 = load i32, i32* %code.addr, align 4
  %cmp834 = icmp eq i32 %368, 109
  br i1 %cmp834, label %lor.end.839, label %lor.rhs.836

lor.rhs.836:                                      ; preds = %lor.lhs.false.833
  %369 = load i32, i32* %code.addr, align 4
  %cmp837 = icmp eq i32 %369, 108
  br label %lor.end.839

lor.end.839:                                      ; preds = %lor.rhs.836, %lor.lhs.false.833, %lor.lhs.false.830, %land.end
  %370 = phi i1 [ true, %lor.lhs.false.833 ], [ true, %lor.lhs.false.830 ], [ true, %land.end ], [ %cmp837, %lor.rhs.836 ]
  %lor.ext840 = zext i1 %370 to i32
  store i32 %lor.ext840, i32* %unsigned_comparison_p, align 4
  %371 = load i32, i32* %sign_bit_comparison_p, align 4
  %tobool841 = icmp ne i32 %371, 0
  br i1 %tobool841, label %land.lhs.true.842, label %if.end.856

land.lhs.true.842:                                ; preds = %lor.end.839
  %372 = load i32, i32* %mode573, align 4
  %idxprom843 = sext i32 %372 to i64
  %arrayidx844 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom843
  %373 = load i16, i16* %arrayidx844, align 2
  %conv845 = zext i16 %373 to i32
  %cmp846 = icmp sle i32 %conv845, 64
  br i1 %cmp846, label %if.then.848, label %if.end.856

if.then.848:                                      ; preds = %land.lhs.true.842
  %374 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %375 = load i32, i32* %mode573, align 4
  %376 = load i32, i32* %mode573, align 4
  %idxprom849 = sext i32 %376 to i64
  %arrayidx850 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom849
  %377 = load i16, i16* %arrayidx850, align 2
  %conv851 = zext i16 %377 to i32
  %sub852 = sub nsw i32 %conv851, 1
  %sh_prom853 = zext i32 %sub852 to i64
  %shl854 = shl i64 1, %sh_prom853
  %call855 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %374, i32 %375, i64 %shl854, %struct.rtx_def* null, i32 0)
  store %struct.rtx_def* %call855, %struct.rtx_def** %op0, align 8
  br label %if.end.856

if.end.856:                                       ; preds = %if.then.848, %land.lhs.true.842, %lor.end.839
  %378 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %379 = bitcast %struct.rtx_def* %378 to i32*
  %bf.load857 = load i32, i32* %379, align 8
  %bf.clear858 = and i32 %bf.load857, 65535
  switch i32 %bf.clear858, label %sw.default.2429 [
    i32 133, label %sw.bb.859
    i32 132, label %sw.bb.897
    i32 86, label %sw.bb.903
    i32 77, label %sw.bb.923
    i32 88, label %sw.bb.978
    i32 129, label %sw.bb.1034
    i32 120, label %sw.bb.1044
    i32 63, label %sw.bb.1078
    i32 121, label %sw.bb.1207
    i32 75, label %sw.bb.1239
    i32 76, label %sw.bb.1282
    i32 85, label %sw.bb.1363
    i32 103, label %sw.bb.1377
    i32 102, label %sw.bb.1377
    i32 114, label %sw.bb.1377
    i32 119, label %sw.bb.1377
    i32 107, label %sw.bb.1377
    i32 111, label %sw.bb.1377
    i32 118, label %sw.bb.1377
    i32 106, label %sw.bb.1377
    i32 110, label %sw.bb.1377
    i32 117, label %sw.bb.1377
    i32 105, label %sw.bb.1377
    i32 109, label %sw.bb.1377
    i32 116, label %sw.bb.1377
    i32 104, label %sw.bb.1377
    i32 108, label %sw.bb.1377
    i32 115, label %sw.bb.1377
    i32 112, label %sw.bb.1377
    i32 113, label %sw.bb.1377
    i32 84, label %sw.bb.1478
    i32 83, label %sw.bb.1517
    i32 87, label %sw.bb.1965
    i32 89, label %sw.bb.2107
    i32 90, label %sw.bb.2297
  ]

sw.bb.859:                                        ; preds = %if.end.856
  %380 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld860 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %380, i32 0, i32 1
  %arrayidx861 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld860, i32 0, i64 0
  %rtx862 = bitcast %union.rtunion_def* %arrayidx861 to %struct.rtx_def**
  %381 = load %struct.rtx_def*, %struct.rtx_def** %rtx862, align 8
  %382 = bitcast %struct.rtx_def* %381 to i32*
  %bf.load863 = load i32, i32* %382, align 8
  %bf.clear864 = and i32 %bf.load863, 65535
  %cmp865 = icmp eq i32 %bf.clear864, 54
  br i1 %cmp865, label %land.lhs.true.867, label %if.end.896

land.lhs.true.867:                                ; preds = %sw.bb.859
  %383 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld868 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %383, i32 0, i32 1
  %arrayidx869 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld868, i32 0, i64 1
  %rtx870 = bitcast %union.rtunion_def* %arrayidx869 to %struct.rtx_def**
  %384 = load %struct.rtx_def*, %struct.rtx_def** %rtx870, align 8
  %385 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 65), align 8
  %cmp871 = icmp eq %struct.rtx_def* %384, %385
  br i1 %cmp871, label %land.lhs.true.873, label %if.end.896

land.lhs.true.873:                                ; preds = %land.lhs.true.867
  %386 = load i32, i32* %equality_comparison_p, align 4
  %tobool874 = icmp ne i32 %386, 0
  br i1 %tobool874, label %land.lhs.true.875, label %if.end.896

land.lhs.true.875:                                ; preds = %land.lhs.true.873
  %387 = load i64, i64* %const_op, align 8
  %cmp876 = icmp eq i64 %387, 0
  br i1 %cmp876, label %land.lhs.true.878, label %if.end.896

land.lhs.true.878:                                ; preds = %land.lhs.true.875
  %388 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld879 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %388, i32 0, i32 1
  %arrayidx880 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld879, i32 0, i64 0
  %rtx881 = bitcast %union.rtunion_def* %arrayidx880 to %struct.rtx_def**
  %389 = load %struct.rtx_def*, %struct.rtx_def** %rtx881, align 8
  %fld882 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %389, i32 0, i32 1
  %arrayidx883 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld882, i32 0, i64 0
  %rtwint884 = bitcast %union.rtunion_def* %arrayidx883 to i64*
  %390 = load i64, i64* %rtwint884, align 8
  %call885 = call i32 @exact_log2_wide(i64 %390)
  store i32 %call885, i32* %i, align 4
  %cmp886 = icmp sge i32 %call885, 0
  br i1 %cmp886, label %if.then.888, label %if.end.896

if.then.888:                                      ; preds = %land.lhs.true.878
  %391 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld889 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %391, i32 0, i32 1
  %arrayidx890 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld889, i32 0, i64 2
  %rtx891 = bitcast %union.rtunion_def* %arrayidx890 to %struct.rtx_def**
  %392 = load %struct.rtx_def*, %struct.rtx_def** %rtx891, align 8
  store %struct.rtx_def* %392, %struct.rtx_def** %op0, align 8
  %393 = load i32, i32* %i, align 4
  %conv892 = sext i32 %393 to i64
  %call893 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv892)
  store %struct.rtx_def* %call893, %struct.rtx_def** %op1, align 8
  %394 = load i32, i32* %i, align 4
  %conv894 = sext i32 %394 to i64
  store i64 %conv894, i64* %const_op, align 8
  %395 = load i32, i32* %code.addr, align 4
  %call895 = call i32 @reverse_condition(i32 %395)
  store i32 %call895, i32* %code.addr, align 4
  br label %while.cond

if.end.896:                                       ; preds = %land.lhs.true.878, %land.lhs.true.875, %land.lhs.true.873, %land.lhs.true.867, %sw.bb.859
  br label %sw.bb.897

sw.bb.897:                                        ; preds = %if.end.856, %if.end.896
  %396 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call898 = call %struct.rtx_def* @expand_compound_operation(%struct.rtx_def* %396)
  store %struct.rtx_def* %call898, %struct.rtx_def** %tem, align 8
  %397 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %398 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %cmp899 = icmp ne %struct.rtx_def* %397, %398
  br i1 %cmp899, label %if.then.901, label %if.end.902

if.then.901:                                      ; preds = %sw.bb.897
  %399 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %399, %struct.rtx_def** %op0, align 8
  br label %while.cond

if.end.902:                                       ; preds = %sw.bb.897
  br label %sw.epilog.2430

sw.bb.903:                                        ; preds = %if.end.856
  %400 = load i32, i32* %equality_comparison_p, align 4
  %tobool904 = icmp ne i32 %400, 0
  br i1 %tobool904, label %land.lhs.true.905, label %if.end.913

land.lhs.true.905:                                ; preds = %sw.bb.903
  %401 = load i32, i32* %mode573, align 4
  %402 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %403 = load i32, i32* %mode573, align 4
  %call906 = call %struct.rtx_def* @simplify_unary_operation(i32 86, i32 %401, %struct.rtx_def* %402, i32 %403)
  store %struct.rtx_def* %call906, %struct.rtx_def** %tem, align 8
  %cmp907 = icmp ne %struct.rtx_def* %call906, null
  br i1 %cmp907, label %if.then.909, label %if.end.913

if.then.909:                                      ; preds = %land.lhs.true.905
  %404 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld910 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %404, i32 0, i32 1
  %arrayidx911 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld910, i32 0, i64 0
  %rtx912 = bitcast %union.rtunion_def* %arrayidx911 to %struct.rtx_def**
  %405 = load %struct.rtx_def*, %struct.rtx_def** %rtx912, align 8
  store %struct.rtx_def* %405, %struct.rtx_def** %op0, align 8
  %406 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %406, %struct.rtx_def** %op1, align 8
  br label %while.cond

if.end.913:                                       ; preds = %land.lhs.true.905, %sw.bb.903
  %407 = load i32, i32* %sign_bit_comparison_p, align 4
  %tobool914 = icmp ne i32 %407, 0
  br i1 %tobool914, label %if.then.915, label %if.end.922

if.then.915:                                      ; preds = %if.end.913
  %408 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld916 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %408, i32 0, i32 1
  %arrayidx917 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld916, i32 0, i64 0
  %rtx918 = bitcast %union.rtunion_def* %arrayidx917 to %struct.rtx_def**
  %409 = load %struct.rtx_def*, %struct.rtx_def** %rtx918, align 8
  store %struct.rtx_def* %409, %struct.rtx_def** %op0, align 8
  %410 = load i32, i32* %code.addr, align 4
  %cmp919 = icmp eq i32 %410, 104
  %cond921 = select i1 %cmp919, i32 107, i32 104
  store i32 %cond921, i32* %code.addr, align 4
  br label %while.cond

if.end.922:                                       ; preds = %if.end.913
  br label %sw.epilog.2430

sw.bb.923:                                        ; preds = %if.end.856
  %411 = load i32, i32* %equality_comparison_p, align 4
  %tobool924 = icmp ne i32 %411, 0
  br i1 %tobool924, label %land.lhs.true.925, label %if.end.933

land.lhs.true.925:                                ; preds = %sw.bb.923
  %412 = load i32, i32* %mode573, align 4
  %413 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %414 = load i32, i32* %mode573, align 4
  %call926 = call %struct.rtx_def* @simplify_unary_operation(i32 77, i32 %412, %struct.rtx_def* %413, i32 %414)
  store %struct.rtx_def* %call926, %struct.rtx_def** %tem, align 8
  %cmp927 = icmp ne %struct.rtx_def* %call926, null
  br i1 %cmp927, label %if.then.929, label %if.end.933

if.then.929:                                      ; preds = %land.lhs.true.925
  %415 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld930 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %415, i32 0, i32 1
  %arrayidx931 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld930, i32 0, i64 0
  %rtx932 = bitcast %union.rtunion_def* %arrayidx931 to %struct.rtx_def**
  %416 = load %struct.rtx_def*, %struct.rtx_def** %rtx932, align 8
  store %struct.rtx_def* %416, %struct.rtx_def** %op0, align 8
  %417 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %417, %struct.rtx_def** %op1, align 8
  br label %while.cond

if.end.933:                                       ; preds = %land.lhs.true.925, %sw.bb.923
  %418 = load i64, i64* %const_op, align 8
  %cmp934 = icmp ne i64 %418, 0
  br i1 %cmp934, label %if.then.936, label %if.end.937

if.then.936:                                      ; preds = %if.end.933
  br label %sw.epilog.2430

if.end.937:                                       ; preds = %if.end.933
  %419 = load i32, i32* %sign_bit_comparison_p, align 4
  %tobool938 = icmp ne i32 %419, 0
  br i1 %tobool938, label %land.lhs.true.939, label %if.end.968

land.lhs.true.939:                                ; preds = %if.end.937
  %420 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld940 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %420, i32 0, i32 1
  %arrayidx941 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld940, i32 0, i64 0
  %rtx942 = bitcast %union.rtunion_def* %arrayidx941 to %struct.rtx_def**
  %421 = load %struct.rtx_def*, %struct.rtx_def** %rtx942, align 8
  %422 = bitcast %struct.rtx_def* %421 to i32*
  %bf.load943 = load i32, i32* %422, align 8
  %bf.clear944 = and i32 %bf.load943, 65535
  %cmp945 = icmp eq i32 %bf.clear944, 129
  br i1 %cmp945, label %if.then.961, label %lor.lhs.false.947

lor.lhs.false.947:                                ; preds = %land.lhs.true.939
  %423 = load i32, i32* %mode_width, align 4
  %cmp948 = icmp ule i32 %423, 64
  br i1 %cmp948, label %land.lhs.true.950, label %if.end.968

land.lhs.true.950:                                ; preds = %lor.lhs.false.947
  %424 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld951 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %424, i32 0, i32 1
  %arrayidx952 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld951, i32 0, i64 0
  %rtx953 = bitcast %union.rtunion_def* %arrayidx952 to %struct.rtx_def**
  %425 = load %struct.rtx_def*, %struct.rtx_def** %rtx953, align 8
  %426 = load i32, i32* %mode573, align 4
  %call954 = call i64 @nonzero_bits(%struct.rtx_def* %425, i32 %426)
  %427 = load i32, i32* %mode_width, align 4
  %sub955 = sub i32 %427, 1
  %sh_prom956 = zext i32 %sub955 to i64
  %shl957 = shl i64 1, %sh_prom956
  %and958 = and i64 %call954, %shl957
  %cmp959 = icmp eq i64 %and958, 0
  br i1 %cmp959, label %if.then.961, label %if.end.968

if.then.961:                                      ; preds = %land.lhs.true.950, %land.lhs.true.939
  %428 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld962 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %428, i32 0, i32 1
  %arrayidx963 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld962, i32 0, i64 0
  %rtx964 = bitcast %union.rtunion_def* %arrayidx963 to %struct.rtx_def**
  %429 = load %struct.rtx_def*, %struct.rtx_def** %rtx964, align 8
  store %struct.rtx_def* %429, %struct.rtx_def** %op0, align 8
  %430 = load i32, i32* %code.addr, align 4
  %cmp965 = icmp eq i32 %430, 107
  %cond967 = select i1 %cmp965, i32 102, i32 103
  store i32 %cond967, i32* %code.addr, align 4
  br label %while.cond

if.end.968:                                       ; preds = %land.lhs.true.950, %lor.lhs.false.947, %if.end.937
  %431 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %432 = load i32, i32* %mode573, align 4
  %call969 = call i32 @num_sign_bit_copies(%struct.rtx_def* %431, i32 %432)
  %cmp970 = icmp uge i32 %call969, 2
  br i1 %cmp970, label %if.then.972, label %if.end.977

if.then.972:                                      ; preds = %if.end.968
  %433 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld973 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %433, i32 0, i32 1
  %arrayidx974 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld973, i32 0, i64 0
  %rtx975 = bitcast %union.rtunion_def* %arrayidx974 to %struct.rtx_def**
  %434 = load %struct.rtx_def*, %struct.rtx_def** %rtx975, align 8
  store %struct.rtx_def* %434, %struct.rtx_def** %op0, align 8
  %435 = load i32, i32* %code.addr, align 4
  %call976 = call i32 @swap_condition(i32 %435)
  store i32 %call976, i32* %code.addr, align 4
  br label %while.cond

if.end.977:                                       ; preds = %if.end.968
  br label %sw.epilog.2430

sw.bb.978:                                        ; preds = %if.end.856
  %436 = load i32, i32* %equality_comparison_p, align 4
  %tobool979 = icmp ne i32 %436, 0
  br i1 %tobool979, label %land.lhs.true.980, label %if.end.999

land.lhs.true.980:                                ; preds = %sw.bb.978
  %437 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld981 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %437, i32 0, i32 1
  %arrayidx982 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld981, i32 0, i64 1
  %rtx983 = bitcast %union.rtunion_def* %arrayidx982 to %struct.rtx_def**
  %438 = load %struct.rtx_def*, %struct.rtx_def** %rtx983, align 8
  %439 = bitcast %struct.rtx_def* %438 to i32*
  %bf.load984 = load i32, i32* %439, align 8
  %bf.clear985 = and i32 %bf.load984, 65535
  %cmp986 = icmp eq i32 %bf.clear985, 54
  br i1 %cmp986, label %land.lhs.true.988, label %if.end.999

land.lhs.true.988:                                ; preds = %land.lhs.true.980
  %440 = load i32, i32* %mode573, align 4
  %441 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %442 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld989 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %442, i32 0, i32 1
  %arrayidx990 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld989, i32 0, i64 1
  %rtx991 = bitcast %union.rtunion_def* %arrayidx990 to %struct.rtx_def**
  %443 = load %struct.rtx_def*, %struct.rtx_def** %rtx991, align 8
  %call992 = call %struct.rtx_def* @simplify_binary_operation(i32 91, i32 %440, %struct.rtx_def* %441, %struct.rtx_def* %443)
  store %struct.rtx_def* %call992, %struct.rtx_def** %tem, align 8
  %cmp993 = icmp ne %struct.rtx_def* %call992, null
  br i1 %cmp993, label %if.then.995, label %if.end.999

if.then.995:                                      ; preds = %land.lhs.true.988
  %444 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld996 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %444, i32 0, i32 1
  %arrayidx997 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld996, i32 0, i64 0
  %rtx998 = bitcast %union.rtunion_def* %arrayidx997 to %struct.rtx_def**
  %445 = load %struct.rtx_def*, %struct.rtx_def** %rtx998, align 8
  store %struct.rtx_def* %445, %struct.rtx_def** %op0, align 8
  %446 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %446, %struct.rtx_def** %op1, align 8
  br label %while.cond

if.end.999:                                       ; preds = %land.lhs.true.988, %land.lhs.true.980, %sw.bb.978
  %447 = load i64, i64* %const_op, align 8
  %cmp1000 = icmp eq i64 %447, 0
  br i1 %cmp1000, label %land.lhs.true.1002, label %if.end.1033

land.lhs.true.1002:                               ; preds = %if.end.999
  %448 = load i32, i32* %sign_bit_comparison_p, align 4
  %tobool1003 = icmp ne i32 %448, 0
  br i1 %tobool1003, label %land.lhs.true.1004, label %if.end.1033

land.lhs.true.1004:                               ; preds = %land.lhs.true.1002
  %449 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1005 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %449, i32 0, i32 1
  %arrayidx1006 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1005, i32 0, i64 1
  %rtx1007 = bitcast %union.rtunion_def* %arrayidx1006 to %struct.rtx_def**
  %450 = load %struct.rtx_def*, %struct.rtx_def** %rtx1007, align 8
  %451 = bitcast %struct.rtx_def* %450 to i32*
  %bf.load1008 = load i32, i32* %451, align 8
  %bf.clear1009 = and i32 %bf.load1008, 65535
  %cmp1010 = icmp eq i32 %bf.clear1009, 54
  br i1 %cmp1010, label %land.lhs.true.1012, label %if.end.1033

land.lhs.true.1012:                               ; preds = %land.lhs.true.1004
  %452 = load i32, i32* %mode_width, align 4
  %cmp1013 = icmp ule i32 %452, 64
  br i1 %cmp1013, label %if.then.1015, label %if.end.1033

if.then.1015:                                     ; preds = %land.lhs.true.1012
  %453 = load i32, i32* %mode573, align 4
  %454 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1016 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %454, i32 0, i32 1
  %arrayidx1017 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1016, i32 0, i64 0
  %rtx1018 = bitcast %union.rtunion_def* %arrayidx1017 to %struct.rtx_def**
  %455 = load %struct.rtx_def*, %struct.rtx_def** %rtx1018, align 8
  %456 = load i32, i32* %mode_width, align 4
  %sub1019 = sub i32 %456, 1
  %conv1020 = zext i32 %sub1019 to i64
  %457 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1021 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %457, i32 0, i32 1
  %arrayidx1022 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1021, i32 0, i64 1
  %rtx1023 = bitcast %union.rtunion_def* %arrayidx1022 to %struct.rtx_def**
  %458 = load %struct.rtx_def*, %struct.rtx_def** %rtx1023, align 8
  %fld1024 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %458, i32 0, i32 1
  %arrayidx1025 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1024, i32 0, i64 0
  %rtwint1026 = bitcast %union.rtunion_def* %arrayidx1025 to i64*
  %459 = load i64, i64* %rtwint1026, align 8
  %sub1027 = sub nsw i64 %conv1020, %459
  %shl1028 = shl i64 1, %sub1027
  %call1029 = call %struct.rtx_def* @simplify_and_const_int(%struct.rtx_def* null, i32 %453, %struct.rtx_def* %455, i64 %shl1028)
  store %struct.rtx_def* %call1029, %struct.rtx_def** %op0, align 8
  %460 = load i32, i32* %code.addr, align 4
  %cmp1030 = icmp eq i32 %460, 107
  %cond1032 = select i1 %cmp1030, i32 102, i32 103
  store i32 %cond1032, i32* %code.addr, align 4
  br label %while.cond

if.end.1033:                                      ; preds = %land.lhs.true.1012, %land.lhs.true.1004, %land.lhs.true.1002, %if.end.999
  br label %sw.bb.1034

sw.bb.1034:                                       ; preds = %if.end.856, %if.end.1033
  %461 = load i64, i64* %const_op, align 8
  %cmp1035 = icmp eq i64 %461, 0
  br i1 %cmp1035, label %land.lhs.true.1037, label %if.end.1043

land.lhs.true.1037:                               ; preds = %sw.bb.1034
  %462 = load i32, i32* %equality_comparison_p, align 4
  %tobool1038 = icmp ne i32 %462, 0
  br i1 %tobool1038, label %if.then.1039, label %if.end.1043

if.then.1039:                                     ; preds = %land.lhs.true.1037
  %463 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1040 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %463, i32 0, i32 1
  %arrayidx1041 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1040, i32 0, i64 0
  %rtx1042 = bitcast %union.rtunion_def* %arrayidx1041 to %struct.rtx_def**
  %464 = load %struct.rtx_def*, %struct.rtx_def** %rtx1042, align 8
  store %struct.rtx_def* %464, %struct.rtx_def** %op0, align 8
  br label %while.cond

if.end.1043:                                      ; preds = %land.lhs.true.1037, %sw.bb.1034
  br label %sw.epilog.2430

sw.bb.1044:                                       ; preds = %if.end.856
  %465 = load i32, i32* %unsigned_comparison_p, align 4
  %tobool1045 = icmp ne i32 %465, 0
  br i1 %tobool1045, label %if.end.1077, label %land.lhs.true.1046

land.lhs.true.1046:                               ; preds = %sw.bb.1044
  %466 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1047 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %466, i32 0, i32 1
  %arrayidx1048 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1047, i32 0, i64 0
  %rtx1049 = bitcast %union.rtunion_def* %arrayidx1048 to %struct.rtx_def**
  %467 = load %struct.rtx_def*, %struct.rtx_def** %rtx1049, align 8
  %468 = bitcast %struct.rtx_def* %467 to i32*
  %bf.load1050 = load i32, i32* %468, align 8
  %bf.lshr1051 = lshr i32 %bf.load1050, 16
  %bf.clear1052 = and i32 %bf.lshr1051, 255
  %idxprom1053 = sext i32 %bf.clear1052 to i64
  %arrayidx1054 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1053
  %469 = load i16, i16* %arrayidx1054, align 2
  %conv1055 = zext i16 %469 to i32
  %cmp1056 = icmp sle i32 %conv1055, 64
  br i1 %cmp1056, label %land.lhs.true.1058, label %if.end.1077

land.lhs.true.1058:                               ; preds = %land.lhs.true.1046
  %470 = load i64, i64* %const_op, align 8
  %471 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1059 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %471, i32 0, i32 1
  %arrayidx1060 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1059, i32 0, i64 0
  %rtx1061 = bitcast %union.rtunion_def* %arrayidx1060 to %struct.rtx_def**
  %472 = load %struct.rtx_def*, %struct.rtx_def** %rtx1061, align 8
  %473 = bitcast %struct.rtx_def* %472 to i32*
  %bf.load1062 = load i32, i32* %473, align 8
  %bf.lshr1063 = lshr i32 %bf.load1062, 16
  %bf.clear1064 = and i32 %bf.lshr1063, 255
  %idxprom1065 = sext i32 %bf.clear1064 to i64
  %arrayidx1066 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1065
  %474 = load i16, i16* %arrayidx1066, align 2
  %conv1067 = zext i16 %474 to i32
  %sub1068 = sub nsw i32 %conv1067, 1
  %sh_prom1069 = zext i32 %sub1068 to i64
  %shl1070 = shl i64 1, %sh_prom1069
  %cmp1071 = icmp ult i64 %470, %shl1070
  br i1 %cmp1071, label %if.then.1073, label %if.end.1077

if.then.1073:                                     ; preds = %land.lhs.true.1058
  %475 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1074 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %475, i32 0, i32 1
  %arrayidx1075 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1074, i32 0, i64 0
  %rtx1076 = bitcast %union.rtunion_def* %arrayidx1075 to %struct.rtx_def**
  %476 = load %struct.rtx_def*, %struct.rtx_def** %rtx1076, align 8
  store %struct.rtx_def* %476, %struct.rtx_def** %op0, align 8
  br label %while.cond

if.end.1077:                                      ; preds = %land.lhs.true.1058, %land.lhs.true.1046, %sw.bb.1044
  br label %sw.epilog.2430

sw.bb.1078:                                       ; preds = %if.end.856
  %477 = load i32, i32* %mode_width, align 4
  %cmp1079 = icmp ule i32 %477, 64
  br i1 %cmp1079, label %land.lhs.true.1081, label %if.end.1189

land.lhs.true.1081:                               ; preds = %sw.bb.1078
  %478 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call1082 = call i32 @subreg_lowpart_p(%struct.rtx_def* %478)
  %tobool1083 = icmp ne i32 %call1082, 0
  br i1 %tobool1083, label %land.lhs.true.1084, label %if.end.1189

land.lhs.true.1084:                               ; preds = %land.lhs.true.1081
  %479 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1085 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %479, i32 0, i32 1
  %arrayidx1086 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1085, i32 0, i64 0
  %rtx1087 = bitcast %union.rtunion_def* %arrayidx1086 to %struct.rtx_def**
  %480 = load %struct.rtx_def*, %struct.rtx_def** %rtx1087, align 8
  %481 = bitcast %struct.rtx_def* %480 to i32*
  %bf.load1088 = load i32, i32* %481, align 8
  %bf.clear1089 = and i32 %bf.load1088, 65535
  %cmp1090 = icmp eq i32 %bf.clear1089, 75
  br i1 %cmp1090, label %land.lhs.true.1092, label %if.end.1189

land.lhs.true.1092:                               ; preds = %land.lhs.true.1084
  %482 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1093 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %482, i32 0, i32 1
  %arrayidx1094 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1093, i32 0, i64 0
  %rtx1095 = bitcast %union.rtunion_def* %arrayidx1094 to %struct.rtx_def**
  %483 = load %struct.rtx_def*, %struct.rtx_def** %rtx1095, align 8
  %fld1096 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %483, i32 0, i32 1
  %arrayidx1097 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1096, i32 0, i64 1
  %rtx1098 = bitcast %union.rtunion_def* %arrayidx1097 to %struct.rtx_def**
  %484 = load %struct.rtx_def*, %struct.rtx_def** %rtx1098, align 8
  %485 = bitcast %struct.rtx_def* %484 to i32*
  %bf.load1099 = load i32, i32* %485, align 8
  %bf.clear1100 = and i32 %bf.load1099, 65535
  %cmp1101 = icmp eq i32 %bf.clear1100, 54
  br i1 %cmp1101, label %land.lhs.true.1103, label %if.end.1189

land.lhs.true.1103:                               ; preds = %land.lhs.true.1092
  %486 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %486, i32 0, i32 1
  %arrayidx1105 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1104, i32 0, i64 0
  %rtx1106 = bitcast %union.rtunion_def* %arrayidx1105 to %struct.rtx_def**
  %487 = load %struct.rtx_def*, %struct.rtx_def** %rtx1106, align 8
  %fld1107 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %487, i32 0, i32 1
  %arrayidx1108 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1107, i32 0, i64 1
  %rtx1109 = bitcast %union.rtunion_def* %arrayidx1108 to %struct.rtx_def**
  %488 = load %struct.rtx_def*, %struct.rtx_def** %rtx1109, align 8
  %fld1110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %488, i32 0, i32 1
  %arrayidx1111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1110, i32 0, i64 0
  %rtwint1112 = bitcast %union.rtunion_def* %arrayidx1111 to i64*
  %489 = load i64, i64* %rtwint1112, align 8
  %cmp1113 = icmp slt i64 %489, 0
  br i1 %cmp1113, label %land.lhs.true.1115, label %if.end.1189

land.lhs.true.1115:                               ; preds = %land.lhs.true.1103
  %490 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1116 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %490, i32 0, i32 1
  %arrayidx1117 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1116, i32 0, i64 0
  %rtx1118 = bitcast %union.rtunion_def* %arrayidx1117 to %struct.rtx_def**
  %491 = load %struct.rtx_def*, %struct.rtx_def** %rtx1118, align 8
  %fld1119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %491, i32 0, i32 1
  %arrayidx1120 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1119, i32 0, i64 1
  %rtx1121 = bitcast %union.rtunion_def* %arrayidx1120 to %struct.rtx_def**
  %492 = load %struct.rtx_def*, %struct.rtx_def** %rtx1121, align 8
  %fld1122 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %492, i32 0, i32 1
  %arrayidx1123 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1122, i32 0, i64 0
  %rtwint1124 = bitcast %union.rtunion_def* %arrayidx1123 to i64*
  %493 = load i64, i64* %rtwint1124, align 8
  %sub1125 = sub nsw i64 0, %493
  %494 = load i32, i32* %mode573, align 4
  %idxprom1126 = sext i32 %494 to i64
  %arrayidx1127 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom1126
  %495 = load i64, i64* %arrayidx1127, align 8
  %div = udiv i64 %495, 2
  %cmp1128 = icmp slt i64 %sub1125, %div
  br i1 %cmp1128, label %land.lhs.true.1130, label %if.end.1189

land.lhs.true.1130:                               ; preds = %land.lhs.true.1115
  %496 = load i64, i64* %const_op, align 8
  %497 = load i32, i32* %mode573, align 4
  %idxprom1131 = sext i32 %497 to i64
  %arrayidx1132 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom1131
  %498 = load i64, i64* %arrayidx1132, align 8
  %div1133 = udiv i64 %498, 2
  %cmp1134 = icmp ult i64 %496, %div1133
  br i1 %cmp1134, label %land.lhs.true.1136, label %if.end.1189

land.lhs.true.1136:                               ; preds = %land.lhs.true.1130
  %499 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %499, i32 0, i32 1
  %arrayidx1138 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1137, i32 0, i64 0
  %rtx1139 = bitcast %union.rtunion_def* %arrayidx1138 to %struct.rtx_def**
  %500 = load %struct.rtx_def*, %struct.rtx_def** %rtx1139, align 8
  %fld1140 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %500, i32 0, i32 1
  %arrayidx1141 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1140, i32 0, i64 0
  %rtx1142 = bitcast %union.rtunion_def* %arrayidx1141 to %struct.rtx_def**
  %501 = load %struct.rtx_def*, %struct.rtx_def** %rtx1142, align 8
  %502 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %502, i32 0, i32 1
  %arrayidx1144 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1143, i32 0, i64 0
  %rtx1145 = bitcast %union.rtunion_def* %arrayidx1144 to %struct.rtx_def**
  %503 = load %struct.rtx_def*, %struct.rtx_def** %rtx1145, align 8
  %504 = bitcast %struct.rtx_def* %503 to i32*
  %bf.load1146 = load i32, i32* %504, align 8
  %bf.lshr1147 = lshr i32 %bf.load1146, 16
  %bf.clear1148 = and i32 %bf.lshr1147, 255
  %call1149 = call i64 @nonzero_bits(%struct.rtx_def* %501, i32 %bf.clear1148)
  %505 = load i32, i32* %mode573, align 4
  %idxprom1150 = sext i32 %505 to i64
  %arrayidx1151 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom1150
  %506 = load i64, i64* %arrayidx1151, align 8
  %neg1152 = xor i64 %506, -1
  %and1153 = and i64 %call1149, %neg1152
  %cmp1154 = icmp eq i64 0, %and1153
  br i1 %cmp1154, label %if.then.1185, label %lor.lhs.false.1156

lor.lhs.false.1156:                               ; preds = %land.lhs.true.1136
  %507 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1157 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %507, i32 0, i32 1
  %arrayidx1158 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1157, i32 0, i64 0
  %rtx1159 = bitcast %union.rtunion_def* %arrayidx1158 to %struct.rtx_def**
  %508 = load %struct.rtx_def*, %struct.rtx_def** %rtx1159, align 8
  %fld1160 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %508, i32 0, i32 1
  %arrayidx1161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1160, i32 0, i64 0
  %rtx1162 = bitcast %union.rtunion_def* %arrayidx1161 to %struct.rtx_def**
  %509 = load %struct.rtx_def*, %struct.rtx_def** %rtx1162, align 8
  %510 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1163 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %510, i32 0, i32 1
  %arrayidx1164 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1163, i32 0, i64 0
  %rtx1165 = bitcast %union.rtunion_def* %arrayidx1164 to %struct.rtx_def**
  %511 = load %struct.rtx_def*, %struct.rtx_def** %rtx1165, align 8
  %512 = bitcast %struct.rtx_def* %511 to i32*
  %bf.load1166 = load i32, i32* %512, align 8
  %bf.lshr1167 = lshr i32 %bf.load1166, 16
  %bf.clear1168 = and i32 %bf.lshr1167, 255
  %call1169 = call i32 @num_sign_bit_copies(%struct.rtx_def* %509, i32 %bf.clear1168)
  %513 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %513, i32 0, i32 1
  %arrayidx1171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1170, i32 0, i64 0
  %rtx1172 = bitcast %union.rtunion_def* %arrayidx1171 to %struct.rtx_def**
  %514 = load %struct.rtx_def*, %struct.rtx_def** %rtx1172, align 8
  %515 = bitcast %struct.rtx_def* %514 to i32*
  %bf.load1173 = load i32, i32* %515, align 8
  %bf.lshr1174 = lshr i32 %bf.load1173, 16
  %bf.clear1175 = and i32 %bf.lshr1174, 255
  %idxprom1176 = sext i32 %bf.clear1175 to i64
  %arrayidx1177 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1176
  %516 = load i16, i16* %arrayidx1177, align 2
  %conv1178 = zext i16 %516 to i32
  %517 = load i32, i32* %mode573, align 4
  %idxprom1179 = sext i32 %517 to i64
  %arrayidx1180 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1179
  %518 = load i16, i16* %arrayidx1180, align 2
  %conv1181 = zext i16 %518 to i32
  %sub1182 = sub nsw i32 %conv1178, %conv1181
  %cmp1183 = icmp ugt i32 %call1169, %sub1182
  br i1 %cmp1183, label %if.then.1185, label %if.end.1189

if.then.1185:                                     ; preds = %lor.lhs.false.1156, %land.lhs.true.1136
  %519 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1186 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %519, i32 0, i32 1
  %arrayidx1187 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1186, i32 0, i64 0
  %rtx1188 = bitcast %union.rtunion_def* %arrayidx1187 to %struct.rtx_def**
  %520 = load %struct.rtx_def*, %struct.rtx_def** %rtx1188, align 8
  store %struct.rtx_def* %520, %struct.rtx_def** %op0, align 8
  br label %while.cond

if.end.1189:                                      ; preds = %lor.lhs.false.1156, %land.lhs.true.1130, %land.lhs.true.1115, %land.lhs.true.1103, %land.lhs.true.1092, %land.lhs.true.1084, %land.lhs.true.1081, %sw.bb.1078
  %521 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call1190 = call i32 @subreg_lowpart_p(%struct.rtx_def* %521)
  %tobool1191 = icmp ne i32 %call1190, 0
  br i1 %tobool1191, label %land.lhs.true.1192, label %if.else.1205

land.lhs.true.1192:                               ; preds = %if.end.1189
  %522 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %522, i32 0, i32 1
  %arrayidx1194 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1193, i32 0, i64 0
  %rtx1195 = bitcast %union.rtunion_def* %arrayidx1194 to %struct.rtx_def**
  %523 = load %struct.rtx_def*, %struct.rtx_def** %rtx1195, align 8
  %524 = bitcast %struct.rtx_def* %523 to i32*
  %bf.load1196 = load i32, i32* %524, align 8
  %bf.lshr1197 = lshr i32 %bf.load1196, 16
  %bf.clear1198 = and i32 %bf.lshr1197, 255
  %idxprom1199 = sext i32 %bf.clear1198 to i64
  %arrayidx1200 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1199
  %525 = load i16, i16* %arrayidx1200, align 2
  %conv1201 = zext i16 %525 to i32
  %526 = load i32, i32* %mode_width, align 4
  %cmp1202 = icmp ult i32 %conv1201, %526
  br i1 %cmp1202, label %if.then.1204, label %if.else.1205

if.then.1204:                                     ; preds = %land.lhs.true.1192
  br label %if.end.1206

if.else.1205:                                     ; preds = %land.lhs.true.1192, %if.end.1189
  br label %sw.epilog.2430

if.end.1206:                                      ; preds = %if.then.1204
  br label %sw.bb.1207

sw.bb.1207:                                       ; preds = %if.end.856, %if.end.1206
  %527 = load i32, i32* %unsigned_comparison_p, align 4
  %tobool1208 = icmp ne i32 %527, 0
  br i1 %tobool1208, label %land.lhs.true.1211, label %lor.lhs.false.1209

lor.lhs.false.1209:                               ; preds = %sw.bb.1207
  %528 = load i32, i32* %equality_comparison_p, align 4
  %tobool1210 = icmp ne i32 %528, 0
  br i1 %tobool1210, label %land.lhs.true.1211, label %if.end.1238

land.lhs.true.1211:                               ; preds = %lor.lhs.false.1209, %sw.bb.1207
  %529 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1212 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %529, i32 0, i32 1
  %arrayidx1213 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1212, i32 0, i64 0
  %rtx1214 = bitcast %union.rtunion_def* %arrayidx1213 to %struct.rtx_def**
  %530 = load %struct.rtx_def*, %struct.rtx_def** %rtx1214, align 8
  %531 = bitcast %struct.rtx_def* %530 to i32*
  %bf.load1215 = load i32, i32* %531, align 8
  %bf.lshr1216 = lshr i32 %bf.load1215, 16
  %bf.clear1217 = and i32 %bf.lshr1216, 255
  %idxprom1218 = sext i32 %bf.clear1217 to i64
  %arrayidx1219 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1218
  %532 = load i16, i16* %arrayidx1219, align 2
  %conv1220 = zext i16 %532 to i32
  %cmp1221 = icmp sle i32 %conv1220, 64
  br i1 %cmp1221, label %land.lhs.true.1223, label %if.end.1238

land.lhs.true.1223:                               ; preds = %land.lhs.true.1211
  %533 = load i64, i64* %const_op, align 8
  %534 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1224 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %534, i32 0, i32 1
  %arrayidx1225 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1224, i32 0, i64 0
  %rtx1226 = bitcast %union.rtunion_def* %arrayidx1225 to %struct.rtx_def**
  %535 = load %struct.rtx_def*, %struct.rtx_def** %rtx1226, align 8
  %536 = bitcast %struct.rtx_def* %535 to i32*
  %bf.load1227 = load i32, i32* %536, align 8
  %bf.lshr1228 = lshr i32 %bf.load1227, 16
  %bf.clear1229 = and i32 %bf.lshr1228, 255
  %idxprom1230 = sext i32 %bf.clear1229 to i64
  %arrayidx1231 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom1230
  %537 = load i64, i64* %arrayidx1231, align 8
  %cmp1232 = icmp ult i64 %533, %537
  br i1 %cmp1232, label %if.then.1234, label %if.end.1238

if.then.1234:                                     ; preds = %land.lhs.true.1223
  %538 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1235 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %538, i32 0, i32 1
  %arrayidx1236 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1235, i32 0, i64 0
  %rtx1237 = bitcast %union.rtunion_def* %arrayidx1236 to %struct.rtx_def**
  %539 = load %struct.rtx_def*, %struct.rtx_def** %rtx1237, align 8
  store %struct.rtx_def* %539, %struct.rtx_def** %op0, align 8
  br label %while.cond

if.end.1238:                                      ; preds = %land.lhs.true.1223, %land.lhs.true.1211, %lor.lhs.false.1209
  br label %sw.epilog.2430

sw.bb.1239:                                       ; preds = %if.end.856
  %540 = load i32, i32* %equality_comparison_p, align 4
  %tobool1240 = icmp ne i32 %540, 0
  br i1 %tobool1240, label %land.lhs.true.1241, label %if.end.1252

land.lhs.true.1241:                               ; preds = %sw.bb.1239
  %541 = load i32, i32* %mode573, align 4
  %542 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %543 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1242 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %543, i32 0, i32 1
  %arrayidx1243 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1242, i32 0, i64 1
  %rtx1244 = bitcast %union.rtunion_def* %arrayidx1243 to %struct.rtx_def**
  %544 = load %struct.rtx_def*, %struct.rtx_def** %rtx1244, align 8
  %call1245 = call %struct.rtx_def* @simplify_binary_operation(i32 76, i32 %541, %struct.rtx_def* %542, %struct.rtx_def* %544)
  store %struct.rtx_def* %call1245, %struct.rtx_def** %tem, align 8
  %cmp1246 = icmp ne %struct.rtx_def* null, %call1245
  br i1 %cmp1246, label %if.then.1248, label %if.end.1252

if.then.1248:                                     ; preds = %land.lhs.true.1241
  %545 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1249 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %545, i32 0, i32 1
  %arrayidx1250 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1249, i32 0, i64 0
  %rtx1251 = bitcast %union.rtunion_def* %arrayidx1250 to %struct.rtx_def**
  %546 = load %struct.rtx_def*, %struct.rtx_def** %rtx1251, align 8
  store %struct.rtx_def* %546, %struct.rtx_def** %op0, align 8
  %547 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %547, %struct.rtx_def** %op1, align 8
  br label %while.cond

if.end.1252:                                      ; preds = %land.lhs.true.1241, %sw.bb.1239
  %548 = load i64, i64* %const_op, align 8
  %cmp1253 = icmp eq i64 %548, 0
  br i1 %cmp1253, label %land.lhs.true.1255, label %if.end.1281

land.lhs.true.1255:                               ; preds = %if.end.1252
  %549 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1256 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %549, i32 0, i32 1
  %arrayidx1257 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1256, i32 0, i64 1
  %rtx1258 = bitcast %union.rtunion_def* %arrayidx1257 to %struct.rtx_def**
  %550 = load %struct.rtx_def*, %struct.rtx_def** %rtx1258, align 8
  %551 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 63), align 8
  %cmp1259 = icmp eq %struct.rtx_def* %550, %551
  br i1 %cmp1259, label %land.lhs.true.1261, label %if.end.1281

land.lhs.true.1261:                               ; preds = %land.lhs.true.1255
  %552 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1262 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %552, i32 0, i32 1
  %arrayidx1263 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1262, i32 0, i64 0
  %rtx1264 = bitcast %union.rtunion_def* %arrayidx1263 to %struct.rtx_def**
  %553 = load %struct.rtx_def*, %struct.rtx_def** %rtx1264, align 8
  %554 = bitcast %struct.rtx_def* %553 to i32*
  %bf.load1265 = load i32, i32* %554, align 8
  %bf.clear1266 = and i32 %bf.load1265, 65535
  %cmp1267 = icmp eq i32 %bf.clear1266, 129
  br i1 %cmp1267, label %land.lhs.true.1269, label %if.end.1281

land.lhs.true.1269:                               ; preds = %land.lhs.true.1261
  %555 = load i32, i32* %sign_bit_comparison_p, align 4
  %tobool1270 = icmp ne i32 %555, 0
  br i1 %tobool1270, label %if.then.1271, label %if.end.1281

if.then.1271:                                     ; preds = %land.lhs.true.1269
  %556 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1272 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %556, i32 0, i32 1
  %arrayidx1273 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1272, i32 0, i64 0
  %rtx1274 = bitcast %union.rtunion_def* %arrayidx1273 to %struct.rtx_def**
  %557 = load %struct.rtx_def*, %struct.rtx_def** %rtx1274, align 8
  %fld1275 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %557, i32 0, i32 1
  %arrayidx1276 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1275, i32 0, i64 0
  %rtx1277 = bitcast %union.rtunion_def* %arrayidx1276 to %struct.rtx_def**
  %558 = load %struct.rtx_def*, %struct.rtx_def** %rtx1277, align 8
  store %struct.rtx_def* %558, %struct.rtx_def** %op0, align 8
  %559 = load i32, i32* %code.addr, align 4
  %cmp1278 = icmp eq i32 %559, 107
  %cond1280 = select i1 %cmp1278, i32 103, i32 102
  store i32 %cond1280, i32* %code.addr, align 4
  br label %while.cond

if.end.1281:                                      ; preds = %land.lhs.true.1269, %land.lhs.true.1261, %land.lhs.true.1255, %if.end.1252
  br label %sw.epilog.2430

sw.bb.1282:                                       ; preds = %if.end.856
  %560 = load i32, i32* %equality_comparison_p, align 4
  %tobool1283 = icmp ne i32 %560, 0
  br i1 %tobool1283, label %land.lhs.true.1284, label %if.end.1295

land.lhs.true.1284:                               ; preds = %sw.bb.1282
  %561 = load i32, i32* %mode573, align 4
  %562 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1285 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %562, i32 0, i32 1
  %arrayidx1286 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1285, i32 0, i64 1
  %rtx1287 = bitcast %union.rtunion_def* %arrayidx1286 to %struct.rtx_def**
  %563 = load %struct.rtx_def*, %struct.rtx_def** %rtx1287, align 8
  %564 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call1288 = call %struct.rtx_def* @simplify_binary_operation(i32 75, i32 %561, %struct.rtx_def* %563, %struct.rtx_def* %564)
  store %struct.rtx_def* %call1288, %struct.rtx_def** %tem, align 8
  %cmp1289 = icmp ne %struct.rtx_def* null, %call1288
  br i1 %cmp1289, label %if.then.1291, label %if.end.1295

if.then.1291:                                     ; preds = %land.lhs.true.1284
  %565 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1292 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %565, i32 0, i32 1
  %arrayidx1293 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1292, i32 0, i64 0
  %rtx1294 = bitcast %union.rtunion_def* %arrayidx1293 to %struct.rtx_def**
  %566 = load %struct.rtx_def*, %struct.rtx_def** %rtx1294, align 8
  store %struct.rtx_def* %566, %struct.rtx_def** %op0, align 8
  %567 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %567, %struct.rtx_def** %op1, align 8
  br label %while.cond

if.end.1295:                                      ; preds = %land.lhs.true.1284, %sw.bb.1282
  %568 = load i32, i32* %equality_comparison_p, align 4
  %tobool1296 = icmp ne i32 %568, 0
  br i1 %tobool1296, label %land.lhs.true.1297, label %if.end.1308

land.lhs.true.1297:                               ; preds = %if.end.1295
  %569 = load i32, i32* %mode573, align 4
  %570 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1298 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %570, i32 0, i32 1
  %arrayidx1299 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1298, i32 0, i64 0
  %rtx1300 = bitcast %union.rtunion_def* %arrayidx1299 to %struct.rtx_def**
  %571 = load %struct.rtx_def*, %struct.rtx_def** %rtx1300, align 8
  %572 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call1301 = call %struct.rtx_def* @simplify_binary_operation(i32 76, i32 %569, %struct.rtx_def* %571, %struct.rtx_def* %572)
  store %struct.rtx_def* %call1301, %struct.rtx_def** %tem, align 8
  %cmp1302 = icmp ne %struct.rtx_def* null, %call1301
  br i1 %cmp1302, label %if.then.1304, label %if.end.1308

if.then.1304:                                     ; preds = %land.lhs.true.1297
  %573 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1305 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %573, i32 0, i32 1
  %arrayidx1306 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1305, i32 0, i64 1
  %rtx1307 = bitcast %union.rtunion_def* %arrayidx1306 to %struct.rtx_def**
  %574 = load %struct.rtx_def*, %struct.rtx_def** %rtx1307, align 8
  store %struct.rtx_def* %574, %struct.rtx_def** %op0, align 8
  %575 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %575, %struct.rtx_def** %op1, align 8
  br label %while.cond

if.end.1308:                                      ; preds = %land.lhs.true.1297, %if.end.1295
  %576 = load i32, i32* %sign_bit_comparison_p, align 4
  %tobool1309 = icmp ne i32 %576, 0
  br i1 %tobool1309, label %land.lhs.true.1310, label %if.end.1362

land.lhs.true.1310:                               ; preds = %if.end.1308
  %577 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1311 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %577, i32 0, i32 1
  %arrayidx1312 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1311, i32 0, i64 0
  %rtx1313 = bitcast %union.rtunion_def* %arrayidx1312 to %struct.rtx_def**
  %578 = load %struct.rtx_def*, %struct.rtx_def** %rtx1313, align 8
  %579 = bitcast %struct.rtx_def* %578 to i32*
  %bf.load1314 = load i32, i32* %579, align 8
  %bf.clear1315 = and i32 %bf.load1314, 65535
  %cmp1316 = icmp eq i32 %bf.clear1315, 89
  br i1 %cmp1316, label %land.lhs.true.1318, label %if.end.1362

land.lhs.true.1318:                               ; preds = %land.lhs.true.1310
  %580 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1319 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %580, i32 0, i32 1
  %arrayidx1320 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1319, i32 0, i64 0
  %rtx1321 = bitcast %union.rtunion_def* %arrayidx1320 to %struct.rtx_def**
  %581 = load %struct.rtx_def*, %struct.rtx_def** %rtx1321, align 8
  %fld1322 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %581, i32 0, i32 1
  %arrayidx1323 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1322, i32 0, i64 1
  %rtx1324 = bitcast %union.rtunion_def* %arrayidx1323 to %struct.rtx_def**
  %582 = load %struct.rtx_def*, %struct.rtx_def** %rtx1324, align 8
  %583 = bitcast %struct.rtx_def* %582 to i32*
  %bf.load1325 = load i32, i32* %583, align 8
  %bf.clear1326 = and i32 %bf.load1325, 65535
  %cmp1327 = icmp eq i32 %bf.clear1326, 54
  br i1 %cmp1327, label %land.lhs.true.1329, label %if.end.1362

land.lhs.true.1329:                               ; preds = %land.lhs.true.1318
  %584 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1330 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %584, i32 0, i32 1
  %arrayidx1331 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1330, i32 0, i64 0
  %rtx1332 = bitcast %union.rtunion_def* %arrayidx1331 to %struct.rtx_def**
  %585 = load %struct.rtx_def*, %struct.rtx_def** %rtx1332, align 8
  %fld1333 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %585, i32 0, i32 1
  %arrayidx1334 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1333, i32 0, i64 1
  %rtx1335 = bitcast %union.rtunion_def* %arrayidx1334 to %struct.rtx_def**
  %586 = load %struct.rtx_def*, %struct.rtx_def** %rtx1335, align 8
  %fld1336 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %586, i32 0, i32 1
  %arrayidx1337 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1336, i32 0, i64 0
  %rtwint1338 = bitcast %union.rtunion_def* %arrayidx1337 to i64*
  %587 = load i64, i64* %rtwint1338, align 8
  %588 = load i32, i32* %mode_width, align 4
  %sub1339 = sub i32 %588, 1
  %conv1340 = zext i32 %sub1339 to i64
  %cmp1341 = icmp eq i64 %587, %conv1340
  br i1 %cmp1341, label %land.lhs.true.1343, label %if.end.1362

land.lhs.true.1343:                               ; preds = %land.lhs.true.1329
  %589 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1344 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %589, i32 0, i32 1
  %arrayidx1345 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1344, i32 0, i64 0
  %rtx1346 = bitcast %union.rtunion_def* %arrayidx1345 to %struct.rtx_def**
  %590 = load %struct.rtx_def*, %struct.rtx_def** %rtx1346, align 8
  %fld1347 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %590, i32 0, i32 1
  %arrayidx1348 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1347, i32 0, i64 0
  %rtx1349 = bitcast %union.rtunion_def* %arrayidx1348 to %struct.rtx_def**
  %591 = load %struct.rtx_def*, %struct.rtx_def** %rtx1349, align 8
  %592 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1350 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %592, i32 0, i32 1
  %arrayidx1351 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1350, i32 0, i64 1
  %rtx1352 = bitcast %union.rtunion_def* %arrayidx1351 to %struct.rtx_def**
  %593 = load %struct.rtx_def*, %struct.rtx_def** %rtx1352, align 8
  %call1353 = call i32 @rtx_equal_p(%struct.rtx_def* %591, %struct.rtx_def* %593)
  %tobool1354 = icmp ne i32 %call1353, 0
  br i1 %tobool1354, label %if.then.1355, label %if.end.1362

if.then.1355:                                     ; preds = %land.lhs.true.1343
  %594 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1356 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %594, i32 0, i32 1
  %arrayidx1357 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1356, i32 0, i64 1
  %rtx1358 = bitcast %union.rtunion_def* %arrayidx1357 to %struct.rtx_def**
  %595 = load %struct.rtx_def*, %struct.rtx_def** %rtx1358, align 8
  store %struct.rtx_def* %595, %struct.rtx_def** %op0, align 8
  %596 = load i32, i32* %code.addr, align 4
  %cmp1359 = icmp eq i32 %596, 104
  %cond1361 = select i1 %cmp1359, i32 106, i32 105
  store i32 %cond1361, i32* %code.addr, align 4
  br label %while.cond

if.end.1362:                                      ; preds = %land.lhs.true.1343, %land.lhs.true.1329, %land.lhs.true.1318, %land.lhs.true.1310, %if.end.1308
  br label %sw.epilog.2430

sw.bb.1363:                                       ; preds = %if.end.856
  %597 = load i32, i32* %equality_comparison_p, align 4
  %tobool1364 = icmp ne i32 %597, 0
  br i1 %tobool1364, label %land.lhs.true.1365, label %if.end.1376

land.lhs.true.1365:                               ; preds = %sw.bb.1363
  %598 = load i32, i32* %mode573, align 4
  %599 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1366 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %599, i32 0, i32 1
  %arrayidx1367 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1366, i32 0, i64 1
  %rtx1368 = bitcast %union.rtunion_def* %arrayidx1367 to %struct.rtx_def**
  %600 = load %struct.rtx_def*, %struct.rtx_def** %rtx1368, align 8
  %601 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call1369 = call %struct.rtx_def* @simplify_binary_operation(i32 85, i32 %598, %struct.rtx_def* %600, %struct.rtx_def* %601)
  store %struct.rtx_def* %call1369, %struct.rtx_def** %tem, align 8
  %cmp1370 = icmp ne %struct.rtx_def* null, %call1369
  br i1 %cmp1370, label %if.then.1372, label %if.end.1376

if.then.1372:                                     ; preds = %land.lhs.true.1365
  %602 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1373 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %602, i32 0, i32 1
  %arrayidx1374 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1373, i32 0, i64 0
  %rtx1375 = bitcast %union.rtunion_def* %arrayidx1374 to %struct.rtx_def**
  %603 = load %struct.rtx_def*, %struct.rtx_def** %rtx1375, align 8
  store %struct.rtx_def* %603, %struct.rtx_def** %op0, align 8
  %604 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %604, %struct.rtx_def** %op1, align 8
  br label %while.cond

if.end.1376:                                      ; preds = %land.lhs.true.1365, %sw.bb.1363
  br label %sw.epilog.2430

sw.bb.1377:                                       ; preds = %if.end.856, %if.end.856, %if.end.856, %if.end.856, %if.end.856, %if.end.856, %if.end.856, %if.end.856, %if.end.856, %if.end.856, %if.end.856, %if.end.856, %if.end.856, %if.end.856, %if.end.856, %if.end.856, %if.end.856, %if.end.856
  %605 = load i64, i64* %const_op, align 8
  %cmp1378 = icmp ne i64 %605, 0
  br i1 %cmp1378, label %if.then.1391, label %lor.lhs.false.1380

lor.lhs.false.1380:                               ; preds = %sw.bb.1377
  %606 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1381 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %606, i32 0, i32 1
  %arrayidx1382 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1381, i32 0, i64 0
  %rtx1383 = bitcast %union.rtunion_def* %arrayidx1382 to %struct.rtx_def**
  %607 = load %struct.rtx_def*, %struct.rtx_def** %rtx1383, align 8
  %608 = bitcast %struct.rtx_def* %607 to i32*
  %bf.load1384 = load i32, i32* %608, align 8
  %bf.lshr1385 = lshr i32 %bf.load1384, 16
  %bf.clear1386 = and i32 %bf.lshr1385, 255
  %idxprom1387 = sext i32 %bf.clear1386 to i64
  %arrayidx1388 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1387
  %609 = load i32, i32* %arrayidx1388, align 4
  %cmp1389 = icmp eq i32 %609, 4
  br i1 %cmp1389, label %if.then.1391, label %if.end.1392

if.then.1391:                                     ; preds = %lor.lhs.false.1380, %sw.bb.1377
  br label %sw.epilog.2430

if.end.1392:                                      ; preds = %lor.lhs.false.1380
  %610 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1393 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %610, i32 0, i32 1
  %arrayidx1394 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1393, i32 0, i64 0
  %rtx1395 = bitcast %union.rtunion_def* %arrayidx1394 to %struct.rtx_def**
  %611 = load %struct.rtx_def*, %struct.rtx_def** %rtx1395, align 8
  %612 = bitcast %struct.rtx_def* %611 to i32*
  %bf.load1396 = load i32, i32* %612, align 8
  %bf.clear1397 = and i32 %bf.load1396, 65535
  %cmp1398 = icmp eq i32 %bf.clear1397, 74
  br i1 %cmp1398, label %if.then.1400, label %if.else.1413

if.then.1400:                                     ; preds = %if.end.1392
  %613 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1401 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %613, i32 0, i32 1
  %arrayidx1402 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1401, i32 0, i64 0
  %rtx1403 = bitcast %union.rtunion_def* %arrayidx1402 to %struct.rtx_def**
  %614 = load %struct.rtx_def*, %struct.rtx_def** %rtx1403, align 8
  %fld1404 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %614, i32 0, i32 1
  %arrayidx1405 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1404, i32 0, i64 0
  %rtx1406 = bitcast %union.rtunion_def* %arrayidx1405 to %struct.rtx_def**
  %615 = load %struct.rtx_def*, %struct.rtx_def** %rtx1406, align 8
  store %struct.rtx_def* %615, %struct.rtx_def** %tem, align 8
  %616 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1407 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %616, i32 0, i32 1
  %arrayidx1408 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1407, i32 0, i64 0
  %rtx1409 = bitcast %union.rtunion_def* %arrayidx1408 to %struct.rtx_def**
  %617 = load %struct.rtx_def*, %struct.rtx_def** %rtx1409, align 8
  %fld1410 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %617, i32 0, i32 1
  %arrayidx1411 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1410, i32 0, i64 1
  %rtx1412 = bitcast %union.rtunion_def* %arrayidx1411 to %struct.rtx_def**
  %618 = load %struct.rtx_def*, %struct.rtx_def** %rtx1412, align 8
  store %struct.rtx_def* %618, %struct.rtx_def** %tem1, align 8
  br label %if.end.1420

if.else.1413:                                     ; preds = %if.end.1392
  %619 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1414 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %619, i32 0, i32 1
  %arrayidx1415 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1414, i32 0, i64 0
  %rtx1416 = bitcast %union.rtunion_def* %arrayidx1415 to %struct.rtx_def**
  %620 = load %struct.rtx_def*, %struct.rtx_def** %rtx1416, align 8
  store %struct.rtx_def* %620, %struct.rtx_def** %tem, align 8
  %621 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1417 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %621, i32 0, i32 1
  %arrayidx1418 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1417, i32 0, i64 1
  %rtx1419 = bitcast %union.rtunion_def* %arrayidx1418 to %struct.rtx_def**
  %622 = load %struct.rtx_def*, %struct.rtx_def** %rtx1419, align 8
  store %struct.rtx_def* %622, %struct.rtx_def** %tem1, align 8
  br label %if.end.1420

if.end.1420:                                      ; preds = %if.else.1413, %if.then.1400
  %623 = load i32, i32* %code.addr, align 4
  %cmp1421 = icmp eq i32 %623, 102
  br i1 %cmp1421, label %if.then.1461, label %lor.lhs.false.1423

lor.lhs.false.1423:                               ; preds = %if.end.1420
  %624 = load i32, i32* %code.addr, align 4
  %cmp1424 = icmp eq i32 %624, 103
  br i1 %cmp1424, label %if.then.1461, label %lor.lhs.false.1426

lor.lhs.false.1426:                               ; preds = %lor.lhs.false.1423
  %625 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %626 = bitcast %struct.rtx_def* %625 to i32*
  %bf.load1427 = load i32, i32* %626, align 8
  %bf.lshr1428 = lshr i32 %bf.load1427, 16
  %bf.clear1429 = and i32 %bf.lshr1428, 255
  %idxprom1430 = sext i32 %bf.clear1429 to i64
  %arrayidx1431 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1430
  %627 = load i16, i16* %arrayidx1431, align 2
  %conv1432 = zext i16 %627 to i32
  %cmp1433 = icmp sle i32 %conv1432, 64
  br i1 %cmp1433, label %land.lhs.true.1435, label %if.end.1477

land.lhs.true.1435:                               ; preds = %lor.lhs.false.1426
  %628 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %629 = bitcast %struct.rtx_def* %628 to i32*
  %bf.load1436 = load i32, i32* %629, align 8
  %bf.lshr1437 = lshr i32 %bf.load1436, 16
  %bf.clear1438 = and i32 %bf.lshr1437, 255
  %idxprom1439 = sext i32 %bf.clear1438 to i64
  %arrayidx1440 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1439
  %630 = load i32, i32* %arrayidx1440, align 4
  %cmp1441 = icmp eq i32 %630, 1
  br i1 %cmp1441, label %land.lhs.true.1443, label %if.end.1477

land.lhs.true.1443:                               ; preds = %land.lhs.true.1435
  %631 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %632 = bitcast %struct.rtx_def* %631 to i32*
  %bf.load1444 = load i32, i32* %632, align 8
  %bf.lshr1445 = lshr i32 %bf.load1444, 16
  %bf.clear1446 = and i32 %bf.lshr1445, 255
  %idxprom1447 = sext i32 %bf.clear1446 to i64
  %arrayidx1448 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1447
  %633 = load i16, i16* %arrayidx1448, align 2
  %conv1449 = zext i16 %633 to i32
  %sub1450 = sub nsw i32 %conv1449, 1
  %sh_prom1451 = zext i32 %sub1450 to i64
  %shl1452 = shl i64 1, %sh_prom1451
  %and1453 = and i64 1, %shl1452
  %tobool1454 = icmp ne i64 %and1453, 0
  br i1 %tobool1454, label %land.lhs.true.1455, label %if.end.1477

land.lhs.true.1455:                               ; preds = %land.lhs.true.1443
  %634 = load i32, i32* %code.addr, align 4
  %cmp1456 = icmp eq i32 %634, 107
  br i1 %cmp1456, label %if.then.1461, label %lor.lhs.false.1458

lor.lhs.false.1458:                               ; preds = %land.lhs.true.1455
  %635 = load i32, i32* %code.addr, align 4
  %cmp1459 = icmp eq i32 %635, 104
  br i1 %cmp1459, label %if.then.1461, label %if.end.1477

if.then.1461:                                     ; preds = %lor.lhs.false.1458, %land.lhs.true.1455, %lor.lhs.false.1423, %if.end.1420
  %636 = load i32, i32* %code.addr, align 4
  %cmp1462 = icmp eq i32 %636, 107
  br i1 %cmp1462, label %if.then.1467, label %lor.lhs.false.1464

lor.lhs.false.1464:                               ; preds = %if.then.1461
  %637 = load i32, i32* %code.addr, align 4
  %cmp1465 = icmp eq i32 %637, 102
  br i1 %cmp1465, label %if.then.1467, label %if.else.1470

if.then.1467:                                     ; preds = %lor.lhs.false.1464, %if.then.1461
  %638 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %639 = bitcast %struct.rtx_def* %638 to i32*
  %bf.load1468 = load i32, i32* %639, align 8
  %bf.clear1469 = and i32 %bf.load1468, 65535
  store i32 %bf.clear1469, i32* %new_code, align 4
  br label %if.end.1472

if.else.1470:                                     ; preds = %lor.lhs.false.1464
  %640 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call1471 = call i32 @combine_reversed_comparison_code(%struct.rtx_def* %640)
  store i32 %call1471, i32* %new_code, align 4
  br label %if.end.1472

if.end.1472:                                      ; preds = %if.else.1470, %if.then.1467
  %641 = load i32, i32* %new_code, align 4
  %cmp1473 = icmp ne i32 %641, 0
  br i1 %cmp1473, label %if.then.1475, label %if.end.1476

if.then.1475:                                     ; preds = %if.end.1472
  %642 = load i32, i32* %new_code, align 4
  store i32 %642, i32* %code.addr, align 4
  %643 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %643, %struct.rtx_def** %op0, align 8
  %644 = load %struct.rtx_def*, %struct.rtx_def** %tem1, align 8
  store %struct.rtx_def* %644, %struct.rtx_def** %op1, align 8
  br label %while.cond

if.end.1476:                                      ; preds = %if.end.1472
  br label %if.end.1477

if.end.1477:                                      ; preds = %if.end.1476, %lor.lhs.false.1458, %land.lhs.true.1443, %land.lhs.true.1435, %lor.lhs.false.1426
  br label %sw.epilog.2430

sw.bb.1478:                                       ; preds = %if.end.856
  %645 = load i32, i32* %sign_bit_comparison_p, align 4
  %tobool1479 = icmp ne i32 %645, 0
  br i1 %tobool1479, label %land.lhs.true.1480, label %if.end.1516

land.lhs.true.1480:                               ; preds = %sw.bb.1478
  %646 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1481 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %646, i32 0, i32 1
  %arrayidx1482 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1481, i32 0, i64 0
  %rtx1483 = bitcast %union.rtunion_def* %arrayidx1482 to %struct.rtx_def**
  %647 = load %struct.rtx_def*, %struct.rtx_def** %rtx1483, align 8
  %648 = bitcast %struct.rtx_def* %647 to i32*
  %bf.load1484 = load i32, i32* %648, align 8
  %bf.clear1485 = and i32 %bf.load1484, 65535
  %cmp1486 = icmp eq i32 %bf.clear1485, 75
  br i1 %cmp1486, label %land.lhs.true.1488, label %if.end.1516

land.lhs.true.1488:                               ; preds = %land.lhs.true.1480
  %649 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1489 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %649, i32 0, i32 1
  %arrayidx1490 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1489, i32 0, i64 0
  %rtx1491 = bitcast %union.rtunion_def* %arrayidx1490 to %struct.rtx_def**
  %650 = load %struct.rtx_def*, %struct.rtx_def** %rtx1491, align 8
  %fld1492 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %650, i32 0, i32 1
  %arrayidx1493 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1492, i32 0, i64 1
  %rtx1494 = bitcast %union.rtunion_def* %arrayidx1493 to %struct.rtx_def**
  %651 = load %struct.rtx_def*, %struct.rtx_def** %rtx1494, align 8
  %652 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 63), align 8
  %cmp1495 = icmp eq %struct.rtx_def* %651, %652
  br i1 %cmp1495, label %land.lhs.true.1497, label %if.end.1516

land.lhs.true.1497:                               ; preds = %land.lhs.true.1488
  %653 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1498 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %653, i32 0, i32 1
  %arrayidx1499 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1498, i32 0, i64 0
  %rtx1500 = bitcast %union.rtunion_def* %arrayidx1499 to %struct.rtx_def**
  %654 = load %struct.rtx_def*, %struct.rtx_def** %rtx1500, align 8
  %fld1501 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %654, i32 0, i32 1
  %arrayidx1502 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1501, i32 0, i64 0
  %rtx1503 = bitcast %union.rtunion_def* %arrayidx1502 to %struct.rtx_def**
  %655 = load %struct.rtx_def*, %struct.rtx_def** %rtx1503, align 8
  %656 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1504 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %656, i32 0, i32 1
  %arrayidx1505 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1504, i32 0, i64 1
  %rtx1506 = bitcast %union.rtunion_def* %arrayidx1505 to %struct.rtx_def**
  %657 = load %struct.rtx_def*, %struct.rtx_def** %rtx1506, align 8
  %call1507 = call i32 @rtx_equal_p(%struct.rtx_def* %655, %struct.rtx_def* %657)
  %tobool1508 = icmp ne i32 %call1507, 0
  br i1 %tobool1508, label %if.then.1509, label %if.end.1516

if.then.1509:                                     ; preds = %land.lhs.true.1497
  %658 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1510 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %658, i32 0, i32 1
  %arrayidx1511 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1510, i32 0, i64 1
  %rtx1512 = bitcast %union.rtunion_def* %arrayidx1511 to %struct.rtx_def**
  %659 = load %struct.rtx_def*, %struct.rtx_def** %rtx1512, align 8
  store %struct.rtx_def* %659, %struct.rtx_def** %op0, align 8
  %660 = load i32, i32* %code.addr, align 4
  %cmp1513 = icmp eq i32 %660, 104
  %cond1515 = select i1 %cmp1513, i32 105, i32 106
  store i32 %cond1515, i32* %code.addr, align 4
  br label %while.cond

if.end.1516:                                      ; preds = %land.lhs.true.1497, %land.lhs.true.1488, %land.lhs.true.1480, %sw.bb.1478
  br label %sw.epilog.2430

sw.bb.1517:                                       ; preds = %if.end.856
  %661 = load i64, i64* %const_op, align 8
  %cmp1518 = icmp eq i64 %661, 0
  br i1 %cmp1518, label %land.lhs.true.1520, label %if.end.1551

land.lhs.true.1520:                               ; preds = %sw.bb.1517
  %662 = load i32, i32* %equality_comparison_p, align 4
  %tobool1521 = icmp ne i32 %662, 0
  br i1 %tobool1521, label %land.lhs.true.1522, label %if.end.1551

land.lhs.true.1522:                               ; preds = %land.lhs.true.1520
  %663 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1523 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %663, i32 0, i32 1
  %arrayidx1524 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1523, i32 0, i64 0
  %rtx1525 = bitcast %union.rtunion_def* %arrayidx1524 to %struct.rtx_def**
  %664 = load %struct.rtx_def*, %struct.rtx_def** %rtx1525, align 8
  %665 = bitcast %struct.rtx_def* %664 to i32*
  %bf.load1526 = load i32, i32* %665, align 8
  %bf.clear1527 = and i32 %bf.load1526, 65535
  %cmp1528 = icmp eq i32 %bf.clear1527, 87
  br i1 %cmp1528, label %land.lhs.true.1530, label %if.end.1551

land.lhs.true.1530:                               ; preds = %land.lhs.true.1522
  %666 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1531 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %666, i32 0, i32 1
  %arrayidx1532 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1531, i32 0, i64 0
  %rtx1533 = bitcast %union.rtunion_def* %arrayidx1532 to %struct.rtx_def**
  %667 = load %struct.rtx_def*, %struct.rtx_def** %rtx1533, align 8
  %fld1534 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %667, i32 0, i32 1
  %arrayidx1535 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1534, i32 0, i64 0
  %rtx1536 = bitcast %union.rtunion_def* %arrayidx1535 to %struct.rtx_def**
  %668 = load %struct.rtx_def*, %struct.rtx_def** %rtx1536, align 8
  %669 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 65), align 8
  %cmp1537 = icmp eq %struct.rtx_def* %668, %669
  br i1 %cmp1537, label %if.then.1539, label %if.end.1551

if.then.1539:                                     ; preds = %land.lhs.true.1530
  %670 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %671 = load i32, i32* %mode573, align 4
  %672 = load i32, i32* %mode573, align 4
  %673 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1540 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %673, i32 0, i32 1
  %arrayidx1541 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1540, i32 0, i64 1
  %rtx1542 = bitcast %union.rtunion_def* %arrayidx1541 to %struct.rtx_def**
  %674 = load %struct.rtx_def*, %struct.rtx_def** %rtx1542, align 8
  %675 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1543 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %675, i32 0, i32 1
  %arrayidx1544 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1543, i32 0, i64 0
  %rtx1545 = bitcast %union.rtunion_def* %arrayidx1544 to %struct.rtx_def**
  %676 = load %struct.rtx_def*, %struct.rtx_def** %rtx1545, align 8
  %fld1546 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %676, i32 0, i32 1
  %arrayidx1547 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1546, i32 0, i64 1
  %rtx1548 = bitcast %union.rtunion_def* %arrayidx1547 to %struct.rtx_def**
  %677 = load %struct.rtx_def*, %struct.rtx_def** %rtx1548, align 8
  %call1549 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 90, i32 %672, %struct.rtx_def* %674, %struct.rtx_def* %677)
  %call1550 = call %struct.rtx_def* @simplify_and_const_int(%struct.rtx_def* %670, i32 %671, %struct.rtx_def* %call1549, i64 1)
  store %struct.rtx_def* %call1550, %struct.rtx_def** %op0, align 8
  br label %while.cond

if.end.1551:                                      ; preds = %land.lhs.true.1530, %land.lhs.true.1522, %land.lhs.true.1520, %sw.bb.1517
  %678 = load i64, i64* %const_op, align 8
  %cmp1552 = icmp eq i64 %678, 0
  br i1 %cmp1552, label %land.lhs.true.1554, label %if.end.1673

land.lhs.true.1554:                               ; preds = %if.end.1551
  %679 = load i32, i32* %equality_comparison_p, align 4
  %tobool1555 = icmp ne i32 %679, 0
  br i1 %tobool1555, label %land.lhs.true.1556, label %if.end.1673

land.lhs.true.1556:                               ; preds = %land.lhs.true.1554
  %680 = load i32, i32* %mode_width, align 4
  %cmp1557 = icmp ule i32 %680, 64
  br i1 %cmp1557, label %land.lhs.true.1559, label %if.end.1673

land.lhs.true.1559:                               ; preds = %land.lhs.true.1556
  %681 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1560 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %681, i32 0, i32 1
  %arrayidx1561 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1560, i32 0, i64 1
  %rtx1562 = bitcast %union.rtunion_def* %arrayidx1561 to %struct.rtx_def**
  %682 = load %struct.rtx_def*, %struct.rtx_def** %rtx1562, align 8
  %683 = bitcast %struct.rtx_def* %682 to i32*
  %bf.load1563 = load i32, i32* %683, align 8
  %bf.clear1564 = and i32 %bf.load1563, 65535
  %cmp1565 = icmp eq i32 %bf.clear1564, 54
  br i1 %cmp1565, label %land.lhs.true.1567, label %if.end.1673

land.lhs.true.1567:                               ; preds = %land.lhs.true.1559
  %684 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1568 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %684, i32 0, i32 1
  %arrayidx1569 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1568, i32 0, i64 0
  %rtx1570 = bitcast %union.rtunion_def* %arrayidx1569 to %struct.rtx_def**
  %685 = load %struct.rtx_def*, %struct.rtx_def** %rtx1570, align 8
  %686 = bitcast %struct.rtx_def* %685 to i32*
  %bf.load1571 = load i32, i32* %686, align 8
  %bf.clear1572 = and i32 %bf.load1571, 65535
  %cmp1573 = icmp eq i32 %bf.clear1572, 90
  br i1 %cmp1573, label %land.lhs.true.1575, label %if.end.1673

land.lhs.true.1575:                               ; preds = %land.lhs.true.1567
  %687 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1576 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %687, i32 0, i32 1
  %arrayidx1577 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1576, i32 0, i64 0
  %rtx1578 = bitcast %union.rtunion_def* %arrayidx1577 to %struct.rtx_def**
  %688 = load %struct.rtx_def*, %struct.rtx_def** %rtx1578, align 8
  %fld1579 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %688, i32 0, i32 1
  %arrayidx1580 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1579, i32 0, i64 1
  %rtx1581 = bitcast %union.rtunion_def* %arrayidx1580 to %struct.rtx_def**
  %689 = load %struct.rtx_def*, %struct.rtx_def** %rtx1581, align 8
  %690 = bitcast %struct.rtx_def* %689 to i32*
  %bf.load1582 = load i32, i32* %690, align 8
  %bf.clear1583 = and i32 %bf.load1582, 65535
  %cmp1584 = icmp eq i32 %bf.clear1583, 54
  br i1 %cmp1584, label %land.lhs.true.1586, label %if.end.1673

land.lhs.true.1586:                               ; preds = %land.lhs.true.1575
  %691 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1587 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %691, i32 0, i32 1
  %arrayidx1588 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1587, i32 0, i64 0
  %rtx1589 = bitcast %union.rtunion_def* %arrayidx1588 to %struct.rtx_def**
  %692 = load %struct.rtx_def*, %struct.rtx_def** %rtx1589, align 8
  %fld1590 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %692, i32 0, i32 1
  %arrayidx1591 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1590, i32 0, i64 1
  %rtx1592 = bitcast %union.rtunion_def* %arrayidx1591 to %struct.rtx_def**
  %693 = load %struct.rtx_def*, %struct.rtx_def** %rtx1592, align 8
  %fld1593 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %693, i32 0, i32 1
  %arrayidx1594 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1593, i32 0, i64 0
  %rtwint1595 = bitcast %union.rtunion_def* %arrayidx1594 to i64*
  %694 = load i64, i64* %rtwint1595, align 8
  %cmp1596 = icmp sge i64 %694, 0
  br i1 %cmp1596, label %land.lhs.true.1598, label %if.end.1673

land.lhs.true.1598:                               ; preds = %land.lhs.true.1586
  %695 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1599 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %695, i32 0, i32 1
  %arrayidx1600 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1599, i32 0, i64 0
  %rtx1601 = bitcast %union.rtunion_def* %arrayidx1600 to %struct.rtx_def**
  %696 = load %struct.rtx_def*, %struct.rtx_def** %rtx1601, align 8
  %fld1602 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %696, i32 0, i32 1
  %arrayidx1603 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1602, i32 0, i64 1
  %rtx1604 = bitcast %union.rtunion_def* %arrayidx1603 to %struct.rtx_def**
  %697 = load %struct.rtx_def*, %struct.rtx_def** %rtx1604, align 8
  %fld1605 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %697, i32 0, i32 1
  %arrayidx1606 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1605, i32 0, i64 0
  %rtwint1607 = bitcast %union.rtunion_def* %arrayidx1606 to i64*
  %698 = load i64, i64* %rtwint1607, align 8
  %cmp1608 = icmp slt i64 %698, 64
  br i1 %cmp1608, label %if.then.1610, label %if.end.1673

if.then.1610:                                     ; preds = %land.lhs.true.1598
  %699 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1611 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %699, i32 0, i32 1
  %arrayidx1612 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1611, i32 0, i64 1
  %rtx1613 = bitcast %union.rtunion_def* %arrayidx1612 to %struct.rtx_def**
  %700 = load %struct.rtx_def*, %struct.rtx_def** %rtx1613, align 8
  %fld1614 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %700, i32 0, i32 1
  %arrayidx1615 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1614, i32 0, i64 0
  %rtwint1616 = bitcast %union.rtunion_def* %arrayidx1615 to i64*
  %701 = load i64, i64* %rtwint1616, align 8
  %702 = load i32, i32* %mode573, align 4
  %idxprom1617 = sext i32 %702 to i64
  %arrayidx1618 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom1617
  %703 = load i64, i64* %arrayidx1618, align 8
  %and1619 = and i64 %701, %703
  %704 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1620 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %704, i32 0, i32 1
  %arrayidx1621 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1620, i32 0, i64 0
  %rtx1622 = bitcast %union.rtunion_def* %arrayidx1621 to %struct.rtx_def**
  %705 = load %struct.rtx_def*, %struct.rtx_def** %rtx1622, align 8
  %fld1623 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %705, i32 0, i32 1
  %arrayidx1624 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1623, i32 0, i64 1
  %rtx1625 = bitcast %union.rtunion_def* %arrayidx1624 to %struct.rtx_def**
  %706 = load %struct.rtx_def*, %struct.rtx_def** %rtx1625, align 8
  %fld1626 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %706, i32 0, i32 1
  %arrayidx1627 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1626, i32 0, i64 0
  %rtwint1628 = bitcast %union.rtunion_def* %arrayidx1627 to i64*
  %707 = load i64, i64* %rtwint1628, align 8
  %shl1629 = shl i64 %and1619, %707
  store i64 %shl1629, i64* %mask580, align 8
  %708 = load i64, i64* %mask580, align 8
  %and1630 = and i64 -2, %708
  %cmp1631 = icmp eq i64 %and1630, 0
  br i1 %cmp1631, label %land.lhs.true.1633, label %if.end.1672

land.lhs.true.1633:                               ; preds = %if.then.1610
  %709 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1634 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %709, i32 0, i32 1
  %arrayidx1635 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1634, i32 0, i64 0
  %rtx1636 = bitcast %union.rtunion_def* %arrayidx1635 to %struct.rtx_def**
  %710 = load %struct.rtx_def*, %struct.rtx_def** %rtx1636, align 8
  %fld1637 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %710, i32 0, i32 1
  %arrayidx1638 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1637, i32 0, i64 0
  %rtx1639 = bitcast %union.rtunion_def* %arrayidx1638 to %struct.rtx_def**
  %711 = load %struct.rtx_def*, %struct.rtx_def** %rtx1639, align 8
  %712 = bitcast %struct.rtx_def* %711 to i32*
  %bf.load1640 = load i32, i32* %712, align 8
  %bf.clear1641 = and i32 %bf.load1640, 65535
  %idxprom1642 = sext i32 %bf.clear1641 to i64
  %arrayidx1643 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom1642
  %713 = load i8, i8* %arrayidx1643, align 1
  %conv1644 = sext i8 %713 to i32
  %cmp1645 = icmp eq i32 %conv1644, 60
  br i1 %cmp1645, label %if.then.1665, label %lor.lhs.false.1647

lor.lhs.false.1647:                               ; preds = %land.lhs.true.1633
  %714 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1648 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %714, i32 0, i32 1
  %arrayidx1649 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1648, i32 0, i64 0
  %rtx1650 = bitcast %union.rtunion_def* %arrayidx1649 to %struct.rtx_def**
  %715 = load %struct.rtx_def*, %struct.rtx_def** %rtx1650, align 8
  %fld1651 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %715, i32 0, i32 1
  %arrayidx1652 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1651, i32 0, i64 0
  %rtx1653 = bitcast %union.rtunion_def* %arrayidx1652 to %struct.rtx_def**
  %716 = load %struct.rtx_def*, %struct.rtx_def** %rtx1653, align 8
  %call1654 = call %struct.rtx_def* @get_last_value(%struct.rtx_def* %716)
  store %struct.rtx_def* %call1654, %struct.rtx_def** %tem, align 8
  %cmp1655 = icmp ne %struct.rtx_def* %call1654, null
  br i1 %cmp1655, label %land.lhs.true.1657, label %if.end.1672

land.lhs.true.1657:                               ; preds = %lor.lhs.false.1647
  %717 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %718 = bitcast %struct.rtx_def* %717 to i32*
  %bf.load1658 = load i32, i32* %718, align 8
  %bf.clear1659 = and i32 %bf.load1658, 65535
  %idxprom1660 = sext i32 %bf.clear1659 to i64
  %arrayidx1661 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom1660
  %719 = load i8, i8* %arrayidx1661, align 1
  %conv1662 = sext i8 %719 to i32
  %cmp1663 = icmp eq i32 %conv1662, 60
  br i1 %cmp1663, label %if.then.1665, label %if.end.1672

if.then.1665:                                     ; preds = %land.lhs.true.1657, %land.lhs.true.1633
  %720 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1666 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %720, i32 0, i32 1
  %arrayidx1667 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1666, i32 0, i64 0
  %rtx1668 = bitcast %union.rtunion_def* %arrayidx1667 to %struct.rtx_def**
  %721 = load %struct.rtx_def*, %struct.rtx_def** %rtx1668, align 8
  %fld1669 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %721, i32 0, i32 1
  %arrayidx1670 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1669, i32 0, i64 0
  %rtx1671 = bitcast %union.rtunion_def* %arrayidx1670 to %struct.rtx_def**
  %722 = load %struct.rtx_def*, %struct.rtx_def** %rtx1671, align 8
  store %struct.rtx_def* %722, %struct.rtx_def** %op0, align 8
  br label %while.cond

if.end.1672:                                      ; preds = %land.lhs.true.1657, %lor.lhs.false.1647, %if.then.1610
  br label %if.end.1673

if.end.1673:                                      ; preds = %if.end.1672, %land.lhs.true.1598, %land.lhs.true.1586, %land.lhs.true.1575, %land.lhs.true.1567, %land.lhs.true.1559, %land.lhs.true.1556, %land.lhs.true.1554, %if.end.1551
  %723 = load i32, i32* %equality_comparison_p, align 4
  %tobool1674 = icmp ne i32 %723, 0
  br i1 %tobool1674, label %land.lhs.true.1675, label %if.end.1711

land.lhs.true.1675:                               ; preds = %if.end.1673
  %724 = load i64, i64* %const_op, align 8
  %cmp1676 = icmp eq i64 %724, 0
  br i1 %cmp1676, label %land.lhs.true.1678, label %if.end.1711

land.lhs.true.1678:                               ; preds = %land.lhs.true.1675
  %725 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1679 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %725, i32 0, i32 1
  %arrayidx1680 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1679, i32 0, i64 1
  %rtx1681 = bitcast %union.rtunion_def* %arrayidx1680 to %struct.rtx_def**
  %726 = load %struct.rtx_def*, %struct.rtx_def** %rtx1681, align 8
  %727 = bitcast %struct.rtx_def* %726 to i32*
  %bf.load1682 = load i32, i32* %727, align 8
  %bf.clear1683 = and i32 %bf.load1682, 65535
  %cmp1684 = icmp eq i32 %bf.clear1683, 54
  br i1 %cmp1684, label %land.lhs.true.1686, label %if.end.1711

land.lhs.true.1686:                               ; preds = %land.lhs.true.1678
  %728 = load i32, i32* %mode_width, align 4
  %cmp1687 = icmp ule i32 %728, 64
  br i1 %cmp1687, label %land.lhs.true.1689, label %if.end.1711

land.lhs.true.1689:                               ; preds = %land.lhs.true.1686
  %729 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1690 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %729, i32 0, i32 1
  %arrayidx1691 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1690, i32 0, i64 1
  %rtx1692 = bitcast %union.rtunion_def* %arrayidx1691 to %struct.rtx_def**
  %730 = load %struct.rtx_def*, %struct.rtx_def** %rtx1692, align 8
  %fld1693 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %730, i32 0, i32 1
  %arrayidx1694 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1693, i32 0, i64 0
  %rtwint1695 = bitcast %union.rtunion_def* %arrayidx1694 to i64*
  %731 = load i64, i64* %rtwint1695, align 8
  %732 = load i32, i32* %mode573, align 4
  %idxprom1696 = sext i32 %732 to i64
  %arrayidx1697 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom1696
  %733 = load i64, i64* %arrayidx1697, align 8
  %and1698 = and i64 %731, %733
  %734 = load i32, i32* %mode_width, align 4
  %sub1699 = sub i32 %734, 1
  %sh_prom1700 = zext i32 %sub1699 to i64
  %shl1701 = shl i64 1, %sh_prom1700
  %cmp1702 = icmp eq i64 %and1698, %shl1701
  br i1 %cmp1702, label %if.then.1704, label %if.end.1711

if.then.1704:                                     ; preds = %land.lhs.true.1689
  %735 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1705 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %735, i32 0, i32 1
  %arrayidx1706 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1705, i32 0, i64 0
  %rtx1707 = bitcast %union.rtunion_def* %arrayidx1706 to %struct.rtx_def**
  %736 = load %struct.rtx_def*, %struct.rtx_def** %rtx1707, align 8
  store %struct.rtx_def* %736, %struct.rtx_def** %op0, align 8
  %737 = load i32, i32* %code.addr, align 4
  %cmp1708 = icmp eq i32 %737, 103
  %cond1710 = select i1 %cmp1708, i32 104, i32 107
  store i32 %cond1710, i32* %code.addr, align 4
  br label %while.cond

if.end.1711:                                      ; preds = %land.lhs.true.1689, %land.lhs.true.1686, %land.lhs.true.1678, %land.lhs.true.1675, %if.end.1673
  %738 = load i32, i32* %equality_comparison_p, align 4
  %tobool1712 = icmp ne i32 %738, 0
  br i1 %tobool1712, label %land.lhs.true.1715, label %lor.lhs.false.1713

lor.lhs.false.1713:                               ; preds = %if.end.1711
  %739 = load i32, i32* %unsigned_comparison_p, align 4
  %tobool1714 = icmp ne i32 %739, 0
  br i1 %tobool1714, label %land.lhs.true.1715, label %if.end.1751

land.lhs.true.1715:                               ; preds = %lor.lhs.false.1713, %if.end.1711
  %740 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1716 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %740, i32 0, i32 1
  %arrayidx1717 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1716, i32 0, i64 1
  %rtx1718 = bitcast %union.rtunion_def* %arrayidx1717 to %struct.rtx_def**
  %741 = load %struct.rtx_def*, %struct.rtx_def** %rtx1718, align 8
  %742 = bitcast %struct.rtx_def* %741 to i32*
  %bf.load1719 = load i32, i32* %742, align 8
  %bf.clear1720 = and i32 %bf.load1719, 65535
  %cmp1721 = icmp eq i32 %bf.clear1720, 54
  br i1 %cmp1721, label %land.lhs.true.1723, label %if.end.1751

land.lhs.true.1723:                               ; preds = %land.lhs.true.1715
  %743 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1724 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %743, i32 0, i32 1
  %arrayidx1725 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1724, i32 0, i64 1
  %rtx1726 = bitcast %union.rtunion_def* %arrayidx1725 to %struct.rtx_def**
  %744 = load %struct.rtx_def*, %struct.rtx_def** %rtx1726, align 8
  %fld1727 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %744, i32 0, i32 1
  %arrayidx1728 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1727, i32 0, i64 0
  %rtwint1729 = bitcast %union.rtunion_def* %arrayidx1728 to i64*
  %745 = load i64, i64* %rtwint1729, align 8
  %746 = load i32, i32* %mode573, align 4
  %idxprom1730 = sext i32 %746 to i64
  %arrayidx1731 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom1730
  %747 = load i64, i64* %arrayidx1731, align 8
  %and1732 = and i64 %745, %747
  %add1733 = add i64 %and1732, 1
  %call1734 = call i32 @exact_log2_wide(i64 %add1733)
  store i32 %call1734, i32* %i, align 4
  %cmp1735 = icmp sge i32 %call1734, 0
  br i1 %cmp1735, label %land.lhs.true.1737, label %if.end.1751

land.lhs.true.1737:                               ; preds = %land.lhs.true.1723
  %748 = load i64, i64* %const_op, align 8
  %749 = load i32, i32* %i, align 4
  %sh_prom1738 = zext i32 %749 to i64
  %shr1739 = ashr i64 %748, %sh_prom1738
  %cmp1740 = icmp eq i64 %shr1739, 0
  br i1 %cmp1740, label %land.lhs.true.1742, label %if.end.1751

land.lhs.true.1742:                               ; preds = %land.lhs.true.1737
  %750 = load i32, i32* %i, align 4
  %call1743 = call i32 @mode_for_size(i32 %750, i32 1, i32 1)
  store i32 %call1743, i32* %tmode, align 4
  %cmp1744 = icmp ne i32 %call1743, 51
  br i1 %cmp1744, label %if.then.1746, label %if.end.1751

if.then.1746:                                     ; preds = %land.lhs.true.1742
  %751 = load i32, i32* %tmode, align 4
  %752 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1747 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %752, i32 0, i32 1
  %arrayidx1748 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1747, i32 0, i64 0
  %rtx1749 = bitcast %union.rtunion_def* %arrayidx1748 to %struct.rtx_def**
  %753 = load %struct.rtx_def*, %struct.rtx_def** %rtx1749, align 8
  %call1750 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %751, %struct.rtx_def* %753)
  store %struct.rtx_def* %call1750, %struct.rtx_def** %op0, align 8
  br label %while.cond

if.end.1751:                                      ; preds = %land.lhs.true.1742, %land.lhs.true.1737, %land.lhs.true.1723, %land.lhs.true.1715, %lor.lhs.false.1713
  %754 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1752 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %754, i32 0, i32 1
  %arrayidx1753 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1752, i32 0, i64 0
  %rtx1754 = bitcast %union.rtunion_def* %arrayidx1753 to %struct.rtx_def**
  %755 = load %struct.rtx_def*, %struct.rtx_def** %rtx1754, align 8
  %756 = bitcast %struct.rtx_def* %755 to i32*
  %bf.load1755 = load i32, i32* %756, align 8
  %bf.clear1756 = and i32 %bf.load1755, 65535
  %cmp1757 = icmp eq i32 %bf.clear1756, 63
  br i1 %cmp1757, label %land.lhs.true.1759, label %if.end.1913

land.lhs.true.1759:                               ; preds = %if.end.1751
  %757 = load i32, i32* %mode_width, align 4
  %758 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1760 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %758, i32 0, i32 1
  %arrayidx1761 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1760, i32 0, i64 0
  %rtx1762 = bitcast %union.rtunion_def* %arrayidx1761 to %struct.rtx_def**
  %759 = load %struct.rtx_def*, %struct.rtx_def** %rtx1762, align 8
  %fld1763 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %759, i32 0, i32 1
  %arrayidx1764 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1763, i32 0, i64 0
  %rtx1765 = bitcast %union.rtunion_def* %arrayidx1764 to %struct.rtx_def**
  %760 = load %struct.rtx_def*, %struct.rtx_def** %rtx1765, align 8
  %761 = bitcast %struct.rtx_def* %760 to i32*
  %bf.load1766 = load i32, i32* %761, align 8
  %bf.lshr1767 = lshr i32 %bf.load1766, 16
  %bf.clear1768 = and i32 %bf.lshr1767, 255
  %idxprom1769 = sext i32 %bf.clear1768 to i64
  %arrayidx1770 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1769
  %762 = load i16, i16* %arrayidx1770, align 2
  %conv1771 = zext i16 %762 to i32
  %cmp1772 = icmp ule i32 %757, %conv1771
  br i1 %cmp1772, label %land.lhs.true.1774, label %if.end.1913

land.lhs.true.1774:                               ; preds = %land.lhs.true.1759
  %763 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1775 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %763, i32 0, i32 1
  %arrayidx1776 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1775, i32 0, i64 0
  %rtx1777 = bitcast %union.rtunion_def* %arrayidx1776 to %struct.rtx_def**
  %764 = load %struct.rtx_def*, %struct.rtx_def** %rtx1777, align 8
  %call1778 = call i32 @subreg_lowpart_p(%struct.rtx_def* %764)
  %tobool1779 = icmp ne i32 %call1778, 0
  br i1 %tobool1779, label %land.lhs.true.1780, label %if.end.1913

land.lhs.true.1780:                               ; preds = %land.lhs.true.1774
  %765 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1781 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %765, i32 0, i32 1
  %arrayidx1782 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1781, i32 0, i64 0
  %rtx1783 = bitcast %union.rtunion_def* %arrayidx1782 to %struct.rtx_def**
  %766 = load %struct.rtx_def*, %struct.rtx_def** %rtx1783, align 8
  %767 = bitcast %struct.rtx_def* %766 to i32*
  %bf.load1784 = load i32, i32* %767, align 8
  %bf.lshr1785 = lshr i32 %bf.load1784, 16
  %bf.clear1786 = and i32 %bf.lshr1785, 255
  %idxprom1787 = sext i32 %bf.clear1786 to i64
  %arrayidx1788 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1787
  %768 = load i8, i8* %arrayidx1788, align 1
  %conv1789 = zext i8 %768 to i32
  %769 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1790 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %769, i32 0, i32 1
  %arrayidx1791 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1790, i32 0, i64 0
  %rtx1792 = bitcast %union.rtunion_def* %arrayidx1791 to %struct.rtx_def**
  %770 = load %struct.rtx_def*, %struct.rtx_def** %rtx1792, align 8
  %fld1793 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %770, i32 0, i32 1
  %arrayidx1794 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1793, i32 0, i64 0
  %rtx1795 = bitcast %union.rtunion_def* %arrayidx1794 to %struct.rtx_def**
  %771 = load %struct.rtx_def*, %struct.rtx_def** %rtx1795, align 8
  %772 = bitcast %struct.rtx_def* %771 to i32*
  %bf.load1796 = load i32, i32* %772, align 8
  %bf.lshr1797 = lshr i32 %bf.load1796, 16
  %bf.clear1798 = and i32 %bf.lshr1797, 255
  %idxprom1799 = sext i32 %bf.clear1798 to i64
  %arrayidx1800 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1799
  %773 = load i8, i8* %arrayidx1800, align 1
  %conv1801 = zext i8 %773 to i32
  %cmp1802 = icmp sle i32 %conv1789, %conv1801
  br i1 %cmp1802, label %land.lhs.true.1804, label %if.end.1913

land.lhs.true.1804:                               ; preds = %land.lhs.true.1780
  %774 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1805 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %774, i32 0, i32 1
  %arrayidx1806 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1805, i32 0, i64 1
  %rtx1807 = bitcast %union.rtunion_def* %arrayidx1806 to %struct.rtx_def**
  %775 = load %struct.rtx_def*, %struct.rtx_def** %rtx1807, align 8
  %776 = bitcast %struct.rtx_def* %775 to i32*
  %bf.load1808 = load i32, i32* %776, align 8
  %bf.clear1809 = and i32 %bf.load1808, 65535
  %cmp1810 = icmp eq i32 %bf.clear1809, 54
  br i1 %cmp1810, label %land.lhs.true.1812, label %if.end.1913

land.lhs.true.1812:                               ; preds = %land.lhs.true.1804
  %777 = load i32, i32* %mode_width, align 4
  %cmp1813 = icmp ule i32 %777, 64
  br i1 %cmp1813, label %land.lhs.true.1815, label %if.end.1913

land.lhs.true.1815:                               ; preds = %land.lhs.true.1812
  %778 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1816 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %778, i32 0, i32 1
  %arrayidx1817 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1816, i32 0, i64 0
  %rtx1818 = bitcast %union.rtunion_def* %arrayidx1817 to %struct.rtx_def**
  %779 = load %struct.rtx_def*, %struct.rtx_def** %rtx1818, align 8
  %fld1819 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %779, i32 0, i32 1
  %arrayidx1820 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1819, i32 0, i64 0
  %rtx1821 = bitcast %union.rtunion_def* %arrayidx1820 to %struct.rtx_def**
  %780 = load %struct.rtx_def*, %struct.rtx_def** %rtx1821, align 8
  %781 = bitcast %struct.rtx_def* %780 to i32*
  %bf.load1822 = load i32, i32* %781, align 8
  %bf.lshr1823 = lshr i32 %bf.load1822, 16
  %bf.clear1824 = and i32 %bf.lshr1823, 255
  %idxprom1825 = sext i32 %bf.clear1824 to i64
  %arrayidx1826 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1825
  %782 = load i16, i16* %arrayidx1826, align 2
  %conv1827 = zext i16 %782 to i32
  %cmp1828 = icmp sle i32 %conv1827, 64
  br i1 %cmp1828, label %land.lhs.true.1830, label %if.end.1913

land.lhs.true.1830:                               ; preds = %land.lhs.true.1815
  %783 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1831 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %783, i32 0, i32 1
  %arrayidx1832 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1831, i32 0, i64 1
  %rtx1833 = bitcast %union.rtunion_def* %arrayidx1832 to %struct.rtx_def**
  %784 = load %struct.rtx_def*, %struct.rtx_def** %rtx1833, align 8
  %fld1834 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %784, i32 0, i32 1
  %arrayidx1835 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1834, i32 0, i64 0
  %rtwint1836 = bitcast %union.rtunion_def* %arrayidx1835 to i64*
  %785 = load i64, i64* %rtwint1836, align 8
  %786 = load i64, i64* %mask580, align 8
  %neg1837 = xor i64 %786, -1
  %and1838 = and i64 %785, %neg1837
  %cmp1839 = icmp eq i64 %and1838, 0
  br i1 %cmp1839, label %land.lhs.true.1841, label %if.end.1913

land.lhs.true.1841:                               ; preds = %land.lhs.true.1830
  %787 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1842 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %787, i32 0, i32 1
  %arrayidx1843 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1842, i32 0, i64 0
  %rtx1844 = bitcast %union.rtunion_def* %arrayidx1843 to %struct.rtx_def**
  %788 = load %struct.rtx_def*, %struct.rtx_def** %rtx1844, align 8
  %fld1845 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %788, i32 0, i32 1
  %arrayidx1846 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1845, i32 0, i64 0
  %rtx1847 = bitcast %union.rtunion_def* %arrayidx1846 to %struct.rtx_def**
  %789 = load %struct.rtx_def*, %struct.rtx_def** %rtx1847, align 8
  %790 = bitcast %struct.rtx_def* %789 to i32*
  %bf.load1848 = load i32, i32* %790, align 8
  %bf.lshr1849 = lshr i32 %bf.load1848, 16
  %bf.clear1850 = and i32 %bf.lshr1849, 255
  %idxprom1851 = sext i32 %bf.clear1850 to i64
  %arrayidx1852 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom1851
  %791 = load i64, i64* %arrayidx1852, align 8
  %neg1853 = xor i64 %791, -1
  %792 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1854 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %792, i32 0, i32 1
  %arrayidx1855 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1854, i32 0, i64 1
  %rtx1856 = bitcast %union.rtunion_def* %arrayidx1855 to %struct.rtx_def**
  %793 = load %struct.rtx_def*, %struct.rtx_def** %rtx1856, align 8
  %fld1857 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %793, i32 0, i32 1
  %arrayidx1858 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1857, i32 0, i64 0
  %rtwint1859 = bitcast %union.rtunion_def* %arrayidx1858 to i64*
  %794 = load i64, i64* %rtwint1859, align 8
  %and1860 = and i64 %neg1853, %794
  %cmp1861 = icmp eq i64 0, %and1860
  br i1 %cmp1861, label %land.lhs.true.1863, label %if.end.1913

land.lhs.true.1863:                               ; preds = %land.lhs.true.1841
  %795 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1864 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %795, i32 0, i32 1
  %arrayidx1865 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1864, i32 0, i64 1
  %rtx1866 = bitcast %union.rtunion_def* %arrayidx1865 to %struct.rtx_def**
  %796 = load %struct.rtx_def*, %struct.rtx_def** %rtx1866, align 8
  %fld1867 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %796, i32 0, i32 1
  %arrayidx1868 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1867, i32 0, i64 0
  %rtwint1869 = bitcast %union.rtunion_def* %arrayidx1868 to i64*
  %797 = load i64, i64* %rtwint1869, align 8
  %798 = load i64, i64* %mask580, align 8
  %cmp1870 = icmp ne i64 %797, %798
  br i1 %cmp1870, label %land.lhs.true.1872, label %if.end.1913

land.lhs.true.1872:                               ; preds = %land.lhs.true.1863
  %799 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1873 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %799, i32 0, i32 1
  %arrayidx1874 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1873, i32 0, i64 1
  %rtx1875 = bitcast %union.rtunion_def* %arrayidx1874 to %struct.rtx_def**
  %800 = load %struct.rtx_def*, %struct.rtx_def** %rtx1875, align 8
  %fld1876 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %800, i32 0, i32 1
  %arrayidx1877 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1876, i32 0, i64 0
  %rtwint1878 = bitcast %union.rtunion_def* %arrayidx1877 to i64*
  %801 = load i64, i64* %rtwint1878, align 8
  %802 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1879 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %802, i32 0, i32 1
  %arrayidx1880 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1879, i32 0, i64 0
  %rtx1881 = bitcast %union.rtunion_def* %arrayidx1880 to %struct.rtx_def**
  %803 = load %struct.rtx_def*, %struct.rtx_def** %rtx1881, align 8
  %fld1882 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %803, i32 0, i32 1
  %arrayidx1883 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1882, i32 0, i64 0
  %rtx1884 = bitcast %union.rtunion_def* %arrayidx1883 to %struct.rtx_def**
  %804 = load %struct.rtx_def*, %struct.rtx_def** %rtx1884, align 8
  %805 = bitcast %struct.rtx_def* %804 to i32*
  %bf.load1885 = load i32, i32* %805, align 8
  %bf.lshr1886 = lshr i32 %bf.load1885, 16
  %bf.clear1887 = and i32 %bf.lshr1886, 255
  %idxprom1888 = sext i32 %bf.clear1887 to i64
  %arrayidx1889 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom1888
  %806 = load i64, i64* %arrayidx1889, align 8
  %cmp1890 = icmp ne i64 %801, %806
  br i1 %cmp1890, label %if.then.1892, label %if.end.1913

if.then.1892:                                     ; preds = %land.lhs.true.1872
  %807 = load i32, i32* %mode573, align 4
  %808 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1893 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %808, i32 0, i32 1
  %arrayidx1894 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1893, i32 0, i64 0
  %rtx1895 = bitcast %union.rtunion_def* %arrayidx1894 to %struct.rtx_def**
  %809 = load %struct.rtx_def*, %struct.rtx_def** %rtx1895, align 8
  %fld1896 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %809, i32 0, i32 1
  %arrayidx1897 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1896, i32 0, i64 0
  %rtx1898 = bitcast %union.rtunion_def* %arrayidx1897 to %struct.rtx_def**
  %810 = load %struct.rtx_def*, %struct.rtx_def** %rtx1898, align 8
  %811 = bitcast %struct.rtx_def* %810 to i32*
  %bf.load1899 = load i32, i32* %811, align 8
  %bf.lshr1900 = lshr i32 %bf.load1899, 16
  %bf.clear1901 = and i32 %bf.lshr1900, 255
  %812 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1902 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %812, i32 0, i32 1
  %arrayidx1903 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1902, i32 0, i64 0
  %rtx1904 = bitcast %union.rtunion_def* %arrayidx1903 to %struct.rtx_def**
  %813 = load %struct.rtx_def*, %struct.rtx_def** %rtx1904, align 8
  %fld1905 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %813, i32 0, i32 1
  %arrayidx1906 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1905, i32 0, i64 0
  %rtx1907 = bitcast %union.rtunion_def* %arrayidx1906 to %struct.rtx_def**
  %814 = load %struct.rtx_def*, %struct.rtx_def** %rtx1907, align 8
  %815 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1908 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %815, i32 0, i32 1
  %arrayidx1909 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1908, i32 0, i64 1
  %rtx1910 = bitcast %union.rtunion_def* %arrayidx1909 to %struct.rtx_def**
  %816 = load %struct.rtx_def*, %struct.rtx_def** %rtx1910, align 8
  %call1911 = call %struct.rtx_def* @gen_binary(i32 83, i32 %bf.clear1901, %struct.rtx_def* %814, %struct.rtx_def* %816)
  %call1912 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %807, %struct.rtx_def* %call1911)
  store %struct.rtx_def* %call1912, %struct.rtx_def** %op0, align 8
  br label %while.cond

if.end.1913:                                      ; preds = %land.lhs.true.1872, %land.lhs.true.1863, %land.lhs.true.1841, %land.lhs.true.1830, %land.lhs.true.1815, %land.lhs.true.1812, %land.lhs.true.1804, %land.lhs.true.1780, %land.lhs.true.1774, %land.lhs.true.1759, %if.end.1751
  %817 = load i64, i64* %const_op, align 8
  %cmp1914 = icmp eq i64 %817, 0
  br i1 %cmp1914, label %land.lhs.true.1916, label %if.end.1964

land.lhs.true.1916:                               ; preds = %if.end.1913
  %818 = load i32, i32* %equality_comparison_p, align 4
  %tobool1917 = icmp ne i32 %818, 0
  br i1 %tobool1917, label %land.lhs.true.1918, label %if.end.1964

land.lhs.true.1918:                               ; preds = %land.lhs.true.1916
  %819 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1919 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %819, i32 0, i32 1
  %arrayidx1920 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1919, i32 0, i64 1
  %rtx1921 = bitcast %union.rtunion_def* %arrayidx1920 to %struct.rtx_def**
  %820 = load %struct.rtx_def*, %struct.rtx_def** %rtx1921, align 8
  %821 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 65), align 8
  %cmp1922 = icmp eq %struct.rtx_def* %820, %821
  br i1 %cmp1922, label %land.lhs.true.1924, label %if.end.1964

land.lhs.true.1924:                               ; preds = %land.lhs.true.1918
  %822 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1925 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %822, i32 0, i32 1
  %arrayidx1926 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1925, i32 0, i64 0
  %rtx1927 = bitcast %union.rtunion_def* %arrayidx1926 to %struct.rtx_def**
  %823 = load %struct.rtx_def*, %struct.rtx_def** %rtx1927, align 8
  %824 = bitcast %struct.rtx_def* %823 to i32*
  %bf.load1928 = load i32, i32* %824, align 8
  %bf.clear1929 = and i32 %bf.load1928, 65535
  %cmp1930 = icmp eq i32 %bf.clear1929, 90
  br i1 %cmp1930, label %land.lhs.true.1932, label %if.end.1964

land.lhs.true.1932:                               ; preds = %land.lhs.true.1924
  %825 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1933 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %825, i32 0, i32 1
  %arrayidx1934 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1933, i32 0, i64 0
  %rtx1935 = bitcast %union.rtunion_def* %arrayidx1934 to %struct.rtx_def**
  %826 = load %struct.rtx_def*, %struct.rtx_def** %rtx1935, align 8
  %fld1936 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %826, i32 0, i32 1
  %arrayidx1937 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1936, i32 0, i64 0
  %rtx1938 = bitcast %union.rtunion_def* %arrayidx1937 to %struct.rtx_def**
  %827 = load %struct.rtx_def*, %struct.rtx_def** %rtx1938, align 8
  %828 = bitcast %struct.rtx_def* %827 to i32*
  %bf.load1939 = load i32, i32* %828, align 8
  %bf.clear1940 = and i32 %bf.load1939, 65535
  %cmp1941 = icmp eq i32 %bf.clear1940, 86
  br i1 %cmp1941, label %if.then.1943, label %if.end.1964

if.then.1943:                                     ; preds = %land.lhs.true.1932
  %829 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %830 = load i32, i32* %mode573, align 4
  %831 = load i32, i32* %mode573, align 4
  %832 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1944 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %832, i32 0, i32 1
  %arrayidx1945 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1944, i32 0, i64 0
  %rtx1946 = bitcast %union.rtunion_def* %arrayidx1945 to %struct.rtx_def**
  %833 = load %struct.rtx_def*, %struct.rtx_def** %rtx1946, align 8
  %fld1947 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %833, i32 0, i32 1
  %arrayidx1948 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1947, i32 0, i64 0
  %rtx1949 = bitcast %union.rtunion_def* %arrayidx1948 to %struct.rtx_def**
  %834 = load %struct.rtx_def*, %struct.rtx_def** %rtx1949, align 8
  %fld1950 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %834, i32 0, i32 1
  %arrayidx1951 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1950, i32 0, i64 0
  %rtx1952 = bitcast %union.rtunion_def* %arrayidx1951 to %struct.rtx_def**
  %835 = load %struct.rtx_def*, %struct.rtx_def** %rtx1952, align 8
  %836 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1953 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %836, i32 0, i32 1
  %arrayidx1954 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1953, i32 0, i64 0
  %rtx1955 = bitcast %union.rtunion_def* %arrayidx1954 to %struct.rtx_def**
  %837 = load %struct.rtx_def*, %struct.rtx_def** %rtx1955, align 8
  %fld1956 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %837, i32 0, i32 1
  %arrayidx1957 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1956, i32 0, i64 1
  %rtx1958 = bitcast %union.rtunion_def* %arrayidx1957 to %struct.rtx_def**
  %838 = load %struct.rtx_def*, %struct.rtx_def** %rtx1958, align 8
  %call1959 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 90, i32 %831, %struct.rtx_def* %835, %struct.rtx_def* %838)
  %call1960 = call %struct.rtx_def* @simplify_and_const_int(%struct.rtx_def* %829, i32 %830, %struct.rtx_def* %call1959, i64 1)
  store %struct.rtx_def* %call1960, %struct.rtx_def** %op0, align 8
  %839 = load i32, i32* %code.addr, align 4
  %cmp1961 = icmp eq i32 %839, 102
  %cond1963 = select i1 %cmp1961, i32 103, i32 102
  store i32 %cond1963, i32* %code.addr, align 4
  br label %while.cond

if.end.1964:                                      ; preds = %land.lhs.true.1932, %land.lhs.true.1924, %land.lhs.true.1918, %land.lhs.true.1916, %if.end.1913
  br label %sw.epilog.2430

sw.bb.1965:                                       ; preds = %if.end.856
  %840 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1966 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %840, i32 0, i32 1
  %arrayidx1967 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1966, i32 0, i64 1
  %rtx1968 = bitcast %union.rtunion_def* %arrayidx1967 to %struct.rtx_def**
  %841 = load %struct.rtx_def*, %struct.rtx_def** %rtx1968, align 8
  %842 = bitcast %struct.rtx_def* %841 to i32*
  %bf.load1969 = load i32, i32* %842, align 8
  %bf.clear1970 = and i32 %bf.load1969, 65535
  %cmp1971 = icmp eq i32 %bf.clear1970, 54
  br i1 %cmp1971, label %land.lhs.true.1973, label %if.end.2046

land.lhs.true.1973:                               ; preds = %sw.bb.1965
  %843 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1974 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %843, i32 0, i32 1
  %arrayidx1975 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1974, i32 0, i64 1
  %rtx1976 = bitcast %union.rtunion_def* %arrayidx1975 to %struct.rtx_def**
  %844 = load %struct.rtx_def*, %struct.rtx_def** %rtx1976, align 8
  %fld1977 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %844, i32 0, i32 1
  %arrayidx1978 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1977, i32 0, i64 0
  %rtwint1979 = bitcast %union.rtunion_def* %arrayidx1978 to i64*
  %845 = load i64, i64* %rtwint1979, align 8
  %cmp1980 = icmp sge i64 %845, 0
  br i1 %cmp1980, label %land.lhs.true.1982, label %if.end.2046

land.lhs.true.1982:                               ; preds = %land.lhs.true.1973
  %846 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1983 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %846, i32 0, i32 1
  %arrayidx1984 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1983, i32 0, i64 1
  %rtx1985 = bitcast %union.rtunion_def* %arrayidx1984 to %struct.rtx_def**
  %847 = load %struct.rtx_def*, %struct.rtx_def** %rtx1985, align 8
  %fld1986 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %847, i32 0, i32 1
  %arrayidx1987 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1986, i32 0, i64 0
  %rtwint1988 = bitcast %union.rtunion_def* %arrayidx1987 to i64*
  %848 = load i64, i64* %rtwint1988, align 8
  %849 = load i32, i32* %equality_comparison_p, align 4
  %tobool1989 = icmp ne i32 %849, 0
  %lnot = xor i1 %tobool1989, true
  %lnot.ext = zext i1 %lnot to i32
  %conv1990 = sext i32 %lnot.ext to i64
  %add1991 = add nsw i64 %848, %conv1990
  %cmp1992 = icmp slt i64 %add1991, 64
  br i1 %cmp1992, label %land.lhs.true.1994, label %if.end.2046

land.lhs.true.1994:                               ; preds = %land.lhs.true.1982
  %850 = load i64, i64* %const_op, align 8
  %851 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld1995 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %851, i32 0, i32 1
  %arrayidx1996 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1995, i32 0, i64 1
  %rtx1997 = bitcast %union.rtunion_def* %arrayidx1996 to %struct.rtx_def**
  %852 = load %struct.rtx_def*, %struct.rtx_def** %rtx1997, align 8
  %fld1998 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %852, i32 0, i32 1
  %arrayidx1999 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1998, i32 0, i64 0
  %rtwint2000 = bitcast %union.rtunion_def* %arrayidx1999 to i64*
  %853 = load i64, i64* %rtwint2000, align 8
  %shl2001 = shl i64 1, %853
  %sub2002 = sub nsw i64 %shl2001, 1
  %and2003 = and i64 %850, %sub2002
  %cmp2004 = icmp eq i64 %and2003, 0
  br i1 %cmp2004, label %land.lhs.true.2006, label %if.end.2046

land.lhs.true.2006:                               ; preds = %land.lhs.true.1994
  %854 = load i32, i32* %mode_width, align 4
  %cmp2007 = icmp ule i32 %854, 64
  br i1 %cmp2007, label %land.lhs.true.2009, label %if.end.2046

land.lhs.true.2009:                               ; preds = %land.lhs.true.2006
  %855 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2010 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %855, i32 0, i32 1
  %arrayidx2011 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2010, i32 0, i64 0
  %rtx2012 = bitcast %union.rtunion_def* %arrayidx2011 to %struct.rtx_def**
  %856 = load %struct.rtx_def*, %struct.rtx_def** %rtx2012, align 8
  %857 = load i32, i32* %mode573, align 4
  %call2013 = call i64 @nonzero_bits(%struct.rtx_def* %856, i32 %857)
  %858 = load i64, i64* %mask580, align 8
  %859 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2014 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %859, i32 0, i32 1
  %arrayidx2015 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2014, i32 0, i64 1
  %rtx2016 = bitcast %union.rtunion_def* %arrayidx2015 to %struct.rtx_def**
  %860 = load %struct.rtx_def*, %struct.rtx_def** %rtx2016, align 8
  %fld2017 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %860, i32 0, i32 1
  %arrayidx2018 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2017, i32 0, i64 0
  %rtwint2019 = bitcast %union.rtunion_def* %arrayidx2018 to i64*
  %861 = load i64, i64* %rtwint2019, align 8
  %862 = load i32, i32* %equality_comparison_p, align 4
  %tobool2020 = icmp ne i32 %862, 0
  %lnot2021 = xor i1 %tobool2020, true
  %lnot.ext2022 = zext i1 %lnot2021 to i32
  %conv2023 = sext i32 %lnot.ext2022 to i64
  %add2024 = add nsw i64 %861, %conv2023
  %shr2025 = lshr i64 %858, %add2024
  %neg2026 = xor i64 %shr2025, -1
  %and2027 = and i64 %call2013, %neg2026
  %cmp2028 = icmp eq i64 %and2027, 0
  br i1 %cmp2028, label %if.then.2030, label %if.end.2046

if.then.2030:                                     ; preds = %land.lhs.true.2009
  %863 = load i64, i64* %const_op, align 8
  %864 = load i32, i32* %mode573, align 4
  %idxprom2031 = sext i32 %864 to i64
  %arrayidx2032 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom2031
  %865 = load i64, i64* %arrayidx2032, align 8
  %and2033 = and i64 %863, %865
  store i64 %and2033, i64* %temp, align 8
  %866 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2034 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %866, i32 0, i32 1
  %arrayidx2035 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2034, i32 0, i64 1
  %rtx2036 = bitcast %union.rtunion_def* %arrayidx2035 to %struct.rtx_def**
  %867 = load %struct.rtx_def*, %struct.rtx_def** %rtx2036, align 8
  %fld2037 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %867, i32 0, i32 1
  %arrayidx2038 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2037, i32 0, i64 0
  %rtwint2039 = bitcast %union.rtunion_def* %arrayidx2038 to i64*
  %868 = load i64, i64* %rtwint2039, align 8
  %869 = load i64, i64* %temp, align 8
  %shr2040 = lshr i64 %869, %868
  store i64 %shr2040, i64* %temp, align 8
  %870 = load i64, i64* %temp, align 8
  %871 = load i32, i32* %mode573, align 4
  %call2041 = call i64 @trunc_int_for_mode(i64 %870, i32 %871)
  %call2042 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call2041)
  store %struct.rtx_def* %call2042, %struct.rtx_def** %op1, align 8
  %872 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2043 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %872, i32 0, i32 1
  %arrayidx2044 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2043, i32 0, i64 0
  %rtx2045 = bitcast %union.rtunion_def* %arrayidx2044 to %struct.rtx_def**
  %873 = load %struct.rtx_def*, %struct.rtx_def** %rtx2045, align 8
  store %struct.rtx_def* %873, %struct.rtx_def** %op0, align 8
  br label %while.cond

if.end.2046:                                      ; preds = %land.lhs.true.2009, %land.lhs.true.2006, %land.lhs.true.1994, %land.lhs.true.1982, %land.lhs.true.1973, %sw.bb.1965
  %874 = load i32, i32* %sign_bit_comparison_p, align 4
  %tobool2047 = icmp ne i32 %874, 0
  br i1 %tobool2047, label %land.lhs.true.2048, label %if.end.2077

land.lhs.true.2048:                               ; preds = %if.end.2046
  %875 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2049 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %875, i32 0, i32 1
  %arrayidx2050 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2049, i32 0, i64 1
  %rtx2051 = bitcast %union.rtunion_def* %arrayidx2050 to %struct.rtx_def**
  %876 = load %struct.rtx_def*, %struct.rtx_def** %rtx2051, align 8
  %877 = bitcast %struct.rtx_def* %876 to i32*
  %bf.load2052 = load i32, i32* %877, align 8
  %bf.clear2053 = and i32 %bf.load2052, 65535
  %cmp2054 = icmp eq i32 %bf.clear2053, 54
  br i1 %cmp2054, label %land.lhs.true.2056, label %if.end.2077

land.lhs.true.2056:                               ; preds = %land.lhs.true.2048
  %878 = load i32, i32* %mode_width, align 4
  %cmp2057 = icmp ule i32 %878, 64
  br i1 %cmp2057, label %if.then.2059, label %if.end.2077

if.then.2059:                                     ; preds = %land.lhs.true.2056
  %879 = load i32, i32* %mode573, align 4
  %880 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2060 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %880, i32 0, i32 1
  %arrayidx2061 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2060, i32 0, i64 0
  %rtx2062 = bitcast %union.rtunion_def* %arrayidx2061 to %struct.rtx_def**
  %881 = load %struct.rtx_def*, %struct.rtx_def** %rtx2062, align 8
  %882 = load i32, i32* %mode_width, align 4
  %sub2063 = sub i32 %882, 1
  %conv2064 = zext i32 %sub2063 to i64
  %883 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2065 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %883, i32 0, i32 1
  %arrayidx2066 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2065, i32 0, i64 1
  %rtx2067 = bitcast %union.rtunion_def* %arrayidx2066 to %struct.rtx_def**
  %884 = load %struct.rtx_def*, %struct.rtx_def** %rtx2067, align 8
  %fld2068 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %884, i32 0, i32 1
  %arrayidx2069 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2068, i32 0, i64 0
  %rtwint2070 = bitcast %union.rtunion_def* %arrayidx2069 to i64*
  %885 = load i64, i64* %rtwint2070, align 8
  %sub2071 = sub nsw i64 %conv2064, %885
  %shl2072 = shl i64 1, %sub2071
  %call2073 = call %struct.rtx_def* @simplify_and_const_int(%struct.rtx_def* null, i32 %879, %struct.rtx_def* %881, i64 %shl2072)
  store %struct.rtx_def* %call2073, %struct.rtx_def** %op0, align 8
  %886 = load i32, i32* %code.addr, align 4
  %cmp2074 = icmp eq i32 %886, 107
  %cond2076 = select i1 %cmp2074, i32 102, i32 103
  store i32 %cond2076, i32* %code.addr, align 4
  br label %while.cond

if.end.2077:                                      ; preds = %land.lhs.true.2056, %land.lhs.true.2048, %if.end.2046
  %887 = load i64, i64* %const_op, align 8
  %cmp2078 = icmp eq i64 %887, 0
  br i1 %cmp2078, label %land.lhs.true.2080, label %if.end.2106

land.lhs.true.2080:                               ; preds = %if.end.2077
  %888 = load i32, i32* %equality_comparison_p, align 4
  %tobool2081 = icmp ne i32 %888, 0
  br i1 %tobool2081, label %land.lhs.true.2082, label %if.end.2106

land.lhs.true.2082:                               ; preds = %land.lhs.true.2080
  %889 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2083 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %889, i32 0, i32 1
  %arrayidx2084 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2083, i32 0, i64 1
  %rtx2085 = bitcast %union.rtunion_def* %arrayidx2084 to %struct.rtx_def**
  %890 = load %struct.rtx_def*, %struct.rtx_def** %rtx2085, align 8
  %891 = bitcast %struct.rtx_def* %890 to i32*
  %bf.load2086 = load i32, i32* %891, align 8
  %bf.clear2087 = and i32 %bf.load2086, 65535
  %cmp2088 = icmp eq i32 %bf.clear2087, 54
  br i1 %cmp2088, label %land.lhs.true.2090, label %if.end.2106

land.lhs.true.2090:                               ; preds = %land.lhs.true.2082
  %892 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2091 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %892, i32 0, i32 1
  %arrayidx2092 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2091, i32 0, i64 1
  %rtx2093 = bitcast %union.rtunion_def* %arrayidx2092 to %struct.rtx_def**
  %893 = load %struct.rtx_def*, %struct.rtx_def** %rtx2093, align 8
  %fld2094 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %893, i32 0, i32 1
  %arrayidx2095 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2094, i32 0, i64 0
  %rtwint2096 = bitcast %union.rtunion_def* %arrayidx2095 to i64*
  %894 = load i64, i64* %rtwint2096, align 8
  %895 = load i32, i32* %mode_width, align 4
  %sub2097 = sub i32 %895, 1
  %conv2098 = zext i32 %sub2097 to i64
  %cmp2099 = icmp eq i64 %894, %conv2098
  br i1 %cmp2099, label %if.then.2101, label %if.end.2106

if.then.2101:                                     ; preds = %land.lhs.true.2090
  %896 = load i32, i32* %mode573, align 4
  %897 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %897, i32 0, i32 1
  %arrayidx2103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2102, i32 0, i64 0
  %rtx2104 = bitcast %union.rtunion_def* %arrayidx2103 to %struct.rtx_def**
  %898 = load %struct.rtx_def*, %struct.rtx_def** %rtx2104, align 8
  %call2105 = call %struct.rtx_def* @simplify_and_const_int(%struct.rtx_def* null, i32 %896, %struct.rtx_def* %898, i64 1)
  store %struct.rtx_def* %call2105, %struct.rtx_def** %op0, align 8
  br label %while.cond

if.end.2106:                                      ; preds = %land.lhs.true.2090, %land.lhs.true.2082, %land.lhs.true.2080, %if.end.2077
  br label %sw.epilog.2430

sw.bb.2107:                                       ; preds = %if.end.856
  %899 = load i32, i32* %equality_comparison_p, align 4
  %tobool2108 = icmp ne i32 %899, 0
  br i1 %tobool2108, label %land.lhs.true.2109, label %if.end.2132

land.lhs.true.2109:                               ; preds = %sw.bb.2107
  %900 = load i64, i64* %const_op, align 8
  %cmp2110 = icmp eq i64 %900, 0
  br i1 %cmp2110, label %land.lhs.true.2112, label %if.end.2132

land.lhs.true.2112:                               ; preds = %land.lhs.true.2109
  %901 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %901, i32 0, i32 1
  %arrayidx2114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2113, i32 0, i64 1
  %rtx2115 = bitcast %union.rtunion_def* %arrayidx2114 to %struct.rtx_def**
  %902 = load %struct.rtx_def*, %struct.rtx_def** %rtx2115, align 8
  %903 = bitcast %struct.rtx_def* %902 to i32*
  %bf.load2116 = load i32, i32* %903, align 8
  %bf.clear2117 = and i32 %bf.load2116, 65535
  %cmp2118 = icmp eq i32 %bf.clear2117, 54
  br i1 %cmp2118, label %if.then.2120, label %if.end.2132

if.then.2120:                                     ; preds = %land.lhs.true.2112
  %904 = load i32, i32* %mode573, align 4
  %905 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %905, i32 0, i32 1
  %arrayidx2122 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2121, i32 0, i64 0
  %rtx2123 = bitcast %union.rtunion_def* %arrayidx2122 to %struct.rtx_def**
  %906 = load %struct.rtx_def*, %struct.rtx_def** %rtx2123, align 8
  %907 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %907, i32 0, i32 1
  %arrayidx2125 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2124, i32 0, i64 1
  %rtx2126 = bitcast %union.rtunion_def* %arrayidx2125 to %struct.rtx_def**
  %908 = load %struct.rtx_def*, %struct.rtx_def** %rtx2126, align 8
  %fld2127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %908, i32 0, i32 1
  %arrayidx2128 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2127, i32 0, i64 0
  %rtwint2129 = bitcast %union.rtunion_def* %arrayidx2128 to i64*
  %909 = load i64, i64* %rtwint2129, align 8
  %conv2130 = trunc i64 %909 to i32
  %call2131 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 90, i32 %904, %struct.rtx_def* %906, i32 %conv2130)
  store %struct.rtx_def* %call2131, %struct.rtx_def** %op0, align 8
  br label %while.cond

if.end.2132:                                      ; preds = %land.lhs.true.2112, %land.lhs.true.2109, %sw.bb.2107
  %910 = load i32, i32* %unsigned_comparison_p, align 4
  %tobool2133 = icmp ne i32 %910, 0
  br i1 %tobool2133, label %if.end.2193, label %land.lhs.true.2134

land.lhs.true.2134:                               ; preds = %if.end.2132
  %911 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %911, i32 0, i32 1
  %arrayidx2136 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2135, i32 0, i64 1
  %rtx2137 = bitcast %union.rtunion_def* %arrayidx2136 to %struct.rtx_def**
  %912 = load %struct.rtx_def*, %struct.rtx_def** %rtx2137, align 8
  %913 = bitcast %struct.rtx_def* %912 to i32*
  %bf.load2138 = load i32, i32* %913, align 8
  %bf.clear2139 = and i32 %bf.load2138, 65535
  %cmp2140 = icmp eq i32 %bf.clear2139, 54
  br i1 %cmp2140, label %land.lhs.true.2142, label %if.end.2193

land.lhs.true.2142:                               ; preds = %land.lhs.true.2134
  %914 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %914, i32 0, i32 1
  %arrayidx2144 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2143, i32 0, i64 0
  %rtx2145 = bitcast %union.rtunion_def* %arrayidx2144 to %struct.rtx_def**
  %915 = load %struct.rtx_def*, %struct.rtx_def** %rtx2145, align 8
  %916 = bitcast %struct.rtx_def* %915 to i32*
  %bf.load2146 = load i32, i32* %916, align 8
  %bf.clear2147 = and i32 %bf.load2146, 65535
  %cmp2148 = icmp eq i32 %bf.clear2147, 87
  br i1 %cmp2148, label %land.lhs.true.2150, label %if.end.2193

land.lhs.true.2150:                               ; preds = %land.lhs.true.2142
  %917 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2151 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %917, i32 0, i32 1
  %arrayidx2152 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2151, i32 0, i64 1
  %rtx2153 = bitcast %union.rtunion_def* %arrayidx2152 to %struct.rtx_def**
  %918 = load %struct.rtx_def*, %struct.rtx_def** %rtx2153, align 8
  %919 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %919, i32 0, i32 1
  %arrayidx2155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2154, i32 0, i64 0
  %rtx2156 = bitcast %union.rtunion_def* %arrayidx2155 to %struct.rtx_def**
  %920 = load %struct.rtx_def*, %struct.rtx_def** %rtx2156, align 8
  %fld2157 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %920, i32 0, i32 1
  %arrayidx2158 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2157, i32 0, i64 1
  %rtx2159 = bitcast %union.rtunion_def* %arrayidx2158 to %struct.rtx_def**
  %921 = load %struct.rtx_def*, %struct.rtx_def** %rtx2159, align 8
  %cmp2160 = icmp eq %struct.rtx_def* %918, %921
  br i1 %cmp2160, label %land.lhs.true.2162, label %if.end.2193

land.lhs.true.2162:                               ; preds = %land.lhs.true.2150
  %922 = load i32, i32* %mode_width, align 4
  %conv2163 = zext i32 %922 to i64
  %923 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2164 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %923, i32 0, i32 1
  %arrayidx2165 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2164, i32 0, i64 1
  %rtx2166 = bitcast %union.rtunion_def* %arrayidx2165 to %struct.rtx_def**
  %924 = load %struct.rtx_def*, %struct.rtx_def** %rtx2166, align 8
  %fld2167 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %924, i32 0, i32 1
  %arrayidx2168 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2167, i32 0, i64 0
  %rtwint2169 = bitcast %union.rtunion_def* %arrayidx2168 to i64*
  %925 = load i64, i64* %rtwint2169, align 8
  %sub2170 = sub nsw i64 %conv2163, %925
  %conv2171 = trunc i64 %sub2170 to i32
  %call2172 = call i32 @mode_for_size(i32 %conv2171, i32 1, i32 1)
  store i32 %call2172, i32* %tmode, align 4
  %cmp2173 = icmp ne i32 %call2172, 51
  br i1 %cmp2173, label %land.lhs.true.2175, label %if.end.2193

land.lhs.true.2175:                               ; preds = %land.lhs.true.2162
  %926 = load i64, i64* %const_op, align 8
  %927 = load i32, i32* %tmode, align 4
  %idxprom2176 = sext i32 %927 to i64
  %arrayidx2177 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom2176
  %928 = load i64, i64* %arrayidx2177, align 8
  %shr2178 = lshr i64 %928, 1
  %add2179 = add i64 %926, %shr2178
  %add2180 = add i64 %add2179, 1
  %929 = load i32, i32* %tmode, align 4
  %idxprom2181 = sext i32 %929 to i64
  %arrayidx2182 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom2181
  %930 = load i64, i64* %arrayidx2182, align 8
  %cmp2183 = icmp ule i64 %add2180, %930
  br i1 %cmp2183, label %if.then.2185, label %if.end.2193

if.then.2185:                                     ; preds = %land.lhs.true.2175
  %931 = load i32, i32* %tmode, align 4
  %932 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2186 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %932, i32 0, i32 1
  %arrayidx2187 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2186, i32 0, i64 0
  %rtx2188 = bitcast %union.rtunion_def* %arrayidx2187 to %struct.rtx_def**
  %933 = load %struct.rtx_def*, %struct.rtx_def** %rtx2188, align 8
  %fld2189 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %933, i32 0, i32 1
  %arrayidx2190 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2189, i32 0, i64 0
  %rtx2191 = bitcast %union.rtunion_def* %arrayidx2190 to %struct.rtx_def**
  %934 = load %struct.rtx_def*, %struct.rtx_def** %rtx2191, align 8
  %call2192 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %931, %struct.rtx_def* %934)
  store %struct.rtx_def* %call2192, %struct.rtx_def** %op0, align 8
  br label %while.cond

if.end.2193:                                      ; preds = %land.lhs.true.2175, %land.lhs.true.2162, %land.lhs.true.2150, %land.lhs.true.2142, %land.lhs.true.2134, %if.end.2132
  %935 = load i32, i32* %unsigned_comparison_p, align 4
  %tobool2194 = icmp ne i32 %935, 0
  br i1 %tobool2194, label %if.end.2296, label %land.lhs.true.2195

land.lhs.true.2195:                               ; preds = %if.end.2193
  %936 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2196 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %936, i32 0, i32 1
  %arrayidx2197 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2196, i32 0, i64 1
  %rtx2198 = bitcast %union.rtunion_def* %arrayidx2197 to %struct.rtx_def**
  %937 = load %struct.rtx_def*, %struct.rtx_def** %rtx2198, align 8
  %938 = bitcast %struct.rtx_def* %937 to i32*
  %bf.load2199 = load i32, i32* %938, align 8
  %bf.clear2200 = and i32 %bf.load2199, 65535
  %cmp2201 = icmp eq i32 %bf.clear2200, 54
  br i1 %cmp2201, label %land.lhs.true.2203, label %if.end.2296

land.lhs.true.2203:                               ; preds = %land.lhs.true.2195
  %939 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2204 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %939, i32 0, i32 1
  %arrayidx2205 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2204, i32 0, i64 0
  %rtx2206 = bitcast %union.rtunion_def* %arrayidx2205 to %struct.rtx_def**
  %940 = load %struct.rtx_def*, %struct.rtx_def** %rtx2206, align 8
  %941 = bitcast %struct.rtx_def* %940 to i32*
  %bf.load2207 = load i32, i32* %941, align 8
  %bf.clear2208 = and i32 %bf.load2207, 65535
  %cmp2209 = icmp eq i32 %bf.clear2208, 75
  br i1 %cmp2209, label %land.lhs.true.2211, label %if.end.2296

land.lhs.true.2211:                               ; preds = %land.lhs.true.2203
  %942 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2212 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %942, i32 0, i32 1
  %arrayidx2213 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2212, i32 0, i64 0
  %rtx2214 = bitcast %union.rtunion_def* %arrayidx2213 to %struct.rtx_def**
  %943 = load %struct.rtx_def*, %struct.rtx_def** %rtx2214, align 8
  %fld2215 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %943, i32 0, i32 1
  %arrayidx2216 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2215, i32 0, i64 1
  %rtx2217 = bitcast %union.rtunion_def* %arrayidx2216 to %struct.rtx_def**
  %944 = load %struct.rtx_def*, %struct.rtx_def** %rtx2217, align 8
  %945 = bitcast %struct.rtx_def* %944 to i32*
  %bf.load2218 = load i32, i32* %945, align 8
  %bf.clear2219 = and i32 %bf.load2218, 65535
  %cmp2220 = icmp eq i32 %bf.clear2219, 54
  br i1 %cmp2220, label %land.lhs.true.2222, label %if.end.2296

land.lhs.true.2222:                               ; preds = %land.lhs.true.2211
  %946 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2223 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %946, i32 0, i32 1
  %arrayidx2224 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2223, i32 0, i64 0
  %rtx2225 = bitcast %union.rtunion_def* %arrayidx2224 to %struct.rtx_def**
  %947 = load %struct.rtx_def*, %struct.rtx_def** %rtx2225, align 8
  %fld2226 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %947, i32 0, i32 1
  %arrayidx2227 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2226, i32 0, i64 0
  %rtx2228 = bitcast %union.rtunion_def* %arrayidx2227 to %struct.rtx_def**
  %948 = load %struct.rtx_def*, %struct.rtx_def** %rtx2228, align 8
  %949 = bitcast %struct.rtx_def* %948 to i32*
  %bf.load2229 = load i32, i32* %949, align 8
  %bf.clear2230 = and i32 %bf.load2229, 65535
  %cmp2231 = icmp eq i32 %bf.clear2230, 87
  br i1 %cmp2231, label %land.lhs.true.2233, label %if.end.2296

land.lhs.true.2233:                               ; preds = %land.lhs.true.2222
  %950 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2234 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %950, i32 0, i32 1
  %arrayidx2235 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2234, i32 0, i64 1
  %rtx2236 = bitcast %union.rtunion_def* %arrayidx2235 to %struct.rtx_def**
  %951 = load %struct.rtx_def*, %struct.rtx_def** %rtx2236, align 8
  %952 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2237 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %952, i32 0, i32 1
  %arrayidx2238 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2237, i32 0, i64 0
  %rtx2239 = bitcast %union.rtunion_def* %arrayidx2238 to %struct.rtx_def**
  %953 = load %struct.rtx_def*, %struct.rtx_def** %rtx2239, align 8
  %fld2240 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %953, i32 0, i32 1
  %arrayidx2241 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2240, i32 0, i64 0
  %rtx2242 = bitcast %union.rtunion_def* %arrayidx2241 to %struct.rtx_def**
  %954 = load %struct.rtx_def*, %struct.rtx_def** %rtx2242, align 8
  %fld2243 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %954, i32 0, i32 1
  %arrayidx2244 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2243, i32 0, i64 1
  %rtx2245 = bitcast %union.rtunion_def* %arrayidx2244 to %struct.rtx_def**
  %955 = load %struct.rtx_def*, %struct.rtx_def** %rtx2245, align 8
  %cmp2246 = icmp eq %struct.rtx_def* %951, %955
  br i1 %cmp2246, label %land.lhs.true.2248, label %if.end.2296

land.lhs.true.2248:                               ; preds = %land.lhs.true.2233
  %956 = load i32, i32* %mode_width, align 4
  %conv2249 = zext i32 %956 to i64
  %957 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2250 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %957, i32 0, i32 1
  %arrayidx2251 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2250, i32 0, i64 1
  %rtx2252 = bitcast %union.rtunion_def* %arrayidx2251 to %struct.rtx_def**
  %958 = load %struct.rtx_def*, %struct.rtx_def** %rtx2252, align 8
  %fld2253 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %958, i32 0, i32 1
  %arrayidx2254 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2253, i32 0, i64 0
  %rtwint2255 = bitcast %union.rtunion_def* %arrayidx2254 to i64*
  %959 = load i64, i64* %rtwint2255, align 8
  %sub2256 = sub nsw i64 %conv2249, %959
  %conv2257 = trunc i64 %sub2256 to i32
  %call2258 = call i32 @mode_for_size(i32 %conv2257, i32 1, i32 1)
  store i32 %call2258, i32* %tmode, align 4
  %cmp2259 = icmp ne i32 %call2258, 51
  br i1 %cmp2259, label %land.lhs.true.2261, label %if.end.2296

land.lhs.true.2261:                               ; preds = %land.lhs.true.2248
  %960 = load i64, i64* %const_op, align 8
  %961 = load i32, i32* %tmode, align 4
  %idxprom2262 = sext i32 %961 to i64
  %arrayidx2263 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom2262
  %962 = load i64, i64* %arrayidx2263, align 8
  %shr2264 = lshr i64 %962, 1
  %add2265 = add i64 %960, %shr2264
  %add2266 = add i64 %add2265, 1
  %963 = load i32, i32* %tmode, align 4
  %idxprom2267 = sext i32 %963 to i64
  %arrayidx2268 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom2267
  %964 = load i64, i64* %arrayidx2268, align 8
  %cmp2269 = icmp ule i64 %add2266, %964
  br i1 %cmp2269, label %if.then.2271, label %if.end.2296

if.then.2271:                                     ; preds = %land.lhs.true.2261
  %965 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2272 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %965, i32 0, i32 1
  %arrayidx2273 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2272, i32 0, i64 0
  %rtx2274 = bitcast %union.rtunion_def* %arrayidx2273 to %struct.rtx_def**
  %966 = load %struct.rtx_def*, %struct.rtx_def** %rtx2274, align 8
  %fld2275 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %966, i32 0, i32 1
  %arrayidx2276 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2275, i32 0, i64 0
  %rtx2277 = bitcast %union.rtunion_def* %arrayidx2276 to %struct.rtx_def**
  %967 = load %struct.rtx_def*, %struct.rtx_def** %rtx2277, align 8
  %fld2278 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %967, i32 0, i32 1
  %arrayidx2279 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2278, i32 0, i64 0
  %rtx2280 = bitcast %union.rtunion_def* %arrayidx2279 to %struct.rtx_def**
  %968 = load %struct.rtx_def*, %struct.rtx_def** %rtx2280, align 8
  store %struct.rtx_def* %968, %struct.rtx_def** %inner, align 8
  %969 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2281 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %969, i32 0, i32 1
  %arrayidx2282 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2281, i32 0, i64 0
  %rtx2283 = bitcast %union.rtunion_def* %arrayidx2282 to %struct.rtx_def**
  %970 = load %struct.rtx_def*, %struct.rtx_def** %rtx2283, align 8
  %fld2284 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %970, i32 0, i32 1
  %arrayidx2285 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2284, i32 0, i64 1
  %rtx2286 = bitcast %union.rtunion_def* %arrayidx2285 to %struct.rtx_def**
  %971 = load %struct.rtx_def*, %struct.rtx_def** %rtx2286, align 8
  store %struct.rtx_def* %971, %struct.rtx_def** %add_const, align 8
  %972 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %973 = bitcast %struct.rtx_def* %972 to i32*
  %bf.load2287 = load i32, i32* %973, align 8
  %bf.lshr2288 = lshr i32 %bf.load2287, 16
  %bf.clear2289 = and i32 %bf.lshr2288, 255
  %974 = load %struct.rtx_def*, %struct.rtx_def** %add_const, align 8
  %975 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2290 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %975, i32 0, i32 1
  %arrayidx2291 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2290, i32 0, i64 1
  %rtx2292 = bitcast %union.rtunion_def* %arrayidx2291 to %struct.rtx_def**
  %976 = load %struct.rtx_def*, %struct.rtx_def** %rtx2292, align 8
  %call2293 = call %struct.rtx_def* @gen_binary(i32 89, i32 %bf.clear2289, %struct.rtx_def* %974, %struct.rtx_def* %976)
  store %struct.rtx_def* %call2293, %struct.rtx_def** %new_const, align 8
  %977 = load i32, i32* %tmode, align 4
  %978 = load i32, i32* %tmode, align 4
  %979 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %call2294 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %978, %struct.rtx_def* %979)
  %980 = load %struct.rtx_def*, %struct.rtx_def** %new_const, align 8
  %call2295 = call %struct.rtx_def* @gen_binary(i32 75, i32 %977, %struct.rtx_def* %call2294, %struct.rtx_def* %980)
  store %struct.rtx_def* %call2295, %struct.rtx_def** %op0, align 8
  br label %while.cond

if.end.2296:                                      ; preds = %land.lhs.true.2261, %land.lhs.true.2248, %land.lhs.true.2233, %land.lhs.true.2222, %land.lhs.true.2211, %land.lhs.true.2203, %land.lhs.true.2195, %if.end.2193
  br label %sw.bb.2297

sw.bb.2297:                                       ; preds = %if.end.856, %if.end.2296
  %981 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2298 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %981, i32 0, i32 1
  %arrayidx2299 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2298, i32 0, i64 1
  %rtx2300 = bitcast %union.rtunion_def* %arrayidx2299 to %struct.rtx_def**
  %982 = load %struct.rtx_def*, %struct.rtx_def** %rtx2300, align 8
  %983 = bitcast %struct.rtx_def* %982 to i32*
  %bf.load2301 = load i32, i32* %983, align 8
  %bf.clear2302 = and i32 %bf.load2301, 65535
  %cmp2303 = icmp eq i32 %bf.clear2302, 54
  br i1 %cmp2303, label %land.lhs.true.2305, label %if.end.2390

land.lhs.true.2305:                               ; preds = %sw.bb.2297
  %984 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2306 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %984, i32 0, i32 1
  %arrayidx2307 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2306, i32 0, i64 1
  %rtx2308 = bitcast %union.rtunion_def* %arrayidx2307 to %struct.rtx_def**
  %985 = load %struct.rtx_def*, %struct.rtx_def** %rtx2308, align 8
  %fld2309 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %985, i32 0, i32 1
  %arrayidx2310 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2309, i32 0, i64 0
  %rtwint2311 = bitcast %union.rtunion_def* %arrayidx2310 to i64*
  %986 = load i64, i64* %rtwint2311, align 8
  %cmp2312 = icmp sge i64 %986, 0
  br i1 %cmp2312, label %land.lhs.true.2314, label %if.end.2390

land.lhs.true.2314:                               ; preds = %land.lhs.true.2305
  %987 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2315 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %987, i32 0, i32 1
  %arrayidx2316 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2315, i32 0, i64 1
  %rtx2317 = bitcast %union.rtunion_def* %arrayidx2316 to %struct.rtx_def**
  %988 = load %struct.rtx_def*, %struct.rtx_def** %rtx2317, align 8
  %fld2318 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %988, i32 0, i32 1
  %arrayidx2319 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2318, i32 0, i64 0
  %rtwint2320 = bitcast %union.rtunion_def* %arrayidx2319 to i64*
  %989 = load i64, i64* %rtwint2320, align 8
  %cmp2321 = icmp slt i64 %989, 64
  br i1 %cmp2321, label %land.lhs.true.2323, label %if.end.2390

land.lhs.true.2323:                               ; preds = %land.lhs.true.2314
  %990 = load i32, i32* %mode_width, align 4
  %cmp2324 = icmp ule i32 %990, 64
  br i1 %cmp2324, label %land.lhs.true.2326, label %if.end.2390

land.lhs.true.2326:                               ; preds = %land.lhs.true.2323
  %991 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2327 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %991, i32 0, i32 1
  %arrayidx2328 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2327, i32 0, i64 0
  %rtx2329 = bitcast %union.rtunion_def* %arrayidx2328 to %struct.rtx_def**
  %992 = load %struct.rtx_def*, %struct.rtx_def** %rtx2329, align 8
  %993 = load i32, i32* %mode573, align 4
  %call2330 = call i64 @nonzero_bits(%struct.rtx_def* %992, i32 %993)
  %994 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2331 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %994, i32 0, i32 1
  %arrayidx2332 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2331, i32 0, i64 1
  %rtx2333 = bitcast %union.rtunion_def* %arrayidx2332 to %struct.rtx_def**
  %995 = load %struct.rtx_def*, %struct.rtx_def** %rtx2333, align 8
  %fld2334 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %995, i32 0, i32 1
  %arrayidx2335 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2334, i32 0, i64 0
  %rtwint2336 = bitcast %union.rtunion_def* %arrayidx2335 to i64*
  %996 = load i64, i64* %rtwint2336, align 8
  %shl2337 = shl i64 1, %996
  %sub2338 = sub nsw i64 %shl2337, 1
  %and2339 = and i64 %call2330, %sub2338
  %cmp2340 = icmp eq i64 %and2339, 0
  br i1 %cmp2340, label %land.lhs.true.2342, label %if.end.2390

land.lhs.true.2342:                               ; preds = %land.lhs.true.2326
  %997 = load i64, i64* %const_op, align 8
  %998 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %999 = bitcast %struct.rtx_def* %998 to i32*
  %bf.load2343 = load i32, i32* %999, align 8
  %bf.clear2344 = and i32 %bf.load2343, 65535
  %cmp2345 = icmp ne i32 %bf.clear2344, 90
  br i1 %cmp2345, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.2342
  %1000 = load i32, i32* %mode573, align 4
  %idxprom2347 = sext i32 %1000 to i64
  %arrayidx2348 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom2347
  %1001 = load i64, i64* %arrayidx2348, align 8
  %1002 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2349 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1002, i32 0, i32 1
  %arrayidx2350 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2349, i32 0, i64 1
  %rtx2351 = bitcast %union.rtunion_def* %arrayidx2350 to %struct.rtx_def**
  %1003 = load %struct.rtx_def*, %struct.rtx_def** %rtx2351, align 8
  %fld2352 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1003, i32 0, i32 1
  %arrayidx2353 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2352, i32 0, i64 0
  %rtwint2354 = bitcast %union.rtunion_def* %arrayidx2353 to i64*
  %1004 = load i64, i64* %rtwint2354, align 8
  %shr2355 = lshr i64 %1001, %1004
  %shr2356 = lshr i64 %shr2355, 1
  %add2357 = add i64 %shr2356, 1
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.2342
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond2358 = phi i64 [ %add2357, %cond.true ], [ 0, %cond.false ]
  %add2359 = add i64 %997, %cond2358
  %1005 = load i32, i32* %mode573, align 4
  %idxprom2360 = sext i32 %1005 to i64
  %arrayidx2361 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom2360
  %1006 = load i64, i64* %arrayidx2361, align 8
  %1007 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2362 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1007, i32 0, i32 1
  %arrayidx2363 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2362, i32 0, i64 1
  %rtx2364 = bitcast %union.rtunion_def* %arrayidx2363 to %struct.rtx_def**
  %1008 = load %struct.rtx_def*, %struct.rtx_def** %rtx2364, align 8
  %fld2365 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1008, i32 0, i32 1
  %arrayidx2366 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2365, i32 0, i64 0
  %rtwint2367 = bitcast %union.rtunion_def* %arrayidx2366 to i64*
  %1009 = load i64, i64* %rtwint2367, align 8
  %shr2368 = lshr i64 %1006, %1009
  %cmp2369 = icmp ule i64 %add2359, %shr2368
  br i1 %cmp2369, label %if.then.2371, label %if.end.2390

if.then.2371:                                     ; preds = %cond.end
  %1010 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1011 = bitcast %struct.rtx_def* %1010 to i32*
  %bf.load2372 = load i32, i32* %1011, align 8
  %bf.clear2373 = and i32 %bf.load2372, 65535
  %cmp2374 = icmp eq i32 %bf.clear2373, 90
  br i1 %cmp2374, label %if.then.2376, label %if.end.2378

if.then.2376:                                     ; preds = %if.then.2371
  %1012 = load i32, i32* %code.addr, align 4
  %call2377 = call i32 @unsigned_condition(i32 %1012)
  store i32 %call2377, i32* %code.addr, align 4
  br label %if.end.2378

if.end.2378:                                      ; preds = %if.then.2376, %if.then.2371
  %1013 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2379 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1013, i32 0, i32 1
  %arrayidx2380 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2379, i32 0, i64 1
  %rtx2381 = bitcast %union.rtunion_def* %arrayidx2380 to %struct.rtx_def**
  %1014 = load %struct.rtx_def*, %struct.rtx_def** %rtx2381, align 8
  %fld2382 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1014, i32 0, i32 1
  %arrayidx2383 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2382, i32 0, i64 0
  %rtwint2384 = bitcast %union.rtunion_def* %arrayidx2383 to i64*
  %1015 = load i64, i64* %rtwint2384, align 8
  %1016 = load i64, i64* %const_op, align 8
  %shl2385 = shl i64 %1016, %1015
  store i64 %shl2385, i64* %const_op, align 8
  %1017 = load i64, i64* %const_op, align 8
  %call2386 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %1017)
  store %struct.rtx_def* %call2386, %struct.rtx_def** %op1, align 8
  %1018 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2387 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1018, i32 0, i32 1
  %arrayidx2388 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2387, i32 0, i64 0
  %rtx2389 = bitcast %union.rtunion_def* %arrayidx2388 to %struct.rtx_def**
  %1019 = load %struct.rtx_def*, %struct.rtx_def** %rtx2389, align 8
  store %struct.rtx_def* %1019, %struct.rtx_def** %op0, align 8
  br label %while.cond

if.end.2390:                                      ; preds = %cond.end, %land.lhs.true.2326, %land.lhs.true.2323, %land.lhs.true.2314, %land.lhs.true.2305, %sw.bb.2297
  %1020 = load i64, i64* %const_op, align 8
  %cmp2391 = icmp eq i64 %1020, 0
  br i1 %cmp2391, label %land.lhs.true.2393, label %if.end.2428

land.lhs.true.2393:                               ; preds = %if.end.2390
  %1021 = load i32, i32* %equality_comparison_p, align 4
  %tobool2394 = icmp ne i32 %1021, 0
  br i1 %tobool2394, label %land.lhs.true.2397, label %lor.lhs.false.2395

lor.lhs.false.2395:                               ; preds = %land.lhs.true.2393
  %1022 = load i32, i32* %sign_bit_comparison_p, align 4
  %tobool2396 = icmp ne i32 %1022, 0
  br i1 %tobool2396, label %land.lhs.true.2397, label %if.end.2428

land.lhs.true.2397:                               ; preds = %lor.lhs.false.2395, %land.lhs.true.2393
  %1023 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2398 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1023, i32 0, i32 1
  %arrayidx2399 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2398, i32 0, i64 1
  %rtx2400 = bitcast %union.rtunion_def* %arrayidx2399 to %struct.rtx_def**
  %1024 = load %struct.rtx_def*, %struct.rtx_def** %rtx2400, align 8
  %1025 = bitcast %struct.rtx_def* %1024 to i32*
  %bf.load2401 = load i32, i32* %1025, align 8
  %bf.clear2402 = and i32 %bf.load2401, 65535
  %cmp2403 = icmp eq i32 %bf.clear2402, 54
  br i1 %cmp2403, label %land.lhs.true.2405, label %if.end.2428

land.lhs.true.2405:                               ; preds = %land.lhs.true.2397
  %1026 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2406 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1026, i32 0, i32 1
  %arrayidx2407 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2406, i32 0, i64 1
  %rtx2408 = bitcast %union.rtunion_def* %arrayidx2407 to %struct.rtx_def**
  %1027 = load %struct.rtx_def*, %struct.rtx_def** %rtx2408, align 8
  %fld2409 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1027, i32 0, i32 1
  %arrayidx2410 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2409, i32 0, i64 0
  %rtwint2411 = bitcast %union.rtunion_def* %arrayidx2410 to i64*
  %1028 = load i64, i64* %rtwint2411, align 8
  %1029 = load i32, i32* %mode_width, align 4
  %sub2412 = sub i32 %1029, 1
  %conv2413 = zext i32 %sub2412 to i64
  %cmp2414 = icmp eq i64 %1028, %conv2413
  br i1 %cmp2414, label %if.then.2416, label %if.end.2428

if.then.2416:                                     ; preds = %land.lhs.true.2405
  %1030 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2417 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1030, i32 0, i32 1
  %arrayidx2418 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2417, i32 0, i64 0
  %rtx2419 = bitcast %union.rtunion_def* %arrayidx2418 to %struct.rtx_def**
  %1031 = load %struct.rtx_def*, %struct.rtx_def** %rtx2419, align 8
  store %struct.rtx_def* %1031, %struct.rtx_def** %op0, align 8
  %1032 = load i32, i32* %code.addr, align 4
  %cmp2420 = icmp eq i32 %1032, 102
  br i1 %cmp2420, label %lor.end.2425, label %lor.rhs.2422

lor.rhs.2422:                                     ; preds = %if.then.2416
  %1033 = load i32, i32* %code.addr, align 4
  %cmp2423 = icmp eq i32 %1033, 105
  br label %lor.end.2425

lor.end.2425:                                     ; preds = %lor.rhs.2422, %if.then.2416
  %1034 = phi i1 [ true, %if.then.2416 ], [ %cmp2423, %lor.rhs.2422 ]
  %cond2427 = select i1 %1034, i32 107, i32 104
  store i32 %cond2427, i32* %code.addr, align 4
  br label %while.cond

if.end.2428:                                      ; preds = %land.lhs.true.2405, %land.lhs.true.2397, %lor.lhs.false.2395, %if.end.2390
  br label %sw.epilog.2430

sw.default.2429:                                  ; preds = %if.end.856
  br label %sw.epilog.2430

sw.epilog.2430:                                   ; preds = %sw.default.2429, %if.end.2428, %if.end.2106, %if.end.1964, %if.end.1516, %if.end.1477, %if.then.1391, %if.end.1376, %if.end.1362, %if.end.1281, %if.end.1238, %if.else.1205, %if.end.1077, %if.end.1043, %if.end.977, %if.then.936, %if.end.922, %if.end.902
  br label %while.end.2431

while.end.2431:                                   ; preds = %sw.epilog.2430, %if.then.603, %while.cond
  %1035 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1036 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %1037 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp2432 = icmp eq %struct.rtx_def* %1036, %1037
  %cond2434 = select i1 %cmp2432, i32 74, i32 47
  %call2435 = call %struct.rtx_def* @make_compound_operation(%struct.rtx_def* %1035, i32 %cond2434)
  store %struct.rtx_def* %call2435, %struct.rtx_def** %op0, align 8
  %1038 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call2436 = call %struct.rtx_def* @make_compound_operation(%struct.rtx_def* %1038, i32 47)
  store %struct.rtx_def* %call2436, %struct.rtx_def** %op1, align 8
  %1039 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1040 = bitcast %struct.rtx_def* %1039 to i32*
  %bf.load2437 = load i32, i32* %1040, align 8
  %bf.clear2438 = and i32 %bf.load2437, 65535
  %cmp2439 = icmp eq i32 %bf.clear2438, 63
  br i1 %cmp2439, label %land.lhs.true.2441, label %if.end.2566

land.lhs.true.2441:                               ; preds = %while.end.2431
  %1041 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call2442 = call i32 @subreg_lowpart_p(%struct.rtx_def* %1041)
  %tobool2443 = icmp ne i32 %call2442, 0
  br i1 %tobool2443, label %land.lhs.true.2444, label %if.end.2566

land.lhs.true.2444:                               ; preds = %land.lhs.true.2441
  %1042 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2445 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1042, i32 0, i32 1
  %arrayidx2446 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2445, i32 0, i64 0
  %rtx2447 = bitcast %union.rtunion_def* %arrayidx2446 to %struct.rtx_def**
  %1043 = load %struct.rtx_def*, %struct.rtx_def** %rtx2447, align 8
  %1044 = bitcast %struct.rtx_def* %1043 to i32*
  %bf.load2448 = load i32, i32* %1044, align 8
  %bf.clear2449 = and i32 %bf.load2448, 65535
  %cmp2450 = icmp eq i32 %bf.clear2449, 61
  br i1 %cmp2450, label %land.lhs.true.2452, label %if.end.2566

land.lhs.true.2452:                               ; preds = %land.lhs.true.2444
  %1045 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1046 = bitcast %struct.rtx_def* %1045 to i32*
  %bf.load2453 = load i32, i32* %1046, align 8
  %bf.lshr2454 = lshr i32 %bf.load2453, 16
  %bf.clear2455 = and i32 %bf.lshr2454, 255
  %idxprom2456 = sext i32 %bf.clear2455 to i64
  %arrayidx2457 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2456
  %1047 = load i32, i32* %arrayidx2457, align 4
  %cmp2458 = icmp eq i32 %1047, 1
  br i1 %cmp2458, label %land.lhs.true.2460, label %if.end.2566

land.lhs.true.2460:                               ; preds = %land.lhs.true.2452
  %1048 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2461 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1048, i32 0, i32 1
  %arrayidx2462 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2461, i32 0, i64 0
  %rtx2463 = bitcast %union.rtunion_def* %arrayidx2462 to %struct.rtx_def**
  %1049 = load %struct.rtx_def*, %struct.rtx_def** %rtx2463, align 8
  %1050 = bitcast %struct.rtx_def* %1049 to i32*
  %bf.load2464 = load i32, i32* %1050, align 8
  %bf.lshr2465 = lshr i32 %bf.load2464, 16
  %bf.clear2466 = and i32 %bf.lshr2465, 255
  %idxprom2467 = sext i32 %bf.clear2466 to i64
  %arrayidx2468 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2467
  %1051 = load i32, i32* %arrayidx2468, align 4
  %cmp2469 = icmp eq i32 %1051, 1
  br i1 %cmp2469, label %land.lhs.true.2471, label %if.end.2566

land.lhs.true.2471:                               ; preds = %land.lhs.true.2460
  %1052 = load i32, i32* %code.addr, align 4
  %cmp2472 = icmp eq i32 %1052, 102
  br i1 %cmp2472, label %if.then.2477, label %lor.lhs.false.2474

lor.lhs.false.2474:                               ; preds = %land.lhs.true.2471
  %1053 = load i32, i32* %code.addr, align 4
  %cmp2475 = icmp eq i32 %1053, 103
  br i1 %cmp2475, label %if.then.2477, label %if.end.2566

if.then.2477:                                     ; preds = %lor.lhs.false.2474, %land.lhs.true.2471
  %1054 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1055 = bitcast %struct.rtx_def* %1054 to i32*
  %bf.load2478 = load i32, i32* %1055, align 8
  %bf.lshr2479 = lshr i32 %bf.load2478, 16
  %bf.clear2480 = and i32 %bf.lshr2479, 255
  %idxprom2481 = sext i32 %bf.clear2480 to i64
  %arrayidx2482 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom2481
  %1056 = load i8, i8* %arrayidx2482, align 1
  %conv2483 = zext i8 %1056 to i32
  %1057 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2484 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1057, i32 0, i32 1
  %arrayidx2485 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2484, i32 0, i64 0
  %rtx2486 = bitcast %union.rtunion_def* %arrayidx2485 to %struct.rtx_def**
  %1058 = load %struct.rtx_def*, %struct.rtx_def** %rtx2486, align 8
  %1059 = bitcast %struct.rtx_def* %1058 to i32*
  %bf.load2487 = load i32, i32* %1059, align 8
  %bf.lshr2488 = lshr i32 %bf.load2487, 16
  %bf.clear2489 = and i32 %bf.lshr2488, 255
  %idxprom2490 = sext i32 %bf.clear2489 to i64
  %arrayidx2491 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom2490
  %1060 = load i8, i8* %arrayidx2491, align 1
  %conv2492 = zext i8 %1060 to i32
  %cmp2493 = icmp sgt i32 %conv2483, %conv2492
  br i1 %cmp2493, label %if.then.2495, label %if.else.2503

if.then.2495:                                     ; preds = %if.then.2477
  %1061 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2496 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1061, i32 0, i32 1
  %arrayidx2497 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2496, i32 0, i64 0
  %rtx2498 = bitcast %union.rtunion_def* %arrayidx2497 to %struct.rtx_def**
  %1062 = load %struct.rtx_def*, %struct.rtx_def** %rtx2498, align 8
  store %struct.rtx_def* %1062, %struct.rtx_def** %op0, align 8
  %1063 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1064 = bitcast %struct.rtx_def* %1063 to i32*
  %bf.load2499 = load i32, i32* %1064, align 8
  %bf.lshr2500 = lshr i32 %bf.load2499, 16
  %bf.clear2501 = and i32 %bf.lshr2500, 255
  %1065 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call2502 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %bf.clear2501, %struct.rtx_def* %1065)
  store %struct.rtx_def* %call2502, %struct.rtx_def** %op1, align 8
  br label %if.end.2565

if.else.2503:                                     ; preds = %if.then.2477
  %1066 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2504 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1066, i32 0, i32 1
  %arrayidx2505 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2504, i32 0, i64 0
  %rtx2506 = bitcast %union.rtunion_def* %arrayidx2505 to %struct.rtx_def**
  %1067 = load %struct.rtx_def*, %struct.rtx_def** %rtx2506, align 8
  %1068 = bitcast %struct.rtx_def* %1067 to i32*
  %bf.load2507 = load i32, i32* %1068, align 8
  %bf.lshr2508 = lshr i32 %bf.load2507, 16
  %bf.clear2509 = and i32 %bf.lshr2508, 255
  %idxprom2510 = sext i32 %bf.clear2509 to i64
  %arrayidx2511 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2510
  %1069 = load i16, i16* %arrayidx2511, align 2
  %conv2512 = zext i16 %1069 to i32
  %cmp2513 = icmp sle i32 %conv2512, 64
  br i1 %cmp2513, label %land.lhs.true.2515, label %if.end.2564

land.lhs.true.2515:                               ; preds = %if.else.2503
  %1070 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2516 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1070, i32 0, i32 1
  %arrayidx2517 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2516, i32 0, i64 0
  %rtx2518 = bitcast %union.rtunion_def* %arrayidx2517 to %struct.rtx_def**
  %1071 = load %struct.rtx_def*, %struct.rtx_def** %rtx2518, align 8
  %1072 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2519 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1072, i32 0, i32 1
  %arrayidx2520 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2519, i32 0, i64 0
  %rtx2521 = bitcast %union.rtunion_def* %arrayidx2520 to %struct.rtx_def**
  %1073 = load %struct.rtx_def*, %struct.rtx_def** %rtx2521, align 8
  %1074 = bitcast %struct.rtx_def* %1073 to i32*
  %bf.load2522 = load i32, i32* %1074, align 8
  %bf.lshr2523 = lshr i32 %bf.load2522, 16
  %bf.clear2524 = and i32 %bf.lshr2523, 255
  %call2525 = call i64 @nonzero_bits(%struct.rtx_def* %1071, i32 %bf.clear2524)
  %1075 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1076 = bitcast %struct.rtx_def* %1075 to i32*
  %bf.load2526 = load i32, i32* %1076, align 8
  %bf.lshr2527 = lshr i32 %bf.load2526, 16
  %bf.clear2528 = and i32 %bf.lshr2527, 255
  %idxprom2529 = sext i32 %bf.clear2528 to i64
  %arrayidx2530 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom2529
  %1077 = load i64, i64* %arrayidx2530, align 8
  %neg2531 = xor i64 %1077, -1
  %and2532 = and i64 %call2525, %neg2531
  %cmp2533 = icmp eq i64 %and2532, 0
  br i1 %cmp2533, label %if.then.2535, label %if.end.2564

if.then.2535:                                     ; preds = %land.lhs.true.2515
  %1078 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2536 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1078, i32 0, i32 1
  %arrayidx2537 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2536, i32 0, i64 0
  %rtx2538 = bitcast %union.rtunion_def* %arrayidx2537 to %struct.rtx_def**
  %1079 = load %struct.rtx_def*, %struct.rtx_def** %rtx2538, align 8
  %1080 = bitcast %struct.rtx_def* %1079 to i32*
  %bf.load2539 = load i32, i32* %1080, align 8
  %bf.lshr2540 = lshr i32 %bf.load2539, 16
  %bf.clear2541 = and i32 %bf.lshr2540, 255
  %1081 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call2542 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %bf.clear2541, %struct.rtx_def* %1081)
  store %struct.rtx_def* %call2542, %struct.rtx_def** %tem, align 8
  %1082 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %1083 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2543 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1083, i32 0, i32 1
  %arrayidx2544 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2543, i32 0, i64 0
  %rtx2545 = bitcast %union.rtunion_def* %arrayidx2544 to %struct.rtx_def**
  %1084 = load %struct.rtx_def*, %struct.rtx_def** %rtx2545, align 8
  %1085 = bitcast %struct.rtx_def* %1084 to i32*
  %bf.load2546 = load i32, i32* %1085, align 8
  %bf.lshr2547 = lshr i32 %bf.load2546, 16
  %bf.clear2548 = and i32 %bf.lshr2547, 255
  %call2549 = call i64 @nonzero_bits(%struct.rtx_def* %1082, i32 %bf.clear2548)
  %1086 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1087 = bitcast %struct.rtx_def* %1086 to i32*
  %bf.load2550 = load i32, i32* %1087, align 8
  %bf.lshr2551 = lshr i32 %bf.load2550, 16
  %bf.clear2552 = and i32 %bf.lshr2551, 255
  %idxprom2553 = sext i32 %bf.clear2552 to i64
  %arrayidx2554 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom2553
  %1088 = load i64, i64* %arrayidx2554, align 8
  %neg2555 = xor i64 %1088, -1
  %and2556 = and i64 %call2549, %neg2555
  %cmp2557 = icmp eq i64 %and2556, 0
  br i1 %cmp2557, label %if.then.2559, label %if.end.2563

if.then.2559:                                     ; preds = %if.then.2535
  %1089 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2560 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1089, i32 0, i32 1
  %arrayidx2561 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2560, i32 0, i64 0
  %rtx2562 = bitcast %union.rtunion_def* %arrayidx2561 to %struct.rtx_def**
  %1090 = load %struct.rtx_def*, %struct.rtx_def** %rtx2562, align 8
  store %struct.rtx_def* %1090, %struct.rtx_def** %op0, align 8
  %1091 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %1091, %struct.rtx_def** %op1, align 8
  br label %if.end.2563

if.end.2563:                                      ; preds = %if.then.2559, %if.then.2535
  br label %if.end.2564

if.end.2564:                                      ; preds = %if.end.2563, %land.lhs.true.2515, %if.else.2503
  br label %if.end.2565

if.end.2565:                                      ; preds = %if.end.2564, %if.then.2495
  br label %if.end.2566

if.end.2566:                                      ; preds = %if.end.2565, %lor.lhs.false.2474, %land.lhs.true.2460, %land.lhs.true.2452, %land.lhs.true.2444, %land.lhs.true.2441, %while.end.2431
  %1092 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1093 = bitcast %struct.rtx_def* %1092 to i32*
  %bf.load2567 = load i32, i32* %1093, align 8
  %bf.lshr2568 = lshr i32 %bf.load2567, 16
  %bf.clear2569 = and i32 %bf.lshr2568, 255
  store i32 %bf.clear2569, i32* %mode, align 4
  %1094 = load i32, i32* %mode, align 4
  %cmp2570 = icmp ne i32 %1094, 0
  br i1 %cmp2570, label %land.lhs.true.2572, label %if.end.2744

land.lhs.true.2572:                               ; preds = %if.end.2566
  %1095 = load i32, i32* %mode, align 4
  %idxprom2573 = sext i32 %1095 to i64
  %arrayidx2574 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2573
  %1096 = load i32, i32* %arrayidx2574, align 4
  %cmp2575 = icmp eq i32 %1096, 1
  br i1 %cmp2575, label %land.lhs.true.2577, label %if.end.2744

land.lhs.true.2577:                               ; preds = %land.lhs.true.2572
  %1097 = load i32, i32* %mode, align 4
  %idxprom2578 = sext i32 %1097 to i64
  %arrayidx2579 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom2578
  %1098 = load i8, i8* %arrayidx2579, align 1
  %conv2580 = zext i8 %1098 to i32
  %1099 = load i32, i32* @target_flags, align 4
  %and2581 = and i32 %1099, 33554432
  %tobool2582 = icmp ne i32 %and2581, 0
  %cond2583 = select i1 %tobool2582, i32 8, i32 4
  %cmp2584 = icmp slt i32 %conv2580, %cond2583
  br i1 %cmp2584, label %land.lhs.true.2586, label %if.end.2744

land.lhs.true.2586:                               ; preds = %land.lhs.true.2577
  %1100 = load i32, i32* %mode, align 4
  %call2587 = call i32 @have_insn_for(i32 74, i32 %1100)
  %tobool2588 = icmp ne i32 %call2587, 0
  br i1 %tobool2588, label %if.end.2744, label %if.then.2589

if.then.2589:                                     ; preds = %land.lhs.true.2586
  %1101 = load i32, i32* %mode, align 4
  %idxprom2590 = sext i32 %1101 to i64
  %arrayidx2591 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_wider_mode, i32 0, i64 %idxprom2590
  %1102 = load i8, i8* %arrayidx2591, align 1
  %conv2592 = zext i8 %1102 to i32
  store i32 %conv2592, i32* %tmode, align 4
  br label %for.cond.2593

for.cond.2593:                                    ; preds = %for.inc.2739, %if.then.2589
  %1103 = load i32, i32* %tmode, align 4
  %cmp2594 = icmp ne i32 %1103, 0
  br i1 %cmp2594, label %land.rhs.2596, label %land.end.2602

land.rhs.2596:                                    ; preds = %for.cond.2593
  %1104 = load i32, i32* %tmode, align 4
  %idxprom2597 = sext i32 %1104 to i64
  %arrayidx2598 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2597
  %1105 = load i16, i16* %arrayidx2598, align 2
  %conv2599 = zext i16 %1105 to i32
  %cmp2600 = icmp sle i32 %conv2599, 64
  br label %land.end.2602

land.end.2602:                                    ; preds = %land.rhs.2596, %for.cond.2593
  %1106 = phi i1 [ false, %for.cond.2593 ], [ %cmp2600, %land.rhs.2596 ]
  br i1 %1106, label %for.body.2604, label %for.end.2743

for.body.2604:                                    ; preds = %land.end.2602
  %1107 = load i32, i32* %tmode, align 4
  %call2605 = call i32 @have_insn_for(i32 74, i32 %1107)
  %tobool2606 = icmp ne i32 %call2605, 0
  br i1 %tobool2606, label %if.then.2607, label %if.end.2738

if.then.2607:                                     ; preds = %for.body.2604
  %1108 = load i32, i32* %code.addr, align 4
  %cmp2608 = icmp eq i32 %1108, 103
  br i1 %cmp2608, label %land.lhs.true.2625, label %lor.lhs.false.2610

lor.lhs.false.2610:                               ; preds = %if.then.2607
  %1109 = load i32, i32* %code.addr, align 4
  %cmp2611 = icmp eq i32 %1109, 102
  br i1 %cmp2611, label %land.lhs.true.2625, label %lor.lhs.false.2613

lor.lhs.false.2613:                               ; preds = %lor.lhs.false.2610
  %1110 = load i32, i32* %code.addr, align 4
  %cmp2614 = icmp eq i32 %1110, 108
  br i1 %cmp2614, label %land.lhs.true.2625, label %lor.lhs.false.2616

lor.lhs.false.2616:                               ; preds = %lor.lhs.false.2613
  %1111 = load i32, i32* %code.addr, align 4
  %cmp2617 = icmp eq i32 %1111, 109
  br i1 %cmp2617, label %land.lhs.true.2625, label %lor.lhs.false.2619

lor.lhs.false.2619:                               ; preds = %lor.lhs.false.2616
  %1112 = load i32, i32* %code.addr, align 4
  %cmp2620 = icmp eq i32 %1112, 110
  br i1 %cmp2620, label %land.lhs.true.2625, label %lor.lhs.false.2622

lor.lhs.false.2622:                               ; preds = %lor.lhs.false.2619
  %1113 = load i32, i32* %code.addr, align 4
  %cmp2623 = icmp eq i32 %1113, 111
  br i1 %cmp2623, label %land.lhs.true.2625, label %land.end.2648

land.lhs.true.2625:                               ; preds = %lor.lhs.false.2622, %lor.lhs.false.2619, %lor.lhs.false.2616, %lor.lhs.false.2613, %lor.lhs.false.2610, %if.then.2607
  %1114 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1115 = load i32, i32* %tmode, align 4
  %call2626 = call i64 @nonzero_bits(%struct.rtx_def* %1114, i32 %1115)
  %1116 = load i32, i32* %mode, align 4
  %idxprom2627 = sext i32 %1116 to i64
  %arrayidx2628 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom2627
  %1117 = load i64, i64* %arrayidx2628, align 8
  %neg2629 = xor i64 %1117, -1
  %and2630 = and i64 %call2626, %neg2629
  %cmp2631 = icmp eq i64 %and2630, 0
  br i1 %cmp2631, label %land.rhs.2633, label %land.end.2648

land.rhs.2633:                                    ; preds = %land.lhs.true.2625
  %1118 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %1119 = bitcast %struct.rtx_def* %1118 to i32*
  %bf.load2634 = load i32, i32* %1119, align 8
  %bf.clear2635 = and i32 %bf.load2634, 65535
  %cmp2636 = icmp eq i32 %bf.clear2635, 54
  br i1 %cmp2636, label %lor.end.2646, label %lor.rhs.2638

lor.rhs.2638:                                     ; preds = %land.rhs.2633
  %1120 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %1121 = load i32, i32* %tmode, align 4
  %call2639 = call i64 @nonzero_bits(%struct.rtx_def* %1120, i32 %1121)
  %1122 = load i32, i32* %mode, align 4
  %idxprom2640 = sext i32 %1122 to i64
  %arrayidx2641 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom2640
  %1123 = load i64, i64* %arrayidx2641, align 8
  %neg2642 = xor i64 %1123, -1
  %and2643 = and i64 %call2639, %neg2642
  %cmp2644 = icmp eq i64 %and2643, 0
  br label %lor.end.2646

lor.end.2646:                                     ; preds = %lor.rhs.2638, %land.rhs.2633
  %1124 = phi i1 [ true, %land.rhs.2633 ], [ %cmp2644, %lor.rhs.2638 ]
  br label %land.end.2648

land.end.2648:                                    ; preds = %lor.end.2646, %land.lhs.true.2625, %lor.lhs.false.2622
  %1125 = phi i1 [ false, %land.lhs.true.2625 ], [ false, %lor.lhs.false.2622 ], [ %1124, %lor.end.2646 ]
  %land.ext2649 = zext i1 %1125 to i32
  store i32 %land.ext2649, i32* %zero_extended, align 4
  %1126 = load i32, i32* %zero_extended, align 4
  %tobool2650 = icmp ne i32 %1126, 0
  br i1 %tobool2650, label %if.then.2673, label %lor.lhs.false.2651

lor.lhs.false.2651:                               ; preds = %land.end.2648
  %1127 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1128 = load i32, i32* %tmode, align 4
  %call2652 = call i32 @num_sign_bit_copies(%struct.rtx_def* %1127, i32 %1128)
  %1129 = load i32, i32* %tmode, align 4
  %idxprom2653 = sext i32 %1129 to i64
  %arrayidx2654 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2653
  %1130 = load i16, i16* %arrayidx2654, align 2
  %conv2655 = zext i16 %1130 to i32
  %1131 = load i32, i32* %mode, align 4
  %idxprom2656 = sext i32 %1131 to i64
  %arrayidx2657 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2656
  %1132 = load i16, i16* %arrayidx2657, align 2
  %conv2658 = zext i16 %1132 to i32
  %sub2659 = sub nsw i32 %conv2655, %conv2658
  %cmp2660 = icmp ugt i32 %call2652, %sub2659
  br i1 %cmp2660, label %land.lhs.true.2662, label %if.end.2709

land.lhs.true.2662:                               ; preds = %lor.lhs.false.2651
  %1133 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %1134 = load i32, i32* %tmode, align 4
  %call2663 = call i32 @num_sign_bit_copies(%struct.rtx_def* %1133, i32 %1134)
  %1135 = load i32, i32* %tmode, align 4
  %idxprom2664 = sext i32 %1135 to i64
  %arrayidx2665 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2664
  %1136 = load i16, i16* %arrayidx2665, align 2
  %conv2666 = zext i16 %1136 to i32
  %1137 = load i32, i32* %mode, align 4
  %idxprom2667 = sext i32 %1137 to i64
  %arrayidx2668 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2667
  %1138 = load i16, i16* %arrayidx2668, align 2
  %conv2669 = zext i16 %1138 to i32
  %sub2670 = sub nsw i32 %conv2666, %conv2669
  %cmp2671 = icmp ugt i32 %call2663, %sub2670
  br i1 %cmp2671, label %if.then.2673, label %if.end.2709

if.then.2673:                                     ; preds = %land.lhs.true.2662, %land.end.2648
  %1139 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1140 = bitcast %struct.rtx_def* %1139 to i32*
  %bf.load2674 = load i32, i32* %1140, align 8
  %bf.clear2675 = and i32 %bf.load2674, 65535
  %cmp2676 = icmp eq i32 %bf.clear2675, 83
  br i1 %cmp2676, label %land.lhs.true.2678, label %if.end.2691

land.lhs.true.2678:                               ; preds = %if.then.2673
  %1141 = load i32, i32* %mode, align 4
  %call2679 = call i32 @have_insn_for(i32 83, i32 %1141)
  %tobool2680 = icmp ne i32 %call2679, 0
  br i1 %tobool2680, label %if.end.2691, label %if.then.2681

if.then.2681:                                     ; preds = %land.lhs.true.2678
  %1142 = load i32, i32* %tmode, align 4
  %1143 = load i32, i32* %tmode, align 4
  %1144 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2682 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1144, i32 0, i32 1
  %arrayidx2683 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2682, i32 0, i64 0
  %rtx2684 = bitcast %union.rtunion_def* %arrayidx2683 to %struct.rtx_def**
  %1145 = load %struct.rtx_def*, %struct.rtx_def** %rtx2684, align 8
  %call2685 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %1143, %struct.rtx_def* %1145)
  %1146 = load i32, i32* %tmode, align 4
  %1147 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld2686 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1147, i32 0, i32 1
  %arrayidx2687 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2686, i32 0, i64 1
  %rtx2688 = bitcast %union.rtunion_def* %arrayidx2687 to %struct.rtx_def**
  %1148 = load %struct.rtx_def*, %struct.rtx_def** %rtx2688, align 8
  %call2689 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %1146, %struct.rtx_def* %1148)
  %call2690 = call %struct.rtx_def* @gen_binary(i32 83, i32 %1142, %struct.rtx_def* %call2685, %struct.rtx_def* %call2689)
  store %struct.rtx_def* %call2690, %struct.rtx_def** %op0, align 8
  br label %if.end.2691

if.end.2691:                                      ; preds = %if.then.2681, %land.lhs.true.2678, %if.then.2673
  %1149 = load i32, i32* %tmode, align 4
  %1150 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call2692 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %1149, %struct.rtx_def* %1150)
  store %struct.rtx_def* %call2692, %struct.rtx_def** %op0, align 8
  %1151 = load i32, i32* %zero_extended, align 4
  %tobool2693 = icmp ne i32 %1151, 0
  br i1 %tobool2693, label %land.lhs.true.2694, label %if.end.2707

land.lhs.true.2694:                               ; preds = %if.end.2691
  %1152 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %1153 = bitcast %struct.rtx_def* %1152 to i32*
  %bf.load2695 = load i32, i32* %1153, align 8
  %bf.clear2696 = and i32 %bf.load2695, 65535
  %cmp2697 = icmp eq i32 %bf.clear2696, 54
  br i1 %cmp2697, label %if.then.2699, label %if.end.2707

if.then.2699:                                     ; preds = %land.lhs.true.2694
  %1154 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld2700 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1154, i32 0, i32 1
  %arrayidx2701 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2700, i32 0, i64 0
  %rtwint2702 = bitcast %union.rtunion_def* %arrayidx2701 to i64*
  %1155 = load i64, i64* %rtwint2702, align 8
  %1156 = load i32, i32* %mode, align 4
  %idxprom2703 = sext i32 %1156 to i64
  %arrayidx2704 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom2703
  %1157 = load i64, i64* %arrayidx2704, align 8
  %and2705 = and i64 %1155, %1157
  %call2706 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %and2705)
  store %struct.rtx_def* %call2706, %struct.rtx_def** %op1, align 8
  br label %if.end.2707

if.end.2707:                                      ; preds = %if.then.2699, %land.lhs.true.2694, %if.end.2691
  %1158 = load i32, i32* %tmode, align 4
  %1159 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call2708 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %1158, %struct.rtx_def* %1159)
  store %struct.rtx_def* %call2708, %struct.rtx_def** %op1, align 8
  br label %for.end.2743

if.end.2709:                                      ; preds = %land.lhs.true.2662, %lor.lhs.false.2651
  %1160 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %1161 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp2710 = icmp eq %struct.rtx_def* %1160, %1161
  br i1 %cmp2710, label %land.lhs.true.2712, label %if.end.2737

land.lhs.true.2712:                               ; preds = %if.end.2709
  %1162 = load i32, i32* %code.addr, align 4
  %cmp2713 = icmp eq i32 %1162, 107
  br i1 %cmp2713, label %land.lhs.true.2718, label %lor.lhs.false.2715

lor.lhs.false.2715:                               ; preds = %land.lhs.true.2712
  %1163 = load i32, i32* %code.addr, align 4
  %cmp2716 = icmp eq i32 %1163, 104
  br i1 %cmp2716, label %land.lhs.true.2718, label %if.end.2737

land.lhs.true.2718:                               ; preds = %lor.lhs.false.2715, %land.lhs.true.2712
  %1164 = load i32, i32* %mode, align 4
  %idxprom2719 = sext i32 %1164 to i64
  %arrayidx2720 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2719
  %1165 = load i16, i16* %arrayidx2720, align 2
  %conv2721 = zext i16 %1165 to i32
  %cmp2722 = icmp sle i32 %conv2721, 64
  br i1 %cmp2722, label %if.then.2724, label %if.end.2737

if.then.2724:                                     ; preds = %land.lhs.true.2718
  %1166 = load i32, i32* %tmode, align 4
  %1167 = load i32, i32* %tmode, align 4
  %1168 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call2725 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %1167, %struct.rtx_def* %1168)
  %1169 = load i32, i32* %mode, align 4
  %idxprom2726 = sext i32 %1169 to i64
  %arrayidx2727 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2726
  %1170 = load i16, i16* %arrayidx2727, align 2
  %conv2728 = zext i16 %1170 to i32
  %sub2729 = sub nsw i32 %conv2728, 1
  %sh_prom2730 = zext i32 %sub2729 to i64
  %shl2731 = shl i64 1, %sh_prom2730
  %call2732 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %shl2731)
  %call2733 = call %struct.rtx_def* @gen_binary(i32 83, i32 %1166, %struct.rtx_def* %call2725, %struct.rtx_def* %call2732)
  store %struct.rtx_def* %call2733, %struct.rtx_def** %op0, align 8
  %1171 = load i32, i32* %code.addr, align 4
  %cmp2734 = icmp eq i32 %1171, 107
  %cond2736 = select i1 %cmp2734, i32 102, i32 103
  store i32 %cond2736, i32* %code.addr, align 4
  br label %for.end.2743

if.end.2737:                                      ; preds = %land.lhs.true.2718, %lor.lhs.false.2715, %if.end.2709
  br label %if.end.2738

if.end.2738:                                      ; preds = %if.end.2737, %for.body.2604
  br label %for.inc.2739

for.inc.2739:                                     ; preds = %if.end.2738
  %1172 = load i32, i32* %tmode, align 4
  %idxprom2740 = sext i32 %1172 to i64
  %arrayidx2741 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_wider_mode, i32 0, i64 %idxprom2740
  %1173 = load i8, i8* %arrayidx2741, align 1
  %conv2742 = zext i8 %1173 to i32
  store i32 %conv2742, i32* %tmode, align 4
  br label %for.cond.2593

for.end.2743:                                     ; preds = %if.then.2724, %if.end.2707, %land.end.2602
  br label %if.end.2744

if.end.2744:                                      ; preds = %for.end.2743, %land.lhs.true.2586, %land.lhs.true.2577, %land.lhs.true.2572, %if.end.2566
  %1174 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %1175 = load %struct.rtx_def**, %struct.rtx_def*** %pop0.addr, align 8
  store %struct.rtx_def* %1174, %struct.rtx_def** %1175, align 8
  %1176 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %1177 = load %struct.rtx_def**, %struct.rtx_def*** %pop1.addr, align 8
  store %struct.rtx_def* %1176, %struct.rtx_def** %1177, align 8
  %1178 = load i32, i32* %code.addr, align 4
  ret i32 %1178
}

declare i32 @general_operand(%struct.rtx_def*, i32) #1

declare i32 @reverse_condition(i32) #1

declare %struct.rtx_def* @gen_rtx_fmt_eee(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @simplify_ternary_operation(i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @apply_distributive_law(%struct.rtx_def* %x) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %lhs = alloca %struct.rtx_def*, align 8
  %rhs = alloca %struct.rtx_def*, align 8
  %other = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  %inner_code = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load1 = load i32, i32* %3, align 8
  %bf.lshr = lshr i32 %bf.load1, 16
  %bf.clear2 = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear2 to i64
  %arrayidx = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %cmp = icmp eq i32 %4, 2
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load3 = load i32, i32* %6, align 8
  %bf.lshr4 = lshr i32 %bf.load3, 16
  %bf.clear5 = and i32 %bf.lshr4, 255
  %idxprom6 = sext i32 %bf.clear5 to i64
  %arrayidx7 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom6
  %7 = load i32, i32* %arrayidx7, align 4
  %cmp8 = icmp eq i32 %7, 6
  br i1 %cmp8, label %if.then, label %lor.lhs.false.9

lor.lhs.false.9:                                  ; preds = %lor.lhs.false
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load10 = load i32, i32* %9, align 8
  %bf.lshr11 = lshr i32 %bf.load10, 16
  %bf.clear12 = and i32 %bf.lshr11, 255
  %idxprom13 = sext i32 %bf.clear12 to i64
  %arrayidx14 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom13
  %10 = load i32, i32* %arrayidx14, align 4
  %cmp15 = icmp eq i32 %10, 8
  br i1 %cmp15, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.9, %lor.lhs.false, %entry
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %11, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.9
  %12 = load i32, i32* %code, align 4
  %cmp16 = icmp ne i32 %12, 84
  br i1 %cmp16, label %land.lhs.true, label %if.end.25

land.lhs.true:                                    ; preds = %if.end
  %13 = load i32, i32* %code, align 4
  %cmp17 = icmp ne i32 %13, 83
  br i1 %cmp17, label %land.lhs.true.18, label %if.end.25

land.lhs.true.18:                                 ; preds = %land.lhs.true
  %14 = load i32, i32* %code, align 4
  %cmp19 = icmp ne i32 %14, 85
  br i1 %cmp19, label %land.lhs.true.20, label %if.end.25

land.lhs.true.20:                                 ; preds = %land.lhs.true.18
  %15 = load i32, i32* %code, align 4
  %cmp21 = icmp ne i32 %15, 75
  br i1 %cmp21, label %land.lhs.true.22, label %if.end.25

land.lhs.true.22:                                 ; preds = %land.lhs.true.20
  %16 = load i32, i32* %code, align 4
  %cmp23 = icmp ne i32 %16, 76
  br i1 %cmp23, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %land.lhs.true.22
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %17, %struct.rtx_def** %retval
  br label %return

if.end.25:                                        ; preds = %land.lhs.true.22, %land.lhs.true.20, %land.lhs.true.18, %land.lhs.true, %if.end
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %19, %struct.rtx_def** %lhs, align 8
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i32 0, i64 1
  %rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rtx29, align 8
  store %struct.rtx_def* %21, %struct.rtx_def** %rhs, align 8
  %22 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %23 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load30 = load i32, i32* %23, align 8
  %bf.clear31 = and i32 %bf.load30, 65535
  %idxprom32 = sext i32 %bf.clear31 to i64
  %arrayidx33 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom32
  %24 = load i8, i8* %arrayidx33, align 1
  %conv = sext i8 %24 to i32
  %cmp34 = icmp eq i32 %conv, 111
  br i1 %cmp34, label %if.then.44, label %lor.lhs.false.36

lor.lhs.false.36:                                 ; preds = %if.end.25
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load37 = load i32, i32* %26, align 8
  %bf.clear38 = and i32 %bf.load37, 65535
  %idxprom39 = sext i32 %bf.clear38 to i64
  %arrayidx40 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom39
  %27 = load i8, i8* %arrayidx40, align 1
  %conv41 = sext i8 %27 to i32
  %cmp42 = icmp eq i32 %conv41, 111
  br i1 %cmp42, label %if.then.44, label %if.end.45

if.then.44:                                       ; preds = %lor.lhs.false.36, %if.end.25
  %28 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %28, %struct.rtx_def** %retval
  br label %return

if.end.45:                                        ; preds = %lor.lhs.false.36
  %29 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %call = call %struct.rtx_def* @expand_compound_operation(%struct.rtx_def* %29)
  store %struct.rtx_def* %call, %struct.rtx_def** %lhs, align 8
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %call46 = call %struct.rtx_def* @expand_compound_operation(%struct.rtx_def* %30)
  store %struct.rtx_def* %call46, %struct.rtx_def** %rhs, align 8
  %31 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load47 = load i32, i32* %32, align 8
  %bf.clear48 = and i32 %bf.load47, 65535
  store i32 %bf.clear48, i32* %inner_code, align 4
  %33 = load i32, i32* %inner_code, align 4
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %35 = bitcast %struct.rtx_def* %34 to i32*
  %bf.load49 = load i32, i32* %35, align 8
  %bf.clear50 = and i32 %bf.load49, 65535
  %cmp51 = icmp ne i32 %33, %bf.clear50
  br i1 %cmp51, label %if.then.53, label %if.end.54

if.then.53:                                       ; preds = %if.end.45
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %36, %struct.rtx_def** %retval
  br label %return

if.end.54:                                        ; preds = %if.end.45
  %37 = load i32, i32* %inner_code, align 4
  switch i32 %37, label %sw.default [
    i32 90, label %sw.bb
    i32 89, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 78, label %sw.bb.62
    i32 87, label %sw.bb.70
    i32 63, label %sw.bb.71
  ]

sw.bb:                                            ; preds = %if.end.54, %if.end.54, %if.end.54, %if.end.54
  %38 = load i32, i32* %code, align 4
  %cmp55 = icmp eq i32 %38, 75
  br i1 %cmp55, label %if.then.60, label %lor.lhs.false.57

lor.lhs.false.57:                                 ; preds = %sw.bb
  %39 = load i32, i32* %code, align 4
  %cmp58 = icmp eq i32 %39, 76
  br i1 %cmp58, label %if.then.60, label %if.end.61

if.then.60:                                       ; preds = %lor.lhs.false.57, %sw.bb
  %40 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %40, %struct.rtx_def** %retval
  br label %return

if.end.61:                                        ; preds = %lor.lhs.false.57
  br label %sw.epilog

sw.bb.62:                                         ; preds = %if.end.54
  %41 = load i32, i32* %code, align 4
  %cmp63 = icmp ne i32 %41, 75
  br i1 %cmp63, label %land.lhs.true.65, label %if.end.69

land.lhs.true.65:                                 ; preds = %sw.bb.62
  %42 = load i32, i32* %code, align 4
  %cmp66 = icmp ne i32 %42, 76
  br i1 %cmp66, label %if.then.68, label %if.end.69

if.then.68:                                       ; preds = %land.lhs.true.65
  %43 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %43, %struct.rtx_def** %retval
  br label %return

if.end.69:                                        ; preds = %land.lhs.true.65, %sw.bb.62
  br label %sw.epilog

sw.bb.70:                                         ; preds = %if.end.54
  br label %sw.epilog

sw.bb.71:                                         ; preds = %if.end.54
  %44 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1
  %arrayidx73 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld72, i32 0, i64 0
  %rtx74 = bitcast %union.rtunion_def* %arrayidx73 to %struct.rtx_def**
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rtx74, align 8
  %46 = bitcast %struct.rtx_def* %45 to i32*
  %bf.load75 = load i32, i32* %46, align 8
  %bf.lshr76 = lshr i32 %bf.load75, 16
  %bf.clear77 = and i32 %bf.lshr76, 255
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %fld78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1
  %arrayidx79 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld78, i32 0, i64 0
  %rtx80 = bitcast %union.rtunion_def* %arrayidx79 to %struct.rtx_def**
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rtx80, align 8
  %49 = bitcast %struct.rtx_def* %48 to i32*
  %bf.load81 = load i32, i32* %49, align 8
  %bf.lshr82 = lshr i32 %bf.load81, 16
  %bf.clear83 = and i32 %bf.lshr82, 255
  %cmp84 = icmp ne i32 %bf.clear77, %bf.clear83
  br i1 %cmp84, label %if.then.143, label %lor.lhs.false.86

lor.lhs.false.86:                                 ; preds = %sw.bb.71
  %50 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1
  %arrayidx88 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld87, i32 0, i64 1
  %rtuint = bitcast %union.rtunion_def* %arrayidx88 to i32*
  %51 = load i32, i32* %rtuint, align 4
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %fld89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i32 0, i64 1
  %rtuint91 = bitcast %union.rtunion_def* %arrayidx90 to i32*
  %53 = load i32, i32* %rtuint91, align 4
  %cmp92 = icmp ne i32 %51, %53
  br i1 %cmp92, label %if.then.143, label %lor.lhs.false.94

lor.lhs.false.94:                                 ; preds = %lor.lhs.false.86
  %54 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %call95 = call i32 @subreg_lowpart_p(%struct.rtx_def* %54)
  %tobool = icmp ne i32 %call95, 0
  br i1 %tobool, label %lor.lhs.false.96, label %if.then.143

lor.lhs.false.96:                                 ; preds = %lor.lhs.false.94
  %55 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %56 = bitcast %struct.rtx_def* %55 to i32*
  %bf.load97 = load i32, i32* %56, align 8
  %bf.lshr98 = lshr i32 %bf.load97, 16
  %bf.clear99 = and i32 %bf.lshr98, 255
  %idxprom100 = sext i32 %bf.clear99 to i64
  %arrayidx101 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom100
  %57 = load i32, i32* %arrayidx101, align 4
  %58 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i32 0, i64 0
  %rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rtx104, align 8
  %60 = bitcast %struct.rtx_def* %59 to i32*
  %bf.load105 = load i32, i32* %60, align 8
  %bf.lshr106 = lshr i32 %bf.load105, 16
  %bf.clear107 = and i32 %bf.lshr106, 255
  %idxprom108 = sext i32 %bf.clear107 to i64
  %arrayidx109 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom108
  %61 = load i32, i32* %arrayidx109, align 4
  %cmp110 = icmp ne i32 %57, %61
  br i1 %cmp110, label %if.then.143, label %lor.lhs.false.112

lor.lhs.false.112:                                ; preds = %lor.lhs.false.96
  %62 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %63 = bitcast %struct.rtx_def* %62 to i32*
  %bf.load113 = load i32, i32* %63, align 8
  %bf.lshr114 = lshr i32 %bf.load113, 16
  %bf.clear115 = and i32 %bf.lshr114, 255
  %idxprom116 = sext i32 %bf.clear115 to i64
  %arrayidx117 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom116
  %64 = load i8, i8* %arrayidx117, align 1
  %conv118 = zext i8 %64 to i32
  %65 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1
  %arrayidx120 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld119, i32 0, i64 0
  %rtx121 = bitcast %union.rtunion_def* %arrayidx120 to %struct.rtx_def**
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rtx121, align 8
  %67 = bitcast %struct.rtx_def* %66 to i32*
  %bf.load122 = load i32, i32* %67, align 8
  %bf.lshr123 = lshr i32 %bf.load122, 16
  %bf.clear124 = and i32 %bf.lshr123, 255
  %idxprom125 = sext i32 %bf.clear124 to i64
  %arrayidx126 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom125
  %68 = load i8, i8* %arrayidx126, align 1
  %conv127 = zext i8 %68 to i32
  %cmp128 = icmp sgt i32 %conv118, %conv127
  br i1 %cmp128, label %if.then.143, label %lor.lhs.false.130

lor.lhs.false.130:                                ; preds = %lor.lhs.false.112
  %69 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld131 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1
  %arrayidx132 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld131, i32 0, i64 0
  %rtx133 = bitcast %union.rtunion_def* %arrayidx132 to %struct.rtx_def**
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rtx133, align 8
  %71 = bitcast %struct.rtx_def* %70 to i32*
  %bf.load134 = load i32, i32* %71, align 8
  %bf.lshr135 = lshr i32 %bf.load134, 16
  %bf.clear136 = and i32 %bf.lshr135, 255
  %idxprom137 = sext i32 %bf.clear136 to i64
  %arrayidx138 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom137
  %72 = load i8, i8* %arrayidx138, align 1
  %conv139 = zext i8 %72 to i32
  %73 = load i32, i32* @target_flags, align 4
  %and = and i32 %73, 33554432
  %tobool140 = icmp ne i32 %and, 0
  %cond = select i1 %tobool140, i32 8, i32 4
  %cmp141 = icmp sgt i32 %conv139, %cond
  br i1 %cmp141, label %if.then.143, label %if.end.144

if.then.143:                                      ; preds = %lor.lhs.false.130, %lor.lhs.false.112, %lor.lhs.false.96, %lor.lhs.false.94, %lor.lhs.false.86, %sw.bb.71
  %74 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %74, %struct.rtx_def** %retval
  br label %return

if.end.144:                                       ; preds = %lor.lhs.false.130
  %75 = load i32, i32* %code, align 4
  %76 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %arrayidx146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld145, i32 0, i64 0
  %rtx147 = bitcast %union.rtunion_def* %arrayidx146 to %struct.rtx_def**
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rtx147, align 8
  %78 = bitcast %struct.rtx_def* %77 to i32*
  %bf.load148 = load i32, i32* %78, align 8
  %bf.lshr149 = lshr i32 %bf.load148, 16
  %bf.clear150 = and i32 %bf.lshr149, 255
  %79 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld151 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1
  %arrayidx152 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld151, i32 0, i64 0
  %rtx153 = bitcast %union.rtunion_def* %arrayidx152 to %struct.rtx_def**
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rtx153, align 8
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %fld154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1
  %arrayidx155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld154, i32 0, i64 0
  %rtx156 = bitcast %union.rtunion_def* %arrayidx155 to %struct.rtx_def**
  %82 = load %struct.rtx_def*, %struct.rtx_def** %rtx156, align 8
  %call157 = call %struct.rtx_def* @gen_binary(i32 %75, i32 %bf.clear150, %struct.rtx_def* %80, %struct.rtx_def* %82)
  store %struct.rtx_def* %call157, %struct.rtx_def** %tem, align 8
  %83 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %84 = bitcast %struct.rtx_def* %83 to i32*
  %bf.load158 = load i32, i32* %84, align 8
  %bf.lshr159 = lshr i32 %bf.load158, 16
  %bf.clear160 = and i32 %bf.lshr159, 255
  %85 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %call161 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %bf.clear160, %struct.rtx_def* %85)
  store %struct.rtx_def* %call161, %struct.rtx_def** %retval
  br label %return

sw.default:                                       ; preds = %if.end.54
  %86 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %86, %struct.rtx_def** %retval
  br label %return

sw.epilog:                                        ; preds = %sw.bb.70, %if.end.69, %if.end.61
  %87 = load i32, i32* %inner_code, align 4
  %idxprom162 = sext i32 %87 to i64
  %arrayidx163 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom162
  %88 = load i8, i8* %arrayidx163, align 1
  %conv164 = sext i8 %88 to i32
  %cmp165 = icmp eq i32 %conv164, 99
  br i1 %cmp165, label %land.lhs.true.167, label %if.else

land.lhs.true.167:                                ; preds = %sw.epilog
  %89 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1
  %arrayidx169 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld168, i32 0, i64 0
  %rtx170 = bitcast %union.rtunion_def* %arrayidx169 to %struct.rtx_def**
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rtx170, align 8
  %91 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %fld171 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1
  %arrayidx172 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld171, i32 0, i64 0
  %rtx173 = bitcast %union.rtunion_def* %arrayidx172 to %struct.rtx_def**
  %92 = load %struct.rtx_def*, %struct.rtx_def** %rtx173, align 8
  %call174 = call i32 @rtx_equal_p(%struct.rtx_def* %90, %struct.rtx_def* %92)
  %tobool175 = icmp ne i32 %call174, 0
  br i1 %tobool175, label %if.then.176, label %if.else

if.then.176:                                      ; preds = %land.lhs.true.167
  %93 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %93, i32 0, i32 1
  %arrayidx178 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld177, i32 0, i64 0
  %rtx179 = bitcast %union.rtunion_def* %arrayidx178 to %struct.rtx_def**
  %94 = load %struct.rtx_def*, %struct.rtx_def** %rtx179, align 8
  store %struct.rtx_def* %94, %struct.rtx_def** %other, align 8
  %95 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld180 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1
  %arrayidx181 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld180, i32 0, i64 1
  %rtx182 = bitcast %union.rtunion_def* %arrayidx181 to %struct.rtx_def**
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rtx182, align 8
  store %struct.rtx_def* %96, %struct.rtx_def** %lhs, align 8
  %97 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %fld183 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %97, i32 0, i32 1
  %arrayidx184 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld183, i32 0, i64 1
  %rtx185 = bitcast %union.rtunion_def* %arrayidx184 to %struct.rtx_def**
  %98 = load %struct.rtx_def*, %struct.rtx_def** %rtx185, align 8
  store %struct.rtx_def* %98, %struct.rtx_def** %rhs, align 8
  br label %if.end.258

if.else:                                          ; preds = %land.lhs.true.167, %sw.epilog
  %99 = load i32, i32* %inner_code, align 4
  %idxprom186 = sext i32 %99 to i64
  %arrayidx187 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom186
  %100 = load i8, i8* %arrayidx187, align 1
  %conv188 = sext i8 %100 to i32
  %cmp189 = icmp eq i32 %conv188, 99
  br i1 %cmp189, label %land.lhs.true.191, label %if.else.210

land.lhs.true.191:                                ; preds = %if.else
  %101 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld192 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i32 0, i32 1
  %arrayidx193 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld192, i32 0, i64 0
  %rtx194 = bitcast %union.rtunion_def* %arrayidx193 to %struct.rtx_def**
  %102 = load %struct.rtx_def*, %struct.rtx_def** %rtx194, align 8
  %103 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %fld195 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1
  %arrayidx196 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld195, i32 0, i64 1
  %rtx197 = bitcast %union.rtunion_def* %arrayidx196 to %struct.rtx_def**
  %104 = load %struct.rtx_def*, %struct.rtx_def** %rtx197, align 8
  %call198 = call i32 @rtx_equal_p(%struct.rtx_def* %102, %struct.rtx_def* %104)
  %tobool199 = icmp ne i32 %call198, 0
  br i1 %tobool199, label %if.then.200, label %if.else.210

if.then.200:                                      ; preds = %land.lhs.true.191
  %105 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld201 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1
  %arrayidx202 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld201, i32 0, i64 0
  %rtx203 = bitcast %union.rtunion_def* %arrayidx202 to %struct.rtx_def**
  %106 = load %struct.rtx_def*, %struct.rtx_def** %rtx203, align 8
  store %struct.rtx_def* %106, %struct.rtx_def** %other, align 8
  %107 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld204 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1
  %arrayidx205 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld204, i32 0, i64 1
  %rtx206 = bitcast %union.rtunion_def* %arrayidx205 to %struct.rtx_def**
  %108 = load %struct.rtx_def*, %struct.rtx_def** %rtx206, align 8
  store %struct.rtx_def* %108, %struct.rtx_def** %lhs, align 8
  %109 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %fld207 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1
  %arrayidx208 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld207, i32 0, i64 0
  %rtx209 = bitcast %union.rtunion_def* %arrayidx208 to %struct.rtx_def**
  %110 = load %struct.rtx_def*, %struct.rtx_def** %rtx209, align 8
  store %struct.rtx_def* %110, %struct.rtx_def** %rhs, align 8
  br label %if.end.257

if.else.210:                                      ; preds = %land.lhs.true.191, %if.else
  %111 = load i32, i32* %inner_code, align 4
  %idxprom211 = sext i32 %111 to i64
  %arrayidx212 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom211
  %112 = load i8, i8* %arrayidx212, align 1
  %conv213 = sext i8 %112 to i32
  %cmp214 = icmp eq i32 %conv213, 99
  br i1 %cmp214, label %land.lhs.true.216, label %if.else.235

land.lhs.true.216:                                ; preds = %if.else.210
  %113 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld217 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %113, i32 0, i32 1
  %arrayidx218 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld217, i32 0, i64 1
  %rtx219 = bitcast %union.rtunion_def* %arrayidx218 to %struct.rtx_def**
  %114 = load %struct.rtx_def*, %struct.rtx_def** %rtx219, align 8
  %115 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %fld220 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1
  %arrayidx221 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld220, i32 0, i64 0
  %rtx222 = bitcast %union.rtunion_def* %arrayidx221 to %struct.rtx_def**
  %116 = load %struct.rtx_def*, %struct.rtx_def** %rtx222, align 8
  %call223 = call i32 @rtx_equal_p(%struct.rtx_def* %114, %struct.rtx_def* %116)
  %tobool224 = icmp ne i32 %call223, 0
  br i1 %tobool224, label %if.then.225, label %if.else.235

if.then.225:                                      ; preds = %land.lhs.true.216
  %117 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld226 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %117, i32 0, i32 1
  %arrayidx227 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld226, i32 0, i64 1
  %rtx228 = bitcast %union.rtunion_def* %arrayidx227 to %struct.rtx_def**
  %118 = load %struct.rtx_def*, %struct.rtx_def** %rtx228, align 8
  store %struct.rtx_def* %118, %struct.rtx_def** %other, align 8
  %119 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld229 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %119, i32 0, i32 1
  %arrayidx230 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld229, i32 0, i64 0
  %rtx231 = bitcast %union.rtunion_def* %arrayidx230 to %struct.rtx_def**
  %120 = load %struct.rtx_def*, %struct.rtx_def** %rtx231, align 8
  store %struct.rtx_def* %120, %struct.rtx_def** %lhs, align 8
  %121 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %fld232 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %121, i32 0, i32 1
  %arrayidx233 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld232, i32 0, i64 1
  %rtx234 = bitcast %union.rtunion_def* %arrayidx233 to %struct.rtx_def**
  %122 = load %struct.rtx_def*, %struct.rtx_def** %rtx234, align 8
  store %struct.rtx_def* %122, %struct.rtx_def** %rhs, align 8
  br label %if.end.256

if.else.235:                                      ; preds = %land.lhs.true.216, %if.else.210
  %123 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %123, i32 0, i32 1
  %arrayidx237 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld236, i32 0, i64 1
  %rtx238 = bitcast %union.rtunion_def* %arrayidx237 to %struct.rtx_def**
  %124 = load %struct.rtx_def*, %struct.rtx_def** %rtx238, align 8
  %125 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %fld239 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %125, i32 0, i32 1
  %arrayidx240 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld239, i32 0, i64 1
  %rtx241 = bitcast %union.rtunion_def* %arrayidx240 to %struct.rtx_def**
  %126 = load %struct.rtx_def*, %struct.rtx_def** %rtx241, align 8
  %call242 = call i32 @rtx_equal_p(%struct.rtx_def* %124, %struct.rtx_def* %126)
  %tobool243 = icmp ne i32 %call242, 0
  br i1 %tobool243, label %if.then.244, label %if.else.254

if.then.244:                                      ; preds = %if.else.235
  %127 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld245 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %127, i32 0, i32 1
  %arrayidx246 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld245, i32 0, i64 1
  %rtx247 = bitcast %union.rtunion_def* %arrayidx246 to %struct.rtx_def**
  %128 = load %struct.rtx_def*, %struct.rtx_def** %rtx247, align 8
  store %struct.rtx_def* %128, %struct.rtx_def** %other, align 8
  %129 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld248 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %129, i32 0, i32 1
  %arrayidx249 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld248, i32 0, i64 0
  %rtx250 = bitcast %union.rtunion_def* %arrayidx249 to %struct.rtx_def**
  %130 = load %struct.rtx_def*, %struct.rtx_def** %rtx250, align 8
  store %struct.rtx_def* %130, %struct.rtx_def** %lhs, align 8
  %131 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %fld251 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i32 0, i32 1
  %arrayidx252 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld251, i32 0, i64 0
  %rtx253 = bitcast %union.rtunion_def* %arrayidx252 to %struct.rtx_def**
  %132 = load %struct.rtx_def*, %struct.rtx_def** %rtx253, align 8
  store %struct.rtx_def* %132, %struct.rtx_def** %rhs, align 8
  br label %if.end.255

if.else.254:                                      ; preds = %if.else.235
  %133 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %133, %struct.rtx_def** %retval
  br label %return

if.end.255:                                       ; preds = %if.then.244
  br label %if.end.256

if.end.256:                                       ; preds = %if.end.255, %if.then.225
  br label %if.end.257

if.end.257:                                       ; preds = %if.end.256, %if.then.200
  br label %if.end.258

if.end.258:                                       ; preds = %if.end.257, %if.then.176
  %134 = load i32, i32* %code, align 4
  %135 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %136 = bitcast %struct.rtx_def* %135 to i32*
  %bf.load259 = load i32, i32* %136, align 8
  %bf.lshr260 = lshr i32 %bf.load259, 16
  %bf.clear261 = and i32 %bf.lshr260, 255
  %137 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %138 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %call262 = call %struct.rtx_def* @gen_binary(i32 %134, i32 %bf.clear261, %struct.rtx_def* %137, %struct.rtx_def* %138)
  store %struct.rtx_def* %call262, %struct.rtx_def** %tem, align 8
  %139 = load i32, i32* %code, align 4
  %cmp263 = icmp eq i32 %139, 85
  br i1 %cmp263, label %land.lhs.true.265, label %if.end.276

land.lhs.true.265:                                ; preds = %if.end.258
  %140 = load i32, i32* %inner_code, align 4
  %cmp266 = icmp eq i32 %140, 84
  br i1 %cmp266, label %if.then.268, label %if.end.276

if.then.268:                                      ; preds = %land.lhs.true.265
  store i32 83, i32* %inner_code, align 4
  %141 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %142 = bitcast %struct.rtx_def* %141 to i32*
  %bf.load269 = load i32, i32* %142, align 8
  %bf.lshr270 = lshr i32 %bf.load269, 16
  %bf.clear271 = and i32 %bf.lshr270, 255
  %143 = load %struct.rtx_def*, %struct.rtx_def** %other, align 8
  %144 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %145 = bitcast %struct.rtx_def* %144 to i32*
  %bf.load272 = load i32, i32* %145, align 8
  %bf.lshr273 = lshr i32 %bf.load272, 16
  %bf.clear274 = and i32 %bf.lshr273, 255
  %call275 = call %struct.rtx_def* @simplify_gen_unary(i32 86, i32 %bf.clear271, %struct.rtx_def* %143, i32 %bf.clear274)
  store %struct.rtx_def* %call275, %struct.rtx_def** %other, align 8
  br label %if.end.276

if.end.276:                                       ; preds = %if.then.268, %land.lhs.true.265, %if.end.258
  %146 = load i32, i32* %inner_code, align 4
  %147 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %148 = bitcast %struct.rtx_def* %147 to i32*
  %bf.load277 = load i32, i32* %148, align 8
  %bf.lshr278 = lshr i32 %bf.load277, 16
  %bf.clear279 = and i32 %bf.lshr278, 255
  %149 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %call280 = call %struct.rtx_def* @apply_distributive_law(%struct.rtx_def* %149)
  %150 = load %struct.rtx_def*, %struct.rtx_def** %other, align 8
  %call281 = call %struct.rtx_def* @gen_binary(i32 %146, i32 %bf.clear279, %struct.rtx_def* %call280, %struct.rtx_def* %150)
  store %struct.rtx_def* %call281, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %if.end.276, %if.else.254, %sw.default, %if.end.144, %if.then.143, %if.then.68, %if.then.60, %if.then.53, %if.then.44, %if.then.24, %if.then
  %151 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %151
}

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @make_compound_operation(%struct.rtx_def* %x, i32 %in_code) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %in_code.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %mode = alloca i32, align 4
  %mode_width = alloca i32, align 4
  %rhs = alloca %struct.rtx_def*, align 8
  %lhs = alloca %struct.rtx_def*, align 8
  %next_code = alloca i32, align 4
  %i = alloca i32, align 4
  %new = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  %fmt = alloca i8*, align 8
  %mask = alloca i64, align 8
  %newer = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %in_code, i32* %in_code.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load1 = load i32, i32* %3, align 8
  %bf.lshr = lshr i32 %bf.load1, 16
  %bf.clear2 = and i32 %bf.lshr, 255
  store i32 %bf.clear2, i32* %mode, align 4
  %4 = load i32, i32* %mode, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom
  %5 = load i16, i16* %arrayidx, align 2
  %conv = zext i16 %5 to i32
  store i32 %conv, i32* %mode_width, align 4
  store %struct.rtx_def* null, %struct.rtx_def** %new, align 8
  %6 = load i32, i32* %code, align 4
  %cmp = icmp eq i32 %6, 66
  br i1 %cmp, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %7 = load i32, i32* %code, align 4
  %cmp4 = icmp eq i32 %7, 75
  br i1 %cmp4, label %cond.true, label %lor.lhs.false.6

lor.lhs.false.6:                                  ; preds = %lor.lhs.false
  %8 = load i32, i32* %code, align 4
  %cmp7 = icmp eq i32 %8, 76
  br i1 %cmp7, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false.6, %lor.lhs.false, %entry
  br label %cond.end.28

cond.false:                                       ; preds = %lor.lhs.false.6
  %9 = load i32, i32* %code, align 4
  %cmp9 = icmp eq i32 %9, 74
  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false.11

lor.lhs.false.11:                                 ; preds = %cond.false
  %10 = load i32, i32* %code, align 4
  %idxprom12 = sext i32 %10 to i64
  %arrayidx13 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom12
  %11 = load i8, i8* %arrayidx13, align 1
  %conv14 = sext i8 %11 to i32
  %cmp15 = icmp eq i32 %conv14, 60
  br i1 %cmp15, label %land.lhs.true, label %cond.false.21

land.lhs.true:                                    ; preds = %lor.lhs.false.11, %cond.false
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %14 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp18 = icmp eq %struct.rtx_def* %13, %14
  br i1 %cmp18, label %cond.true.20, label %cond.false.21

cond.true.20:                                     ; preds = %land.lhs.true
  br label %cond.end.26

cond.false.21:                                    ; preds = %land.lhs.true, %lor.lhs.false.11
  %15 = load i32, i32* %in_code.addr, align 4
  %cmp22 = icmp eq i32 %15, 74
  br i1 %cmp22, label %cond.true.24, label %cond.false.25

cond.true.24:                                     ; preds = %cond.false.21
  br label %cond.end

cond.false.25:                                    ; preds = %cond.false.21
  %16 = load i32, i32* %in_code.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false.25, %cond.true.24
  %cond = phi i32 [ 47, %cond.true.24 ], [ %16, %cond.false.25 ]
  br label %cond.end.26

cond.end.26:                                      ; preds = %cond.end, %cond.true.20
  %cond27 = phi i32 [ 74, %cond.true.20 ], [ %cond, %cond.end ]
  br label %cond.end.28

cond.end.28:                                      ; preds = %cond.end.26, %cond.true
  %cond29 = phi i32 [ 66, %cond.true ], [ %cond27, %cond.end.26 ]
  store i32 %cond29, i32* %next_code, align 4
  %17 = load i32, i32* %code, align 4
  switch i32 %17, label %sw.default [
    i32 87, label %sw.bb
    i32 83, label %sw.bb.68
    i32 90, label %sw.bb.462
    i32 89, label %sw.bb.492
    i32 63, label %sw.bb.609
  ]

sw.bb:                                            ; preds = %cond.end.28
  %18 = load i32, i32* %in_code.addr, align 4
  %cmp30 = icmp eq i32 %18, 66
  br i1 %cmp30, label %land.lhs.true.32, label %if.end

land.lhs.true.32:                                 ; preds = %sw.bb
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %arrayidx34 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld33, i32 0, i64 1
  %rtx35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rtx35, align 8
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load36 = load i32, i32* %21, align 8
  %bf.clear37 = and i32 %bf.load36, 65535
  %cmp38 = icmp eq i32 %bf.clear37, 54
  br i1 %cmp38, label %land.lhs.true.40, label %if.end

land.lhs.true.40:                                 ; preds = %land.lhs.true.32
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld41, i32 0, i64 1
  %rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rtx43, align 8
  %fld44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx45 to i64*
  %24 = load i64, i64* %rtwint, align 8
  %cmp46 = icmp slt i64 %24, 64
  br i1 %cmp46, label %land.lhs.true.48, label %if.end

land.lhs.true.48:                                 ; preds = %land.lhs.true.40
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i32 0, i64 1
  %rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rtx51, align 8
  %fld52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld52, i32 0, i64 0
  %rtwint54 = bitcast %union.rtunion_def* %arrayidx53 to i64*
  %27 = load i64, i64* %rtwint54, align 8
  %cmp55 = icmp sge i64 %27, 0
  br i1 %cmp55, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.48
  %28 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx58 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld57, i32 0, i64 0
  %rtx59 = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rtx59, align 8
  %30 = load i32, i32* %next_code, align 4
  %call = call %struct.rtx_def* @make_compound_operation(%struct.rtx_def* %29, i32 %30)
  store %struct.rtx_def* %call, %struct.rtx_def** %new, align 8
  %31 = load i32, i32* %mode, align 4
  %32 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %33 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i32 0, i64 1
  %rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rtx62, align 8
  %fld63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx64 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i32 0, i64 0
  %rtwint65 = bitcast %union.rtunion_def* %arrayidx64 to i64*
  %35 = load i64, i64* %rtwint65, align 8
  %shl = shl i64 1, %35
  %call66 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %shl)
  %call67 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %31, %struct.rtx_def* %32, %struct.rtx_def* %call66)
  store %struct.rtx_def* %call67, %struct.rtx_def** %new, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.48, %land.lhs.true.40, %land.lhs.true.32, %sw.bb
  br label %sw.epilog

sw.bb.68:                                         ; preds = %cond.end.28
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld69, i32 0, i64 1
  %rtx71 = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtx_def**
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rtx71, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load72 = load i32, i32* %38, align 8
  %bf.clear73 = and i32 %bf.load72, 65535
  %cmp74 = icmp ne i32 %bf.clear73, 54
  br i1 %cmp74, label %if.then.76, label %if.end.77

if.then.76:                                       ; preds = %sw.bb.68
  br label %sw.epilog

if.end.77:                                        ; preds = %sw.bb.68
  %39 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1
  %arrayidx79 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld78, i32 0, i64 0
  %rtx80 = bitcast %union.rtunion_def* %arrayidx79 to %struct.rtx_def**
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rtx80, align 8
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load81 = load i32, i32* %41, align 8
  %bf.clear82 = and i32 %bf.load81, 65535
  %cmp83 = icmp eq i32 %bf.clear82, 90
  br i1 %cmp83, label %land.lhs.true.85, label %if.else

land.lhs.true.85:                                 ; preds = %if.end.77
  %42 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld86 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1
  %arrayidx87 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld86, i32 0, i64 1
  %rtx88 = bitcast %union.rtunion_def* %arrayidx87 to %struct.rtx_def**
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rtx88, align 8
  %fld89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i32 0, i64 0
  %rtwint91 = bitcast %union.rtunion_def* %arrayidx90 to i64*
  %44 = load i64, i64* %rtwint91, align 8
  %add = add nsw i64 %44, 1
  %call92 = call i32 @exact_log2_wide(i64 %add)
  store i32 %call92, i32* %i, align 4
  %cmp93 = icmp sge i32 %call92, 0
  br i1 %cmp93, label %if.then.95, label %if.else

if.then.95:                                       ; preds = %land.lhs.true.85
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1
  %arrayidx97 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld96, i32 0, i64 0
  %rtx98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtx_def**
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rtx98, align 8
  %fld99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx100 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld99, i32 0, i64 0
  %rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rtx101, align 8
  %48 = load i32, i32* %next_code, align 4
  %call102 = call %struct.rtx_def* @make_compound_operation(%struct.rtx_def* %47, i32 %48)
  store %struct.rtx_def* %call102, %struct.rtx_def** %new, align 8
  %49 = load i32, i32* %mode, align 4
  %50 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %51 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %arrayidx104 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld103, i32 0, i64 0
  %rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rtx105, align 8
  %fld106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1
  %arrayidx107 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld106, i32 0, i64 1
  %rtx108 = bitcast %union.rtunion_def* %arrayidx107 to %struct.rtx_def**
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rtx108, align 8
  %54 = load i32, i32* %i, align 4
  %conv109 = sext i32 %54 to i64
  %55 = load i32, i32* %in_code.addr, align 4
  %cmp110 = icmp eq i32 %55, 74
  %conv111 = zext i1 %cmp110 to i32
  %call112 = call %struct.rtx_def* @make_extraction(i32 %49, %struct.rtx_def* %50, i64 0, %struct.rtx_def* %53, i64 %conv109, i32 1, i32 0, i32 %conv111)
  store %struct.rtx_def* %call112, %struct.rtx_def** %new, align 8
  br label %if.end.461

if.else:                                          ; preds = %land.lhs.true.85, %if.end.77
  %56 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1
  %arrayidx114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld113, i32 0, i64 0
  %rtx115 = bitcast %union.rtunion_def* %arrayidx114 to %struct.rtx_def**
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rtx115, align 8
  %58 = bitcast %struct.rtx_def* %57 to i32*
  %bf.load116 = load i32, i32* %58, align 8
  %bf.clear117 = and i32 %bf.load116, 65535
  %cmp118 = icmp eq i32 %bf.clear117, 63
  br i1 %cmp118, label %land.lhs.true.120, label %if.else.180

land.lhs.true.120:                                ; preds = %if.else
  %59 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1
  %arrayidx122 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld121, i32 0, i64 0
  %rtx123 = bitcast %union.rtunion_def* %arrayidx122 to %struct.rtx_def**
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rtx123, align 8
  %call124 = call i32 @subreg_lowpart_p(%struct.rtx_def* %60)
  %tobool = icmp ne i32 %call124, 0
  br i1 %tobool, label %land.lhs.true.125, label %if.else.180

land.lhs.true.125:                                ; preds = %land.lhs.true.120
  %61 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld126 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1
  %arrayidx127 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld126, i32 0, i64 0
  %rtx128 = bitcast %union.rtunion_def* %arrayidx127 to %struct.rtx_def**
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rtx128, align 8
  %fld129 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1
  %arrayidx130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld129, i32 0, i64 0
  %rtx131 = bitcast %union.rtunion_def* %arrayidx130 to %struct.rtx_def**
  %63 = load %struct.rtx_def*, %struct.rtx_def** %rtx131, align 8
  %64 = bitcast %struct.rtx_def* %63 to i32*
  %bf.load132 = load i32, i32* %64, align 8
  %bf.clear133 = and i32 %bf.load132, 65535
  %cmp134 = icmp eq i32 %bf.clear133, 90
  br i1 %cmp134, label %land.lhs.true.136, label %if.else.180

land.lhs.true.136:                                ; preds = %land.lhs.true.125
  %65 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1
  %arrayidx138 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld137, i32 0, i64 1
  %rtx139 = bitcast %union.rtunion_def* %arrayidx138 to %struct.rtx_def**
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rtx139, align 8
  %fld140 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1
  %arrayidx141 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld140, i32 0, i64 0
  %rtwint142 = bitcast %union.rtunion_def* %arrayidx141 to i64*
  %67 = load i64, i64* %rtwint142, align 8
  %add143 = add nsw i64 %67, 1
  %call144 = call i32 @exact_log2_wide(i64 %add143)
  store i32 %call144, i32* %i, align 4
  %cmp145 = icmp sge i32 %call144, 0
  br i1 %cmp145, label %if.then.147, label %if.else.180

if.then.147:                                      ; preds = %land.lhs.true.136
  %68 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld148 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1
  %arrayidx149 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld148, i32 0, i64 0
  %rtx150 = bitcast %union.rtunion_def* %arrayidx149 to %struct.rtx_def**
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rtx150, align 8
  %fld151 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1
  %arrayidx152 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld151, i32 0, i64 0
  %rtx153 = bitcast %union.rtunion_def* %arrayidx152 to %struct.rtx_def**
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rtx153, align 8
  %fld154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld154, i32 0, i64 0
  %rtx156 = bitcast %union.rtunion_def* %arrayidx155 to %struct.rtx_def**
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rtx156, align 8
  %72 = load i32, i32* %next_code, align 4
  %call157 = call %struct.rtx_def* @make_compound_operation(%struct.rtx_def* %71, i32 %72)
  store %struct.rtx_def* %call157, %struct.rtx_def** %new, align 8
  %73 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld158 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1
  %arrayidx159 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld158, i32 0, i64 0
  %rtx160 = bitcast %union.rtunion_def* %arrayidx159 to %struct.rtx_def**
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rtx160, align 8
  %fld161 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1
  %arrayidx162 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld161, i32 0, i64 0
  %rtx163 = bitcast %union.rtunion_def* %arrayidx162 to %struct.rtx_def**
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rtx163, align 8
  %76 = bitcast %struct.rtx_def* %75 to i32*
  %bf.load164 = load i32, i32* %76, align 8
  %bf.lshr165 = lshr i32 %bf.load164, 16
  %bf.clear166 = and i32 %bf.lshr165, 255
  %77 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %78 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld167 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx168 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld167, i32 0, i64 0
  %rtx169 = bitcast %union.rtunion_def* %arrayidx168 to %struct.rtx_def**
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rtx169, align 8
  %fld170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1
  %arrayidx171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld170, i32 0, i64 0
  %rtx172 = bitcast %union.rtunion_def* %arrayidx171 to %struct.rtx_def**
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rtx172, align 8
  %fld173 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1
  %arrayidx174 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld173, i32 0, i64 1
  %rtx175 = bitcast %union.rtunion_def* %arrayidx174 to %struct.rtx_def**
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rtx175, align 8
  %82 = load i32, i32* %i, align 4
  %conv176 = sext i32 %82 to i64
  %83 = load i32, i32* %in_code.addr, align 4
  %cmp177 = icmp eq i32 %83, 74
  %conv178 = zext i1 %cmp177 to i32
  %call179 = call %struct.rtx_def* @make_extraction(i32 %bf.clear166, %struct.rtx_def* %77, i64 0, %struct.rtx_def* %81, i64 %conv176, i32 1, i32 0, i32 %conv178)
  store %struct.rtx_def* %call179, %struct.rtx_def** %new, align 8
  br label %if.end.460

if.else.180:                                      ; preds = %land.lhs.true.136, %land.lhs.true.125, %land.lhs.true.120, %if.else
  %84 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld181 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1
  %arrayidx182 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld181, i32 0, i64 0
  %rtx183 = bitcast %union.rtunion_def* %arrayidx182 to %struct.rtx_def**
  %85 = load %struct.rtx_def*, %struct.rtx_def** %rtx183, align 8
  %86 = bitcast %struct.rtx_def* %85 to i32*
  %bf.load184 = load i32, i32* %86, align 8
  %bf.clear185 = and i32 %bf.load184, 65535
  %cmp186 = icmp eq i32 %bf.clear185, 85
  br i1 %cmp186, label %land.lhs.true.196, label %lor.lhs.false.188

lor.lhs.false.188:                                ; preds = %if.else.180
  %87 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld189 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1
  %arrayidx190 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld189, i32 0, i64 0
  %rtx191 = bitcast %union.rtunion_def* %arrayidx190 to %struct.rtx_def**
  %88 = load %struct.rtx_def*, %struct.rtx_def** %rtx191, align 8
  %89 = bitcast %struct.rtx_def* %88 to i32*
  %bf.load192 = load i32, i32* %89, align 8
  %bf.clear193 = and i32 %bf.load192, 65535
  %cmp194 = icmp eq i32 %bf.clear193, 84
  br i1 %cmp194, label %land.lhs.true.196, label %if.else.257

land.lhs.true.196:                                ; preds = %lor.lhs.false.188, %if.else.180
  %90 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld197 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1
  %arrayidx198 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld197, i32 0, i64 0
  %rtx199 = bitcast %union.rtunion_def* %arrayidx198 to %struct.rtx_def**
  %91 = load %struct.rtx_def*, %struct.rtx_def** %rtx199, align 8
  %fld200 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1
  %arrayidx201 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld200, i32 0, i64 0
  %rtx202 = bitcast %union.rtunion_def* %arrayidx201 to %struct.rtx_def**
  %92 = load %struct.rtx_def*, %struct.rtx_def** %rtx202, align 8
  %93 = bitcast %struct.rtx_def* %92 to i32*
  %bf.load203 = load i32, i32* %93, align 8
  %bf.clear204 = and i32 %bf.load203, 65535
  %cmp205 = icmp eq i32 %bf.clear204, 90
  br i1 %cmp205, label %land.lhs.true.207, label %if.else.257

land.lhs.true.207:                                ; preds = %land.lhs.true.196
  %94 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld208 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1
  %arrayidx209 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld208, i32 0, i64 0
  %rtx210 = bitcast %union.rtunion_def* %arrayidx209 to %struct.rtx_def**
  %95 = load %struct.rtx_def*, %struct.rtx_def** %rtx210, align 8
  %fld211 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1
  %arrayidx212 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld211, i32 0, i64 1
  %rtx213 = bitcast %union.rtunion_def* %arrayidx212 to %struct.rtx_def**
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rtx213, align 8
  %97 = bitcast %struct.rtx_def* %96 to i32*
  %bf.load214 = load i32, i32* %97, align 8
  %bf.clear215 = and i32 %bf.load214, 65535
  %cmp216 = icmp eq i32 %bf.clear215, 90
  br i1 %cmp216, label %land.lhs.true.218, label %if.else.257

land.lhs.true.218:                                ; preds = %land.lhs.true.207
  %98 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld219 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %98, i32 0, i32 1
  %arrayidx220 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld219, i32 0, i64 1
  %rtx221 = bitcast %union.rtunion_def* %arrayidx220 to %struct.rtx_def**
  %99 = load %struct.rtx_def*, %struct.rtx_def** %rtx221, align 8
  %fld222 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %99, i32 0, i32 1
  %arrayidx223 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld222, i32 0, i64 0
  %rtwint224 = bitcast %union.rtunion_def* %arrayidx223 to i64*
  %100 = load i64, i64* %rtwint224, align 8
  %add225 = add nsw i64 %100, 1
  %call226 = call i32 @exact_log2_wide(i64 %add225)
  store i32 %call226, i32* %i, align 4
  %cmp227 = icmp sge i32 %call226, 0
  br i1 %cmp227, label %if.then.229, label %if.else.257

if.then.229:                                      ; preds = %land.lhs.true.218
  %101 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld230 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i32 0, i32 1
  %arrayidx231 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld230, i32 0, i64 0
  %rtx232 = bitcast %union.rtunion_def* %arrayidx231 to %struct.rtx_def**
  %102 = load %struct.rtx_def*, %struct.rtx_def** %rtx232, align 8
  %103 = bitcast %struct.rtx_def* %102 to i32*
  %bf.load233 = load i32, i32* %103, align 8
  %bf.clear234 = and i32 %bf.load233, 65535
  %104 = load i32, i32* %mode, align 4
  %105 = load i32, i32* %mode, align 4
  %106 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld235 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %106, i32 0, i32 1
  %arrayidx236 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld235, i32 0, i64 0
  %rtx237 = bitcast %union.rtunion_def* %arrayidx236 to %struct.rtx_def**
  %107 = load %struct.rtx_def*, %struct.rtx_def** %rtx237, align 8
  %fld238 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1
  %arrayidx239 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld238, i32 0, i64 0
  %rtx240 = bitcast %union.rtunion_def* %arrayidx239 to %struct.rtx_def**
  %108 = load %struct.rtx_def*, %struct.rtx_def** %rtx240, align 8
  %109 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld241 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1
  %arrayidx242 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld241, i32 0, i64 1
  %rtx243 = bitcast %union.rtunion_def* %arrayidx242 to %struct.rtx_def**
  %110 = load %struct.rtx_def*, %struct.rtx_def** %rtx243, align 8
  %call244 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 %105, %struct.rtx_def* %108, %struct.rtx_def* %110)
  %111 = load i32, i32* %mode, align 4
  %112 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld245 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1
  %arrayidx246 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld245, i32 0, i64 0
  %rtx247 = bitcast %union.rtunion_def* %arrayidx246 to %struct.rtx_def**
  %113 = load %struct.rtx_def*, %struct.rtx_def** %rtx247, align 8
  %fld248 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %113, i32 0, i32 1
  %arrayidx249 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld248, i32 0, i64 1
  %rtx250 = bitcast %union.rtunion_def* %arrayidx249 to %struct.rtx_def**
  %114 = load %struct.rtx_def*, %struct.rtx_def** %rtx250, align 8
  %115 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld251 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1
  %arrayidx252 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld251, i32 0, i64 1
  %rtx253 = bitcast %union.rtunion_def* %arrayidx252 to %struct.rtx_def**
  %116 = load %struct.rtx_def*, %struct.rtx_def** %rtx253, align 8
  %call254 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 %111, %struct.rtx_def* %114, %struct.rtx_def* %116)
  %call255 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %bf.clear234, i32 %104, %struct.rtx_def* %call244, %struct.rtx_def* %call254)
  store %struct.rtx_def* %call255, %struct.rtx_def** %new, align 8
  %117 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %118 = load i32, i32* %in_code.addr, align 4
  %call256 = call %struct.rtx_def* @make_compound_operation(%struct.rtx_def* %117, i32 %118)
  store %struct.rtx_def* %call256, %struct.rtx_def** %new, align 8
  br label %if.end.459

if.else.257:                                      ; preds = %land.lhs.true.218, %land.lhs.true.207, %land.lhs.true.196, %lor.lhs.false.188
  %119 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld258 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %119, i32 0, i32 1
  %arrayidx259 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld258, i32 0, i64 0
  %rtx260 = bitcast %union.rtunion_def* %arrayidx259 to %struct.rtx_def**
  %120 = load %struct.rtx_def*, %struct.rtx_def** %rtx260, align 8
  %121 = bitcast %struct.rtx_def* %120 to i32*
  %bf.load261 = load i32, i32* %121, align 8
  %bf.clear262 = and i32 %bf.load261, 65535
  %cmp263 = icmp eq i32 %bf.clear262, 88
  br i1 %cmp263, label %land.lhs.true.265, label %if.else.324

land.lhs.true.265:                                ; preds = %if.else.257
  %122 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld266 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i32 0, i32 1
  %arrayidx267 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld266, i32 0, i64 0
  %rtx268 = bitcast %union.rtunion_def* %arrayidx267 to %struct.rtx_def**
  %123 = load %struct.rtx_def*, %struct.rtx_def** %rtx268, align 8
  %fld269 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %123, i32 0, i32 1
  %arrayidx270 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld269, i32 0, i64 1
  %rtx271 = bitcast %union.rtunion_def* %arrayidx270 to %struct.rtx_def**
  %124 = load %struct.rtx_def*, %struct.rtx_def** %rtx271, align 8
  %125 = bitcast %struct.rtx_def* %124 to i32*
  %bf.load272 = load i32, i32* %125, align 8
  %bf.clear273 = and i32 %bf.load272, 65535
  %cmp274 = icmp eq i32 %bf.clear273, 54
  br i1 %cmp274, label %land.lhs.true.276, label %if.else.324

land.lhs.true.276:                                ; preds = %land.lhs.true.265
  %126 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld277 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1
  %arrayidx278 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld277, i32 0, i64 1
  %rtx279 = bitcast %union.rtunion_def* %arrayidx278 to %struct.rtx_def**
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rtx279, align 8
  %fld280 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %127, i32 0, i32 1
  %arrayidx281 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld280, i32 0, i64 0
  %rtwint282 = bitcast %union.rtunion_def* %arrayidx281 to i64*
  %128 = load i64, i64* %rtwint282, align 8
  %add283 = add nsw i64 %128, 1
  %call284 = call i32 @exact_log2_wide(i64 %add283)
  store i32 %call284, i32* %i, align 4
  %cmp285 = icmp sge i32 %call284, 0
  br i1 %cmp285, label %land.lhs.true.287, label %if.else.324

land.lhs.true.287:                                ; preds = %land.lhs.true.276
  %129 = load i32, i32* %i, align 4
  %conv288 = sext i32 %129 to i64
  %130 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld289 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1
  %arrayidx290 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld289, i32 0, i64 0
  %rtx291 = bitcast %union.rtunion_def* %arrayidx290 to %struct.rtx_def**
  %131 = load %struct.rtx_def*, %struct.rtx_def** %rtx291, align 8
  %fld292 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i32 0, i32 1
  %arrayidx293 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld292, i32 0, i64 1
  %rtx294 = bitcast %union.rtunion_def* %arrayidx293 to %struct.rtx_def**
  %132 = load %struct.rtx_def*, %struct.rtx_def** %rtx294, align 8
  %fld295 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1
  %arrayidx296 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld295, i32 0, i64 0
  %rtwint297 = bitcast %union.rtunion_def* %arrayidx296 to i64*
  %133 = load i64, i64* %rtwint297, align 8
  %cmp298 = icmp sle i64 %conv288, %133
  br i1 %cmp298, label %if.then.300, label %if.else.324

if.then.300:                                      ; preds = %land.lhs.true.287
  %134 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld301 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %134, i32 0, i32 1
  %arrayidx302 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld301, i32 0, i64 0
  %rtx303 = bitcast %union.rtunion_def* %arrayidx302 to %struct.rtx_def**
  %135 = load %struct.rtx_def*, %struct.rtx_def** %rtx303, align 8
  %fld304 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %135, i32 0, i32 1
  %arrayidx305 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld304, i32 0, i64 0
  %rtx306 = bitcast %union.rtunion_def* %arrayidx305 to %struct.rtx_def**
  %136 = load %struct.rtx_def*, %struct.rtx_def** %rtx306, align 8
  %137 = load i32, i32* %next_code, align 4
  %call307 = call %struct.rtx_def* @make_compound_operation(%struct.rtx_def* %136, i32 %137)
  store %struct.rtx_def* %call307, %struct.rtx_def** %new, align 8
  %138 = load i32, i32* %mode, align 4
  %139 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %140 = load i32, i32* %mode, align 4
  %idxprom308 = sext i32 %140 to i64
  %arrayidx309 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom308
  %141 = load i16, i16* %arrayidx309, align 2
  %conv310 = zext i16 %141 to i64
  %142 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld311 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i32 0, i32 1
  %arrayidx312 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld311, i32 0, i64 0
  %rtx313 = bitcast %union.rtunion_def* %arrayidx312 to %struct.rtx_def**
  %143 = load %struct.rtx_def*, %struct.rtx_def** %rtx313, align 8
  %fld314 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1
  %arrayidx315 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld314, i32 0, i64 1
  %rtx316 = bitcast %union.rtunion_def* %arrayidx315 to %struct.rtx_def**
  %144 = load %struct.rtx_def*, %struct.rtx_def** %rtx316, align 8
  %fld317 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1
  %arrayidx318 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld317, i32 0, i64 0
  %rtwint319 = bitcast %union.rtunion_def* %arrayidx318 to i64*
  %145 = load i64, i64* %rtwint319, align 8
  %sub = sub nsw i64 %conv310, %145
  %146 = load i32, i32* %i, align 4
  %conv320 = sext i32 %146 to i64
  %147 = load i32, i32* %in_code.addr, align 4
  %cmp321 = icmp eq i32 %147, 74
  %conv322 = zext i1 %cmp321 to i32
  %call323 = call %struct.rtx_def* @make_extraction(i32 %138, %struct.rtx_def* %139, i64 %sub, %struct.rtx_def* null, i64 %conv320, i32 1, i32 0, i32 %conv322)
  store %struct.rtx_def* %call323, %struct.rtx_def** %new, align 8
  br label %if.end.458

if.else.324:                                      ; preds = %land.lhs.true.287, %land.lhs.true.276, %land.lhs.true.265, %if.else.257
  %148 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld325 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %148, i32 0, i32 1
  %arrayidx326 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld325, i32 0, i64 0
  %rtx327 = bitcast %union.rtunion_def* %arrayidx326 to %struct.rtx_def**
  %149 = load %struct.rtx_def*, %struct.rtx_def** %rtx327, align 8
  %150 = bitcast %struct.rtx_def* %149 to i32*
  %bf.load328 = load i32, i32* %150, align 8
  %bf.clear329 = and i32 %bf.load328, 65535
  %cmp330 = icmp eq i32 %bf.clear329, 90
  br i1 %cmp330, label %land.lhs.true.332, label %if.else.415

land.lhs.true.332:                                ; preds = %if.else.324
  %151 = load i32, i32* %mode, align 4
  %call333 = call i32 @have_insn_for(i32 90, i32 %151)
  %tobool334 = icmp ne i32 %call333, 0
  br i1 %tobool334, label %if.else.415, label %land.lhs.true.335

land.lhs.true.335:                                ; preds = %land.lhs.true.332
  %152 = load i32, i32* %mode, align 4
  %call336 = call i32 @have_insn_for(i32 89, i32 %152)
  %tobool337 = icmp ne i32 %call336, 0
  br i1 %tobool337, label %land.lhs.true.338, label %if.else.415

land.lhs.true.338:                                ; preds = %land.lhs.true.335
  %153 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld339 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1
  %arrayidx340 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld339, i32 0, i64 0
  %rtx341 = bitcast %union.rtunion_def* %arrayidx340 to %struct.rtx_def**
  %154 = load %struct.rtx_def*, %struct.rtx_def** %rtx341, align 8
  %fld342 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %154, i32 0, i32 1
  %arrayidx343 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld342, i32 0, i64 1
  %rtx344 = bitcast %union.rtunion_def* %arrayidx343 to %struct.rtx_def**
  %155 = load %struct.rtx_def*, %struct.rtx_def** %rtx344, align 8
  %156 = bitcast %struct.rtx_def* %155 to i32*
  %bf.load345 = load i32, i32* %156, align 8
  %bf.clear346 = and i32 %bf.load345, 65535
  %cmp347 = icmp eq i32 %bf.clear346, 54
  br i1 %cmp347, label %land.lhs.true.349, label %if.else.415

land.lhs.true.349:                                ; preds = %land.lhs.true.338
  %157 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld350 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %157, i32 0, i32 1
  %arrayidx351 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld350, i32 0, i64 0
  %rtx352 = bitcast %union.rtunion_def* %arrayidx351 to %struct.rtx_def**
  %158 = load %struct.rtx_def*, %struct.rtx_def** %rtx352, align 8
  %fld353 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %158, i32 0, i32 1
  %arrayidx354 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld353, i32 0, i64 1
  %rtx355 = bitcast %union.rtunion_def* %arrayidx354 to %struct.rtx_def**
  %159 = load %struct.rtx_def*, %struct.rtx_def** %rtx355, align 8
  %fld356 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1
  %arrayidx357 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld356, i32 0, i64 0
  %rtwint358 = bitcast %union.rtunion_def* %arrayidx357 to i64*
  %160 = load i64, i64* %rtwint358, align 8
  %cmp359 = icmp sge i64 %160, 0
  br i1 %cmp359, label %land.lhs.true.361, label %if.else.415

land.lhs.true.361:                                ; preds = %land.lhs.true.349
  %161 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld362 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %161, i32 0, i32 1
  %arrayidx363 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld362, i32 0, i64 0
  %rtx364 = bitcast %union.rtunion_def* %arrayidx363 to %struct.rtx_def**
  %162 = load %struct.rtx_def*, %struct.rtx_def** %rtx364, align 8
  %fld365 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %162, i32 0, i32 1
  %arrayidx366 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld365, i32 0, i64 1
  %rtx367 = bitcast %union.rtunion_def* %arrayidx366 to %struct.rtx_def**
  %163 = load %struct.rtx_def*, %struct.rtx_def** %rtx367, align 8
  %fld368 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %163, i32 0, i32 1
  %arrayidx369 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld368, i32 0, i64 0
  %rtwint370 = bitcast %union.rtunion_def* %arrayidx369 to i64*
  %164 = load i64, i64* %rtwint370, align 8
  %cmp371 = icmp slt i64 %164, 64
  br i1 %cmp371, label %land.lhs.true.373, label %if.else.415

land.lhs.true.373:                                ; preds = %land.lhs.true.361
  %165 = load i32, i32* %mode_width, align 4
  %cmp374 = icmp sle i32 %165, 64
  br i1 %cmp374, label %if.then.376, label %if.else.415

if.then.376:                                      ; preds = %land.lhs.true.373
  %166 = load i32, i32* %mode, align 4
  %idxprom377 = sext i32 %166 to i64
  %arrayidx378 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom377
  %167 = load i64, i64* %arrayidx378, align 8
  store i64 %167, i64* %mask, align 8
  %168 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld379 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %168, i32 0, i32 1
  %arrayidx380 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld379, i32 0, i64 0
  %rtx381 = bitcast %union.rtunion_def* %arrayidx380 to %struct.rtx_def**
  %169 = load %struct.rtx_def*, %struct.rtx_def** %rtx381, align 8
  %fld382 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %169, i32 0, i32 1
  %arrayidx383 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld382, i32 0, i64 1
  %rtx384 = bitcast %union.rtunion_def* %arrayidx383 to %struct.rtx_def**
  %170 = load %struct.rtx_def*, %struct.rtx_def** %rtx384, align 8
  %fld385 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %170, i32 0, i32 1
  %arrayidx386 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld385, i32 0, i64 0
  %rtwint387 = bitcast %union.rtunion_def* %arrayidx386 to i64*
  %171 = load i64, i64* %rtwint387, align 8
  %172 = load i64, i64* %mask, align 8
  %shr = lshr i64 %172, %171
  store i64 %shr, i64* %mask, align 8
  %173 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld388 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %173, i32 0, i32 1
  %arrayidx389 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld388, i32 0, i64 1
  %rtx390 = bitcast %union.rtunion_def* %arrayidx389 to %struct.rtx_def**
  %174 = load %struct.rtx_def*, %struct.rtx_def** %rtx390, align 8
  %fld391 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %174, i32 0, i32 1
  %arrayidx392 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld391, i32 0, i64 0
  %rtwint393 = bitcast %union.rtunion_def* %arrayidx392 to i64*
  %175 = load i64, i64* %rtwint393, align 8
  %176 = load i64, i64* %mask, align 8
  %neg = xor i64 %176, -1
  %and = and i64 %175, %neg
  %cmp394 = icmp eq i64 %and, 0
  br i1 %cmp394, label %if.then.396, label %if.end.414

if.then.396:                                      ; preds = %if.then.376
  %177 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld397 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %177, i32 0, i32 1
  %arrayidx398 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld397, i32 0, i64 0
  %rtx399 = bitcast %union.rtunion_def* %arrayidx398 to %struct.rtx_def**
  %178 = load i32, i32* %mode, align 4
  %179 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld400 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %179, i32 0, i32 1
  %arrayidx401 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld400, i32 0, i64 0
  %rtx402 = bitcast %union.rtunion_def* %arrayidx401 to %struct.rtx_def**
  %180 = load %struct.rtx_def*, %struct.rtx_def** %rtx402, align 8
  %fld403 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %180, i32 0, i32 1
  %arrayidx404 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld403, i32 0, i64 0
  %rtx405 = bitcast %union.rtunion_def* %arrayidx404 to %struct.rtx_def**
  %181 = load %struct.rtx_def*, %struct.rtx_def** %rtx405, align 8
  %182 = load i32, i32* %next_code, align 4
  %call406 = call %struct.rtx_def* @make_compound_operation(%struct.rtx_def* %181, i32 %182)
  %183 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld407 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %183, i32 0, i32 1
  %arrayidx408 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld407, i32 0, i64 0
  %rtx409 = bitcast %union.rtunion_def* %arrayidx408 to %struct.rtx_def**
  %184 = load %struct.rtx_def*, %struct.rtx_def** %rtx409, align 8
  %fld410 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %184, i32 0, i32 1
  %arrayidx411 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld410, i32 0, i64 1
  %rtx412 = bitcast %union.rtunion_def* %arrayidx411 to %struct.rtx_def**
  %185 = load %struct.rtx_def*, %struct.rtx_def** %rtx412, align 8
  %call413 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 89, i32 %178, %struct.rtx_def* %call406, %struct.rtx_def* %185)
  call void @do_SUBST(%struct.rtx_def** %rtx399, %struct.rtx_def* %call413)
  br label %if.end.414

if.end.414:                                       ; preds = %if.then.396, %if.then.376
  br label %if.end.457

if.else.415:                                      ; preds = %land.lhs.true.373, %land.lhs.true.361, %land.lhs.true.349, %land.lhs.true.338, %land.lhs.true.335, %land.lhs.true.332, %if.else.324
  %186 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld416 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %186, i32 0, i32 1
  %arrayidx417 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld416, i32 0, i64 1
  %rtx418 = bitcast %union.rtunion_def* %arrayidx417 to %struct.rtx_def**
  %187 = load %struct.rtx_def*, %struct.rtx_def** %rtx418, align 8
  %fld419 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %187, i32 0, i32 1
  %arrayidx420 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld419, i32 0, i64 0
  %rtwint421 = bitcast %union.rtunion_def* %arrayidx420 to i64*
  %188 = load i64, i64* %rtwint421, align 8
  %add422 = add nsw i64 %188, 1
  %call423 = call i32 @exact_log2_wide(i64 %add422)
  store i32 %call423, i32* %i, align 4
  %cmp424 = icmp sge i32 %call423, 0
  br i1 %cmp424, label %if.then.426, label %if.else.435

if.then.426:                                      ; preds = %if.else.415
  %189 = load i32, i32* %mode, align 4
  %190 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld427 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %190, i32 0, i32 1
  %arrayidx428 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld427, i32 0, i64 0
  %rtx429 = bitcast %union.rtunion_def* %arrayidx428 to %struct.rtx_def**
  %191 = load %struct.rtx_def*, %struct.rtx_def** %rtx429, align 8
  %192 = load i32, i32* %next_code, align 4
  %call430 = call %struct.rtx_def* @make_compound_operation(%struct.rtx_def* %191, i32 %192)
  %193 = load i32, i32* %i, align 4
  %conv431 = sext i32 %193 to i64
  %194 = load i32, i32* %in_code.addr, align 4
  %cmp432 = icmp eq i32 %194, 74
  %conv433 = zext i1 %cmp432 to i32
  %call434 = call %struct.rtx_def* @make_extraction(i32 %189, %struct.rtx_def* %call430, i64 0, %struct.rtx_def* null, i64 %conv431, i32 1, i32 0, i32 %conv433)
  store %struct.rtx_def* %call434, %struct.rtx_def** %new, align 8
  br label %if.end.456

if.else.435:                                      ; preds = %if.else.415
  %195 = load i32, i32* %in_code.addr, align 4
  %cmp436 = icmp eq i32 %195, 74
  br i1 %cmp436, label %land.lhs.true.438, label %if.end.455

land.lhs.true.438:                                ; preds = %if.else.435
  %196 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld439 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %196, i32 0, i32 1
  %arrayidx440 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld439, i32 0, i64 1
  %rtx441 = bitcast %union.rtunion_def* %arrayidx440 to %struct.rtx_def**
  %197 = load %struct.rtx_def*, %struct.rtx_def** %rtx441, align 8
  %fld442 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %197, i32 0, i32 1
  %arrayidx443 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld442, i32 0, i64 0
  %rtwint444 = bitcast %union.rtunion_def* %arrayidx443 to i64*
  %198 = load i64, i64* %rtwint444, align 8
  %call445 = call i32 @exact_log2_wide(i64 %198)
  store i32 %call445, i32* %i, align 4
  %cmp446 = icmp sge i32 %call445, 0
  br i1 %cmp446, label %if.then.448, label %if.end.455

if.then.448:                                      ; preds = %land.lhs.true.438
  %199 = load i32, i32* %mode, align 4
  %200 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld449 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %200, i32 0, i32 1
  %arrayidx450 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld449, i32 0, i64 0
  %rtx451 = bitcast %union.rtunion_def* %arrayidx450 to %struct.rtx_def**
  %201 = load %struct.rtx_def*, %struct.rtx_def** %rtx451, align 8
  %202 = load i32, i32* %next_code, align 4
  %call452 = call %struct.rtx_def* @make_compound_operation(%struct.rtx_def* %201, i32 %202)
  %203 = load i32, i32* %i, align 4
  %conv453 = sext i32 %203 to i64
  %call454 = call %struct.rtx_def* @make_extraction(i32 %199, %struct.rtx_def* %call452, i64 %conv453, %struct.rtx_def* null, i64 1, i32 1, i32 0, i32 1)
  store %struct.rtx_def* %call454, %struct.rtx_def** %new, align 8
  br label %if.end.455

if.end.455:                                       ; preds = %if.then.448, %land.lhs.true.438, %if.else.435
  br label %if.end.456

if.end.456:                                       ; preds = %if.end.455, %if.then.426
  br label %if.end.457

if.end.457:                                       ; preds = %if.end.456, %if.end.414
  br label %if.end.458

if.end.458:                                       ; preds = %if.end.457, %if.then.300
  br label %if.end.459

if.end.459:                                       ; preds = %if.end.458, %if.then.229
  br label %if.end.460

if.end.460:                                       ; preds = %if.end.459, %if.then.147
  br label %if.end.461

if.end.461:                                       ; preds = %if.end.460, %if.then.95
  br label %sw.epilog

sw.bb.462:                                        ; preds = %cond.end.28
  %204 = load i32, i32* %mode, align 4
  %call463 = call i32 @have_insn_for(i32 89, i32 %204)
  %tobool464 = icmp ne i32 %call463, 0
  br i1 %tobool464, label %land.lhs.true.465, label %if.end.491

land.lhs.true.465:                                ; preds = %sw.bb.462
  %205 = load i32, i32* %mode, align 4
  %call466 = call i32 @have_insn_for(i32 90, i32 %205)
  %tobool467 = icmp ne i32 %call466, 0
  br i1 %tobool467, label %if.end.491, label %land.lhs.true.468

land.lhs.true.468:                                ; preds = %land.lhs.true.465
  %206 = load i32, i32* %mode_width, align 4
  %cmp469 = icmp sle i32 %206, 64
  br i1 %cmp469, label %land.lhs.true.471, label %if.end.491

land.lhs.true.471:                                ; preds = %land.lhs.true.468
  %207 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld472 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %207, i32 0, i32 1
  %arrayidx473 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld472, i32 0, i64 0
  %rtx474 = bitcast %union.rtunion_def* %arrayidx473 to %struct.rtx_def**
  %208 = load %struct.rtx_def*, %struct.rtx_def** %rtx474, align 8
  %209 = load i32, i32* %mode, align 4
  %call475 = call i64 @nonzero_bits(%struct.rtx_def* %208, i32 %209)
  %210 = load i32, i32* %mode_width, align 4
  %sub476 = sub nsw i32 %210, 1
  %shl477 = shl i32 1, %sub476
  %conv478 = sext i32 %shl477 to i64
  %and479 = and i64 %call475, %conv478
  %cmp480 = icmp eq i64 %and479, 0
  br i1 %cmp480, label %if.then.482, label %if.end.491

if.then.482:                                      ; preds = %land.lhs.true.471
  %211 = load i32, i32* %mode, align 4
  %212 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld483 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %212, i32 0, i32 1
  %arrayidx484 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld483, i32 0, i64 0
  %rtx485 = bitcast %union.rtunion_def* %arrayidx484 to %struct.rtx_def**
  %213 = load %struct.rtx_def*, %struct.rtx_def** %rtx485, align 8
  %214 = load i32, i32* %next_code, align 4
  %call486 = call %struct.rtx_def* @make_compound_operation(%struct.rtx_def* %213, i32 %214)
  %215 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld487 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %215, i32 0, i32 1
  %arrayidx488 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld487, i32 0, i64 1
  %rtx489 = bitcast %union.rtunion_def* %arrayidx488 to %struct.rtx_def**
  %216 = load %struct.rtx_def*, %struct.rtx_def** %rtx489, align 8
  %call490 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 89, i32 %211, %struct.rtx_def* %call486, %struct.rtx_def* %216)
  store %struct.rtx_def* %call490, %struct.rtx_def** %new, align 8
  br label %sw.epilog

if.end.491:                                       ; preds = %land.lhs.true.471, %land.lhs.true.468, %land.lhs.true.465, %sw.bb.462
  br label %sw.bb.492

sw.bb.492:                                        ; preds = %cond.end.28, %if.end.491
  %217 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld493 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %217, i32 0, i32 1
  %arrayidx494 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld493, i32 0, i64 0
  %rtx495 = bitcast %union.rtunion_def* %arrayidx494 to %struct.rtx_def**
  %218 = load %struct.rtx_def*, %struct.rtx_def** %rtx495, align 8
  store %struct.rtx_def* %218, %struct.rtx_def** %lhs, align 8
  %219 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld496 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %219, i32 0, i32 1
  %arrayidx497 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld496, i32 0, i64 1
  %rtx498 = bitcast %union.rtunion_def* %arrayidx497 to %struct.rtx_def**
  %220 = load %struct.rtx_def*, %struct.rtx_def** %rtx498, align 8
  store %struct.rtx_def* %220, %struct.rtx_def** %rhs, align 8
  %221 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %222 = bitcast %struct.rtx_def* %221 to i32*
  %bf.load499 = load i32, i32* %222, align 8
  %bf.clear500 = and i32 %bf.load499, 65535
  %cmp501 = icmp eq i32 %bf.clear500, 54
  br i1 %cmp501, label %land.lhs.true.503, label %if.end.553

land.lhs.true.503:                                ; preds = %sw.bb.492
  %223 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %224 = bitcast %struct.rtx_def* %223 to i32*
  %bf.load504 = load i32, i32* %224, align 8
  %bf.clear505 = and i32 %bf.load504, 65535
  %cmp506 = icmp eq i32 %bf.clear505, 87
  br i1 %cmp506, label %land.lhs.true.508, label %if.end.553

land.lhs.true.508:                                ; preds = %land.lhs.true.503
  %225 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld509 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %225, i32 0, i32 1
  %arrayidx510 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld509, i32 0, i64 1
  %rtx511 = bitcast %union.rtunion_def* %arrayidx510 to %struct.rtx_def**
  %226 = load %struct.rtx_def*, %struct.rtx_def** %rtx511, align 8
  %227 = bitcast %struct.rtx_def* %226 to i32*
  %bf.load512 = load i32, i32* %227, align 8
  %bf.clear513 = and i32 %bf.load512, 65535
  %cmp514 = icmp eq i32 %bf.clear513, 54
  br i1 %cmp514, label %land.lhs.true.516, label %if.end.553

land.lhs.true.516:                                ; preds = %land.lhs.true.508
  %228 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %fld517 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %228, i32 0, i32 1
  %arrayidx518 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld517, i32 0, i64 0
  %rtwint519 = bitcast %union.rtunion_def* %arrayidx518 to i64*
  %229 = load i64, i64* %rtwint519, align 8
  %230 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld520 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %230, i32 0, i32 1
  %arrayidx521 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld520, i32 0, i64 1
  %rtx522 = bitcast %union.rtunion_def* %arrayidx521 to %struct.rtx_def**
  %231 = load %struct.rtx_def*, %struct.rtx_def** %rtx522, align 8
  %fld523 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %231, i32 0, i32 1
  %arrayidx524 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld523, i32 0, i64 0
  %rtwint525 = bitcast %union.rtunion_def* %arrayidx524 to i64*
  %232 = load i64, i64* %rtwint525, align 8
  %cmp526 = icmp sge i64 %229, %232
  br i1 %cmp526, label %if.then.528, label %if.end.553

if.then.528:                                      ; preds = %land.lhs.true.516
  %233 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld529 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %233, i32 0, i32 1
  %arrayidx530 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld529, i32 0, i64 0
  %rtx531 = bitcast %union.rtunion_def* %arrayidx530 to %struct.rtx_def**
  %234 = load %struct.rtx_def*, %struct.rtx_def** %rtx531, align 8
  %235 = load i32, i32* %next_code, align 4
  %call532 = call %struct.rtx_def* @make_compound_operation(%struct.rtx_def* %234, i32 %235)
  store %struct.rtx_def* %call532, %struct.rtx_def** %new, align 8
  %236 = load i32, i32* %mode, align 4
  %237 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %238 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %fld533 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %238, i32 0, i32 1
  %arrayidx534 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld533, i32 0, i64 0
  %rtwint535 = bitcast %union.rtunion_def* %arrayidx534 to i64*
  %239 = load i64, i64* %rtwint535, align 8
  %240 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld536 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %240, i32 0, i32 1
  %arrayidx537 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld536, i32 0, i64 1
  %rtx538 = bitcast %union.rtunion_def* %arrayidx537 to %struct.rtx_def**
  %241 = load %struct.rtx_def*, %struct.rtx_def** %rtx538, align 8
  %fld539 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %241, i32 0, i32 1
  %arrayidx540 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld539, i32 0, i64 0
  %rtwint541 = bitcast %union.rtunion_def* %arrayidx540 to i64*
  %242 = load i64, i64* %rtwint541, align 8
  %sub542 = sub nsw i64 %239, %242
  %243 = load i32, i32* %mode_width, align 4
  %conv543 = sext i32 %243 to i64
  %244 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %fld544 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %244, i32 0, i32 1
  %arrayidx545 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld544, i32 0, i64 0
  %rtwint546 = bitcast %union.rtunion_def* %arrayidx545 to i64*
  %245 = load i64, i64* %rtwint546, align 8
  %sub547 = sub nsw i64 %conv543, %245
  %246 = load i32, i32* %code, align 4
  %cmp548 = icmp eq i32 %246, 90
  %conv549 = zext i1 %cmp548 to i32
  %247 = load i32, i32* %in_code.addr, align 4
  %cmp550 = icmp eq i32 %247, 74
  %conv551 = zext i1 %cmp550 to i32
  %call552 = call %struct.rtx_def* @make_extraction(i32 %236, %struct.rtx_def* %237, i64 %sub542, %struct.rtx_def* null, i64 %sub547, i32 %conv549, i32 0, i32 %conv551)
  store %struct.rtx_def* %call552, %struct.rtx_def** %new, align 8
  br label %sw.epilog

if.end.553:                                       ; preds = %land.lhs.true.516, %land.lhs.true.508, %land.lhs.true.503, %sw.bb.492
  %248 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %249 = bitcast %struct.rtx_def* %248 to i32*
  %bf.load554 = load i32, i32* %249, align 8
  %bf.clear555 = and i32 %bf.load554, 65535
  %idxprom556 = sext i32 %bf.clear555 to i64
  %arrayidx557 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom556
  %250 = load i8, i8* %arrayidx557, align 1
  %conv558 = sext i8 %250 to i32
  %cmp559 = icmp ne i32 %conv558, 111
  br i1 %cmp559, label %land.lhs.true.561, label %if.end.608

land.lhs.true.561:                                ; preds = %if.end.553
  %251 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %252 = bitcast %struct.rtx_def* %251 to i32*
  %bf.load562 = load i32, i32* %252, align 8
  %bf.clear563 = and i32 %bf.load562, 65535
  %cmp564 = icmp eq i32 %bf.clear563, 63
  br i1 %cmp564, label %land.lhs.true.566, label %land.lhs.true.577

land.lhs.true.566:                                ; preds = %land.lhs.true.561
  %253 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld567 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %253, i32 0, i32 1
  %arrayidx568 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld567, i32 0, i64 0
  %rtx569 = bitcast %union.rtunion_def* %arrayidx568 to %struct.rtx_def**
  %254 = load %struct.rtx_def*, %struct.rtx_def** %rtx569, align 8
  %255 = bitcast %struct.rtx_def* %254 to i32*
  %bf.load570 = load i32, i32* %255, align 8
  %bf.clear571 = and i32 %bf.load570, 65535
  %idxprom572 = sext i32 %bf.clear571 to i64
  %arrayidx573 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom572
  %256 = load i8, i8* %arrayidx573, align 1
  %conv574 = sext i8 %256 to i32
  %cmp575 = icmp eq i32 %conv574, 111
  br i1 %cmp575, label %if.end.608, label %land.lhs.true.577

land.lhs.true.577:                                ; preds = %land.lhs.true.566, %land.lhs.true.561
  %257 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %258 = bitcast %struct.rtx_def* %257 to i32*
  %bf.load578 = load i32, i32* %258, align 8
  %bf.clear579 = and i32 %bf.load578, 65535
  %cmp580 = icmp eq i32 %bf.clear579, 54
  br i1 %cmp580, label %land.lhs.true.582, label %if.end.608

land.lhs.true.582:                                ; preds = %land.lhs.true.577
  %259 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %fld583 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %259, i32 0, i32 1
  %arrayidx584 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld583, i32 0, i64 0
  %rtwint585 = bitcast %union.rtunion_def* %arrayidx584 to i64*
  %260 = load i64, i64* %rtwint585, align 8
  %cmp586 = icmp slt i64 %260, 64
  br i1 %cmp586, label %land.lhs.true.588, label %if.end.608

land.lhs.true.588:                                ; preds = %land.lhs.true.582
  %261 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %262 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %fld589 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %262, i32 0, i32 1
  %arrayidx590 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld589, i32 0, i64 0
  %rtwint591 = bitcast %union.rtunion_def* %arrayidx590 to i64*
  %263 = load i64, i64* %rtwint591, align 8
  %conv592 = trunc i64 %263 to i32
  %call593 = call %struct.rtx_def* @extract_left_shift(%struct.rtx_def* %261, i32 %conv592)
  store %struct.rtx_def* %call593, %struct.rtx_def** %new, align 8
  %cmp594 = icmp ne %struct.rtx_def* %call593, null
  br i1 %cmp594, label %if.then.596, label %if.end.608

if.then.596:                                      ; preds = %land.lhs.true.588
  %264 = load i32, i32* %mode, align 4
  %265 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %266 = load i32, i32* %next_code, align 4
  %call597 = call %struct.rtx_def* @make_compound_operation(%struct.rtx_def* %265, i32 %266)
  %267 = load i32, i32* %mode_width, align 4
  %conv598 = sext i32 %267 to i64
  %268 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %fld599 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %268, i32 0, i32 1
  %arrayidx600 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld599, i32 0, i64 0
  %rtwint601 = bitcast %union.rtunion_def* %arrayidx600 to i64*
  %269 = load i64, i64* %rtwint601, align 8
  %sub602 = sub nsw i64 %conv598, %269
  %270 = load i32, i32* %code, align 4
  %cmp603 = icmp eq i32 %270, 90
  %conv604 = zext i1 %cmp603 to i32
  %271 = load i32, i32* %in_code.addr, align 4
  %cmp605 = icmp eq i32 %271, 74
  %conv606 = zext i1 %cmp605 to i32
  %call607 = call %struct.rtx_def* @make_extraction(i32 %264, %struct.rtx_def* %call597, i64 0, %struct.rtx_def* null, i64 %sub602, i32 %conv604, i32 0, i32 %conv606)
  store %struct.rtx_def* %call607, %struct.rtx_def** %new, align 8
  br label %if.end.608

if.end.608:                                       ; preds = %if.then.596, %land.lhs.true.588, %land.lhs.true.582, %land.lhs.true.577, %land.lhs.true.566, %if.end.553
  br label %sw.epilog

sw.bb.609:                                        ; preds = %cond.end.28
  %272 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld610 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %272, i32 0, i32 1
  %arrayidx611 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld610, i32 0, i64 0
  %rtx612 = bitcast %union.rtunion_def* %arrayidx611 to %struct.rtx_def**
  %273 = load %struct.rtx_def*, %struct.rtx_def** %rtx612, align 8
  %274 = load i32, i32* %in_code.addr, align 4
  %call613 = call %struct.rtx_def* @make_compound_operation(%struct.rtx_def* %273, i32 %274)
  store %struct.rtx_def* %call613, %struct.rtx_def** %tem, align 8
  %275 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %276 = bitcast %struct.rtx_def* %275 to i32*
  %bf.load614 = load i32, i32* %276, align 8
  %bf.clear615 = and i32 %bf.load614, 65535
  %277 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld616 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %277, i32 0, i32 1
  %arrayidx617 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld616, i32 0, i64 0
  %rtx618 = bitcast %union.rtunion_def* %arrayidx617 to %struct.rtx_def**
  %278 = load %struct.rtx_def*, %struct.rtx_def** %rtx618, align 8
  %279 = bitcast %struct.rtx_def* %278 to i32*
  %bf.load619 = load i32, i32* %279, align 8
  %bf.clear620 = and i32 %bf.load619, 65535
  %cmp621 = icmp ne i32 %bf.clear615, %bf.clear620
  br i1 %cmp621, label %land.lhs.true.623, label %if.end.647

land.lhs.true.623:                                ; preds = %sw.bb.609
  %280 = load i32, i32* %mode, align 4
  %idxprom624 = sext i32 %280 to i64
  %arrayidx625 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom624
  %281 = load i8, i8* %arrayidx625, align 1
  %conv626 = zext i8 %281 to i32
  %282 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %283 = bitcast %struct.rtx_def* %282 to i32*
  %bf.load627 = load i32, i32* %283, align 8
  %bf.lshr628 = lshr i32 %bf.load627, 16
  %bf.clear629 = and i32 %bf.lshr628, 255
  %idxprom630 = sext i32 %bf.clear629 to i64
  %arrayidx631 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom630
  %284 = load i8, i8* %arrayidx631, align 1
  %conv632 = zext i8 %284 to i32
  %cmp633 = icmp slt i32 %conv626, %conv632
  br i1 %cmp633, label %land.lhs.true.635, label %if.end.647

land.lhs.true.635:                                ; preds = %land.lhs.true.623
  %285 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call636 = call i32 @subreg_lowpart_p(%struct.rtx_def* %285)
  %tobool637 = icmp ne i32 %call636, 0
  br i1 %tobool637, label %if.then.638, label %if.end.647

if.then.638:                                      ; preds = %land.lhs.true.635
  %286 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %287 = load i32, i32* %mode, align 4
  %call639 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %286, i32 %287, i64 -1, %struct.rtx_def* null, i32 0)
  store %struct.rtx_def* %call639, %struct.rtx_def** %newer, align 8
  %288 = load %struct.rtx_def*, %struct.rtx_def** %newer, align 8
  %289 = bitcast %struct.rtx_def* %288 to i32*
  %bf.load640 = load i32, i32* %289, align 8
  %bf.clear641 = and i32 %bf.load640, 65535
  %cmp642 = icmp ne i32 %bf.clear641, 63
  br i1 %cmp642, label %if.then.644, label %if.end.646

if.then.644:                                      ; preds = %if.then.638
  %290 = load %struct.rtx_def*, %struct.rtx_def** %newer, align 8
  %291 = load i32, i32* %in_code.addr, align 4
  %call645 = call %struct.rtx_def* @make_compound_operation(%struct.rtx_def* %290, i32 %291)
  store %struct.rtx_def* %call645, %struct.rtx_def** %newer, align 8
  br label %if.end.646

if.end.646:                                       ; preds = %if.then.644, %if.then.638
  %292 = load %struct.rtx_def*, %struct.rtx_def** %newer, align 8
  store %struct.rtx_def* %292, %struct.rtx_def** %retval
  br label %return

if.end.647:                                       ; preds = %land.lhs.true.635, %land.lhs.true.623, %sw.bb.609
  %293 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %294 = bitcast %struct.rtx_def* %293 to i32*
  %bf.load648 = load i32, i32* %294, align 8
  %bf.clear649 = and i32 %bf.load648, 65535
  %cmp650 = icmp eq i32 %bf.clear649, 120
  br i1 %cmp650, label %land.lhs.true.657, label %lor.lhs.false.652

lor.lhs.false.652:                                ; preds = %if.end.647
  %295 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %296 = bitcast %struct.rtx_def* %295 to i32*
  %bf.load653 = load i32, i32* %296, align 8
  %bf.clear654 = and i32 %bf.load653, 65535
  %cmp655 = icmp eq i32 %bf.clear654, 121
  br i1 %cmp655, label %land.lhs.true.657, label %if.end.700

land.lhs.true.657:                                ; preds = %lor.lhs.false.652, %if.end.647
  %297 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call658 = call i32 @subreg_lowpart_p(%struct.rtx_def* %297)
  %tobool659 = icmp ne i32 %call658, 0
  br i1 %tobool659, label %if.then.660, label %if.end.700

if.then.660:                                      ; preds = %land.lhs.true.657
  %298 = load i32, i32* %mode, align 4
  %idxprom661 = sext i32 %298 to i64
  %arrayidx662 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom661
  %299 = load i8, i8* %arrayidx662, align 1
  %conv663 = zext i8 %299 to i32
  %300 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %301 = bitcast %struct.rtx_def* %300 to i32*
  %bf.load664 = load i32, i32* %301, align 8
  %bf.lshr665 = lshr i32 %bf.load664, 16
  %bf.clear666 = and i32 %bf.lshr665, 255
  %idxprom667 = sext i32 %bf.clear666 to i64
  %arrayidx668 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom667
  %302 = load i8, i8* %arrayidx668, align 1
  %conv669 = zext i8 %302 to i32
  %cmp670 = icmp sgt i32 %conv663, %conv669
  br i1 %cmp670, label %if.then.687, label %lor.lhs.false.672

lor.lhs.false.672:                                ; preds = %if.then.660
  %303 = load i32, i32* %mode, align 4
  %idxprom673 = sext i32 %303 to i64
  %arrayidx674 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom673
  %304 = load i8, i8* %arrayidx674, align 1
  %conv675 = zext i8 %304 to i32
  %305 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld676 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %305, i32 0, i32 1
  %arrayidx677 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld676, i32 0, i64 0
  %rtx678 = bitcast %union.rtunion_def* %arrayidx677 to %struct.rtx_def**
  %306 = load %struct.rtx_def*, %struct.rtx_def** %rtx678, align 8
  %307 = bitcast %struct.rtx_def* %306 to i32*
  %bf.load679 = load i32, i32* %307, align 8
  %bf.lshr680 = lshr i32 %bf.load679, 16
  %bf.clear681 = and i32 %bf.lshr680, 255
  %idxprom682 = sext i32 %bf.clear681 to i64
  %arrayidx683 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom682
  %308 = load i8, i8* %arrayidx683, align 1
  %conv684 = zext i8 %308 to i32
  %cmp685 = icmp sgt i32 %conv675, %conv684
  br i1 %cmp685, label %if.then.687, label %if.else.694

if.then.687:                                      ; preds = %lor.lhs.false.672, %if.then.660
  %309 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %310 = bitcast %struct.rtx_def* %309 to i32*
  %bf.load688 = load i32, i32* %310, align 8
  %bf.clear689 = and i32 %bf.load688, 65535
  %311 = load i32, i32* %mode, align 4
  %312 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld690 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %312, i32 0, i32 1
  %arrayidx691 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld690, i32 0, i64 0
  %rtx692 = bitcast %union.rtunion_def* %arrayidx691 to %struct.rtx_def**
  %313 = load %struct.rtx_def*, %struct.rtx_def** %rtx692, align 8
  %call693 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 %bf.clear689, i32 %311, %struct.rtx_def* %313)
  store %struct.rtx_def* %call693, %struct.rtx_def** %tem, align 8
  br label %if.end.699

if.else.694:                                      ; preds = %lor.lhs.false.672
  %314 = load i32, i32* %mode, align 4
  %315 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld695 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %315, i32 0, i32 1
  %arrayidx696 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld695, i32 0, i64 0
  %rtx697 = bitcast %union.rtunion_def* %arrayidx696 to %struct.rtx_def**
  %316 = load %struct.rtx_def*, %struct.rtx_def** %rtx697, align 8
  %call698 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %314, %struct.rtx_def* %316)
  store %struct.rtx_def* %call698, %struct.rtx_def** %tem, align 8
  br label %if.end.699

if.end.699:                                       ; preds = %if.else.694, %if.then.687
  %317 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %317, %struct.rtx_def** %retval
  br label %return

if.end.700:                                       ; preds = %land.lhs.true.657, %lor.lhs.false.652
  br label %sw.epilog

sw.default:                                       ; preds = %cond.end.28
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.700, %if.end.608, %if.then.528, %if.then.482, %if.end.461, %if.then.76, %if.end
  %318 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %tobool701 = icmp ne %struct.rtx_def* %318, null
  br i1 %tobool701, label %if.then.702, label %if.end.706

if.then.702:                                      ; preds = %sw.epilog
  %319 = load i32, i32* %mode, align 4
  %320 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %call703 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %319, %struct.rtx_def* %320)
  store %struct.rtx_def* %call703, %struct.rtx_def** %x.addr, align 8
  %321 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %322 = bitcast %struct.rtx_def* %321 to i32*
  %bf.load704 = load i32, i32* %322, align 8
  %bf.clear705 = and i32 %bf.load704, 65535
  store i32 %bf.clear705, i32* %code, align 4
  br label %if.end.706

if.end.706:                                       ; preds = %if.then.702, %sw.epilog
  %323 = load i32, i32* %code, align 4
  %idxprom707 = sext i32 %323 to i64
  %arrayidx708 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom707
  %324 = load i8*, i8** %arrayidx708, align 8
  store i8* %324, i8** %fmt, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.706
  %325 = load i32, i32* %i, align 4
  %326 = load i32, i32* %code, align 4
  %idxprom709 = sext i32 %326 to i64
  %arrayidx710 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom709
  %327 = load i8, i8* %arrayidx710, align 1
  %conv711 = zext i8 %327 to i32
  %cmp712 = icmp slt i32 %325, %conv711
  br i1 %cmp712, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %328 = load i32, i32* %i, align 4
  %idxprom714 = sext i32 %328 to i64
  %329 = load i8*, i8** %fmt, align 8
  %arrayidx715 = getelementptr inbounds i8, i8* %329, i64 %idxprom714
  %330 = load i8, i8* %arrayidx715, align 1
  %conv716 = sext i8 %330 to i32
  %cmp717 = icmp eq i32 %conv716, 101
  br i1 %cmp717, label %if.then.719, label %if.end.729

if.then.719:                                      ; preds = %for.body
  %331 = load i32, i32* %i, align 4
  %idxprom720 = sext i32 %331 to i64
  %332 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld721 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %332, i32 0, i32 1
  %arrayidx722 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld721, i32 0, i64 %idxprom720
  %rtx723 = bitcast %union.rtunion_def* %arrayidx722 to %struct.rtx_def**
  %333 = load %struct.rtx_def*, %struct.rtx_def** %rtx723, align 8
  %334 = load i32, i32* %next_code, align 4
  %call724 = call %struct.rtx_def* @make_compound_operation(%struct.rtx_def* %333, i32 %334)
  store %struct.rtx_def* %call724, %struct.rtx_def** %new, align 8
  %335 = load i32, i32* %i, align 4
  %idxprom725 = sext i32 %335 to i64
  %336 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld726 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %336, i32 0, i32 1
  %arrayidx727 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld726, i32 0, i64 %idxprom725
  %rtx728 = bitcast %union.rtunion_def* %arrayidx727 to %struct.rtx_def**
  %337 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx728, %struct.rtx_def* %337)
  br label %if.end.729

if.end.729:                                       ; preds = %if.then.719, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.729
  %338 = load i32, i32* %i, align 4
  %inc = add nsw i32 %338, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %339 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %339, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %for.end, %if.end.699, %if.end.646
  %340 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %340
}

declare %struct.rtx_def* @plus_constant_wide(%struct.rtx_def*, i64) #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @expand_compound_operation(%struct.rtx_def* %x) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %pos = alloca i64, align 8
  %len = alloca i64, align 8
  %unsignedp = alloca i32, align 4
  %modewidth = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  %temp = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i64 0, i64* %pos, align 8
  store i32 0, i32* %unsignedp, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.default [
    i32 121, label %sw.bb
    i32 120, label %sw.bb.1
    i32 133, label %sw.bb.27
    i32 132, label %sw.bb.28
  ]

sw.bb:                                            ; preds = %entry
  store i32 1, i32* %unsignedp, align 4
  br label %sw.bb.1

sw.bb.1:                                          ; preds = %entry, %sw.bb
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load2 = load i32, i32* %4, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  %cmp = icmp eq i32 %bf.clear3, 54
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb.1
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %5, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %sw.bb.1
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i32 0, i64 0
  %rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtx6, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load7 = load i32, i32* %8, align 8
  %bf.lshr = lshr i32 %bf.load7, 16
  %bf.clear8 = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear8 to i64
  %arrayidx9 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom
  %9 = load i8, i8* %arrayidx9, align 1
  %conv = zext i8 %9 to i32
  %10 = load i32, i32* @target_flags, align 4
  %and = and i32 %10, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond = select i1 %tobool, i32 8, i32 4
  %cmp10 = icmp sgt i32 %conv, %cond
  br i1 %cmp10, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.end
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %11, %struct.rtx_def** %retval
  br label %return

if.end.13:                                        ; preds = %if.end
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i32 0, i64 0
  %rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rtx16, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load17 = load i32, i32* %14, align 8
  %bf.lshr18 = lshr i32 %bf.load17, 16
  %bf.clear19 = and i32 %bf.lshr18, 255
  %idxprom20 = sext i32 %bf.clear19 to i64
  %arrayidx21 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom20
  %15 = load i16, i16* %arrayidx21, align 2
  %conv22 = zext i16 %15 to i64
  store i64 %conv22, i64* %len, align 8
  %16 = load i64, i64* %len, align 8
  %cmp23 = icmp eq i64 %16, 0
  br i1 %cmp23, label %if.then.25, label %if.end.26

if.then.25:                                       ; preds = %if.end.13
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %17, %struct.rtx_def** %retval
  br label %return

if.end.26:                                        ; preds = %if.end.13
  br label %sw.epilog

sw.bb.27:                                         ; preds = %entry
  store i32 1, i32* %unsignedp, align 4
  br label %sw.bb.28

sw.bb.28:                                         ; preds = %entry, %sw.bb.27
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i32 0, i64 0
  %rtx31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rtx31, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load32 = load i32, i32* %20, align 8
  %bf.clear33 = and i32 %bf.load32, 65535
  %cmp34 = icmp eq i32 %bf.clear33, 49
  br i1 %cmp34, label %if.then.36, label %if.end.40

if.then.36:                                       ; preds = %sw.bb.28
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i32 0, i64 0
  %rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rtx39, align 8
  store %struct.rtx_def* %22, %struct.rtx_def** %retval
  br label %return

if.end.40:                                        ; preds = %sw.bb.28
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld41, i32 0, i64 1
  %rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rtx43, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load44 = load i32, i32* %25, align 8
  %bf.clear45 = and i32 %bf.load44, 65535
  %cmp46 = icmp ne i32 %bf.clear45, 54
  br i1 %cmp46, label %if.then.64, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.40
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i32 0, i64 2
  %rtx50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rtx50, align 8
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load51 = load i32, i32* %28, align 8
  %bf.clear52 = and i32 %bf.load51, 65535
  %cmp53 = icmp ne i32 %bf.clear52, 54
  br i1 %cmp53, label %if.then.64, label %lor.lhs.false.55

lor.lhs.false.55:                                 ; preds = %lor.lhs.false
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i32 0, i64 0
  %rtx58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rtx58, align 8
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load59 = load i32, i32* %31, align 8
  %bf.lshr60 = lshr i32 %bf.load59, 16
  %bf.clear61 = and i32 %bf.lshr60, 255
  %cmp62 = icmp eq i32 %bf.clear61, 0
  br i1 %cmp62, label %if.then.64, label %if.end.65

if.then.64:                                       ; preds = %lor.lhs.false.55, %lor.lhs.false, %if.end.40
  %32 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %32, %struct.rtx_def** %retval
  br label %return

if.end.65:                                        ; preds = %lor.lhs.false.55
  %33 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %arrayidx67 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld66, i32 0, i64 1
  %rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rtx68, align 8
  %fld69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld69, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx70 to i64*
  %35 = load i64, i64* %rtwint, align 8
  store i64 %35, i64* %len, align 8
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i32 0, i64 2
  %rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rtx73, align 8
  %fld74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1
  %arrayidx75 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld74, i32 0, i64 0
  %rtwint76 = bitcast %union.rtunion_def* %arrayidx75 to i64*
  %38 = load i64, i64* %rtwint76, align 8
  store i64 %38, i64* %pos, align 8
  %39 = load i64, i64* %len, align 8
  %40 = load i64, i64* %pos, align 8
  %add = add i64 %39, %40
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i32 0, i64 0
  %rtx79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtx_def**
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rtx79, align 8
  %43 = bitcast %struct.rtx_def* %42 to i32*
  %bf.load80 = load i32, i32* %43, align 8
  %bf.lshr81 = lshr i32 %bf.load80, 16
  %bf.clear82 = and i32 %bf.lshr81, 255
  %idxprom83 = sext i32 %bf.clear82 to i64
  %arrayidx84 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom83
  %44 = load i16, i16* %arrayidx84, align 2
  %conv85 = zext i16 %44 to i64
  %cmp86 = icmp ugt i64 %add, %conv85
  br i1 %cmp86, label %if.then.88, label %if.end.98

if.then.88:                                       ; preds = %if.end.65
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i32 0, i64 0
  %rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**
  %46 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %47 = bitcast %struct.rtx_def* %46 to i32*
  %bf.load92 = load i32, i32* %47, align 8
  %bf.lshr93 = lshr i32 %bf.load92, 16
  %bf.clear94 = and i32 %bf.lshr93, 255
  %48 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1
  %arrayidx96 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld95, i32 0, i64 0
  %rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rtx97, align 8
  %call = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 %bf.clear94, %struct.rtx_def* %49)
  call void @do_SUBST(%struct.rtx_def** %rtx91, %struct.rtx_def* %call)
  br label %if.end.98

if.end.98:                                        ; preds = %if.then.88, %if.end.65
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %50 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %50, %struct.rtx_def** %retval
  br label %return

sw.epilog:                                        ; preds = %if.end.98, %if.end.26
  %51 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %52 = bitcast %struct.rtx_def* %51 to i32*
  %bf.load99 = load i32, i32* %52, align 8
  %bf.clear100 = and i32 %bf.load99, 65535
  %cmp101 = icmp eq i32 %bf.clear100, 120
  br i1 %cmp101, label %land.lhs.true, label %if.end.142

land.lhs.true:                                    ; preds = %sw.epilog
  %53 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %54 = bitcast %struct.rtx_def* %53 to i32*
  %bf.load103 = load i32, i32* %54, align 8
  %bf.lshr104 = lshr i32 %bf.load103, 16
  %bf.clear105 = and i32 %bf.lshr104, 255
  %idxprom106 = sext i32 %bf.clear105 to i64
  %arrayidx107 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom106
  %55 = load i16, i16* %arrayidx107, align 2
  %conv108 = zext i16 %55 to i32
  %cmp109 = icmp sle i32 %conv108, 64
  br i1 %cmp109, label %land.lhs.true.111, label %if.end.142

land.lhs.true.111:                                ; preds = %land.lhs.true
  %56 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1
  %arrayidx113 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld112, i32 0, i64 0
  %rtx114 = bitcast %union.rtunion_def* %arrayidx113 to %struct.rtx_def**
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rtx114, align 8
  %58 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1
  %arrayidx116 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld115, i32 0, i64 0
  %rtx117 = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtx_def**
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rtx117, align 8
  %60 = bitcast %struct.rtx_def* %59 to i32*
  %bf.load118 = load i32, i32* %60, align 8
  %bf.lshr119 = lshr i32 %bf.load118, 16
  %bf.clear120 = and i32 %bf.lshr119, 255
  %call121 = call i64 @nonzero_bits(%struct.rtx_def* %57, i32 %bf.clear120)
  %61 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld122 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1
  %arrayidx123 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld122, i32 0, i64 0
  %rtx124 = bitcast %union.rtunion_def* %arrayidx123 to %struct.rtx_def**
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rtx124, align 8
  %63 = bitcast %struct.rtx_def* %62 to i32*
  %bf.load125 = load i32, i32* %63, align 8
  %bf.lshr126 = lshr i32 %bf.load125, 16
  %bf.clear127 = and i32 %bf.lshr126, 255
  %idxprom128 = sext i32 %bf.clear127 to i64
  %arrayidx129 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom128
  %64 = load i64, i64* %arrayidx129, align 8
  %shr = lshr i64 %64, 1
  %neg = xor i64 %shr, -1
  %and130 = and i64 %call121, %neg
  %cmp131 = icmp eq i64 %and130, 0
  br i1 %cmp131, label %if.then.133, label %if.end.142

if.then.133:                                      ; preds = %land.lhs.true.111
  %65 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %66 = bitcast %struct.rtx_def* %65 to i32*
  %bf.load134 = load i32, i32* %66, align 8
  %bf.lshr135 = lshr i32 %bf.load134, 16
  %bf.clear136 = and i32 %bf.lshr135, 255
  %67 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1
  %arrayidx138 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld137, i32 0, i64 0
  %rtx139 = bitcast %union.rtunion_def* %arrayidx138 to %struct.rtx_def**
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rtx139, align 8
  %call140 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 %bf.clear136, %struct.rtx_def* %68)
  store %struct.rtx_def* %call140, %struct.rtx_def** %temp, align 8
  %69 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %call141 = call %struct.rtx_def* @expand_compound_operation(%struct.rtx_def* %69)
  store %struct.rtx_def* %call141, %struct.rtx_def** %retval
  br label %return

if.end.142:                                       ; preds = %land.lhs.true.111, %land.lhs.true, %sw.epilog
  %70 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %71 = bitcast %struct.rtx_def* %70 to i32*
  %bf.load143 = load i32, i32* %71, align 8
  %bf.clear144 = and i32 %bf.load143, 65535
  %cmp145 = icmp eq i32 %bf.clear144, 121
  br i1 %cmp145, label %if.then.147, label %if.end.422

if.then.147:                                      ; preds = %if.end.142
  %72 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld148 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1
  %arrayidx149 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld148, i32 0, i64 0
  %rtx150 = bitcast %union.rtunion_def* %arrayidx149 to %struct.rtx_def**
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rtx150, align 8
  %74 = bitcast %struct.rtx_def* %73 to i32*
  %bf.load151 = load i32, i32* %74, align 8
  %bf.clear152 = and i32 %bf.load151, 65535
  %cmp153 = icmp eq i32 %bf.clear152, 122
  br i1 %cmp153, label %land.lhs.true.155, label %if.end.209

land.lhs.true.155:                                ; preds = %if.then.147
  %75 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld156 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx157 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld156, i32 0, i64 0
  %rtx158 = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtx_def**
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rtx158, align 8
  %fld159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %arrayidx160 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld159, i32 0, i64 0
  %rtx161 = bitcast %union.rtunion_def* %arrayidx160 to %struct.rtx_def**
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rtx161, align 8
  %78 = bitcast %struct.rtx_def* %77 to i32*
  %bf.load162 = load i32, i32* %78, align 8
  %bf.lshr163 = lshr i32 %bf.load162, 16
  %bf.clear164 = and i32 %bf.lshr163, 255
  %79 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %80 = bitcast %struct.rtx_def* %79 to i32*
  %bf.load165 = load i32, i32* %80, align 8
  %bf.lshr166 = lshr i32 %bf.load165, 16
  %bf.clear167 = and i32 %bf.lshr166, 255
  %cmp168 = icmp eq i32 %bf.clear164, %bf.clear167
  br i1 %cmp168, label %land.lhs.true.170, label %if.end.209

land.lhs.true.170:                                ; preds = %land.lhs.true.155
  %81 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %82 = bitcast %struct.rtx_def* %81 to i32*
  %bf.load171 = load i32, i32* %82, align 8
  %bf.lshr172 = lshr i32 %bf.load171, 16
  %bf.clear173 = and i32 %bf.lshr172, 255
  %idxprom174 = sext i32 %bf.clear173 to i64
  %arrayidx175 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom174
  %83 = load i16, i16* %arrayidx175, align 2
  %conv176 = zext i16 %83 to i32
  %cmp177 = icmp sle i32 %conv176, 64
  br i1 %cmp177, label %land.lhs.true.179, label %if.end.209

land.lhs.true.179:                                ; preds = %land.lhs.true.170
  %84 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld180 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1
  %arrayidx181 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld180, i32 0, i64 0
  %rtx182 = bitcast %union.rtunion_def* %arrayidx181 to %struct.rtx_def**
  %85 = load %struct.rtx_def*, %struct.rtx_def** %rtx182, align 8
  %fld183 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1
  %arrayidx184 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld183, i32 0, i64 0
  %rtx185 = bitcast %union.rtunion_def* %arrayidx184 to %struct.rtx_def**
  %86 = load %struct.rtx_def*, %struct.rtx_def** %rtx185, align 8
  %87 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %88 = bitcast %struct.rtx_def* %87 to i32*
  %bf.load186 = load i32, i32* %88, align 8
  %bf.lshr187 = lshr i32 %bf.load186, 16
  %bf.clear188 = and i32 %bf.lshr187, 255
  %call189 = call i64 @nonzero_bits(%struct.rtx_def* %86, i32 %bf.clear188)
  %89 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld190 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1
  %arrayidx191 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld190, i32 0, i64 0
  %rtx192 = bitcast %union.rtunion_def* %arrayidx191 to %struct.rtx_def**
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rtx192, align 8
  %91 = bitcast %struct.rtx_def* %90 to i32*
  %bf.load193 = load i32, i32* %91, align 8
  %bf.lshr194 = lshr i32 %bf.load193, 16
  %bf.clear195 = and i32 %bf.lshr194, 255
  %idxprom196 = sext i32 %bf.clear195 to i64
  %arrayidx197 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom196
  %92 = load i64, i64* %arrayidx197, align 8
  %neg198 = xor i64 %92, -1
  %and199 = and i64 %call189, %neg198
  %cmp200 = icmp eq i64 %and199, 0
  br i1 %cmp200, label %if.then.202, label %if.end.209

if.then.202:                                      ; preds = %land.lhs.true.179
  %93 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld203 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %93, i32 0, i32 1
  %arrayidx204 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld203, i32 0, i64 0
  %rtx205 = bitcast %union.rtunion_def* %arrayidx204 to %struct.rtx_def**
  %94 = load %struct.rtx_def*, %struct.rtx_def** %rtx205, align 8
  %fld206 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1
  %arrayidx207 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld206, i32 0, i64 0
  %rtx208 = bitcast %union.rtunion_def* %arrayidx207 to %struct.rtx_def**
  %95 = load %struct.rtx_def*, %struct.rtx_def** %rtx208, align 8
  store %struct.rtx_def* %95, %struct.rtx_def** %retval
  br label %return

if.end.209:                                       ; preds = %land.lhs.true.179, %land.lhs.true.170, %land.lhs.true.155, %if.then.147
  %96 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld210 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1
  %arrayidx211 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld210, i32 0, i64 0
  %rtx212 = bitcast %union.rtunion_def* %arrayidx211 to %struct.rtx_def**
  %97 = load %struct.rtx_def*, %struct.rtx_def** %rtx212, align 8
  %98 = bitcast %struct.rtx_def* %97 to i32*
  %bf.load213 = load i32, i32* %98, align 8
  %bf.clear214 = and i32 %bf.load213, 65535
  %cmp215 = icmp eq i32 %bf.clear214, 63
  br i1 %cmp215, label %land.lhs.true.217, label %if.end.277

land.lhs.true.217:                                ; preds = %if.end.209
  %99 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld218 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %99, i32 0, i32 1
  %arrayidx219 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld218, i32 0, i64 0
  %rtx220 = bitcast %union.rtunion_def* %arrayidx219 to %struct.rtx_def**
  %100 = load %struct.rtx_def*, %struct.rtx_def** %rtx220, align 8
  %fld221 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1
  %arrayidx222 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld221, i32 0, i64 0
  %rtx223 = bitcast %union.rtunion_def* %arrayidx222 to %struct.rtx_def**
  %101 = load %struct.rtx_def*, %struct.rtx_def** %rtx223, align 8
  %102 = bitcast %struct.rtx_def* %101 to i32*
  %bf.load224 = load i32, i32* %102, align 8
  %bf.lshr225 = lshr i32 %bf.load224, 16
  %bf.clear226 = and i32 %bf.lshr225, 255
  %103 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %104 = bitcast %struct.rtx_def* %103 to i32*
  %bf.load227 = load i32, i32* %104, align 8
  %bf.lshr228 = lshr i32 %bf.load227, 16
  %bf.clear229 = and i32 %bf.lshr228, 255
  %cmp230 = icmp eq i32 %bf.clear226, %bf.clear229
  br i1 %cmp230, label %land.lhs.true.232, label %if.end.277

land.lhs.true.232:                                ; preds = %land.lhs.true.217
  %105 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld233 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1
  %arrayidx234 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld233, i32 0, i64 0
  %rtx235 = bitcast %union.rtunion_def* %arrayidx234 to %struct.rtx_def**
  %106 = load %struct.rtx_def*, %struct.rtx_def** %rtx235, align 8
  %call236 = call i32 @subreg_lowpart_p(%struct.rtx_def* %106)
  %tobool237 = icmp ne i32 %call236, 0
  br i1 %tobool237, label %land.lhs.true.238, label %if.end.277

land.lhs.true.238:                                ; preds = %land.lhs.true.232
  %107 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %108 = bitcast %struct.rtx_def* %107 to i32*
  %bf.load239 = load i32, i32* %108, align 8
  %bf.lshr240 = lshr i32 %bf.load239, 16
  %bf.clear241 = and i32 %bf.lshr240, 255
  %idxprom242 = sext i32 %bf.clear241 to i64
  %arrayidx243 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom242
  %109 = load i16, i16* %arrayidx243, align 2
  %conv244 = zext i16 %109 to i32
  %cmp245 = icmp sle i32 %conv244, 64
  br i1 %cmp245, label %land.lhs.true.247, label %if.end.277

land.lhs.true.247:                                ; preds = %land.lhs.true.238
  %110 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld248 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %110, i32 0, i32 1
  %arrayidx249 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld248, i32 0, i64 0
  %rtx250 = bitcast %union.rtunion_def* %arrayidx249 to %struct.rtx_def**
  %111 = load %struct.rtx_def*, %struct.rtx_def** %rtx250, align 8
  %fld251 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i32 0, i32 1
  %arrayidx252 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld251, i32 0, i64 0
  %rtx253 = bitcast %union.rtunion_def* %arrayidx252 to %struct.rtx_def**
  %112 = load %struct.rtx_def*, %struct.rtx_def** %rtx253, align 8
  %113 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %114 = bitcast %struct.rtx_def* %113 to i32*
  %bf.load254 = load i32, i32* %114, align 8
  %bf.lshr255 = lshr i32 %bf.load254, 16
  %bf.clear256 = and i32 %bf.lshr255, 255
  %call257 = call i64 @nonzero_bits(%struct.rtx_def* %112, i32 %bf.clear256)
  %115 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld258 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1
  %arrayidx259 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld258, i32 0, i64 0
  %rtx260 = bitcast %union.rtunion_def* %arrayidx259 to %struct.rtx_def**
  %116 = load %struct.rtx_def*, %struct.rtx_def** %rtx260, align 8
  %117 = bitcast %struct.rtx_def* %116 to i32*
  %bf.load261 = load i32, i32* %117, align 8
  %bf.lshr262 = lshr i32 %bf.load261, 16
  %bf.clear263 = and i32 %bf.lshr262, 255
  %idxprom264 = sext i32 %bf.clear263 to i64
  %arrayidx265 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom264
  %118 = load i64, i64* %arrayidx265, align 8
  %neg266 = xor i64 %118, -1
  %and267 = and i64 %call257, %neg266
  %cmp268 = icmp eq i64 %and267, 0
  br i1 %cmp268, label %if.then.270, label %if.end.277

if.then.270:                                      ; preds = %land.lhs.true.247
  %119 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld271 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %119, i32 0, i32 1
  %arrayidx272 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld271, i32 0, i64 0
  %rtx273 = bitcast %union.rtunion_def* %arrayidx272 to %struct.rtx_def**
  %120 = load %struct.rtx_def*, %struct.rtx_def** %rtx273, align 8
  %fld274 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1
  %arrayidx275 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld274, i32 0, i64 0
  %rtx276 = bitcast %union.rtunion_def* %arrayidx275 to %struct.rtx_def**
  %121 = load %struct.rtx_def*, %struct.rtx_def** %rtx276, align 8
  store %struct.rtx_def* %121, %struct.rtx_def** %retval
  br label %return

if.end.277:                                       ; preds = %land.lhs.true.247, %land.lhs.true.238, %land.lhs.true.232, %land.lhs.true.217, %if.end.209
  %122 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld278 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i32 0, i32 1
  %arrayidx279 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld278, i32 0, i64 0
  %rtx280 = bitcast %union.rtunion_def* %arrayidx279 to %struct.rtx_def**
  %123 = load %struct.rtx_def*, %struct.rtx_def** %rtx280, align 8
  %124 = bitcast %struct.rtx_def* %123 to i32*
  %bf.load281 = load i32, i32* %124, align 8
  %bf.clear282 = and i32 %bf.load281, 65535
  %cmp283 = icmp eq i32 %bf.clear282, 122
  br i1 %cmp283, label %land.lhs.true.285, label %if.end.346

land.lhs.true.285:                                ; preds = %if.end.277
  %125 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld286 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %125, i32 0, i32 1
  %arrayidx287 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld286, i32 0, i64 0
  %rtx288 = bitcast %union.rtunion_def* %arrayidx287 to %struct.rtx_def**
  %126 = load %struct.rtx_def*, %struct.rtx_def** %rtx288, align 8
  %fld289 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1
  %arrayidx290 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld289, i32 0, i64 0
  %rtx291 = bitcast %union.rtunion_def* %arrayidx290 to %struct.rtx_def**
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rtx291, align 8
  %128 = bitcast %struct.rtx_def* %127 to i32*
  %bf.load292 = load i32, i32* %128, align 8
  %bf.lshr293 = lshr i32 %bf.load292, 16
  %bf.clear294 = and i32 %bf.lshr293, 255
  %129 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %130 = bitcast %struct.rtx_def* %129 to i32*
  %bf.load295 = load i32, i32* %130, align 8
  %bf.lshr296 = lshr i32 %bf.load295, 16
  %bf.clear297 = and i32 %bf.lshr296, 255
  %cmp298 = icmp eq i32 %bf.clear294, %bf.clear297
  br i1 %cmp298, label %land.lhs.true.300, label %if.end.346

land.lhs.true.300:                                ; preds = %land.lhs.true.285
  %131 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld301 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i32 0, i32 1
  %arrayidx302 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld301, i32 0, i64 0
  %rtx303 = bitcast %union.rtunion_def* %arrayidx302 to %struct.rtx_def**
  %132 = load %struct.rtx_def*, %struct.rtx_def** %rtx303, align 8
  %fld304 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1
  %arrayidx305 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld304, i32 0, i64 0
  %rtx306 = bitcast %union.rtunion_def* %arrayidx305 to %struct.rtx_def**
  %133 = load %struct.rtx_def*, %struct.rtx_def** %rtx306, align 8
  %134 = bitcast %struct.rtx_def* %133 to i32*
  %bf.load307 = load i32, i32* %134, align 8
  %bf.clear308 = and i32 %bf.load307, 65535
  %idxprom309 = sext i32 %bf.clear308 to i64
  %arrayidx310 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom309
  %135 = load i8, i8* %arrayidx310, align 1
  %conv311 = sext i8 %135 to i32
  %cmp312 = icmp eq i32 %conv311, 60
  br i1 %cmp312, label %land.lhs.true.314, label %if.end.346

land.lhs.true.314:                                ; preds = %land.lhs.true.300
  %136 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld315 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1
  %arrayidx316 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld315, i32 0, i64 0
  %rtx317 = bitcast %union.rtunion_def* %arrayidx316 to %struct.rtx_def**
  %137 = load %struct.rtx_def*, %struct.rtx_def** %rtx317, align 8
  %138 = bitcast %struct.rtx_def* %137 to i32*
  %bf.load318 = load i32, i32* %138, align 8
  %bf.lshr319 = lshr i32 %bf.load318, 16
  %bf.clear320 = and i32 %bf.lshr319, 255
  %idxprom321 = sext i32 %bf.clear320 to i64
  %arrayidx322 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom321
  %139 = load i16, i16* %arrayidx322, align 2
  %conv323 = zext i16 %139 to i32
  %cmp324 = icmp sle i32 %conv323, 64
  br i1 %cmp324, label %land.lhs.true.326, label %if.end.346

land.lhs.true.326:                                ; preds = %land.lhs.true.314
  %140 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld327 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %140, i32 0, i32 1
  %arrayidx328 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld327, i32 0, i64 0
  %rtx329 = bitcast %union.rtunion_def* %arrayidx328 to %struct.rtx_def**
  %141 = load %struct.rtx_def*, %struct.rtx_def** %rtx329, align 8
  %142 = bitcast %struct.rtx_def* %141 to i32*
  %bf.load330 = load i32, i32* %142, align 8
  %bf.lshr331 = lshr i32 %bf.load330, 16
  %bf.clear332 = and i32 %bf.lshr331, 255
  %idxprom333 = sext i32 %bf.clear332 to i64
  %arrayidx334 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom333
  %143 = load i64, i64* %arrayidx334, align 8
  %neg335 = xor i64 %143, -1
  %and336 = and i64 1, %neg335
  %cmp337 = icmp eq i64 %and336, 0
  br i1 %cmp337, label %if.then.339, label %if.end.346

if.then.339:                                      ; preds = %land.lhs.true.326
  %144 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld340 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1
  %arrayidx341 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld340, i32 0, i64 0
  %rtx342 = bitcast %union.rtunion_def* %arrayidx341 to %struct.rtx_def**
  %145 = load %struct.rtx_def*, %struct.rtx_def** %rtx342, align 8
  %fld343 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %145, i32 0, i32 1
  %arrayidx344 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld343, i32 0, i64 0
  %rtx345 = bitcast %union.rtunion_def* %arrayidx344 to %struct.rtx_def**
  %146 = load %struct.rtx_def*, %struct.rtx_def** %rtx345, align 8
  store %struct.rtx_def* %146, %struct.rtx_def** %retval
  br label %return

if.end.346:                                       ; preds = %land.lhs.true.326, %land.lhs.true.314, %land.lhs.true.300, %land.lhs.true.285, %if.end.277
  %147 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld347 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %147, i32 0, i32 1
  %arrayidx348 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld347, i32 0, i64 0
  %rtx349 = bitcast %union.rtunion_def* %arrayidx348 to %struct.rtx_def**
  %148 = load %struct.rtx_def*, %struct.rtx_def** %rtx349, align 8
  %149 = bitcast %struct.rtx_def* %148 to i32*
  %bf.load350 = load i32, i32* %149, align 8
  %bf.clear351 = and i32 %bf.load350, 65535
  %cmp352 = icmp eq i32 %bf.clear351, 63
  br i1 %cmp352, label %land.lhs.true.354, label %if.end.421

land.lhs.true.354:                                ; preds = %if.end.346
  %150 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld355 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %150, i32 0, i32 1
  %arrayidx356 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld355, i32 0, i64 0
  %rtx357 = bitcast %union.rtunion_def* %arrayidx356 to %struct.rtx_def**
  %151 = load %struct.rtx_def*, %struct.rtx_def** %rtx357, align 8
  %fld358 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %151, i32 0, i32 1
  %arrayidx359 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld358, i32 0, i64 0
  %rtx360 = bitcast %union.rtunion_def* %arrayidx359 to %struct.rtx_def**
  %152 = load %struct.rtx_def*, %struct.rtx_def** %rtx360, align 8
  %153 = bitcast %struct.rtx_def* %152 to i32*
  %bf.load361 = load i32, i32* %153, align 8
  %bf.lshr362 = lshr i32 %bf.load361, 16
  %bf.clear363 = and i32 %bf.lshr362, 255
  %154 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %155 = bitcast %struct.rtx_def* %154 to i32*
  %bf.load364 = load i32, i32* %155, align 8
  %bf.lshr365 = lshr i32 %bf.load364, 16
  %bf.clear366 = and i32 %bf.lshr365, 255
  %cmp367 = icmp eq i32 %bf.clear363, %bf.clear366
  br i1 %cmp367, label %land.lhs.true.369, label %if.end.421

land.lhs.true.369:                                ; preds = %land.lhs.true.354
  %156 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld370 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %156, i32 0, i32 1
  %arrayidx371 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld370, i32 0, i64 0
  %rtx372 = bitcast %union.rtunion_def* %arrayidx371 to %struct.rtx_def**
  %157 = load %struct.rtx_def*, %struct.rtx_def** %rtx372, align 8
  %call373 = call i32 @subreg_lowpart_p(%struct.rtx_def* %157)
  %tobool374 = icmp ne i32 %call373, 0
  br i1 %tobool374, label %land.lhs.true.375, label %if.end.421

land.lhs.true.375:                                ; preds = %land.lhs.true.369
  %158 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld376 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %158, i32 0, i32 1
  %arrayidx377 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld376, i32 0, i64 0
  %rtx378 = bitcast %union.rtunion_def* %arrayidx377 to %struct.rtx_def**
  %159 = load %struct.rtx_def*, %struct.rtx_def** %rtx378, align 8
  %fld379 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1
  %arrayidx380 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld379, i32 0, i64 0
  %rtx381 = bitcast %union.rtunion_def* %arrayidx380 to %struct.rtx_def**
  %160 = load %struct.rtx_def*, %struct.rtx_def** %rtx381, align 8
  %161 = bitcast %struct.rtx_def* %160 to i32*
  %bf.load382 = load i32, i32* %161, align 8
  %bf.clear383 = and i32 %bf.load382, 65535
  %idxprom384 = sext i32 %bf.clear383 to i64
  %arrayidx385 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom384
  %162 = load i8, i8* %arrayidx385, align 1
  %conv386 = sext i8 %162 to i32
  %cmp387 = icmp eq i32 %conv386, 60
  br i1 %cmp387, label %land.lhs.true.389, label %if.end.421

land.lhs.true.389:                                ; preds = %land.lhs.true.375
  %163 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld390 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %163, i32 0, i32 1
  %arrayidx391 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld390, i32 0, i64 0
  %rtx392 = bitcast %union.rtunion_def* %arrayidx391 to %struct.rtx_def**
  %164 = load %struct.rtx_def*, %struct.rtx_def** %rtx392, align 8
  %165 = bitcast %struct.rtx_def* %164 to i32*
  %bf.load393 = load i32, i32* %165, align 8
  %bf.lshr394 = lshr i32 %bf.load393, 16
  %bf.clear395 = and i32 %bf.lshr394, 255
  %idxprom396 = sext i32 %bf.clear395 to i64
  %arrayidx397 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom396
  %166 = load i16, i16* %arrayidx397, align 2
  %conv398 = zext i16 %166 to i32
  %cmp399 = icmp sle i32 %conv398, 64
  br i1 %cmp399, label %land.lhs.true.401, label %if.end.421

land.lhs.true.401:                                ; preds = %land.lhs.true.389
  %167 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld402 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %167, i32 0, i32 1
  %arrayidx403 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld402, i32 0, i64 0
  %rtx404 = bitcast %union.rtunion_def* %arrayidx403 to %struct.rtx_def**
  %168 = load %struct.rtx_def*, %struct.rtx_def** %rtx404, align 8
  %169 = bitcast %struct.rtx_def* %168 to i32*
  %bf.load405 = load i32, i32* %169, align 8
  %bf.lshr406 = lshr i32 %bf.load405, 16
  %bf.clear407 = and i32 %bf.lshr406, 255
  %idxprom408 = sext i32 %bf.clear407 to i64
  %arrayidx409 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom408
  %170 = load i64, i64* %arrayidx409, align 8
  %neg410 = xor i64 %170, -1
  %and411 = and i64 1, %neg410
  %cmp412 = icmp eq i64 %and411, 0
  br i1 %cmp412, label %if.then.414, label %if.end.421

if.then.414:                                      ; preds = %land.lhs.true.401
  %171 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld415 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %171, i32 0, i32 1
  %arrayidx416 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld415, i32 0, i64 0
  %rtx417 = bitcast %union.rtunion_def* %arrayidx416 to %struct.rtx_def**
  %172 = load %struct.rtx_def*, %struct.rtx_def** %rtx417, align 8
  %fld418 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %172, i32 0, i32 1
  %arrayidx419 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld418, i32 0, i64 0
  %rtx420 = bitcast %union.rtunion_def* %arrayidx419 to %struct.rtx_def**
  %173 = load %struct.rtx_def*, %struct.rtx_def** %rtx420, align 8
  store %struct.rtx_def* %173, %struct.rtx_def** %retval
  br label %return

if.end.421:                                       ; preds = %land.lhs.true.401, %land.lhs.true.389, %land.lhs.true.375, %land.lhs.true.369, %land.lhs.true.354, %if.end.346
  br label %if.end.422

if.end.422:                                       ; preds = %if.end.421, %if.end.142
  %174 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %175 = bitcast %struct.rtx_def* %174 to i32*
  %bf.load423 = load i32, i32* %175, align 8
  %bf.lshr424 = lshr i32 %bf.load423, 16
  %bf.clear425 = and i32 %bf.lshr424, 255
  %idxprom426 = sext i32 %bf.clear425 to i64
  %arrayidx427 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom426
  %176 = load i16, i16* %arrayidx427, align 2
  %conv428 = zext i16 %176 to i32
  store i32 %conv428, i32* %modewidth, align 4
  %177 = load i32, i32* %modewidth, align 4
  %conv429 = zext i32 %177 to i64
  %178 = load i64, i64* %len, align 8
  %add430 = add i64 %conv429, %178
  %179 = load i64, i64* %pos, align 8
  %cmp431 = icmp uge i64 %add430, %179
  br i1 %cmp431, label %if.then.433, label %if.else

if.then.433:                                      ; preds = %if.end.422
  %180 = load i32, i32* %unsignedp, align 4
  %tobool434 = icmp ne i32 %180, 0
  %cond435 = select i1 %tobool434, i32 90, i32 89
  %181 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %182 = bitcast %struct.rtx_def* %181 to i32*
  %bf.load436 = load i32, i32* %182, align 8
  %bf.lshr437 = lshr i32 %bf.load436, 16
  %bf.clear438 = and i32 %bf.lshr437, 255
  %183 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %184 = bitcast %struct.rtx_def* %183 to i32*
  %bf.load439 = load i32, i32* %184, align 8
  %bf.lshr440 = lshr i32 %bf.load439, 16
  %bf.clear441 = and i32 %bf.lshr440, 255
  %185 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld442 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %185, i32 0, i32 1
  %arrayidx443 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld442, i32 0, i64 0
  %rtx444 = bitcast %union.rtunion_def* %arrayidx443 to %struct.rtx_def**
  %186 = load %struct.rtx_def*, %struct.rtx_def** %rtx444, align 8
  %187 = load i32, i32* %modewidth, align 4
  %conv445 = zext i32 %187 to i64
  %188 = load i64, i64* %pos, align 8
  %sub = sub i64 %conv445, %188
  %189 = load i64, i64* %len, align 8
  %sub446 = sub i64 %sub, %189
  %conv447 = trunc i64 %sub446 to i32
  %call448 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 87, i32 %bf.clear441, %struct.rtx_def* %186, i32 %conv447)
  %190 = load i32, i32* %modewidth, align 4
  %conv449 = zext i32 %190 to i64
  %191 = load i64, i64* %len, align 8
  %sub450 = sub i64 %conv449, %191
  %conv451 = trunc i64 %sub450 to i32
  %call452 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 %cond435, i32 %bf.clear438, %struct.rtx_def* %call448, i32 %conv451)
  store %struct.rtx_def* %call452, %struct.rtx_def** %tem, align 8
  br label %if.end.473

if.else:                                          ; preds = %if.end.422
  %192 = load i32, i32* %unsignedp, align 4
  %tobool453 = icmp ne i32 %192, 0
  br i1 %tobool453, label %land.lhs.true.454, label %if.else.471

land.lhs.true.454:                                ; preds = %if.else
  %193 = load i64, i64* %len, align 8
  %cmp455 = icmp ult i64 %193, 64
  br i1 %cmp455, label %if.then.457, label %if.else.471

if.then.457:                                      ; preds = %land.lhs.true.454
  %194 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %195 = bitcast %struct.rtx_def* %194 to i32*
  %bf.load458 = load i32, i32* %195, align 8
  %bf.lshr459 = lshr i32 %bf.load458, 16
  %bf.clear460 = and i32 %bf.lshr459, 255
  %196 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %197 = bitcast %struct.rtx_def* %196 to i32*
  %bf.load461 = load i32, i32* %197, align 8
  %bf.lshr462 = lshr i32 %bf.load461, 16
  %bf.clear463 = and i32 %bf.lshr462, 255
  %198 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld464 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %198, i32 0, i32 1
  %arrayidx465 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld464, i32 0, i64 0
  %rtx466 = bitcast %union.rtunion_def* %arrayidx465 to %struct.rtx_def**
  %199 = load %struct.rtx_def*, %struct.rtx_def** %rtx466, align 8
  %200 = load i64, i64* %pos, align 8
  %conv467 = trunc i64 %200 to i32
  %call468 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 90, i32 %bf.clear463, %struct.rtx_def* %199, i32 %conv467)
  %201 = load i64, i64* %len, align 8
  %shl = shl i64 1, %201
  %sub469 = sub nsw i64 %shl, 1
  %call470 = call %struct.rtx_def* @simplify_and_const_int(%struct.rtx_def* null, i32 %bf.clear460, %struct.rtx_def* %call468, i64 %sub469)
  store %struct.rtx_def* %call470, %struct.rtx_def** %tem, align 8
  br label %if.end.472

if.else.471:                                      ; preds = %land.lhs.true.454, %if.else
  %202 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %202, %struct.rtx_def** %retval
  br label %return

if.end.472:                                       ; preds = %if.then.457
  br label %if.end.473

if.end.473:                                       ; preds = %if.end.472, %if.then.433
  %203 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %204 = bitcast %struct.rtx_def* %203 to i32*
  %bf.load474 = load i32, i32* %204, align 8
  %bf.clear475 = and i32 %bf.load474, 65535
  %cmp476 = icmp eq i32 %bf.clear475, 49
  br i1 %cmp476, label %if.then.478, label %if.end.479

if.then.478:                                      ; preds = %if.end.473
  %205 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %205, %struct.rtx_def** %retval
  br label %return

if.end.479:                                       ; preds = %if.end.473
  %206 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %206, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %if.end.479, %if.then.478, %if.else.471, %if.then.414, %if.then.339, %if.then.270, %if.then.202, %if.then.133, %sw.default, %if.then.64, %if.then.36, %if.then.25, %if.then.12, %if.then
  %207 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %207
}

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @force_to_mode(%struct.rtx_def* %x, i32 %mode, i64 %mask, %struct.rtx_def* %reg, i32 %just_select) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %mask.addr = alloca i64, align 8
  %reg.addr = alloca %struct.rtx_def*, align 8
  %just_select.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %next_select = alloca i32, align 4
  %op_mode = alloca i32, align 4
  %fuller_mask = alloca i64, align 8
  %nonzero = alloca i64, align 8
  %op0 = alloca %struct.rtx_def*, align 8
  %op1 = alloca %struct.rtx_def*, align 8
  %temp = alloca %struct.rtx_def*, align 8
  %cval = alloca i64, align 8
  %width = alloca i32, align 4
  %y = alloca %struct.rtx_def*, align 8
  %width333 = alloca i32, align 4
  %smask = alloca i64, align 8
  %inner = alloca %struct.rtx_def*, align 8
  %inner_mask = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %mode, i32* %mode.addr, align 4
  store i64 %mask, i64* %mask.addr, align 8
  store %struct.rtx_def* %reg, %struct.rtx_def** %reg.addr, align 8
  store i32 %just_select, i32* %just_select.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %2 = load i32, i32* %just_select.addr, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %code, align 4
  %cmp = icmp eq i32 %3, 85
  br i1 %cmp, label %lor.end, label %lor.lhs.false.1

lor.lhs.false.1:                                  ; preds = %lor.lhs.false
  %4 = load i32, i32* %code, align 4
  %cmp2 = icmp eq i32 %4, 86
  br i1 %cmp2, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.1
  %5 = load i32, i32* %code, align 4
  %cmp3 = icmp eq i32 %5, 77
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.1, %lor.lhs.false, %entry
  %6 = phi i1 [ true, %lor.lhs.false.1 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp3, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32
  store i32 %lor.ext, i32* %next_select, align 4
  %7 = load i32, i32* %code, align 4
  %cmp4 = icmp eq i32 %7, 50
  br i1 %cmp4, label %if.then, label %lor.lhs.false.5

lor.lhs.false.5:                                  ; preds = %lor.end
  %8 = load i32, i32* %code, align 4
  %cmp6 = icmp eq i32 %8, 41
  br i1 %cmp6, label %if.then, label %lor.lhs.false.7

lor.lhs.false.7:                                  ; preds = %lor.lhs.false.5
  %9 = load i32, i32* %code, align 4
  %cmp8 = icmp eq i32 %9, 49
  br i1 %cmp8, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.7, %lor.lhs.false.5, %lor.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %10, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.7
  %11 = load i32, i32* %mode.addr, align 4
  %idxprom = sext i32 %11 to i64
  %arrayidx = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %12 = load i32, i32* %arrayidx, align 4
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load9 = load i32, i32* %14, align 8
  %bf.lshr = lshr i32 %bf.load9, 16
  %bf.clear10 = and i32 %bf.lshr, 255
  %idxprom11 = sext i32 %bf.clear10 to i64
  %arrayidx12 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom11
  %15 = load i32, i32* %arrayidx12, align 4
  %cmp13 = icmp eq i32 %12, %15
  br i1 %cmp13, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %if.end
  %16 = load i32, i32* %code, align 4
  %17 = load i32, i32* %mode.addr, align 4
  %call = call i32 @have_insn_for(i32 %16, i32 %17)
  %tobool14 = icmp ne i32 %call, 0
  br i1 %tobool14, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %18 = load i32, i32* %mode.addr, align 4
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %if.end
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load15 = load i32, i32* %20, align 8
  %bf.lshr16 = lshr i32 %bf.load15, 16
  %bf.clear17 = and i32 %bf.lshr16, 255
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ %bf.clear17, %cond.false ]
  store i32 %cond, i32* %op_mode, align 4
  %21 = load i32, i32* %code, align 4
  %cmp18 = icmp eq i32 %21, 90
  br i1 %cmp18, label %land.lhs.true.21, label %lor.lhs.false.19

lor.lhs.false.19:                                 ; preds = %cond.end
  %22 = load i32, i32* %code, align 4
  %cmp20 = icmp eq i32 %22, 89
  br i1 %cmp20, label %land.lhs.true.21, label %if.end.36

land.lhs.true.21:                                 ; preds = %lor.lhs.false.19, %cond.end
  %23 = load i32, i32* %mode.addr, align 4
  %idxprom22 = sext i32 %23 to i64
  %arrayidx23 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom22
  %24 = load i16, i16* %arrayidx23, align 2
  %conv = zext i16 %24 to i32
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load24 = load i32, i32* %26, align 8
  %bf.lshr25 = lshr i32 %bf.load24, 16
  %bf.clear26 = and i32 %bf.lshr25, 255
  %idxprom27 = sext i32 %bf.clear26 to i64
  %arrayidx28 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom27
  %27 = load i16, i16* %arrayidx28, align 2
  %conv29 = zext i16 %27 to i32
  %cmp30 = icmp slt i32 %conv, %conv29
  br i1 %cmp30, label %if.then.32, label %if.end.36

if.then.32:                                       ; preds = %land.lhs.true.21
  %28 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load33 = load i32, i32* %29, align 8
  %bf.lshr34 = lshr i32 %bf.load33, 16
  %bf.clear35 = and i32 %bf.lshr34, 255
  store i32 %bf.clear35, i32* %op_mode, align 4
  br label %if.end.36

if.end.36:                                        ; preds = %if.then.32, %land.lhs.true.21, %lor.lhs.false.19
  %30 = load i32, i32* %op_mode, align 4
  %tobool37 = icmp ne i32 %30, 0
  br i1 %tobool37, label %if.then.38, label %if.end.41

if.then.38:                                       ; preds = %if.end.36
  %31 = load i32, i32* %op_mode, align 4
  %idxprom39 = sext i32 %31 to i64
  %arrayidx40 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom39
  %32 = load i64, i64* %arrayidx40, align 8
  %33 = load i64, i64* %mask.addr, align 8
  %and = and i64 %33, %32
  store i64 %and, i64* %mask.addr, align 8
  br label %if.end.41

if.end.41:                                        ; preds = %if.then.38, %if.end.36
  %34 = load i32, i32* %op_mode, align 4
  %tobool42 = icmp ne i32 %34, 0
  br i1 %tobool42, label %if.then.43, label %if.else

if.then.43:                                       ; preds = %if.end.41
  %35 = load i32, i32* %op_mode, align 4
  %idxprom44 = sext i32 %35 to i64
  %arrayidx45 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom44
  %36 = load i16, i16* %arrayidx45, align 2
  %conv46 = zext i16 %36 to i32
  %cmp47 = icmp sge i32 %conv46, 64
  br i1 %cmp47, label %cond.true.49, label %cond.false.52

cond.true.49:                                     ; preds = %if.then.43
  %37 = load i32, i32* %op_mode, align 4
  %idxprom50 = sext i32 %37 to i64
  %arrayidx51 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom50
  %38 = load i64, i64* %arrayidx51, align 8
  br label %cond.end.54

cond.false.52:                                    ; preds = %if.then.43
  %39 = load i64, i64* %mask.addr, align 8
  %call53 = call i32 @floor_log2_wide(i64 %39)
  %add = add nsw i32 %call53, 1
  %sh_prom = zext i32 %add to i64
  %shl = shl i64 1, %sh_prom
  %sub = sub i64 %shl, 1
  br label %cond.end.54

cond.end.54:                                      ; preds = %cond.false.52, %cond.true.49
  %cond55 = phi i64 [ %38, %cond.true.49 ], [ %sub, %cond.false.52 ]
  store i64 %cond55, i64* %fuller_mask, align 8
  br label %if.end.56

if.else:                                          ; preds = %if.end.41
  store i64 -1, i64* %fuller_mask, align 8
  br label %if.end.56

if.end.56:                                        ; preds = %if.else, %cond.end.54
  %40 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %41 = load i32, i32* %mode.addr, align 4
  %call57 = call i64 @nonzero_bits(%struct.rtx_def* %40, i32 %41)
  store i64 %call57, i64* %nonzero, align 8
  %42 = load i32, i32* %just_select.addr, align 4
  %tobool58 = icmp ne i32 %42, 0
  br i1 %tobool58, label %if.end.64, label %land.lhs.true.59

land.lhs.true.59:                                 ; preds = %if.end.56
  %43 = load i64, i64* %nonzero, align 8
  %44 = load i64, i64* %mask.addr, align 8
  %and60 = and i64 %43, %44
  %cmp61 = icmp eq i64 %and60, 0
  br i1 %cmp61, label %if.then.63, label %if.end.64

if.then.63:                                       ; preds = %land.lhs.true.59
  %45 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %45, %struct.rtx_def** %retval
  br label %return

if.end.64:                                        ; preds = %land.lhs.true.59, %if.end.56
  %46 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %47 = bitcast %struct.rtx_def* %46 to i32*
  %bf.load65 = load i32, i32* %47, align 8
  %bf.clear66 = and i32 %bf.load65, 65535
  %cmp67 = icmp eq i32 %bf.clear66, 54
  br i1 %cmp67, label %if.then.69, label %if.end.73

if.then.69:                                       ; preds = %if.end.64
  %48 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx70 to i64*
  %49 = load i64, i64* %rtwint, align 8
  %50 = load i64, i64* %mask.addr, align 8
  %and71 = and i64 %49, %50
  %51 = load i32, i32* %mode.addr, align 4
  %call72 = call %struct.rtx_def* @gen_int_mode(i64 %and71, i32 %51)
  store %struct.rtx_def* %call72, %struct.rtx_def** %retval
  br label %return

if.end.73:                                        ; preds = %if.end.64
  %52 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %53 = bitcast %struct.rtx_def* %52 to i32*
  %bf.load74 = load i32, i32* %53, align 8
  %bf.lshr75 = lshr i32 %bf.load74, 16
  %bf.clear76 = and i32 %bf.lshr75, 255
  %idxprom77 = sext i32 %bf.clear76 to i64
  %arrayidx78 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom77
  %54 = load i8, i8* %arrayidx78, align 1
  %conv79 = zext i8 %54 to i32
  %55 = load i32, i32* %mode.addr, align 4
  %idxprom80 = sext i32 %55 to i64
  %arrayidx81 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom80
  %56 = load i8, i8* %arrayidx81, align 1
  %conv82 = zext i8 %56 to i32
  %cmp83 = icmp slt i32 %conv79, %conv82
  br i1 %cmp83, label %land.lhs.true.85, label %if.end.96

land.lhs.true.85:                                 ; preds = %if.end.73
  %57 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %58 = bitcast %struct.rtx_def* %57 to i32*
  %bf.load86 = load i32, i32* %58, align 8
  %bf.lshr87 = lshr i32 %bf.load86, 16
  %bf.clear88 = and i32 %bf.lshr87, 255
  %idxprom89 = sext i32 %bf.clear88 to i64
  %arrayidx90 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom89
  %59 = load i64, i64* %arrayidx90, align 8
  %60 = load i64, i64* %mask.addr, align 8
  %neg = xor i64 %60, -1
  %and91 = and i64 %59, %neg
  %cmp92 = icmp eq i64 %and91, 0
  br i1 %cmp92, label %if.then.94, label %if.end.96

if.then.94:                                       ; preds = %land.lhs.true.85
  %61 = load i32, i32* %mode.addr, align 4
  %62 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call95 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %61, %struct.rtx_def* %62)
  store %struct.rtx_def* %call95, %struct.rtx_def** %retval
  br label %return

if.end.96:                                        ; preds = %land.lhs.true.85, %if.end.73
  %63 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %64 = bitcast %struct.rtx_def* %63 to i32*
  %bf.load97 = load i32, i32* %64, align 8
  %bf.lshr98 = lshr i32 %bf.load97, 16
  %bf.clear99 = and i32 %bf.lshr98, 255
  %65 = load i32, i32* %mode.addr, align 4
  %cmp100 = icmp eq i32 %bf.clear99, %65
  br i1 %cmp100, label %land.lhs.true.102, label %if.end.111

land.lhs.true.102:                                ; preds = %if.end.96
  %66 = load i32, i32* %code, align 4
  %cmp103 = icmp ne i32 %66, 63
  br i1 %cmp103, label %land.lhs.true.105, label %if.end.111

land.lhs.true.105:                                ; preds = %land.lhs.true.102
  %67 = load i64, i64* %mask.addr, align 8
  %neg106 = xor i64 %67, -1
  %68 = load i64, i64* %nonzero, align 8
  %and107 = and i64 %neg106, %68
  %cmp108 = icmp eq i64 %and107, 0
  br i1 %cmp108, label %if.then.110, label %if.end.111

if.then.110:                                      ; preds = %land.lhs.true.105
  %69 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %69, %struct.rtx_def** %retval
  br label %return

if.end.111:                                       ; preds = %land.lhs.true.105, %land.lhs.true.102, %if.end.96
  %70 = load i32, i32* %code, align 4
  switch i32 %70, label %sw.default [
    i32 49, label %sw.bb
    i32 48, label %sw.bb.112
    i32 120, label %sw.bb.130
    i32 121, label %sw.bb.130
    i32 133, label %sw.bb.130
    i32 132, label %sw.bb.130
    i32 61, label %sw.bb.139
    i32 63, label %sw.bb.152
    i32 83, label %sw.bb.198
    i32 75, label %sw.bb.332
    i32 78, label %sw.bb.397
    i32 76, label %sw.bb.398
    i32 84, label %sw.bb.472
    i32 85, label %sw.bb.472
    i32 87, label %sw.bb.641
    i32 90, label %sw.bb.762
    i32 89, label %sw.bb.930
    i32 88, label %sw.bb.1190
    i32 91, label %sw.bb.1190
    i32 77, label %sw.bb.1241
    i32 86, label %sw.bb.1250
    i32 102, label %sw.bb.1367
    i32 72, label %sw.bb.1398
  ]

sw.bb:                                            ; preds = %if.end.111
  %71 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %71, %struct.rtx_def** %retval
  br label %return

sw.bb.112:                                        ; preds = %if.end.111
  %72 = load i64, i64* %mask.addr, align 8
  %73 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1
  %arrayidx114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld113, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx114 to %struct.rtx_def**
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %75 = bitcast %struct.rtx_def* %74 to i32*
  %bf.load115 = load i32, i32* %75, align 8
  %bf.lshr116 = lshr i32 %bf.load115, 16
  %bf.clear117 = and i32 %bf.lshr116, 255
  %idxprom118 = sext i32 %bf.clear117 to i64
  %arrayidx119 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom118
  %76 = load i64, i64* %arrayidx119, align 8
  %neg120 = xor i64 %76, -1
  %and121 = and i64 %72, %neg120
  %cmp122 = icmp eq i64 %and121, 0
  br i1 %cmp122, label %if.then.124, label %if.end.129

if.then.124:                                      ; preds = %sw.bb.112
  %77 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i32 0, i64 0
  %rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**
  %78 = load %struct.rtx_def*, %struct.rtx_def** %rtx127, align 8
  %79 = load i32, i32* %mode.addr, align 4
  %80 = load i64, i64* %mask.addr, align 8
  %81 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %82 = load i32, i32* %next_select, align 4
  %call128 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %78, i32 %79, i64 %80, %struct.rtx_def* %81, i32 %82)
  store %struct.rtx_def* %call128, %struct.rtx_def** %retval
  br label %return

if.end.129:                                       ; preds = %sw.bb.112
  br label %sw.epilog

sw.bb.130:                                        ; preds = %if.end.111, %if.end.111, %if.end.111, %if.end.111
  %83 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call131 = call %struct.rtx_def* @expand_compound_operation(%struct.rtx_def* %83)
  store %struct.rtx_def* %call131, %struct.rtx_def** %x.addr, align 8
  %84 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %85 = bitcast %struct.rtx_def* %84 to i32*
  %bf.load132 = load i32, i32* %85, align 8
  %bf.clear133 = and i32 %bf.load132, 65535
  %86 = load i32, i32* %code, align 4
  %cmp134 = icmp ne i32 %bf.clear133, %86
  br i1 %cmp134, label %if.then.136, label %if.end.138

if.then.136:                                      ; preds = %sw.bb.130
  %87 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %88 = load i32, i32* %mode.addr, align 4
  %89 = load i64, i64* %mask.addr, align 8
  %90 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %91 = load i32, i32* %next_select, align 4
  %call137 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %87, i32 %88, i64 %89, %struct.rtx_def* %90, i32 %91)
  store %struct.rtx_def* %call137, %struct.rtx_def** %retval
  br label %return

if.end.138:                                       ; preds = %sw.bb.130
  br label %sw.epilog

sw.bb.139:                                        ; preds = %if.end.111
  %92 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %cmp140 = icmp ne %struct.rtx_def* %92, null
  br i1 %cmp140, label %land.lhs.true.142, label %if.end.151

land.lhs.true.142:                                ; preds = %sw.bb.139
  %93 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %call143 = call %struct.rtx_def* @get_last_value(%struct.rtx_def* %93)
  %94 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call144 = call i32 @rtx_equal_p(%struct.rtx_def* %call143, %struct.rtx_def* %94)
  %tobool145 = icmp ne i32 %call144, 0
  br i1 %tobool145, label %if.then.150, label %lor.lhs.false.146

lor.lhs.false.146:                                ; preds = %land.lhs.true.142
  %95 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %96 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call147 = call %struct.rtx_def* @get_last_value(%struct.rtx_def* %96)
  %call148 = call i32 @rtx_equal_p(%struct.rtx_def* %95, %struct.rtx_def* %call147)
  %tobool149 = icmp ne i32 %call148, 0
  br i1 %tobool149, label %if.then.150, label %if.end.151

if.then.150:                                      ; preds = %lor.lhs.false.146, %land.lhs.true.142
  %97 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  store %struct.rtx_def* %97, %struct.rtx_def** %x.addr, align 8
  br label %if.end.151

if.end.151:                                       ; preds = %if.then.150, %lor.lhs.false.146, %sw.bb.139
  br label %sw.epilog

sw.bb.152:                                        ; preds = %if.end.111
  %98 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call153 = call i32 @subreg_lowpart_p(%struct.rtx_def* %98)
  %tobool154 = icmp ne i32 %call153, 0
  br i1 %tobool154, label %land.lhs.true.155, label %if.end.197

land.lhs.true.155:                                ; preds = %sw.bb.152
  %99 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %100 = bitcast %struct.rtx_def* %99 to i32*
  %bf.load156 = load i32, i32* %100, align 8
  %bf.lshr157 = lshr i32 %bf.load156, 16
  %bf.clear158 = and i32 %bf.lshr157, 255
  %idxprom159 = sext i32 %bf.clear158 to i64
  %arrayidx160 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom159
  %101 = load i8, i8* %arrayidx160, align 1
  %conv161 = zext i8 %101 to i32
  %102 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld162 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1
  %arrayidx163 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld162, i32 0, i64 0
  %rtx164 = bitcast %union.rtunion_def* %arrayidx163 to %struct.rtx_def**
  %103 = load %struct.rtx_def*, %struct.rtx_def** %rtx164, align 8
  %104 = bitcast %struct.rtx_def* %103 to i32*
  %bf.load165 = load i32, i32* %104, align 8
  %bf.lshr166 = lshr i32 %bf.load165, 16
  %bf.clear167 = and i32 %bf.lshr166, 255
  %idxprom168 = sext i32 %bf.clear167 to i64
  %arrayidx169 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom168
  %105 = load i8, i8* %arrayidx169, align 1
  %conv170 = zext i8 %105 to i32
  %cmp171 = icmp slt i32 %conv161, %conv170
  br i1 %cmp171, label %if.then.192, label %lor.lhs.false.173

lor.lhs.false.173:                                ; preds = %land.lhs.true.155
  %106 = load i64, i64* %mask.addr, align 8
  %107 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %108 = bitcast %struct.rtx_def* %107 to i32*
  %bf.load174 = load i32, i32* %108, align 8
  %bf.lshr175 = lshr i32 %bf.load174, 16
  %bf.clear176 = and i32 %bf.lshr175, 255
  %idxprom177 = sext i32 %bf.clear176 to i64
  %arrayidx178 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom177
  %109 = load i64, i64* %arrayidx178, align 8
  %and179 = and i64 %106, %109
  %110 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld180 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %110, i32 0, i32 1
  %arrayidx181 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld180, i32 0, i64 0
  %rtx182 = bitcast %union.rtunion_def* %arrayidx181 to %struct.rtx_def**
  %111 = load %struct.rtx_def*, %struct.rtx_def** %rtx182, align 8
  %112 = bitcast %struct.rtx_def* %111 to i32*
  %bf.load183 = load i32, i32* %112, align 8
  %bf.lshr184 = lshr i32 %bf.load183, 16
  %bf.clear185 = and i32 %bf.lshr184, 255
  %idxprom186 = sext i32 %bf.clear185 to i64
  %arrayidx187 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom186
  %113 = load i64, i64* %arrayidx187, align 8
  %neg188 = xor i64 %113, -1
  %and189 = and i64 %and179, %neg188
  %cmp190 = icmp eq i64 0, %and189
  br i1 %cmp190, label %if.then.192, label %if.end.197

if.then.192:                                      ; preds = %lor.lhs.false.173, %land.lhs.true.155
  %114 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %114, i32 0, i32 1
  %arrayidx194 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld193, i32 0, i64 0
  %rtx195 = bitcast %union.rtunion_def* %arrayidx194 to %struct.rtx_def**
  %115 = load %struct.rtx_def*, %struct.rtx_def** %rtx195, align 8
  %116 = load i32, i32* %mode.addr, align 4
  %117 = load i64, i64* %mask.addr, align 8
  %118 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %119 = load i32, i32* %next_select, align 4
  %call196 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %115, i32 %116, i64 %117, %struct.rtx_def* %118, i32 %119)
  store %struct.rtx_def* %call196, %struct.rtx_def** %retval
  br label %return

if.end.197:                                       ; preds = %lor.lhs.false.173, %sw.bb.152
  br label %sw.epilog

sw.bb.198:                                        ; preds = %if.end.111
  %120 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld199 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1
  %arrayidx200 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld199, i32 0, i64 1
  %rtx201 = bitcast %union.rtunion_def* %arrayidx200 to %struct.rtx_def**
  %121 = load %struct.rtx_def*, %struct.rtx_def** %rtx201, align 8
  %122 = bitcast %struct.rtx_def* %121 to i32*
  %bf.load202 = load i32, i32* %122, align 8
  %bf.clear203 = and i32 %bf.load202, 65535
  %cmp204 = icmp eq i32 %bf.clear203, 54
  br i1 %cmp204, label %if.then.206, label %if.end.331

if.then.206:                                      ; preds = %sw.bb.198
  %123 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %124 = load i32, i32* %op_mode, align 4
  %125 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld207 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %125, i32 0, i32 1
  %arrayidx208 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld207, i32 0, i64 0
  %rtx209 = bitcast %union.rtunion_def* %arrayidx208 to %struct.rtx_def**
  %126 = load %struct.rtx_def*, %struct.rtx_def** %rtx209, align 8
  %127 = load i64, i64* %mask.addr, align 8
  %128 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld210 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1
  %arrayidx211 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld210, i32 0, i64 1
  %rtx212 = bitcast %union.rtunion_def* %arrayidx211 to %struct.rtx_def**
  %129 = load %struct.rtx_def*, %struct.rtx_def** %rtx212, align 8
  %fld213 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %129, i32 0, i32 1
  %arrayidx214 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld213, i32 0, i64 0
  %rtwint215 = bitcast %union.rtunion_def* %arrayidx214 to i64*
  %130 = load i64, i64* %rtwint215, align 8
  %and216 = and i64 %127, %130
  %call217 = call %struct.rtx_def* @simplify_and_const_int(%struct.rtx_def* %123, i32 %124, %struct.rtx_def* %126, i64 %and216)
  store %struct.rtx_def* %call217, %struct.rtx_def** %x.addr, align 8
  %131 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %132 = bitcast %struct.rtx_def* %131 to i32*
  %bf.load218 = load i32, i32* %132, align 8
  %bf.clear219 = and i32 %bf.load218, 65535
  %cmp220 = icmp eq i32 %bf.clear219, 83
  br i1 %cmp220, label %land.lhs.true.222, label %if.end.249

land.lhs.true.222:                                ; preds = %if.then.206
  %133 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld223 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %133, i32 0, i32 1
  %arrayidx224 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld223, i32 0, i64 1
  %rtx225 = bitcast %union.rtunion_def* %arrayidx224 to %struct.rtx_def**
  %134 = load %struct.rtx_def*, %struct.rtx_def** %rtx225, align 8
  %135 = bitcast %struct.rtx_def* %134 to i32*
  %bf.load226 = load i32, i32* %135, align 8
  %bf.clear227 = and i32 %bf.load226, 65535
  %cmp228 = icmp eq i32 %bf.clear227, 54
  br i1 %cmp228, label %land.lhs.true.230, label %if.end.249

land.lhs.true.230:                                ; preds = %land.lhs.true.222
  %136 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld231 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1
  %arrayidx232 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld231, i32 0, i64 1
  %rtx233 = bitcast %union.rtunion_def* %arrayidx232 to %struct.rtx_def**
  %137 = load %struct.rtx_def*, %struct.rtx_def** %rtx233, align 8
  %fld234 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %137, i32 0, i32 1
  %arrayidx235 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld234, i32 0, i64 0
  %rtwint236 = bitcast %union.rtunion_def* %arrayidx235 to i64*
  %138 = load i64, i64* %rtwint236, align 8
  %139 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %140 = bitcast %struct.rtx_def* %139 to i32*
  %bf.load237 = load i32, i32* %140, align 8
  %bf.lshr238 = lshr i32 %bf.load237, 16
  %bf.clear239 = and i32 %bf.lshr238, 255
  %idxprom240 = sext i32 %bf.clear239 to i64
  %arrayidx241 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom240
  %141 = load i64, i64* %arrayidx241, align 8
  %and242 = and i64 %138, %141
  %142 = load i64, i64* %mask.addr, align 8
  %cmp243 = icmp eq i64 %and242, %142
  br i1 %cmp243, label %if.then.245, label %if.end.249

if.then.245:                                      ; preds = %land.lhs.true.230
  %143 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld246 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1
  %arrayidx247 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld246, i32 0, i64 0
  %rtx248 = bitcast %union.rtunion_def* %arrayidx247 to %struct.rtx_def**
  %144 = load %struct.rtx_def*, %struct.rtx_def** %rtx248, align 8
  store %struct.rtx_def* %144, %struct.rtx_def** %x.addr, align 8
  br label %if.end.249

if.end.249:                                       ; preds = %if.then.245, %land.lhs.true.230, %land.lhs.true.222, %if.then.206
  %145 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %146 = bitcast %struct.rtx_def* %145 to i32*
  %bf.load250 = load i32, i32* %146, align 8
  %bf.clear251 = and i32 %bf.load250, 65535
  %cmp252 = icmp eq i32 %bf.clear251, 83
  br i1 %cmp252, label %land.lhs.true.254, label %if.end.330

land.lhs.true.254:                                ; preds = %if.end.249
  %147 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld255 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %147, i32 0, i32 1
  %arrayidx256 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld255, i32 0, i64 1
  %rtx257 = bitcast %union.rtunion_def* %arrayidx256 to %struct.rtx_def**
  %148 = load %struct.rtx_def*, %struct.rtx_def** %rtx257, align 8
  %149 = bitcast %struct.rtx_def* %148 to i32*
  %bf.load258 = load i32, i32* %149, align 8
  %bf.clear259 = and i32 %bf.load258, 65535
  %cmp260 = icmp eq i32 %bf.clear259, 54
  br i1 %cmp260, label %land.lhs.true.262, label %if.end.330

land.lhs.true.262:                                ; preds = %land.lhs.true.254
  %150 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %151 = bitcast %struct.rtx_def* %150 to i32*
  %bf.load263 = load i32, i32* %151, align 8
  %bf.lshr264 = lshr i32 %bf.load263, 16
  %bf.clear265 = and i32 %bf.lshr264, 255
  %idxprom266 = sext i32 %bf.clear265 to i64
  %arrayidx267 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom266
  %152 = load i64, i64* %arrayidx267, align 8
  %153 = load i64, i64* %mask.addr, align 8
  %cmp268 = icmp ne i64 %152, %153
  br i1 %cmp268, label %land.lhs.true.270, label %if.end.330

land.lhs.true.270:                                ; preds = %land.lhs.true.262
  %154 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %155 = bitcast %struct.rtx_def* %154 to i32*
  %bf.load271 = load i32, i32* %155, align 8
  %bf.lshr272 = lshr i32 %bf.load271, 16
  %bf.clear273 = and i32 %bf.lshr272, 255
  %idxprom274 = sext i32 %bf.clear273 to i64
  %arrayidx275 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom274
  %156 = load i16, i16* %arrayidx275, align 2
  %conv276 = zext i16 %156 to i32
  %cmp277 = icmp sle i32 %conv276, 64
  br i1 %cmp277, label %if.then.279, label %if.end.330

if.then.279:                                      ; preds = %land.lhs.true.270
  %157 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld280 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %157, i32 0, i32 1
  %arrayidx281 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld280, i32 0, i64 1
  %rtx282 = bitcast %union.rtunion_def* %arrayidx281 to %struct.rtx_def**
  %158 = load %struct.rtx_def*, %struct.rtx_def** %rtx282, align 8
  %fld283 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %158, i32 0, i32 1
  %arrayidx284 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld283, i32 0, i64 0
  %rtwint285 = bitcast %union.rtunion_def* %arrayidx284 to i64*
  %159 = load i64, i64* %rtwint285, align 8
  %160 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %161 = bitcast %struct.rtx_def* %160 to i32*
  %bf.load286 = load i32, i32* %161, align 8
  %bf.lshr287 = lshr i32 %bf.load286, 16
  %bf.clear288 = and i32 %bf.lshr287, 255
  %idxprom289 = sext i32 %bf.clear288 to i64
  %arrayidx290 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom289
  %162 = load i64, i64* %arrayidx290, align 8
  %163 = load i64, i64* %mask.addr, align 8
  %neg291 = xor i64 %163, -1
  %and292 = and i64 %162, %neg291
  %or = or i64 %159, %and292
  store i64 %or, i64* %cval, align 8
  %164 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %165 = bitcast %struct.rtx_def* %164 to i32*
  %bf.load293 = load i32, i32* %165, align 8
  %bf.lshr294 = lshr i32 %bf.load293, 16
  %bf.clear295 = and i32 %bf.lshr294, 255
  %idxprom296 = sext i32 %bf.clear295 to i64
  %arrayidx297 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom296
  %166 = load i16, i16* %arrayidx297, align 2
  %conv298 = zext i16 %166 to i32
  store i32 %conv298, i32* %width, align 4
  %167 = load i32, i32* %width, align 4
  %cmp299 = icmp sgt i32 %167, 0
  br i1 %cmp299, label %land.lhs.true.301, label %if.end.315

land.lhs.true.301:                                ; preds = %if.then.279
  %168 = load i32, i32* %width, align 4
  %cmp302 = icmp slt i32 %168, 64
  br i1 %cmp302, label %land.lhs.true.304, label %if.end.315

land.lhs.true.304:                                ; preds = %land.lhs.true.301
  %169 = load i64, i64* %cval, align 8
  %170 = load i32, i32* %width, align 4
  %sub305 = sub nsw i32 %170, 1
  %sh_prom306 = zext i32 %sub305 to i64
  %shl307 = shl i64 1, %sh_prom306
  %and308 = and i64 %169, %shl307
  %cmp309 = icmp ne i64 %and308, 0
  br i1 %cmp309, label %if.then.311, label %if.end.315

if.then.311:                                      ; preds = %land.lhs.true.304
  %171 = load i32, i32* %width, align 4
  %sh_prom312 = zext i32 %171 to i64
  %shl313 = shl i64 -1, %sh_prom312
  %172 = load i64, i64* %cval, align 8
  %or314 = or i64 %172, %shl313
  store i64 %or314, i64* %cval, align 8
  br label %if.end.315

if.end.315:                                       ; preds = %if.then.311, %land.lhs.true.304, %land.lhs.true.301, %if.then.279
  %173 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %174 = bitcast %struct.rtx_def* %173 to i32*
  %bf.load316 = load i32, i32* %174, align 8
  %bf.lshr317 = lshr i32 %bf.load316, 16
  %bf.clear318 = and i32 %bf.lshr317, 255
  %175 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld319 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %175, i32 0, i32 1
  %arrayidx320 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld319, i32 0, i64 0
  %rtx321 = bitcast %union.rtunion_def* %arrayidx320 to %struct.rtx_def**
  %176 = load %struct.rtx_def*, %struct.rtx_def** %rtx321, align 8
  %177 = load i64, i64* %cval, align 8
  %call322 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %177)
  %call323 = call %struct.rtx_def* @gen_binary(i32 83, i32 %bf.clear318, %struct.rtx_def* %176, %struct.rtx_def* %call322)
  store %struct.rtx_def* %call323, %struct.rtx_def** %y, align 8
  %178 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8
  %call324 = call i32 @rtx_cost(%struct.rtx_def* %178, i32 47)
  %179 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call325 = call i32 @rtx_cost(%struct.rtx_def* %179, i32 47)
  %cmp326 = icmp slt i32 %call324, %call325
  br i1 %cmp326, label %if.then.328, label %if.end.329

if.then.328:                                      ; preds = %if.end.315
  %180 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8
  store %struct.rtx_def* %180, %struct.rtx_def** %x.addr, align 8
  br label %if.end.329

if.end.329:                                       ; preds = %if.then.328, %if.end.315
  br label %if.end.330

if.end.330:                                       ; preds = %if.end.329, %land.lhs.true.270, %land.lhs.true.262, %land.lhs.true.254, %if.end.249
  br label %sw.epilog

if.end.331:                                       ; preds = %sw.bb.198
  br label %binop

sw.bb.332:                                        ; preds = %if.end.111
  %181 = load i32, i32* %mode.addr, align 4
  %idxprom334 = sext i32 %181 to i64
  %arrayidx335 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom334
  %182 = load i16, i16* %arrayidx335, align 2
  %conv336 = zext i16 %182 to i32
  store i32 %conv336, i32* %width333, align 4
  %183 = load i64, i64* %mask.addr, align 8
  store i64 %183, i64* %smask, align 8
  %184 = load i32, i32* %width333, align 4
  %cmp337 = icmp ult i32 %184, 64
  br i1 %cmp337, label %land.lhs.true.339, label %if.end.350

land.lhs.true.339:                                ; preds = %sw.bb.332
  %185 = load i64, i64* %smask, align 8
  %186 = load i32, i32* %width333, align 4
  %sub340 = sub i32 %186, 1
  %sh_prom341 = zext i32 %sub340 to i64
  %shl342 = shl i64 1, %sh_prom341
  %and343 = and i64 %185, %shl342
  %cmp344 = icmp ne i64 %and343, 0
  br i1 %cmp344, label %if.then.346, label %if.end.350

if.then.346:                                      ; preds = %land.lhs.true.339
  %187 = load i32, i32* %width333, align 4
  %sh_prom347 = zext i32 %187 to i64
  %shl348 = shl i64 -1, %sh_prom347
  %188 = load i64, i64* %smask, align 8
  %or349 = or i64 %188, %shl348
  store i64 %or349, i64* %smask, align 8
  br label %if.end.350

if.end.350:                                       ; preds = %if.then.346, %land.lhs.true.339, %sw.bb.332
  %189 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld351 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %189, i32 0, i32 1
  %arrayidx352 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld351, i32 0, i64 1
  %rtx353 = bitcast %union.rtunion_def* %arrayidx352 to %struct.rtx_def**
  %190 = load %struct.rtx_def*, %struct.rtx_def** %rtx353, align 8
  %191 = bitcast %struct.rtx_def* %190 to i32*
  %bf.load354 = load i32, i32* %191, align 8
  %bf.clear355 = and i32 %bf.load354, 65535
  %cmp356 = icmp eq i32 %bf.clear355, 54
  br i1 %cmp356, label %land.lhs.true.358, label %if.end.396

land.lhs.true.358:                                ; preds = %if.end.350
  %192 = load i64, i64* %smask, align 8
  %sub359 = sub i64 0, %192
  %call360 = call i32 @exact_log2_wide(i64 %sub359)
  %cmp361 = icmp sge i32 %call360, 0
  br i1 %cmp361, label %land.lhs.true.363, label %if.end.396

land.lhs.true.363:                                ; preds = %land.lhs.true.358
  %193 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld364 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %193, i32 0, i32 1
  %arrayidx365 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld364, i32 0, i64 0
  %rtx366 = bitcast %union.rtunion_def* %arrayidx365 to %struct.rtx_def**
  %194 = load %struct.rtx_def*, %struct.rtx_def** %rtx366, align 8
  %195 = load i32, i32* %mode.addr, align 4
  %call367 = call i64 @nonzero_bits(%struct.rtx_def* %194, i32 %195)
  %196 = load i64, i64* %smask, align 8
  %neg368 = xor i64 %196, -1
  %and369 = and i64 %call367, %neg368
  %cmp370 = icmp eq i64 %and369, 0
  br i1 %cmp370, label %land.lhs.true.372, label %if.end.396

land.lhs.true.372:                                ; preds = %land.lhs.true.363
  %197 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld373 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %197, i32 0, i32 1
  %arrayidx374 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld373, i32 0, i64 1
  %rtx375 = bitcast %union.rtunion_def* %arrayidx374 to %struct.rtx_def**
  %198 = load %struct.rtx_def*, %struct.rtx_def** %rtx375, align 8
  %fld376 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %198, i32 0, i32 1
  %arrayidx377 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld376, i32 0, i64 0
  %rtwint378 = bitcast %union.rtunion_def* %arrayidx377 to i64*
  %199 = load i64, i64* %rtwint378, align 8
  %200 = load i64, i64* %smask, align 8
  %neg379 = xor i64 %200, -1
  %and380 = and i64 %199, %neg379
  %cmp381 = icmp ne i64 %and380, 0
  br i1 %cmp381, label %if.then.383, label %if.end.396

if.then.383:                                      ; preds = %land.lhs.true.372
  %201 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld384 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %201, i32 0, i32 1
  %arrayidx385 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld384, i32 0, i64 0
  %rtx386 = bitcast %union.rtunion_def* %arrayidx385 to %struct.rtx_def**
  %202 = load %struct.rtx_def*, %struct.rtx_def** %rtx386, align 8
  %203 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld387 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %203, i32 0, i32 1
  %arrayidx388 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld387, i32 0, i64 1
  %rtx389 = bitcast %union.rtunion_def* %arrayidx388 to %struct.rtx_def**
  %204 = load %struct.rtx_def*, %struct.rtx_def** %rtx389, align 8
  %fld390 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %204, i32 0, i32 1
  %arrayidx391 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld390, i32 0, i64 0
  %rtwint392 = bitcast %union.rtunion_def* %arrayidx391 to i64*
  %205 = load i64, i64* %rtwint392, align 8
  %206 = load i64, i64* %smask, align 8
  %and393 = and i64 %205, %206
  %call394 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %202, i64 %and393)
  %207 = load i32, i32* %mode.addr, align 4
  %208 = load i64, i64* %smask, align 8
  %209 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %210 = load i32, i32* %next_select, align 4
  %call395 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %call394, i32 %207, i64 %208, %struct.rtx_def* %209, i32 %210)
  store %struct.rtx_def* %call395, %struct.rtx_def** %retval
  br label %return

if.end.396:                                       ; preds = %land.lhs.true.372, %land.lhs.true.363, %land.lhs.true.358, %if.end.350
  br label %sw.bb.397

sw.bb.397:                                        ; preds = %if.end.111, %if.end.396
  %211 = load i64, i64* %fuller_mask, align 8
  store i64 %211, i64* %mask.addr, align 8
  br label %binop

sw.bb.398:                                        ; preds = %if.end.111
  %212 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld399 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %212, i32 0, i32 1
  %arrayidx400 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld399, i32 0, i64 0
  %rtx401 = bitcast %union.rtunion_def* %arrayidx400 to %struct.rtx_def**
  %213 = load %struct.rtx_def*, %struct.rtx_def** %rtx401, align 8
  %214 = bitcast %struct.rtx_def* %213 to i32*
  %bf.load402 = load i32, i32* %214, align 8
  %bf.clear403 = and i32 %bf.load402, 65535
  %cmp404 = icmp eq i32 %bf.clear403, 54
  br i1 %cmp404, label %land.lhs.true.406, label %if.end.435

land.lhs.true.406:                                ; preds = %sw.bb.398
  %215 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld407 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %215, i32 0, i32 1
  %arrayidx408 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld407, i32 0, i64 0
  %rtx409 = bitcast %union.rtunion_def* %arrayidx408 to %struct.rtx_def**
  %216 = load %struct.rtx_def*, %struct.rtx_def** %rtx409, align 8
  %fld410 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %216, i32 0, i32 1
  %arrayidx411 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld410, i32 0, i64 0
  %rtwint412 = bitcast %union.rtunion_def* %arrayidx411 to i64*
  %217 = load i64, i64* %rtwint412, align 8
  %218 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld413 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %218, i32 0, i32 1
  %arrayidx414 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld413, i32 0, i64 0
  %rtx415 = bitcast %union.rtunion_def* %arrayidx414 to %struct.rtx_def**
  %219 = load %struct.rtx_def*, %struct.rtx_def** %rtx415, align 8
  %fld416 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %219, i32 0, i32 1
  %arrayidx417 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld416, i32 0, i64 0
  %rtwint418 = bitcast %union.rtunion_def* %arrayidx417 to i64*
  %220 = load i64, i64* %rtwint418, align 8
  %sub419 = sub nsw i64 0, %220
  %and420 = and i64 %217, %sub419
  %221 = load i64, i64* %mask.addr, align 8
  %cmp421 = icmp ugt i64 %and420, %221
  br i1 %cmp421, label %if.then.423, label %if.end.435

if.then.423:                                      ; preds = %land.lhs.true.406
  %222 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %223 = bitcast %struct.rtx_def* %222 to i32*
  %bf.load424 = load i32, i32* %223, align 8
  %bf.lshr425 = lshr i32 %bf.load424, 16
  %bf.clear426 = and i32 %bf.lshr425, 255
  %224 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld427 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %224, i32 0, i32 1
  %arrayidx428 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld427, i32 0, i64 1
  %rtx429 = bitcast %union.rtunion_def* %arrayidx428 to %struct.rtx_def**
  %225 = load %struct.rtx_def*, %struct.rtx_def** %rtx429, align 8
  %226 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %227 = bitcast %struct.rtx_def* %226 to i32*
  %bf.load430 = load i32, i32* %227, align 8
  %bf.lshr431 = lshr i32 %bf.load430, 16
  %bf.clear432 = and i32 %bf.lshr431, 255
  %call433 = call %struct.rtx_def* @simplify_gen_unary(i32 77, i32 %bf.clear426, %struct.rtx_def* %225, i32 %bf.clear432)
  store %struct.rtx_def* %call433, %struct.rtx_def** %x.addr, align 8
  %228 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %229 = load i32, i32* %mode.addr, align 4
  %230 = load i64, i64* %mask.addr, align 8
  %231 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %232 = load i32, i32* %next_select, align 4
  %call434 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %228, i32 %229, i64 %230, %struct.rtx_def* %231, i32 %232)
  store %struct.rtx_def* %call434, %struct.rtx_def** %retval
  br label %return

if.end.435:                                       ; preds = %land.lhs.true.406, %sw.bb.398
  %233 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld436 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %233, i32 0, i32 1
  %arrayidx437 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld436, i32 0, i64 0
  %rtx438 = bitcast %union.rtunion_def* %arrayidx437 to %struct.rtx_def**
  %234 = load %struct.rtx_def*, %struct.rtx_def** %rtx438, align 8
  %235 = bitcast %struct.rtx_def* %234 to i32*
  %bf.load439 = load i32, i32* %235, align 8
  %bf.clear440 = and i32 %bf.load439, 65535
  %cmp441 = icmp eq i32 %bf.clear440, 54
  br i1 %cmp441, label %land.lhs.true.443, label %if.end.471

land.lhs.true.443:                                ; preds = %if.end.435
  %236 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld444 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %236, i32 0, i32 1
  %arrayidx445 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld444, i32 0, i64 0
  %rtx446 = bitcast %union.rtunion_def* %arrayidx445 to %struct.rtx_def**
  %237 = load %struct.rtx_def*, %struct.rtx_def** %rtx446, align 8
  %fld447 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %237, i32 0, i32 1
  %arrayidx448 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld447, i32 0, i64 0
  %rtwint449 = bitcast %union.rtunion_def* %arrayidx448 to i64*
  %238 = load i64, i64* %rtwint449, align 8
  %239 = load i64, i64* %mask.addr, align 8
  %or450 = or i64 %238, %239
  %240 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld451 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %240, i32 0, i32 1
  %arrayidx452 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld451, i32 0, i64 0
  %rtx453 = bitcast %union.rtunion_def* %arrayidx452 to %struct.rtx_def**
  %241 = load %struct.rtx_def*, %struct.rtx_def** %rtx453, align 8
  %fld454 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %241, i32 0, i32 1
  %arrayidx455 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld454, i32 0, i64 0
  %rtwint456 = bitcast %union.rtunion_def* %arrayidx455 to i64*
  %242 = load i64, i64* %rtwint456, align 8
  %cmp457 = icmp eq i64 %or450, %242
  br i1 %cmp457, label %if.then.459, label %if.end.471

if.then.459:                                      ; preds = %land.lhs.true.443
  %243 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %244 = bitcast %struct.rtx_def* %243 to i32*
  %bf.load460 = load i32, i32* %244, align 8
  %bf.lshr461 = lshr i32 %bf.load460, 16
  %bf.clear462 = and i32 %bf.lshr461, 255
  %245 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld463 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %245, i32 0, i32 1
  %arrayidx464 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld463, i32 0, i64 1
  %rtx465 = bitcast %union.rtunion_def* %arrayidx464 to %struct.rtx_def**
  %246 = load %struct.rtx_def*, %struct.rtx_def** %rtx465, align 8
  %247 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %248 = bitcast %struct.rtx_def* %247 to i32*
  %bf.load466 = load i32, i32* %248, align 8
  %bf.lshr467 = lshr i32 %bf.load466, 16
  %bf.clear468 = and i32 %bf.lshr467, 255
  %call469 = call %struct.rtx_def* @simplify_gen_unary(i32 86, i32 %bf.clear462, %struct.rtx_def* %246, i32 %bf.clear468)
  store %struct.rtx_def* %call469, %struct.rtx_def** %x.addr, align 8
  %249 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %250 = load i32, i32* %mode.addr, align 4
  %251 = load i64, i64* %mask.addr, align 8
  %252 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %253 = load i32, i32* %next_select, align 4
  %call470 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %249, i32 %250, i64 %251, %struct.rtx_def* %252, i32 %253)
  store %struct.rtx_def* %call470, %struct.rtx_def** %retval
  br label %return

if.end.471:                                       ; preds = %land.lhs.true.443, %if.end.435
  %254 = load i64, i64* %fuller_mask, align 8
  store i64 %254, i64* %mask.addr, align 8
  br label %binop

sw.bb.472:                                        ; preds = %if.end.111, %if.end.111
  %255 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld473 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %255, i32 0, i32 1
  %arrayidx474 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld473, i32 0, i64 0
  %rtx475 = bitcast %union.rtunion_def* %arrayidx474 to %struct.rtx_def**
  %256 = load %struct.rtx_def*, %struct.rtx_def** %rtx475, align 8
  %257 = bitcast %struct.rtx_def* %256 to i32*
  %bf.load476 = load i32, i32* %257, align 8
  %bf.clear477 = and i32 %bf.load476, 65535
  %cmp478 = icmp eq i32 %bf.clear477, 90
  br i1 %cmp478, label %land.lhs.true.480, label %if.end.610

land.lhs.true.480:                                ; preds = %sw.bb.472
  %258 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld481 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %258, i32 0, i32 1
  %arrayidx482 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld481, i32 0, i64 0
  %rtx483 = bitcast %union.rtunion_def* %arrayidx482 to %struct.rtx_def**
  %259 = load %struct.rtx_def*, %struct.rtx_def** %rtx483, align 8
  %fld484 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %259, i32 0, i32 1
  %arrayidx485 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld484, i32 0, i64 1
  %rtx486 = bitcast %union.rtunion_def* %arrayidx485 to %struct.rtx_def**
  %260 = load %struct.rtx_def*, %struct.rtx_def** %rtx486, align 8
  %261 = bitcast %struct.rtx_def* %260 to i32*
  %bf.load487 = load i32, i32* %261, align 8
  %bf.clear488 = and i32 %bf.load487, 65535
  %cmp489 = icmp eq i32 %bf.clear488, 54
  br i1 %cmp489, label %land.lhs.true.491, label %if.end.610

land.lhs.true.491:                                ; preds = %land.lhs.true.480
  %262 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld492 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %262, i32 0, i32 1
  %arrayidx493 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld492, i32 0, i64 0
  %rtx494 = bitcast %union.rtunion_def* %arrayidx493 to %struct.rtx_def**
  %263 = load %struct.rtx_def*, %struct.rtx_def** %rtx494, align 8
  %fld495 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %263, i32 0, i32 1
  %arrayidx496 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld495, i32 0, i64 1
  %rtx497 = bitcast %union.rtunion_def* %arrayidx496 to %struct.rtx_def**
  %264 = load %struct.rtx_def*, %struct.rtx_def** %rtx497, align 8
  %fld498 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %264, i32 0, i32 1
  %arrayidx499 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld498, i32 0, i64 0
  %rtwint500 = bitcast %union.rtunion_def* %arrayidx499 to i64*
  %265 = load i64, i64* %rtwint500, align 8
  %cmp501 = icmp sge i64 %265, 0
  br i1 %cmp501, label %land.lhs.true.503, label %if.end.610

land.lhs.true.503:                                ; preds = %land.lhs.true.491
  %266 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld504 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %266, i32 0, i32 1
  %arrayidx505 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld504, i32 0, i64 0
  %rtx506 = bitcast %union.rtunion_def* %arrayidx505 to %struct.rtx_def**
  %267 = load %struct.rtx_def*, %struct.rtx_def** %rtx506, align 8
  %fld507 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %267, i32 0, i32 1
  %arrayidx508 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld507, i32 0, i64 1
  %rtx509 = bitcast %union.rtunion_def* %arrayidx508 to %struct.rtx_def**
  %268 = load %struct.rtx_def*, %struct.rtx_def** %rtx509, align 8
  %fld510 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %268, i32 0, i32 1
  %arrayidx511 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld510, i32 0, i64 0
  %rtwint512 = bitcast %union.rtunion_def* %arrayidx511 to i64*
  %269 = load i64, i64* %rtwint512, align 8
  %cmp513 = icmp slt i64 %269, 64
  br i1 %cmp513, label %land.lhs.true.515, label %if.end.610

land.lhs.true.515:                                ; preds = %land.lhs.true.503
  %270 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld516 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %270, i32 0, i32 1
  %arrayidx517 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld516, i32 0, i64 1
  %rtx518 = bitcast %union.rtunion_def* %arrayidx517 to %struct.rtx_def**
  %271 = load %struct.rtx_def*, %struct.rtx_def** %rtx518, align 8
  %272 = bitcast %struct.rtx_def* %271 to i32*
  %bf.load519 = load i32, i32* %272, align 8
  %bf.clear520 = and i32 %bf.load519, 65535
  %cmp521 = icmp eq i32 %bf.clear520, 54
  br i1 %cmp521, label %land.lhs.true.523, label %if.end.610

land.lhs.true.523:                                ; preds = %land.lhs.true.515
  %273 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld524 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %273, i32 0, i32 1
  %arrayidx525 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld524, i32 0, i64 0
  %rtx526 = bitcast %union.rtunion_def* %arrayidx525 to %struct.rtx_def**
  %274 = load %struct.rtx_def*, %struct.rtx_def** %rtx526, align 8
  %fld527 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %274, i32 0, i32 1
  %arrayidx528 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld527, i32 0, i64 1
  %rtx529 = bitcast %union.rtunion_def* %arrayidx528 to %struct.rtx_def**
  %275 = load %struct.rtx_def*, %struct.rtx_def** %rtx529, align 8
  %fld530 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %275, i32 0, i32 1
  %arrayidx531 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld530, i32 0, i64 0
  %rtwint532 = bitcast %union.rtunion_def* %arrayidx531 to i64*
  %276 = load i64, i64* %rtwint532, align 8
  %277 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld533 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %277, i32 0, i32 1
  %arrayidx534 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld533, i32 0, i64 1
  %rtx535 = bitcast %union.rtunion_def* %arrayidx534 to %struct.rtx_def**
  %278 = load %struct.rtx_def*, %struct.rtx_def** %rtx535, align 8
  %fld536 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %278, i32 0, i32 1
  %arrayidx537 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld536, i32 0, i64 0
  %rtwint538 = bitcast %union.rtunion_def* %arrayidx537 to i64*
  %279 = load i64, i64* %rtwint538, align 8
  %call539 = call i32 @floor_log2_wide(i64 %279)
  %conv540 = sext i32 %call539 to i64
  %add541 = add nsw i64 %276, %conv540
  %280 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %281 = bitcast %struct.rtx_def* %280 to i32*
  %bf.load542 = load i32, i32* %281, align 8
  %bf.lshr543 = lshr i32 %bf.load542, 16
  %bf.clear544 = and i32 %bf.lshr543, 255
  %idxprom545 = sext i32 %bf.clear544 to i64
  %arrayidx546 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom545
  %282 = load i16, i16* %arrayidx546, align 2
  %conv547 = zext i16 %282 to i64
  %cmp548 = icmp slt i64 %add541, %conv547
  br i1 %cmp548, label %land.lhs.true.550, label %if.end.610

land.lhs.true.550:                                ; preds = %land.lhs.true.523
  %283 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld551 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %283, i32 0, i32 1
  %arrayidx552 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld551, i32 0, i64 1
  %rtx553 = bitcast %union.rtunion_def* %arrayidx552 to %struct.rtx_def**
  %284 = load %struct.rtx_def*, %struct.rtx_def** %rtx553, align 8
  %fld554 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %284, i32 0, i32 1
  %arrayidx555 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld554, i32 0, i64 0
  %rtwint556 = bitcast %union.rtunion_def* %arrayidx555 to i64*
  %285 = load i64, i64* %rtwint556, align 8
  %286 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld557 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %286, i32 0, i32 1
  %arrayidx558 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld557, i32 0, i64 0
  %rtx559 = bitcast %union.rtunion_def* %arrayidx558 to %struct.rtx_def**
  %287 = load %struct.rtx_def*, %struct.rtx_def** %rtx559, align 8
  %288 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %289 = bitcast %struct.rtx_def* %288 to i32*
  %bf.load560 = load i32, i32* %289, align 8
  %bf.lshr561 = lshr i32 %bf.load560, 16
  %bf.clear562 = and i32 %bf.lshr561, 255
  %call563 = call i64 @nonzero_bits(%struct.rtx_def* %287, i32 %bf.clear562)
  %neg564 = xor i64 %call563, -1
  %and565 = and i64 %285, %neg564
  %cmp566 = icmp eq i64 %and565, 0
  br i1 %cmp566, label %if.then.568, label %if.end.610

if.then.568:                                      ; preds = %land.lhs.true.550
  %290 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld569 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %290, i32 0, i32 1
  %arrayidx570 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld569, i32 0, i64 1
  %rtx571 = bitcast %union.rtunion_def* %arrayidx570 to %struct.rtx_def**
  %291 = load %struct.rtx_def*, %struct.rtx_def** %rtx571, align 8
  %fld572 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %291, i32 0, i32 1
  %arrayidx573 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld572, i32 0, i64 0
  %rtwint574 = bitcast %union.rtunion_def* %arrayidx573 to i64*
  %292 = load i64, i64* %rtwint574, align 8
  %293 = load i64, i64* %mask.addr, align 8
  %and575 = and i64 %292, %293
  %294 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld576 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %294, i32 0, i32 1
  %arrayidx577 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld576, i32 0, i64 0
  %rtx578 = bitcast %union.rtunion_def* %arrayidx577 to %struct.rtx_def**
  %295 = load %struct.rtx_def*, %struct.rtx_def** %rtx578, align 8
  %fld579 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %295, i32 0, i32 1
  %arrayidx580 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld579, i32 0, i64 1
  %rtx581 = bitcast %union.rtunion_def* %arrayidx580 to %struct.rtx_def**
  %296 = load %struct.rtx_def*, %struct.rtx_def** %rtx581, align 8
  %fld582 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %296, i32 0, i32 1
  %arrayidx583 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld582, i32 0, i64 0
  %rtwint584 = bitcast %union.rtunion_def* %arrayidx583 to i64*
  %297 = load i64, i64* %rtwint584, align 8
  %shl585 = shl i64 %and575, %297
  %call586 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %shl585)
  store %struct.rtx_def* %call586, %struct.rtx_def** %temp, align 8
  %298 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %299 = bitcast %struct.rtx_def* %298 to i32*
  %bf.load587 = load i32, i32* %299, align 8
  %bf.clear588 = and i32 %bf.load587, 65535
  %300 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %301 = bitcast %struct.rtx_def* %300 to i32*
  %bf.load589 = load i32, i32* %301, align 8
  %bf.lshr590 = lshr i32 %bf.load589, 16
  %bf.clear591 = and i32 %bf.lshr590, 255
  %302 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld592 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %302, i32 0, i32 1
  %arrayidx593 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld592, i32 0, i64 0
  %rtx594 = bitcast %union.rtunion_def* %arrayidx593 to %struct.rtx_def**
  %303 = load %struct.rtx_def*, %struct.rtx_def** %rtx594, align 8
  %fld595 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %303, i32 0, i32 1
  %arrayidx596 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld595, i32 0, i64 0
  %rtx597 = bitcast %union.rtunion_def* %arrayidx596 to %struct.rtx_def**
  %304 = load %struct.rtx_def*, %struct.rtx_def** %rtx597, align 8
  %305 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %call598 = call %struct.rtx_def* @gen_binary(i32 %bf.clear588, i32 %bf.clear591, %struct.rtx_def* %304, %struct.rtx_def* %305)
  store %struct.rtx_def* %call598, %struct.rtx_def** %temp, align 8
  %306 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %307 = bitcast %struct.rtx_def* %306 to i32*
  %bf.load599 = load i32, i32* %307, align 8
  %bf.lshr600 = lshr i32 %bf.load599, 16
  %bf.clear601 = and i32 %bf.lshr600, 255
  %308 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %309 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld602 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %309, i32 0, i32 1
  %arrayidx603 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld602, i32 0, i64 0
  %rtx604 = bitcast %union.rtunion_def* %arrayidx603 to %struct.rtx_def**
  %310 = load %struct.rtx_def*, %struct.rtx_def** %rtx604, align 8
  %fld605 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %310, i32 0, i32 1
  %arrayidx606 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld605, i32 0, i64 1
  %rtx607 = bitcast %union.rtunion_def* %arrayidx606 to %struct.rtx_def**
  %311 = load %struct.rtx_def*, %struct.rtx_def** %rtx607, align 8
  %call608 = call %struct.rtx_def* @gen_binary(i32 90, i32 %bf.clear601, %struct.rtx_def* %308, %struct.rtx_def* %311)
  store %struct.rtx_def* %call608, %struct.rtx_def** %x.addr, align 8
  %312 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %313 = load i32, i32* %mode.addr, align 4
  %314 = load i64, i64* %mask.addr, align 8
  %315 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %316 = load i32, i32* %next_select, align 4
  %call609 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %312, i32 %313, i64 %314, %struct.rtx_def* %315, i32 %316)
  store %struct.rtx_def* %call609, %struct.rtx_def** %retval
  br label %return

if.end.610:                                       ; preds = %land.lhs.true.550, %land.lhs.true.523, %land.lhs.true.515, %land.lhs.true.503, %land.lhs.true.491, %land.lhs.true.480, %sw.bb.472
  br label %binop

binop:                                            ; preds = %if.end.610, %if.end.471, %sw.bb.397, %if.end.331
  %317 = load i32, i32* %op_mode, align 4
  %318 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld611 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %318, i32 0, i32 1
  %arrayidx612 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld611, i32 0, i64 0
  %rtx613 = bitcast %union.rtunion_def* %arrayidx612 to %struct.rtx_def**
  %319 = load %struct.rtx_def*, %struct.rtx_def** %rtx613, align 8
  %320 = load i32, i32* %mode.addr, align 4
  %321 = load i64, i64* %mask.addr, align 8
  %322 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %323 = load i32, i32* %next_select, align 4
  %call614 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %319, i32 %320, i64 %321, %struct.rtx_def* %322, i32 %323)
  %call615 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %317, %struct.rtx_def* %call614)
  store %struct.rtx_def* %call615, %struct.rtx_def** %op0, align 8
  %324 = load i32, i32* %op_mode, align 4
  %325 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld616 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %325, i32 0, i32 1
  %arrayidx617 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld616, i32 0, i64 1
  %rtx618 = bitcast %union.rtunion_def* %arrayidx617 to %struct.rtx_def**
  %326 = load %struct.rtx_def*, %struct.rtx_def** %rtx618, align 8
  %327 = load i32, i32* %mode.addr, align 4
  %328 = load i64, i64* %mask.addr, align 8
  %329 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %330 = load i32, i32* %next_select, align 4
  %call619 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %326, i32 %327, i64 %328, %struct.rtx_def* %329, i32 %330)
  %call620 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %324, %struct.rtx_def* %call619)
  store %struct.rtx_def* %call620, %struct.rtx_def** %op1, align 8
  %331 = load i32, i32* %op_mode, align 4
  %332 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %333 = bitcast %struct.rtx_def* %332 to i32*
  %bf.load621 = load i32, i32* %333, align 8
  %bf.lshr622 = lshr i32 %bf.load621, 16
  %bf.clear623 = and i32 %bf.lshr622, 255
  %cmp624 = icmp ne i32 %331, %bf.clear623
  br i1 %cmp624, label %if.then.638, label %lor.lhs.false.626

lor.lhs.false.626:                                ; preds = %binop
  %334 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %335 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld627 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %335, i32 0, i32 1
  %arrayidx628 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld627, i32 0, i64 0
  %rtx629 = bitcast %union.rtunion_def* %arrayidx628 to %struct.rtx_def**
  %336 = load %struct.rtx_def*, %struct.rtx_def** %rtx629, align 8
  %cmp630 = icmp ne %struct.rtx_def* %334, %336
  br i1 %cmp630, label %if.then.638, label %lor.lhs.false.632

lor.lhs.false.632:                                ; preds = %lor.lhs.false.626
  %337 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %338 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld633 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %338, i32 0, i32 1
  %arrayidx634 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld633, i32 0, i64 1
  %rtx635 = bitcast %union.rtunion_def* %arrayidx634 to %struct.rtx_def**
  %339 = load %struct.rtx_def*, %struct.rtx_def** %rtx635, align 8
  %cmp636 = icmp ne %struct.rtx_def* %337, %339
  br i1 %cmp636, label %if.then.638, label %if.end.640

if.then.638:                                      ; preds = %lor.lhs.false.632, %lor.lhs.false.626, %binop
  %340 = load i32, i32* %code, align 4
  %341 = load i32, i32* %op_mode, align 4
  %342 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %343 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call639 = call %struct.rtx_def* @gen_binary(i32 %340, i32 %341, %struct.rtx_def* %342, %struct.rtx_def* %343)
  store %struct.rtx_def* %call639, %struct.rtx_def** %x.addr, align 8
  br label %if.end.640

if.end.640:                                       ; preds = %if.then.638, %lor.lhs.false.632
  br label %sw.epilog

sw.bb.641:                                        ; preds = %if.end.111
  %344 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld642 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %344, i32 0, i32 1
  %arrayidx643 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld642, i32 0, i64 1
  %rtx644 = bitcast %union.rtunion_def* %arrayidx643 to %struct.rtx_def**
  %345 = load %struct.rtx_def*, %struct.rtx_def** %rtx644, align 8
  %346 = bitcast %struct.rtx_def* %345 to i32*
  %bf.load645 = load i32, i32* %346, align 8
  %bf.clear646 = and i32 %bf.load645, 65535
  %cmp647 = icmp eq i32 %bf.clear646, 54
  br i1 %cmp647, label %land.lhs.true.649, label %land.lhs.true.670

land.lhs.true.649:                                ; preds = %sw.bb.641
  %347 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld650 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %347, i32 0, i32 1
  %arrayidx651 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld650, i32 0, i64 1
  %rtx652 = bitcast %union.rtunion_def* %arrayidx651 to %struct.rtx_def**
  %348 = load %struct.rtx_def*, %struct.rtx_def** %rtx652, align 8
  %fld653 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %348, i32 0, i32 1
  %arrayidx654 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld653, i32 0, i64 0
  %rtwint655 = bitcast %union.rtunion_def* %arrayidx654 to i64*
  %349 = load i64, i64* %rtwint655, align 8
  %cmp656 = icmp sge i64 %349, 0
  br i1 %cmp656, label %land.lhs.true.658, label %land.lhs.true.670

land.lhs.true.658:                                ; preds = %land.lhs.true.649
  %350 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld659 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %350, i32 0, i32 1
  %arrayidx660 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld659, i32 0, i64 1
  %rtx661 = bitcast %union.rtunion_def* %arrayidx660 to %struct.rtx_def**
  %351 = load %struct.rtx_def*, %struct.rtx_def** %rtx661, align 8
  %fld662 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %351, i32 0, i32 1
  %arrayidx663 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld662, i32 0, i64 0
  %rtwint664 = bitcast %union.rtunion_def* %arrayidx663 to i64*
  %352 = load i64, i64* %rtwint664, align 8
  %353 = load i32, i32* %mode.addr, align 4
  %idxprom665 = sext i32 %353 to i64
  %arrayidx666 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom665
  %354 = load i16, i16* %arrayidx666, align 2
  %conv667 = zext i16 %354 to i64
  %cmp668 = icmp slt i64 %352, %conv667
  br i1 %cmp668, label %if.end.696, label %land.lhs.true.670

land.lhs.true.670:                                ; preds = %land.lhs.true.658, %land.lhs.true.649, %sw.bb.641
  %355 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld671 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %355, i32 0, i32 1
  %arrayidx672 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld671, i32 0, i64 1
  %rtx673 = bitcast %union.rtunion_def* %arrayidx672 to %struct.rtx_def**
  %356 = load %struct.rtx_def*, %struct.rtx_def** %rtx673, align 8
  %357 = bitcast %struct.rtx_def* %356 to i32*
  %bf.load674 = load i32, i32* %357, align 8
  %bf.lshr675 = lshr i32 %bf.load674, 16
  %bf.clear676 = and i32 %bf.lshr675, 255
  %cmp677 = icmp ne i32 %bf.clear676, 0
  br i1 %cmp677, label %land.lhs.true.679, label %if.then.695

land.lhs.true.679:                                ; preds = %land.lhs.true.670
  %358 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld680 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %358, i32 0, i32 1
  %arrayidx681 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld680, i32 0, i64 1
  %rtx682 = bitcast %union.rtunion_def* %arrayidx681 to %struct.rtx_def**
  %359 = load %struct.rtx_def*, %struct.rtx_def** %rtx682, align 8
  %360 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld683 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %360, i32 0, i32 1
  %arrayidx684 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld683, i32 0, i64 1
  %rtx685 = bitcast %union.rtunion_def* %arrayidx684 to %struct.rtx_def**
  %361 = load %struct.rtx_def*, %struct.rtx_def** %rtx685, align 8
  %362 = bitcast %struct.rtx_def* %361 to i32*
  %bf.load686 = load i32, i32* %362, align 8
  %bf.lshr687 = lshr i32 %bf.load686, 16
  %bf.clear688 = and i32 %bf.lshr687, 255
  %call689 = call i64 @nonzero_bits(%struct.rtx_def* %359, i32 %bf.clear688)
  %363 = load i32, i32* %mode.addr, align 4
  %idxprom690 = sext i32 %363 to i64
  %arrayidx691 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom690
  %364 = load i16, i16* %arrayidx691, align 2
  %conv692 = zext i16 %364 to i64
  %cmp693 = icmp ult i64 %call689, %conv692
  br i1 %cmp693, label %if.end.696, label %if.then.695

if.then.695:                                      ; preds = %land.lhs.true.679, %land.lhs.true.670
  br label %sw.epilog

if.end.696:                                       ; preds = %land.lhs.true.679, %land.lhs.true.658
  %365 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld697 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %365, i32 0, i32 1
  %arrayidx698 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld697, i32 0, i64 1
  %rtx699 = bitcast %union.rtunion_def* %arrayidx698 to %struct.rtx_def**
  %366 = load %struct.rtx_def*, %struct.rtx_def** %rtx699, align 8
  %367 = bitcast %struct.rtx_def* %366 to i32*
  %bf.load700 = load i32, i32* %367, align 8
  %bf.clear701 = and i32 %bf.load700, 65535
  %cmp702 = icmp eq i32 %bf.clear701, 54
  br i1 %cmp702, label %land.lhs.true.704, label %if.else.738

land.lhs.true.704:                                ; preds = %if.end.696
  %368 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld705 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %368, i32 0, i32 1
  %arrayidx706 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld705, i32 0, i64 1
  %rtx707 = bitcast %union.rtunion_def* %arrayidx706 to %struct.rtx_def**
  %369 = load %struct.rtx_def*, %struct.rtx_def** %rtx707, align 8
  %fld708 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %369, i32 0, i32 1
  %arrayidx709 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld708, i32 0, i64 0
  %rtwint710 = bitcast %union.rtunion_def* %arrayidx709 to i64*
  %370 = load i64, i64* %rtwint710, align 8
  %cmp711 = icmp sge i64 %370, 0
  br i1 %cmp711, label %land.lhs.true.713, label %if.else.738

land.lhs.true.713:                                ; preds = %land.lhs.true.704
  %371 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld714 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %371, i32 0, i32 1
  %arrayidx715 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld714, i32 0, i64 1
  %rtx716 = bitcast %union.rtunion_def* %arrayidx715 to %struct.rtx_def**
  %372 = load %struct.rtx_def*, %struct.rtx_def** %rtx716, align 8
  %fld717 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %372, i32 0, i32 1
  %arrayidx718 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld717, i32 0, i64 0
  %rtwint719 = bitcast %union.rtunion_def* %arrayidx718 to i64*
  %373 = load i64, i64* %rtwint719, align 8
  %374 = load i32, i32* %op_mode, align 4
  %idxprom720 = sext i32 %374 to i64
  %arrayidx721 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom720
  %375 = load i16, i16* %arrayidx721, align 2
  %conv722 = zext i16 %375 to i64
  %cmp723 = icmp slt i64 %373, %conv722
  br i1 %cmp723, label %land.lhs.true.725, label %if.else.738

land.lhs.true.725:                                ; preds = %land.lhs.true.713
  %376 = load i32, i32* %op_mode, align 4
  %idxprom726 = sext i32 %376 to i64
  %arrayidx727 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom726
  %377 = load i16, i16* %arrayidx727, align 2
  %conv728 = zext i16 %377 to i32
  %cmp729 = icmp sle i32 %conv728, 64
  br i1 %cmp729, label %if.then.731, label %if.else.738

if.then.731:                                      ; preds = %land.lhs.true.725
  %378 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld732 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %378, i32 0, i32 1
  %arrayidx733 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld732, i32 0, i64 1
  %rtx734 = bitcast %union.rtunion_def* %arrayidx733 to %struct.rtx_def**
  %379 = load %struct.rtx_def*, %struct.rtx_def** %rtx734, align 8
  %fld735 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %379, i32 0, i32 1
  %arrayidx736 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld735, i32 0, i64 0
  %rtwint737 = bitcast %union.rtunion_def* %arrayidx736 to i64*
  %380 = load i64, i64* %rtwint737, align 8
  %381 = load i64, i64* %mask.addr, align 8
  %shr = lshr i64 %381, %380
  store i64 %shr, i64* %mask.addr, align 8
  br label %if.end.739

if.else.738:                                      ; preds = %land.lhs.true.725, %land.lhs.true.713, %land.lhs.true.704, %if.end.696
  %382 = load i64, i64* %fuller_mask, align 8
  store i64 %382, i64* %mask.addr, align 8
  br label %if.end.739

if.end.739:                                       ; preds = %if.else.738, %if.then.731
  %383 = load i32, i32* %op_mode, align 4
  %384 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld740 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %384, i32 0, i32 1
  %arrayidx741 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld740, i32 0, i64 0
  %rtx742 = bitcast %union.rtunion_def* %arrayidx741 to %struct.rtx_def**
  %385 = load %struct.rtx_def*, %struct.rtx_def** %rtx742, align 8
  %386 = load i32, i32* %op_mode, align 4
  %387 = load i64, i64* %mask.addr, align 8
  %388 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %389 = load i32, i32* %next_select, align 4
  %call743 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %385, i32 %386, i64 %387, %struct.rtx_def* %388, i32 %389)
  %call744 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %383, %struct.rtx_def* %call743)
  store %struct.rtx_def* %call744, %struct.rtx_def** %op0, align 8
  %390 = load i32, i32* %op_mode, align 4
  %391 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %392 = bitcast %struct.rtx_def* %391 to i32*
  %bf.load745 = load i32, i32* %392, align 8
  %bf.lshr746 = lshr i32 %bf.load745, 16
  %bf.clear747 = and i32 %bf.lshr746, 255
  %cmp748 = icmp ne i32 %390, %bf.clear747
  br i1 %cmp748, label %if.then.756, label %lor.lhs.false.750

lor.lhs.false.750:                                ; preds = %if.end.739
  %393 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %394 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld751 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %394, i32 0, i32 1
  %arrayidx752 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld751, i32 0, i64 0
  %rtx753 = bitcast %union.rtunion_def* %arrayidx752 to %struct.rtx_def**
  %395 = load %struct.rtx_def*, %struct.rtx_def** %rtx753, align 8
  %cmp754 = icmp ne %struct.rtx_def* %393, %395
  br i1 %cmp754, label %if.then.756, label %if.end.761

if.then.756:                                      ; preds = %lor.lhs.false.750, %if.end.739
  %396 = load i32, i32* %code, align 4
  %397 = load i32, i32* %op_mode, align 4
  %398 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %399 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld757 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %399, i32 0, i32 1
  %arrayidx758 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld757, i32 0, i64 1
  %rtx759 = bitcast %union.rtunion_def* %arrayidx758 to %struct.rtx_def**
  %400 = load %struct.rtx_def*, %struct.rtx_def** %rtx759, align 8
  %call760 = call %struct.rtx_def* @gen_binary(i32 %396, i32 %397, %struct.rtx_def* %398, %struct.rtx_def* %400)
  store %struct.rtx_def* %call760, %struct.rtx_def** %x.addr, align 8
  br label %if.end.761

if.end.761:                                       ; preds = %if.then.756, %lor.lhs.false.750
  br label %sw.epilog

sw.bb.762:                                        ; preds = %if.end.111
  %401 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld763 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %401, i32 0, i32 1
  %arrayidx764 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld763, i32 0, i64 1
  %rtx765 = bitcast %union.rtunion_def* %arrayidx764 to %struct.rtx_def**
  %402 = load %struct.rtx_def*, %struct.rtx_def** %rtx765, align 8
  %403 = bitcast %struct.rtx_def* %402 to i32*
  %bf.load766 = load i32, i32* %403, align 8
  %bf.clear767 = and i32 %bf.load766, 65535
  %cmp768 = icmp eq i32 %bf.clear767, 54
  br i1 %cmp768, label %land.lhs.true.770, label %if.end.831

land.lhs.true.770:                                ; preds = %sw.bb.762
  %404 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld771 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %404, i32 0, i32 1
  %arrayidx772 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld771, i32 0, i64 1
  %rtx773 = bitcast %union.rtunion_def* %arrayidx772 to %struct.rtx_def**
  %405 = load %struct.rtx_def*, %struct.rtx_def** %rtx773, align 8
  %fld774 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %405, i32 0, i32 1
  %arrayidx775 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld774, i32 0, i64 0
  %rtwint776 = bitcast %union.rtunion_def* %arrayidx775 to i64*
  %406 = load i64, i64* %rtwint776, align 8
  %cmp777 = icmp slt i64 %406, 64
  br i1 %cmp777, label %land.lhs.true.779, label %if.end.831

land.lhs.true.779:                                ; preds = %land.lhs.true.770
  %407 = load i32, i32* %op_mode, align 4
  %idxprom780 = sext i32 %407 to i64
  %arrayidx781 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom780
  %408 = load i16, i16* %arrayidx781, align 2
  %conv782 = zext i16 %408 to i32
  %cmp783 = icmp sle i32 %conv782, 64
  br i1 %cmp783, label %if.then.785, label %if.end.831

if.then.785:                                      ; preds = %land.lhs.true.779
  %409 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld786 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %409, i32 0, i32 1
  %arrayidx787 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld786, i32 0, i64 0
  %rtx788 = bitcast %union.rtunion_def* %arrayidx787 to %struct.rtx_def**
  %410 = load %struct.rtx_def*, %struct.rtx_def** %rtx788, align 8
  store %struct.rtx_def* %410, %struct.rtx_def** %inner, align 8
  %411 = load i64, i64* %mask.addr, align 8
  %412 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld789 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %412, i32 0, i32 1
  %arrayidx790 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld789, i32 0, i64 1
  %rtx791 = bitcast %union.rtunion_def* %arrayidx790 to %struct.rtx_def**
  %413 = load %struct.rtx_def*, %struct.rtx_def** %rtx791, align 8
  %fld792 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %413, i32 0, i32 1
  %arrayidx793 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld792, i32 0, i64 0
  %rtwint794 = bitcast %union.rtunion_def* %arrayidx793 to i64*
  %414 = load i64, i64* %rtwint794, align 8
  %shl795 = shl i64 %411, %414
  store i64 %shl795, i64* %inner_mask, align 8
  %415 = load i32, i32* %op_mode, align 4
  %idxprom796 = sext i32 %415 to i64
  %arrayidx797 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom796
  %416 = load i16, i16* %arrayidx797, align 2
  %conv798 = zext i16 %416 to i32
  %cmp799 = icmp sgt i32 %conv798, 64
  br i1 %cmp799, label %if.then.808, label %lor.lhs.false.801

lor.lhs.false.801:                                ; preds = %if.then.785
  %417 = load i64, i64* %inner_mask, align 8
  %418 = load i32, i32* %op_mode, align 4
  %idxprom802 = sext i32 %418 to i64
  %arrayidx803 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom802
  %419 = load i64, i64* %arrayidx803, align 8
  %neg804 = xor i64 %419, -1
  %and805 = and i64 %417, %neg804
  %cmp806 = icmp ne i64 %and805, 0
  br i1 %cmp806, label %if.then.808, label %if.end.812

if.then.808:                                      ; preds = %lor.lhs.false.801, %if.then.785
  %420 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %421 = bitcast %struct.rtx_def* %420 to i32*
  %bf.load809 = load i32, i32* %421, align 8
  %bf.lshr810 = lshr i32 %bf.load809, 16
  %bf.clear811 = and i32 %bf.lshr810, 255
  store i32 %bf.clear811, i32* %op_mode, align 4
  br label %if.end.812

if.end.812:                                       ; preds = %if.then.808, %lor.lhs.false.801
  %422 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %423 = load i32, i32* %op_mode, align 4
  %424 = load i64, i64* %inner_mask, align 8
  %425 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %426 = load i32, i32* %next_select, align 4
  %call813 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %422, i32 %423, i64 %424, %struct.rtx_def* %425, i32 %426)
  store %struct.rtx_def* %call813, %struct.rtx_def** %inner, align 8
  %427 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %428 = bitcast %struct.rtx_def* %427 to i32*
  %bf.load814 = load i32, i32* %428, align 8
  %bf.lshr815 = lshr i32 %bf.load814, 16
  %bf.clear816 = and i32 %bf.lshr815, 255
  %429 = load i32, i32* %op_mode, align 4
  %cmp817 = icmp ne i32 %bf.clear816, %429
  br i1 %cmp817, label %if.then.825, label %lor.lhs.false.819

lor.lhs.false.819:                                ; preds = %if.end.812
  %430 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %431 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld820 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %431, i32 0, i32 1
  %arrayidx821 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld820, i32 0, i64 0
  %rtx822 = bitcast %union.rtunion_def* %arrayidx821 to %struct.rtx_def**
  %432 = load %struct.rtx_def*, %struct.rtx_def** %rtx822, align 8
  %cmp823 = icmp ne %struct.rtx_def* %430, %432
  br i1 %cmp823, label %if.then.825, label %if.end.830

if.then.825:                                      ; preds = %lor.lhs.false.819, %if.end.812
  %433 = load i32, i32* %op_mode, align 4
  %434 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %435 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld826 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %435, i32 0, i32 1
  %arrayidx827 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld826, i32 0, i64 1
  %rtx828 = bitcast %union.rtunion_def* %arrayidx827 to %struct.rtx_def**
  %436 = load %struct.rtx_def*, %struct.rtx_def** %rtx828, align 8
  %call829 = call %struct.rtx_def* @gen_binary(i32 90, i32 %433, %struct.rtx_def* %434, %struct.rtx_def* %436)
  store %struct.rtx_def* %call829, %struct.rtx_def** %x.addr, align 8
  br label %if.end.830

if.end.830:                                       ; preds = %if.then.825, %lor.lhs.false.819
  br label %if.end.831

if.end.831:                                       ; preds = %if.end.830, %land.lhs.true.779, %land.lhs.true.770, %sw.bb.762
  %437 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %438 = bitcast %struct.rtx_def* %437 to i32*
  %bf.load832 = load i32, i32* %438, align 8
  %bf.clear833 = and i32 %bf.load832, 65535
  %cmp834 = icmp eq i32 %bf.clear833, 90
  br i1 %cmp834, label %land.lhs.true.836, label %if.end.929

land.lhs.true.836:                                ; preds = %if.end.831
  %439 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld837 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %439, i32 0, i32 1
  %arrayidx838 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld837, i32 0, i64 1
  %rtx839 = bitcast %union.rtunion_def* %arrayidx838 to %struct.rtx_def**
  %440 = load %struct.rtx_def*, %struct.rtx_def** %rtx839, align 8
  %441 = bitcast %struct.rtx_def* %440 to i32*
  %bf.load840 = load i32, i32* %441, align 8
  %bf.clear841 = and i32 %bf.load840, 65535
  %cmp842 = icmp eq i32 %bf.clear841, 54
  br i1 %cmp842, label %land.lhs.true.844, label %if.end.929

land.lhs.true.844:                                ; preds = %land.lhs.true.836
  %442 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld845 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %442, i32 0, i32 1
  %arrayidx846 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld845, i32 0, i64 1
  %rtx847 = bitcast %union.rtunion_def* %arrayidx846 to %struct.rtx_def**
  %443 = load %struct.rtx_def*, %struct.rtx_def** %rtx847, align 8
  %fld848 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %443, i32 0, i32 1
  %arrayidx849 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld848, i32 0, i64 0
  %rtwint850 = bitcast %union.rtunion_def* %arrayidx849 to i64*
  %444 = load i64, i64* %rtwint850, align 8
  %445 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld851 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %445, i32 0, i32 1
  %arrayidx852 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld851, i32 0, i64 0
  %rtx853 = bitcast %union.rtunion_def* %arrayidx852 to %struct.rtx_def**
  %446 = load %struct.rtx_def*, %struct.rtx_def** %rtx853, align 8
  %447 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld854 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %447, i32 0, i32 1
  %arrayidx855 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld854, i32 0, i64 0
  %rtx856 = bitcast %union.rtunion_def* %arrayidx855 to %struct.rtx_def**
  %448 = load %struct.rtx_def*, %struct.rtx_def** %rtx856, align 8
  %449 = bitcast %struct.rtx_def* %448 to i32*
  %bf.load857 = load i32, i32* %449, align 8
  %bf.lshr858 = lshr i32 %bf.load857, 16
  %bf.clear859 = and i32 %bf.lshr858, 255
  %call860 = call i32 @num_sign_bit_copies(%struct.rtx_def* %446, i32 %bf.clear859)
  %conv861 = zext i32 %call860 to i64
  %add862 = add nsw i64 %444, %conv861
  %450 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %451 = bitcast %struct.rtx_def* %450 to i32*
  %bf.load863 = load i32, i32* %451, align 8
  %bf.lshr864 = lshr i32 %bf.load863, 16
  %bf.clear865 = and i32 %bf.lshr864, 255
  %idxprom866 = sext i32 %bf.clear865 to i64
  %arrayidx867 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom866
  %452 = load i16, i16* %arrayidx867, align 2
  %conv868 = zext i16 %452 to i64
  %cmp869 = icmp sge i64 %add862, %conv868
  br i1 %cmp869, label %land.lhs.true.871, label %if.end.929

land.lhs.true.871:                                ; preds = %land.lhs.true.844
  %453 = load i64, i64* %mask.addr, align 8
  %add872 = add i64 %453, 1
  %call873 = call i32 @exact_log2_wide(i64 %add872)
  %cmp874 = icmp sge i32 %call873, 0
  br i1 %cmp874, label %land.lhs.true.876, label %if.end.929

land.lhs.true.876:                                ; preds = %land.lhs.true.871
  %454 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld877 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %454, i32 0, i32 1
  %arrayidx878 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld877, i32 0, i64 1
  %rtx879 = bitcast %union.rtunion_def* %arrayidx878 to %struct.rtx_def**
  %455 = load %struct.rtx_def*, %struct.rtx_def** %rtx879, align 8
  %fld880 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %455, i32 0, i32 1
  %arrayidx881 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld880, i32 0, i64 0
  %rtwint882 = bitcast %union.rtunion_def* %arrayidx881 to i64*
  %456 = load i64, i64* %rtwint882, align 8
  %457 = load i64, i64* %mask.addr, align 8
  %add883 = add i64 %457, 1
  %call884 = call i32 @exact_log2_wide(i64 %add883)
  %conv885 = sext i32 %call884 to i64
  %add886 = add nsw i64 %456, %conv885
  %458 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %459 = bitcast %struct.rtx_def* %458 to i32*
  %bf.load887 = load i32, i32* %459, align 8
  %bf.lshr888 = lshr i32 %bf.load887, 16
  %bf.clear889 = and i32 %bf.lshr888, 255
  %idxprom890 = sext i32 %bf.clear889 to i64
  %arrayidx891 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom890
  %460 = load i16, i16* %arrayidx891, align 2
  %conv892 = zext i16 %460 to i64
  %cmp893 = icmp sle i64 %add886, %conv892
  br i1 %cmp893, label %land.lhs.true.895, label %if.end.929

land.lhs.true.895:                                ; preds = %land.lhs.true.876
  %461 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld896 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %461, i32 0, i32 1
  %arrayidx897 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld896, i32 0, i64 0
  %rtx898 = bitcast %union.rtunion_def* %arrayidx897 to %struct.rtx_def**
  %462 = load %struct.rtx_def*, %struct.rtx_def** %rtx898, align 8
  %463 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld899 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %463, i32 0, i32 1
  %arrayidx900 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld899, i32 0, i64 0
  %rtx901 = bitcast %union.rtunion_def* %arrayidx900 to %struct.rtx_def**
  %464 = load %struct.rtx_def*, %struct.rtx_def** %rtx901, align 8
  %465 = bitcast %struct.rtx_def* %464 to i32*
  %bf.load902 = load i32, i32* %465, align 8
  %bf.lshr903 = lshr i32 %bf.load902, 16
  %bf.clear904 = and i32 %bf.lshr903, 255
  %call905 = call i32 @num_sign_bit_copies(%struct.rtx_def* %462, i32 %bf.clear904)
  %466 = load i64, i64* %mask.addr, align 8
  %add906 = add i64 %466, 1
  %call907 = call i32 @exact_log2_wide(i64 %add906)
  %cmp908 = icmp sge i32 %call905, %call907
  br i1 %cmp908, label %if.then.910, label %if.end.929

if.then.910:                                      ; preds = %land.lhs.true.895
  %467 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %468 = bitcast %struct.rtx_def* %467 to i32*
  %bf.load911 = load i32, i32* %468, align 8
  %bf.lshr912 = lshr i32 %bf.load911, 16
  %bf.clear913 = and i32 %bf.lshr912, 255
  %469 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld914 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %469, i32 0, i32 1
  %arrayidx915 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld914, i32 0, i64 0
  %rtx916 = bitcast %union.rtunion_def* %arrayidx915 to %struct.rtx_def**
  %470 = load %struct.rtx_def*, %struct.rtx_def** %rtx916, align 8
  %471 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %472 = bitcast %struct.rtx_def* %471 to i32*
  %bf.load917 = load i32, i32* %472, align 8
  %bf.lshr918 = lshr i32 %bf.load917, 16
  %bf.clear919 = and i32 %bf.lshr918, 255
  %idxprom920 = sext i32 %bf.clear919 to i64
  %arrayidx921 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom920
  %473 = load i16, i16* %arrayidx921, align 2
  %conv922 = zext i16 %473 to i32
  %474 = load i64, i64* %mask.addr, align 8
  %add923 = add i64 %474, 1
  %call924 = call i32 @exact_log2_wide(i64 %add923)
  %sub925 = sub nsw i32 %conv922, %call924
  %conv926 = sext i32 %sub925 to i64
  %call927 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv926)
  %call928 = call %struct.rtx_def* @gen_binary(i32 90, i32 %bf.clear913, %struct.rtx_def* %470, %struct.rtx_def* %call927)
  store %struct.rtx_def* %call928, %struct.rtx_def** %x.addr, align 8
  br label %if.end.929

if.end.929:                                       ; preds = %if.then.910, %land.lhs.true.895, %land.lhs.true.876, %land.lhs.true.871, %land.lhs.true.844, %land.lhs.true.836, %if.end.831
  br label %shiftrt

sw.bb.930:                                        ; preds = %if.end.111
  %475 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %476 = bitcast %struct.rtx_def* %475 to i32*
  %bf.load931 = load i32, i32* %476, align 8
  %bf.lshr932 = lshr i32 %bf.load931, 16
  %bf.clear933 = and i32 %bf.lshr932, 255
  %idxprom934 = sext i32 %bf.clear933 to i64
  %arrayidx935 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom934
  %477 = load i16, i16* %arrayidx935, align 2
  %conv936 = zext i16 %477 to i32
  %cmp937 = icmp sle i32 %conv936, 64
  br i1 %cmp937, label %land.lhs.true.939, label %if.end.956

land.lhs.true.939:                                ; preds = %sw.bb.930
  %478 = load i64, i64* %mask.addr, align 8
  %479 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %480 = bitcast %struct.rtx_def* %479 to i32*
  %bf.load940 = load i32, i32* %480, align 8
  %bf.lshr941 = lshr i32 %bf.load940, 16
  %bf.clear942 = and i32 %bf.lshr941, 255
  %idxprom943 = sext i32 %bf.clear942 to i64
  %arrayidx944 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom943
  %481 = load i16, i16* %arrayidx944, align 2
  %conv945 = zext i16 %481 to i32
  %sub946 = sub nsw i32 %conv945, 1
  %sh_prom947 = zext i32 %sub946 to i64
  %shl948 = shl i64 1, %sh_prom947
  %cmp949 = icmp eq i64 %478, %shl948
  br i1 %cmp949, label %if.then.951, label %if.end.956

if.then.951:                                      ; preds = %land.lhs.true.939
  %482 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld952 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %482, i32 0, i32 1
  %arrayidx953 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld952, i32 0, i64 0
  %rtx954 = bitcast %union.rtunion_def* %arrayidx953 to %struct.rtx_def**
  %483 = load %struct.rtx_def*, %struct.rtx_def** %rtx954, align 8
  %484 = load i32, i32* %mode.addr, align 4
  %485 = load i64, i64* %mask.addr, align 8
  %486 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %487 = load i32, i32* %next_select, align 4
  %call955 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %483, i32 %484, i64 %485, %struct.rtx_def* %486, i32 %487)
  store %struct.rtx_def* %call955, %struct.rtx_def** %retval
  br label %return

if.end.956:                                       ; preds = %land.lhs.true.939, %sw.bb.930
  %488 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld957 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %488, i32 0, i32 1
  %arrayidx958 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld957, i32 0, i64 1
  %rtx959 = bitcast %union.rtunion_def* %arrayidx958 to %struct.rtx_def**
  %489 = load %struct.rtx_def*, %struct.rtx_def** %rtx959, align 8
  %490 = bitcast %struct.rtx_def* %489 to i32*
  %bf.load960 = load i32, i32* %490, align 8
  %bf.clear961 = and i32 %bf.load960, 65535
  %cmp962 = icmp eq i32 %bf.clear961, 54
  br i1 %cmp962, label %land.lhs.true.964, label %if.end.1084

land.lhs.true.964:                                ; preds = %if.end.956
  %491 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld965 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %491, i32 0, i32 1
  %arrayidx966 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld965, i32 0, i64 1
  %rtx967 = bitcast %union.rtunion_def* %arrayidx966 to %struct.rtx_def**
  %492 = load %struct.rtx_def*, %struct.rtx_def** %rtx967, align 8
  %fld968 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %492, i32 0, i32 1
  %arrayidx969 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld968, i32 0, i64 0
  %rtwint970 = bitcast %union.rtunion_def* %arrayidx969 to i64*
  %493 = load i64, i64* %rtwint970, align 8
  %cmp971 = icmp sge i64 %493, 0
  br i1 %cmp971, label %land.lhs.true.973, label %if.end.1084

land.lhs.true.973:                                ; preds = %land.lhs.true.964
  %494 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld974 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %494, i32 0, i32 1
  %arrayidx975 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld974, i32 0, i64 1
  %rtx976 = bitcast %union.rtunion_def* %arrayidx975 to %struct.rtx_def**
  %495 = load %struct.rtx_def*, %struct.rtx_def** %rtx976, align 8
  %fld977 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %495, i32 0, i32 1
  %arrayidx978 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld977, i32 0, i64 0
  %rtwint979 = bitcast %union.rtunion_def* %arrayidx978 to i64*
  %496 = load i64, i64* %rtwint979, align 8
  %cmp980 = icmp slt i64 %496, 64
  br i1 %cmp980, label %if.then.982, label %if.end.1084

if.then.982:                                      ; preds = %land.lhs.true.973
  store i32 -1, i32* %i, align 4
  %497 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %498 = bitcast %struct.rtx_def* %497 to i32*
  %bf.load983 = load i32, i32* %498, align 8
  %bf.lshr984 = lshr i32 %bf.load983, 16
  %bf.clear985 = and i32 %bf.lshr984, 255
  %idxprom986 = sext i32 %bf.clear985 to i64
  %arrayidx987 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom986
  %499 = load i16, i16* %arrayidx987, align 2
  %conv988 = zext i16 %499 to i32
  %cmp989 = icmp sgt i32 %conv988, 64
  br i1 %cmp989, label %if.then.991, label %if.else.1024

if.then.991:                                      ; preds = %if.then.982
  store i64 -1, i64* %nonzero, align 8
  %500 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %501 = bitcast %struct.rtx_def* %500 to i32*
  %bf.load992 = load i32, i32* %501, align 8
  %bf.lshr993 = lshr i32 %bf.load992, 16
  %bf.clear994 = and i32 %bf.lshr993, 255
  %idxprom995 = sext i32 %bf.clear994 to i64
  %arrayidx996 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom995
  %502 = load i16, i16* %arrayidx996, align 2
  %conv997 = zext i16 %502 to i64
  %503 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld998 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %503, i32 0, i32 1
  %arrayidx999 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld998, i32 0, i64 1
  %rtx1000 = bitcast %union.rtunion_def* %arrayidx999 to %struct.rtx_def**
  %504 = load %struct.rtx_def*, %struct.rtx_def** %rtx1000, align 8
  %fld1001 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %504, i32 0, i32 1
  %arrayidx1002 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1001, i32 0, i64 0
  %rtwint1003 = bitcast %union.rtunion_def* %arrayidx1002 to i64*
  %505 = load i64, i64* %rtwint1003, align 8
  %sub1004 = sub nsw i64 %conv997, %505
  %cmp1005 = icmp slt i64 %sub1004, 64
  br i1 %cmp1005, label %if.then.1007, label %if.end.1023

if.then.1007:                                     ; preds = %if.then.991
  %506 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1008 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %506, i32 0, i32 1
  %arrayidx1009 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1008, i32 0, i64 1
  %rtx1010 = bitcast %union.rtunion_def* %arrayidx1009 to %struct.rtx_def**
  %507 = load %struct.rtx_def*, %struct.rtx_def** %rtx1010, align 8
  %fld1011 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %507, i32 0, i32 1
  %arrayidx1012 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1011, i32 0, i64 0
  %rtwint1013 = bitcast %union.rtunion_def* %arrayidx1012 to i64*
  %508 = load i64, i64* %rtwint1013, align 8
  %add1014 = add nsw i64 %508, 64
  %509 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %510 = bitcast %struct.rtx_def* %509 to i32*
  %bf.load1015 = load i32, i32* %510, align 8
  %bf.lshr1016 = lshr i32 %bf.load1015, 16
  %bf.clear1017 = and i32 %bf.lshr1016, 255
  %idxprom1018 = sext i32 %bf.clear1017 to i64
  %arrayidx1019 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1018
  %511 = load i16, i16* %arrayidx1019, align 2
  %conv1020 = zext i16 %511 to i64
  %sub1021 = sub nsw i64 %add1014, %conv1020
  %512 = load i64, i64* %nonzero, align 8
  %shr1022 = lshr i64 %512, %sub1021
  store i64 %shr1022, i64* %nonzero, align 8
  br label %if.end.1023

if.end.1023:                                      ; preds = %if.then.1007, %if.then.991
  br label %if.end.1037

if.else.1024:                                     ; preds = %if.then.982
  %513 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %514 = bitcast %struct.rtx_def* %513 to i32*
  %bf.load1025 = load i32, i32* %514, align 8
  %bf.lshr1026 = lshr i32 %bf.load1025, 16
  %bf.clear1027 = and i32 %bf.lshr1026, 255
  %idxprom1028 = sext i32 %bf.clear1027 to i64
  %arrayidx1029 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom1028
  %515 = load i64, i64* %arrayidx1029, align 8
  store i64 %515, i64* %nonzero, align 8
  %516 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1030 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %516, i32 0, i32 1
  %arrayidx1031 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1030, i32 0, i64 1
  %rtx1032 = bitcast %union.rtunion_def* %arrayidx1031 to %struct.rtx_def**
  %517 = load %struct.rtx_def*, %struct.rtx_def** %rtx1032, align 8
  %fld1033 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %517, i32 0, i32 1
  %arrayidx1034 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1033, i32 0, i64 0
  %rtwint1035 = bitcast %union.rtunion_def* %arrayidx1034 to i64*
  %518 = load i64, i64* %rtwint1035, align 8
  %519 = load i64, i64* %nonzero, align 8
  %shr1036 = lshr i64 %519, %518
  store i64 %shr1036, i64* %nonzero, align 8
  br label %if.end.1037

if.end.1037:                                      ; preds = %if.else.1024, %if.end.1023
  %520 = load i64, i64* %mask.addr, align 8
  %521 = load i64, i64* %nonzero, align 8
  %neg1038 = xor i64 %521, -1
  %and1039 = and i64 %520, %neg1038
  %cmp1040 = icmp eq i64 %and1039, 0
  br i1 %cmp1040, label %if.then.1046, label %lor.lhs.false.1042

lor.lhs.false.1042:                               ; preds = %if.end.1037
  %522 = load i64, i64* %mask.addr, align 8
  %call1043 = call i32 @exact_log2_wide(i64 %522)
  store i32 %call1043, i32* %i, align 4
  %cmp1044 = icmp sge i32 %call1043, 0
  br i1 %cmp1044, label %if.then.1046, label %if.end.1083

if.then.1046:                                     ; preds = %lor.lhs.false.1042, %if.end.1037
  %523 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %524 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %525 = bitcast %struct.rtx_def* %524 to i32*
  %bf.load1047 = load i32, i32* %525, align 8
  %bf.lshr1048 = lshr i32 %bf.load1047, 16
  %bf.clear1049 = and i32 %bf.lshr1048, 255
  %526 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1050 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %526, i32 0, i32 1
  %arrayidx1051 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1050, i32 0, i64 0
  %rtx1052 = bitcast %union.rtunion_def* %arrayidx1051 to %struct.rtx_def**
  %527 = load %struct.rtx_def*, %struct.rtx_def** %rtx1052, align 8
  %528 = load i32, i32* %i, align 4
  %cmp1053 = icmp slt i32 %528, 0
  br i1 %cmp1053, label %cond.true.1055, label %cond.false.1062

cond.true.1055:                                   ; preds = %if.then.1046
  %529 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1056 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %529, i32 0, i32 1
  %arrayidx1057 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1056, i32 0, i64 1
  %rtx1058 = bitcast %union.rtunion_def* %arrayidx1057 to %struct.rtx_def**
  %530 = load %struct.rtx_def*, %struct.rtx_def** %rtx1058, align 8
  %fld1059 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %530, i32 0, i32 1
  %arrayidx1060 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1059, i32 0, i64 0
  %rtwint1061 = bitcast %union.rtunion_def* %arrayidx1060 to i64*
  %531 = load i64, i64* %rtwint1061, align 8
  br label %cond.end.1072

cond.false.1062:                                  ; preds = %if.then.1046
  %532 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %533 = bitcast %struct.rtx_def* %532 to i32*
  %bf.load1063 = load i32, i32* %533, align 8
  %bf.lshr1064 = lshr i32 %bf.load1063, 16
  %bf.clear1065 = and i32 %bf.lshr1064, 255
  %idxprom1066 = sext i32 %bf.clear1065 to i64
  %arrayidx1067 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1066
  %534 = load i16, i16* %arrayidx1067, align 2
  %conv1068 = zext i16 %534 to i32
  %sub1069 = sub nsw i32 %conv1068, 1
  %535 = load i32, i32* %i, align 4
  %sub1070 = sub nsw i32 %sub1069, %535
  %conv1071 = sext i32 %sub1070 to i64
  br label %cond.end.1072

cond.end.1072:                                    ; preds = %cond.false.1062, %cond.true.1055
  %cond1073 = phi i64 [ %531, %cond.true.1055 ], [ %conv1071, %cond.false.1062 ]
  %conv1074 = trunc i64 %cond1073 to i32
  %call1075 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* %523, i32 90, i32 %bf.clear1049, %struct.rtx_def* %527, i32 %conv1074)
  store %struct.rtx_def* %call1075, %struct.rtx_def** %x.addr, align 8
  %536 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %537 = bitcast %struct.rtx_def* %536 to i32*
  %bf.load1076 = load i32, i32* %537, align 8
  %bf.clear1077 = and i32 %bf.load1076, 65535
  %cmp1078 = icmp ne i32 %bf.clear1077, 89
  br i1 %cmp1078, label %if.then.1080, label %if.end.1082

if.then.1080:                                     ; preds = %cond.end.1072
  %538 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %539 = load i32, i32* %mode.addr, align 4
  %540 = load i64, i64* %mask.addr, align 8
  %541 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %542 = load i32, i32* %next_select, align 4
  %call1081 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %538, i32 %539, i64 %540, %struct.rtx_def* %541, i32 %542)
  store %struct.rtx_def* %call1081, %struct.rtx_def** %retval
  br label %return

if.end.1082:                                      ; preds = %cond.end.1072
  br label %if.end.1083

if.end.1083:                                      ; preds = %if.end.1082, %lor.lhs.false.1042
  br label %if.end.1084

if.end.1084:                                      ; preds = %if.end.1083, %land.lhs.true.973, %land.lhs.true.964, %if.end.956
  %543 = load i64, i64* %mask.addr, align 8
  %cmp1085 = icmp eq i64 %543, 1
  br i1 %cmp1085, label %if.then.1087, label %if.end.1098

if.then.1087:                                     ; preds = %if.end.1084
  %544 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %545 = bitcast %struct.rtx_def* %544 to i32*
  %bf.load1088 = load i32, i32* %545, align 8
  %bf.lshr1089 = lshr i32 %bf.load1088, 16
  %bf.clear1090 = and i32 %bf.lshr1089, 255
  %546 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1091 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %546, i32 0, i32 1
  %arrayidx1092 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1091, i32 0, i64 0
  %rtx1093 = bitcast %union.rtunion_def* %arrayidx1092 to %struct.rtx_def**
  %547 = load %struct.rtx_def*, %struct.rtx_def** %rtx1093, align 8
  %548 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1094 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %548, i32 0, i32 1
  %arrayidx1095 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1094, i32 0, i64 1
  %rtx1096 = bitcast %union.rtunion_def* %arrayidx1095 to %struct.rtx_def**
  %549 = load %struct.rtx_def*, %struct.rtx_def** %rtx1096, align 8
  %call1097 = call %struct.rtx_def* @gen_binary(i32 90, i32 %bf.clear1090, %struct.rtx_def* %547, %struct.rtx_def* %549)
  store %struct.rtx_def* %call1097, %struct.rtx_def** %x.addr, align 8
  br label %if.end.1098

if.end.1098:                                      ; preds = %if.then.1087, %if.end.1084
  br label %shiftrt

shiftrt:                                          ; preds = %if.end.1098, %if.end.929
  %550 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %551 = bitcast %struct.rtx_def* %550 to i32*
  %bf.load1099 = load i32, i32* %551, align 8
  %bf.clear1100 = and i32 %bf.load1099, 65535
  %cmp1101 = icmp eq i32 %bf.clear1100, 90
  br i1 %cmp1101, label %land.lhs.true.1108, label %lor.lhs.false.1103

lor.lhs.false.1103:                               ; preds = %shiftrt
  %552 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %553 = bitcast %struct.rtx_def* %552 to i32*
  %bf.load1104 = load i32, i32* %553, align 8
  %bf.clear1105 = and i32 %bf.load1104, 65535
  %cmp1106 = icmp eq i32 %bf.clear1105, 89
  br i1 %cmp1106, label %land.lhs.true.1108, label %if.end.1189

land.lhs.true.1108:                               ; preds = %lor.lhs.false.1103, %shiftrt
  %554 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %554, i32 0, i32 1
  %arrayidx1110 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1109, i32 0, i64 1
  %rtx1111 = bitcast %union.rtunion_def* %arrayidx1110 to %struct.rtx_def**
  %555 = load %struct.rtx_def*, %struct.rtx_def** %rtx1111, align 8
  %556 = bitcast %struct.rtx_def* %555 to i32*
  %bf.load1112 = load i32, i32* %556, align 8
  %bf.clear1113 = and i32 %bf.load1112, 65535
  %cmp1114 = icmp eq i32 %bf.clear1113, 54
  br i1 %cmp1114, label %land.lhs.true.1116, label %if.end.1189

land.lhs.true.1116:                               ; preds = %land.lhs.true.1108
  %557 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1117 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %557, i32 0, i32 1
  %arrayidx1118 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1117, i32 0, i64 1
  %rtx1119 = bitcast %union.rtunion_def* %arrayidx1118 to %struct.rtx_def**
  %558 = load %struct.rtx_def*, %struct.rtx_def** %rtx1119, align 8
  %fld1120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %558, i32 0, i32 1
  %arrayidx1121 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1120, i32 0, i64 0
  %rtwint1122 = bitcast %union.rtunion_def* %arrayidx1121 to i64*
  %559 = load i64, i64* %rtwint1122, align 8
  %cmp1123 = icmp sge i64 %559, 0
  br i1 %cmp1123, label %land.lhs.true.1125, label %if.end.1189

land.lhs.true.1125:                               ; preds = %land.lhs.true.1116
  %560 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1126 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %560, i32 0, i32 1
  %arrayidx1127 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1126, i32 0, i64 1
  %rtx1128 = bitcast %union.rtunion_def* %arrayidx1127 to %struct.rtx_def**
  %561 = load %struct.rtx_def*, %struct.rtx_def** %rtx1128, align 8
  %fld1129 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %561, i32 0, i32 1
  %arrayidx1130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1129, i32 0, i64 0
  %rtwint1131 = bitcast %union.rtunion_def* %arrayidx1130 to i64*
  %562 = load i64, i64* %rtwint1131, align 8
  %563 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %564 = bitcast %struct.rtx_def* %563 to i32*
  %bf.load1132 = load i32, i32* %564, align 8
  %bf.lshr1133 = lshr i32 %bf.load1132, 16
  %bf.clear1134 = and i32 %bf.lshr1133, 255
  %idxprom1135 = sext i32 %bf.clear1134 to i64
  %arrayidx1136 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1135
  %565 = load i16, i16* %arrayidx1136, align 2
  %conv1137 = zext i16 %565 to i32
  %566 = load i64, i64* %mask.addr, align 8
  %call1138 = call i32 @floor_log2_wide(i64 %566)
  %add1139 = add nsw i32 %call1138, 1
  %sub1140 = sub nsw i32 %conv1137, %add1139
  %conv1141 = sext i32 %sub1140 to i64
  %cmp1142 = icmp sle i64 %562, %conv1141
  br i1 %cmp1142, label %land.lhs.true.1144, label %if.end.1189

land.lhs.true.1144:                               ; preds = %land.lhs.true.1125
  %567 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %567, i32 0, i32 1
  %arrayidx1146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1145, i32 0, i64 0
  %rtx1147 = bitcast %union.rtunion_def* %arrayidx1146 to %struct.rtx_def**
  %568 = load %struct.rtx_def*, %struct.rtx_def** %rtx1147, align 8
  %569 = bitcast %struct.rtx_def* %568 to i32*
  %bf.load1148 = load i32, i32* %569, align 8
  %bf.clear1149 = and i32 %bf.load1148, 65535
  %cmp1150 = icmp eq i32 %bf.clear1149, 87
  br i1 %cmp1150, label %land.lhs.true.1152, label %if.end.1189

land.lhs.true.1152:                               ; preds = %land.lhs.true.1144
  %570 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1153 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %570, i32 0, i32 1
  %arrayidx1154 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1153, i32 0, i64 0
  %rtx1155 = bitcast %union.rtunion_def* %arrayidx1154 to %struct.rtx_def**
  %571 = load %struct.rtx_def*, %struct.rtx_def** %rtx1155, align 8
  %fld1156 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %571, i32 0, i32 1
  %arrayidx1157 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1156, i32 0, i64 1
  %rtx1158 = bitcast %union.rtunion_def* %arrayidx1157 to %struct.rtx_def**
  %572 = load %struct.rtx_def*, %struct.rtx_def** %rtx1158, align 8
  %573 = bitcast %struct.rtx_def* %572 to i32*
  %bf.load1159 = load i32, i32* %573, align 8
  %bf.clear1160 = and i32 %bf.load1159, 65535
  %cmp1161 = icmp eq i32 %bf.clear1160, 54
  br i1 %cmp1161, label %land.lhs.true.1163, label %if.end.1189

land.lhs.true.1163:                               ; preds = %land.lhs.true.1152
  %574 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1164 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %574, i32 0, i32 1
  %arrayidx1165 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1164, i32 0, i64 0
  %rtx1166 = bitcast %union.rtunion_def* %arrayidx1165 to %struct.rtx_def**
  %575 = load %struct.rtx_def*, %struct.rtx_def** %rtx1166, align 8
  %fld1167 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %575, i32 0, i32 1
  %arrayidx1168 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1167, i32 0, i64 1
  %rtx1169 = bitcast %union.rtunion_def* %arrayidx1168 to %struct.rtx_def**
  %576 = load %struct.rtx_def*, %struct.rtx_def** %rtx1169, align 8
  %fld1170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %576, i32 0, i32 1
  %arrayidx1171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1170, i32 0, i64 0
  %rtwint1172 = bitcast %union.rtunion_def* %arrayidx1171 to i64*
  %577 = load i64, i64* %rtwint1172, align 8
  %578 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1173 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %578, i32 0, i32 1
  %arrayidx1174 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1173, i32 0, i64 1
  %rtx1175 = bitcast %union.rtunion_def* %arrayidx1174 to %struct.rtx_def**
  %579 = load %struct.rtx_def*, %struct.rtx_def** %rtx1175, align 8
  %fld1176 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %579, i32 0, i32 1
  %arrayidx1177 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1176, i32 0, i64 0
  %rtwint1178 = bitcast %union.rtunion_def* %arrayidx1177 to i64*
  %580 = load i64, i64* %rtwint1178, align 8
  %cmp1179 = icmp eq i64 %577, %580
  br i1 %cmp1179, label %if.then.1181, label %if.end.1189

if.then.1181:                                     ; preds = %land.lhs.true.1163
  %581 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1182 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %581, i32 0, i32 1
  %arrayidx1183 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1182, i32 0, i64 0
  %rtx1184 = bitcast %union.rtunion_def* %arrayidx1183 to %struct.rtx_def**
  %582 = load %struct.rtx_def*, %struct.rtx_def** %rtx1184, align 8
  %fld1185 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %582, i32 0, i32 1
  %arrayidx1186 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1185, i32 0, i64 0
  %rtx1187 = bitcast %union.rtunion_def* %arrayidx1186 to %struct.rtx_def**
  %583 = load %struct.rtx_def*, %struct.rtx_def** %rtx1187, align 8
  %584 = load i32, i32* %mode.addr, align 4
  %585 = load i64, i64* %mask.addr, align 8
  %586 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %587 = load i32, i32* %next_select, align 4
  %call1188 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %583, i32 %584, i64 %585, %struct.rtx_def* %586, i32 %587)
  store %struct.rtx_def* %call1188, %struct.rtx_def** %retval
  br label %return

if.end.1189:                                      ; preds = %land.lhs.true.1163, %land.lhs.true.1152, %land.lhs.true.1144, %land.lhs.true.1125, %land.lhs.true.1116, %land.lhs.true.1108, %lor.lhs.false.1103
  br label %sw.epilog

sw.bb.1190:                                       ; preds = %if.end.111, %if.end.111
  %588 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1191 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %588, i32 0, i32 1
  %arrayidx1192 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1191, i32 0, i64 1
  %rtx1193 = bitcast %union.rtunion_def* %arrayidx1192 to %struct.rtx_def**
  %589 = load %struct.rtx_def*, %struct.rtx_def** %rtx1193, align 8
  %590 = bitcast %struct.rtx_def* %589 to i32*
  %bf.load1194 = load i32, i32* %590, align 8
  %bf.clear1195 = and i32 %bf.load1194, 65535
  %cmp1196 = icmp eq i32 %bf.clear1195, 54
  br i1 %cmp1196, label %land.lhs.true.1198, label %if.end.1240

land.lhs.true.1198:                               ; preds = %sw.bb.1190
  %591 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1199 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %591, i32 0, i32 1
  %arrayidx1200 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1199, i32 0, i64 1
  %rtx1201 = bitcast %union.rtunion_def* %arrayidx1200 to %struct.rtx_def**
  %592 = load %struct.rtx_def*, %struct.rtx_def** %rtx1201, align 8
  %fld1202 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %592, i32 0, i32 1
  %arrayidx1203 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1202, i32 0, i64 0
  %rtwint1204 = bitcast %union.rtunion_def* %arrayidx1203 to i64*
  %593 = load i64, i64* %rtwint1204, align 8
  %cmp1205 = icmp sge i64 %593, 0
  br i1 %cmp1205, label %if.then.1207, label %if.end.1240

if.then.1207:                                     ; preds = %land.lhs.true.1198
  %594 = load i32, i32* %code, align 4
  %cmp1208 = icmp eq i32 %594, 88
  %cond1210 = select i1 %cmp1208, i32 91, i32 88
  %595 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %596 = bitcast %struct.rtx_def* %595 to i32*
  %bf.load1211 = load i32, i32* %596, align 8
  %bf.lshr1212 = lshr i32 %bf.load1211, 16
  %bf.clear1213 = and i32 %bf.lshr1212, 255
  %597 = load i64, i64* %mask.addr, align 8
  %call1214 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %597)
  %598 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1215 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %598, i32 0, i32 1
  %arrayidx1216 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1215, i32 0, i64 1
  %rtx1217 = bitcast %union.rtunion_def* %arrayidx1216 to %struct.rtx_def**
  %599 = load %struct.rtx_def*, %struct.rtx_def** %rtx1217, align 8
  %call1218 = call %struct.rtx_def* @simplify_binary_operation(i32 %cond1210, i32 %bf.clear1213, %struct.rtx_def* %call1214, %struct.rtx_def* %599)
  store %struct.rtx_def* %call1218, %struct.rtx_def** %temp, align 8
  %600 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %tobool1219 = icmp ne %struct.rtx_def* %600, null
  br i1 %tobool1219, label %land.lhs.true.1220, label %if.end.1239

land.lhs.true.1220:                               ; preds = %if.then.1207
  %601 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %602 = bitcast %struct.rtx_def* %601 to i32*
  %bf.load1221 = load i32, i32* %602, align 8
  %bf.clear1222 = and i32 %bf.load1221, 65535
  %cmp1223 = icmp eq i32 %bf.clear1222, 54
  br i1 %cmp1223, label %if.then.1225, label %if.end.1239

if.then.1225:                                     ; preds = %land.lhs.true.1220
  %603 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1226 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %603, i32 0, i32 1
  %arrayidx1227 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1226, i32 0, i64 0
  %rtx1228 = bitcast %union.rtunion_def* %arrayidx1227 to %struct.rtx_def**
  %604 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1229 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %604, i32 0, i32 1
  %arrayidx1230 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1229, i32 0, i64 0
  %rtx1231 = bitcast %union.rtunion_def* %arrayidx1230 to %struct.rtx_def**
  %605 = load %struct.rtx_def*, %struct.rtx_def** %rtx1231, align 8
  %606 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %607 = bitcast %struct.rtx_def* %606 to i32*
  %bf.load1232 = load i32, i32* %607, align 8
  %bf.lshr1233 = lshr i32 %bf.load1232, 16
  %bf.clear1234 = and i32 %bf.lshr1233, 255
  %608 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %fld1235 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %608, i32 0, i32 1
  %arrayidx1236 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1235, i32 0, i64 0
  %rtwint1237 = bitcast %union.rtunion_def* %arrayidx1236 to i64*
  %609 = load i64, i64* %rtwint1237, align 8
  %610 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %611 = load i32, i32* %next_select, align 4
  %call1238 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %605, i32 %bf.clear1234, i64 %609, %struct.rtx_def* %610, i32 %611)
  call void @do_SUBST(%struct.rtx_def** %rtx1228, %struct.rtx_def* %call1238)
  br label %if.end.1239

if.end.1239:                                      ; preds = %if.then.1225, %land.lhs.true.1220, %if.then.1207
  br label %if.end.1240

if.end.1240:                                      ; preds = %if.end.1239, %land.lhs.true.1198, %sw.bb.1190
  br label %sw.epilog

sw.bb.1241:                                       ; preds = %if.end.111
  %612 = load i64, i64* %mask.addr, align 8
  %cmp1242 = icmp eq i64 %612, 1
  br i1 %cmp1242, label %if.then.1244, label %if.end.1249

if.then.1244:                                     ; preds = %sw.bb.1241
  %613 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1245 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %613, i32 0, i32 1
  %arrayidx1246 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1245, i32 0, i64 0
  %rtx1247 = bitcast %union.rtunion_def* %arrayidx1246 to %struct.rtx_def**
  %614 = load %struct.rtx_def*, %struct.rtx_def** %rtx1247, align 8
  %615 = load i32, i32* %mode.addr, align 4
  %616 = load i64, i64* %mask.addr, align 8
  %617 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %618 = load i32, i32* %just_select.addr, align 4
  %call1248 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %614, i32 %615, i64 %616, %struct.rtx_def* %617, i32 %618)
  store %struct.rtx_def* %call1248, %struct.rtx_def** %retval
  br label %return

if.end.1249:                                      ; preds = %sw.bb.1241
  %619 = load i64, i64* %fuller_mask, align 8
  store i64 %619, i64* %mask.addr, align 8
  br label %unop

sw.bb.1250:                                       ; preds = %if.end.111
  %620 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1251 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %620, i32 0, i32 1
  %arrayidx1252 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1251, i32 0, i64 0
  %rtx1253 = bitcast %union.rtunion_def* %arrayidx1252 to %struct.rtx_def**
  %621 = load %struct.rtx_def*, %struct.rtx_def** %rtx1253, align 8
  %622 = bitcast %struct.rtx_def* %621 to i32*
  %bf.load1254 = load i32, i32* %622, align 8
  %bf.clear1255 = and i32 %bf.load1254, 65535
  %cmp1256 = icmp eq i32 %bf.clear1255, 90
  br i1 %cmp1256, label %land.lhs.true.1258, label %if.end.1347

land.lhs.true.1258:                               ; preds = %sw.bb.1250
  %623 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1259 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %623, i32 0, i32 1
  %arrayidx1260 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1259, i32 0, i64 0
  %rtx1261 = bitcast %union.rtunion_def* %arrayidx1260 to %struct.rtx_def**
  %624 = load %struct.rtx_def*, %struct.rtx_def** %rtx1261, align 8
  %fld1262 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %624, i32 0, i32 1
  %arrayidx1263 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1262, i32 0, i64 1
  %rtx1264 = bitcast %union.rtunion_def* %arrayidx1263 to %struct.rtx_def**
  %625 = load %struct.rtx_def*, %struct.rtx_def** %rtx1264, align 8
  %626 = bitcast %struct.rtx_def* %625 to i32*
  %bf.load1265 = load i32, i32* %626, align 8
  %bf.clear1266 = and i32 %bf.load1265, 65535
  %cmp1267 = icmp eq i32 %bf.clear1266, 54
  br i1 %cmp1267, label %land.lhs.true.1269, label %if.end.1347

land.lhs.true.1269:                               ; preds = %land.lhs.true.1258
  %627 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1270 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %627, i32 0, i32 1
  %arrayidx1271 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1270, i32 0, i64 0
  %rtx1272 = bitcast %union.rtunion_def* %arrayidx1271 to %struct.rtx_def**
  %628 = load %struct.rtx_def*, %struct.rtx_def** %rtx1272, align 8
  %fld1273 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %628, i32 0, i32 1
  %arrayidx1274 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1273, i32 0, i64 1
  %rtx1275 = bitcast %union.rtunion_def* %arrayidx1274 to %struct.rtx_def**
  %629 = load %struct.rtx_def*, %struct.rtx_def** %rtx1275, align 8
  %fld1276 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %629, i32 0, i32 1
  %arrayidx1277 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1276, i32 0, i64 0
  %rtwint1278 = bitcast %union.rtunion_def* %arrayidx1277 to i64*
  %630 = load i64, i64* %rtwint1278, align 8
  %cmp1279 = icmp sge i64 %630, 0
  br i1 %cmp1279, label %land.lhs.true.1281, label %if.end.1347

land.lhs.true.1281:                               ; preds = %land.lhs.true.1269
  %631 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1282 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %631, i32 0, i32 1
  %arrayidx1283 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1282, i32 0, i64 0
  %rtx1284 = bitcast %union.rtunion_def* %arrayidx1283 to %struct.rtx_def**
  %632 = load %struct.rtx_def*, %struct.rtx_def** %rtx1284, align 8
  %fld1285 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %632, i32 0, i32 1
  %arrayidx1286 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1285, i32 0, i64 1
  %rtx1287 = bitcast %union.rtunion_def* %arrayidx1286 to %struct.rtx_def**
  %633 = load %struct.rtx_def*, %struct.rtx_def** %rtx1287, align 8
  %fld1288 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %633, i32 0, i32 1
  %arrayidx1289 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1288, i32 0, i64 0
  %rtwint1290 = bitcast %union.rtunion_def* %arrayidx1289 to i64*
  %634 = load i64, i64* %rtwint1290, align 8
  %635 = load i64, i64* %mask.addr, align 8
  %call1291 = call i32 @floor_log2_wide(i64 %635)
  %conv1292 = sext i32 %call1291 to i64
  %add1293 = add nsw i64 %634, %conv1292
  %636 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %637 = bitcast %struct.rtx_def* %636 to i32*
  %bf.load1294 = load i32, i32* %637, align 8
  %bf.lshr1295 = lshr i32 %bf.load1294, 16
  %bf.clear1296 = and i32 %bf.lshr1295, 255
  %idxprom1297 = sext i32 %bf.clear1296 to i64
  %arrayidx1298 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1297
  %638 = load i16, i16* %arrayidx1298, align 2
  %conv1299 = zext i16 %638 to i64
  %cmp1300 = icmp slt i64 %add1293, %conv1299
  br i1 %cmp1300, label %land.lhs.true.1302, label %if.end.1347

land.lhs.true.1302:                               ; preds = %land.lhs.true.1281
  %639 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1303 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %639, i32 0, i32 1
  %arrayidx1304 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1303, i32 0, i64 0
  %rtx1305 = bitcast %union.rtunion_def* %arrayidx1304 to %struct.rtx_def**
  %640 = load %struct.rtx_def*, %struct.rtx_def** %rtx1305, align 8
  %fld1306 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %640, i32 0, i32 1
  %arrayidx1307 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1306, i32 0, i64 1
  %rtx1308 = bitcast %union.rtunion_def* %arrayidx1307 to %struct.rtx_def**
  %641 = load %struct.rtx_def*, %struct.rtx_def** %rtx1308, align 8
  %fld1309 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %641, i32 0, i32 1
  %arrayidx1310 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1309, i32 0, i64 0
  %rtwint1311 = bitcast %union.rtunion_def* %arrayidx1310 to i64*
  %642 = load i64, i64* %rtwint1311, align 8
  %cmp1312 = icmp slt i64 %642, 64
  br i1 %cmp1312, label %if.then.1314, label %if.end.1347

if.then.1314:                                     ; preds = %land.lhs.true.1302
  %643 = load i64, i64* %mask.addr, align 8
  %644 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1315 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %644, i32 0, i32 1
  %arrayidx1316 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1315, i32 0, i64 0
  %rtx1317 = bitcast %union.rtunion_def* %arrayidx1316 to %struct.rtx_def**
  %645 = load %struct.rtx_def*, %struct.rtx_def** %rtx1317, align 8
  %fld1318 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %645, i32 0, i32 1
  %arrayidx1319 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1318, i32 0, i64 1
  %rtx1320 = bitcast %union.rtunion_def* %arrayidx1319 to %struct.rtx_def**
  %646 = load %struct.rtx_def*, %struct.rtx_def** %rtx1320, align 8
  %fld1321 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %646, i32 0, i32 1
  %arrayidx1322 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1321, i32 0, i64 0
  %rtwint1323 = bitcast %union.rtunion_def* %arrayidx1322 to i64*
  %647 = load i64, i64* %rtwint1323, align 8
  %shl1324 = shl i64 %643, %647
  %call1325 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %shl1324)
  store %struct.rtx_def* %call1325, %struct.rtx_def** %temp, align 8
  %648 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %649 = bitcast %struct.rtx_def* %648 to i32*
  %bf.load1326 = load i32, i32* %649, align 8
  %bf.lshr1327 = lshr i32 %bf.load1326, 16
  %bf.clear1328 = and i32 %bf.lshr1327, 255
  %650 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1329 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %650, i32 0, i32 1
  %arrayidx1330 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1329, i32 0, i64 0
  %rtx1331 = bitcast %union.rtunion_def* %arrayidx1330 to %struct.rtx_def**
  %651 = load %struct.rtx_def*, %struct.rtx_def** %rtx1331, align 8
  %fld1332 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %651, i32 0, i32 1
  %arrayidx1333 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1332, i32 0, i64 0
  %rtx1334 = bitcast %union.rtunion_def* %arrayidx1333 to %struct.rtx_def**
  %652 = load %struct.rtx_def*, %struct.rtx_def** %rtx1334, align 8
  %653 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %call1335 = call %struct.rtx_def* @gen_binary(i32 85, i32 %bf.clear1328, %struct.rtx_def* %652, %struct.rtx_def* %653)
  store %struct.rtx_def* %call1335, %struct.rtx_def** %temp, align 8
  %654 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %655 = bitcast %struct.rtx_def* %654 to i32*
  %bf.load1336 = load i32, i32* %655, align 8
  %bf.lshr1337 = lshr i32 %bf.load1336, 16
  %bf.clear1338 = and i32 %bf.lshr1337, 255
  %656 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %657 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1339 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %657, i32 0, i32 1
  %arrayidx1340 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1339, i32 0, i64 0
  %rtx1341 = bitcast %union.rtunion_def* %arrayidx1340 to %struct.rtx_def**
  %658 = load %struct.rtx_def*, %struct.rtx_def** %rtx1341, align 8
  %fld1342 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %658, i32 0, i32 1
  %arrayidx1343 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1342, i32 0, i64 1
  %rtx1344 = bitcast %union.rtunion_def* %arrayidx1343 to %struct.rtx_def**
  %659 = load %struct.rtx_def*, %struct.rtx_def** %rtx1344, align 8
  %call1345 = call %struct.rtx_def* @gen_binary(i32 90, i32 %bf.clear1338, %struct.rtx_def* %656, %struct.rtx_def* %659)
  store %struct.rtx_def* %call1345, %struct.rtx_def** %x.addr, align 8
  %660 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %661 = load i32, i32* %mode.addr, align 4
  %662 = load i64, i64* %mask.addr, align 8
  %663 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %664 = load i32, i32* %next_select, align 4
  %call1346 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %660, i32 %661, i64 %662, %struct.rtx_def* %663, i32 %664)
  store %struct.rtx_def* %call1346, %struct.rtx_def** %retval
  br label %return

if.end.1347:                                      ; preds = %land.lhs.true.1302, %land.lhs.true.1281, %land.lhs.true.1269, %land.lhs.true.1258, %sw.bb.1250
  %665 = load i64, i64* %fuller_mask, align 8
  store i64 %665, i64* %mask.addr, align 8
  br label %unop

unop:                                             ; preds = %if.end.1347, %if.end.1249
  %666 = load i32, i32* %op_mode, align 4
  %667 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1348 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %667, i32 0, i32 1
  %arrayidx1349 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1348, i32 0, i64 0
  %rtx1350 = bitcast %union.rtunion_def* %arrayidx1349 to %struct.rtx_def**
  %668 = load %struct.rtx_def*, %struct.rtx_def** %rtx1350, align 8
  %669 = load i32, i32* %mode.addr, align 4
  %670 = load i64, i64* %mask.addr, align 8
  %671 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %672 = load i32, i32* %next_select, align 4
  %call1351 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %668, i32 %669, i64 %670, %struct.rtx_def* %671, i32 %672)
  %call1352 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %666, %struct.rtx_def* %call1351)
  store %struct.rtx_def* %call1352, %struct.rtx_def** %op0, align 8
  %673 = load i32, i32* %op_mode, align 4
  %674 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %675 = bitcast %struct.rtx_def* %674 to i32*
  %bf.load1353 = load i32, i32* %675, align 8
  %bf.lshr1354 = lshr i32 %bf.load1353, 16
  %bf.clear1355 = and i32 %bf.lshr1354, 255
  %cmp1356 = icmp ne i32 %673, %bf.clear1355
  br i1 %cmp1356, label %if.then.1364, label %lor.lhs.false.1358

lor.lhs.false.1358:                               ; preds = %unop
  %676 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %677 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1359 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %677, i32 0, i32 1
  %arrayidx1360 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1359, i32 0, i64 0
  %rtx1361 = bitcast %union.rtunion_def* %arrayidx1360 to %struct.rtx_def**
  %678 = load %struct.rtx_def*, %struct.rtx_def** %rtx1361, align 8
  %cmp1362 = icmp ne %struct.rtx_def* %676, %678
  br i1 %cmp1362, label %if.then.1364, label %if.end.1366

if.then.1364:                                     ; preds = %lor.lhs.false.1358, %unop
  %679 = load i32, i32* %code, align 4
  %680 = load i32, i32* %op_mode, align 4
  %681 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %682 = load i32, i32* %op_mode, align 4
  %call1365 = call %struct.rtx_def* @simplify_gen_unary(i32 %679, i32 %680, %struct.rtx_def* %681, i32 %682)
  store %struct.rtx_def* %call1365, %struct.rtx_def** %x.addr, align 8
  br label %if.end.1366

if.end.1366:                                      ; preds = %if.then.1364, %lor.lhs.false.1358
  br label %sw.epilog

sw.bb.1367:                                       ; preds = %if.end.111
  %683 = load i64, i64* %mask.addr, align 8
  %and1368 = and i64 %683, -2
  %cmp1369 = icmp eq i64 %and1368, 0
  br i1 %cmp1369, label %land.lhs.true.1371, label %if.end.1397

land.lhs.true.1371:                               ; preds = %sw.bb.1367
  %684 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1372 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %684, i32 0, i32 1
  %arrayidx1373 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1372, i32 0, i64 1
  %rtx1374 = bitcast %union.rtunion_def* %arrayidx1373 to %struct.rtx_def**
  %685 = load %struct.rtx_def*, %struct.rtx_def** %rtx1374, align 8
  %686 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp1375 = icmp eq %struct.rtx_def* %685, %686
  br i1 %cmp1375, label %land.lhs.true.1377, label %if.end.1397

land.lhs.true.1377:                               ; preds = %land.lhs.true.1371
  %687 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1378 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %687, i32 0, i32 1
  %arrayidx1379 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1378, i32 0, i64 0
  %rtx1380 = bitcast %union.rtunion_def* %arrayidx1379 to %struct.rtx_def**
  %688 = load %struct.rtx_def*, %struct.rtx_def** %rtx1380, align 8
  %689 = load i32, i32* %mode.addr, align 4
  %call1381 = call i64 @nonzero_bits(%struct.rtx_def* %688, i32 %689)
  %call1382 = call i32 @exact_log2_wide(i64 %call1381)
  %cmp1383 = icmp sge i32 %call1382, 0
  br i1 %cmp1383, label %land.lhs.true.1385, label %if.end.1397

land.lhs.true.1385:                               ; preds = %land.lhs.true.1377
  %690 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1386 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %690, i32 0, i32 1
  %arrayidx1387 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1386, i32 0, i64 0
  %rtx1388 = bitcast %union.rtunion_def* %arrayidx1387 to %struct.rtx_def**
  %691 = load %struct.rtx_def*, %struct.rtx_def** %rtx1388, align 8
  %692 = load i32, i32* %mode.addr, align 4
  %call1389 = call i64 @nonzero_bits(%struct.rtx_def* %691, i32 %692)
  %cmp1390 = icmp eq i64 %call1389, 1
  br i1 %cmp1390, label %if.then.1392, label %if.end.1397

if.then.1392:                                     ; preds = %land.lhs.true.1385
  %693 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1393 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %693, i32 0, i32 1
  %arrayidx1394 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1393, i32 0, i64 0
  %rtx1395 = bitcast %union.rtunion_def* %arrayidx1394 to %struct.rtx_def**
  %694 = load %struct.rtx_def*, %struct.rtx_def** %rtx1395, align 8
  %695 = load i32, i32* %mode.addr, align 4
  %696 = load i64, i64* %mask.addr, align 8
  %697 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %698 = load i32, i32* %next_select, align 4
  %call1396 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %694, i32 %695, i64 %696, %struct.rtx_def* %697, i32 %698)
  store %struct.rtx_def* %call1396, %struct.rtx_def** %retval
  br label %return

if.end.1397:                                      ; preds = %land.lhs.true.1385, %land.lhs.true.1377, %land.lhs.true.1371, %sw.bb.1367
  br label %sw.epilog

sw.bb.1398:                                       ; preds = %if.end.111
  %699 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1399 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %699, i32 0, i32 1
  %arrayidx1400 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1399, i32 0, i64 1
  %rtx1401 = bitcast %union.rtunion_def* %arrayidx1400 to %struct.rtx_def**
  %700 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %701 = bitcast %struct.rtx_def* %700 to i32*
  %bf.load1402 = load i32, i32* %701, align 8
  %bf.lshr1403 = lshr i32 %bf.load1402, 16
  %bf.clear1404 = and i32 %bf.lshr1403, 255
  %702 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1405 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %702, i32 0, i32 1
  %arrayidx1406 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1405, i32 0, i64 1
  %rtx1407 = bitcast %union.rtunion_def* %arrayidx1406 to %struct.rtx_def**
  %703 = load %struct.rtx_def*, %struct.rtx_def** %rtx1407, align 8
  %704 = load i32, i32* %mode.addr, align 4
  %705 = load i64, i64* %mask.addr, align 8
  %706 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %707 = load i32, i32* %next_select, align 4
  %call1408 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %703, i32 %704, i64 %705, %struct.rtx_def* %706, i32 %707)
  %call1409 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %bf.clear1404, %struct.rtx_def* %call1408)
  call void @do_SUBST(%struct.rtx_def** %rtx1401, %struct.rtx_def* %call1409)
  %708 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1410 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %708, i32 0, i32 1
  %arrayidx1411 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1410, i32 0, i64 2
  %rtx1412 = bitcast %union.rtunion_def* %arrayidx1411 to %struct.rtx_def**
  %709 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %710 = bitcast %struct.rtx_def* %709 to i32*
  %bf.load1413 = load i32, i32* %710, align 8
  %bf.lshr1414 = lshr i32 %bf.load1413, 16
  %bf.clear1415 = and i32 %bf.lshr1414, 255
  %711 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1416 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %711, i32 0, i32 1
  %arrayidx1417 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1416, i32 0, i64 2
  %rtx1418 = bitcast %union.rtunion_def* %arrayidx1417 to %struct.rtx_def**
  %712 = load %struct.rtx_def*, %struct.rtx_def** %rtx1418, align 8
  %713 = load i32, i32* %mode.addr, align 4
  %714 = load i64, i64* %mask.addr, align 8
  %715 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %716 = load i32, i32* %next_select, align 4
  %call1419 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %712, i32 %713, i64 %714, %struct.rtx_def* %715, i32 %716)
  %call1420 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %bf.clear1415, %struct.rtx_def* %call1419)
  call void @do_SUBST(%struct.rtx_def** %rtx1412, %struct.rtx_def* %call1420)
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.111
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.1398, %if.end.1397, %if.end.1366, %if.end.1240, %if.end.1189, %if.end.761, %if.then.695, %if.end.640, %if.end.330, %if.end.197, %if.end.151, %if.end.138, %if.end.129
  %717 = load i32, i32* %mode.addr, align 4
  %718 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call1421 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %717, %struct.rtx_def* %718)
  store %struct.rtx_def* %call1421, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %sw.epilog, %if.then.1392, %if.then.1314, %if.then.1244, %if.then.1181, %if.then.1080, %if.then.951, %if.then.568, %if.then.459, %if.then.423, %if.then.383, %if.then.192, %if.then.136, %if.then.124, %sw.bb, %if.then.110, %if.then.94, %if.then.69, %if.then.63, %if.then
  %719 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %719
}

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @get_last_value(%struct.rtx_def* %x) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %value = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 63
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call = call i32 @subreg_lowpart_p(%struct.rtx_def* %2)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %land.lhs.true.1, label %if.end

land.lhs.true.1:                                  ; preds = %land.lhs.true
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load2 = load i32, i32* %4, align 8
  %bf.lshr = lshr i32 %bf.load2, 16
  %bf.clear3 = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear3 to i64
  %arrayidx = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom
  %5 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %5 to i32
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load5 = load i32, i32* %8, align 8
  %bf.lshr6 = lshr i32 %bf.load5, 16
  %bf.clear7 = and i32 %bf.lshr6, 255
  %idxprom8 = sext i32 %bf.clear7 to i64
  %arrayidx9 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom8
  %9 = load i8, i8* %arrayidx9, align 1
  %conv10 = zext i8 %9 to i32
  %cmp11 = icmp sle i32 %conv, %conv10
  br i1 %cmp11, label %land.lhs.true.13, label %if.end

land.lhs.true.13:                                 ; preds = %land.lhs.true.1
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i32 0, i64 0
  %rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rtx16, align 8
  %call17 = call %struct.rtx_def* @get_last_value(%struct.rtx_def* %11)
  store %struct.rtx_def* %call17, %struct.rtx_def** %value, align 8
  %cmp18 = icmp ne %struct.rtx_def* %call17, null
  br i1 %cmp18, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.13
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load20 = load i32, i32* %13, align 8
  %bf.lshr21 = lshr i32 %bf.load20, 16
  %bf.clear22 = and i32 %bf.lshr21, 255
  %14 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8
  %call23 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %bf.clear22, %struct.rtx_def* %14)
  store %struct.rtx_def* %call23, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true.13, %land.lhs.true.1, %land.lhs.true, %entry
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %16 = bitcast %struct.rtx_def* %15 to i32*
  %bf.load24 = load i32, i32* %16, align 8
  %bf.clear25 = and i32 %bf.load24, 65535
  %cmp26 = icmp ne i32 %bf.clear25, 61
  br i1 %cmp26, label %if.then.28, label %if.end.29

if.then.28:                                       ; preds = %if.end
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.29:                                        ; preds = %if.end
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx31 to i32*
  %18 = load i32, i32* %rtuint, align 4
  store i32 %18, i32* %regno, align 4
  %19 = load i32, i32* %regno, align 4
  %idxprom32 = zext i32 %19 to i64
  %20 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set_value, align 8
  %arrayidx33 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %20, i64 %idxprom32
  %21 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx33, align 8
  store %struct.rtx_def* %21, %struct.rtx_def** %value, align 8
  %22 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8
  %cmp34 = icmp eq %struct.rtx_def* %22, null
  br i1 %cmp34, label %if.then.53, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.29
  %23 = load i32, i32* %regno, align 4
  %idxprom36 = zext i32 %23 to i64
  %24 = load i32*, i32** @reg_last_set_label, align 8
  %arrayidx37 = getelementptr inbounds i32, i32* %24, i64 %idxprom36
  %25 = load i32, i32* %arrayidx37, align 4
  %26 = load i32, i32* @label_tick, align 4
  %cmp38 = icmp ne i32 %25, %26
  br i1 %cmp38, label %land.lhs.true.40, label %if.end.54

land.lhs.true.40:                                 ; preds = %lor.lhs.false
  %27 = load i32, i32* %regno, align 4
  %cmp41 = icmp ult i32 %27, 53
  br i1 %cmp41, label %if.then.53, label %lor.lhs.false.43

lor.lhs.false.43:                                 ; preds = %land.lhs.true.40
  %28 = load i32, i32* %regno, align 4
  %idxprom44 = zext i32 %28 to i64
  %29 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %29, i32 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx45 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg, i32 0, i64 %idxprom44
  %30 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx45, align 8
  %sets = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %30, i32 0, i32 3
  %31 = load i32, i32* %sets, align 4
  %cmp46 = icmp ne i32 %31, 1
  br i1 %cmp46, label %if.then.53, label %lor.lhs.false.48

lor.lhs.false.48:                                 ; preds = %lor.lhs.false.43
  %32 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %data49 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %32, i32 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data49 to [1 x %struct.basic_block_def*]*
  %arrayidx50 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %bb, i32 0, i64 0
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx50, align 8
  %global_live_at_start = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %33, i32 0, i32 8
  %34 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %global_live_at_start, align 8
  %35 = load i32, i32* %regno, align 4
  %call51 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %34, i32 %35)
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.then.53, label %if.end.54

if.then.53:                                       ; preds = %lor.lhs.false.48, %lor.lhs.false.43, %land.lhs.true.40, %if.end.29
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.54:                                        ; preds = %lor.lhs.false.48, %lor.lhs.false
  %36 = load i32, i32* %regno, align 4
  %idxprom55 = zext i32 %36 to i64
  %37 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set, align 8
  %arrayidx56 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %37, i64 %idxprom55
  %38 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx56, align 8
  %fld57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1
  %arrayidx58 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld57, i32 0, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx58 to i32*
  %39 = load i32, i32* %rtint, align 4
  %40 = load i32, i32* @max_uid_cuid, align 4
  %cmp59 = icmp sgt i32 %39, %40
  br i1 %cmp59, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.54
  %41 = load i32, i32* %regno, align 4
  %idxprom61 = zext i32 %41 to i64
  %42 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set, align 8
  %arrayidx62 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %42, i64 %idxprom61
  %43 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx62, align 8
  %call63 = call i32 @insn_cuid(%struct.rtx_def* %43)
  br label %cond.end

cond.false:                                       ; preds = %if.end.54
  %44 = load i32, i32* %regno, align 4
  %idxprom64 = zext i32 %44 to i64
  %45 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set, align 8
  %arrayidx65 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %45, i64 %idxprom64
  %46 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx65, align 8
  %fld66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx67 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld66, i32 0, i64 0
  %rtint68 = bitcast %union.rtunion_def* %arrayidx67 to i32*
  %47 = load i32, i32* %rtint68, align 4
  %idxprom69 = sext i32 %47 to i64
  %48 = load i32*, i32** @uid_cuid, align 8
  %arrayidx70 = getelementptr inbounds i32, i32* %48, i64 %idxprom69
  %49 = load i32, i32* %arrayidx70, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call63, %cond.true ], [ %49, %cond.false ]
  %50 = load i32, i32* @subst_low_cuid, align 4
  %cmp71 = icmp sge i32 %cond, %50
  br i1 %cmp71, label %if.then.73, label %if.end.74

if.then.73:                                       ; preds = %cond.end
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.74:                                        ; preds = %cond.end
  %51 = load i32, i32* %regno, align 4
  %idxprom75 = zext i32 %51 to i64
  %52 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set, align 8
  %arrayidx76 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %52, i64 %idxprom75
  %53 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx76, align 8
  %54 = load i32, i32* %regno, align 4
  %idxprom77 = zext i32 %54 to i64
  %55 = load i32*, i32** @reg_last_set_label, align 8
  %arrayidx78 = getelementptr inbounds i32, i32* %55, i64 %idxprom77
  %56 = load i32, i32* %arrayidx78, align 4
  %call79 = call i32 @get_last_value_validate(%struct.rtx_def** %value, %struct.rtx_def* %53, i32 %56, i32 0)
  %tobool80 = icmp ne i32 %call79, 0
  br i1 %tobool80, label %if.then.81, label %if.end.82

if.then.81:                                       ; preds = %if.end.74
  %57 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8
  store %struct.rtx_def* %57, %struct.rtx_def** %retval
  br label %return

if.end.82:                                        ; preds = %if.end.74
  %58 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8
  %call83 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %58)
  store %struct.rtx_def* %call83, %struct.rtx_def** %value, align 8
  %59 = load i32, i32* %regno, align 4
  %idxprom84 = zext i32 %59 to i64
  %60 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set, align 8
  %arrayidx85 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %60, i64 %idxprom84
  %61 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx85, align 8
  %62 = load i32, i32* %regno, align 4
  %idxprom86 = zext i32 %62 to i64
  %63 = load i32*, i32** @reg_last_set_label, align 8
  %arrayidx87 = getelementptr inbounds i32, i32* %63, i64 %idxprom86
  %64 = load i32, i32* %arrayidx87, align 4
  %call88 = call i32 @get_last_value_validate(%struct.rtx_def** %value, %struct.rtx_def* %61, i32 %64, i32 1)
  %tobool89 = icmp ne i32 %call88, 0
  br i1 %tobool89, label %if.then.90, label %if.end.91

if.then.90:                                       ; preds = %if.end.82
  %65 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8
  store %struct.rtx_def* %65, %struct.rtx_def** %retval
  br label %return

if.end.91:                                        ; preds = %if.end.82
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %if.end.91, %if.then.90, %if.then.81, %if.then.73, %if.then.53, %if.then.28, %if.then
  %66 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %66
}

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @reversed_comparison(%struct.rtx_def* %exp, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %exp.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %op0.addr = alloca %struct.rtx_def*, align 8
  %op1.addr = alloca %struct.rtx_def*, align 8
  %reversed_code = alloca i32, align 4
  store %struct.rtx_def* %exp, %struct.rtx_def** %exp.addr, align 8
  store i32 %mode, i32* %mode.addr, align 4
  store %struct.rtx_def* %op0, %struct.rtx_def** %op0.addr, align 8
  store %struct.rtx_def* %op1, %struct.rtx_def** %op1.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %exp.addr, align 8
  %call = call i32 @combine_reversed_comparison_code(%struct.rtx_def* %0)
  store i32 %call, i32* %reversed_code, align 4
  %1 = load i32, i32* %reversed_code, align 4
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.else:                                          ; preds = %entry
  %2 = load i32, i32* %reversed_code, align 4
  %3 = load i32, i32* %mode.addr, align 4
  %4 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %5 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %call1 = call %struct.rtx_def* @gen_binary(i32 %2, i32 %3, %struct.rtx_def* %4, %struct.rtx_def* %5)
  store %struct.rtx_def* %call1, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %if.else, %if.then
  %6 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %6
}

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @simplify_and_const_int(%struct.rtx_def* %x, i32 %mode, %struct.rtx_def* %varop, i64 %constop) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %varop.addr = alloca %struct.rtx_def*, align 8
  %constop.addr = alloca i64, align 8
  %nonzero = alloca i64, align 8
  %i = alloca i32, align 4
  %o0 = alloca %struct.rtx_def*, align 8
  %o1 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %mode, i32* %mode.addr, align 4
  store %struct.rtx_def* %varop, %struct.rtx_def** %varop.addr, align 8
  store i64 %constop, i64* %constop.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %1 = load i32, i32* %mode.addr, align 4
  %2 = load i64, i64* %constop.addr, align 8
  %call = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %0, i32 %1, i64 %2, %struct.rtx_def* null, i32 0)
  store %struct.rtx_def* %call, %struct.rtx_def** %varop.addr, align 8
  %3 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load = load i32, i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 49
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  store %struct.rtx_def* %5, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load1 = load i32, i32* %7, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 54
  br i1 %cmp3, label %if.then.4, label %if.end.7

if.then.4:                                        ; preds = %if.end
  %8 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx to i64*
  %9 = load i64, i64* %rtwint, align 8
  %10 = load i64, i64* %constop.addr, align 8
  %and = and i64 %9, %10
  %11 = load i32, i32* %mode.addr, align 4
  %call5 = call i64 @trunc_int_for_mode(i64 %and, i32 %11)
  %call6 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call5)
  store %struct.rtx_def* %call6, %struct.rtx_def** %retval
  br label %return

if.end.7:                                         ; preds = %if.end
  %12 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %13 = load i32, i32* %mode.addr, align 4
  %call8 = call i64 @nonzero_bits(%struct.rtx_def* %12, i32 %13)
  %14 = load i32, i32* %mode.addr, align 4
  %idxprom = sext i32 %14 to i64
  %arrayidx9 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom
  %15 = load i64, i64* %arrayidx9, align 8
  %and10 = and i64 %call8, %15
  store i64 %and10, i64* %nonzero, align 8
  %16 = load i64, i64* %nonzero, align 8
  %17 = load i64, i64* %constop.addr, align 8
  %and11 = and i64 %17, %16
  store i64 %and11, i64* %constop.addr, align 8
  %18 = load i64, i64* %constop.addr, align 8
  %cmp12 = icmp eq i64 %18, 0
  br i1 %cmp12, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end.7
  %19 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %19, %struct.rtx_def** %retval
  br label %return

if.end.14:                                        ; preds = %if.end.7
  %20 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load15 = load i32, i32* %21, align 8
  %bf.clear16 = and i32 %bf.load15, 65535
  %cmp17 = icmp eq i32 %bf.clear16, 77
  br i1 %cmp17, label %land.lhs.true, label %if.end.30

land.lhs.true:                                    ; preds = %if.end.14
  %22 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %24 = load i32, i32* %mode.addr, align 4
  %call20 = call i64 @nonzero_bits(%struct.rtx_def* %23, i32 %24)
  %cmp21 = icmp eq i64 %call20, 1
  br i1 %cmp21, label %land.lhs.true.22, label %if.end.30

land.lhs.true.22:                                 ; preds = %land.lhs.true
  %25 = load i64, i64* %constop.addr, align 8
  %call23 = call i32 @exact_log2_wide(i64 %25)
  store i32 %call23, i32* %i, align 4
  %cmp24 = icmp sge i32 %call23, 0
  br i1 %cmp24, label %if.then.25, label %if.end.30

if.then.25:                                       ; preds = %land.lhs.true.22
  %26 = load i32, i32* %mode.addr, align 4
  %27 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i32 0, i64 0
  %rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rtx28, align 8
  %29 = load i32, i32* %i, align 4
  %call29 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 87, i32 %26, %struct.rtx_def* %28, i32 %29)
  store %struct.rtx_def* %call29, %struct.rtx_def** %retval
  br label %return

if.end.30:                                        ; preds = %land.lhs.true.22, %land.lhs.true, %if.end.14
  %30 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load31 = load i32, i32* %31, align 8
  %bf.clear32 = and i32 %bf.load31, 65535
  %cmp33 = icmp eq i32 %bf.clear32, 84
  br i1 %cmp33, label %if.then.37, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.30
  %32 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load34 = load i32, i32* %33, align 8
  %bf.clear35 = and i32 %bf.load34, 65535
  %cmp36 = icmp eq i32 %bf.clear35, 85
  br i1 %cmp36, label %if.then.37, label %if.end.59

if.then.37:                                       ; preds = %lor.lhs.false, %if.end.30
  %34 = load i32, i32* %mode.addr, align 4
  %35 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %36 = bitcast %struct.rtx_def* %35 to i32*
  %bf.load38 = load i32, i32* %36, align 8
  %bf.clear39 = and i32 %bf.load38, 65535
  %37 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load40 = load i32, i32* %38, align 8
  %bf.lshr = lshr i32 %bf.load40, 16
  %bf.clear41 = and i32 %bf.lshr, 255
  %39 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %40 = bitcast %struct.rtx_def* %39 to i32*
  %bf.load42 = load i32, i32* %40, align 8
  %bf.lshr43 = lshr i32 %bf.load42, 16
  %bf.clear44 = and i32 %bf.lshr43, 255
  %41 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i32 0, i64 0
  %rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rtx47, align 8
  %43 = load i64, i64* %constop.addr, align 8
  %call48 = call %struct.rtx_def* @simplify_and_const_int(%struct.rtx_def* null, i32 %bf.clear44, %struct.rtx_def* %42, i64 %43)
  %44 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %45 = bitcast %struct.rtx_def* %44 to i32*
  %bf.load49 = load i32, i32* %45, align 8
  %bf.lshr50 = lshr i32 %bf.load49, 16
  %bf.clear51 = and i32 %bf.lshr50, 255
  %46 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld52, i32 0, i64 1
  %rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rtx54, align 8
  %48 = load i64, i64* %constop.addr, align 8
  %call55 = call %struct.rtx_def* @simplify_and_const_int(%struct.rtx_def* null, i32 %bf.clear51, %struct.rtx_def* %47, i64 %48)
  %call56 = call %struct.rtx_def* @gen_binary(i32 %bf.clear39, i32 %bf.clear41, %struct.rtx_def* %call48, %struct.rtx_def* %call55)
  %call57 = call %struct.rtx_def* @apply_distributive_law(%struct.rtx_def* %call56)
  %call58 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %34, %struct.rtx_def* %call57)
  store %struct.rtx_def* %call58, %struct.rtx_def** %retval
  br label %return

if.end.59:                                        ; preds = %lor.lhs.false
  %49 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %50 = bitcast %struct.rtx_def* %49 to i32*
  %bf.load60 = load i32, i32* %50, align 8
  %bf.clear61 = and i32 %bf.load60, 65535
  %cmp62 = icmp eq i32 %bf.clear61, 75
  br i1 %cmp62, label %land.lhs.true.63, label %if.end.81

land.lhs.true.63:                                 ; preds = %if.end.59
  %51 = load i64, i64* %constop.addr, align 8
  %add = add i64 %51, 1
  %call64 = call i32 @exact_log2_wide(i64 %add)
  %cmp65 = icmp sge i32 %call64, 0
  br i1 %cmp65, label %if.then.66, label %if.end.81

if.then.66:                                       ; preds = %land.lhs.true.63
  %52 = load i32, i32* %mode.addr, align 4
  %53 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i32 0, i64 0
  %rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx69, align 8
  %55 = load i64, i64* %constop.addr, align 8
  %call70 = call %struct.rtx_def* @simplify_and_const_int(%struct.rtx_def* null, i32 %52, %struct.rtx_def* %54, i64 %55)
  store %struct.rtx_def* %call70, %struct.rtx_def** %o0, align 8
  %56 = load i32, i32* %mode.addr, align 4
  %57 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %fld71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i32 0, i64 1
  %rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rtx73, align 8
  %59 = load i64, i64* %constop.addr, align 8
  %call74 = call %struct.rtx_def* @simplify_and_const_int(%struct.rtx_def* null, i32 %56, %struct.rtx_def* %58, i64 %59)
  store %struct.rtx_def* %call74, %struct.rtx_def** %o1, align 8
  %60 = load %struct.rtx_def*, %struct.rtx_def** %o0, align 8
  %61 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp75 = icmp eq %struct.rtx_def* %60, %61
  br i1 %cmp75, label %if.then.76, label %if.end.77

if.then.76:                                       ; preds = %if.then.66
  %62 = load %struct.rtx_def*, %struct.rtx_def** %o1, align 8
  store %struct.rtx_def* %62, %struct.rtx_def** %retval
  br label %return

if.end.77:                                        ; preds = %if.then.66
  %63 = load %struct.rtx_def*, %struct.rtx_def** %o1, align 8
  %64 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp78 = icmp eq %struct.rtx_def* %63, %64
  br i1 %cmp78, label %if.then.79, label %if.end.80

if.then.79:                                       ; preds = %if.end.77
  %65 = load %struct.rtx_def*, %struct.rtx_def** %o0, align 8
  store %struct.rtx_def* %65, %struct.rtx_def** %retval
  br label %return

if.end.80:                                        ; preds = %if.end.77
  br label %if.end.81

if.end.81:                                        ; preds = %if.end.80, %land.lhs.true.63, %if.end.59
  %66 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %tobool = icmp ne %struct.rtx_def* %66, null
  br i1 %tobool, label %land.lhs.true.82, label %if.else

land.lhs.true.82:                                 ; preds = %if.end.81
  %67 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i32 0, i64 0
  %rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rtx85, align 8
  %69 = bitcast %struct.rtx_def* %68 to i32*
  %bf.load86 = load i32, i32* %69, align 8
  %bf.clear87 = and i32 %bf.load86, 65535
  %cmp88 = icmp eq i32 %bf.clear87, 63
  br i1 %cmp88, label %land.lhs.true.89, label %if.else

land.lhs.true.89:                                 ; preds = %land.lhs.true.82
  %70 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx91 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld90, i32 0, i64 0
  %rtx92 = bitcast %union.rtunion_def* %arrayidx91 to %struct.rtx_def**
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rtx92, align 8
  %72 = bitcast %struct.rtx_def* %71 to i32*
  %bf.load93 = load i32, i32* %72, align 8
  %bf.lshr94 = lshr i32 %bf.load93, 16
  %bf.clear95 = and i32 %bf.lshr94, 255
  %73 = load i32, i32* %mode.addr, align 4
  %cmp96 = icmp eq i32 %bf.clear95, %73
  br i1 %cmp96, label %land.lhs.true.97, label %if.else

land.lhs.true.97:                                 ; preds = %land.lhs.true.89
  %74 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld98 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1
  %arrayidx99 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld98, i32 0, i64 0
  %rtx100 = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtx_def**
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rtx100, align 8
  %fld101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx102 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld101, i32 0, i64 0
  %rtx103 = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtx_def**
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rtx103, align 8
  %77 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %cmp104 = icmp eq %struct.rtx_def* %76, %77
  br i1 %cmp104, label %if.then.105, label %if.else

if.then.105:                                      ; preds = %land.lhs.true.97
  %78 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx107 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld106, i32 0, i64 0
  %rtx108 = bitcast %union.rtunion_def* %arrayidx107 to %struct.rtx_def**
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rtx108, align 8
  store %struct.rtx_def* %79, %struct.rtx_def** %varop.addr, align 8
  br label %if.end.110

if.else:                                          ; preds = %land.lhs.true.97, %land.lhs.true.89, %land.lhs.true.82, %if.end.81
  %80 = load i32, i32* %mode.addr, align 4
  %81 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %call109 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %80, %struct.rtx_def* %81)
  store %struct.rtx_def* %call109, %struct.rtx_def** %varop.addr, align 8
  br label %if.end.110

if.end.110:                                       ; preds = %if.else, %if.then.105
  %82 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %83 = bitcast %struct.rtx_def* %82 to i32*
  %bf.load111 = load i32, i32* %83, align 8
  %bf.clear112 = and i32 %bf.load111, 65535
  %cmp113 = icmp eq i32 %bf.clear112, 49
  br i1 %cmp113, label %if.then.114, label %if.end.116

if.then.114:                                      ; preds = %if.end.110
  %84 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %tobool115 = icmp ne %struct.rtx_def* %84, null
  br i1 %tobool115, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.114
  %85 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then.114
  %86 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %85, %cond.true ], [ %86, %cond.false ]
  store %struct.rtx_def* %cond, %struct.rtx_def** %retval
  br label %return

if.end.116:                                       ; preds = %if.end.110
  %87 = load i64, i64* %constop.addr, align 8
  %88 = load i64, i64* %nonzero, align 8
  %cmp117 = icmp eq i64 %87, %88
  br i1 %cmp117, label %if.then.118, label %if.else.119

if.then.118:                                      ; preds = %if.end.116
  %89 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  store %struct.rtx_def* %89, %struct.rtx_def** %x.addr, align 8
  br label %if.end.159

if.else.119:                                      ; preds = %if.end.116
  %90 = load i64, i64* %constop.addr, align 8
  %91 = load i32, i32* %mode.addr, align 4
  %call120 = call i64 @trunc_int_for_mode(i64 %90, i32 %91)
  store i64 %call120, i64* %constop.addr, align 8
  %92 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %cmp121 = icmp eq %struct.rtx_def* %92, null
  br i1 %cmp121, label %if.then.131, label %lor.lhs.false.122

lor.lhs.false.122:                                ; preds = %if.else.119
  %93 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %94 = bitcast %struct.rtx_def* %93 to i32*
  %bf.load123 = load i32, i32* %94, align 8
  %bf.clear124 = and i32 %bf.load123, 65535
  %cmp125 = icmp ne i32 %bf.clear124, 83
  br i1 %cmp125, label %if.then.131, label %lor.lhs.false.126

lor.lhs.false.126:                                ; preds = %lor.lhs.false.122
  %95 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %96 = bitcast %struct.rtx_def* %95 to i32*
  %bf.load127 = load i32, i32* %96, align 8
  %bf.lshr128 = lshr i32 %bf.load127, 16
  %bf.clear129 = and i32 %bf.lshr128, 255
  %97 = load i32, i32* %mode.addr, align 4
  %cmp130 = icmp ne i32 %bf.clear129, %97
  br i1 %cmp130, label %if.then.131, label %if.else.134

if.then.131:                                      ; preds = %lor.lhs.false.126, %lor.lhs.false.122, %if.else.119
  %98 = load i32, i32* %mode.addr, align 4
  %99 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  %100 = load i64, i64* %constop.addr, align 8
  %call132 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %100)
  %call133 = call %struct.rtx_def* @gen_binary(i32 83, i32 %98, %struct.rtx_def* %99, %struct.rtx_def* %call132)
  store %struct.rtx_def* %call133, %struct.rtx_def** %x.addr, align 8
  br label %if.end.158

if.else.134:                                      ; preds = %lor.lhs.false.126
  %101 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i32 0, i32 1
  %arrayidx136 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld135, i32 0, i64 1
  %rtx137 = bitcast %union.rtunion_def* %arrayidx136 to %struct.rtx_def**
  %102 = load %struct.rtx_def*, %struct.rtx_def** %rtx137, align 8
  %103 = bitcast %struct.rtx_def* %102 to i32*
  %bf.load138 = load i32, i32* %103, align 8
  %bf.clear139 = and i32 %bf.load138, 65535
  %cmp140 = icmp ne i32 %bf.clear139, 54
  br i1 %cmp140, label %if.then.149, label %lor.lhs.false.141

lor.lhs.false.141:                                ; preds = %if.else.134
  %104 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld142 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %104, i32 0, i32 1
  %arrayidx143 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld142, i32 0, i64 1
  %rtx144 = bitcast %union.rtunion_def* %arrayidx143 to %struct.rtx_def**
  %105 = load %struct.rtx_def*, %struct.rtx_def** %rtx144, align 8
  %fld145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1
  %arrayidx146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld145, i32 0, i64 0
  %rtwint147 = bitcast %union.rtunion_def* %arrayidx146 to i64*
  %106 = load i64, i64* %rtwint147, align 8
  %107 = load i64, i64* %constop.addr, align 8
  %cmp148 = icmp ne i64 %106, %107
  br i1 %cmp148, label %if.then.149, label %if.end.154

if.then.149:                                      ; preds = %lor.lhs.false.141, %if.else.134
  %108 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld150 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1
  %arrayidx151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld150, i32 0, i64 1
  %rtx152 = bitcast %union.rtunion_def* %arrayidx151 to %struct.rtx_def**
  %109 = load i64, i64* %constop.addr, align 8
  %call153 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %109)
  call void @do_SUBST(%struct.rtx_def** %rtx152, %struct.rtx_def* %call153)
  br label %if.end.154

if.end.154:                                       ; preds = %if.then.149, %lor.lhs.false.141
  %110 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld155 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %110, i32 0, i32 1
  %arrayidx156 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld155, i32 0, i64 0
  %rtx157 = bitcast %union.rtunion_def* %arrayidx156 to %struct.rtx_def**
  %111 = load %struct.rtx_def*, %struct.rtx_def** %varop.addr, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx157, %struct.rtx_def* %111)
  br label %if.end.158

if.end.158:                                       ; preds = %if.end.154, %if.then.131
  br label %if.end.159

if.end.159:                                       ; preds = %if.end.158, %if.then.118
  %112 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %112, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %if.end.159, %cond.end, %if.then.79, %if.then.76, %if.then.37, %if.then.25, %if.then.13, %if.then.4, %if.then
  %113 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %113
}

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @simplify_if_then_else(%struct.rtx_def* %x) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode = alloca i32, align 4
  %cond = alloca %struct.rtx_def*, align 8
  %true_rtx = alloca %struct.rtx_def*, align 8
  %false_rtx = alloca %struct.rtx_def*, align 8
  %true_code = alloca i32, align 4
  %comparison_p = alloca i32, align 4
  %temp = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %false_code = alloca i32, align 4
  %reversed = alloca %struct.rtx_def*, align 8
  %nzb = alloca i64, align 8
  %from = alloca %struct.rtx_def*, align 8
  %true_val = alloca %struct.rtx_def*, align 8
  %false_val = alloca %struct.rtx_def*, align 8
  %swapped = alloca i32, align 4
  %t = alloca %struct.rtx_def*, align 8
  %f = alloca %struct.rtx_def*, align 8
  %cond_op0 = alloca %struct.rtx_def*, align 8
  %cond_op1 = alloca %struct.rtx_def*, align 8
  %op = alloca i32, align 4
  %extend_op = alloca i32, align 4
  %m = alloca i32, align 4
  %z = alloca %struct.rtx_def*, align 8
  %c1 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  store i32 %bf.clear, i32* %mode, align 4
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %cond, align 8
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1, i32 0, i64 1
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rtx3, align 8
  store %struct.rtx_def* %5, %struct.rtx_def** %true_rtx, align 8
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i32 0, i64 2
  %rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtx6, align 8
  store %struct.rtx_def* %7, %struct.rtx_def** %false_rtx, align 8
  %8 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load7 = load i32, i32* %9, align 8
  %bf.clear8 = and i32 %bf.load7, 65535
  store i32 %bf.clear8, i32* %true_code, align 4
  %10 = load i32, i32* %true_code, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx9 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %11 = load i8, i8* %arrayidx9, align 1
  %conv = sext i8 %11 to i32
  %cmp = icmp eq i32 %conv, 60
  %conv10 = zext i1 %cmp to i32
  store i32 %conv10, i32* %comparison_p, align 4
  %12 = load i32, i32* %comparison_p, align 4
  %tobool = icmp ne i32 %12, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %13 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %14 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8
  %cmp11 = icmp eq %struct.rtx_def* %13, %14
  br i1 %cmp11, label %land.lhs.true.13, label %if.end

land.lhs.true.13:                                 ; preds = %land.lhs.true
  %15 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %16 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp14 = icmp eq %struct.rtx_def* %15, %16
  br i1 %cmp14, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.13
  %17 = load i32, i32* %true_code, align 4
  %18 = load i32, i32* %mode, align 4
  %19 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i32 0, i64 0
  %rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rtx18, align 8
  %21 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i32 0, i64 1
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rtx21, align 8
  %call = call %struct.rtx_def* @gen_binary(i32 %17, i32 %18, %struct.rtx_def* %20, %struct.rtx_def* %22)
  store %struct.rtx_def* %call, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true.13, %land.lhs.true, %entry
  %23 = load i32, i32* %comparison_p, align 4
  %tobool22 = icmp ne i32 %23, 0
  br i1 %tobool22, label %land.lhs.true.23, label %if.end.39

land.lhs.true.23:                                 ; preds = %if.end
  %24 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %25 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp24 = icmp eq %struct.rtx_def* %24, %25
  br i1 %cmp24, label %land.lhs.true.26, label %if.end.39

land.lhs.true.26:                                 ; preds = %land.lhs.true.23
  %26 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %27 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8
  %cmp27 = icmp eq %struct.rtx_def* %26, %27
  br i1 %cmp27, label %land.lhs.true.29, label %if.end.39

land.lhs.true.29:                                 ; preds = %land.lhs.true.26
  %28 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %29 = load i32, i32* %mode, align 4
  %30 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i32 0, i64 0
  %rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rtx32, align 8
  %32 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1
  %arrayidx34 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld33, i32 0, i64 1
  %rtx35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rtx35, align 8
  %call36 = call %struct.rtx_def* @reversed_comparison(%struct.rtx_def* %28, i32 %29, %struct.rtx_def* %31, %struct.rtx_def* %33)
  store %struct.rtx_def* %call36, %struct.rtx_def** %reversed, align 8
  %tobool37 = icmp ne %struct.rtx_def* %call36, null
  br i1 %tobool37, label %if.then.38, label %if.end.39

if.then.38:                                       ; preds = %land.lhs.true.29
  %34 = load %struct.rtx_def*, %struct.rtx_def** %reversed, align 8
  store %struct.rtx_def* %34, %struct.rtx_def** %retval
  br label %return

if.end.39:                                        ; preds = %land.lhs.true.29, %land.lhs.true.26, %land.lhs.true.23, %if.end
  %35 = load i32, i32* %comparison_p, align 4
  %tobool40 = icmp ne i32 %35, 0
  br i1 %tobool40, label %land.lhs.true.41, label %if.end.135

land.lhs.true.41:                                 ; preds = %if.end.39
  %36 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %call42 = call i32 @combine_reversed_comparison_code(%struct.rtx_def* %36)
  store i32 %call42, i32* %false_code, align 4
  %cmp43 = icmp ne i32 %call42, 0
  br i1 %cmp43, label %land.lhs.true.45, label %if.end.135

land.lhs.true.45:                                 ; preds = %land.lhs.true.41
  %37 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i32 0, i64 0
  %rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rtx48, align 8
  %39 = bitcast %struct.rtx_def* %38 to i32*
  %bf.load49 = load i32, i32* %39, align 8
  %bf.clear50 = and i32 %bf.load49, 65535
  %cmp51 = icmp eq i32 %bf.clear50, 61
  br i1 %cmp51, label %if.then.53, label %if.end.135

if.then.53:                                       ; preds = %land.lhs.true.45
  %40 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld54, i32 0, i64 0
  %rtx56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtx_def**
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rtx56, align 8
  store %struct.rtx_def* %41, %struct.rtx_def** %from, align 8
  %42 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1
  %arrayidx58 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld57, i32 0, i64 1
  %rtx59 = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rtx59, align 8
  store %struct.rtx_def* %43, %struct.rtx_def** %true_val, align 8
  %44 = load %struct.rtx_def*, %struct.rtx_def** %true_val, align 8
  store %struct.rtx_def* %44, %struct.rtx_def** %false_val, align 8
  store i32 0, i32* %swapped, align 4
  %45 = load i32, i32* %false_code, align 4
  %cmp60 = icmp eq i32 %45, 103
  br i1 %cmp60, label %if.then.62, label %if.end.63

if.then.62:                                       ; preds = %if.then.53
  store i32 1, i32* %swapped, align 4
  store i32 103, i32* %true_code, align 4
  store i32 102, i32* %false_code, align 4
  %46 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  store %struct.rtx_def* %46, %struct.rtx_def** %temp, align 8
  %47 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  store %struct.rtx_def* %47, %struct.rtx_def** %true_rtx, align 8
  %48 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  store %struct.rtx_def* %48, %struct.rtx_def** %false_rtx, align 8
  br label %if.end.63

if.end.63:                                        ; preds = %if.then.62, %if.then.53
  %49 = load i32, i32* %true_code, align 4
  %cmp64 = icmp eq i32 %49, 103
  br i1 %cmp64, label %land.lhs.true.66, label %if.else

land.lhs.true.66:                                 ; preds = %if.end.63
  %50 = load %struct.rtx_def*, %struct.rtx_def** %true_val, align 8
  %51 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp67 = icmp eq %struct.rtx_def* %50, %51
  br i1 %cmp67, label %land.lhs.true.69, label %if.else

land.lhs.true.69:                                 ; preds = %land.lhs.true.66
  %52 = load %struct.rtx_def*, %struct.rtx_def** %from, align 8
  %53 = load %struct.rtx_def*, %struct.rtx_def** %from, align 8
  %54 = bitcast %struct.rtx_def* %53 to i32*
  %bf.load70 = load i32, i32* %54, align 8
  %bf.lshr71 = lshr i32 %bf.load70, 16
  %bf.clear72 = and i32 %bf.lshr71, 255
  %call73 = call i64 @nonzero_bits(%struct.rtx_def* %52, i32 %bf.clear72)
  store i64 %call73, i64* %nzb, align 8
  %call74 = call i32 @exact_log2_wide(i64 %call73)
  %cmp75 = icmp sge i32 %call74, 0
  br i1 %cmp75, label %if.then.77, label %if.else

if.then.77:                                       ; preds = %land.lhs.true.69
  store i32 103, i32* %false_code, align 4
  %55 = load i64, i64* %nzb, align 8
  %call78 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %55)
  store %struct.rtx_def* %call78, %struct.rtx_def** %false_val, align 8
  br label %if.end.99

if.else:                                          ; preds = %land.lhs.true.69, %land.lhs.true.66, %if.end.63
  %56 = load i32, i32* %true_code, align 4
  %cmp79 = icmp eq i32 %56, 103
  br i1 %cmp79, label %land.lhs.true.81, label %if.end.98

land.lhs.true.81:                                 ; preds = %if.else
  %57 = load %struct.rtx_def*, %struct.rtx_def** %true_val, align 8
  %58 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp82 = icmp eq %struct.rtx_def* %57, %58
  br i1 %cmp82, label %land.lhs.true.84, label %if.end.98

land.lhs.true.84:                                 ; preds = %land.lhs.true.81
  %59 = load %struct.rtx_def*, %struct.rtx_def** %from, align 8
  %60 = load %struct.rtx_def*, %struct.rtx_def** %from, align 8
  %61 = bitcast %struct.rtx_def* %60 to i32*
  %bf.load85 = load i32, i32* %61, align 8
  %bf.lshr86 = lshr i32 %bf.load85, 16
  %bf.clear87 = and i32 %bf.lshr86, 255
  %call88 = call i32 @num_sign_bit_copies(%struct.rtx_def* %59, i32 %bf.clear87)
  %62 = load %struct.rtx_def*, %struct.rtx_def** %from, align 8
  %63 = bitcast %struct.rtx_def* %62 to i32*
  %bf.load89 = load i32, i32* %63, align 8
  %bf.lshr90 = lshr i32 %bf.load89, 16
  %bf.clear91 = and i32 %bf.lshr90, 255
  %idxprom92 = sext i32 %bf.clear91 to i64
  %arrayidx93 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom92
  %64 = load i16, i16* %arrayidx93, align 2
  %conv94 = zext i16 %64 to i32
  %cmp95 = icmp eq i32 %call88, %conv94
  br i1 %cmp95, label %if.then.97, label %if.end.98

if.then.97:                                       ; preds = %land.lhs.true.84
  store i32 103, i32* %false_code, align 4
  %65 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 63), align 8
  store %struct.rtx_def* %65, %struct.rtx_def** %false_val, align 8
  br label %if.end.98

if.end.98:                                        ; preds = %if.then.97, %land.lhs.true.84, %land.lhs.true.81, %if.else
  br label %if.end.99

if.end.99:                                        ; preds = %if.end.98, %if.then.77
  %66 = load %struct.rtx_def*, %struct.rtx_def** %from, align 8
  %67 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %call100 = call i32 @reg_mentioned_p(%struct.rtx_def* %66, %struct.rtx_def* %67)
  %tobool101 = icmp ne i32 %call100, 0
  br i1 %tobool101, label %if.then.102, label %if.end.106

if.then.102:                                      ; preds = %if.end.99
  %68 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %call103 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %68)
  %69 = load i32, i32* %true_code, align 4
  %70 = load %struct.rtx_def*, %struct.rtx_def** %from, align 8
  %71 = load %struct.rtx_def*, %struct.rtx_def** %true_val, align 8
  %call104 = call %struct.rtx_def* @known_cond(%struct.rtx_def* %call103, i32 %69, %struct.rtx_def* %70, %struct.rtx_def* %71)
  %72 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %73 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %call105 = call %struct.rtx_def* @subst(%struct.rtx_def* %call104, %struct.rtx_def* %72, %struct.rtx_def* %73, i32 0, i32 0)
  store %struct.rtx_def* %call105, %struct.rtx_def** %true_rtx, align 8
  br label %if.end.106

if.end.106:                                       ; preds = %if.then.102, %if.end.99
  %74 = load %struct.rtx_def*, %struct.rtx_def** %from, align 8
  %75 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %call107 = call i32 @reg_mentioned_p(%struct.rtx_def* %74, %struct.rtx_def* %75)
  %tobool108 = icmp ne i32 %call107, 0
  br i1 %tobool108, label %if.then.109, label %if.end.113

if.then.109:                                      ; preds = %if.end.106
  %76 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %call110 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %76)
  %77 = load i32, i32* %false_code, align 4
  %78 = load %struct.rtx_def*, %struct.rtx_def** %from, align 8
  %79 = load %struct.rtx_def*, %struct.rtx_def** %false_val, align 8
  %call111 = call %struct.rtx_def* @known_cond(%struct.rtx_def* %call110, i32 %77, %struct.rtx_def* %78, %struct.rtx_def* %79)
  %80 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %81 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %call112 = call %struct.rtx_def* @subst(%struct.rtx_def* %call111, %struct.rtx_def* %80, %struct.rtx_def* %81, i32 0, i32 0)
  store %struct.rtx_def* %call112, %struct.rtx_def** %false_rtx, align 8
  br label %if.end.113

if.end.113:                                       ; preds = %if.then.109, %if.end.106
  %82 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1
  %arrayidx115 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld114, i32 0, i64 1
  %rtx116 = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtx_def**
  %83 = load i32, i32* %swapped, align 4
  %tobool117 = icmp ne i32 %83, 0
  br i1 %tobool117, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.113
  %84 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end.113
  %85 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond118 = phi %struct.rtx_def* [ %84, %cond.true ], [ %85, %cond.false ]
  call void @do_SUBST(%struct.rtx_def** %rtx116, %struct.rtx_def* %cond118)
  %86 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1
  %arrayidx120 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld119, i32 0, i64 2
  %rtx121 = bitcast %union.rtunion_def* %arrayidx120 to %struct.rtx_def**
  %87 = load i32, i32* %swapped, align 4
  %tobool122 = icmp ne i32 %87, 0
  br i1 %tobool122, label %cond.true.123, label %cond.false.124

cond.true.123:                                    ; preds = %cond.end
  %88 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  br label %cond.end.125

cond.false.124:                                   ; preds = %cond.end
  %89 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  br label %cond.end.125

cond.end.125:                                     ; preds = %cond.false.124, %cond.true.123
  %cond126 = phi %struct.rtx_def* [ %88, %cond.true.123 ], [ %89, %cond.false.124 ]
  call void @do_SUBST(%struct.rtx_def** %rtx121, %struct.rtx_def* %cond126)
  %90 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1
  %arrayidx128 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld127, i32 0, i64 1
  %rtx129 = bitcast %union.rtunion_def* %arrayidx128 to %struct.rtx_def**
  %91 = load %struct.rtx_def*, %struct.rtx_def** %rtx129, align 8
  store %struct.rtx_def* %91, %struct.rtx_def** %true_rtx, align 8
  %92 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1
  %arrayidx131 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld130, i32 0, i64 2
  %rtx132 = bitcast %union.rtunion_def* %arrayidx131 to %struct.rtx_def**
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rtx132, align 8
  store %struct.rtx_def* %93, %struct.rtx_def** %false_rtx, align 8
  %94 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %95 = bitcast %struct.rtx_def* %94 to i32*
  %bf.load133 = load i32, i32* %95, align 8
  %bf.clear134 = and i32 %bf.load133, 65535
  store i32 %bf.clear134, i32* %true_code, align 4
  br label %if.end.135

if.end.135:                                       ; preds = %cond.end.125, %land.lhs.true.45, %land.lhs.true.41, %if.end.39
  %96 = load i32, i32* %comparison_p, align 4
  %tobool136 = icmp ne i32 %96, 0
  br i1 %tobool136, label %land.lhs.true.137, label %if.end.274

land.lhs.true.137:                                ; preds = %if.end.135
  %97 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %call138 = call i32 @combine_reversed_comparison_code(%struct.rtx_def* %97)
  %cmp139 = icmp ne i32 %call138, 0
  br i1 %cmp139, label %land.lhs.true.141, label %if.end.274

land.lhs.true.141:                                ; preds = %land.lhs.true.137
  %98 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %99 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %cmp142 = icmp eq %struct.rtx_def* %98, %99
  br i1 %cmp142, label %if.then.243, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.141
  %100 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %101 = bitcast %struct.rtx_def* %100 to i32*
  %bf.load144 = load i32, i32* %101, align 8
  %bf.clear145 = and i32 %bf.load144, 65535
  %cmp146 = icmp eq i32 %bf.clear145, 67
  br i1 %cmp146, label %land.lhs.true.183, label %lor.lhs.false.148

lor.lhs.false.148:                                ; preds = %lor.lhs.false
  %102 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %103 = bitcast %struct.rtx_def* %102 to i32*
  %bf.load149 = load i32, i32* %103, align 8
  %bf.clear150 = and i32 %bf.load149, 65535
  %cmp151 = icmp eq i32 %bf.clear150, 68
  br i1 %cmp151, label %land.lhs.true.183, label %lor.lhs.false.153

lor.lhs.false.153:                                ; preds = %lor.lhs.false.148
  %104 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %105 = bitcast %struct.rtx_def* %104 to i32*
  %bf.load154 = load i32, i32* %105, align 8
  %bf.clear155 = and i32 %bf.load154, 65535
  %cmp156 = icmp eq i32 %bf.clear155, 54
  br i1 %cmp156, label %land.lhs.true.183, label %lor.lhs.false.158

lor.lhs.false.158:                                ; preds = %lor.lhs.false.153
  %106 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %107 = bitcast %struct.rtx_def* %106 to i32*
  %bf.load159 = load i32, i32* %107, align 8
  %bf.clear160 = and i32 %bf.load159, 65535
  %cmp161 = icmp eq i32 %bf.clear160, 55
  br i1 %cmp161, label %land.lhs.true.183, label %lor.lhs.false.163

lor.lhs.false.163:                                ; preds = %lor.lhs.false.158
  %108 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %109 = bitcast %struct.rtx_def* %108 to i32*
  %bf.load164 = load i32, i32* %109, align 8
  %bf.clear165 = and i32 %bf.load164, 65535
  %cmp166 = icmp eq i32 %bf.clear165, 58
  br i1 %cmp166, label %land.lhs.true.183, label %lor.lhs.false.168

lor.lhs.false.168:                                ; preds = %lor.lhs.false.163
  %110 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %111 = bitcast %struct.rtx_def* %110 to i32*
  %bf.load169 = load i32, i32* %111, align 8
  %bf.clear170 = and i32 %bf.load169, 65535
  %cmp171 = icmp eq i32 %bf.clear170, 134
  br i1 %cmp171, label %land.lhs.true.183, label %lor.lhs.false.173

lor.lhs.false.173:                                ; preds = %lor.lhs.false.168
  %112 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %113 = bitcast %struct.rtx_def* %112 to i32*
  %bf.load174 = load i32, i32* %113, align 8
  %bf.clear175 = and i32 %bf.load174, 65535
  %cmp176 = icmp eq i32 %bf.clear175, 56
  br i1 %cmp176, label %land.lhs.true.183, label %lor.lhs.false.178

lor.lhs.false.178:                                ; preds = %lor.lhs.false.173
  %114 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %115 = bitcast %struct.rtx_def* %114 to i32*
  %bf.load179 = load i32, i32* %115, align 8
  %bf.clear180 = and i32 %bf.load179, 65535
  %cmp181 = icmp eq i32 %bf.clear180, 140
  br i1 %cmp181, label %land.lhs.true.183, label %lor.lhs.false.191

land.lhs.true.183:                                ; preds = %lor.lhs.false.178, %lor.lhs.false.173, %lor.lhs.false.168, %lor.lhs.false.163, %lor.lhs.false.158, %lor.lhs.false.153, %lor.lhs.false.148, %lor.lhs.false
  %116 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %117 = bitcast %struct.rtx_def* %116 to i32*
  %bf.load184 = load i32, i32* %117, align 8
  %bf.clear185 = and i32 %bf.load184, 65535
  %cmp186 = icmp ne i32 %bf.clear185, 54
  br i1 %cmp186, label %land.lhs.true.188, label %lor.lhs.false.191

land.lhs.true.188:                                ; preds = %land.lhs.true.183
  %118 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %119 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %cmp189 = icmp ne %struct.rtx_def* %118, %119
  br i1 %cmp189, label %if.then.243, label %lor.lhs.false.191

lor.lhs.false.191:                                ; preds = %land.lhs.true.188, %land.lhs.true.183, %lor.lhs.false.178
  %120 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %121 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp192 = icmp eq %struct.rtx_def* %120, %121
  br i1 %cmp192, label %if.then.243, label %lor.lhs.false.194

lor.lhs.false.194:                                ; preds = %lor.lhs.false.191
  %122 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %123 = bitcast %struct.rtx_def* %122 to i32*
  %bf.load195 = load i32, i32* %123, align 8
  %bf.clear196 = and i32 %bf.load195, 65535
  %idxprom197 = sext i32 %bf.clear196 to i64
  %arrayidx198 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom197
  %124 = load i8, i8* %arrayidx198, align 1
  %conv199 = sext i8 %124 to i32
  %cmp200 = icmp eq i32 %conv199, 111
  br i1 %cmp200, label %land.lhs.true.202, label %lor.lhs.false.210

land.lhs.true.202:                                ; preds = %lor.lhs.false.194
  %125 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %126 = bitcast %struct.rtx_def* %125 to i32*
  %bf.load203 = load i32, i32* %126, align 8
  %bf.clear204 = and i32 %bf.load203, 65535
  %idxprom205 = sext i32 %bf.clear204 to i64
  %arrayidx206 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom205
  %127 = load i8, i8* %arrayidx206, align 1
  %conv207 = sext i8 %127 to i32
  %cmp208 = icmp ne i32 %conv207, 111
  br i1 %cmp208, label %if.then.243, label %lor.lhs.false.210

lor.lhs.false.210:                                ; preds = %land.lhs.true.202, %lor.lhs.false.194
  %128 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %129 = bitcast %struct.rtx_def* %128 to i32*
  %bf.load211 = load i32, i32* %129, align 8
  %bf.clear212 = and i32 %bf.load211, 65535
  %cmp213 = icmp eq i32 %bf.clear212, 63
  br i1 %cmp213, label %land.lhs.true.215, label %lor.lhs.false.234

land.lhs.true.215:                                ; preds = %lor.lhs.false.210
  %130 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %fld216 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1
  %arrayidx217 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld216, i32 0, i64 0
  %rtx218 = bitcast %union.rtunion_def* %arrayidx217 to %struct.rtx_def**
  %131 = load %struct.rtx_def*, %struct.rtx_def** %rtx218, align 8
  %132 = bitcast %struct.rtx_def* %131 to i32*
  %bf.load219 = load i32, i32* %132, align 8
  %bf.clear220 = and i32 %bf.load219, 65535
  %idxprom221 = sext i32 %bf.clear220 to i64
  %arrayidx222 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom221
  %133 = load i8, i8* %arrayidx222, align 1
  %conv223 = sext i8 %133 to i32
  %cmp224 = icmp eq i32 %conv223, 111
  br i1 %cmp224, label %land.lhs.true.226, label %lor.lhs.false.234

land.lhs.true.226:                                ; preds = %land.lhs.true.215
  %134 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %135 = bitcast %struct.rtx_def* %134 to i32*
  %bf.load227 = load i32, i32* %135, align 8
  %bf.clear228 = and i32 %bf.load227, 65535
  %idxprom229 = sext i32 %bf.clear228 to i64
  %arrayidx230 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom229
  %136 = load i8, i8* %arrayidx230, align 1
  %conv231 = sext i8 %136 to i32
  %cmp232 = icmp ne i32 %conv231, 111
  br i1 %cmp232, label %if.then.243, label %lor.lhs.false.234

lor.lhs.false.234:                                ; preds = %land.lhs.true.226, %land.lhs.true.215, %lor.lhs.false.210
  %137 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %138 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %call235 = call i32 @reg_mentioned_p(%struct.rtx_def* %137, %struct.rtx_def* %138)
  %tobool236 = icmp ne i32 %call235, 0
  br i1 %tobool236, label %if.then.243, label %lor.lhs.false.237

lor.lhs.false.237:                                ; preds = %lor.lhs.false.234
  %139 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %140 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld238 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %140, i32 0, i32 1
  %arrayidx239 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld238, i32 0, i64 0
  %rtx240 = bitcast %union.rtunion_def* %arrayidx239 to %struct.rtx_def**
  %141 = load %struct.rtx_def*, %struct.rtx_def** %rtx240, align 8
  %call241 = call i32 @rtx_equal_p(%struct.rtx_def* %139, %struct.rtx_def* %141)
  %tobool242 = icmp ne i32 %call241, 0
  br i1 %tobool242, label %if.then.243, label %if.end.274

if.then.243:                                      ; preds = %lor.lhs.false.237, %lor.lhs.false.234, %land.lhs.true.226, %land.lhs.true.202, %lor.lhs.false.191, %land.lhs.true.188, %land.lhs.true.141
  %142 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %call244 = call i32 @reversed_comparison_code(%struct.rtx_def* %142, %struct.rtx_def* null)
  store i32 %call244, i32* %true_code, align 4
  %143 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld245 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1
  %arrayidx246 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld245, i32 0, i64 0
  %rtx247 = bitcast %union.rtunion_def* %arrayidx246 to %struct.rtx_def**
  %144 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %145 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %146 = bitcast %struct.rtx_def* %145 to i32*
  %bf.load248 = load i32, i32* %146, align 8
  %bf.lshr249 = lshr i32 %bf.load248, 16
  %bf.clear250 = and i32 %bf.lshr249, 255
  %147 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld251 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %147, i32 0, i32 1
  %arrayidx252 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld251, i32 0, i64 0
  %rtx253 = bitcast %union.rtunion_def* %arrayidx252 to %struct.rtx_def**
  %148 = load %struct.rtx_def*, %struct.rtx_def** %rtx253, align 8
  %149 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld254 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %149, i32 0, i32 1
  %arrayidx255 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld254, i32 0, i64 1
  %rtx256 = bitcast %union.rtunion_def* %arrayidx255 to %struct.rtx_def**
  %150 = load %struct.rtx_def*, %struct.rtx_def** %rtx256, align 8
  %call257 = call %struct.rtx_def* @reversed_comparison(%struct.rtx_def* %144, i32 %bf.clear250, %struct.rtx_def* %148, %struct.rtx_def* %150)
  call void @do_SUBST(%struct.rtx_def** %rtx247, %struct.rtx_def* %call257)
  %151 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld258 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %151, i32 0, i32 1
  %arrayidx259 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld258, i32 0, i64 1
  %rtx260 = bitcast %union.rtunion_def* %arrayidx259 to %struct.rtx_def**
  %152 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx260, %struct.rtx_def* %152)
  %153 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld261 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1
  %arrayidx262 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld261, i32 0, i64 2
  %rtx263 = bitcast %union.rtunion_def* %arrayidx262 to %struct.rtx_def**
  %154 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx263, %struct.rtx_def* %154)
  %155 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  store %struct.rtx_def* %155, %struct.rtx_def** %temp, align 8
  %156 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  store %struct.rtx_def* %156, %struct.rtx_def** %true_rtx, align 8
  %157 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  store %struct.rtx_def* %157, %struct.rtx_def** %false_rtx, align 8
  %158 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld264 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %158, i32 0, i32 1
  %arrayidx265 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld264, i32 0, i64 0
  %rtx266 = bitcast %union.rtunion_def* %arrayidx265 to %struct.rtx_def**
  %159 = load %struct.rtx_def*, %struct.rtx_def** %rtx266, align 8
  store %struct.rtx_def* %159, %struct.rtx_def** %cond, align 8
  %160 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %161 = bitcast %struct.rtx_def* %160 to i32*
  %bf.load267 = load i32, i32* %161, align 8
  %bf.clear268 = and i32 %bf.load267, 65535
  store i32 %bf.clear268, i32* %true_code, align 4
  %162 = load i32, i32* %true_code, align 4
  %idxprom269 = sext i32 %162 to i64
  %arrayidx270 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom269
  %163 = load i8, i8* %arrayidx270, align 1
  %conv271 = sext i8 %163 to i32
  %cmp272 = icmp eq i32 %conv271, 60
  %conv273 = zext i1 %cmp272 to i32
  store i32 %conv273, i32* %comparison_p, align 4
  br label %if.end.274

if.end.274:                                       ; preds = %if.then.243, %lor.lhs.false.237, %land.lhs.true.137, %if.end.135
  %164 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %165 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %call275 = call i32 @rtx_equal_p(%struct.rtx_def* %164, %struct.rtx_def* %165)
  %tobool276 = icmp ne i32 %call275, 0
  br i1 %tobool276, label %land.lhs.true.277, label %if.end.281

land.lhs.true.277:                                ; preds = %if.end.274
  %166 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %call278 = call i32 @side_effects_p(%struct.rtx_def* %166)
  %tobool279 = icmp ne i32 %call278, 0
  br i1 %tobool279, label %if.end.281, label %if.then.280

if.then.280:                                      ; preds = %land.lhs.true.277
  %167 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  store %struct.rtx_def* %167, %struct.rtx_def** %retval
  br label %return

if.end.281:                                       ; preds = %land.lhs.true.277, %if.end.274
  %168 = load i32, i32* %true_code, align 4
  %cmp282 = icmp eq i32 %168, 103
  br i1 %cmp282, label %land.lhs.true.284, label %if.else.317

land.lhs.true.284:                                ; preds = %if.end.281
  %169 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %call285 = call i32 @side_effects_p(%struct.rtx_def* %169)
  %tobool286 = icmp ne i32 %call285, 0
  br i1 %tobool286, label %if.else.317, label %land.lhs.true.287

land.lhs.true.287:                                ; preds = %land.lhs.true.284
  %170 = load i32, i32* %mode, align 4
  %idxprom288 = sext i32 %170 to i64
  %arrayidx289 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom288
  %171 = load i32, i32* %arrayidx289, align 4
  %cmp290 = icmp eq i32 %171, 2
  br i1 %cmp290, label %lor.lhs.false.302, label %lor.lhs.false.292

lor.lhs.false.292:                                ; preds = %land.lhs.true.287
  %172 = load i32, i32* %mode, align 4
  %idxprom293 = sext i32 %172 to i64
  %arrayidx294 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom293
  %173 = load i32, i32* %arrayidx294, align 4
  %cmp295 = icmp eq i32 %173, 6
  br i1 %cmp295, label %lor.lhs.false.302, label %lor.lhs.false.297

lor.lhs.false.297:                                ; preds = %lor.lhs.false.292
  %174 = load i32, i32* %mode, align 4
  %idxprom298 = sext i32 %174 to i64
  %arrayidx299 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom298
  %175 = load i32, i32* %arrayidx299, align 4
  %cmp300 = icmp eq i32 %175, 8
  br i1 %cmp300, label %lor.lhs.false.302, label %land.lhs.true.304

lor.lhs.false.302:                                ; preds = %lor.lhs.false.297, %lor.lhs.false.292, %land.lhs.true.287
  %176 = load i32, i32* @flag_unsafe_math_optimizations, align 4
  %tobool303 = icmp ne i32 %176, 0
  br i1 %tobool303, label %land.lhs.true.304, label %if.else.317

land.lhs.true.304:                                ; preds = %lor.lhs.false.302, %lor.lhs.false.297
  %177 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld305 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %177, i32 0, i32 1
  %arrayidx306 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld305, i32 0, i64 0
  %rtx307 = bitcast %union.rtunion_def* %arrayidx306 to %struct.rtx_def**
  %178 = load %struct.rtx_def*, %struct.rtx_def** %rtx307, align 8
  %179 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %call308 = call i32 @rtx_equal_p(%struct.rtx_def* %178, %struct.rtx_def* %179)
  %tobool309 = icmp ne i32 %call308, 0
  br i1 %tobool309, label %land.lhs.true.310, label %if.else.317

land.lhs.true.310:                                ; preds = %land.lhs.true.304
  %180 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld311 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %180, i32 0, i32 1
  %arrayidx312 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld311, i32 0, i64 1
  %rtx313 = bitcast %union.rtunion_def* %arrayidx312 to %struct.rtx_def**
  %181 = load %struct.rtx_def*, %struct.rtx_def** %rtx313, align 8
  %182 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %call314 = call i32 @rtx_equal_p(%struct.rtx_def* %181, %struct.rtx_def* %182)
  %tobool315 = icmp ne i32 %call314, 0
  br i1 %tobool315, label %if.then.316, label %if.else.317

if.then.316:                                      ; preds = %land.lhs.true.310
  %183 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  store %struct.rtx_def* %183, %struct.rtx_def** %retval
  br label %return

if.else.317:                                      ; preds = %land.lhs.true.310, %land.lhs.true.304, %lor.lhs.false.302, %land.lhs.true.284, %if.end.281
  %184 = load i32, i32* %true_code, align 4
  %cmp318 = icmp eq i32 %184, 102
  br i1 %cmp318, label %land.lhs.true.320, label %if.end.353

land.lhs.true.320:                                ; preds = %if.else.317
  %185 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %call321 = call i32 @side_effects_p(%struct.rtx_def* %185)
  %tobool322 = icmp ne i32 %call321, 0
  br i1 %tobool322, label %if.end.353, label %land.lhs.true.323

land.lhs.true.323:                                ; preds = %land.lhs.true.320
  %186 = load i32, i32* %mode, align 4
  %idxprom324 = sext i32 %186 to i64
  %arrayidx325 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom324
  %187 = load i32, i32* %arrayidx325, align 4
  %cmp326 = icmp eq i32 %187, 2
  br i1 %cmp326, label %lor.lhs.false.338, label %lor.lhs.false.328

lor.lhs.false.328:                                ; preds = %land.lhs.true.323
  %188 = load i32, i32* %mode, align 4
  %idxprom329 = sext i32 %188 to i64
  %arrayidx330 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom329
  %189 = load i32, i32* %arrayidx330, align 4
  %cmp331 = icmp eq i32 %189, 6
  br i1 %cmp331, label %lor.lhs.false.338, label %lor.lhs.false.333

lor.lhs.false.333:                                ; preds = %lor.lhs.false.328
  %190 = load i32, i32* %mode, align 4
  %idxprom334 = sext i32 %190 to i64
  %arrayidx335 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom334
  %191 = load i32, i32* %arrayidx335, align 4
  %cmp336 = icmp eq i32 %191, 8
  br i1 %cmp336, label %lor.lhs.false.338, label %land.lhs.true.340

lor.lhs.false.338:                                ; preds = %lor.lhs.false.333, %lor.lhs.false.328, %land.lhs.true.323
  %192 = load i32, i32* @flag_unsafe_math_optimizations, align 4
  %tobool339 = icmp ne i32 %192, 0
  br i1 %tobool339, label %land.lhs.true.340, label %if.end.353

land.lhs.true.340:                                ; preds = %lor.lhs.false.338, %lor.lhs.false.333
  %193 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld341 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %193, i32 0, i32 1
  %arrayidx342 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld341, i32 0, i64 0
  %rtx343 = bitcast %union.rtunion_def* %arrayidx342 to %struct.rtx_def**
  %194 = load %struct.rtx_def*, %struct.rtx_def** %rtx343, align 8
  %195 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %call344 = call i32 @rtx_equal_p(%struct.rtx_def* %194, %struct.rtx_def* %195)
  %tobool345 = icmp ne i32 %call344, 0
  br i1 %tobool345, label %land.lhs.true.346, label %if.end.353

land.lhs.true.346:                                ; preds = %land.lhs.true.340
  %196 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld347 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %196, i32 0, i32 1
  %arrayidx348 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld347, i32 0, i64 1
  %rtx349 = bitcast %union.rtunion_def* %arrayidx348 to %struct.rtx_def**
  %197 = load %struct.rtx_def*, %struct.rtx_def** %rtx349, align 8
  %198 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %call350 = call i32 @rtx_equal_p(%struct.rtx_def* %197, %struct.rtx_def* %198)
  %tobool351 = icmp ne i32 %call350, 0
  br i1 %tobool351, label %if.then.352, label %if.end.353

if.then.352:                                      ; preds = %land.lhs.true.346
  %199 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  store %struct.rtx_def* %199, %struct.rtx_def** %retval
  br label %return

if.end.353:                                       ; preds = %land.lhs.true.346, %land.lhs.true.340, %lor.lhs.false.338, %land.lhs.true.320, %if.else.317
  br label %if.end.354

if.end.354:                                       ; preds = %if.end.353
  %200 = load i32, i32* %mode, align 4
  %idxprom355 = sext i32 %200 to i64
  %arrayidx356 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom355
  %201 = load i32, i32* %arrayidx356, align 4
  %cmp357 = icmp eq i32 %201, 1
  br i1 %cmp357, label %land.lhs.true.359, label %if.end.386

land.lhs.true.359:                                ; preds = %if.end.354
  %202 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %203 = bitcast %struct.rtx_def* %202 to i32*
  %bf.load360 = load i32, i32* %203, align 8
  %bf.clear361 = and i32 %bf.load360, 65535
  %cmp362 = icmp eq i32 %bf.clear361, 77
  br i1 %cmp362, label %land.lhs.true.364, label %if.end.386

land.lhs.true.364:                                ; preds = %land.lhs.true.359
  %204 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %205 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %fld365 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %205, i32 0, i32 1
  %arrayidx366 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld365, i32 0, i64 0
  %rtx367 = bitcast %union.rtunion_def* %arrayidx366 to %struct.rtx_def**
  %206 = load %struct.rtx_def*, %struct.rtx_def** %rtx367, align 8
  %call368 = call i32 @rtx_equal_p(%struct.rtx_def* %204, %struct.rtx_def* %206)
  %tobool369 = icmp ne i32 %call368, 0
  br i1 %tobool369, label %land.lhs.true.370, label %if.end.386

land.lhs.true.370:                                ; preds = %land.lhs.true.364
  %207 = load i32, i32* %comparison_p, align 4
  %tobool371 = icmp ne i32 %207, 0
  br i1 %tobool371, label %land.lhs.true.372, label %if.end.386

land.lhs.true.372:                                ; preds = %land.lhs.true.370
  %208 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %209 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld373 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %209, i32 0, i32 1
  %arrayidx374 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld373, i32 0, i64 0
  %rtx375 = bitcast %union.rtunion_def* %arrayidx374 to %struct.rtx_def**
  %210 = load %struct.rtx_def*, %struct.rtx_def** %rtx375, align 8
  %call376 = call i32 @rtx_equal_p(%struct.rtx_def* %208, %struct.rtx_def* %210)
  %tobool377 = icmp ne i32 %call376, 0
  br i1 %tobool377, label %land.lhs.true.378, label %if.end.386

land.lhs.true.378:                                ; preds = %land.lhs.true.372
  %211 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %call379 = call i32 @side_effects_p(%struct.rtx_def* %211)
  %tobool380 = icmp ne i32 %call379, 0
  br i1 %tobool380, label %if.end.386, label %if.then.381

if.then.381:                                      ; preds = %land.lhs.true.378
  %212 = load i32, i32* %true_code, align 4
  switch i32 %212, label %sw.default [
    i32 105, label %sw.bb
    i32 104, label %sw.bb
    i32 107, label %sw.bb.383
    i32 106, label %sw.bb.383
  ]

sw.bb:                                            ; preds = %if.then.381, %if.then.381
  %213 = load i32, i32* %mode, align 4
  %214 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %215 = load i32, i32* %mode, align 4
  %call382 = call %struct.rtx_def* @simplify_gen_unary(i32 129, i32 %213, %struct.rtx_def* %214, i32 %215)
  store %struct.rtx_def* %call382, %struct.rtx_def** %retval
  br label %return

sw.bb.383:                                        ; preds = %if.then.381, %if.then.381
  %216 = load i32, i32* %mode, align 4
  %217 = load i32, i32* %mode, align 4
  %218 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %219 = load i32, i32* %mode, align 4
  %call384 = call %struct.rtx_def* @simplify_gen_unary(i32 129, i32 %217, %struct.rtx_def* %218, i32 %219)
  %220 = load i32, i32* %mode, align 4
  %call385 = call %struct.rtx_def* @simplify_gen_unary(i32 77, i32 %216, %struct.rtx_def* %call384, i32 %220)
  store %struct.rtx_def* %call385, %struct.rtx_def** %retval
  br label %return

sw.default:                                       ; preds = %if.then.381
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  br label %if.end.386

if.end.386:                                       ; preds = %sw.epilog, %land.lhs.true.378, %land.lhs.true.372, %land.lhs.true.370, %land.lhs.true.364, %land.lhs.true.359, %if.end.354
  %221 = load i32, i32* %mode, align 4
  %idxprom387 = sext i32 %221 to i64
  %arrayidx388 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom387
  %222 = load i32, i32* %arrayidx388, align 4
  %cmp389 = icmp eq i32 %222, 2
  br i1 %cmp389, label %lor.lhs.false.401, label %lor.lhs.false.391

lor.lhs.false.391:                                ; preds = %if.end.386
  %223 = load i32, i32* %mode, align 4
  %idxprom392 = sext i32 %223 to i64
  %arrayidx393 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom392
  %224 = load i32, i32* %arrayidx393, align 4
  %cmp394 = icmp eq i32 %224, 6
  br i1 %cmp394, label %lor.lhs.false.401, label %lor.lhs.false.396

lor.lhs.false.396:                                ; preds = %lor.lhs.false.391
  %225 = load i32, i32* %mode, align 4
  %idxprom397 = sext i32 %225 to i64
  %arrayidx398 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom397
  %226 = load i32, i32* %arrayidx398, align 4
  %cmp399 = icmp eq i32 %226, 8
  br i1 %cmp399, label %lor.lhs.false.401, label %land.lhs.true.403

lor.lhs.false.401:                                ; preds = %lor.lhs.false.396, %lor.lhs.false.391, %if.end.386
  %227 = load i32, i32* @flag_unsafe_math_optimizations, align 4
  %tobool402 = icmp ne i32 %227, 0
  br i1 %tobool402, label %land.lhs.true.403, label %if.end.431

land.lhs.true.403:                                ; preds = %lor.lhs.false.401, %lor.lhs.false.396
  %228 = load i32, i32* %comparison_p, align 4
  %tobool404 = icmp ne i32 %228, 0
  br i1 %tobool404, label %land.lhs.true.405, label %if.end.431

land.lhs.true.405:                                ; preds = %land.lhs.true.403
  %229 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld406 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %229, i32 0, i32 1
  %arrayidx407 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld406, i32 0, i64 0
  %rtx408 = bitcast %union.rtunion_def* %arrayidx407 to %struct.rtx_def**
  %230 = load %struct.rtx_def*, %struct.rtx_def** %rtx408, align 8
  %231 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %call409 = call i32 @rtx_equal_p(%struct.rtx_def* %230, %struct.rtx_def* %231)
  %tobool410 = icmp ne i32 %call409, 0
  br i1 %tobool410, label %land.lhs.true.411, label %if.end.431

land.lhs.true.411:                                ; preds = %land.lhs.true.405
  %232 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld412 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %232, i32 0, i32 1
  %arrayidx413 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld412, i32 0, i64 1
  %rtx414 = bitcast %union.rtunion_def* %arrayidx413 to %struct.rtx_def**
  %233 = load %struct.rtx_def*, %struct.rtx_def** %rtx414, align 8
  %234 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %call415 = call i32 @rtx_equal_p(%struct.rtx_def* %233, %struct.rtx_def* %234)
  %tobool416 = icmp ne i32 %call415, 0
  br i1 %tobool416, label %land.lhs.true.417, label %if.end.431

land.lhs.true.417:                                ; preds = %land.lhs.true.411
  %235 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %call418 = call i32 @side_effects_p(%struct.rtx_def* %235)
  %tobool419 = icmp ne i32 %call418, 0
  br i1 %tobool419, label %if.end.431, label %if.then.420

if.then.420:                                      ; preds = %land.lhs.true.417
  %236 = load i32, i32* %true_code, align 4
  switch i32 %236, label %sw.default.429 [
    i32 104, label %sw.bb.421
    i32 105, label %sw.bb.421
    i32 106, label %sw.bb.423
    i32 107, label %sw.bb.423
    i32 108, label %sw.bb.425
    i32 109, label %sw.bb.425
    i32 110, label %sw.bb.427
    i32 111, label %sw.bb.427
  ]

sw.bb.421:                                        ; preds = %if.then.420, %if.then.420
  %237 = load i32, i32* %mode, align 4
  %238 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %239 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %call422 = call %struct.rtx_def* @gen_binary(i32 93, i32 %237, %struct.rtx_def* %238, %struct.rtx_def* %239)
  store %struct.rtx_def* %call422, %struct.rtx_def** %retval
  br label %return

sw.bb.423:                                        ; preds = %if.then.420, %if.then.420
  %240 = load i32, i32* %mode, align 4
  %241 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %242 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %call424 = call %struct.rtx_def* @gen_binary(i32 92, i32 %240, %struct.rtx_def* %241, %struct.rtx_def* %242)
  store %struct.rtx_def* %call424, %struct.rtx_def** %retval
  br label %return

sw.bb.425:                                        ; preds = %if.then.420, %if.then.420
  %243 = load i32, i32* %mode, align 4
  %244 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %245 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %call426 = call %struct.rtx_def* @gen_binary(i32 95, i32 %243, %struct.rtx_def* %244, %struct.rtx_def* %245)
  store %struct.rtx_def* %call426, %struct.rtx_def** %retval
  br label %return

sw.bb.427:                                        ; preds = %if.then.420, %if.then.420
  %246 = load i32, i32* %mode, align 4
  %247 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %248 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %call428 = call %struct.rtx_def* @gen_binary(i32 94, i32 %246, %struct.rtx_def* %247, %struct.rtx_def* %248)
  store %struct.rtx_def* %call428, %struct.rtx_def** %retval
  br label %return

sw.default.429:                                   ; preds = %if.then.420
  br label %sw.epilog.430

sw.epilog.430:                                    ; preds = %sw.default.429
  br label %if.end.431

if.end.431:                                       ; preds = %sw.epilog.430, %land.lhs.true.417, %land.lhs.true.411, %land.lhs.true.405, %land.lhs.true.403, %lor.lhs.false.401
  %249 = load i32, i32* %comparison_p, align 4
  %tobool432 = icmp ne i32 %249, 0
  br i1 %tobool432, label %land.lhs.true.433, label %if.end.1017

land.lhs.true.433:                                ; preds = %if.end.431
  %250 = load i32, i32* %mode, align 4
  %cmp434 = icmp ne i32 %250, 0
  br i1 %cmp434, label %land.lhs.true.436, label %if.end.1017

land.lhs.true.436:                                ; preds = %land.lhs.true.433
  %251 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call437 = call i32 @side_effects_p(%struct.rtx_def* %251)
  %tobool438 = icmp ne i32 %call437, 0
  br i1 %tobool438, label %if.end.1017, label %if.then.439

if.then.439:                                      ; preds = %land.lhs.true.436
  %252 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %call440 = call %struct.rtx_def* @make_compound_operation(%struct.rtx_def* %252, i32 47)
  store %struct.rtx_def* %call440, %struct.rtx_def** %t, align 8
  %253 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %call441 = call %struct.rtx_def* @make_compound_operation(%struct.rtx_def* %253, i32 47)
  store %struct.rtx_def* %call441, %struct.rtx_def** %f, align 8
  %254 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld442 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %254, i32 0, i32 1
  %arrayidx443 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld442, i32 0, i64 0
  %rtx444 = bitcast %union.rtunion_def* %arrayidx443 to %struct.rtx_def**
  %255 = load %struct.rtx_def*, %struct.rtx_def** %rtx444, align 8
  store %struct.rtx_def* %255, %struct.rtx_def** %cond_op0, align 8
  %256 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld445 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %256, i32 0, i32 1
  %arrayidx446 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld445, i32 0, i64 1
  %rtx447 = bitcast %union.rtunion_def* %arrayidx446 to %struct.rtx_def**
  %257 = load %struct.rtx_def*, %struct.rtx_def** %rtx447, align 8
  store %struct.rtx_def* %257, %struct.rtx_def** %cond_op1, align 8
  store i32 1, i32* %op, align 4
  store i32 1, i32* %extend_op, align 4
  %258 = load i32, i32* %mode, align 4
  store i32 %258, i32* %m, align 4
  store %struct.rtx_def* null, %struct.rtx_def** %z, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %c1, align 8
  %259 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %260 = bitcast %struct.rtx_def* %259 to i32*
  %bf.load448 = load i32, i32* %260, align 8
  %bf.clear449 = and i32 %bf.load448, 65535
  %cmp450 = icmp eq i32 %bf.clear449, 75
  br i1 %cmp450, label %land.lhs.true.482, label %lor.lhs.false.452

lor.lhs.false.452:                                ; preds = %if.then.439
  %261 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %262 = bitcast %struct.rtx_def* %261 to i32*
  %bf.load453 = load i32, i32* %262, align 8
  %bf.clear454 = and i32 %bf.load453, 65535
  %cmp455 = icmp eq i32 %bf.clear454, 76
  br i1 %cmp455, label %land.lhs.true.482, label %lor.lhs.false.457

lor.lhs.false.457:                                ; preds = %lor.lhs.false.452
  %263 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %264 = bitcast %struct.rtx_def* %263 to i32*
  %bf.load458 = load i32, i32* %264, align 8
  %bf.clear459 = and i32 %bf.load458, 65535
  %cmp460 = icmp eq i32 %bf.clear459, 84
  br i1 %cmp460, label %land.lhs.true.482, label %lor.lhs.false.462

lor.lhs.false.462:                                ; preds = %lor.lhs.false.457
  %265 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %266 = bitcast %struct.rtx_def* %265 to i32*
  %bf.load463 = load i32, i32* %266, align 8
  %bf.clear464 = and i32 %bf.load463, 65535
  %cmp465 = icmp eq i32 %bf.clear464, 85
  br i1 %cmp465, label %land.lhs.true.482, label %lor.lhs.false.467

lor.lhs.false.467:                                ; preds = %lor.lhs.false.462
  %267 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %268 = bitcast %struct.rtx_def* %267 to i32*
  %bf.load468 = load i32, i32* %268, align 8
  %bf.clear469 = and i32 %bf.load468, 65535
  %cmp470 = icmp eq i32 %bf.clear469, 87
  br i1 %cmp470, label %land.lhs.true.482, label %lor.lhs.false.472

lor.lhs.false.472:                                ; preds = %lor.lhs.false.467
  %269 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %270 = bitcast %struct.rtx_def* %269 to i32*
  %bf.load473 = load i32, i32* %270, align 8
  %bf.clear474 = and i32 %bf.load473, 65535
  %cmp475 = icmp eq i32 %bf.clear474, 90
  br i1 %cmp475, label %land.lhs.true.482, label %lor.lhs.false.477

lor.lhs.false.477:                                ; preds = %lor.lhs.false.472
  %271 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %272 = bitcast %struct.rtx_def* %271 to i32*
  %bf.load478 = load i32, i32* %272, align 8
  %bf.clear479 = and i32 %bf.load478, 65535
  %cmp480 = icmp eq i32 %bf.clear479, 89
  br i1 %cmp480, label %land.lhs.true.482, label %if.else.494

land.lhs.true.482:                                ; preds = %lor.lhs.false.477, %lor.lhs.false.472, %lor.lhs.false.467, %lor.lhs.false.462, %lor.lhs.false.457, %lor.lhs.false.452, %if.then.439
  %273 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld483 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %273, i32 0, i32 1
  %arrayidx484 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld483, i32 0, i64 0
  %rtx485 = bitcast %union.rtunion_def* %arrayidx484 to %struct.rtx_def**
  %274 = load %struct.rtx_def*, %struct.rtx_def** %rtx485, align 8
  %275 = load %struct.rtx_def*, %struct.rtx_def** %f, align 8
  %call486 = call i32 @rtx_equal_p(%struct.rtx_def* %274, %struct.rtx_def* %275)
  %tobool487 = icmp ne i32 %call486, 0
  br i1 %tobool487, label %if.then.488, label %if.else.494

if.then.488:                                      ; preds = %land.lhs.true.482
  %276 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld489 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %276, i32 0, i32 1
  %arrayidx490 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld489, i32 0, i64 1
  %rtx491 = bitcast %union.rtunion_def* %arrayidx490 to %struct.rtx_def**
  %277 = load %struct.rtx_def*, %struct.rtx_def** %rtx491, align 8
  store %struct.rtx_def* %277, %struct.rtx_def** %c1, align 8
  %278 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %279 = bitcast %struct.rtx_def* %278 to i32*
  %bf.load492 = load i32, i32* %279, align 8
  %bf.clear493 = and i32 %bf.load492, 65535
  store i32 %bf.clear493, i32* %op, align 4
  %280 = load %struct.rtx_def*, %struct.rtx_def** %f, align 8
  store %struct.rtx_def* %280, %struct.rtx_def** %z, align 8
  br label %if.end.1001

if.else.494:                                      ; preds = %land.lhs.true.482, %lor.lhs.false.477
  %281 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %282 = bitcast %struct.rtx_def* %281 to i32*
  %bf.load495 = load i32, i32* %282, align 8
  %bf.clear496 = and i32 %bf.load495, 65535
  %cmp497 = icmp eq i32 %bf.clear496, 75
  br i1 %cmp497, label %land.lhs.true.509, label %lor.lhs.false.499

lor.lhs.false.499:                                ; preds = %if.else.494
  %283 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %284 = bitcast %struct.rtx_def* %283 to i32*
  %bf.load500 = load i32, i32* %284, align 8
  %bf.clear501 = and i32 %bf.load500, 65535
  %cmp502 = icmp eq i32 %bf.clear501, 84
  br i1 %cmp502, label %land.lhs.true.509, label %lor.lhs.false.504

lor.lhs.false.504:                                ; preds = %lor.lhs.false.499
  %285 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %286 = bitcast %struct.rtx_def* %285 to i32*
  %bf.load505 = load i32, i32* %286, align 8
  %bf.clear506 = and i32 %bf.load505, 65535
  %cmp507 = icmp eq i32 %bf.clear506, 85
  br i1 %cmp507, label %land.lhs.true.509, label %if.else.521

land.lhs.true.509:                                ; preds = %lor.lhs.false.504, %lor.lhs.false.499, %if.else.494
  %287 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld510 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %287, i32 0, i32 1
  %arrayidx511 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld510, i32 0, i64 1
  %rtx512 = bitcast %union.rtunion_def* %arrayidx511 to %struct.rtx_def**
  %288 = load %struct.rtx_def*, %struct.rtx_def** %rtx512, align 8
  %289 = load %struct.rtx_def*, %struct.rtx_def** %f, align 8
  %call513 = call i32 @rtx_equal_p(%struct.rtx_def* %288, %struct.rtx_def* %289)
  %tobool514 = icmp ne i32 %call513, 0
  br i1 %tobool514, label %if.then.515, label %if.else.521

if.then.515:                                      ; preds = %land.lhs.true.509
  %290 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld516 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %290, i32 0, i32 1
  %arrayidx517 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld516, i32 0, i64 0
  %rtx518 = bitcast %union.rtunion_def* %arrayidx517 to %struct.rtx_def**
  %291 = load %struct.rtx_def*, %struct.rtx_def** %rtx518, align 8
  store %struct.rtx_def* %291, %struct.rtx_def** %c1, align 8
  %292 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %293 = bitcast %struct.rtx_def* %292 to i32*
  %bf.load519 = load i32, i32* %293, align 8
  %bf.clear520 = and i32 %bf.load519, 65535
  store i32 %bf.clear520, i32* %op, align 4
  %294 = load %struct.rtx_def*, %struct.rtx_def** %f, align 8
  store %struct.rtx_def* %294, %struct.rtx_def** %z, align 8
  br label %if.end.1000

if.else.521:                                      ; preds = %land.lhs.true.509, %lor.lhs.false.504
  %295 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %296 = bitcast %struct.rtx_def* %295 to i32*
  %bf.load522 = load i32, i32* %296, align 8
  %bf.clear523 = and i32 %bf.load522, 65535
  %cmp524 = icmp eq i32 %bf.clear523, 120
  br i1 %cmp524, label %land.lhs.true.526, label %if.else.654

land.lhs.true.526:                                ; preds = %if.else.521
  %297 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld527 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %297, i32 0, i32 1
  %arrayidx528 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld527, i32 0, i64 0
  %rtx529 = bitcast %union.rtunion_def* %arrayidx528 to %struct.rtx_def**
  %298 = load %struct.rtx_def*, %struct.rtx_def** %rtx529, align 8
  %299 = bitcast %struct.rtx_def* %298 to i32*
  %bf.load530 = load i32, i32* %299, align 8
  %bf.clear531 = and i32 %bf.load530, 65535
  %cmp532 = icmp eq i32 %bf.clear531, 75
  br i1 %cmp532, label %land.lhs.true.582, label %lor.lhs.false.534

lor.lhs.false.534:                                ; preds = %land.lhs.true.526
  %300 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld535 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %300, i32 0, i32 1
  %arrayidx536 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld535, i32 0, i64 0
  %rtx537 = bitcast %union.rtunion_def* %arrayidx536 to %struct.rtx_def**
  %301 = load %struct.rtx_def*, %struct.rtx_def** %rtx537, align 8
  %302 = bitcast %struct.rtx_def* %301 to i32*
  %bf.load538 = load i32, i32* %302, align 8
  %bf.clear539 = and i32 %bf.load538, 65535
  %cmp540 = icmp eq i32 %bf.clear539, 76
  br i1 %cmp540, label %land.lhs.true.582, label %lor.lhs.false.542

lor.lhs.false.542:                                ; preds = %lor.lhs.false.534
  %303 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld543 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %303, i32 0, i32 1
  %arrayidx544 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld543, i32 0, i64 0
  %rtx545 = bitcast %union.rtunion_def* %arrayidx544 to %struct.rtx_def**
  %304 = load %struct.rtx_def*, %struct.rtx_def** %rtx545, align 8
  %305 = bitcast %struct.rtx_def* %304 to i32*
  %bf.load546 = load i32, i32* %305, align 8
  %bf.clear547 = and i32 %bf.load546, 65535
  %cmp548 = icmp eq i32 %bf.clear547, 84
  br i1 %cmp548, label %land.lhs.true.582, label %lor.lhs.false.550

lor.lhs.false.550:                                ; preds = %lor.lhs.false.542
  %306 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld551 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %306, i32 0, i32 1
  %arrayidx552 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld551, i32 0, i64 0
  %rtx553 = bitcast %union.rtunion_def* %arrayidx552 to %struct.rtx_def**
  %307 = load %struct.rtx_def*, %struct.rtx_def** %rtx553, align 8
  %308 = bitcast %struct.rtx_def* %307 to i32*
  %bf.load554 = load i32, i32* %308, align 8
  %bf.clear555 = and i32 %bf.load554, 65535
  %cmp556 = icmp eq i32 %bf.clear555, 85
  br i1 %cmp556, label %land.lhs.true.582, label %lor.lhs.false.558

lor.lhs.false.558:                                ; preds = %lor.lhs.false.550
  %309 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld559 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %309, i32 0, i32 1
  %arrayidx560 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld559, i32 0, i64 0
  %rtx561 = bitcast %union.rtunion_def* %arrayidx560 to %struct.rtx_def**
  %310 = load %struct.rtx_def*, %struct.rtx_def** %rtx561, align 8
  %311 = bitcast %struct.rtx_def* %310 to i32*
  %bf.load562 = load i32, i32* %311, align 8
  %bf.clear563 = and i32 %bf.load562, 65535
  %cmp564 = icmp eq i32 %bf.clear563, 87
  br i1 %cmp564, label %land.lhs.true.582, label %lor.lhs.false.566

lor.lhs.false.566:                                ; preds = %lor.lhs.false.558
  %312 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld567 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %312, i32 0, i32 1
  %arrayidx568 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld567, i32 0, i64 0
  %rtx569 = bitcast %union.rtunion_def* %arrayidx568 to %struct.rtx_def**
  %313 = load %struct.rtx_def*, %struct.rtx_def** %rtx569, align 8
  %314 = bitcast %struct.rtx_def* %313 to i32*
  %bf.load570 = load i32, i32* %314, align 8
  %bf.clear571 = and i32 %bf.load570, 65535
  %cmp572 = icmp eq i32 %bf.clear571, 90
  br i1 %cmp572, label %land.lhs.true.582, label %lor.lhs.false.574

lor.lhs.false.574:                                ; preds = %lor.lhs.false.566
  %315 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld575 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %315, i32 0, i32 1
  %arrayidx576 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld575, i32 0, i64 0
  %rtx577 = bitcast %union.rtunion_def* %arrayidx576 to %struct.rtx_def**
  %316 = load %struct.rtx_def*, %struct.rtx_def** %rtx577, align 8
  %317 = bitcast %struct.rtx_def* %316 to i32*
  %bf.load578 = load i32, i32* %317, align 8
  %bf.clear579 = and i32 %bf.load578, 65535
  %cmp580 = icmp eq i32 %bf.clear579, 89
  br i1 %cmp580, label %land.lhs.true.582, label %if.else.654

land.lhs.true.582:                                ; preds = %lor.lhs.false.574, %lor.lhs.false.566, %lor.lhs.false.558, %lor.lhs.false.550, %lor.lhs.false.542, %lor.lhs.false.534, %land.lhs.true.526
  %318 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld583 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %318, i32 0, i32 1
  %arrayidx584 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld583, i32 0, i64 0
  %rtx585 = bitcast %union.rtunion_def* %arrayidx584 to %struct.rtx_def**
  %319 = load %struct.rtx_def*, %struct.rtx_def** %rtx585, align 8
  %fld586 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %319, i32 0, i32 1
  %arrayidx587 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld586, i32 0, i64 0
  %rtx588 = bitcast %union.rtunion_def* %arrayidx587 to %struct.rtx_def**
  %320 = load %struct.rtx_def*, %struct.rtx_def** %rtx588, align 8
  %321 = bitcast %struct.rtx_def* %320 to i32*
  %bf.load589 = load i32, i32* %321, align 8
  %bf.clear590 = and i32 %bf.load589, 65535
  %cmp591 = icmp eq i32 %bf.clear590, 63
  br i1 %cmp591, label %land.lhs.true.593, label %if.else.654

land.lhs.true.593:                                ; preds = %land.lhs.true.582
  %322 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld594 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %322, i32 0, i32 1
  %arrayidx595 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld594, i32 0, i64 0
  %rtx596 = bitcast %union.rtunion_def* %arrayidx595 to %struct.rtx_def**
  %323 = load %struct.rtx_def*, %struct.rtx_def** %rtx596, align 8
  %fld597 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %323, i32 0, i32 1
  %arrayidx598 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld597, i32 0, i64 0
  %rtx599 = bitcast %union.rtunion_def* %arrayidx598 to %struct.rtx_def**
  %324 = load %struct.rtx_def*, %struct.rtx_def** %rtx599, align 8
  %call600 = call i32 @subreg_lowpart_p(%struct.rtx_def* %324)
  %tobool601 = icmp ne i32 %call600, 0
  br i1 %tobool601, label %land.lhs.true.602, label %if.else.654

land.lhs.true.602:                                ; preds = %land.lhs.true.593
  %325 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld603 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %325, i32 0, i32 1
  %arrayidx604 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld603, i32 0, i64 0
  %rtx605 = bitcast %union.rtunion_def* %arrayidx604 to %struct.rtx_def**
  %326 = load %struct.rtx_def*, %struct.rtx_def** %rtx605, align 8
  %fld606 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %326, i32 0, i32 1
  %arrayidx607 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld606, i32 0, i64 0
  %rtx608 = bitcast %union.rtunion_def* %arrayidx607 to %struct.rtx_def**
  %327 = load %struct.rtx_def*, %struct.rtx_def** %rtx608, align 8
  %fld609 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %327, i32 0, i32 1
  %arrayidx610 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld609, i32 0, i64 0
  %rtx611 = bitcast %union.rtunion_def* %arrayidx610 to %struct.rtx_def**
  %328 = load %struct.rtx_def*, %struct.rtx_def** %rtx611, align 8
  %329 = load %struct.rtx_def*, %struct.rtx_def** %f, align 8
  %call612 = call i32 @rtx_equal_p(%struct.rtx_def* %328, %struct.rtx_def* %329)
  %tobool613 = icmp ne i32 %call612, 0
  br i1 %tobool613, label %land.lhs.true.614, label %if.else.654

land.lhs.true.614:                                ; preds = %land.lhs.true.602
  %330 = load %struct.rtx_def*, %struct.rtx_def** %f, align 8
  %331 = load %struct.rtx_def*, %struct.rtx_def** %f, align 8
  %332 = bitcast %struct.rtx_def* %331 to i32*
  %bf.load615 = load i32, i32* %332, align 8
  %bf.lshr616 = lshr i32 %bf.load615, 16
  %bf.clear617 = and i32 %bf.lshr616, 255
  %call618 = call i32 @num_sign_bit_copies(%struct.rtx_def* %330, i32 %bf.clear617)
  %333 = load i32, i32* %mode, align 4
  %idxprom619 = sext i32 %333 to i64
  %arrayidx620 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom619
  %334 = load i16, i16* %arrayidx620, align 2
  %conv621 = zext i16 %334 to i32
  %335 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld622 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %335, i32 0, i32 1
  %arrayidx623 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld622, i32 0, i64 0
  %rtx624 = bitcast %union.rtunion_def* %arrayidx623 to %struct.rtx_def**
  %336 = load %struct.rtx_def*, %struct.rtx_def** %rtx624, align 8
  %fld625 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %336, i32 0, i32 1
  %arrayidx626 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld625, i32 0, i64 0
  %rtx627 = bitcast %union.rtunion_def* %arrayidx626 to %struct.rtx_def**
  %337 = load %struct.rtx_def*, %struct.rtx_def** %rtx627, align 8
  %338 = bitcast %struct.rtx_def* %337 to i32*
  %bf.load628 = load i32, i32* %338, align 8
  %bf.lshr629 = lshr i32 %bf.load628, 16
  %bf.clear630 = and i32 %bf.lshr629, 255
  %idxprom631 = sext i32 %bf.clear630 to i64
  %arrayidx632 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom631
  %339 = load i16, i16* %arrayidx632, align 2
  %conv633 = zext i16 %339 to i32
  %sub = sub nsw i32 %conv621, %conv633
  %cmp634 = icmp ugt i32 %call618, %sub
  br i1 %cmp634, label %if.then.636, label %if.else.654

if.then.636:                                      ; preds = %land.lhs.true.614
  %340 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld637 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %340, i32 0, i32 1
  %arrayidx638 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld637, i32 0, i64 0
  %rtx639 = bitcast %union.rtunion_def* %arrayidx638 to %struct.rtx_def**
  %341 = load %struct.rtx_def*, %struct.rtx_def** %rtx639, align 8
  %fld640 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %341, i32 0, i32 1
  %arrayidx641 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld640, i32 0, i64 1
  %rtx642 = bitcast %union.rtunion_def* %arrayidx641 to %struct.rtx_def**
  %342 = load %struct.rtx_def*, %struct.rtx_def** %rtx642, align 8
  store %struct.rtx_def* %342, %struct.rtx_def** %c1, align 8
  %343 = load %struct.rtx_def*, %struct.rtx_def** %f, align 8
  store %struct.rtx_def* %343, %struct.rtx_def** %z, align 8
  %344 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld643 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %344, i32 0, i32 1
  %arrayidx644 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld643, i32 0, i64 0
  %rtx645 = bitcast %union.rtunion_def* %arrayidx644 to %struct.rtx_def**
  %345 = load %struct.rtx_def*, %struct.rtx_def** %rtx645, align 8
  %346 = bitcast %struct.rtx_def* %345 to i32*
  %bf.load646 = load i32, i32* %346, align 8
  %bf.clear647 = and i32 %bf.load646, 65535
  store i32 %bf.clear647, i32* %op, align 4
  store i32 120, i32* %extend_op, align 4
  %347 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld648 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %347, i32 0, i32 1
  %arrayidx649 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld648, i32 0, i64 0
  %rtx650 = bitcast %union.rtunion_def* %arrayidx649 to %struct.rtx_def**
  %348 = load %struct.rtx_def*, %struct.rtx_def** %rtx650, align 8
  %349 = bitcast %struct.rtx_def* %348 to i32*
  %bf.load651 = load i32, i32* %349, align 8
  %bf.lshr652 = lshr i32 %bf.load651, 16
  %bf.clear653 = and i32 %bf.lshr652, 255
  store i32 %bf.clear653, i32* %m, align 4
  br label %if.end.999

if.else.654:                                      ; preds = %land.lhs.true.614, %land.lhs.true.602, %land.lhs.true.593, %land.lhs.true.582, %lor.lhs.false.574, %if.else.521
  %350 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %351 = bitcast %struct.rtx_def* %350 to i32*
  %bf.load655 = load i32, i32* %351, align 8
  %bf.clear656 = and i32 %bf.load655, 65535
  %cmp657 = icmp eq i32 %bf.clear656, 120
  br i1 %cmp657, label %land.lhs.true.659, label %if.else.756

land.lhs.true.659:                                ; preds = %if.else.654
  %352 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld660 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %352, i32 0, i32 1
  %arrayidx661 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld660, i32 0, i64 0
  %rtx662 = bitcast %union.rtunion_def* %arrayidx661 to %struct.rtx_def**
  %353 = load %struct.rtx_def*, %struct.rtx_def** %rtx662, align 8
  %354 = bitcast %struct.rtx_def* %353 to i32*
  %bf.load663 = load i32, i32* %354, align 8
  %bf.clear664 = and i32 %bf.load663, 65535
  %cmp665 = icmp eq i32 %bf.clear664, 75
  br i1 %cmp665, label %land.lhs.true.683, label %lor.lhs.false.667

lor.lhs.false.667:                                ; preds = %land.lhs.true.659
  %355 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld668 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %355, i32 0, i32 1
  %arrayidx669 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld668, i32 0, i64 0
  %rtx670 = bitcast %union.rtunion_def* %arrayidx669 to %struct.rtx_def**
  %356 = load %struct.rtx_def*, %struct.rtx_def** %rtx670, align 8
  %357 = bitcast %struct.rtx_def* %356 to i32*
  %bf.load671 = load i32, i32* %357, align 8
  %bf.clear672 = and i32 %bf.load671, 65535
  %cmp673 = icmp eq i32 %bf.clear672, 84
  br i1 %cmp673, label %land.lhs.true.683, label %lor.lhs.false.675

lor.lhs.false.675:                                ; preds = %lor.lhs.false.667
  %358 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld676 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %358, i32 0, i32 1
  %arrayidx677 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld676, i32 0, i64 0
  %rtx678 = bitcast %union.rtunion_def* %arrayidx677 to %struct.rtx_def**
  %359 = load %struct.rtx_def*, %struct.rtx_def** %rtx678, align 8
  %360 = bitcast %struct.rtx_def* %359 to i32*
  %bf.load679 = load i32, i32* %360, align 8
  %bf.clear680 = and i32 %bf.load679, 65535
  %cmp681 = icmp eq i32 %bf.clear680, 85
  br i1 %cmp681, label %land.lhs.true.683, label %if.else.756

land.lhs.true.683:                                ; preds = %lor.lhs.false.675, %lor.lhs.false.667, %land.lhs.true.659
  %361 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld684 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %361, i32 0, i32 1
  %arrayidx685 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld684, i32 0, i64 0
  %rtx686 = bitcast %union.rtunion_def* %arrayidx685 to %struct.rtx_def**
  %362 = load %struct.rtx_def*, %struct.rtx_def** %rtx686, align 8
  %fld687 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %362, i32 0, i32 1
  %arrayidx688 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld687, i32 0, i64 1
  %rtx689 = bitcast %union.rtunion_def* %arrayidx688 to %struct.rtx_def**
  %363 = load %struct.rtx_def*, %struct.rtx_def** %rtx689, align 8
  %364 = bitcast %struct.rtx_def* %363 to i32*
  %bf.load690 = load i32, i32* %364, align 8
  %bf.clear691 = and i32 %bf.load690, 65535
  %cmp692 = icmp eq i32 %bf.clear691, 63
  br i1 %cmp692, label %land.lhs.true.694, label %if.else.756

land.lhs.true.694:                                ; preds = %land.lhs.true.683
  %365 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld695 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %365, i32 0, i32 1
  %arrayidx696 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld695, i32 0, i64 0
  %rtx697 = bitcast %union.rtunion_def* %arrayidx696 to %struct.rtx_def**
  %366 = load %struct.rtx_def*, %struct.rtx_def** %rtx697, align 8
  %fld698 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %366, i32 0, i32 1
  %arrayidx699 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld698, i32 0, i64 1
  %rtx700 = bitcast %union.rtunion_def* %arrayidx699 to %struct.rtx_def**
  %367 = load %struct.rtx_def*, %struct.rtx_def** %rtx700, align 8
  %call701 = call i32 @subreg_lowpart_p(%struct.rtx_def* %367)
  %tobool702 = icmp ne i32 %call701, 0
  br i1 %tobool702, label %land.lhs.true.703, label %if.else.756

land.lhs.true.703:                                ; preds = %land.lhs.true.694
  %368 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld704 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %368, i32 0, i32 1
  %arrayidx705 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld704, i32 0, i64 0
  %rtx706 = bitcast %union.rtunion_def* %arrayidx705 to %struct.rtx_def**
  %369 = load %struct.rtx_def*, %struct.rtx_def** %rtx706, align 8
  %fld707 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %369, i32 0, i32 1
  %arrayidx708 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld707, i32 0, i64 1
  %rtx709 = bitcast %union.rtunion_def* %arrayidx708 to %struct.rtx_def**
  %370 = load %struct.rtx_def*, %struct.rtx_def** %rtx709, align 8
  %fld710 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %370, i32 0, i32 1
  %arrayidx711 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld710, i32 0, i64 0
  %rtx712 = bitcast %union.rtunion_def* %arrayidx711 to %struct.rtx_def**
  %371 = load %struct.rtx_def*, %struct.rtx_def** %rtx712, align 8
  %372 = load %struct.rtx_def*, %struct.rtx_def** %f, align 8
  %call713 = call i32 @rtx_equal_p(%struct.rtx_def* %371, %struct.rtx_def* %372)
  %tobool714 = icmp ne i32 %call713, 0
  br i1 %tobool714, label %land.lhs.true.715, label %if.else.756

land.lhs.true.715:                                ; preds = %land.lhs.true.703
  %373 = load %struct.rtx_def*, %struct.rtx_def** %f, align 8
  %374 = load %struct.rtx_def*, %struct.rtx_def** %f, align 8
  %375 = bitcast %struct.rtx_def* %374 to i32*
  %bf.load716 = load i32, i32* %375, align 8
  %bf.lshr717 = lshr i32 %bf.load716, 16
  %bf.clear718 = and i32 %bf.lshr717, 255
  %call719 = call i32 @num_sign_bit_copies(%struct.rtx_def* %373, i32 %bf.clear718)
  %376 = load i32, i32* %mode, align 4
  %idxprom720 = sext i32 %376 to i64
  %arrayidx721 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom720
  %377 = load i16, i16* %arrayidx721, align 2
  %conv722 = zext i16 %377 to i32
  %378 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld723 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %378, i32 0, i32 1
  %arrayidx724 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld723, i32 0, i64 0
  %rtx725 = bitcast %union.rtunion_def* %arrayidx724 to %struct.rtx_def**
  %379 = load %struct.rtx_def*, %struct.rtx_def** %rtx725, align 8
  %fld726 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %379, i32 0, i32 1
  %arrayidx727 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld726, i32 0, i64 1
  %rtx728 = bitcast %union.rtunion_def* %arrayidx727 to %struct.rtx_def**
  %380 = load %struct.rtx_def*, %struct.rtx_def** %rtx728, align 8
  %381 = bitcast %struct.rtx_def* %380 to i32*
  %bf.load729 = load i32, i32* %381, align 8
  %bf.lshr730 = lshr i32 %bf.load729, 16
  %bf.clear731 = and i32 %bf.lshr730, 255
  %idxprom732 = sext i32 %bf.clear731 to i64
  %arrayidx733 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom732
  %382 = load i16, i16* %arrayidx733, align 2
  %conv734 = zext i16 %382 to i32
  %sub735 = sub nsw i32 %conv722, %conv734
  %cmp736 = icmp ugt i32 %call719, %sub735
  br i1 %cmp736, label %if.then.738, label %if.else.756

if.then.738:                                      ; preds = %land.lhs.true.715
  %383 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld739 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %383, i32 0, i32 1
  %arrayidx740 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld739, i32 0, i64 0
  %rtx741 = bitcast %union.rtunion_def* %arrayidx740 to %struct.rtx_def**
  %384 = load %struct.rtx_def*, %struct.rtx_def** %rtx741, align 8
  %fld742 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %384, i32 0, i32 1
  %arrayidx743 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld742, i32 0, i64 0
  %rtx744 = bitcast %union.rtunion_def* %arrayidx743 to %struct.rtx_def**
  %385 = load %struct.rtx_def*, %struct.rtx_def** %rtx744, align 8
  store %struct.rtx_def* %385, %struct.rtx_def** %c1, align 8
  %386 = load %struct.rtx_def*, %struct.rtx_def** %f, align 8
  store %struct.rtx_def* %386, %struct.rtx_def** %z, align 8
  %387 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld745 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %387, i32 0, i32 1
  %arrayidx746 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld745, i32 0, i64 0
  %rtx747 = bitcast %union.rtunion_def* %arrayidx746 to %struct.rtx_def**
  %388 = load %struct.rtx_def*, %struct.rtx_def** %rtx747, align 8
  %389 = bitcast %struct.rtx_def* %388 to i32*
  %bf.load748 = load i32, i32* %389, align 8
  %bf.clear749 = and i32 %bf.load748, 65535
  store i32 %bf.clear749, i32* %op, align 4
  store i32 120, i32* %extend_op, align 4
  %390 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld750 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %390, i32 0, i32 1
  %arrayidx751 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld750, i32 0, i64 0
  %rtx752 = bitcast %union.rtunion_def* %arrayidx751 to %struct.rtx_def**
  %391 = load %struct.rtx_def*, %struct.rtx_def** %rtx752, align 8
  %392 = bitcast %struct.rtx_def* %391 to i32*
  %bf.load753 = load i32, i32* %392, align 8
  %bf.lshr754 = lshr i32 %bf.load753, 16
  %bf.clear755 = and i32 %bf.lshr754, 255
  store i32 %bf.clear755, i32* %m, align 4
  br label %if.end.998

if.else.756:                                      ; preds = %land.lhs.true.715, %land.lhs.true.703, %land.lhs.true.694, %land.lhs.true.683, %lor.lhs.false.675, %if.else.654
  %393 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %394 = bitcast %struct.rtx_def* %393 to i32*
  %bf.load757 = load i32, i32* %394, align 8
  %bf.clear758 = and i32 %bf.load757, 65535
  %cmp759 = icmp eq i32 %bf.clear758, 121
  br i1 %cmp759, label %land.lhs.true.761, label %if.else.891

land.lhs.true.761:                                ; preds = %if.else.756
  %395 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld762 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %395, i32 0, i32 1
  %arrayidx763 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld762, i32 0, i64 0
  %rtx764 = bitcast %union.rtunion_def* %arrayidx763 to %struct.rtx_def**
  %396 = load %struct.rtx_def*, %struct.rtx_def** %rtx764, align 8
  %397 = bitcast %struct.rtx_def* %396 to i32*
  %bf.load765 = load i32, i32* %397, align 8
  %bf.clear766 = and i32 %bf.load765, 65535
  %cmp767 = icmp eq i32 %bf.clear766, 75
  br i1 %cmp767, label %land.lhs.true.817, label %lor.lhs.false.769

lor.lhs.false.769:                                ; preds = %land.lhs.true.761
  %398 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld770 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %398, i32 0, i32 1
  %arrayidx771 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld770, i32 0, i64 0
  %rtx772 = bitcast %union.rtunion_def* %arrayidx771 to %struct.rtx_def**
  %399 = load %struct.rtx_def*, %struct.rtx_def** %rtx772, align 8
  %400 = bitcast %struct.rtx_def* %399 to i32*
  %bf.load773 = load i32, i32* %400, align 8
  %bf.clear774 = and i32 %bf.load773, 65535
  %cmp775 = icmp eq i32 %bf.clear774, 76
  br i1 %cmp775, label %land.lhs.true.817, label %lor.lhs.false.777

lor.lhs.false.777:                                ; preds = %lor.lhs.false.769
  %401 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld778 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %401, i32 0, i32 1
  %arrayidx779 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld778, i32 0, i64 0
  %rtx780 = bitcast %union.rtunion_def* %arrayidx779 to %struct.rtx_def**
  %402 = load %struct.rtx_def*, %struct.rtx_def** %rtx780, align 8
  %403 = bitcast %struct.rtx_def* %402 to i32*
  %bf.load781 = load i32, i32* %403, align 8
  %bf.clear782 = and i32 %bf.load781, 65535
  %cmp783 = icmp eq i32 %bf.clear782, 84
  br i1 %cmp783, label %land.lhs.true.817, label %lor.lhs.false.785

lor.lhs.false.785:                                ; preds = %lor.lhs.false.777
  %404 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld786 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %404, i32 0, i32 1
  %arrayidx787 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld786, i32 0, i64 0
  %rtx788 = bitcast %union.rtunion_def* %arrayidx787 to %struct.rtx_def**
  %405 = load %struct.rtx_def*, %struct.rtx_def** %rtx788, align 8
  %406 = bitcast %struct.rtx_def* %405 to i32*
  %bf.load789 = load i32, i32* %406, align 8
  %bf.clear790 = and i32 %bf.load789, 65535
  %cmp791 = icmp eq i32 %bf.clear790, 85
  br i1 %cmp791, label %land.lhs.true.817, label %lor.lhs.false.793

lor.lhs.false.793:                                ; preds = %lor.lhs.false.785
  %407 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld794 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %407, i32 0, i32 1
  %arrayidx795 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld794, i32 0, i64 0
  %rtx796 = bitcast %union.rtunion_def* %arrayidx795 to %struct.rtx_def**
  %408 = load %struct.rtx_def*, %struct.rtx_def** %rtx796, align 8
  %409 = bitcast %struct.rtx_def* %408 to i32*
  %bf.load797 = load i32, i32* %409, align 8
  %bf.clear798 = and i32 %bf.load797, 65535
  %cmp799 = icmp eq i32 %bf.clear798, 87
  br i1 %cmp799, label %land.lhs.true.817, label %lor.lhs.false.801

lor.lhs.false.801:                                ; preds = %lor.lhs.false.793
  %410 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld802 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %410, i32 0, i32 1
  %arrayidx803 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld802, i32 0, i64 0
  %rtx804 = bitcast %union.rtunion_def* %arrayidx803 to %struct.rtx_def**
  %411 = load %struct.rtx_def*, %struct.rtx_def** %rtx804, align 8
  %412 = bitcast %struct.rtx_def* %411 to i32*
  %bf.load805 = load i32, i32* %412, align 8
  %bf.clear806 = and i32 %bf.load805, 65535
  %cmp807 = icmp eq i32 %bf.clear806, 90
  br i1 %cmp807, label %land.lhs.true.817, label %lor.lhs.false.809

lor.lhs.false.809:                                ; preds = %lor.lhs.false.801
  %413 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld810 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %413, i32 0, i32 1
  %arrayidx811 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld810, i32 0, i64 0
  %rtx812 = bitcast %union.rtunion_def* %arrayidx811 to %struct.rtx_def**
  %414 = load %struct.rtx_def*, %struct.rtx_def** %rtx812, align 8
  %415 = bitcast %struct.rtx_def* %414 to i32*
  %bf.load813 = load i32, i32* %415, align 8
  %bf.clear814 = and i32 %bf.load813, 65535
  %cmp815 = icmp eq i32 %bf.clear814, 89
  br i1 %cmp815, label %land.lhs.true.817, label %if.else.891

land.lhs.true.817:                                ; preds = %lor.lhs.false.809, %lor.lhs.false.801, %lor.lhs.false.793, %lor.lhs.false.785, %lor.lhs.false.777, %lor.lhs.false.769, %land.lhs.true.761
  %416 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld818 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %416, i32 0, i32 1
  %arrayidx819 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld818, i32 0, i64 0
  %rtx820 = bitcast %union.rtunion_def* %arrayidx819 to %struct.rtx_def**
  %417 = load %struct.rtx_def*, %struct.rtx_def** %rtx820, align 8
  %fld821 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %417, i32 0, i32 1
  %arrayidx822 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld821, i32 0, i64 0
  %rtx823 = bitcast %union.rtunion_def* %arrayidx822 to %struct.rtx_def**
  %418 = load %struct.rtx_def*, %struct.rtx_def** %rtx823, align 8
  %419 = bitcast %struct.rtx_def* %418 to i32*
  %bf.load824 = load i32, i32* %419, align 8
  %bf.clear825 = and i32 %bf.load824, 65535
  %cmp826 = icmp eq i32 %bf.clear825, 63
  br i1 %cmp826, label %land.lhs.true.828, label %if.else.891

land.lhs.true.828:                                ; preds = %land.lhs.true.817
  %420 = load i32, i32* %mode, align 4
  %idxprom829 = sext i32 %420 to i64
  %arrayidx830 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom829
  %421 = load i16, i16* %arrayidx830, align 2
  %conv831 = zext i16 %421 to i32
  %cmp832 = icmp sle i32 %conv831, 64
  br i1 %cmp832, label %land.lhs.true.834, label %if.else.891

land.lhs.true.834:                                ; preds = %land.lhs.true.828
  %422 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld835 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %422, i32 0, i32 1
  %arrayidx836 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld835, i32 0, i64 0
  %rtx837 = bitcast %union.rtunion_def* %arrayidx836 to %struct.rtx_def**
  %423 = load %struct.rtx_def*, %struct.rtx_def** %rtx837, align 8
  %fld838 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %423, i32 0, i32 1
  %arrayidx839 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld838, i32 0, i64 0
  %rtx840 = bitcast %union.rtunion_def* %arrayidx839 to %struct.rtx_def**
  %424 = load %struct.rtx_def*, %struct.rtx_def** %rtx840, align 8
  %call841 = call i32 @subreg_lowpart_p(%struct.rtx_def* %424)
  %tobool842 = icmp ne i32 %call841, 0
  br i1 %tobool842, label %land.lhs.true.843, label %if.else.891

land.lhs.true.843:                                ; preds = %land.lhs.true.834
  %425 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld844 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %425, i32 0, i32 1
  %arrayidx845 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld844, i32 0, i64 0
  %rtx846 = bitcast %union.rtunion_def* %arrayidx845 to %struct.rtx_def**
  %426 = load %struct.rtx_def*, %struct.rtx_def** %rtx846, align 8
  %fld847 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %426, i32 0, i32 1
  %arrayidx848 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld847, i32 0, i64 0
  %rtx849 = bitcast %union.rtunion_def* %arrayidx848 to %struct.rtx_def**
  %427 = load %struct.rtx_def*, %struct.rtx_def** %rtx849, align 8
  %fld850 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %427, i32 0, i32 1
  %arrayidx851 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld850, i32 0, i64 0
  %rtx852 = bitcast %union.rtunion_def* %arrayidx851 to %struct.rtx_def**
  %428 = load %struct.rtx_def*, %struct.rtx_def** %rtx852, align 8
  %429 = load %struct.rtx_def*, %struct.rtx_def** %f, align 8
  %call853 = call i32 @rtx_equal_p(%struct.rtx_def* %428, %struct.rtx_def* %429)
  %tobool854 = icmp ne i32 %call853, 0
  br i1 %tobool854, label %land.lhs.true.855, label %if.else.891

land.lhs.true.855:                                ; preds = %land.lhs.true.843
  %430 = load %struct.rtx_def*, %struct.rtx_def** %f, align 8
  %431 = load %struct.rtx_def*, %struct.rtx_def** %f, align 8
  %432 = bitcast %struct.rtx_def* %431 to i32*
  %bf.load856 = load i32, i32* %432, align 8
  %bf.lshr857 = lshr i32 %bf.load856, 16
  %bf.clear858 = and i32 %bf.lshr857, 255
  %call859 = call i64 @nonzero_bits(%struct.rtx_def* %430, i32 %bf.clear858)
  %433 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld860 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %433, i32 0, i32 1
  %arrayidx861 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld860, i32 0, i64 0
  %rtx862 = bitcast %union.rtunion_def* %arrayidx861 to %struct.rtx_def**
  %434 = load %struct.rtx_def*, %struct.rtx_def** %rtx862, align 8
  %fld863 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %434, i32 0, i32 1
  %arrayidx864 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld863, i32 0, i64 0
  %rtx865 = bitcast %union.rtunion_def* %arrayidx864 to %struct.rtx_def**
  %435 = load %struct.rtx_def*, %struct.rtx_def** %rtx865, align 8
  %436 = bitcast %struct.rtx_def* %435 to i32*
  %bf.load866 = load i32, i32* %436, align 8
  %bf.lshr867 = lshr i32 %bf.load866, 16
  %bf.clear868 = and i32 %bf.lshr867, 255
  %idxprom869 = sext i32 %bf.clear868 to i64
  %arrayidx870 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom869
  %437 = load i64, i64* %arrayidx870, align 8
  %neg = xor i64 %437, -1
  %and = and i64 %call859, %neg
  %cmp871 = icmp eq i64 %and, 0
  br i1 %cmp871, label %if.then.873, label %if.else.891

if.then.873:                                      ; preds = %land.lhs.true.855
  %438 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld874 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %438, i32 0, i32 1
  %arrayidx875 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld874, i32 0, i64 0
  %rtx876 = bitcast %union.rtunion_def* %arrayidx875 to %struct.rtx_def**
  %439 = load %struct.rtx_def*, %struct.rtx_def** %rtx876, align 8
  %fld877 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %439, i32 0, i32 1
  %arrayidx878 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld877, i32 0, i64 1
  %rtx879 = bitcast %union.rtunion_def* %arrayidx878 to %struct.rtx_def**
  %440 = load %struct.rtx_def*, %struct.rtx_def** %rtx879, align 8
  store %struct.rtx_def* %440, %struct.rtx_def** %c1, align 8
  %441 = load %struct.rtx_def*, %struct.rtx_def** %f, align 8
  store %struct.rtx_def* %441, %struct.rtx_def** %z, align 8
  %442 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld880 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %442, i32 0, i32 1
  %arrayidx881 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld880, i32 0, i64 0
  %rtx882 = bitcast %union.rtunion_def* %arrayidx881 to %struct.rtx_def**
  %443 = load %struct.rtx_def*, %struct.rtx_def** %rtx882, align 8
  %444 = bitcast %struct.rtx_def* %443 to i32*
  %bf.load883 = load i32, i32* %444, align 8
  %bf.clear884 = and i32 %bf.load883, 65535
  store i32 %bf.clear884, i32* %op, align 4
  store i32 121, i32* %extend_op, align 4
  %445 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld885 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %445, i32 0, i32 1
  %arrayidx886 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld885, i32 0, i64 0
  %rtx887 = bitcast %union.rtunion_def* %arrayidx886 to %struct.rtx_def**
  %446 = load %struct.rtx_def*, %struct.rtx_def** %rtx887, align 8
  %447 = bitcast %struct.rtx_def* %446 to i32*
  %bf.load888 = load i32, i32* %447, align 8
  %bf.lshr889 = lshr i32 %bf.load888, 16
  %bf.clear890 = and i32 %bf.lshr889, 255
  store i32 %bf.clear890, i32* %m, align 4
  br label %if.end.997

if.else.891:                                      ; preds = %land.lhs.true.855, %land.lhs.true.843, %land.lhs.true.834, %land.lhs.true.828, %land.lhs.true.817, %lor.lhs.false.809, %if.else.756
  %448 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %449 = bitcast %struct.rtx_def* %448 to i32*
  %bf.load892 = load i32, i32* %449, align 8
  %bf.clear893 = and i32 %bf.load892, 65535
  %cmp894 = icmp eq i32 %bf.clear893, 121
  br i1 %cmp894, label %land.lhs.true.896, label %if.end.996

land.lhs.true.896:                                ; preds = %if.else.891
  %450 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld897 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %450, i32 0, i32 1
  %arrayidx898 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld897, i32 0, i64 0
  %rtx899 = bitcast %union.rtunion_def* %arrayidx898 to %struct.rtx_def**
  %451 = load %struct.rtx_def*, %struct.rtx_def** %rtx899, align 8
  %452 = bitcast %struct.rtx_def* %451 to i32*
  %bf.load900 = load i32, i32* %452, align 8
  %bf.clear901 = and i32 %bf.load900, 65535
  %cmp902 = icmp eq i32 %bf.clear901, 75
  br i1 %cmp902, label %land.lhs.true.920, label %lor.lhs.false.904

lor.lhs.false.904:                                ; preds = %land.lhs.true.896
  %453 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld905 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %453, i32 0, i32 1
  %arrayidx906 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld905, i32 0, i64 0
  %rtx907 = bitcast %union.rtunion_def* %arrayidx906 to %struct.rtx_def**
  %454 = load %struct.rtx_def*, %struct.rtx_def** %rtx907, align 8
  %455 = bitcast %struct.rtx_def* %454 to i32*
  %bf.load908 = load i32, i32* %455, align 8
  %bf.clear909 = and i32 %bf.load908, 65535
  %cmp910 = icmp eq i32 %bf.clear909, 84
  br i1 %cmp910, label %land.lhs.true.920, label %lor.lhs.false.912

lor.lhs.false.912:                                ; preds = %lor.lhs.false.904
  %456 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld913 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %456, i32 0, i32 1
  %arrayidx914 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld913, i32 0, i64 0
  %rtx915 = bitcast %union.rtunion_def* %arrayidx914 to %struct.rtx_def**
  %457 = load %struct.rtx_def*, %struct.rtx_def** %rtx915, align 8
  %458 = bitcast %struct.rtx_def* %457 to i32*
  %bf.load916 = load i32, i32* %458, align 8
  %bf.clear917 = and i32 %bf.load916, 65535
  %cmp918 = icmp eq i32 %bf.clear917, 85
  br i1 %cmp918, label %land.lhs.true.920, label %if.end.996

land.lhs.true.920:                                ; preds = %lor.lhs.false.912, %lor.lhs.false.904, %land.lhs.true.896
  %459 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld921 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %459, i32 0, i32 1
  %arrayidx922 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld921, i32 0, i64 0
  %rtx923 = bitcast %union.rtunion_def* %arrayidx922 to %struct.rtx_def**
  %460 = load %struct.rtx_def*, %struct.rtx_def** %rtx923, align 8
  %fld924 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %460, i32 0, i32 1
  %arrayidx925 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld924, i32 0, i64 1
  %rtx926 = bitcast %union.rtunion_def* %arrayidx925 to %struct.rtx_def**
  %461 = load %struct.rtx_def*, %struct.rtx_def** %rtx926, align 8
  %462 = bitcast %struct.rtx_def* %461 to i32*
  %bf.load927 = load i32, i32* %462, align 8
  %bf.clear928 = and i32 %bf.load927, 65535
  %cmp929 = icmp eq i32 %bf.clear928, 63
  br i1 %cmp929, label %land.lhs.true.931, label %if.end.996

land.lhs.true.931:                                ; preds = %land.lhs.true.920
  %463 = load i32, i32* %mode, align 4
  %idxprom932 = sext i32 %463 to i64
  %arrayidx933 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom932
  %464 = load i16, i16* %arrayidx933, align 2
  %conv934 = zext i16 %464 to i32
  %cmp935 = icmp sle i32 %conv934, 64
  br i1 %cmp935, label %land.lhs.true.937, label %if.end.996

land.lhs.true.937:                                ; preds = %land.lhs.true.931
  %465 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld938 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %465, i32 0, i32 1
  %arrayidx939 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld938, i32 0, i64 0
  %rtx940 = bitcast %union.rtunion_def* %arrayidx939 to %struct.rtx_def**
  %466 = load %struct.rtx_def*, %struct.rtx_def** %rtx940, align 8
  %fld941 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %466, i32 0, i32 1
  %arrayidx942 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld941, i32 0, i64 1
  %rtx943 = bitcast %union.rtunion_def* %arrayidx942 to %struct.rtx_def**
  %467 = load %struct.rtx_def*, %struct.rtx_def** %rtx943, align 8
  %call944 = call i32 @subreg_lowpart_p(%struct.rtx_def* %467)
  %tobool945 = icmp ne i32 %call944, 0
  br i1 %tobool945, label %land.lhs.true.946, label %if.end.996

land.lhs.true.946:                                ; preds = %land.lhs.true.937
  %468 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld947 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %468, i32 0, i32 1
  %arrayidx948 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld947, i32 0, i64 0
  %rtx949 = bitcast %union.rtunion_def* %arrayidx948 to %struct.rtx_def**
  %469 = load %struct.rtx_def*, %struct.rtx_def** %rtx949, align 8
  %fld950 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %469, i32 0, i32 1
  %arrayidx951 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld950, i32 0, i64 1
  %rtx952 = bitcast %union.rtunion_def* %arrayidx951 to %struct.rtx_def**
  %470 = load %struct.rtx_def*, %struct.rtx_def** %rtx952, align 8
  %fld953 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %470, i32 0, i32 1
  %arrayidx954 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld953, i32 0, i64 0
  %rtx955 = bitcast %union.rtunion_def* %arrayidx954 to %struct.rtx_def**
  %471 = load %struct.rtx_def*, %struct.rtx_def** %rtx955, align 8
  %472 = load %struct.rtx_def*, %struct.rtx_def** %f, align 8
  %call956 = call i32 @rtx_equal_p(%struct.rtx_def* %471, %struct.rtx_def* %472)
  %tobool957 = icmp ne i32 %call956, 0
  br i1 %tobool957, label %land.lhs.true.958, label %if.end.996

land.lhs.true.958:                                ; preds = %land.lhs.true.946
  %473 = load %struct.rtx_def*, %struct.rtx_def** %f, align 8
  %474 = load %struct.rtx_def*, %struct.rtx_def** %f, align 8
  %475 = bitcast %struct.rtx_def* %474 to i32*
  %bf.load959 = load i32, i32* %475, align 8
  %bf.lshr960 = lshr i32 %bf.load959, 16
  %bf.clear961 = and i32 %bf.lshr960, 255
  %call962 = call i64 @nonzero_bits(%struct.rtx_def* %473, i32 %bf.clear961)
  %476 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld963 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %476, i32 0, i32 1
  %arrayidx964 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld963, i32 0, i64 0
  %rtx965 = bitcast %union.rtunion_def* %arrayidx964 to %struct.rtx_def**
  %477 = load %struct.rtx_def*, %struct.rtx_def** %rtx965, align 8
  %fld966 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %477, i32 0, i32 1
  %arrayidx967 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld966, i32 0, i64 1
  %rtx968 = bitcast %union.rtunion_def* %arrayidx967 to %struct.rtx_def**
  %478 = load %struct.rtx_def*, %struct.rtx_def** %rtx968, align 8
  %479 = bitcast %struct.rtx_def* %478 to i32*
  %bf.load969 = load i32, i32* %479, align 8
  %bf.lshr970 = lshr i32 %bf.load969, 16
  %bf.clear971 = and i32 %bf.lshr970, 255
  %idxprom972 = sext i32 %bf.clear971 to i64
  %arrayidx973 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom972
  %480 = load i64, i64* %arrayidx973, align 8
  %neg974 = xor i64 %480, -1
  %and975 = and i64 %call962, %neg974
  %cmp976 = icmp eq i64 %and975, 0
  br i1 %cmp976, label %if.then.978, label %if.end.996

if.then.978:                                      ; preds = %land.lhs.true.958
  %481 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld979 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %481, i32 0, i32 1
  %arrayidx980 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld979, i32 0, i64 0
  %rtx981 = bitcast %union.rtunion_def* %arrayidx980 to %struct.rtx_def**
  %482 = load %struct.rtx_def*, %struct.rtx_def** %rtx981, align 8
  %fld982 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %482, i32 0, i32 1
  %arrayidx983 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld982, i32 0, i64 0
  %rtx984 = bitcast %union.rtunion_def* %arrayidx983 to %struct.rtx_def**
  %483 = load %struct.rtx_def*, %struct.rtx_def** %rtx984, align 8
  store %struct.rtx_def* %483, %struct.rtx_def** %c1, align 8
  %484 = load %struct.rtx_def*, %struct.rtx_def** %f, align 8
  store %struct.rtx_def* %484, %struct.rtx_def** %z, align 8
  %485 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld985 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %485, i32 0, i32 1
  %arrayidx986 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld985, i32 0, i64 0
  %rtx987 = bitcast %union.rtunion_def* %arrayidx986 to %struct.rtx_def**
  %486 = load %struct.rtx_def*, %struct.rtx_def** %rtx987, align 8
  %487 = bitcast %struct.rtx_def* %486 to i32*
  %bf.load988 = load i32, i32* %487, align 8
  %bf.clear989 = and i32 %bf.load988, 65535
  store i32 %bf.clear989, i32* %op, align 4
  store i32 121, i32* %extend_op, align 4
  %488 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8
  %fld990 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %488, i32 0, i32 1
  %arrayidx991 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld990, i32 0, i64 0
  %rtx992 = bitcast %union.rtunion_def* %arrayidx991 to %struct.rtx_def**
  %489 = load %struct.rtx_def*, %struct.rtx_def** %rtx992, align 8
  %490 = bitcast %struct.rtx_def* %489 to i32*
  %bf.load993 = load i32, i32* %490, align 8
  %bf.lshr994 = lshr i32 %bf.load993, 16
  %bf.clear995 = and i32 %bf.lshr994, 255
  store i32 %bf.clear995, i32* %m, align 4
  br label %if.end.996

if.end.996:                                       ; preds = %if.then.978, %land.lhs.true.958, %land.lhs.true.946, %land.lhs.true.937, %land.lhs.true.931, %land.lhs.true.920, %lor.lhs.false.912, %if.else.891
  br label %if.end.997

if.end.997:                                       ; preds = %if.end.996, %if.then.873
  br label %if.end.998

if.end.998:                                       ; preds = %if.end.997, %if.then.738
  br label %if.end.999

if.end.999:                                       ; preds = %if.end.998, %if.then.636
  br label %if.end.1000

if.end.1000:                                      ; preds = %if.end.999, %if.then.515
  br label %if.end.1001

if.end.1001:                                      ; preds = %if.end.1000, %if.then.488
  %491 = load %struct.rtx_def*, %struct.rtx_def** %z, align 8
  %tobool1002 = icmp ne %struct.rtx_def* %491, null
  br i1 %tobool1002, label %if.then.1003, label %if.end.1016

if.then.1003:                                     ; preds = %if.end.1001
  %492 = load i32, i32* %true_code, align 4
  %493 = load i32, i32* %m, align 4
  %494 = load %struct.rtx_def*, %struct.rtx_def** %cond_op0, align 8
  %495 = load %struct.rtx_def*, %struct.rtx_def** %cond_op1, align 8
  %call1004 = call %struct.rtx_def* @gen_binary(i32 %492, i32 %493, %struct.rtx_def* %494, %struct.rtx_def* %495)
  %496 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %497 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %call1005 = call %struct.rtx_def* @subst(%struct.rtx_def* %call1004, %struct.rtx_def* %496, %struct.rtx_def* %497, i32 0, i32 0)
  store %struct.rtx_def* %call1005, %struct.rtx_def** %temp, align 8
  %498 = load i32, i32* %m, align 4
  %499 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %500 = load i32, i32* %m, align 4
  %501 = load %struct.rtx_def*, %struct.rtx_def** %c1, align 8
  %502 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8
  %call1006 = call %struct.rtx_def* @gen_binary(i32 78, i32 %500, %struct.rtx_def* %501, %struct.rtx_def* %502)
  %call1007 = call %struct.rtx_def* @gen_binary(i32 78, i32 %498, %struct.rtx_def* %499, %struct.rtx_def* %call1006)
  store %struct.rtx_def* %call1007, %struct.rtx_def** %temp, align 8
  %503 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %504 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %505 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %call1008 = call %struct.rtx_def* @subst(%struct.rtx_def* %503, %struct.rtx_def* %504, %struct.rtx_def* %505, i32 0, i32 0)
  store %struct.rtx_def* %call1008, %struct.rtx_def** %temp, align 8
  %506 = load i32, i32* %op, align 4
  %507 = load i32, i32* %m, align 4
  %508 = load i32, i32* %m, align 4
  %509 = load %struct.rtx_def*, %struct.rtx_def** %z, align 8
  %call1009 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %508, %struct.rtx_def* %509)
  %510 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %call1010 = call %struct.rtx_def* @gen_binary(i32 %506, i32 %507, %struct.rtx_def* %call1009, %struct.rtx_def* %510)
  store %struct.rtx_def* %call1010, %struct.rtx_def** %temp, align 8
  %511 = load i32, i32* %extend_op, align 4
  %cmp1011 = icmp ne i32 %511, 1
  br i1 %cmp1011, label %if.then.1013, label %if.end.1015

if.then.1013:                                     ; preds = %if.then.1003
  %512 = load i32, i32* %extend_op, align 4
  %513 = load i32, i32* %mode, align 4
  %514 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %515 = load i32, i32* %m, align 4
  %call1014 = call %struct.rtx_def* @simplify_gen_unary(i32 %512, i32 %513, %struct.rtx_def* %514, i32 %515)
  store %struct.rtx_def* %call1014, %struct.rtx_def** %temp, align 8
  br label %if.end.1015

if.end.1015:                                      ; preds = %if.then.1013, %if.then.1003
  %516 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  store %struct.rtx_def* %516, %struct.rtx_def** %retval
  br label %return

if.end.1016:                                      ; preds = %if.end.1001
  br label %if.end.1017

if.end.1017:                                      ; preds = %if.end.1016, %land.lhs.true.436, %land.lhs.true.433, %if.end.431
  %517 = load i32, i32* %true_code, align 4
  %cmp1018 = icmp eq i32 %517, 102
  br i1 %cmp1018, label %land.lhs.true.1020, label %if.end.1071

land.lhs.true.1020:                               ; preds = %if.end.1017
  %518 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld1021 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %518, i32 0, i32 1
  %arrayidx1022 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1021, i32 0, i64 1
  %rtx1023 = bitcast %union.rtunion_def* %arrayidx1022 to %struct.rtx_def**
  %519 = load %struct.rtx_def*, %struct.rtx_def** %rtx1023, align 8
  %520 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp1024 = icmp eq %struct.rtx_def* %519, %520
  br i1 %cmp1024, label %land.lhs.true.1026, label %if.end.1071

land.lhs.true.1026:                               ; preds = %land.lhs.true.1020
  %521 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %522 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp1027 = icmp eq %struct.rtx_def* %521, %522
  br i1 %cmp1027, label %land.lhs.true.1029, label %if.end.1071

land.lhs.true.1029:                               ; preds = %land.lhs.true.1026
  %523 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %524 = bitcast %struct.rtx_def* %523 to i32*
  %bf.load1030 = load i32, i32* %524, align 8
  %bf.clear1031 = and i32 %bf.load1030, 65535
  %cmp1032 = icmp eq i32 %bf.clear1031, 54
  br i1 %cmp1032, label %land.lhs.true.1034, label %if.end.1071

land.lhs.true.1034:                               ; preds = %land.lhs.true.1029
  %525 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld1035 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %525, i32 0, i32 1
  %arrayidx1036 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1035, i32 0, i64 0
  %rtx1037 = bitcast %union.rtunion_def* %arrayidx1036 to %struct.rtx_def**
  %526 = load %struct.rtx_def*, %struct.rtx_def** %rtx1037, align 8
  %527 = load i32, i32* %mode, align 4
  %call1038 = call i64 @nonzero_bits(%struct.rtx_def* %526, i32 %527)
  %cmp1039 = icmp eq i64 1, %call1038
  br i1 %cmp1039, label %land.lhs.true.1041, label %lor.lhs.false.1047

land.lhs.true.1041:                               ; preds = %land.lhs.true.1034
  %528 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %fld1042 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %528, i32 0, i32 1
  %arrayidx1043 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1042, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx1043 to i64*
  %529 = load i64, i64* %rtwint, align 8
  %call1044 = call i32 @exact_log2_wide(i64 %529)
  store i32 %call1044, i32* %i, align 4
  %cmp1045 = icmp sge i32 %call1044, 0
  br i1 %cmp1045, label %if.then.1065, label %lor.lhs.false.1047

lor.lhs.false.1047:                               ; preds = %land.lhs.true.1041, %land.lhs.true.1034
  %530 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld1048 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %530, i32 0, i32 1
  %arrayidx1049 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1048, i32 0, i64 0
  %rtx1050 = bitcast %union.rtunion_def* %arrayidx1049 to %struct.rtx_def**
  %531 = load %struct.rtx_def*, %struct.rtx_def** %rtx1050, align 8
  %532 = load i32, i32* %mode, align 4
  %call1051 = call i32 @num_sign_bit_copies(%struct.rtx_def* %531, i32 %532)
  %533 = load i32, i32* %mode, align 4
  %idxprom1052 = sext i32 %533 to i64
  %arrayidx1053 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1052
  %534 = load i16, i16* %arrayidx1053, align 2
  %conv1054 = zext i16 %534 to i32
  %cmp1055 = icmp eq i32 %call1051, %conv1054
  br i1 %cmp1055, label %land.lhs.true.1057, label %if.end.1071

land.lhs.true.1057:                               ; preds = %lor.lhs.false.1047
  %535 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %fld1058 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %535, i32 0, i32 1
  %arrayidx1059 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1058, i32 0, i64 0
  %rtwint1060 = bitcast %union.rtunion_def* %arrayidx1059 to i64*
  %536 = load i64, i64* %rtwint1060, align 8
  %sub1061 = sub nsw i64 0, %536
  %call1062 = call i32 @exact_log2_wide(i64 %sub1061)
  store i32 %call1062, i32* %i, align 4
  %cmp1063 = icmp sge i32 %call1062, 0
  br i1 %cmp1063, label %if.then.1065, label %if.end.1071

if.then.1065:                                     ; preds = %land.lhs.true.1057, %land.lhs.true.1041
  %537 = load i32, i32* %mode, align 4
  %538 = load i32, i32* %mode, align 4
  %539 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8
  %fld1066 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %539, i32 0, i32 1
  %arrayidx1067 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1066, i32 0, i64 0
  %rtx1068 = bitcast %union.rtunion_def* %arrayidx1067 to %struct.rtx_def**
  %540 = load %struct.rtx_def*, %struct.rtx_def** %rtx1068, align 8
  %call1069 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %538, %struct.rtx_def* %540)
  %541 = load i32, i32* %i, align 4
  %call1070 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 87, i32 %537, %struct.rtx_def* %call1069, i32 %541)
  store %struct.rtx_def* %call1070, %struct.rtx_def** %retval
  br label %return

if.end.1071:                                      ; preds = %land.lhs.true.1057, %lor.lhs.false.1047, %land.lhs.true.1029, %land.lhs.true.1026, %land.lhs.true.1020, %if.end.1017
  %542 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %542, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %if.end.1071, %if.then.1065, %if.end.1015, %sw.bb.427, %sw.bb.425, %sw.bb.423, %sw.bb.421, %sw.bb.383, %sw.bb, %if.then.352, %if.then.316, %if.then.280, %if.then.38, %if.then
  %543 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %543
}

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @simplify_set(%struct.rtx_def* %x) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %src = alloca %struct.rtx_def*, align 8
  %dest = alloca %struct.rtx_def*, align 8
  %mode = alloca i32, align 4
  %other_insn = alloca %struct.rtx_def*, align 8
  %cc_use = alloca %struct.rtx_def**, align 8
  %old_code = alloca i32, align 4
  %new_code = alloca i32, align 4
  %op0 = alloca %struct.rtx_def*, align 8
  %op1 = alloca %struct.rtx_def*, align 8
  %other_changed = alloca i32, align 4
  %compare_mode = alloca i32, align 4
  %regno = alloca i32, align 4
  %new_dest = alloca %struct.rtx_def*, align 8
  %mask = alloca i64, align 8
  %pat = alloca %struct.rtx_def*, align 8
  %note = alloca %struct.rtx_def*, align 8
  %true_rtx = alloca %struct.rtx_def*, align 8
  %false_rtx = alloca %struct.rtx_def*, align 8
  %term1 = alloca %struct.rtx_def*, align 8
  %term2 = alloca %struct.rtx_def*, align 8
  %term3 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %src, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1, i32 0, i64 0
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx3, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %dest, align 8
  %4 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load = load i32, i32* %5, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp = icmp ne i32 %bf.clear, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load4 = load i32, i32* %7, align 8
  %bf.lshr5 = lshr i32 %bf.load4, 16
  %bf.clear6 = and i32 %bf.lshr5, 255
  br label %cond.end

cond.false:                                       ; preds = %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load7 = load i32, i32* %9, align 8
  %bf.lshr8 = lshr i32 %bf.load7, 16
  %bf.clear9 = and i32 %bf.lshr8, 255
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %bf.clear6, %cond.true ], [ %bf.clear9, %cond.false ]
  store i32 %cond, i32* %mode, align 4
  %10 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load10 = load i32, i32* %11, align 8
  %bf.clear11 = and i32 %bf.load10, 65535
  %cmp12 = icmp eq i32 %bf.clear11, 59
  br i1 %cmp12, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %cond.end
  %12 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load13 = load i32, i32* %13, align 8
  %bf.clear14 = and i32 %bf.load13, 65535
  %cmp15 = icmp eq i32 %bf.clear14, 51
  br i1 %cmp15, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %14 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  store %struct.rtx_def* %14, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %cond.end
  %15 = load i32, i32* %mode, align 4
  %idxprom = sext i32 %15 to i64
  %arrayidx16 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %16 = load i32, i32* %arrayidx16, align 4
  %cmp17 = icmp eq i32 %16, 1
  br i1 %cmp17, label %if.then.18, label %if.end.22

if.then.18:                                       ; preds = %if.end
  %17 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %18 = load i32, i32* %mode, align 4
  %call = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %17, i32 %18, i64 -1, %struct.rtx_def* null, i32 0)
  store %struct.rtx_def* %call, %struct.rtx_def** %src, align 8
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i32 0, i64 1
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %20 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx21, %struct.rtx_def* %20)
  br label %if.end.22

if.end.22:                                        ; preds = %if.then.18, %if.end
  %21 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %22 = bitcast %struct.rtx_def* %21 to i32*
  %bf.load23 = load i32, i32* %22, align 8
  %bf.clear24 = and i32 %bf.load23, 65535
  %cmp25 = icmp eq i32 %bf.clear24, 74
  br i1 %cmp25, label %land.lhs.true.26, label %if.else.190

land.lhs.true.26:                                 ; preds = %if.end.22
  %23 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %24 = load %struct.rtx_def*, %struct.rtx_def** @subst_insn, align 8
  %call27 = call %struct.rtx_def** @find_single_use(%struct.rtx_def* %23, %struct.rtx_def* %24, %struct.rtx_def** %other_insn)
  store %struct.rtx_def** %call27, %struct.rtx_def*** %cc_use, align 8
  %cmp28 = icmp ne %struct.rtx_def** %call27, null
  br i1 %cmp28, label %land.lhs.true.29, label %if.else.190

land.lhs.true.29:                                 ; preds = %land.lhs.true.26
  %25 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 2), align 8
  %cmp30 = icmp eq %struct.rtx_def* %25, null
  br i1 %cmp30, label %land.lhs.true.32, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.29
  %26 = load %struct.rtx_def*, %struct.rtx_def** %other_insn, align 8
  %27 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 2), align 8
  %cmp31 = icmp eq %struct.rtx_def* %26, %27
  br i1 %cmp31, label %land.lhs.true.32, label %if.else.190

land.lhs.true.32:                                 ; preds = %lor.lhs.false, %land.lhs.true.29
  %28 = load %struct.rtx_def**, %struct.rtx_def*** %cc_use, align 8
  %29 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load33 = load i32, i32* %30, align 8
  %bf.clear34 = and i32 %bf.load33, 65535
  %idxprom35 = sext i32 %bf.clear34 to i64
  %arrayidx36 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom35
  %31 = load i8, i8* %arrayidx36, align 1
  %conv = sext i8 %31 to i32
  %cmp37 = icmp eq i32 %conv, 60
  br i1 %cmp37, label %land.lhs.true.39, label %if.else.190

land.lhs.true.39:                                 ; preds = %land.lhs.true.32
  %32 = load %struct.rtx_def**, %struct.rtx_def*** %cc_use, align 8
  %33 = load %struct.rtx_def*, %struct.rtx_def** %32, align 8
  %fld40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i32 0, i64 0
  %rtx42 = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rtx42, align 8
  %35 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %call43 = call i32 @rtx_equal_p(%struct.rtx_def* %34, %struct.rtx_def* %35)
  %tobool = icmp ne i32 %call43, 0
  br i1 %tobool, label %if.then.44, label %if.else.190

if.then.44:                                       ; preds = %land.lhs.true.39
  %36 = load %struct.rtx_def**, %struct.rtx_def*** %cc_use, align 8
  %37 = load %struct.rtx_def*, %struct.rtx_def** %36, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load45 = load i32, i32* %38, align 8
  %bf.clear46 = and i32 %bf.load45, 65535
  store i32 %bf.clear46, i32* %old_code, align 4
  store i32 0, i32* %other_changed, align 4
  %39 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %40 = bitcast %struct.rtx_def* %39 to i32*
  %bf.load47 = load i32, i32* %40, align 8
  %bf.lshr48 = lshr i32 %bf.load47, 16
  %bf.clear49 = and i32 %bf.lshr48, 255
  store i32 %bf.clear49, i32* %compare_mode, align 4
  %41 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %42 = bitcast %struct.rtx_def* %41 to i32*
  %bf.load50 = load i32, i32* %42, align 8
  %bf.clear51 = and i32 %bf.load50, 65535
  %cmp52 = icmp eq i32 %bf.clear51, 74
  br i1 %cmp52, label %if.then.54, label %if.else

if.then.54:                                       ; preds = %if.then.44
  %43 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx56 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld55, i32 0, i64 0
  %rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rtx57, align 8
  store %struct.rtx_def* %44, %struct.rtx_def** %op0, align 8
  %45 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i32 0, i64 1
  %rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rtx60, align 8
  store %struct.rtx_def* %46, %struct.rtx_def** %op1, align 8
  br label %if.end.61

if.else:                                          ; preds = %if.then.44
  %47 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  store %struct.rtx_def* %47, %struct.rtx_def** %op0, align 8
  %48 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %48, %struct.rtx_def** %op1, align 8
  br label %if.end.61

if.end.61:                                        ; preds = %if.else, %if.then.54
  %49 = load i32, i32* %old_code, align 4
  %call62 = call i32 @simplify_comparison(i32 %49, %struct.rtx_def** %op0, %struct.rtx_def** %op1)
  store i32 %call62, i32* %new_code, align 4
  %50 = load i32, i32* %new_code, align 4
  %51 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %52 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call63 = call i32 @ix86_cc_mode(i32 %50, %struct.rtx_def* %51, %struct.rtx_def* %52)
  store i32 %call63, i32* %compare_mode, align 4
  %53 = load i32, i32* %compare_mode, align 4
  %54 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %55 = bitcast %struct.rtx_def* %54 to i32*
  %bf.load64 = load i32, i32* %55, align 8
  %bf.lshr65 = lshr i32 %bf.load64, 16
  %bf.clear66 = and i32 %bf.lshr65, 255
  %cmp67 = icmp ne i32 %53, %bf.clear66
  br i1 %cmp67, label %if.then.69, label %if.end.99

if.then.69:                                       ; preds = %if.end.61
  %56 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx71 to i32*
  %57 = load i32, i32* %rtuint, align 4
  store i32 %57, i32* %regno, align 4
  %58 = load i32, i32* %compare_mode, align 4
  %59 = load i32, i32* %regno, align 4
  %call72 = call %struct.rtx_def* @gen_rtx_REG(i32 %58, i32 %59)
  store %struct.rtx_def* %call72, %struct.rtx_def** %new_dest, align 8
  %60 = load i32, i32* %regno, align 4
  %cmp73 = icmp ult i32 %60, 53
  br i1 %cmp73, label %if.then.85, label %lor.lhs.false.75

lor.lhs.false.75:                                 ; preds = %if.then.69
  %61 = load i32, i32* %regno, align 4
  %idxprom76 = zext i32 %61 to i64
  %62 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %62, i32 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx77 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg, i32 0, i64 %idxprom76
  %63 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx77, align 8
  %sets = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %63, i32 0, i32 3
  %64 = load i32, i32* %sets, align 4
  %cmp78 = icmp eq i32 %64, 1
  br i1 %cmp78, label %land.lhs.true.80, label %if.end.98

land.lhs.true.80:                                 ; preds = %lor.lhs.false.75
  %65 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %66 = bitcast %struct.rtx_def* %65 to i32*
  %bf.load81 = load i32, i32* %66, align 8
  %bf.lshr82 = lshr i32 %bf.load81, 27
  %bf.clear83 = and i32 %bf.lshr82, 1
  %tobool84 = icmp ne i32 %bf.clear83, 0
  br i1 %tobool84, label %if.end.98, label %if.then.85

if.then.85:                                       ; preds = %land.lhs.true.80, %if.then.69
  %67 = load i32, i32* %regno, align 4
  %cmp86 = icmp uge i32 %67, 53
  br i1 %cmp86, label %if.then.88, label %if.end.91

if.then.88:                                       ; preds = %if.then.85
  %68 = load i32, i32* %regno, align 4
  %idxprom89 = zext i32 %68 to i64
  %69 = load %struct.function*, %struct.function** @cfun, align 8
  %emit = getelementptr inbounds %struct.function, %struct.function* %69, i32 0, i32 3
  %70 = load %struct.emit_status*, %struct.emit_status** %emit, align 8
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status, %struct.emit_status* %70, i32 0, i32 12
  %71 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx, align 8
  %arrayidx90 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %71, i64 %idxprom89
  %72 = load %struct.rtx_def*, %struct.rtx_def** %new_dest, align 8
  call void @do_SUBST(%struct.rtx_def** %arrayidx90, %struct.rtx_def* %72)
  br label %if.end.91

if.end.91:                                        ; preds = %if.then.88, %if.then.85
  %73 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld92 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1
  %arrayidx93 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld92, i32 0, i64 0
  %rtx94 = bitcast %union.rtunion_def* %arrayidx93 to %struct.rtx_def**
  %74 = load %struct.rtx_def*, %struct.rtx_def** %new_dest, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx94, %struct.rtx_def* %74)
  %75 = load %struct.rtx_def**, %struct.rtx_def*** %cc_use, align 8
  %76 = load %struct.rtx_def*, %struct.rtx_def** %75, align 8
  %fld95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %arrayidx96 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld95, i32 0, i64 0
  %rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**
  %77 = load %struct.rtx_def*, %struct.rtx_def** %new_dest, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx97, %struct.rtx_def* %77)
  store i32 1, i32* %other_changed, align 4
  %78 = load %struct.rtx_def*, %struct.rtx_def** %new_dest, align 8
  store %struct.rtx_def* %78, %struct.rtx_def** %dest, align 8
  br label %if.end.98

if.end.98:                                        ; preds = %if.end.91, %land.lhs.true.80, %lor.lhs.false.75
  br label %if.end.99

if.end.99:                                        ; preds = %if.end.98, %if.end.61
  %79 = load i32, i32* %new_code, align 4
  %80 = load i32, i32* %old_code, align 4
  %cmp100 = icmp ne i32 %79, %80
  br i1 %cmp100, label %if.then.102, label %if.end.160

if.then.102:                                      ; preds = %if.end.99
  %81 = load %struct.rtx_def**, %struct.rtx_def*** %cc_use, align 8
  %82 = load i32, i32* %new_code, align 4
  %83 = load %struct.rtx_def**, %struct.rtx_def*** %cc_use, align 8
  %84 = load %struct.rtx_def*, %struct.rtx_def** %83, align 8
  %85 = bitcast %struct.rtx_def* %84 to i32*
  %bf.load103 = load i32, i32* %85, align 8
  %bf.lshr104 = lshr i32 %bf.load103, 16
  %bf.clear105 = and i32 %bf.lshr104, 255
  %86 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %87 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %call106 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %82, i32 %bf.clear105, %struct.rtx_def* %86, %struct.rtx_def* %87)
  call void @do_SUBST(%struct.rtx_def** %81, %struct.rtx_def* %call106)
  %88 = load i32, i32* %old_code, align 4
  %cmp107 = icmp eq i32 %88, 102
  br i1 %cmp107, label %land.lhs.true.109, label %lor.lhs.false.112

land.lhs.true.109:                                ; preds = %if.then.102
  %89 = load i32, i32* %new_code, align 4
  %cmp110 = icmp eq i32 %89, 103
  br i1 %cmp110, label %land.lhs.true.118, label %lor.lhs.false.112

lor.lhs.false.112:                                ; preds = %land.lhs.true.109, %if.then.102
  %90 = load i32, i32* %old_code, align 4
  %cmp113 = icmp eq i32 %90, 103
  br i1 %cmp113, label %land.lhs.true.115, label %if.end.159

land.lhs.true.115:                                ; preds = %lor.lhs.false.112
  %91 = load i32, i32* %new_code, align 4
  %cmp116 = icmp eq i32 %91, 102
  br i1 %cmp116, label %land.lhs.true.118, label %if.end.159

land.lhs.true.118:                                ; preds = %land.lhs.true.115, %land.lhs.true.109
  %92 = load i32, i32* %other_changed, align 4
  %tobool119 = icmp ne i32 %92, 0
  br i1 %tobool119, label %if.end.159, label %land.lhs.true.120

land.lhs.true.120:                                ; preds = %land.lhs.true.118
  %93 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %94 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp121 = icmp eq %struct.rtx_def* %93, %94
  br i1 %cmp121, label %land.lhs.true.123, label %if.end.159

land.lhs.true.123:                                ; preds = %land.lhs.true.120
  %95 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %96 = bitcast %struct.rtx_def* %95 to i32*
  %bf.load124 = load i32, i32* %96, align 8
  %bf.lshr125 = lshr i32 %bf.load124, 16
  %bf.clear126 = and i32 %bf.lshr125, 255
  %idxprom127 = sext i32 %bf.clear126 to i64
  %arrayidx128 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom127
  %97 = load i16, i16* %arrayidx128, align 2
  %conv129 = zext i16 %97 to i32
  %cmp130 = icmp sle i32 %conv129, 64
  br i1 %cmp130, label %land.lhs.true.132, label %if.end.159

land.lhs.true.132:                                ; preds = %land.lhs.true.123
  %98 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %99 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %100 = bitcast %struct.rtx_def* %99 to i32*
  %bf.load133 = load i32, i32* %100, align 8
  %bf.lshr134 = lshr i32 %bf.load133, 16
  %bf.clear135 = and i32 %bf.lshr134, 255
  %call136 = call i64 @nonzero_bits(%struct.rtx_def* %98, i32 %bf.clear135)
  store i64 %call136, i64* %mask, align 8
  %call137 = call i32 @exact_log2_wide(i64 %call136)
  %cmp138 = icmp sge i32 %call137, 0
  br i1 %cmp138, label %if.then.140, label %if.end.159

if.then.140:                                      ; preds = %land.lhs.true.132
  %101 = load %struct.rtx_def*, %struct.rtx_def** %other_insn, align 8
  %fld141 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i32 0, i32 1
  %arrayidx142 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld141, i32 0, i64 3
  %rtx143 = bitcast %union.rtunion_def* %arrayidx142 to %struct.rtx_def**
  %102 = load %struct.rtx_def*, %struct.rtx_def** %rtx143, align 8
  store %struct.rtx_def* %102, %struct.rtx_def** %pat, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %note, align 8
  %103 = load %struct.rtx_def*, %struct.rtx_def** %other_insn, align 8
  %call144 = call i32 @recog_for_combine(%struct.rtx_def** %pat, %struct.rtx_def* %103, %struct.rtx_def** %note)
  %cmp145 = icmp slt i32 %call144, 0
  br i1 %cmp145, label %land.lhs.true.147, label %if.end.158

land.lhs.true.147:                                ; preds = %if.then.140
  %104 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %call148 = call i32 @check_asm_operands(%struct.rtx_def* %104)
  %tobool149 = icmp ne i32 %call148, 0
  br i1 %tobool149, label %if.end.158, label %if.then.150

if.then.150:                                      ; preds = %land.lhs.true.147
  %105 = load i32, i32* %old_code, align 4
  %106 = load %struct.rtx_def**, %struct.rtx_def*** %cc_use, align 8
  %107 = load %struct.rtx_def*, %struct.rtx_def** %106, align 8
  %108 = bitcast %struct.rtx_def* %107 to i32*
  %bf.load151 = load i32, i32* %108, align 8
  %bf.value = and i32 %105, 65535
  %bf.clear152 = and i32 %bf.load151, -65536
  %bf.set = or i32 %bf.clear152, %bf.value
  store i32 %bf.set, i32* %108, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %other_insn, align 8
  %109 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %110 = bitcast %struct.rtx_def* %109 to i32*
  %bf.load153 = load i32, i32* %110, align 8
  %bf.lshr154 = lshr i32 %bf.load153, 16
  %bf.clear155 = and i32 %bf.lshr154, 255
  %111 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %112 = load i64, i64* %mask, align 8
  %call156 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %112)
  %call157 = call %struct.rtx_def* @gen_binary(i32 85, i32 %bf.clear155, %struct.rtx_def* %111, %struct.rtx_def* %call156)
  store %struct.rtx_def* %call157, %struct.rtx_def** %op0, align 8
  br label %if.end.158

if.end.158:                                       ; preds = %if.then.150, %land.lhs.true.147, %if.then.140
  br label %if.end.159

if.end.159:                                       ; preds = %if.end.158, %land.lhs.true.132, %land.lhs.true.123, %land.lhs.true.120, %land.lhs.true.118, %land.lhs.true.115, %lor.lhs.false.112
  store i32 1, i32* %other_changed, align 4
  br label %if.end.160

if.end.160:                                       ; preds = %if.end.159, %if.end.99
  %113 = load i32, i32* %other_changed, align 4
  %tobool161 = icmp ne i32 %113, 0
  br i1 %tobool161, label %if.then.162, label %if.end.163

if.then.162:                                      ; preds = %if.end.160
  %114 = load %struct.rtx_def*, %struct.rtx_def** %other_insn, align 8
  store %struct.rtx_def* %114, %struct.rtx_def** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 2), align 8
  br label %if.end.163

if.end.163:                                       ; preds = %if.then.162, %if.end.160
  %115 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %116 = bitcast %struct.rtx_def* %115 to i32*
  %bf.load164 = load i32, i32* %116, align 8
  %bf.clear165 = and i32 %bf.load164, 65535
  %cmp166 = icmp ne i32 %bf.clear165, 74
  br i1 %cmp166, label %if.then.174, label %lor.lhs.false.168

lor.lhs.false.168:                                ; preds = %if.end.163
  %117 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %118 = bitcast %struct.rtx_def* %117 to i32*
  %bf.load169 = load i32, i32* %118, align 8
  %bf.lshr170 = lshr i32 %bf.load169, 16
  %bf.clear171 = and i32 %bf.lshr170, 255
  %119 = load i32, i32* %compare_mode, align 4
  %cmp172 = icmp ne i32 %bf.clear171, %119
  br i1 %cmp172, label %if.then.174, label %if.else.182

if.then.174:                                      ; preds = %lor.lhs.false.168, %if.end.163
  %120 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld175 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1
  %arrayidx176 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld175, i32 0, i64 1
  %rtx177 = bitcast %union.rtunion_def* %arrayidx176 to %struct.rtx_def**
  %121 = load i32, i32* %compare_mode, align 4
  %122 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %123 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call178 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 %121, %struct.rtx_def* %122, %struct.rtx_def* %123)
  call void @do_SUBST(%struct.rtx_def** %rtx177, %struct.rtx_def* %call178)
  %124 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld179 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1
  %arrayidx180 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld179, i32 0, i64 1
  %rtx181 = bitcast %union.rtunion_def* %arrayidx180 to %struct.rtx_def**
  %125 = load %struct.rtx_def*, %struct.rtx_def** %rtx181, align 8
  store %struct.rtx_def* %125, %struct.rtx_def** %src, align 8
  br label %if.end.189

if.else.182:                                      ; preds = %lor.lhs.false.168
  %126 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld183 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1
  %arrayidx184 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld183, i32 0, i64 0
  %rtx185 = bitcast %union.rtunion_def* %arrayidx184 to %struct.rtx_def**
  %127 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx185, %struct.rtx_def* %127)
  %128 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld186 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1
  %arrayidx187 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld186, i32 0, i64 1
  %rtx188 = bitcast %union.rtunion_def* %arrayidx187 to %struct.rtx_def**
  %129 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx188, %struct.rtx_def* %129)
  br label %if.end.189

if.end.189:                                       ; preds = %if.else.182, %if.then.174
  br label %if.end.195

if.else.190:                                      ; preds = %land.lhs.true.39, %land.lhs.true.32, %lor.lhs.false, %land.lhs.true.26, %if.end.22
  %130 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %call191 = call %struct.rtx_def* @make_compound_operation(%struct.rtx_def* %130, i32 47)
  store %struct.rtx_def* %call191, %struct.rtx_def** %src, align 8
  %131 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld192 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i32 0, i32 1
  %arrayidx193 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld192, i32 0, i64 1
  %rtx194 = bitcast %union.rtunion_def* %arrayidx193 to %struct.rtx_def**
  %132 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx194, %struct.rtx_def* %132)
  br label %if.end.195

if.end.195:                                       ; preds = %if.else.190, %if.end.189
  %133 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %134 = bitcast %struct.rtx_def* %133 to i32*
  %bf.load196 = load i32, i32* %134, align 8
  %bf.clear197 = and i32 %bf.load196, 65535
  %cmp198 = icmp eq i32 %bf.clear197, 63
  br i1 %cmp198, label %land.lhs.true.200, label %if.end.305

land.lhs.true.200:                                ; preds = %if.end.195
  %135 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %call201 = call i32 @subreg_lowpart_p(%struct.rtx_def* %135)
  %tobool202 = icmp ne i32 %call201, 0
  br i1 %tobool202, label %land.lhs.true.203, label %if.end.305

land.lhs.true.203:                                ; preds = %land.lhs.true.200
  %136 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld204 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1
  %arrayidx205 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld204, i32 0, i64 0
  %rtx206 = bitcast %union.rtunion_def* %arrayidx205 to %struct.rtx_def**
  %137 = load %struct.rtx_def*, %struct.rtx_def** %rtx206, align 8
  %138 = bitcast %struct.rtx_def* %137 to i32*
  %bf.load207 = load i32, i32* %138, align 8
  %bf.clear208 = and i32 %bf.load207, 65535
  %idxprom209 = sext i32 %bf.clear208 to i64
  %arrayidx210 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom209
  %139 = load i8, i8* %arrayidx210, align 1
  %conv211 = sext i8 %139 to i32
  %cmp212 = icmp ne i32 %conv211, 111
  br i1 %cmp212, label %land.lhs.true.214, label %if.end.305

land.lhs.true.214:                                ; preds = %land.lhs.true.203
  %140 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %141 = bitcast %struct.rtx_def* %140 to i32*
  %bf.load215 = load i32, i32* %141, align 8
  %bf.lshr216 = lshr i32 %bf.load215, 16
  %bf.clear217 = and i32 %bf.lshr216, 255
  %idxprom218 = sext i32 %bf.clear217 to i64
  %arrayidx219 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom218
  %142 = load i8, i8* %arrayidx219, align 1
  %conv220 = zext i8 %142 to i32
  %143 = load i32, i32* @target_flags, align 4
  %and = and i32 %143, 33554432
  %tobool221 = icmp ne i32 %and, 0
  %cond222 = select i1 %tobool221, i32 8, i32 4
  %sub = sub nsw i32 %cond222, 1
  %add = add nsw i32 %conv220, %sub
  %144 = load i32, i32* @target_flags, align 4
  %and223 = and i32 %144, 33554432
  %tobool224 = icmp ne i32 %and223, 0
  %cond225 = select i1 %tobool224, i32 8, i32 4
  %div = sdiv i32 %add, %cond225
  %145 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld226 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %145, i32 0, i32 1
  %arrayidx227 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld226, i32 0, i64 0
  %rtx228 = bitcast %union.rtunion_def* %arrayidx227 to %struct.rtx_def**
  %146 = load %struct.rtx_def*, %struct.rtx_def** %rtx228, align 8
  %147 = bitcast %struct.rtx_def* %146 to i32*
  %bf.load229 = load i32, i32* %147, align 8
  %bf.lshr230 = lshr i32 %bf.load229, 16
  %bf.clear231 = and i32 %bf.lshr230, 255
  %idxprom232 = sext i32 %bf.clear231 to i64
  %arrayidx233 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom232
  %148 = load i8, i8* %arrayidx233, align 1
  %conv234 = zext i8 %148 to i32
  %149 = load i32, i32* @target_flags, align 4
  %and235 = and i32 %149, 33554432
  %tobool236 = icmp ne i32 %and235, 0
  %cond237 = select i1 %tobool236, i32 8, i32 4
  %sub238 = sub nsw i32 %cond237, 1
  %add239 = add nsw i32 %conv234, %sub238
  %150 = load i32, i32* @target_flags, align 4
  %and240 = and i32 %150, 33554432
  %tobool241 = icmp ne i32 %and240, 0
  %cond242 = select i1 %tobool241, i32 8, i32 4
  %div243 = sdiv i32 %add239, %cond242
  %cmp244 = icmp eq i32 %div, %div243
  br i1 %cmp244, label %land.lhs.true.246, label %if.end.305

land.lhs.true.246:                                ; preds = %land.lhs.true.214
  %151 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %152 = bitcast %struct.rtx_def* %151 to i32*
  %bf.load247 = load i32, i32* %152, align 8
  %bf.lshr248 = lshr i32 %bf.load247, 16
  %bf.clear249 = and i32 %bf.lshr248, 255
  %idxprom250 = sext i32 %bf.clear249 to i64
  %arrayidx251 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom250
  %153 = load i8, i8* %arrayidx251, align 1
  %conv252 = zext i8 %153 to i32
  %154 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld253 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %154, i32 0, i32 1
  %arrayidx254 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld253, i32 0, i64 0
  %rtx255 = bitcast %union.rtunion_def* %arrayidx254 to %struct.rtx_def**
  %155 = load %struct.rtx_def*, %struct.rtx_def** %rtx255, align 8
  %156 = bitcast %struct.rtx_def* %155 to i32*
  %bf.load256 = load i32, i32* %156, align 8
  %bf.lshr257 = lshr i32 %bf.load256, 16
  %bf.clear258 = and i32 %bf.lshr257, 255
  %idxprom259 = sext i32 %bf.clear258 to i64
  %arrayidx260 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom259
  %157 = load i8, i8* %arrayidx260, align 1
  %conv261 = zext i8 %157 to i32
  %cmp262 = icmp slt i32 %conv252, %conv261
  br i1 %cmp262, label %land.lhs.true.264, label %if.end.305

land.lhs.true.264:                                ; preds = %land.lhs.true.246
  %158 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %159 = bitcast %struct.rtx_def* %158 to i32*
  %bf.load265 = load i32, i32* %159, align 8
  %bf.clear266 = and i32 %bf.load265, 65535
  %cmp267 = icmp eq i32 %bf.clear266, 61
  br i1 %cmp267, label %if.then.282, label %lor.lhs.false.269

lor.lhs.false.269:                                ; preds = %land.lhs.true.264
  %160 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %161 = bitcast %struct.rtx_def* %160 to i32*
  %bf.load270 = load i32, i32* %161, align 8
  %bf.clear271 = and i32 %bf.load270, 65535
  %cmp272 = icmp eq i32 %bf.clear271, 63
  br i1 %cmp272, label %land.lhs.true.274, label %if.end.305

land.lhs.true.274:                                ; preds = %lor.lhs.false.269
  %162 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld275 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %162, i32 0, i32 1
  %arrayidx276 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld275, i32 0, i64 0
  %rtx277 = bitcast %union.rtunion_def* %arrayidx276 to %struct.rtx_def**
  %163 = load %struct.rtx_def*, %struct.rtx_def** %rtx277, align 8
  %164 = bitcast %struct.rtx_def* %163 to i32*
  %bf.load278 = load i32, i32* %164, align 8
  %bf.clear279 = and i32 %bf.load278, 65535
  %cmp280 = icmp eq i32 %bf.clear279, 61
  br i1 %cmp280, label %if.then.282, label %if.end.305

if.then.282:                                      ; preds = %land.lhs.true.274, %land.lhs.true.264
  %165 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld283 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %165, i32 0, i32 1
  %arrayidx284 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld283, i32 0, i64 0
  %rtx285 = bitcast %union.rtunion_def* %arrayidx284 to %struct.rtx_def**
  %166 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld286 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %166, i32 0, i32 1
  %arrayidx287 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld286, i32 0, i64 0
  %rtx288 = bitcast %union.rtunion_def* %arrayidx287 to %struct.rtx_def**
  %167 = load %struct.rtx_def*, %struct.rtx_def** %rtx288, align 8
  %168 = bitcast %struct.rtx_def* %167 to i32*
  %bf.load289 = load i32, i32* %168, align 8
  %bf.lshr290 = lshr i32 %bf.load289, 16
  %bf.clear291 = and i32 %bf.lshr290, 255
  %169 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %call292 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %bf.clear291, %struct.rtx_def* %169)
  call void @do_SUBST(%struct.rtx_def** %rtx285, %struct.rtx_def* %call292)
  %170 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld293 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %170, i32 0, i32 1
  %arrayidx294 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld293, i32 0, i64 1
  %rtx295 = bitcast %union.rtunion_def* %arrayidx294 to %struct.rtx_def**
  %171 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld296 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %171, i32 0, i32 1
  %arrayidx297 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld296, i32 0, i64 0
  %rtx298 = bitcast %union.rtunion_def* %arrayidx297 to %struct.rtx_def**
  %172 = load %struct.rtx_def*, %struct.rtx_def** %rtx298, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx295, %struct.rtx_def* %172)
  %173 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld299 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %173, i32 0, i32 1
  %arrayidx300 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld299, i32 0, i64 1
  %rtx301 = bitcast %union.rtunion_def* %arrayidx300 to %struct.rtx_def**
  %174 = load %struct.rtx_def*, %struct.rtx_def** %rtx301, align 8
  store %struct.rtx_def* %174, %struct.rtx_def** %src, align 8
  %175 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld302 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %175, i32 0, i32 1
  %arrayidx303 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld302, i32 0, i64 0
  %rtx304 = bitcast %union.rtunion_def* %arrayidx303 to %struct.rtx_def**
  %176 = load %struct.rtx_def*, %struct.rtx_def** %rtx304, align 8
  store %struct.rtx_def* %176, %struct.rtx_def** %dest, align 8
  br label %if.end.305

if.end.305:                                       ; preds = %if.then.282, %land.lhs.true.274, %lor.lhs.false.269, %land.lhs.true.246, %land.lhs.true.214, %land.lhs.true.203, %land.lhs.true.200, %if.end.195
  %177 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %178 = bitcast %struct.rtx_def* %177 to i32*
  %bf.load306 = load i32, i32* %178, align 8
  %bf.clear307 = and i32 %bf.load306, 65535
  %cmp308 = icmp ne i32 %bf.clear307, 59
  br i1 %cmp308, label %land.lhs.true.310, label %if.end.542

land.lhs.true.310:                                ; preds = %if.end.305
  %179 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %180 = bitcast %struct.rtx_def* %179 to i32*
  %bf.load311 = load i32, i32* %180, align 8
  %bf.clear312 = and i32 %bf.load311, 65535
  %cmp313 = icmp eq i32 %bf.clear312, 72
  br i1 %cmp313, label %land.lhs.true.315, label %if.end.542

land.lhs.true.315:                                ; preds = %land.lhs.true.310
  %181 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %182 = bitcast %struct.rtx_def* %181 to i32*
  %bf.load316 = load i32, i32* %182, align 8
  %bf.lshr317 = lshr i32 %bf.load316, 16
  %bf.clear318 = and i32 %bf.lshr317, 255
  %idxprom319 = sext i32 %bf.clear318 to i64
  %arrayidx320 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom319
  %183 = load i32, i32* %arrayidx320, align 4
  %cmp321 = icmp eq i32 %183, 1
  br i1 %cmp321, label %land.lhs.true.323, label %if.end.542

land.lhs.true.323:                                ; preds = %land.lhs.true.315
  %184 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld324 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %184, i32 0, i32 1
  %arrayidx325 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld324, i32 0, i64 0
  %rtx326 = bitcast %union.rtunion_def* %arrayidx325 to %struct.rtx_def**
  %185 = load %struct.rtx_def*, %struct.rtx_def** %rtx326, align 8
  %186 = bitcast %struct.rtx_def* %185 to i32*
  %bf.load327 = load i32, i32* %186, align 8
  %bf.clear328 = and i32 %bf.load327, 65535
  %cmp329 = icmp eq i32 %bf.clear328, 103
  br i1 %cmp329, label %land.lhs.true.339, label %lor.lhs.false.331

lor.lhs.false.331:                                ; preds = %land.lhs.true.323
  %187 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld332 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %187, i32 0, i32 1
  %arrayidx333 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld332, i32 0, i64 0
  %rtx334 = bitcast %union.rtunion_def* %arrayidx333 to %struct.rtx_def**
  %188 = load %struct.rtx_def*, %struct.rtx_def** %rtx334, align 8
  %189 = bitcast %struct.rtx_def* %188 to i32*
  %bf.load335 = load i32, i32* %189, align 8
  %bf.clear336 = and i32 %bf.load335, 65535
  %cmp337 = icmp eq i32 %bf.clear336, 102
  br i1 %cmp337, label %land.lhs.true.339, label %if.end.542

land.lhs.true.339:                                ; preds = %lor.lhs.false.331, %land.lhs.true.323
  %190 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld340 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %190, i32 0, i32 1
  %arrayidx341 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld340, i32 0, i64 0
  %rtx342 = bitcast %union.rtunion_def* %arrayidx341 to %struct.rtx_def**
  %191 = load %struct.rtx_def*, %struct.rtx_def** %rtx342, align 8
  %fld343 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %191, i32 0, i32 1
  %arrayidx344 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld343, i32 0, i64 1
  %rtx345 = bitcast %union.rtunion_def* %arrayidx344 to %struct.rtx_def**
  %192 = load %struct.rtx_def*, %struct.rtx_def** %rtx345, align 8
  %193 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp346 = icmp eq %struct.rtx_def* %192, %193
  br i1 %cmp346, label %land.lhs.true.348, label %if.end.542

land.lhs.true.348:                                ; preds = %land.lhs.true.339
  %194 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %195 = bitcast %struct.rtx_def* %194 to i32*
  %bf.load349 = load i32, i32* %195, align 8
  %bf.lshr350 = lshr i32 %bf.load349, 16
  %bf.clear351 = and i32 %bf.lshr350, 255
  %196 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld352 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %196, i32 0, i32 1
  %arrayidx353 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld352, i32 0, i64 0
  %rtx354 = bitcast %union.rtunion_def* %arrayidx353 to %struct.rtx_def**
  %197 = load %struct.rtx_def*, %struct.rtx_def** %rtx354, align 8
  %fld355 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %197, i32 0, i32 1
  %arrayidx356 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld355, i32 0, i64 0
  %rtx357 = bitcast %union.rtunion_def* %arrayidx356 to %struct.rtx_def**
  %198 = load %struct.rtx_def*, %struct.rtx_def** %rtx357, align 8
  %199 = bitcast %struct.rtx_def* %198 to i32*
  %bf.load358 = load i32, i32* %199, align 8
  %bf.lshr359 = lshr i32 %bf.load358, 16
  %bf.clear360 = and i32 %bf.lshr359, 255
  %cmp361 = icmp eq i32 %bf.clear351, %bf.clear360
  br i1 %cmp361, label %land.lhs.true.363, label %if.end.542

land.lhs.true.363:                                ; preds = %land.lhs.true.348
  %200 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %201 = bitcast %struct.rtx_def* %200 to i32*
  %bf.load364 = load i32, i32* %201, align 8
  %bf.lshr365 = lshr i32 %bf.load364, 16
  %bf.clear366 = and i32 %bf.lshr365, 255
  %call367 = call i32 @can_conditionally_move_p(i32 %bf.clear366)
  %tobool368 = icmp ne i32 %call367, 0
  br i1 %tobool368, label %if.end.542, label %land.lhs.true.369

land.lhs.true.369:                                ; preds = %land.lhs.true.363
  %202 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld370 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %202, i32 0, i32 1
  %arrayidx371 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld370, i32 0, i64 0
  %rtx372 = bitcast %union.rtunion_def* %arrayidx371 to %struct.rtx_def**
  %203 = load %struct.rtx_def*, %struct.rtx_def** %rtx372, align 8
  %fld373 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %203, i32 0, i32 1
  %arrayidx374 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld373, i32 0, i64 0
  %rtx375 = bitcast %union.rtunion_def* %arrayidx374 to %struct.rtx_def**
  %204 = load %struct.rtx_def*, %struct.rtx_def** %rtx375, align 8
  %205 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld376 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %205, i32 0, i32 1
  %arrayidx377 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld376, i32 0, i64 0
  %rtx378 = bitcast %union.rtunion_def* %arrayidx377 to %struct.rtx_def**
  %206 = load %struct.rtx_def*, %struct.rtx_def** %rtx378, align 8
  %fld379 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %206, i32 0, i32 1
  %arrayidx380 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld379, i32 0, i64 0
  %rtx381 = bitcast %union.rtunion_def* %arrayidx380 to %struct.rtx_def**
  %207 = load %struct.rtx_def*, %struct.rtx_def** %rtx381, align 8
  %208 = bitcast %struct.rtx_def* %207 to i32*
  %bf.load382 = load i32, i32* %208, align 8
  %bf.lshr383 = lshr i32 %bf.load382, 16
  %bf.clear384 = and i32 %bf.lshr383, 255
  %call385 = call i32 @num_sign_bit_copies(%struct.rtx_def* %204, i32 %bf.clear384)
  %209 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld386 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %209, i32 0, i32 1
  %arrayidx387 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld386, i32 0, i64 0
  %rtx388 = bitcast %union.rtunion_def* %arrayidx387 to %struct.rtx_def**
  %210 = load %struct.rtx_def*, %struct.rtx_def** %rtx388, align 8
  %fld389 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %210, i32 0, i32 1
  %arrayidx390 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld389, i32 0, i64 0
  %rtx391 = bitcast %union.rtunion_def* %arrayidx390 to %struct.rtx_def**
  %211 = load %struct.rtx_def*, %struct.rtx_def** %rtx391, align 8
  %212 = bitcast %struct.rtx_def* %211 to i32*
  %bf.load392 = load i32, i32* %212, align 8
  %bf.lshr393 = lshr i32 %bf.load392, 16
  %bf.clear394 = and i32 %bf.lshr393, 255
  %idxprom395 = sext i32 %bf.clear394 to i64
  %arrayidx396 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom395
  %213 = load i16, i16* %arrayidx396, align 2
  %conv397 = zext i16 %213 to i32
  %cmp398 = icmp eq i32 %call385, %conv397
  br i1 %cmp398, label %land.lhs.true.400, label %if.end.542

land.lhs.true.400:                                ; preds = %land.lhs.true.369
  %214 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %call401 = call i32 @side_effects_p(%struct.rtx_def* %214)
  %tobool402 = icmp ne i32 %call401, 0
  br i1 %tobool402, label %if.end.542, label %if.then.403

if.then.403:                                      ; preds = %land.lhs.true.400
  %215 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld404 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %215, i32 0, i32 1
  %arrayidx405 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld404, i32 0, i64 0
  %rtx406 = bitcast %union.rtunion_def* %arrayidx405 to %struct.rtx_def**
  %216 = load %struct.rtx_def*, %struct.rtx_def** %rtx406, align 8
  %217 = bitcast %struct.rtx_def* %216 to i32*
  %bf.load407 = load i32, i32* %217, align 8
  %bf.clear408 = and i32 %bf.load407, 65535
  %cmp409 = icmp eq i32 %bf.clear408, 102
  br i1 %cmp409, label %cond.true.411, label %cond.false.415

cond.true.411:                                    ; preds = %if.then.403
  %218 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld412 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %218, i32 0, i32 1
  %arrayidx413 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld412, i32 0, i64 1
  %rtx414 = bitcast %union.rtunion_def* %arrayidx413 to %struct.rtx_def**
  %219 = load %struct.rtx_def*, %struct.rtx_def** %rtx414, align 8
  br label %cond.end.419

cond.false.415:                                   ; preds = %if.then.403
  %220 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld416 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %220, i32 0, i32 1
  %arrayidx417 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld416, i32 0, i64 2
  %rtx418 = bitcast %union.rtunion_def* %arrayidx417 to %struct.rtx_def**
  %221 = load %struct.rtx_def*, %struct.rtx_def** %rtx418, align 8
  br label %cond.end.419

cond.end.419:                                     ; preds = %cond.false.415, %cond.true.411
  %cond420 = phi %struct.rtx_def* [ %219, %cond.true.411 ], [ %221, %cond.false.415 ]
  store %struct.rtx_def* %cond420, %struct.rtx_def** %true_rtx, align 8
  %222 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld421 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %222, i32 0, i32 1
  %arrayidx422 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld421, i32 0, i64 0
  %rtx423 = bitcast %union.rtunion_def* %arrayidx422 to %struct.rtx_def**
  %223 = load %struct.rtx_def*, %struct.rtx_def** %rtx423, align 8
  %224 = bitcast %struct.rtx_def* %223 to i32*
  %bf.load424 = load i32, i32* %224, align 8
  %bf.clear425 = and i32 %bf.load424, 65535
  %cmp426 = icmp eq i32 %bf.clear425, 102
  br i1 %cmp426, label %cond.true.428, label %cond.false.432

cond.true.428:                                    ; preds = %cond.end.419
  %225 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld429 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %225, i32 0, i32 1
  %arrayidx430 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld429, i32 0, i64 2
  %rtx431 = bitcast %union.rtunion_def* %arrayidx430 to %struct.rtx_def**
  %226 = load %struct.rtx_def*, %struct.rtx_def** %rtx431, align 8
  br label %cond.end.436

cond.false.432:                                   ; preds = %cond.end.419
  %227 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld433 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %227, i32 0, i32 1
  %arrayidx434 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld433, i32 0, i64 1
  %rtx435 = bitcast %union.rtunion_def* %arrayidx434 to %struct.rtx_def**
  %228 = load %struct.rtx_def*, %struct.rtx_def** %rtx435, align 8
  br label %cond.end.436

cond.end.436:                                     ; preds = %cond.false.432, %cond.true.428
  %cond437 = phi %struct.rtx_def* [ %226, %cond.true.428 ], [ %228, %cond.false.432 ]
  store %struct.rtx_def* %cond437, %struct.rtx_def** %false_rtx, align 8
  %229 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %229, %struct.rtx_def** %term1, align 8
  %230 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %231 = bitcast %struct.rtx_def* %230 to i32*
  %bf.load438 = load i32, i32* %231, align 8
  %bf.clear439 = and i32 %bf.load438, 65535
  %cmp440 = icmp eq i32 %bf.clear439, 84
  br i1 %cmp440, label %land.lhs.true.442, label %if.else.452

land.lhs.true.442:                                ; preds = %cond.end.436
  %232 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %fld443 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %232, i32 0, i32 1
  %arrayidx444 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld443, i32 0, i64 0
  %rtx445 = bitcast %union.rtunion_def* %arrayidx444 to %struct.rtx_def**
  %233 = load %struct.rtx_def*, %struct.rtx_def** %rtx445, align 8
  %234 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %call446 = call i32 @rtx_equal_p(%struct.rtx_def* %233, %struct.rtx_def* %234)
  %tobool447 = icmp ne i32 %call446, 0
  br i1 %tobool447, label %if.then.448, label %if.else.452

if.then.448:                                      ; preds = %land.lhs.true.442
  %235 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  store %struct.rtx_def* %235, %struct.rtx_def** %term1, align 8
  %236 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %fld449 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %236, i32 0, i32 1
  %arrayidx450 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld449, i32 0, i64 1
  %rtx451 = bitcast %union.rtunion_def* %arrayidx450 to %struct.rtx_def**
  %237 = load %struct.rtx_def*, %struct.rtx_def** %rtx451, align 8
  store %struct.rtx_def* %237, %struct.rtx_def** %true_rtx, align 8
  %238 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %238, %struct.rtx_def** %false_rtx, align 8
  br label %if.end.500

if.else.452:                                      ; preds = %land.lhs.true.442, %cond.end.436
  %239 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %240 = bitcast %struct.rtx_def* %239 to i32*
  %bf.load453 = load i32, i32* %240, align 8
  %bf.clear454 = and i32 %bf.load453, 65535
  %cmp455 = icmp eq i32 %bf.clear454, 84
  br i1 %cmp455, label %land.lhs.true.457, label %if.else.467

land.lhs.true.457:                                ; preds = %if.else.452
  %241 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %fld458 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %241, i32 0, i32 1
  %arrayidx459 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld458, i32 0, i64 1
  %rtx460 = bitcast %union.rtunion_def* %arrayidx459 to %struct.rtx_def**
  %242 = load %struct.rtx_def*, %struct.rtx_def** %rtx460, align 8
  %243 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %call461 = call i32 @rtx_equal_p(%struct.rtx_def* %242, %struct.rtx_def* %243)
  %tobool462 = icmp ne i32 %call461, 0
  br i1 %tobool462, label %if.then.463, label %if.else.467

if.then.463:                                      ; preds = %land.lhs.true.457
  %244 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  store %struct.rtx_def* %244, %struct.rtx_def** %term1, align 8
  %245 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %fld464 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %245, i32 0, i32 1
  %arrayidx465 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld464, i32 0, i64 0
  %rtx466 = bitcast %union.rtunion_def* %arrayidx465 to %struct.rtx_def**
  %246 = load %struct.rtx_def*, %struct.rtx_def** %rtx466, align 8
  store %struct.rtx_def* %246, %struct.rtx_def** %true_rtx, align 8
  %247 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %247, %struct.rtx_def** %false_rtx, align 8
  br label %if.end.499

if.else.467:                                      ; preds = %land.lhs.true.457, %if.else.452
  %248 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %249 = bitcast %struct.rtx_def* %248 to i32*
  %bf.load468 = load i32, i32* %249, align 8
  %bf.clear469 = and i32 %bf.load468, 65535
  %cmp470 = icmp eq i32 %bf.clear469, 84
  br i1 %cmp470, label %land.lhs.true.472, label %if.else.482

land.lhs.true.472:                                ; preds = %if.else.467
  %250 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %fld473 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %250, i32 0, i32 1
  %arrayidx474 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld473, i32 0, i64 0
  %rtx475 = bitcast %union.rtunion_def* %arrayidx474 to %struct.rtx_def**
  %251 = load %struct.rtx_def*, %struct.rtx_def** %rtx475, align 8
  %252 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %call476 = call i32 @rtx_equal_p(%struct.rtx_def* %251, %struct.rtx_def* %252)
  %tobool477 = icmp ne i32 %call476, 0
  br i1 %tobool477, label %if.then.478, label %if.else.482

if.then.478:                                      ; preds = %land.lhs.true.472
  %253 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  store %struct.rtx_def* %253, %struct.rtx_def** %term1, align 8
  %254 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %fld479 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %254, i32 0, i32 1
  %arrayidx480 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld479, i32 0, i64 1
  %rtx481 = bitcast %union.rtunion_def* %arrayidx480 to %struct.rtx_def**
  %255 = load %struct.rtx_def*, %struct.rtx_def** %rtx481, align 8
  store %struct.rtx_def* %255, %struct.rtx_def** %false_rtx, align 8
  %256 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %256, %struct.rtx_def** %true_rtx, align 8
  br label %if.end.498

if.else.482:                                      ; preds = %land.lhs.true.472, %if.else.467
  %257 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %258 = bitcast %struct.rtx_def* %257 to i32*
  %bf.load483 = load i32, i32* %258, align 8
  %bf.clear484 = and i32 %bf.load483, 65535
  %cmp485 = icmp eq i32 %bf.clear484, 84
  br i1 %cmp485, label %land.lhs.true.487, label %if.end.497

land.lhs.true.487:                                ; preds = %if.else.482
  %259 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %fld488 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %259, i32 0, i32 1
  %arrayidx489 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld488, i32 0, i64 1
  %rtx490 = bitcast %union.rtunion_def* %arrayidx489 to %struct.rtx_def**
  %260 = load %struct.rtx_def*, %struct.rtx_def** %rtx490, align 8
  %261 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %call491 = call i32 @rtx_equal_p(%struct.rtx_def* %260, %struct.rtx_def* %261)
  %tobool492 = icmp ne i32 %call491, 0
  br i1 %tobool492, label %if.then.493, label %if.end.497

if.then.493:                                      ; preds = %land.lhs.true.487
  %262 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  store %struct.rtx_def* %262, %struct.rtx_def** %term1, align 8
  %263 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %fld494 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %263, i32 0, i32 1
  %arrayidx495 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld494, i32 0, i64 0
  %rtx496 = bitcast %union.rtunion_def* %arrayidx495 to %struct.rtx_def**
  %264 = load %struct.rtx_def*, %struct.rtx_def** %rtx496, align 8
  store %struct.rtx_def* %264, %struct.rtx_def** %false_rtx, align 8
  %265 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %265, %struct.rtx_def** %true_rtx, align 8
  br label %if.end.497

if.end.497:                                       ; preds = %if.then.493, %land.lhs.true.487, %if.else.482
  br label %if.end.498

if.end.498:                                       ; preds = %if.end.497, %if.then.478
  br label %if.end.499

if.end.499:                                       ; preds = %if.end.498, %if.then.463
  br label %if.end.500

if.end.500:                                       ; preds = %if.end.499, %if.then.448
  %266 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %267 = bitcast %struct.rtx_def* %266 to i32*
  %bf.load501 = load i32, i32* %267, align 8
  %bf.lshr502 = lshr i32 %bf.load501, 16
  %bf.clear503 = and i32 %bf.lshr502, 255
  %268 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld504 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %268, i32 0, i32 1
  %arrayidx505 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld504, i32 0, i64 0
  %rtx506 = bitcast %union.rtunion_def* %arrayidx505 to %struct.rtx_def**
  %269 = load %struct.rtx_def*, %struct.rtx_def** %rtx506, align 8
  %fld507 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %269, i32 0, i32 1
  %arrayidx508 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld507, i32 0, i64 0
  %rtx509 = bitcast %union.rtunion_def* %arrayidx508 to %struct.rtx_def**
  %270 = load %struct.rtx_def*, %struct.rtx_def** %rtx509, align 8
  %271 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  %call510 = call %struct.rtx_def* @gen_binary(i32 83, i32 %bf.clear503, %struct.rtx_def* %270, %struct.rtx_def* %271)
  store %struct.rtx_def* %call510, %struct.rtx_def** %term2, align 8
  %272 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %273 = bitcast %struct.rtx_def* %272 to i32*
  %bf.load511 = load i32, i32* %273, align 8
  %bf.lshr512 = lshr i32 %bf.load511, 16
  %bf.clear513 = and i32 %bf.lshr512, 255
  %274 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %275 = bitcast %struct.rtx_def* %274 to i32*
  %bf.load514 = load i32, i32* %275, align 8
  %bf.lshr515 = lshr i32 %bf.load514, 16
  %bf.clear516 = and i32 %bf.lshr515, 255
  %276 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld517 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %276, i32 0, i32 1
  %arrayidx518 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld517, i32 0, i64 0
  %rtx519 = bitcast %union.rtunion_def* %arrayidx518 to %struct.rtx_def**
  %277 = load %struct.rtx_def*, %struct.rtx_def** %rtx519, align 8
  %fld520 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %277, i32 0, i32 1
  %arrayidx521 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld520, i32 0, i64 0
  %rtx522 = bitcast %union.rtunion_def* %arrayidx521 to %struct.rtx_def**
  %278 = load %struct.rtx_def*, %struct.rtx_def** %rtx522, align 8
  %279 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %280 = bitcast %struct.rtx_def* %279 to i32*
  %bf.load523 = load i32, i32* %280, align 8
  %bf.lshr524 = lshr i32 %bf.load523, 16
  %bf.clear525 = and i32 %bf.lshr524, 255
  %call526 = call %struct.rtx_def* @simplify_gen_unary(i32 86, i32 %bf.clear516, %struct.rtx_def* %278, i32 %bf.clear525)
  %281 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  %call527 = call %struct.rtx_def* @gen_binary(i32 83, i32 %bf.clear513, %struct.rtx_def* %call526, %struct.rtx_def* %281)
  store %struct.rtx_def* %call527, %struct.rtx_def** %term3, align 8
  %282 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld528 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %282, i32 0, i32 1
  %arrayidx529 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld528, i32 0, i64 1
  %rtx530 = bitcast %union.rtunion_def* %arrayidx529 to %struct.rtx_def**
  %283 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %284 = bitcast %struct.rtx_def* %283 to i32*
  %bf.load531 = load i32, i32* %284, align 8
  %bf.lshr532 = lshr i32 %bf.load531, 16
  %bf.clear533 = and i32 %bf.lshr532, 255
  %285 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %286 = bitcast %struct.rtx_def* %285 to i32*
  %bf.load534 = load i32, i32* %286, align 8
  %bf.lshr535 = lshr i32 %bf.load534, 16
  %bf.clear536 = and i32 %bf.lshr535, 255
  %287 = load %struct.rtx_def*, %struct.rtx_def** %term1, align 8
  %288 = load %struct.rtx_def*, %struct.rtx_def** %term2, align 8
  %call537 = call %struct.rtx_def* @gen_binary(i32 84, i32 %bf.clear536, %struct.rtx_def* %287, %struct.rtx_def* %288)
  %289 = load %struct.rtx_def*, %struct.rtx_def** %term3, align 8
  %call538 = call %struct.rtx_def* @gen_binary(i32 84, i32 %bf.clear533, %struct.rtx_def* %call537, %struct.rtx_def* %289)
  call void @do_SUBST(%struct.rtx_def** %rtx530, %struct.rtx_def* %call538)
  %290 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld539 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %290, i32 0, i32 1
  %arrayidx540 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld539, i32 0, i64 1
  %rtx541 = bitcast %union.rtunion_def* %arrayidx540 to %struct.rtx_def**
  %291 = load %struct.rtx_def*, %struct.rtx_def** %rtx541, align 8
  store %struct.rtx_def* %291, %struct.rtx_def** %src, align 8
  br label %if.end.542

if.end.542:                                       ; preds = %if.end.500, %land.lhs.true.400, %land.lhs.true.369, %land.lhs.true.363, %land.lhs.true.348, %land.lhs.true.339, %lor.lhs.false.331, %land.lhs.true.315, %land.lhs.true.310, %if.end.305
  %292 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %293 = bitcast %struct.rtx_def* %292 to i32*
  %bf.load543 = load i32, i32* %293, align 8
  %bf.clear544 = and i32 %bf.load543, 65535
  %cmp545 = icmp eq i32 %bf.clear544, 49
  br i1 %cmp545, label %land.lhs.true.547, label %if.else.554

land.lhs.true.547:                                ; preds = %if.end.542
  %294 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld548 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %294, i32 0, i32 1
  %arrayidx549 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld548, i32 0, i64 0
  %rtx550 = bitcast %union.rtunion_def* %arrayidx549 to %struct.rtx_def**
  %295 = load %struct.rtx_def*, %struct.rtx_def** %rtx550, align 8
  %296 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp551 = icmp eq %struct.rtx_def* %295, %296
  br i1 %cmp551, label %if.then.553, label %if.else.554

if.then.553:                                      ; preds = %land.lhs.true.547
  %297 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  store %struct.rtx_def* %297, %struct.rtx_def** %retval
  br label %return

if.else.554:                                      ; preds = %land.lhs.true.547, %if.end.542
  %298 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %299 = bitcast %struct.rtx_def* %298 to i32*
  %bf.load555 = load i32, i32* %299, align 8
  %bf.clear556 = and i32 %bf.load555, 65535
  %cmp557 = icmp eq i32 %bf.clear556, 49
  br i1 %cmp557, label %land.lhs.true.559, label %if.else.566

land.lhs.true.559:                                ; preds = %if.else.554
  %300 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld560 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %300, i32 0, i32 1
  %arrayidx561 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld560, i32 0, i64 0
  %rtx562 = bitcast %union.rtunion_def* %arrayidx561 to %struct.rtx_def**
  %301 = load %struct.rtx_def*, %struct.rtx_def** %rtx562, align 8
  %302 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp563 = icmp eq %struct.rtx_def* %301, %302
  br i1 %cmp563, label %if.then.565, label %if.else.566

if.then.565:                                      ; preds = %land.lhs.true.559
  %303 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  store %struct.rtx_def* %303, %struct.rtx_def** %retval
  br label %return

if.else.566:                                      ; preds = %land.lhs.true.559, %if.else.554
  %304 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call567 = call %struct.rtx_def* @make_field_assignment(%struct.rtx_def* %304)
  store %struct.rtx_def* %call567, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %if.else.566, %if.then.565, %if.then.553, %if.then
  %305 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %305
}

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @simplify_logical(%struct.rtx_def* %x, i32 %last) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %last.addr = alloca i32, align 4
  %mode = alloca i32, align 4
  %op0 = alloca %struct.rtx_def*, align 8
  %op1 = alloca %struct.rtx_def*, align 8
  %reversed = alloca %struct.rtx_def*, align 8
  %count = alloca i32, align 4
  %mask = alloca i64, align 8
  %num_negated = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %last, i32* %last.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  store i32 %bf.clear, i32* %mode, align 4
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %op0, align 8
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1, i32 0, i64 1
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rtx3, align 8
  store %struct.rtx_def* %5, %struct.rtx_def** %op1, align 8
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load4 = load i32, i32* %7, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  switch i32 %bf.clear5, label %sw.default [
    i32 83, label %sw.bb
    i32 84, label %sw.bb.327
    i32 85, label %sw.bb.592
  ]

sw.bb:                                            ; preds = %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load6 = load i32, i32* %9, align 8
  %bf.clear7 = and i32 %bf.load6, 65535
  %cmp = icmp eq i32 %bf.clear7, 85
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %sw.bb
  %10 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i32 0, i64 0
  %rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rtx10, align 8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call = call i32 @rtx_equal_p(%struct.rtx_def* %11, %struct.rtx_def* %12)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %land.lhs.true.11, label %if.end

land.lhs.true.11:                                 ; preds = %land.lhs.true
  %13 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call12 = call i32 @side_effects_p(%struct.rtx_def* %13)
  %tobool13 = icmp ne i32 %call12, 0
  br i1 %tobool13, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true.11
  %14 = load i32, i32* %mode, align 4
  %15 = load i32, i32* %mode, align 4
  %16 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i32 0, i64 1
  %rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rtx16, align 8
  %18 = load i32, i32* %mode, align 4
  %call17 = call %struct.rtx_def* @simplify_gen_unary(i32 86, i32 %15, %struct.rtx_def* %17, i32 %18)
  %19 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call18 = call %struct.rtx_def* @gen_binary(i32 83, i32 %14, %struct.rtx_def* %call17, %struct.rtx_def* %19)
  store %struct.rtx_def* %call18, %struct.rtx_def** %x.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.11, %land.lhs.true, %sw.bb
  %20 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load19 = load i32, i32* %21, align 8
  %bf.clear20 = and i32 %bf.load19, 65535
  %cmp21 = icmp eq i32 %bf.clear20, 85
  br i1 %cmp21, label %land.lhs.true.22, label %if.end.37

land.lhs.true.22:                                 ; preds = %if.end
  %22 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %arrayidx24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i32 0, i64 1
  %rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rtx25, align 8
  %24 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call26 = call i32 @rtx_equal_p(%struct.rtx_def* %23, %struct.rtx_def* %24)
  %tobool27 = icmp ne i32 %call26, 0
  br i1 %tobool27, label %land.lhs.true.28, label %if.end.37

land.lhs.true.28:                                 ; preds = %land.lhs.true.22
  %25 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call29 = call i32 @side_effects_p(%struct.rtx_def* %25)
  %tobool30 = icmp ne i32 %call29, 0
  br i1 %tobool30, label %if.end.37, label %if.then.31

if.then.31:                                       ; preds = %land.lhs.true.28
  %26 = load i32, i32* %mode, align 4
  %27 = load i32, i32* %mode, align 4
  %28 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i32 0, i64 0
  %rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rtx34, align 8
  %30 = load i32, i32* %mode, align 4
  %call35 = call %struct.rtx_def* @simplify_gen_unary(i32 86, i32 %27, %struct.rtx_def* %29, i32 %30)
  %31 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call36 = call %struct.rtx_def* @gen_binary(i32 83, i32 %26, %struct.rtx_def* %call35, %struct.rtx_def* %31)
  store %struct.rtx_def* %call36, %struct.rtx_def** %x.addr, align 8
  br label %if.end.37

if.end.37:                                        ; preds = %if.then.31, %land.lhs.true.28, %land.lhs.true.22, %if.end
  %32 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load38 = load i32, i32* %33, align 8
  %bf.clear39 = and i32 %bf.load38, 65535
  %cmp40 = icmp eq i32 %bf.clear39, 86
  br i1 %cmp40, label %land.lhs.true.41, label %if.end.68

land.lhs.true.41:                                 ; preds = %if.end.37
  %34 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i32 0, i64 0
  %rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rtx44, align 8
  %36 = bitcast %struct.rtx_def* %35 to i32*
  %bf.load45 = load i32, i32* %36, align 8
  %bf.clear46 = and i32 %bf.load45, 65535
  %cmp47 = icmp eq i32 %bf.clear46, 85
  br i1 %cmp47, label %land.lhs.true.48, label %if.end.68

land.lhs.true.48:                                 ; preds = %land.lhs.true.41
  %37 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i32 0, i64 0
  %rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rtx51, align 8
  %fld52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld52, i32 0, i64 0
  %rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rtx54, align 8
  %40 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call55 = call i32 @rtx_equal_p(%struct.rtx_def* %39, %struct.rtx_def* %40)
  %tobool56 = icmp ne i32 %call55, 0
  br i1 %tobool56, label %land.lhs.true.57, label %if.end.68

land.lhs.true.57:                                 ; preds = %land.lhs.true.48
  %41 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call58 = call i32 @side_effects_p(%struct.rtx_def* %41)
  %tobool59 = icmp ne i32 %call58, 0
  br i1 %tobool59, label %if.end.68, label %if.then.60

if.then.60:                                       ; preds = %land.lhs.true.57
  %42 = load i32, i32* %mode, align 4
  %43 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i32 0, i64 0
  %rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rtx63, align 8
  %fld64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld64, i32 0, i64 1
  %rtx66 = bitcast %union.rtunion_def* %arrayidx65 to %struct.rtx_def**
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rtx66, align 8
  %46 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call67 = call %struct.rtx_def* @gen_binary(i32 83, i32 %42, %struct.rtx_def* %45, %struct.rtx_def* %46)
  store %struct.rtx_def* %call67, %struct.rtx_def** %x.addr, align 8
  br label %if.end.68

if.end.68:                                        ; preds = %if.then.60, %land.lhs.true.57, %land.lhs.true.48, %land.lhs.true.41, %if.end.37
  %47 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %48 = bitcast %struct.rtx_def* %47 to i32*
  %bf.load69 = load i32, i32* %48, align 8
  %bf.clear70 = and i32 %bf.load69, 65535
  %cmp71 = icmp eq i32 %bf.clear70, 86
  br i1 %cmp71, label %land.lhs.true.72, label %if.end.99

land.lhs.true.72:                                 ; preds = %if.end.68
  %49 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i32 0, i64 0
  %rtx75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rtx75, align 8
  %51 = bitcast %struct.rtx_def* %50 to i32*
  %bf.load76 = load i32, i32* %51, align 8
  %bf.clear77 = and i32 %bf.load76, 65535
  %cmp78 = icmp eq i32 %bf.clear77, 85
  br i1 %cmp78, label %land.lhs.true.79, label %if.end.99

land.lhs.true.79:                                 ; preds = %land.lhs.true.72
  %52 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1
  %arrayidx81 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld80, i32 0, i64 0
  %rtx82 = bitcast %union.rtunion_def* %arrayidx81 to %struct.rtx_def**
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rtx82, align 8
  %fld83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i32 0, i64 1
  %rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx85, align 8
  %55 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call86 = call i32 @rtx_equal_p(%struct.rtx_def* %54, %struct.rtx_def* %55)
  %tobool87 = icmp ne i32 %call86, 0
  br i1 %tobool87, label %land.lhs.true.88, label %if.end.99

land.lhs.true.88:                                 ; preds = %land.lhs.true.79
  %56 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call89 = call i32 @side_effects_p(%struct.rtx_def* %56)
  %tobool90 = icmp ne i32 %call89, 0
  br i1 %tobool90, label %if.end.99, label %if.then.91

if.then.91:                                       ; preds = %land.lhs.true.88
  %57 = load i32, i32* %mode, align 4
  %58 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld92 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1
  %arrayidx93 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld92, i32 0, i64 0
  %rtx94 = bitcast %union.rtunion_def* %arrayidx93 to %struct.rtx_def**
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rtx94, align 8
  %fld95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1
  %arrayidx96 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld95, i32 0, i64 0
  %rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rtx97, align 8
  %61 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call98 = call %struct.rtx_def* @gen_binary(i32 83, i32 %57, %struct.rtx_def* %60, %struct.rtx_def* %61)
  store %struct.rtx_def* %call98, %struct.rtx_def** %x.addr, align 8
  br label %if.end.99

if.end.99:                                        ; preds = %if.then.91, %land.lhs.true.88, %land.lhs.true.79, %land.lhs.true.72, %if.end.68
  %62 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %63 = bitcast %struct.rtx_def* %62 to i32*
  %bf.load100 = load i32, i32* %63, align 8
  %bf.clear101 = and i32 %bf.load100, 65535
  %cmp102 = icmp eq i32 %bf.clear101, 54
  br i1 %cmp102, label %land.lhs.true.103, label %if.end.186

land.lhs.true.103:                                ; preds = %if.end.99
  %64 = load i32, i32* %mode, align 4
  %idxprom = sext i32 %64 to i64
  %arrayidx104 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom
  %65 = load i16, i16* %arrayidx104, align 2
  %conv = zext i16 %65 to i32
  %cmp105 = icmp sle i32 %conv, 64
  br i1 %cmp105, label %if.then.111, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.103
  %66 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld107 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1
  %arrayidx108 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld107, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx108 to i64*
  %67 = load i64, i64* %rtwint, align 8
  %cmp109 = icmp sgt i64 %67, 0
  br i1 %cmp109, label %if.then.111, label %if.end.186

if.then.111:                                      ; preds = %lor.lhs.false, %land.lhs.true.103
  %68 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %69 = load i32, i32* %mode, align 4
  %70 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %71 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1
  %arrayidx113 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld112, i32 0, i64 0
  %rtwint114 = bitcast %union.rtunion_def* %arrayidx113 to i64*
  %72 = load i64, i64* %rtwint114, align 8
  %call115 = call %struct.rtx_def* @simplify_and_const_int(%struct.rtx_def* %68, i32 %69, %struct.rtx_def* %70, i64 %72)
  store %struct.rtx_def* %call115, %struct.rtx_def** %x.addr, align 8
  %73 = load i32, i32* %last.addr, align 4
  %tobool116 = icmp ne i32 %73, 0
  br i1 %tobool116, label %land.lhs.true.117, label %if.end.156

land.lhs.true.117:                                ; preds = %if.then.111
  %74 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %75 = bitcast %struct.rtx_def* %74 to i32*
  %bf.load118 = load i32, i32* %75, align 8
  %bf.clear119 = and i32 %bf.load118, 65535
  %cmp120 = icmp eq i32 %bf.clear119, 84
  br i1 %cmp120, label %land.lhs.true.122, label %if.end.156

land.lhs.true.122:                                ; preds = %land.lhs.true.117
  %76 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %77 = bitcast %struct.rtx_def* %76 to i32*
  %bf.load123 = load i32, i32* %77, align 8
  %bf.clear124 = and i32 %bf.load123, 65535
  %cmp125 = icmp eq i32 %bf.clear124, 83
  br i1 %cmp125, label %land.lhs.true.127, label %if.end.156

land.lhs.true.127:                                ; preds = %land.lhs.true.122
  %78 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx129 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld128, i32 0, i64 1
  %rtx130 = bitcast %union.rtunion_def* %arrayidx129 to %struct.rtx_def**
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rtx130, align 8
  %80 = bitcast %struct.rtx_def* %79 to i32*
  %bf.load131 = load i32, i32* %80, align 8
  %bf.clear132 = and i32 %bf.load131, 65535
  %cmp133 = icmp eq i32 %bf.clear132, 54
  br i1 %cmp133, label %land.lhs.true.135, label %if.end.156

land.lhs.true.135:                                ; preds = %land.lhs.true.127
  %81 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %82 = bitcast %struct.rtx_def* %81 to i32*
  %bf.load136 = load i32, i32* %82, align 8
  %bf.clear137 = and i32 %bf.load136, 65535
  %cmp138 = icmp eq i32 %bf.clear137, 54
  br i1 %cmp138, label %if.then.140, label %if.end.156

if.then.140:                                      ; preds = %land.lhs.true.135
  %83 = load i32, i32* %mode, align 4
  %84 = load i32, i32* %mode, align 4
  %85 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld141 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1
  %arrayidx142 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld141, i32 0, i64 0
  %rtx143 = bitcast %union.rtunion_def* %arrayidx142 to %struct.rtx_def**
  %86 = load %struct.rtx_def*, %struct.rtx_def** %rtx143, align 8
  %87 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1
  %arrayidx145 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld144, i32 0, i64 1
  %rtx146 = bitcast %union.rtunion_def* %arrayidx145 to %struct.rtx_def**
  %88 = load %struct.rtx_def*, %struct.rtx_def** %rtx146, align 8
  %fld147 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1
  %arrayidx148 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld147, i32 0, i64 0
  %rtwint149 = bitcast %union.rtunion_def* %arrayidx148 to i64*
  %89 = load i64, i64* %rtwint149, align 8
  %90 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld150 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1
  %arrayidx151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld150, i32 0, i64 0
  %rtwint152 = bitcast %union.rtunion_def* %arrayidx151 to i64*
  %91 = load i64, i64* %rtwint152, align 8
  %neg = xor i64 %91, -1
  %and = and i64 %89, %neg
  %call153 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %and)
  %call154 = call %struct.rtx_def* @gen_binary(i32 83, i32 %84, %struct.rtx_def* %86, %struct.rtx_def* %call153)
  %92 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call155 = call %struct.rtx_def* @gen_binary(i32 84, i32 %83, %struct.rtx_def* %call154, %struct.rtx_def* %92)
  store %struct.rtx_def* %call155, %struct.rtx_def** %retval
  br label %return

if.end.156:                                       ; preds = %land.lhs.true.135, %land.lhs.true.127, %land.lhs.true.122, %land.lhs.true.117, %if.then.111
  %93 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %94 = bitcast %struct.rtx_def* %93 to i32*
  %bf.load157 = load i32, i32* %94, align 8
  %bf.clear158 = and i32 %bf.load157, 65535
  %cmp159 = icmp ne i32 %bf.clear158, 83
  br i1 %cmp159, label %if.then.161, label %if.end.162

if.then.161:                                      ; preds = %if.end.156
  %95 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %95, %struct.rtx_def** %retval
  br label %return

if.end.162:                                       ; preds = %if.end.156
  %96 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %97 = bitcast %struct.rtx_def* %96 to i32*
  %bf.load163 = load i32, i32* %97, align 8
  %bf.clear164 = and i32 %bf.load163, 65535
  %idxprom165 = sext i32 %bf.clear164 to i64
  %arrayidx166 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom165
  %98 = load i8, i8* %arrayidx166, align 1
  %conv167 = sext i8 %98 to i32
  %cmp168 = icmp eq i32 %conv167, 99
  br i1 %cmp168, label %if.then.178, label %lor.lhs.false.170

lor.lhs.false.170:                                ; preds = %if.end.162
  %99 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %100 = bitcast %struct.rtx_def* %99 to i32*
  %bf.load171 = load i32, i32* %100, align 8
  %bf.clear172 = and i32 %bf.load171, 65535
  %idxprom173 = sext i32 %bf.clear172 to i64
  %arrayidx174 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom173
  %101 = load i8, i8* %arrayidx174, align 1
  %conv175 = sext i8 %101 to i32
  %cmp176 = icmp eq i32 %conv175, 50
  br i1 %cmp176, label %if.then.178, label %if.end.185

if.then.178:                                      ; preds = %lor.lhs.false.170, %if.end.162
  %102 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld179 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1
  %arrayidx180 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld179, i32 0, i64 0
  %rtx181 = bitcast %union.rtunion_def* %arrayidx180 to %struct.rtx_def**
  %103 = load %struct.rtx_def*, %struct.rtx_def** %rtx181, align 8
  store %struct.rtx_def* %103, %struct.rtx_def** %op0, align 8
  %104 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld182 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %104, i32 0, i32 1
  %arrayidx183 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld182, i32 0, i64 1
  %rtx184 = bitcast %union.rtunion_def* %arrayidx183 to %struct.rtx_def**
  %105 = load %struct.rtx_def*, %struct.rtx_def** %rtx184, align 8
  store %struct.rtx_def* %105, %struct.rtx_def** %op1, align 8
  br label %if.end.185

if.end.185:                                       ; preds = %if.then.178, %lor.lhs.false.170
  br label %if.end.186

if.end.186:                                       ; preds = %if.end.185, %lor.lhs.false, %if.end.99
  %106 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %107 = bitcast %struct.rtx_def* %106 to i32*
  %bf.load187 = load i32, i32* %107, align 8
  %bf.clear188 = and i32 %bf.load187, 65535
  %cmp189 = icmp eq i32 %bf.clear188, 84
  br i1 %cmp189, label %land.lhs.true.191, label %if.end.216

land.lhs.true.191:                                ; preds = %if.end.186
  %108 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld192 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1
  %arrayidx193 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld192, i32 0, i64 0
  %rtx194 = bitcast %union.rtunion_def* %arrayidx193 to %struct.rtx_def**
  %109 = load %struct.rtx_def*, %struct.rtx_def** %rtx194, align 8
  %110 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call195 = call i32 @rtx_equal_p(%struct.rtx_def* %109, %struct.rtx_def* %110)
  %tobool196 = icmp ne i32 %call195, 0
  br i1 %tobool196, label %land.lhs.true.203, label %lor.lhs.false.197

lor.lhs.false.197:                                ; preds = %land.lhs.true.191
  %111 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld198 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i32 0, i32 1
  %arrayidx199 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld198, i32 0, i64 1
  %rtx200 = bitcast %union.rtunion_def* %arrayidx199 to %struct.rtx_def**
  %112 = load %struct.rtx_def*, %struct.rtx_def** %rtx200, align 8
  %113 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call201 = call i32 @rtx_equal_p(%struct.rtx_def* %112, %struct.rtx_def* %113)
  %tobool202 = icmp ne i32 %call201, 0
  br i1 %tobool202, label %land.lhs.true.203, label %if.end.216

land.lhs.true.203:                                ; preds = %lor.lhs.false.197, %land.lhs.true.191
  %114 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld204 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %114, i32 0, i32 1
  %arrayidx205 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld204, i32 0, i64 0
  %rtx206 = bitcast %union.rtunion_def* %arrayidx205 to %struct.rtx_def**
  %115 = load %struct.rtx_def*, %struct.rtx_def** %rtx206, align 8
  %call207 = call i32 @side_effects_p(%struct.rtx_def* %115)
  %tobool208 = icmp ne i32 %call207, 0
  br i1 %tobool208, label %if.end.216, label %land.lhs.true.209

land.lhs.true.209:                                ; preds = %land.lhs.true.203
  %116 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld210 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i32 0, i32 1
  %arrayidx211 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld210, i32 0, i64 1
  %rtx212 = bitcast %union.rtunion_def* %arrayidx211 to %struct.rtx_def**
  %117 = load %struct.rtx_def*, %struct.rtx_def** %rtx212, align 8
  %call213 = call i32 @side_effects_p(%struct.rtx_def* %117)
  %tobool214 = icmp ne i32 %call213, 0
  br i1 %tobool214, label %if.end.216, label %if.then.215

if.then.215:                                      ; preds = %land.lhs.true.209
  %118 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  store %struct.rtx_def* %118, %struct.rtx_def** %retval
  br label %return

if.end.216:                                       ; preds = %land.lhs.true.209, %land.lhs.true.203, %lor.lhs.false.197, %if.end.186
  %119 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %120 = bitcast %struct.rtx_def* %119 to i32*
  %bf.load217 = load i32, i32* %120, align 8
  %bf.clear218 = and i32 %bf.load217, 65535
  %cmp219 = icmp eq i32 %bf.clear218, 84
  br i1 %cmp219, label %if.then.226, label %lor.lhs.false.221

lor.lhs.false.221:                                ; preds = %if.end.216
  %121 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %122 = bitcast %struct.rtx_def* %121 to i32*
  %bf.load222 = load i32, i32* %122, align 8
  %bf.clear223 = and i32 %bf.load222, 65535
  %cmp224 = icmp eq i32 %bf.clear223, 85
  br i1 %cmp224, label %if.then.226, label %if.end.246

if.then.226:                                      ; preds = %lor.lhs.false.221, %if.end.216
  %123 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %124 = bitcast %struct.rtx_def* %123 to i32*
  %bf.load227 = load i32, i32* %124, align 8
  %bf.clear228 = and i32 %bf.load227, 65535
  %125 = load i32, i32* %mode, align 4
  %126 = load i32, i32* %mode, align 4
  %127 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld229 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %127, i32 0, i32 1
  %arrayidx230 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld229, i32 0, i64 0
  %rtx231 = bitcast %union.rtunion_def* %arrayidx230 to %struct.rtx_def**
  %128 = load %struct.rtx_def*, %struct.rtx_def** %rtx231, align 8
  %129 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call232 = call %struct.rtx_def* @gen_binary(i32 83, i32 %126, %struct.rtx_def* %128, %struct.rtx_def* %129)
  %130 = load i32, i32* %mode, align 4
  %131 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld233 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i32 0, i32 1
  %arrayidx234 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld233, i32 0, i64 1
  %rtx235 = bitcast %union.rtunion_def* %arrayidx234 to %struct.rtx_def**
  %132 = load %struct.rtx_def*, %struct.rtx_def** %rtx235, align 8
  %133 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call236 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %133)
  %call237 = call %struct.rtx_def* @gen_binary(i32 83, i32 %130, %struct.rtx_def* %132, %struct.rtx_def* %call236)
  %call238 = call %struct.rtx_def* @gen_binary(i32 %bf.clear228, i32 %125, %struct.rtx_def* %call232, %struct.rtx_def* %call237)
  %call239 = call %struct.rtx_def* @apply_distributive_law(%struct.rtx_def* %call238)
  store %struct.rtx_def* %call239, %struct.rtx_def** %x.addr, align 8
  %134 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %135 = bitcast %struct.rtx_def* %134 to i32*
  %bf.load240 = load i32, i32* %135, align 8
  %bf.clear241 = and i32 %bf.load240, 65535
  %cmp242 = icmp ne i32 %bf.clear241, 83
  br i1 %cmp242, label %if.then.244, label %if.end.245

if.then.244:                                      ; preds = %if.then.226
  %136 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %136, %struct.rtx_def** %retval
  br label %return

if.end.245:                                       ; preds = %if.then.226
  br label %if.end.246

if.end.246:                                       ; preds = %if.end.245, %lor.lhs.false.221
  %137 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %138 = bitcast %struct.rtx_def* %137 to i32*
  %bf.load247 = load i32, i32* %138, align 8
  %bf.clear248 = and i32 %bf.load247, 65535
  %cmp249 = icmp eq i32 %bf.clear248, 84
  br i1 %cmp249, label %if.then.256, label %lor.lhs.false.251

lor.lhs.false.251:                                ; preds = %if.end.246
  %139 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %140 = bitcast %struct.rtx_def* %139 to i32*
  %bf.load252 = load i32, i32* %140, align 8
  %bf.clear253 = and i32 %bf.load252, 65535
  %cmp254 = icmp eq i32 %bf.clear253, 85
  br i1 %cmp254, label %if.then.256, label %if.end.270

if.then.256:                                      ; preds = %lor.lhs.false.251, %if.end.246
  %141 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %142 = bitcast %struct.rtx_def* %141 to i32*
  %bf.load257 = load i32, i32* %142, align 8
  %bf.clear258 = and i32 %bf.load257, 65535
  %143 = load i32, i32* %mode, align 4
  %144 = load i32, i32* %mode, align 4
  %145 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld259 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %145, i32 0, i32 1
  %arrayidx260 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld259, i32 0, i64 0
  %rtx261 = bitcast %union.rtunion_def* %arrayidx260 to %struct.rtx_def**
  %146 = load %struct.rtx_def*, %struct.rtx_def** %rtx261, align 8
  %147 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call262 = call %struct.rtx_def* @gen_binary(i32 83, i32 %144, %struct.rtx_def* %146, %struct.rtx_def* %147)
  %148 = load i32, i32* %mode, align 4
  %149 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld263 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %149, i32 0, i32 1
  %arrayidx264 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld263, i32 0, i64 1
  %rtx265 = bitcast %union.rtunion_def* %arrayidx264 to %struct.rtx_def**
  %150 = load %struct.rtx_def*, %struct.rtx_def** %rtx265, align 8
  %151 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call266 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %151)
  %call267 = call %struct.rtx_def* @gen_binary(i32 83, i32 %148, %struct.rtx_def* %150, %struct.rtx_def* %call266)
  %call268 = call %struct.rtx_def* @gen_binary(i32 %bf.clear258, i32 %143, %struct.rtx_def* %call262, %struct.rtx_def* %call267)
  %call269 = call %struct.rtx_def* @apply_distributive_law(%struct.rtx_def* %call268)
  store %struct.rtx_def* %call269, %struct.rtx_def** %retval
  br label %return

if.end.270:                                       ; preds = %lor.lhs.false.251
  %152 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %153 = bitcast %struct.rtx_def* %152 to i32*
  %bf.load271 = load i32, i32* %153, align 8
  %bf.clear272 = and i32 %bf.load271, 65535
  %cmp273 = icmp eq i32 %bf.clear272, 86
  br i1 %cmp273, label %land.lhs.true.275, label %if.else

land.lhs.true.275:                                ; preds = %if.end.270
  %154 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %155 = bitcast %struct.rtx_def* %154 to i32*
  %bf.load276 = load i32, i32* %155, align 8
  %bf.clear277 = and i32 %bf.load276, 65535
  %cmp278 = icmp eq i32 %bf.clear277, 85
  br i1 %cmp278, label %if.then.280, label %if.else

if.then.280:                                      ; preds = %land.lhs.true.275
  %156 = load i32, i32* %mode, align 4
  %157 = load i32, i32* %mode, align 4
  %158 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld281 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %158, i32 0, i32 1
  %arrayidx282 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld281, i32 0, i64 0
  %rtx283 = bitcast %union.rtunion_def* %arrayidx282 to %struct.rtx_def**
  %159 = load %struct.rtx_def*, %struct.rtx_def** %rtx283, align 8
  %160 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld284 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %160, i32 0, i32 1
  %arrayidx285 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld284, i32 0, i64 0
  %rtx286 = bitcast %union.rtunion_def* %arrayidx285 to %struct.rtx_def**
  %161 = load %struct.rtx_def*, %struct.rtx_def** %rtx286, align 8
  %call287 = call %struct.rtx_def* @gen_binary(i32 84, i32 %157, %struct.rtx_def* %159, %struct.rtx_def* %161)
  %162 = load i32, i32* %mode, align 4
  %163 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld288 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %163, i32 0, i32 1
  %arrayidx289 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld288, i32 0, i64 0
  %rtx290 = bitcast %union.rtunion_def* %arrayidx289 to %struct.rtx_def**
  %164 = load %struct.rtx_def*, %struct.rtx_def** %rtx290, align 8
  %call291 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %164)
  %165 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld292 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %165, i32 0, i32 1
  %arrayidx293 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld292, i32 0, i64 1
  %rtx294 = bitcast %union.rtunion_def* %arrayidx293 to %struct.rtx_def**
  %166 = load %struct.rtx_def*, %struct.rtx_def** %rtx294, align 8
  %call295 = call %struct.rtx_def* @gen_binary(i32 84, i32 %162, %struct.rtx_def* %call291, %struct.rtx_def* %166)
  %call296 = call %struct.rtx_def* @gen_binary(i32 85, i32 %156, %struct.rtx_def* %call287, %struct.rtx_def* %call295)
  %call297 = call %struct.rtx_def* @apply_distributive_law(%struct.rtx_def* %call296)
  store %struct.rtx_def* %call297, %struct.rtx_def** %retval
  br label %return

if.else:                                          ; preds = %land.lhs.true.275, %if.end.270
  %167 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %168 = bitcast %struct.rtx_def* %167 to i32*
  %bf.load298 = load i32, i32* %168, align 8
  %bf.clear299 = and i32 %bf.load298, 65535
  %cmp300 = icmp eq i32 %bf.clear299, 86
  br i1 %cmp300, label %land.lhs.true.302, label %if.end.325

land.lhs.true.302:                                ; preds = %if.else
  %169 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %170 = bitcast %struct.rtx_def* %169 to i32*
  %bf.load303 = load i32, i32* %170, align 8
  %bf.clear304 = and i32 %bf.load303, 65535
  %cmp305 = icmp eq i32 %bf.clear304, 85
  br i1 %cmp305, label %if.then.307, label %if.end.325

if.then.307:                                      ; preds = %land.lhs.true.302
  %171 = load i32, i32* %mode, align 4
  %172 = load i32, i32* %mode, align 4
  %173 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld308 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %173, i32 0, i32 1
  %arrayidx309 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld308, i32 0, i64 0
  %rtx310 = bitcast %union.rtunion_def* %arrayidx309 to %struct.rtx_def**
  %174 = load %struct.rtx_def*, %struct.rtx_def** %rtx310, align 8
  %175 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld311 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %175, i32 0, i32 1
  %arrayidx312 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld311, i32 0, i64 0
  %rtx313 = bitcast %union.rtunion_def* %arrayidx312 to %struct.rtx_def**
  %176 = load %struct.rtx_def*, %struct.rtx_def** %rtx313, align 8
  %call314 = call %struct.rtx_def* @gen_binary(i32 84, i32 %172, %struct.rtx_def* %174, %struct.rtx_def* %176)
  %177 = load i32, i32* %mode, align 4
  %178 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld315 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %178, i32 0, i32 1
  %arrayidx316 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld315, i32 0, i64 0
  %rtx317 = bitcast %union.rtunion_def* %arrayidx316 to %struct.rtx_def**
  %179 = load %struct.rtx_def*, %struct.rtx_def** %rtx317, align 8
  %call318 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %179)
  %180 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld319 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %180, i32 0, i32 1
  %arrayidx320 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld319, i32 0, i64 1
  %rtx321 = bitcast %union.rtunion_def* %arrayidx320 to %struct.rtx_def**
  %181 = load %struct.rtx_def*, %struct.rtx_def** %rtx321, align 8
  %call322 = call %struct.rtx_def* @gen_binary(i32 84, i32 %177, %struct.rtx_def* %call318, %struct.rtx_def* %181)
  %call323 = call %struct.rtx_def* @gen_binary(i32 85, i32 %171, %struct.rtx_def* %call314, %struct.rtx_def* %call322)
  %call324 = call %struct.rtx_def* @apply_distributive_law(%struct.rtx_def* %call323)
  store %struct.rtx_def* %call324, %struct.rtx_def** %retval
  br label %return

if.end.325:                                       ; preds = %land.lhs.true.302, %if.else
  br label %if.end.326

if.end.326:                                       ; preds = %if.end.325
  br label %sw.epilog

sw.bb.327:                                        ; preds = %entry
  %182 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %183 = bitcast %struct.rtx_def* %182 to i32*
  %bf.load328 = load i32, i32* %183, align 8
  %bf.clear329 = and i32 %bf.load328, 65535
  %cmp330 = icmp eq i32 %bf.clear329, 54
  br i1 %cmp330, label %land.lhs.true.332, label %if.end.348

land.lhs.true.332:                                ; preds = %sw.bb.327
  %184 = load i32, i32* %mode, align 4
  %idxprom333 = sext i32 %184 to i64
  %arrayidx334 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom333
  %185 = load i16, i16* %arrayidx334, align 2
  %conv335 = zext i16 %185 to i32
  %cmp336 = icmp sle i32 %conv335, 64
  br i1 %cmp336, label %land.lhs.true.338, label %if.end.348

land.lhs.true.338:                                ; preds = %land.lhs.true.332
  %186 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %187 = load i32, i32* %mode, align 4
  %call339 = call i64 @nonzero_bits(%struct.rtx_def* %186, i32 %187)
  %188 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld340 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %188, i32 0, i32 1
  %arrayidx341 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld340, i32 0, i64 0
  %rtwint342 = bitcast %union.rtunion_def* %arrayidx341 to i64*
  %189 = load i64, i64* %rtwint342, align 8
  %neg343 = xor i64 %189, -1
  %and344 = and i64 %call339, %neg343
  %cmp345 = icmp eq i64 %and344, 0
  br i1 %cmp345, label %if.then.347, label %if.end.348

if.then.347:                                      ; preds = %land.lhs.true.338
  %190 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  store %struct.rtx_def* %190, %struct.rtx_def** %retval
  br label %return

if.end.348:                                       ; preds = %land.lhs.true.338, %land.lhs.true.332, %sw.bb.327
  %191 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %192 = bitcast %struct.rtx_def* %191 to i32*
  %bf.load349 = load i32, i32* %192, align 8
  %bf.clear350 = and i32 %bf.load349, 65535
  %cmp351 = icmp eq i32 %bf.clear350, 83
  br i1 %cmp351, label %land.lhs.true.353, label %if.end.378

land.lhs.true.353:                                ; preds = %if.end.348
  %193 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld354 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %193, i32 0, i32 1
  %arrayidx355 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld354, i32 0, i64 0
  %rtx356 = bitcast %union.rtunion_def* %arrayidx355 to %struct.rtx_def**
  %194 = load %struct.rtx_def*, %struct.rtx_def** %rtx356, align 8
  %195 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call357 = call i32 @rtx_equal_p(%struct.rtx_def* %194, %struct.rtx_def* %195)
  %tobool358 = icmp ne i32 %call357, 0
  br i1 %tobool358, label %land.lhs.true.365, label %lor.lhs.false.359

lor.lhs.false.359:                                ; preds = %land.lhs.true.353
  %196 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld360 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %196, i32 0, i32 1
  %arrayidx361 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld360, i32 0, i64 1
  %rtx362 = bitcast %union.rtunion_def* %arrayidx361 to %struct.rtx_def**
  %197 = load %struct.rtx_def*, %struct.rtx_def** %rtx362, align 8
  %198 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call363 = call i32 @rtx_equal_p(%struct.rtx_def* %197, %struct.rtx_def* %198)
  %tobool364 = icmp ne i32 %call363, 0
  br i1 %tobool364, label %land.lhs.true.365, label %if.end.378

land.lhs.true.365:                                ; preds = %lor.lhs.false.359, %land.lhs.true.353
  %199 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld366 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %199, i32 0, i32 1
  %arrayidx367 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld366, i32 0, i64 0
  %rtx368 = bitcast %union.rtunion_def* %arrayidx367 to %struct.rtx_def**
  %200 = load %struct.rtx_def*, %struct.rtx_def** %rtx368, align 8
  %call369 = call i32 @side_effects_p(%struct.rtx_def* %200)
  %tobool370 = icmp ne i32 %call369, 0
  br i1 %tobool370, label %if.end.378, label %land.lhs.true.371

land.lhs.true.371:                                ; preds = %land.lhs.true.365
  %201 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld372 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %201, i32 0, i32 1
  %arrayidx373 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld372, i32 0, i64 1
  %rtx374 = bitcast %union.rtunion_def* %arrayidx373 to %struct.rtx_def**
  %202 = load %struct.rtx_def*, %struct.rtx_def** %rtx374, align 8
  %call375 = call i32 @side_effects_p(%struct.rtx_def* %202)
  %tobool376 = icmp ne i32 %call375, 0
  br i1 %tobool376, label %if.end.378, label %if.then.377

if.then.377:                                      ; preds = %land.lhs.true.371
  %203 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  store %struct.rtx_def* %203, %struct.rtx_def** %retval
  br label %return

if.end.378:                                       ; preds = %land.lhs.true.371, %land.lhs.true.365, %lor.lhs.false.359, %if.end.348
  %204 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %205 = bitcast %struct.rtx_def* %204 to i32*
  %bf.load379 = load i32, i32* %205, align 8
  %bf.clear380 = and i32 %bf.load379, 65535
  %cmp381 = icmp eq i32 %bf.clear380, 83
  br i1 %cmp381, label %if.then.383, label %if.end.401

if.then.383:                                      ; preds = %if.end.378
  %206 = load i32, i32* %mode, align 4
  %207 = load i32, i32* %mode, align 4
  %208 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld384 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %208, i32 0, i32 1
  %arrayidx385 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld384, i32 0, i64 0
  %rtx386 = bitcast %union.rtunion_def* %arrayidx385 to %struct.rtx_def**
  %209 = load %struct.rtx_def*, %struct.rtx_def** %rtx386, align 8
  %210 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call387 = call %struct.rtx_def* @gen_binary(i32 84, i32 %207, %struct.rtx_def* %209, %struct.rtx_def* %210)
  %211 = load i32, i32* %mode, align 4
  %212 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld388 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %212, i32 0, i32 1
  %arrayidx389 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld388, i32 0, i64 1
  %rtx390 = bitcast %union.rtunion_def* %arrayidx389 to %struct.rtx_def**
  %213 = load %struct.rtx_def*, %struct.rtx_def** %rtx390, align 8
  %214 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call391 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %214)
  %call392 = call %struct.rtx_def* @gen_binary(i32 84, i32 %211, %struct.rtx_def* %213, %struct.rtx_def* %call391)
  %call393 = call %struct.rtx_def* @gen_binary(i32 83, i32 %206, %struct.rtx_def* %call387, %struct.rtx_def* %call392)
  %call394 = call %struct.rtx_def* @apply_distributive_law(%struct.rtx_def* %call393)
  store %struct.rtx_def* %call394, %struct.rtx_def** %x.addr, align 8
  %215 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %216 = bitcast %struct.rtx_def* %215 to i32*
  %bf.load395 = load i32, i32* %216, align 8
  %bf.clear396 = and i32 %bf.load395, 65535
  %cmp397 = icmp ne i32 %bf.clear396, 84
  br i1 %cmp397, label %if.then.399, label %if.end.400

if.then.399:                                      ; preds = %if.then.383
  %217 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %217, %struct.rtx_def** %retval
  br label %return

if.end.400:                                       ; preds = %if.then.383
  br label %if.end.401

if.end.401:                                       ; preds = %if.end.400, %if.end.378
  %218 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %219 = bitcast %struct.rtx_def* %218 to i32*
  %bf.load402 = load i32, i32* %219, align 8
  %bf.clear403 = and i32 %bf.load402, 65535
  %cmp404 = icmp eq i32 %bf.clear403, 83
  br i1 %cmp404, label %if.then.406, label %if.end.424

if.then.406:                                      ; preds = %if.end.401
  %220 = load i32, i32* %mode, align 4
  %221 = load i32, i32* %mode, align 4
  %222 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld407 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %222, i32 0, i32 1
  %arrayidx408 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld407, i32 0, i64 0
  %rtx409 = bitcast %union.rtunion_def* %arrayidx408 to %struct.rtx_def**
  %223 = load %struct.rtx_def*, %struct.rtx_def** %rtx409, align 8
  %224 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call410 = call %struct.rtx_def* @gen_binary(i32 84, i32 %221, %struct.rtx_def* %223, %struct.rtx_def* %224)
  %225 = load i32, i32* %mode, align 4
  %226 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld411 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %226, i32 0, i32 1
  %arrayidx412 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld411, i32 0, i64 1
  %rtx413 = bitcast %union.rtunion_def* %arrayidx412 to %struct.rtx_def**
  %227 = load %struct.rtx_def*, %struct.rtx_def** %rtx413, align 8
  %228 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call414 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %228)
  %call415 = call %struct.rtx_def* @gen_binary(i32 84, i32 %225, %struct.rtx_def* %227, %struct.rtx_def* %call414)
  %call416 = call %struct.rtx_def* @gen_binary(i32 83, i32 %220, %struct.rtx_def* %call410, %struct.rtx_def* %call415)
  %call417 = call %struct.rtx_def* @apply_distributive_law(%struct.rtx_def* %call416)
  store %struct.rtx_def* %call417, %struct.rtx_def** %x.addr, align 8
  %229 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %230 = bitcast %struct.rtx_def* %229 to i32*
  %bf.load418 = load i32, i32* %230, align 8
  %bf.clear419 = and i32 %bf.load418, 65535
  %cmp420 = icmp ne i32 %bf.clear419, 84
  br i1 %cmp420, label %if.then.422, label %if.end.423

if.then.422:                                      ; preds = %if.then.406
  %231 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %231, %struct.rtx_def** %retval
  br label %return

if.end.423:                                       ; preds = %if.then.406
  br label %if.end.424

if.end.424:                                       ; preds = %if.end.423, %if.end.401
  %232 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %233 = bitcast %struct.rtx_def* %232 to i32*
  %bf.load425 = load i32, i32* %233, align 8
  %bf.clear426 = and i32 %bf.load425, 65535
  %cmp427 = icmp eq i32 %bf.clear426, 87
  br i1 %cmp427, label %land.lhs.true.429, label %lor.lhs.false.434

land.lhs.true.429:                                ; preds = %if.end.424
  %234 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %235 = bitcast %struct.rtx_def* %234 to i32*
  %bf.load430 = load i32, i32* %235, align 8
  %bf.clear431 = and i32 %bf.load430, 65535
  %cmp432 = icmp eq i32 %bf.clear431, 90
  br i1 %cmp432, label %land.lhs.true.444, label %lor.lhs.false.434

lor.lhs.false.434:                                ; preds = %land.lhs.true.429, %if.end.424
  %236 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %237 = bitcast %struct.rtx_def* %236 to i32*
  %bf.load435 = load i32, i32* %237, align 8
  %bf.clear436 = and i32 %bf.load435, 65535
  %cmp437 = icmp eq i32 %bf.clear436, 87
  br i1 %cmp437, label %land.lhs.true.439, label %if.end.502

land.lhs.true.439:                                ; preds = %lor.lhs.false.434
  %238 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %239 = bitcast %struct.rtx_def* %238 to i32*
  %bf.load440 = load i32, i32* %239, align 8
  %bf.clear441 = and i32 %bf.load440, 65535
  %cmp442 = icmp eq i32 %bf.clear441, 90
  br i1 %cmp442, label %land.lhs.true.444, label %if.end.502

land.lhs.true.444:                                ; preds = %land.lhs.true.439, %land.lhs.true.429
  %240 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld445 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %240, i32 0, i32 1
  %arrayidx446 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld445, i32 0, i64 0
  %rtx447 = bitcast %union.rtunion_def* %arrayidx446 to %struct.rtx_def**
  %241 = load %struct.rtx_def*, %struct.rtx_def** %rtx447, align 8
  %242 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld448 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %242, i32 0, i32 1
  %arrayidx449 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld448, i32 0, i64 0
  %rtx450 = bitcast %union.rtunion_def* %arrayidx449 to %struct.rtx_def**
  %243 = load %struct.rtx_def*, %struct.rtx_def** %rtx450, align 8
  %call451 = call i32 @rtx_equal_p(%struct.rtx_def* %241, %struct.rtx_def* %243)
  %tobool452 = icmp ne i32 %call451, 0
  br i1 %tobool452, label %land.lhs.true.453, label %if.end.502

land.lhs.true.453:                                ; preds = %land.lhs.true.444
  %244 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld454 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %244, i32 0, i32 1
  %arrayidx455 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld454, i32 0, i64 1
  %rtx456 = bitcast %union.rtunion_def* %arrayidx455 to %struct.rtx_def**
  %245 = load %struct.rtx_def*, %struct.rtx_def** %rtx456, align 8
  %246 = bitcast %struct.rtx_def* %245 to i32*
  %bf.load457 = load i32, i32* %246, align 8
  %bf.clear458 = and i32 %bf.load457, 65535
  %cmp459 = icmp eq i32 %bf.clear458, 54
  br i1 %cmp459, label %land.lhs.true.461, label %if.end.502

land.lhs.true.461:                                ; preds = %land.lhs.true.453
  %247 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld462 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %247, i32 0, i32 1
  %arrayidx463 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld462, i32 0, i64 1
  %rtx464 = bitcast %union.rtunion_def* %arrayidx463 to %struct.rtx_def**
  %248 = load %struct.rtx_def*, %struct.rtx_def** %rtx464, align 8
  %249 = bitcast %struct.rtx_def* %248 to i32*
  %bf.load465 = load i32, i32* %249, align 8
  %bf.clear466 = and i32 %bf.load465, 65535
  %cmp467 = icmp eq i32 %bf.clear466, 54
  br i1 %cmp467, label %land.lhs.true.469, label %if.end.502

land.lhs.true.469:                                ; preds = %land.lhs.true.461
  %250 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld470 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %250, i32 0, i32 1
  %arrayidx471 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld470, i32 0, i64 1
  %rtx472 = bitcast %union.rtunion_def* %arrayidx471 to %struct.rtx_def**
  %251 = load %struct.rtx_def*, %struct.rtx_def** %rtx472, align 8
  %fld473 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %251, i32 0, i32 1
  %arrayidx474 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld473, i32 0, i64 0
  %rtwint475 = bitcast %union.rtunion_def* %arrayidx474 to i64*
  %252 = load i64, i64* %rtwint475, align 8
  %253 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld476 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %253, i32 0, i32 1
  %arrayidx477 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld476, i32 0, i64 1
  %rtx478 = bitcast %union.rtunion_def* %arrayidx477 to %struct.rtx_def**
  %254 = load %struct.rtx_def*, %struct.rtx_def** %rtx478, align 8
  %fld479 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %254, i32 0, i32 1
  %arrayidx480 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld479, i32 0, i64 0
  %rtwint481 = bitcast %union.rtunion_def* %arrayidx480 to i64*
  %255 = load i64, i64* %rtwint481, align 8
  %add = add nsw i64 %252, %255
  %256 = load i32, i32* %mode, align 4
  %idxprom482 = sext i32 %256 to i64
  %arrayidx483 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom482
  %257 = load i16, i16* %arrayidx483, align 2
  %conv484 = zext i16 %257 to i64
  %cmp485 = icmp eq i64 %add, %conv484
  br i1 %cmp485, label %if.then.487, label %if.end.502

if.then.487:                                      ; preds = %land.lhs.true.469
  %258 = load i32, i32* %mode, align 4
  %259 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld488 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %259, i32 0, i32 1
  %arrayidx489 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld488, i32 0, i64 0
  %rtx490 = bitcast %union.rtunion_def* %arrayidx489 to %struct.rtx_def**
  %260 = load %struct.rtx_def*, %struct.rtx_def** %rtx490, align 8
  %261 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %262 = bitcast %struct.rtx_def* %261 to i32*
  %bf.load491 = load i32, i32* %262, align 8
  %bf.clear492 = and i32 %bf.load491, 65535
  %cmp493 = icmp eq i32 %bf.clear492, 87
  br i1 %cmp493, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.487
  %263 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld495 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %263, i32 0, i32 1
  %arrayidx496 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld495, i32 0, i64 1
  %rtx497 = bitcast %union.rtunion_def* %arrayidx496 to %struct.rtx_def**
  %264 = load %struct.rtx_def*, %struct.rtx_def** %rtx497, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then.487
  %265 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld498 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %265, i32 0, i32 1
  %arrayidx499 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld498, i32 0, i64 1
  %rtx500 = bitcast %union.rtunion_def* %arrayidx499 to %struct.rtx_def**
  %266 = load %struct.rtx_def*, %struct.rtx_def** %rtx500, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %264, %cond.true ], [ %266, %cond.false ]
  %call501 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 88, i32 %258, %struct.rtx_def* %260, %struct.rtx_def* %cond)
  store %struct.rtx_def* %call501, %struct.rtx_def** %retval
  br label %return

if.end.502:                                       ; preds = %land.lhs.true.469, %land.lhs.true.461, %land.lhs.true.453, %land.lhs.true.444, %land.lhs.true.439, %lor.lhs.false.434
  %267 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %268 = bitcast %struct.rtx_def* %267 to i32*
  %bf.load503 = load i32, i32* %268, align 8
  %bf.clear504 = and i32 %bf.load503, 65535
  %cmp505 = icmp eq i32 %bf.clear504, 54
  br i1 %cmp505, label %land.lhs.true.507, label %if.end.591

land.lhs.true.507:                                ; preds = %if.end.502
  %269 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %270 = bitcast %struct.rtx_def* %269 to i32*
  %bf.load508 = load i32, i32* %270, align 8
  %bf.clear509 = and i32 %bf.load508, 65535
  %cmp510 = icmp eq i32 %bf.clear509, 89
  br i1 %cmp510, label %land.lhs.true.512, label %if.end.591

land.lhs.true.512:                                ; preds = %land.lhs.true.507
  %271 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld513 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %271, i32 0, i32 1
  %arrayidx514 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld513, i32 0, i64 0
  %rtx515 = bitcast %union.rtunion_def* %arrayidx514 to %struct.rtx_def**
  %272 = load %struct.rtx_def*, %struct.rtx_def** %rtx515, align 8
  %273 = bitcast %struct.rtx_def* %272 to i32*
  %bf.load516 = load i32, i32* %273, align 8
  %bf.clear517 = and i32 %bf.load516, 65535
  %cmp518 = icmp eq i32 %bf.clear517, 75
  br i1 %cmp518, label %land.lhs.true.520, label %if.end.591

land.lhs.true.520:                                ; preds = %land.lhs.true.512
  %274 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld521 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %274, i32 0, i32 1
  %arrayidx522 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld521, i32 0, i64 0
  %rtx523 = bitcast %union.rtunion_def* %arrayidx522 to %struct.rtx_def**
  %275 = load %struct.rtx_def*, %struct.rtx_def** %rtx523, align 8
  %fld524 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %275, i32 0, i32 1
  %arrayidx525 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld524, i32 0, i64 1
  %rtx526 = bitcast %union.rtunion_def* %arrayidx525 to %struct.rtx_def**
  %276 = load %struct.rtx_def*, %struct.rtx_def** %rtx526, align 8
  %277 = bitcast %struct.rtx_def* %276 to i32*
  %bf.load527 = load i32, i32* %277, align 8
  %bf.clear528 = and i32 %bf.load527, 65535
  %cmp529 = icmp eq i32 %bf.clear528, 54
  br i1 %cmp529, label %land.lhs.true.531, label %if.end.591

land.lhs.true.531:                                ; preds = %land.lhs.true.520
  %278 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld532 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %278, i32 0, i32 1
  %arrayidx533 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld532, i32 0, i64 1
  %rtx534 = bitcast %union.rtunion_def* %arrayidx533 to %struct.rtx_def**
  %279 = load %struct.rtx_def*, %struct.rtx_def** %rtx534, align 8
  %280 = bitcast %struct.rtx_def* %279 to i32*
  %bf.load535 = load i32, i32* %280, align 8
  %bf.clear536 = and i32 %bf.load535, 65535
  %cmp537 = icmp eq i32 %bf.clear536, 54
  br i1 %cmp537, label %land.lhs.true.539, label %if.end.591

land.lhs.true.539:                                ; preds = %land.lhs.true.531
  %281 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld540 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %281, i32 0, i32 1
  %arrayidx541 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld540, i32 0, i64 1
  %rtx542 = bitcast %union.rtunion_def* %arrayidx541 to %struct.rtx_def**
  %282 = load %struct.rtx_def*, %struct.rtx_def** %rtx542, align 8
  %fld543 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %282, i32 0, i32 1
  %arrayidx544 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld543, i32 0, i64 0
  %rtwint545 = bitcast %union.rtunion_def* %arrayidx544 to i64*
  %283 = load i64, i64* %rtwint545, align 8
  %cmp546 = icmp slt i64 %283, 64
  br i1 %cmp546, label %if.then.548, label %if.end.591

if.then.548:                                      ; preds = %land.lhs.true.539
  %284 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld549 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %284, i32 0, i32 1
  %arrayidx550 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld549, i32 0, i64 1
  %rtx551 = bitcast %union.rtunion_def* %arrayidx550 to %struct.rtx_def**
  %285 = load %struct.rtx_def*, %struct.rtx_def** %rtx551, align 8
  %fld552 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %285, i32 0, i32 1
  %arrayidx553 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld552, i32 0, i64 0
  %rtwint554 = bitcast %union.rtunion_def* %arrayidx553 to i64*
  %286 = load i64, i64* %rtwint554, align 8
  %conv555 = trunc i64 %286 to i32
  store i32 %conv555, i32* %count, align 4
  %287 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld556 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %287, i32 0, i32 1
  %arrayidx557 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld556, i32 0, i64 0
  %rtwint558 = bitcast %union.rtunion_def* %arrayidx557 to i64*
  %288 = load i64, i64* %rtwint558, align 8
  %289 = load i32, i32* %count, align 4
  %sh_prom = zext i32 %289 to i64
  %shl = shl i64 %288, %sh_prom
  store i64 %shl, i64* %mask, align 8
  %290 = load i64, i64* %mask, align 8
  %291 = load i32, i32* %count, align 4
  %sh_prom559 = zext i32 %291 to i64
  %shr = ashr i64 %290, %sh_prom559
  %292 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld560 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %292, i32 0, i32 1
  %arrayidx561 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld560, i32 0, i64 0
  %rtwint562 = bitcast %union.rtunion_def* %arrayidx561 to i64*
  %293 = load i64, i64* %rtwint562, align 8
  %cmp563 = icmp eq i64 %shr, %293
  br i1 %cmp563, label %land.lhs.true.565, label %if.end.590

land.lhs.true.565:                                ; preds = %if.then.548
  %294 = load i64, i64* %mask, align 8
  %295 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld566 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %295, i32 0, i32 1
  %arrayidx567 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld566, i32 0, i64 0
  %rtx568 = bitcast %union.rtunion_def* %arrayidx567 to %struct.rtx_def**
  %296 = load %struct.rtx_def*, %struct.rtx_def** %rtx568, align 8
  %297 = load i32, i32* %mode, align 4
  %call569 = call i64 @nonzero_bits(%struct.rtx_def* %296, i32 %297)
  %and570 = and i64 %294, %call569
  %cmp571 = icmp eq i64 %and570, 0
  br i1 %cmp571, label %if.then.573, label %if.end.590

if.then.573:                                      ; preds = %land.lhs.true.565
  %298 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld574 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %298, i32 0, i32 1
  %arrayidx575 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld574, i32 0, i64 0
  %rtx576 = bitcast %union.rtunion_def* %arrayidx575 to %struct.rtx_def**
  %299 = load %struct.rtx_def*, %struct.rtx_def** %rtx576, align 8
  %fld577 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %299, i32 0, i32 1
  %arrayidx578 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld577, i32 0, i64 1
  %rtx579 = bitcast %union.rtunion_def* %arrayidx578 to %struct.rtx_def**
  %300 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld580 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %300, i32 0, i32 1
  %arrayidx581 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld580, i32 0, i64 0
  %rtx582 = bitcast %union.rtunion_def* %arrayidx581 to %struct.rtx_def**
  %301 = load %struct.rtx_def*, %struct.rtx_def** %rtx582, align 8
  %fld583 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %301, i32 0, i32 1
  %arrayidx584 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld583, i32 0, i64 1
  %rtx585 = bitcast %union.rtunion_def* %arrayidx584 to %struct.rtx_def**
  %302 = load %struct.rtx_def*, %struct.rtx_def** %rtx585, align 8
  %fld586 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %302, i32 0, i32 1
  %arrayidx587 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld586, i32 0, i64 0
  %rtwint588 = bitcast %union.rtunion_def* %arrayidx587 to i64*
  %303 = load i64, i64* %rtwint588, align 8
  %304 = load i64, i64* %mask, align 8
  %or = or i64 %303, %304
  %call589 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %or)
  call void @do_SUBST(%struct.rtx_def** %rtx579, %struct.rtx_def* %call589)
  %305 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  store %struct.rtx_def* %305, %struct.rtx_def** %retval
  br label %return

if.end.590:                                       ; preds = %land.lhs.true.565, %if.then.548
  br label %if.end.591

if.end.591:                                       ; preds = %if.end.590, %land.lhs.true.539, %land.lhs.true.531, %land.lhs.true.520, %land.lhs.true.512, %land.lhs.true.507, %if.end.502
  br label %sw.epilog

sw.bb.592:                                        ; preds = %entry
  %306 = load i32, i32* %mode, align 4
  %idxprom593 = sext i32 %306 to i64
  %arrayidx594 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom593
  %307 = load i16, i16* %arrayidx594, align 2
  %conv595 = zext i16 %307 to i32
  %cmp596 = icmp sle i32 %conv595, 64
  br i1 %cmp596, label %land.lhs.true.598, label %if.end.606

land.lhs.true.598:                                ; preds = %sw.bb.592
  %308 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %309 = load i32, i32* %mode, align 4
  %call599 = call i64 @nonzero_bits(%struct.rtx_def* %308, i32 %309)
  %310 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %311 = load i32, i32* %mode, align 4
  %call600 = call i64 @nonzero_bits(%struct.rtx_def* %310, i32 %311)
  %and601 = and i64 %call599, %call600
  %cmp602 = icmp eq i64 %and601, 0
  br i1 %cmp602, label %if.then.604, label %if.end.606

if.then.604:                                      ; preds = %land.lhs.true.598
  %312 = load i32, i32* %mode, align 4
  %313 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %314 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call605 = call %struct.rtx_def* @gen_binary(i32 84, i32 %312, %struct.rtx_def* %313, %struct.rtx_def* %314)
  store %struct.rtx_def* %call605, %struct.rtx_def** %retval
  br label %return

if.end.606:                                       ; preds = %land.lhs.true.598, %sw.bb.592
  store i32 0, i32* %num_negated, align 4
  %315 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %316 = bitcast %struct.rtx_def* %315 to i32*
  %bf.load607 = load i32, i32* %316, align 8
  %bf.clear608 = and i32 %bf.load607, 65535
  %cmp609 = icmp eq i32 %bf.clear608, 86
  br i1 %cmp609, label %if.then.611, label %if.end.615

if.then.611:                                      ; preds = %if.end.606
  %317 = load i32, i32* %num_negated, align 4
  %inc = add nsw i32 %317, 1
  store i32 %inc, i32* %num_negated, align 4
  %318 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld612 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %318, i32 0, i32 1
  %arrayidx613 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld612, i32 0, i64 0
  %rtx614 = bitcast %union.rtunion_def* %arrayidx613 to %struct.rtx_def**
  %319 = load %struct.rtx_def*, %struct.rtx_def** %rtx614, align 8
  store %struct.rtx_def* %319, %struct.rtx_def** %op0, align 8
  br label %if.end.615

if.end.615:                                       ; preds = %if.then.611, %if.end.606
  %320 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %321 = bitcast %struct.rtx_def* %320 to i32*
  %bf.load616 = load i32, i32* %321, align 8
  %bf.clear617 = and i32 %bf.load616, 65535
  %cmp618 = icmp eq i32 %bf.clear617, 86
  br i1 %cmp618, label %if.then.620, label %if.end.625

if.then.620:                                      ; preds = %if.end.615
  %322 = load i32, i32* %num_negated, align 4
  %inc621 = add nsw i32 %322, 1
  store i32 %inc621, i32* %num_negated, align 4
  %323 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld622 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %323, i32 0, i32 1
  %arrayidx623 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld622, i32 0, i64 0
  %rtx624 = bitcast %union.rtunion_def* %arrayidx623 to %struct.rtx_def**
  %324 = load %struct.rtx_def*, %struct.rtx_def** %rtx624, align 8
  store %struct.rtx_def* %324, %struct.rtx_def** %op1, align 8
  br label %if.end.625

if.end.625:                                       ; preds = %if.then.620, %if.end.615
  %325 = load i32, i32* %num_negated, align 4
  %cmp626 = icmp eq i32 %325, 2
  br i1 %cmp626, label %if.then.628, label %if.else.635

if.then.628:                                      ; preds = %if.end.625
  %326 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld629 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %326, i32 0, i32 1
  %arrayidx630 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld629, i32 0, i64 0
  %rtx631 = bitcast %union.rtunion_def* %arrayidx630 to %struct.rtx_def**
  %327 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx631, %struct.rtx_def* %327)
  %328 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld632 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %328, i32 0, i32 1
  %arrayidx633 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld632, i32 0, i64 1
  %rtx634 = bitcast %union.rtunion_def* %arrayidx633 to %struct.rtx_def**
  %329 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx634, %struct.rtx_def* %329)
  br label %if.end.642

if.else.635:                                      ; preds = %if.end.625
  %330 = load i32, i32* %num_negated, align 4
  %cmp636 = icmp eq i32 %330, 1
  br i1 %cmp636, label %if.then.638, label %if.end.641

if.then.638:                                      ; preds = %if.else.635
  %331 = load i32, i32* %mode, align 4
  %332 = load i32, i32* %mode, align 4
  %333 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %334 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call639 = call %struct.rtx_def* @gen_binary(i32 85, i32 %332, %struct.rtx_def* %333, %struct.rtx_def* %334)
  %335 = load i32, i32* %mode, align 4
  %call640 = call %struct.rtx_def* @simplify_gen_unary(i32 86, i32 %331, %struct.rtx_def* %call639, i32 %335)
  store %struct.rtx_def* %call640, %struct.rtx_def** %retval
  br label %return

if.end.641:                                       ; preds = %if.else.635
  br label %if.end.642

if.end.642:                                       ; preds = %if.end.641, %if.then.628
  %336 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %337 = bitcast %struct.rtx_def* %336 to i32*
  %bf.load643 = load i32, i32* %337, align 8
  %bf.clear644 = and i32 %bf.load643, 65535
  %cmp645 = icmp eq i32 %bf.clear644, 83
  br i1 %cmp645, label %land.lhs.true.647, label %if.else.662

land.lhs.true.647:                                ; preds = %if.end.642
  %338 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld648 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %338, i32 0, i32 1
  %arrayidx649 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld648, i32 0, i64 1
  %rtx650 = bitcast %union.rtunion_def* %arrayidx649 to %struct.rtx_def**
  %339 = load %struct.rtx_def*, %struct.rtx_def** %rtx650, align 8
  %340 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call651 = call i32 @rtx_equal_p(%struct.rtx_def* %339, %struct.rtx_def* %340)
  %tobool652 = icmp ne i32 %call651, 0
  br i1 %tobool652, label %land.lhs.true.653, label %if.else.662

land.lhs.true.653:                                ; preds = %land.lhs.true.647
  %341 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call654 = call i32 @side_effects_p(%struct.rtx_def* %341)
  %tobool655 = icmp ne i32 %call654, 0
  br i1 %tobool655, label %if.else.662, label %if.then.656

if.then.656:                                      ; preds = %land.lhs.true.653
  %342 = load i32, i32* %mode, align 4
  %343 = load i32, i32* %mode, align 4
  %344 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld657 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %344, i32 0, i32 1
  %arrayidx658 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld657, i32 0, i64 0
  %rtx659 = bitcast %union.rtunion_def* %arrayidx658 to %struct.rtx_def**
  %345 = load %struct.rtx_def*, %struct.rtx_def** %rtx659, align 8
  %346 = load i32, i32* %mode, align 4
  %call660 = call %struct.rtx_def* @simplify_gen_unary(i32 86, i32 %343, %struct.rtx_def* %345, i32 %346)
  %347 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call661 = call %struct.rtx_def* @gen_binary(i32 83, i32 %342, %struct.rtx_def* %call660, %struct.rtx_def* %347)
  store %struct.rtx_def* %call661, %struct.rtx_def** %retval
  br label %return

if.else.662:                                      ; preds = %land.lhs.true.653, %land.lhs.true.647, %if.end.642
  %348 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %349 = bitcast %struct.rtx_def* %348 to i32*
  %bf.load663 = load i32, i32* %349, align 8
  %bf.clear664 = and i32 %bf.load663, 65535
  %cmp665 = icmp eq i32 %bf.clear664, 83
  br i1 %cmp665, label %land.lhs.true.667, label %if.end.682

land.lhs.true.667:                                ; preds = %if.else.662
  %350 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld668 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %350, i32 0, i32 1
  %arrayidx669 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld668, i32 0, i64 0
  %rtx670 = bitcast %union.rtunion_def* %arrayidx669 to %struct.rtx_def**
  %351 = load %struct.rtx_def*, %struct.rtx_def** %rtx670, align 8
  %352 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call671 = call i32 @rtx_equal_p(%struct.rtx_def* %351, %struct.rtx_def* %352)
  %tobool672 = icmp ne i32 %call671, 0
  br i1 %tobool672, label %land.lhs.true.673, label %if.end.682

land.lhs.true.673:                                ; preds = %land.lhs.true.667
  %353 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call674 = call i32 @side_effects_p(%struct.rtx_def* %353)
  %tobool675 = icmp ne i32 %call674, 0
  br i1 %tobool675, label %if.end.682, label %if.then.676

if.then.676:                                      ; preds = %land.lhs.true.673
  %354 = load i32, i32* %mode, align 4
  %355 = load i32, i32* %mode, align 4
  %356 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld677 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %356, i32 0, i32 1
  %arrayidx678 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld677, i32 0, i64 1
  %rtx679 = bitcast %union.rtunion_def* %arrayidx678 to %struct.rtx_def**
  %357 = load %struct.rtx_def*, %struct.rtx_def** %rtx679, align 8
  %358 = load i32, i32* %mode, align 4
  %call680 = call %struct.rtx_def* @simplify_gen_unary(i32 86, i32 %355, %struct.rtx_def* %357, i32 %358)
  %359 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call681 = call %struct.rtx_def* @gen_binary(i32 83, i32 %354, %struct.rtx_def* %call680, %struct.rtx_def* %359)
  store %struct.rtx_def* %call681, %struct.rtx_def** %retval
  br label %return

if.end.682:                                       ; preds = %land.lhs.true.673, %land.lhs.true.667, %if.else.662
  br label %if.end.683

if.end.683:                                       ; preds = %if.end.682
  %360 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %361 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 65), align 8
  %cmp684 = icmp eq %struct.rtx_def* %360, %361
  br i1 %cmp684, label %land.lhs.true.686, label %if.end.704

land.lhs.true.686:                                ; preds = %if.end.683
  %362 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %363 = bitcast %struct.rtx_def* %362 to i32*
  %bf.load687 = load i32, i32* %363, align 8
  %bf.clear688 = and i32 %bf.load687, 65535
  %idxprom689 = sext i32 %bf.clear688 to i64
  %arrayidx690 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom689
  %364 = load i8, i8* %arrayidx690, align 1
  %conv691 = sext i8 %364 to i32
  %cmp692 = icmp eq i32 %conv691, 60
  br i1 %cmp692, label %land.lhs.true.694, label %if.end.704

land.lhs.true.694:                                ; preds = %land.lhs.true.686
  %365 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %366 = load i32, i32* %mode, align 4
  %367 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld695 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %367, i32 0, i32 1
  %arrayidx696 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld695, i32 0, i64 0
  %rtx697 = bitcast %union.rtunion_def* %arrayidx696 to %struct.rtx_def**
  %368 = load %struct.rtx_def*, %struct.rtx_def** %rtx697, align 8
  %369 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld698 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %369, i32 0, i32 1
  %arrayidx699 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld698, i32 0, i64 1
  %rtx700 = bitcast %union.rtunion_def* %arrayidx699 to %struct.rtx_def**
  %370 = load %struct.rtx_def*, %struct.rtx_def** %rtx700, align 8
  %call701 = call %struct.rtx_def* @reversed_comparison(%struct.rtx_def* %365, i32 %366, %struct.rtx_def* %368, %struct.rtx_def* %370)
  store %struct.rtx_def* %call701, %struct.rtx_def** %reversed, align 8
  %tobool702 = icmp ne %struct.rtx_def* %call701, null
  br i1 %tobool702, label %if.then.703, label %if.end.704

if.then.703:                                      ; preds = %land.lhs.true.694
  %371 = load %struct.rtx_def*, %struct.rtx_def** %reversed, align 8
  store %struct.rtx_def* %371, %struct.rtx_def** %retval
  br label %return

if.end.704:                                       ; preds = %land.lhs.true.694, %land.lhs.true.686, %if.end.683
  %372 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %373 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 65), align 8
  %cmp705 = icmp eq %struct.rtx_def* %372, %373
  br i1 %cmp705, label %land.lhs.true.707, label %if.end.738

land.lhs.true.707:                                ; preds = %if.end.704
  %374 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %375 = bitcast %struct.rtx_def* %374 to i32*
  %bf.load708 = load i32, i32* %375, align 8
  %bf.clear709 = and i32 %bf.load708, 65535
  %cmp710 = icmp eq i32 %bf.clear709, 90
  br i1 %cmp710, label %land.lhs.true.712, label %if.end.738

land.lhs.true.712:                                ; preds = %land.lhs.true.707
  %376 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld713 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %376, i32 0, i32 1
  %arrayidx714 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld713, i32 0, i64 1
  %rtx715 = bitcast %union.rtunion_def* %arrayidx714 to %struct.rtx_def**
  %377 = load %struct.rtx_def*, %struct.rtx_def** %rtx715, align 8
  %378 = bitcast %struct.rtx_def* %377 to i32*
  %bf.load716 = load i32, i32* %378, align 8
  %bf.clear717 = and i32 %bf.load716, 65535
  %cmp718 = icmp eq i32 %bf.clear717, 54
  br i1 %cmp718, label %land.lhs.true.720, label %if.end.738

land.lhs.true.720:                                ; preds = %land.lhs.true.712
  %379 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld721 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %379, i32 0, i32 1
  %arrayidx722 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld721, i32 0, i64 1
  %rtx723 = bitcast %union.rtunion_def* %arrayidx722 to %struct.rtx_def**
  %380 = load %struct.rtx_def*, %struct.rtx_def** %rtx723, align 8
  %fld724 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %380, i32 0, i32 1
  %arrayidx725 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld724, i32 0, i64 0
  %rtwint726 = bitcast %union.rtunion_def* %arrayidx725 to i64*
  %381 = load i64, i64* %rtwint726, align 8
  %382 = load i32, i32* %mode, align 4
  %idxprom727 = sext i32 %382 to i64
  %arrayidx728 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom727
  %383 = load i16, i16* %arrayidx728, align 2
  %conv729 = zext i16 %383 to i32
  %sub = sub nsw i32 %conv729, 1
  %conv730 = sext i32 %sub to i64
  %cmp731 = icmp eq i64 %381, %conv730
  br i1 %cmp731, label %if.then.733, label %if.end.738

if.then.733:                                      ; preds = %land.lhs.true.720
  %384 = load i32, i32* %mode, align 4
  %385 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld734 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %385, i32 0, i32 1
  %arrayidx735 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld734, i32 0, i64 0
  %rtx736 = bitcast %union.rtunion_def* %arrayidx735 to %struct.rtx_def**
  %386 = load %struct.rtx_def*, %struct.rtx_def** %rtx736, align 8
  %387 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %call737 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 104, i32 %384, %struct.rtx_def* %386, %struct.rtx_def* %387)
  store %struct.rtx_def* %call737, %struct.rtx_def** %retval
  br label %return

if.end.738:                                       ; preds = %land.lhs.true.720, %land.lhs.true.712, %land.lhs.true.707, %if.end.704
  %388 = load i32, i32* %mode, align 4
  %idxprom739 = sext i32 %388 to i64
  %arrayidx740 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom739
  %389 = load i16, i16* %arrayidx740, align 2
  %conv741 = zext i16 %389 to i32
  %cmp742 = icmp sle i32 %conv741, 64
  br i1 %cmp742, label %land.lhs.true.744, label %if.end.777

land.lhs.true.744:                                ; preds = %if.end.738
  %390 = load i32, i32* %mode, align 4
  %idxprom745 = sext i32 %390 to i64
  %arrayidx746 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom745
  %391 = load i64, i64* %arrayidx746, align 8
  %and747 = and i64 1, %391
  %392 = load i32, i32* %mode, align 4
  %idxprom748 = sext i32 %392 to i64
  %arrayidx749 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom748
  %393 = load i16, i16* %arrayidx749, align 2
  %conv750 = zext i16 %393 to i32
  %sub751 = sub nsw i32 %conv750, 1
  %sh_prom752 = zext i32 %sub751 to i64
  %shl753 = shl i64 1, %sh_prom752
  %cmp754 = icmp eq i64 %and747, %shl753
  br i1 %cmp754, label %land.lhs.true.756, label %if.end.777

land.lhs.true.756:                                ; preds = %land.lhs.true.744
  %394 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %395 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8
  %cmp757 = icmp eq %struct.rtx_def* %394, %395
  br i1 %cmp757, label %land.lhs.true.759, label %if.end.777

land.lhs.true.759:                                ; preds = %land.lhs.true.756
  %396 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %397 = bitcast %struct.rtx_def* %396 to i32*
  %bf.load760 = load i32, i32* %397, align 8
  %bf.clear761 = and i32 %bf.load760, 65535
  %idxprom762 = sext i32 %bf.clear761 to i64
  %arrayidx763 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom762
  %398 = load i8, i8* %arrayidx763, align 1
  %conv764 = sext i8 %398 to i32
  %cmp765 = icmp eq i32 %conv764, 60
  br i1 %cmp765, label %land.lhs.true.767, label %if.end.777

land.lhs.true.767:                                ; preds = %land.lhs.true.759
  %399 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %400 = load i32, i32* %mode, align 4
  %401 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld768 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %401, i32 0, i32 1
  %arrayidx769 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld768, i32 0, i64 0
  %rtx770 = bitcast %union.rtunion_def* %arrayidx769 to %struct.rtx_def**
  %402 = load %struct.rtx_def*, %struct.rtx_def** %rtx770, align 8
  %403 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld771 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %403, i32 0, i32 1
  %arrayidx772 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld771, i32 0, i64 1
  %rtx773 = bitcast %union.rtunion_def* %arrayidx772 to %struct.rtx_def**
  %404 = load %struct.rtx_def*, %struct.rtx_def** %rtx773, align 8
  %call774 = call %struct.rtx_def* @reversed_comparison(%struct.rtx_def* %399, i32 %400, %struct.rtx_def* %402, %struct.rtx_def* %404)
  store %struct.rtx_def* %call774, %struct.rtx_def** %reversed, align 8
  %tobool775 = icmp ne %struct.rtx_def* %call774, null
  br i1 %tobool775, label %if.then.776, label %if.end.777

if.then.776:                                      ; preds = %land.lhs.true.767
  %405 = load %struct.rtx_def*, %struct.rtx_def** %reversed, align 8
  store %struct.rtx_def* %405, %struct.rtx_def** %retval
  br label %return

if.end.777:                                       ; preds = %land.lhs.true.767, %land.lhs.true.759, %land.lhs.true.756, %land.lhs.true.744, %if.end.738
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5542, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__FUNCTION__.simplify_logical, i32 0, i32 0)) #5
  unreachable

sw.epilog:                                        ; preds = %if.end.777, %if.end.591, %if.end.326
  %406 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %406, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %sw.epilog, %if.then.776, %if.then.733, %if.then.703, %if.then.676, %if.then.656, %if.then.638, %if.then.604, %if.then.573, %cond.end, %if.then.422, %if.then.399, %if.then.377, %if.then.347, %if.then.307, %if.then.280, %if.then.256, %if.then.244, %if.then.215, %if.then.161, %if.then.140
  %407 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %407
}

; Function Attrs: nounwind uwtable
define internal i32 @merge_outer_ops(i32* %pop0, i64* %pconst0, i32 %op1, i64 %const1, i32 %mode, i32* %pcomp_p) #0 {
entry:
  %retval = alloca i32, align 4
  %pop0.addr = alloca i32*, align 8
  %pconst0.addr = alloca i64*, align 8
  %op1.addr = alloca i32, align 4
  %const1.addr = alloca i64, align 8
  %mode.addr = alloca i32, align 4
  %pcomp_p.addr = alloca i32*, align 8
  %op0 = alloca i32, align 4
  %const0 = alloca i64, align 8
  store i32* %pop0, i32** %pop0.addr, align 8
  store i64* %pconst0, i64** %pconst0.addr, align 8
  store i32 %op1, i32* %op1.addr, align 4
  store i64 %const1, i64* %const1.addr, align 8
  store i32 %mode, i32* %mode.addr, align 4
  store i32* %pcomp_p, i32** %pcomp_p.addr, align 8
  %0 = load i32*, i32** %pop0.addr, align 8
  %1 = load i32, i32* %0, align 4
  store i32 %1, i32* %op0, align 4
  %2 = load i64*, i64** %pconst0.addr, align 8
  %3 = load i64, i64* %2, align 8
  store i64 %3, i64* %const0, align 8
  %4 = load i32, i32* %mode.addr, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom
  %5 = load i64, i64* %arrayidx, align 8
  %6 = load i64, i64* %const0, align 8
  %and = and i64 %6, %5
  store i64 %and, i64* %const0, align 8
  %7 = load i32, i32* %mode.addr, align 4
  %idxprom1 = sext i32 %7 to i64
  %arrayidx2 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom1
  %8 = load i64, i64* %arrayidx2, align 8
  %9 = load i64, i64* %const1.addr, align 8
  %and3 = and i64 %9, %8
  store i64 %and3, i64* %const1.addr, align 8
  %10 = load i32, i32* %op0, align 4
  %cmp = icmp eq i32 %10, 83
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %11 = load i64, i64* %const0, align 8
  %12 = load i64, i64* %const1.addr, align 8
  %and4 = and i64 %12, %11
  store i64 %and4, i64* %const1.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %13 = load i32, i32* %op1.addr, align 4
  %cmp5 = icmp eq i32 %13, 1
  br i1 %cmp5, label %if.then.7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %14 = load i32, i32* %op0, align 4
  %cmp6 = icmp eq i32 %14, 47
  br i1 %cmp6, label %if.then.7, label %if.else

if.then.7:                                        ; preds = %lor.lhs.false, %if.end
  store i32 1, i32* %retval
  br label %return

if.else:                                          ; preds = %lor.lhs.false
  %15 = load i32, i32* %op0, align 4
  %cmp8 = icmp eq i32 %15, 1
  br i1 %cmp8, label %if.then.9, label %if.else.10

if.then.9:                                        ; preds = %if.else
  %16 = load i32, i32* %op1.addr, align 4
  store i32 %16, i32* %op0, align 4
  %17 = load i64, i64* %const1.addr, align 8
  store i64 %17, i64* %const0, align 8
  br label %if.end.51

if.else.10:                                       ; preds = %if.else
  %18 = load i32, i32* %op0, align 4
  %19 = load i32, i32* %op1.addr, align 4
  %cmp11 = icmp eq i32 %18, %19
  br i1 %cmp11, label %if.then.12, label %if.else.18

if.then.12:                                       ; preds = %if.else.10
  %20 = load i32, i32* %op0, align 4
  switch i32 %20, label %sw.default [
    i32 83, label %sw.bb
    i32 84, label %sw.bb.14
    i32 85, label %sw.bb.15
    i32 75, label %sw.bb.16
    i32 77, label %sw.bb.17
  ]

sw.bb:                                            ; preds = %if.then.12
  %21 = load i64, i64* %const1.addr, align 8
  %22 = load i64, i64* %const0, align 8
  %and13 = and i64 %22, %21
  store i64 %and13, i64* %const0, align 8
  br label %sw.epilog

sw.bb.14:                                         ; preds = %if.then.12
  %23 = load i64, i64* %const1.addr, align 8
  %24 = load i64, i64* %const0, align 8
  %or = or i64 %24, %23
  store i64 %or, i64* %const0, align 8
  br label %sw.epilog

sw.bb.15:                                         ; preds = %if.then.12
  %25 = load i64, i64* %const1.addr, align 8
  %26 = load i64, i64* %const0, align 8
  %xor = xor i64 %26, %25
  store i64 %xor, i64* %const0, align 8
  br label %sw.epilog

sw.bb.16:                                         ; preds = %if.then.12
  %27 = load i64, i64* %const1.addr, align 8
  %28 = load i64, i64* %const0, align 8
  %add = add nsw i64 %28, %27
  store i64 %add, i64* %const0, align 8
  br label %sw.epilog

sw.bb.17:                                         ; preds = %if.then.12
  store i32 1, i32* %op0, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %if.then.12
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.17, %sw.bb.16, %sw.bb.15, %sw.bb.14, %sw.bb
  br label %if.end.50

if.else.18:                                       ; preds = %if.else.10
  %29 = load i32, i32* %op0, align 4
  %cmp19 = icmp eq i32 %29, 75
  br i1 %cmp19, label %if.then.26, label %lor.lhs.false.20

lor.lhs.false.20:                                 ; preds = %if.else.18
  %30 = load i32, i32* %op1.addr, align 4
  %cmp21 = icmp eq i32 %30, 75
  br i1 %cmp21, label %if.then.26, label %lor.lhs.false.22

lor.lhs.false.22:                                 ; preds = %lor.lhs.false.20
  %31 = load i32, i32* %op0, align 4
  %cmp23 = icmp eq i32 %31, 77
  br i1 %cmp23, label %if.then.26, label %lor.lhs.false.24

lor.lhs.false.24:                                 ; preds = %lor.lhs.false.22
  %32 = load i32, i32* %op1.addr, align 4
  %cmp25 = icmp eq i32 %32, 77
  br i1 %cmp25, label %if.then.26, label %if.else.27

if.then.26:                                       ; preds = %lor.lhs.false.24, %lor.lhs.false.22, %lor.lhs.false.20, %if.else.18
  store i32 0, i32* %retval
  br label %return

if.else.27:                                       ; preds = %lor.lhs.false.24
  %33 = load i64, i64* %const0, align 8
  %34 = load i64, i64* %const1.addr, align 8
  %cmp28 = icmp ne i64 %33, %34
  br i1 %cmp28, label %if.then.29, label %if.else.30

if.then.29:                                       ; preds = %if.else.27
  store i32 0, i32* %retval
  br label %return

if.else.30:                                       ; preds = %if.else.27
  %35 = load i32, i32* %op0, align 4
  switch i32 %35, label %sw.default.46 [
    i32 84, label %sw.bb.31
    i32 85, label %sw.bb.36
    i32 83, label %sw.bb.41
  ]

sw.bb.31:                                         ; preds = %if.else.30
  %36 = load i32, i32* %op1.addr, align 4
  %cmp32 = icmp eq i32 %36, 83
  br i1 %cmp32, label %if.then.33, label %if.else.34

if.then.33:                                       ; preds = %sw.bb.31
  store i32 47, i32* %op0, align 4
  br label %if.end.35

if.else.34:                                       ; preds = %sw.bb.31
  br label %if.end.35

if.end.35:                                        ; preds = %if.else.34, %if.then.33
  br label %sw.epilog.47

sw.bb.36:                                         ; preds = %if.else.30
  %37 = load i32, i32* %op1.addr, align 4
  %cmp37 = icmp eq i32 %37, 83
  br i1 %cmp37, label %if.then.38, label %if.else.39

if.then.38:                                       ; preds = %sw.bb.36
  store i32 83, i32* %op0, align 4
  %38 = load i32*, i32** %pcomp_p.addr, align 8
  store i32 1, i32* %38, align 4
  br label %if.end.40

if.else.39:                                       ; preds = %sw.bb.36
  store i32 83, i32* %op0, align 4
  %39 = load i64, i64* %const0, align 8
  %neg = xor i64 %39, -1
  %40 = load i64*, i64** %pconst0.addr, align 8
  store i64 %neg, i64* %40, align 8
  br label %if.end.40

if.end.40:                                        ; preds = %if.else.39, %if.then.38
  br label %sw.epilog.47

sw.bb.41:                                         ; preds = %if.else.30
  %41 = load i32, i32* %op1.addr, align 4
  %cmp42 = icmp eq i32 %41, 84
  br i1 %cmp42, label %if.then.43, label %if.else.44

if.then.43:                                       ; preds = %sw.bb.41
  store i32 47, i32* %op0, align 4
  br label %if.end.45

if.else.44:                                       ; preds = %sw.bb.41
  %42 = load i32*, i32** %pcomp_p.addr, align 8
  store i32 1, i32* %42, align 4
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.44, %if.then.43
  br label %sw.epilog.47

sw.default.46:                                    ; preds = %if.else.30
  br label %sw.epilog.47

sw.epilog.47:                                     ; preds = %sw.default.46, %if.end.45, %if.end.40, %if.end.35
  br label %if.end.48

if.end.48:                                        ; preds = %sw.epilog.47
  br label %if.end.49

if.end.49:                                        ; preds = %if.end.48
  br label %if.end.50

if.end.50:                                        ; preds = %if.end.49, %sw.epilog
  br label %if.end.51

if.end.51:                                        ; preds = %if.end.50, %if.then.9
  br label %if.end.52

if.end.52:                                        ; preds = %if.end.51
  %43 = load i32, i32* %mode.addr, align 4
  %idxprom53 = sext i32 %43 to i64
  %arrayidx54 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom53
  %44 = load i64, i64* %arrayidx54, align 8
  %45 = load i64, i64* %const0, align 8
  %and55 = and i64 %45, %44
  store i64 %and55, i64* %const0, align 8
  %46 = load i64, i64* %const0, align 8
  %cmp56 = icmp eq i64 %46, 0
  br i1 %cmp56, label %land.lhs.true, label %if.else.63

land.lhs.true:                                    ; preds = %if.end.52
  %47 = load i32, i32* %op0, align 4
  %cmp57 = icmp eq i32 %47, 84
  br i1 %cmp57, label %if.then.62, label %lor.lhs.false.58

lor.lhs.false.58:                                 ; preds = %land.lhs.true
  %48 = load i32, i32* %op0, align 4
  %cmp59 = icmp eq i32 %48, 85
  br i1 %cmp59, label %if.then.62, label %lor.lhs.false.60

lor.lhs.false.60:                                 ; preds = %lor.lhs.false.58
  %49 = load i32, i32* %op0, align 4
  %cmp61 = icmp eq i32 %49, 75
  br i1 %cmp61, label %if.then.62, label %if.else.63

if.then.62:                                       ; preds = %lor.lhs.false.60, %lor.lhs.false.58, %land.lhs.true
  store i32 1, i32* %op0, align 4
  br label %if.end.77

if.else.63:                                       ; preds = %lor.lhs.false.60, %if.end.52
  %50 = load i64, i64* %const0, align 8
  %cmp64 = icmp eq i64 %50, 0
  br i1 %cmp64, label %land.lhs.true.65, label %if.else.68

land.lhs.true.65:                                 ; preds = %if.else.63
  %51 = load i32, i32* %op0, align 4
  %cmp66 = icmp eq i32 %51, 83
  br i1 %cmp66, label %if.then.67, label %if.else.68

if.then.67:                                       ; preds = %land.lhs.true.65
  store i32 47, i32* %op0, align 4
  br label %if.end.76

if.else.68:                                       ; preds = %land.lhs.true.65, %if.else.63
  %52 = load i64, i64* %const0, align 8
  %53 = load i32, i32* %mode.addr, align 4
  %idxprom69 = sext i32 %53 to i64
  %arrayidx70 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom69
  %54 = load i64, i64* %arrayidx70, align 8
  %cmp71 = icmp eq i64 %52, %54
  br i1 %cmp71, label %land.lhs.true.72, label %if.end.75

land.lhs.true.72:                                 ; preds = %if.else.68
  %55 = load i32, i32* %op0, align 4
  %cmp73 = icmp eq i32 %55, 83
  br i1 %cmp73, label %if.then.74, label %if.end.75

if.then.74:                                       ; preds = %land.lhs.true.72
  store i32 1, i32* %op0, align 4
  br label %if.end.75

if.end.75:                                        ; preds = %if.then.74, %land.lhs.true.72, %if.else.68
  br label %if.end.76

if.end.76:                                        ; preds = %if.end.75, %if.then.67
  br label %if.end.77

if.end.77:                                        ; preds = %if.end.76, %if.then.62
  %56 = load i64, i64* %const0, align 8
  %57 = load i32, i32* %mode.addr, align 4
  %call = call i64 @trunc_int_for_mode(i64 %56, i32 %57)
  store i64 %call, i64* %const0, align 8
  %58 = load i32, i32* %op0, align 4
  %59 = load i32*, i32** %pop0.addr, align 8
  store i32 %58, i32* %59, align 4
  %60 = load i64, i64* %const0, align 8
  %61 = load i64*, i64** %pconst0.addr, align 8
  store i64 %60, i64* %61, align 8
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.77, %if.then.29, %if.then.26, %if.then.7
  %62 = load i32, i32* %retval
  ret i32 %62
}

; Function Attrs: nounwind uwtable
define internal i32 @combine_reversed_comparison_code(%struct.rtx_def* %exp) #0 {
entry:
  %retval = alloca i32, align 4
  %exp.addr = alloca %struct.rtx_def*, align 8
  %code1 = alloca i32, align 4
  %x = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %exp, %struct.rtx_def** %exp.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %exp.addr, align 8
  %call = call i32 @reversed_comparison_code(%struct.rtx_def* %0, %struct.rtx_def* null)
  store i32 %call, i32* %code1, align 4
  %1 = load i32, i32* %code1, align 4
  %cmp = icmp ne i32 %1, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %exp.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load = load i32, i32* %4, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear to i64
  %arrayidx1 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %5 = load i32, i32* %arrayidx1, align 4
  %cmp2 = icmp ne i32 %5, 4
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load i32, i32* %code1, align 4
  store i32 %6, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.rtx_def*, %struct.rtx_def** %exp.addr, align 8
  %fld3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i32 0, i64 0
  %rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rtx5, align 8
  %call6 = call %struct.rtx_def* @get_last_value(%struct.rtx_def* %8)
  store %struct.rtx_def* %call6, %struct.rtx_def** %x, align 8
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %tobool = icmp ne %struct.rtx_def* %9, null
  br i1 %tobool, label %lor.lhs.false.7, label %if.then.11

lor.lhs.false.7:                                  ; preds = %if.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load8 = load i32, i32* %11, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  %cmp10 = icmp ne i32 %bf.clear9, 74
  br i1 %cmp10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %lor.lhs.false.7, %if.end
  store i32 0, i32* %retval
  br label %return

if.end.12:                                        ; preds = %lor.lhs.false.7
  %12 = load %struct.rtx_def*, %struct.rtx_def** %exp.addr, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load13 = load i32, i32* %13, align 8
  %bf.clear14 = and i32 %bf.load13, 65535
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i32 0, i64 0
  %rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rtx17, align 8
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i32 0, i64 1
  %rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rtx20, align 8
  %call21 = call i32 @reversed_comparison_code_parts(i32 %bf.clear14, %struct.rtx_def* %15, %struct.rtx_def* %17, %struct.rtx_def* null)
  store i32 %call21, i32* %retval
  br label %return

return:                                           ; preds = %if.end.12, %if.then.11, %if.then
  %18 = load i32, i32* %retval
  ret i32 %18
}

declare i32 @swap_condition(i32) #1

declare i32 @reversed_comparison_code(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @reversed_comparison_code_parts(i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @unsigned_condition(i32) #1

declare i32 @have_insn_for(i32, i32) #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @make_extraction(i32 %mode, %struct.rtx_def* %inner, i64 %pos, %struct.rtx_def* %pos_rtx, i64 %len, i32 %unsignedp, i32 %in_dest, i32 %in_compare) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %inner.addr = alloca %struct.rtx_def*, align 8
  %pos.addr = alloca i64, align 8
  %pos_rtx.addr = alloca %struct.rtx_def*, align 8
  %len.addr = alloca i64, align 8
  %unsignedp.addr = alloca i32, align 4
  %in_dest.addr = alloca i32, align 4
  %in_compare.addr = alloca i32, align 4
  %is_mode = alloca i32, align 4
  %inner_mode = alloca i32, align 4
  %wanted_inner_mode = alloca i32, align 4
  %wanted_inner_reg_mode = alloca i32, align 4
  %pos_mode = alloca i32, align 4
  %extraction_mode = alloca i32, align 4
  %tmode = alloca i32, align 4
  %spans_byte = alloca i32, align 4
  %new = alloca %struct.rtx_def*, align 8
  %orig_pos_rtx = alloca %struct.rtx_def*, align 8
  %orig_pos = alloca i64, align 8
  %offset = alloca i64, align 8
  %final_word = alloca i64, align 8
  %temp = alloca %struct.rtx_def*, align 8
  %temp1 = alloca %struct.rtx_def*, align 8
  %offset367 = alloca i32, align 4
  %temp442 = alloca %struct.rtx_def*, align 8
  %temp1470 = alloca %struct.rtx_def*, align 8
  store i32 %mode, i32* %mode.addr, align 4
  store %struct.rtx_def* %inner, %struct.rtx_def** %inner.addr, align 8
  store i64 %pos, i64* %pos.addr, align 8
  store %struct.rtx_def* %pos_rtx, %struct.rtx_def** %pos_rtx.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  store i32 %unsignedp, i32* %unsignedp.addr, align 4
  store i32 %in_dest, i32* %in_dest.addr, align 4
  store i32 %in_compare, i32* %in_compare.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  store i32 %bf.clear, i32* %is_mode, align 4
  %2 = load i32, i32* @byte_mode, align 4
  store i32 %2, i32* %wanted_inner_mode, align 4
  %3 = load i32, i32* @word_mode, align 4
  store i32 %3, i32* %wanted_inner_reg_mode, align 4
  %4 = load i32, i32* @word_mode, align 4
  store i32 %4, i32* %pos_mode, align 4
  %5 = load i32, i32* @word_mode, align 4
  store i32 %5, i32* %extraction_mode, align 4
  %6 = load i64, i64* %len.addr, align 8
  %conv = trunc i64 %6 to i32
  %call = call i32 @mode_for_size(i32 %conv, i32 1, i32 1)
  store i32 %call, i32* %tmode, align 4
  store i32 0, i32* %spans_byte, align 4
  store %struct.rtx_def* null, %struct.rtx_def** %new, align 8
  %7 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  store %struct.rtx_def* %7, %struct.rtx_def** %orig_pos_rtx, align 8
  %8 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load1 = load i32, i32* %9, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp = icmp eq i32 %bf.clear2, 48
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 1, i32* %spans_byte, align 4
  %10 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %11, %struct.rtx_def** %inner.addr, align 8
  br label %if.end.28

if.else:                                          ; preds = %entry
  %12 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load4 = load i32, i32* %13, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 63
  br i1 %cmp6, label %land.lhs.true, label %if.end.27

land.lhs.true:                                    ; preds = %if.else
  %14 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %call8 = call i32 @subreg_lowpart_p(%struct.rtx_def* %14)
  %tobool = icmp ne i32 %call8, 0
  br i1 %tobool, label %if.then.9, label %if.end.27

if.then.9:                                        ; preds = %land.lhs.true
  %15 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %fld10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i32 0, i64 0
  %rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rtx12, align 8
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load13 = load i32, i32* %17, align 8
  %bf.clear14 = and i32 %bf.load13, 65535
  %cmp15 = icmp eq i32 %bf.clear14, 66
  br i1 %cmp15, label %if.then.17, label %if.end

if.then.17:                                       ; preds = %if.then.9
  %18 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %fld18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i32 0, i64 0
  %rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rtx20, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load21 = load i32, i32* %20, align 8
  %bf.lshr22 = lshr i32 %bf.load21, 16
  %bf.clear23 = and i32 %bf.lshr22, 255
  store i32 %bf.clear23, i32* %is_mode, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.17, %if.then.9
  %21 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %fld24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i32 0, i64 0
  %rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rtx26, align 8
  store %struct.rtx_def* %22, %struct.rtx_def** %inner.addr, align 8
  br label %if.end.27

if.end.27:                                        ; preds = %if.end, %land.lhs.true, %if.else
  br label %if.end.28

if.end.28:                                        ; preds = %if.end.27, %if.then
  %23 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %24 = bitcast %struct.rtx_def* %23 to i32*
  %bf.load29 = load i32, i32* %24, align 8
  %bf.lshr30 = lshr i32 %bf.load29, 16
  %bf.clear31 = and i32 %bf.lshr30, 255
  store i32 %bf.clear31, i32* %inner_mode, align 4
  %25 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %tobool32 = icmp ne %struct.rtx_def* %25, null
  br i1 %tobool32, label %land.lhs.true.33, label %if.end.41

land.lhs.true.33:                                 ; preds = %if.end.28
  %26 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %27 = bitcast %struct.rtx_def* %26 to i32*
  %bf.load34 = load i32, i32* %27, align 8
  %bf.clear35 = and i32 %bf.load34, 65535
  %cmp36 = icmp eq i32 %bf.clear35, 54
  br i1 %cmp36, label %if.then.38, label %if.end.41

if.then.38:                                       ; preds = %land.lhs.true.33
  %28 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %fld39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx40 to i64*
  %29 = load i64, i64* %rtwint, align 8
  store i64 %29, i64* %pos.addr, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %pos_rtx.addr, align 8
  br label %if.end.41

if.end.41:                                        ; preds = %if.then.38, %land.lhs.true.33, %if.end.28
  %30 = load i32, i32* %tmode, align 4
  %cmp42 = icmp ne i32 %30, 51
  br i1 %cmp42, label %land.lhs.true.44, label %if.end.204

land.lhs.true.44:                                 ; preds = %if.end.41
  %31 = load i32, i32* %spans_byte, align 4
  %tobool45 = icmp ne i32 %31, 0
  br i1 %tobool45, label %land.lhs.true.46, label %land.lhs.true.49

land.lhs.true.46:                                 ; preds = %land.lhs.true.44
  %32 = load i32, i32* %inner_mode, align 4
  %33 = load i32, i32* %tmode, align 4
  %cmp47 = icmp ne i32 %32, %33
  br i1 %cmp47, label %if.end.204, label %land.lhs.true.49

land.lhs.true.49:                                 ; preds = %land.lhs.true.46, %land.lhs.true.44
  %34 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %cmp50 = icmp eq %struct.rtx_def* %34, null
  br i1 %cmp50, label %land.lhs.true.52, label %lor.lhs.false.71

land.lhs.true.52:                                 ; preds = %land.lhs.true.49
  %35 = load i64, i64* %pos.addr, align 8
  %36 = load i32, i32* @target_flags, align 4
  %and = and i32 %36, 33554432
  %tobool53 = icmp ne i32 %and, 0
  %cond = select i1 %tobool53, i32 64, i32 32
  %conv54 = sext i32 %cond to i64
  %rem = srem i64 %35, %conv54
  %cmp55 = icmp eq i64 %rem, 0
  br i1 %cmp55, label %land.lhs.true.57, label %lor.lhs.false.71

land.lhs.true.57:                                 ; preds = %land.lhs.true.52
  %37 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load58 = load i32, i32* %38, align 8
  %bf.clear59 = and i32 %bf.load58, 65535
  %cmp60 = icmp ne i32 %bf.clear59, 66
  br i1 %cmp60, label %land.lhs.true.62, label %lor.lhs.false.71

land.lhs.true.62:                                 ; preds = %land.lhs.true.57
  %39 = load i32, i32* %in_dest.addr, align 4
  %tobool63 = icmp ne i32 %39, 0
  br i1 %tobool63, label %lor.lhs.false, label %if.then.105

lor.lhs.false:                                    ; preds = %land.lhs.true.62
  %40 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load64 = load i32, i32* %41, align 8
  %bf.clear65 = and i32 %bf.load64, 65535
  %cmp66 = icmp eq i32 %bf.clear65, 61
  br i1 %cmp66, label %land.lhs.true.68, label %lor.lhs.false.71

land.lhs.true.68:                                 ; preds = %lor.lhs.false
  %42 = load i32, i32* %tmode, align 4
  %call69 = call i32 @have_insn_for(i32 64, i32 %42)
  %tobool70 = icmp ne i32 %call69, 0
  br i1 %tobool70, label %if.then.105, label %lor.lhs.false.71

lor.lhs.false.71:                                 ; preds = %land.lhs.true.68, %lor.lhs.false, %land.lhs.true.57, %land.lhs.true.52, %land.lhs.true.49
  %43 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %44 = bitcast %struct.rtx_def* %43 to i32*
  %bf.load72 = load i32, i32* %44, align 8
  %bf.clear73 = and i32 %bf.load72, 65535
  %cmp74 = icmp eq i32 %bf.clear73, 66
  br i1 %cmp74, label %land.lhs.true.76, label %if.end.204

land.lhs.true.76:                                 ; preds = %lor.lhs.false.71
  %45 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %cmp77 = icmp eq %struct.rtx_def* %45, null
  br i1 %cmp77, label %land.lhs.true.79, label %if.end.204

land.lhs.true.79:                                 ; preds = %land.lhs.true.76
  %46 = load i64, i64* %pos.addr, align 8
  %rem80 = srem i64 %46, 8
  %cmp81 = icmp eq i64 %rem80, 0
  br i1 %cmp81, label %land.lhs.true.83, label %if.end.204

land.lhs.true.83:                                 ; preds = %land.lhs.true.79
  %47 = load i32, i32* %inner_mode, align 4
  %idxprom = sext i32 %47 to i64
  %arrayidx84 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom
  %48 = load i16, i16* %arrayidx84, align 2
  %conv85 = zext i16 %48 to i32
  %49 = load i32, i32* %tmode, align 4
  %idxprom86 = sext i32 %49 to i64
  %arrayidx87 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom86
  %50 = load i16, i16* %arrayidx87, align 2
  %conv88 = zext i16 %50 to i32
  %cmp89 = icmp sge i32 %conv85, %conv88
  br i1 %cmp89, label %land.lhs.true.91, label %if.end.204

land.lhs.true.91:                                 ; preds = %land.lhs.true.83
  %51 = load i32, i32* %inner_mode, align 4
  %52 = load i32, i32* %tmode, align 4
  %cmp92 = icmp eq i32 %51, %52
  br i1 %cmp92, label %if.then.105, label %lor.lhs.false.94

lor.lhs.false.94:                                 ; preds = %land.lhs.true.91
  %53 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %fld95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx96 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld95, i32 0, i64 0
  %rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx97, align 8
  %call98 = call i32 @mode_dependent_address_p(%struct.rtx_def* %54)
  %tobool99 = icmp ne i32 %call98, 0
  br i1 %tobool99, label %if.end.204, label %land.lhs.true.100

land.lhs.true.100:                                ; preds = %lor.lhs.false.94
  %55 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %56 = bitcast %struct.rtx_def* %55 to i32*
  %bf.load101 = load i32, i32* %56, align 8
  %bf.lshr102 = lshr i32 %bf.load101, 27
  %bf.clear103 = and i32 %bf.lshr102, 1
  %tobool104 = icmp ne i32 %bf.clear103, 0
  br i1 %tobool104, label %if.end.204, label %if.then.105

if.then.105:                                      ; preds = %land.lhs.true.100, %land.lhs.true.91, %land.lhs.true.68, %land.lhs.true.62
  %57 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %58 = bitcast %struct.rtx_def* %57 to i32*
  %bf.load106 = load i32, i32* %58, align 8
  %bf.clear107 = and i32 %bf.load106, 65535
  %cmp108 = icmp eq i32 %bf.clear107, 66
  br i1 %cmp108, label %if.then.110, label %if.else.112

if.then.110:                                      ; preds = %if.then.105
  %59 = load i64, i64* %pos.addr, align 8
  %div = sdiv i64 %59, 8
  store i64 %div, i64* %offset, align 8
  %60 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %61 = load i32, i32* %tmode, align 4
  %62 = load i64, i64* %offset, align 8
  %call111 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %60, i32 %61, i64 %62, i32 0, i32 1)
  store %struct.rtx_def* %call111, %struct.rtx_def** %new, align 8
  br label %if.end.140

if.else.112:                                      ; preds = %if.then.105
  %63 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %64 = bitcast %struct.rtx_def* %63 to i32*
  %bf.load113 = load i32, i32* %64, align 8
  %bf.clear114 = and i32 %bf.load113, 65535
  %cmp115 = icmp eq i32 %bf.clear114, 61
  br i1 %cmp115, label %if.then.117, label %if.else.134

if.then.117:                                      ; preds = %if.else.112
  %65 = load i32, i32* %tmode, align 4
  %66 = load i32, i32* %inner_mode, align 4
  %cmp118 = icmp ne i32 %65, %66
  br i1 %cmp118, label %if.then.120, label %if.else.132

if.then.120:                                      ; preds = %if.then.117
  %67 = load i64, i64* %pos.addr, align 8
  %68 = load i32, i32* @target_flags, align 4
  %and121 = and i32 %68, 33554432
  %tobool122 = icmp ne i32 %and121, 0
  %cond123 = select i1 %tobool122, i32 64, i32 32
  %conv124 = sext i32 %cond123 to i64
  %div125 = sdiv i64 %67, %conv124
  store i64 %div125, i64* %final_word, align 8
  %69 = load i32, i32* @target_flags, align 4
  %and126 = and i32 %69, 33554432
  %tobool127 = icmp ne i32 %and126, 0
  %cond128 = select i1 %tobool127, i32 8, i32 4
  %conv129 = sext i32 %cond128 to i64
  %70 = load i64, i64* %final_word, align 8
  %mul = mul nsw i64 %70, %conv129
  store i64 %mul, i64* %final_word, align 8
  %71 = load i32, i32* %tmode, align 4
  %72 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %73 = load i64, i64* %final_word, align 8
  %conv130 = trunc i64 %73 to i32
  %call131 = call %struct.rtx_def* @gen_rtx_SUBREG(i32 %71, %struct.rtx_def* %72, i32 %conv130)
  store %struct.rtx_def* %call131, %struct.rtx_def** %new, align 8
  br label %if.end.133

if.else.132:                                      ; preds = %if.then.117
  %74 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  store %struct.rtx_def* %74, %struct.rtx_def** %new, align 8
  br label %if.end.133

if.end.133:                                       ; preds = %if.else.132, %if.then.120
  br label %if.end.139

if.else.134:                                      ; preds = %if.else.112
  %75 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %76 = load i32, i32* %tmode, align 4
  %77 = load i64, i64* %len.addr, align 8
  %cmp135 = icmp uge i64 %77, 64
  br i1 %cmp135, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else.134
  br label %cond.end

cond.false:                                       ; preds = %if.else.134
  %78 = load i64, i64* %len.addr, align 8
  %shl = shl i64 1, %78
  %sub = sub i64 %shl, 1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond137 = phi i64 [ -1, %cond.true ], [ %sub, %cond.false ]
  %call138 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %75, i32 %76, i64 %cond137, %struct.rtx_def* null, i32 0)
  store %struct.rtx_def* %call138, %struct.rtx_def** %new, align 8
  br label %if.end.139

if.end.139:                                       ; preds = %cond.end, %if.end.133
  br label %if.end.140

if.end.140:                                       ; preds = %if.end.139, %if.then.110
  %79 = load i32, i32* %in_dest.addr, align 4
  %tobool141 = icmp ne i32 %79, 0
  br i1 %tobool141, label %if.then.142, label %if.end.161

if.then.142:                                      ; preds = %if.end.140
  %80 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %81 = bitcast %struct.rtx_def* %80 to i32*
  %bf.load143 = load i32, i32* %81, align 8
  %bf.clear144 = and i32 %bf.load143, 65535
  %cmp145 = icmp eq i32 %bf.clear144, 66
  br i1 %cmp145, label %cond.true.147, label %cond.false.148

cond.true.147:                                    ; preds = %if.then.142
  %82 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  br label %cond.end.159

cond.false.148:                                   ; preds = %if.then.142
  %83 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %84 = bitcast %struct.rtx_def* %83 to i32*
  %bf.load149 = load i32, i32* %84, align 8
  %bf.clear150 = and i32 %bf.load149, 65535
  %cmp151 = icmp ne i32 %bf.clear150, 63
  br i1 %cmp151, label %cond.true.153, label %cond.false.155

cond.true.153:                                    ; preds = %cond.false.148
  %85 = load i32, i32* %tmode, align 4
  %86 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %call154 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 %85, %struct.rtx_def* %86)
  br label %cond.end.157

cond.false.155:                                   ; preds = %cond.false.148
  %87 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %call156 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 64, i32 0, %struct.rtx_def* %87)
  br label %cond.end.157

cond.end.157:                                     ; preds = %cond.false.155, %cond.true.153
  %cond158 = phi %struct.rtx_def* [ %call154, %cond.true.153 ], [ %call156, %cond.false.155 ]
  br label %cond.end.159

cond.end.159:                                     ; preds = %cond.end.157, %cond.true.147
  %cond160 = phi %struct.rtx_def* [ %82, %cond.true.147 ], [ %cond158, %cond.end.157 ]
  store %struct.rtx_def* %cond160, %struct.rtx_def** %retval
  br label %return

if.end.161:                                       ; preds = %if.end.140
  %88 = load i32, i32* %mode.addr, align 4
  %89 = load i32, i32* %tmode, align 4
  %cmp162 = icmp eq i32 %88, %89
  br i1 %cmp162, label %if.then.164, label %if.end.165

if.then.164:                                      ; preds = %if.end.161
  %90 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  store %struct.rtx_def* %90, %struct.rtx_def** %retval
  br label %return

if.end.165:                                       ; preds = %if.end.161
  %91 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %92 = bitcast %struct.rtx_def* %91 to i32*
  %bf.load166 = load i32, i32* %92, align 8
  %bf.clear167 = and i32 %bf.load166, 65535
  %cmp168 = icmp eq i32 %bf.clear167, 54
  br i1 %cmp168, label %if.then.170, label %if.end.176

if.then.170:                                      ; preds = %if.end.165
  %93 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %fld171 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %93, i32 0, i32 1
  %arrayidx172 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld171, i32 0, i64 0
  %rtwint173 = bitcast %union.rtunion_def* %arrayidx172 to i64*
  %94 = load i64, i64* %rtwint173, align 8
  %95 = load i32, i32* %mode.addr, align 4
  %call174 = call i64 @trunc_int_for_mode(i64 %94, i32 %95)
  %call175 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call174)
  store %struct.rtx_def* %call175, %struct.rtx_def** %retval
  br label %return

if.end.176:                                       ; preds = %if.end.165
  %96 = load i32, i32* @flag_expensive_optimizations, align 4
  %tobool177 = icmp ne i32 %96, 0
  br i1 %tobool177, label %land.lhs.true.178, label %if.end.200

land.lhs.true.178:                                ; preds = %if.end.176
  %97 = load i32, i32* %tmode, align 4
  %idxprom179 = sext i32 %97 to i64
  %arrayidx180 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom179
  %98 = load i16, i16* %arrayidx180, align 2
  %conv181 = zext i16 %98 to i32
  %cmp182 = icmp sle i32 %conv181, 64
  br i1 %cmp182, label %land.lhs.true.184, label %if.end.200

land.lhs.true.184:                                ; preds = %land.lhs.true.178
  %99 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %100 = load i32, i32* %tmode, align 4
  %call185 = call i64 @nonzero_bits(%struct.rtx_def* %99, i32 %100)
  %101 = load i32, i32* %tmode, align 4
  %idxprom186 = sext i32 %101 to i64
  %arrayidx187 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom186
  %102 = load i64, i64* %arrayidx187, align 8
  %shr = lshr i64 %102, 1
  %neg = xor i64 %shr, -1
  %and188 = and i64 %call185, %neg
  %cmp189 = icmp eq i64 %and188, 0
  br i1 %cmp189, label %if.then.191, label %if.end.200

if.then.191:                                      ; preds = %land.lhs.true.184
  %103 = load i32, i32* %mode.addr, align 4
  %104 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %call192 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 %103, %struct.rtx_def* %104)
  store %struct.rtx_def* %call192, %struct.rtx_def** %temp, align 8
  %105 = load i32, i32* %mode.addr, align 4
  %106 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %call193 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 %105, %struct.rtx_def* %106)
  store %struct.rtx_def* %call193, %struct.rtx_def** %temp1, align 8
  %107 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  %call194 = call i32 @rtx_cost(%struct.rtx_def* %107, i32 47)
  %108 = load %struct.rtx_def*, %struct.rtx_def** %temp1, align 8
  %call195 = call i32 @rtx_cost(%struct.rtx_def* %108, i32 47)
  %cmp196 = icmp sle i32 %call194, %call195
  br i1 %cmp196, label %if.then.198, label %if.end.199

if.then.198:                                      ; preds = %if.then.191
  %109 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  store %struct.rtx_def* %109, %struct.rtx_def** %retval
  br label %return

if.end.199:                                       ; preds = %if.then.191
  %110 = load %struct.rtx_def*, %struct.rtx_def** %temp1, align 8
  store %struct.rtx_def* %110, %struct.rtx_def** %retval
  br label %return

if.end.200:                                       ; preds = %land.lhs.true.184, %land.lhs.true.178, %if.end.176
  %111 = load i32, i32* %unsignedp.addr, align 4
  %tobool201 = icmp ne i32 %111, 0
  %cond202 = select i1 %tobool201, i32 121, i32 120
  %112 = load i32, i32* %mode.addr, align 4
  %113 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %call203 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 %cond202, i32 %112, %struct.rtx_def* %113)
  store %struct.rtx_def* %call203, %struct.rtx_def** %retval
  br label %return

if.end.204:                                       ; preds = %land.lhs.true.100, %lor.lhs.false.94, %land.lhs.true.83, %land.lhs.true.79, %land.lhs.true.76, %lor.lhs.false.71, %land.lhs.true.46, %if.end.41
  %114 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %cmp205 = icmp eq %struct.rtx_def* %114, null
  br i1 %cmp205, label %land.lhs.true.207, label %if.end.219

land.lhs.true.207:                                ; preds = %if.end.204
  %115 = load i64, i64* %pos.addr, align 8
  %cmp208 = icmp eq i64 %115, 0
  br i1 %cmp208, label %land.lhs.true.210, label %if.end.219

land.lhs.true.210:                                ; preds = %land.lhs.true.207
  %116 = load i32, i32* %in_dest.addr, align 4
  %tobool211 = icmp ne i32 %116, 0
  br i1 %tobool211, label %if.end.219, label %land.lhs.true.212

land.lhs.true.212:                                ; preds = %land.lhs.true.210
  %117 = load i32, i32* %in_compare.addr, align 4
  %tobool213 = icmp ne i32 %117, 0
  br i1 %tobool213, label %if.end.219, label %land.lhs.true.214

land.lhs.true.214:                                ; preds = %land.lhs.true.212
  %118 = load i32, i32* %spans_byte, align 4
  %tobool215 = icmp ne i32 %118, 0
  br i1 %tobool215, label %if.end.219, label %land.lhs.true.216

land.lhs.true.216:                                ; preds = %land.lhs.true.214
  %119 = load i32, i32* %unsignedp.addr, align 4
  %tobool217 = icmp ne i32 %119, 0
  br i1 %tobool217, label %if.then.218, label %if.end.219

if.then.218:                                      ; preds = %land.lhs.true.216
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.219:                                       ; preds = %land.lhs.true.216, %land.lhs.true.214, %land.lhs.true.212, %land.lhs.true.210, %land.lhs.true.207, %if.end.204
  %120 = load i32, i32* %spans_byte, align 4
  %tobool220 = icmp ne i32 %120, 0
  br i1 %tobool220, label %if.end.242, label %land.lhs.true.221

land.lhs.true.221:                                ; preds = %if.end.219
  %121 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %122 = bitcast %struct.rtx_def* %121 to i32*
  %bf.load222 = load i32, i32* %122, align 8
  %bf.clear223 = and i32 %bf.load222, 65535
  %cmp224 = icmp eq i32 %bf.clear223, 66
  br i1 %cmp224, label %land.lhs.true.226, label %if.end.242

land.lhs.true.226:                                ; preds = %land.lhs.true.221
  %123 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %cmp227 = icmp eq %struct.rtx_def* %123, null
  br i1 %cmp227, label %land.lhs.true.229, label %lor.lhs.false.235

land.lhs.true.229:                                ; preds = %land.lhs.true.226
  %124 = load i64, i64* %pos.addr, align 8
  %125 = load i64, i64* %len.addr, align 8
  %add = add i64 %124, %125
  %126 = load i32, i32* %is_mode, align 4
  %idxprom230 = sext i32 %126 to i64
  %arrayidx231 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom230
  %127 = load i16, i16* %arrayidx231, align 2
  %conv232 = zext i16 %127 to i64
  %cmp233 = icmp ugt i64 %add, %conv232
  br i1 %cmp233, label %if.then.241, label %lor.lhs.false.235

lor.lhs.false.235:                                ; preds = %land.lhs.true.229, %land.lhs.true.226
  %128 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %cmp236 = icmp ne %struct.rtx_def* %128, null
  br i1 %cmp236, label %land.lhs.true.238, label %if.end.242

land.lhs.true.238:                                ; preds = %lor.lhs.false.235
  %129 = load i64, i64* %len.addr, align 8
  %cmp239 = icmp ne i64 %129, 1
  br i1 %cmp239, label %if.then.241, label %if.end.242

if.then.241:                                      ; preds = %land.lhs.true.238, %land.lhs.true.229
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.242:                                       ; preds = %land.lhs.true.238, %lor.lhs.false.235, %land.lhs.true.221, %if.end.219
  %130 = load i32, i32* %in_dest.addr, align 4
  %tobool243 = icmp ne i32 %130, 0
  br i1 %tobool243, label %land.lhs.true.244, label %if.end.252

land.lhs.true.244:                                ; preds = %if.end.242
  %call245 = call i32 @mode_for_extraction(i32 0, i32 -1)
  %cmp246 = icmp ne i32 %call245, 59
  br i1 %cmp246, label %if.then.248, label %if.end.252

if.then.248:                                      ; preds = %land.lhs.true.244
  %call249 = call i32 @mode_for_extraction(i32 0, i32 0)
  store i32 %call249, i32* %wanted_inner_reg_mode, align 4
  %call250 = call i32 @mode_for_extraction(i32 0, i32 2)
  store i32 %call250, i32* %pos_mode, align 4
  %call251 = call i32 @mode_for_extraction(i32 0, i32 3)
  store i32 %call251, i32* %extraction_mode, align 4
  br label %if.end.252

if.end.252:                                       ; preds = %if.then.248, %land.lhs.true.244, %if.end.242
  %131 = load i32, i32* %in_dest.addr, align 4
  %tobool253 = icmp ne i32 %131, 0
  br i1 %tobool253, label %if.end.264, label %land.lhs.true.254

land.lhs.true.254:                                ; preds = %if.end.252
  %132 = load i32, i32* %unsignedp.addr, align 4
  %tobool255 = icmp ne i32 %132, 0
  br i1 %tobool255, label %land.lhs.true.256, label %if.end.264

land.lhs.true.256:                                ; preds = %land.lhs.true.254
  %call257 = call i32 @mode_for_extraction(i32 2, i32 -1)
  %cmp258 = icmp ne i32 %call257, 59
  br i1 %cmp258, label %if.then.260, label %if.end.264

if.then.260:                                      ; preds = %land.lhs.true.256
  %call261 = call i32 @mode_for_extraction(i32 2, i32 1)
  store i32 %call261, i32* %wanted_inner_reg_mode, align 4
  %call262 = call i32 @mode_for_extraction(i32 2, i32 3)
  store i32 %call262, i32* %pos_mode, align 4
  %call263 = call i32 @mode_for_extraction(i32 2, i32 0)
  store i32 %call263, i32* %extraction_mode, align 4
  br label %if.end.264

if.end.264:                                       ; preds = %if.then.260, %land.lhs.true.256, %land.lhs.true.254, %if.end.252
  %133 = load i32, i32* %in_dest.addr, align 4
  %tobool265 = icmp ne i32 %133, 0
  br i1 %tobool265, label %if.end.276, label %land.lhs.true.266

land.lhs.true.266:                                ; preds = %if.end.264
  %134 = load i32, i32* %unsignedp.addr, align 4
  %tobool267 = icmp ne i32 %134, 0
  br i1 %tobool267, label %if.end.276, label %land.lhs.true.268

land.lhs.true.268:                                ; preds = %land.lhs.true.266
  %call269 = call i32 @mode_for_extraction(i32 1, i32 -1)
  %cmp270 = icmp ne i32 %call269, 59
  br i1 %cmp270, label %if.then.272, label %if.end.276

if.then.272:                                      ; preds = %land.lhs.true.268
  %call273 = call i32 @mode_for_extraction(i32 1, i32 1)
  store i32 %call273, i32* %wanted_inner_reg_mode, align 4
  %call274 = call i32 @mode_for_extraction(i32 1, i32 3)
  store i32 %call274, i32* %pos_mode, align 4
  %call275 = call i32 @mode_for_extraction(i32 1, i32 0)
  store i32 %call275, i32* %extraction_mode, align 4
  br label %if.end.276

if.end.276:                                       ; preds = %if.then.272, %land.lhs.true.268, %land.lhs.true.266, %if.end.264
  %135 = load i32, i32* %mode.addr, align 4
  %cmp277 = icmp ne i32 %135, 0
  br i1 %cmp277, label %land.lhs.true.279, label %if.end.289

land.lhs.true.279:                                ; preds = %if.end.276
  %136 = load i32, i32* %extraction_mode, align 4
  %idxprom280 = sext i32 %136 to i64
  %arrayidx281 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom280
  %137 = load i8, i8* %arrayidx281, align 1
  %conv282 = zext i8 %137 to i32
  %138 = load i32, i32* %mode.addr, align 4
  %idxprom283 = sext i32 %138 to i64
  %arrayidx284 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom283
  %139 = load i8, i8* %arrayidx284, align 1
  %conv285 = zext i8 %139 to i32
  %cmp286 = icmp slt i32 %conv282, %conv285
  br i1 %cmp286, label %if.then.288, label %if.end.289

if.then.288:                                      ; preds = %land.lhs.true.279
  %140 = load i32, i32* %mode.addr, align 4
  store i32 %140, i32* %extraction_mode, align 4
  br label %if.end.289

if.end.289:                                       ; preds = %if.then.288, %land.lhs.true.279, %if.end.276
  %141 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %tobool290 = icmp ne %struct.rtx_def* %141, null
  br i1 %tobool290, label %land.lhs.true.291, label %if.end.313

land.lhs.true.291:                                ; preds = %if.end.289
  %142 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %143 = bitcast %struct.rtx_def* %142 to i32*
  %bf.load292 = load i32, i32* %143, align 8
  %bf.lshr293 = lshr i32 %bf.load292, 16
  %bf.clear294 = and i32 %bf.lshr293, 255
  %cmp295 = icmp ne i32 %bf.clear294, 0
  br i1 %cmp295, label %land.lhs.true.297, label %if.end.313

land.lhs.true.297:                                ; preds = %land.lhs.true.291
  %144 = load i32, i32* %pos_mode, align 4
  %idxprom298 = sext i32 %144 to i64
  %arrayidx299 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom298
  %145 = load i8, i8* %arrayidx299, align 1
  %conv300 = zext i8 %145 to i32
  %146 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %147 = bitcast %struct.rtx_def* %146 to i32*
  %bf.load301 = load i32, i32* %147, align 8
  %bf.lshr302 = lshr i32 %bf.load301, 16
  %bf.clear303 = and i32 %bf.lshr302, 255
  %idxprom304 = sext i32 %bf.clear303 to i64
  %arrayidx305 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom304
  %148 = load i8, i8* %arrayidx305, align 1
  %conv306 = zext i8 %148 to i32
  %cmp307 = icmp slt i32 %conv300, %conv306
  br i1 %cmp307, label %if.then.309, label %if.end.313

if.then.309:                                      ; preds = %land.lhs.true.297
  %149 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %150 = bitcast %struct.rtx_def* %149 to i32*
  %bf.load310 = load i32, i32* %150, align 8
  %bf.lshr311 = lshr i32 %bf.load310, 16
  %bf.clear312 = and i32 %bf.lshr311, 255
  store i32 %bf.clear312, i32* %pos_mode, align 4
  br label %if.end.313

if.end.313:                                       ; preds = %if.then.309, %land.lhs.true.297, %land.lhs.true.291, %if.end.289
  %151 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %152 = bitcast %struct.rtx_def* %151 to i32*
  %bf.load314 = load i32, i32* %152, align 8
  %bf.clear315 = and i32 %bf.load314, 65535
  %cmp316 = icmp ne i32 %bf.clear315, 66
  br i1 %cmp316, label %if.then.318, label %if.else.319

if.then.318:                                      ; preds = %if.end.313
  %153 = load i32, i32* %wanted_inner_reg_mode, align 4
  store i32 %153, i32* %wanted_inner_mode, align 4
  br label %if.end.335

if.else.319:                                      ; preds = %if.end.313
  %154 = load i32, i32* %inner_mode, align 4
  %155 = load i32, i32* %wanted_inner_mode, align 4
  %cmp320 = icmp ne i32 %154, %155
  br i1 %cmp320, label %land.lhs.true.322, label %if.end.334

land.lhs.true.322:                                ; preds = %if.else.319
  %156 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %fld323 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %156, i32 0, i32 1
  %arrayidx324 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld323, i32 0, i64 0
  %rtx325 = bitcast %union.rtunion_def* %arrayidx324 to %struct.rtx_def**
  %157 = load %struct.rtx_def*, %struct.rtx_def** %rtx325, align 8
  %call326 = call i32 @mode_dependent_address_p(%struct.rtx_def* %157)
  %tobool327 = icmp ne i32 %call326, 0
  br i1 %tobool327, label %if.then.333, label %lor.lhs.false.328

lor.lhs.false.328:                                ; preds = %land.lhs.true.322
  %158 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %159 = bitcast %struct.rtx_def* %158 to i32*
  %bf.load329 = load i32, i32* %159, align 8
  %bf.lshr330 = lshr i32 %bf.load329, 27
  %bf.clear331 = and i32 %bf.lshr330, 1
  %tobool332 = icmp ne i32 %bf.clear331, 0
  br i1 %tobool332, label %if.then.333, label %if.end.334

if.then.333:                                      ; preds = %lor.lhs.false.328, %land.lhs.true.322
  %160 = load i32, i32* %extraction_mode, align 4
  store i32 %160, i32* %wanted_inner_mode, align 4
  br label %if.end.334

if.end.334:                                       ; preds = %if.then.333, %lor.lhs.false.328, %if.else.319
  br label %if.end.335

if.end.335:                                       ; preds = %if.end.334, %if.then.318
  %161 = load i64, i64* %pos.addr, align 8
  store i64 %161, i64* %orig_pos, align 8
  %162 = load i32, i32* %wanted_inner_mode, align 4
  %cmp336 = icmp ne i32 %162, 0
  br i1 %cmp336, label %land.lhs.true.338, label %if.else.389

land.lhs.true.338:                                ; preds = %if.end.335
  %163 = load i32, i32* %wanted_inner_mode, align 4
  %idxprom339 = sext i32 %163 to i64
  %arrayidx340 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom339
  %164 = load i8, i8* %arrayidx340, align 1
  %conv341 = zext i8 %164 to i32
  %165 = load i32, i32* %is_mode, align 4
  %idxprom342 = sext i32 %165 to i64
  %arrayidx343 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom342
  %166 = load i8, i8* %arrayidx343, align 1
  %conv344 = zext i8 %166 to i32
  %cmp345 = icmp slt i32 %conv341, %conv344
  br i1 %cmp345, label %land.lhs.true.347, label %if.else.389

land.lhs.true.347:                                ; preds = %land.lhs.true.338
  %167 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %168 = bitcast %struct.rtx_def* %167 to i32*
  %bf.load348 = load i32, i32* %168, align 8
  %bf.clear349 = and i32 %bf.load348, 65535
  %cmp350 = icmp eq i32 %bf.clear349, 66
  br i1 %cmp350, label %land.lhs.true.352, label %if.else.389

land.lhs.true.352:                                ; preds = %land.lhs.true.347
  %169 = load i32, i32* %inner_mode, align 4
  %170 = load i32, i32* %wanted_inner_mode, align 4
  %cmp353 = icmp eq i32 %169, %170
  br i1 %cmp353, label %if.then.366, label %lor.lhs.false.355

lor.lhs.false.355:                                ; preds = %land.lhs.true.352
  %171 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %fld356 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %171, i32 0, i32 1
  %arrayidx357 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld356, i32 0, i64 0
  %rtx358 = bitcast %union.rtunion_def* %arrayidx357 to %struct.rtx_def**
  %172 = load %struct.rtx_def*, %struct.rtx_def** %rtx358, align 8
  %call359 = call i32 @mode_dependent_address_p(%struct.rtx_def* %172)
  %tobool360 = icmp ne i32 %call359, 0
  br i1 %tobool360, label %if.else.389, label %land.lhs.true.361

land.lhs.true.361:                                ; preds = %lor.lhs.false.355
  %173 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %174 = bitcast %struct.rtx_def* %173 to i32*
  %bf.load362 = load i32, i32* %174, align 8
  %bf.lshr363 = lshr i32 %bf.load362, 27
  %bf.clear364 = and i32 %bf.lshr363, 1
  %tobool365 = icmp ne i32 %bf.clear364, 0
  br i1 %tobool365, label %if.else.389, label %if.then.366

if.then.366:                                      ; preds = %land.lhs.true.361, %land.lhs.true.352
  store i32 0, i32* %offset367, align 4
  %175 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %cmp368 = icmp eq %struct.rtx_def* %175, null
  br i1 %cmp368, label %if.then.370, label %if.end.379

if.then.370:                                      ; preds = %if.then.366
  %176 = load i64, i64* %pos.addr, align 8
  %div371 = sdiv i64 %176, 8
  %177 = load i32, i32* %offset367, align 4
  %conv372 = sext i32 %177 to i64
  %add373 = add nsw i64 %conv372, %div371
  %conv374 = trunc i64 %add373 to i32
  store i32 %conv374, i32* %offset367, align 4
  %178 = load i32, i32* %wanted_inner_mode, align 4
  %idxprom375 = sext i32 %178 to i64
  %arrayidx376 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom375
  %179 = load i16, i16* %arrayidx376, align 2
  %conv377 = zext i16 %179 to i64
  %180 = load i64, i64* %pos.addr, align 8
  %rem378 = srem i64 %180, %conv377
  store i64 %rem378, i64* %pos.addr, align 8
  br label %if.end.379

if.end.379:                                       ; preds = %if.then.370, %if.then.366
  %181 = load i32, i32* %offset367, align 4
  %cmp380 = icmp ne i32 %181, 0
  br i1 %cmp380, label %if.then.385, label %lor.lhs.false.382

lor.lhs.false.382:                                ; preds = %if.end.379
  %182 = load i32, i32* %inner_mode, align 4
  %183 = load i32, i32* %wanted_inner_mode, align 4
  %cmp383 = icmp ne i32 %182, %183
  br i1 %cmp383, label %if.then.385, label %if.end.388

if.then.385:                                      ; preds = %lor.lhs.false.382, %if.end.379
  %184 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %185 = load i32, i32* %wanted_inner_mode, align 4
  %186 = load i32, i32* %offset367, align 4
  %conv386 = sext i32 %186 to i64
  %call387 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %184, i32 %185, i64 %conv386, i32 0, i32 1)
  store %struct.rtx_def* %call387, %struct.rtx_def** %inner.addr, align 8
  br label %if.end.388

if.end.388:                                       ; preds = %if.then.385, %lor.lhs.false.382
  br label %if.end.426

if.else.389:                                      ; preds = %land.lhs.true.361, %lor.lhs.false.355, %land.lhs.true.347, %land.lhs.true.338, %if.end.335
  %187 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %188 = bitcast %struct.rtx_def* %187 to i32*
  %bf.load390 = load i32, i32* %188, align 8
  %bf.clear391 = and i32 %bf.load390, 65535
  %cmp392 = icmp ne i32 %bf.clear391, 66
  br i1 %cmp392, label %if.then.394, label %if.end.425

if.then.394:                                      ; preds = %if.else.389
  %189 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %190 = bitcast %struct.rtx_def* %189 to i32*
  %bf.load395 = load i32, i32* %190, align 8
  %bf.lshr396 = lshr i32 %bf.load395, 16
  %bf.clear397 = and i32 %bf.lshr396, 255
  %191 = load i32, i32* %wanted_inner_mode, align 4
  %cmp398 = icmp ne i32 %bf.clear397, %191
  br i1 %cmp398, label %land.lhs.true.400, label %if.end.411

land.lhs.true.400:                                ; preds = %if.then.394
  %192 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %cmp401 = icmp ne %struct.rtx_def* %192, null
  br i1 %cmp401, label %if.then.410, label %lor.lhs.false.403

lor.lhs.false.403:                                ; preds = %land.lhs.true.400
  %193 = load i64, i64* %orig_pos, align 8
  %194 = load i64, i64* %len.addr, align 8
  %add404 = add i64 %193, %194
  %195 = load i32, i32* %wanted_inner_mode, align 4
  %idxprom405 = sext i32 %195 to i64
  %arrayidx406 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom405
  %196 = load i16, i16* %arrayidx406, align 2
  %conv407 = zext i16 %196 to i64
  %cmp408 = icmp ugt i64 %add404, %conv407
  br i1 %cmp408, label %if.then.410, label %if.end.411

if.then.410:                                      ; preds = %lor.lhs.false.403, %land.lhs.true.400
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.411:                                       ; preds = %lor.lhs.false.403, %if.then.394
  %197 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %198 = load i32, i32* %wanted_inner_mode, align 4
  %199 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %tobool412 = icmp ne %struct.rtx_def* %199, null
  br i1 %tobool412, label %cond.true.417, label %lor.lhs.false.413

lor.lhs.false.413:                                ; preds = %if.end.411
  %200 = load i64, i64* %len.addr, align 8
  %201 = load i64, i64* %orig_pos, align 8
  %add414 = add i64 %200, %201
  %cmp415 = icmp uge i64 %add414, 64
  br i1 %cmp415, label %cond.true.417, label %cond.false.418

cond.true.417:                                    ; preds = %lor.lhs.false.413, %if.end.411
  br label %cond.end.422

cond.false.418:                                   ; preds = %lor.lhs.false.413
  %202 = load i64, i64* %len.addr, align 8
  %shl419 = shl i64 1, %202
  %sub420 = sub i64 %shl419, 1
  %203 = load i64, i64* %orig_pos, align 8
  %shl421 = shl i64 %sub420, %203
  br label %cond.end.422

cond.end.422:                                     ; preds = %cond.false.418, %cond.true.417
  %cond423 = phi i64 [ -1, %cond.true.417 ], [ %shl421, %cond.false.418 ]
  %call424 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %197, i32 %198, i64 %cond423, %struct.rtx_def* null, i32 0)
  store %struct.rtx_def* %call424, %struct.rtx_def** %inner.addr, align 8
  br label %if.end.425

if.end.425:                                       ; preds = %cond.end.422, %if.else.389
  br label %if.end.426

if.end.426:                                       ; preds = %if.end.425, %if.end.388
  %204 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %cmp427 = icmp ne %struct.rtx_def* %204, null
  br i1 %cmp427, label %land.lhs.true.429, label %if.else.479

land.lhs.true.429:                                ; preds = %if.end.426
  %205 = load i32, i32* %pos_mode, align 4
  %idxprom430 = sext i32 %205 to i64
  %arrayidx431 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom430
  %206 = load i8, i8* %arrayidx431, align 1
  %conv432 = zext i8 %206 to i32
  %207 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %208 = bitcast %struct.rtx_def* %207 to i32*
  %bf.load433 = load i32, i32* %208, align 8
  %bf.lshr434 = lshr i32 %bf.load433, 16
  %bf.clear435 = and i32 %bf.lshr434, 255
  %idxprom436 = sext i32 %bf.clear435 to i64
  %arrayidx437 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom436
  %209 = load i8, i8* %arrayidx437, align 1
  %conv438 = zext i8 %209 to i32
  %cmp439 = icmp sgt i32 %conv432, %conv438
  br i1 %cmp439, label %if.then.441, label %if.else.479

if.then.441:                                      ; preds = %land.lhs.true.429
  %210 = load i32, i32* %pos_mode, align 4
  %211 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %call443 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 %210, %struct.rtx_def* %211)
  store %struct.rtx_def* %call443, %struct.rtx_def** %temp442, align 8
  %212 = load i32, i32* @flag_expensive_optimizations, align 4
  %tobool444 = icmp ne i32 %212, 0
  br i1 %tobool444, label %land.lhs.true.445, label %if.end.478

land.lhs.true.445:                                ; preds = %if.then.441
  %213 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %214 = bitcast %struct.rtx_def* %213 to i32*
  %bf.load446 = load i32, i32* %214, align 8
  %bf.lshr447 = lshr i32 %bf.load446, 16
  %bf.clear448 = and i32 %bf.lshr447, 255
  %idxprom449 = sext i32 %bf.clear448 to i64
  %arrayidx450 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom449
  %215 = load i16, i16* %arrayidx450, align 2
  %conv451 = zext i16 %215 to i32
  %cmp452 = icmp sle i32 %conv451, 64
  br i1 %cmp452, label %land.lhs.true.454, label %if.end.478

land.lhs.true.454:                                ; preds = %land.lhs.true.445
  %216 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %217 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %218 = bitcast %struct.rtx_def* %217 to i32*
  %bf.load455 = load i32, i32* %218, align 8
  %bf.lshr456 = lshr i32 %bf.load455, 16
  %bf.clear457 = and i32 %bf.lshr456, 255
  %call458 = call i64 @nonzero_bits(%struct.rtx_def* %216, i32 %bf.clear457)
  %219 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %220 = bitcast %struct.rtx_def* %219 to i32*
  %bf.load459 = load i32, i32* %220, align 8
  %bf.lshr460 = lshr i32 %bf.load459, 16
  %bf.clear461 = and i32 %bf.lshr460, 255
  %idxprom462 = sext i32 %bf.clear461 to i64
  %arrayidx463 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom462
  %221 = load i64, i64* %arrayidx463, align 8
  %shr464 = lshr i64 %221, 1
  %neg465 = xor i64 %shr464, -1
  %and466 = and i64 %call458, %neg465
  %cmp467 = icmp eq i64 %and466, 0
  br i1 %cmp467, label %if.then.469, label %if.end.478

if.then.469:                                      ; preds = %land.lhs.true.454
  %222 = load i32, i32* %pos_mode, align 4
  %223 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %call471 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 120, i32 %222, %struct.rtx_def* %223)
  store %struct.rtx_def* %call471, %struct.rtx_def** %temp1470, align 8
  %224 = load %struct.rtx_def*, %struct.rtx_def** %temp1470, align 8
  %call472 = call i32 @rtx_cost(%struct.rtx_def* %224, i32 47)
  %225 = load %struct.rtx_def*, %struct.rtx_def** %temp442, align 8
  %call473 = call i32 @rtx_cost(%struct.rtx_def* %225, i32 47)
  %cmp474 = icmp slt i32 %call472, %call473
  br i1 %cmp474, label %if.then.476, label %if.end.477

if.then.476:                                      ; preds = %if.then.469
  %226 = load %struct.rtx_def*, %struct.rtx_def** %temp1470, align 8
  store %struct.rtx_def* %226, %struct.rtx_def** %temp442, align 8
  br label %if.end.477

if.end.477:                                       ; preds = %if.then.476, %if.then.469
  br label %if.end.478

if.end.478:                                       ; preds = %if.end.477, %land.lhs.true.454, %land.lhs.true.445, %if.then.441
  %227 = load %struct.rtx_def*, %struct.rtx_def** %temp442, align 8
  store %struct.rtx_def* %227, %struct.rtx_def** %pos_rtx.addr, align 8
  br label %if.end.497

if.else.479:                                      ; preds = %land.lhs.true.429, %if.end.426
  %228 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %cmp480 = icmp ne %struct.rtx_def* %228, null
  br i1 %cmp480, label %land.lhs.true.482, label %if.end.496

land.lhs.true.482:                                ; preds = %if.else.479
  %229 = load i32, i32* %pos_mode, align 4
  %idxprom483 = sext i32 %229 to i64
  %arrayidx484 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom483
  %230 = load i8, i8* %arrayidx484, align 1
  %conv485 = zext i8 %230 to i32
  %231 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %232 = bitcast %struct.rtx_def* %231 to i32*
  %bf.load486 = load i32, i32* %232, align 8
  %bf.lshr487 = lshr i32 %bf.load486, 16
  %bf.clear488 = and i32 %bf.lshr487, 255
  %idxprom489 = sext i32 %bf.clear488 to i64
  %arrayidx490 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom489
  %233 = load i8, i8* %arrayidx490, align 1
  %conv491 = zext i8 %233 to i32
  %cmp492 = icmp slt i32 %conv485, %conv491
  br i1 %cmp492, label %if.then.494, label %if.end.496

if.then.494:                                      ; preds = %land.lhs.true.482
  %234 = load i32, i32* %pos_mode, align 4
  %235 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %call495 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %234, %struct.rtx_def* %235)
  store %struct.rtx_def* %call495, %struct.rtx_def** %pos_rtx.addr, align 8
  br label %if.end.496

if.end.496:                                       ; preds = %if.then.494, %land.lhs.true.482, %if.else.479
  br label %if.end.497

if.end.497:                                       ; preds = %if.end.496, %if.end.478
  %236 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %cmp498 = icmp eq %struct.rtx_def* %236, null
  br i1 %cmp498, label %land.lhs.true.500, label %if.else.510

land.lhs.true.500:                                ; preds = %if.end.497
  %237 = load %struct.rtx_def*, %struct.rtx_def** %orig_pos_rtx, align 8
  %cmp501 = icmp ne %struct.rtx_def* %237, null
  br i1 %cmp501, label %land.lhs.true.503, label %if.else.510

land.lhs.true.503:                                ; preds = %land.lhs.true.500
  %238 = load %struct.rtx_def*, %struct.rtx_def** %orig_pos_rtx, align 8
  %fld504 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %238, i32 0, i32 1
  %arrayidx505 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld504, i32 0, i64 0
  %rtwint506 = bitcast %union.rtunion_def* %arrayidx505 to i64*
  %239 = load i64, i64* %rtwint506, align 8
  %240 = load i64, i64* %pos.addr, align 8
  %cmp507 = icmp eq i64 %239, %240
  br i1 %cmp507, label %if.then.509, label %if.else.510

if.then.509:                                      ; preds = %land.lhs.true.503
  %241 = load %struct.rtx_def*, %struct.rtx_def** %orig_pos_rtx, align 8
  store %struct.rtx_def* %241, %struct.rtx_def** %pos_rtx.addr, align 8
  br label %if.end.516

if.else.510:                                      ; preds = %land.lhs.true.503, %land.lhs.true.500, %if.end.497
  %242 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %cmp511 = icmp eq %struct.rtx_def* %242, null
  br i1 %cmp511, label %if.then.513, label %if.end.515

if.then.513:                                      ; preds = %if.else.510
  %243 = load i64, i64* %pos.addr, align 8
  %call514 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %243)
  store %struct.rtx_def* %call514, %struct.rtx_def** %pos_rtx.addr, align 8
  br label %if.end.515

if.end.515:                                       ; preds = %if.then.513, %if.else.510
  br label %if.end.516

if.end.516:                                       ; preds = %if.end.515, %if.then.509
  %244 = load i32, i32* %unsignedp.addr, align 4
  %tobool517 = icmp ne i32 %244, 0
  %cond518 = select i1 %tobool517, i32 133, i32 132
  %245 = load i32, i32* %extraction_mode, align 4
  %246 = load %struct.rtx_def*, %struct.rtx_def** %inner.addr, align 8
  %247 = load i64, i64* %len.addr, align 8
  %call519 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %247)
  %248 = load %struct.rtx_def*, %struct.rtx_def** %pos_rtx.addr, align 8
  %call520 = call %struct.rtx_def* @gen_rtx_fmt_eee(i32 %cond518, i32 %245, %struct.rtx_def* %246, %struct.rtx_def* %call519, %struct.rtx_def* %248)
  store %struct.rtx_def* %call520, %struct.rtx_def** %new, align 8
  %249 = load i32, i32* %in_dest.addr, align 4
  %tobool521 = icmp ne i32 %249, 0
  br i1 %tobool521, label %if.end.524, label %if.then.522

if.then.522:                                      ; preds = %if.end.516
  %250 = load i32, i32* %mode.addr, align 4
  %251 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %call523 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %250, %struct.rtx_def* %251)
  store %struct.rtx_def* %call523, %struct.rtx_def** %new, align 8
  br label %if.end.524

if.end.524:                                       ; preds = %if.then.522, %if.end.516
  %252 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  store %struct.rtx_def* %252, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %if.end.524, %if.then.410, %if.then.241, %if.then.218, %if.end.200, %if.end.199, %if.then.198, %if.then.170, %if.then.164, %cond.end.159
  %253 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %253
}

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @extract_left_shift(%struct.rtx_def* %x, i32 %count) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %count.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %mode = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load1 = load i32, i32* %3, align 8
  %bf.lshr = lshr i32 %bf.load1, 16
  %bf.clear2 = and i32 %bf.lshr, 255
  store i32 %bf.clear2, i32* %mode, align 4
  %4 = load i32, i32* %code, align 4
  switch i32 %4, label %sw.default [
    i32 87, label %sw.bb
    i32 77, label %sw.bb.23
    i32 86, label %sw.bb.23
    i32 75, label %sw.bb.33
    i32 84, label %sw.bb.33
    i32 85, label %sw.bb.33
    i32 83, label %sw.bb.33
  ]

sw.bb:                                            ; preds = %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load3 = load i32, i32* %7, align 8
  %bf.clear4 = and i32 %bf.load3, 65535
  %cmp = icmp eq i32 %bf.clear4, 54
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %sw.bb
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i32 0, i64 1
  %rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rtx7, align 8
  %fld8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx9 to i64*
  %10 = load i64, i64* %rtwint, align 8
  %11 = load i32, i32* %count.addr, align 4
  %conv = sext i32 %11 to i64
  %cmp10 = icmp sge i64 %10, %conv
  br i1 %cmp10, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %12 = load i32, i32* %mode, align 4
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i32 0, i64 0
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rtx14, align 8
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i32 0, i64 1
  %rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rtx17, align 8
  %fld18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i32 0, i64 0
  %rtwint20 = bitcast %union.rtunion_def* %arrayidx19 to i64*
  %17 = load i64, i64* %rtwint20, align 8
  %18 = load i32, i32* %count.addr, align 4
  %conv21 = sext i32 %18 to i64
  %sub = sub nsw i64 %17, %conv21
  %conv22 = trunc i64 %sub to i32
  %call = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 87, i32 %12, %struct.rtx_def* %14, i32 %conv22)
  store %struct.rtx_def* %call, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %sw.bb
  br label %sw.epilog

sw.bb.23:                                         ; preds = %entry, %entry
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i32 0, i64 0
  %rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rtx26, align 8
  %21 = load i32, i32* %count.addr, align 4
  %call27 = call %struct.rtx_def* @extract_left_shift(%struct.rtx_def* %20, i32 %21)
  store %struct.rtx_def* %call27, %struct.rtx_def** %tem, align 8
  %cmp28 = icmp ne %struct.rtx_def* %call27, null
  br i1 %cmp28, label %if.then.30, label %if.end.32

if.then.30:                                       ; preds = %sw.bb.23
  %22 = load i32, i32* %code, align 4
  %23 = load i32, i32* %mode, align 4
  %24 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %25 = load i32, i32* %mode, align 4
  %call31 = call %struct.rtx_def* @simplify_gen_unary(i32 %22, i32 %23, %struct.rtx_def* %24, i32 %25)
  store %struct.rtx_def* %call31, %struct.rtx_def** %retval
  br label %return

if.end.32:                                        ; preds = %sw.bb.23
  br label %sw.epilog

sw.bb.33:                                         ; preds = %entry, %entry, %entry, %entry
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i32 0, i64 1
  %rtx36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtx_def**
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rtx36, align 8
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load37 = load i32, i32* %28, align 8
  %bf.clear38 = and i32 %bf.load37, 65535
  %cmp39 = icmp eq i32 %bf.clear38, 54
  br i1 %cmp39, label %land.lhs.true.41, label %if.end.68

land.lhs.true.41:                                 ; preds = %sw.bb.33
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i32 0, i64 1
  %rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rtx44, align 8
  %fld45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i32 0, i64 0
  %rtwint47 = bitcast %union.rtunion_def* %arrayidx46 to i64*
  %31 = load i64, i64* %rtwint47, align 8
  %32 = load i32, i32* %count.addr, align 4
  %sh_prom = zext i32 %32 to i64
  %shl = shl i64 1, %sh_prom
  %sub48 = sub nsw i64 %shl, 1
  %and = and i64 %31, %sub48
  %cmp49 = icmp eq i64 %and, 0
  br i1 %cmp49, label %land.lhs.true.51, label %if.end.68

land.lhs.true.51:                                 ; preds = %land.lhs.true.41
  %33 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld52, i32 0, i64 0
  %rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rtx54, align 8
  %35 = load i32, i32* %count.addr, align 4
  %call55 = call %struct.rtx_def* @extract_left_shift(%struct.rtx_def* %34, i32 %35)
  store %struct.rtx_def* %call55, %struct.rtx_def** %tem, align 8
  %cmp56 = icmp ne %struct.rtx_def* %call55, null
  br i1 %cmp56, label %if.then.58, label %if.end.68

if.then.58:                                       ; preds = %land.lhs.true.51
  %36 = load i32, i32* %code, align 4
  %37 = load i32, i32* %mode, align 4
  %38 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %39 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i32 0, i64 1
  %rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rtx61, align 8
  %fld62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1
  %arrayidx63 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld62, i32 0, i64 0
  %rtwint64 = bitcast %union.rtunion_def* %arrayidx63 to i64*
  %41 = load i64, i64* %rtwint64, align 8
  %42 = load i32, i32* %count.addr, align 4
  %sh_prom65 = zext i32 %42 to i64
  %shr = ashr i64 %41, %sh_prom65
  %call66 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %shr)
  %call67 = call %struct.rtx_def* @gen_binary(i32 %36, i32 %37, %struct.rtx_def* %38, %struct.rtx_def* %call66)
  store %struct.rtx_def* %call67, %struct.rtx_def** %retval
  br label %return

if.end.68:                                        ; preds = %land.lhs.true.51, %land.lhs.true.41, %sw.bb.33
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.68, %if.end.32, %if.end
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %sw.epilog, %if.then.58, %if.then.30, %if.then
  %43 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %43
}

declare i32 @rtx_cost(%struct.rtx_def*, i32) #1

declare i32 @mode_for_extraction(i32, i32) #1

declare %struct.rtx_def* @gen_int_mode(i64, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @get_last_value_validate(%struct.rtx_def** %loc, %struct.rtx_def* %insn, i32 %tick, i32 %replace) #0 {
entry:
  %retval = alloca i32, align 4
  %loc.addr = alloca %struct.rtx_def**, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %tick.addr = alloca i32, align 4
  %replace.addr = alloca i32, align 4
  %x = alloca %struct.rtx_def*, align 8
  %fmt = alloca i8*, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %regno = alloca i32, align 4
  %endregno = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store i32 %tick, i32* %tick.addr, align 4
  store i32 %replace, i32* %replace.addr, align 4
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %x, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load = load i32, i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom = sext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom
  %4 = load i8*, i8** %arrayidx, align 8
  store i8* %4, i8** %fmt, align 8
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load1 = load i32, i32* %6, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %idxprom3 = sext i32 %bf.clear2 to i64
  %arrayidx4 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom3
  %7 = load i8, i8* %arrayidx4, align 1
  %conv = zext i8 %7 to i32
  store i32 %conv, i32* %len, align 4
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load5 = load i32, i32* %9, align 8
  %bf.clear6 = and i32 %bf.load5, 65535
  %cmp = icmp eq i32 %bf.clear6, 61
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx8 to i32*
  %11 = load i32, i32* %rtuint, align 4
  store i32 %11, i32* %regno, align 4
  %12 = load i32, i32* %regno, align 4
  %13 = load i32, i32* %regno, align 4
  %cmp9 = icmp ult i32 %13, 53
  br i1 %cmp9, label %cond.true, label %cond.false.81

cond.true:                                        ; preds = %if.then
  %14 = load i32, i32* %regno, align 4
  %cmp11 = icmp uge i32 %14, 8
  br i1 %cmp11, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %cond.true
  %15 = load i32, i32* %regno, align 4
  %cmp13 = icmp ule i32 %15, 15
  br i1 %cmp13, label %cond.true.32, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %cond.true
  %16 = load i32, i32* %regno, align 4
  %cmp15 = icmp uge i32 %16, 21
  br i1 %cmp15, label %land.lhs.true.17, label %lor.lhs.false.20

land.lhs.true.17:                                 ; preds = %lor.lhs.false
  %17 = load i32, i32* %regno, align 4
  %cmp18 = icmp ule i32 %17, 28
  br i1 %cmp18, label %cond.true.32, label %lor.lhs.false.20

lor.lhs.false.20:                                 ; preds = %land.lhs.true.17, %lor.lhs.false
  %18 = load i32, i32* %regno, align 4
  %cmp21 = icmp uge i32 %18, 45
  br i1 %cmp21, label %land.lhs.true.23, label %lor.lhs.false.26

land.lhs.true.23:                                 ; preds = %lor.lhs.false.20
  %19 = load i32, i32* %regno, align 4
  %cmp24 = icmp ule i32 %19, 52
  br i1 %cmp24, label %cond.true.32, label %lor.lhs.false.26

lor.lhs.false.26:                                 ; preds = %land.lhs.true.23, %lor.lhs.false.20
  %20 = load i32, i32* %regno, align 4
  %cmp27 = icmp uge i32 %20, 29
  br i1 %cmp27, label %land.lhs.true.29, label %cond.false

land.lhs.true.29:                                 ; preds = %lor.lhs.false.26
  %21 = load i32, i32* %regno, align 4
  %cmp30 = icmp ule i32 %21, 36
  br i1 %cmp30, label %cond.true.32, label %cond.false

cond.true.32:                                     ; preds = %land.lhs.true.29, %land.lhs.true.23, %land.lhs.true.17, %land.lhs.true
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %23 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load33 = load i32, i32* %23, align 8
  %bf.lshr = lshr i32 %bf.load33, 16
  %bf.clear34 = and i32 %bf.lshr, 255
  %idxprom35 = sext i32 %bf.clear34 to i64
  %arrayidx36 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom35
  %24 = load i32, i32* %arrayidx36, align 4
  %cmp37 = icmp eq i32 %24, 5
  br i1 %cmp37, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.32
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load39 = load i32, i32* %26, align 8
  %bf.lshr40 = lshr i32 %bf.load39, 16
  %bf.clear41 = and i32 %bf.lshr40, 255
  %idxprom42 = sext i32 %bf.clear41 to i64
  %arrayidx43 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom42
  %27 = load i32, i32* %arrayidx43, align 4
  %cmp44 = icmp eq i32 %27, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.32
  %28 = phi i1 [ true, %cond.true.32 ], [ %cmp44, %lor.rhs ]
  %cond = select i1 %28, i32 2, i32 1
  br label %cond.end.79

cond.false:                                       ; preds = %land.lhs.true.29, %lor.lhs.false.26
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load46 = load i32, i32* %30, align 8
  %bf.lshr47 = lshr i32 %bf.load46, 16
  %bf.clear48 = and i32 %bf.lshr47, 255
  %cmp49 = icmp eq i32 %bf.clear48, 18
  br i1 %cmp49, label %cond.true.51, label %cond.false.53

cond.true.51:                                     ; preds = %cond.false
  %31 = load i32, i32* @target_flags, align 4
  %and = and i32 %31, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond52 = select i1 %tobool, i32 2, i32 3
  br label %cond.end.77

cond.false.53:                                    ; preds = %cond.false
  %32 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load54 = load i32, i32* %33, align 8
  %bf.lshr55 = lshr i32 %bf.load54, 16
  %bf.clear56 = and i32 %bf.lshr55, 255
  %cmp57 = icmp eq i32 %bf.clear56, 24
  br i1 %cmp57, label %cond.true.59, label %cond.false.63

cond.true.59:                                     ; preds = %cond.false.53
  %34 = load i32, i32* @target_flags, align 4
  %and60 = and i32 %34, 33554432
  %tobool61 = icmp ne i32 %and60, 0
  %cond62 = select i1 %tobool61, i32 4, i32 6
  br label %cond.end

cond.false.63:                                    ; preds = %cond.false.53
  %35 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %36 = bitcast %struct.rtx_def* %35 to i32*
  %bf.load64 = load i32, i32* %36, align 8
  %bf.lshr65 = lshr i32 %bf.load64, 16
  %bf.clear66 = and i32 %bf.lshr65, 255
  %idxprom67 = sext i32 %bf.clear66 to i64
  %arrayidx68 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom67
  %37 = load i8, i8* %arrayidx68, align 1
  %conv69 = zext i8 %37 to i32
  %38 = load i32, i32* @target_flags, align 4
  %and70 = and i32 %38, 33554432
  %tobool71 = icmp ne i32 %and70, 0
  %cond72 = select i1 %tobool71, i32 8, i32 4
  %add = add nsw i32 %conv69, %cond72
  %sub = sub nsw i32 %add, 1
  %39 = load i32, i32* @target_flags, align 4
  %and73 = and i32 %39, 33554432
  %tobool74 = icmp ne i32 %and73, 0
  %cond75 = select i1 %tobool74, i32 8, i32 4
  %div = sdiv i32 %sub, %cond75
  br label %cond.end

cond.end:                                         ; preds = %cond.false.63, %cond.true.59
  %cond76 = phi i32 [ %cond62, %cond.true.59 ], [ %div, %cond.false.63 ]
  br label %cond.end.77

cond.end.77:                                      ; preds = %cond.end, %cond.true.51
  %cond78 = phi i32 [ %cond52, %cond.true.51 ], [ %cond76, %cond.end ]
  br label %cond.end.79

cond.end.79:                                      ; preds = %cond.end.77, %lor.end
  %cond80 = phi i32 [ %cond, %lor.end ], [ %cond78, %cond.end.77 ]
  br label %cond.end.82

cond.false.81:                                    ; preds = %if.then
  br label %cond.end.82

cond.end.82:                                      ; preds = %cond.false.81, %cond.end.79
  %cond83 = phi i32 [ %cond80, %cond.end.79 ], [ 1, %cond.false.81 ]
  %add84 = add i32 %12, %cond83
  store i32 %add84, i32* %endregno, align 4
  %40 = load i32, i32* %regno, align 4
  store i32 %40, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.82
  %41 = load i32, i32* %j, align 4
  %42 = load i32, i32* %endregno, align 4
  %cmp85 = icmp ult i32 %41, %42
  br i1 %cmp85, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %43 = load i32, i32* %j, align 4
  %idxprom87 = zext i32 %43 to i64
  %44 = load i8*, i8** @reg_last_set_invalid, align 8
  %arrayidx88 = getelementptr inbounds i8, i8* %44, i64 %idxprom87
  %45 = load i8, i8* %arrayidx88, align 1
  %conv89 = sext i8 %45 to i32
  %tobool90 = icmp ne i32 %conv89, 0
  br i1 %tobool90, label %if.then.108, label %lor.lhs.false.91

lor.lhs.false.91:                                 ; preds = %for.body
  %46 = load i32, i32* %regno, align 4
  %cmp92 = icmp uge i32 %46, 53
  br i1 %cmp92, label %land.lhs.true.94, label %land.lhs.true.103

land.lhs.true.94:                                 ; preds = %lor.lhs.false.91
  %47 = load i32, i32* %regno, align 4
  %idxprom95 = zext i32 %47 to i64
  %48 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %48, i32 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx96 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg, i32 0, i64 %idxprom95
  %49 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx96, align 8
  %sets = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %49, i32 0, i32 3
  %50 = load i32, i32* %sets, align 4
  %cmp97 = icmp eq i32 %50, 1
  br i1 %cmp97, label %land.lhs.true.99, label %land.lhs.true.103

land.lhs.true.99:                                 ; preds = %land.lhs.true.94
  %51 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %data100 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %51, i32 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data100 to [1 x %struct.basic_block_def*]*
  %arrayidx101 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %bb, i32 0, i64 0
  %52 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx101, align 8
  %global_live_at_start = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %52, i32 0, i32 8
  %53 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %global_live_at_start, align 8
  %54 = load i32, i32* %regno, align 4
  %call = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %53, i32 %54)
  %tobool102 = icmp ne i32 %call, 0
  br i1 %tobool102, label %land.lhs.true.103, label %if.end.115

land.lhs.true.103:                                ; preds = %land.lhs.true.99, %land.lhs.true.94, %lor.lhs.false.91
  %55 = load i32, i32* %j, align 4
  %idxprom104 = zext i32 %55 to i64
  %56 = load i32*, i32** @reg_last_set_label, align 8
  %arrayidx105 = getelementptr inbounds i32, i32* %56, i64 %idxprom104
  %57 = load i32, i32* %arrayidx105, align 4
  %58 = load i32, i32* %tick.addr, align 4
  %cmp106 = icmp sgt i32 %57, %58
  br i1 %cmp106, label %if.then.108, label %if.end.115

if.then.108:                                      ; preds = %land.lhs.true.103, %for.body
  %59 = load i32, i32* %replace.addr, align 4
  %tobool109 = icmp ne i32 %59, 0
  br i1 %tobool109, label %if.then.110, label %if.end

if.then.110:                                      ; preds = %if.then.108
  %60 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %61 = bitcast %struct.rtx_def* %60 to i32*
  %bf.load111 = load i32, i32* %61, align 8
  %bf.lshr112 = lshr i32 %bf.load111, 16
  %bf.clear113 = and i32 %bf.lshr112, 255
  %62 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %call114 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 %bf.clear113, %struct.rtx_def* %62)
  %63 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  store %struct.rtx_def* %call114, %struct.rtx_def** %63, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.110, %if.then.108
  %64 = load i32, i32* %replace.addr, align 4
  store i32 %64, i32* %retval
  br label %return

if.end.115:                                       ; preds = %land.lhs.true.103, %land.lhs.true.99
  br label %for.inc

for.inc:                                          ; preds = %if.end.115
  %65 = load i32, i32* %j, align 4
  %inc = add i32 %65, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %66 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %67 = bitcast %struct.rtx_def* %66 to i32*
  %bf.load116 = load i32, i32* %67, align 8
  %bf.clear117 = and i32 %bf.load116, 65535
  %cmp118 = icmp eq i32 %bf.clear117, 66
  br i1 %cmp118, label %land.lhs.true.120, label %if.end.150

land.lhs.true.120:                                ; preds = %if.else
  %68 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %69 = bitcast %struct.rtx_def* %68 to i32*
  %bf.load121 = load i32, i32* %69, align 8
  %bf.lshr122 = lshr i32 %bf.load121, 26
  %bf.clear123 = and i32 %bf.lshr122, 1
  %tobool124 = icmp ne i32 %bf.clear123, 0
  br i1 %tobool124, label %if.end.150, label %land.lhs.true.125

land.lhs.true.125:                                ; preds = %land.lhs.true.120
  %70 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld126 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx127 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld126, i32 0, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx127 to i32*
  %71 = load i32, i32* %rtint, align 4
  %72 = load i32, i32* @max_uid_cuid, align 4
  %cmp128 = icmp sgt i32 %71, %72
  br i1 %cmp128, label %cond.true.130, label %cond.false.132

cond.true.130:                                    ; preds = %land.lhs.true.125
  %73 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call131 = call i32 @insn_cuid(%struct.rtx_def* %73)
  br label %cond.end.138

cond.false.132:                                   ; preds = %land.lhs.true.125
  %74 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld133 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1
  %arrayidx134 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld133, i32 0, i64 0
  %rtint135 = bitcast %union.rtunion_def* %arrayidx134 to i32*
  %75 = load i32, i32* %rtint135, align 4
  %idxprom136 = sext i32 %75 to i64
  %76 = load i32*, i32** @uid_cuid, align 8
  %arrayidx137 = getelementptr inbounds i32, i32* %76, i64 %idxprom136
  %77 = load i32, i32* %arrayidx137, align 4
  br label %cond.end.138

cond.end.138:                                     ; preds = %cond.false.132, %cond.true.130
  %cond139 = phi i32 [ %call131, %cond.true.130 ], [ %77, %cond.false.132 ]
  %78 = load i32, i32* @mem_last_set, align 4
  %cmp140 = icmp sle i32 %cond139, %78
  br i1 %cmp140, label %if.then.142, label %if.end.150

if.then.142:                                      ; preds = %cond.end.138
  %79 = load i32, i32* %replace.addr, align 4
  %tobool143 = icmp ne i32 %79, 0
  br i1 %tobool143, label %if.then.144, label %if.end.149

if.then.144:                                      ; preds = %if.then.142
  %80 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %81 = bitcast %struct.rtx_def* %80 to i32*
  %bf.load145 = load i32, i32* %81, align 8
  %bf.lshr146 = lshr i32 %bf.load145, 16
  %bf.clear147 = and i32 %bf.lshr146, 255
  %82 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %call148 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 %bf.clear147, %struct.rtx_def* %82)
  %83 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  store %struct.rtx_def* %call148, %struct.rtx_def** %83, align 8
  br label %if.end.149

if.end.149:                                       ; preds = %if.then.144, %if.then.142
  %84 = load i32, i32* %replace.addr, align 4
  store i32 %84, i32* %retval
  br label %return

if.end.150:                                       ; preds = %cond.end.138, %land.lhs.true.120, %if.else
  br label %if.end.151

if.end.151:                                       ; preds = %if.end.150
  store i32 0, i32* %i, align 4
  br label %for.cond.152

for.cond.152:                                     ; preds = %for.inc.176, %if.end.151
  %85 = load i32, i32* %i, align 4
  %86 = load i32, i32* %len, align 4
  %cmp153 = icmp slt i32 %85, %86
  br i1 %cmp153, label %for.body.155, label %for.end.178

for.body.155:                                     ; preds = %for.cond.152
  %87 = load i32, i32* %i, align 4
  %idxprom156 = sext i32 %87 to i64
  %88 = load i8*, i8** %fmt, align 8
  %arrayidx157 = getelementptr inbounds i8, i8* %88, i64 %idxprom156
  %89 = load i8, i8* %arrayidx157, align 1
  %conv158 = sext i8 %89 to i32
  %cmp159 = icmp eq i32 %conv158, 101
  br i1 %cmp159, label %land.lhs.true.161, label %lor.lhs.false.168

land.lhs.true.161:                                ; preds = %for.body.155
  %90 = load i32, i32* %i, align 4
  %idxprom162 = sext i32 %90 to i64
  %91 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld163 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1
  %arrayidx164 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld163, i32 0, i64 %idxprom162
  %rtx = bitcast %union.rtunion_def* %arrayidx164 to %struct.rtx_def**
  %92 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %93 = load i32, i32* %tick.addr, align 4
  %94 = load i32, i32* %replace.addr, align 4
  %call165 = call i32 @get_last_value_validate(%struct.rtx_def** %rtx, %struct.rtx_def* %92, i32 %93, i32 %94)
  %cmp166 = icmp eq i32 %call165, 0
  br i1 %cmp166, label %if.then.174, label %lor.lhs.false.168

lor.lhs.false.168:                                ; preds = %land.lhs.true.161, %for.body.155
  %95 = load i32, i32* %i, align 4
  %idxprom169 = sext i32 %95 to i64
  %96 = load i8*, i8** %fmt, align 8
  %arrayidx170 = getelementptr inbounds i8, i8* %96, i64 %idxprom169
  %97 = load i8, i8* %arrayidx170, align 1
  %conv171 = sext i8 %97 to i32
  %cmp172 = icmp eq i32 %conv171, 69
  br i1 %cmp172, label %if.then.174, label %if.end.175

if.then.174:                                      ; preds = %lor.lhs.false.168, %land.lhs.true.161
  store i32 0, i32* %retval
  br label %return

if.end.175:                                       ; preds = %lor.lhs.false.168
  br label %for.inc.176

for.inc.176:                                      ; preds = %if.end.175
  %98 = load i32, i32* %i, align 4
  %inc177 = add nsw i32 %98, 1
  store i32 %inc177, i32* %i, align 4
  br label %for.cond.152

for.end.178:                                      ; preds = %for.cond.152
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %for.end.178, %if.then.174, %if.end.149, %for.end, %if.end
  %99 = load i32, i32* %retval
  ret i32 %99
}

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @known_cond(%struct.rtx_def* %x, i32 %cond, %struct.rtx_def* %reg, %struct.rtx_def* %val) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %cond.addr = alloca i32, align 4
  %reg.addr = alloca %struct.rtx_def*, align 8
  %val.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %temp = alloca %struct.rtx_def*, align 8
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %unsignedp = alloca i32, align 4
  %inner_mode = alloca i32, align 4
  %new = alloca %struct.rtx_def*, align 8
  %r = alloca %struct.rtx_def*, align 8
  %inner_mode233 = alloca i32, align 4
  %new240 = alloca %struct.rtx_def*, align 8
  %r241 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %cond, i32* %cond.addr, align 4
  store %struct.rtx_def* %reg, %struct.rtx_def** %reg.addr, align 8
  store %struct.rtx_def* %val, %struct.rtx_def** %val.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call = call i32 @side_effects_p(%struct.rtx_def* %2)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %cond.addr, align 4
  %cmp = icmp eq i32 %4, 103
  br i1 %cmp, label %land.lhs.true, label %if.end.42

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %6 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %call1 = call i32 @rtx_equal_p(%struct.rtx_def* %5, %struct.rtx_def* %6)
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %land.lhs.true.3, label %if.end.42

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load4 = load i32, i32* %8, align 8
  %bf.lshr = lshr i32 %bf.load4, 16
  %bf.clear5 = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear5 to i64
  %arrayidx = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %9 = load i32, i32* %arrayidx, align 4
  %cmp6 = icmp eq i32 %9, 2
  br i1 %cmp6, label %if.end.42, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.3
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load7 = load i32, i32* %11, align 8
  %bf.lshr8 = lshr i32 %bf.load7, 16
  %bf.clear9 = and i32 %bf.lshr8, 255
  %idxprom10 = sext i32 %bf.clear9 to i64
  %arrayidx11 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom10
  %12 = load i32, i32* %arrayidx11, align 4
  %cmp12 = icmp eq i32 %12, 6
  br i1 %cmp12, label %if.end.42, label %lor.lhs.false.13

lor.lhs.false.13:                                 ; preds = %lor.lhs.false
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load14 = load i32, i32* %14, align 8
  %bf.lshr15 = lshr i32 %bf.load14, 16
  %bf.clear16 = and i32 %bf.lshr15, 255
  %idxprom17 = sext i32 %bf.clear16 to i64
  %arrayidx18 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom17
  %15 = load i32, i32* %arrayidx18, align 4
  %cmp19 = icmp eq i32 %15, 8
  br i1 %cmp19, label %if.end.42, label %land.lhs.true.20

land.lhs.true.20:                                 ; preds = %lor.lhs.false.13
  %16 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load21 = load i32, i32* %17, align 8
  %bf.lshr22 = lshr i32 %bf.load21, 16
  %bf.clear23 = and i32 %bf.lshr22, 255
  %idxprom24 = sext i32 %bf.clear23 to i64
  %arrayidx25 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom24
  %18 = load i32, i32* %arrayidx25, align 4
  %cmp26 = icmp eq i32 %18, 2
  br i1 %cmp26, label %if.end.42, label %lor.lhs.false.27

lor.lhs.false.27:                                 ; preds = %land.lhs.true.20
  %19 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load28 = load i32, i32* %20, align 8
  %bf.lshr29 = lshr i32 %bf.load28, 16
  %bf.clear30 = and i32 %bf.lshr29, 255
  %idxprom31 = sext i32 %bf.clear30 to i64
  %arrayidx32 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom31
  %21 = load i32, i32* %arrayidx32, align 4
  %cmp33 = icmp eq i32 %21, 6
  br i1 %cmp33, label %if.end.42, label %lor.lhs.false.34

lor.lhs.false.34:                                 ; preds = %lor.lhs.false.27
  %22 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8
  %23 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load35 = load i32, i32* %23, align 8
  %bf.lshr36 = lshr i32 %bf.load35, 16
  %bf.clear37 = and i32 %bf.lshr36, 255
  %idxprom38 = sext i32 %bf.clear37 to i64
  %arrayidx39 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom38
  %24 = load i32, i32* %arrayidx39, align 4
  %cmp40 = icmp eq i32 %24, 8
  br i1 %cmp40, label %if.end.42, label %if.then.41

if.then.41:                                       ; preds = %lor.lhs.false.34
  %25 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8
  store %struct.rtx_def* %25, %struct.rtx_def** %retval
  br label %return

if.end.42:                                        ; preds = %lor.lhs.false.34, %lor.lhs.false.27, %land.lhs.true.20, %lor.lhs.false.13, %lor.lhs.false, %land.lhs.true.3, %land.lhs.true, %if.end
  %26 = load i32, i32* %cond.addr, align 4
  %cmp43 = icmp eq i32 %26, 114
  br i1 %cmp43, label %land.lhs.true.44, label %if.end.48

land.lhs.true.44:                                 ; preds = %if.end.42
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %28 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %call45 = call i32 @rtx_equal_p(%struct.rtx_def* %27, %struct.rtx_def* %28)
  %tobool46 = icmp ne i32 %call45, 0
  br i1 %tobool46, label %if.then.47, label %if.end.48

if.then.47:                                       ; preds = %land.lhs.true.44
  %29 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8
  store %struct.rtx_def* %29, %struct.rtx_def** %retval
  br label %return

if.end.48:                                        ; preds = %land.lhs.true.44, %if.end.42
  %30 = load i32, i32* %code, align 4
  %cmp49 = icmp eq i32 %30, 129
  br i1 %cmp49, label %land.lhs.true.50, label %if.else

land.lhs.true.50:                                 ; preds = %if.end.48
  %31 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %33 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %call52 = call i32 @rtx_equal_p(%struct.rtx_def* %32, %struct.rtx_def* %33)
  %tobool53 = icmp ne i32 %call52, 0
  br i1 %tobool53, label %land.lhs.true.54, label %if.else

land.lhs.true.54:                                 ; preds = %land.lhs.true.50
  %34 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8
  %35 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp55 = icmp eq %struct.rtx_def* %34, %35
  br i1 %cmp55, label %if.then.56, label %if.else

if.then.56:                                       ; preds = %land.lhs.true.54
  %36 = load i32, i32* %cond.addr, align 4
  switch i32 %36, label %sw.default [
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 103, label %sw.bb
    i32 107, label %sw.bb.60
    i32 106, label %sw.bb.60
  ]

sw.bb:                                            ; preds = %if.then.56, %if.then.56, %if.then.56
  %37 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1
  %arrayidx58 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld57, i32 0, i64 0
  %rtx59 = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rtx59, align 8
  store %struct.rtx_def* %38, %struct.rtx_def** %retval
  br label %return

sw.bb.60:                                         ; preds = %if.then.56, %if.then.56
  %39 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i32 0, i64 0
  %rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rtx63, align 8
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load64 = load i32, i32* %41, align 8
  %bf.lshr65 = lshr i32 %bf.load64, 16
  %bf.clear66 = and i32 %bf.lshr65, 255
  %42 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i32 0, i64 0
  %rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rtx69, align 8
  %44 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i32 0, i64 0
  %rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rtx72, align 8
  %46 = bitcast %struct.rtx_def* %45 to i32*
  %bf.load73 = load i32, i32* %46, align 8
  %bf.lshr74 = lshr i32 %bf.load73, 16
  %bf.clear75 = and i32 %bf.lshr74, 255
  %call76 = call %struct.rtx_def* @simplify_gen_unary(i32 77, i32 %bf.clear66, %struct.rtx_def* %43, i32 %bf.clear75)
  store %struct.rtx_def* %call76, %struct.rtx_def** %retval
  br label %return

sw.default:                                       ; preds = %if.then.56
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  br label %if.end.267

if.else:                                          ; preds = %land.lhs.true.54, %land.lhs.true.50, %if.end.48
  %47 = load i32, i32* %code, align 4
  %idxprom77 = sext i32 %47 to i64
  %arrayidx78 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom77
  %48 = load i8, i8* %arrayidx78, align 1
  %conv = sext i8 %48 to i32
  %cmp79 = icmp eq i32 %conv, 60
  br i1 %cmp79, label %if.then.87, label %lor.lhs.false.81

lor.lhs.false.81:                                 ; preds = %if.else
  %49 = load i32, i32* %code, align 4
  %idxprom82 = sext i32 %49 to i64
  %arrayidx83 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom82
  %50 = load i8, i8* %arrayidx83, align 1
  %conv84 = sext i8 %50 to i32
  %cmp85 = icmp eq i32 %conv84, 99
  br i1 %cmp85, label %if.then.87, label %if.else.195

if.then.87:                                       ; preds = %lor.lhs.false.81, %if.else
  %51 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %arrayidx89 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld88, i32 0, i64 0
  %rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rtx90, align 8
  %53 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8
  %call91 = call i32 @rtx_equal_p(%struct.rtx_def* %52, %struct.rtx_def* %53)
  %tobool92 = icmp ne i32 %call91, 0
  br i1 %tobool92, label %if.then.93, label %if.end.95

if.then.93:                                       ; preds = %if.then.87
  %54 = load i32, i32* %cond.addr, align 4
  %call94 = call i32 @swap_condition(i32 %54)
  store i32 %call94, i32* %cond.addr, align 4
  %55 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8
  store %struct.rtx_def* %55, %struct.rtx_def** %temp, align 8
  %56 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  store %struct.rtx_def* %56, %struct.rtx_def** %val.addr, align 8
  %57 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  store %struct.rtx_def* %57, %struct.rtx_def** %reg.addr, align 8
  br label %if.end.95

if.end.95:                                        ; preds = %if.then.93, %if.then.87
  %58 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1
  %arrayidx97 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld96, i32 0, i64 0
  %rtx98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtx_def**
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rtx98, align 8
  %60 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %call99 = call i32 @rtx_equal_p(%struct.rtx_def* %59, %struct.rtx_def* %60)
  %tobool100 = icmp ne i32 %call99, 0
  br i1 %tobool100, label %land.lhs.true.101, label %if.end.194

land.lhs.true.101:                                ; preds = %if.end.95
  %61 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i32 0, i64 1
  %rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rtx104, align 8
  %63 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8
  %call105 = call i32 @rtx_equal_p(%struct.rtx_def* %62, %struct.rtx_def* %63)
  %tobool106 = icmp ne i32 %call105, 0
  br i1 %tobool106, label %if.then.107, label %if.end.194

if.then.107:                                      ; preds = %land.lhs.true.101
  %64 = load i32, i32* %code, align 4
  %idxprom108 = sext i32 %64 to i64
  %arrayidx109 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom108
  %65 = load i8, i8* %arrayidx109, align 1
  %conv110 = sext i8 %65 to i32
  %cmp111 = icmp eq i32 %conv110, 60
  br i1 %cmp111, label %if.then.113, label %if.else.126

if.then.113:                                      ; preds = %if.then.107
  %66 = load i32, i32* %cond.addr, align 4
  %67 = load i32, i32* %code, align 4
  %call114 = call i32 @comparison_dominates_p(i32 %66, i32 %67)
  %tobool115 = icmp ne i32 %call114, 0
  br i1 %tobool115, label %if.then.116, label %if.end.117

if.then.116:                                      ; preds = %if.then.113
  %68 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8
  store %struct.rtx_def* %68, %struct.rtx_def** %retval
  br label %return

if.end.117:                                       ; preds = %if.then.113
  %69 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call118 = call i32 @combine_reversed_comparison_code(%struct.rtx_def* %69)
  store i32 %call118, i32* %code, align 4
  %70 = load i32, i32* %code, align 4
  %cmp119 = icmp ne i32 %70, 0
  br i1 %cmp119, label %land.lhs.true.121, label %if.else.125

land.lhs.true.121:                                ; preds = %if.end.117
  %71 = load i32, i32* %cond.addr, align 4
  %72 = load i32, i32* %code, align 4
  %call122 = call i32 @comparison_dominates_p(i32 %71, i32 %72)
  %tobool123 = icmp ne i32 %call122, 0
  br i1 %tobool123, label %if.then.124, label %if.else.125

if.then.124:                                      ; preds = %land.lhs.true.121
  %73 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %73, %struct.rtx_def** %retval
  br label %return

if.else.125:                                      ; preds = %land.lhs.true.121, %if.end.117
  %74 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %74, %struct.rtx_def** %retval
  br label %return

if.else.126:                                      ; preds = %if.then.107
  %75 = load i32, i32* %code, align 4
  %cmp127 = icmp eq i32 %75, 93
  br i1 %cmp127, label %if.then.138, label %lor.lhs.false.129

lor.lhs.false.129:                                ; preds = %if.else.126
  %76 = load i32, i32* %code, align 4
  %cmp130 = icmp eq i32 %76, 92
  br i1 %cmp130, label %if.then.138, label %lor.lhs.false.132

lor.lhs.false.132:                                ; preds = %lor.lhs.false.129
  %77 = load i32, i32* %code, align 4
  %cmp133 = icmp eq i32 %77, 94
  br i1 %cmp133, label %if.then.138, label %lor.lhs.false.135

lor.lhs.false.135:                                ; preds = %lor.lhs.false.132
  %78 = load i32, i32* %code, align 4
  %cmp136 = icmp eq i32 %78, 95
  br i1 %cmp136, label %if.then.138, label %if.end.192

if.then.138:                                      ; preds = %lor.lhs.false.135, %lor.lhs.false.132, %lor.lhs.false.129, %if.else.126
  %79 = load i32, i32* %code, align 4
  %cmp139 = icmp eq i32 %79, 94
  br i1 %cmp139, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then.138
  %80 = load i32, i32* %code, align 4
  %cmp141 = icmp eq i32 %80, 95
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.then.138
  %81 = phi i1 [ true, %if.then.138 ], [ %cmp141, %lor.rhs ]
  %lor.ext = zext i1 %81 to i32
  store i32 %lor.ext, i32* %unsignedp, align 4
  %82 = load i32, i32* %code, align 4
  %cmp143 = icmp eq i32 %82, 93
  br i1 %cmp143, label %land.lhs.true.148, label %lor.lhs.false.145

lor.lhs.false.145:                                ; preds = %lor.end
  %83 = load i32, i32* %code, align 4
  %cmp146 = icmp eq i32 %83, 95
  br i1 %cmp146, label %land.lhs.true.148, label %if.end.156

land.lhs.true.148:                                ; preds = %lor.lhs.false.145, %lor.end
  %84 = load i32, i32* %cond.addr, align 4
  %cmp149 = icmp eq i32 %84, 103
  br i1 %cmp149, label %if.end.156, label %lor.lhs.false.151

lor.lhs.false.151:                                ; preds = %land.lhs.true.148
  %85 = load i32, i32* %cond.addr, align 4
  %cmp152 = icmp eq i32 %85, 102
  br i1 %cmp152, label %if.end.156, label %if.then.154

if.then.154:                                      ; preds = %lor.lhs.false.151
  %86 = load i32, i32* %cond.addr, align 4
  %call155 = call i32 @reverse_condition(i32 %86)
  store i32 %call155, i32* %cond.addr, align 4
  br label %if.end.156

if.end.156:                                       ; preds = %if.then.154, %lor.lhs.false.151, %land.lhs.true.148, %lor.lhs.false.145
  %87 = load i32, i32* %cond.addr, align 4
  switch i32 %87, label %sw.default.190 [
    i32 104, label %sw.bb.157
    i32 105, label %sw.bb.157
    i32 106, label %sw.bb.163
    i32 107, label %sw.bb.163
    i32 108, label %sw.bb.172
    i32 109, label %sw.bb.172
    i32 110, label %sw.bb.181
    i32 111, label %sw.bb.181
  ]

sw.bb.157:                                        ; preds = %if.end.156, %if.end.156
  %88 = load i32, i32* %unsignedp, align 4
  %tobool158 = icmp ne i32 %88, 0
  br i1 %tobool158, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.bb.157
  %89 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  br label %cond.end

cond.false:                                       ; preds = %sw.bb.157
  %90 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1
  %arrayidx160 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld159, i32 0, i64 1
  %rtx161 = bitcast %union.rtunion_def* %arrayidx160 to %struct.rtx_def**
  %91 = load %struct.rtx_def*, %struct.rtx_def** %rtx161, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond162 = phi %struct.rtx_def* [ %89, %cond.true ], [ %91, %cond.false ]
  store %struct.rtx_def* %cond162, %struct.rtx_def** %retval
  br label %return

sw.bb.163:                                        ; preds = %if.end.156, %if.end.156
  %92 = load i32, i32* %unsignedp, align 4
  %tobool164 = icmp ne i32 %92, 0
  br i1 %tobool164, label %cond.true.165, label %cond.false.166

cond.true.165:                                    ; preds = %sw.bb.163
  %93 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  br label %cond.end.170

cond.false.166:                                   ; preds = %sw.bb.163
  %94 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld167 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1
  %arrayidx168 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld167, i32 0, i64 0
  %rtx169 = bitcast %union.rtunion_def* %arrayidx168 to %struct.rtx_def**
  %95 = load %struct.rtx_def*, %struct.rtx_def** %rtx169, align 8
  br label %cond.end.170

cond.end.170:                                     ; preds = %cond.false.166, %cond.true.165
  %cond171 = phi %struct.rtx_def* [ %93, %cond.true.165 ], [ %95, %cond.false.166 ]
  store %struct.rtx_def* %cond171, %struct.rtx_def** %retval
  br label %return

sw.bb.172:                                        ; preds = %if.end.156, %if.end.156
  %96 = load i32, i32* %unsignedp, align 4
  %tobool173 = icmp ne i32 %96, 0
  br i1 %tobool173, label %cond.true.174, label %cond.false.178

cond.true.174:                                    ; preds = %sw.bb.172
  %97 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld175 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %97, i32 0, i32 1
  %arrayidx176 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld175, i32 0, i64 1
  %rtx177 = bitcast %union.rtunion_def* %arrayidx176 to %struct.rtx_def**
  %98 = load %struct.rtx_def*, %struct.rtx_def** %rtx177, align 8
  br label %cond.end.179

cond.false.178:                                   ; preds = %sw.bb.172
  %99 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  br label %cond.end.179

cond.end.179:                                     ; preds = %cond.false.178, %cond.true.174
  %cond180 = phi %struct.rtx_def* [ %98, %cond.true.174 ], [ %99, %cond.false.178 ]
  store %struct.rtx_def* %cond180, %struct.rtx_def** %retval
  br label %return

sw.bb.181:                                        ; preds = %if.end.156, %if.end.156
  %100 = load i32, i32* %unsignedp, align 4
  %tobool182 = icmp ne i32 %100, 0
  br i1 %tobool182, label %cond.true.183, label %cond.false.187

cond.true.183:                                    ; preds = %sw.bb.181
  %101 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i32 0, i32 1
  %arrayidx185 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld184, i32 0, i64 0
  %rtx186 = bitcast %union.rtunion_def* %arrayidx185 to %struct.rtx_def**
  %102 = load %struct.rtx_def*, %struct.rtx_def** %rtx186, align 8
  br label %cond.end.188

cond.false.187:                                   ; preds = %sw.bb.181
  %103 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  br label %cond.end.188

cond.end.188:                                     ; preds = %cond.false.187, %cond.true.183
  %cond189 = phi %struct.rtx_def* [ %102, %cond.true.183 ], [ %103, %cond.false.187 ]
  store %struct.rtx_def* %cond189, %struct.rtx_def** %retval
  br label %return

sw.default.190:                                   ; preds = %if.end.156
  br label %sw.epilog.191

sw.epilog.191:                                    ; preds = %sw.default.190
  br label %if.end.192

if.end.192:                                       ; preds = %sw.epilog.191, %lor.lhs.false.135
  br label %if.end.193

if.end.193:                                       ; preds = %if.end.192
  br label %if.end.194

if.end.194:                                       ; preds = %if.end.193, %land.lhs.true.101, %if.end.95
  br label %if.end.266

if.else.195:                                      ; preds = %lor.lhs.false.81
  %104 = load i32, i32* %code, align 4
  %cmp196 = icmp eq i32 %104, 63
  br i1 %cmp196, label %if.then.198, label %if.else.229

if.then.198:                                      ; preds = %if.else.195
  %105 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld199 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1
  %arrayidx200 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld199, i32 0, i64 0
  %rtx201 = bitcast %union.rtunion_def* %arrayidx200 to %struct.rtx_def**
  %106 = load %struct.rtx_def*, %struct.rtx_def** %rtx201, align 8
  %107 = bitcast %struct.rtx_def* %106 to i32*
  %bf.load202 = load i32, i32* %107, align 8
  %bf.lshr203 = lshr i32 %bf.load202, 16
  %bf.clear204 = and i32 %bf.lshr203, 255
  store i32 %bf.clear204, i32* %inner_mode, align 4
  %108 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld205 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1
  %arrayidx206 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld205, i32 0, i64 0
  %rtx207 = bitcast %union.rtunion_def* %arrayidx206 to %struct.rtx_def**
  %109 = load %struct.rtx_def*, %struct.rtx_def** %rtx207, align 8
  %110 = load i32, i32* %cond.addr, align 4
  %111 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %112 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8
  %call208 = call %struct.rtx_def* @known_cond(%struct.rtx_def* %109, i32 %110, %struct.rtx_def* %111, %struct.rtx_def* %112)
  store %struct.rtx_def* %call208, %struct.rtx_def** %r, align 8
  %113 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld209 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %113, i32 0, i32 1
  %arrayidx210 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld209, i32 0, i64 0
  %rtx211 = bitcast %union.rtunion_def* %arrayidx210 to %struct.rtx_def**
  %114 = load %struct.rtx_def*, %struct.rtx_def** %rtx211, align 8
  %115 = load %struct.rtx_def*, %struct.rtx_def** %r, align 8
  %cmp212 = icmp ne %struct.rtx_def* %114, %115
  br i1 %cmp212, label %if.then.214, label %if.end.228

if.then.214:                                      ; preds = %if.then.198
  %116 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %117 = bitcast %struct.rtx_def* %116 to i32*
  %bf.load215 = load i32, i32* %117, align 8
  %bf.lshr216 = lshr i32 %bf.load215, 16
  %bf.clear217 = and i32 %bf.lshr216, 255
  %118 = load %struct.rtx_def*, %struct.rtx_def** %r, align 8
  %119 = load i32, i32* %inner_mode, align 4
  %120 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld218 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1
  %arrayidx219 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld218, i32 0, i64 1
  %rtuint = bitcast %union.rtunion_def* %arrayidx219 to i32*
  %121 = load i32, i32* %rtuint, align 4
  %call220 = call %struct.rtx_def* @simplify_subreg(i32 %bf.clear217, %struct.rtx_def* %118, i32 %119, i32 %121)
  store %struct.rtx_def* %call220, %struct.rtx_def** %new, align 8
  %122 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %tobool221 = icmp ne %struct.rtx_def* %122, null
  br i1 %tobool221, label %if.then.222, label %if.else.223

if.then.222:                                      ; preds = %if.then.214
  %123 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  store %struct.rtx_def* %123, %struct.rtx_def** %retval
  br label %return

if.else.223:                                      ; preds = %if.then.214
  %124 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld224 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1
  %arrayidx225 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld224, i32 0, i64 0
  %rtx226 = bitcast %union.rtunion_def* %arrayidx225 to %struct.rtx_def**
  %125 = load %struct.rtx_def*, %struct.rtx_def** %r, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx226, %struct.rtx_def* %125)
  br label %if.end.227

if.end.227:                                       ; preds = %if.else.223
  br label %if.end.228

if.end.228:                                       ; preds = %if.end.227, %if.then.198
  %126 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %126, %struct.rtx_def** %retval
  br label %return

if.else.229:                                      ; preds = %if.else.195
  %127 = load i32, i32* %code, align 4
  %cmp230 = icmp eq i32 %127, 121
  br i1 %cmp230, label %if.then.232, label %if.end.264

if.then.232:                                      ; preds = %if.else.229
  %128 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld234 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1
  %arrayidx235 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld234, i32 0, i64 0
  %rtx236 = bitcast %union.rtunion_def* %arrayidx235 to %struct.rtx_def**
  %129 = load %struct.rtx_def*, %struct.rtx_def** %rtx236, align 8
  %130 = bitcast %struct.rtx_def* %129 to i32*
  %bf.load237 = load i32, i32* %130, align 8
  %bf.lshr238 = lshr i32 %bf.load237, 16
  %bf.clear239 = and i32 %bf.lshr238, 255
  store i32 %bf.clear239, i32* %inner_mode233, align 4
  %131 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld242 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i32 0, i32 1
  %arrayidx243 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld242, i32 0, i64 0
  %rtx244 = bitcast %union.rtunion_def* %arrayidx243 to %struct.rtx_def**
  %132 = load %struct.rtx_def*, %struct.rtx_def** %rtx244, align 8
  %133 = load i32, i32* %cond.addr, align 4
  %134 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %135 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8
  %call245 = call %struct.rtx_def* @known_cond(%struct.rtx_def* %132, i32 %133, %struct.rtx_def* %134, %struct.rtx_def* %135)
  store %struct.rtx_def* %call245, %struct.rtx_def** %r241, align 8
  %136 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld246 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1
  %arrayidx247 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld246, i32 0, i64 0
  %rtx248 = bitcast %union.rtunion_def* %arrayidx247 to %struct.rtx_def**
  %137 = load %struct.rtx_def*, %struct.rtx_def** %rtx248, align 8
  %138 = load %struct.rtx_def*, %struct.rtx_def** %r241, align 8
  %cmp249 = icmp ne %struct.rtx_def* %137, %138
  br i1 %cmp249, label %if.then.251, label %if.end.263

if.then.251:                                      ; preds = %if.then.232
  %139 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %140 = bitcast %struct.rtx_def* %139 to i32*
  %bf.load252 = load i32, i32* %140, align 8
  %bf.lshr253 = lshr i32 %bf.load252, 16
  %bf.clear254 = and i32 %bf.lshr253, 255
  %141 = load %struct.rtx_def*, %struct.rtx_def** %r241, align 8
  %142 = load i32, i32* %inner_mode233, align 4
  %call255 = call %struct.rtx_def* @simplify_unary_operation(i32 121, i32 %bf.clear254, %struct.rtx_def* %141, i32 %142)
  store %struct.rtx_def* %call255, %struct.rtx_def** %new240, align 8
  %143 = load %struct.rtx_def*, %struct.rtx_def** %new240, align 8
  %tobool256 = icmp ne %struct.rtx_def* %143, null
  br i1 %tobool256, label %if.then.257, label %if.else.258

if.then.257:                                      ; preds = %if.then.251
  %144 = load %struct.rtx_def*, %struct.rtx_def** %new240, align 8
  store %struct.rtx_def* %144, %struct.rtx_def** %retval
  br label %return

if.else.258:                                      ; preds = %if.then.251
  %145 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld259 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %145, i32 0, i32 1
  %arrayidx260 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld259, i32 0, i64 0
  %rtx261 = bitcast %union.rtunion_def* %arrayidx260 to %struct.rtx_def**
  %146 = load %struct.rtx_def*, %struct.rtx_def** %r241, align 8
  call void @do_SUBST(%struct.rtx_def** %rtx261, %struct.rtx_def* %146)
  br label %if.end.262

if.end.262:                                       ; preds = %if.else.258
  br label %if.end.263

if.end.263:                                       ; preds = %if.end.262, %if.then.232
  %147 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %147, %struct.rtx_def** %retval
  br label %return

if.end.264:                                       ; preds = %if.else.229
  br label %if.end.265

if.end.265:                                       ; preds = %if.end.264
  br label %if.end.266

if.end.266:                                       ; preds = %if.end.265, %if.end.194
  br label %if.end.267

if.end.267:                                       ; preds = %if.end.266, %sw.epilog
  %148 = load i32, i32* %code, align 4
  %idxprom268 = sext i32 %148 to i64
  %arrayidx269 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom268
  %149 = load i8*, i8** %arrayidx269, align 8
  store i8* %149, i8** %fmt, align 8
  %150 = load i32, i32* %code, align 4
  %idxprom270 = sext i32 %150 to i64
  %arrayidx271 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom270
  %151 = load i8, i8* %arrayidx271, align 1
  %conv272 = zext i8 %151 to i32
  %sub = sub nsw i32 %conv272, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.321, %if.end.267
  %152 = load i32, i32* %i, align 4
  %cmp273 = icmp sge i32 %152, 0
  br i1 %cmp273, label %for.body, label %for.end.323

for.body:                                         ; preds = %for.cond
  %153 = load i32, i32* %i, align 4
  %idxprom275 = sext i32 %153 to i64
  %154 = load i8*, i8** %fmt, align 8
  %arrayidx276 = getelementptr inbounds i8, i8* %154, i64 %idxprom275
  %155 = load i8, i8* %arrayidx276, align 1
  %conv277 = sext i8 %155 to i32
  %cmp278 = icmp eq i32 %conv277, 101
  br i1 %cmp278, label %if.then.280, label %if.else.290

if.then.280:                                      ; preds = %for.body
  %156 = load i32, i32* %i, align 4
  %idxprom281 = sext i32 %156 to i64
  %157 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld282 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %157, i32 0, i32 1
  %arrayidx283 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld282, i32 0, i64 %idxprom281
  %rtx284 = bitcast %union.rtunion_def* %arrayidx283 to %struct.rtx_def**
  %158 = load i32, i32* %i, align 4
  %idxprom285 = sext i32 %158 to i64
  %159 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld286 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1
  %arrayidx287 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld286, i32 0, i64 %idxprom285
  %rtx288 = bitcast %union.rtunion_def* %arrayidx287 to %struct.rtx_def**
  %160 = load %struct.rtx_def*, %struct.rtx_def** %rtx288, align 8
  %161 = load i32, i32* %cond.addr, align 4
  %162 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %163 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8
  %call289 = call %struct.rtx_def* @known_cond(%struct.rtx_def* %160, i32 %161, %struct.rtx_def* %162, %struct.rtx_def* %163)
  call void @do_SUBST(%struct.rtx_def** %rtx284, %struct.rtx_def* %call289)
  br label %if.end.320

if.else.290:                                      ; preds = %for.body
  %164 = load i32, i32* %i, align 4
  %idxprom291 = sext i32 %164 to i64
  %165 = load i8*, i8** %fmt, align 8
  %arrayidx292 = getelementptr inbounds i8, i8* %165, i64 %idxprom291
  %166 = load i8, i8* %arrayidx292, align 1
  %conv293 = sext i8 %166 to i32
  %cmp294 = icmp eq i32 %conv293, 69
  br i1 %cmp294, label %if.then.296, label %if.end.319

if.then.296:                                      ; preds = %if.else.290
  %167 = load i32, i32* %i, align 4
  %idxprom297 = sext i32 %167 to i64
  %168 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld298 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %168, i32 0, i32 1
  %arrayidx299 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld298, i32 0, i64 %idxprom297
  %rtvec = bitcast %union.rtunion_def* %arrayidx299 to %struct.rtvec_def**
  %169 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %169, i32 0, i32 0
  %170 = load i32, i32* %num_elem, align 4
  %sub300 = sub nsw i32 %170, 1
  store i32 %sub300, i32* %j, align 4
  br label %for.cond.301

for.cond.301:                                     ; preds = %for.inc, %if.then.296
  %171 = load i32, i32* %j, align 4
  %cmp302 = icmp sge i32 %171, 0
  br i1 %cmp302, label %for.body.304, label %for.end

for.body.304:                                     ; preds = %for.cond.301
  %172 = load i32, i32* %j, align 4
  %idxprom305 = sext i32 %172 to i64
  %173 = load i32, i32* %i, align 4
  %idxprom306 = sext i32 %173 to i64
  %174 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld307 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %174, i32 0, i32 1
  %arrayidx308 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld307, i32 0, i64 %idxprom306
  %rtvec309 = bitcast %union.rtunion_def* %arrayidx308 to %struct.rtvec_def**
  %175 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec309, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %175, i32 0, i32 1
  %arrayidx310 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom305
  %176 = load i32, i32* %j, align 4
  %idxprom311 = sext i32 %176 to i64
  %177 = load i32, i32* %i, align 4
  %idxprom312 = sext i32 %177 to i64
  %178 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld313 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %178, i32 0, i32 1
  %arrayidx314 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld313, i32 0, i64 %idxprom312
  %rtvec315 = bitcast %union.rtunion_def* %arrayidx314 to %struct.rtvec_def**
  %179 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec315, align 8
  %elem316 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %179, i32 0, i32 1
  %arrayidx317 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem316, i32 0, i64 %idxprom311
  %180 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx317, align 8
  %181 = load i32, i32* %cond.addr, align 4
  %182 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %183 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8
  %call318 = call %struct.rtx_def* @known_cond(%struct.rtx_def* %180, i32 %181, %struct.rtx_def* %182, %struct.rtx_def* %183)
  call void @do_SUBST(%struct.rtx_def** %arrayidx310, %struct.rtx_def* %call318)
  br label %for.inc

for.inc:                                          ; preds = %for.body.304
  %184 = load i32, i32* %j, align 4
  %dec = add nsw i32 %184, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond.301

for.end:                                          ; preds = %for.cond.301
  br label %if.end.319

if.end.319:                                       ; preds = %for.end, %if.else.290
  br label %if.end.320

if.end.320:                                       ; preds = %if.end.319, %if.then.280
  br label %for.inc.321

for.inc.321:                                      ; preds = %if.end.320
  %185 = load i32, i32* %i, align 4
  %dec322 = add nsw i32 %185, -1
  store i32 %dec322, i32* %i, align 4
  br label %for.cond

for.end.323:                                      ; preds = %for.cond
  %186 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %186, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %for.end.323, %if.end.263, %if.then.257, %if.end.228, %if.then.222, %cond.end.188, %cond.end.179, %cond.end.170, %cond.end, %if.else.125, %if.then.124, %if.then.116, %sw.bb.60, %sw.bb, %if.then.47, %if.then.41, %if.then
  %187 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %187
}

declare i32 @comparison_dominates_p(i32, i32) #1

declare i32 @can_conditionally_move_p(i32) #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @make_field_assignment(%struct.rtx_def* %x) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %dest = alloca %struct.rtx_def*, align 8
  %src = alloca %struct.rtx_def*, align 8
  %assign = alloca %struct.rtx_def*, align 8
  %rhs = alloca %struct.rtx_def*, align 8
  %lhs = alloca %struct.rtx_def*, align 8
  %c1 = alloca i64, align 8
  %pos = alloca i64, align 8
  %len = alloca i64, align 8
  %other = alloca %struct.rtx_def*, align 8
  %mode = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %dest, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1, i32 0, i64 1
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx3, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %src, align 8
  store i64 0, i64* %len, align 8
  %4 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load = load i32, i32* %5, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 83
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i32 0, i64 0
  %rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtx6, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load7 = load i32, i32* %8, align 8
  %bf.clear8 = and i32 %bf.load7, 65535
  %cmp9 = icmp eq i32 %bf.clear8, 88
  br i1 %cmp9, label %land.lhs.true.10, label %if.else

land.lhs.true.10:                                 ; preds = %land.lhs.true
  %9 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i32 0, i64 0
  %rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rtx13, align 8
  %fld14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i32 0, i64 0
  %rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rtx16, align 8
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load17 = load i32, i32* %12, align 8
  %bf.clear18 = and i32 %bf.load17, 65535
  %cmp19 = icmp eq i32 %bf.clear18, 54
  br i1 %cmp19, label %land.lhs.true.20, label %if.else

land.lhs.true.20:                                 ; preds = %land.lhs.true.10
  %13 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i32 0, i64 0
  %rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rtx23, align 8
  %fld24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i32 0, i64 0
  %rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rtx26, align 8
  %fld27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx28 to i64*
  %16 = load i64, i64* %rtwint, align 8
  %cmp29 = icmp eq i64 %16, -2
  br i1 %cmp29, label %land.lhs.true.30, label %if.else

land.lhs.true.30:                                 ; preds = %land.lhs.true.20
  %17 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %18 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i32 0, i64 1
  %rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rtx33, align 8
  %call = call i32 @rtx_equal_for_field_assignment_p(%struct.rtx_def* %17, %struct.rtx_def* %19)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true.30
  %20 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %21 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i32 0, i64 0
  %rtx36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtx_def**
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rtx36, align 8
  %fld37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i32 0, i64 1
  %rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rtx39, align 8
  %call40 = call %struct.rtx_def* @make_extraction(i32 0, %struct.rtx_def* %20, i64 0, %struct.rtx_def* %23, i64 1, i32 1, i32 1, i32 0)
  store %struct.rtx_def* %call40, %struct.rtx_def** %assign, align 8
  %24 = load %struct.rtx_def*, %struct.rtx_def** %assign, align 8
  %cmp41 = icmp ne %struct.rtx_def* %24, null
  br i1 %cmp41, label %if.then.42, label %if.end

if.then.42:                                       ; preds = %if.then
  %25 = load %struct.rtx_def*, %struct.rtx_def** %assign, align 8
  %26 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %call43 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %25, %struct.rtx_def* %26)
  store %struct.rtx_def* %call43, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %if.then
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %27, %struct.rtx_def** %retval
  br label %return

if.else:                                          ; preds = %land.lhs.true.30, %land.lhs.true.20, %land.lhs.true.10, %land.lhs.true, %entry
  %28 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load44 = load i32, i32* %29, align 8
  %bf.clear45 = and i32 %bf.load44, 65535
  %cmp46 = icmp eq i32 %bf.clear45, 83
  br i1 %cmp46, label %land.lhs.true.47, label %if.else.129

land.lhs.true.47:                                 ; preds = %if.else
  %30 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i32 0, i64 0
  %rtx50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rtx50, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load51 = load i32, i32* %32, align 8
  %bf.clear52 = and i32 %bf.load51, 65535
  %cmp53 = icmp eq i32 %bf.clear52, 63
  br i1 %cmp53, label %land.lhs.true.54, label %if.else.129

land.lhs.true.54:                                 ; preds = %land.lhs.true.47
  %33 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %arrayidx56 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld55, i32 0, i64 0
  %rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rtx57, align 8
  %call58 = call i32 @subreg_lowpart_p(%struct.rtx_def* %34)
  %tobool59 = icmp ne i32 %call58, 0
  br i1 %tobool59, label %land.lhs.true.60, label %if.else.129

land.lhs.true.60:                                 ; preds = %land.lhs.true.54
  %35 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i32 0, i64 0
  %rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rtx63, align 8
  %37 = bitcast %struct.rtx_def* %36 to i32*
  %bf.load64 = load i32, i32* %37, align 8
  %bf.lshr = lshr i32 %bf.load64, 16
  %bf.clear65 = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear65 to i64
  %arrayidx66 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom
  %38 = load i8, i8* %arrayidx66, align 1
  %conv = zext i8 %38 to i32
  %39 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i32 0, i64 0
  %rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rtx69, align 8
  %fld70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i32 0, i64 0
  %rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rtx72, align 8
  %42 = bitcast %struct.rtx_def* %41 to i32*
  %bf.load73 = load i32, i32* %42, align 8
  %bf.lshr74 = lshr i32 %bf.load73, 16
  %bf.clear75 = and i32 %bf.lshr74, 255
  %idxprom76 = sext i32 %bf.clear75 to i64
  %arrayidx77 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom76
  %43 = load i8, i8* %arrayidx77, align 1
  %conv78 = zext i8 %43 to i32
  %cmp79 = icmp slt i32 %conv, %conv78
  br i1 %cmp79, label %land.lhs.true.81, label %if.else.129

land.lhs.true.81:                                 ; preds = %land.lhs.true.60
  %44 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1
  %arrayidx83 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld82, i32 0, i64 0
  %rtx84 = bitcast %union.rtunion_def* %arrayidx83 to %struct.rtx_def**
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rtx84, align 8
  %fld85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1
  %arrayidx86 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld85, i32 0, i64 0
  %rtx87 = bitcast %union.rtunion_def* %arrayidx86 to %struct.rtx_def**
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rtx87, align 8
  %47 = bitcast %struct.rtx_def* %46 to i32*
  %bf.load88 = load i32, i32* %47, align 8
  %bf.clear89 = and i32 %bf.load88, 65535
  %cmp90 = icmp eq i32 %bf.clear89, 88
  br i1 %cmp90, label %land.lhs.true.92, label %if.else.129

land.lhs.true.92:                                 ; preds = %land.lhs.true.81
  %48 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1
  %arrayidx94 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld93, i32 0, i64 0
  %rtx95 = bitcast %union.rtunion_def* %arrayidx94 to %struct.rtx_def**
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rtx95, align 8
  %fld96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1
  %arrayidx97 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld96, i32 0, i64 0
  %rtx98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtx_def**
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rtx98, align 8
  %fld99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1
  %arrayidx100 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld99, i32 0, i64 0
  %rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rtx101, align 8
  %fld102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i32 0, i64 0
  %rtwint104 = bitcast %union.rtunion_def* %arrayidx103 to i64*
  %52 = load i64, i64* %rtwint104, align 8
  %cmp105 = icmp eq i64 %52, -2
  br i1 %cmp105, label %land.lhs.true.107, label %if.else.129

land.lhs.true.107:                                ; preds = %land.lhs.true.92
  %53 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %54 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld108, i32 0, i64 1
  %rtx110 = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rtx110, align 8
  %call111 = call i32 @rtx_equal_for_field_assignment_p(%struct.rtx_def* %53, %struct.rtx_def* %55)
  %tobool112 = icmp ne i32 %call111, 0
  br i1 %tobool112, label %if.then.113, label %if.else.129

if.then.113:                                      ; preds = %land.lhs.true.107
  %56 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %57 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1
  %arrayidx115 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld114, i32 0, i64 0
  %rtx116 = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtx_def**
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rtx116, align 8
  %fld117 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1
  %arrayidx118 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld117, i32 0, i64 0
  %rtx119 = bitcast %union.rtunion_def* %arrayidx118 to %struct.rtx_def**
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rtx119, align 8
  %fld120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1
  %arrayidx121 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld120, i32 0, i64 1
  %rtx122 = bitcast %union.rtunion_def* %arrayidx121 to %struct.rtx_def**
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rtx122, align 8
  %call123 = call %struct.rtx_def* @make_extraction(i32 0, %struct.rtx_def* %56, i64 0, %struct.rtx_def* %60, i64 1, i32 1, i32 1, i32 0)
  store %struct.rtx_def* %call123, %struct.rtx_def** %assign, align 8
  %61 = load %struct.rtx_def*, %struct.rtx_def** %assign, align 8
  %cmp124 = icmp ne %struct.rtx_def* %61, null
  br i1 %cmp124, label %if.then.126, label %if.end.128

if.then.126:                                      ; preds = %if.then.113
  %62 = load %struct.rtx_def*, %struct.rtx_def** %assign, align 8
  %63 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %call127 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %62, %struct.rtx_def* %63)
  store %struct.rtx_def* %call127, %struct.rtx_def** %retval
  br label %return

if.end.128:                                       ; preds = %if.then.113
  %64 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %64, %struct.rtx_def** %retval
  br label %return

if.else.129:                                      ; preds = %land.lhs.true.107, %land.lhs.true.92, %land.lhs.true.81, %land.lhs.true.60, %land.lhs.true.54, %land.lhs.true.47, %if.else
  %65 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %66 = bitcast %struct.rtx_def* %65 to i32*
  %bf.load130 = load i32, i32* %66, align 8
  %bf.clear131 = and i32 %bf.load130, 65535
  %cmp132 = icmp eq i32 %bf.clear131, 84
  br i1 %cmp132, label %land.lhs.true.134, label %if.end.170

land.lhs.true.134:                                ; preds = %if.else.129
  %67 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1
  %arrayidx136 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld135, i32 0, i64 0
  %rtx137 = bitcast %union.rtunion_def* %arrayidx136 to %struct.rtx_def**
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rtx137, align 8
  %69 = bitcast %struct.rtx_def* %68 to i32*
  %bf.load138 = load i32, i32* %69, align 8
  %bf.clear139 = and i32 %bf.load138, 65535
  %cmp140 = icmp eq i32 %bf.clear139, 87
  br i1 %cmp140, label %land.lhs.true.142, label %if.end.170

land.lhs.true.142:                                ; preds = %land.lhs.true.134
  %70 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx144 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld143, i32 0, i64 0
  %rtx145 = bitcast %union.rtunion_def* %arrayidx144 to %struct.rtx_def**
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rtx145, align 8
  %fld146 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1
  %arrayidx147 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld146, i32 0, i64 0
  %rtx148 = bitcast %union.rtunion_def* %arrayidx147 to %struct.rtx_def**
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rtx148, align 8
  %73 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 65), align 8
  %cmp149 = icmp eq %struct.rtx_def* %72, %73
  br i1 %cmp149, label %land.lhs.true.151, label %if.end.170

land.lhs.true.151:                                ; preds = %land.lhs.true.142
  %74 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %75 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld152, i32 0, i64 1
  %rtx154 = bitcast %union.rtunion_def* %arrayidx153 to %struct.rtx_def**
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rtx154, align 8
  %call155 = call i32 @rtx_equal_for_field_assignment_p(%struct.rtx_def* %74, %struct.rtx_def* %76)
  %tobool156 = icmp ne i32 %call155, 0
  br i1 %tobool156, label %if.then.157, label %if.end.170

if.then.157:                                      ; preds = %land.lhs.true.151
  %77 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %78 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld158 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx159 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld158, i32 0, i64 0
  %rtx160 = bitcast %union.rtunion_def* %arrayidx159 to %struct.rtx_def**
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rtx160, align 8
  %fld161 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1
  %arrayidx162 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld161, i32 0, i64 1
  %rtx163 = bitcast %union.rtunion_def* %arrayidx162 to %struct.rtx_def**
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rtx163, align 8
  %call164 = call %struct.rtx_def* @make_extraction(i32 0, %struct.rtx_def* %77, i64 0, %struct.rtx_def* %80, i64 1, i32 1, i32 1, i32 0)
  store %struct.rtx_def* %call164, %struct.rtx_def** %assign, align 8
  %81 = load %struct.rtx_def*, %struct.rtx_def** %assign, align 8
  %cmp165 = icmp ne %struct.rtx_def* %81, null
  br i1 %cmp165, label %if.then.167, label %if.end.169

if.then.167:                                      ; preds = %if.then.157
  %82 = load %struct.rtx_def*, %struct.rtx_def** %assign, align 8
  %83 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 65), align 8
  %call168 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %82, %struct.rtx_def* %83)
  store %struct.rtx_def* %call168, %struct.rtx_def** %retval
  br label %return

if.end.169:                                       ; preds = %if.then.157
  %84 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %84, %struct.rtx_def** %retval
  br label %return

if.end.170:                                       ; preds = %land.lhs.true.151, %land.lhs.true.142, %land.lhs.true.134, %if.else.129
  br label %if.end.171

if.end.171:                                       ; preds = %if.end.170
  br label %if.end.172

if.end.172:                                       ; preds = %if.end.171
  %85 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %86 = bitcast %struct.rtx_def* %85 to i32*
  %bf.load173 = load i32, i32* %86, align 8
  %bf.clear174 = and i32 %bf.load173, 65535
  %cmp175 = icmp ne i32 %bf.clear174, 84
  br i1 %cmp175, label %land.lhs.true.177, label %if.end.183

land.lhs.true.177:                                ; preds = %if.end.172
  %87 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %88 = bitcast %struct.rtx_def* %87 to i32*
  %bf.load178 = load i32, i32* %88, align 8
  %bf.clear179 = and i32 %bf.load178, 65535
  %cmp180 = icmp ne i32 %bf.clear179, 85
  br i1 %cmp180, label %if.then.182, label %if.end.183

if.then.182:                                      ; preds = %land.lhs.true.177
  %89 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %89, %struct.rtx_def** %retval
  br label %return

if.end.183:                                       ; preds = %land.lhs.true.177, %if.end.172
  %90 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1
  %arrayidx185 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld184, i32 0, i64 0
  %rtx186 = bitcast %union.rtunion_def* %arrayidx185 to %struct.rtx_def**
  %91 = load %struct.rtx_def*, %struct.rtx_def** %rtx186, align 8
  %call187 = call %struct.rtx_def* @expand_compound_operation(%struct.rtx_def* %91)
  store %struct.rtx_def* %call187, %struct.rtx_def** %rhs, align 8
  %92 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld188 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1
  %arrayidx189 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld188, i32 0, i64 1
  %rtx190 = bitcast %union.rtunion_def* %arrayidx189 to %struct.rtx_def**
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rtx190, align 8
  %call191 = call %struct.rtx_def* @expand_compound_operation(%struct.rtx_def* %93)
  store %struct.rtx_def* %call191, %struct.rtx_def** %lhs, align 8
  %94 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %95 = bitcast %struct.rtx_def* %94 to i32*
  %bf.load192 = load i32, i32* %95, align 8
  %bf.clear193 = and i32 %bf.load192, 65535
  %cmp194 = icmp eq i32 %bf.clear193, 83
  br i1 %cmp194, label %land.lhs.true.196, label %if.else.217

land.lhs.true.196:                                ; preds = %if.end.183
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %fld197 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1
  %arrayidx198 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld197, i32 0, i64 1
  %rtx199 = bitcast %union.rtunion_def* %arrayidx198 to %struct.rtx_def**
  %97 = load %struct.rtx_def*, %struct.rtx_def** %rtx199, align 8
  %98 = bitcast %struct.rtx_def* %97 to i32*
  %bf.load200 = load i32, i32* %98, align 8
  %bf.clear201 = and i32 %bf.load200, 65535
  %cmp202 = icmp eq i32 %bf.clear201, 54
  br i1 %cmp202, label %land.lhs.true.204, label %if.else.217

land.lhs.true.204:                                ; preds = %land.lhs.true.196
  %99 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %fld205 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %99, i32 0, i32 1
  %arrayidx206 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld205, i32 0, i64 0
  %rtx207 = bitcast %union.rtunion_def* %arrayidx206 to %struct.rtx_def**
  %100 = load %struct.rtx_def*, %struct.rtx_def** %rtx207, align 8
  %101 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %call208 = call i32 @rtx_equal_for_field_assignment_p(%struct.rtx_def* %100, %struct.rtx_def* %101)
  %tobool209 = icmp ne i32 %call208, 0
  br i1 %tobool209, label %if.then.210, label %if.else.217

if.then.210:                                      ; preds = %land.lhs.true.204
  %102 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  %fld211 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1
  %arrayidx212 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld211, i32 0, i64 1
  %rtx213 = bitcast %union.rtunion_def* %arrayidx212 to %struct.rtx_def**
  %103 = load %struct.rtx_def*, %struct.rtx_def** %rtx213, align 8
  %fld214 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1
  %arrayidx215 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld214, i32 0, i64 0
  %rtwint216 = bitcast %union.rtunion_def* %arrayidx215 to i64*
  %104 = load i64, i64* %rtwint216, align 8
  store i64 %104, i64* %c1, align 8
  %105 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  store %struct.rtx_def* %105, %struct.rtx_def** %other, align 8
  br label %if.end.245

if.else.217:                                      ; preds = %land.lhs.true.204, %land.lhs.true.196, %if.end.183
  %106 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %107 = bitcast %struct.rtx_def* %106 to i32*
  %bf.load218 = load i32, i32* %107, align 8
  %bf.clear219 = and i32 %bf.load218, 65535
  %cmp220 = icmp eq i32 %bf.clear219, 83
  br i1 %cmp220, label %land.lhs.true.222, label %if.else.243

land.lhs.true.222:                                ; preds = %if.else.217
  %108 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld223 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1
  %arrayidx224 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld223, i32 0, i64 1
  %rtx225 = bitcast %union.rtunion_def* %arrayidx224 to %struct.rtx_def**
  %109 = load %struct.rtx_def*, %struct.rtx_def** %rtx225, align 8
  %110 = bitcast %struct.rtx_def* %109 to i32*
  %bf.load226 = load i32, i32* %110, align 8
  %bf.clear227 = and i32 %bf.load226, 65535
  %cmp228 = icmp eq i32 %bf.clear227, 54
  br i1 %cmp228, label %land.lhs.true.230, label %if.else.243

land.lhs.true.230:                                ; preds = %land.lhs.true.222
  %111 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld231 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i32 0, i32 1
  %arrayidx232 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld231, i32 0, i64 0
  %rtx233 = bitcast %union.rtunion_def* %arrayidx232 to %struct.rtx_def**
  %112 = load %struct.rtx_def*, %struct.rtx_def** %rtx233, align 8
  %113 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %call234 = call i32 @rtx_equal_for_field_assignment_p(%struct.rtx_def* %112, %struct.rtx_def* %113)
  %tobool235 = icmp ne i32 %call234, 0
  br i1 %tobool235, label %if.then.236, label %if.else.243

if.then.236:                                      ; preds = %land.lhs.true.230
  %114 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8
  %fld237 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %114, i32 0, i32 1
  %arrayidx238 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld237, i32 0, i64 1
  %rtx239 = bitcast %union.rtunion_def* %arrayidx238 to %struct.rtx_def**
  %115 = load %struct.rtx_def*, %struct.rtx_def** %rtx239, align 8
  %fld240 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1
  %arrayidx241 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld240, i32 0, i64 0
  %rtwint242 = bitcast %union.rtunion_def* %arrayidx241 to i64*
  %116 = load i64, i64* %rtwint242, align 8
  store i64 %116, i64* %c1, align 8
  %117 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8
  store %struct.rtx_def* %117, %struct.rtx_def** %other, align 8
  br label %if.end.244

if.else.243:                                      ; preds = %land.lhs.true.230, %land.lhs.true.222, %if.else.217
  %118 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %118, %struct.rtx_def** %retval
  br label %return

if.end.244:                                       ; preds = %if.then.236
  br label %if.end.245

if.end.245:                                       ; preds = %if.end.244, %if.then.210
  %119 = load i64, i64* %c1, align 8
  %neg = xor i64 %119, -1
  %120 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %121 = bitcast %struct.rtx_def* %120 to i32*
  %bf.load246 = load i32, i32* %121, align 8
  %bf.lshr247 = lshr i32 %bf.load246, 16
  %bf.clear248 = and i32 %bf.lshr247, 255
  %idxprom249 = sext i32 %bf.clear248 to i64
  %arrayidx250 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom249
  %122 = load i64, i64* %arrayidx250, align 8
  %and = and i64 %neg, %122
  %call251 = call i32 @get_pos_from_mask(i64 %and, i64* %len)
  %conv252 = sext i32 %call251 to i64
  store i64 %conv252, i64* %pos, align 8
  %123 = load i64, i64* %pos, align 8
  %cmp253 = icmp slt i64 %123, 0
  br i1 %cmp253, label %if.then.280, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.245
  %124 = load i64, i64* %pos, align 8
  %125 = load i64, i64* %len, align 8
  %add = add i64 %124, %125
  %126 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %127 = bitcast %struct.rtx_def* %126 to i32*
  %bf.load255 = load i32, i32* %127, align 8
  %bf.lshr256 = lshr i32 %bf.load255, 16
  %bf.clear257 = and i32 %bf.lshr256, 255
  %idxprom258 = sext i32 %bf.clear257 to i64
  %arrayidx259 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom258
  %128 = load i16, i16* %arrayidx259, align 2
  %conv260 = zext i16 %128 to i64
  %cmp261 = icmp ugt i64 %add, %conv260
  br i1 %cmp261, label %if.then.280, label %lor.lhs.false.263

lor.lhs.false.263:                                ; preds = %lor.lhs.false
  %129 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %130 = bitcast %struct.rtx_def* %129 to i32*
  %bf.load264 = load i32, i32* %130, align 8
  %bf.lshr265 = lshr i32 %bf.load264, 16
  %bf.clear266 = and i32 %bf.lshr265, 255
  %idxprom267 = sext i32 %bf.clear266 to i64
  %arrayidx268 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom267
  %131 = load i16, i16* %arrayidx268, align 2
  %conv269 = zext i16 %131 to i32
  %cmp270 = icmp sgt i32 %conv269, 64
  br i1 %cmp270, label %if.then.280, label %lor.lhs.false.272

lor.lhs.false.272:                                ; preds = %lor.lhs.false.263
  %132 = load i64, i64* %c1, align 8
  %133 = load %struct.rtx_def*, %struct.rtx_def** %other, align 8
  %134 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %135 = bitcast %struct.rtx_def* %134 to i32*
  %bf.load273 = load i32, i32* %135, align 8
  %bf.lshr274 = lshr i32 %bf.load273, 16
  %bf.clear275 = and i32 %bf.lshr274, 255
  %call276 = call i64 @nonzero_bits(%struct.rtx_def* %133, i32 %bf.clear275)
  %and277 = and i64 %132, %call276
  %cmp278 = icmp ne i64 %and277, 0
  br i1 %cmp278, label %if.then.280, label %if.end.281

if.then.280:                                      ; preds = %lor.lhs.false.272, %lor.lhs.false.263, %lor.lhs.false, %if.end.245
  %136 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %136, %struct.rtx_def** %retval
  br label %return

if.end.281:                                       ; preds = %lor.lhs.false.272
  %137 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %138 = load i64, i64* %pos, align 8
  %139 = load i64, i64* %len, align 8
  %call282 = call %struct.rtx_def* @make_extraction(i32 0, %struct.rtx_def* %137, i64 %138, %struct.rtx_def* null, i64 %139, i32 1, i32 1, i32 0)
  store %struct.rtx_def* %call282, %struct.rtx_def** %assign, align 8
  %140 = load %struct.rtx_def*, %struct.rtx_def** %assign, align 8
  %cmp283 = icmp eq %struct.rtx_def* %140, null
  br i1 %cmp283, label %if.then.285, label %if.end.286

if.then.285:                                      ; preds = %if.end.281
  %141 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %141, %struct.rtx_def** %retval
  br label %return

if.end.286:                                       ; preds = %if.end.281
  %142 = load %struct.rtx_def*, %struct.rtx_def** %assign, align 8
  %143 = bitcast %struct.rtx_def* %142 to i32*
  %bf.load287 = load i32, i32* %143, align 8
  %bf.clear288 = and i32 %bf.load287, 65535
  %cmp289 = icmp eq i32 %bf.clear288, 64
  br i1 %cmp289, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.286
  %144 = load %struct.rtx_def*, %struct.rtx_def** %assign, align 8
  %fld291 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1
  %arrayidx292 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld291, i32 0, i64 0
  %rtx293 = bitcast %union.rtunion_def* %arrayidx292 to %struct.rtx_def**
  %145 = load %struct.rtx_def*, %struct.rtx_def** %rtx293, align 8
  %146 = bitcast %struct.rtx_def* %145 to i32*
  %bf.load294 = load i32, i32* %146, align 8
  %bf.lshr295 = lshr i32 %bf.load294, 16
  %bf.clear296 = and i32 %bf.lshr295, 255
  br label %cond.end

cond.false:                                       ; preds = %if.end.286
  %147 = load %struct.rtx_def*, %struct.rtx_def** %assign, align 8
  %148 = bitcast %struct.rtx_def* %147 to i32*
  %bf.load297 = load i32, i32* %148, align 8
  %bf.lshr298 = lshr i32 %bf.load297, 16
  %bf.clear299 = and i32 %bf.lshr298, 255
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %bf.clear296, %cond.true ], [ %bf.clear299, %cond.false ]
  store i32 %cond, i32* %mode, align 4
  %149 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %150 = bitcast %struct.rtx_def* %149 to i32*
  %bf.load300 = load i32, i32* %150, align 8
  %bf.lshr301 = lshr i32 %bf.load300, 16
  %bf.clear302 = and i32 %bf.lshr301, 255
  %151 = load %struct.rtx_def*, %struct.rtx_def** %other, align 8
  %152 = load i64, i64* %pos, align 8
  %conv303 = trunc i64 %152 to i32
  %call304 = call %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 90, i32 %bf.clear302, %struct.rtx_def* %151, i32 %conv303)
  %153 = load i32, i32* %mode, align 4
  %154 = load i32, i32* %mode, align 4
  %idxprom305 = sext i32 %154 to i64
  %arrayidx306 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom305
  %155 = load i16, i16* %arrayidx306, align 2
  %conv307 = zext i16 %155 to i32
  %cmp308 = icmp sge i32 %conv307, 64
  br i1 %cmp308, label %cond.true.310, label %cond.false.311

cond.true.310:                                    ; preds = %cond.end
  br label %cond.end.312

cond.false.311:                                   ; preds = %cond.end
  %156 = load i64, i64* %len, align 8
  %shl = shl i64 1, %156
  %sub = sub i64 %shl, 1
  br label %cond.end.312

cond.end.312:                                     ; preds = %cond.false.311, %cond.true.310
  %cond313 = phi i64 [ -1, %cond.true.310 ], [ %sub, %cond.false.311 ]
  %157 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %call314 = call %struct.rtx_def* @force_to_mode(%struct.rtx_def* %call304, i32 %153, i64 %cond313, %struct.rtx_def* %157, i32 0)
  store %struct.rtx_def* %call314, %struct.rtx_def** %src, align 8
  %158 = load %struct.rtx_def*, %struct.rtx_def** %assign, align 8
  %159 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %call315 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %158, %struct.rtx_def* %159)
  store %struct.rtx_def* %call315, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %cond.end.312, %if.then.285, %if.then.280, %if.else.243, %if.then.182, %if.end.169, %if.then.167, %if.end.128, %if.then.126, %if.end, %if.then.42
  %160 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %160
}

; Function Attrs: nounwind uwtable
define internal i32 @rtx_equal_for_field_assignment_p(%struct.rtx_def* %x, %struct.rtx_def* %y) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %y.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %y, %struct.rtx_def** %y.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %cmp = icmp eq %struct.rtx_def* %0, %1
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %3 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %call = call i32 @rtx_equal_p(%struct.rtx_def* %2, %struct.rtx_def* %3)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %cmp1 = icmp eq %struct.rtx_def* %4, null
  br i1 %cmp1, label %if.then.9, label %lor.lhs.false.2

lor.lhs.false.2:                                  ; preds = %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %cmp3 = icmp eq %struct.rtx_def* %5, null
  br i1 %cmp3, label %if.then.9, label %lor.lhs.false.4

lor.lhs.false.4:                                  ; preds = %lor.lhs.false.2
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load = load i32, i32* %7, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %8 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load5 = load i32, i32* %9, align 8
  %bf.lshr6 = lshr i32 %bf.load5, 16
  %bf.clear7 = and i32 %bf.lshr6, 255
  %cmp8 = icmp ne i32 %bf.clear, %bf.clear7
  br i1 %cmp8, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %lor.lhs.false.4, %lor.lhs.false.2, %if.end
  store i32 0, i32* %retval
  br label %return

if.end.10:                                        ; preds = %lor.lhs.false.4
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load11 = load i32, i32* %11, align 8
  %bf.clear12 = and i32 %bf.load11, 65535
  %cmp13 = icmp eq i32 %bf.clear12, 66
  br i1 %cmp13, label %land.lhs.true, label %if.end.35

land.lhs.true:                                    ; preds = %if.end.10
  %12 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load14 = load i32, i32* %13, align 8
  %bf.clear15 = and i32 %bf.load14, 65535
  %cmp16 = icmp eq i32 %bf.clear15, 63
  br i1 %cmp16, label %land.lhs.true.17, label %if.end.35

land.lhs.true.17:                                 ; preds = %land.lhs.true
  %14 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %16 = bitcast %struct.rtx_def* %15 to i32*
  %bf.load18 = load i32, i32* %16, align 8
  %bf.clear19 = and i32 %bf.load18, 65535
  %cmp20 = icmp eq i32 %bf.clear19, 66
  br i1 %cmp20, label %land.lhs.true.21, label %if.end.35

land.lhs.true.21:                                 ; preds = %land.lhs.true.17
  %17 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i32 0, i64 0
  %rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rtx24, align 8
  %19 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i32 0, i64 0
  %rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rtx27, align 8
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load28 = load i32, i32* %21, align 8
  %bf.lshr29 = lshr i32 %bf.load28, 16
  %bf.clear30 = and i32 %bf.lshr29, 255
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call31 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %bf.clear30, %struct.rtx_def* %22)
  %call32 = call i32 @rtx_equal_p(%struct.rtx_def* %18, %struct.rtx_def* %call31)
  %tobool33 = icmp ne i32 %call32, 0
  br i1 %tobool33, label %if.then.34, label %if.end.35

if.then.34:                                       ; preds = %land.lhs.true.21
  store i32 1, i32* %retval
  br label %return

if.end.35:                                        ; preds = %land.lhs.true.21, %land.lhs.true.17, %land.lhs.true, %if.end.10
  %23 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %24 = bitcast %struct.rtx_def* %23 to i32*
  %bf.load36 = load i32, i32* %24, align 8
  %bf.clear37 = and i32 %bf.load36, 65535
  %cmp38 = icmp eq i32 %bf.clear37, 66
  br i1 %cmp38, label %land.lhs.true.39, label %if.end.64

land.lhs.true.39:                                 ; preds = %if.end.35
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load40 = load i32, i32* %26, align 8
  %bf.clear41 = and i32 %bf.load40, 65535
  %cmp42 = icmp eq i32 %bf.clear41, 63
  br i1 %cmp42, label %land.lhs.true.43, label %if.end.64

land.lhs.true.43:                                 ; preds = %land.lhs.true.39
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i32 0, i64 0
  %rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rtx46, align 8
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load47 = load i32, i32* %29, align 8
  %bf.clear48 = and i32 %bf.load47, 65535
  %cmp49 = icmp eq i32 %bf.clear48, 66
  br i1 %cmp49, label %land.lhs.true.50, label %if.end.64

land.lhs.true.50:                                 ; preds = %land.lhs.true.43
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i32 0, i64 0
  %rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rtx53, align 8
  %32 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld54, i32 0, i64 0
  %rtx56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtx_def**
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rtx56, align 8
  %34 = bitcast %struct.rtx_def* %33 to i32*
  %bf.load57 = load i32, i32* %34, align 8
  %bf.lshr58 = lshr i32 %bf.load57, 16
  %bf.clear59 = and i32 %bf.lshr58, 255
  %35 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %call60 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %bf.clear59, %struct.rtx_def* %35)
  %call61 = call i32 @rtx_equal_p(%struct.rtx_def* %31, %struct.rtx_def* %call60)
  %tobool62 = icmp ne i32 %call61, 0
  br i1 %tobool62, label %if.then.63, label %if.end.64

if.then.63:                                       ; preds = %land.lhs.true.50
  store i32 1, i32* %retval
  br label %return

if.end.64:                                        ; preds = %land.lhs.true.50, %land.lhs.true.43, %land.lhs.true.39, %if.end.35
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.64, %if.then.63, %if.then.34, %if.then.9, %if.then
  %36 = load i32, i32* %retval
  ret i32 %36
}

; Function Attrs: nounwind uwtable
define internal i32 @get_pos_from_mask(i64 %m, i64* %plen) #0 {
entry:
  %retval = alloca i32, align 4
  %m.addr = alloca i64, align 8
  %plen.addr = alloca i64*, align 8
  %pos = alloca i32, align 4
  %len = alloca i32, align 4
  store i64 %m, i64* %m.addr, align 8
  store i64* %plen, i64** %plen.addr, align 8
  %0 = load i64, i64* %m.addr, align 8
  %1 = load i64, i64* %m.addr, align 8
  %sub = sub i64 0, %1
  %and = and i64 %0, %sub
  %call = call i32 @exact_log2_wide(i64 %and)
  store i32 %call, i32* %pos, align 4
  %2 = load i32, i32* %pos, align 4
  %cmp = icmp slt i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load i64, i64* %m.addr, align 8
  %4 = load i32, i32* %pos, align 4
  %sh_prom = zext i32 %4 to i64
  %shr = lshr i64 %3, %sh_prom
  %add = add i64 %shr, 1
  %call1 = call i32 @exact_log2_wide(i64 %add)
  store i32 %call1, i32* %len, align 4
  %5 = load i32, i32* %len, align 4
  %cmp2 = icmp sle i32 %5, 0
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  store i32 -1, i32* %retval
  br label %return

if.end.4:                                         ; preds = %if.end
  %6 = load i32, i32* %len, align 4
  %conv = sext i32 %6 to i64
  %7 = load i64*, i64** %plen.addr, align 8
  store i64 %conv, i64* %7, align 8
  %8 = load i32, i32* %pos, align 4
  store i32 %8, i32* %retval
  br label %return

return:                                           ; preds = %if.end.4, %if.then.3, %if.then
  %9 = load i32, i32* %retval
  ret i32 %9
}

declare %struct.rtx_def* @shallow_copy_rtx(%struct.rtx_def*) #1

declare i32 @recog(%struct.rtx_def*, %struct.rtx_def*, i32*) #1

; Function Attrs: nounwind uwtable
define internal void @do_SUBST_INT(i32* %into, i32 %newval) #0 {
entry:
  %into.addr = alloca i32*, align 8
  %newval.addr = alloca i32, align 4
  %buf = alloca %struct.undo*, align 8
  %oldval = alloca i32, align 4
  store i32* %into, i32** %into.addr, align 8
  store i32 %newval, i32* %newval.addr, align 4
  %0 = load i32*, i32** %into.addr, align 8
  %1 = load i32, i32* %0, align 4
  store i32 %1, i32* %oldval, align 4
  %2 = load i32, i32* %oldval, align 4
  %3 = load i32, i32* %newval.addr, align 4
  %cmp = icmp eq i32 %2, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct.undo*, %struct.undo** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 1), align 8
  %tobool = icmp ne %struct.undo* %4, null
  br i1 %tobool, label %if.then.1, label %if.else

if.then.1:                                        ; preds = %if.end
  %5 = load %struct.undo*, %struct.undo** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 1), align 8
  store %struct.undo* %5, %struct.undo** %buf, align 8
  %6 = load %struct.undo*, %struct.undo** %buf, align 8
  %next = getelementptr inbounds %struct.undo, %struct.undo* %6, i32 0, i32 0
  %7 = load %struct.undo*, %struct.undo** %next, align 8
  store %struct.undo* %7, %struct.undo** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 1), align 8
  br label %if.end.2

if.else:                                          ; preds = %if.end
  %call = call noalias i8* @xmalloc(i64 32)
  %8 = bitcast i8* %call to %struct.undo*
  store %struct.undo* %8, %struct.undo** %buf, align 8
  br label %if.end.2

if.end.2:                                         ; preds = %if.else, %if.then.1
  %9 = load %struct.undo*, %struct.undo** %buf, align 8
  %is_int = getelementptr inbounds %struct.undo, %struct.undo* %9, i32 0, i32 1
  store i32 1, i32* %is_int, align 4
  %10 = load i32*, i32** %into.addr, align 8
  %11 = load %struct.undo*, %struct.undo** %buf, align 8
  %where = getelementptr inbounds %struct.undo, %struct.undo* %11, i32 0, i32 3
  %i = bitcast %union.anon.0* %where to i32**
  store i32* %10, i32** %i, align 8
  %12 = load i32, i32* %oldval, align 4
  %13 = load %struct.undo*, %struct.undo** %buf, align 8
  %old_contents = getelementptr inbounds %struct.undo, %struct.undo* %13, i32 0, i32 2
  %i3 = bitcast %union.anon* %old_contents to i32*
  store i32 %12, i32* %i3, align 4
  %14 = load i32, i32* %newval.addr, align 4
  %15 = load i32*, i32** %into.addr, align 8
  store i32 %14, i32* %15, align 4
  %16 = load %struct.undo*, %struct.undo** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 0), align 8
  %17 = load %struct.undo*, %struct.undo** %buf, align 8
  %next4 = getelementptr inbounds %struct.undo, %struct.undo* %17, i32 0, i32 0
  store %struct.undo* %16, %struct.undo** %next4, align 8
  %18 = load %struct.undo*, %struct.undo** %buf, align 8
  store %struct.undo* %18, %struct.undo** getelementptr inbounds (%struct.undobuf, %struct.undobuf* @undobuf, i32 0, i32 0), align 8
  br label %return

return:                                           ; preds = %if.end.2, %if.then
  ret void
}

declare i32 @set_noop_p(%struct.rtx_def*) #1

declare void @add_clobbers(%struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @reg_dead_at_p(%struct.rtx_def* %reg, %struct.rtx_def* %insn) #0 {
entry:
  %retval = alloca i32, align 4
  %reg.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %block = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.rtx_def* %reg, %struct.rtx_def** %reg.addr, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32, i32* %rtuint, align 4
  store i32 %1, i32* @reg_dead_regno, align 4
  %2 = load i32, i32* @reg_dead_regno, align 4
  %3 = load i32, i32* @reg_dead_regno, align 4
  %cmp = icmp ult i32 %3, 53
  br i1 %cmp, label %cond.true, label %cond.false.55

cond.true:                                        ; preds = %entry
  %4 = load i32, i32* @reg_dead_regno, align 4
  %cmp1 = icmp uge i32 %4, 8
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %cond.true
  %5 = load i32, i32* @reg_dead_regno, align 4
  %cmp2 = icmp ule i32 %5, 15
  br i1 %cmp2, label %cond.true.14, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %cond.true
  %6 = load i32, i32* @reg_dead_regno, align 4
  %cmp3 = icmp uge i32 %6, 21
  br i1 %cmp3, label %land.lhs.true.4, label %lor.lhs.false.6

land.lhs.true.4:                                  ; preds = %lor.lhs.false
  %7 = load i32, i32* @reg_dead_regno, align 4
  %cmp5 = icmp ule i32 %7, 28
  br i1 %cmp5, label %cond.true.14, label %lor.lhs.false.6

lor.lhs.false.6:                                  ; preds = %land.lhs.true.4, %lor.lhs.false
  %8 = load i32, i32* @reg_dead_regno, align 4
  %cmp7 = icmp uge i32 %8, 45
  br i1 %cmp7, label %land.lhs.true.8, label %lor.lhs.false.10

land.lhs.true.8:                                  ; preds = %lor.lhs.false.6
  %9 = load i32, i32* @reg_dead_regno, align 4
  %cmp9 = icmp ule i32 %9, 52
  br i1 %cmp9, label %cond.true.14, label %lor.lhs.false.10

lor.lhs.false.10:                                 ; preds = %land.lhs.true.8, %lor.lhs.false.6
  %10 = load i32, i32* @reg_dead_regno, align 4
  %cmp11 = icmp uge i32 %10, 29
  br i1 %cmp11, label %land.lhs.true.12, label %cond.false

land.lhs.true.12:                                 ; preds = %lor.lhs.false.10
  %11 = load i32, i32* @reg_dead_regno, align 4
  %cmp13 = icmp ule i32 %11, 36
  br i1 %cmp13, label %cond.true.14, label %cond.false

cond.true.14:                                     ; preds = %land.lhs.true.12, %land.lhs.true.8, %land.lhs.true.4, %land.lhs.true
  %12 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load = load i32, i32* %13, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear to i64
  %arrayidx15 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %14 = load i32, i32* %arrayidx15, align 4
  %cmp16 = icmp eq i32 %14, 5
  br i1 %cmp16, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.14
  %15 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %16 = bitcast %struct.rtx_def* %15 to i32*
  %bf.load17 = load i32, i32* %16, align 8
  %bf.lshr18 = lshr i32 %bf.load17, 16
  %bf.clear19 = and i32 %bf.lshr18, 255
  %idxprom20 = sext i32 %bf.clear19 to i64
  %arrayidx21 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom20
  %17 = load i32, i32* %arrayidx21, align 4
  %cmp22 = icmp eq i32 %17, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.14
  %18 = phi i1 [ true, %cond.true.14 ], [ %cmp22, %lor.rhs ]
  %cond = select i1 %18, i32 2, i32 1
  br label %cond.end.53

cond.false:                                       ; preds = %land.lhs.true.12, %lor.lhs.false.10
  %19 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load23 = load i32, i32* %20, align 8
  %bf.lshr24 = lshr i32 %bf.load23, 16
  %bf.clear25 = and i32 %bf.lshr24, 255
  %cmp26 = icmp eq i32 %bf.clear25, 18
  br i1 %cmp26, label %cond.true.27, label %cond.false.29

cond.true.27:                                     ; preds = %cond.false
  %21 = load i32, i32* @target_flags, align 4
  %and = and i32 %21, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond28 = select i1 %tobool, i32 2, i32 3
  br label %cond.end.51

cond.false.29:                                    ; preds = %cond.false
  %22 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %23 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load30 = load i32, i32* %23, align 8
  %bf.lshr31 = lshr i32 %bf.load30, 16
  %bf.clear32 = and i32 %bf.lshr31, 255
  %cmp33 = icmp eq i32 %bf.clear32, 24
  br i1 %cmp33, label %cond.true.34, label %cond.false.38

cond.true.34:                                     ; preds = %cond.false.29
  %24 = load i32, i32* @target_flags, align 4
  %and35 = and i32 %24, 33554432
  %tobool36 = icmp ne i32 %and35, 0
  %cond37 = select i1 %tobool36, i32 4, i32 6
  br label %cond.end

cond.false.38:                                    ; preds = %cond.false.29
  %25 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load39 = load i32, i32* %26, align 8
  %bf.lshr40 = lshr i32 %bf.load39, 16
  %bf.clear41 = and i32 %bf.lshr40, 255
  %idxprom42 = sext i32 %bf.clear41 to i64
  %arrayidx43 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom42
  %27 = load i8, i8* %arrayidx43, align 1
  %conv = zext i8 %27 to i32
  %28 = load i32, i32* @target_flags, align 4
  %and44 = and i32 %28, 33554432
  %tobool45 = icmp ne i32 %and44, 0
  %cond46 = select i1 %tobool45, i32 8, i32 4
  %add = add nsw i32 %conv, %cond46
  %sub = sub nsw i32 %add, 1
  %29 = load i32, i32* @target_flags, align 4
  %and47 = and i32 %29, 33554432
  %tobool48 = icmp ne i32 %and47, 0
  %cond49 = select i1 %tobool48, i32 8, i32 4
  %div = sdiv i32 %sub, %cond49
  br label %cond.end

cond.end:                                         ; preds = %cond.false.38, %cond.true.34
  %cond50 = phi i32 [ %cond37, %cond.true.34 ], [ %div, %cond.false.38 ]
  br label %cond.end.51

cond.end.51:                                      ; preds = %cond.end, %cond.true.27
  %cond52 = phi i32 [ %cond28, %cond.true.27 ], [ %cond50, %cond.end ]
  br label %cond.end.53

cond.end.53:                                      ; preds = %cond.end.51, %lor.end
  %cond54 = phi i32 [ %cond, %lor.end ], [ %cond52, %cond.end.51 ]
  br label %cond.end.56

cond.false.55:                                    ; preds = %entry
  br label %cond.end.56

cond.end.56:                                      ; preds = %cond.false.55, %cond.end.53
  %cond57 = phi i32 [ %cond54, %cond.end.53 ], [ 1, %cond.false.55 ]
  %add58 = add i32 %2, %cond57
  store i32 %add58, i32* @reg_dead_endregno, align 4
  store i32 0, i32* @reg_dead_flag, align 4
  %30 = load i32, i32* @reg_dead_regno, align 4
  %cmp59 = icmp ult i32 %30, 53
  br i1 %cmp59, label %if.then, label %if.end.66

if.then:                                          ; preds = %cond.end.56
  %31 = load i32, i32* @reg_dead_regno, align 4
  store i32 %31, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* @reg_dead_endregno, align 4
  %cmp61 = icmp ult i32 %32, %33
  br i1 %cmp61, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %34 = load i64, i64* @newpat_used_regs, align 8
  %35 = load i32, i32* %i, align 4
  %sh_prom = zext i32 %35 to i64
  %shl = shl i64 1, %sh_prom
  %and63 = and i64 %34, %shl
  %tobool64 = icmp ne i64 %and63, 0
  br i1 %tobool64, label %if.then.65, label %if.end

if.then.65:                                       ; preds = %for.body
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %36 = load i32, i32* %i, align 4
  %inc = add i32 %36, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.66

if.end.66:                                        ; preds = %for.end, %cond.end.56
  br label %for.cond.67

for.cond.67:                                      ; preds = %for.inc.90, %if.end.66
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %tobool68 = icmp ne %struct.rtx_def* %37, null
  br i1 %tobool68, label %land.lhs.true.69, label %land.end

land.lhs.true.69:                                 ; preds = %for.cond.67
  %38 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %39 = bitcast %struct.rtx_def* %38 to i32*
  %bf.load70 = load i32, i32* %39, align 8
  %bf.clear71 = and i32 %bf.load70, 65535
  %cmp72 = icmp ne i32 %bf.clear71, 36
  br i1 %cmp72, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.69
  %40 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load74 = load i32, i32* %41, align 8
  %bf.clear75 = and i32 %bf.load74, 65535
  %cmp76 = icmp ne i32 %bf.clear75, 35
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.69, %for.cond.67
  %42 = phi i1 [ false, %land.lhs.true.69 ], [ false, %for.cond.67 ], [ %cmp76, %land.rhs ]
  br i1 %42, label %for.body.78, label %for.end.92

for.body.78:                                      ; preds = %land.end
  %43 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx80 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld79, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  call void @note_stores(%struct.rtx_def* %44, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @reg_dead_at_p_1, i8* null)
  %45 = load i32, i32* @reg_dead_flag, align 4
  %tobool81 = icmp ne i32 %45, 0
  br i1 %tobool81, label %if.then.82, label %if.end.86

if.then.82:                                       ; preds = %for.body.78
  %46 = load i32, i32* @reg_dead_flag, align 4
  %cmp83 = icmp eq i32 %46, 1
  %cond85 = select i1 %cmp83, i32 1, i32 0
  store i32 %cond85, i32* %retval
  br label %return

if.end.86:                                        ; preds = %for.body.78
  %47 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %48 = load i32, i32* @reg_dead_regno, align 4
  %call = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %47, i32 1, i32 %48)
  %tobool87 = icmp ne %struct.rtx_def* %call, null
  br i1 %tobool87, label %if.then.88, label %if.end.89

if.then.88:                                       ; preds = %if.end.86
  store i32 1, i32* %retval
  br label %return

if.end.89:                                        ; preds = %if.end.86
  br label %for.inc.90

for.inc.90:                                       ; preds = %if.end.89
  %49 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call91 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %49)
  store %struct.rtx_def* %call91, %struct.rtx_def** %insn.addr, align 8
  br label %for.cond.67

for.end.92:                                       ; preds = %land.end
  %50 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %cmp93 = icmp eq %struct.rtx_def* %50, null
  br i1 %cmp93, label %if.then.95, label %if.else

if.then.95:                                       ; preds = %for.end.92
  store i32 0, i32* %block, align 4
  br label %if.end.113

if.else:                                          ; preds = %for.end.92
  store i32 0, i32* %block, align 4
  br label %for.cond.96

for.cond.96:                                      ; preds = %for.inc.106, %if.else
  %51 = load i32, i32* %block, align 4
  %52 = load i32, i32* @n_basic_blocks, align 4
  %cmp97 = icmp slt i32 %51, %52
  br i1 %cmp97, label %for.body.99, label %for.end.108

for.body.99:                                      ; preds = %for.cond.96
  %53 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %54 = load i32, i32* %block, align 4
  %idxprom100 = sext i32 %54 to i64
  %55 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %55, i32 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx101 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %bb, i32 0, i64 %idxprom100
  %56 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx101, align 8
  %head = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %56, i32 0, i32 0
  %57 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8
  %cmp102 = icmp eq %struct.rtx_def* %53, %57
  br i1 %cmp102, label %if.then.104, label %if.end.105

if.then.104:                                      ; preds = %for.body.99
  br label %for.end.108

if.end.105:                                       ; preds = %for.body.99
  br label %for.inc.106

for.inc.106:                                      ; preds = %if.end.105
  %58 = load i32, i32* %block, align 4
  %inc107 = add nsw i32 %58, 1
  store i32 %inc107, i32* %block, align 4
  br label %for.cond.96

for.end.108:                                      ; preds = %if.then.104, %for.cond.96
  %59 = load i32, i32* %block, align 4
  %60 = load i32, i32* @n_basic_blocks, align 4
  %cmp109 = icmp eq i32 %59, %60
  br i1 %cmp109, label %if.then.111, label %if.end.112

if.then.111:                                      ; preds = %for.end.108
  store i32 0, i32* %retval
  br label %return

if.end.112:                                       ; preds = %for.end.108
  br label %if.end.113

if.end.113:                                       ; preds = %if.end.112, %if.then.95
  %61 = load i32, i32* @reg_dead_regno, align 4
  store i32 %61, i32* %i, align 4
  br label %for.cond.114

for.cond.114:                                     ; preds = %for.inc.126, %if.end.113
  %62 = load i32, i32* %i, align 4
  %63 = load i32, i32* @reg_dead_endregno, align 4
  %cmp115 = icmp ult i32 %62, %63
  br i1 %cmp115, label %for.body.117, label %for.end.128

for.body.117:                                     ; preds = %for.cond.114
  %64 = load i32, i32* %block, align 4
  %idxprom118 = sext i32 %64 to i64
  %65 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %data119 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %65, i32 0, i32 4
  %bb120 = bitcast %union.varray_data_tag* %data119 to [1 x %struct.basic_block_def*]*
  %arrayidx121 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %bb120, i32 0, i64 %idxprom118
  %66 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx121, align 8
  %global_live_at_start = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %66, i32 0, i32 8
  %67 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %global_live_at_start, align 8
  %68 = load i32, i32* %i, align 4
  %call122 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %67, i32 %68)
  %tobool123 = icmp ne i32 %call122, 0
  br i1 %tobool123, label %if.then.124, label %if.end.125

if.then.124:                                      ; preds = %for.body.117
  store i32 0, i32* %retval
  br label %return

if.end.125:                                       ; preds = %for.body.117
  br label %for.inc.126

for.inc.126:                                      ; preds = %if.end.125
  %69 = load i32, i32* %i, align 4
  %inc127 = add i32 %69, 1
  store i32 %inc127, i32* %i, align 4
  br label %for.cond.114

for.end.128:                                      ; preds = %for.cond.114
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %for.end.128, %if.then.124, %if.then.111, %if.then.88, %if.then.82, %if.then.65
  %70 = load i32, i32* %retval
  ret i32 %70
}

; Function Attrs: nounwind uwtable
define internal void @reg_dead_at_p_1(%struct.rtx_def* %dest, %struct.rtx_def* %x, i8* %data) #0 {
entry:
  %dest.addr = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %data.addr = alloca i8*, align 8
  %regno = alloca i32, align 4
  %endregno = alloca i32, align 4
  store %struct.rtx_def* %dest, %struct.rtx_def** %dest.addr, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i8* %data, i8** %data.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp ne i32 %bf.clear, 61
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end.73

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %3 = load i32, i32* %rtuint, align 4
  store i32 %3, i32* %regno, align 4
  %4 = load i32, i32* %regno, align 4
  %5 = load i32, i32* %regno, align 4
  %cmp1 = icmp ult i32 %5, 53
  br i1 %cmp1, label %cond.true, label %cond.false.58

cond.true:                                        ; preds = %if.end
  %6 = load i32, i32* %regno, align 4
  %cmp2 = icmp uge i32 %6, 8
  br i1 %cmp2, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %cond.true
  %7 = load i32, i32* %regno, align 4
  %cmp3 = icmp ule i32 %7, 15
  br i1 %cmp3, label %cond.true.15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %cond.true
  %8 = load i32, i32* %regno, align 4
  %cmp4 = icmp uge i32 %8, 21
  br i1 %cmp4, label %land.lhs.true.5, label %lor.lhs.false.7

land.lhs.true.5:                                  ; preds = %lor.lhs.false
  %9 = load i32, i32* %regno, align 4
  %cmp6 = icmp ule i32 %9, 28
  br i1 %cmp6, label %cond.true.15, label %lor.lhs.false.7

lor.lhs.false.7:                                  ; preds = %land.lhs.true.5, %lor.lhs.false
  %10 = load i32, i32* %regno, align 4
  %cmp8 = icmp uge i32 %10, 45
  br i1 %cmp8, label %land.lhs.true.9, label %lor.lhs.false.11

land.lhs.true.9:                                  ; preds = %lor.lhs.false.7
  %11 = load i32, i32* %regno, align 4
  %cmp10 = icmp ule i32 %11, 52
  br i1 %cmp10, label %cond.true.15, label %lor.lhs.false.11

lor.lhs.false.11:                                 ; preds = %land.lhs.true.9, %lor.lhs.false.7
  %12 = load i32, i32* %regno, align 4
  %cmp12 = icmp uge i32 %12, 29
  br i1 %cmp12, label %land.lhs.true.13, label %cond.false

land.lhs.true.13:                                 ; preds = %lor.lhs.false.11
  %13 = load i32, i32* %regno, align 4
  %cmp14 = icmp ule i32 %13, 36
  br i1 %cmp14, label %cond.true.15, label %cond.false

cond.true.15:                                     ; preds = %land.lhs.true.13, %land.lhs.true.9, %land.lhs.true.5, %land.lhs.true
  %14 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %15 = bitcast %struct.rtx_def* %14 to i32*
  %bf.load16 = load i32, i32* %15, align 8
  %bf.lshr = lshr i32 %bf.load16, 16
  %bf.clear17 = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear17 to i64
  %arrayidx18 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %16 = load i32, i32* %arrayidx18, align 4
  %cmp19 = icmp eq i32 %16, 5
  br i1 %cmp19, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.15
  %17 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %18 = bitcast %struct.rtx_def* %17 to i32*
  %bf.load20 = load i32, i32* %18, align 8
  %bf.lshr21 = lshr i32 %bf.load20, 16
  %bf.clear22 = and i32 %bf.lshr21, 255
  %idxprom23 = sext i32 %bf.clear22 to i64
  %arrayidx24 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom23
  %19 = load i32, i32* %arrayidx24, align 4
  %cmp25 = icmp eq i32 %19, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.15
  %20 = phi i1 [ true, %cond.true.15 ], [ %cmp25, %lor.rhs ]
  %cond = select i1 %20, i32 2, i32 1
  br label %cond.end.56

cond.false:                                       ; preds = %land.lhs.true.13, %lor.lhs.false.11
  %21 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %22 = bitcast %struct.rtx_def* %21 to i32*
  %bf.load26 = load i32, i32* %22, align 8
  %bf.lshr27 = lshr i32 %bf.load26, 16
  %bf.clear28 = and i32 %bf.lshr27, 255
  %cmp29 = icmp eq i32 %bf.clear28, 18
  br i1 %cmp29, label %cond.true.30, label %cond.false.32

cond.true.30:                                     ; preds = %cond.false
  %23 = load i32, i32* @target_flags, align 4
  %and = and i32 %23, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond31 = select i1 %tobool, i32 2, i32 3
  br label %cond.end.54

cond.false.32:                                    ; preds = %cond.false
  %24 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load33 = load i32, i32* %25, align 8
  %bf.lshr34 = lshr i32 %bf.load33, 16
  %bf.clear35 = and i32 %bf.lshr34, 255
  %cmp36 = icmp eq i32 %bf.clear35, 24
  br i1 %cmp36, label %cond.true.37, label %cond.false.41

cond.true.37:                                     ; preds = %cond.false.32
  %26 = load i32, i32* @target_flags, align 4
  %and38 = and i32 %26, 33554432
  %tobool39 = icmp ne i32 %and38, 0
  %cond40 = select i1 %tobool39, i32 4, i32 6
  br label %cond.end

cond.false.41:                                    ; preds = %cond.false.32
  %27 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load42 = load i32, i32* %28, align 8
  %bf.lshr43 = lshr i32 %bf.load42, 16
  %bf.clear44 = and i32 %bf.lshr43, 255
  %idxprom45 = sext i32 %bf.clear44 to i64
  %arrayidx46 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom45
  %29 = load i8, i8* %arrayidx46, align 1
  %conv = zext i8 %29 to i32
  %30 = load i32, i32* @target_flags, align 4
  %and47 = and i32 %30, 33554432
  %tobool48 = icmp ne i32 %and47, 0
  %cond49 = select i1 %tobool48, i32 8, i32 4
  %add = add nsw i32 %conv, %cond49
  %sub = sub nsw i32 %add, 1
  %31 = load i32, i32* @target_flags, align 4
  %and50 = and i32 %31, 33554432
  %tobool51 = icmp ne i32 %and50, 0
  %cond52 = select i1 %tobool51, i32 8, i32 4
  %div = sdiv i32 %sub, %cond52
  br label %cond.end

cond.end:                                         ; preds = %cond.false.41, %cond.true.37
  %cond53 = phi i32 [ %cond40, %cond.true.37 ], [ %div, %cond.false.41 ]
  br label %cond.end.54

cond.end.54:                                      ; preds = %cond.end, %cond.true.30
  %cond55 = phi i32 [ %cond31, %cond.true.30 ], [ %cond53, %cond.end ]
  br label %cond.end.56

cond.end.56:                                      ; preds = %cond.end.54, %lor.end
  %cond57 = phi i32 [ %cond, %lor.end ], [ %cond55, %cond.end.54 ]
  br label %cond.end.59

cond.false.58:                                    ; preds = %if.end
  br label %cond.end.59

cond.end.59:                                      ; preds = %cond.false.58, %cond.end.56
  %cond60 = phi i32 [ %cond57, %cond.end.56 ], [ 1, %cond.false.58 ]
  %add61 = add i32 %4, %cond60
  store i32 %add61, i32* %endregno, align 4
  %32 = load i32, i32* @reg_dead_endregno, align 4
  %33 = load i32, i32* %regno, align 4
  %cmp62 = icmp ugt i32 %32, %33
  br i1 %cmp62, label %land.lhs.true.64, label %if.end.73

land.lhs.true.64:                                 ; preds = %cond.end.59
  %34 = load i32, i32* @reg_dead_regno, align 4
  %35 = load i32, i32* %endregno, align 4
  %cmp65 = icmp ult i32 %34, %35
  br i1 %cmp65, label %if.then.67, label %if.end.73

if.then.67:                                       ; preds = %land.lhs.true.64
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %37 = bitcast %struct.rtx_def* %36 to i32*
  %bf.load68 = load i32, i32* %37, align 8
  %bf.clear69 = and i32 %bf.load68, 65535
  %cmp70 = icmp eq i32 %bf.clear69, 49
  %cond72 = select i1 %cmp70, i32 1, i32 -1
  store i32 %cond72, i32* @reg_dead_flag, align 4
  br label %if.end.73

if.end.73:                                        ; preds = %if.then, %if.then.67, %land.lhs.true.64, %cond.end.59
  ret void
}

declare %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def*) #1

declare i32 @memory_address_p(i32, %struct.rtx_def*) #1

declare i32 @register_operand(%struct.rtx_def*, i32) #1

declare i32 @may_trap_p(%struct.rtx_def*) #1

declare %struct.rtx_def* @prev_real_insn(%struct.rtx_def*) #1

declare i32 @noop_move_p(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal i32 @reg_bitfield_target_p(%struct.rtx_def* %x, %struct.rtx_def* %body) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %body.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %dest = alloca %struct.rtx_def*, align 8
  %target = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %tregno = alloca i32, align 4
  %endregno = alloca i32, align 4
  %endtregno = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %body, %struct.rtx_def** %body.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 47
  br i1 %cmp, label %if.then, label %if.else.201

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %dest, align 8
  %4 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load1 = load i32, i32* %5, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 133
  br i1 %cmp3, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %if.then
  %6 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i32 0, i64 0
  %rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtx7, align 8
  store %struct.rtx_def* %7, %struct.rtx_def** %target, align 8
  br label %if.end.19

if.else:                                          ; preds = %if.then
  %8 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load8 = load i32, i32* %9, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  %cmp10 = icmp eq i32 %bf.clear9, 64
  br i1 %cmp10, label %if.then.11, label %if.else.18

if.then.11:                                       ; preds = %if.else
  %10 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i32 0, i64 0
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rtx14, align 8
  %fld15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i32 0, i64 0
  %rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rtx17, align 8
  store %struct.rtx_def* %12, %struct.rtx_def** %target, align 8
  br label %if.end

if.else.18:                                       ; preds = %if.else
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then.11
  br label %if.end.19

if.end.19:                                        ; preds = %if.end, %if.then.4
  %13 = load %struct.rtx_def*, %struct.rtx_def** %target, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load20 = load i32, i32* %14, align 8
  %bf.clear21 = and i32 %bf.load20, 65535
  %cmp22 = icmp eq i32 %bf.clear21, 63
  br i1 %cmp22, label %if.then.23, label %if.end.27

if.then.23:                                       ; preds = %if.end.19
  %15 = load %struct.rtx_def*, %struct.rtx_def** %target, align 8
  %fld24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i32 0, i64 0
  %rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rtx26, align 8
  store %struct.rtx_def* %16, %struct.rtx_def** %target, align 8
  br label %if.end.27

if.end.27:                                        ; preds = %if.then.23, %if.end.19
  %17 = load %struct.rtx_def*, %struct.rtx_def** %target, align 8
  %18 = bitcast %struct.rtx_def* %17 to i32*
  %bf.load28 = load i32, i32* %18, align 8
  %bf.clear29 = and i32 %bf.load28, 65535
  %cmp30 = icmp ne i32 %bf.clear29, 61
  br i1 %cmp30, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.27
  store i32 0, i32* %retval
  br label %return

if.end.32:                                        ; preds = %if.end.27
  %19 = load %struct.rtx_def*, %struct.rtx_def** %target, align 8
  %fld33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %arrayidx34 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld33, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx34 to i32*
  %20 = load i32, i32* %rtuint, align 4
  store i32 %20, i32* %tregno, align 4
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i32 0, i64 0
  %rtuint37 = bitcast %union.rtunion_def* %arrayidx36 to i32*
  %22 = load i32, i32* %rtuint37, align 4
  store i32 %22, i32* %regno, align 4
  %23 = load i32, i32* %tregno, align 4
  %cmp38 = icmp uge i32 %23, 53
  br i1 %cmp38, label %if.then.40, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.32
  %24 = load i32, i32* %regno, align 4
  %cmp39 = icmp uge i32 %24, 53
  br i1 %cmp39, label %if.then.40, label %if.end.42

if.then.40:                                       ; preds = %lor.lhs.false, %if.end.32
  %25 = load %struct.rtx_def*, %struct.rtx_def** %target, align 8
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %cmp41 = icmp eq %struct.rtx_def* %25, %26
  %conv = zext i1 %cmp41 to i32
  store i32 %conv, i32* %retval
  br label %return

if.end.42:                                        ; preds = %lor.lhs.false
  %27 = load i32, i32* %tregno, align 4
  %28 = load i32, i32* %tregno, align 4
  %cmp43 = icmp uge i32 %28, 8
  br i1 %cmp43, label %land.lhs.true, label %lor.lhs.false.47

land.lhs.true:                                    ; preds = %if.end.42
  %29 = load i32, i32* %tregno, align 4
  %cmp45 = icmp ule i32 %29, 15
  br i1 %cmp45, label %cond.true, label %lor.lhs.false.47

lor.lhs.false.47:                                 ; preds = %land.lhs.true, %if.end.42
  %30 = load i32, i32* %tregno, align 4
  %cmp48 = icmp uge i32 %30, 21
  br i1 %cmp48, label %land.lhs.true.50, label %lor.lhs.false.53

land.lhs.true.50:                                 ; preds = %lor.lhs.false.47
  %31 = load i32, i32* %tregno, align 4
  %cmp51 = icmp ule i32 %31, 28
  br i1 %cmp51, label %cond.true, label %lor.lhs.false.53

lor.lhs.false.53:                                 ; preds = %land.lhs.true.50, %lor.lhs.false.47
  %32 = load i32, i32* %tregno, align 4
  %cmp54 = icmp uge i32 %32, 45
  br i1 %cmp54, label %land.lhs.true.56, label %lor.lhs.false.59

land.lhs.true.56:                                 ; preds = %lor.lhs.false.53
  %33 = load i32, i32* %tregno, align 4
  %cmp57 = icmp ule i32 %33, 52
  br i1 %cmp57, label %cond.true, label %lor.lhs.false.59

lor.lhs.false.59:                                 ; preds = %land.lhs.true.56, %lor.lhs.false.53
  %34 = load i32, i32* %tregno, align 4
  %cmp60 = icmp uge i32 %34, 29
  br i1 %cmp60, label %land.lhs.true.62, label %cond.false

land.lhs.true.62:                                 ; preds = %lor.lhs.false.59
  %35 = load i32, i32* %tregno, align 4
  %cmp63 = icmp ule i32 %35, 36
  br i1 %cmp63, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.62, %land.lhs.true.56, %land.lhs.true.50, %land.lhs.true
  %36 = load %struct.rtx_def*, %struct.rtx_def** %target, align 8
  %37 = bitcast %struct.rtx_def* %36 to i32*
  %bf.load65 = load i32, i32* %37, align 8
  %bf.lshr = lshr i32 %bf.load65, 16
  %bf.clear66 = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear66 to i64
  %arrayidx67 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %38 = load i32, i32* %arrayidx67, align 4
  %cmp68 = icmp eq i32 %38, 5
  br i1 %cmp68, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %39 = load %struct.rtx_def*, %struct.rtx_def** %target, align 8
  %40 = bitcast %struct.rtx_def* %39 to i32*
  %bf.load70 = load i32, i32* %40, align 8
  %bf.lshr71 = lshr i32 %bf.load70, 16
  %bf.clear72 = and i32 %bf.lshr71, 255
  %idxprom73 = sext i32 %bf.clear72 to i64
  %arrayidx74 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom73
  %41 = load i32, i32* %arrayidx74, align 4
  %cmp75 = icmp eq i32 %41, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %42 = phi i1 [ true, %cond.true ], [ %cmp75, %lor.rhs ]
  %cond = select i1 %42, i32 2, i32 1
  br label %cond.end.110

cond.false:                                       ; preds = %land.lhs.true.62, %lor.lhs.false.59
  %43 = load %struct.rtx_def*, %struct.rtx_def** %target, align 8
  %44 = bitcast %struct.rtx_def* %43 to i32*
  %bf.load77 = load i32, i32* %44, align 8
  %bf.lshr78 = lshr i32 %bf.load77, 16
  %bf.clear79 = and i32 %bf.lshr78, 255
  %cmp80 = icmp eq i32 %bf.clear79, 18
  br i1 %cmp80, label %cond.true.82, label %cond.false.84

cond.true.82:                                     ; preds = %cond.false
  %45 = load i32, i32* @target_flags, align 4
  %and = and i32 %45, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond83 = select i1 %tobool, i32 2, i32 3
  br label %cond.end.108

cond.false.84:                                    ; preds = %cond.false
  %46 = load %struct.rtx_def*, %struct.rtx_def** %target, align 8
  %47 = bitcast %struct.rtx_def* %46 to i32*
  %bf.load85 = load i32, i32* %47, align 8
  %bf.lshr86 = lshr i32 %bf.load85, 16
  %bf.clear87 = and i32 %bf.lshr86, 255
  %cmp88 = icmp eq i32 %bf.clear87, 24
  br i1 %cmp88, label %cond.true.90, label %cond.false.94

cond.true.90:                                     ; preds = %cond.false.84
  %48 = load i32, i32* @target_flags, align 4
  %and91 = and i32 %48, 33554432
  %tobool92 = icmp ne i32 %and91, 0
  %cond93 = select i1 %tobool92, i32 4, i32 6
  br label %cond.end

cond.false.94:                                    ; preds = %cond.false.84
  %49 = load %struct.rtx_def*, %struct.rtx_def** %target, align 8
  %50 = bitcast %struct.rtx_def* %49 to i32*
  %bf.load95 = load i32, i32* %50, align 8
  %bf.lshr96 = lshr i32 %bf.load95, 16
  %bf.clear97 = and i32 %bf.lshr96, 255
  %idxprom98 = sext i32 %bf.clear97 to i64
  %arrayidx99 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom98
  %51 = load i8, i8* %arrayidx99, align 1
  %conv100 = zext i8 %51 to i32
  %52 = load i32, i32* @target_flags, align 4
  %and101 = and i32 %52, 33554432
  %tobool102 = icmp ne i32 %and101, 0
  %cond103 = select i1 %tobool102, i32 8, i32 4
  %add = add nsw i32 %conv100, %cond103
  %sub = sub nsw i32 %add, 1
  %53 = load i32, i32* @target_flags, align 4
  %and104 = and i32 %53, 33554432
  %tobool105 = icmp ne i32 %and104, 0
  %cond106 = select i1 %tobool105, i32 8, i32 4
  %div = sdiv i32 %sub, %cond106
  br label %cond.end

cond.end:                                         ; preds = %cond.false.94, %cond.true.90
  %cond107 = phi i32 [ %cond93, %cond.true.90 ], [ %div, %cond.false.94 ]
  br label %cond.end.108

cond.end.108:                                     ; preds = %cond.end, %cond.true.82
  %cond109 = phi i32 [ %cond83, %cond.true.82 ], [ %cond107, %cond.end ]
  br label %cond.end.110

cond.end.110:                                     ; preds = %cond.end.108, %lor.end
  %cond111 = phi i32 [ %cond, %lor.end ], [ %cond109, %cond.end.108 ]
  %add112 = add i32 %27, %cond111
  store i32 %add112, i32* %endtregno, align 4
  %54 = load i32, i32* %regno, align 4
  %55 = load i32, i32* %regno, align 4
  %cmp113 = icmp uge i32 %55, 8
  br i1 %cmp113, label %land.lhs.true.115, label %lor.lhs.false.118

land.lhs.true.115:                                ; preds = %cond.end.110
  %56 = load i32, i32* %regno, align 4
  %cmp116 = icmp ule i32 %56, 15
  br i1 %cmp116, label %cond.true.136, label %lor.lhs.false.118

lor.lhs.false.118:                                ; preds = %land.lhs.true.115, %cond.end.110
  %57 = load i32, i32* %regno, align 4
  %cmp119 = icmp uge i32 %57, 21
  br i1 %cmp119, label %land.lhs.true.121, label %lor.lhs.false.124

land.lhs.true.121:                                ; preds = %lor.lhs.false.118
  %58 = load i32, i32* %regno, align 4
  %cmp122 = icmp ule i32 %58, 28
  br i1 %cmp122, label %cond.true.136, label %lor.lhs.false.124

lor.lhs.false.124:                                ; preds = %land.lhs.true.121, %lor.lhs.false.118
  %59 = load i32, i32* %regno, align 4
  %cmp125 = icmp uge i32 %59, 45
  br i1 %cmp125, label %land.lhs.true.127, label %lor.lhs.false.130

land.lhs.true.127:                                ; preds = %lor.lhs.false.124
  %60 = load i32, i32* %regno, align 4
  %cmp128 = icmp ule i32 %60, 52
  br i1 %cmp128, label %cond.true.136, label %lor.lhs.false.130

lor.lhs.false.130:                                ; preds = %land.lhs.true.127, %lor.lhs.false.124
  %61 = load i32, i32* %regno, align 4
  %cmp131 = icmp uge i32 %61, 29
  br i1 %cmp131, label %land.lhs.true.133, label %cond.false.154

land.lhs.true.133:                                ; preds = %lor.lhs.false.130
  %62 = load i32, i32* %regno, align 4
  %cmp134 = icmp ule i32 %62, 36
  br i1 %cmp134, label %cond.true.136, label %cond.false.154

cond.true.136:                                    ; preds = %land.lhs.true.133, %land.lhs.true.127, %land.lhs.true.121, %land.lhs.true.115
  %63 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %64 = bitcast %struct.rtx_def* %63 to i32*
  %bf.load137 = load i32, i32* %64, align 8
  %bf.lshr138 = lshr i32 %bf.load137, 16
  %bf.clear139 = and i32 %bf.lshr138, 255
  %idxprom140 = sext i32 %bf.clear139 to i64
  %arrayidx141 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom140
  %65 = load i32, i32* %arrayidx141, align 4
  %cmp142 = icmp eq i32 %65, 5
  br i1 %cmp142, label %lor.end.152, label %lor.rhs.144

lor.rhs.144:                                      ; preds = %cond.true.136
  %66 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %67 = bitcast %struct.rtx_def* %66 to i32*
  %bf.load145 = load i32, i32* %67, align 8
  %bf.lshr146 = lshr i32 %bf.load145, 16
  %bf.clear147 = and i32 %bf.lshr146, 255
  %idxprom148 = sext i32 %bf.clear147 to i64
  %arrayidx149 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom148
  %68 = load i32, i32* %arrayidx149, align 4
  %cmp150 = icmp eq i32 %68, 6
  br label %lor.end.152

lor.end.152:                                      ; preds = %lor.rhs.144, %cond.true.136
  %69 = phi i1 [ true, %cond.true.136 ], [ %cmp150, %lor.rhs.144 ]
  %cond153 = select i1 %69, i32 2, i32 1
  br label %cond.end.194

cond.false.154:                                   ; preds = %land.lhs.true.133, %lor.lhs.false.130
  %70 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %71 = bitcast %struct.rtx_def* %70 to i32*
  %bf.load155 = load i32, i32* %71, align 8
  %bf.lshr156 = lshr i32 %bf.load155, 16
  %bf.clear157 = and i32 %bf.lshr156, 255
  %cmp158 = icmp eq i32 %bf.clear157, 18
  br i1 %cmp158, label %cond.true.160, label %cond.false.164

cond.true.160:                                    ; preds = %cond.false.154
  %72 = load i32, i32* @target_flags, align 4
  %and161 = and i32 %72, 33554432
  %tobool162 = icmp ne i32 %and161, 0
  %cond163 = select i1 %tobool162, i32 2, i32 3
  br label %cond.end.192

cond.false.164:                                   ; preds = %cond.false.154
  %73 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %74 = bitcast %struct.rtx_def* %73 to i32*
  %bf.load165 = load i32, i32* %74, align 8
  %bf.lshr166 = lshr i32 %bf.load165, 16
  %bf.clear167 = and i32 %bf.lshr166, 255
  %cmp168 = icmp eq i32 %bf.clear167, 24
  br i1 %cmp168, label %cond.true.170, label %cond.false.174

cond.true.170:                                    ; preds = %cond.false.164
  %75 = load i32, i32* @target_flags, align 4
  %and171 = and i32 %75, 33554432
  %tobool172 = icmp ne i32 %and171, 0
  %cond173 = select i1 %tobool172, i32 4, i32 6
  br label %cond.end.190

cond.false.174:                                   ; preds = %cond.false.164
  %76 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %77 = bitcast %struct.rtx_def* %76 to i32*
  %bf.load175 = load i32, i32* %77, align 8
  %bf.lshr176 = lshr i32 %bf.load175, 16
  %bf.clear177 = and i32 %bf.lshr176, 255
  %idxprom178 = sext i32 %bf.clear177 to i64
  %arrayidx179 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom178
  %78 = load i8, i8* %arrayidx179, align 1
  %conv180 = zext i8 %78 to i32
  %79 = load i32, i32* @target_flags, align 4
  %and181 = and i32 %79, 33554432
  %tobool182 = icmp ne i32 %and181, 0
  %cond183 = select i1 %tobool182, i32 8, i32 4
  %add184 = add nsw i32 %conv180, %cond183
  %sub185 = sub nsw i32 %add184, 1
  %80 = load i32, i32* @target_flags, align 4
  %and186 = and i32 %80, 33554432
  %tobool187 = icmp ne i32 %and186, 0
  %cond188 = select i1 %tobool187, i32 8, i32 4
  %div189 = sdiv i32 %sub185, %cond188
  br label %cond.end.190

cond.end.190:                                     ; preds = %cond.false.174, %cond.true.170
  %cond191 = phi i32 [ %cond173, %cond.true.170 ], [ %div189, %cond.false.174 ]
  br label %cond.end.192

cond.end.192:                                     ; preds = %cond.end.190, %cond.true.160
  %cond193 = phi i32 [ %cond163, %cond.true.160 ], [ %cond191, %cond.end.190 ]
  br label %cond.end.194

cond.end.194:                                     ; preds = %cond.end.192, %lor.end.152
  %cond195 = phi i32 [ %cond153, %lor.end.152 ], [ %cond193, %cond.end.192 ]
  %add196 = add i32 %54, %cond195
  store i32 %add196, i32* %endregno, align 4
  %81 = load i32, i32* %endregno, align 4
  %82 = load i32, i32* %tregno, align 4
  %cmp197 = icmp ugt i32 %81, %82
  br i1 %cmp197, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.end.194
  %83 = load i32, i32* %regno, align 4
  %84 = load i32, i32* %endtregno, align 4
  %cmp199 = icmp ult i32 %83, %84
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end.194
  %85 = phi i1 [ false, %cond.end.194 ], [ %cmp199, %land.rhs ]
  %land.ext = zext i1 %85 to i32
  store i32 %land.ext, i32* %retval
  br label %return

if.else.201:                                      ; preds = %entry
  %86 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8
  %87 = bitcast %struct.rtx_def* %86 to i32*
  %bf.load202 = load i32, i32* %87, align 8
  %bf.clear203 = and i32 %bf.load202, 65535
  %cmp204 = icmp eq i32 %bf.clear203, 39
  br i1 %cmp204, label %if.then.206, label %if.end.220

if.then.206:                                      ; preds = %if.else.201
  %88 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8
  %fld207 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1
  %arrayidx208 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld207, i32 0, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx208 to %struct.rtvec_def**
  %89 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %89, i32 0, i32 0
  %90 = load i32, i32* %num_elem, align 4
  %sub209 = sub nsw i32 %90, 1
  store i32 %sub209, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.206
  %91 = load i32, i32* %i, align 4
  %cmp210 = icmp sge i32 %91, 0
  br i1 %cmp210, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %92 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %93 = load i32, i32* %i, align 4
  %idxprom212 = sext i32 %93 to i64
  %94 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8
  %fld213 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1
  %arrayidx214 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld213, i32 0, i64 0
  %rtvec215 = bitcast %union.rtunion_def* %arrayidx214 to %struct.rtvec_def**
  %95 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec215, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %95, i32 0, i32 1
  %arrayidx216 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom212
  %96 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx216, align 8
  %call = call i32 @reg_bitfield_target_p(%struct.rtx_def* %92, %struct.rtx_def* %96)
  %tobool217 = icmp ne i32 %call, 0
  br i1 %tobool217, label %if.then.218, label %if.end.219

if.then.218:                                      ; preds = %for.body
  store i32 1, i32* %retval
  br label %return

if.end.219:                                       ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.219
  %97 = load i32, i32* %i, align 4
  %dec = add nsw i32 %97, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.220

if.end.220:                                       ; preds = %for.end, %if.else.201
  br label %if.end.221

if.end.221:                                       ; preds = %if.end.220
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.221, %if.then.218, %land.end, %if.then.40, %if.then.31, %if.else.18
  %98 = load i32, i32* %retval
  ret i32 %98
}

declare i32 @refers_to_regno_p(i32, i32, %struct.rtx_def*, %struct.rtx_def**) #1

declare i32 @find_regno_fusage(%struct.rtx_def*, i32, i32) #1

declare i32 @dead_or_set_regno_p(%struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define internal void @update_table_tick(%struct.rtx_def* %x) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %regno = alloca i32, align 4
  %endregno = alloca i32, align 4
  %r = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %2 = load i32, i32* %code, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom
  %3 = load i8*, i8** %arrayidx, align 8
  store i8* %3, i8** %fmt, align 8
  %4 = load i32, i32* %code, align 4
  %cmp = icmp eq i32 %4, 61
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx1 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx1 to i32*
  %6 = load i32, i32* %rtuint, align 4
  store i32 %6, i32* %regno, align 4
  %7 = load i32, i32* %regno, align 4
  %8 = load i32, i32* %regno, align 4
  %cmp2 = icmp ult i32 %8, 53
  br i1 %cmp2, label %cond.true, label %cond.false.60

cond.true:                                        ; preds = %if.then
  %9 = load i32, i32* %regno, align 4
  %cmp3 = icmp uge i32 %9, 8
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %cond.true
  %10 = load i32, i32* %regno, align 4
  %cmp4 = icmp ule i32 %10, 15
  br i1 %cmp4, label %cond.true.16, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %cond.true
  %11 = load i32, i32* %regno, align 4
  %cmp5 = icmp uge i32 %11, 21
  br i1 %cmp5, label %land.lhs.true.6, label %lor.lhs.false.8

land.lhs.true.6:                                  ; preds = %lor.lhs.false
  %12 = load i32, i32* %regno, align 4
  %cmp7 = icmp ule i32 %12, 28
  br i1 %cmp7, label %cond.true.16, label %lor.lhs.false.8

lor.lhs.false.8:                                  ; preds = %land.lhs.true.6, %lor.lhs.false
  %13 = load i32, i32* %regno, align 4
  %cmp9 = icmp uge i32 %13, 45
  br i1 %cmp9, label %land.lhs.true.10, label %lor.lhs.false.12

land.lhs.true.10:                                 ; preds = %lor.lhs.false.8
  %14 = load i32, i32* %regno, align 4
  %cmp11 = icmp ule i32 %14, 52
  br i1 %cmp11, label %cond.true.16, label %lor.lhs.false.12

lor.lhs.false.12:                                 ; preds = %land.lhs.true.10, %lor.lhs.false.8
  %15 = load i32, i32* %regno, align 4
  %cmp13 = icmp uge i32 %15, 29
  br i1 %cmp13, label %land.lhs.true.14, label %cond.false

land.lhs.true.14:                                 ; preds = %lor.lhs.false.12
  %16 = load i32, i32* %regno, align 4
  %cmp15 = icmp ule i32 %16, 36
  br i1 %cmp15, label %cond.true.16, label %cond.false

cond.true.16:                                     ; preds = %land.lhs.true.14, %land.lhs.true.10, %land.lhs.true.6, %land.lhs.true
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %18 = bitcast %struct.rtx_def* %17 to i32*
  %bf.load17 = load i32, i32* %18, align 8
  %bf.lshr = lshr i32 %bf.load17, 16
  %bf.clear18 = and i32 %bf.lshr, 255
  %idxprom19 = sext i32 %bf.clear18 to i64
  %arrayidx20 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom19
  %19 = load i32, i32* %arrayidx20, align 4
  %cmp21 = icmp eq i32 %19, 5
  br i1 %cmp21, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.16
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load22 = load i32, i32* %21, align 8
  %bf.lshr23 = lshr i32 %bf.load22, 16
  %bf.clear24 = and i32 %bf.lshr23, 255
  %idxprom25 = sext i32 %bf.clear24 to i64
  %arrayidx26 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom25
  %22 = load i32, i32* %arrayidx26, align 4
  %cmp27 = icmp eq i32 %22, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.16
  %23 = phi i1 [ true, %cond.true.16 ], [ %cmp27, %lor.rhs ]
  %cond = select i1 %23, i32 2, i32 1
  br label %cond.end.58

cond.false:                                       ; preds = %land.lhs.true.14, %lor.lhs.false.12
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load28 = load i32, i32* %25, align 8
  %bf.lshr29 = lshr i32 %bf.load28, 16
  %bf.clear30 = and i32 %bf.lshr29, 255
  %cmp31 = icmp eq i32 %bf.clear30, 18
  br i1 %cmp31, label %cond.true.32, label %cond.false.34

cond.true.32:                                     ; preds = %cond.false
  %26 = load i32, i32* @target_flags, align 4
  %and = and i32 %26, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond33 = select i1 %tobool, i32 2, i32 3
  br label %cond.end.56

cond.false.34:                                    ; preds = %cond.false
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load35 = load i32, i32* %28, align 8
  %bf.lshr36 = lshr i32 %bf.load35, 16
  %bf.clear37 = and i32 %bf.lshr36, 255
  %cmp38 = icmp eq i32 %bf.clear37, 24
  br i1 %cmp38, label %cond.true.39, label %cond.false.43

cond.true.39:                                     ; preds = %cond.false.34
  %29 = load i32, i32* @target_flags, align 4
  %and40 = and i32 %29, 33554432
  %tobool41 = icmp ne i32 %and40, 0
  %cond42 = select i1 %tobool41, i32 4, i32 6
  br label %cond.end

cond.false.43:                                    ; preds = %cond.false.34
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load44 = load i32, i32* %31, align 8
  %bf.lshr45 = lshr i32 %bf.load44, 16
  %bf.clear46 = and i32 %bf.lshr45, 255
  %idxprom47 = sext i32 %bf.clear46 to i64
  %arrayidx48 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom47
  %32 = load i8, i8* %arrayidx48, align 1
  %conv = zext i8 %32 to i32
  %33 = load i32, i32* @target_flags, align 4
  %and49 = and i32 %33, 33554432
  %tobool50 = icmp ne i32 %and49, 0
  %cond51 = select i1 %tobool50, i32 8, i32 4
  %add = add nsw i32 %conv, %cond51
  %sub = sub nsw i32 %add, 1
  %34 = load i32, i32* @target_flags, align 4
  %and52 = and i32 %34, 33554432
  %tobool53 = icmp ne i32 %and52, 0
  %cond54 = select i1 %tobool53, i32 8, i32 4
  %div = sdiv i32 %sub, %cond54
  br label %cond.end

cond.end:                                         ; preds = %cond.false.43, %cond.true.39
  %cond55 = phi i32 [ %cond42, %cond.true.39 ], [ %div, %cond.false.43 ]
  br label %cond.end.56

cond.end.56:                                      ; preds = %cond.end, %cond.true.32
  %cond57 = phi i32 [ %cond33, %cond.true.32 ], [ %cond55, %cond.end ]
  br label %cond.end.58

cond.end.58:                                      ; preds = %cond.end.56, %lor.end
  %cond59 = phi i32 [ %cond, %lor.end ], [ %cond57, %cond.end.56 ]
  br label %cond.end.61

cond.false.60:                                    ; preds = %if.then
  br label %cond.end.61

cond.end.61:                                      ; preds = %cond.false.60, %cond.end.58
  %cond62 = phi i32 [ %cond59, %cond.end.58 ], [ 1, %cond.false.60 ]
  %add63 = add i32 %7, %cond62
  store i32 %add63, i32* %endregno, align 4
  %35 = load i32, i32* %regno, align 4
  store i32 %35, i32* %r, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.61
  %36 = load i32, i32* %r, align 4
  %37 = load i32, i32* %endregno, align 4
  %cmp64 = icmp ult i32 %36, %37
  br i1 %cmp64, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %38 = load i32, i32* @label_tick, align 4
  %39 = load i32, i32* %r, align 4
  %idxprom66 = zext i32 %39 to i64
  %40 = load i32*, i32** @reg_last_set_table_tick, align 8
  %arrayidx67 = getelementptr inbounds i32, i32* %40, i64 %idxprom66
  store i32 %38, i32* %arrayidx67, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %41 = load i32, i32* %r, align 4
  %inc = add i32 %41, 1
  store i32 %inc, i32* %r, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %for.end.87

if.end:                                           ; preds = %entry
  %42 = load i32, i32* %code, align 4
  %idxprom68 = sext i32 %42 to i64
  %arrayidx69 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom68
  %43 = load i8, i8* %arrayidx69, align 1
  %conv70 = zext i8 %43 to i32
  %sub71 = sub nsw i32 %conv70, 1
  store i32 %sub71, i32* %i, align 4
  br label %for.cond.72

for.cond.72:                                      ; preds = %for.inc.86, %if.end
  %44 = load i32, i32* %i, align 4
  %cmp73 = icmp sge i32 %44, 0
  br i1 %cmp73, label %for.body.75, label %for.end.87

for.body.75:                                      ; preds = %for.cond.72
  %45 = load i32, i32* %i, align 4
  %idxprom76 = sext i32 %45 to i64
  %46 = load i8*, i8** %fmt, align 8
  %arrayidx77 = getelementptr inbounds i8, i8* %46, i64 %idxprom76
  %47 = load i8, i8* %arrayidx77, align 1
  %conv78 = sext i8 %47 to i32
  %cmp79 = icmp eq i32 %conv78, 101
  br i1 %cmp79, label %if.then.81, label %if.end.85

if.then.81:                                       ; preds = %for.body.75
  %48 = load i32, i32* %i, align 4
  %idxprom82 = sext i32 %48 to i64
  %49 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i32 0, i64 %idxprom82
  %rtx = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  call void @update_table_tick(%struct.rtx_def* %50)
  br label %if.end.85

if.end.85:                                        ; preds = %if.then.81, %for.body.75
  br label %for.inc.86

for.inc.86:                                       ; preds = %if.end.85
  %51 = load i32, i32* %i, align 4
  %dec = add nsw i32 %51, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond.72

for.end.87:                                       ; preds = %for.end, %for.cond.72
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @record_dead_and_set_regs_1(%struct.rtx_def* %dest, %struct.rtx_def* %setter, i8* %data) #0 {
entry:
  %dest.addr = alloca %struct.rtx_def*, align 8
  %setter.addr = alloca %struct.rtx_def*, align 8
  %data.addr = alloca i8*, align 8
  %record_dead_insn = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %dest, %struct.rtx_def** %dest.addr, align 8
  store %struct.rtx_def* %setter, %struct.rtx_def** %setter.addr, align 8
  store i8* %data, i8** %data.addr, align 8
  %0 = load i8*, i8** %data.addr, align 8
  %1 = bitcast i8* %0 to %struct.rtx_def*
  store %struct.rtx_def* %1, %struct.rtx_def** %record_dead_insn, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load = load i32, i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 63
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %5, %struct.rtx_def** %dest.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load1 = load i32, i32* %7, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 61
  br i1 %cmp3, label %if.then.4, label %if.else.56

if.then.4:                                        ; preds = %if.end
  %8 = load %struct.rtx_def*, %struct.rtx_def** %setter.addr, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load5 = load i32, i32* %9, align 8
  %bf.clear6 = and i32 %bf.load5, 65535
  %cmp7 = icmp eq i32 %bf.clear6, 47
  br i1 %cmp7, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then.4
  %10 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %setter.addr, align 8
  %fld8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i32 0, i64 0
  %rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rtx10, align 8
  %cmp11 = icmp eq %struct.rtx_def* %10, %12
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %land.lhs.true
  %13 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %14 = load %struct.rtx_def*, %struct.rtx_def** %record_dead_insn, align 8
  %15 = load %struct.rtx_def*, %struct.rtx_def** %setter.addr, align 8
  %fld13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i32 0, i64 1
  %rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rtx15, align 8
  call void @record_value_for_reg(%struct.rtx_def* %13, %struct.rtx_def* %14, %struct.rtx_def* %16)
  br label %if.end.55

if.else:                                          ; preds = %land.lhs.true, %if.then.4
  %17 = load %struct.rtx_def*, %struct.rtx_def** %setter.addr, align 8
  %18 = bitcast %struct.rtx_def* %17 to i32*
  %bf.load16 = load i32, i32* %18, align 8
  %bf.clear17 = and i32 %bf.load16, 65535
  %cmp18 = icmp eq i32 %bf.clear17, 47
  br i1 %cmp18, label %land.lhs.true.19, label %if.else.53

land.lhs.true.19:                                 ; preds = %if.else
  %19 = load %struct.rtx_def*, %struct.rtx_def** %setter.addr, align 8
  %fld20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i32 0, i64 0
  %rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rtx22, align 8
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load23 = load i32, i32* %21, align 8
  %bf.clear24 = and i32 %bf.load23, 65535
  %cmp25 = icmp eq i32 %bf.clear24, 63
  br i1 %cmp25, label %land.lhs.true.26, label %if.else.53

land.lhs.true.26:                                 ; preds = %land.lhs.true.19
  %22 = load %struct.rtx_def*, %struct.rtx_def** %setter.addr, align 8
  %fld27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i32 0, i64 0
  %rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rtx29, align 8
  %fld30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i32 0, i64 0
  %rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rtx32, align 8
  %25 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %cmp33 = icmp eq %struct.rtx_def* %24, %25
  br i1 %cmp33, label %land.lhs.true.34, label %if.else.53

land.lhs.true.34:                                 ; preds = %land.lhs.true.26
  %26 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %27 = bitcast %struct.rtx_def* %26 to i32*
  %bf.load35 = load i32, i32* %27, align 8
  %bf.lshr = lshr i32 %bf.load35, 16
  %bf.clear36 = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear36 to i64
  %arrayidx37 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom
  %28 = load i16, i16* %arrayidx37, align 2
  %conv = zext i16 %28 to i32
  %29 = load i32, i32* @target_flags, align 4
  %and = and i32 %29, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond = select i1 %tobool, i32 64, i32 32
  %cmp38 = icmp sle i32 %conv, %cond
  br i1 %cmp38, label %land.lhs.true.40, label %if.else.53

land.lhs.true.40:                                 ; preds = %land.lhs.true.34
  %30 = load %struct.rtx_def*, %struct.rtx_def** %setter.addr, align 8
  %fld41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld41, i32 0, i64 0
  %rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rtx43, align 8
  %call = call i32 @subreg_lowpart_p(%struct.rtx_def* %31)
  %tobool44 = icmp ne i32 %call, 0
  br i1 %tobool44, label %if.then.45, label %if.else.53

if.then.45:                                       ; preds = %land.lhs.true.40
  %32 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %33 = load %struct.rtx_def*, %struct.rtx_def** %record_dead_insn, align 8
  %34 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %35 = bitcast %struct.rtx_def* %34 to i32*
  %bf.load46 = load i32, i32* %35, align 8
  %bf.lshr47 = lshr i32 %bf.load46, 16
  %bf.clear48 = and i32 %bf.lshr47, 255
  %36 = load %struct.rtx_def*, %struct.rtx_def** %setter.addr, align 8
  %fld49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i32 0, i64 1
  %rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rtx51, align 8
  %call52 = call %struct.rtx_def* @gen_lowpart_for_combine(i32 %bf.clear48, %struct.rtx_def* %37)
  call void @record_value_for_reg(%struct.rtx_def* %32, %struct.rtx_def* %33, %struct.rtx_def* %call52)
  br label %if.end.54

if.else.53:                                       ; preds = %land.lhs.true.40, %land.lhs.true.34, %land.lhs.true.26, %land.lhs.true.19, %if.else
  %38 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %39 = load %struct.rtx_def*, %struct.rtx_def** %record_dead_insn, align 8
  call void @record_value_for_reg(%struct.rtx_def* %38, %struct.rtx_def* %39, %struct.rtx_def* null)
  br label %if.end.54

if.end.54:                                        ; preds = %if.else.53, %if.then.45
  br label %if.end.55

if.end.55:                                        ; preds = %if.end.54, %if.then.12
  br label %if.end.80

if.else.56:                                       ; preds = %if.end
  %40 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load57 = load i32, i32* %41, align 8
  %bf.clear58 = and i32 %bf.load57, 65535
  %cmp59 = icmp eq i32 %bf.clear58, 66
  br i1 %cmp59, label %land.lhs.true.61, label %if.end.79

land.lhs.true.61:                                 ; preds = %if.else.56
  %42 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %43 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %44 = bitcast %struct.rtx_def* %43 to i32*
  %bf.load62 = load i32, i32* %44, align 8
  %bf.lshr63 = lshr i32 %bf.load62, 16
  %bf.clear64 = and i32 %bf.lshr63, 255
  %call65 = call i32 @push_operand(%struct.rtx_def* %42, i32 %bf.clear64)
  %tobool66 = icmp ne i32 %call65, 0
  br i1 %tobool66, label %if.end.79, label %if.then.67

if.then.67:                                       ; preds = %land.lhs.true.61
  %45 = load %struct.rtx_def*, %struct.rtx_def** %record_dead_insn, align 8
  %fld68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1
  %arrayidx69 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld68, i32 0, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx69 to i32*
  %46 = load i32, i32* %rtint, align 4
  %47 = load i32, i32* @max_uid_cuid, align 4
  %cmp70 = icmp sgt i32 %46, %47
  br i1 %cmp70, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.67
  %48 = load %struct.rtx_def*, %struct.rtx_def** %record_dead_insn, align 8
  %call72 = call i32 @insn_cuid(%struct.rtx_def* %48)
  br label %cond.end

cond.false:                                       ; preds = %if.then.67
  %49 = load %struct.rtx_def*, %struct.rtx_def** %record_dead_insn, align 8
  %fld73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i32 0, i64 0
  %rtint75 = bitcast %union.rtunion_def* %arrayidx74 to i32*
  %50 = load i32, i32* %rtint75, align 4
  %idxprom76 = sext i32 %50 to i64
  %51 = load i32*, i32** @uid_cuid, align 8
  %arrayidx77 = getelementptr inbounds i32, i32* %51, i64 %idxprom76
  %52 = load i32, i32* %arrayidx77, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond78 = phi i32 [ %call72, %cond.true ], [ %52, %cond.false ]
  store i32 %cond78, i32* @mem_last_set, align 4
  br label %if.end.79

if.end.79:                                        ; preds = %cond.end, %land.lhs.true.61, %if.else.56
  br label %if.end.80

if.end.80:                                        ; preds = %if.end.79, %if.end.55
  ret void
}

declare i32 @push_operand(%struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define internal void @record_promoted_value(%struct.rtx_def* %insn, %struct.rtx_def* %subreg) #0 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %subreg.addr = alloca %struct.rtx_def*, align 8
  %links = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %mode = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store %struct.rtx_def* %subreg, %struct.rtx_def** %subreg.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %subreg.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %fld1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx2 to i32*
  %2 = load i32, i32* %rtuint, align 4
  store i32 %2, i32* %regno, align 4
  %3 = load %struct.rtx_def*, %struct.rtx_def** %subreg.addr, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load = load i32, i32* %4, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  store i32 %bf.clear, i32* %mode, align 4
  %5 = load i32, i32* %mode, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx3 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom
  %6 = load i16, i16* %arrayidx3, align 2
  %conv = zext i16 %6 to i32
  %cmp = icmp sgt i32 %conv, 64
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %for.end

if.end:                                           ; preds = %entry
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i32 0, i64 5
  %rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rtx7, align 8
  store %struct.rtx_def* %8, %struct.rtx_def** %links, align 8
  br label %for.cond

for.cond:                                         ; preds = %if.end.105, %if.then.67, %if.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %links, align 8
  %tobool = icmp ne %struct.rtx_def* %9, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load %struct.rtx_def*, %struct.rtx_def** %links, align 8
  %fld8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i32 0, i64 0
  %rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rtx10, align 8
  store %struct.rtx_def* %11, %struct.rtx_def** %insn.addr, align 8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load11 = load i32, i32* %13, align 8
  %bf.clear12 = and i32 %bf.load11, 65535
  %idxprom13 = sext i32 %bf.clear12 to i64
  %arrayidx14 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom13
  %14 = load i8, i8* %arrayidx14, align 1
  %conv15 = sext i8 %14 to i32
  %cmp16 = icmp eq i32 %conv15, 105
  br i1 %cmp16, label %cond.true, label %cond.false.32

cond.true:                                        ; preds = %for.body
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i32 0, i64 3
  %rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rtx20, align 8
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load21 = load i32, i32* %17, align 8
  %bf.clear22 = and i32 %bf.load21, 65535
  %cmp23 = icmp eq i32 %bf.clear22, 47
  br i1 %cmp23, label %cond.true.25, label %cond.false

cond.true.25:                                     ; preds = %cond.true
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i32 0, i64 3
  %rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rtx28, align 8
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i32 0, i64 3
  %rtx31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rtx31, align 8
  %call = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %20, %struct.rtx_def* %22)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.25
  %cond = phi %struct.rtx_def* [ %19, %cond.true.25 ], [ %call, %cond.false ]
  br label %cond.end.33

cond.false.32:                                    ; preds = %for.body
  br label %cond.end.33

cond.end.33:                                      ; preds = %cond.false.32, %cond.end
  %cond34 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false.32 ]
  store %struct.rtx_def* %cond34, %struct.rtx_def** %set, align 8
  %23 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %tobool35 = icmp ne %struct.rtx_def* %23, null
  br i1 %tobool35, label %lor.lhs.false, label %if.then.67

lor.lhs.false:                                    ; preds = %cond.end.33
  %24 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i32 0, i64 0
  %rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rtx38, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load39 = load i32, i32* %26, align 8
  %bf.clear40 = and i32 %bf.load39, 65535
  %cmp41 = icmp ne i32 %bf.clear40, 61
  br i1 %cmp41, label %if.then.67, label %lor.lhs.false.43

lor.lhs.false.43:                                 ; preds = %lor.lhs.false
  %27 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i32 0, i64 0
  %rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rtx46, align 8
  %fld47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i32 0, i64 0
  %rtuint49 = bitcast %union.rtunion_def* %arrayidx48 to i32*
  %29 = load i32, i32* %rtuint49, align 4
  %30 = load i32, i32* %regno, align 4
  %cmp50 = icmp ne i32 %29, %30
  br i1 %cmp50, label %if.then.67, label %lor.lhs.false.52

lor.lhs.false.52:                                 ; preds = %lor.lhs.false.43
  %31 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i32 0, i64 0
  %rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rtx55, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load56 = load i32, i32* %33, align 8
  %bf.lshr57 = lshr i32 %bf.load56, 16
  %bf.clear58 = and i32 %bf.lshr57, 255
  %34 = load %struct.rtx_def*, %struct.rtx_def** %subreg.addr, align 8
  %fld59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i32 0, i64 0
  %rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rtx61, align 8
  %36 = bitcast %struct.rtx_def* %35 to i32*
  %bf.load62 = load i32, i32* %36, align 8
  %bf.lshr63 = lshr i32 %bf.load62, 16
  %bf.clear64 = and i32 %bf.lshr63, 255
  %cmp65 = icmp ne i32 %bf.clear58, %bf.clear64
  br i1 %cmp65, label %if.then.67, label %if.end.71

if.then.67:                                       ; preds = %lor.lhs.false.52, %lor.lhs.false.43, %lor.lhs.false, %cond.end.33
  %37 = load %struct.rtx_def*, %struct.rtx_def** %links, align 8
  %fld68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1
  %arrayidx69 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld68, i32 0, i64 1
  %rtx70 = bitcast %union.rtunion_def* %arrayidx69 to %struct.rtx_def**
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rtx70, align 8
  store %struct.rtx_def* %38, %struct.rtx_def** %links, align 8
  br label %for.cond

if.end.71:                                        ; preds = %lor.lhs.false.52
  %39 = load i32, i32* %regno, align 4
  %idxprom72 = zext i32 %39 to i64
  %40 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_set, align 8
  %arrayidx73 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %40, i64 %idxprom72
  %41 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx73, align 8
  %42 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %cmp74 = icmp eq %struct.rtx_def* %41, %42
  br i1 %cmp74, label %if.then.76, label %if.end.87

if.then.76:                                       ; preds = %if.end.71
  %43 = load %struct.rtx_def*, %struct.rtx_def** %subreg.addr, align 8
  %44 = bitcast %struct.rtx_def* %43 to i32*
  %bf.load77 = load i32, i32* %44, align 8
  %bf.lshr78 = lshr i32 %bf.load77, 26
  %bf.clear79 = and i32 %bf.lshr78, 1
  %tobool80 = icmp ne i32 %bf.clear79, 0
  br i1 %tobool80, label %if.then.81, label %if.end.86

if.then.81:                                       ; preds = %if.then.76
  %45 = load i32, i32* %mode, align 4
  %idxprom82 = sext i32 %45 to i64
  %arrayidx83 = getelementptr inbounds [59 x i64], [59 x i64]* @mode_mask_array, i32 0, i64 %idxprom82
  %46 = load i64, i64* %arrayidx83, align 8
  %47 = load i32, i32* %regno, align 4
  %idxprom84 = zext i32 %47 to i64
  %48 = load i64*, i64** @reg_last_set_nonzero_bits, align 8
  %arrayidx85 = getelementptr inbounds i64, i64* %48, i64 %idxprom84
  %49 = load i64, i64* %arrayidx85, align 8
  %and = and i64 %49, %46
  store i64 %and, i64* %arrayidx85, align 8
  br label %if.end.86

if.end.86:                                        ; preds = %if.then.81, %if.then.76
  br label %if.end.87

if.end.87:                                        ; preds = %if.end.86, %if.end.71
  %50 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1
  %arrayidx89 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld88, i32 0, i64 1
  %rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rtx90, align 8
  %52 = bitcast %struct.rtx_def* %51 to i32*
  %bf.load91 = load i32, i32* %52, align 8
  %bf.clear92 = and i32 %bf.load91, 65535
  %cmp93 = icmp eq i32 %bf.clear92, 61
  br i1 %cmp93, label %if.then.95, label %if.else

if.then.95:                                       ; preds = %if.end.87
  %53 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx97 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld96, i32 0, i64 1
  %rtx98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx98, align 8
  %fld99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1
  %arrayidx100 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld99, i32 0, i64 0
  %rtuint101 = bitcast %union.rtunion_def* %arrayidx100 to i32*
  %55 = load i32, i32* %rtuint101, align 4
  store i32 %55, i32* %regno, align 4
  %56 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i32 0, i64 5
  %rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rtx104, align 8
  store %struct.rtx_def* %57, %struct.rtx_def** %links, align 8
  br label %if.end.105

if.else:                                          ; preds = %if.end.87
  br label %for.end

if.end.105:                                       ; preds = %if.then.95
  br label %for.cond

for.end:                                          ; preds = %if.then, %if.else, %for.cond
  ret void
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
