; ModuleID = 'regexec.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sv = type { i8*, i32, i32 }
%struct.gv = type { %struct.xpvgv*, i32, i32 }
%struct.xpvgv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.gp*, i8*, i64, %struct.hv*, i8 }
%struct.magic = type { %struct.magic*, %struct.mgvtbl*, i16, i8, i8, %struct.sv*, i8*, i32 }
%struct.mgvtbl = type { i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*, %struct.sv*, i8*, i32)*, i32 (%struct.magic*, %struct.clone_params*)* }
%struct.clone_params = type { %struct.av*, i64, %struct.interpreter* }
%struct.av = type { %struct.xpvav*, i32, i32 }
%struct.xpvav = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.sv**, %struct.sv*, i8 }
%struct.interpreter = type { i8 }
%struct.gp = type { %struct.sv*, i32, %struct.io*, %struct.cv*, %struct.av*, %struct.hv*, %struct.gv*, %struct.cv*, i32, i32, i32, i8* }
%struct.io = type { %struct.xpvio*, i32, i32 }
%struct.xpvio = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct._PerlIO**, %struct._PerlIO**, %union.anon, i64, i64, i64, i64, i8*, %struct.gv*, i8*, %struct.gv*, i8*, %struct.gv*, i16, i8, i8 }
%struct._PerlIO = type opaque
%union.anon = type { %struct.__dirstream* }
%struct.__dirstream = type opaque
%struct.cv = type { %struct.xpvcv*, i32, i32 }
%struct.xpvcv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.hv*, %struct.op*, %struct.op*, void (%struct.cv*)*, %union.any, %struct.gv*, i8*, i64, %struct.av*, %struct.cv*, i16, i32 }
%struct.op = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8 }
%union.any = type { i8* }
%struct.hv = type { %struct.xpvhv*, i32, i32 }
%struct.xpvhv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, i32, %struct.he*, %struct.pmop*, i8* }
%struct.he = type { %struct.he*, %struct.hek*, %struct.sv* }
%struct.hek = type { i32, i32, [1 x i8] }
%struct.pmop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8, %struct.op*, %struct.op*, %struct.op*, %struct.op*, %struct.pmop*, %struct.regexp*, i32, i32, i8, %struct.hv* }
%struct.regexp = type { i32*, i32*, %struct.regnode*, %struct.reg_substr_data*, i8*, %struct.reg_data*, i8*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, [1 x %struct.regnode] }
%struct.regnode = type { i8, i8, i16 }
%struct.reg_substr_data = type { [3 x %struct.reg_substr_datum] }
%struct.reg_substr_datum = type { i32, i32, %struct.sv*, %struct.sv* }
%struct.reg_data = type { i32, i8*, [1 x i8*] }
%struct.cop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8, i8*, %struct.hv*, %struct.gv*, i32, i32, i32, %struct.sv*, %struct.sv* }
%struct.curcur = type { i32, i32, i32, i32, i32, %struct.regnode*, %struct.regnode*, i8*, %struct.curcur* }
%struct.re_cc_state = type { i32, %struct.regnode*, %struct.re_cc_state*, %struct.curcur*, %struct.regexp* }
%struct.stackinfo = type { %struct.av*, %struct.context*, i32, i32, i32, %struct.stackinfo*, %struct.stackinfo*, i32 }
%struct.context = type { i32, %union.anon.0 }
%union.anon.0 = type { %struct.block }
%struct.block = type { i32, %struct.cop*, i32, i32, i32, %struct.pmop*, i8, %union.anon.1 }
%union.anon.1 = type { %struct.block_loop }
%struct.block_loop = type { i8*, i32, %struct.op*, %struct.op*, %struct.op*, %struct.sv**, %struct.sv*, %struct.sv*, %struct.av*, i64, i64 }
%struct.xpv = type { i8*, i64, i64 }
%struct.re_scream_pos_data_s = type { i8**, i32* }
%struct.xpvmg = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv* }
%struct.xpvbm = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, i32, i16, i8 }
%struct.regnode_string = type { i8, i8, i16, [1 x i8] }
%struct.regnode_charclass = type { i8, i8, i16, i32, [32 x i8] }
%struct.regnode_1 = type { i8, i8, i16, i32 }
%struct.xrv = type { %struct.sv* }
%struct.regnode_charclass_class = type { i8, i8, i16, i32, [32 x i8], [4 x i8] }
%struct.re_unwind_branch_t = type { i32, i32, i32, i32, %struct.regnode*, i8*, i32 }
%union.re_unwind_t = type { %struct.re_unwind_branch_t }
%struct.xpviv = type { i8*, i64, i64, i64 }
%struct.xpvnv = type { i8*, i64, i64, i64, double }
%struct.regnode_2 = type { i8, i8, i16, i16, i16 }

@PL_reg_match_utf8 = external global i8, align 1
@PL_reg_flags = external global i32, align 4
@PL_regeol = external global i8*, align 8
@PL_sv_undef = external global %struct.sv, align 8
@PL_multiline = external global i32, align 4
@PL_screamfirst = external global i32*, align 8
@PL_regkind = external constant [0 x i8], align 1
@PL_replgv = external global %struct.gv*, align 8
@PL_curcop = external global %struct.cop*, align 8
@PL_regcc = external global %struct.curcur*, align 8
@.str = private unnamed_addr constant [22 x i8] c"NULL regexp parameter\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"corrupted regexp program\00", align 1
@PL_reg_eval_set = external global i32, align 4
@PL_reg_maxiter = external global i32, align 4
@PL_regbol = external global i8*, align 8
@PL_bostr = external global i8*, align 8
@PL_reg_sv = external global %struct.sv*, align 8
@PL_regtill = external global i8*, align 8
@PL_reg_call_cc = external global %struct.re_cc_state*, align 8
@PL_reg_ganch = external global i8*, align 8
@PL_utf8skip = external constant [0 x i8], align 1
@PL_regdata = external global %struct.reg_data*, align 8
@.str.2 = private unnamed_addr constant [5 x i8] c"utf8\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@PL_regprecomp = external global i8*, align 8
@PL_regnpar = external global i32, align 4
@PL_reg_re = external global %struct.regexp*, align 8
@PL_dowarn = external global i8, align 1
@PL_fold = external constant [0 x i8], align 1
@PL_fold_locale = external global [0 x i8], align 1
@PL_utf8_alnum = external global %struct.sv*, align 8
@.str.4 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@PL_utf8_space = external global %struct.sv*, align 8
@.str.5 = private unnamed_addr constant [2 x i8] c" \00", align 1
@PL_utf8_digit = external global %struct.sv*, align 8
@.str.6 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.7 = private unnamed_addr constant [29 x i8] c"panic: unknown regstclass %d\00", align 1
@PL_curstackinfo = external global %struct.stackinfo*, align 8
@PL_stack_sp = external global %struct.sv**, align 8
@PL_stack_base = external global %struct.sv**, align 8
@PL_tmps_floor = external global i32, align 4
@PL_tmps_ix = external global i32, align 4
@PL_defgv = external global %struct.gv*, align 8
@PL_reg_magic = external global %struct.magic*, align 8
@PL_reg_oldpos = external global i32, align 4
@PL_reg_curpm = external global %struct.pmop*, align 8
@PL_curpm = external global %struct.pmop*, align 8
@PL_reg_oldcurpm = external global %struct.pmop*, align 8
@PL_reg_oldsaved = external global i8*, align 8
@PL_reg_oldsavedlen = external global i64, align 8
@PL_reginput = external global i8*, align 8
@PL_regstartp = external global i32*, align 8
@PL_regendp = external global i32*, align 8
@PL_reglastparen = external global i32*, align 8
@PL_reglastcloseparen = external global i32*, align 8
@PL_regsize = external global i32, align 4
@PL_reg_start_tmpl = external global i32, align 4
@PL_reg_start_tmp = external global i8**, align 8
@PL_savestack_ix = external global i32, align 4
@PL_utf8_mark = external global %struct.sv*, align 8
@.str.8 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@PL_reg_leftiter = external global i32, align 4
@PL_op = external global %struct.op*, align 8
@PL_comppad = external global %struct.av*, align 8
@PL_curpad = external global %struct.sv**, align 8
@PL_runops = external global i32 ()*, align 8
@PL_regcompp = external global %struct.regexp* (i8*, i8*, %struct.pmop*)*, align 8
@PL_regfree = external global void (%struct.regexp*)*, align 8
@PL_Xpv = external global %struct.xpv*, align 8
@PL_reg_poscache = external global i8*, align 8
@PL_reg_poscache_size = external global i64, align 8
@.str.9 = private unnamed_addr constant [23 x i8] c"%s limit (%d) exceeded\00", align 1
@.str.10 = private unnamed_addr constant [40 x i8] c"Complex regular subexpression recursion\00", align 1
@PL_savestack = external global %union.any*, align 8
@PL_stderrgv = external global %struct.gv*, align 8
@.str.11 = private unnamed_addr constant [8 x i8] c"%lx %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [25 x i8] c"regexp memory corruption\00", align 1
@.str.13 = private unnamed_addr constant [26 x i8] c"corrupted regexp pointers\00", align 1
@.str.14 = private unnamed_addr constant [32 x i8] c"regexp unwind memory corruption\00", align 1
@.str.15 = private unnamed_addr constant [31 x i8] c"panic: paren_elems_to_push < 0\00", align 1
@PL_savestack_max = external global i32, align 4

; Function Attrs: nounwind uwtable
define i32 @Perl_pregexec(%struct.regexp* %prog, i8* %stringarg, i8* %strend, i8* %strbeg, i32 %minend, %struct.sv* %screamer, i32 %nosave) #0 {
entry:
  %prog.addr = alloca %struct.regexp*, align 8
  %stringarg.addr = alloca i8*, align 8
  %strend.addr = alloca i8*, align 8
  %strbeg.addr = alloca i8*, align 8
  %minend.addr = alloca i32, align 4
  %screamer.addr = alloca %struct.sv*, align 8
  %nosave.addr = alloca i32, align 4
  store %struct.regexp* %prog, %struct.regexp** %prog.addr, align 8
  store i8* %stringarg, i8** %stringarg.addr, align 8
  store i8* %strend, i8** %strend.addr, align 8
  store i8* %strbeg, i8** %strbeg.addr, align 8
  store i32 %minend, i32* %minend.addr, align 4
  store %struct.sv* %screamer, %struct.sv** %screamer.addr, align 8
  store i32 %nosave, i32* %nosave.addr, align 4
  %0 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %1 = load i8*, i8** %stringarg.addr, align 8
  %2 = load i8*, i8** %strend.addr, align 8
  %3 = load i8*, i8** %strbeg.addr, align 8
  %4 = load i32, i32* %minend.addr, align 4
  %5 = load %struct.sv*, %struct.sv** %screamer.addr, align 8
  %6 = load i32, i32* %nosave.addr, align 4
  %tobool = icmp ne i32 %6, 0
  %cond = select i1 %tobool, i32 0, i32 1
  %call = call i32 @Perl_regexec_flags(%struct.regexp* %0, i8* %1, i8* %2, i8* %3, i32 %4, %struct.sv* %5, i8* null, i32 %cond)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define i32 @Perl_regexec_flags(%struct.regexp* %prog, i8* %stringarg, i8* %strend, i8* %strbeg, i32 %minend, %struct.sv* %sv, i8* %data, i32 %flags) #0 {
entry:
  %retval = alloca i32, align 4
  %prog.addr = alloca %struct.regexp*, align 8
  %stringarg.addr = alloca i8*, align 8
  %strend.addr = alloca i8*, align 8
  %strbeg.addr = alloca i8*, align 8
  %minend.addr = alloca i32, align 4
  %sv.addr = alloca %struct.sv*, align 8
  %data.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %s = alloca i8*, align 8
  %c = alloca %struct.regnode*, align 8
  %startpos = alloca i8*, align 8
  %minlen = alloca i32, align 4
  %dontbother = alloca i32, align 4
  %end_shift = alloca i32, align 4
  %scream_pos = alloca i32, align 4
  %scream_olds = alloca i8*, align 8
  %oreplsv = alloca %struct.sv*, align 8
  %do_utf8 = alloca i8, align 1
  %mg = alloca %struct.magic*, align 8
  %d = alloca %struct.re_scream_pos_data_s, align 8
  %end = alloca i8*, align 8
  %ch = alloca i8, align 1
  %must = alloca %struct.sv*, align 8
  %back_max = alloca i32, align 4
  %back_min = alloca i32, align 4
  %last = alloca i8*, align 8
  %last1 = alloca i8*, align 8
  %t = alloca i8*, align 8
  %op = alloca i32, align 4
  %last722 = alloca i8*, align 8
  %float_real = alloca %struct.sv*, align 8
  %len = alloca i64, align 8
  %little = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.regexp* %prog, %struct.regexp** %prog.addr, align 8
  store i8* %stringarg, i8** %stringarg.addr, align 8
  store i8* %strend, i8** %strend.addr, align 8
  store i8* %strbeg, i8** %strbeg.addr, align 8
  store i32 %minend, i32* %minend.addr, align 4
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i8* %data, i8** %data.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load i8*, i8** %stringarg.addr, align 8
  store i8* %0, i8** %startpos, align 8
  store i32 0, i32* %dontbother, align 4
  store i32 0, i32* %end_shift, align 4
  store i32 -1, i32* %scream_pos, align 4
  %1 = load %struct.gv*, %struct.gv** @PL_replgv, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %1, i32 0, i32 0
  %2 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xgv_gp = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2, i32 0, i32 7
  %3 = load %struct.gp*, %struct.gp** %xgv_gp, align 8
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %3, i32 0, i32 0
  %4 = load %struct.sv*, %struct.sv** %gp_sv, align 8
  store %struct.sv* %4, %struct.sv** %oreplsv, align 8
  %5 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %5, i32 0, i32 2
  %6 = load i32, i32* %sv_flags, align 4
  %and = and i32 %6, 536870912
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %7 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private = getelementptr inbounds %struct.cop, %struct.cop* %7, i32 0, i32 7
  %8 = load i8, i8* %op_private, align 1
  %conv = zext i8 %8 to i32
  %and1 = and i32 %conv, 8
  %tobool2 = icmp ne i32 %and1, 0
  %lnot = xor i1 %tobool2, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %9 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %9 to i32
  %conv3 = trunc i32 %land.ext to i8
  store i8 %conv3, i8* %do_utf8, align 1
  %10 = load i8, i8* %do_utf8, align 1
  %conv4 = sext i8 %10 to i32
  %tobool5 = icmp ne i32 %conv4, 0
  br i1 %tobool5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.end
  %11 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch = getelementptr inbounds %struct.regexp, %struct.regexp* %11, i32 0, i32 15
  %12 = load i32, i32* %reganch, align 4
  %or = or i32 %12, 268435456
  store i32 %or, i32* %reganch, align 4
  store i8 1, i8* @PL_reg_match_utf8, align 1
  br label %cond.end

cond.false:                                       ; preds = %land.end
  %13 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch6 = getelementptr inbounds %struct.regexp, %struct.regexp* %13, i32 0, i32 15
  %14 = load i32, i32* %reganch6, align 4
  %and7 = and i32 %14, -268435457
  store i32 %and7, i32* %reganch6, align 4
  store i8 0, i8* @PL_reg_match_utf8, align 1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ 0, %cond.false ]
  store %struct.curcur* null, %struct.curcur** @PL_regcc, align 8
  %15 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  call void @S_cache_re(%struct.regexp* %15)
  %16 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %cmp = icmp eq %struct.regexp* %16, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.end
  %17 = load i8*, i8** %startpos, align 8
  %cmp9 = icmp eq i8* %17, null
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %cond.end
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i32 0, i32 0))
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %18 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %minlen11 = getelementptr inbounds %struct.regexp, %struct.regexp* %18, i32 0, i32 10
  %19 = load i32, i32* %minlen11, align 4
  store i32 %19, i32* %minlen, align 4
  %20 = load i8*, i8** %strend.addr, align 8
  %21 = load i8*, i8** %startpos, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %20 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %21 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %22 = load i32, i32* %minlen, align 4
  %conv12 = sext i32 %22 to i64
  %cmp13 = icmp slt i64 %sub.ptr.sub, %conv12
  br i1 %cmp13, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.end
  br label %phooey

if.end.16:                                        ; preds = %if.end
  %23 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %program = getelementptr inbounds %struct.regexp, %struct.regexp* %23, i32 0, i32 16
  %arraydecay = getelementptr inbounds [1 x %struct.regnode], [1 x %struct.regnode]* %program, i32 0, i32 0
  %24 = bitcast %struct.regnode* %arraydecay to i8*
  %25 = load i8, i8* %24, align 1
  %conv17 = zext i8 %25 to i32
  %cmp18 = icmp ne i32 %conv17, 156
  br i1 %cmp18, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %if.end.16
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0))
  br label %if.end.21

if.end.21:                                        ; preds = %if.then.20, %if.end.16
  store i32 0, i32* @PL_reg_flags, align 4
  store i32 0, i32* @PL_reg_eval_set, align 4
  store i32 0, i32* @PL_reg_maxiter, align 4
  %26 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch22 = getelementptr inbounds %struct.regexp, %struct.regexp* %26, i32 0, i32 15
  %27 = load i32, i32* %reganch22, align 4
  %and23 = and i32 %27, 65536
  %tobool24 = icmp ne i32 %and23, 0
  br i1 %tobool24, label %if.then.25, label %if.end.27

if.then.25:                                       ; preds = %if.end.21
  %28 = load i32, i32* @PL_reg_flags, align 4
  %or26 = or i32 %28, 8
  store i32 %or26, i32* @PL_reg_flags, align 4
  br label %if.end.27

if.end.27:                                        ; preds = %if.then.25, %if.end.21
  %29 = load i8*, i8** %startpos, align 8
  store i8* %29, i8** @PL_regbol, align 8
  %30 = load i8*, i8** %strbeg.addr, align 8
  store i8* %30, i8** @PL_bostr, align 8
  %31 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  store %struct.sv* %31, %struct.sv** @PL_reg_sv, align 8
  %32 = load i8*, i8** %strend.addr, align 8
  store i8* %32, i8** @PL_regeol, align 8
  %33 = load i8*, i8** %startpos, align 8
  %34 = load i32, i32* %minend.addr, align 4
  %idx.ext = sext i32 %34 to i64
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 %idx.ext
  store i8* %add.ptr, i8** @PL_regtill, align 8
  store %struct.re_cc_state* null, %struct.re_cc_state** @PL_reg_call_cc, align 8
  %35 = load i8*, i8** %startpos, align 8
  store i8* %35, i8** %s, align 8
  %36 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch28 = getelementptr inbounds %struct.regexp, %struct.regexp* %36, i32 0, i32 15
  %37 = load i32, i32* %reganch28, align 4
  %and29 = and i32 %37, 128
  %tobool30 = icmp ne i32 %and29, 0
  br i1 %tobool30, label %if.then.31, label %if.end.64

if.then.31:                                       ; preds = %if.end.27
  %38 = load i32, i32* %flags.addr, align 4
  %and32 = and i32 %38, 8
  %tobool33 = icmp ne i32 %and32, 0
  br i1 %tobool33, label %if.then.34, label %if.else

if.then.34:                                       ; preds = %if.then.31
  %39 = load i8*, i8** %startpos, align 8
  store i8* %39, i8** @PL_reg_ganch, align 8
  br label %if.end.63

if.else:                                          ; preds = %if.then.31
  %40 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %tobool35 = icmp ne %struct.sv* %40, null
  br i1 %tobool35, label %land.lhs.true, label %if.else.61

land.lhs.true:                                    ; preds = %if.else
  %41 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags36 = getelementptr inbounds %struct.sv, %struct.sv* %41, i32 0, i32 2
  %42 = load i32, i32* %sv_flags36, align 4
  %and37 = and i32 %42, 255
  %cmp38 = icmp uge i32 %and37, 7
  br i1 %cmp38, label %land.lhs.true.40, label %if.else.61

land.lhs.true.40:                                 ; preds = %land.lhs.true
  %43 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any41 = getelementptr inbounds %struct.sv, %struct.sv* %43, i32 0, i32 0
  %44 = load i8*, i8** %sv_any41, align 8
  %45 = bitcast i8* %44 to %struct.xpvmg*
  %xmg_magic = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %45, i32 0, i32 5
  %46 = load %struct.magic*, %struct.magic** %xmg_magic, align 8
  %tobool42 = icmp ne %struct.magic* %46, null
  br i1 %tobool42, label %land.lhs.true.43, label %if.else.61

land.lhs.true.43:                                 ; preds = %land.lhs.true.40
  %47 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call = call %struct.magic* @Perl_mg_find(%struct.sv* %47, i32 103)
  store %struct.magic* %call, %struct.magic** %mg, align 8
  %tobool44 = icmp ne %struct.magic* %call, null
  br i1 %tobool44, label %land.lhs.true.45, label %if.else.61

land.lhs.true.45:                                 ; preds = %land.lhs.true.43
  %48 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_len = getelementptr inbounds %struct.magic, %struct.magic* %48, i32 0, i32 7
  %49 = load i32, i32* %mg_len, align 4
  %cmp46 = icmp sge i32 %49, 0
  br i1 %cmp46, label %if.then.48, label %if.else.61

if.then.48:                                       ; preds = %land.lhs.true.45
  %50 = load i8*, i8** %strbeg.addr, align 8
  %51 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_len49 = getelementptr inbounds %struct.magic, %struct.magic* %51, i32 0, i32 7
  %52 = load i32, i32* %mg_len49, align 4
  %idx.ext50 = sext i32 %52 to i64
  %add.ptr51 = getelementptr inbounds i8, i8* %50, i64 %idx.ext50
  store i8* %add.ptr51, i8** @PL_reg_ganch, align 8
  %53 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch52 = getelementptr inbounds %struct.regexp, %struct.regexp* %53, i32 0, i32 15
  %54 = load i32, i32* %reganch52, align 4
  %and53 = and i32 %54, 8
  %tobool54 = icmp ne i32 %and53, 0
  br i1 %tobool54, label %if.then.55, label %if.end.60

if.then.55:                                       ; preds = %if.then.48
  %55 = load i8*, i8** %s, align 8
  %56 = load i8*, i8** @PL_reg_ganch, align 8
  %cmp56 = icmp ugt i8* %55, %56
  br i1 %cmp56, label %if.then.58, label %if.end.59

if.then.58:                                       ; preds = %if.then.55
  br label %phooey

if.end.59:                                        ; preds = %if.then.55
  %57 = load i8*, i8** @PL_reg_ganch, align 8
  store i8* %57, i8** %s, align 8
  br label %if.end.60

if.end.60:                                        ; preds = %if.end.59, %if.then.48
  br label %if.end.62

if.else.61:                                       ; preds = %land.lhs.true.45, %land.lhs.true.43, %land.lhs.true.40, %land.lhs.true, %if.else
  %58 = load i8*, i8** %strbeg.addr, align 8
  store i8* %58, i8** @PL_reg_ganch, align 8
  br label %if.end.62

if.end.62:                                        ; preds = %if.else.61, %if.end.60
  br label %if.end.63

if.end.63:                                        ; preds = %if.end.62, %if.then.34
  br label %if.end.64

if.end.64:                                        ; preds = %if.end.63, %if.end.27
  %59 = load i32, i32* %flags.addr, align 4
  %and65 = and i32 %59, 2
  %tobool66 = icmp ne i32 %and65, 0
  br i1 %tobool66, label %if.end.84, label %land.lhs.true.67

land.lhs.true.67:                                 ; preds = %if.end.64
  %60 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs = getelementptr inbounds %struct.regexp, %struct.regexp* %60, i32 0, i32 3
  %61 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs, align 8
  %data68 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %61, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data68, i32 0, i64 2
  %substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx, i32 0, i32 2
  %62 = load %struct.sv*, %struct.sv** %substr, align 8
  %cmp69 = icmp ne %struct.sv* %62, null
  br i1 %cmp69, label %if.then.77, label %lor.lhs.false.71

lor.lhs.false.71:                                 ; preds = %land.lhs.true.67
  %63 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs72 = getelementptr inbounds %struct.regexp, %struct.regexp* %63, i32 0, i32 3
  %64 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs72, align 8
  %data73 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %64, i32 0, i32 0
  %arrayidx74 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data73, i32 0, i64 2
  %utf8_substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx74, i32 0, i32 3
  %65 = load %struct.sv*, %struct.sv** %utf8_substr, align 8
  %cmp75 = icmp ne %struct.sv* %65, null
  br i1 %cmp75, label %if.then.77, label %if.end.84

if.then.77:                                       ; preds = %lor.lhs.false.71, %land.lhs.true.67
  %scream_olds78 = getelementptr inbounds %struct.re_scream_pos_data_s, %struct.re_scream_pos_data_s* %d, i32 0, i32 0
  store i8** %scream_olds, i8*** %scream_olds78, align 8
  %scream_pos79 = getelementptr inbounds %struct.re_scream_pos_data_s, %struct.re_scream_pos_data_s* %d, i32 0, i32 1
  store i32* %scream_pos, i32** %scream_pos79, align 8
  %66 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %67 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %68 = load i8*, i8** %s, align 8
  %69 = load i8*, i8** %strend.addr, align 8
  %70 = load i32, i32* %flags.addr, align 4
  %call80 = call i8* @Perl_re_intuit_start(%struct.regexp* %66, %struct.sv* %67, i8* %68, i8* %69, i32 %70, %struct.re_scream_pos_data_s* %d)
  store i8* %call80, i8** %s, align 8
  %71 = load i8*, i8** %s, align 8
  %tobool81 = icmp ne i8* %71, null
  br i1 %tobool81, label %if.end.83, label %if.then.82

if.then.82:                                       ; preds = %if.then.77
  br label %phooey

if.end.83:                                        ; preds = %if.then.77
  br label %if.end.84

if.end.84:                                        ; preds = %if.end.83, %lor.lhs.false.71, %if.end.64
  %72 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch85 = getelementptr inbounds %struct.regexp, %struct.regexp* %72, i32 0, i32 15
  %73 = load i32, i32* %reganch85, align 4
  %and86 = and i32 %73, 7
  %tobool87 = icmp ne i32 %and86, 0
  br i1 %tobool87, label %if.then.88, label %if.else.178

if.then.88:                                       ; preds = %if.end.84
  %74 = load i8*, i8** %s, align 8
  %75 = load i8*, i8** %startpos, align 8
  %cmp89 = icmp eq i8* %74, %75
  br i1 %cmp89, label %land.lhs.true.91, label %if.else.95

land.lhs.true.91:                                 ; preds = %if.then.88
  %76 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %77 = load i8*, i8** %startpos, align 8
  %call92 = call i32 @S_regtry(%struct.regexp* %76, i8* %77)
  %tobool93 = icmp ne i32 %call92, 0
  br i1 %tobool93, label %if.then.94, label %if.else.95

if.then.94:                                       ; preds = %land.lhs.true.91
  br label %got_it

if.else.95:                                       ; preds = %land.lhs.true.91, %if.then.88
  %78 = load i32, i32* @PL_multiline, align 4
  %tobool96 = icmp ne i32 %78, 0
  br i1 %tobool96, label %if.then.105, label %lor.lhs.false.97

lor.lhs.false.97:                                 ; preds = %if.else.95
  %79 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch98 = getelementptr inbounds %struct.regexp, %struct.regexp* %79, i32 0, i32 15
  %80 = load i32, i32* %reganch98, align 4
  %and99 = and i32 %80, 32
  %tobool100 = icmp ne i32 %and99, 0
  br i1 %tobool100, label %if.then.105, label %lor.lhs.false.101

lor.lhs.false.101:                                ; preds = %lor.lhs.false.97
  %81 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch102 = getelementptr inbounds %struct.regexp, %struct.regexp* %81, i32 0, i32 15
  %82 = load i32, i32* %reganch102, align 4
  %and103 = and i32 %82, 2
  %tobool104 = icmp ne i32 %and103, 0
  br i1 %tobool104, label %if.then.105, label %if.end.176

if.then.105:                                      ; preds = %lor.lhs.false.101, %lor.lhs.false.97, %if.else.95
  %83 = load i32, i32* %minlen, align 4
  %tobool106 = icmp ne i32 %83, 0
  br i1 %tobool106, label %if.then.107, label %if.end.108

if.then.107:                                      ; preds = %if.then.105
  %84 = load i32, i32* %minlen, align 4
  %sub = sub nsw i32 %84, 1
  store i32 %sub, i32* %dontbother, align 4
  br label %if.end.108

if.end.108:                                       ; preds = %if.then.107, %if.then.105
  %85 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv109 = sext i8 %85 to i32
  %tobool110 = icmp ne i32 %conv109, 0
  br i1 %tobool110, label %cond.true.111, label %cond.false.114

cond.true.111:                                    ; preds = %if.end.108
  %86 = load i8*, i8** %strend.addr, align 8
  %87 = load i32, i32* %dontbother, align 4
  %sub112 = sub nsw i32 0, %87
  %88 = load i8*, i8** %strbeg.addr, align 8
  %call113 = call i8* @S_reghop3(i8* %86, i32 %sub112, i8* %88)
  br label %cond.end.118

cond.false.114:                                   ; preds = %if.end.108
  %89 = load i8*, i8** %strend.addr, align 8
  %90 = load i32, i32* %dontbother, align 4
  %sub115 = sub nsw i32 0, %90
  %idx.ext116 = sext i32 %sub115 to i64
  %add.ptr117 = getelementptr inbounds i8, i8* %89, i64 %idx.ext116
  br label %cond.end.118

cond.end.118:                                     ; preds = %cond.false.114, %cond.true.111
  %cond119 = phi i8* [ %call113, %cond.true.111 ], [ %add.ptr117, %cond.false.114 ]
  %add.ptr120 = getelementptr inbounds i8, i8* %cond119, i64 -1
  store i8* %add.ptr120, i8** %end, align 8
  %91 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs121 = getelementptr inbounds %struct.regexp, %struct.regexp* %91, i32 0, i32 3
  %92 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs121, align 8
  %data122 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %92, i32 0, i32 0
  %arrayidx123 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data122, i32 0, i64 2
  %substr124 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx123, i32 0, i32 2
  %93 = load %struct.sv*, %struct.sv** %substr124, align 8
  %tobool125 = icmp ne %struct.sv* %93, null
  br i1 %tobool125, label %if.then.132, label %lor.lhs.false.126

lor.lhs.false.126:                                ; preds = %cond.end.118
  %94 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs127 = getelementptr inbounds %struct.regexp, %struct.regexp* %94, i32 0, i32 3
  %95 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs127, align 8
  %data128 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %95, i32 0, i32 0
  %arrayidx129 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data128, i32 0, i64 2
  %utf8_substr130 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx129, i32 0, i32 3
  %96 = load %struct.sv*, %struct.sv** %utf8_substr130, align 8
  %tobool131 = icmp ne %struct.sv* %96, null
  br i1 %tobool131, label %if.then.132, label %if.else.156

if.then.132:                                      ; preds = %lor.lhs.false.126, %cond.end.118
  %97 = load i8*, i8** %s, align 8
  %98 = load i8*, i8** %startpos, align 8
  %cmp133 = icmp eq i8* %97, %98
  br i1 %cmp133, label %if.then.135, label %if.end.136

if.then.135:                                      ; preds = %if.then.132
  br label %after_try

if.end.136:                                       ; preds = %if.then.132
  br label %while.body

while.body:                                       ; preds = %if.end.136, %if.end.155
  %99 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %100 = load i8*, i8** %s, align 8
  %call137 = call i32 @S_regtry(%struct.regexp* %99, i8* %100)
  %tobool138 = icmp ne i32 %call137, 0
  br i1 %tobool138, label %if.then.139, label %if.end.140

if.then.139:                                      ; preds = %while.body
  br label %got_it

if.end.140:                                       ; preds = %while.body
  br label %after_try

after_try:                                        ; preds = %if.end.140, %if.then.135
  %101 = load i8*, i8** %s, align 8
  %102 = load i8*, i8** %end, align 8
  %cmp141 = icmp uge i8* %101, %102
  br i1 %cmp141, label %if.then.143, label %if.end.144

if.then.143:                                      ; preds = %after_try
  br label %phooey

if.end.144:                                       ; preds = %after_try
  %103 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch145 = getelementptr inbounds %struct.regexp, %struct.regexp* %103, i32 0, i32 15
  %104 = load i32, i32* %reganch145, align 4
  %and146 = and i32 %104, 3145728
  %tobool147 = icmp ne i32 %and146, 0
  br i1 %tobool147, label %if.then.148, label %if.else.154

if.then.148:                                      ; preds = %if.end.144
  %105 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %106 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %107 = load i8*, i8** %s, align 8
  %add.ptr149 = getelementptr inbounds i8, i8* %107, i64 1
  %108 = load i8*, i8** %strend.addr, align 8
  %109 = load i32, i32* %flags.addr, align 4
  %call150 = call i8* @Perl_re_intuit_start(%struct.regexp* %105, %struct.sv* %106, i8* %add.ptr149, i8* %108, i32 %109, %struct.re_scream_pos_data_s* null)
  store i8* %call150, i8** %s, align 8
  %110 = load i8*, i8** %s, align 8
  %tobool151 = icmp ne i8* %110, null
  br i1 %tobool151, label %if.end.153, label %if.then.152

if.then.152:                                      ; preds = %if.then.148
  br label %phooey

if.end.153:                                       ; preds = %if.then.148
  br label %if.end.155

if.else.154:                                      ; preds = %if.end.144
  %111 = load i8*, i8** %s, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %111, i32 1
  store i8* %incdec.ptr, i8** %s, align 8
  br label %if.end.155

if.end.155:                                       ; preds = %if.else.154, %if.end.153
  br label %while.body

if.else.156:                                      ; preds = %lor.lhs.false.126
  %112 = load i8*, i8** %s, align 8
  %113 = load i8*, i8** %startpos, align 8
  %cmp157 = icmp ugt i8* %112, %113
  br i1 %cmp157, label %if.then.159, label %if.end.161

if.then.159:                                      ; preds = %if.else.156
  %114 = load i8*, i8** %s, align 8
  %incdec.ptr160 = getelementptr inbounds i8, i8* %114, i32 -1
  store i8* %incdec.ptr160, i8** %s, align 8
  br label %if.end.161

if.end.161:                                       ; preds = %if.then.159, %if.else.156
  br label %while.cond

while.cond:                                       ; preds = %if.end.174, %if.end.161
  %115 = load i8*, i8** %s, align 8
  %116 = load i8*, i8** %end, align 8
  %cmp162 = icmp ult i8* %115, %116
  br i1 %cmp162, label %while.body.164, label %while.end

while.body.164:                                   ; preds = %while.cond
  %117 = load i8*, i8** %s, align 8
  %incdec.ptr165 = getelementptr inbounds i8, i8* %117, i32 1
  store i8* %incdec.ptr165, i8** %s, align 8
  %118 = load i8, i8* %117, align 1
  %conv166 = sext i8 %118 to i32
  %cmp167 = icmp eq i32 %conv166, 10
  br i1 %cmp167, label %if.then.169, label %if.end.174

if.then.169:                                      ; preds = %while.body.164
  %119 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %120 = load i8*, i8** %s, align 8
  %call170 = call i32 @S_regtry(%struct.regexp* %119, i8* %120)
  %tobool171 = icmp ne i32 %call170, 0
  br i1 %tobool171, label %if.then.172, label %if.end.173

if.then.172:                                      ; preds = %if.then.169
  br label %got_it

if.end.173:                                       ; preds = %if.then.169
  br label %if.end.174

if.end.174:                                       ; preds = %if.end.173, %while.body.164
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end.175

if.end.175:                                       ; preds = %while.end
  br label %if.end.176

if.end.176:                                       ; preds = %if.end.175, %lor.lhs.false.101
  br label %if.end.177

if.end.177:                                       ; preds = %if.end.176
  br label %phooey

if.else.178:                                      ; preds = %if.end.84
  %121 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch179 = getelementptr inbounds %struct.regexp, %struct.regexp* %121, i32 0, i32 15
  %122 = load i32, i32* %reganch179, align 4
  %and180 = and i32 %122, 8
  %tobool181 = icmp ne i32 %and180, 0
  br i1 %tobool181, label %if.then.182, label %if.end.187

if.then.182:                                      ; preds = %if.else.178
  %123 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %124 = load i8*, i8** @PL_reg_ganch, align 8
  %call183 = call i32 @S_regtry(%struct.regexp* %123, i8* %124)
  %tobool184 = icmp ne i32 %call183, 0
  br i1 %tobool184, label %if.then.185, label %if.end.186

if.then.185:                                      ; preds = %if.then.182
  br label %got_it

if.end.186:                                       ; preds = %if.then.182
  br label %phooey

if.end.187:                                       ; preds = %if.else.178
  br label %if.end.188

if.end.188:                                       ; preds = %if.end.187
  %125 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs189 = getelementptr inbounds %struct.regexp, %struct.regexp* %125, i32 0, i32 3
  %126 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs189, align 8
  %data190 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %126, i32 0, i32 0
  %arrayidx191 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data190, i32 0, i64 0
  %substr192 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx191, i32 0, i32 2
  %127 = load %struct.sv*, %struct.sv** %substr192, align 8
  %tobool193 = icmp ne %struct.sv* %127, null
  br i1 %tobool193, label %land.lhs.true.200, label %lor.lhs.false.194

lor.lhs.false.194:                                ; preds = %if.end.188
  %128 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs195 = getelementptr inbounds %struct.regexp, %struct.regexp* %128, i32 0, i32 3
  %129 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs195, align 8
  %data196 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %129, i32 0, i32 0
  %arrayidx197 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data196, i32 0, i64 0
  %utf8_substr198 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx197, i32 0, i32 3
  %130 = load %struct.sv*, %struct.sv** %utf8_substr198, align 8
  %tobool199 = icmp ne %struct.sv* %130, null
  br i1 %tobool199, label %land.lhs.true.200, label %if.else.317

land.lhs.true.200:                                ; preds = %lor.lhs.false.194, %if.end.188
  %131 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch201 = getelementptr inbounds %struct.regexp, %struct.regexp* %131, i32 0, i32 15
  %132 = load i32, i32* %reganch201, align 4
  %and202 = and i32 %132, 16
  %tobool203 = icmp ne i32 %and202, 0
  br i1 %tobool203, label %if.then.204, label %if.else.317

if.then.204:                                      ; preds = %land.lhs.true.200
  %133 = load i8, i8* %do_utf8, align 1
  %conv205 = sext i8 %133 to i32
  %tobool206 = icmp ne i32 %conv205, 0
  br i1 %tobool206, label %cond.true.207, label %cond.false.213

cond.true.207:                                    ; preds = %if.then.204
  %134 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs208 = getelementptr inbounds %struct.regexp, %struct.regexp* %134, i32 0, i32 3
  %135 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs208, align 8
  %data209 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %135, i32 0, i32 0
  %arrayidx210 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data209, i32 0, i64 0
  %utf8_substr211 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx210, i32 0, i32 3
  %136 = load %struct.sv*, %struct.sv** %utf8_substr211, align 8
  %tobool212 = icmp ne %struct.sv* %136, null
  br i1 %tobool212, label %if.end.225, label %if.then.219

cond.false.213:                                   ; preds = %if.then.204
  %137 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs214 = getelementptr inbounds %struct.regexp, %struct.regexp* %137, i32 0, i32 3
  %138 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs214, align 8
  %data215 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %138, i32 0, i32 0
  %arrayidx216 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data215, i32 0, i64 0
  %substr217 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx216, i32 0, i32 2
  %139 = load %struct.sv*, %struct.sv** %substr217, align 8
  %tobool218 = icmp ne %struct.sv* %139, null
  br i1 %tobool218, label %if.end.225, label %if.then.219

if.then.219:                                      ; preds = %cond.false.213, %cond.true.207
  %140 = load i8, i8* %do_utf8, align 1
  %conv220 = sext i8 %140 to i32
  %tobool221 = icmp ne i32 %conv220, 0
  br i1 %tobool221, label %cond.true.222, label %cond.false.223

cond.true.222:                                    ; preds = %if.then.219
  %141 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  call void @S_to_utf8_substr(%struct.regexp* %141)
  br label %cond.end.224

cond.false.223:                                   ; preds = %if.then.219
  %142 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  call void @S_to_byte_substr(%struct.regexp* %142)
  br label %cond.end.224

cond.end.224:                                     ; preds = %cond.false.223, %cond.true.222
  br label %if.end.225

if.end.225:                                       ; preds = %cond.end.224, %cond.false.213, %cond.true.207
  %143 = load i8, i8* %do_utf8, align 1
  %conv226 = sext i8 %143 to i32
  %tobool227 = icmp ne i32 %conv226, 0
  br i1 %tobool227, label %cond.true.228, label %cond.false.233

cond.true.228:                                    ; preds = %if.end.225
  %144 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs229 = getelementptr inbounds %struct.regexp, %struct.regexp* %144, i32 0, i32 3
  %145 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs229, align 8
  %data230 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %145, i32 0, i32 0
  %arrayidx231 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data230, i32 0, i64 0
  %utf8_substr232 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx231, i32 0, i32 3
  %146 = load %struct.sv*, %struct.sv** %utf8_substr232, align 8
  br label %cond.end.238

cond.false.233:                                   ; preds = %if.end.225
  %147 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs234 = getelementptr inbounds %struct.regexp, %struct.regexp* %147, i32 0, i32 3
  %148 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs234, align 8
  %data235 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %148, i32 0, i32 0
  %arrayidx236 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data235, i32 0, i64 0
  %substr237 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx236, i32 0, i32 2
  %149 = load %struct.sv*, %struct.sv** %substr237, align 8
  br label %cond.end.238

cond.end.238:                                     ; preds = %cond.false.233, %cond.true.228
  %cond239 = phi %struct.sv* [ %146, %cond.true.228 ], [ %149, %cond.false.233 ]
  %sv_any240 = getelementptr inbounds %struct.sv, %struct.sv* %cond239, i32 0, i32 0
  %150 = load i8*, i8** %sv_any240, align 8
  %151 = bitcast i8* %150 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %151, i32 0, i32 0
  %152 = load i8*, i8** %xpv_pv, align 8
  %arrayidx241 = getelementptr inbounds i8, i8* %152, i64 0
  %153 = load i8, i8* %arrayidx241, align 1
  store i8 %153, i8* %ch, align 1
  %154 = load i8, i8* %do_utf8, align 1
  %tobool242 = icmp ne i8 %154, 0
  br i1 %tobool242, label %if.then.243, label %if.else.285

if.then.243:                                      ; preds = %cond.end.238
  br label %while.cond.244

while.cond.244:                                   ; preds = %if.end.278, %if.then.243
  %155 = load i8*, i8** %s, align 8
  %156 = load i8*, i8** %strend.addr, align 8
  %cmp245 = icmp ult i8* %155, %156
  br i1 %cmp245, label %while.body.247, label %while.end.284

while.body.247:                                   ; preds = %while.cond.244
  %157 = load i8*, i8** %s, align 8
  %158 = load i8, i8* %157, align 1
  %conv248 = sext i8 %158 to i32
  %159 = load i8, i8* %ch, align 1
  %conv249 = sext i8 %159 to i32
  %cmp250 = icmp eq i32 %conv248, %conv249
  br i1 %cmp250, label %if.then.252, label %if.end.278

if.then.252:                                      ; preds = %while.body.247
  %160 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %161 = load i8*, i8** %s, align 8
  %call253 = call i32 @S_regtry(%struct.regexp* %160, i8* %161)
  %tobool254 = icmp ne i32 %call253, 0
  br i1 %tobool254, label %if.then.255, label %if.end.256

if.then.255:                                      ; preds = %if.then.252
  br label %got_it

if.end.256:                                       ; preds = %if.then.252
  %162 = load i8*, i8** %s, align 8
  %163 = load i8, i8* %162, align 1
  %idxprom = zext i8 %163 to i64
  %arrayidx257 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom
  %164 = load i8, i8* %arrayidx257, align 1
  %conv258 = zext i8 %164 to i32
  %165 = load i8*, i8** %s, align 8
  %idx.ext259 = sext i32 %conv258 to i64
  %add.ptr260 = getelementptr inbounds i8, i8* %165, i64 %idx.ext259
  store i8* %add.ptr260, i8** %s, align 8
  br label %while.cond.261

while.cond.261:                                   ; preds = %while.body.271, %if.end.256
  %166 = load i8*, i8** %s, align 8
  %167 = load i8*, i8** %strend.addr, align 8
  %cmp262 = icmp ult i8* %166, %167
  br i1 %cmp262, label %land.rhs.264, label %land.end.269

land.rhs.264:                                     ; preds = %while.cond.261
  %168 = load i8*, i8** %s, align 8
  %169 = load i8, i8* %168, align 1
  %conv265 = sext i8 %169 to i32
  %170 = load i8, i8* %ch, align 1
  %conv266 = sext i8 %170 to i32
  %cmp267 = icmp eq i32 %conv265, %conv266
  br label %land.end.269

land.end.269:                                     ; preds = %land.rhs.264, %while.cond.261
  %171 = phi i1 [ false, %while.cond.261 ], [ %cmp267, %land.rhs.264 ]
  br i1 %171, label %while.body.271, label %while.end.277

while.body.271:                                   ; preds = %land.end.269
  %172 = load i8*, i8** %s, align 8
  %173 = load i8, i8* %172, align 1
  %idxprom272 = zext i8 %173 to i64
  %arrayidx273 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom272
  %174 = load i8, i8* %arrayidx273, align 1
  %conv274 = zext i8 %174 to i32
  %175 = load i8*, i8** %s, align 8
  %idx.ext275 = sext i32 %conv274 to i64
  %add.ptr276 = getelementptr inbounds i8, i8* %175, i64 %idx.ext275
  store i8* %add.ptr276, i8** %s, align 8
  br label %while.cond.261

while.end.277:                                    ; preds = %land.end.269
  br label %if.end.278

if.end.278:                                       ; preds = %while.end.277, %while.body.247
  %176 = load i8*, i8** %s, align 8
  %177 = load i8, i8* %176, align 1
  %idxprom279 = zext i8 %177 to i64
  %arrayidx280 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom279
  %178 = load i8, i8* %arrayidx280, align 1
  %conv281 = zext i8 %178 to i32
  %179 = load i8*, i8** %s, align 8
  %idx.ext282 = sext i32 %conv281 to i64
  %add.ptr283 = getelementptr inbounds i8, i8* %179, i64 %idx.ext282
  store i8* %add.ptr283, i8** %s, align 8
  br label %while.cond.244

while.end.284:                                    ; preds = %while.cond.244
  br label %if.end.316

if.else.285:                                      ; preds = %cond.end.238
  br label %while.cond.286

while.cond.286:                                   ; preds = %if.end.313, %if.else.285
  %180 = load i8*, i8** %s, align 8
  %181 = load i8*, i8** %strend.addr, align 8
  %cmp287 = icmp ult i8* %180, %181
  br i1 %cmp287, label %while.body.289, label %while.end.315

while.body.289:                                   ; preds = %while.cond.286
  %182 = load i8*, i8** %s, align 8
  %183 = load i8, i8* %182, align 1
  %conv290 = sext i8 %183 to i32
  %184 = load i8, i8* %ch, align 1
  %conv291 = sext i8 %184 to i32
  %cmp292 = icmp eq i32 %conv290, %conv291
  br i1 %cmp292, label %if.then.294, label %if.end.313

if.then.294:                                      ; preds = %while.body.289
  %185 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %186 = load i8*, i8** %s, align 8
  %call295 = call i32 @S_regtry(%struct.regexp* %185, i8* %186)
  %tobool296 = icmp ne i32 %call295, 0
  br i1 %tobool296, label %if.then.297, label %if.end.298

if.then.297:                                      ; preds = %if.then.294
  br label %got_it

if.end.298:                                       ; preds = %if.then.294
  %187 = load i8*, i8** %s, align 8
  %incdec.ptr299 = getelementptr inbounds i8, i8* %187, i32 1
  store i8* %incdec.ptr299, i8** %s, align 8
  br label %while.cond.300

while.cond.300:                                   ; preds = %while.body.310, %if.end.298
  %188 = load i8*, i8** %s, align 8
  %189 = load i8*, i8** %strend.addr, align 8
  %cmp301 = icmp ult i8* %188, %189
  br i1 %cmp301, label %land.rhs.303, label %land.end.308

land.rhs.303:                                     ; preds = %while.cond.300
  %190 = load i8*, i8** %s, align 8
  %191 = load i8, i8* %190, align 1
  %conv304 = sext i8 %191 to i32
  %192 = load i8, i8* %ch, align 1
  %conv305 = sext i8 %192 to i32
  %cmp306 = icmp eq i32 %conv304, %conv305
  br label %land.end.308

land.end.308:                                     ; preds = %land.rhs.303, %while.cond.300
  %193 = phi i1 [ false, %while.cond.300 ], [ %cmp306, %land.rhs.303 ]
  br i1 %193, label %while.body.310, label %while.end.312

while.body.310:                                   ; preds = %land.end.308
  %194 = load i8*, i8** %s, align 8
  %incdec.ptr311 = getelementptr inbounds i8, i8* %194, i32 1
  store i8* %incdec.ptr311, i8** %s, align 8
  br label %while.cond.300

while.end.312:                                    ; preds = %land.end.308
  br label %if.end.313

if.end.313:                                       ; preds = %while.end.312, %while.body.289
  %195 = load i8*, i8** %s, align 8
  %incdec.ptr314 = getelementptr inbounds i8, i8* %195, i32 1
  store i8* %incdec.ptr314, i8** %s, align 8
  br label %while.cond.286

while.end.315:                                    ; preds = %while.cond.286
  br label %if.end.316

if.end.316:                                       ; preds = %while.end.315, %while.end.284
  br label %if.end.884

if.else.317:                                      ; preds = %land.lhs.true.200, %lor.lhs.false.194
  %196 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs318 = getelementptr inbounds %struct.regexp, %struct.regexp* %196, i32 0, i32 3
  %197 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs318, align 8
  %data319 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %197, i32 0, i32 0
  %arrayidx320 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data319, i32 0, i64 0
  %substr321 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx320, i32 0, i32 2
  %198 = load %struct.sv*, %struct.sv** %substr321, align 8
  %cmp322 = icmp ne %struct.sv* %198, null
  br i1 %cmp322, label %if.then.355, label %lor.lhs.false.324

lor.lhs.false.324:                                ; preds = %if.else.317
  %199 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs325 = getelementptr inbounds %struct.regexp, %struct.regexp* %199, i32 0, i32 3
  %200 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs325, align 8
  %data326 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %200, i32 0, i32 0
  %arrayidx327 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data326, i32 0, i64 0
  %utf8_substr328 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx327, i32 0, i32 3
  %201 = load %struct.sv*, %struct.sv** %utf8_substr328, align 8
  %cmp329 = icmp ne %struct.sv* %201, null
  br i1 %cmp329, label %if.then.355, label %lor.lhs.false.331

lor.lhs.false.331:                                ; preds = %lor.lhs.false.324
  %202 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs332 = getelementptr inbounds %struct.regexp, %struct.regexp* %202, i32 0, i32 3
  %203 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs332, align 8
  %data333 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %203, i32 0, i32 0
  %arrayidx334 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data333, i32 0, i64 1
  %substr335 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx334, i32 0, i32 2
  %204 = load %struct.sv*, %struct.sv** %substr335, align 8
  %cmp336 = icmp ne %struct.sv* %204, null
  br i1 %cmp336, label %land.lhs.true.345, label %lor.lhs.false.338

lor.lhs.false.338:                                ; preds = %lor.lhs.false.331
  %205 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs339 = getelementptr inbounds %struct.regexp, %struct.regexp* %205, i32 0, i32 3
  %206 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs339, align 8
  %data340 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %206, i32 0, i32 0
  %arrayidx341 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data340, i32 0, i64 1
  %utf8_substr342 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx341, i32 0, i32 3
  %207 = load %struct.sv*, %struct.sv** %utf8_substr342, align 8
  %cmp343 = icmp ne %struct.sv* %207, null
  br i1 %cmp343, label %land.lhs.true.345, label %if.else.672

land.lhs.true.345:                                ; preds = %lor.lhs.false.338, %lor.lhs.false.331
  %208 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs346 = getelementptr inbounds %struct.regexp, %struct.regexp* %208, i32 0, i32 3
  %209 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs346, align 8
  %data347 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %209, i32 0, i32 0
  %arrayidx348 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data347, i32 0, i64 1
  %max_offset = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx348, i32 0, i32 1
  %210 = load i32, i32* %max_offset, align 4
  %conv349 = sext i32 %210 to i64
  %211 = load i8*, i8** %strend.addr, align 8
  %212 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast350 = ptrtoint i8* %211 to i64
  %sub.ptr.rhs.cast351 = ptrtoint i8* %212 to i64
  %sub.ptr.sub352 = sub i64 %sub.ptr.lhs.cast350, %sub.ptr.rhs.cast351
  %cmp353 = icmp slt i64 %conv349, %sub.ptr.sub352
  br i1 %cmp353, label %if.then.355, label %if.else.672

if.then.355:                                      ; preds = %land.lhs.true.345, %lor.lhs.false.324, %if.else.317
  %213 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs356 = getelementptr inbounds %struct.regexp, %struct.regexp* %213, i32 0, i32 3
  %214 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs356, align 8
  %data357 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %214, i32 0, i32 0
  %arrayidx358 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data357, i32 0, i64 0
  %substr359 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx358, i32 0, i32 2
  %215 = load %struct.sv*, %struct.sv** %substr359, align 8
  %tobool360 = icmp ne %struct.sv* %215, null
  br i1 %tobool360, label %if.then.367, label %lor.lhs.false.361

lor.lhs.false.361:                                ; preds = %if.then.355
  %216 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs362 = getelementptr inbounds %struct.regexp, %struct.regexp* %216, i32 0, i32 3
  %217 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs362, align 8
  %data363 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %217, i32 0, i32 0
  %arrayidx364 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data363, i32 0, i64 0
  %utf8_substr365 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx364, i32 0, i32 3
  %218 = load %struct.sv*, %struct.sv** %utf8_substr365, align 8
  %tobool366 = icmp ne %struct.sv* %218, null
  br i1 %tobool366, label %if.then.367, label %if.else.406

if.then.367:                                      ; preds = %lor.lhs.false.361, %if.then.355
  %219 = load i8, i8* %do_utf8, align 1
  %conv368 = sext i8 %219 to i32
  %tobool369 = icmp ne i32 %conv368, 0
  br i1 %tobool369, label %cond.true.370, label %cond.false.376

cond.true.370:                                    ; preds = %if.then.367
  %220 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs371 = getelementptr inbounds %struct.regexp, %struct.regexp* %220, i32 0, i32 3
  %221 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs371, align 8
  %data372 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %221, i32 0, i32 0
  %arrayidx373 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data372, i32 0, i64 0
  %utf8_substr374 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx373, i32 0, i32 3
  %222 = load %struct.sv*, %struct.sv** %utf8_substr374, align 8
  %tobool375 = icmp ne %struct.sv* %222, null
  br i1 %tobool375, label %if.end.388, label %if.then.382

cond.false.376:                                   ; preds = %if.then.367
  %223 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs377 = getelementptr inbounds %struct.regexp, %struct.regexp* %223, i32 0, i32 3
  %224 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs377, align 8
  %data378 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %224, i32 0, i32 0
  %arrayidx379 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data378, i32 0, i64 0
  %substr380 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx379, i32 0, i32 2
  %225 = load %struct.sv*, %struct.sv** %substr380, align 8
  %tobool381 = icmp ne %struct.sv* %225, null
  br i1 %tobool381, label %if.end.388, label %if.then.382

if.then.382:                                      ; preds = %cond.false.376, %cond.true.370
  %226 = load i8, i8* %do_utf8, align 1
  %conv383 = sext i8 %226 to i32
  %tobool384 = icmp ne i32 %conv383, 0
  br i1 %tobool384, label %cond.true.385, label %cond.false.386

cond.true.385:                                    ; preds = %if.then.382
  %227 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  call void @S_to_utf8_substr(%struct.regexp* %227)
  br label %cond.end.387

cond.false.386:                                   ; preds = %if.then.382
  %228 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  call void @S_to_byte_substr(%struct.regexp* %228)
  br label %cond.end.387

cond.end.387:                                     ; preds = %cond.false.386, %cond.true.385
  br label %if.end.388

if.end.388:                                       ; preds = %cond.end.387, %cond.false.376, %cond.true.370
  %229 = load i8, i8* %do_utf8, align 1
  %conv389 = sext i8 %229 to i32
  %tobool390 = icmp ne i32 %conv389, 0
  br i1 %tobool390, label %cond.true.391, label %cond.false.396

cond.true.391:                                    ; preds = %if.end.388
  %230 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs392 = getelementptr inbounds %struct.regexp, %struct.regexp* %230, i32 0, i32 3
  %231 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs392, align 8
  %data393 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %231, i32 0, i32 0
  %arrayidx394 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data393, i32 0, i64 0
  %utf8_substr395 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx394, i32 0, i32 3
  %232 = load %struct.sv*, %struct.sv** %utf8_substr395, align 8
  br label %cond.end.401

cond.false.396:                                   ; preds = %if.end.388
  %233 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs397 = getelementptr inbounds %struct.regexp, %struct.regexp* %233, i32 0, i32 3
  %234 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs397, align 8
  %data398 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %234, i32 0, i32 0
  %arrayidx399 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data398, i32 0, i64 0
  %substr400 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx399, i32 0, i32 2
  %235 = load %struct.sv*, %struct.sv** %substr400, align 8
  br label %cond.end.401

cond.end.401:                                     ; preds = %cond.false.396, %cond.true.391
  %cond402 = phi %struct.sv* [ %232, %cond.true.391 ], [ %235, %cond.false.396 ]
  store %struct.sv* %cond402, %struct.sv** %must, align 8
  %236 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs403 = getelementptr inbounds %struct.regexp, %struct.regexp* %236, i32 0, i32 3
  %237 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs403, align 8
  %data404 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %237, i32 0, i32 0
  %arrayidx405 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data404, i32 0, i64 0
  %min_offset = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx405, i32 0, i32 0
  %238 = load i32, i32* %min_offset, align 4
  store i32 %238, i32* %back_min, align 4
  store i32 %238, i32* %back_max, align 4
  br label %if.end.450

if.else.406:                                      ; preds = %lor.lhs.false.361
  %239 = load i8, i8* %do_utf8, align 1
  %conv407 = sext i8 %239 to i32
  %tobool408 = icmp ne i32 %conv407, 0
  br i1 %tobool408, label %cond.true.409, label %cond.false.415

cond.true.409:                                    ; preds = %if.else.406
  %240 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs410 = getelementptr inbounds %struct.regexp, %struct.regexp* %240, i32 0, i32 3
  %241 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs410, align 8
  %data411 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %241, i32 0, i32 0
  %arrayidx412 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data411, i32 0, i64 1
  %utf8_substr413 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx412, i32 0, i32 3
  %242 = load %struct.sv*, %struct.sv** %utf8_substr413, align 8
  %tobool414 = icmp ne %struct.sv* %242, null
  br i1 %tobool414, label %if.end.427, label %if.then.421

cond.false.415:                                   ; preds = %if.else.406
  %243 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs416 = getelementptr inbounds %struct.regexp, %struct.regexp* %243, i32 0, i32 3
  %244 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs416, align 8
  %data417 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %244, i32 0, i32 0
  %arrayidx418 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data417, i32 0, i64 1
  %substr419 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx418, i32 0, i32 2
  %245 = load %struct.sv*, %struct.sv** %substr419, align 8
  %tobool420 = icmp ne %struct.sv* %245, null
  br i1 %tobool420, label %if.end.427, label %if.then.421

if.then.421:                                      ; preds = %cond.false.415, %cond.true.409
  %246 = load i8, i8* %do_utf8, align 1
  %conv422 = sext i8 %246 to i32
  %tobool423 = icmp ne i32 %conv422, 0
  br i1 %tobool423, label %cond.true.424, label %cond.false.425

cond.true.424:                                    ; preds = %if.then.421
  %247 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  call void @S_to_utf8_substr(%struct.regexp* %247)
  br label %cond.end.426

cond.false.425:                                   ; preds = %if.then.421
  %248 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  call void @S_to_byte_substr(%struct.regexp* %248)
  br label %cond.end.426

cond.end.426:                                     ; preds = %cond.false.425, %cond.true.424
  br label %if.end.427

if.end.427:                                       ; preds = %cond.end.426, %cond.false.415, %cond.true.409
  %249 = load i8, i8* %do_utf8, align 1
  %conv428 = sext i8 %249 to i32
  %tobool429 = icmp ne i32 %conv428, 0
  br i1 %tobool429, label %cond.true.430, label %cond.false.435

cond.true.430:                                    ; preds = %if.end.427
  %250 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs431 = getelementptr inbounds %struct.regexp, %struct.regexp* %250, i32 0, i32 3
  %251 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs431, align 8
  %data432 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %251, i32 0, i32 0
  %arrayidx433 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data432, i32 0, i64 1
  %utf8_substr434 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx433, i32 0, i32 3
  %252 = load %struct.sv*, %struct.sv** %utf8_substr434, align 8
  br label %cond.end.440

cond.false.435:                                   ; preds = %if.end.427
  %253 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs436 = getelementptr inbounds %struct.regexp, %struct.regexp* %253, i32 0, i32 3
  %254 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs436, align 8
  %data437 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %254, i32 0, i32 0
  %arrayidx438 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data437, i32 0, i64 1
  %substr439 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx438, i32 0, i32 2
  %255 = load %struct.sv*, %struct.sv** %substr439, align 8
  br label %cond.end.440

cond.end.440:                                     ; preds = %cond.false.435, %cond.true.430
  %cond441 = phi %struct.sv* [ %252, %cond.true.430 ], [ %255, %cond.false.435 ]
  store %struct.sv* %cond441, %struct.sv** %must, align 8
  %256 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs442 = getelementptr inbounds %struct.regexp, %struct.regexp* %256, i32 0, i32 3
  %257 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs442, align 8
  %data443 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %257, i32 0, i32 0
  %arrayidx444 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data443, i32 0, i64 1
  %max_offset445 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx444, i32 0, i32 1
  %258 = load i32, i32* %max_offset445, align 4
  store i32 %258, i32* %back_max, align 4
  %259 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs446 = getelementptr inbounds %struct.regexp, %struct.regexp* %259, i32 0, i32 3
  %260 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs446, align 8
  %data447 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %260, i32 0, i32 0
  %arrayidx448 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data447, i32 0, i64 1
  %min_offset449 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx448, i32 0, i32 0
  %261 = load i32, i32* %min_offset449, align 4
  store i32 %261, i32* %back_min, align 4
  br label %if.end.450

if.end.450:                                       ; preds = %cond.end.440, %cond.end.401
  %262 = load %struct.sv*, %struct.sv** %must, align 8
  %cmp451 = icmp eq %struct.sv* %262, @PL_sv_undef
  br i1 %cmp451, label %if.then.453, label %if.end.454

if.then.453:                                      ; preds = %if.end.450
  br label %phooey

if.end.454:                                       ; preds = %if.end.450
  %263 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv455 = sext i8 %263 to i32
  %tobool456 = icmp ne i32 %conv455, 0
  br i1 %tobool456, label %cond.true.457, label %cond.false.476

cond.true.457:                                    ; preds = %if.end.454
  %264 = load i8*, i8** %strend.addr, align 8
  %265 = load i8, i8* %do_utf8, align 1
  %conv458 = sext i8 %265 to i32
  %tobool459 = icmp ne i32 %conv458, 0
  br i1 %tobool459, label %cond.true.460, label %cond.false.462

cond.true.460:                                    ; preds = %cond.true.457
  %266 = load %struct.sv*, %struct.sv** %must, align 8
  %call461 = call i64 @Perl_sv_len_utf8(%struct.sv* %266)
  br label %cond.end.464

cond.false.462:                                   ; preds = %cond.true.457
  %267 = load %struct.sv*, %struct.sv** %must, align 8
  %sv_any463 = getelementptr inbounds %struct.sv, %struct.sv* %267, i32 0, i32 0
  %268 = load i8*, i8** %sv_any463, align 8
  %269 = bitcast i8* %268 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %269, i32 0, i32 1
  %270 = load i64, i64* %xpv_cur, align 8
  br label %cond.end.464

cond.end.464:                                     ; preds = %cond.false.462, %cond.true.460
  %cond465 = phi i64 [ %call461, %cond.true.460 ], [ %270, %cond.false.462 ]
  %271 = load %struct.sv*, %struct.sv** %must, align 8
  %sv_flags466 = getelementptr inbounds %struct.sv, %struct.sv* %271, i32 0, i32 2
  %272 = load i32, i32* %sv_flags466, align 4
  %and467 = and i32 %272, 1073741824
  %cmp468 = icmp ne i32 %and467, 0
  %conv469 = zext i1 %cmp468 to i32
  %conv470 = sext i32 %conv469 to i64
  %sub471 = sub i64 %cond465, %conv470
  %273 = load i32, i32* %back_min, align 4
  %conv472 = sext i32 %273 to i64
  %add = add i64 %sub471, %conv472
  %conv473 = trunc i64 %add to i32
  %sub474 = sub nsw i32 0, %conv473
  %274 = load i8*, i8** %strbeg.addr, align 8
  %call475 = call i8* @S_reghop3(i8* %264, i32 %sub474, i8* %274)
  br label %cond.end.498

cond.false.476:                                   ; preds = %if.end.454
  %275 = load i8*, i8** %strend.addr, align 8
  %276 = load i8, i8* %do_utf8, align 1
  %conv477 = sext i8 %276 to i32
  %tobool478 = icmp ne i32 %conv477, 0
  br i1 %tobool478, label %cond.true.479, label %cond.false.481

cond.true.479:                                    ; preds = %cond.false.476
  %277 = load %struct.sv*, %struct.sv** %must, align 8
  %call480 = call i64 @Perl_sv_len_utf8(%struct.sv* %277)
  br label %cond.end.484

cond.false.481:                                   ; preds = %cond.false.476
  %278 = load %struct.sv*, %struct.sv** %must, align 8
  %sv_any482 = getelementptr inbounds %struct.sv, %struct.sv* %278, i32 0, i32 0
  %279 = load i8*, i8** %sv_any482, align 8
  %280 = bitcast i8* %279 to %struct.xpv*
  %xpv_cur483 = getelementptr inbounds %struct.xpv, %struct.xpv* %280, i32 0, i32 1
  %281 = load i64, i64* %xpv_cur483, align 8
  br label %cond.end.484

cond.end.484:                                     ; preds = %cond.false.481, %cond.true.479
  %cond485 = phi i64 [ %call480, %cond.true.479 ], [ %281, %cond.false.481 ]
  %282 = load %struct.sv*, %struct.sv** %must, align 8
  %sv_flags486 = getelementptr inbounds %struct.sv, %struct.sv* %282, i32 0, i32 2
  %283 = load i32, i32* %sv_flags486, align 4
  %and487 = and i32 %283, 1073741824
  %cmp488 = icmp ne i32 %and487, 0
  %conv489 = zext i1 %cmp488 to i32
  %conv490 = sext i32 %conv489 to i64
  %sub491 = sub i64 %cond485, %conv490
  %284 = load i32, i32* %back_min, align 4
  %conv492 = sext i32 %284 to i64
  %add493 = add i64 %sub491, %conv492
  %conv494 = trunc i64 %add493 to i32
  %sub495 = sub nsw i32 0, %conv494
  %idx.ext496 = sext i32 %sub495 to i64
  %add.ptr497 = getelementptr inbounds i8, i8* %275, i64 %idx.ext496
  br label %cond.end.498

cond.end.498:                                     ; preds = %cond.end.484, %cond.end.464
  %cond499 = phi i8* [ %call475, %cond.end.464 ], [ %add.ptr497, %cond.end.484 ]
  store i8* %cond499, i8** %last, align 8
  %285 = load i8*, i8** %s, align 8
  %286 = load i8*, i8** @PL_bostr, align 8
  %cmp500 = icmp ugt i8* %285, %286
  br i1 %cmp500, label %if.then.502, label %if.else.511

if.then.502:                                      ; preds = %cond.end.498
  %287 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv503 = sext i8 %287 to i32
  %tobool504 = icmp ne i32 %conv503, 0
  br i1 %tobool504, label %cond.true.505, label %cond.false.507

cond.true.505:                                    ; preds = %if.then.502
  %288 = load i8*, i8** %s, align 8
  %call506 = call i8* @S_reghop(i8* %288, i32 -1)
  br label %cond.end.509

cond.false.507:                                   ; preds = %if.then.502
  %289 = load i8*, i8** %s, align 8
  %add.ptr508 = getelementptr inbounds i8, i8* %289, i64 -1
  br label %cond.end.509

cond.end.509:                                     ; preds = %cond.false.507, %cond.true.505
  %cond510 = phi i8* [ %call506, %cond.true.505 ], [ %add.ptr508, %cond.false.507 ]
  store i8* %cond510, i8** %last1, align 8
  br label %if.end.513

if.else.511:                                      ; preds = %cond.end.498
  %290 = load i8*, i8** %s, align 8
  %add.ptr512 = getelementptr inbounds i8, i8* %290, i64 -1
  store i8* %add.ptr512, i8** %last1, align 8
  br label %if.end.513

if.end.513:                                       ; preds = %if.else.511, %cond.end.509
  store i32 -1, i32* %scream_pos, align 4
  %291 = load i32, i32* %end_shift, align 4
  store i32 %291, i32* %dontbother, align 4
  %292 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv514 = sext i8 %292 to i32
  %tobool515 = icmp ne i32 %conv514, 0
  br i1 %tobool515, label %cond.true.516, label %cond.false.519

cond.true.516:                                    ; preds = %if.end.513
  %293 = load i8*, i8** %strend.addr, align 8
  %294 = load i32, i32* %dontbother, align 4
  %sub517 = sub nsw i32 0, %294
  %call518 = call i8* @S_reghop(i8* %293, i32 %sub517)
  br label %cond.end.523

cond.false.519:                                   ; preds = %if.end.513
  %295 = load i8*, i8** %strend.addr, align 8
  %296 = load i32, i32* %dontbother, align 4
  %sub520 = sub nsw i32 0, %296
  %idx.ext521 = sext i32 %sub520 to i64
  %add.ptr522 = getelementptr inbounds i8, i8* %295, i64 %idx.ext521
  br label %cond.end.523

cond.end.523:                                     ; preds = %cond.false.519, %cond.true.516
  %cond524 = phi i8* [ %call518, %cond.true.516 ], [ %add.ptr522, %cond.false.519 ]
  store i8* %cond524, i8** %strend.addr, align 8
  br label %while.cond.525

while.cond.525:                                   ; preds = %if.end.670, %cond.end.523
  %297 = load i8*, i8** %s, align 8
  %298 = load i8*, i8** %last, align 8
  %cmp526 = icmp ule i8* %297, %298
  br i1 %cmp526, label %land.rhs.528, label %land.end.562

land.rhs.528:                                     ; preds = %while.cond.525
  %299 = load i32, i32* %flags.addr, align 4
  %and529 = and i32 %299, 4
  %tobool530 = icmp ne i32 %and529, 0
  br i1 %tobool530, label %cond.true.531, label %cond.false.546

cond.true.531:                                    ; preds = %land.rhs.528
  %300 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %301 = load %struct.sv*, %struct.sv** %must, align 8
  %302 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv532 = sext i8 %302 to i32
  %tobool533 = icmp ne i32 %conv532, 0
  br i1 %tobool533, label %cond.true.534, label %cond.false.536

cond.true.534:                                    ; preds = %cond.true.531
  %303 = load i8*, i8** %s, align 8
  %304 = load i32, i32* %back_min, align 4
  %305 = load i8*, i8** %strend.addr, align 8
  %call535 = call i8* @S_reghop3(i8* %303, i32 %304, i8* %305)
  br label %cond.end.539

cond.false.536:                                   ; preds = %cond.true.531
  %306 = load i8*, i8** %s, align 8
  %307 = load i32, i32* %back_min, align 4
  %idx.ext537 = sext i32 %307 to i64
  %add.ptr538 = getelementptr inbounds i8, i8* %306, i64 %idx.ext537
  br label %cond.end.539

cond.end.539:                                     ; preds = %cond.false.536, %cond.true.534
  %cond540 = phi i8* [ %call535, %cond.true.534 ], [ %add.ptr538, %cond.false.536 ]
  %308 = load i8*, i8** %strbeg.addr, align 8
  %sub.ptr.lhs.cast541 = ptrtoint i8* %cond540 to i64
  %sub.ptr.rhs.cast542 = ptrtoint i8* %308 to i64
  %sub.ptr.sub543 = sub i64 %sub.ptr.lhs.cast541, %sub.ptr.rhs.cast542
  %conv544 = trunc i64 %sub.ptr.sub543 to i32
  %309 = load i32, i32* %end_shift, align 4
  %call545 = call i8* @Perl_screaminstr(%struct.sv* %300, %struct.sv* %301, i32 %conv544, i32 %309, i32* %scream_pos, i32 0)
  store i8* %call545, i8** %s, align 8
  br label %cond.end.559

cond.false.546:                                   ; preds = %land.rhs.528
  %310 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv547 = sext i8 %310 to i32
  %tobool548 = icmp ne i32 %conv547, 0
  br i1 %tobool548, label %cond.true.549, label %cond.false.551

cond.true.549:                                    ; preds = %cond.false.546
  %311 = load i8*, i8** %s, align 8
  %312 = load i32, i32* %back_min, align 4
  %313 = load i8*, i8** %strend.addr, align 8
  %call550 = call i8* @S_reghop3(i8* %311, i32 %312, i8* %313)
  br label %cond.end.554

cond.false.551:                                   ; preds = %cond.false.546
  %314 = load i8*, i8** %s, align 8
  %315 = load i32, i32* %back_min, align 4
  %idx.ext552 = sext i32 %315 to i64
  %add.ptr553 = getelementptr inbounds i8, i8* %314, i64 %idx.ext552
  br label %cond.end.554

cond.end.554:                                     ; preds = %cond.false.551, %cond.true.549
  %cond555 = phi i8* [ %call550, %cond.true.549 ], [ %add.ptr553, %cond.false.551 ]
  %316 = load i8*, i8** %strend.addr, align 8
  %317 = load %struct.sv*, %struct.sv** %must, align 8
  %318 = load i32, i32* @PL_multiline, align 4
  %tobool556 = icmp ne i32 %318, 0
  %cond557 = select i1 %tobool556, i32 1, i32 0
  %call558 = call i8* @Perl_fbm_instr(i8* %cond555, i8* %316, %struct.sv* %317, i32 %cond557)
  store i8* %call558, i8** %s, align 8
  br label %cond.end.559

cond.end.559:                                     ; preds = %cond.end.554, %cond.end.539
  %cond560 = phi i8* [ %call545, %cond.end.539 ], [ %call558, %cond.end.554 ]
  %tobool561 = icmp ne i8* %cond560, null
  br label %land.end.562

land.end.562:                                     ; preds = %cond.end.559, %while.cond.525
  %319 = phi i1 [ false, %while.cond.525 ], [ %tobool561, %cond.end.559 ]
  br i1 %319, label %while.body.564, label %while.end.671

while.body.564:                                   ; preds = %land.end.562
  %320 = load i32, i32* %flags.addr, align 4
  %and565 = and i32 %320, 4
  %tobool566 = icmp ne i32 %and565, 0
  br i1 %tobool566, label %land.lhs.true.567, label %if.end.578

land.lhs.true.567:                                ; preds = %while.body.564
  %321 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch568 = getelementptr inbounds %struct.regexp, %struct.regexp* %321, i32 0, i32 15
  %322 = load i32, i32* %reganch568, align 4
  %and569 = and i32 %322, 262144
  %tobool570 = icmp ne i32 %and569, 0
  br i1 %tobool570, label %if.then.571, label %if.end.578

if.then.571:                                      ; preds = %land.lhs.true.567
  %323 = load i8*, i8** %strbeg.addr, align 8
  %324 = load i8*, i8** %s, align 8
  %325 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any572 = getelementptr inbounds %struct.sv, %struct.sv* %325, i32 0, i32 0
  %326 = load i8*, i8** %sv_any572, align 8
  %327 = bitcast i8* %326 to %struct.xpv*
  %xpv_pv573 = getelementptr inbounds %struct.xpv, %struct.xpv* %327, i32 0, i32 0
  %328 = load i8*, i8** %xpv_pv573, align 8
  %sub.ptr.lhs.cast574 = ptrtoint i8* %324 to i64
  %sub.ptr.rhs.cast575 = ptrtoint i8* %328 to i64
  %sub.ptr.sub576 = sub i64 %sub.ptr.lhs.cast574, %sub.ptr.rhs.cast575
  %add.ptr577 = getelementptr inbounds i8, i8* %323, i64 %sub.ptr.sub576
  store i8* %add.ptr577, i8** %s, align 8
  br label %if.end.578

if.end.578:                                       ; preds = %if.then.571, %land.lhs.true.567, %while.body.564
  %329 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv579 = sext i8 %329 to i32
  %tobool580 = icmp ne i32 %conv579, 0
  br i1 %tobool580, label %cond.true.581, label %cond.false.584

cond.true.581:                                    ; preds = %if.end.578
  %330 = load i8*, i8** %s, align 8
  %331 = load i32, i32* %back_max, align 4
  %sub582 = sub nsw i32 0, %331
  %call583 = call i8* @S_reghop(i8* %330, i32 %sub582)
  br label %cond.end.588

cond.false.584:                                   ; preds = %if.end.578
  %332 = load i8*, i8** %s, align 8
  %333 = load i32, i32* %back_max, align 4
  %sub585 = sub nsw i32 0, %333
  %idx.ext586 = sext i32 %sub585 to i64
  %add.ptr587 = getelementptr inbounds i8, i8* %332, i64 %idx.ext586
  br label %cond.end.588

cond.end.588:                                     ; preds = %cond.false.584, %cond.true.581
  %cond589 = phi i8* [ %call583, %cond.true.581 ], [ %add.ptr587, %cond.false.584 ]
  %334 = load i8*, i8** %last1, align 8
  %cmp590 = icmp ugt i8* %cond589, %334
  br i1 %cmp590, label %if.then.592, label %if.else.615

if.then.592:                                      ; preds = %cond.end.588
  %335 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv593 = sext i8 %335 to i32
  %tobool594 = icmp ne i32 %conv593, 0
  br i1 %tobool594, label %cond.true.595, label %cond.false.598

cond.true.595:                                    ; preds = %if.then.592
  %336 = load i8*, i8** %s, align 8
  %337 = load i32, i32* %back_min, align 4
  %sub596 = sub nsw i32 0, %337
  %call597 = call i8* @S_reghop(i8* %336, i32 %sub596)
  br label %cond.end.602

cond.false.598:                                   ; preds = %if.then.592
  %338 = load i8*, i8** %s, align 8
  %339 = load i32, i32* %back_min, align 4
  %sub599 = sub nsw i32 0, %339
  %idx.ext600 = sext i32 %sub599 to i64
  %add.ptr601 = getelementptr inbounds i8, i8* %338, i64 %idx.ext600
  br label %cond.end.602

cond.end.602:                                     ; preds = %cond.false.598, %cond.true.595
  %cond603 = phi i8* [ %call597, %cond.true.595 ], [ %add.ptr601, %cond.false.598 ]
  store i8* %cond603, i8** %last1, align 8
  %340 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv604 = sext i8 %340 to i32
  %tobool605 = icmp ne i32 %conv604, 0
  br i1 %tobool605, label %cond.true.606, label %cond.false.609

cond.true.606:                                    ; preds = %cond.end.602
  %341 = load i8*, i8** %s, align 8
  %342 = load i32, i32* %back_max, align 4
  %sub607 = sub nsw i32 0, %342
  %call608 = call i8* @S_reghop(i8* %341, i32 %sub607)
  br label %cond.end.613

cond.false.609:                                   ; preds = %cond.end.602
  %343 = load i8*, i8** %s, align 8
  %344 = load i32, i32* %back_max, align 4
  %sub610 = sub nsw i32 0, %344
  %idx.ext611 = sext i32 %sub610 to i64
  %add.ptr612 = getelementptr inbounds i8, i8* %343, i64 %idx.ext611
  br label %cond.end.613

cond.end.613:                                     ; preds = %cond.false.609, %cond.true.606
  %cond614 = phi i8* [ %call608, %cond.true.606 ], [ %add.ptr612, %cond.false.609 ]
  store i8* %cond614, i8** %s, align 8
  br label %if.end.642

if.else.615:                                      ; preds = %cond.end.588
  %345 = load i8*, i8** %last1, align 8
  %346 = load i8*, i8** @PL_bostr, align 8
  %cmp616 = icmp uge i8* %345, %346
  br i1 %cmp616, label %cond.true.618, label %cond.false.627

cond.true.618:                                    ; preds = %if.else.615
  %347 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv619 = sext i8 %347 to i32
  %tobool620 = icmp ne i32 %conv619, 0
  br i1 %tobool620, label %cond.true.621, label %cond.false.623

cond.true.621:                                    ; preds = %cond.true.618
  %348 = load i8*, i8** %last1, align 8
  %call622 = call i8* @S_reghop(i8* %348, i32 1)
  br label %cond.end.625

cond.false.623:                                   ; preds = %cond.true.618
  %349 = load i8*, i8** %last1, align 8
  %add.ptr624 = getelementptr inbounds i8, i8* %349, i64 1
  br label %cond.end.625

cond.end.625:                                     ; preds = %cond.false.623, %cond.true.621
  %cond626 = phi i8* [ %call622, %cond.true.621 ], [ %add.ptr624, %cond.false.623 ]
  br label %cond.end.629

cond.false.627:                                   ; preds = %if.else.615
  %350 = load i8*, i8** %last1, align 8
  %add.ptr628 = getelementptr inbounds i8, i8* %350, i64 1
  br label %cond.end.629

cond.end.629:                                     ; preds = %cond.false.627, %cond.end.625
  %cond630 = phi i8* [ %cond626, %cond.end.625 ], [ %add.ptr628, %cond.false.627 ]
  store i8* %cond630, i8** %t, align 8
  %351 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv631 = sext i8 %351 to i32
  %tobool632 = icmp ne i32 %conv631, 0
  br i1 %tobool632, label %cond.true.633, label %cond.false.636

cond.true.633:                                    ; preds = %cond.end.629
  %352 = load i8*, i8** %s, align 8
  %353 = load i32, i32* %back_min, align 4
  %sub634 = sub nsw i32 0, %353
  %call635 = call i8* @S_reghop(i8* %352, i32 %sub634)
  br label %cond.end.640

cond.false.636:                                   ; preds = %cond.end.629
  %354 = load i8*, i8** %s, align 8
  %355 = load i32, i32* %back_min, align 4
  %sub637 = sub nsw i32 0, %355
  %idx.ext638 = sext i32 %sub637 to i64
  %add.ptr639 = getelementptr inbounds i8, i8* %354, i64 %idx.ext638
  br label %cond.end.640

cond.end.640:                                     ; preds = %cond.false.636, %cond.true.633
  %cond641 = phi i8* [ %call635, %cond.true.633 ], [ %add.ptr639, %cond.false.636 ]
  store i8* %cond641, i8** %last1, align 8
  %356 = load i8*, i8** %t, align 8
  store i8* %356, i8** %s, align 8
  br label %if.end.642

if.end.642:                                       ; preds = %cond.end.640, %cond.end.613
  %357 = load i8, i8* %do_utf8, align 1
  %tobool643 = icmp ne i8 %357, 0
  br i1 %tobool643, label %if.then.644, label %if.else.659

if.then.644:                                      ; preds = %if.end.642
  br label %while.cond.645

while.cond.645:                                   ; preds = %if.end.652, %if.then.644
  %358 = load i8*, i8** %s, align 8
  %359 = load i8*, i8** %last1, align 8
  %cmp646 = icmp ule i8* %358, %359
  br i1 %cmp646, label %while.body.648, label %while.end.658

while.body.648:                                   ; preds = %while.cond.645
  %360 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %361 = load i8*, i8** %s, align 8
  %call649 = call i32 @S_regtry(%struct.regexp* %360, i8* %361)
  %tobool650 = icmp ne i32 %call649, 0
  br i1 %tobool650, label %if.then.651, label %if.end.652

if.then.651:                                      ; preds = %while.body.648
  br label %got_it

if.end.652:                                       ; preds = %while.body.648
  %362 = load i8*, i8** %s, align 8
  %363 = load i8, i8* %362, align 1
  %idxprom653 = zext i8 %363 to i64
  %arrayidx654 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom653
  %364 = load i8, i8* %arrayidx654, align 1
  %conv655 = zext i8 %364 to i32
  %365 = load i8*, i8** %s, align 8
  %idx.ext656 = sext i32 %conv655 to i64
  %add.ptr657 = getelementptr inbounds i8, i8* %365, i64 %idx.ext656
  store i8* %add.ptr657, i8** %s, align 8
  br label %while.cond.645

while.end.658:                                    ; preds = %while.cond.645
  br label %if.end.670

if.else.659:                                      ; preds = %if.end.642
  br label %while.cond.660

while.cond.660:                                   ; preds = %if.end.667, %if.else.659
  %366 = load i8*, i8** %s, align 8
  %367 = load i8*, i8** %last1, align 8
  %cmp661 = icmp ule i8* %366, %367
  br i1 %cmp661, label %while.body.663, label %while.end.669

while.body.663:                                   ; preds = %while.cond.660
  %368 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %369 = load i8*, i8** %s, align 8
  %call664 = call i32 @S_regtry(%struct.regexp* %368, i8* %369)
  %tobool665 = icmp ne i32 %call664, 0
  br i1 %tobool665, label %if.then.666, label %if.end.667

if.then.666:                                      ; preds = %while.body.663
  br label %got_it

if.end.667:                                       ; preds = %while.body.663
  %370 = load i8*, i8** %s, align 8
  %incdec.ptr668 = getelementptr inbounds i8, i8* %370, i32 1
  store i8* %incdec.ptr668, i8** %s, align 8
  br label %while.cond.660

while.end.669:                                    ; preds = %while.cond.660
  br label %if.end.670

if.end.670:                                       ; preds = %while.end.669, %while.end.658
  br label %while.cond.525

while.end.671:                                    ; preds = %land.end.562
  br label %phooey

if.else.672:                                      ; preds = %land.lhs.true.345, %lor.lhs.false.338
  %371 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %regstclass = getelementptr inbounds %struct.regexp, %struct.regexp* %371, i32 0, i32 2
  %372 = load %struct.regnode*, %struct.regnode** %regstclass, align 8
  store %struct.regnode* %372, %struct.regnode** %c, align 8
  %tobool673 = icmp ne %struct.regnode* %372, null
  br i1 %tobool673, label %if.then.674, label %if.else.707

if.then.674:                                      ; preds = %if.else.672
  %373 = load i32, i32* %minlen, align 4
  %tobool675 = icmp ne i32 %373, 0
  br i1 %tobool675, label %if.then.676, label %if.end.702

if.then.676:                                      ; preds = %if.then.674
  %374 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %regstclass677 = getelementptr inbounds %struct.regexp, %struct.regexp* %374, i32 0, i32 2
  %375 = load %struct.regnode*, %struct.regnode** %regstclass677, align 8
  %type = getelementptr inbounds %struct.regnode, %struct.regnode* %375, i32 0, i32 1
  %376 = load i8, i8* %type, align 1
  %conv678 = zext i8 %376 to i32
  store i32 %conv678, i32* %op, align 4
  %377 = load i32, i32* %op, align 4
  %idxprom679 = sext i32 %377 to i64
  %arrayidx680 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom679
  %378 = load i8, i8* %arrayidx680, align 1
  %conv681 = zext i8 %378 to i32
  %cmp682 = icmp ne i32 %conv681, 33
  br i1 %cmp682, label %land.lhs.true.684, label %if.end.701

land.lhs.true.684:                                ; preds = %if.then.676
  %379 = load i32, i32* %op, align 4
  %cmp685 = icmp ne i32 %379, 16
  br i1 %cmp685, label %if.then.687, label %if.end.701

if.then.687:                                      ; preds = %land.lhs.true.684
  %380 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv688 = sext i8 %380 to i32
  %tobool689 = icmp ne i32 %conv688, 0
  br i1 %tobool689, label %cond.true.690, label %cond.false.694

cond.true.690:                                    ; preds = %if.then.687
  %381 = load i8*, i8** %strend.addr, align 8
  %382 = load i32, i32* %minlen, align 4
  %sub691 = sub nsw i32 %382, 1
  %sub692 = sub nsw i32 0, %sub691
  %call693 = call i8* @S_reghop(i8* %381, i32 %sub692)
  br label %cond.end.699

cond.false.694:                                   ; preds = %if.then.687
  %383 = load i8*, i8** %strend.addr, align 8
  %384 = load i32, i32* %minlen, align 4
  %sub695 = sub nsw i32 %384, 1
  %sub696 = sub nsw i32 0, %sub695
  %idx.ext697 = sext i32 %sub696 to i64
  %add.ptr698 = getelementptr inbounds i8, i8* %383, i64 %idx.ext697
  br label %cond.end.699

cond.end.699:                                     ; preds = %cond.false.694, %cond.true.690
  %cond700 = phi i8* [ %call693, %cond.true.690 ], [ %add.ptr698, %cond.false.694 ]
  store i8* %cond700, i8** %strend.addr, align 8
  br label %if.end.701

if.end.701:                                       ; preds = %cond.end.699, %land.lhs.true.684, %if.then.676
  br label %if.end.702

if.end.702:                                       ; preds = %if.end.701, %if.then.674
  %385 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %386 = load %struct.regnode*, %struct.regnode** %c, align 8
  %387 = load i8*, i8** %s, align 8
  %388 = load i8*, i8** %strend.addr, align 8
  %389 = load i8*, i8** %startpos, align 8
  %call703 = call i8* @S_find_byclass(%struct.regexp* %385, %struct.regnode* %386, i8* %387, i8* %388, i8* %389, i32 0)
  %tobool704 = icmp ne i8* %call703, null
  br i1 %tobool704, label %if.then.705, label %if.end.706

if.then.705:                                      ; preds = %if.end.702
  br label %got_it

if.end.706:                                       ; preds = %if.end.702
  br label %if.end.882

if.else.707:                                      ; preds = %if.else.672
  store i32 0, i32* %dontbother, align 4
  %390 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs708 = getelementptr inbounds %struct.regexp, %struct.regexp* %390, i32 0, i32 3
  %391 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs708, align 8
  %data709 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %391, i32 0, i32 0
  %arrayidx710 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data709, i32 0, i64 1
  %substr711 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx710, i32 0, i32 2
  %392 = load %struct.sv*, %struct.sv** %substr711, align 8
  %cmp712 = icmp ne %struct.sv* %392, null
  br i1 %cmp712, label %if.then.721, label %lor.lhs.false.714

lor.lhs.false.714:                                ; preds = %if.else.707
  %393 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs715 = getelementptr inbounds %struct.regexp, %struct.regexp* %393, i32 0, i32 3
  %394 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs715, align 8
  %data716 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %394, i32 0, i32 0
  %arrayidx717 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data716, i32 0, i64 1
  %utf8_substr718 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx717, i32 0, i32 3
  %395 = load %struct.sv*, %struct.sv** %utf8_substr718, align 8
  %cmp719 = icmp ne %struct.sv* %395, null
  br i1 %cmp719, label %if.then.721, label %if.end.847

if.then.721:                                      ; preds = %lor.lhs.false.714, %if.else.707
  %396 = load i8, i8* %do_utf8, align 1
  %conv723 = sext i8 %396 to i32
  %tobool724 = icmp ne i32 %conv723, 0
  br i1 %tobool724, label %cond.true.725, label %cond.false.731

cond.true.725:                                    ; preds = %if.then.721
  %397 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs726 = getelementptr inbounds %struct.regexp, %struct.regexp* %397, i32 0, i32 3
  %398 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs726, align 8
  %data727 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %398, i32 0, i32 0
  %arrayidx728 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data727, i32 0, i64 1
  %utf8_substr729 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx728, i32 0, i32 3
  %399 = load %struct.sv*, %struct.sv** %utf8_substr729, align 8
  %tobool730 = icmp ne %struct.sv* %399, null
  br i1 %tobool730, label %if.end.743, label %if.then.737

cond.false.731:                                   ; preds = %if.then.721
  %400 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs732 = getelementptr inbounds %struct.regexp, %struct.regexp* %400, i32 0, i32 3
  %401 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs732, align 8
  %data733 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %401, i32 0, i32 0
  %arrayidx734 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data733, i32 0, i64 1
  %substr735 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx734, i32 0, i32 2
  %402 = load %struct.sv*, %struct.sv** %substr735, align 8
  %tobool736 = icmp ne %struct.sv* %402, null
  br i1 %tobool736, label %if.end.743, label %if.then.737

if.then.737:                                      ; preds = %cond.false.731, %cond.true.725
  %403 = load i8, i8* %do_utf8, align 1
  %conv738 = sext i8 %403 to i32
  %tobool739 = icmp ne i32 %conv738, 0
  br i1 %tobool739, label %cond.true.740, label %cond.false.741

cond.true.740:                                    ; preds = %if.then.737
  %404 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  call void @S_to_utf8_substr(%struct.regexp* %404)
  br label %cond.end.742

cond.false.741:                                   ; preds = %if.then.737
  %405 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  call void @S_to_byte_substr(%struct.regexp* %405)
  br label %cond.end.742

cond.end.742:                                     ; preds = %cond.false.741, %cond.true.740
  br label %if.end.743

if.end.743:                                       ; preds = %cond.end.742, %cond.false.731, %cond.true.725
  %406 = load i8, i8* %do_utf8, align 1
  %conv744 = sext i8 %406 to i32
  %tobool745 = icmp ne i32 %conv744, 0
  br i1 %tobool745, label %cond.true.746, label %cond.false.751

cond.true.746:                                    ; preds = %if.end.743
  %407 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs747 = getelementptr inbounds %struct.regexp, %struct.regexp* %407, i32 0, i32 3
  %408 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs747, align 8
  %data748 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %408, i32 0, i32 0
  %arrayidx749 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data748, i32 0, i64 1
  %utf8_substr750 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx749, i32 0, i32 3
  %409 = load %struct.sv*, %struct.sv** %utf8_substr750, align 8
  br label %cond.end.756

cond.false.751:                                   ; preds = %if.end.743
  %410 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs752 = getelementptr inbounds %struct.regexp, %struct.regexp* %410, i32 0, i32 3
  %411 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs752, align 8
  %data753 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %411, i32 0, i32 0
  %arrayidx754 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data753, i32 0, i64 1
  %substr755 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx754, i32 0, i32 2
  %412 = load %struct.sv*, %struct.sv** %substr755, align 8
  br label %cond.end.756

cond.end.756:                                     ; preds = %cond.false.751, %cond.true.746
  %cond757 = phi %struct.sv* [ %409, %cond.true.746 ], [ %412, %cond.false.751 ]
  store %struct.sv* %cond757, %struct.sv** %float_real, align 8
  %413 = load i32, i32* %flags.addr, align 4
  %and758 = and i32 %413, 4
  %tobool759 = icmp ne i32 %and758, 0
  br i1 %tobool759, label %if.then.760, label %if.else.781

if.then.760:                                      ; preds = %cond.end.756
  %414 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %415 = load %struct.sv*, %struct.sv** %float_real, align 8
  %416 = load i8*, i8** %s, align 8
  %417 = load i8*, i8** %strbeg.addr, align 8
  %sub.ptr.lhs.cast761 = ptrtoint i8* %416 to i64
  %sub.ptr.rhs.cast762 = ptrtoint i8* %417 to i64
  %sub.ptr.sub763 = sub i64 %sub.ptr.lhs.cast761, %sub.ptr.rhs.cast762
  %conv764 = trunc i64 %sub.ptr.sub763 to i32
  %418 = load i32, i32* %end_shift, align 4
  %call765 = call i8* @Perl_screaminstr(%struct.sv* %414, %struct.sv* %415, i32 %conv764, i32 %418, i32* %scream_pos, i32 1)
  store i8* %call765, i8** %last722, align 8
  %419 = load i8*, i8** %last722, align 8
  %tobool766 = icmp ne i8* %419, null
  br i1 %tobool766, label %if.else.768, label %if.then.767

if.then.767:                                      ; preds = %if.then.760
  %420 = load i8*, i8** %scream_olds, align 8
  store i8* %420, i8** %last722, align 8
  br label %if.end.780

if.else.768:                                      ; preds = %if.then.760
  %421 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch769 = getelementptr inbounds %struct.regexp, %struct.regexp* %421, i32 0, i32 15
  %422 = load i32, i32* %reganch769, align 4
  %and770 = and i32 %422, 262144
  %tobool771 = icmp ne i32 %and770, 0
  br i1 %tobool771, label %if.then.772, label %if.end.779

if.then.772:                                      ; preds = %if.else.768
  %423 = load i8*, i8** %strbeg.addr, align 8
  %424 = load i8*, i8** %s, align 8
  %425 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any773 = getelementptr inbounds %struct.sv, %struct.sv* %425, i32 0, i32 0
  %426 = load i8*, i8** %sv_any773, align 8
  %427 = bitcast i8* %426 to %struct.xpv*
  %xpv_pv774 = getelementptr inbounds %struct.xpv, %struct.xpv* %427, i32 0, i32 0
  %428 = load i8*, i8** %xpv_pv774, align 8
  %sub.ptr.lhs.cast775 = ptrtoint i8* %424 to i64
  %sub.ptr.rhs.cast776 = ptrtoint i8* %428 to i64
  %sub.ptr.sub777 = sub i64 %sub.ptr.lhs.cast775, %sub.ptr.rhs.cast776
  %add.ptr778 = getelementptr inbounds i8, i8* %423, i64 %sub.ptr.sub777
  store i8* %add.ptr778, i8** %s, align 8
  br label %if.end.779

if.end.779:                                       ; preds = %if.then.772, %if.else.768
  br label %if.end.780

if.end.780:                                       ; preds = %if.end.779, %if.then.767
  br label %if.end.832

if.else.781:                                      ; preds = %cond.end.756
  %429 = load %struct.sv*, %struct.sv** %float_real, align 8
  %sv_flags782 = getelementptr inbounds %struct.sv, %struct.sv* %429, i32 0, i32 2
  %430 = load i32, i32* %sv_flags782, align 4
  %and783 = and i32 %430, 262144
  %cmp784 = icmp eq i32 %and783, 262144
  br i1 %cmp784, label %cond.true.786, label %cond.false.791

cond.true.786:                                    ; preds = %if.else.781
  %431 = load %struct.sv*, %struct.sv** %float_real, align 8
  %sv_any787 = getelementptr inbounds %struct.sv, %struct.sv* %431, i32 0, i32 0
  %432 = load i8*, i8** %sv_any787, align 8
  %433 = bitcast i8* %432 to %struct.xpv*
  %xpv_cur788 = getelementptr inbounds %struct.xpv, %struct.xpv* %433, i32 0, i32 1
  %434 = load i64, i64* %xpv_cur788, align 8
  store i64 %434, i64* %len, align 8
  %435 = load %struct.sv*, %struct.sv** %float_real, align 8
  %sv_any789 = getelementptr inbounds %struct.sv, %struct.sv* %435, i32 0, i32 0
  %436 = load i8*, i8** %sv_any789, align 8
  %437 = bitcast i8* %436 to %struct.xpv*
  %xpv_pv790 = getelementptr inbounds %struct.xpv, %struct.xpv* %437, i32 0, i32 0
  %438 = load i8*, i8** %xpv_pv790, align 8
  br label %cond.end.793

cond.false.791:                                   ; preds = %if.else.781
  %439 = load %struct.sv*, %struct.sv** %float_real, align 8
  %call792 = call i8* @Perl_sv_2pv_flags(%struct.sv* %439, i64* %len, i32 2)
  br label %cond.end.793

cond.end.793:                                     ; preds = %cond.false.791, %cond.true.786
  %cond794 = phi i8* [ %438, %cond.true.786 ], [ %call792, %cond.false.791 ]
  store i8* %cond794, i8** %little, align 8
  %440 = load %struct.sv*, %struct.sv** %float_real, align 8
  %sv_flags795 = getelementptr inbounds %struct.sv, %struct.sv* %440, i32 0, i32 2
  %441 = load i32, i32* %sv_flags795, align 4
  %and796 = and i32 %441, 1073741824
  %tobool797 = icmp ne i32 %and796, 0
  br i1 %tobool797, label %if.then.798, label %if.else.824

if.then.798:                                      ; preds = %cond.end.793
  %442 = load i8*, i8** %strend.addr, align 8
  %443 = load i64, i64* %len, align 8
  %idx.neg = sub i64 0, %443
  %add.ptr799 = getelementptr inbounds i8, i8* %442, i64 %idx.neg
  %add.ptr800 = getelementptr inbounds i8, i8* %add.ptr799, i64 1
  %444 = load i8*, i8** %little, align 8
  %445 = load i64, i64* %len, align 8
  %sub801 = sub i64 %445, 1
  %call802 = call i32 @memcmp(i8* %add.ptr800, i8* %444, i64 %sub801)
  %tobool803 = icmp ne i32 %call802, 0
  br i1 %tobool803, label %if.else.808, label %if.then.804

if.then.804:                                      ; preds = %if.then.798
  %446 = load i8*, i8** %strend.addr, align 8
  %447 = load i64, i64* %len, align 8
  %idx.neg805 = sub i64 0, %447
  %add.ptr806 = getelementptr inbounds i8, i8* %446, i64 %idx.neg805
  %add.ptr807 = getelementptr inbounds i8, i8* %add.ptr806, i64 1
  store i8* %add.ptr807, i8** %last722, align 8
  br label %if.end.823

if.else.808:                                      ; preds = %if.then.798
  %448 = load i32, i32* @PL_multiline, align 4
  %tobool809 = icmp ne i32 %448, 0
  br i1 %tobool809, label %if.else.821, label %if.then.810

if.then.810:                                      ; preds = %if.else.808
  %449 = load i8*, i8** %strend.addr, align 8
  %450 = load i64, i64* %len, align 8
  %idx.neg811 = sub i64 0, %450
  %add.ptr812 = getelementptr inbounds i8, i8* %449, i64 %idx.neg811
  %451 = load i8*, i8** %little, align 8
  %452 = load i64, i64* %len, align 8
  %call813 = call i32 @memcmp(i8* %add.ptr812, i8* %451, i64 %452)
  %tobool814 = icmp ne i32 %call813, 0
  br i1 %tobool814, label %cond.false.818, label %cond.true.815

cond.true.815:                                    ; preds = %if.then.810
  %453 = load i8*, i8** %strend.addr, align 8
  %454 = load i64, i64* %len, align 8
  %idx.neg816 = sub i64 0, %454
  %add.ptr817 = getelementptr inbounds i8, i8* %453, i64 %idx.neg816
  br label %cond.end.819

cond.false.818:                                   ; preds = %if.then.810
  br label %cond.end.819

cond.end.819:                                     ; preds = %cond.false.818, %cond.true.815
  %cond820 = phi i8* [ %add.ptr817, %cond.true.815 ], [ null, %cond.false.818 ]
  store i8* %cond820, i8** %last722, align 8
  br label %if.end.822

if.else.821:                                      ; preds = %if.else.808
  br label %find_last

if.end.822:                                       ; preds = %cond.end.819
  br label %if.end.823

if.end.823:                                       ; preds = %if.end.822, %if.then.804
  br label %if.end.831

if.else.824:                                      ; preds = %cond.end.793
  br label %find_last

find_last:                                        ; preds = %if.else.824, %if.else.821
  %455 = load i64, i64* %len, align 8
  %tobool825 = icmp ne i64 %455, 0
  br i1 %tobool825, label %if.then.826, label %if.else.829

if.then.826:                                      ; preds = %find_last
  %456 = load i8*, i8** %s, align 8
  %457 = load i8*, i8** %strend.addr, align 8
  %458 = load i8*, i8** %little, align 8
  %459 = load i8*, i8** %little, align 8
  %460 = load i64, i64* %len, align 8
  %add.ptr827 = getelementptr inbounds i8, i8* %459, i64 %460
  %call828 = call i8* @Perl_rninstr(i8* %456, i8* %457, i8* %458, i8* %add.ptr827)
  store i8* %call828, i8** %last722, align 8
  br label %if.end.830

if.else.829:                                      ; preds = %find_last
  %461 = load i8*, i8** %strend.addr, align 8
  store i8* %461, i8** %last722, align 8
  br label %if.end.830

if.end.830:                                       ; preds = %if.else.829, %if.then.826
  br label %if.end.831

if.end.831:                                       ; preds = %if.end.830, %if.end.823
  br label %if.end.832

if.end.832:                                       ; preds = %if.end.831, %if.end.780
  %462 = load i8*, i8** %last722, align 8
  %cmp833 = icmp eq i8* %462, null
  br i1 %cmp833, label %if.then.835, label %if.end.836

if.then.835:                                      ; preds = %if.end.832
  br label %phooey

if.end.836:                                       ; preds = %if.end.832
  %463 = load i8*, i8** %strend.addr, align 8
  %464 = load i8*, i8** %last722, align 8
  %sub.ptr.lhs.cast837 = ptrtoint i8* %463 to i64
  %sub.ptr.rhs.cast838 = ptrtoint i8* %464 to i64
  %sub.ptr.sub839 = sub i64 %sub.ptr.lhs.cast837, %sub.ptr.rhs.cast838
  %465 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs840 = getelementptr inbounds %struct.regexp, %struct.regexp* %465, i32 0, i32 3
  %466 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs840, align 8
  %data841 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %466, i32 0, i32 0
  %arrayidx842 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data841, i32 0, i64 1
  %min_offset843 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx842, i32 0, i32 0
  %467 = load i32, i32* %min_offset843, align 4
  %conv844 = sext i32 %467 to i64
  %add845 = add nsw i64 %sub.ptr.sub839, %conv844
  %conv846 = trunc i64 %add845 to i32
  store i32 %conv846, i32* %dontbother, align 4
  br label %if.end.847

if.end.847:                                       ; preds = %if.end.836, %lor.lhs.false.714
  %468 = load i32, i32* %minlen, align 4
  %tobool848 = icmp ne i32 %468, 0
  br i1 %tobool848, label %land.lhs.true.849, label %if.end.854

land.lhs.true.849:                                ; preds = %if.end.847
  %469 = load i32, i32* %dontbother, align 4
  %470 = load i32, i32* %minlen, align 4
  %cmp850 = icmp slt i32 %469, %470
  br i1 %cmp850, label %if.then.852, label %if.end.854

if.then.852:                                      ; preds = %land.lhs.true.849
  %471 = load i32, i32* %minlen, align 4
  %sub853 = sub nsw i32 %471, 1
  store i32 %sub853, i32* %dontbother, align 4
  br label %if.end.854

if.end.854:                                       ; preds = %if.then.852, %land.lhs.true.849, %if.end.847
  %472 = load i32, i32* %dontbother, align 4
  %473 = load i8*, i8** %strend.addr, align 8
  %idx.ext855 = sext i32 %472 to i64
  %idx.neg856 = sub i64 0, %idx.ext855
  %add.ptr857 = getelementptr inbounds i8, i8* %473, i64 %idx.neg856
  store i8* %add.ptr857, i8** %strend.addr, align 8
  %474 = load i8, i8* %do_utf8, align 1
  %tobool858 = icmp ne i8 %474, 0
  br i1 %tobool858, label %if.then.859, label %if.else.873

if.then.859:                                      ; preds = %if.end.854
  br label %for.cond

for.cond:                                         ; preds = %if.end.867, %if.then.859
  %475 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %476 = load i8*, i8** %s, align 8
  %call860 = call i32 @S_regtry(%struct.regexp* %475, i8* %476)
  %tobool861 = icmp ne i32 %call860, 0
  br i1 %tobool861, label %if.then.862, label %if.end.863

if.then.862:                                      ; preds = %for.cond
  br label %got_it

if.end.863:                                       ; preds = %for.cond
  %477 = load i8*, i8** %s, align 8
  %478 = load i8*, i8** %strend.addr, align 8
  %cmp864 = icmp uge i8* %477, %478
  br i1 %cmp864, label %if.then.866, label %if.end.867

if.then.866:                                      ; preds = %if.end.863
  br label %for.end

if.end.867:                                       ; preds = %if.end.863
  %479 = load i8*, i8** %s, align 8
  %480 = load i8, i8* %479, align 1
  %idxprom868 = zext i8 %480 to i64
  %arrayidx869 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom868
  %481 = load i8, i8* %arrayidx869, align 1
  %conv870 = zext i8 %481 to i32
  %482 = load i8*, i8** %s, align 8
  %idx.ext871 = sext i32 %conv870 to i64
  %add.ptr872 = getelementptr inbounds i8, i8* %482, i64 %idx.ext871
  store i8* %add.ptr872, i8** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.866
  br label %if.end.881

if.else.873:                                      ; preds = %if.end.854
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.else.873
  %483 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %484 = load i8*, i8** %s, align 8
  %call874 = call i32 @S_regtry(%struct.regexp* %483, i8* %484)
  %tobool875 = icmp ne i32 %call874, 0
  br i1 %tobool875, label %if.then.876, label %if.end.877

if.then.876:                                      ; preds = %do.body
  br label %got_it

if.end.877:                                       ; preds = %do.body
  br label %do.cond

do.cond:                                          ; preds = %if.end.877
  %485 = load i8*, i8** %s, align 8
  %incdec.ptr878 = getelementptr inbounds i8, i8* %485, i32 1
  store i8* %incdec.ptr878, i8** %s, align 8
  %486 = load i8*, i8** %strend.addr, align 8
  %cmp879 = icmp ult i8* %485, %486
  br i1 %cmp879, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end.881

if.end.881:                                       ; preds = %do.end, %for.end
  br label %if.end.882

if.end.882:                                       ; preds = %if.end.881, %if.end.706
  br label %if.end.883

if.end.883:                                       ; preds = %if.end.882
  br label %if.end.884

if.end.884:                                       ; preds = %if.end.883, %if.end.316
  br label %phooey

got_it:                                           ; preds = %if.then.876, %if.then.862, %if.then.705, %if.then.666, %if.then.651, %if.then.297, %if.then.255, %if.then.185, %if.then.172, %if.then.139, %if.then.94
  %487 = load i32, i32* @PL_reg_flags, align 4
  %and885 = and i32 %487, 1
  %tobool886 = icmp ne i32 %and885, 0
  br i1 %tobool886, label %cond.true.887, label %cond.false.890

cond.true.887:                                    ; preds = %got_it
  %488 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch888 = getelementptr inbounds %struct.regexp, %struct.regexp* %488, i32 0, i32 15
  %489 = load i32, i32* %reganch888, align 4
  %or889 = or i32 %489, 524288
  store i32 %or889, i32* %reganch888, align 4
  br label %cond.end.893

cond.false.890:                                   ; preds = %got_it
  %490 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch891 = getelementptr inbounds %struct.regexp, %struct.regexp* %490, i32 0, i32 15
  %491 = load i32, i32* %reganch891, align 4
  %and892 = and i32 %491, -524289
  store i32 %and892, i32* %reganch891, align 4
  br label %cond.end.893

cond.end.893:                                     ; preds = %cond.false.890, %cond.true.887
  %cond894 = phi i32 [ %or889, %cond.true.887 ], [ %and892, %cond.false.890 ]
  %492 = load i32, i32* @PL_reg_eval_set, align 4
  %tobool895 = icmp ne i32 %492, 0
  br i1 %tobool895, label %if.then.896, label %if.end.907

if.then.896:                                      ; preds = %cond.end.893
  %493 = load %struct.sv*, %struct.sv** %oreplsv, align 8
  %494 = load %struct.gv*, %struct.gv** @PL_replgv, align 8
  %sv_any897 = getelementptr inbounds %struct.gv, %struct.gv* %494, i32 0, i32 0
  %495 = load %struct.xpvgv*, %struct.xpvgv** %sv_any897, align 8
  %xgv_gp898 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %495, i32 0, i32 7
  %496 = load %struct.gp*, %struct.gp** %xgv_gp898, align 8
  %gp_sv899 = getelementptr inbounds %struct.gp, %struct.gp* %496, i32 0, i32 0
  %497 = load %struct.sv*, %struct.sv** %gp_sv899, align 8
  %cmp900 = icmp ne %struct.sv* %493, %497
  br i1 %cmp900, label %if.then.902, label %if.end.906

if.then.902:                                      ; preds = %if.then.896
  %498 = load %struct.sv*, %struct.sv** %oreplsv, align 8
  %499 = load %struct.gv*, %struct.gv** @PL_replgv, align 8
  %sv_any903 = getelementptr inbounds %struct.gv, %struct.gv* %499, i32 0, i32 0
  %500 = load %struct.xpvgv*, %struct.xpvgv** %sv_any903, align 8
  %xgv_gp904 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %500, i32 0, i32 7
  %501 = load %struct.gp*, %struct.gp** %xgv_gp904, align 8
  %gp_sv905 = getelementptr inbounds %struct.gp, %struct.gp* %501, i32 0, i32 0
  %502 = load %struct.sv*, %struct.sv** %gp_sv905, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %498, %struct.sv* %502, i32 2)
  br label %if.end.906

if.end.906:                                       ; preds = %if.then.902, %if.then.896
  call void @restore_pos(i8* null)
  br label %if.end.907

if.end.907:                                       ; preds = %if.end.906, %cond.end.893
  %503 = load i32, i32* %flags.addr, align 4
  %and908 = and i32 %503, 16
  %tobool909 = icmp ne i32 %and908, 0
  br i1 %tobool909, label %if.end.941, label %if.then.910

if.then.910:                                      ; preds = %if.end.907
  %504 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch911 = getelementptr inbounds %struct.regexp, %struct.regexp* %504, i32 0, i32 15
  %505 = load i32, i32* %reganch911, align 4
  %and912 = and i32 %505, 262144
  %tobool913 = icmp ne i32 %and912, 0
  br i1 %tobool913, label %if.then.914, label %if.end.917

if.then.914:                                      ; preds = %if.then.910
  %506 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %subbeg = getelementptr inbounds %struct.regexp, %struct.regexp* %506, i32 0, i32 6
  %507 = load i8*, i8** %subbeg, align 8
  call void @Perl_safesysfree(i8* %507)
  %508 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch915 = getelementptr inbounds %struct.regexp, %struct.regexp* %508, i32 0, i32 15
  %509 = load i32, i32* %reganch915, align 4
  %and916 = and i32 %509, -262145
  store i32 %and916, i32* %reganch915, align 4
  br label %if.end.917

if.end.917:                                       ; preds = %if.then.914, %if.then.910
  %510 = load i32, i32* %flags.addr, align 4
  %and918 = and i32 %510, 1
  %tobool919 = icmp ne i32 %and918, 0
  br i1 %tobool919, label %if.then.920, label %if.else.933

if.then.920:                                      ; preds = %if.end.917
  %511 = load i8*, i8** @PL_regeol, align 8
  %512 = load i8*, i8** %startpos, align 8
  %sub.ptr.lhs.cast921 = ptrtoint i8* %511 to i64
  %sub.ptr.rhs.cast922 = ptrtoint i8* %512 to i64
  %sub.ptr.sub923 = sub i64 %sub.ptr.lhs.cast921, %sub.ptr.rhs.cast922
  %513 = load i8*, i8** %stringarg.addr, align 8
  %514 = load i8*, i8** %strbeg.addr, align 8
  %sub.ptr.lhs.cast924 = ptrtoint i8* %513 to i64
  %sub.ptr.rhs.cast925 = ptrtoint i8* %514 to i64
  %sub.ptr.sub926 = sub i64 %sub.ptr.lhs.cast924, %sub.ptr.rhs.cast925
  %add927 = add nsw i64 %sub.ptr.sub923, %sub.ptr.sub926
  %conv928 = trunc i64 %add927 to i32
  store i32 %conv928, i32* %i, align 4
  %515 = load i8*, i8** %strbeg.addr, align 8
  %516 = load i32, i32* %i, align 4
  %call929 = call i8* @Perl_savepvn(i8* %515, i32 %516)
  store i8* %call929, i8** %s, align 8
  %517 = load i8*, i8** %s, align 8
  %518 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %subbeg930 = getelementptr inbounds %struct.regexp, %struct.regexp* %518, i32 0, i32 6
  store i8* %517, i8** %subbeg930, align 8
  %519 = load i32, i32* %i, align 4
  %520 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %sublen = getelementptr inbounds %struct.regexp, %struct.regexp* %520, i32 0, i32 8
  store i32 %519, i32* %sublen, align 4
  %521 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch931 = getelementptr inbounds %struct.regexp, %struct.regexp* %521, i32 0, i32 15
  %522 = load i32, i32* %reganch931, align 4
  %or932 = or i32 %522, 262144
  store i32 %or932, i32* %reganch931, align 4
  br label %if.end.940

if.else.933:                                      ; preds = %if.end.917
  %523 = load i8*, i8** %strbeg.addr, align 8
  %524 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %subbeg934 = getelementptr inbounds %struct.regexp, %struct.regexp* %524, i32 0, i32 6
  store i8* %523, i8** %subbeg934, align 8
  %525 = load i8*, i8** @PL_regeol, align 8
  %526 = load i8*, i8** %strbeg.addr, align 8
  %sub.ptr.lhs.cast935 = ptrtoint i8* %525 to i64
  %sub.ptr.rhs.cast936 = ptrtoint i8* %526 to i64
  %sub.ptr.sub937 = sub i64 %sub.ptr.lhs.cast935, %sub.ptr.rhs.cast936
  %conv938 = trunc i64 %sub.ptr.sub937 to i32
  %527 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %sublen939 = getelementptr inbounds %struct.regexp, %struct.regexp* %527, i32 0, i32 8
  store i32 %conv938, i32* %sublen939, align 4
  br label %if.end.940

if.end.940:                                       ; preds = %if.else.933, %if.then.920
  br label %if.end.941

if.end.941:                                       ; preds = %if.end.940, %if.end.907
  store i32 1, i32* %retval
  br label %return

phooey:                                           ; preds = %if.end.884, %if.then.835, %while.end.671, %if.then.453, %if.end.186, %if.end.177, %if.then.152, %if.then.143, %if.then.82, %if.then.58, %if.then.15
  %528 = load i32, i32* @PL_reg_eval_set, align 4
  %tobool942 = icmp ne i32 %528, 0
  br i1 %tobool942, label %if.then.943, label %if.end.944

if.then.943:                                      ; preds = %phooey
  call void @restore_pos(i8* null)
  br label %if.end.944

if.end.944:                                       ; preds = %if.then.943, %phooey
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.944, %if.end.941, %if.then
  %529 = load i32, i32* %retval
  ret i32 %529
}

; Function Attrs: nounwind uwtable
define i8* @Perl_re_intuit_start(%struct.regexp* %prog, %struct.sv* %sv, i8* %strpos, i8* %strend, i32 %flags, %struct.re_scream_pos_data_s* %data) #0 {
entry:
  %retval = alloca i8*, align 8
  %prog.addr = alloca %struct.regexp*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %strpos.addr = alloca i8*, align 8
  %strend.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %data.addr = alloca %struct.re_scream_pos_data_s*, align 8
  %start_shift = alloca i32, align 4
  %end_shift = alloca i32, align 4
  %s = alloca i8*, align 8
  %check = alloca %struct.sv*, align 8
  %strbeg = alloca i8*, align 8
  %t = alloca i8*, align 8
  %do_utf8 = alloca i32, align 4
  %ml_anch = alloca i32, align 4
  %other_last = alloca i8*, align 8
  %check_at = alloca i8*, align 8
  %slen = alloca i32, align 4
  %end = alloca i32, align 4
  %eshift = alloca i32, align 4
  %p = alloca i32, align 4
  %pp = alloca i32*, align 8
  %last = alloca i8*, align 8
  %last1 = alloca i8*, align 8
  %last2 = alloca i8*, align 8
  %s1 = alloca i8*, align 8
  %must = alloca %struct.sv*, align 8
  %last650 = alloca i8*, align 8
  %last1651 = alloca i8*, align 8
  %s1652 = alloca i8*, align 8
  %must653 = alloca %struct.sv*, align 8
  %str = alloca i8*, align 8
  %cl_l = alloca i32, align 4
  %endpos = alloca i8*, align 8
  %startpos = alloca i8*, align 8
  store %struct.regexp* %prog, %struct.regexp** %prog.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i8* %strpos, i8** %strpos.addr, align 8
  store i8* %strend, i8** %strend.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  store %struct.re_scream_pos_data_s* %data, %struct.re_scream_pos_data_s** %data.addr, align 8
  store i32 0, i32* %start_shift, align 4
  store i32 0, i32* %end_shift, align 4
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %tobool = icmp ne %struct.sv* %0, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %1, i32 0, i32 2
  %2 = load i32, i32* %sv_flags, align 4
  %and = and i32 %2, 536870912
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, i32* %do_utf8, align 4
  store i8* null, i8** %other_last, align 8
  store i8* null, i8** %check_at, align 8
  %3 = load i32, i32* %do_utf8, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  %4 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch = getelementptr inbounds %struct.regexp, %struct.regexp* %4, i32 0, i32 15
  %5 = load i32, i32* %reganch, align 4
  %or = or i32 %5, 268435456
  store i32 %or, i32* %reganch, align 4
  store i8 1, i8* @PL_reg_match_utf8, align 1
  br label %cond.end.6

cond.false.3:                                     ; preds = %cond.end
  %6 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch4 = getelementptr inbounds %struct.regexp, %struct.regexp* %6, i32 0, i32 15
  %7 = load i32, i32* %reganch4, align 4
  %and5 = and i32 %7, -268435457
  store i32 %and5, i32* %reganch4, align 4
  store i8 0, i8* @PL_reg_match_utf8, align 1
  br label %cond.end.6

cond.end.6:                                       ; preds = %cond.false.3, %cond.true.2
  %cond7 = phi i32 [ 1, %cond.true.2 ], [ 0, %cond.false.3 ]
  %8 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch8 = getelementptr inbounds %struct.regexp, %struct.regexp* %8, i32 0, i32 15
  %9 = load i32, i32* %reganch8, align 4
  %and9 = and i32 %9, 65536
  %tobool10 = icmp ne i32 %and9, 0
  br i1 %tobool10, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.6
  %10 = load i32, i32* @PL_reg_flags, align 4
  %or11 = or i32 %10, 8
  store i32 %or11, i32* @PL_reg_flags, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end.6
  %11 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %minlen = getelementptr inbounds %struct.regexp, %struct.regexp* %11, i32 0, i32 10
  %12 = load i32, i32* %minlen, align 4
  %conv = sext i32 %12 to i64
  %13 = load i8*, i8** %strend.addr, align 8
  %14 = load i8*, i8** %strpos.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %13 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %14 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp = icmp sgt i64 %conv, %sub.ptr.sub
  br i1 %cmp, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end
  br label %fail

if.end.14:                                        ; preds = %if.end
  %15 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %tobool15 = icmp ne %struct.sv* %15, null
  br i1 %tobool15, label %land.lhs.true, label %cond.false.20

land.lhs.true:                                    ; preds = %if.end.14
  %16 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags16 = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 2
  %17 = load i32, i32* %sv_flags16, align 4
  %and17 = and i32 %17, 262144
  %tobool18 = icmp ne i32 %and17, 0
  br i1 %tobool18, label %cond.true.19, label %cond.false.20

cond.true.19:                                     ; preds = %land.lhs.true
  %18 = load i8*, i8** %strend.addr, align 8
  %19 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %19, i32 0, i32 0
  %20 = load i8*, i8** %sv_any, align 8
  %21 = bitcast i8* %20 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %21, i32 0, i32 1
  %22 = load i64, i64* %xpv_cur, align 8
  %idx.neg = sub i64 0, %22
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 %idx.neg
  br label %cond.end.21

cond.false.20:                                    ; preds = %land.lhs.true, %if.end.14
  %23 = load i8*, i8** %strpos.addr, align 8
  br label %cond.end.21

cond.end.21:                                      ; preds = %cond.false.20, %cond.true.19
  %cond22 = phi i8* [ %add.ptr, %cond.true.19 ], [ %23, %cond.false.20 ]
  store i8* %cond22, i8** %strbeg, align 8
  %24 = load i8*, i8** %strend.addr, align 8
  store i8* %24, i8** @PL_regeol, align 8
  %25 = load i32, i32* %do_utf8, align 4
  %tobool23 = icmp ne i32 %25, 0
  br i1 %tobool23, label %if.then.24, label %if.else

if.then.24:                                       ; preds = %cond.end.21
  %26 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs = getelementptr inbounds %struct.regexp, %struct.regexp* %26, i32 0, i32 3
  %27 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs, align 8
  %data25 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %27, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data25, i32 0, i64 2
  %utf8_substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx, i32 0, i32 3
  %28 = load %struct.sv*, %struct.sv** %utf8_substr, align 8
  %tobool26 = icmp ne %struct.sv* %28, null
  br i1 %tobool26, label %if.end.33, label %land.lhs.true.27

land.lhs.true.27:                                 ; preds = %if.then.24
  %29 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs28 = getelementptr inbounds %struct.regexp, %struct.regexp* %29, i32 0, i32 3
  %30 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs28, align 8
  %data29 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %30, i32 0, i32 0
  %arrayidx30 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data29, i32 0, i64 2
  %substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx30, i32 0, i32 2
  %31 = load %struct.sv*, %struct.sv** %substr, align 8
  %tobool31 = icmp ne %struct.sv* %31, null
  br i1 %tobool31, label %if.then.32, label %if.end.33

if.then.32:                                       ; preds = %land.lhs.true.27
  %32 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  call void @S_to_utf8_substr(%struct.regexp* %32)
  br label %if.end.33

if.end.33:                                        ; preds = %if.then.32, %land.lhs.true.27, %if.then.24
  %33 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs34 = getelementptr inbounds %struct.regexp, %struct.regexp* %33, i32 0, i32 3
  %34 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs34, align 8
  %data35 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %34, i32 0, i32 0
  %arrayidx36 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data35, i32 0, i64 2
  %utf8_substr37 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx36, i32 0, i32 3
  %35 = load %struct.sv*, %struct.sv** %utf8_substr37, align 8
  store %struct.sv* %35, %struct.sv** %check, align 8
  br label %if.end.55

if.else:                                          ; preds = %cond.end.21
  %36 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs38 = getelementptr inbounds %struct.regexp, %struct.regexp* %36, i32 0, i32 3
  %37 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs38, align 8
  %data39 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %37, i32 0, i32 0
  %arrayidx40 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data39, i32 0, i64 2
  %substr41 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx40, i32 0, i32 2
  %38 = load %struct.sv*, %struct.sv** %substr41, align 8
  %tobool42 = icmp ne %struct.sv* %38, null
  br i1 %tobool42, label %if.end.50, label %land.lhs.true.43

land.lhs.true.43:                                 ; preds = %if.else
  %39 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs44 = getelementptr inbounds %struct.regexp, %struct.regexp* %39, i32 0, i32 3
  %40 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs44, align 8
  %data45 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %40, i32 0, i32 0
  %arrayidx46 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data45, i32 0, i64 2
  %utf8_substr47 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx46, i32 0, i32 3
  %41 = load %struct.sv*, %struct.sv** %utf8_substr47, align 8
  %tobool48 = icmp ne %struct.sv* %41, null
  br i1 %tobool48, label %if.then.49, label %if.end.50

if.then.49:                                       ; preds = %land.lhs.true.43
  %42 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  call void @S_to_byte_substr(%struct.regexp* %42)
  br label %if.end.50

if.end.50:                                        ; preds = %if.then.49, %land.lhs.true.43, %if.else
  %43 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs51 = getelementptr inbounds %struct.regexp, %struct.regexp* %43, i32 0, i32 3
  %44 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs51, align 8
  %data52 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %44, i32 0, i32 0
  %arrayidx53 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data52, i32 0, i64 2
  %substr54 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx53, i32 0, i32 2
  %45 = load %struct.sv*, %struct.sv** %substr54, align 8
  store %struct.sv* %45, %struct.sv** %check, align 8
  br label %if.end.55

if.end.55:                                        ; preds = %if.end.50, %if.end.33
  %46 = load %struct.sv*, %struct.sv** %check, align 8
  %cmp56 = icmp eq %struct.sv* %46, @PL_sv_undef
  br i1 %cmp56, label %if.then.58, label %if.end.59

if.then.58:                                       ; preds = %if.end.55
  br label %fail

if.end.59:                                        ; preds = %if.end.55
  %47 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch60 = getelementptr inbounds %struct.regexp, %struct.regexp* %47, i32 0, i32 15
  %48 = load i32, i32* %reganch60, align 4
  %and61 = and i32 %48, 15
  %tobool62 = icmp ne i32 %and61, 0
  br i1 %tobool62, label %if.then.63, label %if.else.254

if.then.63:                                       ; preds = %if.end.59
  %49 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch64 = getelementptr inbounds %struct.regexp, %struct.regexp* %49, i32 0, i32 15
  %50 = load i32, i32* %reganch64, align 4
  %and65 = and i32 %50, 12
  %tobool66 = icmp ne i32 %and65, 0
  br i1 %tobool66, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then.63
  %51 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch67 = getelementptr inbounds %struct.regexp, %struct.regexp* %51, i32 0, i32 15
  %52 = load i32, i32* %reganch67, align 4
  %and68 = and i32 %52, 1
  %tobool69 = icmp ne i32 %and68, 0
  br i1 %tobool69, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs
  %53 = load i32, i32* @PL_multiline, align 4
  %tobool70 = icmp ne i32 %53, 0
  %lnot = xor i1 %tobool70, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %54 = phi i1 [ false, %lor.rhs ], [ %lnot, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %if.then.63
  %55 = phi i1 [ true, %if.then.63 ], [ %54, %land.end ]
  %lnot71 = xor i1 %55, true
  %lnot.ext = zext i1 %lnot71 to i32
  store i32 %lnot.ext, i32* %ml_anch, align 4
  %56 = load i32, i32* %ml_anch, align 4
  %tobool72 = icmp ne i32 %56, 0
  br i1 %tobool72, label %if.end.190, label %if.then.73

if.then.73:                                       ; preds = %lor.end
  %57 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch74 = getelementptr inbounds %struct.regexp, %struct.regexp* %57, i32 0, i32 15
  %58 = load i32, i32* %reganch74, align 4
  %and75 = and i32 %58, 40
  %tobool76 = icmp ne i32 %and75, 0
  br i1 %tobool76, label %if.end.87, label %land.lhs.true.77

land.lhs.true.77:                                 ; preds = %if.then.73
  %59 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %tobool78 = icmp ne %struct.sv* %59, null
  br i1 %tobool78, label %land.lhs.true.79, label %if.end.87

land.lhs.true.79:                                 ; preds = %land.lhs.true.77
  %60 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags80 = getelementptr inbounds %struct.sv, %struct.sv* %60, i32 0, i32 2
  %61 = load i32, i32* %sv_flags80, align 4
  %and81 = and i32 %61, 524288
  %tobool82 = icmp ne i32 %and81, 0
  br i1 %tobool82, label %if.end.87, label %land.lhs.true.83

land.lhs.true.83:                                 ; preds = %land.lhs.true.79
  %62 = load i8*, i8** %strpos.addr, align 8
  %63 = load i8*, i8** %strbeg, align 8
  %cmp84 = icmp ne i8* %62, %63
  br i1 %cmp84, label %if.then.86, label %if.end.87

if.then.86:                                       ; preds = %land.lhs.true.83
  br label %fail

if.end.87:                                        ; preds = %land.lhs.true.83, %land.lhs.true.79, %land.lhs.true.77, %if.then.73
  %64 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs88 = getelementptr inbounds %struct.regexp, %struct.regexp* %64, i32 0, i32 3
  %65 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs88, align 8
  %data89 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %65, i32 0, i32 0
  %arrayidx90 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data89, i32 0, i64 2
  %min_offset = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx90, i32 0, i32 0
  %66 = load i32, i32* %min_offset, align 4
  %67 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs91 = getelementptr inbounds %struct.regexp, %struct.regexp* %67, i32 0, i32 3
  %68 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs91, align 8
  %data92 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %68, i32 0, i32 0
  %arrayidx93 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data92, i32 0, i64 2
  %max_offset = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx93, i32 0, i32 1
  %69 = load i32, i32* %max_offset, align 4
  %cmp94 = icmp eq i32 %66, %69
  br i1 %cmp94, label %land.lhs.true.96, label %if.end.189

land.lhs.true.96:                                 ; preds = %if.end.87
  %70 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch97 = getelementptr inbounds %struct.regexp, %struct.regexp* %70, i32 0, i32 15
  %71 = load i32, i32* %reganch97, align 4
  %and98 = and i32 %71, 2048
  %tobool99 = icmp ne i32 %and98, 0
  br i1 %tobool99, label %if.end.189, label %if.then.100

if.then.100:                                      ; preds = %land.lhs.true.96
  %72 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv101 = sext i8 %72 to i32
  %tobool102 = icmp ne i32 %conv101, 0
  br i1 %tobool102, label %cond.true.103, label %cond.false.108

cond.true.103:                                    ; preds = %if.then.100
  %73 = load i8*, i8** %strpos.addr, align 8
  %74 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs104 = getelementptr inbounds %struct.regexp, %struct.regexp* %74, i32 0, i32 3
  %75 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs104, align 8
  %data105 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %75, i32 0, i32 0
  %arrayidx106 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data105, i32 0, i64 2
  %min_offset107 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx106, i32 0, i32 0
  %76 = load i32, i32* %min_offset107, align 4
  %77 = load i8*, i8** %strend.addr, align 8
  %call = call i8* @S_reghop3(i8* %73, i32 %76, i8* %77)
  br label %cond.end.114

cond.false.108:                                   ; preds = %if.then.100
  %78 = load i8*, i8** %strpos.addr, align 8
  %79 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs109 = getelementptr inbounds %struct.regexp, %struct.regexp* %79, i32 0, i32 3
  %80 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs109, align 8
  %data110 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %80, i32 0, i32 0
  %arrayidx111 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data110, i32 0, i64 2
  %min_offset112 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx111, i32 0, i32 0
  %81 = load i32, i32* %min_offset112, align 4
  %idx.ext = sext i32 %81 to i64
  %add.ptr113 = getelementptr inbounds i8, i8* %78, i64 %idx.ext
  br label %cond.end.114

cond.end.114:                                     ; preds = %cond.false.108, %cond.true.103
  %cond115 = phi i8* [ %call, %cond.true.103 ], [ %add.ptr113, %cond.false.108 ]
  store i8* %cond115, i8** %s, align 8
  %82 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_flags116 = getelementptr inbounds %struct.sv, %struct.sv* %82, i32 0, i32 2
  %83 = load i32, i32* %sv_flags116, align 4
  %and117 = and i32 %83, 1073741824
  %tobool118 = icmp ne i32 %and117, 0
  br i1 %tobool118, label %if.then.119, label %if.else.167

if.then.119:                                      ; preds = %cond.end.114
  %84 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_any120 = getelementptr inbounds %struct.sv, %struct.sv* %84, i32 0, i32 0
  %85 = load i8*, i8** %sv_any120, align 8
  %86 = bitcast i8* %85 to %struct.xpv*
  %xpv_cur121 = getelementptr inbounds %struct.xpv, %struct.xpv* %86, i32 0, i32 1
  %87 = load i64, i64* %xpv_cur121, align 8
  %conv122 = trunc i64 %87 to i32
  store i32 %conv122, i32* %slen, align 4
  %88 = load i8*, i8** %strend.addr, align 8
  %89 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast123 = ptrtoint i8* %88 to i64
  %sub.ptr.rhs.cast124 = ptrtoint i8* %89 to i64
  %sub.ptr.sub125 = sub i64 %sub.ptr.lhs.cast123, %sub.ptr.rhs.cast124
  %90 = load i32, i32* %slen, align 4
  %conv126 = sext i32 %90 to i64
  %cmp127 = icmp sgt i64 %sub.ptr.sub125, %conv126
  br i1 %cmp127, label %if.then.147, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.119
  %91 = load i8*, i8** %strend.addr, align 8
  %92 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast129 = ptrtoint i8* %91 to i64
  %sub.ptr.rhs.cast130 = ptrtoint i8* %92 to i64
  %sub.ptr.sub131 = sub i64 %sub.ptr.lhs.cast129, %sub.ptr.rhs.cast130
  %93 = load i32, i32* %slen, align 4
  %sub = sub nsw i32 %93, 1
  %conv132 = sext i32 %sub to i64
  %cmp133 = icmp slt i64 %sub.ptr.sub131, %conv132
  br i1 %cmp133, label %if.then.147, label %lor.lhs.false.135

lor.lhs.false.135:                                ; preds = %lor.lhs.false
  %94 = load i8*, i8** %strend.addr, align 8
  %95 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast136 = ptrtoint i8* %94 to i64
  %sub.ptr.rhs.cast137 = ptrtoint i8* %95 to i64
  %sub.ptr.sub138 = sub i64 %sub.ptr.lhs.cast136, %sub.ptr.rhs.cast137
  %96 = load i32, i32* %slen, align 4
  %conv139 = sext i32 %96 to i64
  %cmp140 = icmp eq i64 %sub.ptr.sub138, %conv139
  br i1 %cmp140, label %land.lhs.true.142, label %if.end.148

land.lhs.true.142:                                ; preds = %lor.lhs.false.135
  %97 = load i8*, i8** %strend.addr, align 8
  %arrayidx143 = getelementptr inbounds i8, i8* %97, i64 -1
  %98 = load i8, i8* %arrayidx143, align 1
  %conv144 = sext i8 %98 to i32
  %cmp145 = icmp ne i32 %conv144, 10
  br i1 %cmp145, label %if.then.147, label %if.end.148

if.then.147:                                      ; preds = %land.lhs.true.142, %lor.lhs.false, %if.then.119
  br label %fail_finish

if.end.148:                                       ; preds = %land.lhs.true.142, %lor.lhs.false.135
  %99 = load i32, i32* %slen, align 4
  %dec = add nsw i32 %99, -1
  store i32 %dec, i32* %slen, align 4
  %100 = load i32, i32* %slen, align 4
  %tobool149 = icmp ne i32 %100, 0
  br i1 %tobool149, label %land.lhs.true.150, label %if.end.166

land.lhs.true.150:                                ; preds = %if.end.148
  %101 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_any151 = getelementptr inbounds %struct.sv, %struct.sv* %101, i32 0, i32 0
  %102 = load i8*, i8** %sv_any151, align 8
  %103 = bitcast i8* %102 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %103, i32 0, i32 0
  %104 = load i8*, i8** %xpv_pv, align 8
  %105 = load i8, i8* %104, align 1
  %conv152 = sext i8 %105 to i32
  %106 = load i8*, i8** %s, align 8
  %107 = load i8, i8* %106, align 1
  %conv153 = sext i8 %107 to i32
  %cmp154 = icmp ne i32 %conv152, %conv153
  br i1 %cmp154, label %if.then.165, label %lor.lhs.false.156

lor.lhs.false.156:                                ; preds = %land.lhs.true.150
  %108 = load i32, i32* %slen, align 4
  %cmp157 = icmp sgt i32 %108, 1
  br i1 %cmp157, label %land.lhs.true.159, label %if.end.166

land.lhs.true.159:                                ; preds = %lor.lhs.false.156
  %109 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_any160 = getelementptr inbounds %struct.sv, %struct.sv* %109, i32 0, i32 0
  %110 = load i8*, i8** %sv_any160, align 8
  %111 = bitcast i8* %110 to %struct.xpv*
  %xpv_pv161 = getelementptr inbounds %struct.xpv, %struct.xpv* %111, i32 0, i32 0
  %112 = load i8*, i8** %xpv_pv161, align 8
  %113 = load i8*, i8** %s, align 8
  %114 = load i32, i32* %slen, align 4
  %conv162 = sext i32 %114 to i64
  %call163 = call i32 @memcmp(i8* %112, i8* %113, i64 %conv162)
  %tobool164 = icmp ne i32 %call163, 0
  br i1 %tobool164, label %if.then.165, label %if.end.166

if.then.165:                                      ; preds = %land.lhs.true.159, %land.lhs.true.150
  br label %report_neq

report_neq:                                       ; preds = %if.then.186, %if.then.165
  br label %fail_finish

if.end.166:                                       ; preds = %land.lhs.true.159, %lor.lhs.false.156, %if.end.148
  br label %if.end.188

if.else.167:                                      ; preds = %cond.end.114
  %115 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_any168 = getelementptr inbounds %struct.sv, %struct.sv* %115, i32 0, i32 0
  %116 = load i8*, i8** %sv_any168, align 8
  %117 = bitcast i8* %116 to %struct.xpv*
  %xpv_pv169 = getelementptr inbounds %struct.xpv, %struct.xpv* %117, i32 0, i32 0
  %118 = load i8*, i8** %xpv_pv169, align 8
  %119 = load i8, i8* %118, align 1
  %conv170 = sext i8 %119 to i32
  %120 = load i8*, i8** %s, align 8
  %121 = load i8, i8* %120, align 1
  %conv171 = sext i8 %121 to i32
  %cmp172 = icmp ne i32 %conv170, %conv171
  br i1 %cmp172, label %if.then.186, label %lor.lhs.false.174

lor.lhs.false.174:                                ; preds = %if.else.167
  %122 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_any175 = getelementptr inbounds %struct.sv, %struct.sv* %122, i32 0, i32 0
  %123 = load i8*, i8** %sv_any175, align 8
  %124 = bitcast i8* %123 to %struct.xpv*
  %xpv_cur176 = getelementptr inbounds %struct.xpv, %struct.xpv* %124, i32 0, i32 1
  %125 = load i64, i64* %xpv_cur176, align 8
  %conv177 = trunc i64 %125 to i32
  store i32 %conv177, i32* %slen, align 4
  %cmp178 = icmp sgt i32 %conv177, 1
  br i1 %cmp178, label %land.lhs.true.180, label %if.end.187

land.lhs.true.180:                                ; preds = %lor.lhs.false.174
  %126 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_any181 = getelementptr inbounds %struct.sv, %struct.sv* %126, i32 0, i32 0
  %127 = load i8*, i8** %sv_any181, align 8
  %128 = bitcast i8* %127 to %struct.xpv*
  %xpv_pv182 = getelementptr inbounds %struct.xpv, %struct.xpv* %128, i32 0, i32 0
  %129 = load i8*, i8** %xpv_pv182, align 8
  %130 = load i8*, i8** %s, align 8
  %131 = load i32, i32* %slen, align 4
  %conv183 = sext i32 %131 to i64
  %call184 = call i32 @memcmp(i8* %129, i8* %130, i64 %conv183)
  %tobool185 = icmp ne i32 %call184, 0
  br i1 %tobool185, label %if.then.186, label %if.end.187

if.then.186:                                      ; preds = %land.lhs.true.180, %if.else.167
  br label %report_neq

if.end.187:                                       ; preds = %land.lhs.true.180, %lor.lhs.false.174
  br label %if.end.188

if.end.188:                                       ; preds = %if.end.187, %if.end.166
  br label %success_at_start

if.end.189:                                       ; preds = %land.lhs.true.96, %if.end.87
  br label %if.end.190

if.end.190:                                       ; preds = %if.end.189, %lor.end
  %132 = load i8*, i8** %strpos.addr, align 8
  store i8* %132, i8** %s, align 8
  %133 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs191 = getelementptr inbounds %struct.regexp, %struct.regexp* %133, i32 0, i32 3
  %134 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs191, align 8
  %data192 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %134, i32 0, i32 0
  %arrayidx193 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data192, i32 0, i64 2
  %min_offset194 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx193, i32 0, i32 0
  %135 = load i32, i32* %min_offset194, align 4
  store i32 %135, i32* %start_shift, align 4
  %136 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %minlen195 = getelementptr inbounds %struct.regexp, %struct.regexp* %136, i32 0, i32 10
  %137 = load i32, i32* %minlen195, align 4
  %138 = load i32, i32* %start_shift, align 4
  %sub196 = sub nsw i32 %137, %138
  %conv197 = sext i32 %sub196 to i64
  %139 = load i32, i32* %do_utf8, align 4
  %tobool198 = icmp ne i32 %139, 0
  br i1 %tobool198, label %cond.true.199, label %cond.false.201

cond.true.199:                                    ; preds = %if.end.190
  %140 = load %struct.sv*, %struct.sv** %check, align 8
  %call200 = call i64 @Perl_sv_len_utf8(%struct.sv* %140)
  br label %cond.end.204

cond.false.201:                                   ; preds = %if.end.190
  %141 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_any202 = getelementptr inbounds %struct.sv, %struct.sv* %141, i32 0, i32 0
  %142 = load i8*, i8** %sv_any202, align 8
  %143 = bitcast i8* %142 to %struct.xpv*
  %xpv_cur203 = getelementptr inbounds %struct.xpv, %struct.xpv* %143, i32 0, i32 1
  %144 = load i64, i64* %xpv_cur203, align 8
  br label %cond.end.204

cond.end.204:                                     ; preds = %cond.false.201, %cond.true.199
  %cond205 = phi i64 [ %call200, %cond.true.199 ], [ %144, %cond.false.201 ]
  %sub206 = sub i64 %conv197, %cond205
  %145 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_flags207 = getelementptr inbounds %struct.sv, %struct.sv* %145, i32 0, i32 2
  %146 = load i32, i32* %sv_flags207, align 4
  %and208 = and i32 %146, 1073741824
  %cmp209 = icmp ne i32 %and208, 0
  %conv210 = zext i1 %cmp209 to i32
  %conv211 = sext i32 %conv210 to i64
  %add = add i64 %sub206, %conv211
  %conv212 = trunc i64 %add to i32
  store i32 %conv212, i32* %end_shift, align 4
  %147 = load i32, i32* %ml_anch, align 4
  %tobool213 = icmp ne i32 %147, 0
  br i1 %tobool213, label %if.end.253, label %if.then.214

if.then.214:                                      ; preds = %cond.end.204
  %148 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs215 = getelementptr inbounds %struct.regexp, %struct.regexp* %148, i32 0, i32 3
  %149 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs215, align 8
  %data216 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %149, i32 0, i32 0
  %arrayidx217 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data216, i32 0, i64 2
  %max_offset218 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx217, i32 0, i32 1
  %150 = load i32, i32* %max_offset218, align 4
  %conv219 = sext i32 %150 to i64
  %151 = load i32, i32* %do_utf8, align 4
  %tobool220 = icmp ne i32 %151, 0
  br i1 %tobool220, label %cond.true.221, label %cond.false.223

cond.true.221:                                    ; preds = %if.then.214
  %152 = load %struct.sv*, %struct.sv** %check, align 8
  %call222 = call i64 @Perl_sv_len_utf8(%struct.sv* %152)
  br label %cond.end.226

cond.false.223:                                   ; preds = %if.then.214
  %153 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_any224 = getelementptr inbounds %struct.sv, %struct.sv* %153, i32 0, i32 0
  %154 = load i8*, i8** %sv_any224, align 8
  %155 = bitcast i8* %154 to %struct.xpv*
  %xpv_cur225 = getelementptr inbounds %struct.xpv, %struct.xpv* %155, i32 0, i32 1
  %156 = load i64, i64* %xpv_cur225, align 8
  br label %cond.end.226

cond.end.226:                                     ; preds = %cond.false.223, %cond.true.221
  %cond227 = phi i64 [ %call222, %cond.true.221 ], [ %156, %cond.false.223 ]
  %add228 = add i64 %conv219, %cond227
  %157 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_flags229 = getelementptr inbounds %struct.sv, %struct.sv* %157, i32 0, i32 2
  %158 = load i32, i32* %sv_flags229, align 4
  %and230 = and i32 %158, 1073741824
  %cmp231 = icmp ne i32 %and230, 0
  %conv232 = zext i1 %cmp231 to i32
  %conv233 = sext i32 %conv232 to i64
  %sub234 = sub i64 %add228, %conv233
  %conv235 = trunc i64 %sub234 to i32
  store i32 %conv235, i32* %end, align 4
  %159 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv236 = sext i8 %159 to i32
  %tobool237 = icmp ne i32 %conv236, 0
  br i1 %tobool237, label %cond.true.238, label %cond.false.240

cond.true.238:                                    ; preds = %cond.end.226
  %160 = load i8*, i8** %strend.addr, align 8
  %161 = load i8*, i8** %s, align 8
  %call239 = call i64 @Perl_utf8_distance(i8* %160, i8* %161)
  br label %cond.end.244

cond.false.240:                                   ; preds = %cond.end.226
  %162 = load i8*, i8** %strend.addr, align 8
  %163 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast241 = ptrtoint i8* %162 to i64
  %sub.ptr.rhs.cast242 = ptrtoint i8* %163 to i64
  %sub.ptr.sub243 = sub i64 %sub.ptr.lhs.cast241, %sub.ptr.rhs.cast242
  br label %cond.end.244

cond.end.244:                                     ; preds = %cond.false.240, %cond.true.238
  %cond245 = phi i64 [ %call239, %cond.true.238 ], [ %sub.ptr.sub243, %cond.false.240 ]
  %164 = load i32, i32* %end, align 4
  %conv246 = sext i32 %164 to i64
  %sub247 = sub nsw i64 %cond245, %conv246
  %conv248 = trunc i64 %sub247 to i32
  store i32 %conv248, i32* %eshift, align 4
  %165 = load i32, i32* %end_shift, align 4
  %166 = load i32, i32* %eshift, align 4
  %cmp249 = icmp slt i32 %165, %166
  br i1 %cmp249, label %if.then.251, label %if.end.252

if.then.251:                                      ; preds = %cond.end.244
  %167 = load i32, i32* %eshift, align 4
  store i32 %167, i32* %end_shift, align 4
  br label %if.end.252

if.end.252:                                       ; preds = %if.then.251, %cond.end.244
  br label %if.end.253

if.end.253:                                       ; preds = %if.end.252, %cond.end.204
  br label %if.end.278

if.else.254:                                      ; preds = %if.end.59
  store i32 0, i32* %ml_anch, align 4
  %168 = load i8*, i8** %strpos.addr, align 8
  store i8* %168, i8** %s, align 8
  %169 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs255 = getelementptr inbounds %struct.regexp, %struct.regexp* %169, i32 0, i32 3
  %170 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs255, align 8
  %data256 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %170, i32 0, i32 0
  %arrayidx257 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data256, i32 0, i64 2
  %min_offset258 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx257, i32 0, i32 0
  %171 = load i32, i32* %min_offset258, align 4
  store i32 %171, i32* %start_shift, align 4
  %172 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %minlen259 = getelementptr inbounds %struct.regexp, %struct.regexp* %172, i32 0, i32 10
  %173 = load i32, i32* %minlen259, align 4
  %174 = load i32, i32* %start_shift, align 4
  %sub260 = sub nsw i32 %173, %174
  %conv261 = sext i32 %sub260 to i64
  %175 = load i32, i32* %do_utf8, align 4
  %tobool262 = icmp ne i32 %175, 0
  br i1 %tobool262, label %cond.true.263, label %cond.false.265

cond.true.263:                                    ; preds = %if.else.254
  %176 = load %struct.sv*, %struct.sv** %check, align 8
  %call264 = call i64 @Perl_sv_len_utf8(%struct.sv* %176)
  br label %cond.end.268

cond.false.265:                                   ; preds = %if.else.254
  %177 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_any266 = getelementptr inbounds %struct.sv, %struct.sv* %177, i32 0, i32 0
  %178 = load i8*, i8** %sv_any266, align 8
  %179 = bitcast i8* %178 to %struct.xpv*
  %xpv_cur267 = getelementptr inbounds %struct.xpv, %struct.xpv* %179, i32 0, i32 1
  %180 = load i64, i64* %xpv_cur267, align 8
  br label %cond.end.268

cond.end.268:                                     ; preds = %cond.false.265, %cond.true.263
  %cond269 = phi i64 [ %call264, %cond.true.263 ], [ %180, %cond.false.265 ]
  %sub270 = sub i64 %conv261, %cond269
  %181 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_flags271 = getelementptr inbounds %struct.sv, %struct.sv* %181, i32 0, i32 2
  %182 = load i32, i32* %sv_flags271, align 4
  %and272 = and i32 %182, 1073741824
  %cmp273 = icmp ne i32 %and272, 0
  %conv274 = zext i1 %cmp273 to i32
  %conv275 = sext i32 %conv274 to i64
  %add276 = add i64 %sub270, %conv275
  %conv277 = trunc i64 %add276 to i32
  store i32 %conv277, i32* %end_shift, align 4
  br label %if.end.278

if.end.278:                                       ; preds = %cond.end.268, %if.end.253
  br label %restart

restart:                                          ; preds = %if.end.1213, %if.end.872, %cond.end.789, %cond.end.615, %if.end.278
  %183 = load i32, i32* %flags.addr, align 4
  %and279 = and i32 %183, 4
  %tobool280 = icmp ne i32 %and279, 0
  br i1 %tobool280, label %if.then.281, label %if.else.335

if.then.281:                                      ; preds = %restart
  store i32 -1, i32* %p, align 4
  %184 = load %struct.re_scream_pos_data_s*, %struct.re_scream_pos_data_s** %data.addr, align 8
  %tobool282 = icmp ne %struct.re_scream_pos_data_s* %184, null
  br i1 %tobool282, label %cond.true.283, label %cond.false.284

cond.true.283:                                    ; preds = %if.then.281
  %185 = load %struct.re_scream_pos_data_s*, %struct.re_scream_pos_data_s** %data.addr, align 8
  %scream_pos = getelementptr inbounds %struct.re_scream_pos_data_s, %struct.re_scream_pos_data_s* %185, i32 0, i32 1
  %186 = load i32*, i32** %scream_pos, align 8
  br label %cond.end.285

cond.false.284:                                   ; preds = %if.then.281
  br label %cond.end.285

cond.end.285:                                     ; preds = %cond.false.284, %cond.true.283
  %cond286 = phi i32* [ %186, %cond.true.283 ], [ %p, %cond.false.284 ]
  store i32* %cond286, i32** %pp, align 8
  %187 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_any287 = getelementptr inbounds %struct.sv, %struct.sv* %187, i32 0, i32 0
  %188 = load i8*, i8** %sv_any287, align 8
  %189 = bitcast i8* %188 to %struct.xpvbm*
  %xbm_rare = getelementptr inbounds %struct.xpvbm, %struct.xpvbm* %189, i32 0, i32 9
  %190 = load i8, i8* %xbm_rare, align 1
  %idxprom = zext i8 %190 to i64
  %191 = load i32*, i32** @PL_screamfirst, align 8
  %arrayidx288 = getelementptr inbounds i32, i32* %191, i64 %idxprom
  %192 = load i32, i32* %arrayidx288, align 4
  %cmp289 = icmp sge i32 %192, 0
  br i1 %cmp289, label %if.then.309, label %lor.lhs.false.291

lor.lhs.false.291:                                ; preds = %cond.end.285
  %193 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_any292 = getelementptr inbounds %struct.sv, %struct.sv* %193, i32 0, i32 0
  %194 = load i8*, i8** %sv_any292, align 8
  %195 = bitcast i8* %194 to %struct.xpvbm*
  %xbm_rare293 = getelementptr inbounds %struct.xpvbm, %struct.xpvbm* %195, i32 0, i32 9
  %196 = load i8, i8* %xbm_rare293, align 1
  %conv294 = zext i8 %196 to i32
  %cmp295 = icmp eq i32 %conv294, 10
  br i1 %cmp295, label %land.lhs.true.297, label %if.else.317

land.lhs.true.297:                                ; preds = %lor.lhs.false.291
  %197 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_any298 = getelementptr inbounds %struct.sv, %struct.sv* %197, i32 0, i32 0
  %198 = load i8*, i8** %sv_any298, align 8
  %199 = bitcast i8* %198 to %struct.xpvbm*
  %xbm_previous = getelementptr inbounds %struct.xpvbm, %struct.xpvbm* %199, i32 0, i32 8
  %200 = load i16, i16* %xbm_previous, align 2
  %conv299 = zext i16 %200 to i64
  %201 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_any300 = getelementptr inbounds %struct.sv, %struct.sv* %201, i32 0, i32 0
  %202 = load i8*, i8** %sv_any300, align 8
  %203 = bitcast i8* %202 to %struct.xpv*
  %xpv_cur301 = getelementptr inbounds %struct.xpv, %struct.xpv* %203, i32 0, i32 1
  %204 = load i64, i64* %xpv_cur301, align 8
  %sub302 = sub i64 %204, 1
  %cmp303 = icmp eq i64 %conv299, %sub302
  br i1 %cmp303, label %land.lhs.true.305, label %if.else.317

land.lhs.true.305:                                ; preds = %land.lhs.true.297
  %205 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_flags306 = getelementptr inbounds %struct.sv, %struct.sv* %205, i32 0, i32 2
  %206 = load i32, i32* %sv_flags306, align 4
  %and307 = and i32 %206, 1073741824
  %tobool308 = icmp ne i32 %and307, 0
  br i1 %tobool308, label %if.then.309, label %if.else.317

if.then.309:                                      ; preds = %land.lhs.true.305, %cond.end.285
  %207 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %208 = load %struct.sv*, %struct.sv** %check, align 8
  %209 = load i32, i32* %start_shift, align 4
  %conv310 = sext i32 %209 to i64
  %210 = load i8*, i8** %s, align 8
  %211 = load i8*, i8** %strbeg, align 8
  %sub.ptr.lhs.cast311 = ptrtoint i8* %210 to i64
  %sub.ptr.rhs.cast312 = ptrtoint i8* %211 to i64
  %sub.ptr.sub313 = sub i64 %sub.ptr.lhs.cast311, %sub.ptr.rhs.cast312
  %add314 = add nsw i64 %conv310, %sub.ptr.sub313
  %conv315 = trunc i64 %add314 to i32
  %212 = load i32, i32* %end_shift, align 4
  %213 = load i32*, i32** %pp, align 8
  %call316 = call i8* @Perl_screaminstr(%struct.sv* %207, %struct.sv* %208, i32 %conv315, i32 %212, i32* %213, i32 0)
  store i8* %call316, i8** %s, align 8
  br label %if.end.318

if.else.317:                                      ; preds = %land.lhs.true.305, %land.lhs.true.297, %lor.lhs.false.291
  br label %fail_finish

if.end.318:                                       ; preds = %if.then.309
  %214 = load i8*, i8** %s, align 8
  %tobool319 = icmp ne i8* %214, null
  br i1 %tobool319, label %land.lhs.true.320, label %if.end.331

land.lhs.true.320:                                ; preds = %if.end.318
  %215 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch321 = getelementptr inbounds %struct.regexp, %struct.regexp* %215, i32 0, i32 15
  %216 = load i32, i32* %reganch321, align 4
  %and322 = and i32 %216, 262144
  %tobool323 = icmp ne i32 %and322, 0
  br i1 %tobool323, label %if.then.324, label %if.end.331

if.then.324:                                      ; preds = %land.lhs.true.320
  %217 = load i8*, i8** %strbeg, align 8
  %218 = load i8*, i8** %s, align 8
  %219 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any325 = getelementptr inbounds %struct.sv, %struct.sv* %219, i32 0, i32 0
  %220 = load i8*, i8** %sv_any325, align 8
  %221 = bitcast i8* %220 to %struct.xpv*
  %xpv_pv326 = getelementptr inbounds %struct.xpv, %struct.xpv* %221, i32 0, i32 0
  %222 = load i8*, i8** %xpv_pv326, align 8
  %sub.ptr.lhs.cast327 = ptrtoint i8* %218 to i64
  %sub.ptr.rhs.cast328 = ptrtoint i8* %222 to i64
  %sub.ptr.sub329 = sub i64 %sub.ptr.lhs.cast327, %sub.ptr.rhs.cast328
  %add.ptr330 = getelementptr inbounds i8, i8* %217, i64 %sub.ptr.sub329
  store i8* %add.ptr330, i8** %s, align 8
  br label %if.end.331

if.end.331:                                       ; preds = %if.then.324, %land.lhs.true.320, %if.end.318
  %223 = load %struct.re_scream_pos_data_s*, %struct.re_scream_pos_data_s** %data.addr, align 8
  %tobool332 = icmp ne %struct.re_scream_pos_data_s* %223, null
  br i1 %tobool332, label %if.then.333, label %if.end.334

if.then.333:                                      ; preds = %if.end.331
  %224 = load i8*, i8** %s, align 8
  %225 = load %struct.re_scream_pos_data_s*, %struct.re_scream_pos_data_s** %data.addr, align 8
  %scream_olds = getelementptr inbounds %struct.re_scream_pos_data_s, %struct.re_scream_pos_data_s* %225, i32 0, i32 0
  %226 = load i8**, i8*** %scream_olds, align 8
  store i8* %224, i8** %226, align 8
  br label %if.end.334

if.end.334:                                       ; preds = %if.then.333, %if.end.331
  br label %if.end.373

if.else.335:                                      ; preds = %restart
  %227 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch336 = getelementptr inbounds %struct.regexp, %struct.regexp* %227, i32 0, i32 15
  %228 = load i32, i32* %reganch336, align 4
  %and337 = and i32 %228, 2048
  %tobool338 = icmp ne i32 %and337, 0
  br i1 %tobool338, label %if.then.339, label %if.else.348

if.then.339:                                      ; preds = %if.else.335
  %229 = load i8*, i8** %s, align 8
  %230 = load i32, i32* %start_shift, align 4
  %idx.ext340 = sext i32 %230 to i64
  %add.ptr341 = getelementptr inbounds i8, i8* %229, i64 %idx.ext340
  %231 = load i8*, i8** %strend.addr, align 8
  %232 = load i32, i32* %end_shift, align 4
  %idx.ext342 = sext i32 %232 to i64
  %idx.neg343 = sub i64 0, %idx.ext342
  %add.ptr344 = getelementptr inbounds i8, i8* %231, i64 %idx.neg343
  %233 = load %struct.sv*, %struct.sv** %check, align 8
  %234 = load i32, i32* @PL_multiline, align 4
  %tobool345 = icmp ne i32 %234, 0
  %cond346 = select i1 %tobool345, i32 1, i32 0
  %call347 = call i8* @Perl_fbm_instr(i8* %add.ptr341, i8* %add.ptr344, %struct.sv* %233, i32 %cond346)
  store i8* %call347, i8** %s, align 8
  br label %if.end.372

if.else.348:                                      ; preds = %if.else.335
  %235 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv349 = sext i8 %235 to i32
  %tobool350 = icmp ne i32 %conv349, 0
  br i1 %tobool350, label %cond.true.351, label %cond.false.353

cond.true.351:                                    ; preds = %if.else.348
  %236 = load i8*, i8** %s, align 8
  %237 = load i32, i32* %start_shift, align 4
  %238 = load i8*, i8** %strend.addr, align 8
  %call352 = call i8* @S_reghop3(i8* %236, i32 %237, i8* %238)
  br label %cond.end.356

cond.false.353:                                   ; preds = %if.else.348
  %239 = load i8*, i8** %s, align 8
  %240 = load i32, i32* %start_shift, align 4
  %idx.ext354 = sext i32 %240 to i64
  %add.ptr355 = getelementptr inbounds i8, i8* %239, i64 %idx.ext354
  br label %cond.end.356

cond.end.356:                                     ; preds = %cond.false.353, %cond.true.351
  %cond357 = phi i8* [ %call352, %cond.true.351 ], [ %add.ptr355, %cond.false.353 ]
  %241 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv358 = sext i8 %241 to i32
  %tobool359 = icmp ne i32 %conv358, 0
  br i1 %tobool359, label %cond.true.360, label %cond.false.363

cond.true.360:                                    ; preds = %cond.end.356
  %242 = load i8*, i8** %strend.addr, align 8
  %243 = load i32, i32* %end_shift, align 4
  %sub361 = sub nsw i32 0, %243
  %244 = load i8*, i8** %strbeg, align 8
  %call362 = call i8* @S_reghop3(i8* %242, i32 %sub361, i8* %244)
  br label %cond.end.367

cond.false.363:                                   ; preds = %cond.end.356
  %245 = load i8*, i8** %strend.addr, align 8
  %246 = load i32, i32* %end_shift, align 4
  %sub364 = sub nsw i32 0, %246
  %idx.ext365 = sext i32 %sub364 to i64
  %add.ptr366 = getelementptr inbounds i8, i8* %245, i64 %idx.ext365
  br label %cond.end.367

cond.end.367:                                     ; preds = %cond.false.363, %cond.true.360
  %cond368 = phi i8* [ %call362, %cond.true.360 ], [ %add.ptr366, %cond.false.363 ]
  %247 = load %struct.sv*, %struct.sv** %check, align 8
  %248 = load i32, i32* @PL_multiline, align 4
  %tobool369 = icmp ne i32 %248, 0
  %cond370 = select i1 %tobool369, i32 1, i32 0
  %call371 = call i8* @Perl_fbm_instr(i8* %cond357, i8* %cond368, %struct.sv* %247, i32 %cond370)
  store i8* %call371, i8** %s, align 8
  br label %if.end.372

if.end.372:                                       ; preds = %cond.end.367, %if.then.339
  br label %if.end.373

if.end.373:                                       ; preds = %if.end.372, %if.end.334
  %249 = load i8*, i8** %s, align 8
  %tobool374 = icmp ne i8* %249, null
  br i1 %tobool374, label %if.end.376, label %if.then.375

if.then.375:                                      ; preds = %if.end.373
  br label %fail_finish

if.end.376:                                       ; preds = %if.end.373
  %250 = load i8*, i8** %s, align 8
  store i8* %250, i8** %check_at, align 8
  %251 = load i32, i32* %do_utf8, align 4
  %tobool377 = icmp ne i32 %251, 0
  br i1 %tobool377, label %cond.true.378, label %cond.false.390

cond.true.378:                                    ; preds = %if.end.376
  %252 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs379 = getelementptr inbounds %struct.regexp, %struct.regexp* %252, i32 0, i32 3
  %253 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs379, align 8
  %data380 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %253, i32 0, i32 0
  %arrayidx381 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data380, i32 0, i64 1
  %utf8_substr382 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx381, i32 0, i32 3
  %254 = load %struct.sv*, %struct.sv** %utf8_substr382, align 8
  %tobool383 = icmp ne %struct.sv* %254, null
  br i1 %tobool383, label %land.lhs.true.384, label %if.end.796

land.lhs.true.384:                                ; preds = %cond.true.378
  %255 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs385 = getelementptr inbounds %struct.regexp, %struct.regexp* %255, i32 0, i32 3
  %256 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs385, align 8
  %data386 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %256, i32 0, i32 0
  %arrayidx387 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data386, i32 0, i64 0
  %utf8_substr388 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx387, i32 0, i32 3
  %257 = load %struct.sv*, %struct.sv** %utf8_substr388, align 8
  %tobool389 = icmp ne %struct.sv* %257, null
  br i1 %tobool389, label %if.then.402, label %if.end.796

cond.false.390:                                   ; preds = %if.end.376
  %258 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs391 = getelementptr inbounds %struct.regexp, %struct.regexp* %258, i32 0, i32 3
  %259 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs391, align 8
  %data392 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %259, i32 0, i32 0
  %arrayidx393 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data392, i32 0, i64 1
  %substr394 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx393, i32 0, i32 2
  %260 = load %struct.sv*, %struct.sv** %substr394, align 8
  %tobool395 = icmp ne %struct.sv* %260, null
  br i1 %tobool395, label %land.lhs.true.396, label %if.end.796

land.lhs.true.396:                                ; preds = %cond.false.390
  %261 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs397 = getelementptr inbounds %struct.regexp, %struct.regexp* %261, i32 0, i32 3
  %262 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs397, align 8
  %data398 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %262, i32 0, i32 0
  %arrayidx399 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data398, i32 0, i64 0
  %substr400 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx399, i32 0, i32 2
  %263 = load %struct.sv*, %struct.sv** %substr400, align 8
  %tobool401 = icmp ne %struct.sv* %263, null
  br i1 %tobool401, label %if.then.402, label %if.end.796

if.then.402:                                      ; preds = %land.lhs.true.396, %land.lhs.true.384
  %264 = load i8*, i8** %other_last, align 8
  %tobool403 = icmp ne i8* %264, null
  br i1 %tobool403, label %if.end.405, label %if.then.404

if.then.404:                                      ; preds = %if.then.402
  %265 = load i8*, i8** %strpos.addr, align 8
  store i8* %265, i8** %other_last, align 8
  br label %if.end.405

if.end.405:                                       ; preds = %if.then.404, %if.then.402
  %266 = load %struct.sv*, %struct.sv** %check, align 8
  %267 = load i32, i32* %do_utf8, align 4
  %tobool406 = icmp ne i32 %267, 0
  br i1 %tobool406, label %cond.true.407, label %cond.false.412

cond.true.407:                                    ; preds = %if.end.405
  %268 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs408 = getelementptr inbounds %struct.regexp, %struct.regexp* %268, i32 0, i32 3
  %269 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs408, align 8
  %data409 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %269, i32 0, i32 0
  %arrayidx410 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data409, i32 0, i64 1
  %utf8_substr411 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx410, i32 0, i32 3
  %270 = load %struct.sv*, %struct.sv** %utf8_substr411, align 8
  br label %cond.end.417

cond.false.412:                                   ; preds = %if.end.405
  %271 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs413 = getelementptr inbounds %struct.regexp, %struct.regexp* %271, i32 0, i32 3
  %272 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs413, align 8
  %data414 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %272, i32 0, i32 0
  %arrayidx415 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data414, i32 0, i64 1
  %substr416 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx415, i32 0, i32 2
  %273 = load %struct.sv*, %struct.sv** %substr416, align 8
  br label %cond.end.417

cond.end.417:                                     ; preds = %cond.false.412, %cond.true.407
  %cond418 = phi %struct.sv* [ %270, %cond.true.407 ], [ %273, %cond.false.412 ]
  %cmp419 = icmp eq %struct.sv* %266, %cond418
  br i1 %cmp419, label %if.then.421, label %if.else.649

if.then.421:                                      ; preds = %cond.end.417
  br label %do_other_anchored

do_other_anchored:                                ; preds = %if.end.1223, %if.then.868, %if.then.421
  %274 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv422 = sext i8 %274 to i32
  %tobool423 = icmp ne i32 %conv422, 0
  br i1 %tobool423, label %cond.true.424, label %cond.false.427

cond.true.424:                                    ; preds = %do_other_anchored
  %275 = load i8*, i8** %s, align 8
  %276 = load i32, i32* %start_shift, align 4
  %sub425 = sub nsw i32 0, %276
  %277 = load i8*, i8** %strbeg, align 8
  %call426 = call i8* @S_reghop3(i8* %275, i32 %sub425, i8* %277)
  br label %cond.end.431

cond.false.427:                                   ; preds = %do_other_anchored
  %278 = load i8*, i8** %s, align 8
  %279 = load i32, i32* %start_shift, align 4
  %sub428 = sub nsw i32 0, %279
  %idx.ext429 = sext i32 %sub428 to i64
  %add.ptr430 = getelementptr inbounds i8, i8* %278, i64 %idx.ext429
  br label %cond.end.431

cond.end.431:                                     ; preds = %cond.false.427, %cond.true.424
  %cond432 = phi i8* [ %call426, %cond.true.424 ], [ %add.ptr430, %cond.false.427 ]
  store i8* %cond432, i8** %last, align 8
  %280 = load i8*, i8** %s, align 8
  store i8* %280, i8** %s1, align 8
  %281 = load i8*, i8** %s, align 8
  %282 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs433 = getelementptr inbounds %struct.regexp, %struct.regexp* %282, i32 0, i32 3
  %283 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs433, align 8
  %data434 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %283, i32 0, i32 0
  %arrayidx435 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data434, i32 0, i64 2
  %max_offset436 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx435, i32 0, i32 1
  %284 = load i32, i32* %max_offset436, align 4
  %idx.ext437 = sext i32 %284 to i64
  %idx.neg438 = sub i64 0, %idx.ext437
  %add.ptr439 = getelementptr inbounds i8, i8* %281, i64 %idx.neg438
  store i8* %add.ptr439, i8** %t, align 8
  %285 = load i8*, i8** %s, align 8
  %286 = load i8*, i8** %strpos.addr, align 8
  %sub.ptr.lhs.cast440 = ptrtoint i8* %285 to i64
  %sub.ptr.rhs.cast441 = ptrtoint i8* %286 to i64
  %sub.ptr.sub442 = sub i64 %sub.ptr.lhs.cast440, %sub.ptr.rhs.cast441
  %287 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs443 = getelementptr inbounds %struct.regexp, %struct.regexp* %287, i32 0, i32 3
  %288 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs443, align 8
  %data444 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %288, i32 0, i32 0
  %arrayidx445 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data444, i32 0, i64 2
  %max_offset446 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx445, i32 0, i32 1
  %289 = load i32, i32* %max_offset446, align 4
  %conv447 = sext i32 %289 to i64
  %cmp448 = icmp sgt i64 %sub.ptr.sub442, %conv447
  br i1 %cmp448, label %land.lhs.true.450, label %if.else.464

land.lhs.true.450:                                ; preds = %cond.end.431
  %290 = load i32, i32* %do_utf8, align 4
  %tobool451 = icmp ne i32 %290, 0
  br i1 %tobool451, label %lor.lhs.false.452, label %if.then.463

lor.lhs.false.452:                                ; preds = %land.lhs.true.450
  %291 = load i8*, i8** %s, align 8
  %292 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs453 = getelementptr inbounds %struct.regexp, %struct.regexp* %292, i32 0, i32 3
  %293 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs453, align 8
  %data454 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %293, i32 0, i32 0
  %arrayidx455 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data454, i32 0, i64 2
  %max_offset456 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx455, i32 0, i32 1
  %294 = load i32, i32* %max_offset456, align 4
  %sub457 = sub nsw i32 0, %294
  %295 = load i8*, i8** %strpos.addr, align 8
  %call458 = call i8* @S_reghopmaybe3(i8* %291, i32 %sub457, i8* %295)
  store i8* %call458, i8** %t, align 8
  %tobool459 = icmp ne i8* %call458, null
  br i1 %tobool459, label %land.lhs.true.460, label %if.else.464

land.lhs.true.460:                                ; preds = %lor.lhs.false.452
  %296 = load i8*, i8** %t, align 8
  %297 = load i8*, i8** %strpos.addr, align 8
  %cmp461 = icmp ugt i8* %296, %297
  br i1 %cmp461, label %if.then.463, label %if.else.464

if.then.463:                                      ; preds = %land.lhs.true.460, %land.lhs.true.450
  br label %if.end.465

if.else.464:                                      ; preds = %land.lhs.true.460, %lor.lhs.false.452, %cond.end.431
  %298 = load i8*, i8** %strpos.addr, align 8
  store i8* %298, i8** %t, align 8
  br label %if.end.465

if.end.465:                                       ; preds = %if.else.464, %if.then.463
  %299 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv466 = sext i8 %299 to i32
  %tobool467 = icmp ne i32 %conv466, 0
  br i1 %tobool467, label %cond.true.468, label %cond.false.474

cond.true.468:                                    ; preds = %if.end.465
  %300 = load i8*, i8** %t, align 8
  %301 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs469 = getelementptr inbounds %struct.regexp, %struct.regexp* %301, i32 0, i32 3
  %302 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs469, align 8
  %data470 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %302, i32 0, i32 0
  %arrayidx471 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data470, i32 0, i64 0
  %min_offset472 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx471, i32 0, i32 0
  %303 = load i32, i32* %min_offset472, align 4
  %304 = load i8*, i8** %strend.addr, align 8
  %call473 = call i8* @S_reghop3(i8* %300, i32 %303, i8* %304)
  br label %cond.end.481

cond.false.474:                                   ; preds = %if.end.465
  %305 = load i8*, i8** %t, align 8
  %306 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs475 = getelementptr inbounds %struct.regexp, %struct.regexp* %306, i32 0, i32 3
  %307 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs475, align 8
  %data476 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %307, i32 0, i32 0
  %arrayidx477 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data476, i32 0, i64 0
  %min_offset478 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx477, i32 0, i32 0
  %308 = load i32, i32* %min_offset478, align 4
  %idx.ext479 = sext i32 %308 to i64
  %add.ptr480 = getelementptr inbounds i8, i8* %305, i64 %idx.ext479
  br label %cond.end.481

cond.end.481:                                     ; preds = %cond.false.474, %cond.true.468
  %cond482 = phi i8* [ %call473, %cond.true.468 ], [ %add.ptr480, %cond.false.474 ]
  store i8* %cond482, i8** %t, align 8
  %309 = load i8*, i8** %t, align 8
  %310 = load i8*, i8** %other_last, align 8
  %cmp483 = icmp ult i8* %309, %310
  br i1 %cmp483, label %if.then.485, label %if.end.486

if.then.485:                                      ; preds = %cond.end.481
  %311 = load i8*, i8** %other_last, align 8
  store i8* %311, i8** %t, align 8
  br label %if.end.486

if.end.486:                                       ; preds = %if.then.485, %cond.end.481
  %312 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv487 = sext i8 %312 to i32
  %tobool488 = icmp ne i32 %conv487, 0
  br i1 %tobool488, label %cond.true.489, label %cond.false.493

cond.true.489:                                    ; preds = %if.end.486
  %313 = load i8*, i8** %strend.addr, align 8
  %314 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %minlen490 = getelementptr inbounds %struct.regexp, %struct.regexp* %314, i32 0, i32 10
  %315 = load i32, i32* %minlen490, align 4
  %sub491 = sub nsw i32 0, %315
  %316 = load i8*, i8** %strbeg, align 8
  %call492 = call i8* @S_reghop3(i8* %313, i32 %sub491, i8* %316)
  br label %cond.end.498

cond.false.493:                                   ; preds = %if.end.486
  %317 = load i8*, i8** %strend.addr, align 8
  %318 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %minlen494 = getelementptr inbounds %struct.regexp, %struct.regexp* %318, i32 0, i32 10
  %319 = load i32, i32* %minlen494, align 4
  %sub495 = sub nsw i32 0, %319
  %idx.ext496 = sext i32 %sub495 to i64
  %add.ptr497 = getelementptr inbounds i8, i8* %317, i64 %idx.ext496
  br label %cond.end.498

cond.end.498:                                     ; preds = %cond.false.493, %cond.true.489
  %cond499 = phi i8* [ %call492, %cond.true.489 ], [ %add.ptr497, %cond.false.493 ]
  store i8* %cond499, i8** %last1, align 8
  store i8* %cond499, i8** %last2, align 8
  %320 = load i8*, i8** %last, align 8
  %321 = load i8*, i8** %last1, align 8
  %cmp500 = icmp ult i8* %320, %321
  br i1 %cmp500, label %if.then.502, label %if.end.503

if.then.502:                                      ; preds = %cond.end.498
  %322 = load i8*, i8** %last, align 8
  store i8* %322, i8** %last1, align 8
  br label %if.end.503

if.end.503:                                       ; preds = %if.then.502, %cond.end.498
  %323 = load i32, i32* %do_utf8, align 4
  %tobool504 = icmp ne i32 %323, 0
  br i1 %tobool504, label %cond.true.505, label %cond.false.510

cond.true.505:                                    ; preds = %if.end.503
  %324 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs506 = getelementptr inbounds %struct.regexp, %struct.regexp* %324, i32 0, i32 3
  %325 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs506, align 8
  %data507 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %325, i32 0, i32 0
  %arrayidx508 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data507, i32 0, i64 0
  %utf8_substr509 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx508, i32 0, i32 3
  %326 = load %struct.sv*, %struct.sv** %utf8_substr509, align 8
  br label %cond.end.515

cond.false.510:                                   ; preds = %if.end.503
  %327 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs511 = getelementptr inbounds %struct.regexp, %struct.regexp* %327, i32 0, i32 3
  %328 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs511, align 8
  %data512 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %328, i32 0, i32 0
  %arrayidx513 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data512, i32 0, i64 0
  %substr514 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx513, i32 0, i32 2
  %329 = load %struct.sv*, %struct.sv** %substr514, align 8
  br label %cond.end.515

cond.end.515:                                     ; preds = %cond.false.510, %cond.true.505
  %cond516 = phi %struct.sv* [ %326, %cond.true.505 ], [ %329, %cond.false.510 ]
  store %struct.sv* %cond516, %struct.sv** %must, align 8
  %330 = load %struct.sv*, %struct.sv** %must, align 8
  %cmp517 = icmp eq %struct.sv* %330, @PL_sv_undef
  br i1 %cmp517, label %if.then.519, label %if.else.520

if.then.519:                                      ; preds = %cond.end.515
  store i8* null, i8** %s, align 8
  br label %if.end.583

if.else.520:                                      ; preds = %cond.end.515
  %331 = load i8*, i8** %t, align 8
  %332 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv521 = sext i8 %332 to i32
  %tobool522 = icmp ne i32 %conv521, 0
  br i1 %tobool522, label %cond.true.523, label %cond.false.550

cond.true.523:                                    ; preds = %if.else.520
  %333 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv524 = sext i8 %333 to i32
  %tobool525 = icmp ne i32 %conv524, 0
  br i1 %tobool525, label %cond.true.526, label %cond.false.532

cond.true.526:                                    ; preds = %cond.true.523
  %334 = load i8*, i8** %last1, align 8
  %335 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs527 = getelementptr inbounds %struct.regexp, %struct.regexp* %335, i32 0, i32 3
  %336 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs527, align 8
  %data528 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %336, i32 0, i32 0
  %arrayidx529 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data528, i32 0, i64 0
  %min_offset530 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx529, i32 0, i32 0
  %337 = load i32, i32* %min_offset530, align 4
  %338 = load i8*, i8** %strend.addr, align 8
  %call531 = call i8* @S_reghop3(i8* %334, i32 %337, i8* %338)
  br label %cond.end.539

cond.false.532:                                   ; preds = %cond.true.523
  %339 = load i8*, i8** %last1, align 8
  %340 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs533 = getelementptr inbounds %struct.regexp, %struct.regexp* %340, i32 0, i32 3
  %341 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs533, align 8
  %data534 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %341, i32 0, i32 0
  %arrayidx535 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data534, i32 0, i64 0
  %min_offset536 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx535, i32 0, i32 0
  %342 = load i32, i32* %min_offset536, align 4
  %idx.ext537 = sext i32 %342 to i64
  %add.ptr538 = getelementptr inbounds i8, i8* %339, i64 %idx.ext537
  br label %cond.end.539

cond.end.539:                                     ; preds = %cond.false.532, %cond.true.526
  %cond540 = phi i8* [ %call531, %cond.true.526 ], [ %add.ptr538, %cond.false.532 ]
  %343 = load %struct.sv*, %struct.sv** %must, align 8
  %sv_any541 = getelementptr inbounds %struct.sv, %struct.sv* %343, i32 0, i32 0
  %344 = load i8*, i8** %sv_any541, align 8
  %345 = bitcast i8* %344 to %struct.xpv*
  %xpv_cur542 = getelementptr inbounds %struct.xpv, %struct.xpv* %345, i32 0, i32 1
  %346 = load i64, i64* %xpv_cur542, align 8
  %add.ptr543 = getelementptr inbounds i8, i8* %cond540, i64 %346
  %347 = load %struct.sv*, %struct.sv** %must, align 8
  %sv_flags544 = getelementptr inbounds %struct.sv, %struct.sv* %347, i32 0, i32 2
  %348 = load i32, i32* %sv_flags544, align 4
  %and545 = and i32 %348, 1073741824
  %cmp546 = icmp ne i32 %and545, 0
  %conv547 = zext i1 %cmp546 to i32
  %sub548 = sub nsw i32 0, %conv547
  %349 = load i8*, i8** %strbeg, align 8
  %call549 = call i8* @S_reghop3(i8* %add.ptr543, i32 %sub548, i8* %349)
  br label %cond.end.578

cond.false.550:                                   ; preds = %if.else.520
  %350 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv551 = sext i8 %350 to i32
  %tobool552 = icmp ne i32 %conv551, 0
  br i1 %tobool552, label %cond.true.553, label %cond.false.559

cond.true.553:                                    ; preds = %cond.false.550
  %351 = load i8*, i8** %last1, align 8
  %352 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs554 = getelementptr inbounds %struct.regexp, %struct.regexp* %352, i32 0, i32 3
  %353 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs554, align 8
  %data555 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %353, i32 0, i32 0
  %arrayidx556 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data555, i32 0, i64 0
  %min_offset557 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx556, i32 0, i32 0
  %354 = load i32, i32* %min_offset557, align 4
  %355 = load i8*, i8** %strend.addr, align 8
  %call558 = call i8* @S_reghop3(i8* %351, i32 %354, i8* %355)
  br label %cond.end.566

cond.false.559:                                   ; preds = %cond.false.550
  %356 = load i8*, i8** %last1, align 8
  %357 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs560 = getelementptr inbounds %struct.regexp, %struct.regexp* %357, i32 0, i32 3
  %358 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs560, align 8
  %data561 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %358, i32 0, i32 0
  %arrayidx562 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data561, i32 0, i64 0
  %min_offset563 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx562, i32 0, i32 0
  %359 = load i32, i32* %min_offset563, align 4
  %idx.ext564 = sext i32 %359 to i64
  %add.ptr565 = getelementptr inbounds i8, i8* %356, i64 %idx.ext564
  br label %cond.end.566

cond.end.566:                                     ; preds = %cond.false.559, %cond.true.553
  %cond567 = phi i8* [ %call558, %cond.true.553 ], [ %add.ptr565, %cond.false.559 ]
  %360 = load %struct.sv*, %struct.sv** %must, align 8
  %sv_any568 = getelementptr inbounds %struct.sv, %struct.sv* %360, i32 0, i32 0
  %361 = load i8*, i8** %sv_any568, align 8
  %362 = bitcast i8* %361 to %struct.xpv*
  %xpv_cur569 = getelementptr inbounds %struct.xpv, %struct.xpv* %362, i32 0, i32 1
  %363 = load i64, i64* %xpv_cur569, align 8
  %add.ptr570 = getelementptr inbounds i8, i8* %cond567, i64 %363
  %364 = load %struct.sv*, %struct.sv** %must, align 8
  %sv_flags571 = getelementptr inbounds %struct.sv, %struct.sv* %364, i32 0, i32 2
  %365 = load i32, i32* %sv_flags571, align 4
  %and572 = and i32 %365, 1073741824
  %cmp573 = icmp ne i32 %and572, 0
  %conv574 = zext i1 %cmp573 to i32
  %sub575 = sub nsw i32 0, %conv574
  %idx.ext576 = sext i32 %sub575 to i64
  %add.ptr577 = getelementptr inbounds i8, i8* %add.ptr570, i64 %idx.ext576
  br label %cond.end.578

cond.end.578:                                     ; preds = %cond.end.566, %cond.end.539
  %cond579 = phi i8* [ %call549, %cond.end.539 ], [ %add.ptr577, %cond.end.566 ]
  %366 = load %struct.sv*, %struct.sv** %must, align 8
  %367 = load i32, i32* @PL_multiline, align 4
  %tobool580 = icmp ne i32 %367, 0
  %cond581 = select i1 %tobool580, i32 1, i32 0
  %call582 = call i8* @Perl_fbm_instr(i8* %331, i8* %cond579, %struct.sv* %366, i32 %cond581)
  store i8* %call582, i8** %s, align 8
  br label %if.end.583

if.end.583:                                       ; preds = %cond.end.578, %if.then.519
  %368 = load i8*, i8** %s, align 8
  %tobool584 = icmp ne i8* %368, null
  br i1 %tobool584, label %if.else.617, label %if.then.585

if.then.585:                                      ; preds = %if.end.583
  %369 = load i8*, i8** %last1, align 8
  %370 = load i8*, i8** %last2, align 8
  %cmp586 = icmp uge i8* %369, %370
  br i1 %cmp586, label %if.then.588, label %if.end.589

if.then.588:                                      ; preds = %if.then.585
  br label %fail_finish

if.end.589:                                       ; preds = %if.then.585
  %371 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv590 = sext i8 %371 to i32
  %tobool591 = icmp ne i32 %conv590, 0
  br i1 %tobool591, label %cond.true.592, label %cond.false.599

cond.true.592:                                    ; preds = %if.end.589
  %372 = load i8*, i8** %last1, align 8
  %373 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs593 = getelementptr inbounds %struct.regexp, %struct.regexp* %373, i32 0, i32 3
  %374 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs593, align 8
  %data594 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %374, i32 0, i32 0
  %arrayidx595 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data594, i32 0, i64 0
  %min_offset596 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx595, i32 0, i32 0
  %375 = load i32, i32* %min_offset596, align 4
  %add597 = add nsw i32 %375, 1
  %376 = load i8*, i8** %strend.addr, align 8
  %call598 = call i8* @S_reghop3(i8* %372, i32 %add597, i8* %376)
  br label %cond.end.607

cond.false.599:                                   ; preds = %if.end.589
  %377 = load i8*, i8** %last1, align 8
  %378 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs600 = getelementptr inbounds %struct.regexp, %struct.regexp* %378, i32 0, i32 3
  %379 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs600, align 8
  %data601 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %379, i32 0, i32 0
  %arrayidx602 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data601, i32 0, i64 0
  %min_offset603 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx602, i32 0, i32 0
  %380 = load i32, i32* %min_offset603, align 4
  %idx.ext604 = sext i32 %380 to i64
  %add.ptr605 = getelementptr inbounds i8, i8* %377, i64 %idx.ext604
  %add.ptr606 = getelementptr inbounds i8, i8* %add.ptr605, i64 1
  br label %cond.end.607

cond.end.607:                                     ; preds = %cond.false.599, %cond.true.592
  %cond608 = phi i8* [ %call598, %cond.true.592 ], [ %add.ptr606, %cond.false.599 ]
  store i8* %cond608, i8** %other_last, align 8
  %381 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv609 = sext i8 %381 to i32
  %tobool610 = icmp ne i32 %conv609, 0
  br i1 %tobool610, label %cond.true.611, label %cond.false.613

cond.true.611:                                    ; preds = %cond.end.607
  %382 = load i8*, i8** %last, align 8
  %383 = load i8*, i8** %strend.addr, align 8
  %call612 = call i8* @S_reghop3(i8* %382, i32 1, i8* %383)
  br label %cond.end.615

cond.false.613:                                   ; preds = %cond.end.607
  %384 = load i8*, i8** %last, align 8
  %add.ptr614 = getelementptr inbounds i8, i8* %384, i64 1
  br label %cond.end.615

cond.end.615:                                     ; preds = %cond.false.613, %cond.true.611
  %cond616 = phi i8* [ %call612, %cond.true.611 ], [ %add.ptr614, %cond.false.613 ]
  store i8* %cond616, i8** %s, align 8
  br label %restart

if.else.617:                                      ; preds = %if.end.583
  %385 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv618 = sext i8 %385 to i32
  %tobool619 = icmp ne i32 %conv618, 0
  br i1 %tobool619, label %cond.true.620, label %cond.false.627

cond.true.620:                                    ; preds = %if.else.617
  %386 = load i8*, i8** %s, align 8
  %387 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs621 = getelementptr inbounds %struct.regexp, %struct.regexp* %387, i32 0, i32 3
  %388 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs621, align 8
  %data622 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %388, i32 0, i32 0
  %arrayidx623 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data622, i32 0, i64 0
  %min_offset624 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx623, i32 0, i32 0
  %389 = load i32, i32* %min_offset624, align 4
  %sub625 = sub nsw i32 0, %389
  %390 = load i8*, i8** %strbeg, align 8
  %call626 = call i8* @S_reghop3(i8* %386, i32 %sub625, i8* %390)
  br label %cond.end.635

cond.false.627:                                   ; preds = %if.else.617
  %391 = load i8*, i8** %s, align 8
  %392 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs628 = getelementptr inbounds %struct.regexp, %struct.regexp* %392, i32 0, i32 3
  %393 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs628, align 8
  %data629 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %393, i32 0, i32 0
  %arrayidx630 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data629, i32 0, i64 0
  %min_offset631 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx630, i32 0, i32 0
  %394 = load i32, i32* %min_offset631, align 4
  %sub632 = sub nsw i32 0, %394
  %idx.ext633 = sext i32 %sub632 to i64
  %add.ptr634 = getelementptr inbounds i8, i8* %391, i64 %idx.ext633
  br label %cond.end.635

cond.end.635:                                     ; preds = %cond.false.627, %cond.true.620
  %cond636 = phi i8* [ %call626, %cond.true.620 ], [ %add.ptr634, %cond.false.627 ]
  store i8* %cond636, i8** %t, align 8
  %395 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv637 = sext i8 %395 to i32
  %tobool638 = icmp ne i32 %conv637, 0
  br i1 %tobool638, label %cond.true.639, label %cond.false.641

cond.true.639:                                    ; preds = %cond.end.635
  %396 = load i8*, i8** %s, align 8
  %397 = load i8*, i8** %strend.addr, align 8
  %call640 = call i8* @S_reghop3(i8* %396, i32 1, i8* %397)
  br label %cond.end.643

cond.false.641:                                   ; preds = %cond.end.635
  %398 = load i8*, i8** %s, align 8
  %add.ptr642 = getelementptr inbounds i8, i8* %398, i64 1
  br label %cond.end.643

cond.end.643:                                     ; preds = %cond.false.641, %cond.true.639
  %cond644 = phi i8* [ %call640, %cond.true.639 ], [ %add.ptr642, %cond.false.641 ]
  store i8* %cond644, i8** %other_last, align 8
  %399 = load i8*, i8** %s1, align 8
  store i8* %399, i8** %s, align 8
  %400 = load i8*, i8** %t, align 8
  %401 = load i8*, i8** %strpos.addr, align 8
  %cmp645 = icmp eq i8* %400, %401
  br i1 %cmp645, label %if.then.647, label %if.end.648

if.then.647:                                      ; preds = %cond.end.643
  br label %try_at_start

if.end.648:                                       ; preds = %cond.end.643
  br label %try_at_offset

if.else.649:                                      ; preds = %cond.end.417
  %402 = load i8*, i8** %s, align 8
  store i8* %402, i8** %s1652, align 8
  %403 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv654 = sext i8 %403 to i32
  %tobool655 = icmp ne i32 %conv654, 0
  br i1 %tobool655, label %cond.true.656, label %cond.false.659

cond.true.656:                                    ; preds = %if.else.649
  %404 = load i8*, i8** %s, align 8
  %405 = load i32, i32* %start_shift, align 4
  %sub657 = sub nsw i32 0, %405
  %406 = load i8*, i8** %strbeg, align 8
  %call658 = call i8* @S_reghop3(i8* %404, i32 %sub657, i8* %406)
  br label %cond.end.663

cond.false.659:                                   ; preds = %if.else.649
  %407 = load i8*, i8** %s, align 8
  %408 = load i32, i32* %start_shift, align 4
  %sub660 = sub nsw i32 0, %408
  %idx.ext661 = sext i32 %sub660 to i64
  %add.ptr662 = getelementptr inbounds i8, i8* %407, i64 %idx.ext661
  br label %cond.end.663

cond.end.663:                                     ; preds = %cond.false.659, %cond.true.656
  %cond664 = phi i8* [ %call658, %cond.true.656 ], [ %add.ptr662, %cond.false.659 ]
  store i8* %cond664, i8** %t, align 8
  %409 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv665 = sext i8 %409 to i32
  %tobool666 = icmp ne i32 %conv665, 0
  br i1 %tobool666, label %cond.true.667, label %cond.false.676

cond.true.667:                                    ; preds = %cond.end.663
  %410 = load i8*, i8** %strend.addr, align 8
  %411 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %minlen668 = getelementptr inbounds %struct.regexp, %struct.regexp* %411, i32 0, i32 10
  %412 = load i32, i32* %minlen668, align 4
  %sub669 = sub nsw i32 0, %412
  %413 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs670 = getelementptr inbounds %struct.regexp, %struct.regexp* %413, i32 0, i32 3
  %414 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs670, align 8
  %data671 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %414, i32 0, i32 0
  %arrayidx672 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data671, i32 0, i64 1
  %min_offset673 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx672, i32 0, i32 0
  %415 = load i32, i32* %min_offset673, align 4
  %add674 = add nsw i32 %sub669, %415
  %416 = load i8*, i8** %strbeg, align 8
  %call675 = call i8* @S_reghop3(i8* %410, i32 %add674, i8* %416)
  br label %cond.end.687

cond.false.676:                                   ; preds = %cond.end.663
  %417 = load i8*, i8** %strend.addr, align 8
  %418 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %minlen677 = getelementptr inbounds %struct.regexp, %struct.regexp* %418, i32 0, i32 10
  %419 = load i32, i32* %minlen677, align 4
  %sub678 = sub nsw i32 0, %419
  %idx.ext679 = sext i32 %sub678 to i64
  %add.ptr680 = getelementptr inbounds i8, i8* %417, i64 %idx.ext679
  %420 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs681 = getelementptr inbounds %struct.regexp, %struct.regexp* %420, i32 0, i32 3
  %421 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs681, align 8
  %data682 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %421, i32 0, i32 0
  %arrayidx683 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data682, i32 0, i64 1
  %min_offset684 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx683, i32 0, i32 0
  %422 = load i32, i32* %min_offset684, align 4
  %idx.ext685 = sext i32 %422 to i64
  %add.ptr686 = getelementptr inbounds i8, i8* %add.ptr680, i64 %idx.ext685
  br label %cond.end.687

cond.end.687:                                     ; preds = %cond.false.676, %cond.true.667
  %cond688 = phi i8* [ %call675, %cond.true.667 ], [ %add.ptr686, %cond.false.676 ]
  store i8* %cond688, i8** %last650, align 8
  store i8* %cond688, i8** %last1651, align 8
  %423 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv689 = sext i8 %423 to i32
  %tobool690 = icmp ne i32 %conv689, 0
  br i1 %tobool690, label %cond.true.691, label %cond.false.693

cond.true.691:                                    ; preds = %cond.end.687
  %424 = load i8*, i8** %last650, align 8
  %425 = load i8*, i8** %t, align 8
  %call692 = call i64 @Perl_utf8_distance(i8* %424, i8* %425)
  br label %cond.end.697

cond.false.693:                                   ; preds = %cond.end.687
  %426 = load i8*, i8** %last650, align 8
  %427 = load i8*, i8** %t, align 8
  %sub.ptr.lhs.cast694 = ptrtoint i8* %426 to i64
  %sub.ptr.rhs.cast695 = ptrtoint i8* %427 to i64
  %sub.ptr.sub696 = sub i64 %sub.ptr.lhs.cast694, %sub.ptr.rhs.cast695
  br label %cond.end.697

cond.end.697:                                     ; preds = %cond.false.693, %cond.true.691
  %cond698 = phi i64 [ %call692, %cond.true.691 ], [ %sub.ptr.sub696, %cond.false.693 ]
  %428 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs699 = getelementptr inbounds %struct.regexp, %struct.regexp* %428, i32 0, i32 3
  %429 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs699, align 8
  %data700 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %429, i32 0, i32 0
  %arrayidx701 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data700, i32 0, i64 1
  %max_offset702 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx701, i32 0, i32 1
  %430 = load i32, i32* %max_offset702, align 4
  %conv703 = sext i32 %430 to i64
  %cmp704 = icmp sgt i64 %cond698, %conv703
  br i1 %cmp704, label %if.then.706, label %if.end.724

if.then.706:                                      ; preds = %cond.end.697
  %431 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv707 = sext i8 %431 to i32
  %tobool708 = icmp ne i32 %conv707, 0
  br i1 %tobool708, label %cond.true.709, label %cond.false.715

cond.true.709:                                    ; preds = %if.then.706
  %432 = load i8*, i8** %t, align 8
  %433 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs710 = getelementptr inbounds %struct.regexp, %struct.regexp* %433, i32 0, i32 3
  %434 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs710, align 8
  %data711 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %434, i32 0, i32 0
  %arrayidx712 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data711, i32 0, i64 1
  %max_offset713 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx712, i32 0, i32 1
  %435 = load i32, i32* %max_offset713, align 4
  %436 = load i8*, i8** %strend.addr, align 8
  %call714 = call i8* @S_reghop3(i8* %432, i32 %435, i8* %436)
  br label %cond.end.722

cond.false.715:                                   ; preds = %if.then.706
  %437 = load i8*, i8** %t, align 8
  %438 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs716 = getelementptr inbounds %struct.regexp, %struct.regexp* %438, i32 0, i32 3
  %439 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs716, align 8
  %data717 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %439, i32 0, i32 0
  %arrayidx718 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data717, i32 0, i64 1
  %max_offset719 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx718, i32 0, i32 1
  %440 = load i32, i32* %max_offset719, align 4
  %idx.ext720 = sext i32 %440 to i64
  %add.ptr721 = getelementptr inbounds i8, i8* %437, i64 %idx.ext720
  br label %cond.end.722

cond.end.722:                                     ; preds = %cond.false.715, %cond.true.709
  %cond723 = phi i8* [ %call714, %cond.true.709 ], [ %add.ptr721, %cond.false.715 ]
  store i8* %cond723, i8** %last650, align 8
  br label %if.end.724

if.end.724:                                       ; preds = %cond.end.722, %cond.end.697
  %441 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv725 = sext i8 %441 to i32
  %tobool726 = icmp ne i32 %conv725, 0
  br i1 %tobool726, label %cond.true.727, label %cond.false.733

cond.true.727:                                    ; preds = %if.end.724
  %442 = load i8*, i8** %t, align 8
  %443 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs728 = getelementptr inbounds %struct.regexp, %struct.regexp* %443, i32 0, i32 3
  %444 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs728, align 8
  %data729 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %444, i32 0, i32 0
  %arrayidx730 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data729, i32 0, i64 1
  %min_offset731 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx730, i32 0, i32 0
  %445 = load i32, i32* %min_offset731, align 4
  %446 = load i8*, i8** %strend.addr, align 8
  %call732 = call i8* @S_reghop3(i8* %442, i32 %445, i8* %446)
  br label %cond.end.740

cond.false.733:                                   ; preds = %if.end.724
  %447 = load i8*, i8** %t, align 8
  %448 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs734 = getelementptr inbounds %struct.regexp, %struct.regexp* %448, i32 0, i32 3
  %449 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs734, align 8
  %data735 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %449, i32 0, i32 0
  %arrayidx736 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data735, i32 0, i64 1
  %min_offset737 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx736, i32 0, i32 0
  %450 = load i32, i32* %min_offset737, align 4
  %idx.ext738 = sext i32 %450 to i64
  %add.ptr739 = getelementptr inbounds i8, i8* %447, i64 %idx.ext738
  br label %cond.end.740

cond.end.740:                                     ; preds = %cond.false.733, %cond.true.727
  %cond741 = phi i8* [ %call732, %cond.true.727 ], [ %add.ptr739, %cond.false.733 ]
  store i8* %cond741, i8** %s, align 8
  %451 = load i8*, i8** %s, align 8
  %452 = load i8*, i8** %other_last, align 8
  %cmp742 = icmp ult i8* %451, %452
  br i1 %cmp742, label %if.then.744, label %if.end.745

if.then.744:                                      ; preds = %cond.end.740
  %453 = load i8*, i8** %other_last, align 8
  store i8* %453, i8** %s, align 8
  br label %if.end.745

if.end.745:                                       ; preds = %if.then.744, %cond.end.740
  %454 = load i32, i32* %do_utf8, align 4
  %tobool746 = icmp ne i32 %454, 0
  br i1 %tobool746, label %cond.true.747, label %cond.false.752

cond.true.747:                                    ; preds = %if.end.745
  %455 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs748 = getelementptr inbounds %struct.regexp, %struct.regexp* %455, i32 0, i32 3
  %456 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs748, align 8
  %data749 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %456, i32 0, i32 0
  %arrayidx750 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data749, i32 0, i64 1
  %utf8_substr751 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx750, i32 0, i32 3
  %457 = load %struct.sv*, %struct.sv** %utf8_substr751, align 8
  br label %cond.end.757

cond.false.752:                                   ; preds = %if.end.745
  %458 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs753 = getelementptr inbounds %struct.regexp, %struct.regexp* %458, i32 0, i32 3
  %459 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs753, align 8
  %data754 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %459, i32 0, i32 0
  %arrayidx755 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data754, i32 0, i64 1
  %substr756 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx755, i32 0, i32 2
  %460 = load %struct.sv*, %struct.sv** %substr756, align 8
  br label %cond.end.757

cond.end.757:                                     ; preds = %cond.false.752, %cond.true.747
  %cond758 = phi %struct.sv* [ %457, %cond.true.747 ], [ %460, %cond.false.752 ]
  store %struct.sv* %cond758, %struct.sv** %must653, align 8
  %461 = load %struct.sv*, %struct.sv** %must653, align 8
  %cmp759 = icmp eq %struct.sv* %461, @PL_sv_undef
  br i1 %cmp759, label %if.then.761, label %if.else.762

if.then.761:                                      ; preds = %cond.end.757
  store i8* null, i8** %s, align 8
  br label %if.end.776

if.else.762:                                      ; preds = %cond.end.757
  %462 = load i8*, i8** %s, align 8
  %463 = load i8*, i8** %last650, align 8
  %464 = load %struct.sv*, %struct.sv** %must653, align 8
  %sv_any763 = getelementptr inbounds %struct.sv, %struct.sv* %464, i32 0, i32 0
  %465 = load i8*, i8** %sv_any763, align 8
  %466 = bitcast i8* %465 to %struct.xpv*
  %xpv_cur764 = getelementptr inbounds %struct.xpv, %struct.xpv* %466, i32 0, i32 1
  %467 = load i64, i64* %xpv_cur764, align 8
  %add.ptr765 = getelementptr inbounds i8, i8* %463, i64 %467
  %468 = load %struct.sv*, %struct.sv** %must653, align 8
  %sv_flags766 = getelementptr inbounds %struct.sv, %struct.sv* %468, i32 0, i32 2
  %469 = load i32, i32* %sv_flags766, align 4
  %and767 = and i32 %469, 1073741824
  %cmp768 = icmp ne i32 %and767, 0
  %conv769 = zext i1 %cmp768 to i32
  %idx.ext770 = sext i32 %conv769 to i64
  %idx.neg771 = sub i64 0, %idx.ext770
  %add.ptr772 = getelementptr inbounds i8, i8* %add.ptr765, i64 %idx.neg771
  %470 = load %struct.sv*, %struct.sv** %must653, align 8
  %471 = load i32, i32* @PL_multiline, align 4
  %tobool773 = icmp ne i32 %471, 0
  %cond774 = select i1 %tobool773, i32 1, i32 0
  %call775 = call i8* @Perl_fbm_instr(i8* %462, i8* %add.ptr772, %struct.sv* %470, i32 %cond774)
  store i8* %call775, i8** %s, align 8
  br label %if.end.776

if.end.776:                                       ; preds = %if.else.762, %if.then.761
  %472 = load i8*, i8** %s, align 8
  %tobool777 = icmp ne i8* %472, null
  br i1 %tobool777, label %if.else.791, label %if.then.778

if.then.778:                                      ; preds = %if.end.776
  %473 = load i8*, i8** %last1651, align 8
  %474 = load i8*, i8** %last650, align 8
  %cmp779 = icmp eq i8* %473, %474
  br i1 %cmp779, label %if.then.781, label %if.end.782

if.then.781:                                      ; preds = %if.then.778
  br label %fail_finish

if.end.782:                                       ; preds = %if.then.778
  %475 = load i8*, i8** %last650, align 8
  store i8* %475, i8** %other_last, align 8
  %476 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv783 = sext i8 %476 to i32
  %tobool784 = icmp ne i32 %conv783, 0
  br i1 %tobool784, label %cond.true.785, label %cond.false.787

cond.true.785:                                    ; preds = %if.end.782
  %477 = load i8*, i8** %t, align 8
  %478 = load i8*, i8** %strend.addr, align 8
  %call786 = call i8* @S_reghop3(i8* %477, i32 1, i8* %478)
  br label %cond.end.789

cond.false.787:                                   ; preds = %if.end.782
  %479 = load i8*, i8** %t, align 8
  %add.ptr788 = getelementptr inbounds i8, i8* %479, i64 1
  br label %cond.end.789

cond.end.789:                                     ; preds = %cond.false.787, %cond.true.785
  %cond790 = phi i8* [ %call786, %cond.true.785 ], [ %add.ptr788, %cond.false.787 ]
  store i8* %cond790, i8** %s, align 8
  br label %restart

if.else.791:                                      ; preds = %if.end.776
  %480 = load i8*, i8** %s, align 8
  store i8* %480, i8** %other_last, align 8
  %481 = load i8*, i8** %s1652, align 8
  store i8* %481, i8** %s, align 8
  %482 = load i8*, i8** %t, align 8
  %483 = load i8*, i8** %strpos.addr, align 8
  %cmp792 = icmp eq i8* %482, %483
  br i1 %cmp792, label %if.then.794, label %if.end.795

if.then.794:                                      ; preds = %if.else.791
  br label %try_at_start

if.end.795:                                       ; preds = %if.else.791
  br label %try_at_offset

if.end.796:                                       ; preds = %land.lhs.true.396, %cond.false.390, %land.lhs.true.384, %cond.true.378
  %484 = load i8*, i8** %s, align 8
  %485 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs797 = getelementptr inbounds %struct.regexp, %struct.regexp* %485, i32 0, i32 3
  %486 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs797, align 8
  %data798 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %486, i32 0, i32 0
  %arrayidx799 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data798, i32 0, i64 2
  %max_offset800 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx799, i32 0, i32 1
  %487 = load i32, i32* %max_offset800, align 4
  %idx.ext801 = sext i32 %487 to i64
  %idx.neg802 = sub i64 0, %idx.ext801
  %add.ptr803 = getelementptr inbounds i8, i8* %484, i64 %idx.neg802
  store i8* %add.ptr803, i8** %t, align 8
  %488 = load i8*, i8** %s, align 8
  %489 = load i8*, i8** %strpos.addr, align 8
  %sub.ptr.lhs.cast804 = ptrtoint i8* %488 to i64
  %sub.ptr.rhs.cast805 = ptrtoint i8* %489 to i64
  %sub.ptr.sub806 = sub i64 %sub.ptr.lhs.cast804, %sub.ptr.rhs.cast805
  %490 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs807 = getelementptr inbounds %struct.regexp, %struct.regexp* %490, i32 0, i32 3
  %491 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs807, align 8
  %data808 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %491, i32 0, i32 0
  %arrayidx809 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data808, i32 0, i64 2
  %max_offset810 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx809, i32 0, i32 1
  %492 = load i32, i32* %max_offset810, align 4
  %conv811 = sext i32 %492 to i64
  %cmp812 = icmp sgt i64 %sub.ptr.sub806, %conv811
  br i1 %cmp812, label %land.lhs.true.814, label %if.else.891

land.lhs.true.814:                                ; preds = %if.end.796
  %493 = load i32, i32* %do_utf8, align 4
  %tobool815 = icmp ne i32 %493, 0
  br i1 %tobool815, label %lor.lhs.false.816, label %if.then.827

lor.lhs.false.816:                                ; preds = %land.lhs.true.814
  %494 = load i8*, i8** %s, align 8
  %495 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs817 = getelementptr inbounds %struct.regexp, %struct.regexp* %495, i32 0, i32 3
  %496 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs817, align 8
  %data818 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %496, i32 0, i32 0
  %arrayidx819 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data818, i32 0, i64 2
  %max_offset820 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx819, i32 0, i32 1
  %497 = load i32, i32* %max_offset820, align 4
  %sub821 = sub nsw i32 0, %497
  %498 = load i8*, i8** %strpos.addr, align 8
  %call822 = call i8* @S_reghopmaybe3(i8* %494, i32 %sub821, i8* %498)
  store i8* %call822, i8** %t, align 8
  %tobool823 = icmp ne i8* %call822, null
  br i1 %tobool823, label %land.lhs.true.824, label %if.else.891

land.lhs.true.824:                                ; preds = %lor.lhs.false.816
  %499 = load i8*, i8** %t, align 8
  %500 = load i8*, i8** %strpos.addr, align 8
  %cmp825 = icmp ugt i8* %499, %500
  br i1 %cmp825, label %if.then.827, label %if.else.891

if.then.827:                                      ; preds = %land.lhs.true.824, %land.lhs.true.814
  br label %try_at_offset

try_at_offset:                                    ; preds = %if.end.1230, %if.then.827, %if.end.795, %if.end.648
  %501 = load i32, i32* %ml_anch, align 4
  %tobool828 = icmp ne i32 %501, 0
  br i1 %tobool828, label %land.lhs.true.829, label %if.else.875

land.lhs.true.829:                                ; preds = %try_at_offset
  %502 = load i8*, i8** %t, align 8
  %arrayidx830 = getelementptr inbounds i8, i8* %502, i64 -1
  %503 = load i8, i8* %arrayidx830, align 1
  %conv831 = sext i8 %503 to i32
  %cmp832 = icmp ne i32 %conv831, 10
  br i1 %cmp832, label %if.then.834, label %if.else.875

if.then.834:                                      ; preds = %land.lhs.true.829
  br label %find_anchor

find_anchor:                                      ; preds = %if.then.911, %if.then.834
  br label %while.cond

while.cond:                                       ; preds = %if.end.874, %find_anchor
  %504 = load i8*, i8** %t, align 8
  %505 = load i8*, i8** %strend.addr, align 8
  %506 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %minlen835 = getelementptr inbounds %struct.regexp, %struct.regexp* %506, i32 0, i32 10
  %507 = load i32, i32* %minlen835, align 4
  %idx.ext836 = sext i32 %507 to i64
  %idx.neg837 = sub i64 0, %idx.ext836
  %add.ptr838 = getelementptr inbounds i8, i8* %505, i64 %idx.neg837
  %cmp839 = icmp ult i8* %504, %add.ptr838
  br i1 %cmp839, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %508 = load i8*, i8** %t, align 8
  %509 = load i8, i8* %508, align 1
  %conv841 = sext i8 %509 to i32
  %cmp842 = icmp eq i32 %conv841, 10
  br i1 %cmp842, label %if.then.844, label %if.end.874

if.then.844:                                      ; preds = %while.body
  %510 = load i8*, i8** %t, align 8
  %511 = load i8*, i8** %check_at, align 8
  %512 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs845 = getelementptr inbounds %struct.regexp, %struct.regexp* %512, i32 0, i32 3
  %513 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs845, align 8
  %data846 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %513, i32 0, i32 0
  %arrayidx847 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data846, i32 0, i64 2
  %min_offset848 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx847, i32 0, i32 0
  %514 = load i32, i32* %min_offset848, align 4
  %idx.ext849 = sext i32 %514 to i64
  %idx.neg850 = sub i64 0, %idx.ext849
  %add.ptr851 = getelementptr inbounds i8, i8* %511, i64 %idx.neg850
  %cmp852 = icmp ult i8* %510, %add.ptr851
  br i1 %cmp852, label %if.then.854, label %if.end.872

if.then.854:                                      ; preds = %if.then.844
  %515 = load i32, i32* %do_utf8, align 4
  %tobool855 = icmp ne i32 %515, 0
  br i1 %tobool855, label %cond.true.856, label %cond.false.862

cond.true.856:                                    ; preds = %if.then.854
  %516 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs857 = getelementptr inbounds %struct.regexp, %struct.regexp* %516, i32 0, i32 3
  %517 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs857, align 8
  %data858 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %517, i32 0, i32 0
  %arrayidx859 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data858, i32 0, i64 0
  %utf8_substr860 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx859, i32 0, i32 3
  %518 = load %struct.sv*, %struct.sv** %utf8_substr860, align 8
  %tobool861 = icmp ne %struct.sv* %518, null
  br i1 %tobool861, label %if.then.868, label %if.end.870

cond.false.862:                                   ; preds = %if.then.854
  %519 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs863 = getelementptr inbounds %struct.regexp, %struct.regexp* %519, i32 0, i32 3
  %520 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs863, align 8
  %data864 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %520, i32 0, i32 0
  %arrayidx865 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data864, i32 0, i64 0
  %substr866 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx865, i32 0, i32 2
  %521 = load %struct.sv*, %struct.sv** %substr866, align 8
  %tobool867 = icmp ne %struct.sv* %521, null
  br i1 %tobool867, label %if.then.868, label %if.end.870

if.then.868:                                      ; preds = %cond.false.862, %cond.true.856
  %522 = load i8*, i8** %t, align 8
  %add.ptr869 = getelementptr inbounds i8, i8* %522, i64 1
  store i8* %add.ptr869, i8** %strpos.addr, align 8
  br label %do_other_anchored

if.end.870:                                       ; preds = %cond.false.862, %cond.true.856
  %523 = load i8*, i8** %t, align 8
  %add.ptr871 = getelementptr inbounds i8, i8* %523, i64 1
  store i8* %add.ptr871, i8** %s, align 8
  br label %set_useful

if.end.872:                                       ; preds = %if.then.844
  %524 = load i8*, i8** %t, align 8
  %add.ptr873 = getelementptr inbounds i8, i8* %524, i64 1
  store i8* %add.ptr873, i8** %s, align 8
  store i8* %add.ptr873, i8** %strpos.addr, align 8
  store i8* %add.ptr873, i8** %other_last, align 8
  br label %restart

if.end.874:                                       ; preds = %while.body
  %525 = load i8*, i8** %t, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %525, i32 1
  store i8* %incdec.ptr, i8** %t, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %fail_finish

if.else.875:                                      ; preds = %land.lhs.true.829, %try_at_offset
  br label %if.end.876

if.end.876:                                       ; preds = %if.else.875
  %526 = load i8*, i8** %t, align 8
  store i8* %526, i8** %s, align 8
  br label %set_useful

set_useful:                                       ; preds = %if.end.876, %if.end.870
  %527 = load i32, i32* %do_utf8, align 4
  %tobool877 = icmp ne i32 %527, 0
  br i1 %tobool877, label %cond.true.878, label %cond.false.883

cond.true.878:                                    ; preds = %set_useful
  %528 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs879 = getelementptr inbounds %struct.regexp, %struct.regexp* %528, i32 0, i32 3
  %529 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs879, align 8
  %data880 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %529, i32 0, i32 0
  %arrayidx881 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data880, i32 0, i64 2
  %utf8_substr882 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx881, i32 0, i32 3
  %530 = load %struct.sv*, %struct.sv** %utf8_substr882, align 8
  br label %cond.end.888

cond.false.883:                                   ; preds = %set_useful
  %531 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs884 = getelementptr inbounds %struct.regexp, %struct.regexp* %531, i32 0, i32 3
  %532 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs884, align 8
  %data885 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %532, i32 0, i32 0
  %arrayidx886 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data885, i32 0, i64 2
  %substr887 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx886, i32 0, i32 2
  %533 = load %struct.sv*, %struct.sv** %substr887, align 8
  br label %cond.end.888

cond.end.888:                                     ; preds = %cond.false.883, %cond.true.878
  %cond889 = phi %struct.sv* [ %530, %cond.true.878 ], [ %533, %cond.false.883 ]
  %sv_any890 = getelementptr inbounds %struct.sv, %struct.sv* %cond889, i32 0, i32 0
  %534 = load i8*, i8** %sv_any890, align 8
  %535 = bitcast i8* %534 to %struct.xpvbm*
  %xbm_useful = getelementptr inbounds %struct.xpvbm, %struct.xpvbm* %535, i32 0, i32 7
  %536 = load i32, i32* %xbm_useful, align 4
  %inc = add nsw i32 %536, 1
  store i32 %inc, i32* %xbm_useful, align 4
  br label %if.end.1034

if.else.891:                                      ; preds = %land.lhs.true.824, %lor.lhs.false.816, %if.end.796
  br label %try_at_start

try_at_start:                                     ; preds = %if.else.891, %if.then.794, %if.then.647
  %537 = load i32, i32* %ml_anch, align 4
  %tobool892 = icmp ne i32 %537, 0
  br i1 %tobool892, label %land.lhs.true.893, label %if.end.912

land.lhs.true.893:                                ; preds = %try_at_start
  %538 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %tobool894 = icmp ne %struct.sv* %538, null
  br i1 %tobool894, label %land.lhs.true.895, label %if.end.912

land.lhs.true.895:                                ; preds = %land.lhs.true.893
  %539 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags896 = getelementptr inbounds %struct.sv, %struct.sv* %539, i32 0, i32 2
  %540 = load i32, i32* %sv_flags896, align 4
  %and897 = and i32 %540, 524288
  %tobool898 = icmp ne i32 %and897, 0
  br i1 %tobool898, label %if.end.912, label %land.lhs.true.899

land.lhs.true.899:                                ; preds = %land.lhs.true.895
  %541 = load i8*, i8** %strpos.addr, align 8
  %542 = load i8*, i8** %strbeg, align 8
  %cmp900 = icmp ne i8* %541, %542
  br i1 %cmp900, label %land.lhs.true.902, label %if.end.912

land.lhs.true.902:                                ; preds = %land.lhs.true.899
  %543 = load i8*, i8** %strpos.addr, align 8
  %arrayidx903 = getelementptr inbounds i8, i8* %543, i64 -1
  %544 = load i8, i8* %arrayidx903, align 1
  %conv904 = sext i8 %544 to i32
  %cmp905 = icmp ne i32 %conv904, 10
  br i1 %cmp905, label %land.lhs.true.907, label %if.end.912

land.lhs.true.907:                                ; preds = %land.lhs.true.902
  %545 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch908 = getelementptr inbounds %struct.regexp, %struct.regexp* %545, i32 0, i32 15
  %546 = load i32, i32* %reganch908, align 4
  %and909 = and i32 %546, 32
  %tobool910 = icmp ne i32 %and909, 0
  br i1 %tobool910, label %if.end.912, label %if.then.911

if.then.911:                                      ; preds = %land.lhs.true.907
  %547 = load i8*, i8** %strpos.addr, align 8
  store i8* %547, i8** %t, align 8
  br label %find_anchor

if.end.912:                                       ; preds = %land.lhs.true.907, %land.lhs.true.902, %land.lhs.true.899, %land.lhs.true.895, %land.lhs.true.893, %try_at_start
  br label %success_at_start

success_at_start:                                 ; preds = %if.end.912, %if.end.188
  %548 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch913 = getelementptr inbounds %struct.regexp, %struct.regexp* %548, i32 0, i32 15
  %549 = load i32, i32* %reganch913, align 4
  %and914 = and i32 %549, 131072
  %tobool915 = icmp ne i32 %and914, 0
  br i1 %tobool915, label %if.else.1032, label %land.lhs.true.916

land.lhs.true.916:                                ; preds = %success_at_start
  %550 = load i32, i32* %do_utf8, align 4
  %tobool917 = icmp ne i32 %550, 0
  br i1 %tobool917, label %cond.true.918, label %cond.false.945

cond.true.918:                                    ; preds = %land.lhs.true.916
  %551 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs919 = getelementptr inbounds %struct.regexp, %struct.regexp* %551, i32 0, i32 3
  %552 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs919, align 8
  %data920 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %552, i32 0, i32 0
  %arrayidx921 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data920, i32 0, i64 2
  %utf8_substr922 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx921, i32 0, i32 3
  %553 = load %struct.sv*, %struct.sv** %utf8_substr922, align 8
  %tobool923 = icmp ne %struct.sv* %553, null
  br i1 %tobool923, label %land.lhs.true.924, label %if.else.1032

land.lhs.true.924:                                ; preds = %cond.true.918
  %554 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs925 = getelementptr inbounds %struct.regexp, %struct.regexp* %554, i32 0, i32 3
  %555 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs925, align 8
  %data926 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %555, i32 0, i32 0
  %arrayidx927 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data926, i32 0, i64 2
  %utf8_substr928 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx927, i32 0, i32 3
  %556 = load %struct.sv*, %struct.sv** %utf8_substr928, align 8
  %sv_any929 = getelementptr inbounds %struct.sv, %struct.sv* %556, i32 0, i32 0
  %557 = load i8*, i8** %sv_any929, align 8
  %558 = bitcast i8* %557 to %struct.xpvbm*
  %xbm_useful930 = getelementptr inbounds %struct.xpvbm, %struct.xpvbm* %558, i32 0, i32 7
  %559 = load i32, i32* %xbm_useful930, align 4
  %dec931 = add nsw i32 %559, -1
  store i32 %dec931, i32* %xbm_useful930, align 4
  %cmp932 = icmp slt i32 %dec931, 0
  br i1 %cmp932, label %land.lhs.true.934, label %if.else.1032

land.lhs.true.934:                                ; preds = %land.lhs.true.924
  %560 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs935 = getelementptr inbounds %struct.regexp, %struct.regexp* %560, i32 0, i32 3
  %561 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs935, align 8
  %data936 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %561, i32 0, i32 0
  %arrayidx937 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data936, i32 0, i64 2
  %utf8_substr938 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx937, i32 0, i32 3
  %562 = load %struct.sv*, %struct.sv** %utf8_substr938, align 8
  %563 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs939 = getelementptr inbounds %struct.regexp, %struct.regexp* %563, i32 0, i32 3
  %564 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs939, align 8
  %data940 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %564, i32 0, i32 0
  %arrayidx941 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data940, i32 0, i64 1
  %utf8_substr942 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx941, i32 0, i32 3
  %565 = load %struct.sv*, %struct.sv** %utf8_substr942, align 8
  %cmp943 = icmp eq %struct.sv* %562, %565
  br i1 %cmp943, label %if.then.972, label %if.else.1032

cond.false.945:                                   ; preds = %land.lhs.true.916
  %566 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs946 = getelementptr inbounds %struct.regexp, %struct.regexp* %566, i32 0, i32 3
  %567 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs946, align 8
  %data947 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %567, i32 0, i32 0
  %arrayidx948 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data947, i32 0, i64 2
  %substr949 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx948, i32 0, i32 2
  %568 = load %struct.sv*, %struct.sv** %substr949, align 8
  %tobool950 = icmp ne %struct.sv* %568, null
  br i1 %tobool950, label %land.lhs.true.951, label %if.else.1032

land.lhs.true.951:                                ; preds = %cond.false.945
  %569 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs952 = getelementptr inbounds %struct.regexp, %struct.regexp* %569, i32 0, i32 3
  %570 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs952, align 8
  %data953 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %570, i32 0, i32 0
  %arrayidx954 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data953, i32 0, i64 2
  %substr955 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx954, i32 0, i32 2
  %571 = load %struct.sv*, %struct.sv** %substr955, align 8
  %sv_any956 = getelementptr inbounds %struct.sv, %struct.sv* %571, i32 0, i32 0
  %572 = load i8*, i8** %sv_any956, align 8
  %573 = bitcast i8* %572 to %struct.xpvbm*
  %xbm_useful957 = getelementptr inbounds %struct.xpvbm, %struct.xpvbm* %573, i32 0, i32 7
  %574 = load i32, i32* %xbm_useful957, align 4
  %dec958 = add nsw i32 %574, -1
  store i32 %dec958, i32* %xbm_useful957, align 4
  %cmp959 = icmp slt i32 %dec958, 0
  br i1 %cmp959, label %land.lhs.true.961, label %if.else.1032

land.lhs.true.961:                                ; preds = %land.lhs.true.951
  %575 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs962 = getelementptr inbounds %struct.regexp, %struct.regexp* %575, i32 0, i32 3
  %576 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs962, align 8
  %data963 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %576, i32 0, i32 0
  %arrayidx964 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data963, i32 0, i64 2
  %substr965 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx964, i32 0, i32 2
  %577 = load %struct.sv*, %struct.sv** %substr965, align 8
  %578 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs966 = getelementptr inbounds %struct.regexp, %struct.regexp* %578, i32 0, i32 3
  %579 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs966, align 8
  %data967 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %579, i32 0, i32 0
  %arrayidx968 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data967, i32 0, i64 1
  %substr969 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx968, i32 0, i32 2
  %580 = load %struct.sv*, %struct.sv** %substr969, align 8
  %cmp970 = icmp eq %struct.sv* %577, %580
  br i1 %cmp970, label %if.then.972, label %if.else.1032

if.then.972:                                      ; preds = %land.lhs.true.961, %land.lhs.true.934
  %581 = load i32, i32* %do_utf8, align 4
  %tobool973 = icmp ne i32 %581, 0
  br i1 %tobool973, label %cond.true.974, label %cond.false.979

cond.true.974:                                    ; preds = %if.then.972
  %582 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs975 = getelementptr inbounds %struct.regexp, %struct.regexp* %582, i32 0, i32 3
  %583 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs975, align 8
  %data976 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %583, i32 0, i32 0
  %arrayidx977 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data976, i32 0, i64 2
  %utf8_substr978 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx977, i32 0, i32 3
  %584 = load %struct.sv*, %struct.sv** %utf8_substr978, align 8
  br label %cond.end.984

cond.false.979:                                   ; preds = %if.then.972
  %585 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs980 = getelementptr inbounds %struct.regexp, %struct.regexp* %585, i32 0, i32 3
  %586 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs980, align 8
  %data981 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %586, i32 0, i32 0
  %arrayidx982 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data981, i32 0, i64 2
  %substr983 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx982, i32 0, i32 2
  %587 = load %struct.sv*, %struct.sv** %substr983, align 8
  br label %cond.end.984

cond.end.984:                                     ; preds = %cond.false.979, %cond.true.974
  %cond985 = phi %struct.sv* [ %584, %cond.true.974 ], [ %587, %cond.false.979 ]
  call void @Perl_sv_free(%struct.sv* %cond985)
  %588 = load i32, i32* %do_utf8, align 4
  %tobool986 = icmp ne i32 %588, 0
  br i1 %tobool986, label %cond.true.987, label %cond.false.993

cond.true.987:                                    ; preds = %cond.end.984
  %589 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs988 = getelementptr inbounds %struct.regexp, %struct.regexp* %589, i32 0, i32 3
  %590 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs988, align 8
  %data989 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %590, i32 0, i32 0
  %arrayidx990 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data989, i32 0, i64 2
  %substr991 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx990, i32 0, i32 2
  %591 = load %struct.sv*, %struct.sv** %substr991, align 8
  %tobool992 = icmp ne %struct.sv* %591, null
  br i1 %tobool992, label %if.then.999, label %if.end.1013

cond.false.993:                                   ; preds = %cond.end.984
  %592 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs994 = getelementptr inbounds %struct.regexp, %struct.regexp* %592, i32 0, i32 3
  %593 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs994, align 8
  %data995 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %593, i32 0, i32 0
  %arrayidx996 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data995, i32 0, i64 2
  %utf8_substr997 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx996, i32 0, i32 3
  %594 = load %struct.sv*, %struct.sv** %utf8_substr997, align 8
  %tobool998 = icmp ne %struct.sv* %594, null
  br i1 %tobool998, label %if.then.999, label %if.end.1013

if.then.999:                                      ; preds = %cond.false.993, %cond.true.987
  %595 = load i32, i32* %do_utf8, align 4
  %tobool1000 = icmp ne i32 %595, 0
  br i1 %tobool1000, label %cond.true.1001, label %cond.false.1006

cond.true.1001:                                   ; preds = %if.then.999
  %596 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1002 = getelementptr inbounds %struct.regexp, %struct.regexp* %596, i32 0, i32 3
  %597 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1002, align 8
  %data1003 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %597, i32 0, i32 0
  %arrayidx1004 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data1003, i32 0, i64 2
  %substr1005 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx1004, i32 0, i32 2
  %598 = load %struct.sv*, %struct.sv** %substr1005, align 8
  br label %cond.end.1011

cond.false.1006:                                  ; preds = %if.then.999
  %599 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1007 = getelementptr inbounds %struct.regexp, %struct.regexp* %599, i32 0, i32 3
  %600 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1007, align 8
  %data1008 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %600, i32 0, i32 0
  %arrayidx1009 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data1008, i32 0, i64 2
  %utf8_substr1010 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx1009, i32 0, i32 3
  %601 = load %struct.sv*, %struct.sv** %utf8_substr1010, align 8
  br label %cond.end.1011

cond.end.1011:                                    ; preds = %cond.false.1006, %cond.true.1001
  %cond1012 = phi %struct.sv* [ %598, %cond.true.1001 ], [ %601, %cond.false.1006 ]
  call void @Perl_sv_free(%struct.sv* %cond1012)
  br label %if.end.1013

if.end.1013:                                      ; preds = %cond.end.1011, %cond.false.993, %cond.true.987
  %602 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1014 = getelementptr inbounds %struct.regexp, %struct.regexp* %602, i32 0, i32 3
  %603 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1014, align 8
  %data1015 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %603, i32 0, i32 0
  %arrayidx1016 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data1015, i32 0, i64 2
  %utf8_substr1017 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx1016, i32 0, i32 3
  store %struct.sv* null, %struct.sv** %utf8_substr1017, align 8
  %604 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1018 = getelementptr inbounds %struct.regexp, %struct.regexp* %604, i32 0, i32 3
  %605 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1018, align 8
  %data1019 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %605, i32 0, i32 0
  %arrayidx1020 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data1019, i32 0, i64 2
  %substr1021 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx1020, i32 0, i32 2
  store %struct.sv* null, %struct.sv** %substr1021, align 8
  %606 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1022 = getelementptr inbounds %struct.regexp, %struct.regexp* %606, i32 0, i32 3
  %607 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1022, align 8
  %data1023 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %607, i32 0, i32 0
  %arrayidx1024 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data1023, i32 0, i64 1
  %utf8_substr1025 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx1024, i32 0, i32 3
  store %struct.sv* null, %struct.sv** %utf8_substr1025, align 8
  %608 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1026 = getelementptr inbounds %struct.regexp, %struct.regexp* %608, i32 0, i32 3
  %609 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1026, align 8
  %data1027 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %609, i32 0, i32 0
  %arrayidx1028 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data1027, i32 0, i64 1
  %substr1029 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx1028, i32 0, i32 2
  store %struct.sv* null, %struct.sv** %substr1029, align 8
  store %struct.sv* null, %struct.sv** %check, align 8
  %610 = load i8*, i8** %strpos.addr, align 8
  store i8* %610, i8** %s, align 8
  %611 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch1030 = getelementptr inbounds %struct.regexp, %struct.regexp* %611, i32 0, i32 15
  %612 = load i32, i32* %reganch1030, align 4
  %and1031 = and i32 %612, -3145729
  store i32 %and1031, i32* %reganch1030, align 4
  br label %if.end.1033

if.else.1032:                                     ; preds = %land.lhs.true.961, %land.lhs.true.951, %cond.false.945, %land.lhs.true.934, %land.lhs.true.924, %cond.true.918, %success_at_start
  %613 = load i8*, i8** %strpos.addr, align 8
  store i8* %613, i8** %s, align 8
  br label %if.end.1033

if.end.1033:                                      ; preds = %if.else.1032, %if.end.1013
  br label %if.end.1034

if.end.1034:                                      ; preds = %if.end.1033, %cond.end.888
  %614 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %regstclass = getelementptr inbounds %struct.regexp, %struct.regexp* %614, i32 0, i32 2
  %615 = load %struct.regnode*, %struct.regnode** %regstclass, align 8
  %tobool1035 = icmp ne %struct.regnode* %615, null
  br i1 %tobool1035, label %if.then.1036, label %if.end.1256

if.then.1036:                                     ; preds = %if.end.1034
  %616 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %regstclass1037 = getelementptr inbounds %struct.regexp, %struct.regexp* %616, i32 0, i32 2
  %617 = load %struct.regnode*, %struct.regnode** %regstclass1037, align 8
  %618 = bitcast %struct.regnode* %617 to %struct.regnode_string*
  %string = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %618, i32 0, i32 3
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %string, i32 0, i32 0
  store i8* %arraydecay, i8** %str, align 8
  %619 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %regstclass1038 = getelementptr inbounds %struct.regexp, %struct.regexp* %619, i32 0, i32 2
  %620 = load %struct.regnode*, %struct.regnode** %regstclass1038, align 8
  %type = getelementptr inbounds %struct.regnode, %struct.regnode* %620, i32 0, i32 1
  %621 = load i8, i8* %type, align 1
  %idxprom1039 = zext i8 %621 to i64
  %arrayidx1040 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom1039
  %622 = load i8, i8* %arrayidx1040, align 1
  %conv1041 = zext i8 %622 to i32
  %cmp1042 = icmp eq i32 %conv1041, 33
  br i1 %cmp1042, label %cond.true.1044, label %cond.false.1064

cond.true.1044:                                   ; preds = %if.then.1036
  %623 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv1045 = sext i8 %623 to i32
  %tobool1046 = icmp ne i32 %conv1045, 0
  br i1 %tobool1046, label %cond.true.1047, label %cond.false.1053

cond.true.1047:                                   ; preds = %cond.true.1044
  %624 = load i8*, i8** %str, align 8
  %625 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %regstclass1048 = getelementptr inbounds %struct.regexp, %struct.regexp* %625, i32 0, i32 2
  %626 = load %struct.regnode*, %struct.regnode** %regstclass1048, align 8
  %627 = bitcast %struct.regnode* %626 to %struct.regnode_string*
  %str_len = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %627, i32 0, i32 0
  %628 = load i8, i8* %str_len, align 1
  %conv1049 = zext i8 %628 to i32
  %idx.ext1050 = sext i32 %conv1049 to i64
  %add.ptr1051 = getelementptr inbounds i8, i8* %624, i64 %idx.ext1050
  %629 = load i8*, i8** %str, align 8
  %call1052 = call i64 @Perl_utf8_distance(i8* %add.ptr1051, i8* %629)
  br label %cond.end.1062

cond.false.1053:                                  ; preds = %cond.true.1044
  %630 = load i8*, i8** %str, align 8
  %631 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %regstclass1054 = getelementptr inbounds %struct.regexp, %struct.regexp* %631, i32 0, i32 2
  %632 = load %struct.regnode*, %struct.regnode** %regstclass1054, align 8
  %633 = bitcast %struct.regnode* %632 to %struct.regnode_string*
  %str_len1055 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %633, i32 0, i32 0
  %634 = load i8, i8* %str_len1055, align 1
  %conv1056 = zext i8 %634 to i32
  %idx.ext1057 = sext i32 %conv1056 to i64
  %add.ptr1058 = getelementptr inbounds i8, i8* %630, i64 %idx.ext1057
  %635 = load i8*, i8** %str, align 8
  %sub.ptr.lhs.cast1059 = ptrtoint i8* %add.ptr1058 to i64
  %sub.ptr.rhs.cast1060 = ptrtoint i8* %635 to i64
  %sub.ptr.sub1061 = sub i64 %sub.ptr.lhs.cast1059, %sub.ptr.rhs.cast1060
  br label %cond.end.1062

cond.end.1062:                                    ; preds = %cond.false.1053, %cond.true.1047
  %cond1063 = phi i64 [ %call1052, %cond.true.1047 ], [ %sub.ptr.sub1061, %cond.false.1053 ]
  br label %cond.end.1065

cond.false.1064:                                  ; preds = %if.then.1036
  br label %cond.end.1065

cond.end.1065:                                    ; preds = %cond.false.1064, %cond.end.1062
  %cond1066 = phi i64 [ %cond1063, %cond.end.1062 ], [ 1, %cond.false.1064 ]
  %conv1067 = trunc i64 %cond1066 to i32
  store i32 %conv1067, i32* %cl_l, align 4
  %636 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1068 = getelementptr inbounds %struct.regexp, %struct.regexp* %636, i32 0, i32 3
  %637 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1068, align 8
  %data1069 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %637, i32 0, i32 0
  %arrayidx1070 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data1069, i32 0, i64 0
  %substr1071 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx1070, i32 0, i32 2
  %638 = load %struct.sv*, %struct.sv** %substr1071, align 8
  %tobool1072 = icmp ne %struct.sv* %638, null
  br i1 %tobool1072, label %cond.true.1081, label %lor.lhs.false.1073

lor.lhs.false.1073:                               ; preds = %cond.end.1065
  %639 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1074 = getelementptr inbounds %struct.regexp, %struct.regexp* %639, i32 0, i32 3
  %640 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1074, align 8
  %data1075 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %640, i32 0, i32 0
  %arrayidx1076 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data1075, i32 0, i64 0
  %utf8_substr1077 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx1076, i32 0, i32 3
  %641 = load %struct.sv*, %struct.sv** %utf8_substr1077, align 8
  %tobool1078 = icmp ne %struct.sv* %641, null
  br i1 %tobool1078, label %cond.true.1081, label %lor.lhs.false.1079

lor.lhs.false.1079:                               ; preds = %lor.lhs.false.1073
  %642 = load i32, i32* %ml_anch, align 4
  %tobool1080 = icmp ne i32 %642, 0
  br i1 %tobool1080, label %cond.true.1081, label %cond.false.1103

cond.true.1081:                                   ; preds = %lor.lhs.false.1079, %lor.lhs.false.1073, %cond.end.1065
  %643 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv1082 = sext i8 %643 to i32
  %tobool1083 = icmp ne i32 %conv1082, 0
  br i1 %tobool1083, label %cond.true.1084, label %cond.false.1092

cond.true.1084:                                   ; preds = %cond.true.1081
  %644 = load i8*, i8** %s, align 8
  %645 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %minlen1085 = getelementptr inbounds %struct.regexp, %struct.regexp* %645, i32 0, i32 10
  %646 = load i32, i32* %minlen1085, align 4
  %tobool1086 = icmp ne i32 %646, 0
  br i1 %tobool1086, label %cond.true.1087, label %cond.false.1088

cond.true.1087:                                   ; preds = %cond.true.1084
  %647 = load i32, i32* %cl_l, align 4
  br label %cond.end.1089

cond.false.1088:                                  ; preds = %cond.true.1084
  br label %cond.end.1089

cond.end.1089:                                    ; preds = %cond.false.1088, %cond.true.1087
  %cond1090 = phi i32 [ %647, %cond.true.1087 ], [ 0, %cond.false.1088 ]
  %648 = load i8*, i8** %strend.addr, align 8
  %call1091 = call i8* @S_reghop3(i8* %644, i32 %cond1090, i8* %648)
  br label %cond.end.1101

cond.false.1092:                                  ; preds = %cond.true.1081
  %649 = load i8*, i8** %s, align 8
  %650 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %minlen1093 = getelementptr inbounds %struct.regexp, %struct.regexp* %650, i32 0, i32 10
  %651 = load i32, i32* %minlen1093, align 4
  %tobool1094 = icmp ne i32 %651, 0
  br i1 %tobool1094, label %cond.true.1095, label %cond.false.1096

cond.true.1095:                                   ; preds = %cond.false.1092
  %652 = load i32, i32* %cl_l, align 4
  br label %cond.end.1097

cond.false.1096:                                  ; preds = %cond.false.1092
  br label %cond.end.1097

cond.end.1097:                                    ; preds = %cond.false.1096, %cond.true.1095
  %cond1098 = phi i32 [ %652, %cond.true.1095 ], [ 0, %cond.false.1096 ]
  %idx.ext1099 = sext i32 %cond1098 to i64
  %add.ptr1100 = getelementptr inbounds i8, i8* %649, i64 %idx.ext1099
  br label %cond.end.1101

cond.end.1101:                                    ; preds = %cond.end.1097, %cond.end.1089
  %cond1102 = phi i8* [ %call1091, %cond.end.1089 ], [ %add.ptr1100, %cond.end.1097 ]
  br label %cond.end.1150

cond.false.1103:                                  ; preds = %lor.lhs.false.1079
  %653 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1104 = getelementptr inbounds %struct.regexp, %struct.regexp* %653, i32 0, i32 3
  %654 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1104, align 8
  %data1105 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %654, i32 0, i32 0
  %arrayidx1106 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data1105, i32 0, i64 1
  %substr1107 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx1106, i32 0, i32 2
  %655 = load %struct.sv*, %struct.sv** %substr1107, align 8
  %tobool1108 = icmp ne %struct.sv* %655, null
  br i1 %tobool1108, label %cond.true.1115, label %lor.lhs.false.1109

lor.lhs.false.1109:                               ; preds = %cond.false.1103
  %656 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1110 = getelementptr inbounds %struct.regexp, %struct.regexp* %656, i32 0, i32 3
  %657 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1110, align 8
  %data1111 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %657, i32 0, i32 0
  %arrayidx1112 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data1111, i32 0, i64 1
  %utf8_substr1113 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx1112, i32 0, i32 3
  %658 = load %struct.sv*, %struct.sv** %utf8_substr1113, align 8
  %tobool1114 = icmp ne %struct.sv* %658, null
  br i1 %tobool1114, label %cond.true.1115, label %cond.false.1147

cond.true.1115:                                   ; preds = %lor.lhs.false.1109, %cond.false.1103
  %659 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv1116 = sext i8 %659 to i32
  %tobool1117 = icmp ne i32 %conv1116, 0
  br i1 %tobool1117, label %cond.true.1118, label %cond.false.1131

cond.true.1118:                                   ; preds = %cond.true.1115
  %660 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv1119 = sext i8 %660 to i32
  %tobool1120 = icmp ne i32 %conv1119, 0
  br i1 %tobool1120, label %cond.true.1121, label %cond.false.1124

cond.true.1121:                                   ; preds = %cond.true.1118
  %661 = load i8*, i8** %check_at, align 8
  %662 = load i32, i32* %start_shift, align 4
  %sub1122 = sub nsw i32 0, %662
  %663 = load i8*, i8** %strbeg, align 8
  %call1123 = call i8* @S_reghop3(i8* %661, i32 %sub1122, i8* %663)
  br label %cond.end.1128

cond.false.1124:                                  ; preds = %cond.true.1118
  %664 = load i8*, i8** %check_at, align 8
  %665 = load i32, i32* %start_shift, align 4
  %sub1125 = sub nsw i32 0, %665
  %idx.ext1126 = sext i32 %sub1125 to i64
  %add.ptr1127 = getelementptr inbounds i8, i8* %664, i64 %idx.ext1126
  br label %cond.end.1128

cond.end.1128:                                    ; preds = %cond.false.1124, %cond.true.1121
  %cond1129 = phi i8* [ %call1123, %cond.true.1121 ], [ %add.ptr1127, %cond.false.1124 ]
  %666 = load i32, i32* %cl_l, align 4
  %667 = load i8*, i8** %strend.addr, align 8
  %call1130 = call i8* @S_reghop3(i8* %cond1129, i32 %666, i8* %667)
  br label %cond.end.1145

cond.false.1131:                                  ; preds = %cond.true.1115
  %668 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv1132 = sext i8 %668 to i32
  %tobool1133 = icmp ne i32 %conv1132, 0
  br i1 %tobool1133, label %cond.true.1134, label %cond.false.1137

cond.true.1134:                                   ; preds = %cond.false.1131
  %669 = load i8*, i8** %check_at, align 8
  %670 = load i32, i32* %start_shift, align 4
  %sub1135 = sub nsw i32 0, %670
  %671 = load i8*, i8** %strbeg, align 8
  %call1136 = call i8* @S_reghop3(i8* %669, i32 %sub1135, i8* %671)
  br label %cond.end.1141

cond.false.1137:                                  ; preds = %cond.false.1131
  %672 = load i8*, i8** %check_at, align 8
  %673 = load i32, i32* %start_shift, align 4
  %sub1138 = sub nsw i32 0, %673
  %idx.ext1139 = sext i32 %sub1138 to i64
  %add.ptr1140 = getelementptr inbounds i8, i8* %672, i64 %idx.ext1139
  br label %cond.end.1141

cond.end.1141:                                    ; preds = %cond.false.1137, %cond.true.1134
  %cond1142 = phi i8* [ %call1136, %cond.true.1134 ], [ %add.ptr1140, %cond.false.1137 ]
  %674 = load i32, i32* %cl_l, align 4
  %idx.ext1143 = sext i32 %674 to i64
  %add.ptr1144 = getelementptr inbounds i8, i8* %cond1142, i64 %idx.ext1143
  br label %cond.end.1145

cond.end.1145:                                    ; preds = %cond.end.1141, %cond.end.1128
  %cond1146 = phi i8* [ %call1130, %cond.end.1128 ], [ %add.ptr1144, %cond.end.1141 ]
  br label %cond.end.1148

cond.false.1147:                                  ; preds = %lor.lhs.false.1109
  %675 = load i8*, i8** %strend.addr, align 8
  br label %cond.end.1148

cond.end.1148:                                    ; preds = %cond.false.1147, %cond.end.1145
  %cond1149 = phi i8* [ %cond1146, %cond.end.1145 ], [ %675, %cond.false.1147 ]
  br label %cond.end.1150

cond.end.1150:                                    ; preds = %cond.end.1148, %cond.end.1101
  %cond1151 = phi i8* [ %cond1102, %cond.end.1101 ], [ %cond1149, %cond.end.1148 ]
  store i8* %cond1151, i8** %endpos, align 8
  %676 = load i8*, i8** %strbeg, align 8
  store i8* %676, i8** %startpos, align 8
  %677 = load i8*, i8** %s, align 8
  store i8* %677, i8** %t, align 8
  %678 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  call void @S_cache_re(%struct.regexp* %678)
  %679 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %680 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %regstclass1152 = getelementptr inbounds %struct.regexp, %struct.regexp* %680, i32 0, i32 2
  %681 = load %struct.regnode*, %struct.regnode** %regstclass1152, align 8
  %682 = load i8*, i8** %s, align 8
  %683 = load i8*, i8** %endpos, align 8
  %684 = load i8*, i8** %startpos, align 8
  %call1153 = call i8* @S_find_byclass(%struct.regexp* %679, %struct.regnode* %681, i8* %682, i8* %683, i8* %684, i32 1)
  store i8* %call1153, i8** %s, align 8
  %685 = load i8*, i8** %s, align 8
  %tobool1154 = icmp ne i8* %685, null
  br i1 %tobool1154, label %if.end.1250, label %if.then.1155

if.then.1155:                                     ; preds = %cond.end.1150
  %686 = load i8*, i8** %endpos, align 8
  %687 = load i8*, i8** %strend.addr, align 8
  %cmp1156 = icmp eq i8* %686, %687
  br i1 %cmp1156, label %if.then.1158, label %if.end.1159

if.then.1158:                                     ; preds = %if.then.1155
  br label %fail

if.end.1159:                                      ; preds = %if.then.1155
  %688 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch1160 = getelementptr inbounds %struct.regexp, %struct.regexp* %688, i32 0, i32 15
  %689 = load i32, i32* %reganch1160, align 4
  %and1161 = and i32 %689, 15
  %tobool1162 = icmp ne i32 %and1161, 0
  br i1 %tobool1162, label %land.lhs.true.1163, label %if.end.1166

land.lhs.true.1163:                               ; preds = %if.end.1159
  %690 = load i32, i32* %ml_anch, align 4
  %tobool1164 = icmp ne i32 %690, 0
  br i1 %tobool1164, label %if.end.1166, label %if.then.1165

if.then.1165:                                     ; preds = %land.lhs.true.1163
  br label %fail

if.end.1166:                                      ; preds = %land.lhs.true.1163, %if.end.1159
  %691 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1167 = getelementptr inbounds %struct.regexp, %struct.regexp* %691, i32 0, i32 3
  %692 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1167, align 8
  %data1168 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %692, i32 0, i32 0
  %arrayidx1169 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data1168, i32 0, i64 0
  %substr1170 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx1169, i32 0, i32 2
  %693 = load %struct.sv*, %struct.sv** %substr1170, align 8
  %tobool1171 = icmp ne %struct.sv* %693, null
  br i1 %tobool1171, label %if.then.1178, label %lor.lhs.false.1172

lor.lhs.false.1172:                               ; preds = %if.end.1166
  %694 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1173 = getelementptr inbounds %struct.regexp, %struct.regexp* %694, i32 0, i32 3
  %695 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1173, align 8
  %data1174 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %695, i32 0, i32 0
  %arrayidx1175 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data1174, i32 0, i64 0
  %utf8_substr1176 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx1175, i32 0, i32 3
  %696 = load %struct.sv*, %struct.sv** %utf8_substr1176, align 8
  %tobool1177 = icmp ne %struct.sv* %696, null
  br i1 %tobool1177, label %if.then.1178, label %if.end.1224

if.then.1178:                                     ; preds = %lor.lhs.false.1172, %if.end.1166
  %697 = load i32, i32* %do_utf8, align 4
  %tobool1179 = icmp ne i32 %697, 0
  br i1 %tobool1179, label %cond.true.1180, label %cond.false.1185

cond.true.1180:                                   ; preds = %if.then.1178
  %698 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1181 = getelementptr inbounds %struct.regexp, %struct.regexp* %698, i32 0, i32 3
  %699 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1181, align 8
  %data1182 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %699, i32 0, i32 0
  %arrayidx1183 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data1182, i32 0, i64 0
  %utf8_substr1184 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx1183, i32 0, i32 3
  %700 = load %struct.sv*, %struct.sv** %utf8_substr1184, align 8
  br label %cond.end.1190

cond.false.1185:                                  ; preds = %if.then.1178
  %701 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1186 = getelementptr inbounds %struct.regexp, %struct.regexp* %701, i32 0, i32 3
  %702 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1186, align 8
  %data1187 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %702, i32 0, i32 0
  %arrayidx1188 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data1187, i32 0, i64 0
  %substr1189 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx1188, i32 0, i32 2
  %703 = load %struct.sv*, %struct.sv** %substr1189, align 8
  br label %cond.end.1190

cond.end.1190:                                    ; preds = %cond.false.1185, %cond.true.1180
  %cond1191 = phi %struct.sv* [ %700, %cond.true.1180 ], [ %703, %cond.false.1185 ]
  %704 = load %struct.sv*, %struct.sv** %check, align 8
  %cmp1192 = icmp eq %struct.sv* %cond1191, %704
  br i1 %cmp1192, label %if.then.1194, label %if.end.1214

if.then.1194:                                     ; preds = %cond.end.1190
  br label %hop_and_restart

hop_and_restart:                                  ; preds = %retry_floating_check, %if.then.1194
  %705 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv1195 = sext i8 %705 to i32
  %tobool1196 = icmp ne i32 %conv1195, 0
  br i1 %tobool1196, label %cond.true.1197, label %cond.false.1199

cond.true.1197:                                   ; preds = %hop_and_restart
  %706 = load i8*, i8** %t, align 8
  %707 = load i8*, i8** %strend.addr, align 8
  %call1198 = call i8* @S_reghop3(i8* %706, i32 1, i8* %707)
  br label %cond.end.1201

cond.false.1199:                                  ; preds = %hop_and_restart
  %708 = load i8*, i8** %t, align 8
  %add.ptr1200 = getelementptr inbounds i8, i8* %708, i64 1
  br label %cond.end.1201

cond.end.1201:                                    ; preds = %cond.false.1199, %cond.true.1197
  %cond1202 = phi i8* [ %call1198, %cond.true.1197 ], [ %add.ptr1200, %cond.false.1199 ]
  store i8* %cond1202, i8** %s, align 8
  %709 = load i8*, i8** %s, align 8
  %710 = load i32, i32* %start_shift, align 4
  %idx.ext1203 = sext i32 %710 to i64
  %add.ptr1204 = getelementptr inbounds i8, i8* %709, i64 %idx.ext1203
  %711 = load i32, i32* %end_shift, align 4
  %idx.ext1205 = sext i32 %711 to i64
  %add.ptr1206 = getelementptr inbounds i8, i8* %add.ptr1204, i64 %idx.ext1205
  %712 = load i8*, i8** %strend.addr, align 8
  %cmp1207 = icmp ugt i8* %add.ptr1206, %712
  br i1 %cmp1207, label %if.then.1209, label %if.end.1210

if.then.1209:                                     ; preds = %cond.end.1201
  br label %fail

if.end.1210:                                      ; preds = %cond.end.1201
  %713 = load %struct.sv*, %struct.sv** %check, align 8
  %tobool1211 = icmp ne %struct.sv* %713, null
  br i1 %tobool1211, label %if.end.1213, label %if.then.1212

if.then.1212:                                     ; preds = %if.end.1210
  br label %giveup

if.end.1213:                                      ; preds = %if.end.1210
  br label %restart

if.end.1214:                                      ; preds = %cond.end.1190
  %714 = load i8*, i8** %t, align 8
  %715 = load i32, i32* %start_shift, align 4
  %idx.ext1215 = sext i32 %715 to i64
  %add.ptr1216 = getelementptr inbounds i8, i8* %714, i64 %idx.ext1215
  %716 = load i8*, i8** %check_at, align 8
  %cmp1217 = icmp uge i8* %add.ptr1216, %716
  br i1 %cmp1217, label %if.then.1219, label %if.end.1220

if.then.1219:                                     ; preds = %if.end.1214
  br label %retry_floating_check

if.end.1220:                                      ; preds = %if.end.1214
  %717 = load i8*, i8** %check_at, align 8
  store i8* %717, i8** %s, align 8
  %718 = load %struct.sv*, %struct.sv** %check, align 8
  %tobool1221 = icmp ne %struct.sv* %718, null
  br i1 %tobool1221, label %if.end.1223, label %if.then.1222

if.then.1222:                                     ; preds = %if.end.1220
  br label %giveup

if.end.1223:                                      ; preds = %if.end.1220
  br label %do_other_anchored

if.end.1224:                                      ; preds = %lor.lhs.false.1172
  %719 = load i32, i32* %ml_anch, align 4
  %tobool1225 = icmp ne i32 %719, 0
  br i1 %tobool1225, label %if.then.1226, label %if.end.1231

if.then.1226:                                     ; preds = %if.end.1224
  %720 = load i8*, i8** %t, align 8
  %add.ptr1227 = getelementptr inbounds i8, i8* %720, i64 1
  store i8* %add.ptr1227, i8** %t, align 8
  store i8* %add.ptr1227, i8** %s, align 8
  %721 = load %struct.sv*, %struct.sv** %check, align 8
  %tobool1228 = icmp ne %struct.sv* %721, null
  br i1 %tobool1228, label %if.end.1230, label %if.then.1229

if.then.1229:                                     ; preds = %if.then.1226
  br label %giveup

if.end.1230:                                      ; preds = %if.then.1226
  br label %try_at_offset

if.end.1231:                                      ; preds = %if.end.1224
  %722 = load i32, i32* %do_utf8, align 4
  %tobool1232 = icmp ne i32 %722, 0
  br i1 %tobool1232, label %cond.true.1233, label %cond.false.1239

cond.true.1233:                                   ; preds = %if.end.1231
  %723 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1234 = getelementptr inbounds %struct.regexp, %struct.regexp* %723, i32 0, i32 3
  %724 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1234, align 8
  %data1235 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %724, i32 0, i32 0
  %arrayidx1236 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data1235, i32 0, i64 1
  %utf8_substr1237 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx1236, i32 0, i32 3
  %725 = load %struct.sv*, %struct.sv** %utf8_substr1237, align 8
  %tobool1238 = icmp ne %struct.sv* %725, null
  br i1 %tobool1238, label %if.end.1246, label %if.then.1245

cond.false.1239:                                  ; preds = %if.end.1231
  %726 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1240 = getelementptr inbounds %struct.regexp, %struct.regexp* %726, i32 0, i32 3
  %727 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1240, align 8
  %data1241 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %727, i32 0, i32 0
  %arrayidx1242 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data1241, i32 0, i64 1
  %substr1243 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx1242, i32 0, i32 2
  %728 = load %struct.sv*, %struct.sv** %substr1243, align 8
  %tobool1244 = icmp ne %struct.sv* %728, null
  br i1 %tobool1244, label %if.end.1246, label %if.then.1245

if.then.1245:                                     ; preds = %cond.false.1239, %cond.true.1233
  br label %fail

if.end.1246:                                      ; preds = %cond.false.1239, %cond.true.1233
  br label %retry_floating_check

retry_floating_check:                             ; preds = %if.end.1246, %if.then.1219
  %729 = load i8*, i8** %check_at, align 8
  %730 = load i32, i32* %start_shift, align 4
  %idx.ext1247 = sext i32 %730 to i64
  %idx.neg1248 = sub i64 0, %idx.ext1247
  %add.ptr1249 = getelementptr inbounds i8, i8* %729, i64 %idx.neg1248
  store i8* %add.ptr1249, i8** %t, align 8
  br label %hop_and_restart

if.end.1250:                                      ; preds = %cond.end.1150
  %731 = load i8*, i8** %t, align 8
  %732 = load i8*, i8** %s, align 8
  %cmp1251 = icmp ne i8* %731, %732
  br i1 %cmp1251, label %if.then.1253, label %if.else.1254

if.then.1253:                                     ; preds = %if.end.1250
  br label %if.end.1255

if.else.1254:                                     ; preds = %if.end.1250
  br label %if.end.1255

if.end.1255:                                      ; preds = %if.else.1254, %if.then.1253
  br label %if.end.1256

if.end.1256:                                      ; preds = %if.end.1255, %if.end.1034
  br label %giveup

giveup:                                           ; preds = %if.end.1256, %if.then.1229, %if.then.1222, %if.then.1212
  %733 = load i8*, i8** %s, align 8
  store i8* %733, i8** %retval
  br label %return

fail_finish:                                      ; preds = %while.end, %if.then.781, %if.then.588, %if.then.375, %if.else.317, %report_neq, %if.then.147
  %734 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1257 = getelementptr inbounds %struct.regexp, %struct.regexp* %734, i32 0, i32 3
  %735 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1257, align 8
  %data1258 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %735, i32 0, i32 0
  %arrayidx1259 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data1258, i32 0, i64 2
  %substr1260 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx1259, i32 0, i32 2
  %736 = load %struct.sv*, %struct.sv** %substr1260, align 8
  %tobool1261 = icmp ne %struct.sv* %736, null
  br i1 %tobool1261, label %if.then.1268, label %lor.lhs.false.1262

lor.lhs.false.1262:                               ; preds = %fail_finish
  %737 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1263 = getelementptr inbounds %struct.regexp, %struct.regexp* %737, i32 0, i32 3
  %738 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1263, align 8
  %data1264 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %738, i32 0, i32 0
  %arrayidx1265 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data1264, i32 0, i64 2
  %utf8_substr1266 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx1265, i32 0, i32 3
  %739 = load %struct.sv*, %struct.sv** %utf8_substr1266, align 8
  %tobool1267 = icmp ne %struct.sv* %739, null
  br i1 %tobool1267, label %if.then.1268, label %if.end.1285

if.then.1268:                                     ; preds = %lor.lhs.false.1262, %fail_finish
  %740 = load i32, i32* %do_utf8, align 4
  %tobool1269 = icmp ne i32 %740, 0
  br i1 %tobool1269, label %cond.true.1270, label %cond.false.1275

cond.true.1270:                                   ; preds = %if.then.1268
  %741 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1271 = getelementptr inbounds %struct.regexp, %struct.regexp* %741, i32 0, i32 3
  %742 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1271, align 8
  %data1272 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %742, i32 0, i32 0
  %arrayidx1273 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data1272, i32 0, i64 2
  %utf8_substr1274 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx1273, i32 0, i32 3
  %743 = load %struct.sv*, %struct.sv** %utf8_substr1274, align 8
  br label %cond.end.1280

cond.false.1275:                                  ; preds = %if.then.1268
  %744 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1276 = getelementptr inbounds %struct.regexp, %struct.regexp* %744, i32 0, i32 3
  %745 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1276, align 8
  %data1277 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %745, i32 0, i32 0
  %arrayidx1278 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data1277, i32 0, i64 2
  %substr1279 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx1278, i32 0, i32 2
  %746 = load %struct.sv*, %struct.sv** %substr1279, align 8
  br label %cond.end.1280

cond.end.1280:                                    ; preds = %cond.false.1275, %cond.true.1270
  %cond1281 = phi %struct.sv* [ %743, %cond.true.1270 ], [ %746, %cond.false.1275 ]
  %sv_any1282 = getelementptr inbounds %struct.sv, %struct.sv* %cond1281, i32 0, i32 0
  %747 = load i8*, i8** %sv_any1282, align 8
  %748 = bitcast i8* %747 to %struct.xpvbm*
  %xbm_useful1283 = getelementptr inbounds %struct.xpvbm, %struct.xpvbm* %748, i32 0, i32 7
  %749 = load i32, i32* %xbm_useful1283, align 4
  %add1284 = add nsw i32 %749, 5
  store i32 %add1284, i32* %xbm_useful1283, align 4
  br label %if.end.1285

if.end.1285:                                      ; preds = %cond.end.1280, %lor.lhs.false.1262
  br label %fail

fail:                                             ; preds = %if.end.1285, %if.then.1245, %if.then.1209, %if.then.1165, %if.then.1158, %if.then.86, %if.then.58, %if.then.13
  store i8* null, i8** %retval
  br label %return

return:                                           ; preds = %fail, %giveup
  %750 = load i8*, i8** %retval
  ret i8* %750
}

; Function Attrs: nounwind uwtable
define internal void @S_to_utf8_substr(%struct.regexp* %prog) #0 {
entry:
  %prog.addr = alloca %struct.regexp*, align 8
  %sv = alloca %struct.sv*, align 8
  store %struct.regexp* %prog, %struct.regexp** %prog.addr, align 8
  %0 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs = getelementptr inbounds %struct.regexp, %struct.regexp* %0, i32 0, i32 3
  %1 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs, align 8
  %data = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %1, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data, i32 0, i64 1
  %substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx, i32 0, i32 2
  %2 = load %struct.sv*, %struct.sv** %substr, align 8
  %tobool = icmp ne %struct.sv* %2, null
  br i1 %tobool, label %land.lhs.true, label %if.end.35

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1 = getelementptr inbounds %struct.regexp, %struct.regexp* %3, i32 0, i32 3
  %4 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1, align 8
  %data2 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %4, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data2, i32 0, i64 1
  %utf8_substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx3, i32 0, i32 3
  %5 = load %struct.sv*, %struct.sv** %utf8_substr, align 8
  %tobool4 = icmp ne %struct.sv* %5, null
  br i1 %tobool4, label %if.end.35, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs5 = getelementptr inbounds %struct.regexp, %struct.regexp* %6, i32 0, i32 3
  %7 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs5, align 8
  %data6 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %7, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data6, i32 0, i64 1
  %substr8 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx7, i32 0, i32 2
  %8 = load %struct.sv*, %struct.sv** %substr8, align 8
  %call = call %struct.sv* @Perl_newSVsv(%struct.sv* %8)
  store %struct.sv* %call, %struct.sv** %sv, align 8
  %9 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs9 = getelementptr inbounds %struct.regexp, %struct.regexp* %9, i32 0, i32 3
  %10 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs9, align 8
  %data10 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %10, i32 0, i32 0
  %arrayidx11 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data10, i32 0, i64 1
  %utf8_substr12 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx11, i32 0, i32 3
  store %struct.sv* %call, %struct.sv** %utf8_substr12, align 8
  %11 = load %struct.sv*, %struct.sv** %sv, align 8
  %call13 = call i64 @Perl_sv_utf8_upgrade_flags(%struct.sv* %11, i32 2)
  %12 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs14 = getelementptr inbounds %struct.regexp, %struct.regexp* %12, i32 0, i32 3
  %13 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs14, align 8
  %data15 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %13, i32 0, i32 0
  %arrayidx16 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data15, i32 0, i64 1
  %substr17 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx16, i32 0, i32 2
  %14 = load %struct.sv*, %struct.sv** %substr17, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %14, i32 0, i32 2
  %15 = load i32, i32* %sv_flags, align 4
  %and = and i32 %15, 1073741824
  %tobool18 = icmp ne i32 %and, 0
  br i1 %tobool18, label %if.then.19, label %if.end

if.then.19:                                       ; preds = %if.then
  %16 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags20 = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 2
  %17 = load i32, i32* %sv_flags20, align 4
  %or = or i32 %17, 1073741824
  store i32 %or, i32* %sv_flags20, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.19, %if.then
  %18 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs21 = getelementptr inbounds %struct.regexp, %struct.regexp* %18, i32 0, i32 3
  %19 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs21, align 8
  %data22 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %19, i32 0, i32 0
  %arrayidx23 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data22, i32 0, i64 1
  %substr24 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx23, i32 0, i32 2
  %20 = load %struct.sv*, %struct.sv** %substr24, align 8
  %21 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs25 = getelementptr inbounds %struct.regexp, %struct.regexp* %21, i32 0, i32 3
  %22 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs25, align 8
  %data26 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %22, i32 0, i32 0
  %arrayidx27 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data26, i32 0, i64 2
  %substr28 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx27, i32 0, i32 2
  %23 = load %struct.sv*, %struct.sv** %substr28, align 8
  %cmp = icmp eq %struct.sv* %20, %23
  br i1 %cmp, label %if.then.29, label %if.end.34

if.then.29:                                       ; preds = %if.end
  %24 = load %struct.sv*, %struct.sv** %sv, align 8
  %25 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs30 = getelementptr inbounds %struct.regexp, %struct.regexp* %25, i32 0, i32 3
  %26 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs30, align 8
  %data31 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %26, i32 0, i32 0
  %arrayidx32 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data31, i32 0, i64 2
  %utf8_substr33 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx32, i32 0, i32 3
  store %struct.sv* %24, %struct.sv** %utf8_substr33, align 8
  br label %if.end.34

if.end.34:                                        ; preds = %if.then.29, %if.end
  br label %if.end.35

if.end.35:                                        ; preds = %if.end.34, %land.lhs.true, %entry
  %27 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs36 = getelementptr inbounds %struct.regexp, %struct.regexp* %27, i32 0, i32 3
  %28 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs36, align 8
  %data37 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %28, i32 0, i32 0
  %arrayidx38 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data37, i32 0, i64 0
  %substr39 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx38, i32 0, i32 2
  %29 = load %struct.sv*, %struct.sv** %substr39, align 8
  %tobool40 = icmp ne %struct.sv* %29, null
  br i1 %tobool40, label %land.lhs.true.41, label %if.end.84

land.lhs.true.41:                                 ; preds = %if.end.35
  %30 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs42 = getelementptr inbounds %struct.regexp, %struct.regexp* %30, i32 0, i32 3
  %31 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs42, align 8
  %data43 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %31, i32 0, i32 0
  %arrayidx44 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data43, i32 0, i64 0
  %utf8_substr45 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx44, i32 0, i32 3
  %32 = load %struct.sv*, %struct.sv** %utf8_substr45, align 8
  %tobool46 = icmp ne %struct.sv* %32, null
  br i1 %tobool46, label %if.end.84, label %if.then.47

if.then.47:                                       ; preds = %land.lhs.true.41
  %33 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs48 = getelementptr inbounds %struct.regexp, %struct.regexp* %33, i32 0, i32 3
  %34 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs48, align 8
  %data49 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %34, i32 0, i32 0
  %arrayidx50 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data49, i32 0, i64 0
  %substr51 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx50, i32 0, i32 2
  %35 = load %struct.sv*, %struct.sv** %substr51, align 8
  %call52 = call %struct.sv* @Perl_newSVsv(%struct.sv* %35)
  store %struct.sv* %call52, %struct.sv** %sv, align 8
  %36 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs53 = getelementptr inbounds %struct.regexp, %struct.regexp* %36, i32 0, i32 3
  %37 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs53, align 8
  %data54 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %37, i32 0, i32 0
  %arrayidx55 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data54, i32 0, i64 0
  %utf8_substr56 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx55, i32 0, i32 3
  store %struct.sv* %call52, %struct.sv** %utf8_substr56, align 8
  %38 = load %struct.sv*, %struct.sv** %sv, align 8
  %call57 = call i64 @Perl_sv_utf8_upgrade_flags(%struct.sv* %38, i32 2)
  %39 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs58 = getelementptr inbounds %struct.regexp, %struct.regexp* %39, i32 0, i32 3
  %40 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs58, align 8
  %data59 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %40, i32 0, i32 0
  %arrayidx60 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data59, i32 0, i64 0
  %substr61 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx60, i32 0, i32 2
  %41 = load %struct.sv*, %struct.sv** %substr61, align 8
  %sv_flags62 = getelementptr inbounds %struct.sv, %struct.sv* %41, i32 0, i32 2
  %42 = load i32, i32* %sv_flags62, align 4
  %and63 = and i32 %42, 1073741824
  %tobool64 = icmp ne i32 %and63, 0
  br i1 %tobool64, label %if.then.65, label %if.end.68

if.then.65:                                       ; preds = %if.then.47
  %43 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags66 = getelementptr inbounds %struct.sv, %struct.sv* %43, i32 0, i32 2
  %44 = load i32, i32* %sv_flags66, align 4
  %or67 = or i32 %44, 1073741824
  store i32 %or67, i32* %sv_flags66, align 4
  br label %if.end.68

if.end.68:                                        ; preds = %if.then.65, %if.then.47
  %45 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs69 = getelementptr inbounds %struct.regexp, %struct.regexp* %45, i32 0, i32 3
  %46 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs69, align 8
  %data70 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %46, i32 0, i32 0
  %arrayidx71 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data70, i32 0, i64 0
  %substr72 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx71, i32 0, i32 2
  %47 = load %struct.sv*, %struct.sv** %substr72, align 8
  %48 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs73 = getelementptr inbounds %struct.regexp, %struct.regexp* %48, i32 0, i32 3
  %49 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs73, align 8
  %data74 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %49, i32 0, i32 0
  %arrayidx75 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data74, i32 0, i64 2
  %substr76 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx75, i32 0, i32 2
  %50 = load %struct.sv*, %struct.sv** %substr76, align 8
  %cmp77 = icmp eq %struct.sv* %47, %50
  br i1 %cmp77, label %if.then.78, label %if.end.83

if.then.78:                                       ; preds = %if.end.68
  %51 = load %struct.sv*, %struct.sv** %sv, align 8
  %52 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs79 = getelementptr inbounds %struct.regexp, %struct.regexp* %52, i32 0, i32 3
  %53 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs79, align 8
  %data80 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %53, i32 0, i32 0
  %arrayidx81 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data80, i32 0, i64 2
  %utf8_substr82 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx81, i32 0, i32 3
  store %struct.sv* %51, %struct.sv** %utf8_substr82, align 8
  br label %if.end.83

if.end.83:                                        ; preds = %if.then.78, %if.end.68
  br label %if.end.84

if.end.84:                                        ; preds = %if.end.83, %land.lhs.true.41, %if.end.35
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @S_to_byte_substr(%struct.regexp* %prog) #0 {
entry:
  %prog.addr = alloca %struct.regexp*, align 8
  %sv = alloca %struct.sv*, align 8
  store %struct.regexp* %prog, %struct.regexp** %prog.addr, align 8
  %0 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs = getelementptr inbounds %struct.regexp, %struct.regexp* %0, i32 0, i32 3
  %1 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs, align 8
  %data = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %1, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data, i32 0, i64 1
  %utf8_substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx, i32 0, i32 3
  %2 = load %struct.sv*, %struct.sv** %utf8_substr, align 8
  %tobool = icmp ne %struct.sv* %2, null
  br i1 %tobool, label %land.lhs.true, label %if.end.42

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1 = getelementptr inbounds %struct.regexp, %struct.regexp* %3, i32 0, i32 3
  %4 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1, align 8
  %data2 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %4, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data2, i32 0, i64 1
  %substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx3, i32 0, i32 2
  %5 = load %struct.sv*, %struct.sv** %substr, align 8
  %tobool4 = icmp ne %struct.sv* %5, null
  br i1 %tobool4, label %if.end.42, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs5 = getelementptr inbounds %struct.regexp, %struct.regexp* %6, i32 0, i32 3
  %7 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs5, align 8
  %data6 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %7, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data6, i32 0, i64 1
  %utf8_substr8 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx7, i32 0, i32 3
  %8 = load %struct.sv*, %struct.sv** %utf8_substr8, align 8
  %call = call %struct.sv* @Perl_newSVsv(%struct.sv* %8)
  store %struct.sv* %call, %struct.sv** %sv, align 8
  %9 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs9 = getelementptr inbounds %struct.regexp, %struct.regexp* %9, i32 0, i32 3
  %10 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs9, align 8
  %data10 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %10, i32 0, i32 0
  %arrayidx11 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data10, i32 0, i64 1
  %substr12 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx11, i32 0, i32 2
  store %struct.sv* %call, %struct.sv** %substr12, align 8
  %11 = load %struct.sv*, %struct.sv** %sv, align 8
  %call13 = call signext i8 @Perl_sv_utf8_downgrade(%struct.sv* %11, i8 signext 1)
  %tobool14 = icmp ne i8 %call13, 0
  br i1 %tobool14, label %if.then.15, label %if.else

if.then.15:                                       ; preds = %if.then
  %12 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs16 = getelementptr inbounds %struct.regexp, %struct.regexp* %12, i32 0, i32 3
  %13 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs16, align 8
  %data17 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %13, i32 0, i32 0
  %arrayidx18 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data17, i32 0, i64 1
  %utf8_substr19 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx18, i32 0, i32 3
  %14 = load %struct.sv*, %struct.sv** %utf8_substr19, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %14, i32 0, i32 2
  %15 = load i32, i32* %sv_flags, align 4
  %and = and i32 %15, 1073741824
  %tobool20 = icmp ne i32 %and, 0
  br i1 %tobool20, label %if.then.21, label %if.end

if.then.21:                                       ; preds = %if.then.15
  %16 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags22 = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 2
  %17 = load i32, i32* %sv_flags22, align 4
  %or = or i32 %17, 1073741824
  store i32 %or, i32* %sv_flags22, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.21, %if.then.15
  br label %if.end.27

if.else:                                          ; preds = %if.then
  %18 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_free(%struct.sv* %18)
  store %struct.sv* @PL_sv_undef, %struct.sv** %sv, align 8
  %19 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs23 = getelementptr inbounds %struct.regexp, %struct.regexp* %19, i32 0, i32 3
  %20 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs23, align 8
  %data24 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %20, i32 0, i32 0
  %arrayidx25 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data24, i32 0, i64 1
  %substr26 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx25, i32 0, i32 2
  store %struct.sv* @PL_sv_undef, %struct.sv** %substr26, align 8
  br label %if.end.27

if.end.27:                                        ; preds = %if.else, %if.end
  %21 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs28 = getelementptr inbounds %struct.regexp, %struct.regexp* %21, i32 0, i32 3
  %22 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs28, align 8
  %data29 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %22, i32 0, i32 0
  %arrayidx30 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data29, i32 0, i64 1
  %utf8_substr31 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx30, i32 0, i32 3
  %23 = load %struct.sv*, %struct.sv** %utf8_substr31, align 8
  %24 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs32 = getelementptr inbounds %struct.regexp, %struct.regexp* %24, i32 0, i32 3
  %25 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs32, align 8
  %data33 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %25, i32 0, i32 0
  %arrayidx34 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data33, i32 0, i64 2
  %utf8_substr35 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx34, i32 0, i32 3
  %26 = load %struct.sv*, %struct.sv** %utf8_substr35, align 8
  %cmp = icmp eq %struct.sv* %23, %26
  br i1 %cmp, label %if.then.36, label %if.end.41

if.then.36:                                       ; preds = %if.end.27
  %27 = load %struct.sv*, %struct.sv** %sv, align 8
  %28 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs37 = getelementptr inbounds %struct.regexp, %struct.regexp* %28, i32 0, i32 3
  %29 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs37, align 8
  %data38 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %29, i32 0, i32 0
  %arrayidx39 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data38, i32 0, i64 2
  %substr40 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx39, i32 0, i32 2
  store %struct.sv* %27, %struct.sv** %substr40, align 8
  br label %if.end.41

if.end.41:                                        ; preds = %if.then.36, %if.end.27
  br label %if.end.42

if.end.42:                                        ; preds = %if.end.41, %land.lhs.true, %entry
  %30 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs43 = getelementptr inbounds %struct.regexp, %struct.regexp* %30, i32 0, i32 3
  %31 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs43, align 8
  %data44 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %31, i32 0, i32 0
  %arrayidx45 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data44, i32 0, i64 0
  %utf8_substr46 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx45, i32 0, i32 3
  %32 = load %struct.sv*, %struct.sv** %utf8_substr46, align 8
  %tobool47 = icmp ne %struct.sv* %32, null
  br i1 %tobool47, label %land.lhs.true.48, label %if.end.99

land.lhs.true.48:                                 ; preds = %if.end.42
  %33 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs49 = getelementptr inbounds %struct.regexp, %struct.regexp* %33, i32 0, i32 3
  %34 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs49, align 8
  %data50 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %34, i32 0, i32 0
  %arrayidx51 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data50, i32 0, i64 0
  %substr52 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx51, i32 0, i32 2
  %35 = load %struct.sv*, %struct.sv** %substr52, align 8
  %tobool53 = icmp ne %struct.sv* %35, null
  br i1 %tobool53, label %if.end.99, label %if.then.54

if.then.54:                                       ; preds = %land.lhs.true.48
  %36 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs55 = getelementptr inbounds %struct.regexp, %struct.regexp* %36, i32 0, i32 3
  %37 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs55, align 8
  %data56 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %37, i32 0, i32 0
  %arrayidx57 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data56, i32 0, i64 0
  %utf8_substr58 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx57, i32 0, i32 3
  %38 = load %struct.sv*, %struct.sv** %utf8_substr58, align 8
  %call59 = call %struct.sv* @Perl_newSVsv(%struct.sv* %38)
  store %struct.sv* %call59, %struct.sv** %sv, align 8
  %39 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs60 = getelementptr inbounds %struct.regexp, %struct.regexp* %39, i32 0, i32 3
  %40 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs60, align 8
  %data61 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %40, i32 0, i32 0
  %arrayidx62 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data61, i32 0, i64 0
  %substr63 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx62, i32 0, i32 2
  store %struct.sv* %call59, %struct.sv** %substr63, align 8
  %41 = load %struct.sv*, %struct.sv** %sv, align 8
  %call64 = call signext i8 @Perl_sv_utf8_downgrade(%struct.sv* %41, i8 signext 1)
  %tobool65 = icmp ne i8 %call64, 0
  br i1 %tobool65, label %if.then.66, label %if.else.78

if.then.66:                                       ; preds = %if.then.54
  %42 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs67 = getelementptr inbounds %struct.regexp, %struct.regexp* %42, i32 0, i32 3
  %43 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs67, align 8
  %data68 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %43, i32 0, i32 0
  %arrayidx69 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data68, i32 0, i64 0
  %utf8_substr70 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx69, i32 0, i32 3
  %44 = load %struct.sv*, %struct.sv** %utf8_substr70, align 8
  %sv_flags71 = getelementptr inbounds %struct.sv, %struct.sv* %44, i32 0, i32 2
  %45 = load i32, i32* %sv_flags71, align 4
  %and72 = and i32 %45, 1073741824
  %tobool73 = icmp ne i32 %and72, 0
  br i1 %tobool73, label %if.then.74, label %if.end.77

if.then.74:                                       ; preds = %if.then.66
  %46 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags75 = getelementptr inbounds %struct.sv, %struct.sv* %46, i32 0, i32 2
  %47 = load i32, i32* %sv_flags75, align 4
  %or76 = or i32 %47, 1073741824
  store i32 %or76, i32* %sv_flags75, align 4
  br label %if.end.77

if.end.77:                                        ; preds = %if.then.74, %if.then.66
  br label %if.end.83

if.else.78:                                       ; preds = %if.then.54
  %48 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_free(%struct.sv* %48)
  store %struct.sv* @PL_sv_undef, %struct.sv** %sv, align 8
  %49 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs79 = getelementptr inbounds %struct.regexp, %struct.regexp* %49, i32 0, i32 3
  %50 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs79, align 8
  %data80 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %50, i32 0, i32 0
  %arrayidx81 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data80, i32 0, i64 0
  %substr82 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx81, i32 0, i32 2
  store %struct.sv* @PL_sv_undef, %struct.sv** %substr82, align 8
  br label %if.end.83

if.end.83:                                        ; preds = %if.else.78, %if.end.77
  %51 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs84 = getelementptr inbounds %struct.regexp, %struct.regexp* %51, i32 0, i32 3
  %52 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs84, align 8
  %data85 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %52, i32 0, i32 0
  %arrayidx86 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data85, i32 0, i64 0
  %utf8_substr87 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx86, i32 0, i32 3
  %53 = load %struct.sv*, %struct.sv** %utf8_substr87, align 8
  %54 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs88 = getelementptr inbounds %struct.regexp, %struct.regexp* %54, i32 0, i32 3
  %55 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs88, align 8
  %data89 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %55, i32 0, i32 0
  %arrayidx90 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data89, i32 0, i64 2
  %utf8_substr91 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx90, i32 0, i32 3
  %56 = load %struct.sv*, %struct.sv** %utf8_substr91, align 8
  %cmp92 = icmp eq %struct.sv* %53, %56
  br i1 %cmp92, label %if.then.93, label %if.end.98

if.then.93:                                       ; preds = %if.end.83
  %57 = load %struct.sv*, %struct.sv** %sv, align 8
  %58 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs94 = getelementptr inbounds %struct.regexp, %struct.regexp* %58, i32 0, i32 3
  %59 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs94, align 8
  %data95 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %59, i32 0, i32 0
  %arrayidx96 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data95, i32 0, i64 2
  %substr97 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx96, i32 0, i32 2
  store %struct.sv* %57, %struct.sv** %substr97, align 8
  br label %if.end.98

if.end.98:                                        ; preds = %if.then.93, %if.end.83
  br label %if.end.99

if.end.99:                                        ; preds = %if.end.98, %land.lhs.true.48, %if.end.42
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @S_reghop3(i8* %s, i32 %off, i8* %lim) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %off.addr = alloca i32, align 4
  %lim.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i32 %off, i32* %off.addr, align 4
  store i8* %lim, i8** %lim.addr, align 8
  %0 = load i32, i32* %off.addr, align 4
  %cmp = icmp sge i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %1 = load i32, i32* %off.addr, align 4
  %dec = add nsw i32 %1, -1
  store i32 %dec, i32* %off.addr, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i8*, i8** %s.addr, align 8
  %3 = load i8*, i8** %lim.addr, align 8
  %cmp1 = icmp ult i8* %2, %3
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %4, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %5 = load i8*, i8** %s.addr, align 8
  %6 = load i8, i8* %5, align 1
  %idxprom = zext i8 %6 to i64
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom
  %7 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %7 to i32
  %8 = load i8*, i8** %s.addr, align 8
  %idx.ext = sext i32 %conv to i64
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
  store i8* %add.ptr, i8** %s.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  br label %if.end.29

if.else:                                          ; preds = %entry
  br label %while.cond.2

while.cond.2:                                     ; preds = %if.end.27, %if.else
  %9 = load i32, i32* %off.addr, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %off.addr, align 4
  %tobool3 = icmp ne i32 %9, 0
  br i1 %tobool3, label %while.body.4, label %while.end.28

while.body.4:                                     ; preds = %while.cond.2
  %10 = load i8*, i8** %s.addr, align 8
  %11 = load i8*, i8** %lim.addr, align 8
  %cmp5 = icmp ugt i8* %10, %11
  br i1 %cmp5, label %if.then.7, label %if.end.27

if.then.7:                                        ; preds = %while.body.4
  %12 = load i8*, i8** %s.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 -1
  store i8* %incdec.ptr, i8** %s.addr, align 8
  %13 = load i8*, i8** %s.addr, align 8
  %14 = load i8, i8* %13, align 1
  %conv8 = zext i8 %14 to i32
  %and = and i32 %conv8, 128
  %tobool9 = icmp ne i32 %and, 0
  br i1 %tobool9, label %if.then.10, label %if.end

if.then.10:                                       ; preds = %if.then.7
  br label %while.cond.11

while.cond.11:                                    ; preds = %while.body.24, %if.then.10
  %15 = load i8*, i8** %s.addr, align 8
  %16 = load i8*, i8** %lim.addr, align 8
  %cmp12 = icmp ugt i8* %15, %16
  br i1 %cmp12, label %land.rhs.14, label %land.end.23

land.rhs.14:                                      ; preds = %while.cond.11
  %17 = load i8*, i8** %s.addr, align 8
  %18 = load i8, i8* %17, align 1
  %conv15 = zext i8 %18 to i32
  %cmp16 = icmp sge i32 %conv15, 128
  br i1 %cmp16, label %land.rhs.18, label %land.end.22

land.rhs.18:                                      ; preds = %land.rhs.14
  %19 = load i8*, i8** %s.addr, align 8
  %20 = load i8, i8* %19, align 1
  %conv19 = zext i8 %20 to i32
  %cmp20 = icmp sle i32 %conv19, 191
  br label %land.end.22

land.end.22:                                      ; preds = %land.rhs.18, %land.rhs.14
  %21 = phi i1 [ false, %land.rhs.14 ], [ %cmp20, %land.rhs.18 ]
  br label %land.end.23

land.end.23:                                      ; preds = %land.end.22, %while.cond.11
  %22 = phi i1 [ false, %while.cond.11 ], [ %21, %land.end.22 ]
  br i1 %22, label %while.body.24, label %while.end.26

while.body.24:                                    ; preds = %land.end.23
  %23 = load i8*, i8** %s.addr, align 8
  %incdec.ptr25 = getelementptr inbounds i8, i8* %23, i32 -1
  store i8* %incdec.ptr25, i8** %s.addr, align 8
  br label %while.cond.11

while.end.26:                                     ; preds = %land.end.23
  br label %if.end

if.end:                                           ; preds = %while.end.26, %if.then.7
  br label %if.end.27

if.end.27:                                        ; preds = %if.end, %while.body.4
  br label %while.cond.2

while.end.28:                                     ; preds = %while.cond.2
  br label %if.end.29

if.end.29:                                        ; preds = %while.end.28, %while.end
  %24 = load i8*, i8** %s.addr, align 8
  ret i8* %24
}

declare i32 @memcmp(i8*, i8*, i64) #1

declare i64 @Perl_sv_len_utf8(%struct.sv*) #1

declare i64 @Perl_utf8_distance(i8*, i8*) #1

declare i8* @Perl_screaminstr(%struct.sv*, %struct.sv*, i32, i32, i32*, i32) #1

declare i8* @Perl_fbm_instr(i8*, i8*, %struct.sv*, i32) #1

; Function Attrs: nounwind uwtable
define internal i8* @S_reghopmaybe3(i8* %s, i32 %off, i8* %lim) #0 {
entry:
  %retval = alloca i8*, align 8
  %s.addr = alloca i8*, align 8
  %off.addr = alloca i32, align 4
  %lim.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i32 %off, i32* %off.addr, align 4
  store i8* %lim, i8** %lim.addr, align 8
  %0 = load i32, i32* %off.addr, align 4
  %cmp = icmp sge i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %1 = load i32, i32* %off.addr, align 4
  %dec = add nsw i32 %1, -1
  store i32 %dec, i32* %off.addr, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i8*, i8** %s.addr, align 8
  %3 = load i8*, i8** %lim.addr, align 8
  %cmp1 = icmp ult i8* %2, %3
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %4, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %5 = load i8*, i8** %s.addr, align 8
  %6 = load i8, i8* %5, align 1
  %idxprom = zext i8 %6 to i64
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom
  %7 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %7 to i32
  %8 = load i8*, i8** %s.addr, align 8
  %idx.ext = sext i32 %conv to i64
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
  store i8* %add.ptr, i8** %s.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %9 = load i32, i32* %off.addr, align 4
  %cmp2 = icmp sge i32 %9, 0
  br i1 %cmp2, label %if.then.4, label %if.end

if.then.4:                                        ; preds = %while.end
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %while.end
  br label %if.end.38

if.else:                                          ; preds = %entry
  br label %while.cond.5

while.cond.5:                                     ; preds = %if.end.32, %if.else
  %10 = load i32, i32* %off.addr, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %off.addr, align 4
  %tobool6 = icmp ne i32 %10, 0
  br i1 %tobool6, label %while.body.7, label %while.end.33

while.body.7:                                     ; preds = %while.cond.5
  %11 = load i8*, i8** %s.addr, align 8
  %12 = load i8*, i8** %lim.addr, align 8
  %cmp8 = icmp ugt i8* %11, %12
  br i1 %cmp8, label %if.then.10, label %if.else.31

if.then.10:                                       ; preds = %while.body.7
  %13 = load i8*, i8** %s.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %13, i32 -1
  store i8* %incdec.ptr, i8** %s.addr, align 8
  %14 = load i8*, i8** %s.addr, align 8
  %15 = load i8, i8* %14, align 1
  %conv11 = zext i8 %15 to i32
  %and = and i32 %conv11, 128
  %tobool12 = icmp ne i32 %and, 0
  br i1 %tobool12, label %if.then.13, label %if.end.30

if.then.13:                                       ; preds = %if.then.10
  br label %while.cond.14

while.cond.14:                                    ; preds = %while.body.27, %if.then.13
  %16 = load i8*, i8** %s.addr, align 8
  %17 = load i8*, i8** %lim.addr, align 8
  %cmp15 = icmp ugt i8* %16, %17
  br i1 %cmp15, label %land.rhs.17, label %land.end.26

land.rhs.17:                                      ; preds = %while.cond.14
  %18 = load i8*, i8** %s.addr, align 8
  %19 = load i8, i8* %18, align 1
  %conv18 = zext i8 %19 to i32
  %cmp19 = icmp sge i32 %conv18, 128
  br i1 %cmp19, label %land.rhs.21, label %land.end.25

land.rhs.21:                                      ; preds = %land.rhs.17
  %20 = load i8*, i8** %s.addr, align 8
  %21 = load i8, i8* %20, align 1
  %conv22 = zext i8 %21 to i32
  %cmp23 = icmp sle i32 %conv22, 191
  br label %land.end.25

land.end.25:                                      ; preds = %land.rhs.21, %land.rhs.17
  %22 = phi i1 [ false, %land.rhs.17 ], [ %cmp23, %land.rhs.21 ]
  br label %land.end.26

land.end.26:                                      ; preds = %land.end.25, %while.cond.14
  %23 = phi i1 [ false, %while.cond.14 ], [ %22, %land.end.25 ]
  br i1 %23, label %while.body.27, label %while.end.29

while.body.27:                                    ; preds = %land.end.26
  %24 = load i8*, i8** %s.addr, align 8
  %incdec.ptr28 = getelementptr inbounds i8, i8* %24, i32 -1
  store i8* %incdec.ptr28, i8** %s.addr, align 8
  br label %while.cond.14

while.end.29:                                     ; preds = %land.end.26
  br label %if.end.30

if.end.30:                                        ; preds = %while.end.29, %if.then.10
  br label %if.end.32

if.else.31:                                       ; preds = %while.body.7
  br label %while.end.33

if.end.32:                                        ; preds = %if.end.30
  br label %while.cond.5

while.end.33:                                     ; preds = %if.else.31, %while.cond.5
  %25 = load i32, i32* %off.addr, align 4
  %cmp34 = icmp sle i32 %25, 0
  br i1 %cmp34, label %if.then.36, label %if.end.37

if.then.36:                                       ; preds = %while.end.33
  store i8* null, i8** %retval
  br label %return

if.end.37:                                        ; preds = %while.end.33
  br label %if.end.38

if.end.38:                                        ; preds = %if.end.37, %if.end
  %26 = load i8*, i8** %s.addr, align 8
  store i8* %26, i8** %retval
  br label %return

return:                                           ; preds = %if.end.38, %if.then.36, %if.then.4
  %27 = load i8*, i8** %retval
  ret i8* %27
}

declare void @Perl_sv_free(%struct.sv*) #1

; Function Attrs: nounwind uwtable
define internal void @S_cache_re(%struct.regexp* %prog) #0 {
entry:
  %prog.addr = alloca %struct.regexp*, align 8
  store %struct.regexp* %prog, %struct.regexp** %prog.addr, align 8
  %0 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %precomp = getelementptr inbounds %struct.regexp, %struct.regexp* %0, i32 0, i32 4
  %1 = load i8*, i8** %precomp, align 8
  store i8* %1, i8** @PL_regprecomp, align 8
  %2 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %nparens = getelementptr inbounds %struct.regexp, %struct.regexp* %2, i32 0, i32 12
  %3 = load i32, i32* %nparens, align 4
  store i32 %3, i32* @PL_regnpar, align 4
  %4 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %data = getelementptr inbounds %struct.regexp, %struct.regexp* %4, i32 0, i32 5
  %5 = load %struct.reg_data*, %struct.reg_data** %data, align 8
  store %struct.reg_data* %5, %struct.reg_data** @PL_regdata, align 8
  %6 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  store %struct.regexp* %6, %struct.regexp** @PL_reg_re, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @S_find_byclass(%struct.regexp* %prog, %struct.regnode* %c, i8* %s, i8* %strend, i8* %startpos, i32 %norun) #0 {
entry:
  %retval = alloca i8*, align 8
  %prog.addr = alloca %struct.regexp*, align 8
  %c.addr = alloca %struct.regnode*, align 8
  %s.addr = alloca i8*, align 8
  %strend.addr = alloca i8*, align 8
  %startpos.addr = alloca i8*, align 8
  %norun.addr = alloca i32, align 4
  %doevery = alloca i32, align 4
  %m = alloca i8*, align 8
  %ln = alloca i64, align 8
  %lnc = alloca i64, align 8
  %uskip = alloca i64, align 8
  %c1 = alloca i32, align 4
  %c2 = alloca i32, align 4
  %e = alloca i8*, align 8
  %tmp = alloca i32, align 4
  %do_utf8 = alloca i8, align 1
  %skip = alloca i64, align 8
  %ulen1 = alloca i64, align 8
  %ulen2 = alloca i64, align 8
  %sm = alloca i8*, align 8
  %tmpbuf1 = alloca [7 x i8], align 1
  %tmpbuf2 = alloca [7 x i8], align 1
  %c282 = alloca i64, align 8
  %f = alloca i64, align 8
  %tmpbuf = alloca [14 x i8], align 1
  %foldbuf = alloca [7 x i8], align 1
  %len = alloca i64, align 8
  %foldlen = alloca i64, align 8
  %r = alloca i8*, align 8
  %r839 = alloca i8*, align 8
  store %struct.regexp* %prog, %struct.regexp** %prog.addr, align 8
  store %struct.regnode* %c, %struct.regnode** %c.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  store i8* %strend, i8** %strend.addr, align 8
  store i8* %startpos, i8** %startpos.addr, align 8
  store i32 %norun, i32* %norun.addr, align 4
  %0 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch = getelementptr inbounds %struct.regexp, %struct.regexp* %0, i32 0, i32 15
  %1 = load i32, i32* %reganch, align 4
  %and = and i32 %1, 16
  %cmp = icmp eq i32 %and, 0
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %doevery, align 4
  store i32 1, i32* %tmp, align 4
  %2 = load i8, i8* @PL_reg_match_utf8, align 1
  store i8 %2, i8* %do_utf8, align 1
  %3 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %type = getelementptr inbounds %struct.regnode, %struct.regnode* %3, i32 0, i32 1
  %4 = load i8, i8* %type, align 1
  %conv2 = zext i8 %4 to i32
  switch i32 %conv2, label %sw.default [
    i32 17, label %sw.bb
    i32 16, label %sw.bb.143
    i32 34, label %sw.bb.158
    i32 35, label %sw.bb.250
    i32 10, label %sw.bb.561
    i32 9, label %sw.bb.562
    i32 12, label %sw.bb.829
    i32 11, label %sw.bb.831
    i32 18, label %sw.bb.1108
    i32 19, label %sw.bb.1186
    i32 20, label %sw.bb.1274
    i32 21, label %sw.bb.1352
    i32 22, label %sw.bb.1440
    i32 23, label %sw.bb.1514
    i32 24, label %sw.bb.1598
    i32 25, label %sw.bb.1672
    i32 26, label %sw.bb.1756
    i32 27, label %sw.bb.1814
    i32 28, label %sw.bb.1894
    i32 29, label %sw.bb.1952
  ]

sw.bb:                                            ; preds = %entry
  %5 = load i8, i8* %do_utf8, align 1
  %tobool = icmp ne i8 %5, 0
  br i1 %tobool, label %if.then, label %if.else.42

if.then:                                          ; preds = %sw.bb
  br label %while.cond

while.cond:                                       ; preds = %if.end.40, %if.then
  %6 = load i8*, i8** %s.addr, align 8
  %7 = load i8*, i8** %s.addr, align 8
  %8 = load i8, i8* %7, align 1
  %idxprom = zext i8 %8 to i64
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom
  %9 = load i8, i8* %arrayidx, align 1
  %conv3 = zext i8 %9 to i64
  store i64 %conv3, i64* %uskip, align 8
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %conv3
  %10 = load i8*, i8** %strend.addr, align 8
  %cmp4 = icmp ule i8* %add.ptr, %10
  br i1 %cmp4, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %11 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags = getelementptr inbounds %struct.regnode, %struct.regnode* %11, i32 0, i32 0
  %12 = load i8, i8* %flags, align 1
  %conv6 = zext i8 %12 to i32
  %and7 = and i32 %conv6, 32
  %tobool8 = icmp ne i32 %and7, 0
  br i1 %tobool8, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body
  %13 = load i8*, i8** %s.addr, align 8
  %arrayidx9 = getelementptr inbounds i8, i8* %13, i64 0
  %14 = load i8, i8* %arrayidx9, align 1
  %conv10 = zext i8 %14 to i64
  %cmp11 = icmp ult i64 %conv10, 128
  br i1 %cmp11, label %cond.false, label %cond.true

cond.true:                                        ; preds = %lor.lhs.false, %while.body
  %15 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %16 = load i8*, i8** %s.addr, align 8
  %17 = load i8, i8* %do_utf8, align 1
  %call = call signext i8 @S_reginclass(%struct.regnode* %15, i8* %16, i64* null, i8 signext %17)
  %conv13 = sext i8 %call to i32
  %tobool14 = icmp ne i32 %conv13, 0
  br i1 %tobool14, label %if.then.32, label %if.else.39

cond.false:                                       ; preds = %lor.lhs.false
  %18 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags15 = getelementptr inbounds %struct.regnode, %struct.regnode* %18, i32 0, i32 0
  %19 = load i8, i8* %flags15, align 1
  %conv16 = zext i8 %19 to i32
  %tobool17 = icmp ne i32 %conv16, 0
  br i1 %tobool17, label %cond.true.18, label %cond.false.22

cond.true.18:                                     ; preds = %cond.false
  %20 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %21 = load i8*, i8** %s.addr, align 8
  %call19 = call signext i8 @S_reginclass(%struct.regnode* %20, i8* %21, i64* null, i8 signext 0)
  %conv20 = sext i8 %call19 to i32
  %tobool21 = icmp ne i32 %conv20, 0
  br i1 %tobool21, label %if.then.32, label %if.else.39

cond.false.22:                                    ; preds = %cond.false
  %22 = load i8*, i8** %s.addr, align 8
  %23 = load i8, i8* %22, align 1
  %conv23 = zext i8 %23 to i32
  %shr = ashr i32 %conv23, 3
  %and24 = and i32 %shr, 31
  %idxprom25 = sext i32 %and24 to i64
  %24 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %25 = bitcast %struct.regnode* %24 to %struct.regnode_charclass*
  %bitmap = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %25, i32 0, i32 4
  %arrayidx26 = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap, i32 0, i64 %idxprom25
  %26 = load i8, i8* %arrayidx26, align 1
  %conv27 = sext i8 %26 to i32
  %27 = load i8*, i8** %s.addr, align 8
  %28 = load i8, i8* %27, align 1
  %conv28 = zext i8 %28 to i32
  %and29 = and i32 %conv28, 7
  %shl = shl i32 1, %and29
  %and30 = and i32 %conv27, %shl
  %tobool31 = icmp ne i32 %and30, 0
  br i1 %tobool31, label %if.then.32, label %if.else.39

if.then.32:                                       ; preds = %cond.false.22, %cond.true.18, %cond.true
  %29 = load i32, i32* %tmp, align 4
  %tobool33 = icmp ne i32 %29, 0
  br i1 %tobool33, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then.32
  %30 = load i32, i32* %norun.addr, align 4
  %tobool34 = icmp ne i32 %30, 0
  br i1 %tobool34, label %if.then.38, label %lor.lhs.false.35

lor.lhs.false.35:                                 ; preds = %land.lhs.true
  %31 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %32 = load i8*, i8** %s.addr, align 8
  %call36 = call i32 @S_regtry(%struct.regexp* %31, i8* %32)
  %tobool37 = icmp ne i32 %call36, 0
  br i1 %tobool37, label %if.then.38, label %if.else

if.then.38:                                       ; preds = %lor.lhs.false.35, %land.lhs.true
  br label %got_it

if.else:                                          ; preds = %lor.lhs.false.35, %if.then.32
  %33 = load i32, i32* %doevery, align 4
  store i32 %33, i32* %tmp, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %if.end.40

if.else.39:                                       ; preds = %cond.false.22, %cond.true.18, %cond.true
  store i32 1, i32* %tmp, align 4
  br label %if.end.40

if.end.40:                                        ; preds = %if.else.39, %if.end
  %34 = load i64, i64* %uskip, align 8
  %35 = load i8*, i8** %s.addr, align 8
  %add.ptr41 = getelementptr inbounds i8, i8* %35, i64 %34
  store i8* %add.ptr41, i8** %s.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end.142

if.else.42:                                       ; preds = %sw.bb
  br label %while.cond.43

while.cond.43:                                    ; preds = %if.end.139, %if.else.42
  %36 = load i8*, i8** %s.addr, align 8
  %37 = load i8*, i8** %strend.addr, align 8
  %cmp44 = icmp ult i8* %36, %37
  br i1 %cmp44, label %while.body.46, label %while.end.141

while.body.46:                                    ; preds = %while.cond.43
  store i64 1, i64* %skip, align 8
  %38 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags48 = getelementptr inbounds %struct.regnode, %struct.regnode* %38, i32 0, i32 0
  %39 = load i8, i8* %flags48, align 1
  %conv49 = zext i8 %39 to i32
  %tobool50 = icmp ne i32 %conv49, 0
  br i1 %tobool50, label %cond.true.51, label %cond.false.55

cond.true.51:                                     ; preds = %while.body.46
  %40 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %41 = load i8*, i8** %s.addr, align 8
  %call52 = call signext i8 @S_reginclass(%struct.regnode* %40, i8* %41, i64* null, i8 signext 0)
  %conv53 = sext i8 %call52 to i32
  %tobool54 = icmp ne i32 %conv53, 0
  br i1 %tobool54, label %if.then.128, label %lor.lhs.false.68

cond.false.55:                                    ; preds = %while.body.46
  %42 = load i8*, i8** %s.addr, align 8
  %43 = load i8, i8* %42, align 1
  %conv56 = zext i8 %43 to i32
  %shr57 = ashr i32 %conv56, 3
  %and58 = and i32 %shr57, 31
  %idxprom59 = sext i32 %and58 to i64
  %44 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %45 = bitcast %struct.regnode* %44 to %struct.regnode_charclass*
  %bitmap60 = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %45, i32 0, i32 4
  %arrayidx61 = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap60, i32 0, i64 %idxprom59
  %46 = load i8, i8* %arrayidx61, align 1
  %conv62 = sext i8 %46 to i32
  %47 = load i8*, i8** %s.addr, align 8
  %48 = load i8, i8* %47, align 1
  %conv63 = zext i8 %48 to i32
  %and64 = and i32 %conv63, 7
  %shl65 = shl i32 1, %and64
  %and66 = and i32 %conv62, %shl65
  %tobool67 = icmp ne i32 %and66, 0
  br i1 %tobool67, label %if.then.128, label %lor.lhs.false.68

lor.lhs.false.68:                                 ; preds = %cond.false.55, %cond.true.51
  %49 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %50 = bitcast %struct.regnode* %49 to %struct.regnode_charclass*
  %bitmap69 = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %50, i32 0, i32 4
  %arrayidx70 = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap69, i32 0, i64 27
  %51 = load i8, i8* %arrayidx70, align 1
  %conv71 = sext i8 %51 to i32
  %and72 = and i32 %conv71, 128
  %tobool73 = icmp ne i32 %and72, 0
  br i1 %tobool73, label %land.lhs.true.74, label %if.else.138

land.lhs.true.74:                                 ; preds = %lor.lhs.false.68
  %52 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags75 = getelementptr inbounds %struct.regnode, %struct.regnode* %52, i32 0, i32 0
  %53 = load i8, i8* %flags75, align 1
  %conv76 = zext i8 %53 to i32
  %and77 = and i32 %conv76, 32
  %tobool78 = icmp ne i32 %and77, 0
  br i1 %tobool78, label %land.lhs.true.79, label %if.else.138

land.lhs.true.79:                                 ; preds = %land.lhs.true.74
  %54 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags80 = getelementptr inbounds %struct.regnode, %struct.regnode* %54, i32 0, i32 0
  %55 = load i8, i8* %flags80, align 1
  %conv81 = zext i8 %55 to i32
  %and82 = and i32 %conv81, 2
  %tobool83 = icmp ne i32 %and82, 0
  br i1 %tobool83, label %land.lhs.true.84, label %if.else.138

land.lhs.true.84:                                 ; preds = %land.lhs.true.79
  %56 = load i8*, i8** %strend.addr, align 8
  %57 = load i8*, i8** %s.addr, align 8
  %add.ptr85 = getelementptr inbounds i8, i8* %57, i64 1
  %cmp86 = icmp ugt i8* %56, %add.ptr85
  br i1 %cmp86, label %land.lhs.true.88, label %if.else.138

land.lhs.true.88:                                 ; preds = %land.lhs.true.84
  %58 = load i8*, i8** %s.addr, align 8
  %arrayidx89 = getelementptr inbounds i8, i8* %58, i64 0
  %59 = load i8, i8* %arrayidx89, align 1
  %conv90 = sext i8 %59 to i32
  %cmp91 = icmp sge i32 %conv90, 65
  br i1 %cmp91, label %land.lhs.true.93, label %cond.false.101

land.lhs.true.93:                                 ; preds = %land.lhs.true.88
  %60 = load i8*, i8** %s.addr, align 8
  %arrayidx94 = getelementptr inbounds i8, i8* %60, i64 0
  %61 = load i8, i8* %arrayidx94, align 1
  %conv95 = sext i8 %61 to i32
  %cmp96 = icmp sle i32 %conv95, 90
  br i1 %cmp96, label %cond.true.98, label %cond.false.101

cond.true.98:                                     ; preds = %land.lhs.true.93
  %62 = load i8*, i8** %s.addr, align 8
  %arrayidx99 = getelementptr inbounds i8, i8* %62, i64 0
  %63 = load i8, i8* %arrayidx99, align 1
  %conv100 = sext i8 %63 to i32
  %add = add nsw i32 %conv100, 32
  br label %cond.end

cond.false.101:                                   ; preds = %land.lhs.true.93, %land.lhs.true.88
  %64 = load i8*, i8** %s.addr, align 8
  %arrayidx102 = getelementptr inbounds i8, i8* %64, i64 0
  %65 = load i8, i8* %arrayidx102, align 1
  %conv103 = sext i8 %65 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false.101, %cond.true.98
  %cond = phi i32 [ %add, %cond.true.98 ], [ %conv103, %cond.false.101 ]
  %cmp104 = icmp eq i32 %cond, 115
  br i1 %cmp104, label %land.lhs.true.106, label %if.else.138

land.lhs.true.106:                                ; preds = %cond.end
  %66 = load i8*, i8** %s.addr, align 8
  %arrayidx107 = getelementptr inbounds i8, i8* %66, i64 1
  %67 = load i8, i8* %arrayidx107, align 1
  %conv108 = sext i8 %67 to i32
  %cmp109 = icmp sge i32 %conv108, 65
  br i1 %cmp109, label %land.lhs.true.111, label %cond.false.120

land.lhs.true.111:                                ; preds = %land.lhs.true.106
  %68 = load i8*, i8** %s.addr, align 8
  %arrayidx112 = getelementptr inbounds i8, i8* %68, i64 1
  %69 = load i8, i8* %arrayidx112, align 1
  %conv113 = sext i8 %69 to i32
  %cmp114 = icmp sle i32 %conv113, 90
  br i1 %cmp114, label %cond.true.116, label %cond.false.120

cond.true.116:                                    ; preds = %land.lhs.true.111
  %70 = load i8*, i8** %s.addr, align 8
  %arrayidx117 = getelementptr inbounds i8, i8* %70, i64 1
  %71 = load i8, i8* %arrayidx117, align 1
  %conv118 = sext i8 %71 to i32
  %add119 = add nsw i32 %conv118, 32
  br label %cond.end.123

cond.false.120:                                   ; preds = %land.lhs.true.111, %land.lhs.true.106
  %72 = load i8*, i8** %s.addr, align 8
  %arrayidx121 = getelementptr inbounds i8, i8* %72, i64 1
  %73 = load i8, i8* %arrayidx121, align 1
  %conv122 = sext i8 %73 to i32
  br label %cond.end.123

cond.end.123:                                     ; preds = %cond.false.120, %cond.true.116
  %cond124 = phi i32 [ %add119, %cond.true.116 ], [ %conv122, %cond.false.120 ]
  %cmp125 = icmp eq i32 %cond124, 115
  br i1 %cmp125, label %land.lhs.true.127, label %if.else.138

land.lhs.true.127:                                ; preds = %cond.end.123
  store i64 2, i64* %skip, align 8
  br i1 true, label %if.then.128, label %if.else.138

if.then.128:                                      ; preds = %land.lhs.true.127, %cond.false.55, %cond.true.51
  %74 = load i32, i32* %tmp, align 4
  %tobool129 = icmp ne i32 %74, 0
  br i1 %tobool129, label %land.lhs.true.130, label %if.else.136

land.lhs.true.130:                                ; preds = %if.then.128
  %75 = load i32, i32* %norun.addr, align 4
  %tobool131 = icmp ne i32 %75, 0
  br i1 %tobool131, label %if.then.135, label %lor.lhs.false.132

lor.lhs.false.132:                                ; preds = %land.lhs.true.130
  %76 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %77 = load i8*, i8** %s.addr, align 8
  %call133 = call i32 @S_regtry(%struct.regexp* %76, i8* %77)
  %tobool134 = icmp ne i32 %call133, 0
  br i1 %tobool134, label %if.then.135, label %if.else.136

if.then.135:                                      ; preds = %lor.lhs.false.132, %land.lhs.true.130
  br label %got_it

if.else.136:                                      ; preds = %lor.lhs.false.132, %if.then.128
  %78 = load i32, i32* %doevery, align 4
  store i32 %78, i32* %tmp, align 4
  br label %if.end.137

if.end.137:                                       ; preds = %if.else.136
  br label %if.end.139

if.else.138:                                      ; preds = %land.lhs.true.127, %cond.end.123, %cond.end, %land.lhs.true.84, %land.lhs.true.79, %land.lhs.true.74, %lor.lhs.false.68
  store i32 1, i32* %tmp, align 4
  br label %if.end.139

if.end.139:                                       ; preds = %if.else.138, %if.end.137
  %79 = load i64, i64* %skip, align 8
  %80 = load i8*, i8** %s.addr, align 8
  %add.ptr140 = getelementptr inbounds i8, i8* %80, i64 %79
  store i8* %add.ptr140, i8** %s.addr, align 8
  br label %while.cond.43

while.end.141:                                    ; preds = %while.cond.43
  br label %if.end.142

if.end.142:                                       ; preds = %while.end.141, %while.end
  br label %sw.epilog

sw.bb.143:                                        ; preds = %entry
  br label %while.cond.144

while.cond.144:                                   ; preds = %if.end.156, %sw.bb.143
  %81 = load i8*, i8** %s.addr, align 8
  %82 = load i8*, i8** %strend.addr, align 8
  %cmp145 = icmp ult i8* %81, %82
  br i1 %cmp145, label %while.body.147, label %while.end.157

while.body.147:                                   ; preds = %while.cond.144
  %83 = load i32, i32* %tmp, align 4
  %tobool148 = icmp ne i32 %83, 0
  br i1 %tobool148, label %land.lhs.true.149, label %if.else.155

land.lhs.true.149:                                ; preds = %while.body.147
  %84 = load i32, i32* %norun.addr, align 4
  %tobool150 = icmp ne i32 %84, 0
  br i1 %tobool150, label %if.then.154, label %lor.lhs.false.151

lor.lhs.false.151:                                ; preds = %land.lhs.true.149
  %85 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %86 = load i8*, i8** %s.addr, align 8
  %call152 = call i32 @S_regtry(%struct.regexp* %85, i8* %86)
  %tobool153 = icmp ne i32 %call152, 0
  br i1 %tobool153, label %if.then.154, label %if.else.155

if.then.154:                                      ; preds = %lor.lhs.false.151, %land.lhs.true.149
  br label %got_it

if.else.155:                                      ; preds = %lor.lhs.false.151, %while.body.147
  %87 = load i32, i32* %doevery, align 4
  store i32 %87, i32* %tmp, align 4
  br label %if.end.156

if.end.156:                                       ; preds = %if.else.155
  %88 = load i8*, i8** %s.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %88, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 8
  br label %while.cond.144

while.end.157:                                    ; preds = %while.cond.144
  br label %sw.epilog

sw.bb.158:                                        ; preds = %entry
  %89 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %90 = bitcast %struct.regnode* %89 to %struct.regnode_string*
  %string = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %90, i32 0, i32 3
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %string, i32 0, i32 0
  store i8* %arraydecay, i8** %m, align 8
  %91 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %92 = bitcast %struct.regnode* %91 to %struct.regnode_string*
  %str_len = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %92, i32 0, i32 0
  %93 = load i8, i8* %str_len, align 1
  %conv159 = zext i8 %93 to i64
  store i64 %conv159, i64* %ln, align 8
  %94 = load i64, i64* %ln, align 8
  %conv160 = trunc i64 %94 to i32
  %conv161 = sext i32 %conv160 to i64
  store i64 %conv161, i64* %lnc, align 8
  %95 = load i32, i32* @PL_reg_flags, align 4
  %and162 = and i32 %95, 8
  %cmp163 = icmp ne i32 %and162, 0
  br i1 %cmp163, label %if.then.165, label %if.else.244

if.then.165:                                      ; preds = %sw.bb.158
  %96 = load i8*, i8** %m, align 8
  store i8* %96, i8** %sm, align 8
  %97 = load i8*, i8** %m, align 8
  %arraydecay171 = getelementptr inbounds [7 x i8], [7 x i8]* %tmpbuf1, i32 0, i32 0
  %call172 = call i64 @Perl_to_utf8_lower(i8* %97, i8* %arraydecay171, i64* %ulen1)
  %98 = load i8*, i8** %m, align 8
  %arraydecay173 = getelementptr inbounds [7 x i8], [7 x i8]* %tmpbuf2, i32 0, i32 0
  %call174 = call i64 @Perl_to_utf8_upper(i8* %98, i8* %arraydecay173, i64* %ulen2)
  %arraydecay175 = getelementptr inbounds [7 x i8], [7 x i8]* %tmpbuf1, i32 0, i32 0
  %99 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings = getelementptr inbounds %struct.cop, %struct.cop* %99, i32 0, i32 14
  %100 = load %struct.sv*, %struct.sv** %cop_warnings, align 8
  %cmp176 = icmp ne %struct.sv* %100, null
  br i1 %cmp176, label %land.lhs.true.178, label %lor.rhs

land.lhs.true.178:                                ; preds = %if.then.165
  %101 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings179 = getelementptr inbounds %struct.cop, %struct.cop* %101, i32 0, i32 14
  %102 = load %struct.sv*, %struct.sv** %cop_warnings179, align 8
  %cmp180 = icmp ne %struct.sv* %102, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp180, label %land.lhs.true.182, label %lor.rhs

land.lhs.true.182:                                ; preds = %land.lhs.true.178
  %103 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings183 = getelementptr inbounds %struct.cop, %struct.cop* %103, i32 0, i32 14
  %104 = load %struct.sv*, %struct.sv** %cop_warnings183, align 8
  %cmp184 = icmp eq %struct.sv* %104, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp184, label %lor.end, label %lor.lhs.false.186

lor.lhs.false.186:                                ; preds = %land.lhs.true.182
  %105 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings187 = getelementptr inbounds %struct.cop, %struct.cop* %105, i32 0, i32 14
  %106 = load %struct.sv*, %struct.sv** %cop_warnings187, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %106, i32 0, i32 0
  %107 = load i8*, i8** %sv_any, align 8
  %108 = bitcast i8* %107 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %108, i32 0, i32 0
  %109 = load i8*, i8** %xpv_pv, align 8
  %arrayidx188 = getelementptr inbounds i8, i8* %109, i64 11
  %110 = load i8, i8* %arrayidx188, align 1
  %conv189 = sext i8 %110 to i32
  %and190 = and i32 %conv189, 1
  %tobool191 = icmp ne i32 %and190, 0
  br i1 %tobool191, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.186, %land.lhs.true.178, %if.then.165
  %111 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings192 = getelementptr inbounds %struct.cop, %struct.cop* %111, i32 0, i32 14
  %112 = load %struct.sv*, %struct.sv** %cop_warnings192, align 8
  %cmp193 = icmp eq %struct.sv* %112, null
  br i1 %cmp193, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs
  %113 = load i8, i8* @PL_dowarn, align 1
  %conv195 = zext i8 %113 to i32
  %and196 = and i32 %conv195, 1
  %tobool197 = icmp ne i32 %and196, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %114 = phi i1 [ false, %lor.rhs ], [ %tobool197, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %lor.lhs.false.186, %land.lhs.true.182
  %115 = phi i1 [ true, %lor.lhs.false.186 ], [ true, %land.lhs.true.182 ], [ %114, %land.end ]
  %cond198 = select i1 %115, i32 0, i32 255
  %call199 = call i64 @Perl_utf8n_to_uvuni(i8* %arraydecay175, i64 6, i64* null, i32 %cond198)
  %conv200 = trunc i64 %call199 to i32
  store i32 %conv200, i32* %c1, align 4
  %arraydecay201 = getelementptr inbounds [7 x i8], [7 x i8]* %tmpbuf2, i32 0, i32 0
  %116 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings202 = getelementptr inbounds %struct.cop, %struct.cop* %116, i32 0, i32 14
  %117 = load %struct.sv*, %struct.sv** %cop_warnings202, align 8
  %cmp203 = icmp ne %struct.sv* %117, null
  br i1 %cmp203, label %land.lhs.true.205, label %lor.rhs.221

land.lhs.true.205:                                ; preds = %lor.end
  %118 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings206 = getelementptr inbounds %struct.cop, %struct.cop* %118, i32 0, i32 14
  %119 = load %struct.sv*, %struct.sv** %cop_warnings206, align 8
  %cmp207 = icmp ne %struct.sv* %119, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp207, label %land.lhs.true.209, label %lor.rhs.221

land.lhs.true.209:                                ; preds = %land.lhs.true.205
  %120 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings210 = getelementptr inbounds %struct.cop, %struct.cop* %120, i32 0, i32 14
  %121 = load %struct.sv*, %struct.sv** %cop_warnings210, align 8
  %cmp211 = icmp eq %struct.sv* %121, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp211, label %lor.end.230, label %lor.lhs.false.213

lor.lhs.false.213:                                ; preds = %land.lhs.true.209
  %122 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings214 = getelementptr inbounds %struct.cop, %struct.cop* %122, i32 0, i32 14
  %123 = load %struct.sv*, %struct.sv** %cop_warnings214, align 8
  %sv_any215 = getelementptr inbounds %struct.sv, %struct.sv* %123, i32 0, i32 0
  %124 = load i8*, i8** %sv_any215, align 8
  %125 = bitcast i8* %124 to %struct.xpv*
  %xpv_pv216 = getelementptr inbounds %struct.xpv, %struct.xpv* %125, i32 0, i32 0
  %126 = load i8*, i8** %xpv_pv216, align 8
  %arrayidx217 = getelementptr inbounds i8, i8* %126, i64 11
  %127 = load i8, i8* %arrayidx217, align 1
  %conv218 = sext i8 %127 to i32
  %and219 = and i32 %conv218, 1
  %tobool220 = icmp ne i32 %and219, 0
  br i1 %tobool220, label %lor.end.230, label %lor.rhs.221

lor.rhs.221:                                      ; preds = %lor.lhs.false.213, %land.lhs.true.205, %lor.end
  %128 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings222 = getelementptr inbounds %struct.cop, %struct.cop* %128, i32 0, i32 14
  %129 = load %struct.sv*, %struct.sv** %cop_warnings222, align 8
  %cmp223 = icmp eq %struct.sv* %129, null
  br i1 %cmp223, label %land.rhs.225, label %land.end.229

land.rhs.225:                                     ; preds = %lor.rhs.221
  %130 = load i8, i8* @PL_dowarn, align 1
  %conv226 = zext i8 %130 to i32
  %and227 = and i32 %conv226, 1
  %tobool228 = icmp ne i32 %and227, 0
  br label %land.end.229

land.end.229:                                     ; preds = %land.rhs.225, %lor.rhs.221
  %131 = phi i1 [ false, %lor.rhs.221 ], [ %tobool228, %land.rhs.225 ]
  br label %lor.end.230

lor.end.230:                                      ; preds = %land.end.229, %lor.lhs.false.213, %land.lhs.true.209
  %132 = phi i1 [ true, %lor.lhs.false.213 ], [ true, %land.lhs.true.209 ], [ %131, %land.end.229 ]
  %cond231 = select i1 %132, i32 0, i32 255
  %call232 = call i64 @Perl_utf8n_to_uvuni(i8* %arraydecay201, i64 6, i64* null, i32 %cond231)
  %conv233 = trunc i64 %call232 to i32
  store i32 %conv233, i32* %c2, align 4
  store i64 0, i64* %lnc, align 8
  br label %while.cond.234

while.cond.234:                                   ; preds = %while.body.238, %lor.end.230
  %133 = load i8*, i8** %sm, align 8
  %134 = load i8*, i8** %m, align 8
  %135 = load i64, i64* %ln, align 8
  %add.ptr235 = getelementptr inbounds i8, i8* %134, i64 %135
  %cmp236 = icmp ult i8* %133, %add.ptr235
  br i1 %cmp236, label %while.body.238, label %while.end.243

while.body.238:                                   ; preds = %while.cond.234
  %136 = load i64, i64* %lnc, align 8
  %inc = add i64 %136, 1
  store i64 %inc, i64* %lnc, align 8
  %137 = load i8*, i8** %sm, align 8
  %138 = load i8, i8* %137, align 1
  %idxprom239 = zext i8 %138 to i64
  %arrayidx240 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom239
  %139 = load i8, i8* %arrayidx240, align 1
  %conv241 = zext i8 %139 to i32
  %140 = load i8*, i8** %sm, align 8
  %idx.ext = sext i32 %conv241 to i64
  %add.ptr242 = getelementptr inbounds i8, i8* %140, i64 %idx.ext
  store i8* %add.ptr242, i8** %sm, align 8
  br label %while.cond.234

while.end.243:                                    ; preds = %while.cond.234
  br label %if.end.249

if.else.244:                                      ; preds = %sw.bb.158
  %141 = load i8*, i8** %m, align 8
  %142 = load i8, i8* %141, align 1
  %conv245 = zext i8 %142 to i32
  store i32 %conv245, i32* %c1, align 4
  %143 = load i32, i32* %c1, align 4
  %idxprom246 = zext i32 %143 to i64
  %arrayidx247 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_fold, i32 0, i64 %idxprom246
  %144 = load i8, i8* %arrayidx247, align 1
  %conv248 = zext i8 %144 to i32
  store i32 %conv248, i32* %c2, align 4
  br label %if.end.249

if.end.249:                                       ; preds = %if.else.244, %while.end.243
  br label %do_exactf

sw.bb.250:                                        ; preds = %entry
  %145 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %146 = bitcast %struct.regnode* %145 to %struct.regnode_string*
  %string251 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %146, i32 0, i32 3
  %arraydecay252 = getelementptr inbounds [1 x i8], [1 x i8]* %string251, i32 0, i32 0
  store i8* %arraydecay252, i8** %m, align 8
  %147 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %148 = bitcast %struct.regnode* %147 to %struct.regnode_string*
  %str_len253 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %148, i32 0, i32 0
  %149 = load i8, i8* %str_len253, align 1
  %conv254 = zext i8 %149 to i64
  store i64 %conv254, i64* %ln, align 8
  %150 = load i64, i64* %ln, align 8
  %conv255 = trunc i64 %150 to i32
  %conv256 = sext i32 %conv255 to i64
  store i64 %conv256, i64* %lnc, align 8
  %151 = load i8*, i8** %m, align 8
  %152 = load i8, i8* %151, align 1
  %conv257 = zext i8 %152 to i32
  store i32 %conv257, i32* %c1, align 4
  %153 = load i32, i32* %c1, align 4
  %idxprom258 = zext i32 %153 to i64
  %arrayidx259 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_fold_locale, i32 0, i64 %idxprom258
  %154 = load i8, i8* %arrayidx259, align 1
  %conv260 = zext i8 %154 to i32
  store i32 %conv260, i32* %c2, align 4
  br label %do_exactf

do_exactf:                                        ; preds = %sw.bb.250, %if.end.249
  %155 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv261 = sext i8 %155 to i32
  %tobool262 = icmp ne i32 %conv261, 0
  br i1 %tobool262, label %cond.true.263, label %cond.false.266

cond.true.263:                                    ; preds = %do_exactf
  %156 = load i8*, i8** %strend.addr, align 8
  %157 = load i64, i64* %lnc, align 8
  %conv264 = trunc i64 %157 to i32
  %sub = sub nsw i32 0, %conv264
  %158 = load i8*, i8** %s.addr, align 8
  %call265 = call i8* @S_reghop3(i8* %156, i32 %sub, i8* %158)
  br label %cond.end.271

cond.false.266:                                   ; preds = %do_exactf
  %159 = load i8*, i8** %strend.addr, align 8
  %160 = load i64, i64* %lnc, align 8
  %conv267 = trunc i64 %160 to i32
  %sub268 = sub nsw i32 0, %conv267
  %idx.ext269 = sext i32 %sub268 to i64
  %add.ptr270 = getelementptr inbounds i8, i8* %159, i64 %idx.ext269
  br label %cond.end.271

cond.end.271:                                     ; preds = %cond.false.266, %cond.true.263
  %cond272 = phi i8* [ %call265, %cond.true.263 ], [ %add.ptr270, %cond.false.266 ]
  store i8* %cond272, i8** %e, align 8
  %161 = load i32, i32* %norun.addr, align 4
  %tobool273 = icmp ne i32 %161, 0
  br i1 %tobool273, label %land.lhs.true.274, label %if.end.278

land.lhs.true.274:                                ; preds = %cond.end.271
  %162 = load i8*, i8** %e, align 8
  %163 = load i8*, i8** %s.addr, align 8
  %cmp275 = icmp ult i8* %162, %163
  br i1 %cmp275, label %if.then.277, label %if.end.278

if.then.277:                                      ; preds = %land.lhs.true.274
  %164 = load i8*, i8** %s.addr, align 8
  store i8* %164, i8** %e, align 8
  br label %if.end.278

if.end.278:                                       ; preds = %if.then.277, %land.lhs.true.274, %cond.end.271
  %165 = load i8, i8* %do_utf8, align 1
  %tobool279 = icmp ne i8 %165, 0
  br i1 %tobool279, label %if.then.280, label %if.else.486

if.then.280:                                      ; preds = %if.end.278
  %166 = load i32, i32* %c1, align 4
  %167 = load i32, i32* %c2, align 4
  %cmp288 = icmp eq i32 %166, %167
  br i1 %cmp288, label %if.then.290, label %if.else.382

if.then.290:                                      ; preds = %if.then.280
  br label %while.cond.291

while.cond.291:                                   ; preds = %if.end.379, %if.then.290
  %168 = load i8*, i8** %s.addr, align 8
  %169 = load i8*, i8** %e, align 8
  %cmp292 = icmp ule i8* %168, %169
  br i1 %cmp292, label %while.body.294, label %while.end.381

while.body.294:                                   ; preds = %while.cond.291
  %170 = load i8*, i8** %s.addr, align 8
  %171 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings295 = getelementptr inbounds %struct.cop, %struct.cop* %171, i32 0, i32 14
  %172 = load %struct.sv*, %struct.sv** %cop_warnings295, align 8
  %cmp296 = icmp ne %struct.sv* %172, null
  br i1 %cmp296, label %land.lhs.true.298, label %lor.rhs.314

land.lhs.true.298:                                ; preds = %while.body.294
  %173 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings299 = getelementptr inbounds %struct.cop, %struct.cop* %173, i32 0, i32 14
  %174 = load %struct.sv*, %struct.sv** %cop_warnings299, align 8
  %cmp300 = icmp ne %struct.sv* %174, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp300, label %land.lhs.true.302, label %lor.rhs.314

land.lhs.true.302:                                ; preds = %land.lhs.true.298
  %175 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings303 = getelementptr inbounds %struct.cop, %struct.cop* %175, i32 0, i32 14
  %176 = load %struct.sv*, %struct.sv** %cop_warnings303, align 8
  %cmp304 = icmp eq %struct.sv* %176, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp304, label %lor.end.323, label %lor.lhs.false.306

lor.lhs.false.306:                                ; preds = %land.lhs.true.302
  %177 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings307 = getelementptr inbounds %struct.cop, %struct.cop* %177, i32 0, i32 14
  %178 = load %struct.sv*, %struct.sv** %cop_warnings307, align 8
  %sv_any308 = getelementptr inbounds %struct.sv, %struct.sv* %178, i32 0, i32 0
  %179 = load i8*, i8** %sv_any308, align 8
  %180 = bitcast i8* %179 to %struct.xpv*
  %xpv_pv309 = getelementptr inbounds %struct.xpv, %struct.xpv* %180, i32 0, i32 0
  %181 = load i8*, i8** %xpv_pv309, align 8
  %arrayidx310 = getelementptr inbounds i8, i8* %181, i64 11
  %182 = load i8, i8* %arrayidx310, align 1
  %conv311 = sext i8 %182 to i32
  %and312 = and i32 %conv311, 1
  %tobool313 = icmp ne i32 %and312, 0
  br i1 %tobool313, label %lor.end.323, label %lor.rhs.314

lor.rhs.314:                                      ; preds = %lor.lhs.false.306, %land.lhs.true.298, %while.body.294
  %183 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings315 = getelementptr inbounds %struct.cop, %struct.cop* %183, i32 0, i32 14
  %184 = load %struct.sv*, %struct.sv** %cop_warnings315, align 8
  %cmp316 = icmp eq %struct.sv* %184, null
  br i1 %cmp316, label %land.rhs.318, label %land.end.322

land.rhs.318:                                     ; preds = %lor.rhs.314
  %185 = load i8, i8* @PL_dowarn, align 1
  %conv319 = zext i8 %185 to i32
  %and320 = and i32 %conv319, 1
  %tobool321 = icmp ne i32 %and320, 0
  br label %land.end.322

land.end.322:                                     ; preds = %land.rhs.318, %lor.rhs.314
  %186 = phi i1 [ false, %lor.rhs.314 ], [ %tobool321, %land.rhs.318 ]
  br label %lor.end.323

lor.end.323:                                      ; preds = %land.end.322, %lor.lhs.false.306, %land.lhs.true.302
  %187 = phi i1 [ true, %lor.lhs.false.306 ], [ true, %land.lhs.true.302 ], [ %186, %land.end.322 ]
  %cond324 = select i1 %187, i32 0, i32 255
  %call325 = call i64 @Perl_utf8n_to_uvuni(i8* %170, i64 13, i64* %len, i32 %cond324)
  store i64 %call325, i64* %c282, align 8
  %188 = load i64, i64* %c282, align 8
  %189 = load i32, i32* %c1, align 4
  %conv326 = zext i32 %189 to i64
  %cmp327 = icmp eq i64 %188, %conv326
  br i1 %cmp327, label %land.lhs.true.329, label %if.else.345

land.lhs.true.329:                                ; preds = %lor.end.323
  %190 = load i64, i64* %ln, align 8
  %191 = load i64, i64* %len, align 8
  %cmp330 = icmp eq i64 %190, %191
  br i1 %cmp330, label %land.lhs.true.339, label %lor.lhs.false.332

lor.lhs.false.332:                                ; preds = %land.lhs.true.329
  %192 = load i8*, i8** %s.addr, align 8
  %193 = load i8, i8* %do_utf8, align 1
  %194 = load i8*, i8** %m, align 8
  %195 = load i64, i64* %ln, align 8
  %196 = load i32, i32* @PL_reg_flags, align 4
  %and333 = and i32 %196, 8
  %cmp334 = icmp ne i32 %and333, 0
  %conv335 = zext i1 %cmp334 to i32
  %conv336 = trunc i32 %conv335 to i8
  %call337 = call i32 @Perl_ibcmp_utf8(i8* %192, i8** null, i64 0, i8 signext %193, i8* %194, i8** null, i64 %195, i8 signext %conv336)
  %tobool338 = icmp ne i32 %call337, 0
  br i1 %tobool338, label %land.lhs.true.339, label %if.else.345

land.lhs.true.339:                                ; preds = %lor.lhs.false.332, %land.lhs.true.329
  %197 = load i32, i32* %norun.addr, align 4
  %tobool340 = icmp ne i32 %197, 0
  br i1 %tobool340, label %if.then.344, label %lor.lhs.false.341

lor.lhs.false.341:                                ; preds = %land.lhs.true.339
  %198 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %199 = load i8*, i8** %s.addr, align 8
  %call342 = call i32 @S_regtry(%struct.regexp* %198, i8* %199)
  %tobool343 = icmp ne i32 %call342, 0
  br i1 %tobool343, label %if.then.344, label %if.else.345

if.then.344:                                      ; preds = %lor.lhs.false.341, %land.lhs.true.339
  br label %got_it

if.else.345:                                      ; preds = %lor.lhs.false.341, %lor.lhs.false.332, %lor.end.323
  %arraydecay346 = getelementptr inbounds [14 x i8], [14 x i8]* %tmpbuf, i32 0, i32 0
  %200 = load i64, i64* %c282, align 8
  %call347 = call i8* @Perl_uvuni_to_utf8(i8* %arraydecay346, i64 %200)
  %arraydecay348 = getelementptr inbounds [14 x i8], [14 x i8]* %tmpbuf, i32 0, i32 0
  %arraydecay349 = getelementptr inbounds [7 x i8], [7 x i8]* %foldbuf, i32 0, i32 0
  %call350 = call i64 @Perl_to_utf8_fold(i8* %arraydecay348, i8* %arraydecay349, i64* %foldlen)
  store i64 %call350, i64* %f, align 8
  %201 = load i64, i64* %f, align 8
  %202 = load i64, i64* %c282, align 8
  %cmp351 = icmp ne i64 %201, %202
  br i1 %cmp351, label %land.lhs.true.353, label %if.end.378

land.lhs.true.353:                                ; preds = %if.else.345
  %203 = load i64, i64* %f, align 8
  %204 = load i32, i32* %c1, align 4
  %conv354 = zext i32 %204 to i64
  %cmp355 = icmp eq i64 %203, %conv354
  br i1 %cmp355, label %land.lhs.true.361, label %lor.lhs.false.357

lor.lhs.false.357:                                ; preds = %land.lhs.true.353
  %205 = load i64, i64* %f, align 8
  %206 = load i32, i32* %c2, align 4
  %conv358 = zext i32 %206 to i64
  %cmp359 = icmp eq i64 %205, %conv358
  br i1 %cmp359, label %land.lhs.true.361, label %if.end.378

land.lhs.true.361:                                ; preds = %lor.lhs.false.357, %land.lhs.true.353
  %207 = load i64, i64* %ln, align 8
  %208 = load i64, i64* %foldlen, align 8
  %cmp362 = icmp eq i64 %207, %208
  br i1 %cmp362, label %land.lhs.true.372, label %lor.lhs.false.364

lor.lhs.false.364:                                ; preds = %land.lhs.true.361
  %arraydecay365 = getelementptr inbounds [7 x i8], [7 x i8]* %foldbuf, i32 0, i32 0
  %209 = load i64, i64* %foldlen, align 8
  %210 = load i8, i8* %do_utf8, align 1
  %211 = load i8*, i8** %m, align 8
  %212 = load i64, i64* %ln, align 8
  %213 = load i32, i32* @PL_reg_flags, align 4
  %and366 = and i32 %213, 8
  %cmp367 = icmp ne i32 %and366, 0
  %conv368 = zext i1 %cmp367 to i32
  %conv369 = trunc i32 %conv368 to i8
  %call370 = call i32 @Perl_ibcmp_utf8(i8* %arraydecay365, i8** null, i64 %209, i8 signext %210, i8* %211, i8** null, i64 %212, i8 signext %conv369)
  %tobool371 = icmp ne i32 %call370, 0
  br i1 %tobool371, label %if.end.378, label %land.lhs.true.372

land.lhs.true.372:                                ; preds = %lor.lhs.false.364, %land.lhs.true.361
  %214 = load i32, i32* %norun.addr, align 4
  %tobool373 = icmp ne i32 %214, 0
  br i1 %tobool373, label %if.then.377, label %lor.lhs.false.374

lor.lhs.false.374:                                ; preds = %land.lhs.true.372
  %215 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %216 = load i8*, i8** %s.addr, align 8
  %call375 = call i32 @S_regtry(%struct.regexp* %215, i8* %216)
  %tobool376 = icmp ne i32 %call375, 0
  br i1 %tobool376, label %if.then.377, label %if.end.378

if.then.377:                                      ; preds = %lor.lhs.false.374, %land.lhs.true.372
  br label %got_it

if.end.378:                                       ; preds = %lor.lhs.false.374, %lor.lhs.false.364, %lor.lhs.false.357, %if.else.345
  br label %if.end.379

if.end.379:                                       ; preds = %if.end.378
  %217 = load i64, i64* %len, align 8
  %218 = load i8*, i8** %s.addr, align 8
  %add.ptr380 = getelementptr inbounds i8, i8* %218, i64 %217
  store i8* %add.ptr380, i8** %s.addr, align 8
  br label %while.cond.291

while.end.381:                                    ; preds = %while.cond.291
  br label %if.end.485

if.else.382:                                      ; preds = %if.then.280
  br label %while.cond.383

while.cond.383:                                   ; preds = %if.end.482, %if.else.382
  %219 = load i8*, i8** %s.addr, align 8
  %220 = load i8*, i8** %e, align 8
  %cmp384 = icmp ule i8* %219, %220
  br i1 %cmp384, label %while.body.386, label %while.end.484

while.body.386:                                   ; preds = %while.cond.383
  %221 = load i8*, i8** %s.addr, align 8
  %222 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings387 = getelementptr inbounds %struct.cop, %struct.cop* %222, i32 0, i32 14
  %223 = load %struct.sv*, %struct.sv** %cop_warnings387, align 8
  %cmp388 = icmp ne %struct.sv* %223, null
  br i1 %cmp388, label %land.lhs.true.390, label %lor.rhs.406

land.lhs.true.390:                                ; preds = %while.body.386
  %224 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings391 = getelementptr inbounds %struct.cop, %struct.cop* %224, i32 0, i32 14
  %225 = load %struct.sv*, %struct.sv** %cop_warnings391, align 8
  %cmp392 = icmp ne %struct.sv* %225, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp392, label %land.lhs.true.394, label %lor.rhs.406

land.lhs.true.394:                                ; preds = %land.lhs.true.390
  %226 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings395 = getelementptr inbounds %struct.cop, %struct.cop* %226, i32 0, i32 14
  %227 = load %struct.sv*, %struct.sv** %cop_warnings395, align 8
  %cmp396 = icmp eq %struct.sv* %227, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp396, label %lor.end.415, label %lor.lhs.false.398

lor.lhs.false.398:                                ; preds = %land.lhs.true.394
  %228 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings399 = getelementptr inbounds %struct.cop, %struct.cop* %228, i32 0, i32 14
  %229 = load %struct.sv*, %struct.sv** %cop_warnings399, align 8
  %sv_any400 = getelementptr inbounds %struct.sv, %struct.sv* %229, i32 0, i32 0
  %230 = load i8*, i8** %sv_any400, align 8
  %231 = bitcast i8* %230 to %struct.xpv*
  %xpv_pv401 = getelementptr inbounds %struct.xpv, %struct.xpv* %231, i32 0, i32 0
  %232 = load i8*, i8** %xpv_pv401, align 8
  %arrayidx402 = getelementptr inbounds i8, i8* %232, i64 11
  %233 = load i8, i8* %arrayidx402, align 1
  %conv403 = sext i8 %233 to i32
  %and404 = and i32 %conv403, 1
  %tobool405 = icmp ne i32 %and404, 0
  br i1 %tobool405, label %lor.end.415, label %lor.rhs.406

lor.rhs.406:                                      ; preds = %lor.lhs.false.398, %land.lhs.true.390, %while.body.386
  %234 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings407 = getelementptr inbounds %struct.cop, %struct.cop* %234, i32 0, i32 14
  %235 = load %struct.sv*, %struct.sv** %cop_warnings407, align 8
  %cmp408 = icmp eq %struct.sv* %235, null
  br i1 %cmp408, label %land.rhs.410, label %land.end.414

land.rhs.410:                                     ; preds = %lor.rhs.406
  %236 = load i8, i8* @PL_dowarn, align 1
  %conv411 = zext i8 %236 to i32
  %and412 = and i32 %conv411, 1
  %tobool413 = icmp ne i32 %and412, 0
  br label %land.end.414

land.end.414:                                     ; preds = %land.rhs.410, %lor.rhs.406
  %237 = phi i1 [ false, %lor.rhs.406 ], [ %tobool413, %land.rhs.410 ]
  br label %lor.end.415

lor.end.415:                                      ; preds = %land.end.414, %lor.lhs.false.398, %land.lhs.true.394
  %238 = phi i1 [ true, %lor.lhs.false.398 ], [ true, %land.lhs.true.394 ], [ %237, %land.end.414 ]
  %cond416 = select i1 %238, i32 0, i32 255
  %call417 = call i64 @Perl_utf8n_to_uvuni(i8* %221, i64 13, i64* %len, i32 %cond416)
  store i64 %call417, i64* %c282, align 8
  %239 = load i64, i64* %c282, align 8
  %cmp418 = icmp eq i64 %239, 931
  br i1 %cmp418, label %if.then.423, label %lor.lhs.false.420

lor.lhs.false.420:                                ; preds = %lor.end.415
  %240 = load i64, i64* %c282, align 8
  %cmp421 = icmp eq i64 %240, 962
  br i1 %cmp421, label %if.then.423, label %if.end.424

if.then.423:                                      ; preds = %lor.lhs.false.420, %lor.end.415
  store i64 963, i64* %c282, align 8
  br label %if.end.424

if.end.424:                                       ; preds = %if.then.423, %lor.lhs.false.420
  %241 = load i64, i64* %c282, align 8
  %242 = load i32, i32* %c1, align 4
  %conv425 = zext i32 %242 to i64
  %cmp426 = icmp eq i64 %241, %conv425
  br i1 %cmp426, label %land.lhs.true.432, label %lor.lhs.false.428

lor.lhs.false.428:                                ; preds = %if.end.424
  %243 = load i64, i64* %c282, align 8
  %244 = load i32, i32* %c2, align 4
  %conv429 = zext i32 %244 to i64
  %cmp430 = icmp eq i64 %243, %conv429
  br i1 %cmp430, label %land.lhs.true.432, label %if.else.448

land.lhs.true.432:                                ; preds = %lor.lhs.false.428, %if.end.424
  %245 = load i64, i64* %ln, align 8
  %246 = load i64, i64* %len, align 8
  %cmp433 = icmp eq i64 %245, %246
  br i1 %cmp433, label %land.lhs.true.442, label %lor.lhs.false.435

lor.lhs.false.435:                                ; preds = %land.lhs.true.432
  %247 = load i8*, i8** %s.addr, align 8
  %248 = load i8, i8* %do_utf8, align 1
  %249 = load i8*, i8** %m, align 8
  %250 = load i64, i64* %ln, align 8
  %251 = load i32, i32* @PL_reg_flags, align 4
  %and436 = and i32 %251, 8
  %cmp437 = icmp ne i32 %and436, 0
  %conv438 = zext i1 %cmp437 to i32
  %conv439 = trunc i32 %conv438 to i8
  %call440 = call i32 @Perl_ibcmp_utf8(i8* %247, i8** null, i64 0, i8 signext %248, i8* %249, i8** null, i64 %250, i8 signext %conv439)
  %tobool441 = icmp ne i32 %call440, 0
  br i1 %tobool441, label %land.lhs.true.442, label %if.else.448

land.lhs.true.442:                                ; preds = %lor.lhs.false.435, %land.lhs.true.432
  %252 = load i32, i32* %norun.addr, align 4
  %tobool443 = icmp ne i32 %252, 0
  br i1 %tobool443, label %if.then.447, label %lor.lhs.false.444

lor.lhs.false.444:                                ; preds = %land.lhs.true.442
  %253 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %254 = load i8*, i8** %s.addr, align 8
  %call445 = call i32 @S_regtry(%struct.regexp* %253, i8* %254)
  %tobool446 = icmp ne i32 %call445, 0
  br i1 %tobool446, label %if.then.447, label %if.else.448

if.then.447:                                      ; preds = %lor.lhs.false.444, %land.lhs.true.442
  br label %got_it

if.else.448:                                      ; preds = %lor.lhs.false.444, %lor.lhs.false.435, %lor.lhs.false.428
  %arraydecay449 = getelementptr inbounds [14 x i8], [14 x i8]* %tmpbuf, i32 0, i32 0
  %255 = load i64, i64* %c282, align 8
  %call450 = call i8* @Perl_uvuni_to_utf8(i8* %arraydecay449, i64 %255)
  %arraydecay451 = getelementptr inbounds [14 x i8], [14 x i8]* %tmpbuf, i32 0, i32 0
  %arraydecay452 = getelementptr inbounds [7 x i8], [7 x i8]* %foldbuf, i32 0, i32 0
  %call453 = call i64 @Perl_to_utf8_fold(i8* %arraydecay451, i8* %arraydecay452, i64* %foldlen)
  store i64 %call453, i64* %f, align 8
  %256 = load i64, i64* %f, align 8
  %257 = load i64, i64* %c282, align 8
  %cmp454 = icmp ne i64 %256, %257
  br i1 %cmp454, label %land.lhs.true.456, label %if.end.481

land.lhs.true.456:                                ; preds = %if.else.448
  %258 = load i64, i64* %f, align 8
  %259 = load i32, i32* %c1, align 4
  %conv457 = zext i32 %259 to i64
  %cmp458 = icmp eq i64 %258, %conv457
  br i1 %cmp458, label %land.lhs.true.464, label %lor.lhs.false.460

lor.lhs.false.460:                                ; preds = %land.lhs.true.456
  %260 = load i64, i64* %f, align 8
  %261 = load i32, i32* %c2, align 4
  %conv461 = zext i32 %261 to i64
  %cmp462 = icmp eq i64 %260, %conv461
  br i1 %cmp462, label %land.lhs.true.464, label %if.end.481

land.lhs.true.464:                                ; preds = %lor.lhs.false.460, %land.lhs.true.456
  %262 = load i64, i64* %ln, align 8
  %263 = load i64, i64* %foldlen, align 8
  %cmp465 = icmp eq i64 %262, %263
  br i1 %cmp465, label %land.lhs.true.475, label %lor.lhs.false.467

lor.lhs.false.467:                                ; preds = %land.lhs.true.464
  %arraydecay468 = getelementptr inbounds [7 x i8], [7 x i8]* %foldbuf, i32 0, i32 0
  %264 = load i64, i64* %foldlen, align 8
  %265 = load i8, i8* %do_utf8, align 1
  %266 = load i8*, i8** %m, align 8
  %267 = load i64, i64* %ln, align 8
  %268 = load i32, i32* @PL_reg_flags, align 4
  %and469 = and i32 %268, 8
  %cmp470 = icmp ne i32 %and469, 0
  %conv471 = zext i1 %cmp470 to i32
  %conv472 = trunc i32 %conv471 to i8
  %call473 = call i32 @Perl_ibcmp_utf8(i8* %arraydecay468, i8** null, i64 %264, i8 signext %265, i8* %266, i8** null, i64 %267, i8 signext %conv472)
  %tobool474 = icmp ne i32 %call473, 0
  br i1 %tobool474, label %if.end.481, label %land.lhs.true.475

land.lhs.true.475:                                ; preds = %lor.lhs.false.467, %land.lhs.true.464
  %269 = load i32, i32* %norun.addr, align 4
  %tobool476 = icmp ne i32 %269, 0
  br i1 %tobool476, label %if.then.480, label %lor.lhs.false.477

lor.lhs.false.477:                                ; preds = %land.lhs.true.475
  %270 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %271 = load i8*, i8** %s.addr, align 8
  %call478 = call i32 @S_regtry(%struct.regexp* %270, i8* %271)
  %tobool479 = icmp ne i32 %call478, 0
  br i1 %tobool479, label %if.then.480, label %if.end.481

if.then.480:                                      ; preds = %lor.lhs.false.477, %land.lhs.true.475
  br label %got_it

if.end.481:                                       ; preds = %lor.lhs.false.477, %lor.lhs.false.467, %lor.lhs.false.460, %if.else.448
  br label %if.end.482

if.end.482:                                       ; preds = %if.end.481
  %272 = load i64, i64* %len, align 8
  %273 = load i8*, i8** %s.addr, align 8
  %add.ptr483 = getelementptr inbounds i8, i8* %273, i64 %272
  store i8* %add.ptr483, i8** %s.addr, align 8
  br label %while.cond.383

while.end.484:                                    ; preds = %while.cond.383
  br label %if.end.485

if.end.485:                                       ; preds = %while.end.484, %while.end.381
  br label %if.end.560

if.else.486:                                      ; preds = %if.end.278
  %274 = load i32, i32* %c1, align 4
  %275 = load i32, i32* %c2, align 4
  %cmp487 = icmp eq i32 %274, %275
  br i1 %cmp487, label %if.then.489, label %if.else.522

if.then.489:                                      ; preds = %if.else.486
  br label %while.cond.490

while.cond.490:                                   ; preds = %if.end.519, %if.then.489
  %276 = load i8*, i8** %s.addr, align 8
  %277 = load i8*, i8** %e, align 8
  %cmp491 = icmp ule i8* %276, %277
  br i1 %cmp491, label %while.body.493, label %while.end.521

while.body.493:                                   ; preds = %while.cond.490
  %278 = load i8*, i8** %s.addr, align 8
  %279 = load i8, i8* %278, align 1
  %conv494 = zext i8 %279 to i32
  %280 = load i32, i32* %c1, align 4
  %cmp495 = icmp eq i32 %conv494, %280
  br i1 %cmp495, label %land.lhs.true.497, label %if.end.519

land.lhs.true.497:                                ; preds = %while.body.493
  %281 = load i64, i64* %ln, align 8
  %cmp498 = icmp eq i64 %281, 1
  br i1 %cmp498, label %land.lhs.true.513, label %lor.lhs.false.500

lor.lhs.false.500:                                ; preds = %land.lhs.true.497
  %282 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %type501 = getelementptr inbounds %struct.regnode, %struct.regnode* %282, i32 0, i32 1
  %283 = load i8, i8* %type501, align 1
  %conv502 = zext i8 %283 to i32
  %cmp503 = icmp eq i32 %conv502, 34
  br i1 %cmp503, label %cond.true.505, label %cond.false.509

cond.true.505:                                    ; preds = %lor.lhs.false.500
  %284 = load i8*, i8** %s.addr, align 8
  %285 = load i8*, i8** %m, align 8
  %286 = load i64, i64* %ln, align 8
  %conv506 = trunc i64 %286 to i32
  %call507 = call i32 @Perl_ibcmp(i8* %284, i8* %285, i32 %conv506)
  %tobool508 = icmp ne i32 %call507, 0
  br i1 %tobool508, label %if.end.519, label %land.lhs.true.513

cond.false.509:                                   ; preds = %lor.lhs.false.500
  %287 = load i8*, i8** %s.addr, align 8
  %288 = load i8*, i8** %m, align 8
  %289 = load i64, i64* %ln, align 8
  %conv510 = trunc i64 %289 to i32
  %call511 = call i32 @Perl_ibcmp_locale(i8* %287, i8* %288, i32 %conv510)
  %tobool512 = icmp ne i32 %call511, 0
  br i1 %tobool512, label %if.end.519, label %land.lhs.true.513

land.lhs.true.513:                                ; preds = %cond.false.509, %cond.true.505, %land.lhs.true.497
  %290 = load i32, i32* %norun.addr, align 4
  %tobool514 = icmp ne i32 %290, 0
  br i1 %tobool514, label %if.then.518, label %lor.lhs.false.515

lor.lhs.false.515:                                ; preds = %land.lhs.true.513
  %291 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %292 = load i8*, i8** %s.addr, align 8
  %call516 = call i32 @S_regtry(%struct.regexp* %291, i8* %292)
  %tobool517 = icmp ne i32 %call516, 0
  br i1 %tobool517, label %if.then.518, label %if.end.519

if.then.518:                                      ; preds = %lor.lhs.false.515, %land.lhs.true.513
  br label %got_it

if.end.519:                                       ; preds = %lor.lhs.false.515, %cond.false.509, %cond.true.505, %while.body.493
  %293 = load i8*, i8** %s.addr, align 8
  %incdec.ptr520 = getelementptr inbounds i8, i8* %293, i32 1
  store i8* %incdec.ptr520, i8** %s.addr, align 8
  br label %while.cond.490

while.end.521:                                    ; preds = %while.cond.490
  br label %if.end.559

if.else.522:                                      ; preds = %if.else.486
  br label %while.cond.523

while.cond.523:                                   ; preds = %if.end.556, %if.else.522
  %294 = load i8*, i8** %s.addr, align 8
  %295 = load i8*, i8** %e, align 8
  %cmp524 = icmp ule i8* %294, %295
  br i1 %cmp524, label %while.body.526, label %while.end.558

while.body.526:                                   ; preds = %while.cond.523
  %296 = load i8*, i8** %s.addr, align 8
  %297 = load i8, i8* %296, align 1
  %conv527 = zext i8 %297 to i32
  %298 = load i32, i32* %c1, align 4
  %cmp528 = icmp eq i32 %conv527, %298
  br i1 %cmp528, label %land.lhs.true.534, label %lor.lhs.false.530

lor.lhs.false.530:                                ; preds = %while.body.526
  %299 = load i8*, i8** %s.addr, align 8
  %300 = load i8, i8* %299, align 1
  %conv531 = zext i8 %300 to i32
  %301 = load i32, i32* %c2, align 4
  %cmp532 = icmp eq i32 %conv531, %301
  br i1 %cmp532, label %land.lhs.true.534, label %if.end.556

land.lhs.true.534:                                ; preds = %lor.lhs.false.530, %while.body.526
  %302 = load i64, i64* %ln, align 8
  %cmp535 = icmp eq i64 %302, 1
  br i1 %cmp535, label %land.lhs.true.550, label %lor.lhs.false.537

lor.lhs.false.537:                                ; preds = %land.lhs.true.534
  %303 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %type538 = getelementptr inbounds %struct.regnode, %struct.regnode* %303, i32 0, i32 1
  %304 = load i8, i8* %type538, align 1
  %conv539 = zext i8 %304 to i32
  %cmp540 = icmp eq i32 %conv539, 34
  br i1 %cmp540, label %cond.true.542, label %cond.false.546

cond.true.542:                                    ; preds = %lor.lhs.false.537
  %305 = load i8*, i8** %s.addr, align 8
  %306 = load i8*, i8** %m, align 8
  %307 = load i64, i64* %ln, align 8
  %conv543 = trunc i64 %307 to i32
  %call544 = call i32 @Perl_ibcmp(i8* %305, i8* %306, i32 %conv543)
  %tobool545 = icmp ne i32 %call544, 0
  br i1 %tobool545, label %if.end.556, label %land.lhs.true.550

cond.false.546:                                   ; preds = %lor.lhs.false.537
  %308 = load i8*, i8** %s.addr, align 8
  %309 = load i8*, i8** %m, align 8
  %310 = load i64, i64* %ln, align 8
  %conv547 = trunc i64 %310 to i32
  %call548 = call i32 @Perl_ibcmp_locale(i8* %308, i8* %309, i32 %conv547)
  %tobool549 = icmp ne i32 %call548, 0
  br i1 %tobool549, label %if.end.556, label %land.lhs.true.550

land.lhs.true.550:                                ; preds = %cond.false.546, %cond.true.542, %land.lhs.true.534
  %311 = load i32, i32* %norun.addr, align 4
  %tobool551 = icmp ne i32 %311, 0
  br i1 %tobool551, label %if.then.555, label %lor.lhs.false.552

lor.lhs.false.552:                                ; preds = %land.lhs.true.550
  %312 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %313 = load i8*, i8** %s.addr, align 8
  %call553 = call i32 @S_regtry(%struct.regexp* %312, i8* %313)
  %tobool554 = icmp ne i32 %call553, 0
  br i1 %tobool554, label %if.then.555, label %if.end.556

if.then.555:                                      ; preds = %lor.lhs.false.552, %land.lhs.true.550
  br label %got_it

if.end.556:                                       ; preds = %lor.lhs.false.552, %cond.false.546, %cond.true.542, %lor.lhs.false.530
  %314 = load i8*, i8** %s.addr, align 8
  %incdec.ptr557 = getelementptr inbounds i8, i8* %314, i32 1
  store i8* %incdec.ptr557, i8** %s.addr, align 8
  br label %while.cond.523

while.end.558:                                    ; preds = %while.cond.523
  br label %if.end.559

if.end.559:                                       ; preds = %while.end.558, %while.end.521
  br label %if.end.560

if.end.560:                                       ; preds = %if.end.559, %if.end.485
  br label %sw.epilog

sw.bb.561:                                        ; preds = %entry
  %315 = load i32, i32* @PL_reg_flags, align 4
  %or = or i32 %315, 1
  store i32 %or, i32* @PL_reg_flags, align 4
  br label %sw.bb.562

sw.bb.562:                                        ; preds = %entry, %sw.bb.561
  %316 = load i8, i8* %do_utf8, align 1
  %tobool563 = icmp ne i8 %316, 0
  br i1 %tobool563, label %if.then.564, label %if.else.682

if.then.564:                                      ; preds = %sw.bb.562
  %317 = load i8*, i8** %s.addr, align 8
  %318 = load i8*, i8** @PL_bostr, align 8
  %cmp565 = icmp eq i8* %317, %318
  br i1 %cmp565, label %if.then.567, label %if.else.568

if.then.567:                                      ; preds = %if.then.564
  store i32 10, i32* %tmp, align 4
  br label %if.end.576

if.else.568:                                      ; preds = %if.then.564
  %319 = load i8*, i8** %s.addr, align 8
  %320 = load i8*, i8** @PL_bostr, align 8
  %call570 = call i8* @S_reghop3(i8* %319, i32 -1, i8* %320)
  store i8* %call570, i8** %r, align 8
  %321 = load i8*, i8** %r, align 8
  %322 = load i8*, i8** %r, align 8
  %323 = load i8, i8* %322, align 1
  %idxprom571 = zext i8 %323 to i64
  %arrayidx572 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom571
  %324 = load i8, i8* %arrayidx572, align 1
  %conv573 = zext i8 %324 to i64
  %call574 = call i64 @Perl_utf8n_to_uvuni(i8* %321, i64 %conv573, i64* null, i32 0)
  %conv575 = trunc i64 %call574 to i32
  store i32 %conv575, i32* %tmp, align 4
  br label %if.end.576

if.end.576:                                       ; preds = %if.else.568, %if.then.567
  %325 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %type577 = getelementptr inbounds %struct.regnode, %struct.regnode* %325, i32 0, i32 1
  %326 = load i8, i8* %type577, align 1
  %conv578 = zext i8 %326 to i32
  %cmp579 = icmp eq i32 %conv578, 9
  br i1 %cmp579, label %cond.true.581, label %cond.false.585

cond.true.581:                                    ; preds = %if.end.576
  %327 = load i32, i32* %tmp, align 4
  %conv582 = sext i32 %327 to i64
  %call583 = call signext i8 @Perl_is_uni_alnum(i64 %conv582)
  %conv584 = sext i8 %call583 to i32
  br label %cond.end.610

cond.false.585:                                   ; preds = %if.end.576
  %328 = load i32, i32* %tmp, align 4
  %cmp586 = icmp slt i32 %328, 256
  br i1 %cmp586, label %cond.true.588, label %cond.false.604

cond.true.588:                                    ; preds = %cond.false.585
  %329 = load i32, i32* %tmp, align 4
  %and589 = and i32 %329, -128
  %cmp590 = icmp eq i32 %and589, 0
  br i1 %cmp590, label %land.rhs.592, label %land.end.603

land.rhs.592:                                     ; preds = %cond.true.588
  %330 = load i32, i32* %tmp, align 4
  %idxprom593 = sext i32 %330 to i64
  %call594 = call i16** @__ctype_b_loc()
  %331 = load i16*, i16** %call594, align 8
  %arrayidx595 = getelementptr inbounds i16, i16* %331, i64 %idxprom593
  %332 = load i16, i16* %arrayidx595, align 2
  %conv596 = zext i16 %332 to i32
  %and597 = and i32 %conv596, 8
  %tobool598 = icmp ne i32 %and597, 0
  br i1 %tobool598, label %lor.end.602, label %lor.rhs.599

lor.rhs.599:                                      ; preds = %land.rhs.592
  %333 = load i32, i32* %tmp, align 4
  %cmp600 = icmp eq i32 %333, 95
  br label %lor.end.602

lor.end.602:                                      ; preds = %lor.rhs.599, %land.rhs.592
  %334 = phi i1 [ true, %land.rhs.592 ], [ %cmp600, %lor.rhs.599 ]
  br label %land.end.603

land.end.603:                                     ; preds = %lor.end.602, %cond.true.588
  %335 = phi i1 [ false, %cond.true.588 ], [ %334, %lor.end.602 ]
  %land.ext = zext i1 %335 to i32
  br label %cond.end.608

cond.false.604:                                   ; preds = %cond.false.585
  %336 = load i32, i32* %tmp, align 4
  %conv605 = sext i32 %336 to i64
  %call606 = call signext i8 @Perl_is_uni_alnum_lc(i64 %conv605)
  %conv607 = sext i8 %call606 to i32
  br label %cond.end.608

cond.end.608:                                     ; preds = %cond.false.604, %land.end.603
  %cond609 = phi i32 [ %land.ext, %land.end.603 ], [ %conv607, %cond.false.604 ]
  br label %cond.end.610

cond.end.610:                                     ; preds = %cond.end.608, %cond.true.581
  %cond611 = phi i32 [ %conv584, %cond.true.581 ], [ %cond609, %cond.end.608 ]
  %cmp612 = icmp ne i32 %cond611, 0
  %conv613 = zext i1 %cmp612 to i32
  store i32 %conv613, i32* %tmp, align 4
  %337 = load %struct.sv*, %struct.sv** @PL_utf8_alnum, align 8
  %tobool614 = icmp ne %struct.sv* %337, null
  br i1 %tobool614, label %if.end.617, label %if.then.615

if.then.615:                                      ; preds = %cond.end.610
  call void @Perl_push_scope()
  call void @Perl_save_re_context()
  %call616 = call signext i8 @Perl_is_utf8_alnum(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0))
  call void @Perl_pop_scope()
  br label %if.end.617

if.end.617:                                       ; preds = %if.then.615, %cond.end.610
  br label %while.cond.618

while.cond.618:                                   ; preds = %if.end.679, %if.end.617
  %338 = load i8*, i8** %s.addr, align 8
  %339 = load i8*, i8** %s.addr, align 8
  %340 = load i8, i8* %339, align 1
  %idxprom619 = zext i8 %340 to i64
  %arrayidx620 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom619
  %341 = load i8, i8* %arrayidx620, align 1
  %conv621 = zext i8 %341 to i64
  store i64 %conv621, i64* %uskip, align 8
  %add.ptr622 = getelementptr inbounds i8, i8* %338, i64 %conv621
  %342 = load i8*, i8** %strend.addr, align 8
  %cmp623 = icmp ule i8* %add.ptr622, %342
  br i1 %cmp623, label %while.body.625, label %while.end.681

while.body.625:                                   ; preds = %while.cond.618
  %343 = load i32, i32* %tmp, align 4
  %344 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %type626 = getelementptr inbounds %struct.regnode, %struct.regnode* %344, i32 0, i32 1
  %345 = load i8, i8* %type626, align 1
  %conv627 = zext i8 %345 to i32
  %cmp628 = icmp eq i32 %conv627, 9
  br i1 %cmp628, label %cond.true.630, label %cond.false.632

cond.true.630:                                    ; preds = %while.body.625
  %346 = load %struct.sv*, %struct.sv** @PL_utf8_alnum, align 8
  %347 = load i8*, i8** %s.addr, align 8
  %348 = load i8, i8* %do_utf8, align 1
  %call631 = call i64 @Perl_swash_fetch(%struct.sv* %346, i8* %347, i8 signext %348)
  br label %cond.end.664

cond.false.632:                                   ; preds = %while.body.625
  %349 = load i8*, i8** %s.addr, align 8
  %call633 = call i64 @Perl_utf8_to_uvchr(i8* %349, i64* null)
  %cmp634 = icmp ult i64 %call633, 256
  br i1 %cmp634, label %cond.true.636, label %cond.false.657

cond.true.636:                                    ; preds = %cond.false.632
  %350 = load i8*, i8** %s.addr, align 8
  %call637 = call i64 @Perl_utf8_to_uvchr(i8* %350, i64* null)
  %and638 = and i64 %call637, -128
  %cmp639 = icmp eq i64 %and638, 0
  br i1 %cmp639, label %land.rhs.641, label %land.end.655

land.rhs.641:                                     ; preds = %cond.true.636
  %351 = load i8*, i8** %s.addr, align 8
  %call642 = call i64 @Perl_utf8_to_uvchr(i8* %351, i64* null)
  %conv643 = trunc i64 %call642 to i32
  %idxprom644 = sext i32 %conv643 to i64
  %call645 = call i16** @__ctype_b_loc()
  %352 = load i16*, i16** %call645, align 8
  %arrayidx646 = getelementptr inbounds i16, i16* %352, i64 %idxprom644
  %353 = load i16, i16* %arrayidx646, align 2
  %conv647 = zext i16 %353 to i32
  %and648 = and i32 %conv647, 8
  %tobool649 = icmp ne i32 %and648, 0
  br i1 %tobool649, label %lor.end.654, label %lor.rhs.650

lor.rhs.650:                                      ; preds = %land.rhs.641
  %354 = load i8*, i8** %s.addr, align 8
  %call651 = call i64 @Perl_utf8_to_uvchr(i8* %354, i64* null)
  %cmp652 = icmp eq i64 %call651, 95
  br label %lor.end.654

lor.end.654:                                      ; preds = %lor.rhs.650, %land.rhs.641
  %355 = phi i1 [ true, %land.rhs.641 ], [ %cmp652, %lor.rhs.650 ]
  br label %land.end.655

land.end.655:                                     ; preds = %lor.end.654, %cond.true.636
  %356 = phi i1 [ false, %cond.true.636 ], [ %355, %lor.end.654 ]
  %land.ext656 = zext i1 %356 to i32
  br label %cond.end.661

cond.false.657:                                   ; preds = %cond.false.632
  %357 = load i8*, i8** %s.addr, align 8
  %call658 = call i64 @Perl_utf8_to_uvchr(i8* %357, i64* null)
  %call659 = call signext i8 @Perl_is_uni_alnum_lc(i64 %call658)
  %conv660 = sext i8 %call659 to i32
  br label %cond.end.661

cond.end.661:                                     ; preds = %cond.false.657, %land.end.655
  %cond662 = phi i32 [ %land.ext656, %land.end.655 ], [ %conv660, %cond.false.657 ]
  %conv663 = sext i32 %cond662 to i64
  br label %cond.end.664

cond.end.664:                                     ; preds = %cond.end.661, %cond.true.630
  %cond665 = phi i64 [ %call631, %cond.true.630 ], [ %conv663, %cond.end.661 ]
  %tobool666 = icmp ne i64 %cond665, 0
  %lnot = xor i1 %tobool666, true
  %lnot.ext = zext i1 %lnot to i32
  %cmp667 = icmp eq i32 %343, %lnot.ext
  br i1 %cmp667, label %if.then.669, label %if.end.679

if.then.669:                                      ; preds = %cond.end.664
  %358 = load i32, i32* %tmp, align 4
  %tobool670 = icmp ne i32 %358, 0
  %lnot671 = xor i1 %tobool670, true
  %lnot.ext672 = zext i1 %lnot671 to i32
  store i32 %lnot.ext672, i32* %tmp, align 4
  %359 = load i32, i32* %norun.addr, align 4
  %tobool673 = icmp ne i32 %359, 0
  br i1 %tobool673, label %if.then.677, label %lor.lhs.false.674

lor.lhs.false.674:                                ; preds = %if.then.669
  %360 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %361 = load i8*, i8** %s.addr, align 8
  %call675 = call i32 @S_regtry(%struct.regexp* %360, i8* %361)
  %tobool676 = icmp ne i32 %call675, 0
  br i1 %tobool676, label %if.then.677, label %if.end.678

if.then.677:                                      ; preds = %lor.lhs.false.674, %if.then.669
  br label %got_it

if.end.678:                                       ; preds = %lor.lhs.false.674
  br label %if.end.679

if.end.679:                                       ; preds = %if.end.678, %cond.end.664
  %362 = load i64, i64* %uskip, align 8
  %363 = load i8*, i8** %s.addr, align 8
  %add.ptr680 = getelementptr inbounds i8, i8* %363, i64 %362
  store i8* %add.ptr680, i8** %s.addr, align 8
  br label %while.cond.618

while.end.681:                                    ; preds = %while.cond.618
  br label %if.end.818

if.else.682:                                      ; preds = %sw.bb.562
  %364 = load i8*, i8** %s.addr, align 8
  %365 = load i8*, i8** @PL_bostr, align 8
  %cmp683 = icmp ne i8* %364, %365
  br i1 %cmp683, label %cond.true.685, label %cond.false.688

cond.true.685:                                    ; preds = %if.else.682
  %366 = load i8*, i8** %s.addr, align 8
  %add.ptr686 = getelementptr inbounds i8, i8* %366, i64 -1
  %367 = load i8, i8* %add.ptr686, align 1
  %conv687 = zext i8 %367 to i32
  br label %cond.end.689

cond.false.688:                                   ; preds = %if.else.682
  br label %cond.end.689

cond.end.689:                                     ; preds = %cond.false.688, %cond.true.685
  %cond690 = phi i32 [ %conv687, %cond.true.685 ], [ 10, %cond.false.688 ]
  store i32 %cond690, i32* %tmp, align 4
  %368 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %type691 = getelementptr inbounds %struct.regnode, %struct.regnode* %368, i32 0, i32 1
  %369 = load i8, i8* %type691, align 1
  %conv692 = zext i8 %369 to i32
  %cmp693 = icmp eq i32 %conv692, 9
  br i1 %cmp693, label %cond.true.695, label %cond.false.717

cond.true.695:                                    ; preds = %cond.end.689
  %370 = load i32, i32* %tmp, align 4
  %cmp696 = icmp sge i32 %370, 65
  br i1 %cmp696, label %land.lhs.true.698, label %lor.lhs.false.701

land.lhs.true.698:                                ; preds = %cond.true.695
  %371 = load i32, i32* %tmp, align 4
  %cmp699 = icmp sle i32 %371, 90
  br i1 %cmp699, label %lor.end.716, label %lor.lhs.false.701

lor.lhs.false.701:                                ; preds = %land.lhs.true.698, %cond.true.695
  %372 = load i32, i32* %tmp, align 4
  %cmp702 = icmp sge i32 %372, 97
  br i1 %cmp702, label %land.lhs.true.704, label %lor.lhs.false.707

land.lhs.true.704:                                ; preds = %lor.lhs.false.701
  %373 = load i32, i32* %tmp, align 4
  %cmp705 = icmp sle i32 %373, 122
  br i1 %cmp705, label %lor.end.716, label %lor.lhs.false.707

lor.lhs.false.707:                                ; preds = %land.lhs.true.704, %lor.lhs.false.701
  %374 = load i32, i32* %tmp, align 4
  %cmp708 = icmp sge i32 %374, 48
  br i1 %cmp708, label %land.lhs.true.710, label %lor.rhs.713

land.lhs.true.710:                                ; preds = %lor.lhs.false.707
  %375 = load i32, i32* %tmp, align 4
  %cmp711 = icmp sle i32 %375, 57
  br i1 %cmp711, label %lor.end.716, label %lor.rhs.713

lor.rhs.713:                                      ; preds = %land.lhs.true.710, %lor.lhs.false.707
  %376 = load i32, i32* %tmp, align 4
  %cmp714 = icmp eq i32 %376, 95
  br label %lor.end.716

lor.end.716:                                      ; preds = %lor.rhs.713, %land.lhs.true.710, %land.lhs.true.704, %land.lhs.true.698
  %377 = phi i1 [ true, %land.lhs.true.710 ], [ true, %land.lhs.true.704 ], [ true, %land.lhs.true.698 ], [ %cmp714, %lor.rhs.713 ]
  %lor.ext = zext i1 %377 to i32
  br label %cond.end.735

cond.false.717:                                   ; preds = %cond.end.689
  %378 = load i32, i32* %tmp, align 4
  %and718 = and i32 %378, -128
  %cmp719 = icmp eq i32 %and718, 0
  br i1 %cmp719, label %land.rhs.721, label %land.end.733

land.rhs.721:                                     ; preds = %cond.false.717
  %379 = load i32, i32* %tmp, align 4
  %idxprom722 = sext i32 %379 to i64
  %call723 = call i16** @__ctype_b_loc()
  %380 = load i16*, i16** %call723, align 8
  %arrayidx724 = getelementptr inbounds i16, i16* %380, i64 %idxprom722
  %381 = load i16, i16* %arrayidx724, align 2
  %conv725 = zext i16 %381 to i32
  %and726 = and i32 %conv725, 8
  %tobool727 = icmp ne i32 %and726, 0
  br i1 %tobool727, label %lor.end.731, label %lor.rhs.728

lor.rhs.728:                                      ; preds = %land.rhs.721
  %382 = load i32, i32* %tmp, align 4
  %cmp729 = icmp eq i32 %382, 95
  br label %lor.end.731

lor.end.731:                                      ; preds = %lor.rhs.728, %land.rhs.721
  %383 = phi i1 [ true, %land.rhs.721 ], [ %cmp729, %lor.rhs.728 ]
  br label %land.end.733

land.end.733:                                     ; preds = %lor.end.731, %cond.false.717
  %384 = phi i1 [ false, %cond.false.717 ], [ %383, %lor.end.731 ]
  %land.ext734 = zext i1 %384 to i32
  br label %cond.end.735

cond.end.735:                                     ; preds = %land.end.733, %lor.end.716
  %cond736 = phi i32 [ %lor.ext, %lor.end.716 ], [ %land.ext734, %land.end.733 ]
  %cmp737 = icmp ne i32 %cond736, 0
  %conv738 = zext i1 %cmp737 to i32
  store i32 %conv738, i32* %tmp, align 4
  br label %while.cond.739

while.cond.739:                                   ; preds = %if.end.815, %cond.end.735
  %385 = load i8*, i8** %s.addr, align 8
  %386 = load i8*, i8** %strend.addr, align 8
  %cmp740 = icmp ult i8* %385, %386
  br i1 %cmp740, label %while.body.742, label %while.end.817

while.body.742:                                   ; preds = %while.cond.739
  %387 = load i32, i32* %tmp, align 4
  %388 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %type743 = getelementptr inbounds %struct.regnode, %struct.regnode* %388, i32 0, i32 1
  %389 = load i8, i8* %type743, align 1
  %conv744 = zext i8 %389 to i32
  %cmp745 = icmp eq i32 %conv744, 9
  br i1 %cmp745, label %cond.true.747, label %cond.false.777

cond.true.747:                                    ; preds = %while.body.742
  %390 = load i8*, i8** %s.addr, align 8
  %391 = load i8, i8* %390, align 1
  %conv748 = sext i8 %391 to i32
  %cmp749 = icmp sge i32 %conv748, 65
  br i1 %cmp749, label %land.lhs.true.751, label %lor.lhs.false.755

land.lhs.true.751:                                ; preds = %cond.true.747
  %392 = load i8*, i8** %s.addr, align 8
  %393 = load i8, i8* %392, align 1
  %conv752 = sext i8 %393 to i32
  %cmp753 = icmp sle i32 %conv752, 90
  br i1 %cmp753, label %lor.end.775, label %lor.lhs.false.755

lor.lhs.false.755:                                ; preds = %land.lhs.true.751, %cond.true.747
  %394 = load i8*, i8** %s.addr, align 8
  %395 = load i8, i8* %394, align 1
  %conv756 = sext i8 %395 to i32
  %cmp757 = icmp sge i32 %conv756, 97
  br i1 %cmp757, label %land.lhs.true.759, label %lor.lhs.false.763

land.lhs.true.759:                                ; preds = %lor.lhs.false.755
  %396 = load i8*, i8** %s.addr, align 8
  %397 = load i8, i8* %396, align 1
  %conv760 = sext i8 %397 to i32
  %cmp761 = icmp sle i32 %conv760, 122
  br i1 %cmp761, label %lor.end.775, label %lor.lhs.false.763

lor.lhs.false.763:                                ; preds = %land.lhs.true.759, %lor.lhs.false.755
  %398 = load i8*, i8** %s.addr, align 8
  %399 = load i8, i8* %398, align 1
  %conv764 = sext i8 %399 to i32
  %cmp765 = icmp sge i32 %conv764, 48
  br i1 %cmp765, label %land.lhs.true.767, label %lor.rhs.771

land.lhs.true.767:                                ; preds = %lor.lhs.false.763
  %400 = load i8*, i8** %s.addr, align 8
  %401 = load i8, i8* %400, align 1
  %conv768 = sext i8 %401 to i32
  %cmp769 = icmp sle i32 %conv768, 57
  br i1 %cmp769, label %lor.end.775, label %lor.rhs.771

lor.rhs.771:                                      ; preds = %land.lhs.true.767, %lor.lhs.false.763
  %402 = load i8*, i8** %s.addr, align 8
  %403 = load i8, i8* %402, align 1
  %conv772 = sext i8 %403 to i32
  %cmp773 = icmp eq i32 %conv772, 95
  br label %lor.end.775

lor.end.775:                                      ; preds = %lor.rhs.771, %land.lhs.true.767, %land.lhs.true.759, %land.lhs.true.751
  %404 = phi i1 [ true, %land.lhs.true.767 ], [ true, %land.lhs.true.759 ], [ true, %land.lhs.true.751 ], [ %cmp773, %lor.rhs.771 ]
  %lor.ext776 = zext i1 %404 to i32
  br label %cond.end.798

cond.false.777:                                   ; preds = %while.body.742
  %405 = load i8*, i8** %s.addr, align 8
  %406 = load i8, i8* %405, align 1
  %conv778 = sext i8 %406 to i32
  %and779 = and i32 %conv778, -128
  %cmp780 = icmp eq i32 %and779, 0
  br i1 %cmp780, label %land.rhs.782, label %land.end.796

land.rhs.782:                                     ; preds = %cond.false.777
  %407 = load i8*, i8** %s.addr, align 8
  %408 = load i8, i8* %407, align 1
  %conv783 = sext i8 %408 to i32
  %idxprom784 = sext i32 %conv783 to i64
  %call785 = call i16** @__ctype_b_loc()
  %409 = load i16*, i16** %call785, align 8
  %arrayidx786 = getelementptr inbounds i16, i16* %409, i64 %idxprom784
  %410 = load i16, i16* %arrayidx786, align 2
  %conv787 = zext i16 %410 to i32
  %and788 = and i32 %conv787, 8
  %tobool789 = icmp ne i32 %and788, 0
  br i1 %tobool789, label %lor.end.794, label %lor.rhs.790

lor.rhs.790:                                      ; preds = %land.rhs.782
  %411 = load i8*, i8** %s.addr, align 8
  %412 = load i8, i8* %411, align 1
  %conv791 = sext i8 %412 to i32
  %cmp792 = icmp eq i32 %conv791, 95
  br label %lor.end.794

lor.end.794:                                      ; preds = %lor.rhs.790, %land.rhs.782
  %413 = phi i1 [ true, %land.rhs.782 ], [ %cmp792, %lor.rhs.790 ]
  br label %land.end.796

land.end.796:                                     ; preds = %lor.end.794, %cond.false.777
  %414 = phi i1 [ false, %cond.false.777 ], [ %413, %lor.end.794 ]
  %land.ext797 = zext i1 %414 to i32
  br label %cond.end.798

cond.end.798:                                     ; preds = %land.end.796, %lor.end.775
  %cond799 = phi i32 [ %lor.ext776, %lor.end.775 ], [ %land.ext797, %land.end.796 ]
  %tobool800 = icmp ne i32 %cond799, 0
  %lnot801 = xor i1 %tobool800, true
  %lnot.ext802 = zext i1 %lnot801 to i32
  %cmp803 = icmp eq i32 %387, %lnot.ext802
  br i1 %cmp803, label %if.then.805, label %if.end.815

if.then.805:                                      ; preds = %cond.end.798
  %415 = load i32, i32* %tmp, align 4
  %tobool806 = icmp ne i32 %415, 0
  %lnot807 = xor i1 %tobool806, true
  %lnot.ext808 = zext i1 %lnot807 to i32
  store i32 %lnot.ext808, i32* %tmp, align 4
  %416 = load i32, i32* %norun.addr, align 4
  %tobool809 = icmp ne i32 %416, 0
  br i1 %tobool809, label %if.then.813, label %lor.lhs.false.810

lor.lhs.false.810:                                ; preds = %if.then.805
  %417 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %418 = load i8*, i8** %s.addr, align 8
  %call811 = call i32 @S_regtry(%struct.regexp* %417, i8* %418)
  %tobool812 = icmp ne i32 %call811, 0
  br i1 %tobool812, label %if.then.813, label %if.end.814

if.then.813:                                      ; preds = %lor.lhs.false.810, %if.then.805
  br label %got_it

if.end.814:                                       ; preds = %lor.lhs.false.810
  br label %if.end.815

if.end.815:                                       ; preds = %if.end.814, %cond.end.798
  %419 = load i8*, i8** %s.addr, align 8
  %incdec.ptr816 = getelementptr inbounds i8, i8* %419, i32 1
  store i8* %incdec.ptr816, i8** %s.addr, align 8
  br label %while.cond.739

while.end.817:                                    ; preds = %while.cond.739
  br label %if.end.818

if.end.818:                                       ; preds = %while.end.817, %while.end.681
  %420 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %minlen = getelementptr inbounds %struct.regexp, %struct.regexp* %420, i32 0, i32 10
  %421 = load i32, i32* %minlen, align 4
  %tobool819 = icmp ne i32 %421, 0
  br i1 %tobool819, label %if.end.828, label %land.lhs.true.820

land.lhs.true.820:                                ; preds = %if.end.818
  %422 = load i32, i32* %tmp, align 4
  %tobool821 = icmp ne i32 %422, 0
  br i1 %tobool821, label %land.lhs.true.822, label %if.end.828

land.lhs.true.822:                                ; preds = %land.lhs.true.820
  %423 = load i32, i32* %norun.addr, align 4
  %tobool823 = icmp ne i32 %423, 0
  br i1 %tobool823, label %if.then.827, label %lor.lhs.false.824

lor.lhs.false.824:                                ; preds = %land.lhs.true.822
  %424 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %425 = load i8*, i8** %s.addr, align 8
  %call825 = call i32 @S_regtry(%struct.regexp* %424, i8* %425)
  %tobool826 = icmp ne i32 %call825, 0
  br i1 %tobool826, label %if.then.827, label %if.end.828

if.then.827:                                      ; preds = %lor.lhs.false.824, %land.lhs.true.822
  br label %got_it

if.end.828:                                       ; preds = %lor.lhs.false.824, %land.lhs.true.820, %if.end.818
  br label %sw.epilog

sw.bb.829:                                        ; preds = %entry
  %426 = load i32, i32* @PL_reg_flags, align 4
  %or830 = or i32 %426, 1
  store i32 %or830, i32* @PL_reg_flags, align 4
  br label %sw.bb.831

sw.bb.831:                                        ; preds = %entry, %sw.bb.829
  %427 = load i8, i8* %do_utf8, align 1
  %tobool832 = icmp ne i8 %427, 0
  br i1 %tobool832, label %if.then.833, label %if.else.958

if.then.833:                                      ; preds = %sw.bb.831
  %428 = load i8*, i8** %s.addr, align 8
  %429 = load i8*, i8** @PL_bostr, align 8
  %cmp834 = icmp eq i8* %428, %429
  br i1 %cmp834, label %if.then.836, label %if.else.837

if.then.836:                                      ; preds = %if.then.833
  store i32 10, i32* %tmp, align 4
  br label %if.end.846

if.else.837:                                      ; preds = %if.then.833
  %430 = load i8*, i8** %s.addr, align 8
  %431 = load i8*, i8** @PL_bostr, align 8
  %call840 = call i8* @S_reghop3(i8* %430, i32 -1, i8* %431)
  store i8* %call840, i8** %r839, align 8
  %432 = load i8*, i8** %r839, align 8
  %433 = load i8*, i8** %r839, align 8
  %434 = load i8, i8* %433, align 1
  %idxprom841 = zext i8 %434 to i64
  %arrayidx842 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom841
  %435 = load i8, i8* %arrayidx842, align 1
  %conv843 = zext i8 %435 to i64
  %call844 = call i64 @Perl_utf8n_to_uvuni(i8* %432, i64 %conv843, i64* null, i32 0)
  %conv845 = trunc i64 %call844 to i32
  store i32 %conv845, i32* %tmp, align 4
  br label %if.end.846

if.end.846:                                       ; preds = %if.else.837, %if.then.836
  %436 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %type847 = getelementptr inbounds %struct.regnode, %struct.regnode* %436, i32 0, i32 1
  %437 = load i8, i8* %type847, align 1
  %conv848 = zext i8 %437 to i32
  %cmp849 = icmp eq i32 %conv848, 11
  br i1 %cmp849, label %cond.true.851, label %cond.false.855

cond.true.851:                                    ; preds = %if.end.846
  %438 = load i32, i32* %tmp, align 4
  %conv852 = sext i32 %438 to i64
  %call853 = call signext i8 @Perl_is_uni_alnum(i64 %conv852)
  %conv854 = sext i8 %call853 to i32
  br label %cond.end.882

cond.false.855:                                   ; preds = %if.end.846
  %439 = load i32, i32* %tmp, align 4
  %cmp856 = icmp slt i32 %439, 256
  br i1 %cmp856, label %cond.true.858, label %cond.false.876

cond.true.858:                                    ; preds = %cond.false.855
  %440 = load i32, i32* %tmp, align 4
  %and859 = and i32 %440, -128
  %cmp860 = icmp eq i32 %and859, 0
  br i1 %cmp860, label %land.rhs.862, label %land.end.874

land.rhs.862:                                     ; preds = %cond.true.858
  %441 = load i32, i32* %tmp, align 4
  %idxprom863 = sext i32 %441 to i64
  %call864 = call i16** @__ctype_b_loc()
  %442 = load i16*, i16** %call864, align 8
  %arrayidx865 = getelementptr inbounds i16, i16* %442, i64 %idxprom863
  %443 = load i16, i16* %arrayidx865, align 2
  %conv866 = zext i16 %443 to i32
  %and867 = and i32 %conv866, 8
  %tobool868 = icmp ne i32 %and867, 0
  br i1 %tobool868, label %lor.end.872, label %lor.rhs.869

lor.rhs.869:                                      ; preds = %land.rhs.862
  %444 = load i32, i32* %tmp, align 4
  %cmp870 = icmp eq i32 %444, 95
  br label %lor.end.872

lor.end.872:                                      ; preds = %lor.rhs.869, %land.rhs.862
  %445 = phi i1 [ true, %land.rhs.862 ], [ %cmp870, %lor.rhs.869 ]
  br label %land.end.874

land.end.874:                                     ; preds = %lor.end.872, %cond.true.858
  %446 = phi i1 [ false, %cond.true.858 ], [ %445, %lor.end.872 ]
  %land.ext875 = zext i1 %446 to i32
  br label %cond.end.880

cond.false.876:                                   ; preds = %cond.false.855
  %447 = load i32, i32* %tmp, align 4
  %conv877 = sext i32 %447 to i64
  %call878 = call signext i8 @Perl_is_uni_alnum_lc(i64 %conv877)
  %conv879 = sext i8 %call878 to i32
  br label %cond.end.880

cond.end.880:                                     ; preds = %cond.false.876, %land.end.874
  %cond881 = phi i32 [ %land.ext875, %land.end.874 ], [ %conv879, %cond.false.876 ]
  br label %cond.end.882

cond.end.882:                                     ; preds = %cond.end.880, %cond.true.851
  %cond883 = phi i32 [ %conv854, %cond.true.851 ], [ %cond881, %cond.end.880 ]
  %cmp884 = icmp ne i32 %cond883, 0
  %conv885 = zext i1 %cmp884 to i32
  store i32 %conv885, i32* %tmp, align 4
  %448 = load %struct.sv*, %struct.sv** @PL_utf8_alnum, align 8
  %tobool886 = icmp ne %struct.sv* %448, null
  br i1 %tobool886, label %if.end.889, label %if.then.887

if.then.887:                                      ; preds = %cond.end.882
  call void @Perl_push_scope()
  call void @Perl_save_re_context()
  %call888 = call signext i8 @Perl_is_utf8_alnum(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0))
  call void @Perl_pop_scope()
  br label %if.end.889

if.end.889:                                       ; preds = %if.then.887, %cond.end.882
  br label %while.cond.890

while.cond.890:                                   ; preds = %if.end.955, %if.end.889
  %449 = load i8*, i8** %s.addr, align 8
  %450 = load i8*, i8** %s.addr, align 8
  %451 = load i8, i8* %450, align 1
  %idxprom891 = zext i8 %451 to i64
  %arrayidx892 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom891
  %452 = load i8, i8* %arrayidx892, align 1
  %conv893 = zext i8 %452 to i64
  store i64 %conv893, i64* %uskip, align 8
  %add.ptr894 = getelementptr inbounds i8, i8* %449, i64 %conv893
  %453 = load i8*, i8** %strend.addr, align 8
  %cmp895 = icmp ule i8* %add.ptr894, %453
  br i1 %cmp895, label %while.body.897, label %while.end.957

while.body.897:                                   ; preds = %while.cond.890
  %454 = load i32, i32* %tmp, align 4
  %455 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %type898 = getelementptr inbounds %struct.regnode, %struct.regnode* %455, i32 0, i32 1
  %456 = load i8, i8* %type898, align 1
  %conv899 = zext i8 %456 to i32
  %cmp900 = icmp eq i32 %conv899, 11
  br i1 %cmp900, label %cond.true.902, label %cond.false.904

cond.true.902:                                    ; preds = %while.body.897
  %457 = load %struct.sv*, %struct.sv** @PL_utf8_alnum, align 8
  %458 = load i8*, i8** %s.addr, align 8
  %459 = load i8, i8* %do_utf8, align 1
  %call903 = call i64 @Perl_swash_fetch(%struct.sv* %457, i8* %458, i8 signext %459)
  br label %cond.end.937

cond.false.904:                                   ; preds = %while.body.897
  %460 = load i8*, i8** %s.addr, align 8
  %call905 = call i64 @Perl_utf8_to_uvchr(i8* %460, i64* null)
  %cmp906 = icmp ult i64 %call905, 256
  br i1 %cmp906, label %cond.true.908, label %cond.false.930

cond.true.908:                                    ; preds = %cond.false.904
  %461 = load i8*, i8** %s.addr, align 8
  %call909 = call i64 @Perl_utf8_to_uvchr(i8* %461, i64* null)
  %and910 = and i64 %call909, -128
  %cmp911 = icmp eq i64 %and910, 0
  br i1 %cmp911, label %land.rhs.913, label %land.end.928

land.rhs.913:                                     ; preds = %cond.true.908
  %462 = load i8*, i8** %s.addr, align 8
  %call914 = call i64 @Perl_utf8_to_uvchr(i8* %462, i64* null)
  %conv915 = trunc i64 %call914 to i32
  %idxprom916 = sext i32 %conv915 to i64
  %call917 = call i16** @__ctype_b_loc()
  %463 = load i16*, i16** %call917, align 8
  %arrayidx918 = getelementptr inbounds i16, i16* %463, i64 %idxprom916
  %464 = load i16, i16* %arrayidx918, align 2
  %conv919 = zext i16 %464 to i32
  %and920 = and i32 %conv919, 8
  %tobool921 = icmp ne i32 %and920, 0
  br i1 %tobool921, label %lor.end.926, label %lor.rhs.922

lor.rhs.922:                                      ; preds = %land.rhs.913
  %465 = load i8*, i8** %s.addr, align 8
  %call923 = call i64 @Perl_utf8_to_uvchr(i8* %465, i64* null)
  %cmp924 = icmp eq i64 %call923, 95
  br label %lor.end.926

lor.end.926:                                      ; preds = %lor.rhs.922, %land.rhs.913
  %466 = phi i1 [ true, %land.rhs.913 ], [ %cmp924, %lor.rhs.922 ]
  br label %land.end.928

land.end.928:                                     ; preds = %lor.end.926, %cond.true.908
  %467 = phi i1 [ false, %cond.true.908 ], [ %466, %lor.end.926 ]
  %land.ext929 = zext i1 %467 to i32
  br label %cond.end.934

cond.false.930:                                   ; preds = %cond.false.904
  %468 = load i8*, i8** %s.addr, align 8
  %call931 = call i64 @Perl_utf8_to_uvchr(i8* %468, i64* null)
  %call932 = call signext i8 @Perl_is_uni_alnum_lc(i64 %call931)
  %conv933 = sext i8 %call932 to i32
  br label %cond.end.934

cond.end.934:                                     ; preds = %cond.false.930, %land.end.928
  %cond935 = phi i32 [ %land.ext929, %land.end.928 ], [ %conv933, %cond.false.930 ]
  %conv936 = sext i32 %cond935 to i64
  br label %cond.end.937

cond.end.937:                                     ; preds = %cond.end.934, %cond.true.902
  %cond938 = phi i64 [ %call903, %cond.true.902 ], [ %conv936, %cond.end.934 ]
  %tobool939 = icmp ne i64 %cond938, 0
  %lnot940 = xor i1 %tobool939, true
  %lnot.ext941 = zext i1 %lnot940 to i32
  %cmp942 = icmp eq i32 %454, %lnot.ext941
  br i1 %cmp942, label %if.then.944, label %if.else.948

if.then.944:                                      ; preds = %cond.end.937
  %469 = load i32, i32* %tmp, align 4
  %tobool945 = icmp ne i32 %469, 0
  %lnot946 = xor i1 %tobool945, true
  %lnot.ext947 = zext i1 %lnot946 to i32
  store i32 %lnot.ext947, i32* %tmp, align 4
  br label %if.end.955

if.else.948:                                      ; preds = %cond.end.937
  %470 = load i32, i32* %norun.addr, align 4
  %tobool949 = icmp ne i32 %470, 0
  br i1 %tobool949, label %if.then.953, label %lor.lhs.false.950

lor.lhs.false.950:                                ; preds = %if.else.948
  %471 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %472 = load i8*, i8** %s.addr, align 8
  %call951 = call i32 @S_regtry(%struct.regexp* %471, i8* %472)
  %tobool952 = icmp ne i32 %call951, 0
  br i1 %tobool952, label %if.then.953, label %if.end.954

if.then.953:                                      ; preds = %lor.lhs.false.950, %if.else.948
  br label %got_it

if.end.954:                                       ; preds = %lor.lhs.false.950
  br label %if.end.955

if.end.955:                                       ; preds = %if.end.954, %if.then.944
  %473 = load i64, i64* %uskip, align 8
  %474 = load i8*, i8** %s.addr, align 8
  %add.ptr956 = getelementptr inbounds i8, i8* %474, i64 %473
  store i8* %add.ptr956, i8** %s.addr, align 8
  br label %while.cond.890

while.end.957:                                    ; preds = %while.cond.890
  br label %if.end.1096

if.else.958:                                      ; preds = %sw.bb.831
  %475 = load i8*, i8** %s.addr, align 8
  %476 = load i8*, i8** @PL_bostr, align 8
  %cmp959 = icmp ne i8* %475, %476
  br i1 %cmp959, label %cond.true.961, label %cond.false.964

cond.true.961:                                    ; preds = %if.else.958
  %477 = load i8*, i8** %s.addr, align 8
  %add.ptr962 = getelementptr inbounds i8, i8* %477, i64 -1
  %478 = load i8, i8* %add.ptr962, align 1
  %conv963 = zext i8 %478 to i32
  br label %cond.end.965

cond.false.964:                                   ; preds = %if.else.958
  br label %cond.end.965

cond.end.965:                                     ; preds = %cond.false.964, %cond.true.961
  %cond966 = phi i32 [ %conv963, %cond.true.961 ], [ 10, %cond.false.964 ]
  store i32 %cond966, i32* %tmp, align 4
  %479 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %type967 = getelementptr inbounds %struct.regnode, %struct.regnode* %479, i32 0, i32 1
  %480 = load i8, i8* %type967, align 1
  %conv968 = zext i8 %480 to i32
  %cmp969 = icmp eq i32 %conv968, 11
  br i1 %cmp969, label %cond.true.971, label %cond.false.994

cond.true.971:                                    ; preds = %cond.end.965
  %481 = load i32, i32* %tmp, align 4
  %cmp972 = icmp sge i32 %481, 65
  br i1 %cmp972, label %land.lhs.true.974, label %lor.lhs.false.977

land.lhs.true.974:                                ; preds = %cond.true.971
  %482 = load i32, i32* %tmp, align 4
  %cmp975 = icmp sle i32 %482, 90
  br i1 %cmp975, label %lor.end.992, label %lor.lhs.false.977

lor.lhs.false.977:                                ; preds = %land.lhs.true.974, %cond.true.971
  %483 = load i32, i32* %tmp, align 4
  %cmp978 = icmp sge i32 %483, 97
  br i1 %cmp978, label %land.lhs.true.980, label %lor.lhs.false.983

land.lhs.true.980:                                ; preds = %lor.lhs.false.977
  %484 = load i32, i32* %tmp, align 4
  %cmp981 = icmp sle i32 %484, 122
  br i1 %cmp981, label %lor.end.992, label %lor.lhs.false.983

lor.lhs.false.983:                                ; preds = %land.lhs.true.980, %lor.lhs.false.977
  %485 = load i32, i32* %tmp, align 4
  %cmp984 = icmp sge i32 %485, 48
  br i1 %cmp984, label %land.lhs.true.986, label %lor.rhs.989

land.lhs.true.986:                                ; preds = %lor.lhs.false.983
  %486 = load i32, i32* %tmp, align 4
  %cmp987 = icmp sle i32 %486, 57
  br i1 %cmp987, label %lor.end.992, label %lor.rhs.989

lor.rhs.989:                                      ; preds = %land.lhs.true.986, %lor.lhs.false.983
  %487 = load i32, i32* %tmp, align 4
  %cmp990 = icmp eq i32 %487, 95
  br label %lor.end.992

lor.end.992:                                      ; preds = %lor.rhs.989, %land.lhs.true.986, %land.lhs.true.980, %land.lhs.true.974
  %488 = phi i1 [ true, %land.lhs.true.986 ], [ true, %land.lhs.true.980 ], [ true, %land.lhs.true.974 ], [ %cmp990, %lor.rhs.989 ]
  %lor.ext993 = zext i1 %488 to i32
  br label %cond.end.1012

cond.false.994:                                   ; preds = %cond.end.965
  %489 = load i32, i32* %tmp, align 4
  %and995 = and i32 %489, -128
  %cmp996 = icmp eq i32 %and995, 0
  br i1 %cmp996, label %land.rhs.998, label %land.end.1010

land.rhs.998:                                     ; preds = %cond.false.994
  %490 = load i32, i32* %tmp, align 4
  %idxprom999 = sext i32 %490 to i64
  %call1000 = call i16** @__ctype_b_loc()
  %491 = load i16*, i16** %call1000, align 8
  %arrayidx1001 = getelementptr inbounds i16, i16* %491, i64 %idxprom999
  %492 = load i16, i16* %arrayidx1001, align 2
  %conv1002 = zext i16 %492 to i32
  %and1003 = and i32 %conv1002, 8
  %tobool1004 = icmp ne i32 %and1003, 0
  br i1 %tobool1004, label %lor.end.1008, label %lor.rhs.1005

lor.rhs.1005:                                     ; preds = %land.rhs.998
  %493 = load i32, i32* %tmp, align 4
  %cmp1006 = icmp eq i32 %493, 95
  br label %lor.end.1008

lor.end.1008:                                     ; preds = %lor.rhs.1005, %land.rhs.998
  %494 = phi i1 [ true, %land.rhs.998 ], [ %cmp1006, %lor.rhs.1005 ]
  br label %land.end.1010

land.end.1010:                                    ; preds = %lor.end.1008, %cond.false.994
  %495 = phi i1 [ false, %cond.false.994 ], [ %494, %lor.end.1008 ]
  %land.ext1011 = zext i1 %495 to i32
  br label %cond.end.1012

cond.end.1012:                                    ; preds = %land.end.1010, %lor.end.992
  %cond1013 = phi i32 [ %lor.ext993, %lor.end.992 ], [ %land.ext1011, %land.end.1010 ]
  %cmp1014 = icmp ne i32 %cond1013, 0
  %conv1015 = zext i1 %cmp1014 to i32
  store i32 %conv1015, i32* %tmp, align 4
  br label %while.cond.1016

while.cond.1016:                                  ; preds = %if.end.1093, %cond.end.1012
  %496 = load i8*, i8** %s.addr, align 8
  %497 = load i8*, i8** %strend.addr, align 8
  %cmp1017 = icmp ult i8* %496, %497
  br i1 %cmp1017, label %while.body.1019, label %while.end.1095

while.body.1019:                                  ; preds = %while.cond.1016
  %498 = load i32, i32* %tmp, align 4
  %499 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %type1020 = getelementptr inbounds %struct.regnode, %struct.regnode* %499, i32 0, i32 1
  %500 = load i8, i8* %type1020, align 1
  %conv1021 = zext i8 %500 to i32
  %cmp1022 = icmp eq i32 %conv1021, 11
  br i1 %cmp1022, label %cond.true.1024, label %cond.false.1054

cond.true.1024:                                   ; preds = %while.body.1019
  %501 = load i8*, i8** %s.addr, align 8
  %502 = load i8, i8* %501, align 1
  %conv1025 = sext i8 %502 to i32
  %cmp1026 = icmp sge i32 %conv1025, 65
  br i1 %cmp1026, label %land.lhs.true.1028, label %lor.lhs.false.1032

land.lhs.true.1028:                               ; preds = %cond.true.1024
  %503 = load i8*, i8** %s.addr, align 8
  %504 = load i8, i8* %503, align 1
  %conv1029 = sext i8 %504 to i32
  %cmp1030 = icmp sle i32 %conv1029, 90
  br i1 %cmp1030, label %lor.end.1052, label %lor.lhs.false.1032

lor.lhs.false.1032:                               ; preds = %land.lhs.true.1028, %cond.true.1024
  %505 = load i8*, i8** %s.addr, align 8
  %506 = load i8, i8* %505, align 1
  %conv1033 = sext i8 %506 to i32
  %cmp1034 = icmp sge i32 %conv1033, 97
  br i1 %cmp1034, label %land.lhs.true.1036, label %lor.lhs.false.1040

land.lhs.true.1036:                               ; preds = %lor.lhs.false.1032
  %507 = load i8*, i8** %s.addr, align 8
  %508 = load i8, i8* %507, align 1
  %conv1037 = sext i8 %508 to i32
  %cmp1038 = icmp sle i32 %conv1037, 122
  br i1 %cmp1038, label %lor.end.1052, label %lor.lhs.false.1040

lor.lhs.false.1040:                               ; preds = %land.lhs.true.1036, %lor.lhs.false.1032
  %509 = load i8*, i8** %s.addr, align 8
  %510 = load i8, i8* %509, align 1
  %conv1041 = sext i8 %510 to i32
  %cmp1042 = icmp sge i32 %conv1041, 48
  br i1 %cmp1042, label %land.lhs.true.1044, label %lor.rhs.1048

land.lhs.true.1044:                               ; preds = %lor.lhs.false.1040
  %511 = load i8*, i8** %s.addr, align 8
  %512 = load i8, i8* %511, align 1
  %conv1045 = sext i8 %512 to i32
  %cmp1046 = icmp sle i32 %conv1045, 57
  br i1 %cmp1046, label %lor.end.1052, label %lor.rhs.1048

lor.rhs.1048:                                     ; preds = %land.lhs.true.1044, %lor.lhs.false.1040
  %513 = load i8*, i8** %s.addr, align 8
  %514 = load i8, i8* %513, align 1
  %conv1049 = sext i8 %514 to i32
  %cmp1050 = icmp eq i32 %conv1049, 95
  br label %lor.end.1052

lor.end.1052:                                     ; preds = %lor.rhs.1048, %land.lhs.true.1044, %land.lhs.true.1036, %land.lhs.true.1028
  %515 = phi i1 [ true, %land.lhs.true.1044 ], [ true, %land.lhs.true.1036 ], [ true, %land.lhs.true.1028 ], [ %cmp1050, %lor.rhs.1048 ]
  %lor.ext1053 = zext i1 %515 to i32
  br label %cond.end.1075

cond.false.1054:                                  ; preds = %while.body.1019
  %516 = load i8*, i8** %s.addr, align 8
  %517 = load i8, i8* %516, align 1
  %conv1055 = sext i8 %517 to i32
  %and1056 = and i32 %conv1055, -128
  %cmp1057 = icmp eq i32 %and1056, 0
  br i1 %cmp1057, label %land.rhs.1059, label %land.end.1073

land.rhs.1059:                                    ; preds = %cond.false.1054
  %518 = load i8*, i8** %s.addr, align 8
  %519 = load i8, i8* %518, align 1
  %conv1060 = sext i8 %519 to i32
  %idxprom1061 = sext i32 %conv1060 to i64
  %call1062 = call i16** @__ctype_b_loc()
  %520 = load i16*, i16** %call1062, align 8
  %arrayidx1063 = getelementptr inbounds i16, i16* %520, i64 %idxprom1061
  %521 = load i16, i16* %arrayidx1063, align 2
  %conv1064 = zext i16 %521 to i32
  %and1065 = and i32 %conv1064, 8
  %tobool1066 = icmp ne i32 %and1065, 0
  br i1 %tobool1066, label %lor.end.1071, label %lor.rhs.1067

lor.rhs.1067:                                     ; preds = %land.rhs.1059
  %522 = load i8*, i8** %s.addr, align 8
  %523 = load i8, i8* %522, align 1
  %conv1068 = sext i8 %523 to i32
  %cmp1069 = icmp eq i32 %conv1068, 95
  br label %lor.end.1071

lor.end.1071:                                     ; preds = %lor.rhs.1067, %land.rhs.1059
  %524 = phi i1 [ true, %land.rhs.1059 ], [ %cmp1069, %lor.rhs.1067 ]
  br label %land.end.1073

land.end.1073:                                    ; preds = %lor.end.1071, %cond.false.1054
  %525 = phi i1 [ false, %cond.false.1054 ], [ %524, %lor.end.1071 ]
  %land.ext1074 = zext i1 %525 to i32
  br label %cond.end.1075

cond.end.1075:                                    ; preds = %land.end.1073, %lor.end.1052
  %cond1076 = phi i32 [ %lor.ext1053, %lor.end.1052 ], [ %land.ext1074, %land.end.1073 ]
  %tobool1077 = icmp ne i32 %cond1076, 0
  %lnot1078 = xor i1 %tobool1077, true
  %lnot.ext1079 = zext i1 %lnot1078 to i32
  %cmp1080 = icmp eq i32 %498, %lnot.ext1079
  br i1 %cmp1080, label %if.then.1082, label %if.else.1086

if.then.1082:                                     ; preds = %cond.end.1075
  %526 = load i32, i32* %tmp, align 4
  %tobool1083 = icmp ne i32 %526, 0
  %lnot1084 = xor i1 %tobool1083, true
  %lnot.ext1085 = zext i1 %lnot1084 to i32
  store i32 %lnot.ext1085, i32* %tmp, align 4
  br label %if.end.1093

if.else.1086:                                     ; preds = %cond.end.1075
  %527 = load i32, i32* %norun.addr, align 4
  %tobool1087 = icmp ne i32 %527, 0
  br i1 %tobool1087, label %if.then.1091, label %lor.lhs.false.1088

lor.lhs.false.1088:                               ; preds = %if.else.1086
  %528 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %529 = load i8*, i8** %s.addr, align 8
  %call1089 = call i32 @S_regtry(%struct.regexp* %528, i8* %529)
  %tobool1090 = icmp ne i32 %call1089, 0
  br i1 %tobool1090, label %if.then.1091, label %if.end.1092

if.then.1091:                                     ; preds = %lor.lhs.false.1088, %if.else.1086
  br label %got_it

if.end.1092:                                      ; preds = %lor.lhs.false.1088
  br label %if.end.1093

if.end.1093:                                      ; preds = %if.end.1092, %if.then.1082
  %530 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1094 = getelementptr inbounds i8, i8* %530, i32 1
  store i8* %incdec.ptr1094, i8** %s.addr, align 8
  br label %while.cond.1016

while.end.1095:                                   ; preds = %while.cond.1016
  br label %if.end.1096

if.end.1096:                                      ; preds = %while.end.1095, %while.end.957
  %531 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %minlen1097 = getelementptr inbounds %struct.regexp, %struct.regexp* %531, i32 0, i32 10
  %532 = load i32, i32* %minlen1097, align 4
  %tobool1098 = icmp ne i32 %532, 0
  br i1 %tobool1098, label %if.end.1107, label %land.lhs.true.1099

land.lhs.true.1099:                               ; preds = %if.end.1096
  %533 = load i32, i32* %tmp, align 4
  %tobool1100 = icmp ne i32 %533, 0
  br i1 %tobool1100, label %if.end.1107, label %land.lhs.true.1101

land.lhs.true.1101:                               ; preds = %land.lhs.true.1099
  %534 = load i32, i32* %norun.addr, align 4
  %tobool1102 = icmp ne i32 %534, 0
  br i1 %tobool1102, label %if.then.1106, label %lor.lhs.false.1103

lor.lhs.false.1103:                               ; preds = %land.lhs.true.1101
  %535 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %536 = load i8*, i8** %s.addr, align 8
  %call1104 = call i32 @S_regtry(%struct.regexp* %535, i8* %536)
  %tobool1105 = icmp ne i32 %call1104, 0
  br i1 %tobool1105, label %if.then.1106, label %if.end.1107

if.then.1106:                                     ; preds = %lor.lhs.false.1103, %land.lhs.true.1101
  br label %got_it

if.end.1107:                                      ; preds = %lor.lhs.false.1103, %land.lhs.true.1099, %if.end.1096
  br label %sw.epilog

sw.bb.1108:                                       ; preds = %entry
  %537 = load i8, i8* %do_utf8, align 1
  %tobool1109 = icmp ne i8 %537, 0
  br i1 %tobool1109, label %if.then.1110, label %if.else.1139

if.then.1110:                                     ; preds = %sw.bb.1108
  %538 = load %struct.sv*, %struct.sv** @PL_utf8_alnum, align 8
  %tobool1111 = icmp ne %struct.sv* %538, null
  br i1 %tobool1111, label %if.end.1114, label %if.then.1112

if.then.1112:                                     ; preds = %if.then.1110
  call void @Perl_push_scope()
  call void @Perl_save_re_context()
  %call1113 = call signext i8 @Perl_is_utf8_alnum(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0))
  call void @Perl_pop_scope()
  br label %if.end.1114

if.end.1114:                                      ; preds = %if.then.1112, %if.then.1110
  br label %while.cond.1115

while.cond.1115:                                  ; preds = %if.end.1136, %if.end.1114
  %539 = load i8*, i8** %s.addr, align 8
  %540 = load i8*, i8** %s.addr, align 8
  %541 = load i8, i8* %540, align 1
  %idxprom1116 = zext i8 %541 to i64
  %arrayidx1117 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom1116
  %542 = load i8, i8* %arrayidx1117, align 1
  %conv1118 = zext i8 %542 to i64
  store i64 %conv1118, i64* %uskip, align 8
  %add.ptr1119 = getelementptr inbounds i8, i8* %539, i64 %conv1118
  %543 = load i8*, i8** %strend.addr, align 8
  %cmp1120 = icmp ule i8* %add.ptr1119, %543
  br i1 %cmp1120, label %while.body.1122, label %while.end.1138

while.body.1122:                                  ; preds = %while.cond.1115
  %544 = load %struct.sv*, %struct.sv** @PL_utf8_alnum, align 8
  %545 = load i8*, i8** %s.addr, align 8
  %546 = load i8, i8* %do_utf8, align 1
  %call1123 = call i64 @Perl_swash_fetch(%struct.sv* %544, i8* %545, i8 signext %546)
  %tobool1124 = icmp ne i64 %call1123, 0
  br i1 %tobool1124, label %if.then.1125, label %if.else.1135

if.then.1125:                                     ; preds = %while.body.1122
  %547 = load i32, i32* %tmp, align 4
  %tobool1126 = icmp ne i32 %547, 0
  br i1 %tobool1126, label %land.lhs.true.1127, label %if.else.1133

land.lhs.true.1127:                               ; preds = %if.then.1125
  %548 = load i32, i32* %norun.addr, align 4
  %tobool1128 = icmp ne i32 %548, 0
  br i1 %tobool1128, label %if.then.1132, label %lor.lhs.false.1129

lor.lhs.false.1129:                               ; preds = %land.lhs.true.1127
  %549 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %550 = load i8*, i8** %s.addr, align 8
  %call1130 = call i32 @S_regtry(%struct.regexp* %549, i8* %550)
  %tobool1131 = icmp ne i32 %call1130, 0
  br i1 %tobool1131, label %if.then.1132, label %if.else.1133

if.then.1132:                                     ; preds = %lor.lhs.false.1129, %land.lhs.true.1127
  br label %got_it

if.else.1133:                                     ; preds = %lor.lhs.false.1129, %if.then.1125
  %551 = load i32, i32* %doevery, align 4
  store i32 %551, i32* %tmp, align 4
  br label %if.end.1134

if.end.1134:                                      ; preds = %if.else.1133
  br label %if.end.1136

if.else.1135:                                     ; preds = %while.body.1122
  store i32 1, i32* %tmp, align 4
  br label %if.end.1136

if.end.1136:                                      ; preds = %if.else.1135, %if.end.1134
  %552 = load i64, i64* %uskip, align 8
  %553 = load i8*, i8** %s.addr, align 8
  %add.ptr1137 = getelementptr inbounds i8, i8* %553, i64 %552
  store i8* %add.ptr1137, i8** %s.addr, align 8
  br label %while.cond.1115

while.end.1138:                                   ; preds = %while.cond.1115
  br label %if.end.1185

if.else.1139:                                     ; preds = %sw.bb.1108
  br label %while.cond.1140

while.cond.1140:                                  ; preds = %if.end.1182, %if.else.1139
  %554 = load i8*, i8** %s.addr, align 8
  %555 = load i8*, i8** %strend.addr, align 8
  %cmp1141 = icmp ult i8* %554, %555
  br i1 %cmp1141, label %while.body.1143, label %while.end.1184

while.body.1143:                                  ; preds = %while.cond.1140
  %556 = load i8*, i8** %s.addr, align 8
  %557 = load i8, i8* %556, align 1
  %conv1144 = sext i8 %557 to i32
  %cmp1145 = icmp sge i32 %conv1144, 65
  br i1 %cmp1145, label %land.lhs.true.1147, label %lor.lhs.false.1151

land.lhs.true.1147:                               ; preds = %while.body.1143
  %558 = load i8*, i8** %s.addr, align 8
  %559 = load i8, i8* %558, align 1
  %conv1148 = sext i8 %559 to i32
  %cmp1149 = icmp sle i32 %conv1148, 90
  br i1 %cmp1149, label %if.then.1171, label %lor.lhs.false.1151

lor.lhs.false.1151:                               ; preds = %land.lhs.true.1147, %while.body.1143
  %560 = load i8*, i8** %s.addr, align 8
  %561 = load i8, i8* %560, align 1
  %conv1152 = sext i8 %561 to i32
  %cmp1153 = icmp sge i32 %conv1152, 97
  br i1 %cmp1153, label %land.lhs.true.1155, label %lor.lhs.false.1159

land.lhs.true.1155:                               ; preds = %lor.lhs.false.1151
  %562 = load i8*, i8** %s.addr, align 8
  %563 = load i8, i8* %562, align 1
  %conv1156 = sext i8 %563 to i32
  %cmp1157 = icmp sle i32 %conv1156, 122
  br i1 %cmp1157, label %if.then.1171, label %lor.lhs.false.1159

lor.lhs.false.1159:                               ; preds = %land.lhs.true.1155, %lor.lhs.false.1151
  %564 = load i8*, i8** %s.addr, align 8
  %565 = load i8, i8* %564, align 1
  %conv1160 = sext i8 %565 to i32
  %cmp1161 = icmp sge i32 %conv1160, 48
  br i1 %cmp1161, label %land.lhs.true.1163, label %lor.lhs.false.1167

land.lhs.true.1163:                               ; preds = %lor.lhs.false.1159
  %566 = load i8*, i8** %s.addr, align 8
  %567 = load i8, i8* %566, align 1
  %conv1164 = sext i8 %567 to i32
  %cmp1165 = icmp sle i32 %conv1164, 57
  br i1 %cmp1165, label %if.then.1171, label %lor.lhs.false.1167

lor.lhs.false.1167:                               ; preds = %land.lhs.true.1163, %lor.lhs.false.1159
  %568 = load i8*, i8** %s.addr, align 8
  %569 = load i8, i8* %568, align 1
  %conv1168 = sext i8 %569 to i32
  %cmp1169 = icmp eq i32 %conv1168, 95
  br i1 %cmp1169, label %if.then.1171, label %if.else.1181

if.then.1171:                                     ; preds = %lor.lhs.false.1167, %land.lhs.true.1163, %land.lhs.true.1155, %land.lhs.true.1147
  %570 = load i32, i32* %tmp, align 4
  %tobool1172 = icmp ne i32 %570, 0
  br i1 %tobool1172, label %land.lhs.true.1173, label %if.else.1179

land.lhs.true.1173:                               ; preds = %if.then.1171
  %571 = load i32, i32* %norun.addr, align 4
  %tobool1174 = icmp ne i32 %571, 0
  br i1 %tobool1174, label %if.then.1178, label %lor.lhs.false.1175

lor.lhs.false.1175:                               ; preds = %land.lhs.true.1173
  %572 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %573 = load i8*, i8** %s.addr, align 8
  %call1176 = call i32 @S_regtry(%struct.regexp* %572, i8* %573)
  %tobool1177 = icmp ne i32 %call1176, 0
  br i1 %tobool1177, label %if.then.1178, label %if.else.1179

if.then.1178:                                     ; preds = %lor.lhs.false.1175, %land.lhs.true.1173
  br label %got_it

if.else.1179:                                     ; preds = %lor.lhs.false.1175, %if.then.1171
  %574 = load i32, i32* %doevery, align 4
  store i32 %574, i32* %tmp, align 4
  br label %if.end.1180

if.end.1180:                                      ; preds = %if.else.1179
  br label %if.end.1182

if.else.1181:                                     ; preds = %lor.lhs.false.1167
  store i32 1, i32* %tmp, align 4
  br label %if.end.1182

if.end.1182:                                      ; preds = %if.else.1181, %if.end.1180
  %575 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1183 = getelementptr inbounds i8, i8* %575, i32 1
  store i8* %incdec.ptr1183, i8** %s.addr, align 8
  br label %while.cond.1140

while.end.1184:                                   ; preds = %while.cond.1140
  br label %if.end.1185

if.end.1185:                                      ; preds = %while.end.1184, %while.end.1138
  br label %sw.epilog

sw.bb.1186:                                       ; preds = %entry
  %576 = load i32, i32* @PL_reg_flags, align 4
  %or1187 = or i32 %576, 1
  store i32 %or1187, i32* @PL_reg_flags, align 4
  %577 = load i8, i8* %do_utf8, align 1
  %tobool1188 = icmp ne i8 %577, 0
  br i1 %tobool1188, label %if.then.1189, label %if.else.1238

if.then.1189:                                     ; preds = %sw.bb.1186
  br label %while.cond.1190

while.cond.1190:                                  ; preds = %if.end.1235, %if.then.1189
  %578 = load i8*, i8** %s.addr, align 8
  %579 = load i8*, i8** %s.addr, align 8
  %580 = load i8, i8* %579, align 1
  %idxprom1191 = zext i8 %580 to i64
  %arrayidx1192 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom1191
  %581 = load i8, i8* %arrayidx1192, align 1
  %conv1193 = zext i8 %581 to i64
  store i64 %conv1193, i64* %uskip, align 8
  %add.ptr1194 = getelementptr inbounds i8, i8* %578, i64 %conv1193
  %582 = load i8*, i8** %strend.addr, align 8
  %cmp1195 = icmp ule i8* %add.ptr1194, %582
  br i1 %cmp1195, label %while.body.1197, label %while.end.1237

while.body.1197:                                  ; preds = %while.cond.1190
  %583 = load i8*, i8** %s.addr, align 8
  %call1198 = call i64 @Perl_utf8_to_uvchr(i8* %583, i64* null)
  %cmp1199 = icmp ult i64 %call1198, 256
  br i1 %cmp1199, label %cond.true.1201, label %cond.false.1219

cond.true.1201:                                   ; preds = %while.body.1197
  %584 = load i8*, i8** %s.addr, align 8
  %call1202 = call i64 @Perl_utf8_to_uvchr(i8* %584, i64* null)
  %and1203 = and i64 %call1202, -128
  %cmp1204 = icmp eq i64 %and1203, 0
  br i1 %cmp1204, label %land.lhs.true.1206, label %if.else.1234

land.lhs.true.1206:                               ; preds = %cond.true.1201
  %585 = load i8*, i8** %s.addr, align 8
  %call1207 = call i64 @Perl_utf8_to_uvchr(i8* %585, i64* null)
  %conv1208 = trunc i64 %call1207 to i32
  %idxprom1209 = sext i32 %conv1208 to i64
  %call1210 = call i16** @__ctype_b_loc()
  %586 = load i16*, i16** %call1210, align 8
  %arrayidx1211 = getelementptr inbounds i16, i16* %586, i64 %idxprom1209
  %587 = load i16, i16* %arrayidx1211, align 2
  %conv1212 = zext i16 %587 to i32
  %and1213 = and i32 %conv1212, 8
  %tobool1214 = icmp ne i32 %and1213, 0
  br i1 %tobool1214, label %if.then.1224, label %lor.lhs.false.1215

lor.lhs.false.1215:                               ; preds = %land.lhs.true.1206
  %588 = load i8*, i8** %s.addr, align 8
  %call1216 = call i64 @Perl_utf8_to_uvchr(i8* %588, i64* null)
  %cmp1217 = icmp eq i64 %call1216, 95
  br i1 %cmp1217, label %if.then.1224, label %if.else.1234

cond.false.1219:                                  ; preds = %while.body.1197
  %589 = load i8*, i8** %s.addr, align 8
  %call1220 = call i64 @Perl_utf8_to_uvchr(i8* %589, i64* null)
  %call1221 = call signext i8 @Perl_is_uni_alnum_lc(i64 %call1220)
  %conv1222 = sext i8 %call1221 to i32
  %tobool1223 = icmp ne i32 %conv1222, 0
  br i1 %tobool1223, label %if.then.1224, label %if.else.1234

if.then.1224:                                     ; preds = %cond.false.1219, %lor.lhs.false.1215, %land.lhs.true.1206
  %590 = load i32, i32* %tmp, align 4
  %tobool1225 = icmp ne i32 %590, 0
  br i1 %tobool1225, label %land.lhs.true.1226, label %if.else.1232

land.lhs.true.1226:                               ; preds = %if.then.1224
  %591 = load i32, i32* %norun.addr, align 4
  %tobool1227 = icmp ne i32 %591, 0
  br i1 %tobool1227, label %if.then.1231, label %lor.lhs.false.1228

lor.lhs.false.1228:                               ; preds = %land.lhs.true.1226
  %592 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %593 = load i8*, i8** %s.addr, align 8
  %call1229 = call i32 @S_regtry(%struct.regexp* %592, i8* %593)
  %tobool1230 = icmp ne i32 %call1229, 0
  br i1 %tobool1230, label %if.then.1231, label %if.else.1232

if.then.1231:                                     ; preds = %lor.lhs.false.1228, %land.lhs.true.1226
  br label %got_it

if.else.1232:                                     ; preds = %lor.lhs.false.1228, %if.then.1224
  %594 = load i32, i32* %doevery, align 4
  store i32 %594, i32* %tmp, align 4
  br label %if.end.1233

if.end.1233:                                      ; preds = %if.else.1232
  br label %if.end.1235

if.else.1234:                                     ; preds = %cond.false.1219, %lor.lhs.false.1215, %cond.true.1201
  store i32 1, i32* %tmp, align 4
  br label %if.end.1235

if.end.1235:                                      ; preds = %if.else.1234, %if.end.1233
  %595 = load i64, i64* %uskip, align 8
  %596 = load i8*, i8** %s.addr, align 8
  %add.ptr1236 = getelementptr inbounds i8, i8* %596, i64 %595
  store i8* %add.ptr1236, i8** %s.addr, align 8
  br label %while.cond.1190

while.end.1237:                                   ; preds = %while.cond.1190
  br label %if.end.1273

if.else.1238:                                     ; preds = %sw.bb.1186
  br label %while.cond.1239

while.cond.1239:                                  ; preds = %if.end.1270, %if.else.1238
  %597 = load i8*, i8** %s.addr, align 8
  %598 = load i8*, i8** %strend.addr, align 8
  %cmp1240 = icmp ult i8* %597, %598
  br i1 %cmp1240, label %while.body.1242, label %while.end.1272

while.body.1242:                                  ; preds = %while.cond.1239
  %599 = load i8*, i8** %s.addr, align 8
  %600 = load i8, i8* %599, align 1
  %conv1243 = sext i8 %600 to i32
  %and1244 = and i32 %conv1243, -128
  %cmp1245 = icmp eq i32 %and1244, 0
  br i1 %cmp1245, label %land.lhs.true.1247, label %if.else.1269

land.lhs.true.1247:                               ; preds = %while.body.1242
  %601 = load i8*, i8** %s.addr, align 8
  %602 = load i8, i8* %601, align 1
  %conv1248 = sext i8 %602 to i32
  %idxprom1249 = sext i32 %conv1248 to i64
  %call1250 = call i16** @__ctype_b_loc()
  %603 = load i16*, i16** %call1250, align 8
  %arrayidx1251 = getelementptr inbounds i16, i16* %603, i64 %idxprom1249
  %604 = load i16, i16* %arrayidx1251, align 2
  %conv1252 = zext i16 %604 to i32
  %and1253 = and i32 %conv1252, 8
  %tobool1254 = icmp ne i32 %and1253, 0
  br i1 %tobool1254, label %if.then.1259, label %lor.lhs.false.1255

lor.lhs.false.1255:                               ; preds = %land.lhs.true.1247
  %605 = load i8*, i8** %s.addr, align 8
  %606 = load i8, i8* %605, align 1
  %conv1256 = sext i8 %606 to i32
  %cmp1257 = icmp eq i32 %conv1256, 95
  br i1 %cmp1257, label %if.then.1259, label %if.else.1269

if.then.1259:                                     ; preds = %lor.lhs.false.1255, %land.lhs.true.1247
  %607 = load i32, i32* %tmp, align 4
  %tobool1260 = icmp ne i32 %607, 0
  br i1 %tobool1260, label %land.lhs.true.1261, label %if.else.1267

land.lhs.true.1261:                               ; preds = %if.then.1259
  %608 = load i32, i32* %norun.addr, align 4
  %tobool1262 = icmp ne i32 %608, 0
  br i1 %tobool1262, label %if.then.1266, label %lor.lhs.false.1263

lor.lhs.false.1263:                               ; preds = %land.lhs.true.1261
  %609 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %610 = load i8*, i8** %s.addr, align 8
  %call1264 = call i32 @S_regtry(%struct.regexp* %609, i8* %610)
  %tobool1265 = icmp ne i32 %call1264, 0
  br i1 %tobool1265, label %if.then.1266, label %if.else.1267

if.then.1266:                                     ; preds = %lor.lhs.false.1263, %land.lhs.true.1261
  br label %got_it

if.else.1267:                                     ; preds = %lor.lhs.false.1263, %if.then.1259
  %611 = load i32, i32* %doevery, align 4
  store i32 %611, i32* %tmp, align 4
  br label %if.end.1268

if.end.1268:                                      ; preds = %if.else.1267
  br label %if.end.1270

if.else.1269:                                     ; preds = %lor.lhs.false.1255, %while.body.1242
  store i32 1, i32* %tmp, align 4
  br label %if.end.1270

if.end.1270:                                      ; preds = %if.else.1269, %if.end.1268
  %612 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1271 = getelementptr inbounds i8, i8* %612, i32 1
  store i8* %incdec.ptr1271, i8** %s.addr, align 8
  br label %while.cond.1239

while.end.1272:                                   ; preds = %while.cond.1239
  br label %if.end.1273

if.end.1273:                                      ; preds = %while.end.1272, %while.end.1237
  br label %sw.epilog

sw.bb.1274:                                       ; preds = %entry
  %613 = load i8, i8* %do_utf8, align 1
  %tobool1275 = icmp ne i8 %613, 0
  br i1 %tobool1275, label %if.then.1276, label %if.else.1305

if.then.1276:                                     ; preds = %sw.bb.1274
  %614 = load %struct.sv*, %struct.sv** @PL_utf8_alnum, align 8
  %tobool1277 = icmp ne %struct.sv* %614, null
  br i1 %tobool1277, label %if.end.1280, label %if.then.1278

if.then.1278:                                     ; preds = %if.then.1276
  call void @Perl_push_scope()
  call void @Perl_save_re_context()
  %call1279 = call signext i8 @Perl_is_utf8_alnum(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0))
  call void @Perl_pop_scope()
  br label %if.end.1280

if.end.1280:                                      ; preds = %if.then.1278, %if.then.1276
  br label %while.cond.1281

while.cond.1281:                                  ; preds = %if.end.1302, %if.end.1280
  %615 = load i8*, i8** %s.addr, align 8
  %616 = load i8*, i8** %s.addr, align 8
  %617 = load i8, i8* %616, align 1
  %idxprom1282 = zext i8 %617 to i64
  %arrayidx1283 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom1282
  %618 = load i8, i8* %arrayidx1283, align 1
  %conv1284 = zext i8 %618 to i64
  store i64 %conv1284, i64* %uskip, align 8
  %add.ptr1285 = getelementptr inbounds i8, i8* %615, i64 %conv1284
  %619 = load i8*, i8** %strend.addr, align 8
  %cmp1286 = icmp ule i8* %add.ptr1285, %619
  br i1 %cmp1286, label %while.body.1288, label %while.end.1304

while.body.1288:                                  ; preds = %while.cond.1281
  %620 = load %struct.sv*, %struct.sv** @PL_utf8_alnum, align 8
  %621 = load i8*, i8** %s.addr, align 8
  %622 = load i8, i8* %do_utf8, align 1
  %call1289 = call i64 @Perl_swash_fetch(%struct.sv* %620, i8* %621, i8 signext %622)
  %tobool1290 = icmp ne i64 %call1289, 0
  br i1 %tobool1290, label %if.else.1301, label %if.then.1291

if.then.1291:                                     ; preds = %while.body.1288
  %623 = load i32, i32* %tmp, align 4
  %tobool1292 = icmp ne i32 %623, 0
  br i1 %tobool1292, label %land.lhs.true.1293, label %if.else.1299

land.lhs.true.1293:                               ; preds = %if.then.1291
  %624 = load i32, i32* %norun.addr, align 4
  %tobool1294 = icmp ne i32 %624, 0
  br i1 %tobool1294, label %if.then.1298, label %lor.lhs.false.1295

lor.lhs.false.1295:                               ; preds = %land.lhs.true.1293
  %625 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %626 = load i8*, i8** %s.addr, align 8
  %call1296 = call i32 @S_regtry(%struct.regexp* %625, i8* %626)
  %tobool1297 = icmp ne i32 %call1296, 0
  br i1 %tobool1297, label %if.then.1298, label %if.else.1299

if.then.1298:                                     ; preds = %lor.lhs.false.1295, %land.lhs.true.1293
  br label %got_it

if.else.1299:                                     ; preds = %lor.lhs.false.1295, %if.then.1291
  %627 = load i32, i32* %doevery, align 4
  store i32 %627, i32* %tmp, align 4
  br label %if.end.1300

if.end.1300:                                      ; preds = %if.else.1299
  br label %if.end.1302

if.else.1301:                                     ; preds = %while.body.1288
  store i32 1, i32* %tmp, align 4
  br label %if.end.1302

if.end.1302:                                      ; preds = %if.else.1301, %if.end.1300
  %628 = load i64, i64* %uskip, align 8
  %629 = load i8*, i8** %s.addr, align 8
  %add.ptr1303 = getelementptr inbounds i8, i8* %629, i64 %628
  store i8* %add.ptr1303, i8** %s.addr, align 8
  br label %while.cond.1281

while.end.1304:                                   ; preds = %while.cond.1281
  br label %if.end.1351

if.else.1305:                                     ; preds = %sw.bb.1274
  br label %while.cond.1306

while.cond.1306:                                  ; preds = %if.end.1348, %if.else.1305
  %630 = load i8*, i8** %s.addr, align 8
  %631 = load i8*, i8** %strend.addr, align 8
  %cmp1307 = icmp ult i8* %630, %631
  br i1 %cmp1307, label %while.body.1309, label %while.end.1350

while.body.1309:                                  ; preds = %while.cond.1306
  %632 = load i8*, i8** %s.addr, align 8
  %633 = load i8, i8* %632, align 1
  %conv1310 = sext i8 %633 to i32
  %cmp1311 = icmp sge i32 %conv1310, 65
  br i1 %cmp1311, label %land.lhs.true.1313, label %lor.lhs.false.1317

land.lhs.true.1313:                               ; preds = %while.body.1309
  %634 = load i8*, i8** %s.addr, align 8
  %635 = load i8, i8* %634, align 1
  %conv1314 = sext i8 %635 to i32
  %cmp1315 = icmp sle i32 %conv1314, 90
  br i1 %cmp1315, label %if.else.1347, label %lor.lhs.false.1317

lor.lhs.false.1317:                               ; preds = %land.lhs.true.1313, %while.body.1309
  %636 = load i8*, i8** %s.addr, align 8
  %637 = load i8, i8* %636, align 1
  %conv1318 = sext i8 %637 to i32
  %cmp1319 = icmp sge i32 %conv1318, 97
  br i1 %cmp1319, label %land.lhs.true.1321, label %lor.lhs.false.1325

land.lhs.true.1321:                               ; preds = %lor.lhs.false.1317
  %638 = load i8*, i8** %s.addr, align 8
  %639 = load i8, i8* %638, align 1
  %conv1322 = sext i8 %639 to i32
  %cmp1323 = icmp sle i32 %conv1322, 122
  br i1 %cmp1323, label %if.else.1347, label %lor.lhs.false.1325

lor.lhs.false.1325:                               ; preds = %land.lhs.true.1321, %lor.lhs.false.1317
  %640 = load i8*, i8** %s.addr, align 8
  %641 = load i8, i8* %640, align 1
  %conv1326 = sext i8 %641 to i32
  %cmp1327 = icmp sge i32 %conv1326, 48
  br i1 %cmp1327, label %land.lhs.true.1329, label %lor.lhs.false.1333

land.lhs.true.1329:                               ; preds = %lor.lhs.false.1325
  %642 = load i8*, i8** %s.addr, align 8
  %643 = load i8, i8* %642, align 1
  %conv1330 = sext i8 %643 to i32
  %cmp1331 = icmp sle i32 %conv1330, 57
  br i1 %cmp1331, label %if.else.1347, label %lor.lhs.false.1333

lor.lhs.false.1333:                               ; preds = %land.lhs.true.1329, %lor.lhs.false.1325
  %644 = load i8*, i8** %s.addr, align 8
  %645 = load i8, i8* %644, align 1
  %conv1334 = sext i8 %645 to i32
  %cmp1335 = icmp eq i32 %conv1334, 95
  br i1 %cmp1335, label %if.else.1347, label %if.then.1337

if.then.1337:                                     ; preds = %lor.lhs.false.1333
  %646 = load i32, i32* %tmp, align 4
  %tobool1338 = icmp ne i32 %646, 0
  br i1 %tobool1338, label %land.lhs.true.1339, label %if.else.1345

land.lhs.true.1339:                               ; preds = %if.then.1337
  %647 = load i32, i32* %norun.addr, align 4
  %tobool1340 = icmp ne i32 %647, 0
  br i1 %tobool1340, label %if.then.1344, label %lor.lhs.false.1341

lor.lhs.false.1341:                               ; preds = %land.lhs.true.1339
  %648 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %649 = load i8*, i8** %s.addr, align 8
  %call1342 = call i32 @S_regtry(%struct.regexp* %648, i8* %649)
  %tobool1343 = icmp ne i32 %call1342, 0
  br i1 %tobool1343, label %if.then.1344, label %if.else.1345

if.then.1344:                                     ; preds = %lor.lhs.false.1341, %land.lhs.true.1339
  br label %got_it

if.else.1345:                                     ; preds = %lor.lhs.false.1341, %if.then.1337
  %650 = load i32, i32* %doevery, align 4
  store i32 %650, i32* %tmp, align 4
  br label %if.end.1346

if.end.1346:                                      ; preds = %if.else.1345
  br label %if.end.1348

if.else.1347:                                     ; preds = %lor.lhs.false.1333, %land.lhs.true.1329, %land.lhs.true.1321, %land.lhs.true.1313
  store i32 1, i32* %tmp, align 4
  br label %if.end.1348

if.end.1348:                                      ; preds = %if.else.1347, %if.end.1346
  %651 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1349 = getelementptr inbounds i8, i8* %651, i32 1
  store i8* %incdec.ptr1349, i8** %s.addr, align 8
  br label %while.cond.1306

while.end.1350:                                   ; preds = %while.cond.1306
  br label %if.end.1351

if.end.1351:                                      ; preds = %while.end.1350, %while.end.1304
  br label %sw.epilog

sw.bb.1352:                                       ; preds = %entry
  %652 = load i32, i32* @PL_reg_flags, align 4
  %or1353 = or i32 %652, 1
  store i32 %or1353, i32* @PL_reg_flags, align 4
  %653 = load i8, i8* %do_utf8, align 1
  %tobool1354 = icmp ne i8 %653, 0
  br i1 %tobool1354, label %if.then.1355, label %if.else.1404

if.then.1355:                                     ; preds = %sw.bb.1352
  br label %while.cond.1356

while.cond.1356:                                  ; preds = %if.end.1401, %if.then.1355
  %654 = load i8*, i8** %s.addr, align 8
  %655 = load i8*, i8** %s.addr, align 8
  %656 = load i8, i8* %655, align 1
  %idxprom1357 = zext i8 %656 to i64
  %arrayidx1358 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom1357
  %657 = load i8, i8* %arrayidx1358, align 1
  %conv1359 = zext i8 %657 to i64
  store i64 %conv1359, i64* %uskip, align 8
  %add.ptr1360 = getelementptr inbounds i8, i8* %654, i64 %conv1359
  %658 = load i8*, i8** %strend.addr, align 8
  %cmp1361 = icmp ule i8* %add.ptr1360, %658
  br i1 %cmp1361, label %while.body.1363, label %while.end.1403

while.body.1363:                                  ; preds = %while.cond.1356
  %659 = load i8*, i8** %s.addr, align 8
  %call1364 = call i64 @Perl_utf8_to_uvchr(i8* %659, i64* null)
  %cmp1365 = icmp ult i64 %call1364, 256
  br i1 %cmp1365, label %cond.true.1367, label %cond.false.1385

cond.true.1367:                                   ; preds = %while.body.1363
  %660 = load i8*, i8** %s.addr, align 8
  %call1368 = call i64 @Perl_utf8_to_uvchr(i8* %660, i64* null)
  %and1369 = and i64 %call1368, -128
  %cmp1370 = icmp eq i64 %and1369, 0
  br i1 %cmp1370, label %land.lhs.true.1372, label %if.then.1390

land.lhs.true.1372:                               ; preds = %cond.true.1367
  %661 = load i8*, i8** %s.addr, align 8
  %call1373 = call i64 @Perl_utf8_to_uvchr(i8* %661, i64* null)
  %conv1374 = trunc i64 %call1373 to i32
  %idxprom1375 = sext i32 %conv1374 to i64
  %call1376 = call i16** @__ctype_b_loc()
  %662 = load i16*, i16** %call1376, align 8
  %arrayidx1377 = getelementptr inbounds i16, i16* %662, i64 %idxprom1375
  %663 = load i16, i16* %arrayidx1377, align 2
  %conv1378 = zext i16 %663 to i32
  %and1379 = and i32 %conv1378, 8
  %tobool1380 = icmp ne i32 %and1379, 0
  br i1 %tobool1380, label %if.else.1400, label %lor.lhs.false.1381

lor.lhs.false.1381:                               ; preds = %land.lhs.true.1372
  %664 = load i8*, i8** %s.addr, align 8
  %call1382 = call i64 @Perl_utf8_to_uvchr(i8* %664, i64* null)
  %cmp1383 = icmp eq i64 %call1382, 95
  br i1 %cmp1383, label %if.else.1400, label %if.then.1390

cond.false.1385:                                  ; preds = %while.body.1363
  %665 = load i8*, i8** %s.addr, align 8
  %call1386 = call i64 @Perl_utf8_to_uvchr(i8* %665, i64* null)
  %call1387 = call signext i8 @Perl_is_uni_alnum_lc(i64 %call1386)
  %conv1388 = sext i8 %call1387 to i32
  %tobool1389 = icmp ne i32 %conv1388, 0
  br i1 %tobool1389, label %if.else.1400, label %if.then.1390

if.then.1390:                                     ; preds = %cond.false.1385, %lor.lhs.false.1381, %cond.true.1367
  %666 = load i32, i32* %tmp, align 4
  %tobool1391 = icmp ne i32 %666, 0
  br i1 %tobool1391, label %land.lhs.true.1392, label %if.else.1398

land.lhs.true.1392:                               ; preds = %if.then.1390
  %667 = load i32, i32* %norun.addr, align 4
  %tobool1393 = icmp ne i32 %667, 0
  br i1 %tobool1393, label %if.then.1397, label %lor.lhs.false.1394

lor.lhs.false.1394:                               ; preds = %land.lhs.true.1392
  %668 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %669 = load i8*, i8** %s.addr, align 8
  %call1395 = call i32 @S_regtry(%struct.regexp* %668, i8* %669)
  %tobool1396 = icmp ne i32 %call1395, 0
  br i1 %tobool1396, label %if.then.1397, label %if.else.1398

if.then.1397:                                     ; preds = %lor.lhs.false.1394, %land.lhs.true.1392
  br label %got_it

if.else.1398:                                     ; preds = %lor.lhs.false.1394, %if.then.1390
  %670 = load i32, i32* %doevery, align 4
  store i32 %670, i32* %tmp, align 4
  br label %if.end.1399

if.end.1399:                                      ; preds = %if.else.1398
  br label %if.end.1401

if.else.1400:                                     ; preds = %cond.false.1385, %lor.lhs.false.1381, %land.lhs.true.1372
  store i32 1, i32* %tmp, align 4
  br label %if.end.1401

if.end.1401:                                      ; preds = %if.else.1400, %if.end.1399
  %671 = load i64, i64* %uskip, align 8
  %672 = load i8*, i8** %s.addr, align 8
  %add.ptr1402 = getelementptr inbounds i8, i8* %672, i64 %671
  store i8* %add.ptr1402, i8** %s.addr, align 8
  br label %while.cond.1356

while.end.1403:                                   ; preds = %while.cond.1356
  br label %if.end.1439

if.else.1404:                                     ; preds = %sw.bb.1352
  br label %while.cond.1405

while.cond.1405:                                  ; preds = %if.end.1436, %if.else.1404
  %673 = load i8*, i8** %s.addr, align 8
  %674 = load i8*, i8** %strend.addr, align 8
  %cmp1406 = icmp ult i8* %673, %674
  br i1 %cmp1406, label %while.body.1408, label %while.end.1438

while.body.1408:                                  ; preds = %while.cond.1405
  %675 = load i8*, i8** %s.addr, align 8
  %676 = load i8, i8* %675, align 1
  %conv1409 = sext i8 %676 to i32
  %and1410 = and i32 %conv1409, -128
  %cmp1411 = icmp eq i32 %and1410, 0
  br i1 %cmp1411, label %land.lhs.true.1413, label %if.then.1425

land.lhs.true.1413:                               ; preds = %while.body.1408
  %677 = load i8*, i8** %s.addr, align 8
  %678 = load i8, i8* %677, align 1
  %conv1414 = sext i8 %678 to i32
  %idxprom1415 = sext i32 %conv1414 to i64
  %call1416 = call i16** @__ctype_b_loc()
  %679 = load i16*, i16** %call1416, align 8
  %arrayidx1417 = getelementptr inbounds i16, i16* %679, i64 %idxprom1415
  %680 = load i16, i16* %arrayidx1417, align 2
  %conv1418 = zext i16 %680 to i32
  %and1419 = and i32 %conv1418, 8
  %tobool1420 = icmp ne i32 %and1419, 0
  br i1 %tobool1420, label %if.else.1435, label %lor.lhs.false.1421

lor.lhs.false.1421:                               ; preds = %land.lhs.true.1413
  %681 = load i8*, i8** %s.addr, align 8
  %682 = load i8, i8* %681, align 1
  %conv1422 = sext i8 %682 to i32
  %cmp1423 = icmp eq i32 %conv1422, 95
  br i1 %cmp1423, label %if.else.1435, label %if.then.1425

if.then.1425:                                     ; preds = %lor.lhs.false.1421, %while.body.1408
  %683 = load i32, i32* %tmp, align 4
  %tobool1426 = icmp ne i32 %683, 0
  br i1 %tobool1426, label %land.lhs.true.1427, label %if.else.1433

land.lhs.true.1427:                               ; preds = %if.then.1425
  %684 = load i32, i32* %norun.addr, align 4
  %tobool1428 = icmp ne i32 %684, 0
  br i1 %tobool1428, label %if.then.1432, label %lor.lhs.false.1429

lor.lhs.false.1429:                               ; preds = %land.lhs.true.1427
  %685 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %686 = load i8*, i8** %s.addr, align 8
  %call1430 = call i32 @S_regtry(%struct.regexp* %685, i8* %686)
  %tobool1431 = icmp ne i32 %call1430, 0
  br i1 %tobool1431, label %if.then.1432, label %if.else.1433

if.then.1432:                                     ; preds = %lor.lhs.false.1429, %land.lhs.true.1427
  br label %got_it

if.else.1433:                                     ; preds = %lor.lhs.false.1429, %if.then.1425
  %687 = load i32, i32* %doevery, align 4
  store i32 %687, i32* %tmp, align 4
  br label %if.end.1434

if.end.1434:                                      ; preds = %if.else.1433
  br label %if.end.1436

if.else.1435:                                     ; preds = %lor.lhs.false.1421, %land.lhs.true.1413
  store i32 1, i32* %tmp, align 4
  br label %if.end.1436

if.end.1436:                                      ; preds = %if.else.1435, %if.end.1434
  %688 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1437 = getelementptr inbounds i8, i8* %688, i32 1
  store i8* %incdec.ptr1437, i8** %s.addr, align 8
  br label %while.cond.1405

while.end.1438:                                   ; preds = %while.cond.1405
  br label %if.end.1439

if.end.1439:                                      ; preds = %while.end.1438, %while.end.1403
  br label %sw.epilog

sw.bb.1440:                                       ; preds = %entry
  %689 = load i8, i8* %do_utf8, align 1
  %tobool1441 = icmp ne i8 %689, 0
  br i1 %tobool1441, label %if.then.1442, label %if.else.1475

if.then.1442:                                     ; preds = %sw.bb.1440
  %690 = load %struct.sv*, %struct.sv** @PL_utf8_space, align 8
  %tobool1443 = icmp ne %struct.sv* %690, null
  br i1 %tobool1443, label %if.end.1446, label %if.then.1444

if.then.1444:                                     ; preds = %if.then.1442
  call void @Perl_push_scope()
  call void @Perl_save_re_context()
  %call1445 = call signext i8 @Perl_is_utf8_space(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0))
  call void @Perl_pop_scope()
  br label %if.end.1446

if.end.1446:                                      ; preds = %if.then.1444, %if.then.1442
  br label %while.cond.1447

while.cond.1447:                                  ; preds = %if.end.1472, %if.end.1446
  %691 = load i8*, i8** %s.addr, align 8
  %692 = load i8*, i8** %s.addr, align 8
  %693 = load i8, i8* %692, align 1
  %idxprom1448 = zext i8 %693 to i64
  %arrayidx1449 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom1448
  %694 = load i8, i8* %arrayidx1449, align 1
  %conv1450 = zext i8 %694 to i64
  store i64 %conv1450, i64* %uskip, align 8
  %add.ptr1451 = getelementptr inbounds i8, i8* %691, i64 %conv1450
  %695 = load i8*, i8** %strend.addr, align 8
  %cmp1452 = icmp ule i8* %add.ptr1451, %695
  br i1 %cmp1452, label %while.body.1454, label %while.end.1474

while.body.1454:                                  ; preds = %while.cond.1447
  %696 = load i8*, i8** %s.addr, align 8
  %697 = load i8, i8* %696, align 1
  %conv1455 = sext i8 %697 to i32
  %cmp1456 = icmp eq i32 %conv1455, 32
  br i1 %cmp1456, label %if.then.1461, label %lor.lhs.false.1458

lor.lhs.false.1458:                               ; preds = %while.body.1454
  %698 = load %struct.sv*, %struct.sv** @PL_utf8_space, align 8
  %699 = load i8*, i8** %s.addr, align 8
  %700 = load i8, i8* %do_utf8, align 1
  %call1459 = call i64 @Perl_swash_fetch(%struct.sv* %698, i8* %699, i8 signext %700)
  %tobool1460 = icmp ne i64 %call1459, 0
  br i1 %tobool1460, label %if.then.1461, label %if.else.1471

if.then.1461:                                     ; preds = %lor.lhs.false.1458, %while.body.1454
  %701 = load i32, i32* %tmp, align 4
  %tobool1462 = icmp ne i32 %701, 0
  br i1 %tobool1462, label %land.lhs.true.1463, label %if.else.1469

land.lhs.true.1463:                               ; preds = %if.then.1461
  %702 = load i32, i32* %norun.addr, align 4
  %tobool1464 = icmp ne i32 %702, 0
  br i1 %tobool1464, label %if.then.1468, label %lor.lhs.false.1465

lor.lhs.false.1465:                               ; preds = %land.lhs.true.1463
  %703 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %704 = load i8*, i8** %s.addr, align 8
  %call1466 = call i32 @S_regtry(%struct.regexp* %703, i8* %704)
  %tobool1467 = icmp ne i32 %call1466, 0
  br i1 %tobool1467, label %if.then.1468, label %if.else.1469

if.then.1468:                                     ; preds = %lor.lhs.false.1465, %land.lhs.true.1463
  br label %got_it

if.else.1469:                                     ; preds = %lor.lhs.false.1465, %if.then.1461
  %705 = load i32, i32* %doevery, align 4
  store i32 %705, i32* %tmp, align 4
  br label %if.end.1470

if.end.1470:                                      ; preds = %if.else.1469
  br label %if.end.1472

if.else.1471:                                     ; preds = %lor.lhs.false.1458
  store i32 1, i32* %tmp, align 4
  br label %if.end.1472

if.end.1472:                                      ; preds = %if.else.1471, %if.end.1470
  %706 = load i64, i64* %uskip, align 8
  %707 = load i8*, i8** %s.addr, align 8
  %add.ptr1473 = getelementptr inbounds i8, i8* %707, i64 %706
  store i8* %add.ptr1473, i8** %s.addr, align 8
  br label %while.cond.1447

while.end.1474:                                   ; preds = %while.cond.1447
  br label %if.end.1513

if.else.1475:                                     ; preds = %sw.bb.1440
  br label %while.cond.1476

while.cond.1476:                                  ; preds = %if.end.1510, %if.else.1475
  %708 = load i8*, i8** %s.addr, align 8
  %709 = load i8*, i8** %strend.addr, align 8
  %cmp1477 = icmp ult i8* %708, %709
  br i1 %cmp1477, label %while.body.1479, label %while.end.1512

while.body.1479:                                  ; preds = %while.cond.1476
  %710 = load i8*, i8** %s.addr, align 8
  %711 = load i8, i8* %710, align 1
  %conv1480 = sext i8 %711 to i32
  %cmp1481 = icmp eq i32 %conv1480, 32
  br i1 %cmp1481, label %if.then.1499, label %lor.lhs.false.1483

lor.lhs.false.1483:                               ; preds = %while.body.1479
  %712 = load i8*, i8** %s.addr, align 8
  %713 = load i8, i8* %712, align 1
  %conv1484 = sext i8 %713 to i32
  %cmp1485 = icmp eq i32 %conv1484, 9
  br i1 %cmp1485, label %if.then.1499, label %lor.lhs.false.1487

lor.lhs.false.1487:                               ; preds = %lor.lhs.false.1483
  %714 = load i8*, i8** %s.addr, align 8
  %715 = load i8, i8* %714, align 1
  %conv1488 = sext i8 %715 to i32
  %cmp1489 = icmp eq i32 %conv1488, 10
  br i1 %cmp1489, label %if.then.1499, label %lor.lhs.false.1491

lor.lhs.false.1491:                               ; preds = %lor.lhs.false.1487
  %716 = load i8*, i8** %s.addr, align 8
  %717 = load i8, i8* %716, align 1
  %conv1492 = sext i8 %717 to i32
  %cmp1493 = icmp eq i32 %conv1492, 13
  br i1 %cmp1493, label %if.then.1499, label %lor.lhs.false.1495

lor.lhs.false.1495:                               ; preds = %lor.lhs.false.1491
  %718 = load i8*, i8** %s.addr, align 8
  %719 = load i8, i8* %718, align 1
  %conv1496 = sext i8 %719 to i32
  %cmp1497 = icmp eq i32 %conv1496, 12
  br i1 %cmp1497, label %if.then.1499, label %if.else.1509

if.then.1499:                                     ; preds = %lor.lhs.false.1495, %lor.lhs.false.1491, %lor.lhs.false.1487, %lor.lhs.false.1483, %while.body.1479
  %720 = load i32, i32* %tmp, align 4
  %tobool1500 = icmp ne i32 %720, 0
  br i1 %tobool1500, label %land.lhs.true.1501, label %if.else.1507

land.lhs.true.1501:                               ; preds = %if.then.1499
  %721 = load i32, i32* %norun.addr, align 4
  %tobool1502 = icmp ne i32 %721, 0
  br i1 %tobool1502, label %if.then.1506, label %lor.lhs.false.1503

lor.lhs.false.1503:                               ; preds = %land.lhs.true.1501
  %722 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %723 = load i8*, i8** %s.addr, align 8
  %call1504 = call i32 @S_regtry(%struct.regexp* %722, i8* %723)
  %tobool1505 = icmp ne i32 %call1504, 0
  br i1 %tobool1505, label %if.then.1506, label %if.else.1507

if.then.1506:                                     ; preds = %lor.lhs.false.1503, %land.lhs.true.1501
  br label %got_it

if.else.1507:                                     ; preds = %lor.lhs.false.1503, %if.then.1499
  %724 = load i32, i32* %doevery, align 4
  store i32 %724, i32* %tmp, align 4
  br label %if.end.1508

if.end.1508:                                      ; preds = %if.else.1507
  br label %if.end.1510

if.else.1509:                                     ; preds = %lor.lhs.false.1495
  store i32 1, i32* %tmp, align 4
  br label %if.end.1510

if.end.1510:                                      ; preds = %if.else.1509, %if.end.1508
  %725 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1511 = getelementptr inbounds i8, i8* %725, i32 1
  store i8* %incdec.ptr1511, i8** %s.addr, align 8
  br label %while.cond.1476

while.end.1512:                                   ; preds = %while.cond.1476
  br label %if.end.1513

if.end.1513:                                      ; preds = %while.end.1512, %while.end.1474
  br label %sw.epilog

sw.bb.1514:                                       ; preds = %entry
  %726 = load i32, i32* @PL_reg_flags, align 4
  %or1515 = or i32 %726, 1
  store i32 %or1515, i32* @PL_reg_flags, align 4
  %727 = load i8, i8* %do_utf8, align 1
  %tobool1516 = icmp ne i8 %727, 0
  br i1 %tobool1516, label %if.then.1517, label %if.else.1566

if.then.1517:                                     ; preds = %sw.bb.1514
  br label %while.cond.1518

while.cond.1518:                                  ; preds = %if.end.1563, %if.then.1517
  %728 = load i8*, i8** %s.addr, align 8
  %729 = load i8*, i8** %s.addr, align 8
  %730 = load i8, i8* %729, align 1
  %idxprom1519 = zext i8 %730 to i64
  %arrayidx1520 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom1519
  %731 = load i8, i8* %arrayidx1520, align 1
  %conv1521 = zext i8 %731 to i64
  store i64 %conv1521, i64* %uskip, align 8
  %add.ptr1522 = getelementptr inbounds i8, i8* %728, i64 %conv1521
  %732 = load i8*, i8** %strend.addr, align 8
  %cmp1523 = icmp ule i8* %add.ptr1522, %732
  br i1 %cmp1523, label %while.body.1525, label %while.end.1565

while.body.1525:                                  ; preds = %while.cond.1518
  %733 = load i8*, i8** %s.addr, align 8
  %734 = load i8, i8* %733, align 1
  %conv1526 = sext i8 %734 to i32
  %cmp1527 = icmp eq i32 %conv1526, 32
  br i1 %cmp1527, label %if.then.1552, label %lor.lhs.false.1529

lor.lhs.false.1529:                               ; preds = %while.body.1525
  %735 = load i8*, i8** %s.addr, align 8
  %call1530 = call i64 @Perl_utf8_to_uvchr(i8* %735, i64* null)
  %cmp1531 = icmp ult i64 %call1530, 256
  br i1 %cmp1531, label %cond.true.1533, label %cond.false.1547

cond.true.1533:                                   ; preds = %lor.lhs.false.1529
  %736 = load i8*, i8** %s.addr, align 8
  %call1534 = call i64 @Perl_utf8_to_uvchr(i8* %736, i64* null)
  %and1535 = and i64 %call1534, -128
  %cmp1536 = icmp eq i64 %and1535, 0
  br i1 %cmp1536, label %land.lhs.true.1538, label %if.else.1562

land.lhs.true.1538:                               ; preds = %cond.true.1533
  %737 = load i8*, i8** %s.addr, align 8
  %call1539 = call i64 @Perl_utf8_to_uvchr(i8* %737, i64* null)
  %conv1540 = trunc i64 %call1539 to i32
  %idxprom1541 = sext i32 %conv1540 to i64
  %call1542 = call i16** @__ctype_b_loc()
  %738 = load i16*, i16** %call1542, align 8
  %arrayidx1543 = getelementptr inbounds i16, i16* %738, i64 %idxprom1541
  %739 = load i16, i16* %arrayidx1543, align 2
  %conv1544 = zext i16 %739 to i32
  %and1545 = and i32 %conv1544, 8192
  %tobool1546 = icmp ne i32 %and1545, 0
  br i1 %tobool1546, label %if.then.1552, label %if.else.1562

cond.false.1547:                                  ; preds = %lor.lhs.false.1529
  %740 = load i8*, i8** %s.addr, align 8
  %call1548 = call i64 @Perl_utf8_to_uvchr(i8* %740, i64* null)
  %call1549 = call signext i8 @Perl_is_uni_space_lc(i64 %call1548)
  %conv1550 = sext i8 %call1549 to i32
  %tobool1551 = icmp ne i32 %conv1550, 0
  br i1 %tobool1551, label %if.then.1552, label %if.else.1562

if.then.1552:                                     ; preds = %cond.false.1547, %land.lhs.true.1538, %while.body.1525
  %741 = load i32, i32* %tmp, align 4
  %tobool1553 = icmp ne i32 %741, 0
  br i1 %tobool1553, label %land.lhs.true.1554, label %if.else.1560

land.lhs.true.1554:                               ; preds = %if.then.1552
  %742 = load i32, i32* %norun.addr, align 4
  %tobool1555 = icmp ne i32 %742, 0
  br i1 %tobool1555, label %if.then.1559, label %lor.lhs.false.1556

lor.lhs.false.1556:                               ; preds = %land.lhs.true.1554
  %743 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %744 = load i8*, i8** %s.addr, align 8
  %call1557 = call i32 @S_regtry(%struct.regexp* %743, i8* %744)
  %tobool1558 = icmp ne i32 %call1557, 0
  br i1 %tobool1558, label %if.then.1559, label %if.else.1560

if.then.1559:                                     ; preds = %lor.lhs.false.1556, %land.lhs.true.1554
  br label %got_it

if.else.1560:                                     ; preds = %lor.lhs.false.1556, %if.then.1552
  %745 = load i32, i32* %doevery, align 4
  store i32 %745, i32* %tmp, align 4
  br label %if.end.1561

if.end.1561:                                      ; preds = %if.else.1560
  br label %if.end.1563

if.else.1562:                                     ; preds = %cond.false.1547, %land.lhs.true.1538, %cond.true.1533
  store i32 1, i32* %tmp, align 4
  br label %if.end.1563

if.end.1563:                                      ; preds = %if.else.1562, %if.end.1561
  %746 = load i64, i64* %uskip, align 8
  %747 = load i8*, i8** %s.addr, align 8
  %add.ptr1564 = getelementptr inbounds i8, i8* %747, i64 %746
  store i8* %add.ptr1564, i8** %s.addr, align 8
  br label %while.cond.1518

while.end.1565:                                   ; preds = %while.cond.1518
  br label %if.end.1597

if.else.1566:                                     ; preds = %sw.bb.1514
  br label %while.cond.1567

while.cond.1567:                                  ; preds = %if.end.1594, %if.else.1566
  %748 = load i8*, i8** %s.addr, align 8
  %749 = load i8*, i8** %strend.addr, align 8
  %cmp1568 = icmp ult i8* %748, %749
  br i1 %cmp1568, label %while.body.1570, label %while.end.1596

while.body.1570:                                  ; preds = %while.cond.1567
  %750 = load i8*, i8** %s.addr, align 8
  %751 = load i8, i8* %750, align 1
  %conv1571 = sext i8 %751 to i32
  %and1572 = and i32 %conv1571, -128
  %cmp1573 = icmp eq i32 %and1572, 0
  br i1 %cmp1573, label %land.lhs.true.1575, label %if.else.1593

land.lhs.true.1575:                               ; preds = %while.body.1570
  %752 = load i8*, i8** %s.addr, align 8
  %753 = load i8, i8* %752, align 1
  %conv1576 = sext i8 %753 to i32
  %idxprom1577 = sext i32 %conv1576 to i64
  %call1578 = call i16** @__ctype_b_loc()
  %754 = load i16*, i16** %call1578, align 8
  %arrayidx1579 = getelementptr inbounds i16, i16* %754, i64 %idxprom1577
  %755 = load i16, i16* %arrayidx1579, align 2
  %conv1580 = zext i16 %755 to i32
  %and1581 = and i32 %conv1580, 8192
  %tobool1582 = icmp ne i32 %and1581, 0
  br i1 %tobool1582, label %if.then.1583, label %if.else.1593

if.then.1583:                                     ; preds = %land.lhs.true.1575
  %756 = load i32, i32* %tmp, align 4
  %tobool1584 = icmp ne i32 %756, 0
  br i1 %tobool1584, label %land.lhs.true.1585, label %if.else.1591

land.lhs.true.1585:                               ; preds = %if.then.1583
  %757 = load i32, i32* %norun.addr, align 4
  %tobool1586 = icmp ne i32 %757, 0
  br i1 %tobool1586, label %if.then.1590, label %lor.lhs.false.1587

lor.lhs.false.1587:                               ; preds = %land.lhs.true.1585
  %758 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %759 = load i8*, i8** %s.addr, align 8
  %call1588 = call i32 @S_regtry(%struct.regexp* %758, i8* %759)
  %tobool1589 = icmp ne i32 %call1588, 0
  br i1 %tobool1589, label %if.then.1590, label %if.else.1591

if.then.1590:                                     ; preds = %lor.lhs.false.1587, %land.lhs.true.1585
  br label %got_it

if.else.1591:                                     ; preds = %lor.lhs.false.1587, %if.then.1583
  %760 = load i32, i32* %doevery, align 4
  store i32 %760, i32* %tmp, align 4
  br label %if.end.1592

if.end.1592:                                      ; preds = %if.else.1591
  br label %if.end.1594

if.else.1593:                                     ; preds = %land.lhs.true.1575, %while.body.1570
  store i32 1, i32* %tmp, align 4
  br label %if.end.1594

if.end.1594:                                      ; preds = %if.else.1593, %if.end.1592
  %761 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1595 = getelementptr inbounds i8, i8* %761, i32 1
  store i8* %incdec.ptr1595, i8** %s.addr, align 8
  br label %while.cond.1567

while.end.1596:                                   ; preds = %while.cond.1567
  br label %if.end.1597

if.end.1597:                                      ; preds = %while.end.1596, %while.end.1565
  br label %sw.epilog

sw.bb.1598:                                       ; preds = %entry
  %762 = load i8, i8* %do_utf8, align 1
  %tobool1599 = icmp ne i8 %762, 0
  br i1 %tobool1599, label %if.then.1600, label %if.else.1633

if.then.1600:                                     ; preds = %sw.bb.1598
  %763 = load %struct.sv*, %struct.sv** @PL_utf8_space, align 8
  %tobool1601 = icmp ne %struct.sv* %763, null
  br i1 %tobool1601, label %if.end.1604, label %if.then.1602

if.then.1602:                                     ; preds = %if.then.1600
  call void @Perl_push_scope()
  call void @Perl_save_re_context()
  %call1603 = call signext i8 @Perl_is_utf8_space(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0))
  call void @Perl_pop_scope()
  br label %if.end.1604

if.end.1604:                                      ; preds = %if.then.1602, %if.then.1600
  br label %while.cond.1605

while.cond.1605:                                  ; preds = %if.end.1630, %if.end.1604
  %764 = load i8*, i8** %s.addr, align 8
  %765 = load i8*, i8** %s.addr, align 8
  %766 = load i8, i8* %765, align 1
  %idxprom1606 = zext i8 %766 to i64
  %arrayidx1607 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom1606
  %767 = load i8, i8* %arrayidx1607, align 1
  %conv1608 = zext i8 %767 to i64
  store i64 %conv1608, i64* %uskip, align 8
  %add.ptr1609 = getelementptr inbounds i8, i8* %764, i64 %conv1608
  %768 = load i8*, i8** %strend.addr, align 8
  %cmp1610 = icmp ule i8* %add.ptr1609, %768
  br i1 %cmp1610, label %while.body.1612, label %while.end.1632

while.body.1612:                                  ; preds = %while.cond.1605
  %769 = load i8*, i8** %s.addr, align 8
  %770 = load i8, i8* %769, align 1
  %conv1613 = sext i8 %770 to i32
  %cmp1614 = icmp eq i32 %conv1613, 32
  br i1 %cmp1614, label %if.else.1629, label %lor.lhs.false.1616

lor.lhs.false.1616:                               ; preds = %while.body.1612
  %771 = load %struct.sv*, %struct.sv** @PL_utf8_space, align 8
  %772 = load i8*, i8** %s.addr, align 8
  %773 = load i8, i8* %do_utf8, align 1
  %call1617 = call i64 @Perl_swash_fetch(%struct.sv* %771, i8* %772, i8 signext %773)
  %tobool1618 = icmp ne i64 %call1617, 0
  br i1 %tobool1618, label %if.else.1629, label %if.then.1619

if.then.1619:                                     ; preds = %lor.lhs.false.1616
  %774 = load i32, i32* %tmp, align 4
  %tobool1620 = icmp ne i32 %774, 0
  br i1 %tobool1620, label %land.lhs.true.1621, label %if.else.1627

land.lhs.true.1621:                               ; preds = %if.then.1619
  %775 = load i32, i32* %norun.addr, align 4
  %tobool1622 = icmp ne i32 %775, 0
  br i1 %tobool1622, label %if.then.1626, label %lor.lhs.false.1623

lor.lhs.false.1623:                               ; preds = %land.lhs.true.1621
  %776 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %777 = load i8*, i8** %s.addr, align 8
  %call1624 = call i32 @S_regtry(%struct.regexp* %776, i8* %777)
  %tobool1625 = icmp ne i32 %call1624, 0
  br i1 %tobool1625, label %if.then.1626, label %if.else.1627

if.then.1626:                                     ; preds = %lor.lhs.false.1623, %land.lhs.true.1621
  br label %got_it

if.else.1627:                                     ; preds = %lor.lhs.false.1623, %if.then.1619
  %778 = load i32, i32* %doevery, align 4
  store i32 %778, i32* %tmp, align 4
  br label %if.end.1628

if.end.1628:                                      ; preds = %if.else.1627
  br label %if.end.1630

if.else.1629:                                     ; preds = %lor.lhs.false.1616, %while.body.1612
  store i32 1, i32* %tmp, align 4
  br label %if.end.1630

if.end.1630:                                      ; preds = %if.else.1629, %if.end.1628
  %779 = load i64, i64* %uskip, align 8
  %780 = load i8*, i8** %s.addr, align 8
  %add.ptr1631 = getelementptr inbounds i8, i8* %780, i64 %779
  store i8* %add.ptr1631, i8** %s.addr, align 8
  br label %while.cond.1605

while.end.1632:                                   ; preds = %while.cond.1605
  br label %if.end.1671

if.else.1633:                                     ; preds = %sw.bb.1598
  br label %while.cond.1634

while.cond.1634:                                  ; preds = %if.end.1668, %if.else.1633
  %781 = load i8*, i8** %s.addr, align 8
  %782 = load i8*, i8** %strend.addr, align 8
  %cmp1635 = icmp ult i8* %781, %782
  br i1 %cmp1635, label %while.body.1637, label %while.end.1670

while.body.1637:                                  ; preds = %while.cond.1634
  %783 = load i8*, i8** %s.addr, align 8
  %784 = load i8, i8* %783, align 1
  %conv1638 = sext i8 %784 to i32
  %cmp1639 = icmp eq i32 %conv1638, 32
  br i1 %cmp1639, label %if.else.1667, label %lor.lhs.false.1641

lor.lhs.false.1641:                               ; preds = %while.body.1637
  %785 = load i8*, i8** %s.addr, align 8
  %786 = load i8, i8* %785, align 1
  %conv1642 = sext i8 %786 to i32
  %cmp1643 = icmp eq i32 %conv1642, 9
  br i1 %cmp1643, label %if.else.1667, label %lor.lhs.false.1645

lor.lhs.false.1645:                               ; preds = %lor.lhs.false.1641
  %787 = load i8*, i8** %s.addr, align 8
  %788 = load i8, i8* %787, align 1
  %conv1646 = sext i8 %788 to i32
  %cmp1647 = icmp eq i32 %conv1646, 10
  br i1 %cmp1647, label %if.else.1667, label %lor.lhs.false.1649

lor.lhs.false.1649:                               ; preds = %lor.lhs.false.1645
  %789 = load i8*, i8** %s.addr, align 8
  %790 = load i8, i8* %789, align 1
  %conv1650 = sext i8 %790 to i32
  %cmp1651 = icmp eq i32 %conv1650, 13
  br i1 %cmp1651, label %if.else.1667, label %lor.lhs.false.1653

lor.lhs.false.1653:                               ; preds = %lor.lhs.false.1649
  %791 = load i8*, i8** %s.addr, align 8
  %792 = load i8, i8* %791, align 1
  %conv1654 = sext i8 %792 to i32
  %cmp1655 = icmp eq i32 %conv1654, 12
  br i1 %cmp1655, label %if.else.1667, label %if.then.1657

if.then.1657:                                     ; preds = %lor.lhs.false.1653
  %793 = load i32, i32* %tmp, align 4
  %tobool1658 = icmp ne i32 %793, 0
  br i1 %tobool1658, label %land.lhs.true.1659, label %if.else.1665

land.lhs.true.1659:                               ; preds = %if.then.1657
  %794 = load i32, i32* %norun.addr, align 4
  %tobool1660 = icmp ne i32 %794, 0
  br i1 %tobool1660, label %if.then.1664, label %lor.lhs.false.1661

lor.lhs.false.1661:                               ; preds = %land.lhs.true.1659
  %795 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %796 = load i8*, i8** %s.addr, align 8
  %call1662 = call i32 @S_regtry(%struct.regexp* %795, i8* %796)
  %tobool1663 = icmp ne i32 %call1662, 0
  br i1 %tobool1663, label %if.then.1664, label %if.else.1665

if.then.1664:                                     ; preds = %lor.lhs.false.1661, %land.lhs.true.1659
  br label %got_it

if.else.1665:                                     ; preds = %lor.lhs.false.1661, %if.then.1657
  %797 = load i32, i32* %doevery, align 4
  store i32 %797, i32* %tmp, align 4
  br label %if.end.1666

if.end.1666:                                      ; preds = %if.else.1665
  br label %if.end.1668

if.else.1667:                                     ; preds = %lor.lhs.false.1653, %lor.lhs.false.1649, %lor.lhs.false.1645, %lor.lhs.false.1641, %while.body.1637
  store i32 1, i32* %tmp, align 4
  br label %if.end.1668

if.end.1668:                                      ; preds = %if.else.1667, %if.end.1666
  %798 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1669 = getelementptr inbounds i8, i8* %798, i32 1
  store i8* %incdec.ptr1669, i8** %s.addr, align 8
  br label %while.cond.1634

while.end.1670:                                   ; preds = %while.cond.1634
  br label %if.end.1671

if.end.1671:                                      ; preds = %while.end.1670, %while.end.1632
  br label %sw.epilog

sw.bb.1672:                                       ; preds = %entry
  %799 = load i32, i32* @PL_reg_flags, align 4
  %or1673 = or i32 %799, 1
  store i32 %or1673, i32* @PL_reg_flags, align 4
  %800 = load i8, i8* %do_utf8, align 1
  %tobool1674 = icmp ne i8 %800, 0
  br i1 %tobool1674, label %if.then.1675, label %if.else.1724

if.then.1675:                                     ; preds = %sw.bb.1672
  br label %while.cond.1676

while.cond.1676:                                  ; preds = %if.end.1721, %if.then.1675
  %801 = load i8*, i8** %s.addr, align 8
  %802 = load i8*, i8** %s.addr, align 8
  %803 = load i8, i8* %802, align 1
  %idxprom1677 = zext i8 %803 to i64
  %arrayidx1678 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom1677
  %804 = load i8, i8* %arrayidx1678, align 1
  %conv1679 = zext i8 %804 to i64
  store i64 %conv1679, i64* %uskip, align 8
  %add.ptr1680 = getelementptr inbounds i8, i8* %801, i64 %conv1679
  %805 = load i8*, i8** %strend.addr, align 8
  %cmp1681 = icmp ule i8* %add.ptr1680, %805
  br i1 %cmp1681, label %while.body.1683, label %while.end.1723

while.body.1683:                                  ; preds = %while.cond.1676
  %806 = load i8*, i8** %s.addr, align 8
  %807 = load i8, i8* %806, align 1
  %conv1684 = sext i8 %807 to i32
  %cmp1685 = icmp eq i32 %conv1684, 32
  br i1 %cmp1685, label %if.else.1720, label %lor.lhs.false.1687

lor.lhs.false.1687:                               ; preds = %while.body.1683
  %808 = load i8*, i8** %s.addr, align 8
  %call1688 = call i64 @Perl_utf8_to_uvchr(i8* %808, i64* null)
  %cmp1689 = icmp ult i64 %call1688, 256
  br i1 %cmp1689, label %cond.true.1691, label %cond.false.1705

cond.true.1691:                                   ; preds = %lor.lhs.false.1687
  %809 = load i8*, i8** %s.addr, align 8
  %call1692 = call i64 @Perl_utf8_to_uvchr(i8* %809, i64* null)
  %and1693 = and i64 %call1692, -128
  %cmp1694 = icmp eq i64 %and1693, 0
  br i1 %cmp1694, label %land.lhs.true.1696, label %if.then.1710

land.lhs.true.1696:                               ; preds = %cond.true.1691
  %810 = load i8*, i8** %s.addr, align 8
  %call1697 = call i64 @Perl_utf8_to_uvchr(i8* %810, i64* null)
  %conv1698 = trunc i64 %call1697 to i32
  %idxprom1699 = sext i32 %conv1698 to i64
  %call1700 = call i16** @__ctype_b_loc()
  %811 = load i16*, i16** %call1700, align 8
  %arrayidx1701 = getelementptr inbounds i16, i16* %811, i64 %idxprom1699
  %812 = load i16, i16* %arrayidx1701, align 2
  %conv1702 = zext i16 %812 to i32
  %and1703 = and i32 %conv1702, 8192
  %tobool1704 = icmp ne i32 %and1703, 0
  br i1 %tobool1704, label %if.else.1720, label %if.then.1710

cond.false.1705:                                  ; preds = %lor.lhs.false.1687
  %813 = load i8*, i8** %s.addr, align 8
  %call1706 = call i64 @Perl_utf8_to_uvchr(i8* %813, i64* null)
  %call1707 = call signext i8 @Perl_is_uni_space_lc(i64 %call1706)
  %conv1708 = sext i8 %call1707 to i32
  %tobool1709 = icmp ne i32 %conv1708, 0
  br i1 %tobool1709, label %if.else.1720, label %if.then.1710

if.then.1710:                                     ; preds = %cond.false.1705, %land.lhs.true.1696, %cond.true.1691
  %814 = load i32, i32* %tmp, align 4
  %tobool1711 = icmp ne i32 %814, 0
  br i1 %tobool1711, label %land.lhs.true.1712, label %if.else.1718

land.lhs.true.1712:                               ; preds = %if.then.1710
  %815 = load i32, i32* %norun.addr, align 4
  %tobool1713 = icmp ne i32 %815, 0
  br i1 %tobool1713, label %if.then.1717, label %lor.lhs.false.1714

lor.lhs.false.1714:                               ; preds = %land.lhs.true.1712
  %816 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %817 = load i8*, i8** %s.addr, align 8
  %call1715 = call i32 @S_regtry(%struct.regexp* %816, i8* %817)
  %tobool1716 = icmp ne i32 %call1715, 0
  br i1 %tobool1716, label %if.then.1717, label %if.else.1718

if.then.1717:                                     ; preds = %lor.lhs.false.1714, %land.lhs.true.1712
  br label %got_it

if.else.1718:                                     ; preds = %lor.lhs.false.1714, %if.then.1710
  %818 = load i32, i32* %doevery, align 4
  store i32 %818, i32* %tmp, align 4
  br label %if.end.1719

if.end.1719:                                      ; preds = %if.else.1718
  br label %if.end.1721

if.else.1720:                                     ; preds = %cond.false.1705, %land.lhs.true.1696, %while.body.1683
  store i32 1, i32* %tmp, align 4
  br label %if.end.1721

if.end.1721:                                      ; preds = %if.else.1720, %if.end.1719
  %819 = load i64, i64* %uskip, align 8
  %820 = load i8*, i8** %s.addr, align 8
  %add.ptr1722 = getelementptr inbounds i8, i8* %820, i64 %819
  store i8* %add.ptr1722, i8** %s.addr, align 8
  br label %while.cond.1676

while.end.1723:                                   ; preds = %while.cond.1676
  br label %if.end.1755

if.else.1724:                                     ; preds = %sw.bb.1672
  br label %while.cond.1725

while.cond.1725:                                  ; preds = %if.end.1752, %if.else.1724
  %821 = load i8*, i8** %s.addr, align 8
  %822 = load i8*, i8** %strend.addr, align 8
  %cmp1726 = icmp ult i8* %821, %822
  br i1 %cmp1726, label %while.body.1728, label %while.end.1754

while.body.1728:                                  ; preds = %while.cond.1725
  %823 = load i8*, i8** %s.addr, align 8
  %824 = load i8, i8* %823, align 1
  %conv1729 = sext i8 %824 to i32
  %and1730 = and i32 %conv1729, -128
  %cmp1731 = icmp eq i32 %and1730, 0
  br i1 %cmp1731, label %land.lhs.true.1733, label %if.then.1741

land.lhs.true.1733:                               ; preds = %while.body.1728
  %825 = load i8*, i8** %s.addr, align 8
  %826 = load i8, i8* %825, align 1
  %conv1734 = sext i8 %826 to i32
  %idxprom1735 = sext i32 %conv1734 to i64
  %call1736 = call i16** @__ctype_b_loc()
  %827 = load i16*, i16** %call1736, align 8
  %arrayidx1737 = getelementptr inbounds i16, i16* %827, i64 %idxprom1735
  %828 = load i16, i16* %arrayidx1737, align 2
  %conv1738 = zext i16 %828 to i32
  %and1739 = and i32 %conv1738, 8192
  %tobool1740 = icmp ne i32 %and1739, 0
  br i1 %tobool1740, label %if.else.1751, label %if.then.1741

if.then.1741:                                     ; preds = %land.lhs.true.1733, %while.body.1728
  %829 = load i32, i32* %tmp, align 4
  %tobool1742 = icmp ne i32 %829, 0
  br i1 %tobool1742, label %land.lhs.true.1743, label %if.else.1749

land.lhs.true.1743:                               ; preds = %if.then.1741
  %830 = load i32, i32* %norun.addr, align 4
  %tobool1744 = icmp ne i32 %830, 0
  br i1 %tobool1744, label %if.then.1748, label %lor.lhs.false.1745

lor.lhs.false.1745:                               ; preds = %land.lhs.true.1743
  %831 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %832 = load i8*, i8** %s.addr, align 8
  %call1746 = call i32 @S_regtry(%struct.regexp* %831, i8* %832)
  %tobool1747 = icmp ne i32 %call1746, 0
  br i1 %tobool1747, label %if.then.1748, label %if.else.1749

if.then.1748:                                     ; preds = %lor.lhs.false.1745, %land.lhs.true.1743
  br label %got_it

if.else.1749:                                     ; preds = %lor.lhs.false.1745, %if.then.1741
  %833 = load i32, i32* %doevery, align 4
  store i32 %833, i32* %tmp, align 4
  br label %if.end.1750

if.end.1750:                                      ; preds = %if.else.1749
  br label %if.end.1752

if.else.1751:                                     ; preds = %land.lhs.true.1733
  store i32 1, i32* %tmp, align 4
  br label %if.end.1752

if.end.1752:                                      ; preds = %if.else.1751, %if.end.1750
  %834 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1753 = getelementptr inbounds i8, i8* %834, i32 1
  store i8* %incdec.ptr1753, i8** %s.addr, align 8
  br label %while.cond.1725

while.end.1754:                                   ; preds = %while.cond.1725
  br label %if.end.1755

if.end.1755:                                      ; preds = %while.end.1754, %while.end.1723
  br label %sw.epilog

sw.bb.1756:                                       ; preds = %entry
  %835 = load i8, i8* %do_utf8, align 1
  %tobool1757 = icmp ne i8 %835, 0
  br i1 %tobool1757, label %if.then.1758, label %if.else.1787

if.then.1758:                                     ; preds = %sw.bb.1756
  %836 = load %struct.sv*, %struct.sv** @PL_utf8_digit, align 8
  %tobool1759 = icmp ne %struct.sv* %836, null
  br i1 %tobool1759, label %if.end.1762, label %if.then.1760

if.then.1760:                                     ; preds = %if.then.1758
  call void @Perl_push_scope()
  call void @Perl_save_re_context()
  %call1761 = call signext i8 @Perl_is_utf8_digit(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
  call void @Perl_pop_scope()
  br label %if.end.1762

if.end.1762:                                      ; preds = %if.then.1760, %if.then.1758
  br label %while.cond.1763

while.cond.1763:                                  ; preds = %if.end.1784, %if.end.1762
  %837 = load i8*, i8** %s.addr, align 8
  %838 = load i8*, i8** %s.addr, align 8
  %839 = load i8, i8* %838, align 1
  %idxprom1764 = zext i8 %839 to i64
  %arrayidx1765 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom1764
  %840 = load i8, i8* %arrayidx1765, align 1
  %conv1766 = zext i8 %840 to i64
  store i64 %conv1766, i64* %uskip, align 8
  %add.ptr1767 = getelementptr inbounds i8, i8* %837, i64 %conv1766
  %841 = load i8*, i8** %strend.addr, align 8
  %cmp1768 = icmp ule i8* %add.ptr1767, %841
  br i1 %cmp1768, label %while.body.1770, label %while.end.1786

while.body.1770:                                  ; preds = %while.cond.1763
  %842 = load %struct.sv*, %struct.sv** @PL_utf8_digit, align 8
  %843 = load i8*, i8** %s.addr, align 8
  %844 = load i8, i8* %do_utf8, align 1
  %call1771 = call i64 @Perl_swash_fetch(%struct.sv* %842, i8* %843, i8 signext %844)
  %tobool1772 = icmp ne i64 %call1771, 0
  br i1 %tobool1772, label %if.then.1773, label %if.else.1783

if.then.1773:                                     ; preds = %while.body.1770
  %845 = load i32, i32* %tmp, align 4
  %tobool1774 = icmp ne i32 %845, 0
  br i1 %tobool1774, label %land.lhs.true.1775, label %if.else.1781

land.lhs.true.1775:                               ; preds = %if.then.1773
  %846 = load i32, i32* %norun.addr, align 4
  %tobool1776 = icmp ne i32 %846, 0
  br i1 %tobool1776, label %if.then.1780, label %lor.lhs.false.1777

lor.lhs.false.1777:                               ; preds = %land.lhs.true.1775
  %847 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %848 = load i8*, i8** %s.addr, align 8
  %call1778 = call i32 @S_regtry(%struct.regexp* %847, i8* %848)
  %tobool1779 = icmp ne i32 %call1778, 0
  br i1 %tobool1779, label %if.then.1780, label %if.else.1781

if.then.1780:                                     ; preds = %lor.lhs.false.1777, %land.lhs.true.1775
  br label %got_it

if.else.1781:                                     ; preds = %lor.lhs.false.1777, %if.then.1773
  %849 = load i32, i32* %doevery, align 4
  store i32 %849, i32* %tmp, align 4
  br label %if.end.1782

if.end.1782:                                      ; preds = %if.else.1781
  br label %if.end.1784

if.else.1783:                                     ; preds = %while.body.1770
  store i32 1, i32* %tmp, align 4
  br label %if.end.1784

if.end.1784:                                      ; preds = %if.else.1783, %if.end.1782
  %850 = load i64, i64* %uskip, align 8
  %851 = load i8*, i8** %s.addr, align 8
  %add.ptr1785 = getelementptr inbounds i8, i8* %851, i64 %850
  store i8* %add.ptr1785, i8** %s.addr, align 8
  br label %while.cond.1763

while.end.1786:                                   ; preds = %while.cond.1763
  br label %if.end.1813

if.else.1787:                                     ; preds = %sw.bb.1756
  br label %while.cond.1788

while.cond.1788:                                  ; preds = %if.end.1810, %if.else.1787
  %852 = load i8*, i8** %s.addr, align 8
  %853 = load i8*, i8** %strend.addr, align 8
  %cmp1789 = icmp ult i8* %852, %853
  br i1 %cmp1789, label %while.body.1791, label %while.end.1812

while.body.1791:                                  ; preds = %while.cond.1788
  %854 = load i8*, i8** %s.addr, align 8
  %855 = load i8, i8* %854, align 1
  %conv1792 = sext i8 %855 to i32
  %cmp1793 = icmp sge i32 %conv1792, 48
  br i1 %cmp1793, label %land.lhs.true.1795, label %if.else.1809

land.lhs.true.1795:                               ; preds = %while.body.1791
  %856 = load i8*, i8** %s.addr, align 8
  %857 = load i8, i8* %856, align 1
  %conv1796 = sext i8 %857 to i32
  %cmp1797 = icmp sle i32 %conv1796, 57
  br i1 %cmp1797, label %if.then.1799, label %if.else.1809

if.then.1799:                                     ; preds = %land.lhs.true.1795
  %858 = load i32, i32* %tmp, align 4
  %tobool1800 = icmp ne i32 %858, 0
  br i1 %tobool1800, label %land.lhs.true.1801, label %if.else.1807

land.lhs.true.1801:                               ; preds = %if.then.1799
  %859 = load i32, i32* %norun.addr, align 4
  %tobool1802 = icmp ne i32 %859, 0
  br i1 %tobool1802, label %if.then.1806, label %lor.lhs.false.1803

lor.lhs.false.1803:                               ; preds = %land.lhs.true.1801
  %860 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %861 = load i8*, i8** %s.addr, align 8
  %call1804 = call i32 @S_regtry(%struct.regexp* %860, i8* %861)
  %tobool1805 = icmp ne i32 %call1804, 0
  br i1 %tobool1805, label %if.then.1806, label %if.else.1807

if.then.1806:                                     ; preds = %lor.lhs.false.1803, %land.lhs.true.1801
  br label %got_it

if.else.1807:                                     ; preds = %lor.lhs.false.1803, %if.then.1799
  %862 = load i32, i32* %doevery, align 4
  store i32 %862, i32* %tmp, align 4
  br label %if.end.1808

if.end.1808:                                      ; preds = %if.else.1807
  br label %if.end.1810

if.else.1809:                                     ; preds = %land.lhs.true.1795, %while.body.1791
  store i32 1, i32* %tmp, align 4
  br label %if.end.1810

if.end.1810:                                      ; preds = %if.else.1809, %if.end.1808
  %863 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1811 = getelementptr inbounds i8, i8* %863, i32 1
  store i8* %incdec.ptr1811, i8** %s.addr, align 8
  br label %while.cond.1788

while.end.1812:                                   ; preds = %while.cond.1788
  br label %if.end.1813

if.end.1813:                                      ; preds = %while.end.1812, %while.end.1786
  br label %sw.epilog

sw.bb.1814:                                       ; preds = %entry
  %864 = load i32, i32* @PL_reg_flags, align 4
  %or1815 = or i32 %864, 1
  store i32 %or1815, i32* @PL_reg_flags, align 4
  %865 = load i8, i8* %do_utf8, align 1
  %tobool1816 = icmp ne i8 %865, 0
  br i1 %tobool1816, label %if.then.1817, label %if.else.1862

if.then.1817:                                     ; preds = %sw.bb.1814
  br label %while.cond.1818

while.cond.1818:                                  ; preds = %if.end.1859, %if.then.1817
  %866 = load i8*, i8** %s.addr, align 8
  %867 = load i8*, i8** %s.addr, align 8
  %868 = load i8, i8* %867, align 1
  %idxprom1819 = zext i8 %868 to i64
  %arrayidx1820 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom1819
  %869 = load i8, i8* %arrayidx1820, align 1
  %conv1821 = zext i8 %869 to i64
  store i64 %conv1821, i64* %uskip, align 8
  %add.ptr1822 = getelementptr inbounds i8, i8* %866, i64 %conv1821
  %870 = load i8*, i8** %strend.addr, align 8
  %cmp1823 = icmp ule i8* %add.ptr1822, %870
  br i1 %cmp1823, label %while.body.1825, label %while.end.1861

while.body.1825:                                  ; preds = %while.cond.1818
  %871 = load i8*, i8** %s.addr, align 8
  %call1826 = call i64 @Perl_utf8_to_uvchr(i8* %871, i64* null)
  %cmp1827 = icmp ult i64 %call1826, 256
  br i1 %cmp1827, label %cond.true.1829, label %cond.false.1843

cond.true.1829:                                   ; preds = %while.body.1825
  %872 = load i8*, i8** %s.addr, align 8
  %call1830 = call i64 @Perl_utf8_to_uvchr(i8* %872, i64* null)
  %and1831 = and i64 %call1830, -128
  %cmp1832 = icmp eq i64 %and1831, 0
  br i1 %cmp1832, label %land.lhs.true.1834, label %if.else.1858

land.lhs.true.1834:                               ; preds = %cond.true.1829
  %873 = load i8*, i8** %s.addr, align 8
  %call1835 = call i64 @Perl_utf8_to_uvchr(i8* %873, i64* null)
  %conv1836 = trunc i64 %call1835 to i32
  %idxprom1837 = sext i32 %conv1836 to i64
  %call1838 = call i16** @__ctype_b_loc()
  %874 = load i16*, i16** %call1838, align 8
  %arrayidx1839 = getelementptr inbounds i16, i16* %874, i64 %idxprom1837
  %875 = load i16, i16* %arrayidx1839, align 2
  %conv1840 = zext i16 %875 to i32
  %and1841 = and i32 %conv1840, 2048
  %tobool1842 = icmp ne i32 %and1841, 0
  br i1 %tobool1842, label %if.then.1848, label %if.else.1858

cond.false.1843:                                  ; preds = %while.body.1825
  %876 = load i8*, i8** %s.addr, align 8
  %call1844 = call i64 @Perl_utf8_to_uvchr(i8* %876, i64* null)
  %call1845 = call signext i8 @Perl_is_uni_digit_lc(i64 %call1844)
  %conv1846 = sext i8 %call1845 to i32
  %tobool1847 = icmp ne i32 %conv1846, 0
  br i1 %tobool1847, label %if.then.1848, label %if.else.1858

if.then.1848:                                     ; preds = %cond.false.1843, %land.lhs.true.1834
  %877 = load i32, i32* %tmp, align 4
  %tobool1849 = icmp ne i32 %877, 0
  br i1 %tobool1849, label %land.lhs.true.1850, label %if.else.1856

land.lhs.true.1850:                               ; preds = %if.then.1848
  %878 = load i32, i32* %norun.addr, align 4
  %tobool1851 = icmp ne i32 %878, 0
  br i1 %tobool1851, label %if.then.1855, label %lor.lhs.false.1852

lor.lhs.false.1852:                               ; preds = %land.lhs.true.1850
  %879 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %880 = load i8*, i8** %s.addr, align 8
  %call1853 = call i32 @S_regtry(%struct.regexp* %879, i8* %880)
  %tobool1854 = icmp ne i32 %call1853, 0
  br i1 %tobool1854, label %if.then.1855, label %if.else.1856

if.then.1855:                                     ; preds = %lor.lhs.false.1852, %land.lhs.true.1850
  br label %got_it

if.else.1856:                                     ; preds = %lor.lhs.false.1852, %if.then.1848
  %881 = load i32, i32* %doevery, align 4
  store i32 %881, i32* %tmp, align 4
  br label %if.end.1857

if.end.1857:                                      ; preds = %if.else.1856
  br label %if.end.1859

if.else.1858:                                     ; preds = %cond.false.1843, %land.lhs.true.1834, %cond.true.1829
  store i32 1, i32* %tmp, align 4
  br label %if.end.1859

if.end.1859:                                      ; preds = %if.else.1858, %if.end.1857
  %882 = load i64, i64* %uskip, align 8
  %883 = load i8*, i8** %s.addr, align 8
  %add.ptr1860 = getelementptr inbounds i8, i8* %883, i64 %882
  store i8* %add.ptr1860, i8** %s.addr, align 8
  br label %while.cond.1818

while.end.1861:                                   ; preds = %while.cond.1818
  br label %if.end.1893

if.else.1862:                                     ; preds = %sw.bb.1814
  br label %while.cond.1863

while.cond.1863:                                  ; preds = %if.end.1890, %if.else.1862
  %884 = load i8*, i8** %s.addr, align 8
  %885 = load i8*, i8** %strend.addr, align 8
  %cmp1864 = icmp ult i8* %884, %885
  br i1 %cmp1864, label %while.body.1866, label %while.end.1892

while.body.1866:                                  ; preds = %while.cond.1863
  %886 = load i8*, i8** %s.addr, align 8
  %887 = load i8, i8* %886, align 1
  %conv1867 = sext i8 %887 to i32
  %and1868 = and i32 %conv1867, -128
  %cmp1869 = icmp eq i32 %and1868, 0
  br i1 %cmp1869, label %land.lhs.true.1871, label %if.else.1889

land.lhs.true.1871:                               ; preds = %while.body.1866
  %888 = load i8*, i8** %s.addr, align 8
  %889 = load i8, i8* %888, align 1
  %conv1872 = sext i8 %889 to i32
  %idxprom1873 = sext i32 %conv1872 to i64
  %call1874 = call i16** @__ctype_b_loc()
  %890 = load i16*, i16** %call1874, align 8
  %arrayidx1875 = getelementptr inbounds i16, i16* %890, i64 %idxprom1873
  %891 = load i16, i16* %arrayidx1875, align 2
  %conv1876 = zext i16 %891 to i32
  %and1877 = and i32 %conv1876, 2048
  %tobool1878 = icmp ne i32 %and1877, 0
  br i1 %tobool1878, label %if.then.1879, label %if.else.1889

if.then.1879:                                     ; preds = %land.lhs.true.1871
  %892 = load i32, i32* %tmp, align 4
  %tobool1880 = icmp ne i32 %892, 0
  br i1 %tobool1880, label %land.lhs.true.1881, label %if.else.1887

land.lhs.true.1881:                               ; preds = %if.then.1879
  %893 = load i32, i32* %norun.addr, align 4
  %tobool1882 = icmp ne i32 %893, 0
  br i1 %tobool1882, label %if.then.1886, label %lor.lhs.false.1883

lor.lhs.false.1883:                               ; preds = %land.lhs.true.1881
  %894 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %895 = load i8*, i8** %s.addr, align 8
  %call1884 = call i32 @S_regtry(%struct.regexp* %894, i8* %895)
  %tobool1885 = icmp ne i32 %call1884, 0
  br i1 %tobool1885, label %if.then.1886, label %if.else.1887

if.then.1886:                                     ; preds = %lor.lhs.false.1883, %land.lhs.true.1881
  br label %got_it

if.else.1887:                                     ; preds = %lor.lhs.false.1883, %if.then.1879
  %896 = load i32, i32* %doevery, align 4
  store i32 %896, i32* %tmp, align 4
  br label %if.end.1888

if.end.1888:                                      ; preds = %if.else.1887
  br label %if.end.1890

if.else.1889:                                     ; preds = %land.lhs.true.1871, %while.body.1866
  store i32 1, i32* %tmp, align 4
  br label %if.end.1890

if.end.1890:                                      ; preds = %if.else.1889, %if.end.1888
  %897 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1891 = getelementptr inbounds i8, i8* %897, i32 1
  store i8* %incdec.ptr1891, i8** %s.addr, align 8
  br label %while.cond.1863

while.end.1892:                                   ; preds = %while.cond.1863
  br label %if.end.1893

if.end.1893:                                      ; preds = %while.end.1892, %while.end.1861
  br label %sw.epilog

sw.bb.1894:                                       ; preds = %entry
  %898 = load i8, i8* %do_utf8, align 1
  %tobool1895 = icmp ne i8 %898, 0
  br i1 %tobool1895, label %if.then.1896, label %if.else.1925

if.then.1896:                                     ; preds = %sw.bb.1894
  %899 = load %struct.sv*, %struct.sv** @PL_utf8_digit, align 8
  %tobool1897 = icmp ne %struct.sv* %899, null
  br i1 %tobool1897, label %if.end.1900, label %if.then.1898

if.then.1898:                                     ; preds = %if.then.1896
  call void @Perl_push_scope()
  call void @Perl_save_re_context()
  %call1899 = call signext i8 @Perl_is_utf8_digit(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
  call void @Perl_pop_scope()
  br label %if.end.1900

if.end.1900:                                      ; preds = %if.then.1898, %if.then.1896
  br label %while.cond.1901

while.cond.1901:                                  ; preds = %if.end.1922, %if.end.1900
  %900 = load i8*, i8** %s.addr, align 8
  %901 = load i8*, i8** %s.addr, align 8
  %902 = load i8, i8* %901, align 1
  %idxprom1902 = zext i8 %902 to i64
  %arrayidx1903 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom1902
  %903 = load i8, i8* %arrayidx1903, align 1
  %conv1904 = zext i8 %903 to i64
  store i64 %conv1904, i64* %uskip, align 8
  %add.ptr1905 = getelementptr inbounds i8, i8* %900, i64 %conv1904
  %904 = load i8*, i8** %strend.addr, align 8
  %cmp1906 = icmp ule i8* %add.ptr1905, %904
  br i1 %cmp1906, label %while.body.1908, label %while.end.1924

while.body.1908:                                  ; preds = %while.cond.1901
  %905 = load %struct.sv*, %struct.sv** @PL_utf8_digit, align 8
  %906 = load i8*, i8** %s.addr, align 8
  %907 = load i8, i8* %do_utf8, align 1
  %call1909 = call i64 @Perl_swash_fetch(%struct.sv* %905, i8* %906, i8 signext %907)
  %tobool1910 = icmp ne i64 %call1909, 0
  br i1 %tobool1910, label %if.else.1921, label %if.then.1911

if.then.1911:                                     ; preds = %while.body.1908
  %908 = load i32, i32* %tmp, align 4
  %tobool1912 = icmp ne i32 %908, 0
  br i1 %tobool1912, label %land.lhs.true.1913, label %if.else.1919

land.lhs.true.1913:                               ; preds = %if.then.1911
  %909 = load i32, i32* %norun.addr, align 4
  %tobool1914 = icmp ne i32 %909, 0
  br i1 %tobool1914, label %if.then.1918, label %lor.lhs.false.1915

lor.lhs.false.1915:                               ; preds = %land.lhs.true.1913
  %910 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %911 = load i8*, i8** %s.addr, align 8
  %call1916 = call i32 @S_regtry(%struct.regexp* %910, i8* %911)
  %tobool1917 = icmp ne i32 %call1916, 0
  br i1 %tobool1917, label %if.then.1918, label %if.else.1919

if.then.1918:                                     ; preds = %lor.lhs.false.1915, %land.lhs.true.1913
  br label %got_it

if.else.1919:                                     ; preds = %lor.lhs.false.1915, %if.then.1911
  %912 = load i32, i32* %doevery, align 4
  store i32 %912, i32* %tmp, align 4
  br label %if.end.1920

if.end.1920:                                      ; preds = %if.else.1919
  br label %if.end.1922

if.else.1921:                                     ; preds = %while.body.1908
  store i32 1, i32* %tmp, align 4
  br label %if.end.1922

if.end.1922:                                      ; preds = %if.else.1921, %if.end.1920
  %913 = load i64, i64* %uskip, align 8
  %914 = load i8*, i8** %s.addr, align 8
  %add.ptr1923 = getelementptr inbounds i8, i8* %914, i64 %913
  store i8* %add.ptr1923, i8** %s.addr, align 8
  br label %while.cond.1901

while.end.1924:                                   ; preds = %while.cond.1901
  br label %if.end.1951

if.else.1925:                                     ; preds = %sw.bb.1894
  br label %while.cond.1926

while.cond.1926:                                  ; preds = %if.end.1948, %if.else.1925
  %915 = load i8*, i8** %s.addr, align 8
  %916 = load i8*, i8** %strend.addr, align 8
  %cmp1927 = icmp ult i8* %915, %916
  br i1 %cmp1927, label %while.body.1929, label %while.end.1950

while.body.1929:                                  ; preds = %while.cond.1926
  %917 = load i8*, i8** %s.addr, align 8
  %918 = load i8, i8* %917, align 1
  %conv1930 = sext i8 %918 to i32
  %cmp1931 = icmp sge i32 %conv1930, 48
  br i1 %cmp1931, label %land.lhs.true.1933, label %if.then.1937

land.lhs.true.1933:                               ; preds = %while.body.1929
  %919 = load i8*, i8** %s.addr, align 8
  %920 = load i8, i8* %919, align 1
  %conv1934 = sext i8 %920 to i32
  %cmp1935 = icmp sle i32 %conv1934, 57
  br i1 %cmp1935, label %if.else.1947, label %if.then.1937

if.then.1937:                                     ; preds = %land.lhs.true.1933, %while.body.1929
  %921 = load i32, i32* %tmp, align 4
  %tobool1938 = icmp ne i32 %921, 0
  br i1 %tobool1938, label %land.lhs.true.1939, label %if.else.1945

land.lhs.true.1939:                               ; preds = %if.then.1937
  %922 = load i32, i32* %norun.addr, align 4
  %tobool1940 = icmp ne i32 %922, 0
  br i1 %tobool1940, label %if.then.1944, label %lor.lhs.false.1941

lor.lhs.false.1941:                               ; preds = %land.lhs.true.1939
  %923 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %924 = load i8*, i8** %s.addr, align 8
  %call1942 = call i32 @S_regtry(%struct.regexp* %923, i8* %924)
  %tobool1943 = icmp ne i32 %call1942, 0
  br i1 %tobool1943, label %if.then.1944, label %if.else.1945

if.then.1944:                                     ; preds = %lor.lhs.false.1941, %land.lhs.true.1939
  br label %got_it

if.else.1945:                                     ; preds = %lor.lhs.false.1941, %if.then.1937
  %925 = load i32, i32* %doevery, align 4
  store i32 %925, i32* %tmp, align 4
  br label %if.end.1946

if.end.1946:                                      ; preds = %if.else.1945
  br label %if.end.1948

if.else.1947:                                     ; preds = %land.lhs.true.1933
  store i32 1, i32* %tmp, align 4
  br label %if.end.1948

if.end.1948:                                      ; preds = %if.else.1947, %if.end.1946
  %926 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1949 = getelementptr inbounds i8, i8* %926, i32 1
  store i8* %incdec.ptr1949, i8** %s.addr, align 8
  br label %while.cond.1926

while.end.1950:                                   ; preds = %while.cond.1926
  br label %if.end.1951

if.end.1951:                                      ; preds = %while.end.1950, %while.end.1924
  br label %sw.epilog

sw.bb.1952:                                       ; preds = %entry
  %927 = load i32, i32* @PL_reg_flags, align 4
  %or1953 = or i32 %927, 1
  store i32 %or1953, i32* @PL_reg_flags, align 4
  %928 = load i8, i8* %do_utf8, align 1
  %tobool1954 = icmp ne i8 %928, 0
  br i1 %tobool1954, label %if.then.1955, label %if.else.2000

if.then.1955:                                     ; preds = %sw.bb.1952
  br label %while.cond.1956

while.cond.1956:                                  ; preds = %if.end.1997, %if.then.1955
  %929 = load i8*, i8** %s.addr, align 8
  %930 = load i8*, i8** %s.addr, align 8
  %931 = load i8, i8* %930, align 1
  %idxprom1957 = zext i8 %931 to i64
  %arrayidx1958 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom1957
  %932 = load i8, i8* %arrayidx1958, align 1
  %conv1959 = zext i8 %932 to i64
  store i64 %conv1959, i64* %uskip, align 8
  %add.ptr1960 = getelementptr inbounds i8, i8* %929, i64 %conv1959
  %933 = load i8*, i8** %strend.addr, align 8
  %cmp1961 = icmp ule i8* %add.ptr1960, %933
  br i1 %cmp1961, label %while.body.1963, label %while.end.1999

while.body.1963:                                  ; preds = %while.cond.1956
  %934 = load i8*, i8** %s.addr, align 8
  %call1964 = call i64 @Perl_utf8_to_uvchr(i8* %934, i64* null)
  %cmp1965 = icmp ult i64 %call1964, 256
  br i1 %cmp1965, label %cond.true.1967, label %cond.false.1981

cond.true.1967:                                   ; preds = %while.body.1963
  %935 = load i8*, i8** %s.addr, align 8
  %call1968 = call i64 @Perl_utf8_to_uvchr(i8* %935, i64* null)
  %and1969 = and i64 %call1968, -128
  %cmp1970 = icmp eq i64 %and1969, 0
  br i1 %cmp1970, label %land.lhs.true.1972, label %if.then.1986

land.lhs.true.1972:                               ; preds = %cond.true.1967
  %936 = load i8*, i8** %s.addr, align 8
  %call1973 = call i64 @Perl_utf8_to_uvchr(i8* %936, i64* null)
  %conv1974 = trunc i64 %call1973 to i32
  %idxprom1975 = sext i32 %conv1974 to i64
  %call1976 = call i16** @__ctype_b_loc()
  %937 = load i16*, i16** %call1976, align 8
  %arrayidx1977 = getelementptr inbounds i16, i16* %937, i64 %idxprom1975
  %938 = load i16, i16* %arrayidx1977, align 2
  %conv1978 = zext i16 %938 to i32
  %and1979 = and i32 %conv1978, 2048
  %tobool1980 = icmp ne i32 %and1979, 0
  br i1 %tobool1980, label %if.else.1996, label %if.then.1986

cond.false.1981:                                  ; preds = %while.body.1963
  %939 = load i8*, i8** %s.addr, align 8
  %call1982 = call i64 @Perl_utf8_to_uvchr(i8* %939, i64* null)
  %call1983 = call signext i8 @Perl_is_uni_digit_lc(i64 %call1982)
  %conv1984 = sext i8 %call1983 to i32
  %tobool1985 = icmp ne i32 %conv1984, 0
  br i1 %tobool1985, label %if.else.1996, label %if.then.1986

if.then.1986:                                     ; preds = %cond.false.1981, %land.lhs.true.1972, %cond.true.1967
  %940 = load i32, i32* %tmp, align 4
  %tobool1987 = icmp ne i32 %940, 0
  br i1 %tobool1987, label %land.lhs.true.1988, label %if.else.1994

land.lhs.true.1988:                               ; preds = %if.then.1986
  %941 = load i32, i32* %norun.addr, align 4
  %tobool1989 = icmp ne i32 %941, 0
  br i1 %tobool1989, label %if.then.1993, label %lor.lhs.false.1990

lor.lhs.false.1990:                               ; preds = %land.lhs.true.1988
  %942 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %943 = load i8*, i8** %s.addr, align 8
  %call1991 = call i32 @S_regtry(%struct.regexp* %942, i8* %943)
  %tobool1992 = icmp ne i32 %call1991, 0
  br i1 %tobool1992, label %if.then.1993, label %if.else.1994

if.then.1993:                                     ; preds = %lor.lhs.false.1990, %land.lhs.true.1988
  br label %got_it

if.else.1994:                                     ; preds = %lor.lhs.false.1990, %if.then.1986
  %944 = load i32, i32* %doevery, align 4
  store i32 %944, i32* %tmp, align 4
  br label %if.end.1995

if.end.1995:                                      ; preds = %if.else.1994
  br label %if.end.1997

if.else.1996:                                     ; preds = %cond.false.1981, %land.lhs.true.1972
  store i32 1, i32* %tmp, align 4
  br label %if.end.1997

if.end.1997:                                      ; preds = %if.else.1996, %if.end.1995
  %945 = load i64, i64* %uskip, align 8
  %946 = load i8*, i8** %s.addr, align 8
  %add.ptr1998 = getelementptr inbounds i8, i8* %946, i64 %945
  store i8* %add.ptr1998, i8** %s.addr, align 8
  br label %while.cond.1956

while.end.1999:                                   ; preds = %while.cond.1956
  br label %if.end.2031

if.else.2000:                                     ; preds = %sw.bb.1952
  br label %while.cond.2001

while.cond.2001:                                  ; preds = %if.end.2028, %if.else.2000
  %947 = load i8*, i8** %s.addr, align 8
  %948 = load i8*, i8** %strend.addr, align 8
  %cmp2002 = icmp ult i8* %947, %948
  br i1 %cmp2002, label %while.body.2004, label %while.end.2030

while.body.2004:                                  ; preds = %while.cond.2001
  %949 = load i8*, i8** %s.addr, align 8
  %950 = load i8, i8* %949, align 1
  %conv2005 = sext i8 %950 to i32
  %and2006 = and i32 %conv2005, -128
  %cmp2007 = icmp eq i32 %and2006, 0
  br i1 %cmp2007, label %land.lhs.true.2009, label %if.then.2017

land.lhs.true.2009:                               ; preds = %while.body.2004
  %951 = load i8*, i8** %s.addr, align 8
  %952 = load i8, i8* %951, align 1
  %conv2010 = sext i8 %952 to i32
  %idxprom2011 = sext i32 %conv2010 to i64
  %call2012 = call i16** @__ctype_b_loc()
  %953 = load i16*, i16** %call2012, align 8
  %arrayidx2013 = getelementptr inbounds i16, i16* %953, i64 %idxprom2011
  %954 = load i16, i16* %arrayidx2013, align 2
  %conv2014 = zext i16 %954 to i32
  %and2015 = and i32 %conv2014, 2048
  %tobool2016 = icmp ne i32 %and2015, 0
  br i1 %tobool2016, label %if.else.2027, label %if.then.2017

if.then.2017:                                     ; preds = %land.lhs.true.2009, %while.body.2004
  %955 = load i32, i32* %tmp, align 4
  %tobool2018 = icmp ne i32 %955, 0
  br i1 %tobool2018, label %land.lhs.true.2019, label %if.else.2025

land.lhs.true.2019:                               ; preds = %if.then.2017
  %956 = load i32, i32* %norun.addr, align 4
  %tobool2020 = icmp ne i32 %956, 0
  br i1 %tobool2020, label %if.then.2024, label %lor.lhs.false.2021

lor.lhs.false.2021:                               ; preds = %land.lhs.true.2019
  %957 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %958 = load i8*, i8** %s.addr, align 8
  %call2022 = call i32 @S_regtry(%struct.regexp* %957, i8* %958)
  %tobool2023 = icmp ne i32 %call2022, 0
  br i1 %tobool2023, label %if.then.2024, label %if.else.2025

if.then.2024:                                     ; preds = %lor.lhs.false.2021, %land.lhs.true.2019
  br label %got_it

if.else.2025:                                     ; preds = %lor.lhs.false.2021, %if.then.2017
  %959 = load i32, i32* %doevery, align 4
  store i32 %959, i32* %tmp, align 4
  br label %if.end.2026

if.end.2026:                                      ; preds = %if.else.2025
  br label %if.end.2028

if.else.2027:                                     ; preds = %land.lhs.true.2009
  store i32 1, i32* %tmp, align 4
  br label %if.end.2028

if.end.2028:                                      ; preds = %if.else.2027, %if.end.2026
  %960 = load i8*, i8** %s.addr, align 8
  %incdec.ptr2029 = getelementptr inbounds i8, i8* %960, i32 1
  store i8* %incdec.ptr2029, i8** %s.addr, align 8
  br label %while.cond.2001

while.end.2030:                                   ; preds = %while.cond.2001
  br label %if.end.2031

if.end.2031:                                      ; preds = %while.end.2030, %while.end.1999
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %961 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %type2032 = getelementptr inbounds %struct.regnode, %struct.regnode* %961, i32 0, i32 1
  %962 = load i8, i8* %type2032, align 1
  %conv2033 = zext i8 %962 to i32
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i32 0, i32 0), i32 %conv2033)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.2031, %if.end.1951, %if.end.1893, %if.end.1813, %if.end.1755, %if.end.1671, %if.end.1597, %if.end.1513, %if.end.1439, %if.end.1351, %if.end.1273, %if.end.1185, %if.end.1107, %if.end.828, %if.end.560, %while.end.157, %if.end.142
  store i8* null, i8** %retval
  br label %return

got_it:                                           ; preds = %if.then.2024, %if.then.1993, %if.then.1944, %if.then.1918, %if.then.1886, %if.then.1855, %if.then.1806, %if.then.1780, %if.then.1748, %if.then.1717, %if.then.1664, %if.then.1626, %if.then.1590, %if.then.1559, %if.then.1506, %if.then.1468, %if.then.1432, %if.then.1397, %if.then.1344, %if.then.1298, %if.then.1266, %if.then.1231, %if.then.1178, %if.then.1132, %if.then.1106, %if.then.1091, %if.then.953, %if.then.827, %if.then.813, %if.then.677, %if.then.555, %if.then.518, %if.then.480, %if.then.447, %if.then.377, %if.then.344, %if.then.154, %if.then.135, %if.then.38
  %963 = load i8*, i8** %s.addr, align 8
  store i8* %963, i8** %retval
  br label %return

return:                                           ; preds = %got_it, %sw.epilog
  %964 = load i8*, i8** %retval
  ret i8* %964
}

declare void @Perl_croak(i8*, ...) #1

declare %struct.magic* @Perl_mg_find(%struct.sv*, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @S_regtry(%struct.regexp* %prog, i8* %startpos) #0 {
entry:
  %retval = alloca i32, align 4
  %prog.addr = alloca %struct.regexp*, align 8
  %startpos.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %sp = alloca i32*, align 8
  %ep = alloca i32*, align 8
  %lastcp = alloca i32, align 4
  %mg = alloca %struct.magic*, align 8
  store %struct.regexp* %prog, %struct.regexp** %prog.addr, align 8
  store i8* %startpos, i8** %startpos.addr, align 8
  %0 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch = getelementptr inbounds %struct.regexp, %struct.regexp* %0, i32 0, i32 15
  %1 = load i32, i32* %reganch, align 4
  %and = and i32 %1, 1024
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %if.end.50

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @PL_reg_eval_set, align 4
  %tobool1 = icmp ne i32 %2, 0
  br i1 %tobool1, label %if.end.50, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* @PL_reg_eval_set, align 4
  %3 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3, i32 0, i32 2
  %4 = load i32, i32* %si_cxix, align 4
  %idxprom = sext i32 %4 to i64
  %5 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %5, i32 0, i32 1
  %6 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %arrayidx = getelementptr inbounds %struct.context, %struct.context* %6, i64 %idxprom
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %arrayidx, i32 0, i32 1
  %cx_blk = bitcast %union.anon.0* %cx_u to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 0
  call void @Perl_save_I32(i32* %blku_oldsp)
  %7 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  %8 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %7 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %8 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv = trunc i64 %sub.ptr.div to i32
  %9 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix2 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %9, i32 0, i32 2
  %10 = load i32, i32* %si_cxix2, align 4
  %idxprom3 = sext i32 %10 to i64
  %11 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack4 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %11, i32 0, i32 1
  %12 = load %struct.context*, %struct.context** %si_cxstack4, align 8
  %arrayidx5 = getelementptr inbounds %struct.context, %struct.context* %12, i64 %idxprom3
  %cx_u6 = getelementptr inbounds %struct.context, %struct.context* %arrayidx5, i32 0, i32 1
  %cx_blk7 = bitcast %union.anon.0* %cx_u6 to %struct.block*
  %blku_oldsp8 = getelementptr inbounds %struct.block, %struct.block* %cx_blk7, i32 0, i32 0
  store i32 %conv, i32* %blku_oldsp8, align 4
  call void @Perl_save_int(i32* @PL_tmps_floor)
  %13 = load i32, i32* @PL_tmps_ix, align 4
  store i32 %13, i32* @PL_tmps_floor, align 4
  %14 = load %struct.sv*, %struct.sv** @PL_reg_sv, align 8
  %tobool9 = icmp ne %struct.sv* %14, null
  br i1 %tobool9, label %if.then.10, label %if.end.31

if.then.10:                                       ; preds = %if.then
  %15 = load %struct.sv*, %struct.sv** @PL_reg_sv, align 8
  %16 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %16, i32 0, i32 0
  %17 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xgv_gp = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %17, i32 0, i32 7
  %18 = load %struct.gp*, %struct.gp** %xgv_gp, align 8
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %18, i32 0, i32 0
  %19 = load %struct.sv*, %struct.sv** %gp_sv, align 8
  %cmp = icmp ne %struct.sv* %15, %19
  br i1 %cmp, label %if.then.12, label %if.end

if.then.12:                                       ; preds = %if.then.10
  %20 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_any13 = getelementptr inbounds %struct.gv, %struct.gv* %20, i32 0, i32 0
  %21 = load %struct.xpvgv*, %struct.xpvgv** %sv_any13, align 8
  %xgv_gp14 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %21, i32 0, i32 7
  %22 = load %struct.gp*, %struct.gp** %xgv_gp14, align 8
  %gp_sv15 = getelementptr inbounds %struct.gp, %struct.gp* %22, i32 0, i32 0
  call void @Perl_save_sptr(%struct.sv** %gp_sv15)
  %23 = load %struct.sv*, %struct.sv** @PL_reg_sv, align 8
  %24 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_any16 = getelementptr inbounds %struct.gv, %struct.gv* %24, i32 0, i32 0
  %25 = load %struct.xpvgv*, %struct.xpvgv** %sv_any16, align 8
  %xgv_gp17 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %25, i32 0, i32 7
  %26 = load %struct.gp*, %struct.gp** %xgv_gp17, align 8
  %gp_sv18 = getelementptr inbounds %struct.gp, %struct.gp* %26, i32 0, i32 0
  store %struct.sv* %23, %struct.sv** %gp_sv18, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.12, %if.then.10
  %27 = load %struct.sv*, %struct.sv** @PL_reg_sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %27, i32 0, i32 2
  %28 = load i32, i32* %sv_flags, align 4
  %and19 = and i32 %28, 255
  %cmp20 = icmp uge i32 %and19, 7
  br i1 %cmp20, label %land.lhs.true.22, label %if.then.27

land.lhs.true.22:                                 ; preds = %if.end
  %29 = load %struct.sv*, %struct.sv** @PL_reg_sv, align 8
  %sv_any23 = getelementptr inbounds %struct.sv, %struct.sv* %29, i32 0, i32 0
  %30 = load i8*, i8** %sv_any23, align 8
  %31 = bitcast i8* %30 to %struct.xpvmg*
  %xmg_magic = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %31, i32 0, i32 5
  %32 = load %struct.magic*, %struct.magic** %xmg_magic, align 8
  %tobool24 = icmp ne %struct.magic* %32, null
  br i1 %tobool24, label %land.lhs.true.25, label %if.then.27

land.lhs.true.25:                                 ; preds = %land.lhs.true.22
  %33 = load %struct.sv*, %struct.sv** @PL_reg_sv, align 8
  %call = call %struct.magic* @Perl_mg_find(%struct.sv* %33, i32 103)
  store %struct.magic* %call, %struct.magic** %mg, align 8
  %tobool26 = icmp ne %struct.magic* %call, null
  br i1 %tobool26, label %if.end.29, label %if.then.27

if.then.27:                                       ; preds = %land.lhs.true.25, %land.lhs.true.22, %if.end
  %34 = load %struct.sv*, %struct.sv** @PL_reg_sv, align 8
  call void @Perl_sv_magic(%struct.sv* %34, %struct.sv* null, i32 103, i8* null, i32 0)
  %35 = load %struct.sv*, %struct.sv** @PL_reg_sv, align 8
  %call28 = call %struct.magic* @Perl_mg_find(%struct.sv* %35, i32 103)
  store %struct.magic* %call28, %struct.magic** %mg, align 8
  %36 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_len = getelementptr inbounds %struct.magic, %struct.magic* %36, i32 0, i32 7
  store i32 -1, i32* %mg_len, align 4
  br label %if.end.29

if.end.29:                                        ; preds = %if.then.27, %land.lhs.true.25
  %37 = load %struct.magic*, %struct.magic** %mg, align 8
  store %struct.magic* %37, %struct.magic** @PL_reg_magic, align 8
  %38 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_len30 = getelementptr inbounds %struct.magic, %struct.magic* %38, i32 0, i32 7
  %39 = load i32, i32* %mg_len30, align 4
  store i32 %39, i32* @PL_reg_oldpos, align 4
  call void @Perl_save_destructor_x(void (i8*)* @restore_pos, i8* null)
  br label %if.end.31

if.end.31:                                        ; preds = %if.end.29, %if.then
  %40 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %tobool32 = icmp ne %struct.pmop* %40, null
  br i1 %tobool32, label %if.end.35, label %if.then.33

if.then.33:                                       ; preds = %if.end.31
  %call34 = call i8* @Perl_safesysmalloc(i64 112)
  %41 = bitcast i8* %call34 to %struct.pmop*
  store %struct.pmop* %41, %struct.pmop** @PL_reg_curpm, align 8
  %42 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %43 = bitcast %struct.pmop* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* %43, i8 0, i64 112, i32 1, i1 false)
  br label %if.end.35

if.end.35:                                        ; preds = %if.then.33, %if.end.31
  %44 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %45 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %op_pmregexp = getelementptr inbounds %struct.pmop, %struct.pmop* %45, i32 0, i32 13
  store %struct.regexp* %44, %struct.regexp** %op_pmregexp, align 8
  %46 = load %struct.pmop*, %struct.pmop** @PL_curpm, align 8
  store %struct.pmop* %46, %struct.pmop** @PL_reg_oldcurpm, align 8
  %47 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  store %struct.pmop* %47, %struct.pmop** @PL_curpm, align 8
  %48 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch36 = getelementptr inbounds %struct.regexp, %struct.regexp* %48, i32 0, i32 15
  %49 = load i32, i32* %reganch36, align 4
  %and37 = and i32 %49, 262144
  %tobool38 = icmp ne i32 %and37, 0
  br i1 %tobool38, label %if.then.39, label %if.else

if.then.39:                                       ; preds = %if.end.35
  %50 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %subbeg = getelementptr inbounds %struct.regexp, %struct.regexp* %50, i32 0, i32 6
  %51 = load i8*, i8** %subbeg, align 8
  store i8* %51, i8** @PL_reg_oldsaved, align 8
  %52 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %sublen = getelementptr inbounds %struct.regexp, %struct.regexp* %52, i32 0, i32 8
  %53 = load i32, i32* %sublen, align 4
  %conv40 = sext i32 %53 to i64
  store i64 %conv40, i64* @PL_reg_oldsavedlen, align 8
  %54 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %reganch41 = getelementptr inbounds %struct.regexp, %struct.regexp* %54, i32 0, i32 15
  %55 = load i32, i32* %reganch41, align 4
  %and42 = and i32 %55, -262145
  store i32 %and42, i32* %reganch41, align 4
  br label %if.end.43

if.else:                                          ; preds = %if.end.35
  store i8* null, i8** @PL_reg_oldsaved, align 8
  br label %if.end.43

if.end.43:                                        ; preds = %if.else, %if.then.39
  %56 = load i8*, i8** @PL_bostr, align 8
  %57 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %subbeg44 = getelementptr inbounds %struct.regexp, %struct.regexp* %57, i32 0, i32 6
  store i8* %56, i8** %subbeg44, align 8
  %58 = load i8*, i8** @PL_regeol, align 8
  %59 = load i8*, i8** @PL_bostr, align 8
  %sub.ptr.lhs.cast45 = ptrtoint i8* %58 to i64
  %sub.ptr.rhs.cast46 = ptrtoint i8* %59 to i64
  %sub.ptr.sub47 = sub i64 %sub.ptr.lhs.cast45, %sub.ptr.rhs.cast46
  %conv48 = trunc i64 %sub.ptr.sub47 to i32
  %60 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %sublen49 = getelementptr inbounds %struct.regexp, %struct.regexp* %60, i32 0, i32 8
  store i32 %conv48, i32* %sublen49, align 4
  br label %if.end.50

if.end.50:                                        ; preds = %if.end.43, %land.lhs.true, %entry
  %61 = load i8*, i8** %startpos.addr, align 8
  %62 = load i8*, i8** @PL_bostr, align 8
  %sub.ptr.lhs.cast51 = ptrtoint i8* %61 to i64
  %sub.ptr.rhs.cast52 = ptrtoint i8* %62 to i64
  %sub.ptr.sub53 = sub i64 %sub.ptr.lhs.cast51, %sub.ptr.rhs.cast52
  %conv54 = trunc i64 %sub.ptr.sub53 to i32
  %63 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %startp = getelementptr inbounds %struct.regexp, %struct.regexp* %63, i32 0, i32 0
  %64 = load i32*, i32** %startp, align 8
  %arrayidx55 = getelementptr inbounds i32, i32* %64, i64 0
  store i32 %conv54, i32* %arrayidx55, align 4
  %65 = load i8*, i8** %startpos.addr, align 8
  store i8* %65, i8** @PL_reginput, align 8
  %66 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %startp56 = getelementptr inbounds %struct.regexp, %struct.regexp* %66, i32 0, i32 0
  %67 = load i32*, i32** %startp56, align 8
  store i32* %67, i32** @PL_regstartp, align 8
  %68 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %endp = getelementptr inbounds %struct.regexp, %struct.regexp* %68, i32 0, i32 1
  %69 = load i32*, i32** %endp, align 8
  store i32* %69, i32** @PL_regendp, align 8
  %70 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %lastparen = getelementptr inbounds %struct.regexp, %struct.regexp* %70, i32 0, i32 13
  store i32* %lastparen, i32** @PL_reglastparen, align 8
  %71 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %lastcloseparen = getelementptr inbounds %struct.regexp, %struct.regexp* %71, i32 0, i32 14
  store i32* %lastcloseparen, i32** @PL_reglastcloseparen, align 8
  %72 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %lastparen57 = getelementptr inbounds %struct.regexp, %struct.regexp* %72, i32 0, i32 13
  store i32 0, i32* %lastparen57, align 4
  %73 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %lastcloseparen58 = getelementptr inbounds %struct.regexp, %struct.regexp* %73, i32 0, i32 14
  store i32 0, i32* %lastcloseparen58, align 4
  store i32 0, i32* @PL_regsize, align 4
  %74 = load i32, i32* @PL_reg_start_tmpl, align 4
  %75 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %nparens = getelementptr inbounds %struct.regexp, %struct.regexp* %75, i32 0, i32 12
  %76 = load i32, i32* %nparens, align 4
  %cmp59 = icmp ule i32 %74, %76
  br i1 %cmp59, label %if.then.61, label %if.end.73

if.then.61:                                       ; preds = %if.end.50
  %77 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %nparens62 = getelementptr inbounds %struct.regexp, %struct.regexp* %77, i32 0, i32 12
  %78 = load i32, i32* %nparens62, align 4
  %mul = mul i32 %78, 3
  %div = udiv i32 %mul, 2
  %add = add i32 %div, 3
  store i32 %add, i32* @PL_reg_start_tmpl, align 4
  %79 = load i8**, i8*** @PL_reg_start_tmp, align 8
  %tobool63 = icmp ne i8** %79, null
  br i1 %tobool63, label %if.then.64, label %if.else.68

if.then.64:                                       ; preds = %if.then.61
  %80 = load i8**, i8*** @PL_reg_start_tmp, align 8
  %81 = bitcast i8** %80 to i8*
  %82 = load i32, i32* @PL_reg_start_tmpl, align 4
  %conv65 = zext i32 %82 to i64
  %mul66 = mul i64 %conv65, 8
  %call67 = call i8* @Perl_safesysrealloc(i8* %81, i64 %mul66)
  %83 = bitcast i8* %call67 to i8**
  store i8** %83, i8*** @PL_reg_start_tmp, align 8
  br label %if.end.72

if.else.68:                                       ; preds = %if.then.61
  %84 = load i32, i32* @PL_reg_start_tmpl, align 4
  %conv69 = zext i32 %84 to i64
  %mul70 = mul i64 %conv69, 8
  %call71 = call i8* @Perl_safesysmalloc(i64 %mul70)
  %85 = bitcast i8* %call71 to i8**
  store i8** %85, i8*** @PL_reg_start_tmp, align 8
  br label %if.end.72

if.end.72:                                        ; preds = %if.else.68, %if.then.64
  br label %if.end.73

if.end.73:                                        ; preds = %if.end.72, %if.end.50
  %86 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %startp74 = getelementptr inbounds %struct.regexp, %struct.regexp* %86, i32 0, i32 0
  %87 = load i32*, i32** %startp74, align 8
  store i32* %87, i32** %sp, align 8
  %88 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %endp75 = getelementptr inbounds %struct.regexp, %struct.regexp* %88, i32 0, i32 1
  %89 = load i32*, i32** %endp75, align 8
  store i32* %89, i32** %ep, align 8
  %90 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %nparens76 = getelementptr inbounds %struct.regexp, %struct.regexp* %90, i32 0, i32 12
  %91 = load i32, i32* %nparens76, align 4
  %tobool77 = icmp ne i32 %91, 0
  br i1 %tobool77, label %if.then.78, label %if.end.83

if.then.78:                                       ; preds = %if.end.73
  %92 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %nparens79 = getelementptr inbounds %struct.regexp, %struct.regexp* %92, i32 0, i32 12
  %93 = load i32, i32* %nparens79, align 4
  store i32 %93, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.78
  %94 = load i32, i32* %i, align 4
  %95 = load i32*, i32** @PL_reglastparen, align 8
  %96 = load i32, i32* %95, align 4
  %cmp80 = icmp sgt i32 %94, %96
  br i1 %cmp80, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %97 = load i32*, i32** %sp, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %97, i32 1
  store i32* %incdec.ptr, i32** %sp, align 8
  store i32 -1, i32* %incdec.ptr, align 4
  %98 = load i32*, i32** %ep, align 8
  %incdec.ptr82 = getelementptr inbounds i32, i32* %98, i32 1
  store i32* %incdec.ptr82, i32** %ep, align 8
  store i32 -1, i32* %incdec.ptr82, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %99 = load i32, i32* %i, align 4
  %dec = add nsw i32 %99, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.83

if.end.83:                                        ; preds = %for.end, %if.end.73
  %100 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %100, i32* %lastcp, align 4
  %101 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %program = getelementptr inbounds %struct.regexp, %struct.regexp* %101, i32 0, i32 16
  %arraydecay = getelementptr inbounds [1 x %struct.regnode], [1 x %struct.regnode]* %program, i32 0, i32 0
  %add.ptr = getelementptr inbounds %struct.regnode, %struct.regnode* %arraydecay, i64 1
  %call84 = call i32 @S_regmatch(%struct.regnode* %add.ptr)
  %tobool85 = icmp ne i32 %call84, 0
  br i1 %tobool85, label %if.then.86, label %if.end.93

if.then.86:                                       ; preds = %if.end.83
  %102 = load i8*, i8** @PL_reginput, align 8
  %103 = load i8*, i8** @PL_bostr, align 8
  %sub.ptr.lhs.cast87 = ptrtoint i8* %102 to i64
  %sub.ptr.rhs.cast88 = ptrtoint i8* %103 to i64
  %sub.ptr.sub89 = sub i64 %sub.ptr.lhs.cast87, %sub.ptr.rhs.cast88
  %conv90 = trunc i64 %sub.ptr.sub89 to i32
  %104 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %endp91 = getelementptr inbounds %struct.regexp, %struct.regexp* %104, i32 0, i32 1
  %105 = load i32*, i32** %endp91, align 8
  %arrayidx92 = getelementptr inbounds i32, i32* %105, i64 0
  store i32 %conv90, i32* %arrayidx92, align 4
  store i32 1, i32* %retval
  br label %return

if.end.93:                                        ; preds = %if.end.83
  %106 = load i32, i32* @PL_savestack_ix, align 4
  %107 = load i32, i32* %lastcp, align 4
  %cmp94 = icmp sgt i32 %106, %107
  br i1 %cmp94, label %if.then.96, label %if.end.97

if.then.96:                                       ; preds = %if.end.93
  %108 = load i32, i32* %lastcp, align 4
  call void @Perl_leave_scope(i32 %108)
  br label %if.end.97

if.end.97:                                        ; preds = %if.then.96, %if.end.93
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.97, %if.then.86
  %109 = load i32, i32* %retval
  ret i32 %109
}

; Function Attrs: nounwind uwtable
define internal i8* @S_reghop(i8* %s, i32 %off) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %off.addr = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  store i32 %off, i32* %off.addr, align 4
  %0 = load i8*, i8** %s.addr, align 8
  %1 = load i32, i32* %off.addr, align 4
  %2 = load i32, i32* %off.addr, align 4
  %cmp = icmp sge i32 %2, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load i8*, i8** @PL_regeol, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  %4 = load i8*, i8** @PL_bostr, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %3, %cond.true ], [ %4, %cond.false ]
  %call = call i8* @S_reghop3(i8* %0, i32 %1, i8* %cond)
  ret i8* %call
}

declare i8* @Perl_sv_2pv_flags(%struct.sv*, i64*, i32) #1

declare i8* @Perl_rninstr(i8*, i8*, i8*, i8*) #1

declare void @Perl_sv_setsv_flags(%struct.sv*, %struct.sv*, i32) #1

; Function Attrs: nounwind uwtable
define internal void @restore_pos(i8* %arg) #0 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load i32, i32* @PL_reg_eval_set, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end.3

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** @PL_reg_oldsaved, align 8
  %tobool1 = icmp ne i8* %1, null
  br i1 %tobool1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %if.then
  %2 = load i8*, i8** @PL_reg_oldsaved, align 8
  %3 = load %struct.regexp*, %struct.regexp** @PL_reg_re, align 8
  %subbeg = getelementptr inbounds %struct.regexp, %struct.regexp* %3, i32 0, i32 6
  store i8* %2, i8** %subbeg, align 8
  %4 = load i64, i64* @PL_reg_oldsavedlen, align 8
  %conv = trunc i64 %4 to i32
  %5 = load %struct.regexp*, %struct.regexp** @PL_reg_re, align 8
  %sublen = getelementptr inbounds %struct.regexp, %struct.regexp* %5, i32 0, i32 8
  store i32 %conv, i32* %sublen, align 4
  %6 = load %struct.regexp*, %struct.regexp** @PL_reg_re, align 8
  %reganch = getelementptr inbounds %struct.regexp, %struct.regexp* %6, i32 0, i32 15
  %7 = load i32, i32* %reganch, align 4
  %or = or i32 %7, 262144
  store i32 %or, i32* %reganch, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.2, %if.then
  %8 = load i32, i32* @PL_reg_oldpos, align 4
  %9 = load %struct.magic*, %struct.magic** @PL_reg_magic, align 8
  %mg_len = getelementptr inbounds %struct.magic, %struct.magic* %9, i32 0, i32 7
  store i32 %8, i32* %mg_len, align 4
  store i32 0, i32* @PL_reg_eval_set, align 4
  %10 = load %struct.pmop*, %struct.pmop** @PL_reg_oldcurpm, align 8
  store %struct.pmop* %10, %struct.pmop** @PL_curpm, align 8
  br label %if.end.3

if.end.3:                                         ; preds = %if.end, %entry
  ret void
}

declare void @Perl_safesysfree(i8*) #1

declare i8* @Perl_savepvn(i8*, i32) #1

; Function Attrs: nounwind uwtable
define %struct.sv* @Perl_regclass_swash(%struct.regnode* %node, i8 signext %doinit, %struct.sv** %listsvp, %struct.sv** %altsvp) #0 {
entry:
  %node.addr = alloca %struct.regnode*, align 8
  %doinit.addr = alloca i8, align 1
  %listsvp.addr = alloca %struct.sv**, align 8
  %altsvp.addr = alloca %struct.sv**, align 8
  %sw = alloca %struct.sv*, align 8
  %si = alloca %struct.sv*, align 8
  %alt = alloca %struct.sv*, align 8
  %n = alloca i32, align 4
  %rv = alloca %struct.sv*, align 8
  %av = alloca %struct.av*, align 8
  %ary = alloca %struct.sv**, align 8
  %a = alloca %struct.sv**, align 8
  %b = alloca %struct.sv**, align 8
  store %struct.regnode* %node, %struct.regnode** %node.addr, align 8
  store i8 %doinit, i8* %doinit.addr, align 1
  store %struct.sv** %listsvp, %struct.sv*** %listsvp.addr, align 8
  store %struct.sv** %altsvp, %struct.sv*** %altsvp.addr, align 8
  store %struct.sv* null, %struct.sv** %sw, align 8
  store %struct.sv* null, %struct.sv** %si, align 8
  store %struct.sv* null, %struct.sv** %alt, align 8
  %0 = load %struct.reg_data*, %struct.reg_data** @PL_regdata, align 8
  %tobool = icmp ne %struct.reg_data* %0, null
  br i1 %tobool, label %land.lhs.true, label %if.end.34

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.reg_data*, %struct.reg_data** @PL_regdata, align 8
  %count = getelementptr inbounds %struct.reg_data, %struct.reg_data* %1, i32 0, i32 0
  %2 = load i32, i32* %count, align 4
  %tobool1 = icmp ne i32 %2, 0
  br i1 %tobool1, label %if.then, label %if.end.34

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.regnode*, %struct.regnode** %node.addr, align 8
  %4 = bitcast %struct.regnode* %3 to %struct.regnode_1*
  %arg1 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %4, i32 0, i32 3
  %5 = load i32, i32* %arg1, align 4
  store i32 %5, i32* %n, align 4
  %6 = load i32, i32* %n, align 4
  %idxprom = zext i32 %6 to i64
  %7 = load %struct.reg_data*, %struct.reg_data** @PL_regdata, align 8
  %what = getelementptr inbounds %struct.reg_data, %struct.reg_data* %7, i32 0, i32 1
  %8 = load i8*, i8** %what, align 8
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 %idxprom
  %9 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %9 to i32
  %cmp = icmp eq i32 %conv, 115
  br i1 %cmp, label %if.then.3, label %if.end.33

if.then.3:                                        ; preds = %if.then
  %10 = load i32, i32* %n, align 4
  %idxprom4 = zext i32 %10 to i64
  %11 = load %struct.reg_data*, %struct.reg_data** @PL_regdata, align 8
  %data = getelementptr inbounds %struct.reg_data, %struct.reg_data* %11, i32 0, i32 2
  %arrayidx5 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data, i32 0, i64 %idxprom4
  %12 = load i8*, i8** %arrayidx5, align 8
  %13 = bitcast i8* %12 to %struct.sv*
  store %struct.sv* %13, %struct.sv** %rv, align 8
  %14 = load %struct.sv*, %struct.sv** %rv, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %14, i32 0, i32 0
  %15 = load i8*, i8** %sv_any, align 8
  %16 = bitcast i8* %15 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %16, i32 0, i32 0
  %17 = load %struct.sv*, %struct.sv** %xrv_rv, align 8
  %18 = bitcast %struct.sv* %17 to %struct.av*
  store %struct.av* %18, %struct.av** %av, align 8
  %19 = load %struct.av*, %struct.av** %av, align 8
  %sv_any6 = getelementptr inbounds %struct.av, %struct.av* %19, i32 0, i32 0
  %20 = load %struct.xpvav*, %struct.xpvav** %sv_any6, align 8
  %xav_array = getelementptr inbounds %struct.xpvav, %struct.xpvav* %20, i32 0, i32 0
  %21 = load i8*, i8** %xav_array, align 8
  %22 = bitcast i8* %21 to %struct.sv**
  store %struct.sv** %22, %struct.sv*** %ary, align 8
  %23 = load %struct.sv**, %struct.sv*** %ary, align 8
  %24 = load %struct.sv*, %struct.sv** %23, align 8
  store %struct.sv* %24, %struct.sv** %si, align 8
  %25 = load %struct.sv**, %struct.sv*** %ary, align 8
  %arrayidx7 = getelementptr inbounds %struct.sv*, %struct.sv** %25, i64 1
  %26 = load %struct.sv*, %struct.sv** %arrayidx7, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %26, i32 0, i32 2
  %27 = load i32, i32* %sv_flags, align 4
  %and = and i32 %27, 255
  %cmp8 = icmp eq i32 %and, 3
  br i1 %cmp8, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.3
  %28 = load %struct.sv**, %struct.sv*** %ary, align 8
  %arrayidx10 = getelementptr inbounds %struct.sv*, %struct.sv** %28, i64 1
  br label %cond.end

cond.false:                                       ; preds = %if.then.3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.sv** [ %arrayidx10, %cond.true ], [ null, %cond.false ]
  store %struct.sv** %cond, %struct.sv*** %a, align 8
  %29 = load %struct.sv**, %struct.sv*** %ary, align 8
  %arrayidx11 = getelementptr inbounds %struct.sv*, %struct.sv** %29, i64 2
  %30 = load %struct.sv*, %struct.sv** %arrayidx11, align 8
  %sv_flags12 = getelementptr inbounds %struct.sv, %struct.sv* %30, i32 0, i32 2
  %31 = load i32, i32* %sv_flags12, align 4
  %and13 = and i32 %31, 255
  %cmp14 = icmp eq i32 %and13, 10
  br i1 %cmp14, label %cond.true.16, label %cond.false.18

cond.true.16:                                     ; preds = %cond.end
  %32 = load %struct.sv**, %struct.sv*** %ary, align 8
  %arrayidx17 = getelementptr inbounds %struct.sv*, %struct.sv** %32, i64 2
  br label %cond.end.19

cond.false.18:                                    ; preds = %cond.end
  br label %cond.end.19

cond.end.19:                                      ; preds = %cond.false.18, %cond.true.16
  %cond20 = phi %struct.sv** [ %arrayidx17, %cond.true.16 ], [ null, %cond.false.18 ]
  store %struct.sv** %cond20, %struct.sv*** %b, align 8
  %33 = load %struct.sv**, %struct.sv*** %a, align 8
  %tobool21 = icmp ne %struct.sv** %33, null
  br i1 %tobool21, label %if.then.22, label %if.else

if.then.22:                                       ; preds = %cond.end.19
  %34 = load %struct.sv**, %struct.sv*** %a, align 8
  %35 = load %struct.sv*, %struct.sv** %34, align 8
  store %struct.sv* %35, %struct.sv** %sw, align 8
  br label %if.end.29

if.else:                                          ; preds = %cond.end.19
  %36 = load %struct.sv*, %struct.sv** %si, align 8
  %tobool23 = icmp ne %struct.sv* %36, null
  br i1 %tobool23, label %land.lhs.true.24, label %if.end

land.lhs.true.24:                                 ; preds = %if.else
  %37 = load i8, i8* %doinit.addr, align 1
  %conv25 = sext i8 %37 to i32
  %tobool26 = icmp ne i32 %conv25, 0
  br i1 %tobool26, label %if.then.27, label %if.end

if.then.27:                                       ; preds = %land.lhs.true.24
  %38 = load %struct.sv*, %struct.sv** %si, align 8
  %call = call %struct.sv* @Perl_swash_init(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0), %struct.sv* %38, i32 1, i32 0)
  store %struct.sv* %call, %struct.sv** %sw, align 8
  %39 = load %struct.av*, %struct.av** %av, align 8
  %40 = load %struct.sv*, %struct.sv** %sw, align 8
  %call28 = call %struct.sv** @Perl_av_store(%struct.av* %39, i32 1, %struct.sv* %40)
  br label %if.end

if.end:                                           ; preds = %if.then.27, %land.lhs.true.24, %if.else
  br label %if.end.29

if.end.29:                                        ; preds = %if.end, %if.then.22
  %41 = load %struct.sv**, %struct.sv*** %b, align 8
  %tobool30 = icmp ne %struct.sv** %41, null
  br i1 %tobool30, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.29
  %42 = load %struct.sv**, %struct.sv*** %b, align 8
  %43 = load %struct.sv*, %struct.sv** %42, align 8
  store %struct.sv* %43, %struct.sv** %alt, align 8
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.31, %if.end.29
  br label %if.end.33

if.end.33:                                        ; preds = %if.end.32, %if.then
  br label %if.end.34

if.end.34:                                        ; preds = %if.end.33, %land.lhs.true, %entry
  %44 = load %struct.sv**, %struct.sv*** %listsvp.addr, align 8
  %tobool35 = icmp ne %struct.sv** %44, null
  br i1 %tobool35, label %if.then.36, label %if.end.37

if.then.36:                                       ; preds = %if.end.34
  %45 = load %struct.sv*, %struct.sv** %si, align 8
  %46 = load %struct.sv**, %struct.sv*** %listsvp.addr, align 8
  store %struct.sv* %45, %struct.sv** %46, align 8
  br label %if.end.37

if.end.37:                                        ; preds = %if.then.36, %if.end.34
  %47 = load %struct.sv**, %struct.sv*** %altsvp.addr, align 8
  %tobool38 = icmp ne %struct.sv** %47, null
  br i1 %tobool38, label %if.then.39, label %if.end.40

if.then.39:                                       ; preds = %if.end.37
  %48 = load %struct.sv*, %struct.sv** %alt, align 8
  %49 = load %struct.sv**, %struct.sv*** %altsvp.addr, align 8
  store %struct.sv* %48, %struct.sv** %49, align 8
  br label %if.end.40

if.end.40:                                        ; preds = %if.then.39, %if.end.37
  %50 = load %struct.sv*, %struct.sv** %sw, align 8
  ret %struct.sv* %50
}

declare %struct.sv* @Perl_swash_init(i8*, i8*, %struct.sv*, i32, i32) #1

declare %struct.sv** @Perl_av_store(%struct.av*, i32, %struct.sv*) #1

; Function Attrs: nounwind uwtable
define internal signext i8 @S_reginclass(%struct.regnode* %n, i8* %p, i64* %lenp, i8 signext %do_utf8) #0 {
entry:
  %n.addr = alloca %struct.regnode*, align 8
  %p.addr = alloca i8*, align 8
  %lenp.addr = alloca i64*, align 8
  %do_utf8.addr = alloca i8, align 1
  %flags = alloca i8, align 1
  %match = alloca i8, align 1
  %c = alloca i64, align 8
  %len = alloca i64, align 8
  %plen = alloca i64, align 8
  %av = alloca %struct.av*, align 8
  %sw = alloca %struct.sv*, align 8
  %i = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  %len133 = alloca i64, align 8
  %s = alloca i8*, align 8
  %tmpbuf = alloca [7 x i8], align 1
  %tmplen = alloca i64, align 8
  %f = alloca i8, align 1
  store %struct.regnode* %n, %struct.regnode** %n.addr, align 8
  store i8* %p, i8** %p.addr, align 8
  store i64* %lenp, i64** %lenp.addr, align 8
  store i8 %do_utf8, i8* %do_utf8.addr, align 1
  %0 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %flags1 = getelementptr inbounds %struct.regnode, %struct.regnode* %0, i32 0, i32 0
  %1 = load i8, i8* %flags1, align 1
  store i8 %1, i8* %flags, align 1
  store i8 0, i8* %match, align 1
  %2 = load i8*, i8** %p.addr, align 8
  %3 = load i8, i8* %2, align 1
  %conv = zext i8 %3 to i64
  store i64 %conv, i64* %c, align 8
  store i64 0, i64* %len, align 8
  %4 = load i8, i8* %do_utf8.addr, align 1
  %conv2 = sext i8 %4 to i32
  %tobool = icmp ne i32 %conv2, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %5 = load i64, i64* %c, align 8
  %cmp = icmp ult i64 %5, 128
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %6 = load i8*, i8** %p.addr, align 8
  %7 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings = getelementptr inbounds %struct.cop, %struct.cop* %7, i32 0, i32 14
  %8 = load %struct.sv*, %struct.sv** %cop_warnings, align 8
  %cmp4 = icmp ne %struct.sv* %8, null
  br i1 %cmp4, label %land.lhs.true.6, label %lor.rhs

land.lhs.true.6:                                  ; preds = %if.then
  %9 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings7 = getelementptr inbounds %struct.cop, %struct.cop* %9, i32 0, i32 14
  %10 = load %struct.sv*, %struct.sv** %cop_warnings7, align 8
  %cmp8 = icmp ne %struct.sv* %10, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp8, label %land.lhs.true.10, label %lor.rhs

land.lhs.true.10:                                 ; preds = %land.lhs.true.6
  %11 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings11 = getelementptr inbounds %struct.cop, %struct.cop* %11, i32 0, i32 14
  %12 = load %struct.sv*, %struct.sv** %cop_warnings11, align 8
  %cmp12 = icmp eq %struct.sv* %12, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp12, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.10
  %13 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings14 = getelementptr inbounds %struct.cop, %struct.cop* %13, i32 0, i32 14
  %14 = load %struct.sv*, %struct.sv** %cop_warnings14, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %14, i32 0, i32 0
  %15 = load i8*, i8** %sv_any, align 8
  %16 = bitcast i8* %15 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %16, i32 0, i32 0
  %17 = load i8*, i8** %xpv_pv, align 8
  %arrayidx = getelementptr inbounds i8, i8* %17, i64 11
  %18 = load i8, i8* %arrayidx, align 1
  %conv15 = sext i8 %18 to i32
  %and = and i32 %conv15, 1
  %tobool16 = icmp ne i32 %and, 0
  br i1 %tobool16, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false, %land.lhs.true.6, %if.then
  %19 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings17 = getelementptr inbounds %struct.cop, %struct.cop* %19, i32 0, i32 14
  %20 = load %struct.sv*, %struct.sv** %cop_warnings17, align 8
  %cmp18 = icmp eq %struct.sv* %20, null
  br i1 %cmp18, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs
  %21 = load i8, i8* @PL_dowarn, align 1
  %conv20 = zext i8 %21 to i32
  %and21 = and i32 %conv20, 1
  %tobool22 = icmp ne i32 %and21, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %22 = phi i1 [ false, %lor.rhs ], [ %tobool22, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %lor.lhs.false, %land.lhs.true.10
  %23 = phi i1 [ true, %lor.lhs.false ], [ true, %land.lhs.true.10 ], [ %22, %land.end ]
  %cond = select i1 %23, i32 0, i32 255
  %call = call i64 @Perl_utf8n_to_uvuni(i8* %6, i64 13, i64* %len, i32 %cond)
  store i64 %call, i64* %c, align 8
  br label %if.end

if.end:                                           ; preds = %lor.end, %land.lhs.true, %entry
  %24 = load i64*, i64** %lenp.addr, align 8
  %tobool23 = icmp ne i64* %24, null
  br i1 %tobool23, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %25 = load i64*, i64** %lenp.addr, align 8
  %26 = load i64, i64* %25, align 8
  br label %cond.end.63

cond.false:                                       ; preds = %if.end
  %27 = load i64, i64* %c, align 8
  %cmp24 = icmp ult i64 %27, 128
  br i1 %cmp24, label %cond.true.26, label %cond.false.27

cond.true.26:                                     ; preds = %cond.false
  br label %cond.end.60

cond.false.27:                                    ; preds = %cond.false
  %28 = load i64, i64* %c, align 8
  %cmp28 = icmp ult i64 %28, 2048
  br i1 %cmp28, label %cond.true.30, label %cond.false.31

cond.true.30:                                     ; preds = %cond.false.27
  br label %cond.end.58

cond.false.31:                                    ; preds = %cond.false.27
  %29 = load i64, i64* %c, align 8
  %cmp32 = icmp ult i64 %29, 65536
  br i1 %cmp32, label %cond.true.34, label %cond.false.35

cond.true.34:                                     ; preds = %cond.false.31
  br label %cond.end.56

cond.false.35:                                    ; preds = %cond.false.31
  %30 = load i64, i64* %c, align 8
  %cmp36 = icmp ult i64 %30, 2097152
  br i1 %cmp36, label %cond.true.38, label %cond.false.39

cond.true.38:                                     ; preds = %cond.false.35
  br label %cond.end.54

cond.false.39:                                    ; preds = %cond.false.35
  %31 = load i64, i64* %c, align 8
  %cmp40 = icmp ult i64 %31, 67108864
  br i1 %cmp40, label %cond.true.42, label %cond.false.43

cond.true.42:                                     ; preds = %cond.false.39
  br label %cond.end.52

cond.false.43:                                    ; preds = %cond.false.39
  %32 = load i64, i64* %c, align 8
  %cmp44 = icmp ult i64 %32, 2147483648
  br i1 %cmp44, label %cond.true.46, label %cond.false.47

cond.true.46:                                     ; preds = %cond.false.43
  br label %cond.end

cond.false.47:                                    ; preds = %cond.false.43
  %33 = load i64, i64* %c, align 8
  %cmp48 = icmp ult i64 %33, 68719476736
  %cond50 = select i1 %cmp48, i32 7, i32 13
  br label %cond.end

cond.end:                                         ; preds = %cond.false.47, %cond.true.46
  %cond51 = phi i32 [ 6, %cond.true.46 ], [ %cond50, %cond.false.47 ]
  br label %cond.end.52

cond.end.52:                                      ; preds = %cond.end, %cond.true.42
  %cond53 = phi i32 [ 5, %cond.true.42 ], [ %cond51, %cond.end ]
  br label %cond.end.54

cond.end.54:                                      ; preds = %cond.end.52, %cond.true.38
  %cond55 = phi i32 [ 4, %cond.true.38 ], [ %cond53, %cond.end.52 ]
  br label %cond.end.56

cond.end.56:                                      ; preds = %cond.end.54, %cond.true.34
  %cond57 = phi i32 [ 3, %cond.true.34 ], [ %cond55, %cond.end.54 ]
  br label %cond.end.58

cond.end.58:                                      ; preds = %cond.end.56, %cond.true.30
  %cond59 = phi i32 [ 2, %cond.true.30 ], [ %cond57, %cond.end.56 ]
  br label %cond.end.60

cond.end.60:                                      ; preds = %cond.end.58, %cond.true.26
  %cond61 = phi i32 [ 1, %cond.true.26 ], [ %cond59, %cond.end.58 ]
  %conv62 = sext i32 %cond61 to i64
  br label %cond.end.63

cond.end.63:                                      ; preds = %cond.end.60, %cond.true
  %cond64 = phi i64 [ %26, %cond.true ], [ %conv62, %cond.end.60 ]
  store i64 %cond64, i64* %plen, align 8
  %34 = load i8, i8* %do_utf8.addr, align 1
  %conv65 = sext i8 %34 to i32
  %tobool66 = icmp ne i32 %conv65, 0
  br i1 %tobool66, label %if.then.71, label %lor.lhs.false.67

lor.lhs.false.67:                                 ; preds = %cond.end.63
  %35 = load i8, i8* %flags, align 1
  %conv68 = sext i8 %35 to i32
  %and69 = and i32 %conv68, 32
  %tobool70 = icmp ne i32 %and69, 0
  br i1 %tobool70, label %if.then.71, label %if.end.215

if.then.71:                                       ; preds = %lor.lhs.false.67, %cond.end.63
  %36 = load i64*, i64** %lenp.addr, align 8
  %tobool72 = icmp ne i64* %36, null
  br i1 %tobool72, label %if.then.73, label %if.end.74

if.then.73:                                       ; preds = %if.then.71
  %37 = load i64*, i64** %lenp.addr, align 8
  store i64 0, i64* %37, align 8
  br label %if.end.74

if.end.74:                                        ; preds = %if.then.73, %if.then.71
  %38 = load i8, i8* %do_utf8.addr, align 1
  %conv75 = sext i8 %38 to i32
  %tobool76 = icmp ne i32 %conv75, 0
  br i1 %tobool76, label %land.lhs.true.77, label %if.end.97

land.lhs.true.77:                                 ; preds = %if.end.74
  %39 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %flags78 = getelementptr inbounds %struct.regnode, %struct.regnode* %39, i32 0, i32 0
  %40 = load i8, i8* %flags78, align 1
  %conv79 = zext i8 %40 to i32
  %and80 = and i32 %conv79, 15
  %tobool81 = icmp ne i32 %and80, 0
  br i1 %tobool81, label %if.end.97, label %if.then.82

if.then.82:                                       ; preds = %land.lhs.true.77
  %41 = load i64, i64* %len, align 8
  %cmp83 = icmp ne i64 %41, -1
  br i1 %cmp83, label %land.lhs.true.85, label %if.end.96

land.lhs.true.85:                                 ; preds = %if.then.82
  %42 = load i64, i64* %c, align 8
  %cmp86 = icmp ult i64 %42, 256
  br i1 %cmp86, label %land.lhs.true.88, label %if.end.96

land.lhs.true.88:                                 ; preds = %land.lhs.true.85
  %43 = load i64, i64* %c, align 8
  %shr = lshr i64 %43, 3
  %and89 = and i64 %shr, 31
  %44 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %45 = bitcast %struct.regnode* %44 to %struct.regnode_charclass*
  %bitmap = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %45, i32 0, i32 4
  %arrayidx90 = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap, i32 0, i64 %and89
  %46 = load i8, i8* %arrayidx90, align 1
  %conv91 = sext i8 %46 to i32
  %47 = load i64, i64* %c, align 8
  %and92 = and i64 %47, 7
  %sh_prom = trunc i64 %and92 to i32
  %shl = shl i32 1, %sh_prom
  %and93 = and i32 %conv91, %shl
  %tobool94 = icmp ne i32 %and93, 0
  br i1 %tobool94, label %if.then.95, label %if.end.96

if.then.95:                                       ; preds = %land.lhs.true.88
  store i8 1, i8* %match, align 1
  br label %if.end.96

if.end.96:                                        ; preds = %if.then.95, %land.lhs.true.88, %land.lhs.true.85, %if.then.82
  br label %if.end.97

if.end.97:                                        ; preds = %if.end.96, %land.lhs.true.77, %if.end.74
  %48 = load i8, i8* %match, align 1
  %tobool98 = icmp ne i8 %48, 0
  br i1 %tobool98, label %if.end.110, label %land.lhs.true.99

land.lhs.true.99:                                 ; preds = %if.end.97
  %49 = load i8, i8* %do_utf8.addr, align 1
  %conv100 = sext i8 %49 to i32
  %tobool101 = icmp ne i32 %conv100, 0
  br i1 %tobool101, label %land.lhs.true.102, label %if.end.110

land.lhs.true.102:                                ; preds = %land.lhs.true.99
  %50 = load i8, i8* %flags, align 1
  %conv103 = sext i8 %50 to i32
  %and104 = and i32 %conv103, 64
  %tobool105 = icmp ne i32 %and104, 0
  br i1 %tobool105, label %land.lhs.true.106, label %if.end.110

land.lhs.true.106:                                ; preds = %land.lhs.true.102
  %51 = load i64, i64* %c, align 8
  %cmp107 = icmp uge i64 %51, 256
  br i1 %cmp107, label %if.then.109, label %if.end.110

if.then.109:                                      ; preds = %land.lhs.true.106
  store i8 1, i8* %match, align 1
  br label %if.end.110

if.end.110:                                       ; preds = %if.then.109, %land.lhs.true.106, %land.lhs.true.102, %land.lhs.true.99, %if.end.97
  %52 = load i8, i8* %match, align 1
  %tobool111 = icmp ne i8 %52, 0
  br i1 %tobool111, label %if.end.165, label %if.then.112

if.then.112:                                      ; preds = %if.end.110
  %53 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %54 = bitcast %struct.av** %av to %struct.sv**
  %call113 = call %struct.sv* @Perl_regclass_swash(%struct.regnode* %53, i8 signext 1, %struct.sv** null, %struct.sv** %54)
  store %struct.sv* %call113, %struct.sv** %sw, align 8
  %55 = load %struct.sv*, %struct.sv** %sw, align 8
  %tobool114 = icmp ne %struct.sv* %55, null
  br i1 %tobool114, label %if.then.115, label %if.end.164

if.then.115:                                      ; preds = %if.then.112
  %56 = load %struct.sv*, %struct.sv** %sw, align 8
  %57 = load i8*, i8** %p.addr, align 8
  %58 = load i8, i8* %do_utf8.addr, align 1
  %call116 = call i64 @Perl_swash_fetch(%struct.sv* %56, i8* %57, i8 signext %58)
  %tobool117 = icmp ne i64 %call116, 0
  br i1 %tobool117, label %if.then.118, label %if.else

if.then.118:                                      ; preds = %if.then.115
  store i8 1, i8* %match, align 1
  br label %if.end.163

if.else:                                          ; preds = %if.then.115
  %59 = load i8, i8* %flags, align 1
  %conv119 = sext i8 %59 to i32
  %and120 = and i32 %conv119, 2
  %tobool121 = icmp ne i32 %and120, 0
  br i1 %tobool121, label %if.then.122, label %if.end.162

if.then.122:                                      ; preds = %if.else
  %60 = load i8, i8* %match, align 1
  %tobool123 = icmp ne i8 %60, 0
  br i1 %tobool123, label %if.end.152, label %land.lhs.true.124

land.lhs.true.124:                                ; preds = %if.then.122
  %61 = load i64*, i64** %lenp.addr, align 8
  %tobool125 = icmp ne i64* %61, null
  br i1 %tobool125, label %land.lhs.true.126, label %if.end.152

land.lhs.true.126:                                ; preds = %land.lhs.true.124
  %62 = load %struct.av*, %struct.av** %av, align 8
  %tobool127 = icmp ne %struct.av* %62, null
  br i1 %tobool127, label %if.then.128, label %if.end.152

if.then.128:                                      ; preds = %land.lhs.true.126
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.128
  %63 = load i32, i32* %i, align 4
  %64 = load %struct.av*, %struct.av** %av, align 8
  %call129 = call i32 @Perl_av_len(%struct.av* %64)
  %cmp130 = icmp sle i32 %63, %call129
  br i1 %cmp130, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %65 = load %struct.av*, %struct.av** %av, align 8
  %66 = load i32, i32* %i, align 4
  %call132 = call %struct.sv** @Perl_av_fetch(%struct.av* %65, i32 %66, i32 0)
  %67 = load %struct.sv*, %struct.sv** %call132, align 8
  store %struct.sv* %67, %struct.sv** %sv, align 8
  %68 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %68, i32 0, i32 2
  %69 = load i32, i32* %sv_flags, align 4
  %and134 = and i32 %69, 262144
  %cmp135 = icmp eq i32 %and134, 262144
  br i1 %cmp135, label %cond.true.137, label %cond.false.141

cond.true.137:                                    ; preds = %for.body
  %70 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any138 = getelementptr inbounds %struct.sv, %struct.sv* %70, i32 0, i32 0
  %71 = load i8*, i8** %sv_any138, align 8
  %72 = bitcast i8* %71 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %72, i32 0, i32 1
  %73 = load i64, i64* %xpv_cur, align 8
  store i64 %73, i64* %len133, align 8
  %74 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any139 = getelementptr inbounds %struct.sv, %struct.sv* %74, i32 0, i32 0
  %75 = load i8*, i8** %sv_any139, align 8
  %76 = bitcast i8* %75 to %struct.xpv*
  %xpv_pv140 = getelementptr inbounds %struct.xpv, %struct.xpv* %76, i32 0, i32 0
  %77 = load i8*, i8** %xpv_pv140, align 8
  br label %cond.end.143

cond.false.141:                                   ; preds = %for.body
  %78 = load %struct.sv*, %struct.sv** %sv, align 8
  %call142 = call i8* @Perl_sv_2pv_flags(%struct.sv* %78, i64* %len133, i32 2)
  br label %cond.end.143

cond.end.143:                                     ; preds = %cond.false.141, %cond.true.137
  %cond144 = phi i8* [ %77, %cond.true.137 ], [ %call142, %cond.false.141 ]
  store i8* %cond144, i8** %s, align 8
  %79 = load i64, i64* %len133, align 8
  %80 = load i64, i64* %plen, align 8
  %cmp145 = icmp ule i64 %79, %80
  br i1 %cmp145, label %land.lhs.true.147, label %if.end.151

land.lhs.true.147:                                ; preds = %cond.end.143
  %81 = load i8*, i8** %s, align 8
  %82 = load i8*, i8** %p.addr, align 8
  %83 = load i64, i64* %len133, align 8
  %call148 = call i32 @memcmp(i8* %81, i8* %82, i64 %83)
  %tobool149 = icmp ne i32 %call148, 0
  br i1 %tobool149, label %if.end.151, label %if.then.150

if.then.150:                                      ; preds = %land.lhs.true.147
  %84 = load i64, i64* %len133, align 8
  %85 = load i64*, i64** %lenp.addr, align 8
  store i64 %84, i64* %85, align 8
  store i8 1, i8* %match, align 1
  br label %for.end

if.end.151:                                       ; preds = %land.lhs.true.147, %cond.end.143
  br label %for.inc

for.inc:                                          ; preds = %if.end.151
  %86 = load i32, i32* %i, align 4
  %inc = add nsw i32 %86, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then.150, %for.cond
  br label %if.end.152

if.end.152:                                       ; preds = %for.end, %land.lhs.true.126, %land.lhs.true.124, %if.then.122
  %87 = load i8, i8* %match, align 1
  %tobool153 = icmp ne i8 %87, 0
  br i1 %tobool153, label %if.end.161, label %if.then.154

if.then.154:                                      ; preds = %if.end.152
  %88 = load i8*, i8** %p.addr, align 8
  %arraydecay = getelementptr inbounds [7 x i8], [7 x i8]* %tmpbuf, i32 0, i32 0
  %call155 = call i64 @Perl_to_utf8_fold(i8* %88, i8* %arraydecay, i64* %tmplen)
  %89 = load %struct.sv*, %struct.sv** %sw, align 8
  %arraydecay156 = getelementptr inbounds [7 x i8], [7 x i8]* %tmpbuf, i32 0, i32 0
  %90 = load i8, i8* %do_utf8.addr, align 1
  %call157 = call i64 @Perl_swash_fetch(%struct.sv* %89, i8* %arraydecay156, i8 signext %90)
  %tobool158 = icmp ne i64 %call157, 0
  br i1 %tobool158, label %if.then.159, label %if.end.160

if.then.159:                                      ; preds = %if.then.154
  store i8 1, i8* %match, align 1
  br label %if.end.160

if.end.160:                                       ; preds = %if.then.159, %if.then.154
  br label %if.end.161

if.end.161:                                       ; preds = %if.end.160, %if.end.152
  br label %if.end.162

if.end.162:                                       ; preds = %if.end.161, %if.else
  br label %if.end.163

if.end.163:                                       ; preds = %if.end.162, %if.then.118
  br label %if.end.164

if.end.164:                                       ; preds = %if.end.163, %if.then.112
  br label %if.end.165

if.end.165:                                       ; preds = %if.end.164, %if.end.110
  %91 = load i8, i8* %match, align 1
  %conv166 = sext i8 %91 to i32
  %tobool167 = icmp ne i32 %conv166, 0
  br i1 %tobool167, label %land.lhs.true.168, label %if.end.214

land.lhs.true.168:                                ; preds = %if.end.165
  %92 = load i64*, i64** %lenp.addr, align 8
  %tobool169 = icmp ne i64* %92, null
  br i1 %tobool169, label %land.lhs.true.170, label %if.end.214

land.lhs.true.170:                                ; preds = %land.lhs.true.168
  %93 = load i64*, i64** %lenp.addr, align 8
  %94 = load i64, i64* %93, align 8
  %cmp171 = icmp eq i64 %94, 0
  br i1 %cmp171, label %if.then.173, label %if.end.214

if.then.173:                                      ; preds = %land.lhs.true.170
  %95 = load i64, i64* %c, align 8
  %cmp174 = icmp ult i64 %95, 128
  br i1 %cmp174, label %cond.true.176, label %cond.false.177

cond.true.176:                                    ; preds = %if.then.173
  br label %cond.end.211

cond.false.177:                                   ; preds = %if.then.173
  %96 = load i64, i64* %c, align 8
  %cmp178 = icmp ult i64 %96, 2048
  br i1 %cmp178, label %cond.true.180, label %cond.false.181

cond.true.180:                                    ; preds = %cond.false.177
  br label %cond.end.209

cond.false.181:                                   ; preds = %cond.false.177
  %97 = load i64, i64* %c, align 8
  %cmp182 = icmp ult i64 %97, 65536
  br i1 %cmp182, label %cond.true.184, label %cond.false.185

cond.true.184:                                    ; preds = %cond.false.181
  br label %cond.end.207

cond.false.185:                                   ; preds = %cond.false.181
  %98 = load i64, i64* %c, align 8
  %cmp186 = icmp ult i64 %98, 2097152
  br i1 %cmp186, label %cond.true.188, label %cond.false.189

cond.true.188:                                    ; preds = %cond.false.185
  br label %cond.end.205

cond.false.189:                                   ; preds = %cond.false.185
  %99 = load i64, i64* %c, align 8
  %cmp190 = icmp ult i64 %99, 67108864
  br i1 %cmp190, label %cond.true.192, label %cond.false.193

cond.true.192:                                    ; preds = %cond.false.189
  br label %cond.end.203

cond.false.193:                                   ; preds = %cond.false.189
  %100 = load i64, i64* %c, align 8
  %cmp194 = icmp ult i64 %100, 2147483648
  br i1 %cmp194, label %cond.true.196, label %cond.false.197

cond.true.196:                                    ; preds = %cond.false.193
  br label %cond.end.201

cond.false.197:                                   ; preds = %cond.false.193
  %101 = load i64, i64* %c, align 8
  %cmp198 = icmp ult i64 %101, 68719476736
  %cond200 = select i1 %cmp198, i32 7, i32 13
  br label %cond.end.201

cond.end.201:                                     ; preds = %cond.false.197, %cond.true.196
  %cond202 = phi i32 [ 6, %cond.true.196 ], [ %cond200, %cond.false.197 ]
  br label %cond.end.203

cond.end.203:                                     ; preds = %cond.end.201, %cond.true.192
  %cond204 = phi i32 [ 5, %cond.true.192 ], [ %cond202, %cond.end.201 ]
  br label %cond.end.205

cond.end.205:                                     ; preds = %cond.end.203, %cond.true.188
  %cond206 = phi i32 [ 4, %cond.true.188 ], [ %cond204, %cond.end.203 ]
  br label %cond.end.207

cond.end.207:                                     ; preds = %cond.end.205, %cond.true.184
  %cond208 = phi i32 [ 3, %cond.true.184 ], [ %cond206, %cond.end.205 ]
  br label %cond.end.209

cond.end.209:                                     ; preds = %cond.end.207, %cond.true.180
  %cond210 = phi i32 [ 2, %cond.true.180 ], [ %cond208, %cond.end.207 ]
  br label %cond.end.211

cond.end.211:                                     ; preds = %cond.end.209, %cond.true.176
  %cond212 = phi i32 [ 1, %cond.true.176 ], [ %cond210, %cond.end.209 ]
  %conv213 = sext i32 %cond212 to i64
  %102 = load i64*, i64** %lenp.addr, align 8
  store i64 %conv213, i64* %102, align 8
  br label %if.end.214

if.end.214:                                       ; preds = %cond.end.211, %land.lhs.true.170, %land.lhs.true.168, %if.end.165
  br label %if.end.215

if.end.215:                                       ; preds = %if.end.214, %lor.lhs.false.67
  %103 = load i8, i8* %match, align 1
  %tobool216 = icmp ne i8 %103, 0
  br i1 %tobool216, label %if.end.812, label %land.lhs.true.217

land.lhs.true.217:                                ; preds = %if.end.215
  %104 = load i64, i64* %c, align 8
  %cmp218 = icmp ult i64 %104, 256
  br i1 %cmp218, label %if.then.220, label %if.end.812

if.then.220:                                      ; preds = %land.lhs.true.217
  %105 = load i64, i64* %c, align 8
  %shr221 = lshr i64 %105, 3
  %and222 = and i64 %shr221, 31
  %106 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %107 = bitcast %struct.regnode* %106 to %struct.regnode_charclass*
  %bitmap223 = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %107, i32 0, i32 4
  %arrayidx224 = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap223, i32 0, i64 %and222
  %108 = load i8, i8* %arrayidx224, align 1
  %conv225 = sext i8 %108 to i32
  %109 = load i64, i64* %c, align 8
  %and226 = and i64 %109, 7
  %sh_prom227 = trunc i64 %and226 to i32
  %shl228 = shl i32 1, %sh_prom227
  %and229 = and i32 %conv225, %shl228
  %tobool230 = icmp ne i32 %and229, 0
  br i1 %tobool230, label %if.then.231, label %if.else.232

if.then.231:                                      ; preds = %if.then.220
  store i8 1, i8* %match, align 1
  br label %if.end.263

if.else.232:                                      ; preds = %if.then.220
  %110 = load i8, i8* %flags, align 1
  %conv233 = sext i8 %110 to i32
  %and234 = and i32 %conv233, 2
  %tobool235 = icmp ne i32 %and234, 0
  br i1 %tobool235, label %if.then.236, label %if.end.262

if.then.236:                                      ; preds = %if.else.232
  %111 = load i8, i8* %flags, align 1
  %conv237 = sext i8 %111 to i32
  %and238 = and i32 %conv237, 1
  %tobool239 = icmp ne i32 %and238, 0
  br i1 %tobool239, label %if.then.240, label %if.else.242

if.then.240:                                      ; preds = %if.then.236
  %112 = load i32, i32* @PL_reg_flags, align 4
  %or = or i32 %112, 1
  store i32 %or, i32* @PL_reg_flags, align 4
  %113 = load i64, i64* %c, align 8
  %arrayidx241 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_fold_locale, i32 0, i64 %113
  %114 = load i8, i8* %arrayidx241, align 1
  store i8 %114, i8* %f, align 1
  br label %if.end.244

if.else.242:                                      ; preds = %if.then.236
  %115 = load i64, i64* %c, align 8
  %arrayidx243 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_fold, i32 0, i64 %115
  %116 = load i8, i8* %arrayidx243, align 1
  store i8 %116, i8* %f, align 1
  br label %if.end.244

if.end.244:                                       ; preds = %if.else.242, %if.then.240
  %117 = load i8, i8* %f, align 1
  %conv245 = zext i8 %117 to i64
  %118 = load i64, i64* %c, align 8
  %cmp246 = icmp ne i64 %conv245, %118
  br i1 %cmp246, label %land.lhs.true.248, label %if.end.261

land.lhs.true.248:                                ; preds = %if.end.244
  %119 = load i8, i8* %f, align 1
  %conv249 = zext i8 %119 to i32
  %shr250 = ashr i32 %conv249, 3
  %and251 = and i32 %shr250, 31
  %idxprom = sext i32 %and251 to i64
  %120 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %121 = bitcast %struct.regnode* %120 to %struct.regnode_charclass*
  %bitmap252 = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %121, i32 0, i32 4
  %arrayidx253 = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap252, i32 0, i64 %idxprom
  %122 = load i8, i8* %arrayidx253, align 1
  %conv254 = sext i8 %122 to i32
  %123 = load i8, i8* %f, align 1
  %conv255 = zext i8 %123 to i32
  %and256 = and i32 %conv255, 7
  %shl257 = shl i32 1, %and256
  %and258 = and i32 %conv254, %shl257
  %tobool259 = icmp ne i32 %and258, 0
  br i1 %tobool259, label %if.then.260, label %if.end.261

if.then.260:                                      ; preds = %land.lhs.true.248
  store i8 1, i8* %match, align 1
  br label %if.end.261

if.end.261:                                       ; preds = %if.then.260, %land.lhs.true.248, %if.end.244
  br label %if.end.262

if.end.262:                                       ; preds = %if.end.261, %if.else.232
  br label %if.end.263

if.end.263:                                       ; preds = %if.end.262, %if.then.231
  %124 = load i8, i8* %match, align 1
  %tobool264 = icmp ne i8 %124, 0
  br i1 %tobool264, label %if.end.811, label %land.lhs.true.265

land.lhs.true.265:                                ; preds = %if.end.263
  %125 = load i8, i8* %flags, align 1
  %conv266 = sext i8 %125 to i32
  %and267 = and i32 %conv266, 8
  %tobool268 = icmp ne i32 %and267, 0
  br i1 %tobool268, label %if.then.269, label %if.end.811

if.then.269:                                      ; preds = %land.lhs.true.265
  %126 = load i32, i32* @PL_reg_flags, align 4
  %or270 = or i32 %126, 1
  store i32 %or270, i32* @PL_reg_flags, align 4
  %127 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %128 = bitcast %struct.regnode* %127 to %struct.regnode_charclass_class*
  %classflags = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %128, i32 0, i32 5
  %arrayidx271 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags, i32 0, i64 0
  %129 = load i8, i8* %arrayidx271, align 1
  %conv272 = sext i8 %129 to i32
  %and273 = and i32 %conv272, 1
  %tobool274 = icmp ne i32 %and273, 0
  br i1 %tobool274, label %land.lhs.true.275, label %lor.lhs.false.290

land.lhs.true.275:                                ; preds = %if.then.269
  %130 = load i64, i64* %c, align 8
  %and276 = and i64 %130, -128
  %cmp277 = icmp eq i64 %and276, 0
  br i1 %cmp277, label %land.lhs.true.279, label %lor.lhs.false.290

land.lhs.true.279:                                ; preds = %land.lhs.true.275
  %131 = load i64, i64* %c, align 8
  %conv280 = trunc i64 %131 to i32
  %idxprom281 = sext i32 %conv280 to i64
  %call282 = call i16** @__ctype_b_loc()
  %132 = load i16*, i16** %call282, align 8
  %arrayidx283 = getelementptr inbounds i16, i16* %132, i64 %idxprom281
  %133 = load i16, i16* %arrayidx283, align 2
  %conv284 = zext i16 %133 to i32
  %and285 = and i32 %conv284, 8
  %tobool286 = icmp ne i32 %and285, 0
  br i1 %tobool286, label %if.then.809, label %lor.lhs.false.287

lor.lhs.false.287:                                ; preds = %land.lhs.true.279
  %134 = load i64, i64* %c, align 8
  %cmp288 = icmp eq i64 %134, 95
  br i1 %cmp288, label %if.then.809, label %lor.lhs.false.290

lor.lhs.false.290:                                ; preds = %lor.lhs.false.287, %land.lhs.true.275, %if.then.269
  %135 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %136 = bitcast %struct.regnode* %135 to %struct.regnode_charclass_class*
  %classflags291 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %136, i32 0, i32 5
  %arrayidx292 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags291, i32 0, i64 0
  %137 = load i8, i8* %arrayidx292, align 1
  %conv293 = sext i8 %137 to i32
  %and294 = and i32 %conv293, 2
  %tobool295 = icmp ne i32 %and294, 0
  br i1 %tobool295, label %land.lhs.true.296, label %lor.lhs.false.311

land.lhs.true.296:                                ; preds = %lor.lhs.false.290
  %138 = load i64, i64* %c, align 8
  %and297 = and i64 %138, -128
  %cmp298 = icmp eq i64 %and297, 0
  br i1 %cmp298, label %land.lhs.true.300, label %if.then.809

land.lhs.true.300:                                ; preds = %land.lhs.true.296
  %139 = load i64, i64* %c, align 8
  %conv301 = trunc i64 %139 to i32
  %idxprom302 = sext i32 %conv301 to i64
  %call303 = call i16** @__ctype_b_loc()
  %140 = load i16*, i16** %call303, align 8
  %arrayidx304 = getelementptr inbounds i16, i16* %140, i64 %idxprom302
  %141 = load i16, i16* %arrayidx304, align 2
  %conv305 = zext i16 %141 to i32
  %and306 = and i32 %conv305, 8
  %tobool307 = icmp ne i32 %and306, 0
  br i1 %tobool307, label %lor.lhs.false.311, label %lor.lhs.false.308

lor.lhs.false.308:                                ; preds = %land.lhs.true.300
  %142 = load i64, i64* %c, align 8
  %cmp309 = icmp eq i64 %142, 95
  br i1 %cmp309, label %lor.lhs.false.311, label %if.then.809

lor.lhs.false.311:                                ; preds = %lor.lhs.false.308, %land.lhs.true.300, %lor.lhs.false.290
  %143 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %144 = bitcast %struct.regnode* %143 to %struct.regnode_charclass_class*
  %classflags312 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %144, i32 0, i32 5
  %arrayidx313 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags312, i32 0, i64 0
  %145 = load i8, i8* %arrayidx313, align 1
  %conv314 = sext i8 %145 to i32
  %and315 = and i32 %conv314, 4
  %tobool316 = icmp ne i32 %and315, 0
  br i1 %tobool316, label %land.lhs.true.317, label %lor.lhs.false.329

land.lhs.true.317:                                ; preds = %lor.lhs.false.311
  %146 = load i64, i64* %c, align 8
  %and318 = and i64 %146, -128
  %cmp319 = icmp eq i64 %and318, 0
  br i1 %cmp319, label %land.lhs.true.321, label %lor.lhs.false.329

land.lhs.true.321:                                ; preds = %land.lhs.true.317
  %147 = load i64, i64* %c, align 8
  %conv322 = trunc i64 %147 to i32
  %idxprom323 = sext i32 %conv322 to i64
  %call324 = call i16** @__ctype_b_loc()
  %148 = load i16*, i16** %call324, align 8
  %arrayidx325 = getelementptr inbounds i16, i16* %148, i64 %idxprom323
  %149 = load i16, i16* %arrayidx325, align 2
  %conv326 = zext i16 %149 to i32
  %and327 = and i32 %conv326, 8192
  %tobool328 = icmp ne i32 %and327, 0
  br i1 %tobool328, label %if.then.809, label %lor.lhs.false.329

lor.lhs.false.329:                                ; preds = %land.lhs.true.321, %land.lhs.true.317, %lor.lhs.false.311
  %150 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %151 = bitcast %struct.regnode* %150 to %struct.regnode_charclass_class*
  %classflags330 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %151, i32 0, i32 5
  %arrayidx331 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags330, i32 0, i64 0
  %152 = load i8, i8* %arrayidx331, align 1
  %conv332 = sext i8 %152 to i32
  %and333 = and i32 %conv332, 8
  %tobool334 = icmp ne i32 %and333, 0
  br i1 %tobool334, label %land.lhs.true.335, label %lor.lhs.false.347

land.lhs.true.335:                                ; preds = %lor.lhs.false.329
  %153 = load i64, i64* %c, align 8
  %and336 = and i64 %153, -128
  %cmp337 = icmp eq i64 %and336, 0
  br i1 %cmp337, label %land.lhs.true.339, label %if.then.809

land.lhs.true.339:                                ; preds = %land.lhs.true.335
  %154 = load i64, i64* %c, align 8
  %conv340 = trunc i64 %154 to i32
  %idxprom341 = sext i32 %conv340 to i64
  %call342 = call i16** @__ctype_b_loc()
  %155 = load i16*, i16** %call342, align 8
  %arrayidx343 = getelementptr inbounds i16, i16* %155, i64 %idxprom341
  %156 = load i16, i16* %arrayidx343, align 2
  %conv344 = zext i16 %156 to i32
  %and345 = and i32 %conv344, 8192
  %tobool346 = icmp ne i32 %and345, 0
  br i1 %tobool346, label %lor.lhs.false.347, label %if.then.809

lor.lhs.false.347:                                ; preds = %land.lhs.true.339, %lor.lhs.false.329
  %157 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %158 = bitcast %struct.regnode* %157 to %struct.regnode_charclass_class*
  %classflags348 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %158, i32 0, i32 5
  %arrayidx349 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags348, i32 0, i64 0
  %159 = load i8, i8* %arrayidx349, align 1
  %conv350 = sext i8 %159 to i32
  %and351 = and i32 %conv350, 16
  %tobool352 = icmp ne i32 %and351, 0
  br i1 %tobool352, label %land.lhs.true.353, label %lor.lhs.false.365

land.lhs.true.353:                                ; preds = %lor.lhs.false.347
  %160 = load i64, i64* %c, align 8
  %and354 = and i64 %160, -128
  %cmp355 = icmp eq i64 %and354, 0
  br i1 %cmp355, label %land.lhs.true.357, label %lor.lhs.false.365

land.lhs.true.357:                                ; preds = %land.lhs.true.353
  %161 = load i64, i64* %c, align 8
  %conv358 = trunc i64 %161 to i32
  %idxprom359 = sext i32 %conv358 to i64
  %call360 = call i16** @__ctype_b_loc()
  %162 = load i16*, i16** %call360, align 8
  %arrayidx361 = getelementptr inbounds i16, i16* %162, i64 %idxprom359
  %163 = load i16, i16* %arrayidx361, align 2
  %conv362 = zext i16 %163 to i32
  %and363 = and i32 %conv362, 2048
  %tobool364 = icmp ne i32 %and363, 0
  br i1 %tobool364, label %if.then.809, label %lor.lhs.false.365

lor.lhs.false.365:                                ; preds = %land.lhs.true.357, %land.lhs.true.353, %lor.lhs.false.347
  %164 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %165 = bitcast %struct.regnode* %164 to %struct.regnode_charclass_class*
  %classflags366 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %165, i32 0, i32 5
  %arrayidx367 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags366, i32 0, i64 0
  %166 = load i8, i8* %arrayidx367, align 1
  %conv368 = sext i8 %166 to i32
  %and369 = and i32 %conv368, 32
  %tobool370 = icmp ne i32 %and369, 0
  br i1 %tobool370, label %land.lhs.true.371, label %lor.lhs.false.383

land.lhs.true.371:                                ; preds = %lor.lhs.false.365
  %167 = load i64, i64* %c, align 8
  %and372 = and i64 %167, -128
  %cmp373 = icmp eq i64 %and372, 0
  br i1 %cmp373, label %land.lhs.true.375, label %if.then.809

land.lhs.true.375:                                ; preds = %land.lhs.true.371
  %168 = load i64, i64* %c, align 8
  %conv376 = trunc i64 %168 to i32
  %idxprom377 = sext i32 %conv376 to i64
  %call378 = call i16** @__ctype_b_loc()
  %169 = load i16*, i16** %call378, align 8
  %arrayidx379 = getelementptr inbounds i16, i16* %169, i64 %idxprom377
  %170 = load i16, i16* %arrayidx379, align 2
  %conv380 = zext i16 %170 to i32
  %and381 = and i32 %conv380, 2048
  %tobool382 = icmp ne i32 %and381, 0
  br i1 %tobool382, label %lor.lhs.false.383, label %if.then.809

lor.lhs.false.383:                                ; preds = %land.lhs.true.375, %lor.lhs.false.365
  %171 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %172 = bitcast %struct.regnode* %171 to %struct.regnode_charclass_class*
  %classflags384 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %172, i32 0, i32 5
  %arrayidx385 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags384, i32 0, i64 0
  %173 = load i8, i8* %arrayidx385, align 1
  %conv386 = sext i8 %173 to i32
  %and387 = and i32 %conv386, 64
  %tobool388 = icmp ne i32 %and387, 0
  br i1 %tobool388, label %land.lhs.true.389, label %lor.lhs.false.401

land.lhs.true.389:                                ; preds = %lor.lhs.false.383
  %174 = load i64, i64* %c, align 8
  %and390 = and i64 %174, -128
  %cmp391 = icmp eq i64 %and390, 0
  br i1 %cmp391, label %land.lhs.true.393, label %lor.lhs.false.401

land.lhs.true.393:                                ; preds = %land.lhs.true.389
  %175 = load i64, i64* %c, align 8
  %conv394 = trunc i64 %175 to i32
  %idxprom395 = sext i32 %conv394 to i64
  %call396 = call i16** @__ctype_b_loc()
  %176 = load i16*, i16** %call396, align 8
  %arrayidx397 = getelementptr inbounds i16, i16* %176, i64 %idxprom395
  %177 = load i16, i16* %arrayidx397, align 2
  %conv398 = zext i16 %177 to i32
  %and399 = and i32 %conv398, 8
  %tobool400 = icmp ne i32 %and399, 0
  br i1 %tobool400, label %if.then.809, label %lor.lhs.false.401

lor.lhs.false.401:                                ; preds = %land.lhs.true.393, %land.lhs.true.389, %lor.lhs.false.383
  %178 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %179 = bitcast %struct.regnode* %178 to %struct.regnode_charclass_class*
  %classflags402 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %179, i32 0, i32 5
  %arrayidx403 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags402, i32 0, i64 0
  %180 = load i8, i8* %arrayidx403, align 1
  %conv404 = sext i8 %180 to i32
  %and405 = and i32 %conv404, 128
  %tobool406 = icmp ne i32 %and405, 0
  br i1 %tobool406, label %land.lhs.true.407, label %lor.lhs.false.419

land.lhs.true.407:                                ; preds = %lor.lhs.false.401
  %181 = load i64, i64* %c, align 8
  %and408 = and i64 %181, -128
  %cmp409 = icmp eq i64 %and408, 0
  br i1 %cmp409, label %land.lhs.true.411, label %if.then.809

land.lhs.true.411:                                ; preds = %land.lhs.true.407
  %182 = load i64, i64* %c, align 8
  %conv412 = trunc i64 %182 to i32
  %idxprom413 = sext i32 %conv412 to i64
  %call414 = call i16** @__ctype_b_loc()
  %183 = load i16*, i16** %call414, align 8
  %arrayidx415 = getelementptr inbounds i16, i16* %183, i64 %idxprom413
  %184 = load i16, i16* %arrayidx415, align 2
  %conv416 = zext i16 %184 to i32
  %and417 = and i32 %conv416, 8
  %tobool418 = icmp ne i32 %and417, 0
  br i1 %tobool418, label %lor.lhs.false.419, label %if.then.809

lor.lhs.false.419:                                ; preds = %land.lhs.true.411, %lor.lhs.false.401
  %185 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %186 = bitcast %struct.regnode* %185 to %struct.regnode_charclass_class*
  %classflags420 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %186, i32 0, i32 5
  %arrayidx421 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags420, i32 0, i64 1
  %187 = load i8, i8* %arrayidx421, align 1
  %conv422 = sext i8 %187 to i32
  %and423 = and i32 %conv422, 1
  %tobool424 = icmp ne i32 %and423, 0
  br i1 %tobool424, label %land.lhs.true.425, label %lor.lhs.false.437

land.lhs.true.425:                                ; preds = %lor.lhs.false.419
  %188 = load i64, i64* %c, align 8
  %and426 = and i64 %188, -128
  %cmp427 = icmp eq i64 %and426, 0
  br i1 %cmp427, label %land.lhs.true.429, label %lor.lhs.false.437

land.lhs.true.429:                                ; preds = %land.lhs.true.425
  %189 = load i64, i64* %c, align 8
  %conv430 = trunc i64 %189 to i32
  %idxprom431 = sext i32 %conv430 to i64
  %call432 = call i16** @__ctype_b_loc()
  %190 = load i16*, i16** %call432, align 8
  %arrayidx433 = getelementptr inbounds i16, i16* %190, i64 %idxprom431
  %191 = load i16, i16* %arrayidx433, align 2
  %conv434 = zext i16 %191 to i32
  %and435 = and i32 %conv434, 1024
  %tobool436 = icmp ne i32 %and435, 0
  br i1 %tobool436, label %if.then.809, label %lor.lhs.false.437

lor.lhs.false.437:                                ; preds = %land.lhs.true.429, %land.lhs.true.425, %lor.lhs.false.419
  %192 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %193 = bitcast %struct.regnode* %192 to %struct.regnode_charclass_class*
  %classflags438 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %193, i32 0, i32 5
  %arrayidx439 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags438, i32 0, i64 1
  %194 = load i8, i8* %arrayidx439, align 1
  %conv440 = sext i8 %194 to i32
  %and441 = and i32 %conv440, 2
  %tobool442 = icmp ne i32 %and441, 0
  br i1 %tobool442, label %land.lhs.true.443, label %lor.lhs.false.455

land.lhs.true.443:                                ; preds = %lor.lhs.false.437
  %195 = load i64, i64* %c, align 8
  %and444 = and i64 %195, -128
  %cmp445 = icmp eq i64 %and444, 0
  br i1 %cmp445, label %land.lhs.true.447, label %if.then.809

land.lhs.true.447:                                ; preds = %land.lhs.true.443
  %196 = load i64, i64* %c, align 8
  %conv448 = trunc i64 %196 to i32
  %idxprom449 = sext i32 %conv448 to i64
  %call450 = call i16** @__ctype_b_loc()
  %197 = load i16*, i16** %call450, align 8
  %arrayidx451 = getelementptr inbounds i16, i16* %197, i64 %idxprom449
  %198 = load i16, i16* %arrayidx451, align 2
  %conv452 = zext i16 %198 to i32
  %and453 = and i32 %conv452, 1024
  %tobool454 = icmp ne i32 %and453, 0
  br i1 %tobool454, label %lor.lhs.false.455, label %if.then.809

lor.lhs.false.455:                                ; preds = %land.lhs.true.447, %lor.lhs.false.437
  %199 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %200 = bitcast %struct.regnode* %199 to %struct.regnode_charclass_class*
  %classflags456 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %200, i32 0, i32 5
  %arrayidx457 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags456, i32 0, i64 1
  %201 = load i8, i8* %arrayidx457, align 1
  %conv458 = sext i8 %201 to i32
  %and459 = and i32 %conv458, 4
  %tobool460 = icmp ne i32 %and459, 0
  br i1 %tobool460, label %land.lhs.true.461, label %lor.lhs.false.464

land.lhs.true.461:                                ; preds = %lor.lhs.false.455
  %202 = load i64, i64* %c, align 8
  %cmp462 = icmp ule i64 %202, 127
  br i1 %cmp462, label %if.then.809, label %lor.lhs.false.464

lor.lhs.false.464:                                ; preds = %land.lhs.true.461, %lor.lhs.false.455
  %203 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %204 = bitcast %struct.regnode* %203 to %struct.regnode_charclass_class*
  %classflags465 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %204, i32 0, i32 5
  %arrayidx466 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags465, i32 0, i64 1
  %205 = load i8, i8* %arrayidx466, align 1
  %conv467 = sext i8 %205 to i32
  %and468 = and i32 %conv467, 8
  %tobool469 = icmp ne i32 %and468, 0
  br i1 %tobool469, label %land.lhs.true.470, label %lor.lhs.false.473

land.lhs.true.470:                                ; preds = %lor.lhs.false.464
  %206 = load i64, i64* %c, align 8
  %cmp471 = icmp ule i64 %206, 127
  br i1 %cmp471, label %lor.lhs.false.473, label %if.then.809

lor.lhs.false.473:                                ; preds = %land.lhs.true.470, %lor.lhs.false.464
  %207 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %208 = bitcast %struct.regnode* %207 to %struct.regnode_charclass_class*
  %classflags474 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %208, i32 0, i32 5
  %arrayidx475 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags474, i32 0, i64 1
  %209 = load i8, i8* %arrayidx475, align 1
  %conv476 = sext i8 %209 to i32
  %and477 = and i32 %conv476, 16
  %tobool478 = icmp ne i32 %and477, 0
  br i1 %tobool478, label %land.lhs.true.479, label %lor.lhs.false.491

land.lhs.true.479:                                ; preds = %lor.lhs.false.473
  %210 = load i64, i64* %c, align 8
  %and480 = and i64 %210, -128
  %cmp481 = icmp eq i64 %and480, 0
  br i1 %cmp481, label %land.lhs.true.483, label %lor.lhs.false.491

land.lhs.true.483:                                ; preds = %land.lhs.true.479
  %211 = load i64, i64* %c, align 8
  %conv484 = trunc i64 %211 to i32
  %idxprom485 = sext i32 %conv484 to i64
  %call486 = call i16** @__ctype_b_loc()
  %212 = load i16*, i16** %call486, align 8
  %arrayidx487 = getelementptr inbounds i16, i16* %212, i64 %idxprom485
  %213 = load i16, i16* %arrayidx487, align 2
  %conv488 = zext i16 %213 to i32
  %and489 = and i32 %conv488, 2
  %tobool490 = icmp ne i32 %and489, 0
  br i1 %tobool490, label %if.then.809, label %lor.lhs.false.491

lor.lhs.false.491:                                ; preds = %land.lhs.true.483, %land.lhs.true.479, %lor.lhs.false.473
  %214 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %215 = bitcast %struct.regnode* %214 to %struct.regnode_charclass_class*
  %classflags492 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %215, i32 0, i32 5
  %arrayidx493 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags492, i32 0, i64 1
  %216 = load i8, i8* %arrayidx493, align 1
  %conv494 = sext i8 %216 to i32
  %and495 = and i32 %conv494, 32
  %tobool496 = icmp ne i32 %and495, 0
  br i1 %tobool496, label %land.lhs.true.497, label %lor.lhs.false.509

land.lhs.true.497:                                ; preds = %lor.lhs.false.491
  %217 = load i64, i64* %c, align 8
  %and498 = and i64 %217, -128
  %cmp499 = icmp eq i64 %and498, 0
  br i1 %cmp499, label %land.lhs.true.501, label %if.then.809

land.lhs.true.501:                                ; preds = %land.lhs.true.497
  %218 = load i64, i64* %c, align 8
  %conv502 = trunc i64 %218 to i32
  %idxprom503 = sext i32 %conv502 to i64
  %call504 = call i16** @__ctype_b_loc()
  %219 = load i16*, i16** %call504, align 8
  %arrayidx505 = getelementptr inbounds i16, i16* %219, i64 %idxprom503
  %220 = load i16, i16* %arrayidx505, align 2
  %conv506 = zext i16 %220 to i32
  %and507 = and i32 %conv506, 2
  %tobool508 = icmp ne i32 %and507, 0
  br i1 %tobool508, label %lor.lhs.false.509, label %if.then.809

lor.lhs.false.509:                                ; preds = %land.lhs.true.501, %lor.lhs.false.491
  %221 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %222 = bitcast %struct.regnode* %221 to %struct.regnode_charclass_class*
  %classflags510 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %222, i32 0, i32 5
  %arrayidx511 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags510, i32 0, i64 1
  %223 = load i8, i8* %arrayidx511, align 1
  %conv512 = sext i8 %223 to i32
  %and513 = and i32 %conv512, 64
  %tobool514 = icmp ne i32 %and513, 0
  br i1 %tobool514, label %land.lhs.true.515, label %lor.lhs.false.527

land.lhs.true.515:                                ; preds = %lor.lhs.false.509
  %224 = load i64, i64* %c, align 8
  %and516 = and i64 %224, -128
  %cmp517 = icmp eq i64 %and516, 0
  br i1 %cmp517, label %land.lhs.true.519, label %lor.lhs.false.527

land.lhs.true.519:                                ; preds = %land.lhs.true.515
  %225 = load i64, i64* %c, align 8
  %conv520 = trunc i64 %225 to i32
  %idxprom521 = sext i32 %conv520 to i64
  %call522 = call i16** @__ctype_b_loc()
  %226 = load i16*, i16** %call522, align 8
  %arrayidx523 = getelementptr inbounds i16, i16* %226, i64 %idxprom521
  %227 = load i16, i16* %arrayidx523, align 2
  %conv524 = zext i16 %227 to i32
  %and525 = and i32 %conv524, 32768
  %tobool526 = icmp ne i32 %and525, 0
  br i1 %tobool526, label %if.then.809, label %lor.lhs.false.527

lor.lhs.false.527:                                ; preds = %land.lhs.true.519, %land.lhs.true.515, %lor.lhs.false.509
  %228 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %229 = bitcast %struct.regnode* %228 to %struct.regnode_charclass_class*
  %classflags528 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %229, i32 0, i32 5
  %arrayidx529 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags528, i32 0, i64 1
  %230 = load i8, i8* %arrayidx529, align 1
  %conv530 = sext i8 %230 to i32
  %and531 = and i32 %conv530, 128
  %tobool532 = icmp ne i32 %and531, 0
  br i1 %tobool532, label %land.lhs.true.533, label %lor.lhs.false.545

land.lhs.true.533:                                ; preds = %lor.lhs.false.527
  %231 = load i64, i64* %c, align 8
  %and534 = and i64 %231, -128
  %cmp535 = icmp eq i64 %and534, 0
  br i1 %cmp535, label %land.lhs.true.537, label %if.then.809

land.lhs.true.537:                                ; preds = %land.lhs.true.533
  %232 = load i64, i64* %c, align 8
  %conv538 = trunc i64 %232 to i32
  %idxprom539 = sext i32 %conv538 to i64
  %call540 = call i16** @__ctype_b_loc()
  %233 = load i16*, i16** %call540, align 8
  %arrayidx541 = getelementptr inbounds i16, i16* %233, i64 %idxprom539
  %234 = load i16, i16* %arrayidx541, align 2
  %conv542 = zext i16 %234 to i32
  %and543 = and i32 %conv542, 32768
  %tobool544 = icmp ne i32 %and543, 0
  br i1 %tobool544, label %lor.lhs.false.545, label %if.then.809

lor.lhs.false.545:                                ; preds = %land.lhs.true.537, %lor.lhs.false.527
  %235 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %236 = bitcast %struct.regnode* %235 to %struct.regnode_charclass_class*
  %classflags546 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %236, i32 0, i32 5
  %arrayidx547 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags546, i32 0, i64 2
  %237 = load i8, i8* %arrayidx547, align 1
  %conv548 = sext i8 %237 to i32
  %and549 = and i32 %conv548, 1
  %tobool550 = icmp ne i32 %and549, 0
  br i1 %tobool550, label %land.lhs.true.551, label %lor.lhs.false.563

land.lhs.true.551:                                ; preds = %lor.lhs.false.545
  %238 = load i64, i64* %c, align 8
  %and552 = and i64 %238, -128
  %cmp553 = icmp eq i64 %and552, 0
  br i1 %cmp553, label %land.lhs.true.555, label %lor.lhs.false.563

land.lhs.true.555:                                ; preds = %land.lhs.true.551
  %239 = load i64, i64* %c, align 8
  %conv556 = trunc i64 %239 to i32
  %idxprom557 = sext i32 %conv556 to i64
  %call558 = call i16** @__ctype_b_loc()
  %240 = load i16*, i16** %call558, align 8
  %arrayidx559 = getelementptr inbounds i16, i16* %240, i64 %idxprom557
  %241 = load i16, i16* %arrayidx559, align 2
  %conv560 = zext i16 %241 to i32
  %and561 = and i32 %conv560, 512
  %tobool562 = icmp ne i32 %and561, 0
  br i1 %tobool562, label %if.then.809, label %lor.lhs.false.563

lor.lhs.false.563:                                ; preds = %land.lhs.true.555, %land.lhs.true.551, %lor.lhs.false.545
  %242 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %243 = bitcast %struct.regnode* %242 to %struct.regnode_charclass_class*
  %classflags564 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %243, i32 0, i32 5
  %arrayidx565 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags564, i32 0, i64 2
  %244 = load i8, i8* %arrayidx565, align 1
  %conv566 = sext i8 %244 to i32
  %and567 = and i32 %conv566, 2
  %tobool568 = icmp ne i32 %and567, 0
  br i1 %tobool568, label %land.lhs.true.569, label %lor.lhs.false.581

land.lhs.true.569:                                ; preds = %lor.lhs.false.563
  %245 = load i64, i64* %c, align 8
  %and570 = and i64 %245, -128
  %cmp571 = icmp eq i64 %and570, 0
  br i1 %cmp571, label %land.lhs.true.573, label %if.then.809

land.lhs.true.573:                                ; preds = %land.lhs.true.569
  %246 = load i64, i64* %c, align 8
  %conv574 = trunc i64 %246 to i32
  %idxprom575 = sext i32 %conv574 to i64
  %call576 = call i16** @__ctype_b_loc()
  %247 = load i16*, i16** %call576, align 8
  %arrayidx577 = getelementptr inbounds i16, i16* %247, i64 %idxprom575
  %248 = load i16, i16* %arrayidx577, align 2
  %conv578 = zext i16 %248 to i32
  %and579 = and i32 %conv578, 512
  %tobool580 = icmp ne i32 %and579, 0
  br i1 %tobool580, label %lor.lhs.false.581, label %if.then.809

lor.lhs.false.581:                                ; preds = %land.lhs.true.573, %lor.lhs.false.563
  %249 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %250 = bitcast %struct.regnode* %249 to %struct.regnode_charclass_class*
  %classflags582 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %250, i32 0, i32 5
  %arrayidx583 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags582, i32 0, i64 2
  %251 = load i8, i8* %arrayidx583, align 1
  %conv584 = sext i8 %251 to i32
  %and585 = and i32 %conv584, 4
  %tobool586 = icmp ne i32 %and585, 0
  br i1 %tobool586, label %land.lhs.true.587, label %lor.lhs.false.599

land.lhs.true.587:                                ; preds = %lor.lhs.false.581
  %252 = load i64, i64* %c, align 8
  %and588 = and i64 %252, -128
  %cmp589 = icmp eq i64 %and588, 0
  br i1 %cmp589, label %land.lhs.true.591, label %lor.lhs.false.599

land.lhs.true.591:                                ; preds = %land.lhs.true.587
  %253 = load i64, i64* %c, align 8
  %conv592 = trunc i64 %253 to i32
  %idxprom593 = sext i32 %conv592 to i64
  %call594 = call i16** @__ctype_b_loc()
  %254 = load i16*, i16** %call594, align 8
  %arrayidx595 = getelementptr inbounds i16, i16* %254, i64 %idxprom593
  %255 = load i16, i16* %arrayidx595, align 2
  %conv596 = zext i16 %255 to i32
  %and597 = and i32 %conv596, 16384
  %tobool598 = icmp ne i32 %and597, 0
  br i1 %tobool598, label %if.then.809, label %lor.lhs.false.599

lor.lhs.false.599:                                ; preds = %land.lhs.true.591, %land.lhs.true.587, %lor.lhs.false.581
  %256 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %257 = bitcast %struct.regnode* %256 to %struct.regnode_charclass_class*
  %classflags600 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %257, i32 0, i32 5
  %arrayidx601 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags600, i32 0, i64 2
  %258 = load i8, i8* %arrayidx601, align 1
  %conv602 = sext i8 %258 to i32
  %and603 = and i32 %conv602, 8
  %tobool604 = icmp ne i32 %and603, 0
  br i1 %tobool604, label %land.lhs.true.605, label %lor.lhs.false.617

land.lhs.true.605:                                ; preds = %lor.lhs.false.599
  %259 = load i64, i64* %c, align 8
  %and606 = and i64 %259, -128
  %cmp607 = icmp eq i64 %and606, 0
  br i1 %cmp607, label %land.lhs.true.609, label %if.then.809

land.lhs.true.609:                                ; preds = %land.lhs.true.605
  %260 = load i64, i64* %c, align 8
  %conv610 = trunc i64 %260 to i32
  %idxprom611 = sext i32 %conv610 to i64
  %call612 = call i16** @__ctype_b_loc()
  %261 = load i16*, i16** %call612, align 8
  %arrayidx613 = getelementptr inbounds i16, i16* %261, i64 %idxprom611
  %262 = load i16, i16* %arrayidx613, align 2
  %conv614 = zext i16 %262 to i32
  %and615 = and i32 %conv614, 16384
  %tobool616 = icmp ne i32 %and615, 0
  br i1 %tobool616, label %lor.lhs.false.617, label %if.then.809

lor.lhs.false.617:                                ; preds = %land.lhs.true.609, %lor.lhs.false.599
  %263 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %264 = bitcast %struct.regnode* %263 to %struct.regnode_charclass_class*
  %classflags618 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %264, i32 0, i32 5
  %arrayidx619 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags618, i32 0, i64 2
  %265 = load i8, i8* %arrayidx619, align 1
  %conv620 = sext i8 %265 to i32
  %and621 = and i32 %conv620, 16
  %tobool622 = icmp ne i32 %and621, 0
  br i1 %tobool622, label %land.lhs.true.623, label %lor.lhs.false.635

land.lhs.true.623:                                ; preds = %lor.lhs.false.617
  %266 = load i64, i64* %c, align 8
  %and624 = and i64 %266, -128
  %cmp625 = icmp eq i64 %and624, 0
  br i1 %cmp625, label %land.lhs.true.627, label %lor.lhs.false.635

land.lhs.true.627:                                ; preds = %land.lhs.true.623
  %267 = load i64, i64* %c, align 8
  %conv628 = trunc i64 %267 to i32
  %idxprom629 = sext i32 %conv628 to i64
  %call630 = call i16** @__ctype_b_loc()
  %268 = load i16*, i16** %call630, align 8
  %arrayidx631 = getelementptr inbounds i16, i16* %268, i64 %idxprom629
  %269 = load i16, i16* %arrayidx631, align 2
  %conv632 = zext i16 %269 to i32
  %and633 = and i32 %conv632, 4
  %tobool634 = icmp ne i32 %and633, 0
  br i1 %tobool634, label %if.then.809, label %lor.lhs.false.635

lor.lhs.false.635:                                ; preds = %land.lhs.true.627, %land.lhs.true.623, %lor.lhs.false.617
  %270 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %271 = bitcast %struct.regnode* %270 to %struct.regnode_charclass_class*
  %classflags636 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %271, i32 0, i32 5
  %arrayidx637 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags636, i32 0, i64 2
  %272 = load i8, i8* %arrayidx637, align 1
  %conv638 = sext i8 %272 to i32
  %and639 = and i32 %conv638, 32
  %tobool640 = icmp ne i32 %and639, 0
  br i1 %tobool640, label %land.lhs.true.641, label %lor.lhs.false.653

land.lhs.true.641:                                ; preds = %lor.lhs.false.635
  %273 = load i64, i64* %c, align 8
  %and642 = and i64 %273, -128
  %cmp643 = icmp eq i64 %and642, 0
  br i1 %cmp643, label %land.lhs.true.645, label %if.then.809

land.lhs.true.645:                                ; preds = %land.lhs.true.641
  %274 = load i64, i64* %c, align 8
  %conv646 = trunc i64 %274 to i32
  %idxprom647 = sext i32 %conv646 to i64
  %call648 = call i16** @__ctype_b_loc()
  %275 = load i16*, i16** %call648, align 8
  %arrayidx649 = getelementptr inbounds i16, i16* %275, i64 %idxprom647
  %276 = load i16, i16* %arrayidx649, align 2
  %conv650 = zext i16 %276 to i32
  %and651 = and i32 %conv650, 4
  %tobool652 = icmp ne i32 %and651, 0
  br i1 %tobool652, label %lor.lhs.false.653, label %if.then.809

lor.lhs.false.653:                                ; preds = %land.lhs.true.645, %lor.lhs.false.635
  %277 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %278 = bitcast %struct.regnode* %277 to %struct.regnode_charclass_class*
  %classflags654 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %278, i32 0, i32 5
  %arrayidx655 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags654, i32 0, i64 2
  %279 = load i8, i8* %arrayidx655, align 1
  %conv656 = sext i8 %279 to i32
  %and657 = and i32 %conv656, 64
  %tobool658 = icmp ne i32 %and657, 0
  br i1 %tobool658, label %land.lhs.true.659, label %lor.lhs.false.671

land.lhs.true.659:                                ; preds = %lor.lhs.false.653
  %280 = load i64, i64* %c, align 8
  %and660 = and i64 %280, -128
  %cmp661 = icmp eq i64 %and660, 0
  br i1 %cmp661, label %land.lhs.true.663, label %lor.lhs.false.671

land.lhs.true.663:                                ; preds = %land.lhs.true.659
  %281 = load i64, i64* %c, align 8
  %conv664 = trunc i64 %281 to i32
  %idxprom665 = sext i32 %conv664 to i64
  %call666 = call i16** @__ctype_b_loc()
  %282 = load i16*, i16** %call666, align 8
  %arrayidx667 = getelementptr inbounds i16, i16* %282, i64 %idxprom665
  %283 = load i16, i16* %arrayidx667, align 2
  %conv668 = zext i16 %283 to i32
  %and669 = and i32 %conv668, 256
  %tobool670 = icmp ne i32 %and669, 0
  br i1 %tobool670, label %if.then.809, label %lor.lhs.false.671

lor.lhs.false.671:                                ; preds = %land.lhs.true.663, %land.lhs.true.659, %lor.lhs.false.653
  %284 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %285 = bitcast %struct.regnode* %284 to %struct.regnode_charclass_class*
  %classflags672 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %285, i32 0, i32 5
  %arrayidx673 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags672, i32 0, i64 2
  %286 = load i8, i8* %arrayidx673, align 1
  %conv674 = sext i8 %286 to i32
  %and675 = and i32 %conv674, 128
  %tobool676 = icmp ne i32 %and675, 0
  br i1 %tobool676, label %land.lhs.true.677, label %lor.lhs.false.689

land.lhs.true.677:                                ; preds = %lor.lhs.false.671
  %287 = load i64, i64* %c, align 8
  %and678 = and i64 %287, -128
  %cmp679 = icmp eq i64 %and678, 0
  br i1 %cmp679, label %land.lhs.true.681, label %if.then.809

land.lhs.true.681:                                ; preds = %land.lhs.true.677
  %288 = load i64, i64* %c, align 8
  %conv682 = trunc i64 %288 to i32
  %idxprom683 = sext i32 %conv682 to i64
  %call684 = call i16** @__ctype_b_loc()
  %289 = load i16*, i16** %call684, align 8
  %arrayidx685 = getelementptr inbounds i16, i16* %289, i64 %idxprom683
  %290 = load i16, i16* %arrayidx685, align 2
  %conv686 = zext i16 %290 to i32
  %and687 = and i32 %conv686, 256
  %tobool688 = icmp ne i32 %and687, 0
  br i1 %tobool688, label %lor.lhs.false.689, label %if.then.809

lor.lhs.false.689:                                ; preds = %land.lhs.true.681, %lor.lhs.false.671
  %291 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %292 = bitcast %struct.regnode* %291 to %struct.regnode_charclass_class*
  %classflags690 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %292, i32 0, i32 5
  %arrayidx691 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags690, i32 0, i64 3
  %293 = load i8, i8* %arrayidx691, align 1
  %conv692 = sext i8 %293 to i32
  %and693 = and i32 %conv692, 1
  %tobool694 = icmp ne i32 %and693, 0
  br i1 %tobool694, label %land.lhs.true.695, label %lor.lhs.false.713

land.lhs.true.695:                                ; preds = %lor.lhs.false.689
  %294 = load i64, i64* %c, align 8
  %cmp696 = icmp uge i64 %294, 48
  br i1 %cmp696, label %land.lhs.true.698, label %lor.lhs.false.701

land.lhs.true.698:                                ; preds = %land.lhs.true.695
  %295 = load i64, i64* %c, align 8
  %cmp699 = icmp ule i64 %295, 57
  br i1 %cmp699, label %if.then.809, label %lor.lhs.false.701

lor.lhs.false.701:                                ; preds = %land.lhs.true.698, %land.lhs.true.695
  %296 = load i64, i64* %c, align 8
  %cmp702 = icmp uge i64 %296, 97
  br i1 %cmp702, label %land.lhs.true.704, label %lor.lhs.false.707

land.lhs.true.704:                                ; preds = %lor.lhs.false.701
  %297 = load i64, i64* %c, align 8
  %cmp705 = icmp ule i64 %297, 102
  br i1 %cmp705, label %if.then.809, label %lor.lhs.false.707

lor.lhs.false.707:                                ; preds = %land.lhs.true.704, %lor.lhs.false.701
  %298 = load i64, i64* %c, align 8
  %cmp708 = icmp uge i64 %298, 65
  br i1 %cmp708, label %land.lhs.true.710, label %lor.lhs.false.713

land.lhs.true.710:                                ; preds = %lor.lhs.false.707
  %299 = load i64, i64* %c, align 8
  %cmp711 = icmp ule i64 %299, 70
  br i1 %cmp711, label %if.then.809, label %lor.lhs.false.713

lor.lhs.false.713:                                ; preds = %land.lhs.true.710, %lor.lhs.false.707, %lor.lhs.false.689
  %300 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %301 = bitcast %struct.regnode* %300 to %struct.regnode_charclass_class*
  %classflags714 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %301, i32 0, i32 5
  %arrayidx715 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags714, i32 0, i64 3
  %302 = load i8, i8* %arrayidx715, align 1
  %conv716 = sext i8 %302 to i32
  %and717 = and i32 %conv716, 2
  %tobool718 = icmp ne i32 %and717, 0
  br i1 %tobool718, label %land.lhs.true.719, label %lor.lhs.false.737

land.lhs.true.719:                                ; preds = %lor.lhs.false.713
  %303 = load i64, i64* %c, align 8
  %cmp720 = icmp uge i64 %303, 48
  br i1 %cmp720, label %land.lhs.true.722, label %lor.lhs.false.725

land.lhs.true.722:                                ; preds = %land.lhs.true.719
  %304 = load i64, i64* %c, align 8
  %cmp723 = icmp ule i64 %304, 57
  br i1 %cmp723, label %lor.lhs.false.737, label %lor.lhs.false.725

lor.lhs.false.725:                                ; preds = %land.lhs.true.722, %land.lhs.true.719
  %305 = load i64, i64* %c, align 8
  %cmp726 = icmp uge i64 %305, 97
  br i1 %cmp726, label %land.lhs.true.728, label %lor.lhs.false.731

land.lhs.true.728:                                ; preds = %lor.lhs.false.725
  %306 = load i64, i64* %c, align 8
  %cmp729 = icmp ule i64 %306, 102
  br i1 %cmp729, label %lor.lhs.false.737, label %lor.lhs.false.731

lor.lhs.false.731:                                ; preds = %land.lhs.true.728, %lor.lhs.false.725
  %307 = load i64, i64* %c, align 8
  %cmp732 = icmp uge i64 %307, 65
  br i1 %cmp732, label %land.lhs.true.734, label %if.then.809

land.lhs.true.734:                                ; preds = %lor.lhs.false.731
  %308 = load i64, i64* %c, align 8
  %cmp735 = icmp ule i64 %308, 70
  br i1 %cmp735, label %lor.lhs.false.737, label %if.then.809

lor.lhs.false.737:                                ; preds = %land.lhs.true.734, %land.lhs.true.728, %land.lhs.true.722, %lor.lhs.false.713
  %309 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %310 = bitcast %struct.regnode* %309 to %struct.regnode_charclass_class*
  %classflags738 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %310, i32 0, i32 5
  %arrayidx739 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags738, i32 0, i64 3
  %311 = load i8, i8* %arrayidx739, align 1
  %conv740 = sext i8 %311 to i32
  %and741 = and i32 %conv740, 4
  %tobool742 = icmp ne i32 %and741, 0
  br i1 %tobool742, label %land.lhs.true.743, label %lor.lhs.false.761

land.lhs.true.743:                                ; preds = %lor.lhs.false.737
  %312 = load i64, i64* %c, align 8
  %cmp744 = icmp eq i64 %312, 32
  br i1 %cmp744, label %if.then.809, label %lor.lhs.false.746

lor.lhs.false.746:                                ; preds = %land.lhs.true.743
  %313 = load i64, i64* %c, align 8
  %cmp747 = icmp eq i64 %313, 9
  br i1 %cmp747, label %if.then.809, label %lor.lhs.false.749

lor.lhs.false.749:                                ; preds = %lor.lhs.false.746
  %314 = load i64, i64* %c, align 8
  %cmp750 = icmp eq i64 %314, 10
  br i1 %cmp750, label %if.then.809, label %lor.lhs.false.752

lor.lhs.false.752:                                ; preds = %lor.lhs.false.749
  %315 = load i64, i64* %c, align 8
  %cmp753 = icmp eq i64 %315, 13
  br i1 %cmp753, label %if.then.809, label %lor.lhs.false.755

lor.lhs.false.755:                                ; preds = %lor.lhs.false.752
  %316 = load i64, i64* %c, align 8
  %cmp756 = icmp eq i64 %316, 12
  br i1 %cmp756, label %if.then.809, label %lor.lhs.false.758

lor.lhs.false.758:                                ; preds = %lor.lhs.false.755
  %317 = load i64, i64* %c, align 8
  %cmp759 = icmp eq i64 %317, 11
  br i1 %cmp759, label %if.then.809, label %lor.lhs.false.761

lor.lhs.false.761:                                ; preds = %lor.lhs.false.758, %lor.lhs.false.737
  %318 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %319 = bitcast %struct.regnode* %318 to %struct.regnode_charclass_class*
  %classflags762 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %319, i32 0, i32 5
  %arrayidx763 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags762, i32 0, i64 3
  %320 = load i8, i8* %arrayidx763, align 1
  %conv764 = sext i8 %320 to i32
  %and765 = and i32 %conv764, 8
  %tobool766 = icmp ne i32 %and765, 0
  br i1 %tobool766, label %land.lhs.true.767, label %lor.lhs.false.785

land.lhs.true.767:                                ; preds = %lor.lhs.false.761
  %321 = load i64, i64* %c, align 8
  %cmp768 = icmp eq i64 %321, 32
  br i1 %cmp768, label %lor.lhs.false.785, label %lor.lhs.false.770

lor.lhs.false.770:                                ; preds = %land.lhs.true.767
  %322 = load i64, i64* %c, align 8
  %cmp771 = icmp eq i64 %322, 9
  br i1 %cmp771, label %lor.lhs.false.785, label %lor.lhs.false.773

lor.lhs.false.773:                                ; preds = %lor.lhs.false.770
  %323 = load i64, i64* %c, align 8
  %cmp774 = icmp eq i64 %323, 10
  br i1 %cmp774, label %lor.lhs.false.785, label %lor.lhs.false.776

lor.lhs.false.776:                                ; preds = %lor.lhs.false.773
  %324 = load i64, i64* %c, align 8
  %cmp777 = icmp eq i64 %324, 13
  br i1 %cmp777, label %lor.lhs.false.785, label %lor.lhs.false.779

lor.lhs.false.779:                                ; preds = %lor.lhs.false.776
  %325 = load i64, i64* %c, align 8
  %cmp780 = icmp eq i64 %325, 12
  br i1 %cmp780, label %lor.lhs.false.785, label %lor.lhs.false.782

lor.lhs.false.782:                                ; preds = %lor.lhs.false.779
  %326 = load i64, i64* %c, align 8
  %cmp783 = icmp eq i64 %326, 11
  br i1 %cmp783, label %lor.lhs.false.785, label %if.then.809

lor.lhs.false.785:                                ; preds = %lor.lhs.false.782, %lor.lhs.false.779, %lor.lhs.false.776, %lor.lhs.false.773, %lor.lhs.false.770, %land.lhs.true.767, %lor.lhs.false.761
  %327 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %328 = bitcast %struct.regnode* %327 to %struct.regnode_charclass_class*
  %classflags786 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %328, i32 0, i32 5
  %arrayidx787 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags786, i32 0, i64 3
  %329 = load i8, i8* %arrayidx787, align 1
  %conv788 = sext i8 %329 to i32
  %and789 = and i32 %conv788, 16
  %tobool790 = icmp ne i32 %and789, 0
  br i1 %tobool790, label %land.lhs.true.791, label %lor.lhs.false.797

land.lhs.true.791:                                ; preds = %lor.lhs.false.785
  %330 = load i64, i64* %c, align 8
  %cmp792 = icmp eq i64 %330, 32
  br i1 %cmp792, label %if.then.809, label %lor.lhs.false.794

lor.lhs.false.794:                                ; preds = %land.lhs.true.791
  %331 = load i64, i64* %c, align 8
  %cmp795 = icmp eq i64 %331, 9
  br i1 %cmp795, label %if.then.809, label %lor.lhs.false.797

lor.lhs.false.797:                                ; preds = %lor.lhs.false.794, %lor.lhs.false.785
  %332 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %333 = bitcast %struct.regnode* %332 to %struct.regnode_charclass_class*
  %classflags798 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %333, i32 0, i32 5
  %arrayidx799 = getelementptr inbounds [4 x i8], [4 x i8]* %classflags798, i32 0, i64 3
  %334 = load i8, i8* %arrayidx799, align 1
  %conv800 = sext i8 %334 to i32
  %and801 = and i32 %conv800, 32
  %tobool802 = icmp ne i32 %and801, 0
  br i1 %tobool802, label %land.lhs.true.803, label %if.end.810

land.lhs.true.803:                                ; preds = %lor.lhs.false.797
  %335 = load i64, i64* %c, align 8
  %cmp804 = icmp eq i64 %335, 32
  br i1 %cmp804, label %if.end.810, label %lor.lhs.false.806

lor.lhs.false.806:                                ; preds = %land.lhs.true.803
  %336 = load i64, i64* %c, align 8
  %cmp807 = icmp eq i64 %336, 9
  br i1 %cmp807, label %if.end.810, label %if.then.809

if.then.809:                                      ; preds = %lor.lhs.false.806, %lor.lhs.false.794, %land.lhs.true.791, %lor.lhs.false.782, %lor.lhs.false.758, %lor.lhs.false.755, %lor.lhs.false.752, %lor.lhs.false.749, %lor.lhs.false.746, %land.lhs.true.743, %land.lhs.true.734, %lor.lhs.false.731, %land.lhs.true.710, %land.lhs.true.704, %land.lhs.true.698, %land.lhs.true.681, %land.lhs.true.677, %land.lhs.true.663, %land.lhs.true.645, %land.lhs.true.641, %land.lhs.true.627, %land.lhs.true.609, %land.lhs.true.605, %land.lhs.true.591, %land.lhs.true.573, %land.lhs.true.569, %land.lhs.true.555, %land.lhs.true.537, %land.lhs.true.533, %land.lhs.true.519, %land.lhs.true.501, %land.lhs.true.497, %land.lhs.true.483, %land.lhs.true.470, %land.lhs.true.461, %land.lhs.true.447, %land.lhs.true.443, %land.lhs.true.429, %land.lhs.true.411, %land.lhs.true.407, %land.lhs.true.393, %land.lhs.true.375, %land.lhs.true.371, %land.lhs.true.357, %land.lhs.true.339, %land.lhs.true.335, %land.lhs.true.321, %lor.lhs.false.308, %land.lhs.true.296, %lor.lhs.false.287, %land.lhs.true.279
  store i8 1, i8* %match, align 1
  br label %if.end.810

if.end.810:                                       ; preds = %if.then.809, %lor.lhs.false.806, %land.lhs.true.803, %lor.lhs.false.797
  br label %if.end.811

if.end.811:                                       ; preds = %if.end.810, %land.lhs.true.265, %if.end.263
  br label %if.end.812

if.end.812:                                       ; preds = %if.end.811, %land.lhs.true.217, %if.end.215
  %337 = load i8, i8* %flags, align 1
  %conv813 = sext i8 %337 to i32
  %and814 = and i32 %conv813, 4
  %tobool815 = icmp ne i32 %and814, 0
  br i1 %tobool815, label %cond.true.816, label %cond.false.818

cond.true.816:                                    ; preds = %if.end.812
  %338 = load i8, i8* %match, align 1
  %tobool817 = icmp ne i8 %338, 0
  %lnot = xor i1 %tobool817, true
  %lnot.ext = zext i1 %lnot to i32
  br label %cond.end.820

cond.false.818:                                   ; preds = %if.end.812
  %339 = load i8, i8* %match, align 1
  %conv819 = sext i8 %339 to i32
  br label %cond.end.820

cond.end.820:                                     ; preds = %cond.false.818, %cond.true.816
  %cond821 = phi i32 [ %lnot.ext, %cond.true.816 ], [ %conv819, %cond.false.818 ]
  %conv822 = trunc i32 %cond821 to i8
  ret i8 %conv822
}

declare i64 @Perl_to_utf8_lower(i8*, i8*, i64*) #1

declare i64 @Perl_to_utf8_upper(i8*, i8*, i64*) #1

declare i64 @Perl_utf8n_to_uvuni(i8*, i64, i64*, i32) #1

declare i32 @Perl_ibcmp_utf8(i8*, i8**, i64, i8 signext, i8*, i8**, i64, i8 signext) #1

declare i8* @Perl_uvuni_to_utf8(i8*, i64) #1

declare i64 @Perl_to_utf8_fold(i8*, i8*, i64*) #1

declare i32 @Perl_ibcmp(i8*, i8*, i32) #1

declare i32 @Perl_ibcmp_locale(i8*, i8*, i32) #1

declare signext i8 @Perl_is_uni_alnum(i64) #1

declare i16** @__ctype_b_loc() #1

declare signext i8 @Perl_is_uni_alnum_lc(i64) #1

declare void @Perl_push_scope() #1

declare void @Perl_save_re_context() #1

declare signext i8 @Perl_is_utf8_alnum(i8*) #1

declare void @Perl_pop_scope() #1

declare i64 @Perl_swash_fetch(%struct.sv*, i8*, i8 signext) #1

declare i64 @Perl_utf8_to_uvchr(i8*, i64*) #1

declare signext i8 @Perl_is_utf8_space(i8*) #1

declare signext i8 @Perl_is_uni_space_lc(i64) #1

declare signext i8 @Perl_is_utf8_digit(i8*) #1

declare signext i8 @Perl_is_uni_digit_lc(i64) #1

declare i32 @Perl_av_len(%struct.av*) #1

declare %struct.sv** @Perl_av_fetch(%struct.av*, i32, i32) #1

declare void @Perl_save_I32(i32*) #1

declare void @Perl_save_int(i32*) #1

declare void @Perl_save_sptr(%struct.sv**) #1

declare void @Perl_sv_magic(%struct.sv*, %struct.sv*, i32, i8*, i32) #1

declare void @Perl_save_destructor_x(void (i8*)*, i8*) #1

declare i8* @Perl_safesysmalloc(i64) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

declare i8* @Perl_safesysrealloc(i8*, i64) #1

; Function Attrs: nounwind uwtable
define internal i32 @S_regmatch(%struct.regnode* %prog) #0 {
entry:
  %retval = alloca i32, align 4
  %prog.addr = alloca %struct.regnode*, align 8
  %scan = alloca %struct.regnode*, align 8
  %next = alloca %struct.regnode*, align 8
  %inner = alloca %struct.regnode*, align 8
  %nextchr = alloca i32, align 4
  %n = alloca i32, align 4
  %ln = alloca i32, align 4
  %s = alloca i8*, align 8
  %locinput = alloca i8*, align 8
  %c1 = alloca i32, align 4
  %c2 = alloca i32, align 4
  %paren = alloca i32, align 4
  %minmod = alloca i32, align 4
  %sw = alloca i32, align 4
  %logical = alloca i32, align 4
  %unwind = alloca i32, align 4
  %do_utf8 = alloca i8, align 1
  %l = alloca i8*, align 8
  %e = alloca i8*, align 8
  %ulen = alloca i64, align 8
  %l268 = alloca i8*, align 8
  %e269 = alloca i8*, align 8
  %inclasslen = alloca i64, align 8
  %r = alloca i8*, align 8
  %l1389 = alloca i8*, align 8
  %e1390 = alloca i8*, align 8
  %ulen1 = alloca i64, align 8
  %ulen2 = alloca i64, align 8
  %tmpbuf1 = alloca [7 x i8], align 1
  %tmpbuf2 = alloca [7 x i8], align 1
  %sp = alloca %struct.sv**, align 8
  %oop = alloca %struct.op*, align 8
  %ocurcop = alloca %struct.cop*, align 8
  %old_comppad = alloca %struct.av*, align 8
  %ret = alloca %struct.sv*, align 8
  %oreg = alloca %struct.regexp*, align 8
  %before = alloca %struct.sv**, align 8
  %re = alloca %struct.regexp*, align 8
  %mg = alloca %struct.magic*, align 8
  %state = alloca %struct.re_cc_state, align 8
  %cp = alloca i32, align 4
  %lastcp = alloca i32, align 4
  %toggleutf = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  %len = alloca i64, align 8
  %t = alloca i8*, align 8
  %pm = alloca %struct.pmop, align 8
  %oprecomp = alloca i8*, align 8
  %osize = alloca i32, align 4
  %onpar = alloca i32, align 4
  %cc1756 = alloca %struct.curcur, align 8
  %cp1757 = alloca i32, align 4
  %parenfloor = alloca i32, align 4
  %cp1794 = alloca i32, align 4
  %lastcp1795 = alloca i32, align 4
  %cc1796 = alloca %struct.curcur*, align 8
  %lastloc1797 = alloca i8*, align 8
  %cache_offset = alloca i32, align 4
  %cache_bit = alloca i32, align 4
  %size = alloca i32, align 4
  %lastparen = alloca i32, align 4
  %unwind1 = alloca i32, align 4
  %uw = alloca %struct.re_unwind_branch_t*, align 8
  %l2319 = alloca i32, align 4
  %lastcp2320 = alloca i32, align 4
  %text_node = alloca %struct.regnode*, align 8
  %text_node2732 = alloca %struct.regnode*, align 8
  %s3070 = alloca i8*, align 8
  %text_node3071 = alloca %struct.regnode*, align 8
  %ulen13259 = alloca i64, align 8
  %ulen23260 = alloca i64, align 8
  %tmpbuf13261 = alloca [7 x i8], align 1
  %tmpbuf23262 = alloca [7 x i8], align 1
  %lastcp3379 = alloca i32, align 4
  %e3390 = alloca i8*, align 8
  %old = alloca i8*, align 8
  %count = alloca i32, align 4
  %m = alloca i32, align 4
  %len3487 = alloca i64, align 8
  %c = alloca i64, align 8
  %c3671 = alloca i64, align 8
  %lastcp3826 = alloca i32, align 4
  %c3870 = alloca i64, align 8
  %c3985 = alloca i64, align 8
  %cur_call_cc = alloca %struct.re_cc_state*, align 8
  %cctmp = alloca %struct.curcur*, align 8
  %re4104 = alloca %struct.regexp*, align 8
  %cp4105 = alloca i32, align 4
  %lastcp4106 = alloca i32, align 4
  %uw4263 = alloca %union.re_unwind_t*, align 8
  %uwb = alloca %struct.re_unwind_branch_t*, align 8
  %lastparen4268 = alloca i32, align 4
  store %struct.regnode* %prog, %struct.regnode** %prog.addr, align 8
  store i32 0, i32* %ln, align 4
  store i8* null, i8** %s, align 8
  %0 = load i8*, i8** @PL_reginput, align 8
  store i8* %0, i8** %locinput, align 8
  store i32 0, i32* %c1, align 4
  store i32 0, i32* %c2, align 4
  store i32 0, i32* %minmod, align 4
  store i32 0, i32* %sw, align 4
  store i32 0, i32* %logical, align 4
  store i32 0, i32* %unwind, align 4
  %1 = load i8, i8* @PL_reg_match_utf8, align 1
  store i8 %1, i8* %do_utf8, align 1
  %2 = load i8*, i8** %locinput, align 8
  %3 = load i8, i8* %2, align 1
  %conv = zext i8 %3 to i32
  store i32 %conv, i32* %nextchr, align 4
  %4 = load %struct.regnode*, %struct.regnode** %prog.addr, align 8
  store %struct.regnode* %4, %struct.regnode** %scan, align 8
  br label %while.cond

while.cond:                                       ; preds = %reenter, %entry
  %5 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %cmp = icmp ne %struct.regnode* %5, null
  br i1 %cmp, label %while.body, label %while.end.4260

while.body:                                       ; preds = %while.cond
  %6 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %7 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %next_off = getelementptr inbounds %struct.regnode, %struct.regnode* %7, i32 0, i32 2
  %8 = load i16, i16* %next_off, align 2
  %conv2 = zext i16 %8 to i32
  %idx.ext = sext i32 %conv2 to i64
  %add.ptr = getelementptr inbounds %struct.regnode, %struct.regnode* %6, i64 %idx.ext
  store %struct.regnode* %add.ptr, %struct.regnode** %next, align 8
  %9 = load %struct.regnode*, %struct.regnode** %next, align 8
  %10 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %cmp3 = icmp eq %struct.regnode* %9, %10
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  store %struct.regnode* null, %struct.regnode** %next, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body
  %11 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type = getelementptr inbounds %struct.regnode, %struct.regnode* %11, i32 0, i32 1
  %12 = load i8, i8* %type, align 1
  %conv5 = zext i8 %12 to i32
  switch i32 %conv5, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb.18
    i32 4, label %sw.bb.33
    i32 13, label %sw.bb.38
    i32 6, label %sw.bb.43
    i32 7, label %sw.bb.46
    i32 8, label %sw.bb.56
    i32 5, label %sw.bb.70
    i32 15, label %sw.bb.75
    i32 16, label %sw.bb.96
    i32 14, label %sw.bb.105
    i32 33, label %sw.bb.131
    i32 35, label %sw.bb.255
    i32 34, label %sw.bb.256
    i32 17, label %sw.bb.385
    i32 19, label %sw.bb.507
    i32 18, label %sw.bb.509
    i32 21, label %sw.bb.610
    i32 20, label %sw.bb.612
    i32 10, label %sw.bb.717
    i32 12, label %sw.bb.717
    i32 9, label %sw.bb.719
    i32 11, label %sw.bb.719
    i32 23, label %sw.bb.929
    i32 22, label %sw.bb.931
    i32 25, label %sw.bb.1060
    i32 24, label %sw.bb.1062
    i32 27, label %sw.bb.1153
    i32 26, label %sw.bb.1155
    i32 29, label %sw.bb.1234
    i32 28, label %sw.bb.1236
    i32 30, label %sw.bb.1318
    i32 49, label %sw.bb.1361
    i32 47, label %sw.bb.1363
    i32 48, label %sw.bb.1363
    i32 36, label %sw.bb.1484
    i32 37, label %sw.bb.1484
    i32 32, label %sw.bb.1485
    i32 57, label %sw.bb.1486
    i32 45, label %sw.bb.1695
    i32 46, label %sw.bb.1703
    i32 54, label %sw.bb.1723
    i32 53, label %sw.bb.1734
    i32 59, label %sw.bb.1752
    i32 43, label %sw.bb.1755
    i32 44, label %sw.bb.1793
    i32 56, label %sw.bb.2283
    i32 31, label %sw.bb.2293
    i32 58, label %sw.bb.2317
    i32 42, label %sw.bb.2318
    i32 41, label %sw.bb.2980
    i32 40, label %sw.bb.2998
    i32 38, label %sw.bb.3005
    i32 39, label %sw.bb.3007
    i32 0, label %sw.bb.4101
    i32 1, label %sw.bb.4132
    i32 52, label %sw.bb.4133
    i32 51, label %sw.bb.4134
    i32 50, label %sw.bb.4169
    i32 55, label %sw.bb.4224
  ]

sw.bb:                                            ; preds = %if.end
  %13 = load i8*, i8** %locinput, align 8
  %14 = load i8*, i8** @PL_bostr, align 8
  %cmp6 = icmp eq i8* %13, %14
  br i1 %cmp6, label %if.then.16, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb
  %15 = load i32, i32* @PL_multiline, align 4
  %tobool = icmp ne i32 %15, 0
  br i1 %tobool, label %land.lhs.true, label %if.end.17

land.lhs.true:                                    ; preds = %lor.lhs.false
  %16 = load i32, i32* %nextchr, align 4
  %tobool8 = icmp ne i32 %16, 0
  br i1 %tobool8, label %land.lhs.true.12, label %lor.lhs.false.9

lor.lhs.false.9:                                  ; preds = %land.lhs.true
  %17 = load i8*, i8** %locinput, align 8
  %18 = load i8*, i8** @PL_regeol, align 8
  %cmp10 = icmp ult i8* %17, %18
  br i1 %cmp10, label %land.lhs.true.12, label %if.end.17

land.lhs.true.12:                                 ; preds = %lor.lhs.false.9, %land.lhs.true
  %19 = load i8*, i8** %locinput, align 8
  %arrayidx = getelementptr inbounds i8, i8* %19, i64 -1
  %20 = load i8, i8* %arrayidx, align 1
  %conv13 = sext i8 %20 to i32
  %cmp14 = icmp eq i32 %conv13, 10
  br i1 %cmp14, label %if.then.16, label %if.end.17

if.then.16:                                       ; preds = %land.lhs.true.12, %sw.bb
  br label %sw.epilog

if.end.17:                                        ; preds = %land.lhs.true.12, %lor.lhs.false.9, %lor.lhs.false
  br label %no

sw.bb.18:                                         ; preds = %if.end
  %21 = load i8*, i8** %locinput, align 8
  %22 = load i8*, i8** @PL_bostr, align 8
  %cmp19 = icmp eq i8* %21, %22
  br i1 %cmp19, label %if.then.31, label %lor.lhs.false.21

lor.lhs.false.21:                                 ; preds = %sw.bb.18
  %23 = load i32, i32* %nextchr, align 4
  %tobool22 = icmp ne i32 %23, 0
  br i1 %tobool22, label %land.lhs.true.26, label %lor.lhs.false.23

lor.lhs.false.23:                                 ; preds = %lor.lhs.false.21
  %24 = load i8*, i8** %locinput, align 8
  %25 = load i8*, i8** @PL_regeol, align 8
  %cmp24 = icmp ult i8* %24, %25
  br i1 %cmp24, label %land.lhs.true.26, label %if.end.32

land.lhs.true.26:                                 ; preds = %lor.lhs.false.23, %lor.lhs.false.21
  %26 = load i8*, i8** %locinput, align 8
  %arrayidx27 = getelementptr inbounds i8, i8* %26, i64 -1
  %27 = load i8, i8* %arrayidx27, align 1
  %conv28 = sext i8 %27 to i32
  %cmp29 = icmp eq i32 %conv28, 10
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %land.lhs.true.26, %sw.bb.18
  br label %sw.epilog

if.end.32:                                        ; preds = %land.lhs.true.26, %lor.lhs.false.23
  br label %no

sw.bb.33:                                         ; preds = %if.end
  %28 = load i8*, i8** %locinput, align 8
  %29 = load i8*, i8** @PL_bostr, align 8
  %cmp34 = icmp eq i8* %28, %29
  br i1 %cmp34, label %if.then.36, label %if.end.37

if.then.36:                                       ; preds = %sw.bb.33
  br label %sw.epilog

if.end.37:                                        ; preds = %sw.bb.33
  br label %no

sw.bb.38:                                         ; preds = %if.end
  %30 = load i8*, i8** %locinput, align 8
  %31 = load i8*, i8** @PL_reg_ganch, align 8
  %cmp39 = icmp eq i8* %30, %31
  br i1 %cmp39, label %if.then.41, label %if.end.42

if.then.41:                                       ; preds = %sw.bb.38
  br label %sw.epilog

if.end.42:                                        ; preds = %sw.bb.38
  br label %no

sw.bb.43:                                         ; preds = %if.end
  %32 = load i32, i32* @PL_multiline, align 4
  %tobool44 = icmp ne i32 %32, 0
  br i1 %tobool44, label %if.then.45, label %if.else

if.then.45:                                       ; preds = %sw.bb.43
  br label %meol

if.else:                                          ; preds = %sw.bb.43
  br label %seol

sw.bb.46:                                         ; preds = %if.end
  br label %meol

meol:                                             ; preds = %sw.bb.46, %if.then.45
  %33 = load i32, i32* %nextchr, align 4
  %tobool47 = icmp ne i32 %33, 0
  br i1 %tobool47, label %land.lhs.true.51, label %lor.lhs.false.48

lor.lhs.false.48:                                 ; preds = %meol
  %34 = load i8*, i8** %locinput, align 8
  %35 = load i8*, i8** @PL_regeol, align 8
  %cmp49 = icmp ult i8* %34, %35
  br i1 %cmp49, label %land.lhs.true.51, label %if.end.55

land.lhs.true.51:                                 ; preds = %lor.lhs.false.48, %meol
  %36 = load i32, i32* %nextchr, align 4
  %cmp52 = icmp ne i32 %36, 10
  br i1 %cmp52, label %if.then.54, label %if.end.55

if.then.54:                                       ; preds = %land.lhs.true.51
  br label %no

if.end.55:                                        ; preds = %land.lhs.true.51, %lor.lhs.false.48
  br label %sw.epilog

sw.bb.56:                                         ; preds = %if.end
  br label %seol

seol:                                             ; preds = %sw.bb.56, %if.else
  %37 = load i32, i32* %nextchr, align 4
  %tobool57 = icmp ne i32 %37, 0
  br i1 %tobool57, label %land.lhs.true.61, label %lor.lhs.false.58

lor.lhs.false.58:                                 ; preds = %seol
  %38 = load i8*, i8** %locinput, align 8
  %39 = load i8*, i8** @PL_regeol, align 8
  %cmp59 = icmp ult i8* %38, %39
  br i1 %cmp59, label %land.lhs.true.61, label %if.end.65

land.lhs.true.61:                                 ; preds = %lor.lhs.false.58, %seol
  %40 = load i32, i32* %nextchr, align 4
  %cmp62 = icmp ne i32 %40, 10
  br i1 %cmp62, label %if.then.64, label %if.end.65

if.then.64:                                       ; preds = %land.lhs.true.61
  br label %no

if.end.65:                                        ; preds = %land.lhs.true.61, %lor.lhs.false.58
  %41 = load i8*, i8** @PL_regeol, align 8
  %42 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %41 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %42 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp66 = icmp sgt i64 %sub.ptr.sub, 1
  br i1 %cmp66, label %if.then.68, label %if.end.69

if.then.68:                                       ; preds = %if.end.65
  br label %no

if.end.69:                                        ; preds = %if.end.65
  br label %sw.epilog

sw.bb.70:                                         ; preds = %if.end
  %43 = load i8*, i8** @PL_regeol, align 8
  %44 = load i8*, i8** %locinput, align 8
  %cmp71 = icmp ne i8* %43, %44
  br i1 %cmp71, label %if.then.73, label %if.end.74

if.then.73:                                       ; preds = %sw.bb.70
  br label %no

if.end.74:                                        ; preds = %sw.bb.70
  br label %sw.epilog

sw.bb.75:                                         ; preds = %if.end
  %45 = load i32, i32* %nextchr, align 4
  %tobool76 = icmp ne i32 %45, 0
  br i1 %tobool76, label %if.end.81, label %land.lhs.true.77

land.lhs.true.77:                                 ; preds = %sw.bb.75
  %46 = load i8*, i8** %locinput, align 8
  %47 = load i8*, i8** @PL_regeol, align 8
  %cmp78 = icmp uge i8* %46, %47
  br i1 %cmp78, label %if.then.80, label %if.end.81

if.then.80:                                       ; preds = %land.lhs.true.77
  br label %no

if.end.81:                                        ; preds = %land.lhs.true.77, %sw.bb.75
  %48 = load i8, i8* %do_utf8, align 1
  %tobool82 = icmp ne i8 %48, 0
  br i1 %tobool82, label %if.then.83, label %if.else.93

if.then.83:                                       ; preds = %if.end.81
  %49 = load i32, i32* %nextchr, align 4
  %idxprom = sext i32 %49 to i64
  %arrayidx84 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom
  %50 = load i8, i8* %arrayidx84, align 1
  %conv85 = zext i8 %50 to i32
  %51 = load i8*, i8** %locinput, align 8
  %idx.ext86 = sext i32 %conv85 to i64
  %add.ptr87 = getelementptr inbounds i8, i8* %51, i64 %idx.ext86
  store i8* %add.ptr87, i8** %locinput, align 8
  %52 = load i8*, i8** %locinput, align 8
  %53 = load i8*, i8** @PL_regeol, align 8
  %cmp88 = icmp ugt i8* %52, %53
  br i1 %cmp88, label %if.then.90, label %if.end.91

if.then.90:                                       ; preds = %if.then.83
  br label %no

if.end.91:                                        ; preds = %if.then.83
  %54 = load i8*, i8** %locinput, align 8
  %55 = load i8, i8* %54, align 1
  %conv92 = zext i8 %55 to i32
  store i32 %conv92, i32* %nextchr, align 4
  br label %if.end.95

if.else.93:                                       ; preds = %if.end.81
  %56 = load i8*, i8** %locinput, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %56, i32 1
  store i8* %incdec.ptr, i8** %locinput, align 8
  %57 = load i8, i8* %incdec.ptr, align 1
  %conv94 = zext i8 %57 to i32
  store i32 %conv94, i32* %nextchr, align 4
  br label %if.end.95

if.end.95:                                        ; preds = %if.else.93, %if.end.91
  br label %sw.epilog

sw.bb.96:                                         ; preds = %if.end
  %58 = load i32, i32* %nextchr, align 4
  %tobool97 = icmp ne i32 %58, 0
  br i1 %tobool97, label %if.end.102, label %land.lhs.true.98

land.lhs.true.98:                                 ; preds = %sw.bb.96
  %59 = load i8*, i8** %locinput, align 8
  %60 = load i8*, i8** @PL_regeol, align 8
  %cmp99 = icmp uge i8* %59, %60
  br i1 %cmp99, label %if.then.101, label %if.end.102

if.then.101:                                      ; preds = %land.lhs.true.98
  br label %no

if.end.102:                                       ; preds = %land.lhs.true.98, %sw.bb.96
  %61 = load i8*, i8** %locinput, align 8
  %incdec.ptr103 = getelementptr inbounds i8, i8* %61, i32 1
  store i8* %incdec.ptr103, i8** %locinput, align 8
  %62 = load i8, i8* %incdec.ptr103, align 1
  %conv104 = zext i8 %62 to i32
  store i32 %conv104, i32* %nextchr, align 4
  br label %sw.epilog

sw.bb.105:                                        ; preds = %if.end
  %63 = load i32, i32* %nextchr, align 4
  %tobool106 = icmp ne i32 %63, 0
  br i1 %tobool106, label %lor.lhs.false.110, label %land.lhs.true.107

land.lhs.true.107:                                ; preds = %sw.bb.105
  %64 = load i8*, i8** %locinput, align 8
  %65 = load i8*, i8** @PL_regeol, align 8
  %cmp108 = icmp uge i8* %64, %65
  br i1 %cmp108, label %if.then.113, label %lor.lhs.false.110

lor.lhs.false.110:                                ; preds = %land.lhs.true.107, %sw.bb.105
  %66 = load i32, i32* %nextchr, align 4
  %cmp111 = icmp eq i32 %66, 10
  br i1 %cmp111, label %if.then.113, label %if.end.114

if.then.113:                                      ; preds = %lor.lhs.false.110, %land.lhs.true.107
  br label %no

if.end.114:                                       ; preds = %lor.lhs.false.110
  %67 = load i8, i8* %do_utf8, align 1
  %tobool115 = icmp ne i8 %67, 0
  br i1 %tobool115, label %if.then.116, label %if.else.127

if.then.116:                                      ; preds = %if.end.114
  %68 = load i32, i32* %nextchr, align 4
  %idxprom117 = sext i32 %68 to i64
  %arrayidx118 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom117
  %69 = load i8, i8* %arrayidx118, align 1
  %conv119 = zext i8 %69 to i32
  %70 = load i8*, i8** %locinput, align 8
  %idx.ext120 = sext i32 %conv119 to i64
  %add.ptr121 = getelementptr inbounds i8, i8* %70, i64 %idx.ext120
  store i8* %add.ptr121, i8** %locinput, align 8
  %71 = load i8*, i8** %locinput, align 8
  %72 = load i8*, i8** @PL_regeol, align 8
  %cmp122 = icmp ugt i8* %71, %72
  br i1 %cmp122, label %if.then.124, label %if.end.125

if.then.124:                                      ; preds = %if.then.116
  br label %no

if.end.125:                                       ; preds = %if.then.116
  %73 = load i8*, i8** %locinput, align 8
  %74 = load i8, i8* %73, align 1
  %conv126 = zext i8 %74 to i32
  store i32 %conv126, i32* %nextchr, align 4
  br label %if.end.130

if.else.127:                                      ; preds = %if.end.114
  %75 = load i8*, i8** %locinput, align 8
  %incdec.ptr128 = getelementptr inbounds i8, i8* %75, i32 1
  store i8* %incdec.ptr128, i8** %locinput, align 8
  %76 = load i8, i8* %incdec.ptr128, align 1
  %conv129 = zext i8 %76 to i32
  store i32 %conv129, i32* %nextchr, align 4
  br label %if.end.130

if.end.130:                                       ; preds = %if.else.127, %if.end.125
  br label %sw.epilog

sw.bb.131:                                        ; preds = %if.end
  %77 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %78 = bitcast %struct.regnode* %77 to %struct.regnode_string*
  %string = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %78, i32 0, i32 3
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %string, i32 0, i32 0
  store i8* %arraydecay, i8** %s, align 8
  %79 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %80 = bitcast %struct.regnode* %79 to %struct.regnode_string*
  %str_len = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %80, i32 0, i32 0
  %81 = load i8, i8* %str_len, align 1
  %conv132 = zext i8 %81 to i32
  store i32 %conv132, i32* %ln, align 4
  %82 = load i8, i8* %do_utf8, align 1
  %conv133 = sext i8 %82 to i32
  %83 = load i32, i32* @PL_reg_flags, align 4
  %and = and i32 %83, 8
  %cmp134 = icmp ne i32 %and, 0
  %conv135 = zext i1 %cmp134 to i32
  %cmp136 = icmp ne i32 %conv133, %conv135
  br i1 %cmp136, label %if.then.138, label %if.end.230

if.then.138:                                      ; preds = %sw.bb.131
  %84 = load i8*, i8** %locinput, align 8
  store i8* %84, i8** %l, align 8
  %85 = load i8*, i8** %s, align 8
  %86 = load i32, i32* %ln, align 4
  %idx.ext139 = sext i32 %86 to i64
  %add.ptr140 = getelementptr inbounds i8, i8* %85, i64 %idx.ext139
  store i8* %add.ptr140, i8** %e, align 8
  %87 = load i8, i8* %do_utf8, align 1
  %tobool141 = icmp ne i8 %87, 0
  br i1 %tobool141, label %if.then.142, label %if.else.180

if.then.142:                                      ; preds = %if.then.138
  br label %while.cond.143

while.cond.143:                                   ; preds = %if.end.177, %if.then.142
  %88 = load i8*, i8** %s, align 8
  %89 = load i8*, i8** %e, align 8
  %cmp144 = icmp ult i8* %88, %89
  br i1 %cmp144, label %while.body.146, label %while.end

while.body.146:                                   ; preds = %while.cond.143
  %90 = load i8*, i8** %l, align 8
  %91 = load i8*, i8** @PL_regeol, align 8
  %cmp147 = icmp uge i8* %90, %91
  br i1 %cmp147, label %if.then.149, label %if.end.150

if.then.149:                                      ; preds = %while.body.146
  br label %no

if.end.150:                                       ; preds = %while.body.146
  %92 = load i8*, i8** %s, align 8
  %93 = load i8, i8* %92, align 1
  %conv151 = zext i8 %93 to i64
  %94 = load i8*, i8** %l, align 8
  %95 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings = getelementptr inbounds %struct.cop, %struct.cop* %95, i32 0, i32 14
  %96 = load %struct.sv*, %struct.sv** %cop_warnings, align 8
  %cmp152 = icmp ne %struct.sv* %96, null
  br i1 %cmp152, label %land.lhs.true.154, label %lor.rhs

land.lhs.true.154:                                ; preds = %if.end.150
  %97 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings155 = getelementptr inbounds %struct.cop, %struct.cop* %97, i32 0, i32 14
  %98 = load %struct.sv*, %struct.sv** %cop_warnings155, align 8
  %cmp156 = icmp ne %struct.sv* %98, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp156, label %land.lhs.true.158, label %lor.rhs

land.lhs.true.158:                                ; preds = %land.lhs.true.154
  %99 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings159 = getelementptr inbounds %struct.cop, %struct.cop* %99, i32 0, i32 14
  %100 = load %struct.sv*, %struct.sv** %cop_warnings159, align 8
  %cmp160 = icmp eq %struct.sv* %100, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp160, label %lor.end, label %lor.lhs.false.162

lor.lhs.false.162:                                ; preds = %land.lhs.true.158
  %101 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings163 = getelementptr inbounds %struct.cop, %struct.cop* %101, i32 0, i32 14
  %102 = load %struct.sv*, %struct.sv** %cop_warnings163, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %102, i32 0, i32 0
  %103 = load i8*, i8** %sv_any, align 8
  %104 = bitcast i8* %103 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %104, i32 0, i32 0
  %105 = load i8*, i8** %xpv_pv, align 8
  %arrayidx164 = getelementptr inbounds i8, i8* %105, i64 11
  %106 = load i8, i8* %arrayidx164, align 1
  %conv165 = sext i8 %106 to i32
  %and166 = and i32 %conv165, 1
  %tobool167 = icmp ne i32 %and166, 0
  br i1 %tobool167, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.162, %land.lhs.true.154, %if.end.150
  %107 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings168 = getelementptr inbounds %struct.cop, %struct.cop* %107, i32 0, i32 14
  %108 = load %struct.sv*, %struct.sv** %cop_warnings168, align 8
  %cmp169 = icmp eq %struct.sv* %108, null
  br i1 %cmp169, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs
  %109 = load i8, i8* @PL_dowarn, align 1
  %conv171 = zext i8 %109 to i32
  %and172 = and i32 %conv171, 1
  %tobool173 = icmp ne i32 %and172, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %110 = phi i1 [ false, %lor.rhs ], [ %tobool173, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %lor.lhs.false.162, %land.lhs.true.158
  %111 = phi i1 [ true, %lor.lhs.false.162 ], [ true, %land.lhs.true.158 ], [ %110, %land.end ]
  %cond = select i1 %111, i32 0, i32 255
  %call = call i64 @Perl_utf8n_to_uvuni(i8* %94, i64 13, i64* %ulen, i32 %cond)
  %cmp174 = icmp ne i64 %conv151, %call
  br i1 %cmp174, label %if.then.176, label %if.end.177

if.then.176:                                      ; preds = %lor.end
  br label %no

if.end.177:                                       ; preds = %lor.end
  %112 = load i64, i64* %ulen, align 8
  %113 = load i8*, i8** %l, align 8
  %add.ptr178 = getelementptr inbounds i8, i8* %113, i64 %112
  store i8* %add.ptr178, i8** %l, align 8
  %114 = load i8*, i8** %s, align 8
  %incdec.ptr179 = getelementptr inbounds i8, i8* %114, i32 1
  store i8* %incdec.ptr179, i8** %s, align 8
  br label %while.cond.143

while.end:                                        ; preds = %while.cond.143
  br label %if.end.228

if.else.180:                                      ; preds = %if.then.138
  br label %while.cond.181

while.cond.181:                                   ; preds = %if.end.224, %if.else.180
  %115 = load i8*, i8** %s, align 8
  %116 = load i8*, i8** %e, align 8
  %cmp182 = icmp ult i8* %115, %116
  br i1 %cmp182, label %while.body.184, label %while.end.227

while.body.184:                                   ; preds = %while.cond.181
  %117 = load i8*, i8** %l, align 8
  %118 = load i8*, i8** @PL_regeol, align 8
  %cmp185 = icmp uge i8* %117, %118
  br i1 %cmp185, label %if.then.187, label %if.end.188

if.then.187:                                      ; preds = %while.body.184
  br label %no

if.end.188:                                       ; preds = %while.body.184
  %119 = load i8*, i8** %l, align 8
  %120 = load i8, i8* %119, align 1
  %conv189 = zext i8 %120 to i64
  %121 = load i8*, i8** %s, align 8
  %122 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings190 = getelementptr inbounds %struct.cop, %struct.cop* %122, i32 0, i32 14
  %123 = load %struct.sv*, %struct.sv** %cop_warnings190, align 8
  %cmp191 = icmp ne %struct.sv* %123, null
  br i1 %cmp191, label %land.lhs.true.193, label %lor.rhs.209

land.lhs.true.193:                                ; preds = %if.end.188
  %124 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings194 = getelementptr inbounds %struct.cop, %struct.cop* %124, i32 0, i32 14
  %125 = load %struct.sv*, %struct.sv** %cop_warnings194, align 8
  %cmp195 = icmp ne %struct.sv* %125, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp195, label %land.lhs.true.197, label %lor.rhs.209

land.lhs.true.197:                                ; preds = %land.lhs.true.193
  %126 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings198 = getelementptr inbounds %struct.cop, %struct.cop* %126, i32 0, i32 14
  %127 = load %struct.sv*, %struct.sv** %cop_warnings198, align 8
  %cmp199 = icmp eq %struct.sv* %127, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp199, label %lor.end.218, label %lor.lhs.false.201

lor.lhs.false.201:                                ; preds = %land.lhs.true.197
  %128 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings202 = getelementptr inbounds %struct.cop, %struct.cop* %128, i32 0, i32 14
  %129 = load %struct.sv*, %struct.sv** %cop_warnings202, align 8
  %sv_any203 = getelementptr inbounds %struct.sv, %struct.sv* %129, i32 0, i32 0
  %130 = load i8*, i8** %sv_any203, align 8
  %131 = bitcast i8* %130 to %struct.xpv*
  %xpv_pv204 = getelementptr inbounds %struct.xpv, %struct.xpv* %131, i32 0, i32 0
  %132 = load i8*, i8** %xpv_pv204, align 8
  %arrayidx205 = getelementptr inbounds i8, i8* %132, i64 11
  %133 = load i8, i8* %arrayidx205, align 1
  %conv206 = sext i8 %133 to i32
  %and207 = and i32 %conv206, 1
  %tobool208 = icmp ne i32 %and207, 0
  br i1 %tobool208, label %lor.end.218, label %lor.rhs.209

lor.rhs.209:                                      ; preds = %lor.lhs.false.201, %land.lhs.true.193, %if.end.188
  %134 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings210 = getelementptr inbounds %struct.cop, %struct.cop* %134, i32 0, i32 14
  %135 = load %struct.sv*, %struct.sv** %cop_warnings210, align 8
  %cmp211 = icmp eq %struct.sv* %135, null
  br i1 %cmp211, label %land.rhs.213, label %land.end.217

land.rhs.213:                                     ; preds = %lor.rhs.209
  %136 = load i8, i8* @PL_dowarn, align 1
  %conv214 = zext i8 %136 to i32
  %and215 = and i32 %conv214, 1
  %tobool216 = icmp ne i32 %and215, 0
  br label %land.end.217

land.end.217:                                     ; preds = %land.rhs.213, %lor.rhs.209
  %137 = phi i1 [ false, %lor.rhs.209 ], [ %tobool216, %land.rhs.213 ]
  br label %lor.end.218

lor.end.218:                                      ; preds = %land.end.217, %lor.lhs.false.201, %land.lhs.true.197
  %138 = phi i1 [ true, %lor.lhs.false.201 ], [ true, %land.lhs.true.197 ], [ %137, %land.end.217 ]
  %cond219 = select i1 %138, i32 0, i32 255
  %call220 = call i64 @Perl_utf8n_to_uvuni(i8* %121, i64 13, i64* %ulen, i32 %cond219)
  %cmp221 = icmp ne i64 %conv189, %call220
  br i1 %cmp221, label %if.then.223, label %if.end.224

if.then.223:                                      ; preds = %lor.end.218
  br label %no

if.end.224:                                       ; preds = %lor.end.218
  %139 = load i64, i64* %ulen, align 8
  %140 = load i8*, i8** %s, align 8
  %add.ptr225 = getelementptr inbounds i8, i8* %140, i64 %139
  store i8* %add.ptr225, i8** %s, align 8
  %141 = load i8*, i8** %l, align 8
  %incdec.ptr226 = getelementptr inbounds i8, i8* %141, i32 1
  store i8* %incdec.ptr226, i8** %l, align 8
  br label %while.cond.181

while.end.227:                                    ; preds = %while.cond.181
  br label %if.end.228

if.end.228:                                       ; preds = %while.end.227, %while.end
  %142 = load i8*, i8** %l, align 8
  store i8* %142, i8** %locinput, align 8
  %143 = load i8*, i8** %locinput, align 8
  %144 = load i8, i8* %143, align 1
  %conv229 = zext i8 %144 to i32
  store i32 %conv229, i32* %nextchr, align 4
  br label %sw.epilog

if.end.230:                                       ; preds = %sw.bb.131
  %145 = load i8*, i8** %s, align 8
  %146 = load i8, i8* %145, align 1
  %conv231 = zext i8 %146 to i32
  %147 = load i32, i32* %nextchr, align 4
  %cmp232 = icmp ne i32 %conv231, %147
  br i1 %cmp232, label %if.then.234, label %if.end.235

if.then.234:                                      ; preds = %if.end.230
  br label %no

if.end.235:                                       ; preds = %if.end.230
  %148 = load i8*, i8** @PL_regeol, align 8
  %149 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast236 = ptrtoint i8* %148 to i64
  %sub.ptr.rhs.cast237 = ptrtoint i8* %149 to i64
  %sub.ptr.sub238 = sub i64 %sub.ptr.lhs.cast236, %sub.ptr.rhs.cast237
  %150 = load i32, i32* %ln, align 4
  %conv239 = sext i32 %150 to i64
  %cmp240 = icmp slt i64 %sub.ptr.sub238, %conv239
  br i1 %cmp240, label %if.then.242, label %if.end.243

if.then.242:                                      ; preds = %if.end.235
  br label %no

if.end.243:                                       ; preds = %if.end.235
  %151 = load i32, i32* %ln, align 4
  %cmp244 = icmp sgt i32 %151, 1
  br i1 %cmp244, label %land.lhs.true.246, label %if.end.251

land.lhs.true.246:                                ; preds = %if.end.243
  %152 = load i8*, i8** %s, align 8
  %153 = load i8*, i8** %locinput, align 8
  %154 = load i32, i32* %ln, align 4
  %conv247 = sext i32 %154 to i64
  %call248 = call i32 @memcmp(i8* %152, i8* %153, i64 %conv247)
  %tobool249 = icmp ne i32 %call248, 0
  br i1 %tobool249, label %if.then.250, label %if.end.251

if.then.250:                                      ; preds = %land.lhs.true.246
  br label %no

if.end.251:                                       ; preds = %land.lhs.true.246, %if.end.243
  %155 = load i32, i32* %ln, align 4
  %156 = load i8*, i8** %locinput, align 8
  %idx.ext252 = sext i32 %155 to i64
  %add.ptr253 = getelementptr inbounds i8, i8* %156, i64 %idx.ext252
  store i8* %add.ptr253, i8** %locinput, align 8
  %157 = load i8*, i8** %locinput, align 8
  %158 = load i8, i8* %157, align 1
  %conv254 = zext i8 %158 to i32
  store i32 %conv254, i32* %nextchr, align 4
  br label %sw.epilog

sw.bb.255:                                        ; preds = %if.end
  %159 = load i32, i32* @PL_reg_flags, align 4
  %or = or i32 %159, 1
  store i32 %or, i32* @PL_reg_flags, align 4
  br label %sw.bb.256

sw.bb.256:                                        ; preds = %if.end, %sw.bb.255
  %160 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %161 = bitcast %struct.regnode* %160 to %struct.regnode_string*
  %string257 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %161, i32 0, i32 3
  %arraydecay258 = getelementptr inbounds [1 x i8], [1 x i8]* %string257, i32 0, i32 0
  store i8* %arraydecay258, i8** %s, align 8
  %162 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %163 = bitcast %struct.regnode* %162 to %struct.regnode_string*
  %str_len259 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %163, i32 0, i32 0
  %164 = load i8, i8* %str_len259, align 1
  %conv260 = zext i8 %164 to i32
  store i32 %conv260, i32* %ln, align 4
  %165 = load i8, i8* %do_utf8, align 1
  %conv261 = sext i8 %165 to i32
  %tobool262 = icmp ne i32 %conv261, 0
  br i1 %tobool262, label %if.then.267, label %lor.lhs.false.263

lor.lhs.false.263:                                ; preds = %sw.bb.256
  %166 = load i32, i32* @PL_reg_flags, align 4
  %and264 = and i32 %166, 8
  %cmp265 = icmp ne i32 %and264, 0
  br i1 %cmp265, label %if.then.267, label %if.end.341

if.then.267:                                      ; preds = %lor.lhs.false.263, %sw.bb.256
  %167 = load i8*, i8** %locinput, align 8
  store i8* %167, i8** %l268, align 8
  %168 = load i8*, i8** @PL_regeol, align 8
  store i8* %168, i8** %e269, align 8
  %169 = load i8*, i8** %s, align 8
  %170 = load i32, i32* %ln, align 4
  %conv270 = sext i32 %170 to i64
  %171 = load i32, i32* @PL_reg_flags, align 4
  %and271 = and i32 %171, 8
  %cmp272 = icmp ne i32 %and271, 0
  %conv273 = zext i1 %cmp272 to i32
  %conv274 = trunc i32 %conv273 to i8
  %172 = load i8*, i8** %l268, align 8
  %173 = load i8, i8* %do_utf8, align 1
  %call275 = call i32 @Perl_ibcmp_utf8(i8* %169, i8** null, i64 %conv270, i8 signext %conv274, i8* %172, i8** %e269, i64 0, i8 signext %173)
  %tobool276 = icmp ne i32 %call275, 0
  br i1 %tobool276, label %if.then.277, label %if.end.339

if.then.277:                                      ; preds = %if.then.267
  %174 = load i8, i8* %do_utf8, align 1
  %conv278 = sext i8 %174 to i32
  %tobool279 = icmp ne i32 %conv278, 0
  br i1 %tobool279, label %land.lhs.true.280, label %if.then.337

land.lhs.true.280:                                ; preds = %if.then.277
  %175 = load i8*, i8** %s, align 8
  %arrayidx281 = getelementptr inbounds i8, i8* %175, i64 0
  %176 = load i8, i8* %arrayidx281, align 1
  %conv282 = sext i8 %176 to i32
  %cmp283 = icmp sge i32 %conv282, 65
  br i1 %cmp283, label %land.lhs.true.285, label %cond.false

land.lhs.true.285:                                ; preds = %land.lhs.true.280
  %177 = load i8*, i8** %s, align 8
  %arrayidx286 = getelementptr inbounds i8, i8* %177, i64 0
  %178 = load i8, i8* %arrayidx286, align 1
  %conv287 = sext i8 %178 to i32
  %cmp288 = icmp sle i32 %conv287, 90
  br i1 %cmp288, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.285
  %179 = load i8*, i8** %s, align 8
  %arrayidx290 = getelementptr inbounds i8, i8* %179, i64 0
  %180 = load i8, i8* %arrayidx290, align 1
  %conv291 = sext i8 %180 to i32
  %add = add nsw i32 %conv291, 32
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.285, %land.lhs.true.280
  %181 = load i8*, i8** %s, align 8
  %arrayidx292 = getelementptr inbounds i8, i8* %181, i64 0
  %182 = load i8, i8* %arrayidx292, align 1
  %conv293 = sext i8 %182 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond294 = phi i32 [ %add, %cond.true ], [ %conv293, %cond.false ]
  %cmp295 = icmp eq i32 %cond294, 115
  br i1 %cmp295, label %land.lhs.true.297, label %if.then.337

land.lhs.true.297:                                ; preds = %cond.end
  %183 = load i32, i32* %ln, align 4
  %cmp298 = icmp sge i32 %183, 2
  br i1 %cmp298, label %land.lhs.true.300, label %if.then.337

land.lhs.true.300:                                ; preds = %land.lhs.true.297
  %184 = load i8*, i8** %s, align 8
  %arrayidx301 = getelementptr inbounds i8, i8* %184, i64 1
  %185 = load i8, i8* %arrayidx301, align 1
  %conv302 = sext i8 %185 to i32
  %cmp303 = icmp sge i32 %conv302, 65
  br i1 %cmp303, label %land.lhs.true.305, label %cond.false.314

land.lhs.true.305:                                ; preds = %land.lhs.true.300
  %186 = load i8*, i8** %s, align 8
  %arrayidx306 = getelementptr inbounds i8, i8* %186, i64 1
  %187 = load i8, i8* %arrayidx306, align 1
  %conv307 = sext i8 %187 to i32
  %cmp308 = icmp sle i32 %conv307, 90
  br i1 %cmp308, label %cond.true.310, label %cond.false.314

cond.true.310:                                    ; preds = %land.lhs.true.305
  %188 = load i8*, i8** %s, align 8
  %arrayidx311 = getelementptr inbounds i8, i8* %188, i64 1
  %189 = load i8, i8* %arrayidx311, align 1
  %conv312 = sext i8 %189 to i32
  %add313 = add nsw i32 %conv312, 32
  br label %cond.end.317

cond.false.314:                                   ; preds = %land.lhs.true.305, %land.lhs.true.300
  %190 = load i8*, i8** %s, align 8
  %arrayidx315 = getelementptr inbounds i8, i8* %190, i64 1
  %191 = load i8, i8* %arrayidx315, align 1
  %conv316 = sext i8 %191 to i32
  br label %cond.end.317

cond.end.317:                                     ; preds = %cond.false.314, %cond.true.310
  %cond318 = phi i32 [ %add313, %cond.true.310 ], [ %conv316, %cond.false.314 ]
  %cmp319 = icmp eq i32 %cond318, 115
  br i1 %cmp319, label %land.lhs.true.321, label %if.then.337

land.lhs.true.321:                                ; preds = %cond.end.317
  %192 = load i8*, i8** %l268, align 8
  %arrayidx322 = getelementptr inbounds i8, i8* %192, i64 0
  %193 = load i8, i8* %arrayidx322, align 1
  %conv323 = zext i8 %193 to i32
  %cmp324 = icmp eq i32 %conv323, 195
  br i1 %cmp324, label %land.lhs.true.326, label %if.then.337

land.lhs.true.326:                                ; preds = %land.lhs.true.321
  %194 = load i8*, i8** %e269, align 8
  %195 = load i8*, i8** %l268, align 8
  %sub.ptr.lhs.cast327 = ptrtoint i8* %194 to i64
  %sub.ptr.rhs.cast328 = ptrtoint i8* %195 to i64
  %sub.ptr.sub329 = sub i64 %sub.ptr.lhs.cast327, %sub.ptr.rhs.cast328
  %cmp330 = icmp sge i64 %sub.ptr.sub329, 2
  br i1 %cmp330, label %land.lhs.true.332, label %if.then.337

land.lhs.true.332:                                ; preds = %land.lhs.true.326
  %196 = load i8*, i8** %l268, align 8
  %arrayidx333 = getelementptr inbounds i8, i8* %196, i64 1
  %197 = load i8, i8* %arrayidx333, align 1
  %conv334 = zext i8 %197 to i32
  %cmp335 = icmp eq i32 %conv334, 159
  br i1 %cmp335, label %if.end.338, label %if.then.337

if.then.337:                                      ; preds = %land.lhs.true.332, %land.lhs.true.326, %land.lhs.true.321, %cond.end.317, %land.lhs.true.297, %cond.end, %if.then.277
  br label %no

if.end.338:                                       ; preds = %land.lhs.true.332
  br label %if.end.339

if.end.339:                                       ; preds = %if.end.338, %if.then.267
  %198 = load i8*, i8** %e269, align 8
  store i8* %198, i8** %locinput, align 8
  %199 = load i8*, i8** %locinput, align 8
  %200 = load i8, i8* %199, align 1
  %conv340 = zext i8 %200 to i32
  store i32 %conv340, i32* %nextchr, align 4
  br label %sw.epilog

if.end.341:                                       ; preds = %lor.lhs.false.263
  %201 = load i8*, i8** %s, align 8
  %202 = load i8, i8* %201, align 1
  %conv342 = zext i8 %202 to i32
  %203 = load i32, i32* %nextchr, align 4
  %cmp343 = icmp ne i32 %conv342, %203
  br i1 %cmp343, label %land.lhs.true.345, label %if.end.358

land.lhs.true.345:                                ; preds = %if.end.341
  %204 = load i8*, i8** %s, align 8
  %205 = load i8, i8* %204, align 1
  %conv346 = zext i8 %205 to i32
  %206 = load i32, i32* %nextchr, align 4
  %idxprom347 = sext i32 %206 to i64
  %207 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type348 = getelementptr inbounds %struct.regnode, %struct.regnode* %207, i32 0, i32 1
  %208 = load i8, i8* %type348, align 1
  %conv349 = zext i8 %208 to i32
  %cmp350 = icmp eq i32 %conv349, 34
  %cond352 = select i1 %cmp350, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_locale, i32 0, i32 0)
  %arrayidx353 = getelementptr inbounds i8, i8* %cond352, i64 %idxprom347
  %209 = load i8, i8* %arrayidx353, align 1
  %conv354 = zext i8 %209 to i32
  %cmp355 = icmp ne i32 %conv346, %conv354
  br i1 %cmp355, label %if.then.357, label %if.end.358

if.then.357:                                      ; preds = %land.lhs.true.345
  br label %no

if.end.358:                                       ; preds = %land.lhs.true.345, %if.end.341
  %210 = load i8*, i8** @PL_regeol, align 8
  %211 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast359 = ptrtoint i8* %210 to i64
  %sub.ptr.rhs.cast360 = ptrtoint i8* %211 to i64
  %sub.ptr.sub361 = sub i64 %sub.ptr.lhs.cast359, %sub.ptr.rhs.cast360
  %212 = load i32, i32* %ln, align 4
  %conv362 = sext i32 %212 to i64
  %cmp363 = icmp slt i64 %sub.ptr.sub361, %conv362
  br i1 %cmp363, label %if.then.365, label %if.end.366

if.then.365:                                      ; preds = %if.end.358
  br label %no

if.end.366:                                       ; preds = %if.end.358
  %213 = load i32, i32* %ln, align 4
  %cmp367 = icmp sgt i32 %213, 1
  br i1 %cmp367, label %land.lhs.true.369, label %if.end.381

land.lhs.true.369:                                ; preds = %if.end.366
  %214 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type370 = getelementptr inbounds %struct.regnode, %struct.regnode* %214, i32 0, i32 1
  %215 = load i8, i8* %type370, align 1
  %conv371 = zext i8 %215 to i32
  %cmp372 = icmp eq i32 %conv371, 34
  br i1 %cmp372, label %cond.true.374, label %cond.false.377

cond.true.374:                                    ; preds = %land.lhs.true.369
  %216 = load i8*, i8** %s, align 8
  %217 = load i8*, i8** %locinput, align 8
  %218 = load i32, i32* %ln, align 4
  %call375 = call i32 @Perl_ibcmp(i8* %216, i8* %217, i32 %218)
  %tobool376 = icmp ne i32 %call375, 0
  br i1 %tobool376, label %if.then.380, label %if.end.381

cond.false.377:                                   ; preds = %land.lhs.true.369
  %219 = load i8*, i8** %s, align 8
  %220 = load i8*, i8** %locinput, align 8
  %221 = load i32, i32* %ln, align 4
  %call378 = call i32 @Perl_ibcmp_locale(i8* %219, i8* %220, i32 %221)
  %tobool379 = icmp ne i32 %call378, 0
  br i1 %tobool379, label %if.then.380, label %if.end.381

if.then.380:                                      ; preds = %cond.false.377, %cond.true.374
  br label %no

if.end.381:                                       ; preds = %cond.false.377, %cond.true.374, %if.end.366
  %222 = load i32, i32* %ln, align 4
  %223 = load i8*, i8** %locinput, align 8
  %idx.ext382 = sext i32 %222 to i64
  %add.ptr383 = getelementptr inbounds i8, i8* %223, i64 %idx.ext382
  store i8* %add.ptr383, i8** %locinput, align 8
  %224 = load i8*, i8** %locinput, align 8
  %225 = load i8, i8* %224, align 1
  %conv384 = zext i8 %225 to i32
  store i32 %conv384, i32* %nextchr, align 4
  br label %sw.epilog

sw.bb.385:                                        ; preds = %if.end
  %226 = load i8, i8* %do_utf8, align 1
  %tobool386 = icmp ne i8 %226, 0
  br i1 %tobool386, label %if.then.387, label %if.else.409

if.then.387:                                      ; preds = %sw.bb.385
  %227 = load i8*, i8** @PL_regeol, align 8
  %228 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast388 = ptrtoint i8* %227 to i64
  %sub.ptr.rhs.cast389 = ptrtoint i8* %228 to i64
  %sub.ptr.sub390 = sub i64 %sub.ptr.lhs.cast388, %sub.ptr.rhs.cast389
  store i64 %sub.ptr.sub390, i64* %inclasslen, align 8
  %229 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %230 = load i8*, i8** %locinput, align 8
  %231 = load i8, i8* %do_utf8, align 1
  %call391 = call signext i8 @S_reginclass(%struct.regnode* %229, i8* %230, i64* %inclasslen, i8 signext %231)
  %tobool392 = icmp ne i8 %call391, 0
  br i1 %tobool392, label %if.end.394, label %if.then.393

if.then.393:                                      ; preds = %if.then.387
  br label %no_anyof

if.end.394:                                       ; preds = %if.then.387
  %232 = load i8*, i8** %locinput, align 8
  %233 = load i8*, i8** @PL_regeol, align 8
  %cmp395 = icmp uge i8* %232, %233
  br i1 %cmp395, label %if.then.397, label %if.end.398

if.then.397:                                      ; preds = %if.end.394
  br label %no

if.end.398:                                       ; preds = %if.end.394
  %234 = load i64, i64* %inclasslen, align 8
  %tobool399 = icmp ne i64 %234, 0
  br i1 %tobool399, label %cond.true.400, label %cond.false.401

cond.true.400:                                    ; preds = %if.end.398
  %235 = load i64, i64* %inclasslen, align 8
  br label %cond.end.405

cond.false.401:                                   ; preds = %if.end.398
  %236 = load i8*, i8** %locinput, align 8
  %237 = load i8, i8* %236, align 1
  %idxprom402 = zext i8 %237 to i64
  %arrayidx403 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom402
  %238 = load i8, i8* %arrayidx403, align 1
  %conv404 = zext i8 %238 to i64
  br label %cond.end.405

cond.end.405:                                     ; preds = %cond.false.401, %cond.true.400
  %cond406 = phi i64 [ %235, %cond.true.400 ], [ %conv404, %cond.false.401 ]
  %239 = load i8*, i8** %locinput, align 8
  %add.ptr407 = getelementptr inbounds i8, i8* %239, i64 %cond406
  store i8* %add.ptr407, i8** %locinput, align 8
  %240 = load i8*, i8** %locinput, align 8
  %241 = load i8, i8* %240, align 1
  %conv408 = zext i8 %241 to i32
  store i32 %conv408, i32* %nextchr, align 4
  br label %sw.epilog

if.else.409:                                      ; preds = %sw.bb.385
  %242 = load i32, i32* %nextchr, align 4
  %cmp410 = icmp slt i32 %242, 0
  br i1 %cmp410, label %if.then.412, label %if.end.414

if.then.412:                                      ; preds = %if.else.409
  %243 = load i8*, i8** %locinput, align 8
  %244 = load i8, i8* %243, align 1
  %conv413 = zext i8 %244 to i32
  store i32 %conv413, i32* %nextchr, align 4
  br label %if.end.414

if.end.414:                                       ; preds = %if.then.412, %if.else.409
  %245 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags = getelementptr inbounds %struct.regnode, %struct.regnode* %245, i32 0, i32 0
  %246 = load i8, i8* %flags, align 1
  %conv415 = zext i8 %246 to i32
  %tobool416 = icmp ne i32 %conv415, 0
  br i1 %tobool416, label %cond.true.417, label %cond.false.421

cond.true.417:                                    ; preds = %if.end.414
  %247 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %248 = load i8*, i8** %locinput, align 8
  %call418 = call signext i8 @S_reginclass(%struct.regnode* %247, i8* %248, i64* null, i8 signext 0)
  %conv419 = sext i8 %call418 to i32
  %tobool420 = icmp ne i32 %conv419, 0
  br i1 %tobool420, label %if.end.432, label %if.then.431

cond.false.421:                                   ; preds = %if.end.414
  %249 = load i8*, i8** %locinput, align 8
  %250 = load i8, i8* %249, align 1
  %conv422 = zext i8 %250 to i32
  %shr = ashr i32 %conv422, 3
  %and423 = and i32 %shr, 31
  %idxprom424 = sext i32 %and423 to i64
  %251 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %252 = bitcast %struct.regnode* %251 to %struct.regnode_charclass*
  %bitmap = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %252, i32 0, i32 4
  %arrayidx425 = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap, i32 0, i64 %idxprom424
  %253 = load i8, i8* %arrayidx425, align 1
  %conv426 = sext i8 %253 to i32
  %254 = load i8*, i8** %locinput, align 8
  %255 = load i8, i8* %254, align 1
  %conv427 = zext i8 %255 to i32
  %and428 = and i32 %conv427, 7
  %shl = shl i32 1, %and428
  %and429 = and i32 %conv426, %shl
  %tobool430 = icmp ne i32 %and429, 0
  br i1 %tobool430, label %if.end.432, label %if.then.431

if.then.431:                                      ; preds = %cond.false.421, %cond.true.417
  br label %no_anyof

if.end.432:                                       ; preds = %cond.false.421, %cond.true.417
  %256 = load i32, i32* %nextchr, align 4
  %tobool433 = icmp ne i32 %256, 0
  br i1 %tobool433, label %if.end.438, label %land.lhs.true.434

land.lhs.true.434:                                ; preds = %if.end.432
  %257 = load i8*, i8** %locinput, align 8
  %258 = load i8*, i8** @PL_regeol, align 8
  %cmp435 = icmp uge i8* %257, %258
  br i1 %cmp435, label %if.then.437, label %if.end.438

if.then.437:                                      ; preds = %land.lhs.true.434
  br label %no

if.end.438:                                       ; preds = %land.lhs.true.434, %if.end.432
  %259 = load i8*, i8** %locinput, align 8
  %incdec.ptr439 = getelementptr inbounds i8, i8* %259, i32 1
  store i8* %incdec.ptr439, i8** %locinput, align 8
  %260 = load i8, i8* %incdec.ptr439, align 1
  %conv440 = zext i8 %260 to i32
  store i32 %conv440, i32* %nextchr, align 4
  br label %sw.epilog

no_anyof:                                         ; preds = %if.then.431, %if.then.393
  %261 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %262 = bitcast %struct.regnode* %261 to %struct.regnode_charclass*
  %bitmap441 = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %262, i32 0, i32 4
  %arrayidx442 = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap441, i32 0, i64 27
  %263 = load i8, i8* %arrayidx442, align 1
  %conv443 = sext i8 %263 to i32
  %and444 = and i32 %conv443, 128
  %tobool445 = icmp ne i32 %and444, 0
  br i1 %tobool445, label %land.lhs.true.446, label %if.else.505

land.lhs.true.446:                                ; preds = %no_anyof
  %264 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags447 = getelementptr inbounds %struct.regnode, %struct.regnode* %264, i32 0, i32 0
  %265 = load i8, i8* %flags447, align 1
  %conv448 = zext i8 %265 to i32
  %and449 = and i32 %conv448, 32
  %tobool450 = icmp ne i32 %and449, 0
  br i1 %tobool450, label %land.lhs.true.451, label %if.else.505

land.lhs.true.451:                                ; preds = %land.lhs.true.446
  %266 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags452 = getelementptr inbounds %struct.regnode, %struct.regnode* %266, i32 0, i32 0
  %267 = load i8, i8* %flags452, align 1
  %conv453 = zext i8 %267 to i32
  %and454 = and i32 %conv453, 2
  %tobool455 = icmp ne i32 %and454, 0
  br i1 %tobool455, label %land.lhs.true.456, label %if.else.505

land.lhs.true.456:                                ; preds = %land.lhs.true.451
  %268 = load i8*, i8** @PL_regeol, align 8
  %269 = load i8*, i8** %locinput, align 8
  %add.ptr457 = getelementptr inbounds i8, i8* %269, i64 1
  %cmp458 = icmp ugt i8* %268, %add.ptr457
  br i1 %cmp458, label %land.lhs.true.460, label %if.else.505

land.lhs.true.460:                                ; preds = %land.lhs.true.456
  %270 = load i8*, i8** %locinput, align 8
  %arrayidx461 = getelementptr inbounds i8, i8* %270, i64 0
  %271 = load i8, i8* %arrayidx461, align 1
  %conv462 = sext i8 %271 to i32
  %cmp463 = icmp sge i32 %conv462, 65
  br i1 %cmp463, label %land.lhs.true.465, label %cond.false.474

land.lhs.true.465:                                ; preds = %land.lhs.true.460
  %272 = load i8*, i8** %locinput, align 8
  %arrayidx466 = getelementptr inbounds i8, i8* %272, i64 0
  %273 = load i8, i8* %arrayidx466, align 1
  %conv467 = sext i8 %273 to i32
  %cmp468 = icmp sle i32 %conv467, 90
  br i1 %cmp468, label %cond.true.470, label %cond.false.474

cond.true.470:                                    ; preds = %land.lhs.true.465
  %274 = load i8*, i8** %locinput, align 8
  %arrayidx471 = getelementptr inbounds i8, i8* %274, i64 0
  %275 = load i8, i8* %arrayidx471, align 1
  %conv472 = sext i8 %275 to i32
  %add473 = add nsw i32 %conv472, 32
  br label %cond.end.477

cond.false.474:                                   ; preds = %land.lhs.true.465, %land.lhs.true.460
  %276 = load i8*, i8** %locinput, align 8
  %arrayidx475 = getelementptr inbounds i8, i8* %276, i64 0
  %277 = load i8, i8* %arrayidx475, align 1
  %conv476 = sext i8 %277 to i32
  br label %cond.end.477

cond.end.477:                                     ; preds = %cond.false.474, %cond.true.470
  %cond478 = phi i32 [ %add473, %cond.true.470 ], [ %conv476, %cond.false.474 ]
  %cmp479 = icmp eq i32 %cond478, 115
  br i1 %cmp479, label %land.lhs.true.481, label %if.else.505

land.lhs.true.481:                                ; preds = %cond.end.477
  %278 = load i8*, i8** %locinput, align 8
  %arrayidx482 = getelementptr inbounds i8, i8* %278, i64 1
  %279 = load i8, i8* %arrayidx482, align 1
  %conv483 = sext i8 %279 to i32
  %cmp484 = icmp sge i32 %conv483, 65
  br i1 %cmp484, label %land.lhs.true.486, label %cond.false.495

land.lhs.true.486:                                ; preds = %land.lhs.true.481
  %280 = load i8*, i8** %locinput, align 8
  %arrayidx487 = getelementptr inbounds i8, i8* %280, i64 1
  %281 = load i8, i8* %arrayidx487, align 1
  %conv488 = sext i8 %281 to i32
  %cmp489 = icmp sle i32 %conv488, 90
  br i1 %cmp489, label %cond.true.491, label %cond.false.495

cond.true.491:                                    ; preds = %land.lhs.true.486
  %282 = load i8*, i8** %locinput, align 8
  %arrayidx492 = getelementptr inbounds i8, i8* %282, i64 1
  %283 = load i8, i8* %arrayidx492, align 1
  %conv493 = sext i8 %283 to i32
  %add494 = add nsw i32 %conv493, 32
  br label %cond.end.498

cond.false.495:                                   ; preds = %land.lhs.true.486, %land.lhs.true.481
  %284 = load i8*, i8** %locinput, align 8
  %arrayidx496 = getelementptr inbounds i8, i8* %284, i64 1
  %285 = load i8, i8* %arrayidx496, align 1
  %conv497 = sext i8 %285 to i32
  br label %cond.end.498

cond.end.498:                                     ; preds = %cond.false.495, %cond.true.491
  %cond499 = phi i32 [ %add494, %cond.true.491 ], [ %conv497, %cond.false.495 ]
  %cmp500 = icmp eq i32 %cond499, 115
  br i1 %cmp500, label %if.then.502, label %if.else.505

if.then.502:                                      ; preds = %cond.end.498
  %286 = load i8*, i8** %locinput, align 8
  %add.ptr503 = getelementptr inbounds i8, i8* %286, i64 2
  store i8* %add.ptr503, i8** %locinput, align 8
  %287 = load i8*, i8** %locinput, align 8
  %288 = load i8, i8* %287, align 1
  %conv504 = zext i8 %288 to i32
  store i32 %conv504, i32* %nextchr, align 4
  br label %if.end.506

if.else.505:                                      ; preds = %cond.end.498, %cond.end.477, %land.lhs.true.456, %land.lhs.true.451, %land.lhs.true.446, %no_anyof
  br label %no

if.end.506:                                       ; preds = %if.then.502
  br label %sw.epilog

sw.bb.507:                                        ; preds = %if.end
  %289 = load i32, i32* @PL_reg_flags, align 4
  %or508 = or i32 %289, 1
  store i32 %or508, i32* @PL_reg_flags, align 4
  br label %sw.bb.509

sw.bb.509:                                        ; preds = %if.end, %sw.bb.507
  %290 = load i32, i32* %nextchr, align 4
  %tobool510 = icmp ne i32 %290, 0
  br i1 %tobool510, label %if.end.512, label %if.then.511

if.then.511:                                      ; preds = %sw.bb.509
  br label %no

if.end.512:                                       ; preds = %sw.bb.509
  %291 = load i8, i8* %do_utf8, align 1
  %tobool513 = icmp ne i8 %291, 0
  br i1 %tobool513, label %if.then.514, label %if.end.566

if.then.514:                                      ; preds = %if.end.512
  %292 = load %struct.sv*, %struct.sv** @PL_utf8_alnum, align 8
  %tobool515 = icmp ne %struct.sv* %292, null
  br i1 %tobool515, label %if.end.518, label %if.then.516

if.then.516:                                      ; preds = %if.then.514
  call void @Perl_push_scope()
  call void @Perl_save_re_context()
  %call517 = call signext i8 @Perl_is_utf8_alnum(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0))
  call void @Perl_pop_scope()
  br label %if.end.518

if.end.518:                                       ; preds = %if.then.516, %if.then.514
  %293 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type519 = getelementptr inbounds %struct.regnode, %struct.regnode* %293, i32 0, i32 1
  %294 = load i8, i8* %type519, align 1
  %conv520 = zext i8 %294 to i32
  %cmp521 = icmp eq i32 %conv520, 18
  br i1 %cmp521, label %cond.true.523, label %cond.false.526

cond.true.523:                                    ; preds = %if.end.518
  %295 = load %struct.sv*, %struct.sv** @PL_utf8_alnum, align 8
  %296 = load i8*, i8** %locinput, align 8
  %297 = load i8, i8* %do_utf8, align 1
  %call524 = call i64 @Perl_swash_fetch(%struct.sv* %295, i8* %296, i8 signext %297)
  %tobool525 = icmp ne i64 %call524, 0
  br i1 %tobool525, label %if.end.559, label %if.then.558

cond.false.526:                                   ; preds = %if.end.518
  %298 = load i8*, i8** %locinput, align 8
  %call527 = call i64 @Perl_utf8_to_uvchr(i8* %298, i64* null)
  %cmp528 = icmp ult i64 %call527, 256
  br i1 %cmp528, label %cond.true.530, label %cond.false.550

cond.true.530:                                    ; preds = %cond.false.526
  %299 = load i8*, i8** %locinput, align 8
  %call531 = call i64 @Perl_utf8_to_uvchr(i8* %299, i64* null)
  %and532 = and i64 %call531, -128
  %cmp533 = icmp eq i64 %and532, 0
  br i1 %cmp533, label %land.rhs.535, label %land.end.549

land.rhs.535:                                     ; preds = %cond.true.530
  %300 = load i8*, i8** %locinput, align 8
  %call536 = call i64 @Perl_utf8_to_uvchr(i8* %300, i64* null)
  %conv537 = trunc i64 %call536 to i32
  %idxprom538 = sext i32 %conv537 to i64
  %call539 = call i16** @__ctype_b_loc()
  %301 = load i16*, i16** %call539, align 8
  %arrayidx540 = getelementptr inbounds i16, i16* %301, i64 %idxprom538
  %302 = load i16, i16* %arrayidx540, align 2
  %conv541 = zext i16 %302 to i32
  %and542 = and i32 %conv541, 8
  %tobool543 = icmp ne i32 %and542, 0
  br i1 %tobool543, label %lor.end.548, label %lor.rhs.544

lor.rhs.544:                                      ; preds = %land.rhs.535
  %303 = load i8*, i8** %locinput, align 8
  %call545 = call i64 @Perl_utf8_to_uvchr(i8* %303, i64* null)
  %cmp546 = icmp eq i64 %call545, 95
  br label %lor.end.548

lor.end.548:                                      ; preds = %lor.rhs.544, %land.rhs.535
  %304 = phi i1 [ true, %land.rhs.535 ], [ %cmp546, %lor.rhs.544 ]
  br label %land.end.549

land.end.549:                                     ; preds = %lor.end.548, %cond.true.530
  %305 = phi i1 [ false, %cond.true.530 ], [ %304, %lor.end.548 ]
  %land.ext = zext i1 %305 to i32
  br label %cond.end.554

cond.false.550:                                   ; preds = %cond.false.526
  %306 = load i8*, i8** %locinput, align 8
  %call551 = call i64 @Perl_utf8_to_uvchr(i8* %306, i64* null)
  %call552 = call signext i8 @Perl_is_uni_alnum_lc(i64 %call551)
  %conv553 = sext i8 %call552 to i32
  br label %cond.end.554

cond.end.554:                                     ; preds = %cond.false.550, %land.end.549
  %cond555 = phi i32 [ %land.ext, %land.end.549 ], [ %conv553, %cond.false.550 ]
  %conv556 = sext i32 %cond555 to i64
  %tobool557 = icmp ne i64 %conv556, 0
  br i1 %tobool557, label %if.end.559, label %if.then.558

if.then.558:                                      ; preds = %cond.end.554, %cond.true.523
  br label %no

if.end.559:                                       ; preds = %cond.end.554, %cond.true.523
  %307 = load i32, i32* %nextchr, align 4
  %idxprom560 = sext i32 %307 to i64
  %arrayidx561 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom560
  %308 = load i8, i8* %arrayidx561, align 1
  %conv562 = zext i8 %308 to i32
  %309 = load i8*, i8** %locinput, align 8
  %idx.ext563 = sext i32 %conv562 to i64
  %add.ptr564 = getelementptr inbounds i8, i8* %309, i64 %idx.ext563
  store i8* %add.ptr564, i8** %locinput, align 8
  %310 = load i8*, i8** %locinput, align 8
  %311 = load i8, i8* %310, align 1
  %conv565 = zext i8 %311 to i32
  store i32 %conv565, i32* %nextchr, align 4
  br label %sw.epilog

if.end.566:                                       ; preds = %if.end.512
  %312 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type567 = getelementptr inbounds %struct.regnode, %struct.regnode* %312, i32 0, i32 1
  %313 = load i8, i8* %type567, align 1
  %conv568 = zext i8 %313 to i32
  %cmp569 = icmp eq i32 %conv568, 18
  br i1 %cmp569, label %cond.true.571, label %cond.false.592

cond.true.571:                                    ; preds = %if.end.566
  %314 = load i32, i32* %nextchr, align 4
  %cmp572 = icmp sge i32 %314, 65
  br i1 %cmp572, label %land.lhs.true.574, label %lor.lhs.false.577

land.lhs.true.574:                                ; preds = %cond.true.571
  %315 = load i32, i32* %nextchr, align 4
  %cmp575 = icmp sle i32 %315, 90
  br i1 %cmp575, label %if.end.607, label %lor.lhs.false.577

lor.lhs.false.577:                                ; preds = %land.lhs.true.574, %cond.true.571
  %316 = load i32, i32* %nextchr, align 4
  %cmp578 = icmp sge i32 %316, 97
  br i1 %cmp578, label %land.lhs.true.580, label %lor.lhs.false.583

land.lhs.true.580:                                ; preds = %lor.lhs.false.577
  %317 = load i32, i32* %nextchr, align 4
  %cmp581 = icmp sle i32 %317, 122
  br i1 %cmp581, label %if.end.607, label %lor.lhs.false.583

lor.lhs.false.583:                                ; preds = %land.lhs.true.580, %lor.lhs.false.577
  %318 = load i32, i32* %nextchr, align 4
  %cmp584 = icmp sge i32 %318, 48
  br i1 %cmp584, label %land.lhs.true.586, label %lor.lhs.false.589

land.lhs.true.586:                                ; preds = %lor.lhs.false.583
  %319 = load i32, i32* %nextchr, align 4
  %cmp587 = icmp sle i32 %319, 57
  br i1 %cmp587, label %if.end.607, label %lor.lhs.false.589

lor.lhs.false.589:                                ; preds = %land.lhs.true.586, %lor.lhs.false.583
  %320 = load i32, i32* %nextchr, align 4
  %cmp590 = icmp eq i32 %320, 95
  br i1 %cmp590, label %if.end.607, label %if.then.606

cond.false.592:                                   ; preds = %if.end.566
  %321 = load i32, i32* %nextchr, align 4
  %and593 = and i32 %321, -128
  %cmp594 = icmp eq i32 %and593, 0
  br i1 %cmp594, label %land.lhs.true.596, label %if.then.606

land.lhs.true.596:                                ; preds = %cond.false.592
  %322 = load i32, i32* %nextchr, align 4
  %idxprom597 = sext i32 %322 to i64
  %call598 = call i16** @__ctype_b_loc()
  %323 = load i16*, i16** %call598, align 8
  %arrayidx599 = getelementptr inbounds i16, i16* %323, i64 %idxprom597
  %324 = load i16, i16* %arrayidx599, align 2
  %conv600 = zext i16 %324 to i32
  %and601 = and i32 %conv600, 8
  %tobool602 = icmp ne i32 %and601, 0
  br i1 %tobool602, label %if.end.607, label %lor.lhs.false.603

lor.lhs.false.603:                                ; preds = %land.lhs.true.596
  %325 = load i32, i32* %nextchr, align 4
  %cmp604 = icmp eq i32 %325, 95
  br i1 %cmp604, label %if.end.607, label %if.then.606

if.then.606:                                      ; preds = %lor.lhs.false.603, %cond.false.592, %lor.lhs.false.589
  br label %no

if.end.607:                                       ; preds = %lor.lhs.false.603, %land.lhs.true.596, %lor.lhs.false.589, %land.lhs.true.586, %land.lhs.true.580, %land.lhs.true.574
  %326 = load i8*, i8** %locinput, align 8
  %incdec.ptr608 = getelementptr inbounds i8, i8* %326, i32 1
  store i8* %incdec.ptr608, i8** %locinput, align 8
  %327 = load i8, i8* %incdec.ptr608, align 1
  %conv609 = zext i8 %327 to i32
  store i32 %conv609, i32* %nextchr, align 4
  br label %sw.epilog

sw.bb.610:                                        ; preds = %if.end
  %328 = load i32, i32* @PL_reg_flags, align 4
  %or611 = or i32 %328, 1
  store i32 %or611, i32* @PL_reg_flags, align 4
  br label %sw.bb.612

sw.bb.612:                                        ; preds = %if.end, %sw.bb.610
  %329 = load i32, i32* %nextchr, align 4
  %tobool613 = icmp ne i32 %329, 0
  br i1 %tobool613, label %if.end.618, label %land.lhs.true.614

land.lhs.true.614:                                ; preds = %sw.bb.612
  %330 = load i8*, i8** %locinput, align 8
  %331 = load i8*, i8** @PL_regeol, align 8
  %cmp615 = icmp uge i8* %330, %331
  br i1 %cmp615, label %if.then.617, label %if.end.618

if.then.617:                                      ; preds = %land.lhs.true.614
  br label %no

if.end.618:                                       ; preds = %land.lhs.true.614, %sw.bb.612
  %332 = load i8, i8* %do_utf8, align 1
  %tobool619 = icmp ne i8 %332, 0
  br i1 %tobool619, label %if.then.620, label %if.end.673

if.then.620:                                      ; preds = %if.end.618
  %333 = load %struct.sv*, %struct.sv** @PL_utf8_alnum, align 8
  %tobool621 = icmp ne %struct.sv* %333, null
  br i1 %tobool621, label %if.end.624, label %if.then.622

if.then.622:                                      ; preds = %if.then.620
  call void @Perl_push_scope()
  call void @Perl_save_re_context()
  %call623 = call signext i8 @Perl_is_utf8_alnum(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0))
  call void @Perl_pop_scope()
  br label %if.end.624

if.end.624:                                       ; preds = %if.then.622, %if.then.620
  %334 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type625 = getelementptr inbounds %struct.regnode, %struct.regnode* %334, i32 0, i32 1
  %335 = load i8, i8* %type625, align 1
  %conv626 = zext i8 %335 to i32
  %cmp627 = icmp eq i32 %conv626, 20
  br i1 %cmp627, label %cond.true.629, label %cond.false.632

cond.true.629:                                    ; preds = %if.end.624
  %336 = load %struct.sv*, %struct.sv** @PL_utf8_alnum, align 8
  %337 = load i8*, i8** %locinput, align 8
  %338 = load i8, i8* %do_utf8, align 1
  %call630 = call i64 @Perl_swash_fetch(%struct.sv* %336, i8* %337, i8 signext %338)
  %tobool631 = icmp ne i64 %call630, 0
  br i1 %tobool631, label %if.then.665, label %if.end.666

cond.false.632:                                   ; preds = %if.end.624
  %339 = load i8*, i8** %locinput, align 8
  %call633 = call i64 @Perl_utf8_to_uvchr(i8* %339, i64* null)
  %cmp634 = icmp ult i64 %call633, 256
  br i1 %cmp634, label %cond.true.636, label %cond.false.657

cond.true.636:                                    ; preds = %cond.false.632
  %340 = load i8*, i8** %locinput, align 8
  %call637 = call i64 @Perl_utf8_to_uvchr(i8* %340, i64* null)
  %and638 = and i64 %call637, -128
  %cmp639 = icmp eq i64 %and638, 0
  br i1 %cmp639, label %land.rhs.641, label %land.end.655

land.rhs.641:                                     ; preds = %cond.true.636
  %341 = load i8*, i8** %locinput, align 8
  %call642 = call i64 @Perl_utf8_to_uvchr(i8* %341, i64* null)
  %conv643 = trunc i64 %call642 to i32
  %idxprom644 = sext i32 %conv643 to i64
  %call645 = call i16** @__ctype_b_loc()
  %342 = load i16*, i16** %call645, align 8
  %arrayidx646 = getelementptr inbounds i16, i16* %342, i64 %idxprom644
  %343 = load i16, i16* %arrayidx646, align 2
  %conv647 = zext i16 %343 to i32
  %and648 = and i32 %conv647, 8
  %tobool649 = icmp ne i32 %and648, 0
  br i1 %tobool649, label %lor.end.654, label %lor.rhs.650

lor.rhs.650:                                      ; preds = %land.rhs.641
  %344 = load i8*, i8** %locinput, align 8
  %call651 = call i64 @Perl_utf8_to_uvchr(i8* %344, i64* null)
  %cmp652 = icmp eq i64 %call651, 95
  br label %lor.end.654

lor.end.654:                                      ; preds = %lor.rhs.650, %land.rhs.641
  %345 = phi i1 [ true, %land.rhs.641 ], [ %cmp652, %lor.rhs.650 ]
  br label %land.end.655

land.end.655:                                     ; preds = %lor.end.654, %cond.true.636
  %346 = phi i1 [ false, %cond.true.636 ], [ %345, %lor.end.654 ]
  %land.ext656 = zext i1 %346 to i32
  br label %cond.end.661

cond.false.657:                                   ; preds = %cond.false.632
  %347 = load i8*, i8** %locinput, align 8
  %call658 = call i64 @Perl_utf8_to_uvchr(i8* %347, i64* null)
  %call659 = call signext i8 @Perl_is_uni_alnum_lc(i64 %call658)
  %conv660 = sext i8 %call659 to i32
  br label %cond.end.661

cond.end.661:                                     ; preds = %cond.false.657, %land.end.655
  %cond662 = phi i32 [ %land.ext656, %land.end.655 ], [ %conv660, %cond.false.657 ]
  %conv663 = sext i32 %cond662 to i64
  %tobool664 = icmp ne i64 %conv663, 0
  br i1 %tobool664, label %if.then.665, label %if.end.666

if.then.665:                                      ; preds = %cond.end.661, %cond.true.629
  br label %no

if.end.666:                                       ; preds = %cond.end.661, %cond.true.629
  %348 = load i32, i32* %nextchr, align 4
  %idxprom667 = sext i32 %348 to i64
  %arrayidx668 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom667
  %349 = load i8, i8* %arrayidx668, align 1
  %conv669 = zext i8 %349 to i32
  %350 = load i8*, i8** %locinput, align 8
  %idx.ext670 = sext i32 %conv669 to i64
  %add.ptr671 = getelementptr inbounds i8, i8* %350, i64 %idx.ext670
  store i8* %add.ptr671, i8** %locinput, align 8
  %351 = load i8*, i8** %locinput, align 8
  %352 = load i8, i8* %351, align 1
  %conv672 = zext i8 %352 to i32
  store i32 %conv672, i32* %nextchr, align 4
  br label %sw.epilog

if.end.673:                                       ; preds = %if.end.618
  %353 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type674 = getelementptr inbounds %struct.regnode, %struct.regnode* %353, i32 0, i32 1
  %354 = load i8, i8* %type674, align 1
  %conv675 = zext i8 %354 to i32
  %cmp676 = icmp eq i32 %conv675, 20
  br i1 %cmp676, label %cond.true.678, label %cond.false.699

cond.true.678:                                    ; preds = %if.end.673
  %355 = load i32, i32* %nextchr, align 4
  %cmp679 = icmp sge i32 %355, 65
  br i1 %cmp679, label %land.lhs.true.681, label %lor.lhs.false.684

land.lhs.true.681:                                ; preds = %cond.true.678
  %356 = load i32, i32* %nextchr, align 4
  %cmp682 = icmp sle i32 %356, 90
  br i1 %cmp682, label %if.then.713, label %lor.lhs.false.684

lor.lhs.false.684:                                ; preds = %land.lhs.true.681, %cond.true.678
  %357 = load i32, i32* %nextchr, align 4
  %cmp685 = icmp sge i32 %357, 97
  br i1 %cmp685, label %land.lhs.true.687, label %lor.lhs.false.690

land.lhs.true.687:                                ; preds = %lor.lhs.false.684
  %358 = load i32, i32* %nextchr, align 4
  %cmp688 = icmp sle i32 %358, 122
  br i1 %cmp688, label %if.then.713, label %lor.lhs.false.690

lor.lhs.false.690:                                ; preds = %land.lhs.true.687, %lor.lhs.false.684
  %359 = load i32, i32* %nextchr, align 4
  %cmp691 = icmp sge i32 %359, 48
  br i1 %cmp691, label %land.lhs.true.693, label %lor.lhs.false.696

land.lhs.true.693:                                ; preds = %lor.lhs.false.690
  %360 = load i32, i32* %nextchr, align 4
  %cmp694 = icmp sle i32 %360, 57
  br i1 %cmp694, label %if.then.713, label %lor.lhs.false.696

lor.lhs.false.696:                                ; preds = %land.lhs.true.693, %lor.lhs.false.690
  %361 = load i32, i32* %nextchr, align 4
  %cmp697 = icmp eq i32 %361, 95
  br i1 %cmp697, label %if.then.713, label %if.end.714

cond.false.699:                                   ; preds = %if.end.673
  %362 = load i32, i32* %nextchr, align 4
  %and700 = and i32 %362, -128
  %cmp701 = icmp eq i32 %and700, 0
  br i1 %cmp701, label %land.lhs.true.703, label %if.end.714

land.lhs.true.703:                                ; preds = %cond.false.699
  %363 = load i32, i32* %nextchr, align 4
  %idxprom704 = sext i32 %363 to i64
  %call705 = call i16** @__ctype_b_loc()
  %364 = load i16*, i16** %call705, align 8
  %arrayidx706 = getelementptr inbounds i16, i16* %364, i64 %idxprom704
  %365 = load i16, i16* %arrayidx706, align 2
  %conv707 = zext i16 %365 to i32
  %and708 = and i32 %conv707, 8
  %tobool709 = icmp ne i32 %and708, 0
  br i1 %tobool709, label %if.then.713, label %lor.lhs.false.710

lor.lhs.false.710:                                ; preds = %land.lhs.true.703
  %366 = load i32, i32* %nextchr, align 4
  %cmp711 = icmp eq i32 %366, 95
  br i1 %cmp711, label %if.then.713, label %if.end.714

if.then.713:                                      ; preds = %lor.lhs.false.710, %land.lhs.true.703, %lor.lhs.false.696, %land.lhs.true.693, %land.lhs.true.687, %land.lhs.true.681
  br label %no

if.end.714:                                       ; preds = %lor.lhs.false.710, %cond.false.699, %lor.lhs.false.696
  %367 = load i8*, i8** %locinput, align 8
  %incdec.ptr715 = getelementptr inbounds i8, i8* %367, i32 1
  store i8* %incdec.ptr715, i8** %locinput, align 8
  %368 = load i8, i8* %incdec.ptr715, align 1
  %conv716 = zext i8 %368 to i32
  store i32 %conv716, i32* %nextchr, align 4
  br label %sw.epilog

sw.bb.717:                                        ; preds = %if.end, %if.end
  %369 = load i32, i32* @PL_reg_flags, align 4
  %or718 = or i32 %369, 1
  store i32 %or718, i32* @PL_reg_flags, align 4
  br label %sw.bb.719

sw.bb.719:                                        ; preds = %if.end, %if.end, %sw.bb.717
  %370 = load i8, i8* %do_utf8, align 1
  %tobool720 = icmp ne i8 %370, 0
  br i1 %tobool720, label %if.then.721, label %if.else.809

if.then.721:                                      ; preds = %sw.bb.719
  %371 = load i8*, i8** %locinput, align 8
  %372 = load i8*, i8** @PL_bostr, align 8
  %cmp722 = icmp eq i8* %371, %372
  br i1 %cmp722, label %if.then.724, label %if.else.725

if.then.724:                                      ; preds = %if.then.721
  store i32 10, i32* %ln, align 4
  br label %if.end.732

if.else.725:                                      ; preds = %if.then.721
  %373 = load i8*, i8** %locinput, align 8
  %374 = load i8*, i8** @PL_bostr, align 8
  %call726 = call i8* @S_reghop3(i8* %373, i32 -1, i8* %374)
  store i8* %call726, i8** %r, align 8
  %375 = load i8*, i8** %r, align 8
  %376 = load i8*, i8** %r, align 8
  %377 = load i8, i8* %376, align 1
  %idxprom727 = zext i8 %377 to i64
  %arrayidx728 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom727
  %378 = load i8, i8* %arrayidx728, align 1
  %conv729 = zext i8 %378 to i64
  %call730 = call i64 @Perl_utf8n_to_uvuni(i8* %375, i64 %conv729, i64* null, i32 0)
  %conv731 = trunc i64 %call730 to i32
  store i32 %conv731, i32* %ln, align 4
  br label %if.end.732

if.end.732:                                       ; preds = %if.else.725, %if.then.724
  %379 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type733 = getelementptr inbounds %struct.regnode, %struct.regnode* %379, i32 0, i32 1
  %380 = load i8, i8* %type733, align 1
  %conv734 = zext i8 %380 to i32
  %cmp735 = icmp eq i32 %conv734, 9
  br i1 %cmp735, label %if.then.742, label %lor.lhs.false.737

lor.lhs.false.737:                                ; preds = %if.end.732
  %381 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type738 = getelementptr inbounds %struct.regnode, %struct.regnode* %381, i32 0, i32 1
  %382 = load i8, i8* %type738, align 1
  %conv739 = zext i8 %382 to i32
  %cmp740 = icmp eq i32 %conv739, 11
  br i1 %cmp740, label %if.then.742, label %if.else.752

if.then.742:                                      ; preds = %lor.lhs.false.737, %if.end.732
  %383 = load i32, i32* %ln, align 4
  %conv743 = sext i32 %383 to i64
  %call744 = call signext i8 @Perl_is_uni_alnum(i64 %conv743)
  %conv745 = sext i8 %call744 to i32
  store i32 %conv745, i32* %ln, align 4
  %384 = load %struct.sv*, %struct.sv** @PL_utf8_alnum, align 8
  %tobool746 = icmp ne %struct.sv* %384, null
  br i1 %tobool746, label %if.end.749, label %if.then.747

if.then.747:                                      ; preds = %if.then.742
  call void @Perl_push_scope()
  call void @Perl_save_re_context()
  %call748 = call signext i8 @Perl_is_utf8_alnum(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0))
  call void @Perl_pop_scope()
  br label %if.end.749

if.end.749:                                       ; preds = %if.then.747, %if.then.742
  %385 = load %struct.sv*, %struct.sv** @PL_utf8_alnum, align 8
  %386 = load i8*, i8** %locinput, align 8
  %387 = load i8, i8* %do_utf8, align 1
  %call750 = call i64 @Perl_swash_fetch(%struct.sv* %385, i8* %386, i8 signext %387)
  %conv751 = trunc i64 %call750 to i32
  store i32 %conv751, i32* %n, align 4
  br label %if.end.808

if.else.752:                                      ; preds = %lor.lhs.false.737
  %388 = load i32, i32* %ln, align 4
  %cmp753 = icmp slt i32 %388, 256
  br i1 %cmp753, label %cond.true.755, label %cond.false.772

cond.true.755:                                    ; preds = %if.else.752
  %389 = load i32, i32* %ln, align 4
  %and756 = and i32 %389, -128
  %cmp757 = icmp eq i32 %and756, 0
  br i1 %cmp757, label %land.rhs.759, label %land.end.770

land.rhs.759:                                     ; preds = %cond.true.755
  %390 = load i32, i32* %ln, align 4
  %idxprom760 = sext i32 %390 to i64
  %call761 = call i16** @__ctype_b_loc()
  %391 = load i16*, i16** %call761, align 8
  %arrayidx762 = getelementptr inbounds i16, i16* %391, i64 %idxprom760
  %392 = load i16, i16* %arrayidx762, align 2
  %conv763 = zext i16 %392 to i32
  %and764 = and i32 %conv763, 8
  %tobool765 = icmp ne i32 %and764, 0
  br i1 %tobool765, label %lor.end.769, label %lor.rhs.766

lor.rhs.766:                                      ; preds = %land.rhs.759
  %393 = load i32, i32* %ln, align 4
  %cmp767 = icmp eq i32 %393, 95
  br label %lor.end.769

lor.end.769:                                      ; preds = %lor.rhs.766, %land.rhs.759
  %394 = phi i1 [ true, %land.rhs.759 ], [ %cmp767, %lor.rhs.766 ]
  br label %land.end.770

land.end.770:                                     ; preds = %lor.end.769, %cond.true.755
  %395 = phi i1 [ false, %cond.true.755 ], [ %394, %lor.end.769 ]
  %land.ext771 = zext i1 %395 to i32
  br label %cond.end.776

cond.false.772:                                   ; preds = %if.else.752
  %396 = load i32, i32* %ln, align 4
  %conv773 = sext i32 %396 to i64
  %call774 = call signext i8 @Perl_is_uni_alnum_lc(i64 %conv773)
  %conv775 = sext i8 %call774 to i32
  br label %cond.end.776

cond.end.776:                                     ; preds = %cond.false.772, %land.end.770
  %cond777 = phi i32 [ %land.ext771, %land.end.770 ], [ %conv775, %cond.false.772 ]
  store i32 %cond777, i32* %ln, align 4
  %397 = load i8*, i8** %locinput, align 8
  %call778 = call i64 @Perl_utf8_to_uvchr(i8* %397, i64* null)
  %cmp779 = icmp ult i64 %call778, 256
  br i1 %cmp779, label %cond.true.781, label %cond.false.802

cond.true.781:                                    ; preds = %cond.end.776
  %398 = load i8*, i8** %locinput, align 8
  %call782 = call i64 @Perl_utf8_to_uvchr(i8* %398, i64* null)
  %and783 = and i64 %call782, -128
  %cmp784 = icmp eq i64 %and783, 0
  br i1 %cmp784, label %land.rhs.786, label %land.end.800

land.rhs.786:                                     ; preds = %cond.true.781
  %399 = load i8*, i8** %locinput, align 8
  %call787 = call i64 @Perl_utf8_to_uvchr(i8* %399, i64* null)
  %conv788 = trunc i64 %call787 to i32
  %idxprom789 = sext i32 %conv788 to i64
  %call790 = call i16** @__ctype_b_loc()
  %400 = load i16*, i16** %call790, align 8
  %arrayidx791 = getelementptr inbounds i16, i16* %400, i64 %idxprom789
  %401 = load i16, i16* %arrayidx791, align 2
  %conv792 = zext i16 %401 to i32
  %and793 = and i32 %conv792, 8
  %tobool794 = icmp ne i32 %and793, 0
  br i1 %tobool794, label %lor.end.799, label %lor.rhs.795

lor.rhs.795:                                      ; preds = %land.rhs.786
  %402 = load i8*, i8** %locinput, align 8
  %call796 = call i64 @Perl_utf8_to_uvchr(i8* %402, i64* null)
  %cmp797 = icmp eq i64 %call796, 95
  br label %lor.end.799

lor.end.799:                                      ; preds = %lor.rhs.795, %land.rhs.786
  %403 = phi i1 [ true, %land.rhs.786 ], [ %cmp797, %lor.rhs.795 ]
  br label %land.end.800

land.end.800:                                     ; preds = %lor.end.799, %cond.true.781
  %404 = phi i1 [ false, %cond.true.781 ], [ %403, %lor.end.799 ]
  %land.ext801 = zext i1 %404 to i32
  br label %cond.end.806

cond.false.802:                                   ; preds = %cond.end.776
  %405 = load i8*, i8** %locinput, align 8
  %call803 = call i64 @Perl_utf8_to_uvchr(i8* %405, i64* null)
  %call804 = call signext i8 @Perl_is_uni_alnum_lc(i64 %call803)
  %conv805 = sext i8 %call804 to i32
  br label %cond.end.806

cond.end.806:                                     ; preds = %cond.false.802, %land.end.800
  %cond807 = phi i32 [ %land.ext801, %land.end.800 ], [ %conv805, %cond.false.802 ]
  store i32 %cond807, i32* %n, align 4
  br label %if.end.808

if.end.808:                                       ; preds = %cond.end.806, %if.end.749
  br label %if.end.907

if.else.809:                                      ; preds = %sw.bb.719
  %406 = load i8*, i8** %locinput, align 8
  %407 = load i8*, i8** @PL_bostr, align 8
  %cmp810 = icmp ne i8* %406, %407
  br i1 %cmp810, label %cond.true.812, label %cond.false.815

cond.true.812:                                    ; preds = %if.else.809
  %408 = load i8*, i8** %locinput, align 8
  %add.ptr813 = getelementptr inbounds i8, i8* %408, i64 -1
  %409 = load i8, i8* %add.ptr813, align 1
  %conv814 = zext i8 %409 to i32
  br label %cond.end.816

cond.false.815:                                   ; preds = %if.else.809
  br label %cond.end.816

cond.end.816:                                     ; preds = %cond.false.815, %cond.true.812
  %cond817 = phi i32 [ %conv814, %cond.true.812 ], [ 10, %cond.false.815 ]
  store i32 %cond817, i32* %ln, align 4
  %410 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type818 = getelementptr inbounds %struct.regnode, %struct.regnode* %410, i32 0, i32 1
  %411 = load i8, i8* %type818, align 1
  %conv819 = zext i8 %411 to i32
  %cmp820 = icmp eq i32 %conv819, 9
  br i1 %cmp820, label %if.then.827, label %lor.lhs.false.822

lor.lhs.false.822:                                ; preds = %cond.end.816
  %412 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type823 = getelementptr inbounds %struct.regnode, %struct.regnode* %412, i32 0, i32 1
  %413 = load i8, i8* %type823, align 1
  %conv824 = zext i8 %413 to i32
  %cmp825 = icmp eq i32 %conv824, 11
  br i1 %cmp825, label %if.then.827, label %if.else.871

if.then.827:                                      ; preds = %lor.lhs.false.822, %cond.end.816
  %414 = load i32, i32* %ln, align 4
  %cmp828 = icmp sge i32 %414, 65
  br i1 %cmp828, label %land.lhs.true.830, label %lor.lhs.false.833

land.lhs.true.830:                                ; preds = %if.then.827
  %415 = load i32, i32* %ln, align 4
  %cmp831 = icmp sle i32 %415, 90
  br i1 %cmp831, label %lor.end.848, label %lor.lhs.false.833

lor.lhs.false.833:                                ; preds = %land.lhs.true.830, %if.then.827
  %416 = load i32, i32* %ln, align 4
  %cmp834 = icmp sge i32 %416, 97
  br i1 %cmp834, label %land.lhs.true.836, label %lor.lhs.false.839

land.lhs.true.836:                                ; preds = %lor.lhs.false.833
  %417 = load i32, i32* %ln, align 4
  %cmp837 = icmp sle i32 %417, 122
  br i1 %cmp837, label %lor.end.848, label %lor.lhs.false.839

lor.lhs.false.839:                                ; preds = %land.lhs.true.836, %lor.lhs.false.833
  %418 = load i32, i32* %ln, align 4
  %cmp840 = icmp sge i32 %418, 48
  br i1 %cmp840, label %land.lhs.true.842, label %lor.rhs.845

land.lhs.true.842:                                ; preds = %lor.lhs.false.839
  %419 = load i32, i32* %ln, align 4
  %cmp843 = icmp sle i32 %419, 57
  br i1 %cmp843, label %lor.end.848, label %lor.rhs.845

lor.rhs.845:                                      ; preds = %land.lhs.true.842, %lor.lhs.false.839
  %420 = load i32, i32* %ln, align 4
  %cmp846 = icmp eq i32 %420, 95
  br label %lor.end.848

lor.end.848:                                      ; preds = %lor.rhs.845, %land.lhs.true.842, %land.lhs.true.836, %land.lhs.true.830
  %421 = phi i1 [ true, %land.lhs.true.842 ], [ true, %land.lhs.true.836 ], [ true, %land.lhs.true.830 ], [ %cmp846, %lor.rhs.845 ]
  %lor.ext = zext i1 %421 to i32
  store i32 %lor.ext, i32* %ln, align 4
  %422 = load i32, i32* %nextchr, align 4
  %cmp849 = icmp sge i32 %422, 65
  br i1 %cmp849, label %land.lhs.true.851, label %lor.lhs.false.854

land.lhs.true.851:                                ; preds = %lor.end.848
  %423 = load i32, i32* %nextchr, align 4
  %cmp852 = icmp sle i32 %423, 90
  br i1 %cmp852, label %lor.end.869, label %lor.lhs.false.854

lor.lhs.false.854:                                ; preds = %land.lhs.true.851, %lor.end.848
  %424 = load i32, i32* %nextchr, align 4
  %cmp855 = icmp sge i32 %424, 97
  br i1 %cmp855, label %land.lhs.true.857, label %lor.lhs.false.860

land.lhs.true.857:                                ; preds = %lor.lhs.false.854
  %425 = load i32, i32* %nextchr, align 4
  %cmp858 = icmp sle i32 %425, 122
  br i1 %cmp858, label %lor.end.869, label %lor.lhs.false.860

lor.lhs.false.860:                                ; preds = %land.lhs.true.857, %lor.lhs.false.854
  %426 = load i32, i32* %nextchr, align 4
  %cmp861 = icmp sge i32 %426, 48
  br i1 %cmp861, label %land.lhs.true.863, label %lor.rhs.866

land.lhs.true.863:                                ; preds = %lor.lhs.false.860
  %427 = load i32, i32* %nextchr, align 4
  %cmp864 = icmp sle i32 %427, 57
  br i1 %cmp864, label %lor.end.869, label %lor.rhs.866

lor.rhs.866:                                      ; preds = %land.lhs.true.863, %lor.lhs.false.860
  %428 = load i32, i32* %nextchr, align 4
  %cmp867 = icmp eq i32 %428, 95
  br label %lor.end.869

lor.end.869:                                      ; preds = %lor.rhs.866, %land.lhs.true.863, %land.lhs.true.857, %land.lhs.true.851
  %429 = phi i1 [ true, %land.lhs.true.863 ], [ true, %land.lhs.true.857 ], [ true, %land.lhs.true.851 ], [ %cmp867, %lor.rhs.866 ]
  %lor.ext870 = zext i1 %429 to i32
  store i32 %lor.ext870, i32* %n, align 4
  br label %if.end.906

if.else.871:                                      ; preds = %lor.lhs.false.822
  %430 = load i32, i32* %ln, align 4
  %and872 = and i32 %430, -128
  %cmp873 = icmp eq i32 %and872, 0
  br i1 %cmp873, label %land.rhs.875, label %land.end.887

land.rhs.875:                                     ; preds = %if.else.871
  %431 = load i32, i32* %ln, align 4
  %idxprom876 = sext i32 %431 to i64
  %call877 = call i16** @__ctype_b_loc()
  %432 = load i16*, i16** %call877, align 8
  %arrayidx878 = getelementptr inbounds i16, i16* %432, i64 %idxprom876
  %433 = load i16, i16* %arrayidx878, align 2
  %conv879 = zext i16 %433 to i32
  %and880 = and i32 %conv879, 8
  %tobool881 = icmp ne i32 %and880, 0
  br i1 %tobool881, label %lor.end.885, label %lor.rhs.882

lor.rhs.882:                                      ; preds = %land.rhs.875
  %434 = load i32, i32* %ln, align 4
  %cmp883 = icmp eq i32 %434, 95
  br label %lor.end.885

lor.end.885:                                      ; preds = %lor.rhs.882, %land.rhs.875
  %435 = phi i1 [ true, %land.rhs.875 ], [ %cmp883, %lor.rhs.882 ]
  br label %land.end.887

land.end.887:                                     ; preds = %lor.end.885, %if.else.871
  %436 = phi i1 [ false, %if.else.871 ], [ %435, %lor.end.885 ]
  %land.ext888 = zext i1 %436 to i32
  store i32 %land.ext888, i32* %ln, align 4
  %437 = load i32, i32* %nextchr, align 4
  %and889 = and i32 %437, -128
  %cmp890 = icmp eq i32 %and889, 0
  br i1 %cmp890, label %land.rhs.892, label %land.end.904

land.rhs.892:                                     ; preds = %land.end.887
  %438 = load i32, i32* %nextchr, align 4
  %idxprom893 = sext i32 %438 to i64
  %call894 = call i16** @__ctype_b_loc()
  %439 = load i16*, i16** %call894, align 8
  %arrayidx895 = getelementptr inbounds i16, i16* %439, i64 %idxprom893
  %440 = load i16, i16* %arrayidx895, align 2
  %conv896 = zext i16 %440 to i32
  %and897 = and i32 %conv896, 8
  %tobool898 = icmp ne i32 %and897, 0
  br i1 %tobool898, label %lor.end.902, label %lor.rhs.899

lor.rhs.899:                                      ; preds = %land.rhs.892
  %441 = load i32, i32* %nextchr, align 4
  %cmp900 = icmp eq i32 %441, 95
  br label %lor.end.902

lor.end.902:                                      ; preds = %lor.rhs.899, %land.rhs.892
  %442 = phi i1 [ true, %land.rhs.892 ], [ %cmp900, %lor.rhs.899 ]
  br label %land.end.904

land.end.904:                                     ; preds = %lor.end.902, %land.end.887
  %443 = phi i1 [ false, %land.end.887 ], [ %442, %lor.end.902 ]
  %land.ext905 = zext i1 %443 to i32
  store i32 %land.ext905, i32* %n, align 4
  br label %if.end.906

if.end.906:                                       ; preds = %land.end.904, %lor.end.869
  br label %if.end.907

if.end.907:                                       ; preds = %if.end.906, %if.end.808
  %444 = load i32, i32* %ln, align 4
  %tobool908 = icmp ne i32 %444, 0
  %lnot = xor i1 %tobool908, true
  %lnot.ext = zext i1 %lnot to i32
  %445 = load i32, i32* %n, align 4
  %tobool909 = icmp ne i32 %445, 0
  %lnot910 = xor i1 %tobool909, true
  %lnot.ext911 = zext i1 %lnot910 to i32
  %cmp912 = icmp eq i32 %lnot.ext, %lnot.ext911
  %conv913 = zext i1 %cmp912 to i32
  %446 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type914 = getelementptr inbounds %struct.regnode, %struct.regnode* %446, i32 0, i32 1
  %447 = load i8, i8* %type914, align 1
  %conv915 = zext i8 %447 to i32
  %cmp916 = icmp eq i32 %conv915, 9
  br i1 %cmp916, label %lor.end.923, label %lor.rhs.918

lor.rhs.918:                                      ; preds = %if.end.907
  %448 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type919 = getelementptr inbounds %struct.regnode, %struct.regnode* %448, i32 0, i32 1
  %449 = load i8, i8* %type919, align 1
  %conv920 = zext i8 %449 to i32
  %cmp921 = icmp eq i32 %conv920, 10
  br label %lor.end.923

lor.end.923:                                      ; preds = %lor.rhs.918, %if.end.907
  %450 = phi i1 [ true, %if.end.907 ], [ %cmp921, %lor.rhs.918 ]
  %lor.ext924 = zext i1 %450 to i32
  %cmp925 = icmp eq i32 %conv913, %lor.ext924
  br i1 %cmp925, label %if.then.927, label %if.end.928

if.then.927:                                      ; preds = %lor.end.923
  br label %no

if.end.928:                                       ; preds = %lor.end.923
  br label %sw.epilog

sw.bb.929:                                        ; preds = %if.end
  %451 = load i32, i32* @PL_reg_flags, align 4
  %or930 = or i32 %451, 1
  store i32 %or930, i32* @PL_reg_flags, align 4
  br label %sw.bb.931

sw.bb.931:                                        ; preds = %if.end, %sw.bb.929
  %452 = load i32, i32* %nextchr, align 4
  %tobool932 = icmp ne i32 %452, 0
  br i1 %tobool932, label %if.end.934, label %if.then.933

if.then.933:                                      ; preds = %sw.bb.931
  br label %no

if.end.934:                                       ; preds = %sw.bb.931
  %453 = load i8, i8* %do_utf8, align 1
  %tobool935 = icmp ne i8 %453, 0
  br i1 %tobool935, label %if.then.936, label %if.else.1024

if.then.936:                                      ; preds = %if.end.934
  %454 = load i32, i32* %nextchr, align 4
  %conv937 = trunc i32 %454 to i8
  %conv938 = zext i8 %conv937 to i32
  %and939 = and i32 %conv938, 128
  %tobool940 = icmp ne i32 %and939, 0
  br i1 %tobool940, label %if.then.941, label %if.end.989

if.then.941:                                      ; preds = %if.then.936
  %455 = load %struct.sv*, %struct.sv** @PL_utf8_space, align 8
  %tobool942 = icmp ne %struct.sv* %455, null
  br i1 %tobool942, label %if.end.945, label %if.then.943

if.then.943:                                      ; preds = %if.then.941
  call void @Perl_push_scope()
  call void @Perl_save_re_context()
  %call944 = call signext i8 @Perl_is_utf8_space(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0))
  call void @Perl_pop_scope()
  br label %if.end.945

if.end.945:                                       ; preds = %if.then.943, %if.then.941
  %456 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type946 = getelementptr inbounds %struct.regnode, %struct.regnode* %456, i32 0, i32 1
  %457 = load i8, i8* %type946, align 1
  %conv947 = zext i8 %457 to i32
  %cmp948 = icmp eq i32 %conv947, 22
  br i1 %cmp948, label %cond.true.950, label %cond.false.953

cond.true.950:                                    ; preds = %if.end.945
  %458 = load %struct.sv*, %struct.sv** @PL_utf8_space, align 8
  %459 = load i8*, i8** %locinput, align 8
  %460 = load i8, i8* %do_utf8, align 1
  %call951 = call i64 @Perl_swash_fetch(%struct.sv* %458, i8* %459, i8 signext %460)
  %tobool952 = icmp ne i64 %call951, 0
  br i1 %tobool952, label %if.end.982, label %if.then.981

cond.false.953:                                   ; preds = %if.end.945
  %461 = load i8*, i8** %locinput, align 8
  %call954 = call i64 @Perl_utf8_to_uvchr(i8* %461, i64* null)
  %cmp955 = icmp ult i64 %call954, 256
  br i1 %cmp955, label %cond.true.957, label %cond.false.973

cond.true.957:                                    ; preds = %cond.false.953
  %462 = load i8*, i8** %locinput, align 8
  %call958 = call i64 @Perl_utf8_to_uvchr(i8* %462, i64* null)
  %and959 = and i64 %call958, -128
  %cmp960 = icmp eq i64 %and959, 0
  br i1 %cmp960, label %land.rhs.962, label %land.end.971

land.rhs.962:                                     ; preds = %cond.true.957
  %463 = load i8*, i8** %locinput, align 8
  %call963 = call i64 @Perl_utf8_to_uvchr(i8* %463, i64* null)
  %conv964 = trunc i64 %call963 to i32
  %idxprom965 = sext i32 %conv964 to i64
  %call966 = call i16** @__ctype_b_loc()
  %464 = load i16*, i16** %call966, align 8
  %arrayidx967 = getelementptr inbounds i16, i16* %464, i64 %idxprom965
  %465 = load i16, i16* %arrayidx967, align 2
  %conv968 = zext i16 %465 to i32
  %and969 = and i32 %conv968, 8192
  %tobool970 = icmp ne i32 %and969, 0
  br label %land.end.971

land.end.971:                                     ; preds = %land.rhs.962, %cond.true.957
  %466 = phi i1 [ false, %cond.true.957 ], [ %tobool970, %land.rhs.962 ]
  %land.ext972 = zext i1 %466 to i32
  br label %cond.end.977

cond.false.973:                                   ; preds = %cond.false.953
  %467 = load i8*, i8** %locinput, align 8
  %call974 = call i64 @Perl_utf8_to_uvchr(i8* %467, i64* null)
  %call975 = call signext i8 @Perl_is_uni_space_lc(i64 %call974)
  %conv976 = sext i8 %call975 to i32
  br label %cond.end.977

cond.end.977:                                     ; preds = %cond.false.973, %land.end.971
  %cond978 = phi i32 [ %land.ext972, %land.end.971 ], [ %conv976, %cond.false.973 ]
  %conv979 = sext i32 %cond978 to i64
  %tobool980 = icmp ne i64 %conv979, 0
  br i1 %tobool980, label %if.end.982, label %if.then.981

if.then.981:                                      ; preds = %cond.end.977, %cond.true.950
  br label %no

if.end.982:                                       ; preds = %cond.end.977, %cond.true.950
  %468 = load i32, i32* %nextchr, align 4
  %idxprom983 = sext i32 %468 to i64
  %arrayidx984 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom983
  %469 = load i8, i8* %arrayidx984, align 1
  %conv985 = zext i8 %469 to i32
  %470 = load i8*, i8** %locinput, align 8
  %idx.ext986 = sext i32 %conv985 to i64
  %add.ptr987 = getelementptr inbounds i8, i8* %470, i64 %idx.ext986
  store i8* %add.ptr987, i8** %locinput, align 8
  %471 = load i8*, i8** %locinput, align 8
  %472 = load i8, i8* %471, align 1
  %conv988 = zext i8 %472 to i32
  store i32 %conv988, i32* %nextchr, align 4
  br label %sw.epilog

if.end.989:                                       ; preds = %if.then.936
  %473 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type990 = getelementptr inbounds %struct.regnode, %struct.regnode* %473, i32 0, i32 1
  %474 = load i8, i8* %type990, align 1
  %conv991 = zext i8 %474 to i32
  %cmp992 = icmp eq i32 %conv991, 22
  br i1 %cmp992, label %cond.true.994, label %cond.false.1009

cond.true.994:                                    ; preds = %if.end.989
  %475 = load i32, i32* %nextchr, align 4
  %cmp995 = icmp eq i32 %475, 32
  br i1 %cmp995, label %if.end.1021, label %lor.lhs.false.997

lor.lhs.false.997:                                ; preds = %cond.true.994
  %476 = load i32, i32* %nextchr, align 4
  %cmp998 = icmp eq i32 %476, 9
  br i1 %cmp998, label %if.end.1021, label %lor.lhs.false.1000

lor.lhs.false.1000:                               ; preds = %lor.lhs.false.997
  %477 = load i32, i32* %nextchr, align 4
  %cmp1001 = icmp eq i32 %477, 10
  br i1 %cmp1001, label %if.end.1021, label %lor.lhs.false.1003

lor.lhs.false.1003:                               ; preds = %lor.lhs.false.1000
  %478 = load i32, i32* %nextchr, align 4
  %cmp1004 = icmp eq i32 %478, 13
  br i1 %cmp1004, label %if.end.1021, label %lor.lhs.false.1006

lor.lhs.false.1006:                               ; preds = %lor.lhs.false.1003
  %479 = load i32, i32* %nextchr, align 4
  %cmp1007 = icmp eq i32 %479, 12
  br i1 %cmp1007, label %if.end.1021, label %if.then.1020

cond.false.1009:                                  ; preds = %if.end.989
  %480 = load i32, i32* %nextchr, align 4
  %and1010 = and i32 %480, -128
  %cmp1011 = icmp eq i32 %and1010, 0
  br i1 %cmp1011, label %land.lhs.true.1013, label %if.then.1020

land.lhs.true.1013:                               ; preds = %cond.false.1009
  %481 = load i32, i32* %nextchr, align 4
  %idxprom1014 = sext i32 %481 to i64
  %call1015 = call i16** @__ctype_b_loc()
  %482 = load i16*, i16** %call1015, align 8
  %arrayidx1016 = getelementptr inbounds i16, i16* %482, i64 %idxprom1014
  %483 = load i16, i16* %arrayidx1016, align 2
  %conv1017 = zext i16 %483 to i32
  %and1018 = and i32 %conv1017, 8192
  %tobool1019 = icmp ne i32 %and1018, 0
  br i1 %tobool1019, label %if.end.1021, label %if.then.1020

if.then.1020:                                     ; preds = %land.lhs.true.1013, %cond.false.1009, %lor.lhs.false.1006
  br label %no

if.end.1021:                                      ; preds = %land.lhs.true.1013, %lor.lhs.false.1006, %lor.lhs.false.1003, %lor.lhs.false.1000, %lor.lhs.false.997, %cond.true.994
  %484 = load i8*, i8** %locinput, align 8
  %incdec.ptr1022 = getelementptr inbounds i8, i8* %484, i32 1
  store i8* %incdec.ptr1022, i8** %locinput, align 8
  %485 = load i8, i8* %incdec.ptr1022, align 1
  %conv1023 = zext i8 %485 to i32
  store i32 %conv1023, i32* %nextchr, align 4
  br label %if.end.1059

if.else.1024:                                     ; preds = %if.end.934
  %486 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type1025 = getelementptr inbounds %struct.regnode, %struct.regnode* %486, i32 0, i32 1
  %487 = load i8, i8* %type1025, align 1
  %conv1026 = zext i8 %487 to i32
  %cmp1027 = icmp eq i32 %conv1026, 22
  br i1 %cmp1027, label %cond.true.1029, label %cond.false.1044

cond.true.1029:                                   ; preds = %if.else.1024
  %488 = load i32, i32* %nextchr, align 4
  %cmp1030 = icmp eq i32 %488, 32
  br i1 %cmp1030, label %if.end.1056, label %lor.lhs.false.1032

lor.lhs.false.1032:                               ; preds = %cond.true.1029
  %489 = load i32, i32* %nextchr, align 4
  %cmp1033 = icmp eq i32 %489, 9
  br i1 %cmp1033, label %if.end.1056, label %lor.lhs.false.1035

lor.lhs.false.1035:                               ; preds = %lor.lhs.false.1032
  %490 = load i32, i32* %nextchr, align 4
  %cmp1036 = icmp eq i32 %490, 10
  br i1 %cmp1036, label %if.end.1056, label %lor.lhs.false.1038

lor.lhs.false.1038:                               ; preds = %lor.lhs.false.1035
  %491 = load i32, i32* %nextchr, align 4
  %cmp1039 = icmp eq i32 %491, 13
  br i1 %cmp1039, label %if.end.1056, label %lor.lhs.false.1041

lor.lhs.false.1041:                               ; preds = %lor.lhs.false.1038
  %492 = load i32, i32* %nextchr, align 4
  %cmp1042 = icmp eq i32 %492, 12
  br i1 %cmp1042, label %if.end.1056, label %if.then.1055

cond.false.1044:                                  ; preds = %if.else.1024
  %493 = load i32, i32* %nextchr, align 4
  %and1045 = and i32 %493, -128
  %cmp1046 = icmp eq i32 %and1045, 0
  br i1 %cmp1046, label %land.lhs.true.1048, label %if.then.1055

land.lhs.true.1048:                               ; preds = %cond.false.1044
  %494 = load i32, i32* %nextchr, align 4
  %idxprom1049 = sext i32 %494 to i64
  %call1050 = call i16** @__ctype_b_loc()
  %495 = load i16*, i16** %call1050, align 8
  %arrayidx1051 = getelementptr inbounds i16, i16* %495, i64 %idxprom1049
  %496 = load i16, i16* %arrayidx1051, align 2
  %conv1052 = zext i16 %496 to i32
  %and1053 = and i32 %conv1052, 8192
  %tobool1054 = icmp ne i32 %and1053, 0
  br i1 %tobool1054, label %if.end.1056, label %if.then.1055

if.then.1055:                                     ; preds = %land.lhs.true.1048, %cond.false.1044, %lor.lhs.false.1041
  br label %no

if.end.1056:                                      ; preds = %land.lhs.true.1048, %lor.lhs.false.1041, %lor.lhs.false.1038, %lor.lhs.false.1035, %lor.lhs.false.1032, %cond.true.1029
  %497 = load i8*, i8** %locinput, align 8
  %incdec.ptr1057 = getelementptr inbounds i8, i8* %497, i32 1
  store i8* %incdec.ptr1057, i8** %locinput, align 8
  %498 = load i8, i8* %incdec.ptr1057, align 1
  %conv1058 = zext i8 %498 to i32
  store i32 %conv1058, i32* %nextchr, align 4
  br label %if.end.1059

if.end.1059:                                      ; preds = %if.end.1056, %if.end.1021
  br label %sw.epilog

sw.bb.1060:                                       ; preds = %if.end
  %499 = load i32, i32* @PL_reg_flags, align 4
  %or1061 = or i32 %499, 1
  store i32 %or1061, i32* @PL_reg_flags, align 4
  br label %sw.bb.1062

sw.bb.1062:                                       ; preds = %if.end, %sw.bb.1060
  %500 = load i32, i32* %nextchr, align 4
  %tobool1063 = icmp ne i32 %500, 0
  br i1 %tobool1063, label %if.end.1068, label %land.lhs.true.1064

land.lhs.true.1064:                               ; preds = %sw.bb.1062
  %501 = load i8*, i8** %locinput, align 8
  %502 = load i8*, i8** @PL_regeol, align 8
  %cmp1065 = icmp uge i8* %501, %502
  br i1 %cmp1065, label %if.then.1067, label %if.end.1068

if.then.1067:                                     ; preds = %land.lhs.true.1064
  br label %no

if.end.1068:                                      ; preds = %land.lhs.true.1064, %sw.bb.1062
  %503 = load i8, i8* %do_utf8, align 1
  %tobool1069 = icmp ne i8 %503, 0
  br i1 %tobool1069, label %if.then.1070, label %if.end.1118

if.then.1070:                                     ; preds = %if.end.1068
  %504 = load %struct.sv*, %struct.sv** @PL_utf8_space, align 8
  %tobool1071 = icmp ne %struct.sv* %504, null
  br i1 %tobool1071, label %if.end.1074, label %if.then.1072

if.then.1072:                                     ; preds = %if.then.1070
  call void @Perl_push_scope()
  call void @Perl_save_re_context()
  %call1073 = call signext i8 @Perl_is_utf8_space(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0))
  call void @Perl_pop_scope()
  br label %if.end.1074

if.end.1074:                                      ; preds = %if.then.1072, %if.then.1070
  %505 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type1075 = getelementptr inbounds %struct.regnode, %struct.regnode* %505, i32 0, i32 1
  %506 = load i8, i8* %type1075, align 1
  %conv1076 = zext i8 %506 to i32
  %cmp1077 = icmp eq i32 %conv1076, 24
  br i1 %cmp1077, label %cond.true.1079, label %cond.false.1082

cond.true.1079:                                   ; preds = %if.end.1074
  %507 = load %struct.sv*, %struct.sv** @PL_utf8_space, align 8
  %508 = load i8*, i8** %locinput, align 8
  %509 = load i8, i8* %do_utf8, align 1
  %call1080 = call i64 @Perl_swash_fetch(%struct.sv* %507, i8* %508, i8 signext %509)
  %tobool1081 = icmp ne i64 %call1080, 0
  br i1 %tobool1081, label %if.then.1110, label %if.end.1111

cond.false.1082:                                  ; preds = %if.end.1074
  %510 = load i8*, i8** %locinput, align 8
  %call1083 = call i64 @Perl_utf8_to_uvchr(i8* %510, i64* null)
  %cmp1084 = icmp ult i64 %call1083, 256
  br i1 %cmp1084, label %cond.true.1086, label %cond.false.1102

cond.true.1086:                                   ; preds = %cond.false.1082
  %511 = load i8*, i8** %locinput, align 8
  %call1087 = call i64 @Perl_utf8_to_uvchr(i8* %511, i64* null)
  %and1088 = and i64 %call1087, -128
  %cmp1089 = icmp eq i64 %and1088, 0
  br i1 %cmp1089, label %land.rhs.1091, label %land.end.1100

land.rhs.1091:                                    ; preds = %cond.true.1086
  %512 = load i8*, i8** %locinput, align 8
  %call1092 = call i64 @Perl_utf8_to_uvchr(i8* %512, i64* null)
  %conv1093 = trunc i64 %call1092 to i32
  %idxprom1094 = sext i32 %conv1093 to i64
  %call1095 = call i16** @__ctype_b_loc()
  %513 = load i16*, i16** %call1095, align 8
  %arrayidx1096 = getelementptr inbounds i16, i16* %513, i64 %idxprom1094
  %514 = load i16, i16* %arrayidx1096, align 2
  %conv1097 = zext i16 %514 to i32
  %and1098 = and i32 %conv1097, 8192
  %tobool1099 = icmp ne i32 %and1098, 0
  br label %land.end.1100

land.end.1100:                                    ; preds = %land.rhs.1091, %cond.true.1086
  %515 = phi i1 [ false, %cond.true.1086 ], [ %tobool1099, %land.rhs.1091 ]
  %land.ext1101 = zext i1 %515 to i32
  br label %cond.end.1106

cond.false.1102:                                  ; preds = %cond.false.1082
  %516 = load i8*, i8** %locinput, align 8
  %call1103 = call i64 @Perl_utf8_to_uvchr(i8* %516, i64* null)
  %call1104 = call signext i8 @Perl_is_uni_space_lc(i64 %call1103)
  %conv1105 = sext i8 %call1104 to i32
  br label %cond.end.1106

cond.end.1106:                                    ; preds = %cond.false.1102, %land.end.1100
  %cond1107 = phi i32 [ %land.ext1101, %land.end.1100 ], [ %conv1105, %cond.false.1102 ]
  %conv1108 = sext i32 %cond1107 to i64
  %tobool1109 = icmp ne i64 %conv1108, 0
  br i1 %tobool1109, label %if.then.1110, label %if.end.1111

if.then.1110:                                     ; preds = %cond.end.1106, %cond.true.1079
  br label %no

if.end.1111:                                      ; preds = %cond.end.1106, %cond.true.1079
  %517 = load i32, i32* %nextchr, align 4
  %idxprom1112 = sext i32 %517 to i64
  %arrayidx1113 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom1112
  %518 = load i8, i8* %arrayidx1113, align 1
  %conv1114 = zext i8 %518 to i32
  %519 = load i8*, i8** %locinput, align 8
  %idx.ext1115 = sext i32 %conv1114 to i64
  %add.ptr1116 = getelementptr inbounds i8, i8* %519, i64 %idx.ext1115
  store i8* %add.ptr1116, i8** %locinput, align 8
  %520 = load i8*, i8** %locinput, align 8
  %521 = load i8, i8* %520, align 1
  %conv1117 = zext i8 %521 to i32
  store i32 %conv1117, i32* %nextchr, align 4
  br label %sw.epilog

if.end.1118:                                      ; preds = %if.end.1068
  %522 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type1119 = getelementptr inbounds %struct.regnode, %struct.regnode* %522, i32 0, i32 1
  %523 = load i8, i8* %type1119, align 1
  %conv1120 = zext i8 %523 to i32
  %cmp1121 = icmp eq i32 %conv1120, 24
  br i1 %cmp1121, label %cond.true.1123, label %cond.false.1138

cond.true.1123:                                   ; preds = %if.end.1118
  %524 = load i32, i32* %nextchr, align 4
  %cmp1124 = icmp eq i32 %524, 32
  br i1 %cmp1124, label %if.then.1149, label %lor.lhs.false.1126

lor.lhs.false.1126:                               ; preds = %cond.true.1123
  %525 = load i32, i32* %nextchr, align 4
  %cmp1127 = icmp eq i32 %525, 9
  br i1 %cmp1127, label %if.then.1149, label %lor.lhs.false.1129

lor.lhs.false.1129:                               ; preds = %lor.lhs.false.1126
  %526 = load i32, i32* %nextchr, align 4
  %cmp1130 = icmp eq i32 %526, 10
  br i1 %cmp1130, label %if.then.1149, label %lor.lhs.false.1132

lor.lhs.false.1132:                               ; preds = %lor.lhs.false.1129
  %527 = load i32, i32* %nextchr, align 4
  %cmp1133 = icmp eq i32 %527, 13
  br i1 %cmp1133, label %if.then.1149, label %lor.lhs.false.1135

lor.lhs.false.1135:                               ; preds = %lor.lhs.false.1132
  %528 = load i32, i32* %nextchr, align 4
  %cmp1136 = icmp eq i32 %528, 12
  br i1 %cmp1136, label %if.then.1149, label %if.end.1150

cond.false.1138:                                  ; preds = %if.end.1118
  %529 = load i32, i32* %nextchr, align 4
  %and1139 = and i32 %529, -128
  %cmp1140 = icmp eq i32 %and1139, 0
  br i1 %cmp1140, label %land.lhs.true.1142, label %if.end.1150

land.lhs.true.1142:                               ; preds = %cond.false.1138
  %530 = load i32, i32* %nextchr, align 4
  %idxprom1143 = sext i32 %530 to i64
  %call1144 = call i16** @__ctype_b_loc()
  %531 = load i16*, i16** %call1144, align 8
  %arrayidx1145 = getelementptr inbounds i16, i16* %531, i64 %idxprom1143
  %532 = load i16, i16* %arrayidx1145, align 2
  %conv1146 = zext i16 %532 to i32
  %and1147 = and i32 %conv1146, 8192
  %tobool1148 = icmp ne i32 %and1147, 0
  br i1 %tobool1148, label %if.then.1149, label %if.end.1150

if.then.1149:                                     ; preds = %land.lhs.true.1142, %lor.lhs.false.1135, %lor.lhs.false.1132, %lor.lhs.false.1129, %lor.lhs.false.1126, %cond.true.1123
  br label %no

if.end.1150:                                      ; preds = %land.lhs.true.1142, %cond.false.1138, %lor.lhs.false.1135
  %533 = load i8*, i8** %locinput, align 8
  %incdec.ptr1151 = getelementptr inbounds i8, i8* %533, i32 1
  store i8* %incdec.ptr1151, i8** %locinput, align 8
  %534 = load i8, i8* %incdec.ptr1151, align 1
  %conv1152 = zext i8 %534 to i32
  store i32 %conv1152, i32* %nextchr, align 4
  br label %sw.epilog

sw.bb.1153:                                       ; preds = %if.end
  %535 = load i32, i32* @PL_reg_flags, align 4
  %or1154 = or i32 %535, 1
  store i32 %or1154, i32* @PL_reg_flags, align 4
  br label %sw.bb.1155

sw.bb.1155:                                       ; preds = %if.end, %sw.bb.1153
  %536 = load i32, i32* %nextchr, align 4
  %tobool1156 = icmp ne i32 %536, 0
  br i1 %tobool1156, label %if.end.1158, label %if.then.1157

if.then.1157:                                     ; preds = %sw.bb.1155
  br label %no

if.end.1158:                                      ; preds = %sw.bb.1155
  %537 = load i8, i8* %do_utf8, align 1
  %tobool1159 = icmp ne i8 %537, 0
  br i1 %tobool1159, label %if.then.1160, label %if.end.1208

if.then.1160:                                     ; preds = %if.end.1158
  %538 = load %struct.sv*, %struct.sv** @PL_utf8_digit, align 8
  %tobool1161 = icmp ne %struct.sv* %538, null
  br i1 %tobool1161, label %if.end.1164, label %if.then.1162

if.then.1162:                                     ; preds = %if.then.1160
  call void @Perl_push_scope()
  call void @Perl_save_re_context()
  %call1163 = call signext i8 @Perl_is_utf8_digit(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
  call void @Perl_pop_scope()
  br label %if.end.1164

if.end.1164:                                      ; preds = %if.then.1162, %if.then.1160
  %539 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type1165 = getelementptr inbounds %struct.regnode, %struct.regnode* %539, i32 0, i32 1
  %540 = load i8, i8* %type1165, align 1
  %conv1166 = zext i8 %540 to i32
  %cmp1167 = icmp eq i32 %conv1166, 26
  br i1 %cmp1167, label %cond.true.1169, label %cond.false.1172

cond.true.1169:                                   ; preds = %if.end.1164
  %541 = load %struct.sv*, %struct.sv** @PL_utf8_digit, align 8
  %542 = load i8*, i8** %locinput, align 8
  %543 = load i8, i8* %do_utf8, align 1
  %call1170 = call i64 @Perl_swash_fetch(%struct.sv* %541, i8* %542, i8 signext %543)
  %tobool1171 = icmp ne i64 %call1170, 0
  br i1 %tobool1171, label %if.end.1201, label %if.then.1200

cond.false.1172:                                  ; preds = %if.end.1164
  %544 = load i8*, i8** %locinput, align 8
  %call1173 = call i64 @Perl_utf8_to_uvchr(i8* %544, i64* null)
  %cmp1174 = icmp ult i64 %call1173, 256
  br i1 %cmp1174, label %cond.true.1176, label %cond.false.1192

cond.true.1176:                                   ; preds = %cond.false.1172
  %545 = load i8*, i8** %locinput, align 8
  %call1177 = call i64 @Perl_utf8_to_uvchr(i8* %545, i64* null)
  %and1178 = and i64 %call1177, -128
  %cmp1179 = icmp eq i64 %and1178, 0
  br i1 %cmp1179, label %land.rhs.1181, label %land.end.1190

land.rhs.1181:                                    ; preds = %cond.true.1176
  %546 = load i8*, i8** %locinput, align 8
  %call1182 = call i64 @Perl_utf8_to_uvchr(i8* %546, i64* null)
  %conv1183 = trunc i64 %call1182 to i32
  %idxprom1184 = sext i32 %conv1183 to i64
  %call1185 = call i16** @__ctype_b_loc()
  %547 = load i16*, i16** %call1185, align 8
  %arrayidx1186 = getelementptr inbounds i16, i16* %547, i64 %idxprom1184
  %548 = load i16, i16* %arrayidx1186, align 2
  %conv1187 = zext i16 %548 to i32
  %and1188 = and i32 %conv1187, 2048
  %tobool1189 = icmp ne i32 %and1188, 0
  br label %land.end.1190

land.end.1190:                                    ; preds = %land.rhs.1181, %cond.true.1176
  %549 = phi i1 [ false, %cond.true.1176 ], [ %tobool1189, %land.rhs.1181 ]
  %land.ext1191 = zext i1 %549 to i32
  br label %cond.end.1196

cond.false.1192:                                  ; preds = %cond.false.1172
  %550 = load i8*, i8** %locinput, align 8
  %call1193 = call i64 @Perl_utf8_to_uvchr(i8* %550, i64* null)
  %call1194 = call signext i8 @Perl_is_uni_digit_lc(i64 %call1193)
  %conv1195 = sext i8 %call1194 to i32
  br label %cond.end.1196

cond.end.1196:                                    ; preds = %cond.false.1192, %land.end.1190
  %cond1197 = phi i32 [ %land.ext1191, %land.end.1190 ], [ %conv1195, %cond.false.1192 ]
  %conv1198 = sext i32 %cond1197 to i64
  %tobool1199 = icmp ne i64 %conv1198, 0
  br i1 %tobool1199, label %if.end.1201, label %if.then.1200

if.then.1200:                                     ; preds = %cond.end.1196, %cond.true.1169
  br label %no

if.end.1201:                                      ; preds = %cond.end.1196, %cond.true.1169
  %551 = load i32, i32* %nextchr, align 4
  %idxprom1202 = sext i32 %551 to i64
  %arrayidx1203 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom1202
  %552 = load i8, i8* %arrayidx1203, align 1
  %conv1204 = zext i8 %552 to i32
  %553 = load i8*, i8** %locinput, align 8
  %idx.ext1205 = sext i32 %conv1204 to i64
  %add.ptr1206 = getelementptr inbounds i8, i8* %553, i64 %idx.ext1205
  store i8* %add.ptr1206, i8** %locinput, align 8
  %554 = load i8*, i8** %locinput, align 8
  %555 = load i8, i8* %554, align 1
  %conv1207 = zext i8 %555 to i32
  store i32 %conv1207, i32* %nextchr, align 4
  br label %sw.epilog

if.end.1208:                                      ; preds = %if.end.1158
  %556 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type1209 = getelementptr inbounds %struct.regnode, %struct.regnode* %556, i32 0, i32 1
  %557 = load i8, i8* %type1209, align 1
  %conv1210 = zext i8 %557 to i32
  %cmp1211 = icmp eq i32 %conv1210, 26
  br i1 %cmp1211, label %cond.true.1213, label %cond.false.1219

cond.true.1213:                                   ; preds = %if.end.1208
  %558 = load i32, i32* %nextchr, align 4
  %cmp1214 = icmp sge i32 %558, 48
  br i1 %cmp1214, label %land.lhs.true.1216, label %if.then.1230

land.lhs.true.1216:                               ; preds = %cond.true.1213
  %559 = load i32, i32* %nextchr, align 4
  %cmp1217 = icmp sle i32 %559, 57
  br i1 %cmp1217, label %if.end.1231, label %if.then.1230

cond.false.1219:                                  ; preds = %if.end.1208
  %560 = load i32, i32* %nextchr, align 4
  %and1220 = and i32 %560, -128
  %cmp1221 = icmp eq i32 %and1220, 0
  br i1 %cmp1221, label %land.lhs.true.1223, label %if.then.1230

land.lhs.true.1223:                               ; preds = %cond.false.1219
  %561 = load i32, i32* %nextchr, align 4
  %idxprom1224 = sext i32 %561 to i64
  %call1225 = call i16** @__ctype_b_loc()
  %562 = load i16*, i16** %call1225, align 8
  %arrayidx1226 = getelementptr inbounds i16, i16* %562, i64 %idxprom1224
  %563 = load i16, i16* %arrayidx1226, align 2
  %conv1227 = zext i16 %563 to i32
  %and1228 = and i32 %conv1227, 2048
  %tobool1229 = icmp ne i32 %and1228, 0
  br i1 %tobool1229, label %if.end.1231, label %if.then.1230

if.then.1230:                                     ; preds = %land.lhs.true.1223, %cond.false.1219, %land.lhs.true.1216, %cond.true.1213
  br label %no

if.end.1231:                                      ; preds = %land.lhs.true.1223, %land.lhs.true.1216
  %564 = load i8*, i8** %locinput, align 8
  %incdec.ptr1232 = getelementptr inbounds i8, i8* %564, i32 1
  store i8* %incdec.ptr1232, i8** %locinput, align 8
  %565 = load i8, i8* %incdec.ptr1232, align 1
  %conv1233 = zext i8 %565 to i32
  store i32 %conv1233, i32* %nextchr, align 4
  br label %sw.epilog

sw.bb.1234:                                       ; preds = %if.end
  %566 = load i32, i32* @PL_reg_flags, align 4
  %or1235 = or i32 %566, 1
  store i32 %or1235, i32* @PL_reg_flags, align 4
  br label %sw.bb.1236

sw.bb.1236:                                       ; preds = %if.end, %sw.bb.1234
  %567 = load i32, i32* %nextchr, align 4
  %tobool1237 = icmp ne i32 %567, 0
  br i1 %tobool1237, label %if.end.1242, label %land.lhs.true.1238

land.lhs.true.1238:                               ; preds = %sw.bb.1236
  %568 = load i8*, i8** %locinput, align 8
  %569 = load i8*, i8** @PL_regeol, align 8
  %cmp1239 = icmp uge i8* %568, %569
  br i1 %cmp1239, label %if.then.1241, label %if.end.1242

if.then.1241:                                     ; preds = %land.lhs.true.1238
  br label %no

if.end.1242:                                      ; preds = %land.lhs.true.1238, %sw.bb.1236
  %570 = load i8, i8* %do_utf8, align 1
  %tobool1243 = icmp ne i8 %570, 0
  br i1 %tobool1243, label %if.then.1244, label %if.end.1292

if.then.1244:                                     ; preds = %if.end.1242
  %571 = load %struct.sv*, %struct.sv** @PL_utf8_digit, align 8
  %tobool1245 = icmp ne %struct.sv* %571, null
  br i1 %tobool1245, label %if.end.1248, label %if.then.1246

if.then.1246:                                     ; preds = %if.then.1244
  call void @Perl_push_scope()
  call void @Perl_save_re_context()
  %call1247 = call signext i8 @Perl_is_utf8_digit(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
  call void @Perl_pop_scope()
  br label %if.end.1248

if.end.1248:                                      ; preds = %if.then.1246, %if.then.1244
  %572 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type1249 = getelementptr inbounds %struct.regnode, %struct.regnode* %572, i32 0, i32 1
  %573 = load i8, i8* %type1249, align 1
  %conv1250 = zext i8 %573 to i32
  %cmp1251 = icmp eq i32 %conv1250, 28
  br i1 %cmp1251, label %cond.true.1253, label %cond.false.1256

cond.true.1253:                                   ; preds = %if.end.1248
  %574 = load %struct.sv*, %struct.sv** @PL_utf8_digit, align 8
  %575 = load i8*, i8** %locinput, align 8
  %576 = load i8, i8* %do_utf8, align 1
  %call1254 = call i64 @Perl_swash_fetch(%struct.sv* %574, i8* %575, i8 signext %576)
  %tobool1255 = icmp ne i64 %call1254, 0
  br i1 %tobool1255, label %if.then.1284, label %if.end.1285

cond.false.1256:                                  ; preds = %if.end.1248
  %577 = load i8*, i8** %locinput, align 8
  %call1257 = call i64 @Perl_utf8_to_uvchr(i8* %577, i64* null)
  %cmp1258 = icmp ult i64 %call1257, 256
  br i1 %cmp1258, label %cond.true.1260, label %cond.false.1276

cond.true.1260:                                   ; preds = %cond.false.1256
  %578 = load i8*, i8** %locinput, align 8
  %call1261 = call i64 @Perl_utf8_to_uvchr(i8* %578, i64* null)
  %and1262 = and i64 %call1261, -128
  %cmp1263 = icmp eq i64 %and1262, 0
  br i1 %cmp1263, label %land.rhs.1265, label %land.end.1274

land.rhs.1265:                                    ; preds = %cond.true.1260
  %579 = load i8*, i8** %locinput, align 8
  %call1266 = call i64 @Perl_utf8_to_uvchr(i8* %579, i64* null)
  %conv1267 = trunc i64 %call1266 to i32
  %idxprom1268 = sext i32 %conv1267 to i64
  %call1269 = call i16** @__ctype_b_loc()
  %580 = load i16*, i16** %call1269, align 8
  %arrayidx1270 = getelementptr inbounds i16, i16* %580, i64 %idxprom1268
  %581 = load i16, i16* %arrayidx1270, align 2
  %conv1271 = zext i16 %581 to i32
  %and1272 = and i32 %conv1271, 2048
  %tobool1273 = icmp ne i32 %and1272, 0
  br label %land.end.1274

land.end.1274:                                    ; preds = %land.rhs.1265, %cond.true.1260
  %582 = phi i1 [ false, %cond.true.1260 ], [ %tobool1273, %land.rhs.1265 ]
  %land.ext1275 = zext i1 %582 to i32
  br label %cond.end.1280

cond.false.1276:                                  ; preds = %cond.false.1256
  %583 = load i8*, i8** %locinput, align 8
  %call1277 = call i64 @Perl_utf8_to_uvchr(i8* %583, i64* null)
  %call1278 = call signext i8 @Perl_is_uni_digit_lc(i64 %call1277)
  %conv1279 = sext i8 %call1278 to i32
  br label %cond.end.1280

cond.end.1280:                                    ; preds = %cond.false.1276, %land.end.1274
  %cond1281 = phi i32 [ %land.ext1275, %land.end.1274 ], [ %conv1279, %cond.false.1276 ]
  %conv1282 = sext i32 %cond1281 to i64
  %tobool1283 = icmp ne i64 %conv1282, 0
  br i1 %tobool1283, label %if.then.1284, label %if.end.1285

if.then.1284:                                     ; preds = %cond.end.1280, %cond.true.1253
  br label %no

if.end.1285:                                      ; preds = %cond.end.1280, %cond.true.1253
  %584 = load i32, i32* %nextchr, align 4
  %idxprom1286 = sext i32 %584 to i64
  %arrayidx1287 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom1286
  %585 = load i8, i8* %arrayidx1287, align 1
  %conv1288 = zext i8 %585 to i32
  %586 = load i8*, i8** %locinput, align 8
  %idx.ext1289 = sext i32 %conv1288 to i64
  %add.ptr1290 = getelementptr inbounds i8, i8* %586, i64 %idx.ext1289
  store i8* %add.ptr1290, i8** %locinput, align 8
  %587 = load i8*, i8** %locinput, align 8
  %588 = load i8, i8* %587, align 1
  %conv1291 = zext i8 %588 to i32
  store i32 %conv1291, i32* %nextchr, align 4
  br label %sw.epilog

if.end.1292:                                      ; preds = %if.end.1242
  %589 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type1293 = getelementptr inbounds %struct.regnode, %struct.regnode* %589, i32 0, i32 1
  %590 = load i8, i8* %type1293, align 1
  %conv1294 = zext i8 %590 to i32
  %cmp1295 = icmp eq i32 %conv1294, 28
  br i1 %cmp1295, label %cond.true.1297, label %cond.false.1303

cond.true.1297:                                   ; preds = %if.end.1292
  %591 = load i32, i32* %nextchr, align 4
  %cmp1298 = icmp sge i32 %591, 48
  br i1 %cmp1298, label %land.lhs.true.1300, label %if.end.1315

land.lhs.true.1300:                               ; preds = %cond.true.1297
  %592 = load i32, i32* %nextchr, align 4
  %cmp1301 = icmp sle i32 %592, 57
  br i1 %cmp1301, label %if.then.1314, label %if.end.1315

cond.false.1303:                                  ; preds = %if.end.1292
  %593 = load i32, i32* %nextchr, align 4
  %and1304 = and i32 %593, -128
  %cmp1305 = icmp eq i32 %and1304, 0
  br i1 %cmp1305, label %land.lhs.true.1307, label %if.end.1315

land.lhs.true.1307:                               ; preds = %cond.false.1303
  %594 = load i32, i32* %nextchr, align 4
  %idxprom1308 = sext i32 %594 to i64
  %call1309 = call i16** @__ctype_b_loc()
  %595 = load i16*, i16** %call1309, align 8
  %arrayidx1310 = getelementptr inbounds i16, i16* %595, i64 %idxprom1308
  %596 = load i16, i16* %arrayidx1310, align 2
  %conv1311 = zext i16 %596 to i32
  %and1312 = and i32 %conv1311, 2048
  %tobool1313 = icmp ne i32 %and1312, 0
  br i1 %tobool1313, label %if.then.1314, label %if.end.1315

if.then.1314:                                     ; preds = %land.lhs.true.1307, %land.lhs.true.1300
  br label %no

if.end.1315:                                      ; preds = %land.lhs.true.1307, %cond.false.1303, %land.lhs.true.1300, %cond.true.1297
  %597 = load i8*, i8** %locinput, align 8
  %incdec.ptr1316 = getelementptr inbounds i8, i8* %597, i32 1
  store i8* %incdec.ptr1316, i8** %locinput, align 8
  %598 = load i8, i8* %incdec.ptr1316, align 1
  %conv1317 = zext i8 %598 to i32
  store i32 %conv1317, i32* %nextchr, align 4
  br label %sw.epilog

sw.bb.1318:                                       ; preds = %if.end
  %599 = load i8*, i8** %locinput, align 8
  %600 = load i8*, i8** @PL_regeol, align 8
  %cmp1319 = icmp uge i8* %599, %600
  br i1 %cmp1319, label %if.then.1321, label %if.end.1322

if.then.1321:                                     ; preds = %sw.bb.1318
  br label %no

if.end.1322:                                      ; preds = %sw.bb.1318
  %601 = load i8, i8* %do_utf8, align 1
  %tobool1323 = icmp ne i8 %601, 0
  br i1 %tobool1323, label %if.then.1324, label %if.else.1357

if.then.1324:                                     ; preds = %if.end.1322
  %602 = load %struct.sv*, %struct.sv** @PL_utf8_mark, align 8
  %tobool1325 = icmp ne %struct.sv* %602, null
  br i1 %tobool1325, label %if.end.1328, label %if.then.1326

if.then.1326:                                     ; preds = %if.then.1324
  call void @Perl_push_scope()
  call void @Perl_save_re_context()
  %call1327 = call signext i8 @Perl_is_utf8_mark(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0))
  call void @Perl_pop_scope()
  br label %if.end.1328

if.end.1328:                                      ; preds = %if.then.1326, %if.then.1324
  %603 = load %struct.sv*, %struct.sv** @PL_utf8_mark, align 8
  %604 = load i8*, i8** %locinput, align 8
  %605 = load i8, i8* %do_utf8, align 1
  %call1329 = call i64 @Perl_swash_fetch(%struct.sv* %603, i8* %604, i8 signext %605)
  %tobool1330 = icmp ne i64 %call1329, 0
  br i1 %tobool1330, label %if.then.1331, label %if.end.1332

if.then.1331:                                     ; preds = %if.end.1328
  br label %no

if.end.1332:                                      ; preds = %if.end.1328
  %606 = load i32, i32* %nextchr, align 4
  %idxprom1333 = sext i32 %606 to i64
  %arrayidx1334 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom1333
  %607 = load i8, i8* %arrayidx1334, align 1
  %conv1335 = zext i8 %607 to i32
  %608 = load i8*, i8** %locinput, align 8
  %idx.ext1336 = sext i32 %conv1335 to i64
  %add.ptr1337 = getelementptr inbounds i8, i8* %608, i64 %idx.ext1336
  store i8* %add.ptr1337, i8** %locinput, align 8
  br label %while.cond.1338

while.cond.1338:                                  ; preds = %while.body.1346, %if.end.1332
  %609 = load i8*, i8** %locinput, align 8
  %610 = load i8*, i8** @PL_regeol, align 8
  %cmp1339 = icmp ult i8* %609, %610
  br i1 %cmp1339, label %land.rhs.1341, label %land.end.1344

land.rhs.1341:                                    ; preds = %while.cond.1338
  %611 = load %struct.sv*, %struct.sv** @PL_utf8_mark, align 8
  %612 = load i8*, i8** %locinput, align 8
  %613 = load i8, i8* %do_utf8, align 1
  %call1342 = call i64 @Perl_swash_fetch(%struct.sv* %611, i8* %612, i8 signext %613)
  %tobool1343 = icmp ne i64 %call1342, 0
  br label %land.end.1344

land.end.1344:                                    ; preds = %land.rhs.1341, %while.cond.1338
  %614 = phi i1 [ false, %while.cond.1338 ], [ %tobool1343, %land.rhs.1341 ]
  br i1 %614, label %while.body.1346, label %while.end.1352

while.body.1346:                                  ; preds = %land.end.1344
  %615 = load i8*, i8** %locinput, align 8
  %616 = load i8, i8* %615, align 1
  %idxprom1347 = zext i8 %616 to i64
  %arrayidx1348 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom1347
  %617 = load i8, i8* %arrayidx1348, align 1
  %conv1349 = zext i8 %617 to i32
  %618 = load i8*, i8** %locinput, align 8
  %idx.ext1350 = sext i32 %conv1349 to i64
  %add.ptr1351 = getelementptr inbounds i8, i8* %618, i64 %idx.ext1350
  store i8* %add.ptr1351, i8** %locinput, align 8
  br label %while.cond.1338

while.end.1352:                                   ; preds = %land.end.1344
  %619 = load i8*, i8** %locinput, align 8
  %620 = load i8*, i8** @PL_regeol, align 8
  %cmp1353 = icmp ugt i8* %619, %620
  br i1 %cmp1353, label %if.then.1355, label %if.end.1356

if.then.1355:                                     ; preds = %while.end.1352
  br label %no

if.end.1356:                                      ; preds = %while.end.1352
  br label %if.end.1359

if.else.1357:                                     ; preds = %if.end.1322
  %621 = load i8*, i8** %locinput, align 8
  %incdec.ptr1358 = getelementptr inbounds i8, i8* %621, i32 1
  store i8* %incdec.ptr1358, i8** %locinput, align 8
  br label %if.end.1359

if.end.1359:                                      ; preds = %if.else.1357, %if.end.1356
  %622 = load i8*, i8** %locinput, align 8
  %623 = load i8, i8* %622, align 1
  %conv1360 = zext i8 %623 to i32
  store i32 %conv1360, i32* %nextchr, align 4
  br label %sw.epilog

sw.bb.1361:                                       ; preds = %if.end
  %624 = load i32, i32* @PL_reg_flags, align 4
  %or1362 = or i32 %624, 1
  store i32 %or1362, i32* @PL_reg_flags, align 4
  br label %sw.bb.1363

sw.bb.1363:                                       ; preds = %if.end, %if.end, %sw.bb.1361
  %625 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %626 = bitcast %struct.regnode* %625 to %struct.regnode_1*
  %arg1 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %626, i32 0, i32 3
  %627 = load i32, i32* %arg1, align 4
  store i32 %627, i32* %n, align 4
  %628 = load i32, i32* %n, align 4
  %idxprom1364 = sext i32 %628 to i64
  %629 = load i32*, i32** @PL_regstartp, align 8
  %arrayidx1365 = getelementptr inbounds i32, i32* %629, i64 %idxprom1364
  %630 = load i32, i32* %arrayidx1365, align 4
  store i32 %630, i32* %ln, align 4
  %631 = load i32, i32* @PL_reg_maxiter, align 4
  store i32 %631, i32* @PL_reg_leftiter, align 4
  %632 = load i32*, i32** @PL_reglastparen, align 8
  %633 = load i32, i32* %632, align 4
  %634 = load i32, i32* %n, align 4
  %cmp1366 = icmp slt i32 %633, %634
  br i1 %cmp1366, label %if.then.1371, label %lor.lhs.false.1368

lor.lhs.false.1368:                               ; preds = %sw.bb.1363
  %635 = load i32, i32* %ln, align 4
  %cmp1369 = icmp eq i32 %635, -1
  br i1 %cmp1369, label %if.then.1371, label %if.end.1372

if.then.1371:                                     ; preds = %lor.lhs.false.1368, %sw.bb.1363
  br label %no

if.end.1372:                                      ; preds = %lor.lhs.false.1368
  %636 = load i32, i32* %ln, align 4
  %637 = load i32, i32* %n, align 4
  %idxprom1373 = sext i32 %637 to i64
  %638 = load i32*, i32** @PL_regendp, align 8
  %arrayidx1374 = getelementptr inbounds i32, i32* %638, i64 %idxprom1373
  %639 = load i32, i32* %arrayidx1374, align 4
  %cmp1375 = icmp eq i32 %636, %639
  br i1 %cmp1375, label %if.then.1377, label %if.end.1378

if.then.1377:                                     ; preds = %if.end.1372
  br label %sw.epilog

if.end.1378:                                      ; preds = %if.end.1372
  %640 = load i8*, i8** @PL_bostr, align 8
  %641 = load i32, i32* %ln, align 4
  %idx.ext1379 = sext i32 %641 to i64
  %add.ptr1380 = getelementptr inbounds i8, i8* %640, i64 %idx.ext1379
  store i8* %add.ptr1380, i8** %s, align 8
  %642 = load i8, i8* %do_utf8, align 1
  %conv1381 = sext i8 %642 to i32
  %tobool1382 = icmp ne i32 %conv1381, 0
  br i1 %tobool1382, label %land.lhs.true.1383, label %if.end.1426

land.lhs.true.1383:                               ; preds = %if.end.1378
  %643 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type1384 = getelementptr inbounds %struct.regnode, %struct.regnode* %643, i32 0, i32 1
  %644 = load i8, i8* %type1384, align 1
  %conv1385 = zext i8 %644 to i32
  %cmp1386 = icmp ne i32 %conv1385, 47
  br i1 %cmp1386, label %if.then.1388, label %if.end.1426

if.then.1388:                                     ; preds = %land.lhs.true.1383
  %645 = load i8*, i8** %locinput, align 8
  store i8* %645, i8** %l1389, align 8
  %646 = load i8*, i8** @PL_bostr, align 8
  %647 = load i32, i32* %n, align 4
  %idxprom1391 = sext i32 %647 to i64
  %648 = load i32*, i32** @PL_regendp, align 8
  %arrayidx1392 = getelementptr inbounds i32, i32* %648, i64 %idxprom1391
  %649 = load i32, i32* %arrayidx1392, align 4
  %idx.ext1393 = sext i32 %649 to i64
  %add.ptr1394 = getelementptr inbounds i8, i8* %646, i64 %idx.ext1393
  store i8* %add.ptr1394, i8** %e1390, align 8
  %650 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type1395 = getelementptr inbounds %struct.regnode, %struct.regnode* %650, i32 0, i32 1
  %651 = load i8, i8* %type1395, align 1
  %conv1396 = zext i8 %651 to i32
  %cmp1397 = icmp eq i32 %conv1396, 48
  br i1 %cmp1397, label %if.then.1399, label %if.end.1424

if.then.1399:                                     ; preds = %if.then.1388
  br label %while.cond.1400

while.cond.1400:                                  ; preds = %if.end.1420, %if.then.1399
  %652 = load i8*, i8** %s, align 8
  %653 = load i8*, i8** %e1390, align 8
  %cmp1401 = icmp ult i8* %652, %653
  br i1 %cmp1401, label %while.body.1403, label %while.end.1423

while.body.1403:                                  ; preds = %while.cond.1400
  %654 = load i8*, i8** %l1389, align 8
  %655 = load i8*, i8** @PL_regeol, align 8
  %cmp1404 = icmp uge i8* %654, %655
  br i1 %cmp1404, label %if.then.1406, label %if.end.1407

if.then.1406:                                     ; preds = %while.body.1403
  br label %no

if.end.1407:                                      ; preds = %while.body.1403
  %656 = load i8*, i8** %s, align 8
  %arraydecay1408 = getelementptr inbounds [7 x i8], [7 x i8]* %tmpbuf1, i32 0, i32 0
  %call1409 = call i64 @Perl_to_utf8_lower(i8* %656, i8* %arraydecay1408, i64* %ulen1)
  %657 = load i8*, i8** %l1389, align 8
  %arraydecay1410 = getelementptr inbounds [7 x i8], [7 x i8]* %tmpbuf2, i32 0, i32 0
  %call1411 = call i64 @Perl_to_utf8_lower(i8* %657, i8* %arraydecay1410, i64* %ulen2)
  %658 = load i64, i64* %ulen1, align 8
  %659 = load i64, i64* %ulen2, align 8
  %cmp1412 = icmp ne i64 %658, %659
  br i1 %cmp1412, label %if.then.1419, label %lor.lhs.false.1414

lor.lhs.false.1414:                               ; preds = %if.end.1407
  %arraydecay1415 = getelementptr inbounds [7 x i8], [7 x i8]* %tmpbuf1, i32 0, i32 0
  %arraydecay1416 = getelementptr inbounds [7 x i8], [7 x i8]* %tmpbuf2, i32 0, i32 0
  %660 = load i64, i64* %ulen1, align 8
  %call1417 = call i32 @memcmp(i8* %arraydecay1415, i8* %arraydecay1416, i64 %660)
  %tobool1418 = icmp ne i32 %call1417, 0
  br i1 %tobool1418, label %if.then.1419, label %if.end.1420

if.then.1419:                                     ; preds = %lor.lhs.false.1414, %if.end.1407
  br label %no

if.end.1420:                                      ; preds = %lor.lhs.false.1414
  %661 = load i64, i64* %ulen1, align 8
  %662 = load i8*, i8** %s, align 8
  %add.ptr1421 = getelementptr inbounds i8, i8* %662, i64 %661
  store i8* %add.ptr1421, i8** %s, align 8
  %663 = load i64, i64* %ulen2, align 8
  %664 = load i8*, i8** %l1389, align 8
  %add.ptr1422 = getelementptr inbounds i8, i8* %664, i64 %663
  store i8* %add.ptr1422, i8** %l1389, align 8
  br label %while.cond.1400

while.end.1423:                                   ; preds = %while.cond.1400
  br label %if.end.1424

if.end.1424:                                      ; preds = %while.end.1423, %if.then.1388
  %665 = load i8*, i8** %l1389, align 8
  store i8* %665, i8** %locinput, align 8
  %666 = load i8*, i8** %locinput, align 8
  %667 = load i8, i8* %666, align 1
  %conv1425 = zext i8 %667 to i32
  store i32 %conv1425, i32* %nextchr, align 4
  br label %sw.epilog

if.end.1426:                                      ; preds = %land.lhs.true.1383, %if.end.1378
  %668 = load i8*, i8** %s, align 8
  %669 = load i8, i8* %668, align 1
  %conv1427 = zext i8 %669 to i32
  %670 = load i32, i32* %nextchr, align 4
  %cmp1428 = icmp ne i32 %conv1427, %670
  br i1 %cmp1428, label %land.lhs.true.1430, label %if.end.1448

land.lhs.true.1430:                               ; preds = %if.end.1426
  %671 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type1431 = getelementptr inbounds %struct.regnode, %struct.regnode* %671, i32 0, i32 1
  %672 = load i8, i8* %type1431, align 1
  %conv1432 = zext i8 %672 to i32
  %cmp1433 = icmp eq i32 %conv1432, 47
  br i1 %cmp1433, label %if.then.1447, label %lor.lhs.false.1435

lor.lhs.false.1435:                               ; preds = %land.lhs.true.1430
  %673 = load i8*, i8** %s, align 8
  %674 = load i8, i8* %673, align 1
  %conv1436 = zext i8 %674 to i32
  %675 = load i32, i32* %nextchr, align 4
  %idxprom1437 = sext i32 %675 to i64
  %676 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type1438 = getelementptr inbounds %struct.regnode, %struct.regnode* %676, i32 0, i32 1
  %677 = load i8, i8* %type1438, align 1
  %conv1439 = zext i8 %677 to i32
  %cmp1440 = icmp eq i32 %conv1439, 48
  %cond1442 = select i1 %cmp1440, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_locale, i32 0, i32 0)
  %arrayidx1443 = getelementptr inbounds i8, i8* %cond1442, i64 %idxprom1437
  %678 = load i8, i8* %arrayidx1443, align 1
  %conv1444 = zext i8 %678 to i32
  %cmp1445 = icmp ne i32 %conv1436, %conv1444
  br i1 %cmp1445, label %if.then.1447, label %if.end.1448

if.then.1447:                                     ; preds = %lor.lhs.false.1435, %land.lhs.true.1430
  br label %no

if.end.1448:                                      ; preds = %lor.lhs.false.1435, %if.end.1426
  %679 = load i32, i32* %n, align 4
  %idxprom1449 = sext i32 %679 to i64
  %680 = load i32*, i32** @PL_regendp, align 8
  %arrayidx1450 = getelementptr inbounds i32, i32* %680, i64 %idxprom1449
  %681 = load i32, i32* %arrayidx1450, align 4
  %682 = load i32, i32* %ln, align 4
  %sub = sub nsw i32 %681, %682
  store i32 %sub, i32* %ln, align 4
  %683 = load i8*, i8** %locinput, align 8
  %684 = load i32, i32* %ln, align 4
  %idx.ext1451 = sext i32 %684 to i64
  %add.ptr1452 = getelementptr inbounds i8, i8* %683, i64 %idx.ext1451
  %685 = load i8*, i8** @PL_regeol, align 8
  %cmp1453 = icmp ugt i8* %add.ptr1452, %685
  br i1 %cmp1453, label %if.then.1455, label %if.end.1456

if.then.1455:                                     ; preds = %if.end.1448
  br label %no

if.end.1456:                                      ; preds = %if.end.1448
  %686 = load i32, i32* %ln, align 4
  %cmp1457 = icmp sgt i32 %686, 1
  br i1 %cmp1457, label %land.lhs.true.1459, label %if.end.1480

land.lhs.true.1459:                               ; preds = %if.end.1456
  %687 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type1460 = getelementptr inbounds %struct.regnode, %struct.regnode* %687, i32 0, i32 1
  %688 = load i8, i8* %type1460, align 1
  %conv1461 = zext i8 %688 to i32
  %cmp1462 = icmp eq i32 %conv1461, 47
  br i1 %cmp1462, label %cond.true.1464, label %cond.false.1468

cond.true.1464:                                   ; preds = %land.lhs.true.1459
  %689 = load i8*, i8** %s, align 8
  %690 = load i8*, i8** %locinput, align 8
  %691 = load i32, i32* %ln, align 4
  %conv1465 = sext i32 %691 to i64
  %call1466 = call i32 @memcmp(i8* %689, i8* %690, i64 %conv1465)
  %tobool1467 = icmp ne i32 %call1466, 0
  br i1 %tobool1467, label %if.then.1479, label %if.end.1480

cond.false.1468:                                  ; preds = %land.lhs.true.1459
  %692 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type1469 = getelementptr inbounds %struct.regnode, %struct.regnode* %692, i32 0, i32 1
  %693 = load i8, i8* %type1469, align 1
  %conv1470 = zext i8 %693 to i32
  %cmp1471 = icmp eq i32 %conv1470, 48
  br i1 %cmp1471, label %cond.true.1473, label %cond.false.1476

cond.true.1473:                                   ; preds = %cond.false.1468
  %694 = load i8*, i8** %s, align 8
  %695 = load i8*, i8** %locinput, align 8
  %696 = load i32, i32* %ln, align 4
  %call1474 = call i32 @Perl_ibcmp(i8* %694, i8* %695, i32 %696)
  %tobool1475 = icmp ne i32 %call1474, 0
  br i1 %tobool1475, label %if.then.1479, label %if.end.1480

cond.false.1476:                                  ; preds = %cond.false.1468
  %697 = load i8*, i8** %s, align 8
  %698 = load i8*, i8** %locinput, align 8
  %699 = load i32, i32* %ln, align 4
  %call1477 = call i32 @Perl_ibcmp_locale(i8* %697, i8* %698, i32 %699)
  %tobool1478 = icmp ne i32 %call1477, 0
  br i1 %tobool1478, label %if.then.1479, label %if.end.1480

if.then.1479:                                     ; preds = %cond.false.1476, %cond.true.1473, %cond.true.1464
  br label %no

if.end.1480:                                      ; preds = %cond.false.1476, %cond.true.1473, %cond.true.1464, %if.end.1456
  %700 = load i32, i32* %ln, align 4
  %701 = load i8*, i8** %locinput, align 8
  %idx.ext1481 = sext i32 %700 to i64
  %add.ptr1482 = getelementptr inbounds i8, i8* %701, i64 %idx.ext1481
  store i8* %add.ptr1482, i8** %locinput, align 8
  %702 = load i8*, i8** %locinput, align 8
  %703 = load i8, i8* %702, align 1
  %conv1483 = zext i8 %703 to i32
  store i32 %conv1483, i32* %nextchr, align 4
  br label %sw.epilog

sw.bb.1484:                                       ; preds = %if.end, %if.end
  br label %sw.epilog

sw.bb.1485:                                       ; preds = %if.end
  br label %sw.epilog

sw.bb.1486:                                       ; preds = %if.end
  %704 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %704, %struct.sv*** %sp, align 8
  %705 = load %struct.op*, %struct.op** @PL_op, align 8
  store %struct.op* %705, %struct.op** %oop, align 8
  %706 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  store %struct.cop* %706, %struct.cop** %ocurcop, align 8
  %707 = load %struct.regexp*, %struct.regexp** @PL_reg_re, align 8
  store %struct.regexp* %707, %struct.regexp** %oreg, align 8
  %708 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %709 = bitcast %struct.regnode* %708 to %struct.regnode_1*
  %arg11487 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %709, i32 0, i32 3
  %710 = load i32, i32* %arg11487, align 4
  store i32 %710, i32* %n, align 4
  %711 = load i32, i32* %n, align 4
  %idxprom1488 = sext i32 %711 to i64
  %712 = load %struct.reg_data*, %struct.reg_data** @PL_regdata, align 8
  %data = getelementptr inbounds %struct.reg_data, %struct.reg_data* %712, i32 0, i32 2
  %arrayidx1489 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data, i32 0, i64 %idxprom1488
  %713 = load i8*, i8** %arrayidx1489, align 8
  %714 = bitcast i8* %713 to %struct.op*
  store %struct.op* %714, %struct.op** @PL_op, align 8
  %715 = load %struct.av*, %struct.av** @PL_comppad, align 8
  store %struct.av* %715, %struct.av** %old_comppad, align 8
  %716 = load i32, i32* %n, align 4
  %add1490 = add nsw i32 %716, 2
  %idxprom1491 = sext i32 %add1490 to i64
  %717 = load %struct.reg_data*, %struct.reg_data** @PL_regdata, align 8
  %data1492 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %717, i32 0, i32 2
  %arrayidx1493 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data1492, i32 0, i64 %idxprom1491
  %718 = load i8*, i8** %arrayidx1493, align 8
  %719 = bitcast i8* %718 to %struct.av*
  store %struct.av* %719, %struct.av** @PL_comppad, align 8
  %720 = load %struct.av*, %struct.av** @PL_comppad, align 8
  %tobool1494 = icmp ne %struct.av* %720, null
  br i1 %tobool1494, label %cond.true.1495, label %cond.false.1497

cond.true.1495:                                   ; preds = %sw.bb.1486
  %721 = load %struct.av*, %struct.av** @PL_comppad, align 8
  %sv_any1496 = getelementptr inbounds %struct.av, %struct.av* %721, i32 0, i32 0
  %722 = load %struct.xpvav*, %struct.xpvav** %sv_any1496, align 8
  %xav_array = getelementptr inbounds %struct.xpvav, %struct.xpvav* %722, i32 0, i32 0
  %723 = load i8*, i8** %xav_array, align 8
  %724 = bitcast i8* %723 to %struct.sv**
  br label %cond.end.1498

cond.false.1497:                                  ; preds = %sw.bb.1486
  br label %cond.end.1498

cond.end.1498:                                    ; preds = %cond.false.1497, %cond.true.1495
  %cond1499 = phi %struct.sv** [ %724, %cond.true.1495 ], [ null, %cond.false.1497 ]
  store %struct.sv** %cond1499, %struct.sv*** @PL_curpad, align 8
  %725 = load i8*, i8** %locinput, align 8
  %726 = load i8*, i8** @PL_bostr, align 8
  %sub.ptr.lhs.cast1500 = ptrtoint i8* %725 to i64
  %sub.ptr.rhs.cast1501 = ptrtoint i8* %726 to i64
  %sub.ptr.sub1502 = sub i64 %sub.ptr.lhs.cast1500, %sub.ptr.rhs.cast1501
  %conv1503 = trunc i64 %sub.ptr.sub1502 to i32
  %727 = load %struct.magic*, %struct.magic** @PL_reg_magic, align 8
  %mg_len = getelementptr inbounds %struct.magic, %struct.magic* %727, i32 0, i32 7
  store i32 %conv1503, i32* %mg_len, align 4
  %728 = load i32*, i32** @PL_regendp, align 8
  %arrayidx1504 = getelementptr inbounds i32, i32* %728, i64 0
  store i32 %conv1503, i32* %arrayidx1504, align 4
  %729 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %729, %struct.sv*** %before, align 8
  %730 = load i32 ()*, i32 ()** @PL_runops, align 8
  %call1505 = call i32 %730()
  %731 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %731, %struct.sv*** %sp, align 8
  %732 = load %struct.sv**, %struct.sv*** %sp, align 8
  %733 = load %struct.sv**, %struct.sv*** %before, align 8
  %cmp1506 = icmp eq %struct.sv** %732, %733
  br i1 %cmp1506, label %if.then.1508, label %if.else.1509

if.then.1508:                                     ; preds = %cond.end.1498
  store %struct.sv* @PL_sv_undef, %struct.sv** %ret, align 8
  br label %if.end.1511

if.else.1509:                                     ; preds = %cond.end.1498
  %734 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr1510 = getelementptr inbounds %struct.sv*, %struct.sv** %734, i32 -1
  store %struct.sv** %incdec.ptr1510, %struct.sv*** %sp, align 8
  %735 = load %struct.sv*, %struct.sv** %734, align 8
  store %struct.sv* %735, %struct.sv** %ret, align 8
  %736 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %736, %struct.sv*** @PL_stack_sp, align 8
  br label %if.end.1511

if.end.1511:                                      ; preds = %if.else.1509, %if.then.1508
  %737 = load %struct.op*, %struct.op** %oop, align 8
  store %struct.op* %737, %struct.op** @PL_op, align 8
  %738 = load %struct.av*, %struct.av** %old_comppad, align 8
  store %struct.av* %738, %struct.av** @PL_comppad, align 8
  %739 = load %struct.av*, %struct.av** @PL_comppad, align 8
  %tobool1512 = icmp ne %struct.av* %739, null
  br i1 %tobool1512, label %cond.true.1513, label %cond.false.1516

cond.true.1513:                                   ; preds = %if.end.1511
  %740 = load %struct.av*, %struct.av** @PL_comppad, align 8
  %sv_any1514 = getelementptr inbounds %struct.av, %struct.av* %740, i32 0, i32 0
  %741 = load %struct.xpvav*, %struct.xpvav** %sv_any1514, align 8
  %xav_array1515 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %741, i32 0, i32 0
  %742 = load i8*, i8** %xav_array1515, align 8
  %743 = bitcast i8* %742 to %struct.sv**
  br label %cond.end.1517

cond.false.1516:                                  ; preds = %if.end.1511
  br label %cond.end.1517

cond.end.1517:                                    ; preds = %cond.false.1516, %cond.true.1513
  %cond1518 = phi %struct.sv** [ %743, %cond.true.1513 ], [ null, %cond.false.1516 ]
  store %struct.sv** %cond1518, %struct.sv*** @PL_curpad, align 8
  %744 = load %struct.cop*, %struct.cop** %ocurcop, align 8
  store volatile %struct.cop* %744, %struct.cop** @PL_curcop, align 8
  %745 = load i32, i32* %logical, align 4
  %tobool1519 = icmp ne i32 %745, 0
  br i1 %tobool1519, label %if.then.1520, label %if.else.1692

if.then.1520:                                     ; preds = %cond.end.1517
  %746 = load i32, i32* %logical, align 4
  %cmp1521 = icmp eq i32 %746, 2
  br i1 %cmp1521, label %if.then.1523, label %if.end.1636

if.then.1523:                                     ; preds = %if.then.1520
  store %struct.magic* null, %struct.magic** %mg, align 8
  %747 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %747, i32 0, i32 2
  %748 = load i32, i32* %sv_flags, align 4
  %and1524 = and i32 %748, 524288
  %tobool1525 = icmp ne i32 %and1524, 0
  br i1 %tobool1525, label %land.lhs.true.1526, label %if.else.1533

land.lhs.true.1526:                               ; preds = %if.then.1523
  %749 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_any1527 = getelementptr inbounds %struct.sv, %struct.sv* %749, i32 0, i32 0
  %750 = load i8*, i8** %sv_any1527, align 8
  %751 = bitcast i8* %750 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %751, i32 0, i32 0
  %752 = load %struct.sv*, %struct.sv** %xrv_rv, align 8
  store %struct.sv* %752, %struct.sv** %sv, align 8
  %sv_flags1528 = getelementptr inbounds %struct.sv, %struct.sv* %752, i32 0, i32 2
  %753 = load i32, i32* %sv_flags1528, align 4
  %and1529 = and i32 %753, 16384
  %tobool1530 = icmp ne i32 %and1529, 0
  br i1 %tobool1530, label %if.then.1531, label %if.else.1533

if.then.1531:                                     ; preds = %land.lhs.true.1526
  %754 = load %struct.sv*, %struct.sv** %sv, align 8
  %call1532 = call %struct.magic* @Perl_mg_find(%struct.sv* %754, i32 114)
  store %struct.magic* %call1532, %struct.magic** %mg, align 8
  br label %if.end.1547

if.else.1533:                                     ; preds = %land.lhs.true.1526, %if.then.1523
  %755 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags1534 = getelementptr inbounds %struct.sv, %struct.sv* %755, i32 0, i32 2
  %756 = load i32, i32* %sv_flags1534, align 4
  %and1535 = and i32 %756, 16384
  %tobool1536 = icmp ne i32 %and1535, 0
  br i1 %tobool1536, label %if.then.1537, label %if.end.1546

if.then.1537:                                     ; preds = %if.else.1533
  %757 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags1538 = getelementptr inbounds %struct.sv, %struct.sv* %757, i32 0, i32 2
  %758 = load i32, i32* %sv_flags1538, align 4
  %and1539 = and i32 %758, 8192
  %tobool1540 = icmp ne i32 %and1539, 0
  br i1 %tobool1540, label %if.then.1541, label %if.else.1543

if.then.1541:                                     ; preds = %if.then.1537
  %759 = load %struct.sv*, %struct.sv** %ret, align 8
  %call1542 = call i32 @Perl_sv_unmagic(%struct.sv* %759, i32 114)
  br label %if.end.1545

if.else.1543:                                     ; preds = %if.then.1537
  %760 = load %struct.sv*, %struct.sv** %ret, align 8
  %call1544 = call %struct.magic* @Perl_mg_find(%struct.sv* %760, i32 114)
  store %struct.magic* %call1544, %struct.magic** %mg, align 8
  br label %if.end.1545

if.end.1545:                                      ; preds = %if.else.1543, %if.then.1541
  br label %if.end.1546

if.end.1546:                                      ; preds = %if.end.1545, %if.else.1533
  br label %if.end.1547

if.end.1547:                                      ; preds = %if.end.1546, %if.then.1531
  %761 = load %struct.magic*, %struct.magic** %mg, align 8
  %tobool1548 = icmp ne %struct.magic* %761, null
  br i1 %tobool1548, label %if.then.1549, label %if.else.1555

if.then.1549:                                     ; preds = %if.end.1547
  %762 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_obj = getelementptr inbounds %struct.magic, %struct.magic* %762, i32 0, i32 5
  %763 = load %struct.sv*, %struct.sv** %mg_obj, align 8
  %764 = bitcast %struct.sv* %763 to %struct.regexp*
  store %struct.regexp* %764, %struct.regexp** %re, align 8
  %765 = load %struct.regexp*, %struct.regexp** %re, align 8
  %tobool1550 = icmp ne %struct.regexp* %765, null
  br i1 %tobool1550, label %land.rhs.1551, label %land.end.1553

land.rhs.1551:                                    ; preds = %if.then.1549
  %766 = load %struct.regexp*, %struct.regexp** %re, align 8
  %refcnt = getelementptr inbounds %struct.regexp, %struct.regexp* %766, i32 0, i32 9
  %767 = load i32, i32* %refcnt, align 4
  %inc = add nsw i32 %767, 1
  store i32 %inc, i32* %refcnt, align 4
  %tobool1552 = icmp ne i32 %767, 0
  br label %land.end.1553

land.end.1553:                                    ; preds = %land.rhs.1551, %if.then.1549
  %768 = phi i1 [ false, %if.then.1549 ], [ %tobool1552, %land.rhs.1551 ]
  %land.ext1554 = zext i1 %768 to i32
  %769 = load %struct.regexp*, %struct.regexp** %re, align 8
  br label %if.end.1594

if.else.1555:                                     ; preds = %if.end.1547
  %770 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags1556 = getelementptr inbounds %struct.sv, %struct.sv* %770, i32 0, i32 2
  %771 = load i32, i32* %sv_flags1556, align 4
  %and1557 = and i32 %771, 262144
  %cmp1558 = icmp eq i32 %and1557, 262144
  br i1 %cmp1558, label %cond.true.1560, label %cond.false.1564

cond.true.1560:                                   ; preds = %if.else.1555
  %772 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_any1561 = getelementptr inbounds %struct.sv, %struct.sv* %772, i32 0, i32 0
  %773 = load i8*, i8** %sv_any1561, align 8
  %774 = bitcast i8* %773 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %774, i32 0, i32 1
  %775 = load i64, i64* %xpv_cur, align 8
  store i64 %775, i64* %len, align 8
  %776 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_any1562 = getelementptr inbounds %struct.sv, %struct.sv* %776, i32 0, i32 0
  %777 = load i8*, i8** %sv_any1562, align 8
  %778 = bitcast i8* %777 to %struct.xpv*
  %xpv_pv1563 = getelementptr inbounds %struct.xpv, %struct.xpv* %778, i32 0, i32 0
  %779 = load i8*, i8** %xpv_pv1563, align 8
  br label %cond.end.1566

cond.false.1564:                                  ; preds = %if.else.1555
  %780 = load %struct.sv*, %struct.sv** %ret, align 8
  %call1565 = call i8* @Perl_sv_2pv_flags(%struct.sv* %780, i64* %len, i32 2)
  br label %cond.end.1566

cond.end.1566:                                    ; preds = %cond.false.1564, %cond.true.1560
  %cond1567 = phi i8* [ %779, %cond.true.1560 ], [ %call1565, %cond.false.1564 ]
  store i8* %cond1567, i8** %t, align 8
  %781 = load i8*, i8** @PL_regprecomp, align 8
  store i8* %781, i8** %oprecomp, align 8
  %782 = load i32, i32* @PL_regsize, align 4
  store i32 %782, i32* %osize, align 4
  %783 = load i32, i32* @PL_regnpar, align 4
  store i32 %783, i32* %onpar, align 4
  %784 = bitcast %struct.pmop* %pm to i8*
  call void @llvm.memset.p0i8.i64(i8* %784, i8 0, i64 112, i32 1, i1 false)
  %785 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags1568 = getelementptr inbounds %struct.sv, %struct.sv* %785, i32 0, i32 2
  %786 = load i32, i32* %sv_flags1568, align 4
  %and1569 = and i32 %786, 536870912
  %tobool1570 = icmp ne i32 %and1569, 0
  br i1 %tobool1570, label %land.lhs.true.1571, label %if.end.1579

land.lhs.true.1571:                               ; preds = %cond.end.1566
  %787 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private = getelementptr inbounds %struct.cop, %struct.cop* %787, i32 0, i32 7
  %788 = load i8, i8* %op_private, align 1
  %conv1572 = zext i8 %788 to i32
  %and1573 = and i32 %conv1572, 8
  %tobool1574 = icmp ne i32 %and1573, 0
  br i1 %tobool1574, label %if.end.1579, label %if.then.1575

if.then.1575:                                     ; preds = %land.lhs.true.1571
  %op_pmdynflags = getelementptr inbounds %struct.pmop, %struct.pmop* %pm, i32 0, i32 16
  %789 = load i8, i8* %op_pmdynflags, align 1
  %conv1576 = zext i8 %789 to i32
  %or1577 = or i32 %conv1576, 8
  %conv1578 = trunc i32 %or1577 to i8
  store i8 %conv1578, i8* %op_pmdynflags, align 1
  br label %if.end.1579

if.end.1579:                                      ; preds = %if.then.1575, %land.lhs.true.1571, %cond.end.1566
  %790 = load %struct.regexp* (i8*, i8*, %struct.pmop*)*, %struct.regexp* (i8*, i8*, %struct.pmop*)** @PL_regcompp, align 8
  %791 = load i8*, i8** %t, align 8
  %792 = load i8*, i8** %t, align 8
  %793 = load i64, i64* %len, align 8
  %add.ptr1580 = getelementptr inbounds i8, i8* %792, i64 %793
  %call1581 = call %struct.regexp* %790(i8* %791, i8* %add.ptr1580, %struct.pmop* %pm)
  store %struct.regexp* %call1581, %struct.regexp** %re, align 8
  %794 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags1582 = getelementptr inbounds %struct.sv, %struct.sv* %794, i32 0, i32 2
  %795 = load i32, i32* %sv_flags1582, align 4
  %and1583 = and i32 %795, 8399360
  %tobool1584 = icmp ne i32 %and1583, 0
  br i1 %tobool1584, label %if.end.1593, label %if.then.1585

if.then.1585:                                     ; preds = %if.end.1579
  %796 = load %struct.sv*, %struct.sv** %ret, align 8
  %797 = load %struct.regexp*, %struct.regexp** %re, align 8
  %tobool1586 = icmp ne %struct.regexp* %797, null
  br i1 %tobool1586, label %land.rhs.1587, label %land.end.1591

land.rhs.1587:                                    ; preds = %if.then.1585
  %798 = load %struct.regexp*, %struct.regexp** %re, align 8
  %refcnt1588 = getelementptr inbounds %struct.regexp, %struct.regexp* %798, i32 0, i32 9
  %799 = load i32, i32* %refcnt1588, align 4
  %inc1589 = add nsw i32 %799, 1
  store i32 %inc1589, i32* %refcnt1588, align 4
  %tobool1590 = icmp ne i32 %799, 0
  br label %land.end.1591

land.end.1591:                                    ; preds = %land.rhs.1587, %if.then.1585
  %800 = phi i1 [ false, %if.then.1585 ], [ %tobool1590, %land.rhs.1587 ]
  %land.ext1592 = zext i1 %800 to i32
  %801 = load %struct.regexp*, %struct.regexp** %re, align 8
  %802 = bitcast %struct.regexp* %801 to %struct.sv*
  call void @Perl_sv_magic(%struct.sv* %796, %struct.sv* %802, i32 114, i8* null, i32 0)
  br label %if.end.1593

if.end.1593:                                      ; preds = %land.end.1591, %if.end.1579
  %803 = load i8*, i8** %oprecomp, align 8
  store i8* %803, i8** @PL_regprecomp, align 8
  %804 = load i32, i32* %osize, align 4
  store i32 %804, i32* @PL_regsize, align 4
  %805 = load i32, i32* %onpar, align 4
  store i32 %805, i32* @PL_regnpar, align 4
  br label %if.end.1594

if.end.1594:                                      ; preds = %if.end.1593, %land.end.1553
  %806 = load %struct.regnode*, %struct.regnode** %next, align 8
  %node = getelementptr inbounds %struct.re_cc_state, %struct.re_cc_state* %state, i32 0, i32 1
  store %struct.regnode* %806, %struct.regnode** %node, align 8
  %807 = load %struct.re_cc_state*, %struct.re_cc_state** @PL_reg_call_cc, align 8
  %prev = getelementptr inbounds %struct.re_cc_state, %struct.re_cc_state* %state, i32 0, i32 2
  store %struct.re_cc_state* %807, %struct.re_cc_state** %prev, align 8
  %808 = load %struct.curcur*, %struct.curcur** @PL_regcc, align 8
  %cc = getelementptr inbounds %struct.re_cc_state, %struct.re_cc_state* %state, i32 0, i32 3
  store %struct.curcur* %808, %struct.curcur** %cc, align 8
  %809 = load %struct.regexp*, %struct.regexp** @PL_reg_re, align 8
  %re1595 = getelementptr inbounds %struct.re_cc_state, %struct.re_cc_state* %state, i32 0, i32 4
  store %struct.regexp* %809, %struct.regexp** %re1595, align 8
  store %struct.curcur* null, %struct.curcur** @PL_regcc, align 8
  %call1596 = call i32 @S_regcppush(i32 0)
  store i32 %call1596, i32* %cp, align 4
  %810 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %810, i32* %lastcp, align 4
  %811 = load %struct.regexp*, %struct.regexp** %re, align 8
  call void @S_cache_re(%struct.regexp* %811)
  %812 = load i32, i32* @PL_savestack_ix, align 4
  %ss = getelementptr inbounds %struct.re_cc_state, %struct.re_cc_state* %state, i32 0, i32 0
  store i32 %812, i32* %ss, align 4
  %813 = load i32*, i32** @PL_reglastparen, align 8
  store i32 0, i32* %813, align 4
  %814 = load i32*, i32** @PL_reglastcloseparen, align 8
  store i32 0, i32* %814, align 4
  store %struct.re_cc_state* %state, %struct.re_cc_state** @PL_reg_call_cc, align 8
  %815 = load i8*, i8** %locinput, align 8
  store i8* %815, i8** @PL_reginput, align 8
  %816 = load i32, i32* @PL_reg_flags, align 4
  %and1597 = and i32 %816, 8
  %cmp1598 = icmp ne i32 %and1597, 0
  %conv1599 = zext i1 %cmp1598 to i32
  %817 = load %struct.regexp*, %struct.regexp** %re, align 8
  %reganch = getelementptr inbounds %struct.regexp, %struct.regexp* %817, i32 0, i32 15
  %818 = load i32, i32* %reganch, align 4
  %and1600 = and i32 %818, 65536
  %cmp1601 = icmp ne i32 %and1600, 0
  %conv1602 = zext i1 %cmp1601 to i32
  %xor = xor i32 %conv1599, %conv1602
  store i32 %xor, i32* %toggleutf, align 4
  %819 = load i32, i32* %toggleutf, align 4
  %tobool1603 = icmp ne i32 %819, 0
  br i1 %tobool1603, label %if.then.1604, label %if.end.1606

if.then.1604:                                     ; preds = %if.end.1594
  %820 = load i32, i32* @PL_reg_flags, align 4
  %xor1605 = xor i32 %820, 8
  store i32 %xor1605, i32* @PL_reg_flags, align 4
  br label %if.end.1606

if.end.1606:                                      ; preds = %if.then.1604, %if.end.1594
  store i32 0, i32* @PL_reg_maxiter, align 4
  %821 = load %struct.regexp*, %struct.regexp** %re, align 8
  %program = getelementptr inbounds %struct.regexp, %struct.regexp* %821, i32 0, i32 16
  %arraydecay1607 = getelementptr inbounds [1 x %struct.regnode], [1 x %struct.regnode]* %program, i32 0, i32 0
  %add.ptr1608 = getelementptr inbounds %struct.regnode, %struct.regnode* %arraydecay1607, i64 1
  %call1609 = call i32 @S_regmatch(%struct.regnode* %add.ptr1608)
  %tobool1610 = icmp ne i32 %call1609, 0
  br i1 %tobool1610, label %if.then.1611, label %if.end.1623

if.then.1611:                                     ; preds = %if.end.1606
  %prev1612 = getelementptr inbounds %struct.re_cc_state, %struct.re_cc_state* %state, i32 0, i32 2
  %822 = load %struct.re_cc_state*, %struct.re_cc_state** %prev1612, align 8
  store %struct.re_cc_state* %822, %struct.re_cc_state** @PL_reg_call_cc, align 8
  %cc1613 = getelementptr inbounds %struct.re_cc_state, %struct.re_cc_state* %state, i32 0, i32 3
  %823 = load %struct.curcur*, %struct.curcur** %cc1613, align 8
  store %struct.curcur* %823, %struct.curcur** @PL_regcc, align 8
  %re1614 = getelementptr inbounds %struct.re_cc_state, %struct.re_cc_state* %state, i32 0, i32 4
  %824 = load %struct.regexp*, %struct.regexp** %re1614, align 8
  store %struct.regexp* %824, %struct.regexp** @PL_reg_re, align 8
  %825 = load %struct.regexp*, %struct.regexp** @PL_reg_re, align 8
  call void @S_cache_re(%struct.regexp* %825)
  %826 = load i32, i32* %toggleutf, align 4
  %tobool1615 = icmp ne i32 %826, 0
  br i1 %tobool1615, label %if.then.1616, label %if.end.1618

if.then.1616:                                     ; preds = %if.then.1611
  %827 = load i32, i32* @PL_reg_flags, align 4
  %xor1617 = xor i32 %827, 8
  store i32 %xor1617, i32* @PL_reg_flags, align 4
  br label %if.end.1618

if.end.1618:                                      ; preds = %if.then.1616, %if.then.1611
  store i32 0, i32* @PL_reg_maxiter, align 4
  %828 = load void (%struct.regexp*)*, void (%struct.regexp*)** @PL_regfree, align 8
  %829 = load %struct.regexp*, %struct.regexp** %re, align 8
  call void %828(%struct.regexp* %829)
  %830 = load i32, i32* @PL_savestack_ix, align 4
  %831 = load i32, i32* %cp, align 4
  %cmp1619 = icmp sgt i32 %830, %831
  br i1 %cmp1619, label %if.then.1621, label %if.end.1622

if.then.1621:                                     ; preds = %if.end.1618
  %832 = load i32, i32* %cp, align 4
  call void @Perl_leave_scope(i32 %832)
  br label %if.end.1622

if.end.1622:                                      ; preds = %if.then.1621, %if.end.1618
  br label %yes

if.end.1623:                                      ; preds = %if.end.1606
  %833 = load void (%struct.regexp*)*, void (%struct.regexp*)** @PL_regfree, align 8
  %834 = load %struct.regexp*, %struct.regexp** %re, align 8
  call void %833(%struct.regexp* %834)
  %835 = load i32, i32* @PL_savestack_ix, align 4
  %836 = load i32, i32* %lastcp, align 4
  %cmp1624 = icmp sgt i32 %835, %836
  br i1 %cmp1624, label %if.then.1626, label %if.end.1627

if.then.1626:                                     ; preds = %if.end.1623
  %837 = load i32, i32* %lastcp, align 4
  call void @Perl_leave_scope(i32 %837)
  br label %if.end.1627

if.end.1627:                                      ; preds = %if.then.1626, %if.end.1623
  %call1628 = call i8* @S_regcppop()
  %prev1629 = getelementptr inbounds %struct.re_cc_state, %struct.re_cc_state* %state, i32 0, i32 2
  %838 = load %struct.re_cc_state*, %struct.re_cc_state** %prev1629, align 8
  store %struct.re_cc_state* %838, %struct.re_cc_state** @PL_reg_call_cc, align 8
  %cc1630 = getelementptr inbounds %struct.re_cc_state, %struct.re_cc_state* %state, i32 0, i32 3
  %839 = load %struct.curcur*, %struct.curcur** %cc1630, align 8
  store %struct.curcur* %839, %struct.curcur** @PL_regcc, align 8
  %re1631 = getelementptr inbounds %struct.re_cc_state, %struct.re_cc_state* %state, i32 0, i32 4
  %840 = load %struct.regexp*, %struct.regexp** %re1631, align 8
  store %struct.regexp* %840, %struct.regexp** @PL_reg_re, align 8
  %841 = load %struct.regexp*, %struct.regexp** @PL_reg_re, align 8
  call void @S_cache_re(%struct.regexp* %841)
  %842 = load i32, i32* %toggleutf, align 4
  %tobool1632 = icmp ne i32 %842, 0
  br i1 %tobool1632, label %if.then.1633, label %if.end.1635

if.then.1633:                                     ; preds = %if.end.1627
  %843 = load i32, i32* @PL_reg_flags, align 4
  %xor1634 = xor i32 %843, 8
  store i32 %xor1634, i32* @PL_reg_flags, align 4
  br label %if.end.1635

if.end.1635:                                      ; preds = %if.then.1633, %if.end.1627
  store i32 0, i32* @PL_reg_maxiter, align 4
  store i32 0, i32* %logical, align 4
  br label %no

if.end.1636:                                      ; preds = %if.then.1520
  %844 = load %struct.sv*, %struct.sv** %ret, align 8
  %tobool1637 = icmp ne %struct.sv* %844, null
  br i1 %tobool1637, label %cond.false.1639, label %cond.true.1638

cond.true.1638:                                   ; preds = %if.end.1636
  br label %cond.end.1690

cond.false.1639:                                  ; preds = %if.end.1636
  %845 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags1640 = getelementptr inbounds %struct.sv, %struct.sv* %845, i32 0, i32 2
  %846 = load i32, i32* %sv_flags1640, align 4
  %and1641 = and i32 %846, 262144
  %tobool1642 = icmp ne i32 %and1641, 0
  br i1 %tobool1642, label %cond.true.1643, label %cond.false.1665

cond.true.1643:                                   ; preds = %cond.false.1639
  %847 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_any1644 = getelementptr inbounds %struct.sv, %struct.sv* %847, i32 0, i32 0
  %848 = load i8*, i8** %sv_any1644, align 8
  %849 = bitcast i8* %848 to %struct.xpv*
  store %struct.xpv* %849, %struct.xpv** @PL_Xpv, align 8
  %tobool1645 = icmp ne %struct.xpv* %849, null
  br i1 %tobool1645, label %land.rhs.1646, label %land.end.1662

land.rhs.1646:                                    ; preds = %cond.true.1643
  %850 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_cur1647 = getelementptr inbounds %struct.xpv, %struct.xpv* %850, i32 0, i32 1
  %851 = load i64, i64* %xpv_cur1647, align 8
  %cmp1648 = icmp ugt i64 %851, 1
  br i1 %cmp1648, label %lor.end.1660, label %lor.rhs.1650

lor.rhs.1650:                                     ; preds = %land.rhs.1646
  %852 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_cur1651 = getelementptr inbounds %struct.xpv, %struct.xpv* %852, i32 0, i32 1
  %853 = load i64, i64* %xpv_cur1651, align 8
  %tobool1652 = icmp ne i64 %853, 0
  br i1 %tobool1652, label %land.rhs.1653, label %land.end.1658

land.rhs.1653:                                    ; preds = %lor.rhs.1650
  %854 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_pv1654 = getelementptr inbounds %struct.xpv, %struct.xpv* %854, i32 0, i32 0
  %855 = load i8*, i8** %xpv_pv1654, align 8
  %856 = load i8, i8* %855, align 1
  %conv1655 = sext i8 %856 to i32
  %cmp1656 = icmp ne i32 %conv1655, 48
  br label %land.end.1658

land.end.1658:                                    ; preds = %land.rhs.1653, %lor.rhs.1650
  %857 = phi i1 [ false, %lor.rhs.1650 ], [ %cmp1656, %land.rhs.1653 ]
  br label %lor.end.1660

lor.end.1660:                                     ; preds = %land.end.1658, %land.rhs.1646
  %858 = phi i1 [ true, %land.rhs.1646 ], [ %857, %land.end.1658 ]
  br label %land.end.1662

land.end.1662:                                    ; preds = %lor.end.1660, %cond.true.1643
  %859 = phi i1 [ false, %cond.true.1643 ], [ %858, %lor.end.1660 ]
  %cond1664 = select i1 %859, i32 1, i32 0
  br label %cond.end.1688

cond.false.1665:                                  ; preds = %cond.false.1639
  %860 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags1666 = getelementptr inbounds %struct.sv, %struct.sv* %860, i32 0, i32 2
  %861 = load i32, i32* %sv_flags1666, align 4
  %and1667 = and i32 %861, 65536
  %tobool1668 = icmp ne i32 %and1667, 0
  br i1 %tobool1668, label %cond.true.1669, label %cond.false.1673

cond.true.1669:                                   ; preds = %cond.false.1665
  %862 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_any1670 = getelementptr inbounds %struct.sv, %struct.sv* %862, i32 0, i32 0
  %863 = load i8*, i8** %sv_any1670, align 8
  %864 = bitcast i8* %863 to %struct.xpviv*
  %xiv_iv = getelementptr inbounds %struct.xpviv, %struct.xpviv* %864, i32 0, i32 3
  %865 = load i64, i64* %xiv_iv, align 8
  %cmp1671 = icmp ne i64 %865, 0
  %conv1672 = zext i1 %cmp1671 to i32
  br label %cond.end.1686

cond.false.1673:                                  ; preds = %cond.false.1665
  %866 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags1674 = getelementptr inbounds %struct.sv, %struct.sv* %866, i32 0, i32 2
  %867 = load i32, i32* %sv_flags1674, align 4
  %and1675 = and i32 %867, 131072
  %tobool1676 = icmp ne i32 %and1675, 0
  br i1 %tobool1676, label %cond.true.1677, label %cond.false.1681

cond.true.1677:                                   ; preds = %cond.false.1673
  %868 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_any1678 = getelementptr inbounds %struct.sv, %struct.sv* %868, i32 0, i32 0
  %869 = load i8*, i8** %sv_any1678, align 8
  %870 = bitcast i8* %869 to %struct.xpvnv*
  %xnv_nv = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %870, i32 0, i32 4
  %871 = load double, double* %xnv_nv, align 8
  %cmp1679 = fcmp une double %871, 0.000000e+00
  %conv1680 = zext i1 %cmp1679 to i32
  br label %cond.end.1684

cond.false.1681:                                  ; preds = %cond.false.1673
  %872 = load %struct.sv*, %struct.sv** %ret, align 8
  %call1682 = call signext i8 @Perl_sv_2bool(%struct.sv* %872)
  %conv1683 = sext i8 %call1682 to i32
  br label %cond.end.1684

cond.end.1684:                                    ; preds = %cond.false.1681, %cond.true.1677
  %cond1685 = phi i32 [ %conv1680, %cond.true.1677 ], [ %conv1683, %cond.false.1681 ]
  br label %cond.end.1686

cond.end.1686:                                    ; preds = %cond.end.1684, %cond.true.1669
  %cond1687 = phi i32 [ %conv1672, %cond.true.1669 ], [ %cond1685, %cond.end.1684 ]
  br label %cond.end.1688

cond.end.1688:                                    ; preds = %cond.end.1686, %land.end.1662
  %cond1689 = phi i32 [ %cond1664, %land.end.1662 ], [ %cond1687, %cond.end.1686 ]
  br label %cond.end.1690

cond.end.1690:                                    ; preds = %cond.end.1688, %cond.true.1638
  %cond1691 = phi i32 [ 0, %cond.true.1638 ], [ %cond1689, %cond.end.1688 ]
  store i32 %cond1691, i32* %sw, align 4
  store i32 0, i32* %logical, align 4
  br label %if.end.1694

if.else.1692:                                     ; preds = %cond.end.1517
  %873 = load %struct.gv*, %struct.gv** @PL_replgv, align 8
  %call1693 = call %struct.sv* @Perl_save_scalar(%struct.gv* %873)
  %874 = load %struct.sv*, %struct.sv** %ret, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %call1693, %struct.sv* %874, i32 2)
  %875 = load %struct.regexp*, %struct.regexp** %oreg, align 8
  call void @S_cache_re(%struct.regexp* %875)
  br label %if.end.1694

if.end.1694:                                      ; preds = %if.else.1692, %cond.end.1690
  br label %sw.epilog

sw.bb.1695:                                       ; preds = %if.end
  %876 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %877 = bitcast %struct.regnode* %876 to %struct.regnode_1*
  %arg11696 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %877, i32 0, i32 3
  %878 = load i32, i32* %arg11696, align 4
  store i32 %878, i32* %n, align 4
  %879 = load i8*, i8** %locinput, align 8
  %880 = load i32, i32* %n, align 4
  %idxprom1697 = sext i32 %880 to i64
  %881 = load i8**, i8*** @PL_reg_start_tmp, align 8
  %arrayidx1698 = getelementptr inbounds i8*, i8** %881, i64 %idxprom1697
  store i8* %879, i8** %arrayidx1698, align 8
  %882 = load i32, i32* %n, align 4
  %883 = load i32, i32* @PL_regsize, align 4
  %cmp1699 = icmp sgt i32 %882, %883
  br i1 %cmp1699, label %if.then.1701, label %if.end.1702

if.then.1701:                                     ; preds = %sw.bb.1695
  %884 = load i32, i32* %n, align 4
  store i32 %884, i32* @PL_regsize, align 4
  br label %if.end.1702

if.end.1702:                                      ; preds = %if.then.1701, %sw.bb.1695
  br label %sw.epilog

sw.bb.1703:                                       ; preds = %if.end
  %885 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %886 = bitcast %struct.regnode* %885 to %struct.regnode_1*
  %arg11704 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %886, i32 0, i32 3
  %887 = load i32, i32* %arg11704, align 4
  store i32 %887, i32* %n, align 4
  %888 = load i32, i32* %n, align 4
  %idxprom1705 = sext i32 %888 to i64
  %889 = load i8**, i8*** @PL_reg_start_tmp, align 8
  %arrayidx1706 = getelementptr inbounds i8*, i8** %889, i64 %idxprom1705
  %890 = load i8*, i8** %arrayidx1706, align 8
  %891 = load i8*, i8** @PL_bostr, align 8
  %sub.ptr.lhs.cast1707 = ptrtoint i8* %890 to i64
  %sub.ptr.rhs.cast1708 = ptrtoint i8* %891 to i64
  %sub.ptr.sub1709 = sub i64 %sub.ptr.lhs.cast1707, %sub.ptr.rhs.cast1708
  %conv1710 = trunc i64 %sub.ptr.sub1709 to i32
  %892 = load i32, i32* %n, align 4
  %idxprom1711 = sext i32 %892 to i64
  %893 = load i32*, i32** @PL_regstartp, align 8
  %arrayidx1712 = getelementptr inbounds i32, i32* %893, i64 %idxprom1711
  store i32 %conv1710, i32* %arrayidx1712, align 4
  %894 = load i8*, i8** %locinput, align 8
  %895 = load i8*, i8** @PL_bostr, align 8
  %sub.ptr.lhs.cast1713 = ptrtoint i8* %894 to i64
  %sub.ptr.rhs.cast1714 = ptrtoint i8* %895 to i64
  %sub.ptr.sub1715 = sub i64 %sub.ptr.lhs.cast1713, %sub.ptr.rhs.cast1714
  %conv1716 = trunc i64 %sub.ptr.sub1715 to i32
  %896 = load i32, i32* %n, align 4
  %idxprom1717 = sext i32 %896 to i64
  %897 = load i32*, i32** @PL_regendp, align 8
  %arrayidx1718 = getelementptr inbounds i32, i32* %897, i64 %idxprom1717
  store i32 %conv1716, i32* %arrayidx1718, align 4
  %898 = load i32, i32* %n, align 4
  %899 = load i32*, i32** @PL_reglastparen, align 8
  %900 = load i32, i32* %899, align 4
  %cmp1719 = icmp sgt i32 %898, %900
  br i1 %cmp1719, label %if.then.1721, label %if.end.1722

if.then.1721:                                     ; preds = %sw.bb.1703
  %901 = load i32, i32* %n, align 4
  %902 = load i32*, i32** @PL_reglastparen, align 8
  store i32 %901, i32* %902, align 4
  br label %if.end.1722

if.end.1722:                                      ; preds = %if.then.1721, %sw.bb.1703
  %903 = load i32, i32* %n, align 4
  %904 = load i32*, i32** @PL_reglastcloseparen, align 8
  store i32 %903, i32* %904, align 4
  br label %sw.epilog

sw.bb.1723:                                       ; preds = %if.end
  %905 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %906 = bitcast %struct.regnode* %905 to %struct.regnode_1*
  %arg11724 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %906, i32 0, i32 3
  %907 = load i32, i32* %arg11724, align 4
  store i32 %907, i32* %n, align 4
  %908 = load i32*, i32** @PL_reglastparen, align 8
  %909 = load i32, i32* %908, align 4
  %910 = load i32, i32* %n, align 4
  %cmp1725 = icmp sge i32 %909, %910
  br i1 %cmp1725, label %land.rhs.1727, label %land.end.1732

land.rhs.1727:                                    ; preds = %sw.bb.1723
  %911 = load i32, i32* %n, align 4
  %idxprom1728 = sext i32 %911 to i64
  %912 = load i32*, i32** @PL_regendp, align 8
  %arrayidx1729 = getelementptr inbounds i32, i32* %912, i64 %idxprom1728
  %913 = load i32, i32* %arrayidx1729, align 4
  %cmp1730 = icmp ne i32 %913, -1
  br label %land.end.1732

land.end.1732:                                    ; preds = %land.rhs.1727, %sw.bb.1723
  %914 = phi i1 [ false, %sw.bb.1723 ], [ %cmp1730, %land.rhs.1727 ]
  %land.ext1733 = zext i1 %914 to i32
  store i32 %land.ext1733, i32* %sw, align 4
  br label %sw.epilog

sw.bb.1734:                                       ; preds = %if.end
  %915 = load i32, i32* @PL_reg_maxiter, align 4
  store i32 %915, i32* @PL_reg_leftiter, align 4
  %916 = load i32, i32* %sw, align 4
  %tobool1735 = icmp ne i32 %916, 0
  br i1 %tobool1735, label %if.then.1736, label %if.else.1739

if.then.1736:                                     ; preds = %sw.bb.1734
  %917 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr1737 = getelementptr inbounds %struct.regnode, %struct.regnode* %917, i64 1
  %add.ptr1738 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr1737, i64 1
  store %struct.regnode* %add.ptr1738, %struct.regnode** %next, align 8
  br label %if.end.1751

if.else.1739:                                     ; preds = %sw.bb.1734
  %918 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %919 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %920 = bitcast %struct.regnode* %919 to %struct.regnode_1*
  %arg11740 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %920, i32 0, i32 3
  %921 = load i32, i32* %arg11740, align 4
  %idx.ext1741 = zext i32 %921 to i64
  %add.ptr1742 = getelementptr inbounds %struct.regnode, %struct.regnode* %918, i64 %idx.ext1741
  store %struct.regnode* %add.ptr1742, %struct.regnode** %next, align 8
  %922 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type1743 = getelementptr inbounds %struct.regnode, %struct.regnode* %922, i32 0, i32 1
  %923 = load i8, i8* %type1743, align 1
  %conv1744 = zext i8 %923 to i32
  %cmp1745 = icmp eq i32 %conv1744, 53
  br i1 %cmp1745, label %if.then.1747, label %if.end.1750

if.then.1747:                                     ; preds = %if.else.1739
  %924 = load %struct.regnode*, %struct.regnode** %next, align 8
  %add.ptr1748 = getelementptr inbounds %struct.regnode, %struct.regnode* %924, i64 1
  %add.ptr1749 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr1748, i64 1
  store %struct.regnode* %add.ptr1749, %struct.regnode** %next, align 8
  br label %if.end.1750

if.end.1750:                                      ; preds = %if.then.1747, %if.else.1739
  br label %if.end.1751

if.end.1751:                                      ; preds = %if.end.1750, %if.then.1736
  br label %sw.epilog

sw.bb.1752:                                       ; preds = %if.end
  %925 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1753 = getelementptr inbounds %struct.regnode, %struct.regnode* %925, i32 0, i32 0
  %926 = load i8, i8* %flags1753, align 1
  %conv1754 = zext i8 %926 to i32
  store i32 %conv1754, i32* %logical, align 4
  br label %sw.epilog

sw.bb.1755:                                       ; preds = %if.end
  %927 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %927, i32* %cp1757, align 4
  %928 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1758 = getelementptr inbounds %struct.regnode, %struct.regnode* %928, i32 0, i32 0
  %929 = load i8, i8* %flags1758, align 1
  %conv1759 = zext i8 %929 to i32
  store i32 %conv1759, i32* %parenfloor, align 4
  %930 = load %struct.regnode*, %struct.regnode** %next, align 8
  %add.ptr1760 = getelementptr inbounds %struct.regnode, %struct.regnode* %930, i64 -1
  %type1761 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr1760, i32 0, i32 1
  %931 = load i8, i8* %type1761, align 1
  %conv1762 = zext i8 %931 to i32
  %cmp1763 = icmp eq i32 %conv1762, 36
  br i1 %cmp1763, label %if.then.1765, label %if.end.1769

if.then.1765:                                     ; preds = %sw.bb.1755
  %932 = load %struct.regnode*, %struct.regnode** %next, align 8
  %933 = bitcast %struct.regnode* %932 to %struct.regnode_1*
  %arg11766 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %933, i32 0, i32 3
  %934 = load i32, i32* %arg11766, align 4
  %935 = load %struct.regnode*, %struct.regnode** %next, align 8
  %idx.ext1767 = zext i32 %934 to i64
  %add.ptr1768 = getelementptr inbounds %struct.regnode, %struct.regnode* %935, i64 %idx.ext1767
  store %struct.regnode* %add.ptr1768, %struct.regnode** %next, align 8
  br label %if.end.1769

if.end.1769:                                      ; preds = %if.then.1765, %sw.bb.1755
  %936 = load %struct.curcur*, %struct.curcur** @PL_regcc, align 8
  %oldcc = getelementptr inbounds %struct.curcur, %struct.curcur* %cc1756, i32 0, i32 8
  store %struct.curcur* %936, %struct.curcur** %oldcc, align 8
  store %struct.curcur* %cc1756, %struct.curcur** @PL_regcc, align 8
  %937 = load i32, i32* %parenfloor, align 4
  %938 = load i32*, i32** @PL_reglastparen, align 8
  %939 = load i32, i32* %938, align 4
  %cmp1770 = icmp sgt i32 %937, %939
  br i1 %cmp1770, label %if.then.1772, label %if.end.1773

if.then.1772:                                     ; preds = %if.end.1769
  %940 = load i32*, i32** @PL_reglastparen, align 8
  %941 = load i32, i32* %940, align 4
  store i32 %941, i32* %parenfloor, align 4
  br label %if.end.1773

if.end.1773:                                      ; preds = %if.then.1772, %if.end.1769
  %942 = load i32, i32* %parenfloor, align 4
  %parenfloor1774 = getelementptr inbounds %struct.curcur, %struct.curcur* %cc1756, i32 0, i32 0
  store i32 %942, i32* %parenfloor1774, align 4
  %cur = getelementptr inbounds %struct.curcur, %struct.curcur* %cc1756, i32 0, i32 1
  store i32 -1, i32* %cur, align 4
  %943 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %944 = bitcast %struct.regnode* %943 to %struct.regnode_2*
  %arg11775 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %944, i32 0, i32 3
  %945 = load i16, i16* %arg11775, align 2
  %conv1776 = zext i16 %945 to i32
  %min = getelementptr inbounds %struct.curcur, %struct.curcur* %cc1756, i32 0, i32 2
  store i32 %conv1776, i32* %min, align 4
  %946 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %947 = bitcast %struct.regnode* %946 to %struct.regnode_2*
  %arg2 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %947, i32 0, i32 4
  %948 = load i16, i16* %arg2, align 2
  %conv1777 = zext i16 %948 to i32
  %max = getelementptr inbounds %struct.curcur, %struct.curcur* %cc1756, i32 0, i32 3
  store i32 %conv1777, i32* %max, align 4
  %949 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr1778 = getelementptr inbounds %struct.regnode, %struct.regnode* %949, i64 1
  %add.ptr1779 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr1778, i64 1
  %scan1780 = getelementptr inbounds %struct.curcur, %struct.curcur* %cc1756, i32 0, i32 5
  store %struct.regnode* %add.ptr1779, %struct.regnode** %scan1780, align 8
  %950 = load %struct.regnode*, %struct.regnode** %next, align 8
  %next1781 = getelementptr inbounds %struct.curcur, %struct.curcur* %cc1756, i32 0, i32 6
  store %struct.regnode* %950, %struct.regnode** %next1781, align 8
  %951 = load i32, i32* %minmod, align 4
  %minmod1782 = getelementptr inbounds %struct.curcur, %struct.curcur* %cc1756, i32 0, i32 4
  store i32 %951, i32* %minmod1782, align 4
  %lastloc = getelementptr inbounds %struct.curcur, %struct.curcur* %cc1756, i32 0, i32 7
  store i8* null, i8** %lastloc, align 8
  %952 = load i8*, i8** %locinput, align 8
  store i8* %952, i8** @PL_reginput, align 8
  %953 = load %struct.regnode*, %struct.regnode** %next, align 8
  %add.ptr1783 = getelementptr inbounds %struct.regnode, %struct.regnode* %953, i64 -1
  %call1784 = call i32 @S_regmatch(%struct.regnode* %add.ptr1783)
  store i32 %call1784, i32* %n, align 4
  %954 = load i32, i32* @PL_savestack_ix, align 4
  %955 = load i32, i32* %cp1757, align 4
  %cmp1785 = icmp sgt i32 %954, %955
  br i1 %cmp1785, label %if.then.1787, label %if.end.1788

if.then.1787:                                     ; preds = %if.end.1773
  %956 = load i32, i32* %cp1757, align 4
  call void @Perl_leave_scope(i32 %956)
  br label %if.end.1788

if.end.1788:                                      ; preds = %if.then.1787, %if.end.1773
  %oldcc1789 = getelementptr inbounds %struct.curcur, %struct.curcur* %cc1756, i32 0, i32 8
  %957 = load %struct.curcur*, %struct.curcur** %oldcc1789, align 8
  store %struct.curcur* %957, %struct.curcur** @PL_regcc, align 8
  %958 = load i32, i32* %n, align 4
  %tobool1790 = icmp ne i32 %958, 0
  br i1 %tobool1790, label %if.then.1791, label %if.else.1792

if.then.1791:                                     ; preds = %if.end.1788
  br label %yes

if.else.1792:                                     ; preds = %if.end.1788
  br label %no

sw.bb.1793:                                       ; preds = %if.end
  %959 = load %struct.curcur*, %struct.curcur** @PL_regcc, align 8
  store %struct.curcur* %959, %struct.curcur** %cc1796, align 8
  %960 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %lastloc1798 = getelementptr inbounds %struct.curcur, %struct.curcur* %960, i32 0, i32 7
  %961 = load i8*, i8** %lastloc1798, align 8
  store i8* %961, i8** %lastloc1797, align 8
  store i32 0, i32* %cache_offset, align 4
  store i32 0, i32* %cache_bit, align 4
  %962 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %cur1799 = getelementptr inbounds %struct.curcur, %struct.curcur* %962, i32 0, i32 1
  %963 = load i32, i32* %cur1799, align 4
  %add1800 = add nsw i32 %963, 1
  store i32 %add1800, i32* %n, align 4
  %964 = load i8*, i8** %locinput, align 8
  store i8* %964, i8** @PL_reginput, align 8
  %965 = load i8*, i8** %locinput, align 8
  %966 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %lastloc1801 = getelementptr inbounds %struct.curcur, %struct.curcur* %966, i32 0, i32 7
  %967 = load i8*, i8** %lastloc1801, align 8
  %cmp1802 = icmp eq i8* %965, %967
  br i1 %cmp1802, label %land.lhs.true.1804, label %if.end.1823

land.lhs.true.1804:                               ; preds = %sw.bb.1793
  %968 = load i32, i32* %n, align 4
  %969 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %min1805 = getelementptr inbounds %struct.curcur, %struct.curcur* %969, i32 0, i32 2
  %970 = load i32, i32* %min1805, align 4
  %cmp1806 = icmp sge i32 %968, %970
  br i1 %cmp1806, label %if.then.1808, label %if.end.1823

if.then.1808:                                     ; preds = %land.lhs.true.1804
  %971 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %oldcc1809 = getelementptr inbounds %struct.curcur, %struct.curcur* %971, i32 0, i32 8
  %972 = load %struct.curcur*, %struct.curcur** %oldcc1809, align 8
  store %struct.curcur* %972, %struct.curcur** @PL_regcc, align 8
  %973 = load %struct.curcur*, %struct.curcur** @PL_regcc, align 8
  %tobool1810 = icmp ne %struct.curcur* %973, null
  br i1 %tobool1810, label %if.then.1811, label %if.end.1813

if.then.1811:                                     ; preds = %if.then.1808
  %974 = load %struct.curcur*, %struct.curcur** @PL_regcc, align 8
  %cur1812 = getelementptr inbounds %struct.curcur, %struct.curcur* %974, i32 0, i32 1
  %975 = load i32, i32* %cur1812, align 4
  store i32 %975, i32* %ln, align 4
  br label %if.end.1813

if.end.1813:                                      ; preds = %if.then.1811, %if.then.1808
  %976 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %next1814 = getelementptr inbounds %struct.curcur, %struct.curcur* %976, i32 0, i32 6
  %977 = load %struct.regnode*, %struct.regnode** %next1814, align 8
  %call1815 = call i32 @S_regmatch(%struct.regnode* %977)
  %tobool1816 = icmp ne i32 %call1815, 0
  br i1 %tobool1816, label %if.then.1817, label %if.end.1818

if.then.1817:                                     ; preds = %if.end.1813
  br label %yes

if.end.1818:                                      ; preds = %if.end.1813
  %978 = load %struct.curcur*, %struct.curcur** @PL_regcc, align 8
  %tobool1819 = icmp ne %struct.curcur* %978, null
  br i1 %tobool1819, label %if.then.1820, label %if.end.1822

if.then.1820:                                     ; preds = %if.end.1818
  %979 = load i32, i32* %ln, align 4
  %980 = load %struct.curcur*, %struct.curcur** @PL_regcc, align 8
  %cur1821 = getelementptr inbounds %struct.curcur, %struct.curcur* %980, i32 0, i32 1
  store i32 %979, i32* %cur1821, align 4
  br label %if.end.1822

if.end.1822:                                      ; preds = %if.then.1820, %if.end.1818
  %981 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  store %struct.curcur* %981, %struct.curcur** @PL_regcc, align 8
  br label %no

if.end.1823:                                      ; preds = %land.lhs.true.1804, %sw.bb.1793
  %982 = load i32, i32* %n, align 4
  %983 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %min1824 = getelementptr inbounds %struct.curcur, %struct.curcur* %983, i32 0, i32 2
  %984 = load i32, i32* %min1824, align 4
  %cmp1825 = icmp slt i32 %982, %984
  br i1 %cmp1825, label %if.then.1827, label %if.end.1838

if.then.1827:                                     ; preds = %if.end.1823
  %985 = load i32, i32* %n, align 4
  %986 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %cur1828 = getelementptr inbounds %struct.curcur, %struct.curcur* %986, i32 0, i32 1
  store i32 %985, i32* %cur1828, align 4
  %987 = load i8*, i8** %locinput, align 8
  %988 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %lastloc1829 = getelementptr inbounds %struct.curcur, %struct.curcur* %988, i32 0, i32 7
  store i8* %987, i8** %lastloc1829, align 8
  %989 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %scan1830 = getelementptr inbounds %struct.curcur, %struct.curcur* %989, i32 0, i32 5
  %990 = load %struct.regnode*, %struct.regnode** %scan1830, align 8
  %call1831 = call i32 @S_regmatch(%struct.regnode* %990)
  %tobool1832 = icmp ne i32 %call1831, 0
  br i1 %tobool1832, label %if.then.1833, label %if.end.1834

if.then.1833:                                     ; preds = %if.then.1827
  br label %yes

if.end.1834:                                      ; preds = %if.then.1827
  %991 = load i32, i32* %n, align 4
  %sub1835 = sub nsw i32 %991, 1
  %992 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %cur1836 = getelementptr inbounds %struct.curcur, %struct.curcur* %992, i32 0, i32 1
  store i32 %sub1835, i32* %cur1836, align 4
  %993 = load i8*, i8** %lastloc1797, align 8
  %994 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %lastloc1837 = getelementptr inbounds %struct.curcur, %struct.curcur* %994, i32 0, i32 7
  store i8* %993, i8** %lastloc1837, align 8
  br label %no

if.end.1838:                                      ; preds = %if.end.1823
  %995 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1839 = getelementptr inbounds %struct.regnode, %struct.regnode* %995, i32 0, i32 0
  %996 = load i8, i8* %flags1839, align 1
  %tobool1840 = icmp ne i8 %996, 0
  br i1 %tobool1840, label %if.then.1841, label %if.end.1920

if.then.1841:                                     ; preds = %if.end.1838
  %997 = load i32, i32* @PL_reg_maxiter, align 4
  %tobool1842 = icmp ne i32 %997, 0
  br i1 %tobool1842, label %if.end.1853, label %if.then.1843

if.then.1843:                                     ; preds = %if.then.1841
  %998 = load i8*, i8** @PL_regeol, align 8
  %999 = load i8*, i8** @PL_bostr, align 8
  %sub.ptr.lhs.cast1844 = ptrtoint i8* %998 to i64
  %sub.ptr.rhs.cast1845 = ptrtoint i8* %999 to i64
  %sub.ptr.sub1846 = sub i64 %sub.ptr.lhs.cast1844, %sub.ptr.rhs.cast1845
  %add1847 = add nsw i64 %sub.ptr.sub1846, 1
  %1000 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1848 = getelementptr inbounds %struct.regnode, %struct.regnode* %1000, i32 0, i32 0
  %1001 = load i8, i8* %flags1848, align 1
  %conv1849 = zext i8 %1001 to i32
  %shr1850 = ashr i32 %conv1849, 4
  %conv1851 = sext i32 %shr1850 to i64
  %mul = mul nsw i64 %add1847, %conv1851
  %conv1852 = trunc i64 %mul to i32
  store i32 %conv1852, i32* @PL_reg_maxiter, align 4
  %1002 = load i32, i32* @PL_reg_maxiter, align 4
  store i32 %1002, i32* @PL_reg_leftiter, align 4
  br label %if.end.1853

if.end.1853:                                      ; preds = %if.then.1843, %if.then.1841
  %1003 = load i32, i32* @PL_reg_leftiter, align 4
  %dec = add nsw i32 %1003, -1
  store i32 %dec, i32* @PL_reg_leftiter, align 4
  %cmp1854 = icmp eq i32 %1003, 0
  br i1 %cmp1854, label %if.then.1856, label %if.end.1880

if.then.1856:                                     ; preds = %if.end.1853
  %1004 = load i32, i32* @PL_reg_maxiter, align 4
  %add1857 = add nsw i32 %1004, 7
  %add1858 = add nsw i32 %add1857, 2
  %div = sdiv i32 %add1858, 8
  store i32 %div, i32* %size, align 4
  %1005 = load i8*, i8** @PL_reg_poscache, align 8
  %tobool1859 = icmp ne i8* %1005, null
  br i1 %tobool1859, label %if.then.1860, label %if.else.1872

if.then.1860:                                     ; preds = %if.then.1856
  %1006 = load i64, i64* @PL_reg_poscache_size, align 8
  %conv1861 = trunc i64 %1006 to i32
  %1007 = load i32, i32* %size, align 4
  %cmp1862 = icmp slt i32 %conv1861, %1007
  br i1 %cmp1862, label %if.then.1864, label %if.end.1869

if.then.1864:                                     ; preds = %if.then.1860
  %1008 = load i8*, i8** @PL_reg_poscache, align 8
  %1009 = load i32, i32* %size, align 4
  %conv1865 = sext i32 %1009 to i64
  %mul1866 = mul i64 %conv1865, 1
  %call1867 = call i8* @Perl_safesysrealloc(i8* %1008, i64 %mul1866)
  store i8* %call1867, i8** @PL_reg_poscache, align 8
  %1010 = load i32, i32* %size, align 4
  %conv1868 = sext i32 %1010 to i64
  store i64 %conv1868, i64* @PL_reg_poscache_size, align 8
  br label %if.end.1869

if.end.1869:                                      ; preds = %if.then.1864, %if.then.1860
  %1011 = load i8*, i8** @PL_reg_poscache, align 8
  %1012 = load i32, i32* %size, align 4
  %conv1870 = sext i32 %1012 to i64
  %mul1871 = mul i64 %conv1870, 1
  call void @llvm.memset.p0i8.i64(i8* %1011, i8 0, i64 %mul1871, i32 1, i1 false)
  br label %if.end.1879

if.else.1872:                                     ; preds = %if.then.1856
  %1013 = load i32, i32* %size, align 4
  %conv1873 = sext i32 %1013 to i64
  store i64 %conv1873, i64* @PL_reg_poscache_size, align 8
  %1014 = load i32, i32* %size, align 4
  %conv1874 = sext i32 %1014 to i64
  %mul1875 = mul i64 %conv1874, 1
  %call1876 = call i8* @Perl_safesysmalloc(i64 %mul1875)
  store i8* %call1876, i8** @PL_reg_poscache, align 8
  %1015 = load i8*, i8** @PL_reg_poscache, align 8
  %1016 = load i32, i32* %size, align 4
  %conv1877 = sext i32 %1016 to i64
  %mul1878 = mul i64 %conv1877, 1
  call void @llvm.memset.p0i8.i64(i8* %1015, i8 0, i64 %mul1878, i32 1, i1 false)
  br label %if.end.1879

if.end.1879:                                      ; preds = %if.else.1872, %if.end.1869
  br label %if.end.1880

if.end.1880:                                      ; preds = %if.end.1879, %if.end.1853
  %1017 = load i32, i32* @PL_reg_leftiter, align 4
  %cmp1881 = icmp slt i32 %1017, 0
  br i1 %cmp1881, label %if.then.1883, label %if.end.1919

if.then.1883:                                     ; preds = %if.end.1880
  %1018 = load i8*, i8** %locinput, align 8
  %1019 = load i8*, i8** @PL_bostr, align 8
  %sub.ptr.lhs.cast1884 = ptrtoint i8* %1018 to i64
  %sub.ptr.rhs.cast1885 = ptrtoint i8* %1019 to i64
  %sub.ptr.sub1886 = sub i64 %sub.ptr.lhs.cast1884, %sub.ptr.rhs.cast1885
  %conv1887 = trunc i64 %sub.ptr.sub1886 to i32
  store i32 %conv1887, i32* %cache_offset, align 4
  %1020 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1888 = getelementptr inbounds %struct.regnode, %struct.regnode* %1020, i32 0, i32 0
  %1021 = load i8, i8* %flags1888, align 1
  %conv1889 = zext i8 %1021 to i32
  %and1890 = and i32 %conv1889, 15
  %sub1891 = sub nsw i32 %and1890, 1
  %add1892 = add nsw i32 %sub1891, 2
  %1022 = load i32, i32* %cache_offset, align 4
  %1023 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1893 = getelementptr inbounds %struct.regnode, %struct.regnode* %1023, i32 0, i32 0
  %1024 = load i8, i8* %flags1893, align 1
  %conv1894 = zext i8 %1024 to i32
  %shr1895 = ashr i32 %conv1894, 4
  %mul1896 = mul nsw i32 %1022, %shr1895
  %add1897 = add nsw i32 %add1892, %mul1896
  store i32 %add1897, i32* %cache_offset, align 4
  %1025 = load i32, i32* %cache_offset, align 4
  %rem = srem i32 %1025, 8
  store i32 %rem, i32* %cache_bit, align 4
  %1026 = load i32, i32* %cache_offset, align 4
  %div1898 = sdiv i32 %1026, 8
  store i32 %div1898, i32* %cache_offset, align 4
  %1027 = load i32, i32* %cache_offset, align 4
  %idxprom1899 = sext i32 %1027 to i64
  %1028 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx1900 = getelementptr inbounds i8, i8* %1028, i64 %idxprom1899
  %1029 = load i8, i8* %arrayidx1900, align 1
  %conv1901 = sext i8 %1029 to i32
  %1030 = load i32, i32* %cache_bit, align 4
  %shl1902 = shl i32 1, %1030
  %and1903 = and i32 %conv1901, %shl1902
  %tobool1904 = icmp ne i32 %and1903, 0
  br i1 %tobool1904, label %if.then.1905, label %if.end.1912

if.then.1905:                                     ; preds = %if.then.1883
  %1031 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx1906 = getelementptr inbounds i8, i8* %1031, i64 0
  %1032 = load i8, i8* %arrayidx1906, align 1
  %conv1907 = sext i8 %1032 to i32
  %and1908 = and i32 %conv1907, 1
  %tobool1909 = icmp ne i32 %and1908, 0
  br i1 %tobool1909, label %if.then.1910, label %if.else.1911

if.then.1910:                                     ; preds = %if.then.1905
  br label %yes

if.else.1911:                                     ; preds = %if.then.1905
  br label %do_no

if.end.1912:                                      ; preds = %if.then.1883
  %1033 = load i32, i32* %cache_bit, align 4
  %shl1913 = shl i32 1, %1033
  %1034 = load i32, i32* %cache_offset, align 4
  %idxprom1914 = sext i32 %1034 to i64
  %1035 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx1915 = getelementptr inbounds i8, i8* %1035, i64 %idxprom1914
  %1036 = load i8, i8* %arrayidx1915, align 1
  %conv1916 = sext i8 %1036 to i32
  %or1917 = or i32 %conv1916, %shl1913
  %conv1918 = trunc i32 %or1917 to i8
  store i8 %conv1918, i8* %arrayidx1915, align 1
  br label %if.end.1919

if.end.1919:                                      ; preds = %if.end.1912, %if.end.1880
  br label %if.end.1920

if.end.1920:                                      ; preds = %if.end.1919, %if.end.1838
  %1037 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %minmod1921 = getelementptr inbounds %struct.curcur, %struct.curcur* %1037, i32 0, i32 4
  %1038 = load i32, i32* %minmod1921, align 4
  %tobool1922 = icmp ne i32 %1038, 0
  br i1 %tobool1922, label %if.then.1923, label %if.end.2122

if.then.1923:                                     ; preds = %if.end.1920
  %1039 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %oldcc1924 = getelementptr inbounds %struct.curcur, %struct.curcur* %1039, i32 0, i32 8
  %1040 = load %struct.curcur*, %struct.curcur** %oldcc1924, align 8
  store %struct.curcur* %1040, %struct.curcur** @PL_regcc, align 8
  %1041 = load %struct.curcur*, %struct.curcur** @PL_regcc, align 8
  %tobool1925 = icmp ne %struct.curcur* %1041, null
  br i1 %tobool1925, label %if.then.1926, label %if.end.1928

if.then.1926:                                     ; preds = %if.then.1923
  %1042 = load %struct.curcur*, %struct.curcur** @PL_regcc, align 8
  %cur1927 = getelementptr inbounds %struct.curcur, %struct.curcur* %1042, i32 0, i32 1
  %1043 = load i32, i32* %cur1927, align 4
  store i32 %1043, i32* %ln, align 4
  br label %if.end.1928

if.end.1928:                                      ; preds = %if.then.1926, %if.then.1923
  %1044 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %parenfloor1929 = getelementptr inbounds %struct.curcur, %struct.curcur* %1044, i32 0, i32 0
  %1045 = load i32, i32* %parenfloor1929, align 4
  %call1930 = call i32 @S_regcppush(i32 %1045)
  store i32 %call1930, i32* %cp1794, align 4
  %1046 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %1046, i32* %lastcp1795, align 4
  %1047 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %next1931 = getelementptr inbounds %struct.curcur, %struct.curcur* %1047, i32 0, i32 6
  %1048 = load %struct.regnode*, %struct.regnode** %next1931, align 8
  %call1932 = call i32 @S_regmatch(%struct.regnode* %1048)
  %tobool1933 = icmp ne i32 %call1932, 0
  br i1 %tobool1933, label %if.then.1934, label %if.end.1966

if.then.1934:                                     ; preds = %if.end.1928
  %1049 = load i32, i32* @PL_savestack_ix, align 4
  %1050 = load i32, i32* %cp1794, align 4
  %cmp1935 = icmp sgt i32 %1049, %1050
  br i1 %cmp1935, label %if.then.1937, label %if.end.1938

if.then.1937:                                     ; preds = %if.then.1934
  %1051 = load i32, i32* %cp1794, align 4
  call void @Perl_leave_scope(i32 %1051)
  br label %if.end.1938

if.end.1938:                                      ; preds = %if.then.1937, %if.then.1934
  %1052 = load i32, i32* %cache_offset, align 4
  %1053 = load i32, i32* %cache_bit, align 4
  %or1939 = or i32 %1052, %1053
  %tobool1940 = icmp ne i32 %or1939, 0
  br i1 %tobool1940, label %if.then.1941, label %if.end.1965

if.then.1941:                                     ; preds = %if.end.1938
  %1054 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx1942 = getelementptr inbounds i8, i8* %1054, i64 0
  %1055 = load i8, i8* %arrayidx1942, align 1
  %conv1943 = sext i8 %1055 to i32
  %and1944 = and i32 %conv1943, 2
  %tobool1945 = icmp ne i32 %and1944, 0
  br i1 %tobool1945, label %if.else.1951, label %if.then.1946

if.then.1946:                                     ; preds = %if.then.1941
  %1056 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx1947 = getelementptr inbounds i8, i8* %1056, i64 0
  %1057 = load i8, i8* %arrayidx1947, align 1
  %conv1948 = sext i8 %1057 to i32
  %or1949 = or i32 %conv1948, 1
  %conv1950 = trunc i32 %or1949 to i8
  store i8 %conv1950, i8* %arrayidx1947, align 1
  br label %if.end.1964

if.else.1951:                                     ; preds = %if.then.1941
  %1058 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx1952 = getelementptr inbounds i8, i8* %1058, i64 0
  %1059 = load i8, i8* %arrayidx1952, align 1
  %conv1953 = sext i8 %1059 to i32
  %and1954 = and i32 %conv1953, 1
  %tobool1955 = icmp ne i32 %and1954, 0
  br i1 %tobool1955, label %if.end.1963, label %if.then.1956

if.then.1956:                                     ; preds = %if.else.1951
  %1060 = load i32, i32* %cache_bit, align 4
  %shl1957 = shl i32 1, %1060
  %neg = xor i32 %shl1957, -1
  %1061 = load i32, i32* %cache_offset, align 4
  %idxprom1958 = sext i32 %1061 to i64
  %1062 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx1959 = getelementptr inbounds i8, i8* %1062, i64 %idxprom1958
  %1063 = load i8, i8* %arrayidx1959, align 1
  %conv1960 = sext i8 %1063 to i32
  %and1961 = and i32 %conv1960, %neg
  %conv1962 = trunc i32 %and1961 to i8
  store i8 %conv1962, i8* %arrayidx1959, align 1
  br label %if.end.1963

if.end.1963:                                      ; preds = %if.then.1956, %if.else.1951
  br label %if.end.1964

if.end.1964:                                      ; preds = %if.end.1963, %if.then.1946
  br label %if.end.1965

if.end.1965:                                      ; preds = %if.end.1964, %if.end.1938
  br label %yes

if.end.1966:                                      ; preds = %if.end.1928
  %1064 = load i32, i32* @PL_savestack_ix, align 4
  %1065 = load i32, i32* %lastcp1795, align 4
  %cmp1967 = icmp sgt i32 %1064, %1065
  br i1 %cmp1967, label %if.then.1969, label %if.end.1970

if.then.1969:                                     ; preds = %if.end.1966
  %1066 = load i32, i32* %lastcp1795, align 4
  call void @Perl_leave_scope(i32 %1066)
  br label %if.end.1970

if.end.1970:                                      ; preds = %if.then.1969, %if.end.1966
  %call1971 = call i8* @S_regcppop()
  %1067 = load %struct.curcur*, %struct.curcur** @PL_regcc, align 8
  %tobool1972 = icmp ne %struct.curcur* %1067, null
  br i1 %tobool1972, label %if.then.1973, label %if.end.1975

if.then.1973:                                     ; preds = %if.end.1970
  %1068 = load i32, i32* %ln, align 4
  %1069 = load %struct.curcur*, %struct.curcur** @PL_regcc, align 8
  %cur1974 = getelementptr inbounds %struct.curcur, %struct.curcur* %1069, i32 0, i32 1
  store i32 %1068, i32* %cur1974, align 4
  br label %if.end.1975

if.end.1975:                                      ; preds = %if.then.1973, %if.end.1970
  %1070 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  store %struct.curcur* %1070, %struct.curcur** @PL_regcc, align 8
  %1071 = load i32, i32* %n, align 4
  %1072 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %max1976 = getelementptr inbounds %struct.curcur, %struct.curcur* %1072, i32 0, i32 3
  %1073 = load i32, i32* %max1976, align 4
  %cmp1977 = icmp sge i32 %1071, %1073
  br i1 %cmp1977, label %if.then.1979, label %if.end.2044

if.then.1979:                                     ; preds = %if.end.1975
  %1074 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings1980 = getelementptr inbounds %struct.cop, %struct.cop* %1074, i32 0, i32 14
  %1075 = load %struct.sv*, %struct.sv** %cop_warnings1980, align 8
  %cmp1981 = icmp ne %struct.sv* %1075, null
  br i1 %cmp1981, label %land.lhs.true.1983, label %lor.lhs.false.1999

land.lhs.true.1983:                               ; preds = %if.then.1979
  %1076 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings1984 = getelementptr inbounds %struct.cop, %struct.cop* %1076, i32 0, i32 14
  %1077 = load %struct.sv*, %struct.sv** %cop_warnings1984, align 8
  %cmp1985 = icmp ne %struct.sv* %1077, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp1985, label %land.lhs.true.1987, label %lor.lhs.false.1999

land.lhs.true.1987:                               ; preds = %land.lhs.true.1983
  %1078 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings1988 = getelementptr inbounds %struct.cop, %struct.cop* %1078, i32 0, i32 14
  %1079 = load %struct.sv*, %struct.sv** %cop_warnings1988, align 8
  %cmp1989 = icmp eq %struct.sv* %1079, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp1989, label %land.lhs.true.2007, label %lor.lhs.false.1991

lor.lhs.false.1991:                               ; preds = %land.lhs.true.1987
  %1080 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings1992 = getelementptr inbounds %struct.cop, %struct.cop* %1080, i32 0, i32 14
  %1081 = load %struct.sv*, %struct.sv** %cop_warnings1992, align 8
  %sv_any1993 = getelementptr inbounds %struct.sv, %struct.sv* %1081, i32 0, i32 0
  %1082 = load i8*, i8** %sv_any1993, align 8
  %1083 = bitcast i8* %1082 to %struct.xpv*
  %xpv_pv1994 = getelementptr inbounds %struct.xpv, %struct.xpv* %1083, i32 0, i32 0
  %1084 = load i8*, i8** %xpv_pv1994, align 8
  %arrayidx1995 = getelementptr inbounds i8, i8* %1084, i64 5
  %1085 = load i8, i8* %arrayidx1995, align 1
  %conv1996 = sext i8 %1085 to i32
  %and1997 = and i32 %conv1996, 1
  %tobool1998 = icmp ne i32 %and1997, 0
  br i1 %tobool1998, label %land.lhs.true.2007, label %lor.lhs.false.1999

lor.lhs.false.1999:                               ; preds = %lor.lhs.false.1991, %land.lhs.true.1983, %if.then.1979
  %1086 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings2000 = getelementptr inbounds %struct.cop, %struct.cop* %1086, i32 0, i32 14
  %1087 = load %struct.sv*, %struct.sv** %cop_warnings2000, align 8
  %cmp2001 = icmp eq %struct.sv* %1087, null
  br i1 %cmp2001, label %land.lhs.true.2003, label %if.end.2015

land.lhs.true.2003:                               ; preds = %lor.lhs.false.1999
  %1088 = load i8, i8* @PL_dowarn, align 1
  %conv2004 = zext i8 %1088 to i32
  %and2005 = and i32 %conv2004, 1
  %tobool2006 = icmp ne i32 %and2005, 0
  br i1 %tobool2006, label %land.lhs.true.2007, label %if.end.2015

land.lhs.true.2007:                               ; preds = %land.lhs.true.2003, %lor.lhs.false.1991, %land.lhs.true.1987
  %1089 = load i32, i32* %n, align 4
  %cmp2008 = icmp sge i32 %1089, 32767
  br i1 %cmp2008, label %land.lhs.true.2010, label %if.end.2015

land.lhs.true.2010:                               ; preds = %land.lhs.true.2007
  %1090 = load i32, i32* @PL_reg_flags, align 4
  %and2011 = and i32 %1090, 2
  %tobool2012 = icmp ne i32 %and2011, 0
  br i1 %tobool2012, label %if.end.2015, label %if.then.2013

if.then.2013:                                     ; preds = %land.lhs.true.2010
  %1091 = load i32, i32* @PL_reg_flags, align 4
  %or2014 = or i32 %1091, 2
  store i32 %or2014, i32* @PL_reg_flags, align 4
  call void (i32, i8*, ...) @Perl_warner(i32 20, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10, i32 0, i32 0), i32 32766)
  br label %if.end.2015

if.end.2015:                                      ; preds = %if.then.2013, %land.lhs.true.2010, %land.lhs.true.2007, %land.lhs.true.2003, %lor.lhs.false.1999
  %1092 = load i32, i32* %cache_offset, align 4
  %1093 = load i32, i32* %cache_bit, align 4
  %or2016 = or i32 %1092, %1093
  %tobool2017 = icmp ne i32 %or2016, 0
  br i1 %tobool2017, label %if.then.2018, label %if.end.2043

if.then.2018:                                     ; preds = %if.end.2015
  %1094 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2019 = getelementptr inbounds i8, i8* %1094, i64 0
  %1095 = load i8, i8* %arrayidx2019, align 1
  %conv2020 = sext i8 %1095 to i32
  %and2021 = and i32 %conv2020, 2
  %tobool2022 = icmp ne i32 %and2021, 0
  br i1 %tobool2022, label %if.else.2028, label %if.then.2023

if.then.2023:                                     ; preds = %if.then.2018
  %1096 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2024 = getelementptr inbounds i8, i8* %1096, i64 0
  %1097 = load i8, i8* %arrayidx2024, align 1
  %conv2025 = sext i8 %1097 to i32
  %or2026 = or i32 %conv2025, 2
  %conv2027 = trunc i32 %or2026 to i8
  store i8 %conv2027, i8* %arrayidx2024, align 1
  br label %if.end.2042

if.else.2028:                                     ; preds = %if.then.2018
  %1098 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2029 = getelementptr inbounds i8, i8* %1098, i64 0
  %1099 = load i8, i8* %arrayidx2029, align 1
  %conv2030 = sext i8 %1099 to i32
  %and2031 = and i32 %conv2030, 1
  %tobool2032 = icmp ne i32 %and2031, 0
  br i1 %tobool2032, label %if.then.2033, label %if.end.2041

if.then.2033:                                     ; preds = %if.else.2028
  %1100 = load i32, i32* %cache_bit, align 4
  %shl2034 = shl i32 1, %1100
  %neg2035 = xor i32 %shl2034, -1
  %1101 = load i32, i32* %cache_offset, align 4
  %idxprom2036 = sext i32 %1101 to i64
  %1102 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2037 = getelementptr inbounds i8, i8* %1102, i64 %idxprom2036
  %1103 = load i8, i8* %arrayidx2037, align 1
  %conv2038 = sext i8 %1103 to i32
  %and2039 = and i32 %conv2038, %neg2035
  %conv2040 = trunc i32 %and2039 to i8
  store i8 %conv2040, i8* %arrayidx2037, align 1
  br label %if.end.2041

if.end.2041:                                      ; preds = %if.then.2033, %if.else.2028
  br label %if.end.2042

if.end.2042:                                      ; preds = %if.end.2041, %if.then.2023
  br label %if.end.2043

if.end.2043:                                      ; preds = %if.end.2042, %if.end.2015
  br label %no

if.end.2044:                                      ; preds = %if.end.1975
  %1104 = load i8*, i8** %locinput, align 8
  store i8* %1104, i8** @PL_reginput, align 8
  %1105 = load i32, i32* %n, align 4
  %1106 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %cur2045 = getelementptr inbounds %struct.curcur, %struct.curcur* %1106, i32 0, i32 1
  store i32 %1105, i32* %cur2045, align 4
  %1107 = load i8*, i8** %locinput, align 8
  %1108 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %lastloc2046 = getelementptr inbounds %struct.curcur, %struct.curcur* %1108, i32 0, i32 7
  store i8* %1107, i8** %lastloc2046, align 8
  %1109 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %parenfloor2047 = getelementptr inbounds %struct.curcur, %struct.curcur* %1109, i32 0, i32 0
  %1110 = load i32, i32* %parenfloor2047, align 4
  %call2048 = call i32 @S_regcppush(i32 %1110)
  store i32 %call2048, i32* %cp1794, align 4
  %1111 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %1111, i32* %lastcp1795, align 4
  %1112 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %scan2049 = getelementptr inbounds %struct.curcur, %struct.curcur* %1112, i32 0, i32 5
  %1113 = load %struct.regnode*, %struct.regnode** %scan2049, align 8
  %call2050 = call i32 @S_regmatch(%struct.regnode* %1113)
  %tobool2051 = icmp ne i32 %call2050, 0
  br i1 %tobool2051, label %if.then.2052, label %if.end.2085

if.then.2052:                                     ; preds = %if.end.2044
  %1114 = load i32, i32* @PL_savestack_ix, align 4
  %1115 = load i32, i32* %cp1794, align 4
  %cmp2053 = icmp sgt i32 %1114, %1115
  br i1 %cmp2053, label %if.then.2055, label %if.end.2056

if.then.2055:                                     ; preds = %if.then.2052
  %1116 = load i32, i32* %cp1794, align 4
  call void @Perl_leave_scope(i32 %1116)
  br label %if.end.2056

if.end.2056:                                      ; preds = %if.then.2055, %if.then.2052
  %1117 = load i32, i32* %cache_offset, align 4
  %1118 = load i32, i32* %cache_bit, align 4
  %or2057 = or i32 %1117, %1118
  %tobool2058 = icmp ne i32 %or2057, 0
  br i1 %tobool2058, label %if.then.2059, label %if.end.2084

if.then.2059:                                     ; preds = %if.end.2056
  %1119 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2060 = getelementptr inbounds i8, i8* %1119, i64 0
  %1120 = load i8, i8* %arrayidx2060, align 1
  %conv2061 = sext i8 %1120 to i32
  %and2062 = and i32 %conv2061, 2
  %tobool2063 = icmp ne i32 %and2062, 0
  br i1 %tobool2063, label %if.else.2069, label %if.then.2064

if.then.2064:                                     ; preds = %if.then.2059
  %1121 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2065 = getelementptr inbounds i8, i8* %1121, i64 0
  %1122 = load i8, i8* %arrayidx2065, align 1
  %conv2066 = sext i8 %1122 to i32
  %or2067 = or i32 %conv2066, 1
  %conv2068 = trunc i32 %or2067 to i8
  store i8 %conv2068, i8* %arrayidx2065, align 1
  br label %if.end.2083

if.else.2069:                                     ; preds = %if.then.2059
  %1123 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2070 = getelementptr inbounds i8, i8* %1123, i64 0
  %1124 = load i8, i8* %arrayidx2070, align 1
  %conv2071 = sext i8 %1124 to i32
  %and2072 = and i32 %conv2071, 1
  %tobool2073 = icmp ne i32 %and2072, 0
  br i1 %tobool2073, label %if.end.2082, label %if.then.2074

if.then.2074:                                     ; preds = %if.else.2069
  %1125 = load i32, i32* %cache_bit, align 4
  %shl2075 = shl i32 1, %1125
  %neg2076 = xor i32 %shl2075, -1
  %1126 = load i32, i32* %cache_offset, align 4
  %idxprom2077 = sext i32 %1126 to i64
  %1127 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2078 = getelementptr inbounds i8, i8* %1127, i64 %idxprom2077
  %1128 = load i8, i8* %arrayidx2078, align 1
  %conv2079 = sext i8 %1128 to i32
  %and2080 = and i32 %conv2079, %neg2076
  %conv2081 = trunc i32 %and2080 to i8
  store i8 %conv2081, i8* %arrayidx2078, align 1
  br label %if.end.2082

if.end.2082:                                      ; preds = %if.then.2074, %if.else.2069
  br label %if.end.2083

if.end.2083:                                      ; preds = %if.end.2082, %if.then.2064
  br label %if.end.2084

if.end.2084:                                      ; preds = %if.end.2083, %if.end.2056
  br label %yes

if.end.2085:                                      ; preds = %if.end.2044
  %1129 = load i32, i32* @PL_savestack_ix, align 4
  %1130 = load i32, i32* %lastcp1795, align 4
  %cmp2086 = icmp sgt i32 %1129, %1130
  br i1 %cmp2086, label %if.then.2088, label %if.end.2089

if.then.2088:                                     ; preds = %if.end.2085
  %1131 = load i32, i32* %lastcp1795, align 4
  call void @Perl_leave_scope(i32 %1131)
  br label %if.end.2089

if.end.2089:                                      ; preds = %if.then.2088, %if.end.2085
  %call2090 = call i8* @S_regcppop()
  %1132 = load i32, i32* %n, align 4
  %sub2091 = sub nsw i32 %1132, 1
  %1133 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %cur2092 = getelementptr inbounds %struct.curcur, %struct.curcur* %1133, i32 0, i32 1
  store i32 %sub2091, i32* %cur2092, align 4
  %1134 = load i8*, i8** %lastloc1797, align 8
  %1135 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %lastloc2093 = getelementptr inbounds %struct.curcur, %struct.curcur* %1135, i32 0, i32 7
  store i8* %1134, i8** %lastloc2093, align 8
  %1136 = load i32, i32* %cache_offset, align 4
  %1137 = load i32, i32* %cache_bit, align 4
  %or2094 = or i32 %1136, %1137
  %tobool2095 = icmp ne i32 %or2094, 0
  br i1 %tobool2095, label %if.then.2096, label %if.end.2121

if.then.2096:                                     ; preds = %if.end.2089
  %1138 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2097 = getelementptr inbounds i8, i8* %1138, i64 0
  %1139 = load i8, i8* %arrayidx2097, align 1
  %conv2098 = sext i8 %1139 to i32
  %and2099 = and i32 %conv2098, 2
  %tobool2100 = icmp ne i32 %and2099, 0
  br i1 %tobool2100, label %if.else.2106, label %if.then.2101

if.then.2101:                                     ; preds = %if.then.2096
  %1140 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2102 = getelementptr inbounds i8, i8* %1140, i64 0
  %1141 = load i8, i8* %arrayidx2102, align 1
  %conv2103 = sext i8 %1141 to i32
  %or2104 = or i32 %conv2103, 2
  %conv2105 = trunc i32 %or2104 to i8
  store i8 %conv2105, i8* %arrayidx2102, align 1
  br label %if.end.2120

if.else.2106:                                     ; preds = %if.then.2096
  %1142 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2107 = getelementptr inbounds i8, i8* %1142, i64 0
  %1143 = load i8, i8* %arrayidx2107, align 1
  %conv2108 = sext i8 %1143 to i32
  %and2109 = and i32 %conv2108, 1
  %tobool2110 = icmp ne i32 %and2109, 0
  br i1 %tobool2110, label %if.then.2111, label %if.end.2119

if.then.2111:                                     ; preds = %if.else.2106
  %1144 = load i32, i32* %cache_bit, align 4
  %shl2112 = shl i32 1, %1144
  %neg2113 = xor i32 %shl2112, -1
  %1145 = load i32, i32* %cache_offset, align 4
  %idxprom2114 = sext i32 %1145 to i64
  %1146 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2115 = getelementptr inbounds i8, i8* %1146, i64 %idxprom2114
  %1147 = load i8, i8* %arrayidx2115, align 1
  %conv2116 = sext i8 %1147 to i32
  %and2117 = and i32 %conv2116, %neg2113
  %conv2118 = trunc i32 %and2117 to i8
  store i8 %conv2118, i8* %arrayidx2115, align 1
  br label %if.end.2119

if.end.2119:                                      ; preds = %if.then.2111, %if.else.2106
  br label %if.end.2120

if.end.2120:                                      ; preds = %if.end.2119, %if.then.2101
  br label %if.end.2121

if.end.2121:                                      ; preds = %if.end.2120, %if.end.2089
  br label %no

if.end.2122:                                      ; preds = %if.end.1920
  %1148 = load i32, i32* %n, align 4
  %1149 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %max2123 = getelementptr inbounds %struct.curcur, %struct.curcur* %1149, i32 0, i32 3
  %1150 = load i32, i32* %max2123, align 4
  %cmp2124 = icmp slt i32 %1148, %1150
  br i1 %cmp2124, label %if.then.2126, label %if.end.2173

if.then.2126:                                     ; preds = %if.end.2122
  %1151 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %parenfloor2127 = getelementptr inbounds %struct.curcur, %struct.curcur* %1151, i32 0, i32 0
  %1152 = load i32, i32* %parenfloor2127, align 4
  %call2128 = call i32 @S_regcppush(i32 %1152)
  store i32 %call2128, i32* %cp1794, align 4
  %1153 = load i32, i32* %n, align 4
  %1154 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %cur2129 = getelementptr inbounds %struct.curcur, %struct.curcur* %1154, i32 0, i32 1
  store i32 %1153, i32* %cur2129, align 4
  %1155 = load i8*, i8** %locinput, align 8
  %1156 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %lastloc2130 = getelementptr inbounds %struct.curcur, %struct.curcur* %1156, i32 0, i32 7
  store i8* %1155, i8** %lastloc2130, align 8
  %1157 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %1157, i32* %lastcp1795, align 4
  %1158 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %scan2131 = getelementptr inbounds %struct.curcur, %struct.curcur* %1158, i32 0, i32 5
  %1159 = load %struct.regnode*, %struct.regnode** %scan2131, align 8
  %call2132 = call i32 @S_regmatch(%struct.regnode* %1159)
  %tobool2133 = icmp ne i32 %call2132, 0
  br i1 %tobool2133, label %if.then.2134, label %if.end.2167

if.then.2134:                                     ; preds = %if.then.2126
  %1160 = load i32, i32* @PL_savestack_ix, align 4
  %1161 = load i32, i32* %cp1794, align 4
  %cmp2135 = icmp sgt i32 %1160, %1161
  br i1 %cmp2135, label %if.then.2137, label %if.end.2138

if.then.2137:                                     ; preds = %if.then.2134
  %1162 = load i32, i32* %cp1794, align 4
  call void @Perl_leave_scope(i32 %1162)
  br label %if.end.2138

if.end.2138:                                      ; preds = %if.then.2137, %if.then.2134
  %1163 = load i32, i32* %cache_offset, align 4
  %1164 = load i32, i32* %cache_bit, align 4
  %or2139 = or i32 %1163, %1164
  %tobool2140 = icmp ne i32 %or2139, 0
  br i1 %tobool2140, label %if.then.2141, label %if.end.2166

if.then.2141:                                     ; preds = %if.end.2138
  %1165 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2142 = getelementptr inbounds i8, i8* %1165, i64 0
  %1166 = load i8, i8* %arrayidx2142, align 1
  %conv2143 = sext i8 %1166 to i32
  %and2144 = and i32 %conv2143, 2
  %tobool2145 = icmp ne i32 %and2144, 0
  br i1 %tobool2145, label %if.else.2151, label %if.then.2146

if.then.2146:                                     ; preds = %if.then.2141
  %1167 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2147 = getelementptr inbounds i8, i8* %1167, i64 0
  %1168 = load i8, i8* %arrayidx2147, align 1
  %conv2148 = sext i8 %1168 to i32
  %or2149 = or i32 %conv2148, 1
  %conv2150 = trunc i32 %or2149 to i8
  store i8 %conv2150, i8* %arrayidx2147, align 1
  br label %if.end.2165

if.else.2151:                                     ; preds = %if.then.2141
  %1169 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2152 = getelementptr inbounds i8, i8* %1169, i64 0
  %1170 = load i8, i8* %arrayidx2152, align 1
  %conv2153 = sext i8 %1170 to i32
  %and2154 = and i32 %conv2153, 1
  %tobool2155 = icmp ne i32 %and2154, 0
  br i1 %tobool2155, label %if.end.2164, label %if.then.2156

if.then.2156:                                     ; preds = %if.else.2151
  %1171 = load i32, i32* %cache_bit, align 4
  %shl2157 = shl i32 1, %1171
  %neg2158 = xor i32 %shl2157, -1
  %1172 = load i32, i32* %cache_offset, align 4
  %idxprom2159 = sext i32 %1172 to i64
  %1173 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2160 = getelementptr inbounds i8, i8* %1173, i64 %idxprom2159
  %1174 = load i8, i8* %arrayidx2160, align 1
  %conv2161 = sext i8 %1174 to i32
  %and2162 = and i32 %conv2161, %neg2158
  %conv2163 = trunc i32 %and2162 to i8
  store i8 %conv2163, i8* %arrayidx2160, align 1
  br label %if.end.2164

if.end.2164:                                      ; preds = %if.then.2156, %if.else.2151
  br label %if.end.2165

if.end.2165:                                      ; preds = %if.end.2164, %if.then.2146
  br label %if.end.2166

if.end.2166:                                      ; preds = %if.end.2165, %if.end.2138
  br label %yes

if.end.2167:                                      ; preds = %if.then.2126
  %1175 = load i32, i32* @PL_savestack_ix, align 4
  %1176 = load i32, i32* %lastcp1795, align 4
  %cmp2168 = icmp sgt i32 %1175, %1176
  br i1 %cmp2168, label %if.then.2170, label %if.end.2171

if.then.2170:                                     ; preds = %if.end.2167
  %1177 = load i32, i32* %lastcp1795, align 4
  call void @Perl_leave_scope(i32 %1177)
  br label %if.end.2171

if.end.2171:                                      ; preds = %if.then.2170, %if.end.2167
  %call2172 = call i8* @S_regcppop()
  %1178 = load i8*, i8** %locinput, align 8
  store i8* %1178, i8** @PL_reginput, align 8
  br label %if.end.2173

if.end.2173:                                      ; preds = %if.end.2171, %if.end.2122
  %1179 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings2174 = getelementptr inbounds %struct.cop, %struct.cop* %1179, i32 0, i32 14
  %1180 = load %struct.sv*, %struct.sv** %cop_warnings2174, align 8
  %cmp2175 = icmp ne %struct.sv* %1180, null
  br i1 %cmp2175, label %land.lhs.true.2177, label %lor.lhs.false.2193

land.lhs.true.2177:                               ; preds = %if.end.2173
  %1181 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings2178 = getelementptr inbounds %struct.cop, %struct.cop* %1181, i32 0, i32 14
  %1182 = load %struct.sv*, %struct.sv** %cop_warnings2178, align 8
  %cmp2179 = icmp ne %struct.sv* %1182, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp2179, label %land.lhs.true.2181, label %lor.lhs.false.2193

land.lhs.true.2181:                               ; preds = %land.lhs.true.2177
  %1183 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings2182 = getelementptr inbounds %struct.cop, %struct.cop* %1183, i32 0, i32 14
  %1184 = load %struct.sv*, %struct.sv** %cop_warnings2182, align 8
  %cmp2183 = icmp eq %struct.sv* %1184, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp2183, label %land.lhs.true.2201, label %lor.lhs.false.2185

lor.lhs.false.2185:                               ; preds = %land.lhs.true.2181
  %1185 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings2186 = getelementptr inbounds %struct.cop, %struct.cop* %1185, i32 0, i32 14
  %1186 = load %struct.sv*, %struct.sv** %cop_warnings2186, align 8
  %sv_any2187 = getelementptr inbounds %struct.sv, %struct.sv* %1186, i32 0, i32 0
  %1187 = load i8*, i8** %sv_any2187, align 8
  %1188 = bitcast i8* %1187 to %struct.xpv*
  %xpv_pv2188 = getelementptr inbounds %struct.xpv, %struct.xpv* %1188, i32 0, i32 0
  %1189 = load i8*, i8** %xpv_pv2188, align 8
  %arrayidx2189 = getelementptr inbounds i8, i8* %1189, i64 5
  %1190 = load i8, i8* %arrayidx2189, align 1
  %conv2190 = sext i8 %1190 to i32
  %and2191 = and i32 %conv2190, 1
  %tobool2192 = icmp ne i32 %and2191, 0
  br i1 %tobool2192, label %land.lhs.true.2201, label %lor.lhs.false.2193

lor.lhs.false.2193:                               ; preds = %lor.lhs.false.2185, %land.lhs.true.2177, %if.end.2173
  %1191 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings2194 = getelementptr inbounds %struct.cop, %struct.cop* %1191, i32 0, i32 14
  %1192 = load %struct.sv*, %struct.sv** %cop_warnings2194, align 8
  %cmp2195 = icmp eq %struct.sv* %1192, null
  br i1 %cmp2195, label %land.lhs.true.2197, label %if.end.2209

land.lhs.true.2197:                               ; preds = %lor.lhs.false.2193
  %1193 = load i8, i8* @PL_dowarn, align 1
  %conv2198 = zext i8 %1193 to i32
  %and2199 = and i32 %conv2198, 1
  %tobool2200 = icmp ne i32 %and2199, 0
  br i1 %tobool2200, label %land.lhs.true.2201, label %if.end.2209

land.lhs.true.2201:                               ; preds = %land.lhs.true.2197, %lor.lhs.false.2185, %land.lhs.true.2181
  %1194 = load i32, i32* %n, align 4
  %cmp2202 = icmp sge i32 %1194, 32767
  br i1 %cmp2202, label %land.lhs.true.2204, label %if.end.2209

land.lhs.true.2204:                               ; preds = %land.lhs.true.2201
  %1195 = load i32, i32* @PL_reg_flags, align 4
  %and2205 = and i32 %1195, 2
  %tobool2206 = icmp ne i32 %and2205, 0
  br i1 %tobool2206, label %if.end.2209, label %if.then.2207

if.then.2207:                                     ; preds = %land.lhs.true.2204
  %1196 = load i32, i32* @PL_reg_flags, align 4
  %or2208 = or i32 %1196, 2
  store i32 %or2208, i32* @PL_reg_flags, align 4
  call void (i32, i8*, ...) @Perl_warner(i32 20, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10, i32 0, i32 0), i32 32766)
  br label %if.end.2209

if.end.2209:                                      ; preds = %if.then.2207, %land.lhs.true.2204, %land.lhs.true.2201, %land.lhs.true.2197, %lor.lhs.false.2193
  %1197 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %oldcc2210 = getelementptr inbounds %struct.curcur, %struct.curcur* %1197, i32 0, i32 8
  %1198 = load %struct.curcur*, %struct.curcur** %oldcc2210, align 8
  store %struct.curcur* %1198, %struct.curcur** @PL_regcc, align 8
  %1199 = load %struct.curcur*, %struct.curcur** @PL_regcc, align 8
  %tobool2211 = icmp ne %struct.curcur* %1199, null
  br i1 %tobool2211, label %if.then.2212, label %if.end.2214

if.then.2212:                                     ; preds = %if.end.2209
  %1200 = load %struct.curcur*, %struct.curcur** @PL_regcc, align 8
  %cur2213 = getelementptr inbounds %struct.curcur, %struct.curcur* %1200, i32 0, i32 1
  %1201 = load i32, i32* %cur2213, align 4
  store i32 %1201, i32* %ln, align 4
  br label %if.end.2214

if.end.2214:                                      ; preds = %if.then.2212, %if.end.2209
  %1202 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %next2215 = getelementptr inbounds %struct.curcur, %struct.curcur* %1202, i32 0, i32 6
  %1203 = load %struct.regnode*, %struct.regnode** %next2215, align 8
  %call2216 = call i32 @S_regmatch(%struct.regnode* %1203)
  %tobool2217 = icmp ne i32 %call2216, 0
  br i1 %tobool2217, label %if.then.2218, label %if.end.2247

if.then.2218:                                     ; preds = %if.end.2214
  %1204 = load i32, i32* %cache_offset, align 4
  %1205 = load i32, i32* %cache_bit, align 4
  %or2219 = or i32 %1204, %1205
  %tobool2220 = icmp ne i32 %or2219, 0
  br i1 %tobool2220, label %if.then.2221, label %if.end.2246

if.then.2221:                                     ; preds = %if.then.2218
  %1206 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2222 = getelementptr inbounds i8, i8* %1206, i64 0
  %1207 = load i8, i8* %arrayidx2222, align 1
  %conv2223 = sext i8 %1207 to i32
  %and2224 = and i32 %conv2223, 2
  %tobool2225 = icmp ne i32 %and2224, 0
  br i1 %tobool2225, label %if.else.2231, label %if.then.2226

if.then.2226:                                     ; preds = %if.then.2221
  %1208 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2227 = getelementptr inbounds i8, i8* %1208, i64 0
  %1209 = load i8, i8* %arrayidx2227, align 1
  %conv2228 = sext i8 %1209 to i32
  %or2229 = or i32 %conv2228, 1
  %conv2230 = trunc i32 %or2229 to i8
  store i8 %conv2230, i8* %arrayidx2227, align 1
  br label %if.end.2245

if.else.2231:                                     ; preds = %if.then.2221
  %1210 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2232 = getelementptr inbounds i8, i8* %1210, i64 0
  %1211 = load i8, i8* %arrayidx2232, align 1
  %conv2233 = sext i8 %1211 to i32
  %and2234 = and i32 %conv2233, 1
  %tobool2235 = icmp ne i32 %and2234, 0
  br i1 %tobool2235, label %if.end.2244, label %if.then.2236

if.then.2236:                                     ; preds = %if.else.2231
  %1212 = load i32, i32* %cache_bit, align 4
  %shl2237 = shl i32 1, %1212
  %neg2238 = xor i32 %shl2237, -1
  %1213 = load i32, i32* %cache_offset, align 4
  %idxprom2239 = sext i32 %1213 to i64
  %1214 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2240 = getelementptr inbounds i8, i8* %1214, i64 %idxprom2239
  %1215 = load i8, i8* %arrayidx2240, align 1
  %conv2241 = sext i8 %1215 to i32
  %and2242 = and i32 %conv2241, %neg2238
  %conv2243 = trunc i32 %and2242 to i8
  store i8 %conv2243, i8* %arrayidx2240, align 1
  br label %if.end.2244

if.end.2244:                                      ; preds = %if.then.2236, %if.else.2231
  br label %if.end.2245

if.end.2245:                                      ; preds = %if.end.2244, %if.then.2226
  br label %if.end.2246

if.end.2246:                                      ; preds = %if.end.2245, %if.then.2218
  br label %yes

if.end.2247:                                      ; preds = %if.end.2214
  %1216 = load %struct.curcur*, %struct.curcur** @PL_regcc, align 8
  %tobool2248 = icmp ne %struct.curcur* %1216, null
  br i1 %tobool2248, label %if.then.2249, label %if.end.2251

if.then.2249:                                     ; preds = %if.end.2247
  %1217 = load i32, i32* %ln, align 4
  %1218 = load %struct.curcur*, %struct.curcur** @PL_regcc, align 8
  %cur2250 = getelementptr inbounds %struct.curcur, %struct.curcur* %1218, i32 0, i32 1
  store i32 %1217, i32* %cur2250, align 4
  br label %if.end.2251

if.end.2251:                                      ; preds = %if.then.2249, %if.end.2247
  %1219 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  store %struct.curcur* %1219, %struct.curcur** @PL_regcc, align 8
  %1220 = load i32, i32* %n, align 4
  %sub2252 = sub nsw i32 %1220, 1
  %1221 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %cur2253 = getelementptr inbounds %struct.curcur, %struct.curcur* %1221, i32 0, i32 1
  store i32 %sub2252, i32* %cur2253, align 4
  %1222 = load i8*, i8** %lastloc1797, align 8
  %1223 = load %struct.curcur*, %struct.curcur** %cc1796, align 8
  %lastloc2254 = getelementptr inbounds %struct.curcur, %struct.curcur* %1223, i32 0, i32 7
  store i8* %1222, i8** %lastloc2254, align 8
  %1224 = load i32, i32* %cache_offset, align 4
  %1225 = load i32, i32* %cache_bit, align 4
  %or2255 = or i32 %1224, %1225
  %tobool2256 = icmp ne i32 %or2255, 0
  br i1 %tobool2256, label %if.then.2257, label %if.end.2282

if.then.2257:                                     ; preds = %if.end.2251
  %1226 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2258 = getelementptr inbounds i8, i8* %1226, i64 0
  %1227 = load i8, i8* %arrayidx2258, align 1
  %conv2259 = sext i8 %1227 to i32
  %and2260 = and i32 %conv2259, 2
  %tobool2261 = icmp ne i32 %and2260, 0
  br i1 %tobool2261, label %if.else.2267, label %if.then.2262

if.then.2262:                                     ; preds = %if.then.2257
  %1228 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2263 = getelementptr inbounds i8, i8* %1228, i64 0
  %1229 = load i8, i8* %arrayidx2263, align 1
  %conv2264 = sext i8 %1229 to i32
  %or2265 = or i32 %conv2264, 2
  %conv2266 = trunc i32 %or2265 to i8
  store i8 %conv2266, i8* %arrayidx2263, align 1
  br label %if.end.2281

if.else.2267:                                     ; preds = %if.then.2257
  %1230 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2268 = getelementptr inbounds i8, i8* %1230, i64 0
  %1231 = load i8, i8* %arrayidx2268, align 1
  %conv2269 = sext i8 %1231 to i32
  %and2270 = and i32 %conv2269, 1
  %tobool2271 = icmp ne i32 %and2270, 0
  br i1 %tobool2271, label %if.then.2272, label %if.end.2280

if.then.2272:                                     ; preds = %if.else.2267
  %1232 = load i32, i32* %cache_bit, align 4
  %shl2273 = shl i32 1, %1232
  %neg2274 = xor i32 %shl2273, -1
  %1233 = load i32, i32* %cache_offset, align 4
  %idxprom2275 = sext i32 %1233 to i64
  %1234 = load i8*, i8** @PL_reg_poscache, align 8
  %arrayidx2276 = getelementptr inbounds i8, i8* %1234, i64 %idxprom2275
  %1235 = load i8, i8* %arrayidx2276, align 1
  %conv2277 = sext i8 %1235 to i32
  %and2278 = and i32 %conv2277, %neg2274
  %conv2279 = trunc i32 %and2278 to i8
  store i8 %conv2279, i8* %arrayidx2276, align 1
  br label %if.end.2280

if.end.2280:                                      ; preds = %if.then.2272, %if.else.2267
  br label %if.end.2281

if.end.2281:                                      ; preds = %if.end.2280, %if.then.2262
  br label %if.end.2282

if.end.2282:                                      ; preds = %if.end.2281, %if.end.2251
  br label %no

sw.bb.2283:                                       ; preds = %if.end
  %1236 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1237 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1238 = bitcast %struct.regnode* %1237 to %struct.regnode_1*
  %arg12284 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1238, i32 0, i32 3
  %1239 = load i32, i32* %arg12284, align 4
  %idx.ext2285 = zext i32 %1239 to i64
  %add.ptr2286 = getelementptr inbounds %struct.regnode, %struct.regnode* %1236, i64 %idx.ext2285
  store %struct.regnode* %add.ptr2286, %struct.regnode** %next, align 8
  %1240 = load %struct.regnode*, %struct.regnode** %next, align 8
  %1241 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %cmp2287 = icmp eq %struct.regnode* %1240, %1241
  br i1 %cmp2287, label %if.then.2289, label %if.end.2290

if.then.2289:                                     ; preds = %sw.bb.2283
  store %struct.regnode* null, %struct.regnode** %next, align 8
  br label %if.end.2290

if.end.2290:                                      ; preds = %if.then.2289, %sw.bb.2283
  %1242 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr2291 = getelementptr inbounds %struct.regnode, %struct.regnode* %1242, i64 1
  %add.ptr2292 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr2291, i64 1
  store %struct.regnode* %add.ptr2292, %struct.regnode** %inner, align 8
  br label %do_branch

sw.bb.2293:                                       ; preds = %if.end
  %1243 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr2294 = getelementptr inbounds %struct.regnode, %struct.regnode* %1243, i64 1
  store %struct.regnode* %add.ptr2294, %struct.regnode** %inner, align 8
  br label %do_branch

do_branch:                                        ; preds = %sw.bb.2293, %if.end.2290
  %1244 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type2295 = getelementptr inbounds %struct.regnode, %struct.regnode* %1244, i32 0, i32 1
  %1245 = load i8, i8* %type2295, align 1
  %conv2296 = zext i8 %1245 to i32
  store i32 %conv2296, i32* %c1, align 4
  %1246 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type2297 = getelementptr inbounds %struct.regnode, %struct.regnode* %1246, i32 0, i32 1
  %1247 = load i8, i8* %type2297, align 1
  %conv2298 = zext i8 %1247 to i32
  %1248 = load i32, i32* %c1, align 4
  %cmp2299 = icmp ne i32 %conv2298, %1248
  br i1 %cmp2299, label %if.then.2301, label %if.else.2302

if.then.2301:                                     ; preds = %do_branch
  %1249 = load %struct.regnode*, %struct.regnode** %inner, align 8
  store %struct.regnode* %1249, %struct.regnode** %next, align 8
  br label %if.end.2316

if.else.2302:                                     ; preds = %do_branch
  %1250 = load i32*, i32** @PL_reglastparen, align 8
  %1251 = load i32, i32* %1250, align 4
  store i32 %1251, i32* %lastparen, align 4
  %call2303 = call i32 @Perl_save_alloc(i32 40, i32 0)
  store i32 %call2303, i32* %unwind1, align 4
  %1252 = load %union.any*, %union.any** @PL_savestack, align 8
  %1253 = bitcast %union.any* %1252 to i8*
  %1254 = load i32, i32* %unwind1, align 4
  %idx.ext2304 = sext i32 %1254 to i64
  %add.ptr2305 = getelementptr inbounds i8, i8* %1253, i64 %idx.ext2304
  %1255 = bitcast i8* %add.ptr2305 to %struct.re_unwind_branch_t*
  store %struct.re_unwind_branch_t* %1255, %struct.re_unwind_branch_t** %uw, align 8
  %1256 = load i32, i32* %unwind, align 4
  %1257 = load %struct.re_unwind_branch_t*, %struct.re_unwind_branch_t** %uw, align 8
  %prev2306 = getelementptr inbounds %struct.re_unwind_branch_t, %struct.re_unwind_branch_t* %1257, i32 0, i32 1
  store i32 %1256, i32* %prev2306, align 4
  %1258 = load i32, i32* %unwind1, align 4
  store i32 %1258, i32* %unwind, align 4
  %1259 = load i32, i32* %c1, align 4
  %cmp2307 = icmp eq i32 %1259, 31
  %cond2309 = select i1 %cmp2307, i32 1, i32 2
  %1260 = load %struct.re_unwind_branch_t*, %struct.re_unwind_branch_t** %uw, align 8
  %type2310 = getelementptr inbounds %struct.re_unwind_branch_t, %struct.re_unwind_branch_t* %1260, i32 0, i32 0
  store i32 %cond2309, i32* %type2310, align 4
  %1261 = load i32, i32* %lastparen, align 4
  %1262 = load %struct.re_unwind_branch_t*, %struct.re_unwind_branch_t** %uw, align 8
  %lastparen2311 = getelementptr inbounds %struct.re_unwind_branch_t, %struct.re_unwind_branch_t* %1262, i32 0, i32 3
  store i32 %1261, i32* %lastparen2311, align 4
  %1263 = load %struct.regnode*, %struct.regnode** %next, align 8
  %1264 = load %struct.re_unwind_branch_t*, %struct.re_unwind_branch_t** %uw, align 8
  %next2312 = getelementptr inbounds %struct.re_unwind_branch_t, %struct.re_unwind_branch_t* %1264, i32 0, i32 4
  store %struct.regnode* %1263, %struct.regnode** %next2312, align 8
  %1265 = load i8*, i8** %locinput, align 8
  %1266 = load %struct.re_unwind_branch_t*, %struct.re_unwind_branch_t** %uw, align 8
  %locinput2313 = getelementptr inbounds %struct.re_unwind_branch_t, %struct.re_unwind_branch_t* %1266, i32 0, i32 5
  store i8* %1265, i8** %locinput2313, align 8
  %1267 = load i32, i32* %nextchr, align 4
  %1268 = load %struct.re_unwind_branch_t*, %struct.re_unwind_branch_t** %uw, align 8
  %nextchr2314 = getelementptr inbounds %struct.re_unwind_branch_t, %struct.re_unwind_branch_t* %1268, i32 0, i32 6
  store i32 %1267, i32* %nextchr2314, align 4
  %1269 = load i32, i32* @PL_savestack_ix, align 4
  %1270 = load %struct.re_unwind_branch_t*, %struct.re_unwind_branch_t** %uw, align 8
  %lastcp2315 = getelementptr inbounds %struct.re_unwind_branch_t, %struct.re_unwind_branch_t* %1270, i32 0, i32 2
  store i32 %1269, i32* %lastcp2315, align 4
  %1271 = load %struct.regnode*, %struct.regnode** %inner, align 8
  store %struct.regnode* %1271, %struct.regnode** %next, align 8
  br label %if.end.2316

if.end.2316:                                      ; preds = %if.else.2302, %if.then.2301
  br label %sw.epilog

sw.bb.2317:                                       ; preds = %if.end
  store i32 1, i32* %minmod, align 4
  br label %sw.epilog

sw.bb.2318:                                       ; preds = %if.end
  store i32 0, i32* %l2319, align 4
  %1272 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1273 = bitcast %struct.regnode* %1272 to %struct.regnode_2*
  %arg12321 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %1273, i32 0, i32 3
  %1274 = load i16, i16* %arg12321, align 2
  %conv2322 = zext i16 %1274 to i32
  store i32 %conv2322, i32* %ln, align 4
  %1275 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1276 = bitcast %struct.regnode* %1275 to %struct.regnode_2*
  %arg22323 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %1276, i32 0, i32 4
  %1277 = load i16, i16* %arg22323, align 2
  %conv2324 = zext i16 %1277 to i32
  store i32 %conv2324, i32* %n, align 4
  %1278 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags2325 = getelementptr inbounds %struct.regnode, %struct.regnode* %1278, i32 0, i32 0
  %1279 = load i8, i8* %flags2325, align 1
  %conv2326 = zext i8 %1279 to i32
  store i32 %conv2326, i32* %paren, align 4
  %1280 = load i32, i32* %paren, align 4
  %tobool2327 = icmp ne i32 %1280, 0
  br i1 %tobool2327, label %if.then.2328, label %if.end.2337

if.then.2328:                                     ; preds = %sw.bb.2318
  %1281 = load i32, i32* %paren, align 4
  %1282 = load i32, i32* @PL_regsize, align 4
  %cmp2329 = icmp sgt i32 %1281, %1282
  br i1 %cmp2329, label %if.then.2331, label %if.end.2332

if.then.2331:                                     ; preds = %if.then.2328
  %1283 = load i32, i32* %paren, align 4
  store i32 %1283, i32* @PL_regsize, align 4
  br label %if.end.2332

if.end.2332:                                      ; preds = %if.then.2331, %if.then.2328
  %1284 = load i32, i32* %paren, align 4
  %1285 = load i32*, i32** @PL_reglastparen, align 8
  %1286 = load i32, i32* %1285, align 4
  %cmp2333 = icmp sgt i32 %1284, %1286
  br i1 %cmp2333, label %if.then.2335, label %if.end.2336

if.then.2335:                                     ; preds = %if.end.2332
  %1287 = load i32, i32* %paren, align 4
  %1288 = load i32*, i32** @PL_reglastparen, align 8
  store i32 %1287, i32* %1288, align 4
  br label %if.end.2336

if.end.2336:                                      ; preds = %if.then.2335, %if.end.2332
  br label %if.end.2337

if.end.2337:                                      ; preds = %if.end.2336, %sw.bb.2318
  %1289 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr2338 = getelementptr inbounds %struct.regnode, %struct.regnode* %1289, i64 1
  %add.ptr2339 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr2338, i64 1
  store %struct.regnode* %add.ptr2339, %struct.regnode** %scan, align 8
  %1290 = load i32, i32* %paren, align 4
  %tobool2340 = icmp ne i32 %1290, 0
  br i1 %tobool2340, label %if.then.2341, label %if.end.2346

if.then.2341:                                     ; preds = %if.end.2337
  %1291 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %next_off2342 = getelementptr inbounds %struct.regnode, %struct.regnode* %1291, i32 0, i32 2
  %1292 = load i16, i16* %next_off2342, align 2
  %conv2343 = zext i16 %1292 to i32
  %1293 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %idx.ext2344 = sext i32 %conv2343 to i64
  %add.ptr2345 = getelementptr inbounds %struct.regnode, %struct.regnode* %1293, i64 %idx.ext2344
  store %struct.regnode* %add.ptr2345, %struct.regnode** %scan, align 8
  br label %if.end.2346

if.end.2346:                                      ; preds = %if.then.2341, %if.end.2337
  %1294 = load i8*, i8** %locinput, align 8
  store i8* %1294, i8** @PL_reginput, align 8
  %1295 = load i32, i32* %minmod, align 4
  %tobool2347 = icmp ne i32 %1295, 0
  br i1 %tobool2347, label %if.then.2348, label %if.else.2666

if.then.2348:                                     ; preds = %if.end.2346
  store i32 0, i32* %minmod, align 4
  %1296 = load i32, i32* %ln, align 4
  %tobool2349 = icmp ne i32 %1296, 0
  br i1 %tobool2349, label %land.lhs.true.2350, label %if.end.2355

land.lhs.true.2350:                               ; preds = %if.then.2348
  %1297 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1298 = load i32, i32* %ln, align 4
  %call2351 = call i32 @S_regrepeat_hard(%struct.regnode* %1297, i32 %1298, i32* %l2319)
  %1299 = load i32, i32* %ln, align 4
  %cmp2352 = icmp slt i32 %call2351, %1299
  br i1 %cmp2352, label %if.then.2354, label %if.end.2355

if.then.2354:                                     ; preds = %land.lhs.true.2350
  br label %no

if.end.2355:                                      ; preds = %land.lhs.true.2350, %if.then.2348
  %1300 = load i8*, i8** @PL_reginput, align 8
  store i8* %1300, i8** %locinput, align 8
  %1301 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type2356 = getelementptr inbounds %struct.regnode, %struct.regnode* %1301, i32 0, i32 1
  %1302 = load i8, i8* %type2356, align 1
  %idxprom2357 = zext i8 %1302 to i64
  %arrayidx2358 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom2357
  %1303 = load i8, i8* %arrayidx2358, align 1
  %conv2359 = zext i8 %1303 to i32
  %cmp2360 = icmp eq i32 %conv2359, 33
  br i1 %cmp2360, label %if.then.2416, label %lor.lhs.false.2362

lor.lhs.false.2362:                               ; preds = %if.end.2355
  %1304 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type2363 = getelementptr inbounds %struct.regnode, %struct.regnode* %1304, i32 0, i32 1
  %1305 = load i8, i8* %type2363, align 1
  %idxprom2364 = zext i8 %1305 to i64
  %arrayidx2365 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom2364
  %1306 = load i8, i8* %arrayidx2365, align 1
  %conv2366 = zext i8 %1306 to i32
  %cmp2367 = icmp eq i32 %conv2366, 47
  br i1 %cmp2367, label %if.then.2416, label %lor.lhs.false.2369

lor.lhs.false.2369:                               ; preds = %lor.lhs.false.2362
  %1307 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type2370 = getelementptr inbounds %struct.regnode, %struct.regnode* %1307, i32 0, i32 1
  %1308 = load i8, i8* %type2370, align 1
  %conv2371 = zext i8 %1308 to i32
  %cmp2372 = icmp eq i32 %conv2371, 45
  br i1 %cmp2372, label %if.then.2416, label %lor.lhs.false.2374

lor.lhs.false.2374:                               ; preds = %lor.lhs.false.2369
  %1309 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type2375 = getelementptr inbounds %struct.regnode, %struct.regnode* %1309, i32 0, i32 1
  %1310 = load i8, i8* %type2375, align 1
  %conv2376 = zext i8 %1310 to i32
  %cmp2377 = icmp eq i32 %conv2376, 46
  br i1 %cmp2377, label %if.then.2416, label %lor.lhs.false.2379

lor.lhs.false.2379:                               ; preds = %lor.lhs.false.2374
  %1311 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type2380 = getelementptr inbounds %struct.regnode, %struct.regnode* %1311, i32 0, i32 1
  %1312 = load i8, i8* %type2380, align 1
  %conv2381 = zext i8 %1312 to i32
  %cmp2382 = icmp eq i32 %conv2381, 57
  br i1 %cmp2382, label %if.then.2416, label %lor.lhs.false.2384

lor.lhs.false.2384:                               ; preds = %lor.lhs.false.2379
  %1313 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type2385 = getelementptr inbounds %struct.regnode, %struct.regnode* %1313, i32 0, i32 1
  %1314 = load i8, i8* %type2385, align 1
  %conv2386 = zext i8 %1314 to i32
  %cmp2387 = icmp eq i32 %conv2386, 52
  br i1 %cmp2387, label %if.then.2416, label %lor.lhs.false.2389

lor.lhs.false.2389:                               ; preds = %lor.lhs.false.2384
  %1315 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type2390 = getelementptr inbounds %struct.regnode, %struct.regnode* %1315, i32 0, i32 1
  %1316 = load i8, i8* %type2390, align 1
  %conv2391 = zext i8 %1316 to i32
  %cmp2392 = icmp eq i32 %conv2391, 50
  br i1 %cmp2392, label %if.then.2416, label %lor.lhs.false.2394

lor.lhs.false.2394:                               ; preds = %lor.lhs.false.2389
  %1317 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type2395 = getelementptr inbounds %struct.regnode, %struct.regnode* %1317, i32 0, i32 1
  %1318 = load i8, i8* %type2395, align 1
  %conv2396 = zext i8 %1318 to i32
  %cmp2397 = icmp eq i32 %conv2396, 39
  br i1 %cmp2397, label %if.then.2416, label %lor.lhs.false.2399

lor.lhs.false.2399:                               ; preds = %lor.lhs.false.2394
  %1319 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type2400 = getelementptr inbounds %struct.regnode, %struct.regnode* %1319, i32 0, i32 1
  %1320 = load i8, i8* %type2400, align 1
  %conv2401 = zext i8 %1320 to i32
  %cmp2402 = icmp eq i32 %conv2401, 58
  br i1 %cmp2402, label %if.then.2416, label %lor.lhs.false.2404

lor.lhs.false.2404:                               ; preds = %lor.lhs.false.2399
  %1321 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type2405 = getelementptr inbounds %struct.regnode, %struct.regnode* %1321, i32 0, i32 1
  %1322 = load i8, i8* %type2405, align 1
  %idxprom2406 = zext i8 %1322 to i64
  %arrayidx2407 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom2406
  %1323 = load i8, i8* %arrayidx2407, align 1
  %conv2408 = zext i8 %1323 to i32
  %cmp2409 = icmp eq i32 %conv2408, 40
  br i1 %cmp2409, label %land.lhs.true.2411, label %if.else.2591

land.lhs.true.2411:                               ; preds = %lor.lhs.false.2404
  %1324 = load %struct.regnode*, %struct.regnode** %next, align 8
  %1325 = bitcast %struct.regnode* %1324 to %struct.regnode_2*
  %arg12412 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %1325, i32 0, i32 3
  %1326 = load i16, i16* %arg12412, align 2
  %conv2413 = zext i16 %1326 to i32
  %cmp2414 = icmp sgt i32 %conv2413, 0
  br i1 %cmp2414, label %if.then.2416, label %if.else.2591

if.then.2416:                                     ; preds = %land.lhs.true.2411, %lor.lhs.false.2399, %lor.lhs.false.2394, %lor.lhs.false.2389, %lor.lhs.false.2384, %lor.lhs.false.2379, %lor.lhs.false.2374, %lor.lhs.false.2369, %lor.lhs.false.2362, %if.end.2355
  %1327 = load %struct.regnode*, %struct.regnode** %next, align 8
  store %struct.regnode* %1327, %struct.regnode** %text_node, align 8
  %1328 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type2417 = getelementptr inbounds %struct.regnode, %struct.regnode* %1328, i32 0, i32 1
  %1329 = load i8, i8* %type2417, align 1
  %idxprom2418 = zext i8 %1329 to i64
  %arrayidx2419 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom2418
  %1330 = load i8, i8* %arrayidx2419, align 1
  %conv2420 = zext i8 %1330 to i32
  %cmp2421 = icmp eq i32 %conv2420, 33
  br i1 %cmp2421, label %if.end.2532, label %lor.lhs.false.2423

lor.lhs.false.2423:                               ; preds = %if.then.2416
  %1331 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type2424 = getelementptr inbounds %struct.regnode, %struct.regnode* %1331, i32 0, i32 1
  %1332 = load i8, i8* %type2424, align 1
  %idxprom2425 = zext i8 %1332 to i64
  %arrayidx2426 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom2425
  %1333 = load i8, i8* %arrayidx2426, align 1
  %conv2427 = zext i8 %1333 to i32
  %cmp2428 = icmp eq i32 %conv2427, 47
  br i1 %cmp2428, label %if.end.2532, label %if.then.2430

if.then.2430:                                     ; preds = %lor.lhs.false.2423
  br label %while.cond.2431

while.cond.2431:                                  ; preds = %if.end.2530, %if.then.2430
  %1334 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type2432 = getelementptr inbounds %struct.regnode, %struct.regnode* %1334, i32 0, i32 1
  %1335 = load i8, i8* %type2432, align 1
  %conv2433 = zext i8 %1335 to i32
  %cmp2434 = icmp eq i32 %conv2433, 45
  br i1 %cmp2434, label %lor.end.2480, label %lor.lhs.false.2436

lor.lhs.false.2436:                               ; preds = %while.cond.2431
  %1336 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type2437 = getelementptr inbounds %struct.regnode, %struct.regnode* %1336, i32 0, i32 1
  %1337 = load i8, i8* %type2437, align 1
  %conv2438 = zext i8 %1337 to i32
  %cmp2439 = icmp eq i32 %conv2438, 46
  br i1 %cmp2439, label %lor.end.2480, label %lor.lhs.false.2441

lor.lhs.false.2441:                               ; preds = %lor.lhs.false.2436
  %1338 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type2442 = getelementptr inbounds %struct.regnode, %struct.regnode* %1338, i32 0, i32 1
  %1339 = load i8, i8* %type2442, align 1
  %conv2443 = zext i8 %1339 to i32
  %cmp2444 = icmp eq i32 %conv2443, 57
  br i1 %cmp2444, label %lor.end.2480, label %lor.lhs.false.2446

lor.lhs.false.2446:                               ; preds = %lor.lhs.false.2441
  %1340 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type2447 = getelementptr inbounds %struct.regnode, %struct.regnode* %1340, i32 0, i32 1
  %1341 = load i8, i8* %type2447, align 1
  %conv2448 = zext i8 %1341 to i32
  %cmp2449 = icmp eq i32 %conv2448, 52
  br i1 %cmp2449, label %lor.end.2480, label %lor.lhs.false.2451

lor.lhs.false.2451:                               ; preds = %lor.lhs.false.2446
  %1342 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type2452 = getelementptr inbounds %struct.regnode, %struct.regnode* %1342, i32 0, i32 1
  %1343 = load i8, i8* %type2452, align 1
  %conv2453 = zext i8 %1343 to i32
  %cmp2454 = icmp eq i32 %conv2453, 50
  br i1 %cmp2454, label %lor.end.2480, label %lor.lhs.false.2456

lor.lhs.false.2456:                               ; preds = %lor.lhs.false.2451
  %1344 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type2457 = getelementptr inbounds %struct.regnode, %struct.regnode* %1344, i32 0, i32 1
  %1345 = load i8, i8* %type2457, align 1
  %conv2458 = zext i8 %1345 to i32
  %cmp2459 = icmp eq i32 %conv2458, 39
  br i1 %cmp2459, label %lor.end.2480, label %lor.lhs.false.2461

lor.lhs.false.2461:                               ; preds = %lor.lhs.false.2456
  %1346 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type2462 = getelementptr inbounds %struct.regnode, %struct.regnode* %1346, i32 0, i32 1
  %1347 = load i8, i8* %type2462, align 1
  %conv2463 = zext i8 %1347 to i32
  %cmp2464 = icmp eq i32 %conv2463, 58
  br i1 %cmp2464, label %lor.end.2480, label %lor.rhs.2466

lor.rhs.2466:                                     ; preds = %lor.lhs.false.2461
  %1348 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type2467 = getelementptr inbounds %struct.regnode, %struct.regnode* %1348, i32 0, i32 1
  %1349 = load i8, i8* %type2467, align 1
  %idxprom2468 = zext i8 %1349 to i64
  %arrayidx2469 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom2468
  %1350 = load i8, i8* %arrayidx2469, align 1
  %conv2470 = zext i8 %1350 to i32
  %cmp2471 = icmp eq i32 %conv2470, 40
  br i1 %cmp2471, label %land.rhs.2473, label %land.end.2478

land.rhs.2473:                                    ; preds = %lor.rhs.2466
  %1351 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %1352 = bitcast %struct.regnode* %1351 to %struct.regnode_2*
  %arg12474 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %1352, i32 0, i32 3
  %1353 = load i16, i16* %arg12474, align 2
  %conv2475 = zext i16 %1353 to i32
  %cmp2476 = icmp sgt i32 %conv2475, 0
  br label %land.end.2478

land.end.2478:                                    ; preds = %land.rhs.2473, %lor.rhs.2466
  %1354 = phi i1 [ false, %lor.rhs.2466 ], [ %cmp2476, %land.rhs.2473 ]
  br label %lor.end.2480

lor.end.2480:                                     ; preds = %land.end.2478, %lor.lhs.false.2461, %lor.lhs.false.2456, %lor.lhs.false.2451, %lor.lhs.false.2446, %lor.lhs.false.2441, %lor.lhs.false.2436, %while.cond.2431
  %1355 = phi i1 [ true, %lor.lhs.false.2461 ], [ true, %lor.lhs.false.2456 ], [ true, %lor.lhs.false.2451 ], [ true, %lor.lhs.false.2446 ], [ true, %lor.lhs.false.2441 ], [ true, %lor.lhs.false.2436 ], [ true, %while.cond.2431 ], [ %1354, %land.end.2478 ]
  br i1 %1355, label %while.body.2482, label %while.end.2531

while.body.2482:                                  ; preds = %lor.end.2480
  %1356 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type2483 = getelementptr inbounds %struct.regnode, %struct.regnode* %1356, i32 0, i32 1
  %1357 = load i8, i8* %type2483, align 1
  %conv2484 = zext i8 %1357 to i32
  %cmp2485 = icmp eq i32 %conv2484, 52
  br i1 %cmp2485, label %if.then.2494, label %lor.lhs.false.2487

lor.lhs.false.2487:                               ; preds = %while.body.2482
  %1358 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type2488 = getelementptr inbounds %struct.regnode, %struct.regnode* %1358, i32 0, i32 1
  %1359 = load i8, i8* %type2488, align 1
  %idxprom2489 = zext i8 %1359 to i64
  %arrayidx2490 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom2489
  %1360 = load i8, i8* %arrayidx2490, align 1
  %conv2491 = zext i8 %1360 to i32
  %cmp2492 = icmp eq i32 %conv2491, 40
  br i1 %cmp2492, label %if.then.2494, label %if.else.2497

if.then.2494:                                     ; preds = %lor.lhs.false.2487, %while.body.2482
  %1361 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %add.ptr2495 = getelementptr inbounds %struct.regnode, %struct.regnode* %1361, i64 1
  %add.ptr2496 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr2495, i64 1
  store %struct.regnode* %add.ptr2496, %struct.regnode** %text_node, align 8
  br label %if.end.2530

if.else.2497:                                     ; preds = %lor.lhs.false.2487
  %1362 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type2498 = getelementptr inbounds %struct.regnode, %struct.regnode* %1362, i32 0, i32 1
  %1363 = load i8, i8* %type2498, align 1
  %conv2499 = zext i8 %1363 to i32
  %cmp2500 = icmp eq i32 %conv2499, 39
  br i1 %cmp2500, label %if.then.2502, label %if.else.2504

if.then.2502:                                     ; preds = %if.else.2497
  %1364 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %add.ptr2503 = getelementptr inbounds %struct.regnode, %struct.regnode* %1364, i64 1
  store %struct.regnode* %add.ptr2503, %struct.regnode** %text_node, align 8
  br label %if.end.2529

if.else.2504:                                     ; preds = %if.else.2497
  %1365 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type2505 = getelementptr inbounds %struct.regnode, %struct.regnode* %1365, i32 0, i32 1
  %1366 = load i8, i8* %type2505, align 1
  %conv2506 = zext i8 %1366 to i32
  %cmp2507 = icmp eq i32 %conv2506, 50
  br i1 %cmp2507, label %if.then.2509, label %if.else.2523

if.then.2509:                                     ; preds = %if.else.2504
  %1367 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %flags2510 = getelementptr inbounds %struct.regnode, %struct.regnode* %1367, i32 0, i32 0
  %1368 = load i8, i8* %flags2510, align 1
  %conv2511 = zext i8 %1368 to i32
  %cmp2512 = icmp eq i32 %conv2511, 0
  br i1 %cmp2512, label %cond.true.2514, label %cond.false.2517

cond.true.2514:                                   ; preds = %if.then.2509
  %1369 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %add.ptr2515 = getelementptr inbounds %struct.regnode, %struct.regnode* %1369, i64 1
  %add.ptr2516 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr2515, i64 1
  br label %cond.end.2521

cond.false.2517:                                  ; preds = %if.then.2509
  %1370 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %1371 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %1372 = bitcast %struct.regnode* %1371 to %struct.regnode_1*
  %arg12518 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1372, i32 0, i32 3
  %1373 = load i32, i32* %arg12518, align 4
  %idx.ext2519 = zext i32 %1373 to i64
  %add.ptr2520 = getelementptr inbounds %struct.regnode, %struct.regnode* %1370, i64 %idx.ext2519
  br label %cond.end.2521

cond.end.2521:                                    ; preds = %cond.false.2517, %cond.true.2514
  %cond2522 = phi %struct.regnode* [ %add.ptr2516, %cond.true.2514 ], [ %add.ptr2520, %cond.false.2517 ]
  store %struct.regnode* %cond2522, %struct.regnode** %text_node, align 8
  br label %if.end.2528

if.else.2523:                                     ; preds = %if.else.2504
  %1374 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %next_off2524 = getelementptr inbounds %struct.regnode, %struct.regnode* %1374, i32 0, i32 2
  %1375 = load i16, i16* %next_off2524, align 2
  %conv2525 = zext i16 %1375 to i32
  %1376 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %idx.ext2526 = sext i32 %conv2525 to i64
  %add.ptr2527 = getelementptr inbounds %struct.regnode, %struct.regnode* %1376, i64 %idx.ext2526
  store %struct.regnode* %add.ptr2527, %struct.regnode** %text_node, align 8
  br label %if.end.2528

if.end.2528:                                      ; preds = %if.else.2523, %cond.end.2521
  br label %if.end.2529

if.end.2529:                                      ; preds = %if.end.2528, %if.then.2502
  br label %if.end.2530

if.end.2530:                                      ; preds = %if.end.2529, %if.then.2494
  br label %while.cond.2431

while.end.2531:                                   ; preds = %lor.end.2480
  br label %if.end.2532

if.end.2532:                                      ; preds = %while.end.2531, %lor.lhs.false.2423, %if.then.2416
  %1377 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type2533 = getelementptr inbounds %struct.regnode, %struct.regnode* %1377, i32 0, i32 1
  %1378 = load i8, i8* %type2533, align 1
  %idxprom2534 = zext i8 %1378 to i64
  %arrayidx2535 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom2534
  %1379 = load i8, i8* %arrayidx2535, align 1
  %conv2536 = zext i8 %1379 to i32
  %cmp2537 = icmp eq i32 %conv2536, 33
  br i1 %cmp2537, label %if.else.2547, label %lor.lhs.false.2539

lor.lhs.false.2539:                               ; preds = %if.end.2532
  %1380 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type2540 = getelementptr inbounds %struct.regnode, %struct.regnode* %1380, i32 0, i32 1
  %1381 = load i8, i8* %type2540, align 1
  %idxprom2541 = zext i8 %1381 to i64
  %arrayidx2542 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom2541
  %1382 = load i8, i8* %arrayidx2542, align 1
  %conv2543 = zext i8 %1382 to i32
  %cmp2544 = icmp eq i32 %conv2543, 47
  br i1 %cmp2544, label %if.else.2547, label %if.then.2546

if.then.2546:                                     ; preds = %lor.lhs.false.2539
  store i32 -1000, i32* %c2, align 4
  store i32 -1000, i32* %c1, align 4
  br label %if.end.2590

if.else.2547:                                     ; preds = %lor.lhs.false.2539, %if.end.2532
  %1383 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type2548 = getelementptr inbounds %struct.regnode, %struct.regnode* %1383, i32 0, i32 1
  %1384 = load i8, i8* %type2548, align 1
  %idxprom2549 = zext i8 %1384 to i64
  %arrayidx2550 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom2549
  %1385 = load i8, i8* %arrayidx2550, align 1
  %conv2551 = zext i8 %1385 to i32
  %cmp2552 = icmp eq i32 %conv2551, 47
  br i1 %cmp2552, label %if.then.2554, label %if.else.2555

if.then.2554:                                     ; preds = %if.else.2547
  store i32 -1000, i32* %c2, align 4
  store i32 -1000, i32* %c1, align 4
  br label %assume_ok_MM

if.else.2555:                                     ; preds = %if.else.2547
  %1386 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %1387 = bitcast %struct.regnode* %1386 to %struct.regnode_string*
  %string2556 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %1387, i32 0, i32 3
  %arraydecay2557 = getelementptr inbounds [1 x i8], [1 x i8]* %string2556, i32 0, i32 0
  %1388 = load i8, i8* %arraydecay2557, align 1
  %conv2558 = zext i8 %1388 to i32
  store i32 %conv2558, i32* %c1, align 4
  br label %if.end.2559

if.end.2559:                                      ; preds = %if.else.2555
  %1389 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type2560 = getelementptr inbounds %struct.regnode, %struct.regnode* %1389, i32 0, i32 1
  %1390 = load i8, i8* %type2560, align 1
  %conv2561 = zext i8 %1390 to i32
  %cmp2562 = icmp eq i32 %conv2561, 34
  br i1 %cmp2562, label %if.then.2569, label %lor.lhs.false.2564

lor.lhs.false.2564:                               ; preds = %if.end.2559
  %1391 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type2565 = getelementptr inbounds %struct.regnode, %struct.regnode* %1391, i32 0, i32 1
  %1392 = load i8, i8* %type2565, align 1
  %conv2566 = zext i8 %1392 to i32
  %cmp2567 = icmp eq i32 %conv2566, 48
  br i1 %cmp2567, label %if.then.2569, label %if.else.2573

if.then.2569:                                     ; preds = %lor.lhs.false.2564, %if.end.2559
  %1393 = load i32, i32* %c1, align 4
  %idxprom2570 = sext i32 %1393 to i64
  %arrayidx2571 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_fold, i32 0, i64 %idxprom2570
  %1394 = load i8, i8* %arrayidx2571, align 1
  %conv2572 = zext i8 %1394 to i32
  store i32 %conv2572, i32* %c2, align 4
  br label %if.end.2589

if.else.2573:                                     ; preds = %lor.lhs.false.2564
  %1395 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type2574 = getelementptr inbounds %struct.regnode, %struct.regnode* %1395, i32 0, i32 1
  %1396 = load i8, i8* %type2574, align 1
  %conv2575 = zext i8 %1396 to i32
  %cmp2576 = icmp eq i32 %conv2575, 35
  br i1 %cmp2576, label %if.then.2583, label %lor.lhs.false.2578

lor.lhs.false.2578:                               ; preds = %if.else.2573
  %1397 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type2579 = getelementptr inbounds %struct.regnode, %struct.regnode* %1397, i32 0, i32 1
  %1398 = load i8, i8* %type2579, align 1
  %conv2580 = zext i8 %1398 to i32
  %cmp2581 = icmp eq i32 %conv2580, 49
  br i1 %cmp2581, label %if.then.2583, label %if.else.2587

if.then.2583:                                     ; preds = %lor.lhs.false.2578, %if.else.2573
  %1399 = load i32, i32* %c1, align 4
  %idxprom2584 = sext i32 %1399 to i64
  %arrayidx2585 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_fold_locale, i32 0, i64 %idxprom2584
  %1400 = load i8, i8* %arrayidx2585, align 1
  %conv2586 = zext i8 %1400 to i32
  store i32 %conv2586, i32* %c2, align 4
  br label %if.end.2588

if.else.2587:                                     ; preds = %lor.lhs.false.2578
  %1401 = load i32, i32* %c1, align 4
  store i32 %1401, i32* %c2, align 4
  br label %if.end.2588

if.end.2588:                                      ; preds = %if.else.2587, %if.then.2583
  br label %if.end.2589

if.end.2589:                                      ; preds = %if.end.2588, %if.then.2569
  br label %if.end.2590

if.end.2590:                                      ; preds = %if.end.2589, %if.then.2546
  br label %if.end.2592

if.else.2591:                                     ; preds = %land.lhs.true.2411, %lor.lhs.false.2404
  store i32 -1000, i32* %c2, align 4
  store i32 -1000, i32* %c1, align 4
  br label %if.end.2592

if.end.2592:                                      ; preds = %if.else.2591, %if.end.2590
  br label %assume_ok_MM

assume_ok_MM:                                     ; preds = %if.end.2592, %if.then.2554
  %1402 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %1402, i32* %lastcp2320, align 4
  br label %while.cond.2593

while.cond.2593:                                  ; preds = %if.end.2664, %assume_ok_MM
  %1403 = load i32, i32* %n, align 4
  %1404 = load i32, i32* %ln, align 4
  %cmp2594 = icmp sge i32 %1403, %1404
  br i1 %cmp2594, label %lor.end.2604, label %lor.rhs.2596

lor.rhs.2596:                                     ; preds = %while.cond.2593
  %1405 = load i32, i32* %n, align 4
  %cmp2597 = icmp eq i32 %1405, 32767
  br i1 %cmp2597, label %land.rhs.2599, label %land.end.2602

land.rhs.2599:                                    ; preds = %lor.rhs.2596
  %1406 = load i32, i32* %ln, align 4
  %cmp2600 = icmp sgt i32 %1406, 0
  br label %land.end.2602

land.end.2602:                                    ; preds = %land.rhs.2599, %lor.rhs.2596
  %1407 = phi i1 [ false, %lor.rhs.2596 ], [ %cmp2600, %land.rhs.2599 ]
  br label %lor.end.2604

lor.end.2604:                                     ; preds = %land.end.2602, %while.cond.2593
  %1408 = phi i1 [ true, %while.cond.2593 ], [ %1407, %land.end.2602 ]
  br i1 %1408, label %while.body.2606, label %while.end.2665

while.body.2606:                                  ; preds = %lor.end.2604
  %1409 = load i32, i32* %c1, align 4
  %cmp2607 = icmp eq i32 %1409, -1000
  br i1 %cmp2607, label %if.then.2617, label %lor.lhs.false.2609

lor.lhs.false.2609:                               ; preds = %while.body.2606
  %1410 = load i8*, i8** @PL_reginput, align 8
  %1411 = load i8, i8* %1410, align 1
  %conv2610 = zext i8 %1411 to i32
  %1412 = load i32, i32* %c1, align 4
  %cmp2611 = icmp eq i32 %conv2610, %1412
  br i1 %cmp2611, label %if.then.2617, label %lor.lhs.false.2613

lor.lhs.false.2613:                               ; preds = %lor.lhs.false.2609
  %1413 = load i8*, i8** @PL_reginput, align 8
  %1414 = load i8, i8* %1413, align 1
  %conv2614 = zext i8 %1414 to i32
  %1415 = load i32, i32* %c2, align 4
  %cmp2615 = icmp eq i32 %conv2614, %1415
  br i1 %cmp2615, label %if.then.2617, label %if.end.2658

if.then.2617:                                     ; preds = %lor.lhs.false.2613, %lor.lhs.false.2609, %while.body.2606
  %1416 = load i32, i32* %paren, align 4
  %tobool2618 = icmp ne i32 %1416, 0
  br i1 %tobool2618, label %if.then.2619, label %if.end.2649

if.then.2619:                                     ; preds = %if.then.2617
  %1417 = load i32, i32* %ln, align 4
  %tobool2620 = icmp ne i32 %1417, 0
  br i1 %tobool2620, label %if.then.2621, label %if.else.2645

if.then.2621:                                     ; preds = %if.then.2619
  %1418 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv2622 = sext i8 %1418 to i32
  %tobool2623 = icmp ne i32 %conv2622, 0
  br i1 %tobool2623, label %cond.true.2624, label %cond.false.2627

cond.true.2624:                                   ; preds = %if.then.2621
  %1419 = load i8*, i8** @PL_reginput, align 8
  %1420 = load i32, i32* %l2319, align 4
  %sub2625 = sub nsw i32 0, %1420
  %call2626 = call i8* @S_reghop(i8* %1419, i32 %sub2625)
  br label %cond.end.2631

cond.false.2627:                                  ; preds = %if.then.2621
  %1421 = load i8*, i8** @PL_reginput, align 8
  %1422 = load i32, i32* %l2319, align 4
  %sub2628 = sub nsw i32 0, %1422
  %idx.ext2629 = sext i32 %sub2628 to i64
  %add.ptr2630 = getelementptr inbounds i8, i8* %1421, i64 %idx.ext2629
  br label %cond.end.2631

cond.end.2631:                                    ; preds = %cond.false.2627, %cond.true.2624
  %cond2632 = phi i8* [ %call2626, %cond.true.2624 ], [ %add.ptr2630, %cond.false.2627 ]
  %1423 = load i8*, i8** @PL_bostr, align 8
  %sub.ptr.lhs.cast2633 = ptrtoint i8* %cond2632 to i64
  %sub.ptr.rhs.cast2634 = ptrtoint i8* %1423 to i64
  %sub.ptr.sub2635 = sub i64 %sub.ptr.lhs.cast2633, %sub.ptr.rhs.cast2634
  %conv2636 = trunc i64 %sub.ptr.sub2635 to i32
  %1424 = load i32, i32* %paren, align 4
  %idxprom2637 = sext i32 %1424 to i64
  %1425 = load i32*, i32** @PL_regstartp, align 8
  %arrayidx2638 = getelementptr inbounds i32, i32* %1425, i64 %idxprom2637
  store i32 %conv2636, i32* %arrayidx2638, align 4
  %1426 = load i8*, i8** @PL_reginput, align 8
  %1427 = load i8*, i8** @PL_bostr, align 8
  %sub.ptr.lhs.cast2639 = ptrtoint i8* %1426 to i64
  %sub.ptr.rhs.cast2640 = ptrtoint i8* %1427 to i64
  %sub.ptr.sub2641 = sub i64 %sub.ptr.lhs.cast2639, %sub.ptr.rhs.cast2640
  %conv2642 = trunc i64 %sub.ptr.sub2641 to i32
  %1428 = load i32, i32* %paren, align 4
  %idxprom2643 = sext i32 %1428 to i64
  %1429 = load i32*, i32** @PL_regendp, align 8
  %arrayidx2644 = getelementptr inbounds i32, i32* %1429, i64 %idxprom2643
  store i32 %conv2642, i32* %arrayidx2644, align 4
  br label %if.end.2648

if.else.2645:                                     ; preds = %if.then.2619
  %1430 = load i32, i32* %paren, align 4
  %idxprom2646 = sext i32 %1430 to i64
  %1431 = load i32*, i32** @PL_regendp, align 8
  %arrayidx2647 = getelementptr inbounds i32, i32* %1431, i64 %idxprom2646
  store i32 -1, i32* %arrayidx2647, align 4
  br label %if.end.2648

if.end.2648:                                      ; preds = %if.else.2645, %cond.end.2631
  br label %if.end.2649

if.end.2649:                                      ; preds = %if.end.2648, %if.then.2617
  %1432 = load %struct.regnode*, %struct.regnode** %next, align 8
  %call2650 = call i32 @S_regmatch(%struct.regnode* %1432)
  %tobool2651 = icmp ne i32 %call2650, 0
  br i1 %tobool2651, label %if.then.2652, label %if.end.2653

if.then.2652:                                     ; preds = %if.end.2649
  br label %yes

if.end.2653:                                      ; preds = %if.end.2649
  %1433 = load i32, i32* @PL_savestack_ix, align 4
  %1434 = load i32, i32* %lastcp2320, align 4
  %cmp2654 = icmp sgt i32 %1433, %1434
  br i1 %cmp2654, label %if.then.2656, label %if.end.2657

if.then.2656:                                     ; preds = %if.end.2653
  %1435 = load i32, i32* %lastcp2320, align 4
  call void @Perl_leave_scope(i32 %1435)
  br label %if.end.2657

if.end.2657:                                      ; preds = %if.then.2656, %if.end.2653
  br label %if.end.2658

if.end.2658:                                      ; preds = %if.end.2657, %lor.lhs.false.2613
  %1436 = load i8*, i8** %locinput, align 8
  store i8* %1436, i8** @PL_reginput, align 8
  %1437 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %call2659 = call i32 @S_regrepeat_hard(%struct.regnode* %1437, i32 1, i32* %l2319)
  %tobool2660 = icmp ne i32 %call2659, 0
  br i1 %tobool2660, label %if.then.2661, label %if.else.2663

if.then.2661:                                     ; preds = %if.end.2658
  %1438 = load i32, i32* %ln, align 4
  %inc2662 = add nsw i32 %1438, 1
  store i32 %inc2662, i32* %ln, align 4
  %1439 = load i8*, i8** @PL_reginput, align 8
  store i8* %1439, i8** %locinput, align 8
  br label %if.end.2664

if.else.2663:                                     ; preds = %if.end.2658
  br label %no

if.end.2664:                                      ; preds = %if.then.2661
  br label %while.cond.2593

while.end.2665:                                   ; preds = %lor.end.2604
  br label %if.end.2979

if.else.2666:                                     ; preds = %if.end.2346
  %1440 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1441 = load i32, i32* %n, align 4
  %call2667 = call i32 @S_regrepeat_hard(%struct.regnode* %1440, i32 %1441, i32* %l2319)
  store i32 %call2667, i32* %n, align 4
  %1442 = load i8*, i8** @PL_reginput, align 8
  store i8* %1442, i8** %locinput, align 8
  %1443 = load i32, i32* %n, align 4
  %1444 = load i32, i32* %ln, align 4
  %cmp2668 = icmp sge i32 %1443, %1444
  br i1 %cmp2668, label %if.then.2670, label %if.end.2909

if.then.2670:                                     ; preds = %if.else.2666
  %1445 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type2671 = getelementptr inbounds %struct.regnode, %struct.regnode* %1445, i32 0, i32 1
  %1446 = load i8, i8* %type2671, align 1
  %idxprom2672 = zext i8 %1446 to i64
  %arrayidx2673 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom2672
  %1447 = load i8, i8* %arrayidx2673, align 1
  %conv2674 = zext i8 %1447 to i32
  %cmp2675 = icmp eq i32 %conv2674, 33
  br i1 %cmp2675, label %if.then.2731, label %lor.lhs.false.2677

lor.lhs.false.2677:                               ; preds = %if.then.2670
  %1448 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type2678 = getelementptr inbounds %struct.regnode, %struct.regnode* %1448, i32 0, i32 1
  %1449 = load i8, i8* %type2678, align 1
  %idxprom2679 = zext i8 %1449 to i64
  %arrayidx2680 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom2679
  %1450 = load i8, i8* %arrayidx2680, align 1
  %conv2681 = zext i8 %1450 to i32
  %cmp2682 = icmp eq i32 %conv2681, 47
  br i1 %cmp2682, label %if.then.2731, label %lor.lhs.false.2684

lor.lhs.false.2684:                               ; preds = %lor.lhs.false.2677
  %1451 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type2685 = getelementptr inbounds %struct.regnode, %struct.regnode* %1451, i32 0, i32 1
  %1452 = load i8, i8* %type2685, align 1
  %conv2686 = zext i8 %1452 to i32
  %cmp2687 = icmp eq i32 %conv2686, 45
  br i1 %cmp2687, label %if.then.2731, label %lor.lhs.false.2689

lor.lhs.false.2689:                               ; preds = %lor.lhs.false.2684
  %1453 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type2690 = getelementptr inbounds %struct.regnode, %struct.regnode* %1453, i32 0, i32 1
  %1454 = load i8, i8* %type2690, align 1
  %conv2691 = zext i8 %1454 to i32
  %cmp2692 = icmp eq i32 %conv2691, 46
  br i1 %cmp2692, label %if.then.2731, label %lor.lhs.false.2694

lor.lhs.false.2694:                               ; preds = %lor.lhs.false.2689
  %1455 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type2695 = getelementptr inbounds %struct.regnode, %struct.regnode* %1455, i32 0, i32 1
  %1456 = load i8, i8* %type2695, align 1
  %conv2696 = zext i8 %1456 to i32
  %cmp2697 = icmp eq i32 %conv2696, 57
  br i1 %cmp2697, label %if.then.2731, label %lor.lhs.false.2699

lor.lhs.false.2699:                               ; preds = %lor.lhs.false.2694
  %1457 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type2700 = getelementptr inbounds %struct.regnode, %struct.regnode* %1457, i32 0, i32 1
  %1458 = load i8, i8* %type2700, align 1
  %conv2701 = zext i8 %1458 to i32
  %cmp2702 = icmp eq i32 %conv2701, 52
  br i1 %cmp2702, label %if.then.2731, label %lor.lhs.false.2704

lor.lhs.false.2704:                               ; preds = %lor.lhs.false.2699
  %1459 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type2705 = getelementptr inbounds %struct.regnode, %struct.regnode* %1459, i32 0, i32 1
  %1460 = load i8, i8* %type2705, align 1
  %conv2706 = zext i8 %1460 to i32
  %cmp2707 = icmp eq i32 %conv2706, 50
  br i1 %cmp2707, label %if.then.2731, label %lor.lhs.false.2709

lor.lhs.false.2709:                               ; preds = %lor.lhs.false.2704
  %1461 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type2710 = getelementptr inbounds %struct.regnode, %struct.regnode* %1461, i32 0, i32 1
  %1462 = load i8, i8* %type2710, align 1
  %conv2711 = zext i8 %1462 to i32
  %cmp2712 = icmp eq i32 %conv2711, 39
  br i1 %cmp2712, label %if.then.2731, label %lor.lhs.false.2714

lor.lhs.false.2714:                               ; preds = %lor.lhs.false.2709
  %1463 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type2715 = getelementptr inbounds %struct.regnode, %struct.regnode* %1463, i32 0, i32 1
  %1464 = load i8, i8* %type2715, align 1
  %conv2716 = zext i8 %1464 to i32
  %cmp2717 = icmp eq i32 %conv2716, 58
  br i1 %cmp2717, label %if.then.2731, label %lor.lhs.false.2719

lor.lhs.false.2719:                               ; preds = %lor.lhs.false.2714
  %1465 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type2720 = getelementptr inbounds %struct.regnode, %struct.regnode* %1465, i32 0, i32 1
  %1466 = load i8, i8* %type2720, align 1
  %idxprom2721 = zext i8 %1466 to i64
  %arrayidx2722 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom2721
  %1467 = load i8, i8* %arrayidx2722, align 1
  %conv2723 = zext i8 %1467 to i32
  %cmp2724 = icmp eq i32 %conv2723, 40
  br i1 %cmp2724, label %land.lhs.true.2726, label %if.else.2907

land.lhs.true.2726:                               ; preds = %lor.lhs.false.2719
  %1468 = load %struct.regnode*, %struct.regnode** %next, align 8
  %1469 = bitcast %struct.regnode* %1468 to %struct.regnode_2*
  %arg12727 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %1469, i32 0, i32 3
  %1470 = load i16, i16* %arg12727, align 2
  %conv2728 = zext i16 %1470 to i32
  %cmp2729 = icmp sgt i32 %conv2728, 0
  br i1 %cmp2729, label %if.then.2731, label %if.else.2907

if.then.2731:                                     ; preds = %land.lhs.true.2726, %lor.lhs.false.2714, %lor.lhs.false.2709, %lor.lhs.false.2704, %lor.lhs.false.2699, %lor.lhs.false.2694, %lor.lhs.false.2689, %lor.lhs.false.2684, %lor.lhs.false.2677, %if.then.2670
  %1471 = load %struct.regnode*, %struct.regnode** %next, align 8
  store %struct.regnode* %1471, %struct.regnode** %text_node2732, align 8
  %1472 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %type2733 = getelementptr inbounds %struct.regnode, %struct.regnode* %1472, i32 0, i32 1
  %1473 = load i8, i8* %type2733, align 1
  %idxprom2734 = zext i8 %1473 to i64
  %arrayidx2735 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom2734
  %1474 = load i8, i8* %arrayidx2735, align 1
  %conv2736 = zext i8 %1474 to i32
  %cmp2737 = icmp eq i32 %conv2736, 33
  br i1 %cmp2737, label %if.end.2848, label %lor.lhs.false.2739

lor.lhs.false.2739:                               ; preds = %if.then.2731
  %1475 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %type2740 = getelementptr inbounds %struct.regnode, %struct.regnode* %1475, i32 0, i32 1
  %1476 = load i8, i8* %type2740, align 1
  %idxprom2741 = zext i8 %1476 to i64
  %arrayidx2742 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom2741
  %1477 = load i8, i8* %arrayidx2742, align 1
  %conv2743 = zext i8 %1477 to i32
  %cmp2744 = icmp eq i32 %conv2743, 47
  br i1 %cmp2744, label %if.end.2848, label %if.then.2746

if.then.2746:                                     ; preds = %lor.lhs.false.2739
  br label %while.cond.2747

while.cond.2747:                                  ; preds = %if.end.2846, %if.then.2746
  %1478 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %type2748 = getelementptr inbounds %struct.regnode, %struct.regnode* %1478, i32 0, i32 1
  %1479 = load i8, i8* %type2748, align 1
  %conv2749 = zext i8 %1479 to i32
  %cmp2750 = icmp eq i32 %conv2749, 45
  br i1 %cmp2750, label %lor.end.2796, label %lor.lhs.false.2752

lor.lhs.false.2752:                               ; preds = %while.cond.2747
  %1480 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %type2753 = getelementptr inbounds %struct.regnode, %struct.regnode* %1480, i32 0, i32 1
  %1481 = load i8, i8* %type2753, align 1
  %conv2754 = zext i8 %1481 to i32
  %cmp2755 = icmp eq i32 %conv2754, 46
  br i1 %cmp2755, label %lor.end.2796, label %lor.lhs.false.2757

lor.lhs.false.2757:                               ; preds = %lor.lhs.false.2752
  %1482 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %type2758 = getelementptr inbounds %struct.regnode, %struct.regnode* %1482, i32 0, i32 1
  %1483 = load i8, i8* %type2758, align 1
  %conv2759 = zext i8 %1483 to i32
  %cmp2760 = icmp eq i32 %conv2759, 57
  br i1 %cmp2760, label %lor.end.2796, label %lor.lhs.false.2762

lor.lhs.false.2762:                               ; preds = %lor.lhs.false.2757
  %1484 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %type2763 = getelementptr inbounds %struct.regnode, %struct.regnode* %1484, i32 0, i32 1
  %1485 = load i8, i8* %type2763, align 1
  %conv2764 = zext i8 %1485 to i32
  %cmp2765 = icmp eq i32 %conv2764, 52
  br i1 %cmp2765, label %lor.end.2796, label %lor.lhs.false.2767

lor.lhs.false.2767:                               ; preds = %lor.lhs.false.2762
  %1486 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %type2768 = getelementptr inbounds %struct.regnode, %struct.regnode* %1486, i32 0, i32 1
  %1487 = load i8, i8* %type2768, align 1
  %conv2769 = zext i8 %1487 to i32
  %cmp2770 = icmp eq i32 %conv2769, 50
  br i1 %cmp2770, label %lor.end.2796, label %lor.lhs.false.2772

lor.lhs.false.2772:                               ; preds = %lor.lhs.false.2767
  %1488 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %type2773 = getelementptr inbounds %struct.regnode, %struct.regnode* %1488, i32 0, i32 1
  %1489 = load i8, i8* %type2773, align 1
  %conv2774 = zext i8 %1489 to i32
  %cmp2775 = icmp eq i32 %conv2774, 39
  br i1 %cmp2775, label %lor.end.2796, label %lor.lhs.false.2777

lor.lhs.false.2777:                               ; preds = %lor.lhs.false.2772
  %1490 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %type2778 = getelementptr inbounds %struct.regnode, %struct.regnode* %1490, i32 0, i32 1
  %1491 = load i8, i8* %type2778, align 1
  %conv2779 = zext i8 %1491 to i32
  %cmp2780 = icmp eq i32 %conv2779, 58
  br i1 %cmp2780, label %lor.end.2796, label %lor.rhs.2782

lor.rhs.2782:                                     ; preds = %lor.lhs.false.2777
  %1492 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %type2783 = getelementptr inbounds %struct.regnode, %struct.regnode* %1492, i32 0, i32 1
  %1493 = load i8, i8* %type2783, align 1
  %idxprom2784 = zext i8 %1493 to i64
  %arrayidx2785 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom2784
  %1494 = load i8, i8* %arrayidx2785, align 1
  %conv2786 = zext i8 %1494 to i32
  %cmp2787 = icmp eq i32 %conv2786, 40
  br i1 %cmp2787, label %land.rhs.2789, label %land.end.2794

land.rhs.2789:                                    ; preds = %lor.rhs.2782
  %1495 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %1496 = bitcast %struct.regnode* %1495 to %struct.regnode_2*
  %arg12790 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %1496, i32 0, i32 3
  %1497 = load i16, i16* %arg12790, align 2
  %conv2791 = zext i16 %1497 to i32
  %cmp2792 = icmp sgt i32 %conv2791, 0
  br label %land.end.2794

land.end.2794:                                    ; preds = %land.rhs.2789, %lor.rhs.2782
  %1498 = phi i1 [ false, %lor.rhs.2782 ], [ %cmp2792, %land.rhs.2789 ]
  br label %lor.end.2796

lor.end.2796:                                     ; preds = %land.end.2794, %lor.lhs.false.2777, %lor.lhs.false.2772, %lor.lhs.false.2767, %lor.lhs.false.2762, %lor.lhs.false.2757, %lor.lhs.false.2752, %while.cond.2747
  %1499 = phi i1 [ true, %lor.lhs.false.2777 ], [ true, %lor.lhs.false.2772 ], [ true, %lor.lhs.false.2767 ], [ true, %lor.lhs.false.2762 ], [ true, %lor.lhs.false.2757 ], [ true, %lor.lhs.false.2752 ], [ true, %while.cond.2747 ], [ %1498, %land.end.2794 ]
  br i1 %1499, label %while.body.2798, label %while.end.2847

while.body.2798:                                  ; preds = %lor.end.2796
  %1500 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %type2799 = getelementptr inbounds %struct.regnode, %struct.regnode* %1500, i32 0, i32 1
  %1501 = load i8, i8* %type2799, align 1
  %conv2800 = zext i8 %1501 to i32
  %cmp2801 = icmp eq i32 %conv2800, 52
  br i1 %cmp2801, label %if.then.2810, label %lor.lhs.false.2803

lor.lhs.false.2803:                               ; preds = %while.body.2798
  %1502 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %type2804 = getelementptr inbounds %struct.regnode, %struct.regnode* %1502, i32 0, i32 1
  %1503 = load i8, i8* %type2804, align 1
  %idxprom2805 = zext i8 %1503 to i64
  %arrayidx2806 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom2805
  %1504 = load i8, i8* %arrayidx2806, align 1
  %conv2807 = zext i8 %1504 to i32
  %cmp2808 = icmp eq i32 %conv2807, 40
  br i1 %cmp2808, label %if.then.2810, label %if.else.2813

if.then.2810:                                     ; preds = %lor.lhs.false.2803, %while.body.2798
  %1505 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %add.ptr2811 = getelementptr inbounds %struct.regnode, %struct.regnode* %1505, i64 1
  %add.ptr2812 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr2811, i64 1
  store %struct.regnode* %add.ptr2812, %struct.regnode** %text_node2732, align 8
  br label %if.end.2846

if.else.2813:                                     ; preds = %lor.lhs.false.2803
  %1506 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %type2814 = getelementptr inbounds %struct.regnode, %struct.regnode* %1506, i32 0, i32 1
  %1507 = load i8, i8* %type2814, align 1
  %conv2815 = zext i8 %1507 to i32
  %cmp2816 = icmp eq i32 %conv2815, 39
  br i1 %cmp2816, label %if.then.2818, label %if.else.2820

if.then.2818:                                     ; preds = %if.else.2813
  %1508 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %add.ptr2819 = getelementptr inbounds %struct.regnode, %struct.regnode* %1508, i64 1
  store %struct.regnode* %add.ptr2819, %struct.regnode** %text_node2732, align 8
  br label %if.end.2845

if.else.2820:                                     ; preds = %if.else.2813
  %1509 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %type2821 = getelementptr inbounds %struct.regnode, %struct.regnode* %1509, i32 0, i32 1
  %1510 = load i8, i8* %type2821, align 1
  %conv2822 = zext i8 %1510 to i32
  %cmp2823 = icmp eq i32 %conv2822, 50
  br i1 %cmp2823, label %if.then.2825, label %if.else.2839

if.then.2825:                                     ; preds = %if.else.2820
  %1511 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %flags2826 = getelementptr inbounds %struct.regnode, %struct.regnode* %1511, i32 0, i32 0
  %1512 = load i8, i8* %flags2826, align 1
  %conv2827 = zext i8 %1512 to i32
  %cmp2828 = icmp eq i32 %conv2827, 0
  br i1 %cmp2828, label %cond.true.2830, label %cond.false.2833

cond.true.2830:                                   ; preds = %if.then.2825
  %1513 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %add.ptr2831 = getelementptr inbounds %struct.regnode, %struct.regnode* %1513, i64 1
  %add.ptr2832 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr2831, i64 1
  br label %cond.end.2837

cond.false.2833:                                  ; preds = %if.then.2825
  %1514 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %1515 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %1516 = bitcast %struct.regnode* %1515 to %struct.regnode_1*
  %arg12834 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1516, i32 0, i32 3
  %1517 = load i32, i32* %arg12834, align 4
  %idx.ext2835 = zext i32 %1517 to i64
  %add.ptr2836 = getelementptr inbounds %struct.regnode, %struct.regnode* %1514, i64 %idx.ext2835
  br label %cond.end.2837

cond.end.2837:                                    ; preds = %cond.false.2833, %cond.true.2830
  %cond2838 = phi %struct.regnode* [ %add.ptr2832, %cond.true.2830 ], [ %add.ptr2836, %cond.false.2833 ]
  store %struct.regnode* %cond2838, %struct.regnode** %text_node2732, align 8
  br label %if.end.2844

if.else.2839:                                     ; preds = %if.else.2820
  %1518 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %next_off2840 = getelementptr inbounds %struct.regnode, %struct.regnode* %1518, i32 0, i32 2
  %1519 = load i16, i16* %next_off2840, align 2
  %conv2841 = zext i16 %1519 to i32
  %1520 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %idx.ext2842 = sext i32 %conv2841 to i64
  %add.ptr2843 = getelementptr inbounds %struct.regnode, %struct.regnode* %1520, i64 %idx.ext2842
  store %struct.regnode* %add.ptr2843, %struct.regnode** %text_node2732, align 8
  br label %if.end.2844

if.end.2844:                                      ; preds = %if.else.2839, %cond.end.2837
  br label %if.end.2845

if.end.2845:                                      ; preds = %if.end.2844, %if.then.2818
  br label %if.end.2846

if.end.2846:                                      ; preds = %if.end.2845, %if.then.2810
  br label %while.cond.2747

while.end.2847:                                   ; preds = %lor.end.2796
  br label %if.end.2848

if.end.2848:                                      ; preds = %while.end.2847, %lor.lhs.false.2739, %if.then.2731
  %1521 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %type2849 = getelementptr inbounds %struct.regnode, %struct.regnode* %1521, i32 0, i32 1
  %1522 = load i8, i8* %type2849, align 1
  %idxprom2850 = zext i8 %1522 to i64
  %arrayidx2851 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom2850
  %1523 = load i8, i8* %arrayidx2851, align 1
  %conv2852 = zext i8 %1523 to i32
  %cmp2853 = icmp eq i32 %conv2852, 33
  br i1 %cmp2853, label %if.else.2863, label %lor.lhs.false.2855

lor.lhs.false.2855:                               ; preds = %if.end.2848
  %1524 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %type2856 = getelementptr inbounds %struct.regnode, %struct.regnode* %1524, i32 0, i32 1
  %1525 = load i8, i8* %type2856, align 1
  %idxprom2857 = zext i8 %1525 to i64
  %arrayidx2858 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom2857
  %1526 = load i8, i8* %arrayidx2858, align 1
  %conv2859 = zext i8 %1526 to i32
  %cmp2860 = icmp eq i32 %conv2859, 47
  br i1 %cmp2860, label %if.else.2863, label %if.then.2862

if.then.2862:                                     ; preds = %lor.lhs.false.2855
  store i32 -1000, i32* %c2, align 4
  store i32 -1000, i32* %c1, align 4
  br label %if.end.2906

if.else.2863:                                     ; preds = %lor.lhs.false.2855, %if.end.2848
  %1527 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %type2864 = getelementptr inbounds %struct.regnode, %struct.regnode* %1527, i32 0, i32 1
  %1528 = load i8, i8* %type2864, align 1
  %idxprom2865 = zext i8 %1528 to i64
  %arrayidx2866 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom2865
  %1529 = load i8, i8* %arrayidx2866, align 1
  %conv2867 = zext i8 %1529 to i32
  %cmp2868 = icmp eq i32 %conv2867, 47
  br i1 %cmp2868, label %if.then.2870, label %if.else.2871

if.then.2870:                                     ; preds = %if.else.2863
  store i32 -1000, i32* %c2, align 4
  store i32 -1000, i32* %c1, align 4
  br label %assume_ok_REG

if.else.2871:                                     ; preds = %if.else.2863
  %1530 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %1531 = bitcast %struct.regnode* %1530 to %struct.regnode_string*
  %string2872 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %1531, i32 0, i32 3
  %arraydecay2873 = getelementptr inbounds [1 x i8], [1 x i8]* %string2872, i32 0, i32 0
  %1532 = load i8, i8* %arraydecay2873, align 1
  %conv2874 = zext i8 %1532 to i32
  store i32 %conv2874, i32* %c1, align 4
  br label %if.end.2875

if.end.2875:                                      ; preds = %if.else.2871
  %1533 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %type2876 = getelementptr inbounds %struct.regnode, %struct.regnode* %1533, i32 0, i32 1
  %1534 = load i8, i8* %type2876, align 1
  %conv2877 = zext i8 %1534 to i32
  %cmp2878 = icmp eq i32 %conv2877, 34
  br i1 %cmp2878, label %if.then.2885, label %lor.lhs.false.2880

lor.lhs.false.2880:                               ; preds = %if.end.2875
  %1535 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %type2881 = getelementptr inbounds %struct.regnode, %struct.regnode* %1535, i32 0, i32 1
  %1536 = load i8, i8* %type2881, align 1
  %conv2882 = zext i8 %1536 to i32
  %cmp2883 = icmp eq i32 %conv2882, 48
  br i1 %cmp2883, label %if.then.2885, label %if.else.2889

if.then.2885:                                     ; preds = %lor.lhs.false.2880, %if.end.2875
  %1537 = load i32, i32* %c1, align 4
  %idxprom2886 = sext i32 %1537 to i64
  %arrayidx2887 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_fold, i32 0, i64 %idxprom2886
  %1538 = load i8, i8* %arrayidx2887, align 1
  %conv2888 = zext i8 %1538 to i32
  store i32 %conv2888, i32* %c2, align 4
  br label %if.end.2905

if.else.2889:                                     ; preds = %lor.lhs.false.2880
  %1539 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %type2890 = getelementptr inbounds %struct.regnode, %struct.regnode* %1539, i32 0, i32 1
  %1540 = load i8, i8* %type2890, align 1
  %conv2891 = zext i8 %1540 to i32
  %cmp2892 = icmp eq i32 %conv2891, 35
  br i1 %cmp2892, label %if.then.2899, label %lor.lhs.false.2894

lor.lhs.false.2894:                               ; preds = %if.else.2889
  %1541 = load %struct.regnode*, %struct.regnode** %text_node2732, align 8
  %type2895 = getelementptr inbounds %struct.regnode, %struct.regnode* %1541, i32 0, i32 1
  %1542 = load i8, i8* %type2895, align 1
  %conv2896 = zext i8 %1542 to i32
  %cmp2897 = icmp eq i32 %conv2896, 49
  br i1 %cmp2897, label %if.then.2899, label %if.else.2903

if.then.2899:                                     ; preds = %lor.lhs.false.2894, %if.else.2889
  %1543 = load i32, i32* %c1, align 4
  %idxprom2900 = sext i32 %1543 to i64
  %arrayidx2901 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_fold_locale, i32 0, i64 %idxprom2900
  %1544 = load i8, i8* %arrayidx2901, align 1
  %conv2902 = zext i8 %1544 to i32
  store i32 %conv2902, i32* %c2, align 4
  br label %if.end.2904

if.else.2903:                                     ; preds = %lor.lhs.false.2894
  %1545 = load i32, i32* %c1, align 4
  store i32 %1545, i32* %c2, align 4
  br label %if.end.2904

if.end.2904:                                      ; preds = %if.else.2903, %if.then.2899
  br label %if.end.2905

if.end.2905:                                      ; preds = %if.end.2904, %if.then.2885
  br label %if.end.2906

if.end.2906:                                      ; preds = %if.end.2905, %if.then.2862
  br label %if.end.2908

if.else.2907:                                     ; preds = %land.lhs.true.2726, %lor.lhs.false.2719
  store i32 -1000, i32* %c2, align 4
  store i32 -1000, i32* %c1, align 4
  br label %if.end.2908

if.end.2908:                                      ; preds = %if.else.2907, %if.end.2906
  br label %if.end.2909

if.end.2909:                                      ; preds = %if.end.2908, %if.else.2666
  br label %assume_ok_REG

assume_ok_REG:                                    ; preds = %if.end.2909, %if.then.2870
  %1546 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %1546, i32* %lastcp2320, align 4
  br label %while.cond.2910

while.cond.2910:                                  ; preds = %cond.end.2976, %assume_ok_REG
  %1547 = load i32, i32* %n, align 4
  %1548 = load i32, i32* %ln, align 4
  %cmp2911 = icmp sge i32 %1547, %1548
  br i1 %cmp2911, label %while.body.2913, label %while.end.2978

while.body.2913:                                  ; preds = %while.cond.2910
  %1549 = load i32, i32* %c1, align 4
  %cmp2914 = icmp eq i32 %1549, -1000
  br i1 %cmp2914, label %if.then.2924, label %lor.lhs.false.2916

lor.lhs.false.2916:                               ; preds = %while.body.2913
  %1550 = load i8*, i8** @PL_reginput, align 8
  %1551 = load i8, i8* %1550, align 1
  %conv2917 = zext i8 %1551 to i32
  %1552 = load i32, i32* %c1, align 4
  %cmp2918 = icmp eq i32 %conv2917, %1552
  br i1 %cmp2918, label %if.then.2924, label %lor.lhs.false.2920

lor.lhs.false.2920:                               ; preds = %lor.lhs.false.2916
  %1553 = load i8*, i8** @PL_reginput, align 8
  %1554 = load i8, i8* %1553, align 1
  %conv2921 = zext i8 %1554 to i32
  %1555 = load i32, i32* %c2, align 4
  %cmp2922 = icmp eq i32 %conv2921, %1555
  br i1 %cmp2922, label %if.then.2924, label %if.end.2965

if.then.2924:                                     ; preds = %lor.lhs.false.2920, %lor.lhs.false.2916, %while.body.2913
  %1556 = load i32, i32* %paren, align 4
  %tobool2925 = icmp ne i32 %1556, 0
  br i1 %tobool2925, label %if.then.2926, label %if.end.2956

if.then.2926:                                     ; preds = %if.then.2924
  %1557 = load i32, i32* %n, align 4
  %tobool2927 = icmp ne i32 %1557, 0
  br i1 %tobool2927, label %if.then.2928, label %if.else.2952

if.then.2928:                                     ; preds = %if.then.2926
  %1558 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv2929 = sext i8 %1558 to i32
  %tobool2930 = icmp ne i32 %conv2929, 0
  br i1 %tobool2930, label %cond.true.2931, label %cond.false.2934

cond.true.2931:                                   ; preds = %if.then.2928
  %1559 = load i8*, i8** @PL_reginput, align 8
  %1560 = load i32, i32* %l2319, align 4
  %sub2932 = sub nsw i32 0, %1560
  %call2933 = call i8* @S_reghop(i8* %1559, i32 %sub2932)
  br label %cond.end.2938

cond.false.2934:                                  ; preds = %if.then.2928
  %1561 = load i8*, i8** @PL_reginput, align 8
  %1562 = load i32, i32* %l2319, align 4
  %sub2935 = sub nsw i32 0, %1562
  %idx.ext2936 = sext i32 %sub2935 to i64
  %add.ptr2937 = getelementptr inbounds i8, i8* %1561, i64 %idx.ext2936
  br label %cond.end.2938

cond.end.2938:                                    ; preds = %cond.false.2934, %cond.true.2931
  %cond2939 = phi i8* [ %call2933, %cond.true.2931 ], [ %add.ptr2937, %cond.false.2934 ]
  %1563 = load i8*, i8** @PL_bostr, align 8
  %sub.ptr.lhs.cast2940 = ptrtoint i8* %cond2939 to i64
  %sub.ptr.rhs.cast2941 = ptrtoint i8* %1563 to i64
  %sub.ptr.sub2942 = sub i64 %sub.ptr.lhs.cast2940, %sub.ptr.rhs.cast2941
  %conv2943 = trunc i64 %sub.ptr.sub2942 to i32
  %1564 = load i32, i32* %paren, align 4
  %idxprom2944 = sext i32 %1564 to i64
  %1565 = load i32*, i32** @PL_regstartp, align 8
  %arrayidx2945 = getelementptr inbounds i32, i32* %1565, i64 %idxprom2944
  store i32 %conv2943, i32* %arrayidx2945, align 4
  %1566 = load i8*, i8** @PL_reginput, align 8
  %1567 = load i8*, i8** @PL_bostr, align 8
  %sub.ptr.lhs.cast2946 = ptrtoint i8* %1566 to i64
  %sub.ptr.rhs.cast2947 = ptrtoint i8* %1567 to i64
  %sub.ptr.sub2948 = sub i64 %sub.ptr.lhs.cast2946, %sub.ptr.rhs.cast2947
  %conv2949 = trunc i64 %sub.ptr.sub2948 to i32
  %1568 = load i32, i32* %paren, align 4
  %idxprom2950 = sext i32 %1568 to i64
  %1569 = load i32*, i32** @PL_regendp, align 8
  %arrayidx2951 = getelementptr inbounds i32, i32* %1569, i64 %idxprom2950
  store i32 %conv2949, i32* %arrayidx2951, align 4
  br label %if.end.2955

if.else.2952:                                     ; preds = %if.then.2926
  %1570 = load i32, i32* %paren, align 4
  %idxprom2953 = sext i32 %1570 to i64
  %1571 = load i32*, i32** @PL_regendp, align 8
  %arrayidx2954 = getelementptr inbounds i32, i32* %1571, i64 %idxprom2953
  store i32 -1, i32* %arrayidx2954, align 4
  br label %if.end.2955

if.end.2955:                                      ; preds = %if.else.2952, %cond.end.2938
  br label %if.end.2956

if.end.2956:                                      ; preds = %if.end.2955, %if.then.2924
  %1572 = load %struct.regnode*, %struct.regnode** %next, align 8
  %call2957 = call i32 @S_regmatch(%struct.regnode* %1572)
  %tobool2958 = icmp ne i32 %call2957, 0
  br i1 %tobool2958, label %if.then.2959, label %if.end.2960

if.then.2959:                                     ; preds = %if.end.2956
  br label %yes

if.end.2960:                                      ; preds = %if.end.2956
  %1573 = load i32, i32* @PL_savestack_ix, align 4
  %1574 = load i32, i32* %lastcp2320, align 4
  %cmp2961 = icmp sgt i32 %1573, %1574
  br i1 %cmp2961, label %if.then.2963, label %if.end.2964

if.then.2963:                                     ; preds = %if.end.2960
  %1575 = load i32, i32* %lastcp2320, align 4
  call void @Perl_leave_scope(i32 %1575)
  br label %if.end.2964

if.end.2964:                                      ; preds = %if.then.2963, %if.end.2960
  br label %if.end.2965

if.end.2965:                                      ; preds = %if.end.2964, %lor.lhs.false.2920
  %1576 = load i32, i32* %n, align 4
  %dec2966 = add nsw i32 %1576, -1
  store i32 %dec2966, i32* %n, align 4
  %1577 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv2967 = sext i8 %1577 to i32
  %tobool2968 = icmp ne i32 %conv2967, 0
  br i1 %tobool2968, label %cond.true.2969, label %cond.false.2972

cond.true.2969:                                   ; preds = %if.end.2965
  %1578 = load i8*, i8** %locinput, align 8
  %1579 = load i32, i32* %l2319, align 4
  %sub2970 = sub nsw i32 0, %1579
  %call2971 = call i8* @S_reghop(i8* %1578, i32 %sub2970)
  br label %cond.end.2976

cond.false.2972:                                  ; preds = %if.end.2965
  %1580 = load i8*, i8** %locinput, align 8
  %1581 = load i32, i32* %l2319, align 4
  %sub2973 = sub nsw i32 0, %1581
  %idx.ext2974 = sext i32 %sub2973 to i64
  %add.ptr2975 = getelementptr inbounds i8, i8* %1580, i64 %idx.ext2974
  br label %cond.end.2976

cond.end.2976:                                    ; preds = %cond.false.2972, %cond.true.2969
  %cond2977 = phi i8* [ %call2971, %cond.true.2969 ], [ %add.ptr2975, %cond.false.2972 ]
  store i8* %cond2977, i8** %locinput, align 8
  %1582 = load i8*, i8** %locinput, align 8
  store i8* %1582, i8** @PL_reginput, align 8
  br label %while.cond.2910

while.end.2978:                                   ; preds = %while.cond.2910
  br label %if.end.2979

if.end.2979:                                      ; preds = %while.end.2978, %while.end.2665
  br label %no

sw.bb.2980:                                       ; preds = %if.end
  %1583 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags2981 = getelementptr inbounds %struct.regnode, %struct.regnode* %1583, i32 0, i32 0
  %1584 = load i8, i8* %flags2981, align 1
  %conv2982 = zext i8 %1584 to i32
  store i32 %conv2982, i32* %paren, align 4
  %1585 = load i32, i32* %paren, align 4
  %1586 = load i32, i32* @PL_regsize, align 4
  %cmp2983 = icmp sgt i32 %1585, %1586
  br i1 %cmp2983, label %if.then.2985, label %if.end.2986

if.then.2985:                                     ; preds = %sw.bb.2980
  %1587 = load i32, i32* %paren, align 4
  store i32 %1587, i32* @PL_regsize, align 4
  br label %if.end.2986

if.end.2986:                                      ; preds = %if.then.2985, %sw.bb.2980
  %1588 = load i32, i32* %paren, align 4
  %1589 = load i32*, i32** @PL_reglastparen, align 8
  %1590 = load i32, i32* %1589, align 4
  %cmp2987 = icmp sgt i32 %1588, %1590
  br i1 %cmp2987, label %if.then.2989, label %if.end.2990

if.then.2989:                                     ; preds = %if.end.2986
  %1591 = load i32, i32* %paren, align 4
  %1592 = load i32*, i32** @PL_reglastparen, align 8
  store i32 %1591, i32* %1592, align 4
  br label %if.end.2990

if.end.2990:                                      ; preds = %if.then.2989, %if.end.2986
  %1593 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1594 = bitcast %struct.regnode* %1593 to %struct.regnode_2*
  %arg12991 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %1594, i32 0, i32 3
  %1595 = load i16, i16* %arg12991, align 2
  %conv2992 = zext i16 %1595 to i32
  store i32 %conv2992, i32* %ln, align 4
  %1596 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1597 = bitcast %struct.regnode* %1596 to %struct.regnode_2*
  %arg22993 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %1597, i32 0, i32 4
  %1598 = load i16, i16* %arg22993, align 2
  %conv2994 = zext i16 %1598 to i32
  store i32 %conv2994, i32* %n, align 4
  %1599 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr2995 = getelementptr inbounds %struct.regnode, %struct.regnode* %1599, i64 1
  %add.ptr2996 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr2995, i64 1
  %call2997 = call %struct.regnode* @Perl_regnext(%struct.regnode* %add.ptr2996)
  store %struct.regnode* %call2997, %struct.regnode** %scan, align 8
  br label %repeat

sw.bb.2998:                                       ; preds = %if.end
  store i32 0, i32* %paren, align 4
  %1600 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1601 = bitcast %struct.regnode* %1600 to %struct.regnode_2*
  %arg12999 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %1601, i32 0, i32 3
  %1602 = load i16, i16* %arg12999, align 2
  %conv3000 = zext i16 %1602 to i32
  store i32 %conv3000, i32* %ln, align 4
  %1603 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1604 = bitcast %struct.regnode* %1603 to %struct.regnode_2*
  %arg23001 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %1604, i32 0, i32 4
  %1605 = load i16, i16* %arg23001, align 2
  %conv3002 = zext i16 %1605 to i32
  store i32 %conv3002, i32* %n, align 4
  %1606 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr3003 = getelementptr inbounds %struct.regnode, %struct.regnode* %1606, i64 1
  %add.ptr3004 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr3003, i64 1
  store %struct.regnode* %add.ptr3004, %struct.regnode** %scan, align 8
  br label %repeat

sw.bb.3005:                                       ; preds = %if.end
  store i32 0, i32* %ln, align 4
  store i32 32767, i32* %n, align 4
  %1607 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr3006 = getelementptr inbounds %struct.regnode, %struct.regnode* %1607, i64 1
  store %struct.regnode* %add.ptr3006, %struct.regnode** %scan, align 8
  store i32 0, i32* %paren, align 4
  br label %repeat

sw.bb.3007:                                       ; preds = %if.end
  store i32 1, i32* %ln, align 4
  store i32 32767, i32* %n, align 4
  %1608 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr3008 = getelementptr inbounds %struct.regnode, %struct.regnode* %1608, i64 1
  store %struct.regnode* %add.ptr3008, %struct.regnode** %scan, align 8
  store i32 0, i32* %paren, align 4
  br label %repeat

repeat:                                           ; preds = %sw.bb.3007, %sw.bb.3005, %sw.bb.2998, %if.end.2990
  %1609 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type3009 = getelementptr inbounds %struct.regnode, %struct.regnode* %1609, i32 0, i32 1
  %1610 = load i8, i8* %type3009, align 1
  %idxprom3010 = zext i8 %1610 to i64
  %arrayidx3011 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom3010
  %1611 = load i8, i8* %arrayidx3011, align 1
  %conv3012 = zext i8 %1611 to i32
  %cmp3013 = icmp eq i32 %conv3012, 33
  br i1 %cmp3013, label %if.then.3069, label %lor.lhs.false.3015

lor.lhs.false.3015:                               ; preds = %repeat
  %1612 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type3016 = getelementptr inbounds %struct.regnode, %struct.regnode* %1612, i32 0, i32 1
  %1613 = load i8, i8* %type3016, align 1
  %idxprom3017 = zext i8 %1613 to i64
  %arrayidx3018 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom3017
  %1614 = load i8, i8* %arrayidx3018, align 1
  %conv3019 = zext i8 %1614 to i32
  %cmp3020 = icmp eq i32 %conv3019, 47
  br i1 %cmp3020, label %if.then.3069, label %lor.lhs.false.3022

lor.lhs.false.3022:                               ; preds = %lor.lhs.false.3015
  %1615 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type3023 = getelementptr inbounds %struct.regnode, %struct.regnode* %1615, i32 0, i32 1
  %1616 = load i8, i8* %type3023, align 1
  %conv3024 = zext i8 %1616 to i32
  %cmp3025 = icmp eq i32 %conv3024, 45
  br i1 %cmp3025, label %if.then.3069, label %lor.lhs.false.3027

lor.lhs.false.3027:                               ; preds = %lor.lhs.false.3022
  %1617 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type3028 = getelementptr inbounds %struct.regnode, %struct.regnode* %1617, i32 0, i32 1
  %1618 = load i8, i8* %type3028, align 1
  %conv3029 = zext i8 %1618 to i32
  %cmp3030 = icmp eq i32 %conv3029, 46
  br i1 %cmp3030, label %if.then.3069, label %lor.lhs.false.3032

lor.lhs.false.3032:                               ; preds = %lor.lhs.false.3027
  %1619 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type3033 = getelementptr inbounds %struct.regnode, %struct.regnode* %1619, i32 0, i32 1
  %1620 = load i8, i8* %type3033, align 1
  %conv3034 = zext i8 %1620 to i32
  %cmp3035 = icmp eq i32 %conv3034, 57
  br i1 %cmp3035, label %if.then.3069, label %lor.lhs.false.3037

lor.lhs.false.3037:                               ; preds = %lor.lhs.false.3032
  %1621 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type3038 = getelementptr inbounds %struct.regnode, %struct.regnode* %1621, i32 0, i32 1
  %1622 = load i8, i8* %type3038, align 1
  %conv3039 = zext i8 %1622 to i32
  %cmp3040 = icmp eq i32 %conv3039, 52
  br i1 %cmp3040, label %if.then.3069, label %lor.lhs.false.3042

lor.lhs.false.3042:                               ; preds = %lor.lhs.false.3037
  %1623 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type3043 = getelementptr inbounds %struct.regnode, %struct.regnode* %1623, i32 0, i32 1
  %1624 = load i8, i8* %type3043, align 1
  %conv3044 = zext i8 %1624 to i32
  %cmp3045 = icmp eq i32 %conv3044, 50
  br i1 %cmp3045, label %if.then.3069, label %lor.lhs.false.3047

lor.lhs.false.3047:                               ; preds = %lor.lhs.false.3042
  %1625 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type3048 = getelementptr inbounds %struct.regnode, %struct.regnode* %1625, i32 0, i32 1
  %1626 = load i8, i8* %type3048, align 1
  %conv3049 = zext i8 %1626 to i32
  %cmp3050 = icmp eq i32 %conv3049, 39
  br i1 %cmp3050, label %if.then.3069, label %lor.lhs.false.3052

lor.lhs.false.3052:                               ; preds = %lor.lhs.false.3047
  %1627 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type3053 = getelementptr inbounds %struct.regnode, %struct.regnode* %1627, i32 0, i32 1
  %1628 = load i8, i8* %type3053, align 1
  %conv3054 = zext i8 %1628 to i32
  %cmp3055 = icmp eq i32 %conv3054, 58
  br i1 %cmp3055, label %if.then.3069, label %lor.lhs.false.3057

lor.lhs.false.3057:                               ; preds = %lor.lhs.false.3052
  %1629 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type3058 = getelementptr inbounds %struct.regnode, %struct.regnode* %1629, i32 0, i32 1
  %1630 = load i8, i8* %type3058, align 1
  %idxprom3059 = zext i8 %1630 to i64
  %arrayidx3060 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom3059
  %1631 = load i8, i8* %arrayidx3060, align 1
  %conv3061 = zext i8 %1631 to i32
  %cmp3062 = icmp eq i32 %conv3061, 40
  br i1 %cmp3062, label %land.lhs.true.3064, label %if.else.3375

land.lhs.true.3064:                               ; preds = %lor.lhs.false.3057
  %1632 = load %struct.regnode*, %struct.regnode** %next, align 8
  %1633 = bitcast %struct.regnode* %1632 to %struct.regnode_2*
  %arg13065 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %1633, i32 0, i32 3
  %1634 = load i16, i16* %arg13065, align 2
  %conv3066 = zext i16 %1634 to i32
  %cmp3067 = icmp sgt i32 %conv3066, 0
  br i1 %cmp3067, label %if.then.3069, label %if.else.3375

if.then.3069:                                     ; preds = %land.lhs.true.3064, %lor.lhs.false.3052, %lor.lhs.false.3047, %lor.lhs.false.3042, %lor.lhs.false.3037, %lor.lhs.false.3032, %lor.lhs.false.3027, %lor.lhs.false.3022, %lor.lhs.false.3015, %repeat
  %1635 = load %struct.regnode*, %struct.regnode** %next, align 8
  store %struct.regnode* %1635, %struct.regnode** %text_node3071, align 8
  %1636 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3072 = getelementptr inbounds %struct.regnode, %struct.regnode* %1636, i32 0, i32 1
  %1637 = load i8, i8* %type3072, align 1
  %idxprom3073 = zext i8 %1637 to i64
  %arrayidx3074 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom3073
  %1638 = load i8, i8* %arrayidx3074, align 1
  %conv3075 = zext i8 %1638 to i32
  %cmp3076 = icmp eq i32 %conv3075, 33
  br i1 %cmp3076, label %if.end.3187, label %lor.lhs.false.3078

lor.lhs.false.3078:                               ; preds = %if.then.3069
  %1639 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3079 = getelementptr inbounds %struct.regnode, %struct.regnode* %1639, i32 0, i32 1
  %1640 = load i8, i8* %type3079, align 1
  %idxprom3080 = zext i8 %1640 to i64
  %arrayidx3081 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom3080
  %1641 = load i8, i8* %arrayidx3081, align 1
  %conv3082 = zext i8 %1641 to i32
  %cmp3083 = icmp eq i32 %conv3082, 47
  br i1 %cmp3083, label %if.end.3187, label %if.then.3085

if.then.3085:                                     ; preds = %lor.lhs.false.3078
  br label %while.cond.3086

while.cond.3086:                                  ; preds = %if.end.3185, %if.then.3085
  %1642 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3087 = getelementptr inbounds %struct.regnode, %struct.regnode* %1642, i32 0, i32 1
  %1643 = load i8, i8* %type3087, align 1
  %conv3088 = zext i8 %1643 to i32
  %cmp3089 = icmp eq i32 %conv3088, 45
  br i1 %cmp3089, label %lor.end.3135, label %lor.lhs.false.3091

lor.lhs.false.3091:                               ; preds = %while.cond.3086
  %1644 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3092 = getelementptr inbounds %struct.regnode, %struct.regnode* %1644, i32 0, i32 1
  %1645 = load i8, i8* %type3092, align 1
  %conv3093 = zext i8 %1645 to i32
  %cmp3094 = icmp eq i32 %conv3093, 46
  br i1 %cmp3094, label %lor.end.3135, label %lor.lhs.false.3096

lor.lhs.false.3096:                               ; preds = %lor.lhs.false.3091
  %1646 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3097 = getelementptr inbounds %struct.regnode, %struct.regnode* %1646, i32 0, i32 1
  %1647 = load i8, i8* %type3097, align 1
  %conv3098 = zext i8 %1647 to i32
  %cmp3099 = icmp eq i32 %conv3098, 57
  br i1 %cmp3099, label %lor.end.3135, label %lor.lhs.false.3101

lor.lhs.false.3101:                               ; preds = %lor.lhs.false.3096
  %1648 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3102 = getelementptr inbounds %struct.regnode, %struct.regnode* %1648, i32 0, i32 1
  %1649 = load i8, i8* %type3102, align 1
  %conv3103 = zext i8 %1649 to i32
  %cmp3104 = icmp eq i32 %conv3103, 52
  br i1 %cmp3104, label %lor.end.3135, label %lor.lhs.false.3106

lor.lhs.false.3106:                               ; preds = %lor.lhs.false.3101
  %1650 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3107 = getelementptr inbounds %struct.regnode, %struct.regnode* %1650, i32 0, i32 1
  %1651 = load i8, i8* %type3107, align 1
  %conv3108 = zext i8 %1651 to i32
  %cmp3109 = icmp eq i32 %conv3108, 50
  br i1 %cmp3109, label %lor.end.3135, label %lor.lhs.false.3111

lor.lhs.false.3111:                               ; preds = %lor.lhs.false.3106
  %1652 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3112 = getelementptr inbounds %struct.regnode, %struct.regnode* %1652, i32 0, i32 1
  %1653 = load i8, i8* %type3112, align 1
  %conv3113 = zext i8 %1653 to i32
  %cmp3114 = icmp eq i32 %conv3113, 39
  br i1 %cmp3114, label %lor.end.3135, label %lor.lhs.false.3116

lor.lhs.false.3116:                               ; preds = %lor.lhs.false.3111
  %1654 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3117 = getelementptr inbounds %struct.regnode, %struct.regnode* %1654, i32 0, i32 1
  %1655 = load i8, i8* %type3117, align 1
  %conv3118 = zext i8 %1655 to i32
  %cmp3119 = icmp eq i32 %conv3118, 58
  br i1 %cmp3119, label %lor.end.3135, label %lor.rhs.3121

lor.rhs.3121:                                     ; preds = %lor.lhs.false.3116
  %1656 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3122 = getelementptr inbounds %struct.regnode, %struct.regnode* %1656, i32 0, i32 1
  %1657 = load i8, i8* %type3122, align 1
  %idxprom3123 = zext i8 %1657 to i64
  %arrayidx3124 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom3123
  %1658 = load i8, i8* %arrayidx3124, align 1
  %conv3125 = zext i8 %1658 to i32
  %cmp3126 = icmp eq i32 %conv3125, 40
  br i1 %cmp3126, label %land.rhs.3128, label %land.end.3133

land.rhs.3128:                                    ; preds = %lor.rhs.3121
  %1659 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %1660 = bitcast %struct.regnode* %1659 to %struct.regnode_2*
  %arg13129 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %1660, i32 0, i32 3
  %1661 = load i16, i16* %arg13129, align 2
  %conv3130 = zext i16 %1661 to i32
  %cmp3131 = icmp sgt i32 %conv3130, 0
  br label %land.end.3133

land.end.3133:                                    ; preds = %land.rhs.3128, %lor.rhs.3121
  %1662 = phi i1 [ false, %lor.rhs.3121 ], [ %cmp3131, %land.rhs.3128 ]
  br label %lor.end.3135

lor.end.3135:                                     ; preds = %land.end.3133, %lor.lhs.false.3116, %lor.lhs.false.3111, %lor.lhs.false.3106, %lor.lhs.false.3101, %lor.lhs.false.3096, %lor.lhs.false.3091, %while.cond.3086
  %1663 = phi i1 [ true, %lor.lhs.false.3116 ], [ true, %lor.lhs.false.3111 ], [ true, %lor.lhs.false.3106 ], [ true, %lor.lhs.false.3101 ], [ true, %lor.lhs.false.3096 ], [ true, %lor.lhs.false.3091 ], [ true, %while.cond.3086 ], [ %1662, %land.end.3133 ]
  br i1 %1663, label %while.body.3137, label %while.end.3186

while.body.3137:                                  ; preds = %lor.end.3135
  %1664 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3138 = getelementptr inbounds %struct.regnode, %struct.regnode* %1664, i32 0, i32 1
  %1665 = load i8, i8* %type3138, align 1
  %conv3139 = zext i8 %1665 to i32
  %cmp3140 = icmp eq i32 %conv3139, 52
  br i1 %cmp3140, label %if.then.3149, label %lor.lhs.false.3142

lor.lhs.false.3142:                               ; preds = %while.body.3137
  %1666 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3143 = getelementptr inbounds %struct.regnode, %struct.regnode* %1666, i32 0, i32 1
  %1667 = load i8, i8* %type3143, align 1
  %idxprom3144 = zext i8 %1667 to i64
  %arrayidx3145 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom3144
  %1668 = load i8, i8* %arrayidx3145, align 1
  %conv3146 = zext i8 %1668 to i32
  %cmp3147 = icmp eq i32 %conv3146, 40
  br i1 %cmp3147, label %if.then.3149, label %if.else.3152

if.then.3149:                                     ; preds = %lor.lhs.false.3142, %while.body.3137
  %1669 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %add.ptr3150 = getelementptr inbounds %struct.regnode, %struct.regnode* %1669, i64 1
  %add.ptr3151 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr3150, i64 1
  store %struct.regnode* %add.ptr3151, %struct.regnode** %text_node3071, align 8
  br label %if.end.3185

if.else.3152:                                     ; preds = %lor.lhs.false.3142
  %1670 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3153 = getelementptr inbounds %struct.regnode, %struct.regnode* %1670, i32 0, i32 1
  %1671 = load i8, i8* %type3153, align 1
  %conv3154 = zext i8 %1671 to i32
  %cmp3155 = icmp eq i32 %conv3154, 39
  br i1 %cmp3155, label %if.then.3157, label %if.else.3159

if.then.3157:                                     ; preds = %if.else.3152
  %1672 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %add.ptr3158 = getelementptr inbounds %struct.regnode, %struct.regnode* %1672, i64 1
  store %struct.regnode* %add.ptr3158, %struct.regnode** %text_node3071, align 8
  br label %if.end.3184

if.else.3159:                                     ; preds = %if.else.3152
  %1673 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3160 = getelementptr inbounds %struct.regnode, %struct.regnode* %1673, i32 0, i32 1
  %1674 = load i8, i8* %type3160, align 1
  %conv3161 = zext i8 %1674 to i32
  %cmp3162 = icmp eq i32 %conv3161, 50
  br i1 %cmp3162, label %if.then.3164, label %if.else.3178

if.then.3164:                                     ; preds = %if.else.3159
  %1675 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %flags3165 = getelementptr inbounds %struct.regnode, %struct.regnode* %1675, i32 0, i32 0
  %1676 = load i8, i8* %flags3165, align 1
  %conv3166 = zext i8 %1676 to i32
  %cmp3167 = icmp eq i32 %conv3166, 0
  br i1 %cmp3167, label %cond.true.3169, label %cond.false.3172

cond.true.3169:                                   ; preds = %if.then.3164
  %1677 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %add.ptr3170 = getelementptr inbounds %struct.regnode, %struct.regnode* %1677, i64 1
  %add.ptr3171 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr3170, i64 1
  br label %cond.end.3176

cond.false.3172:                                  ; preds = %if.then.3164
  %1678 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %1679 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %1680 = bitcast %struct.regnode* %1679 to %struct.regnode_1*
  %arg13173 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1680, i32 0, i32 3
  %1681 = load i32, i32* %arg13173, align 4
  %idx.ext3174 = zext i32 %1681 to i64
  %add.ptr3175 = getelementptr inbounds %struct.regnode, %struct.regnode* %1678, i64 %idx.ext3174
  br label %cond.end.3176

cond.end.3176:                                    ; preds = %cond.false.3172, %cond.true.3169
  %cond3177 = phi %struct.regnode* [ %add.ptr3171, %cond.true.3169 ], [ %add.ptr3175, %cond.false.3172 ]
  store %struct.regnode* %cond3177, %struct.regnode** %text_node3071, align 8
  br label %if.end.3183

if.else.3178:                                     ; preds = %if.else.3159
  %1682 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %next_off3179 = getelementptr inbounds %struct.regnode, %struct.regnode* %1682, i32 0, i32 2
  %1683 = load i16, i16* %next_off3179, align 2
  %conv3180 = zext i16 %1683 to i32
  %1684 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %idx.ext3181 = sext i32 %conv3180 to i64
  %add.ptr3182 = getelementptr inbounds %struct.regnode, %struct.regnode* %1684, i64 %idx.ext3181
  store %struct.regnode* %add.ptr3182, %struct.regnode** %text_node3071, align 8
  br label %if.end.3183

if.end.3183:                                      ; preds = %if.else.3178, %cond.end.3176
  br label %if.end.3184

if.end.3184:                                      ; preds = %if.end.3183, %if.then.3157
  br label %if.end.3185

if.end.3185:                                      ; preds = %if.end.3184, %if.then.3149
  br label %while.cond.3086

while.end.3186:                                   ; preds = %lor.end.3135
  br label %if.end.3187

if.end.3187:                                      ; preds = %while.end.3186, %lor.lhs.false.3078, %if.then.3069
  %1685 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3188 = getelementptr inbounds %struct.regnode, %struct.regnode* %1685, i32 0, i32 1
  %1686 = load i8, i8* %type3188, align 1
  %idxprom3189 = zext i8 %1686 to i64
  %arrayidx3190 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom3189
  %1687 = load i8, i8* %arrayidx3190, align 1
  %conv3191 = zext i8 %1687 to i32
  %cmp3192 = icmp eq i32 %conv3191, 33
  br i1 %cmp3192, label %if.else.3202, label %lor.lhs.false.3194

lor.lhs.false.3194:                               ; preds = %if.end.3187
  %1688 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3195 = getelementptr inbounds %struct.regnode, %struct.regnode* %1688, i32 0, i32 1
  %1689 = load i8, i8* %type3195, align 1
  %idxprom3196 = zext i8 %1689 to i64
  %arrayidx3197 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom3196
  %1690 = load i8, i8* %arrayidx3197, align 1
  %conv3198 = zext i8 %1690 to i32
  %cmp3199 = icmp eq i32 %conv3198, 47
  br i1 %cmp3199, label %if.else.3202, label %if.then.3201

if.then.3201:                                     ; preds = %lor.lhs.false.3194
  store i32 -1000, i32* %c2, align 4
  store i32 -1000, i32* %c1, align 4
  br label %if.end.3374

if.else.3202:                                     ; preds = %lor.lhs.false.3194, %if.end.3187
  %1691 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3203 = getelementptr inbounds %struct.regnode, %struct.regnode* %1691, i32 0, i32 1
  %1692 = load i8, i8* %type3203, align 1
  %idxprom3204 = zext i8 %1692 to i64
  %arrayidx3205 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom3204
  %1693 = load i8, i8* %arrayidx3205, align 1
  %conv3206 = zext i8 %1693 to i32
  %cmp3207 = icmp eq i32 %conv3206, 47
  br i1 %cmp3207, label %if.then.3209, label %if.else.3210

if.then.3209:                                     ; preds = %if.else.3202
  store i32 -1000, i32* %c2, align 4
  store i32 -1000, i32* %c1, align 4
  br label %assume_ok_easy

if.else.3210:                                     ; preds = %if.else.3202
  %1694 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %1695 = bitcast %struct.regnode* %1694 to %struct.regnode_string*
  %string3211 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %1695, i32 0, i32 3
  %arraydecay3212 = getelementptr inbounds [1 x i8], [1 x i8]* %string3211, i32 0, i32 0
  store i8* %arraydecay3212, i8** %s3070, align 8
  br label %if.end.3213

if.end.3213:                                      ; preds = %if.else.3210
  %1696 = load i32, i32* @PL_reg_flags, align 4
  %and3214 = and i32 %1696, 8
  %cmp3215 = icmp ne i32 %and3214, 0
  br i1 %cmp3215, label %if.else.3248, label %if.then.3217

if.then.3217:                                     ; preds = %if.end.3213
  %1697 = load i8*, i8** %s3070, align 8
  %1698 = load i8, i8* %1697, align 1
  %conv3218 = zext i8 %1698 to i32
  store i32 %conv3218, i32* %c1, align 4
  store i32 %conv3218, i32* %c2, align 4
  %1699 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3219 = getelementptr inbounds %struct.regnode, %struct.regnode* %1699, i32 0, i32 1
  %1700 = load i8, i8* %type3219, align 1
  %conv3220 = zext i8 %1700 to i32
  %cmp3221 = icmp eq i32 %conv3220, 34
  br i1 %cmp3221, label %if.then.3228, label %lor.lhs.false.3223

lor.lhs.false.3223:                               ; preds = %if.then.3217
  %1701 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3224 = getelementptr inbounds %struct.regnode, %struct.regnode* %1701, i32 0, i32 1
  %1702 = load i8, i8* %type3224, align 1
  %conv3225 = zext i8 %1702 to i32
  %cmp3226 = icmp eq i32 %conv3225, 48
  br i1 %cmp3226, label %if.then.3228, label %if.else.3232

if.then.3228:                                     ; preds = %lor.lhs.false.3223, %if.then.3217
  %1703 = load i32, i32* %c1, align 4
  %idxprom3229 = sext i32 %1703 to i64
  %arrayidx3230 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_fold, i32 0, i64 %idxprom3229
  %1704 = load i8, i8* %arrayidx3230, align 1
  %conv3231 = zext i8 %1704 to i32
  store i32 %conv3231, i32* %c2, align 4
  br label %if.end.3247

if.else.3232:                                     ; preds = %lor.lhs.false.3223
  %1705 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3233 = getelementptr inbounds %struct.regnode, %struct.regnode* %1705, i32 0, i32 1
  %1706 = load i8, i8* %type3233, align 1
  %conv3234 = zext i8 %1706 to i32
  %cmp3235 = icmp eq i32 %conv3234, 35
  br i1 %cmp3235, label %if.then.3242, label %lor.lhs.false.3237

lor.lhs.false.3237:                               ; preds = %if.else.3232
  %1707 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3238 = getelementptr inbounds %struct.regnode, %struct.regnode* %1707, i32 0, i32 1
  %1708 = load i8, i8* %type3238, align 1
  %conv3239 = zext i8 %1708 to i32
  %cmp3240 = icmp eq i32 %conv3239, 49
  br i1 %cmp3240, label %if.then.3242, label %if.end.3246

if.then.3242:                                     ; preds = %lor.lhs.false.3237, %if.else.3232
  %1709 = load i32, i32* %c1, align 4
  %idxprom3243 = sext i32 %1709 to i64
  %arrayidx3244 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_fold_locale, i32 0, i64 %idxprom3243
  %1710 = load i8, i8* %arrayidx3244, align 1
  %conv3245 = zext i8 %1710 to i32
  store i32 %conv3245, i32* %c2, align 4
  br label %if.end.3246

if.end.3246:                                      ; preds = %if.then.3242, %lor.lhs.false.3237
  br label %if.end.3247

if.end.3247:                                      ; preds = %if.end.3246, %if.then.3228
  br label %if.end.3373

if.else.3248:                                     ; preds = %if.end.3213
  %1711 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3249 = getelementptr inbounds %struct.regnode, %struct.regnode* %1711, i32 0, i32 1
  %1712 = load i8, i8* %type3249, align 1
  %conv3250 = zext i8 %1712 to i32
  %cmp3251 = icmp eq i32 %conv3250, 34
  br i1 %cmp3251, label %if.then.3258, label %lor.lhs.false.3253

lor.lhs.false.3253:                               ; preds = %if.else.3248
  %1713 = load %struct.regnode*, %struct.regnode** %text_node3071, align 8
  %type3254 = getelementptr inbounds %struct.regnode, %struct.regnode* %1713, i32 0, i32 1
  %1714 = load i8, i8* %type3254, align 1
  %conv3255 = zext i8 %1714 to i32
  %cmp3256 = icmp eq i32 %conv3255, 48
  br i1 %cmp3256, label %if.then.3258, label %if.else.3337

if.then.3258:                                     ; preds = %lor.lhs.false.3253, %if.else.3248
  %1715 = load i8*, i8** %s3070, align 8
  %arraydecay3263 = getelementptr inbounds [7 x i8], [7 x i8]* %tmpbuf13261, i32 0, i32 0
  %call3264 = call i64 @Perl_to_utf8_lower(i8* %1715, i8* %arraydecay3263, i64* %ulen13259)
  %1716 = load i8*, i8** %s3070, align 8
  %arraydecay3265 = getelementptr inbounds [7 x i8], [7 x i8]* %tmpbuf23262, i32 0, i32 0
  %call3266 = call i64 @Perl_to_utf8_upper(i8* %1716, i8* %arraydecay3265, i64* %ulen23260)
  %arraydecay3267 = getelementptr inbounds [7 x i8], [7 x i8]* %tmpbuf13261, i32 0, i32 0
  %1717 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3268 = getelementptr inbounds %struct.cop, %struct.cop* %1717, i32 0, i32 14
  %1718 = load %struct.sv*, %struct.sv** %cop_warnings3268, align 8
  %cmp3269 = icmp ne %struct.sv* %1718, null
  br i1 %cmp3269, label %land.lhs.true.3271, label %lor.rhs.3287

land.lhs.true.3271:                               ; preds = %if.then.3258
  %1719 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3272 = getelementptr inbounds %struct.cop, %struct.cop* %1719, i32 0, i32 14
  %1720 = load %struct.sv*, %struct.sv** %cop_warnings3272, align 8
  %cmp3273 = icmp ne %struct.sv* %1720, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp3273, label %land.lhs.true.3275, label %lor.rhs.3287

land.lhs.true.3275:                               ; preds = %land.lhs.true.3271
  %1721 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3276 = getelementptr inbounds %struct.cop, %struct.cop* %1721, i32 0, i32 14
  %1722 = load %struct.sv*, %struct.sv** %cop_warnings3276, align 8
  %cmp3277 = icmp eq %struct.sv* %1722, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp3277, label %lor.end.3297, label %lor.lhs.false.3279

lor.lhs.false.3279:                               ; preds = %land.lhs.true.3275
  %1723 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3280 = getelementptr inbounds %struct.cop, %struct.cop* %1723, i32 0, i32 14
  %1724 = load %struct.sv*, %struct.sv** %cop_warnings3280, align 8
  %sv_any3281 = getelementptr inbounds %struct.sv, %struct.sv* %1724, i32 0, i32 0
  %1725 = load i8*, i8** %sv_any3281, align 8
  %1726 = bitcast i8* %1725 to %struct.xpv*
  %xpv_pv3282 = getelementptr inbounds %struct.xpv, %struct.xpv* %1726, i32 0, i32 0
  %1727 = load i8*, i8** %xpv_pv3282, align 8
  %arrayidx3283 = getelementptr inbounds i8, i8* %1727, i64 11
  %1728 = load i8, i8* %arrayidx3283, align 1
  %conv3284 = sext i8 %1728 to i32
  %and3285 = and i32 %conv3284, 1
  %tobool3286 = icmp ne i32 %and3285, 0
  br i1 %tobool3286, label %lor.end.3297, label %lor.rhs.3287

lor.rhs.3287:                                     ; preds = %lor.lhs.false.3279, %land.lhs.true.3271, %if.then.3258
  %1729 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3288 = getelementptr inbounds %struct.cop, %struct.cop* %1729, i32 0, i32 14
  %1730 = load %struct.sv*, %struct.sv** %cop_warnings3288, align 8
  %cmp3289 = icmp eq %struct.sv* %1730, null
  br i1 %cmp3289, label %land.rhs.3291, label %land.end.3295

land.rhs.3291:                                    ; preds = %lor.rhs.3287
  %1731 = load i8, i8* @PL_dowarn, align 1
  %conv3292 = zext i8 %1731 to i32
  %and3293 = and i32 %conv3292, 1
  %tobool3294 = icmp ne i32 %and3293, 0
  br label %land.end.3295

land.end.3295:                                    ; preds = %land.rhs.3291, %lor.rhs.3287
  %1732 = phi i1 [ false, %lor.rhs.3287 ], [ %tobool3294, %land.rhs.3291 ]
  br label %lor.end.3297

lor.end.3297:                                     ; preds = %land.end.3295, %lor.lhs.false.3279, %land.lhs.true.3275
  %1733 = phi i1 [ true, %lor.lhs.false.3279 ], [ true, %land.lhs.true.3275 ], [ %1732, %land.end.3295 ]
  %cond3299 = select i1 %1733, i32 0, i32 255
  %call3300 = call i64 @Perl_utf8n_to_uvuni(i8* %arraydecay3267, i64 13, i64* null, i32 %cond3299)
  %conv3301 = trunc i64 %call3300 to i32
  store i32 %conv3301, i32* %c1, align 4
  %arraydecay3302 = getelementptr inbounds [7 x i8], [7 x i8]* %tmpbuf23262, i32 0, i32 0
  %1734 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3303 = getelementptr inbounds %struct.cop, %struct.cop* %1734, i32 0, i32 14
  %1735 = load %struct.sv*, %struct.sv** %cop_warnings3303, align 8
  %cmp3304 = icmp ne %struct.sv* %1735, null
  br i1 %cmp3304, label %land.lhs.true.3306, label %lor.rhs.3322

land.lhs.true.3306:                               ; preds = %lor.end.3297
  %1736 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3307 = getelementptr inbounds %struct.cop, %struct.cop* %1736, i32 0, i32 14
  %1737 = load %struct.sv*, %struct.sv** %cop_warnings3307, align 8
  %cmp3308 = icmp ne %struct.sv* %1737, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp3308, label %land.lhs.true.3310, label %lor.rhs.3322

land.lhs.true.3310:                               ; preds = %land.lhs.true.3306
  %1738 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3311 = getelementptr inbounds %struct.cop, %struct.cop* %1738, i32 0, i32 14
  %1739 = load %struct.sv*, %struct.sv** %cop_warnings3311, align 8
  %cmp3312 = icmp eq %struct.sv* %1739, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp3312, label %lor.end.3332, label %lor.lhs.false.3314

lor.lhs.false.3314:                               ; preds = %land.lhs.true.3310
  %1740 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3315 = getelementptr inbounds %struct.cop, %struct.cop* %1740, i32 0, i32 14
  %1741 = load %struct.sv*, %struct.sv** %cop_warnings3315, align 8
  %sv_any3316 = getelementptr inbounds %struct.sv, %struct.sv* %1741, i32 0, i32 0
  %1742 = load i8*, i8** %sv_any3316, align 8
  %1743 = bitcast i8* %1742 to %struct.xpv*
  %xpv_pv3317 = getelementptr inbounds %struct.xpv, %struct.xpv* %1743, i32 0, i32 0
  %1744 = load i8*, i8** %xpv_pv3317, align 8
  %arrayidx3318 = getelementptr inbounds i8, i8* %1744, i64 11
  %1745 = load i8, i8* %arrayidx3318, align 1
  %conv3319 = sext i8 %1745 to i32
  %and3320 = and i32 %conv3319, 1
  %tobool3321 = icmp ne i32 %and3320, 0
  br i1 %tobool3321, label %lor.end.3332, label %lor.rhs.3322

lor.rhs.3322:                                     ; preds = %lor.lhs.false.3314, %land.lhs.true.3306, %lor.end.3297
  %1746 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3323 = getelementptr inbounds %struct.cop, %struct.cop* %1746, i32 0, i32 14
  %1747 = load %struct.sv*, %struct.sv** %cop_warnings3323, align 8
  %cmp3324 = icmp eq %struct.sv* %1747, null
  br i1 %cmp3324, label %land.rhs.3326, label %land.end.3330

land.rhs.3326:                                    ; preds = %lor.rhs.3322
  %1748 = load i8, i8* @PL_dowarn, align 1
  %conv3327 = zext i8 %1748 to i32
  %and3328 = and i32 %conv3327, 1
  %tobool3329 = icmp ne i32 %and3328, 0
  br label %land.end.3330

land.end.3330:                                    ; preds = %land.rhs.3326, %lor.rhs.3322
  %1749 = phi i1 [ false, %lor.rhs.3322 ], [ %tobool3329, %land.rhs.3326 ]
  br label %lor.end.3332

lor.end.3332:                                     ; preds = %land.end.3330, %lor.lhs.false.3314, %land.lhs.true.3310
  %1750 = phi i1 [ true, %lor.lhs.false.3314 ], [ true, %land.lhs.true.3310 ], [ %1749, %land.end.3330 ]
  %cond3334 = select i1 %1750, i32 0, i32 255
  %call3335 = call i64 @Perl_utf8n_to_uvuni(i8* %arraydecay3302, i64 13, i64* null, i32 %cond3334)
  %conv3336 = trunc i64 %call3335 to i32
  store i32 %conv3336, i32* %c2, align 4
  br label %if.end.3372

if.else.3337:                                     ; preds = %lor.lhs.false.3253
  %1751 = load i8*, i8** %s3070, align 8
  %1752 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3338 = getelementptr inbounds %struct.cop, %struct.cop* %1752, i32 0, i32 14
  %1753 = load %struct.sv*, %struct.sv** %cop_warnings3338, align 8
  %cmp3339 = icmp ne %struct.sv* %1753, null
  br i1 %cmp3339, label %land.lhs.true.3341, label %lor.rhs.3357

land.lhs.true.3341:                               ; preds = %if.else.3337
  %1754 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3342 = getelementptr inbounds %struct.cop, %struct.cop* %1754, i32 0, i32 14
  %1755 = load %struct.sv*, %struct.sv** %cop_warnings3342, align 8
  %cmp3343 = icmp ne %struct.sv* %1755, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp3343, label %land.lhs.true.3345, label %lor.rhs.3357

land.lhs.true.3345:                               ; preds = %land.lhs.true.3341
  %1756 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3346 = getelementptr inbounds %struct.cop, %struct.cop* %1756, i32 0, i32 14
  %1757 = load %struct.sv*, %struct.sv** %cop_warnings3346, align 8
  %cmp3347 = icmp eq %struct.sv* %1757, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp3347, label %lor.end.3367, label %lor.lhs.false.3349

lor.lhs.false.3349:                               ; preds = %land.lhs.true.3345
  %1758 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3350 = getelementptr inbounds %struct.cop, %struct.cop* %1758, i32 0, i32 14
  %1759 = load %struct.sv*, %struct.sv** %cop_warnings3350, align 8
  %sv_any3351 = getelementptr inbounds %struct.sv, %struct.sv* %1759, i32 0, i32 0
  %1760 = load i8*, i8** %sv_any3351, align 8
  %1761 = bitcast i8* %1760 to %struct.xpv*
  %xpv_pv3352 = getelementptr inbounds %struct.xpv, %struct.xpv* %1761, i32 0, i32 0
  %1762 = load i8*, i8** %xpv_pv3352, align 8
  %arrayidx3353 = getelementptr inbounds i8, i8* %1762, i64 11
  %1763 = load i8, i8* %arrayidx3353, align 1
  %conv3354 = sext i8 %1763 to i32
  %and3355 = and i32 %conv3354, 1
  %tobool3356 = icmp ne i32 %and3355, 0
  br i1 %tobool3356, label %lor.end.3367, label %lor.rhs.3357

lor.rhs.3357:                                     ; preds = %lor.lhs.false.3349, %land.lhs.true.3341, %if.else.3337
  %1764 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3358 = getelementptr inbounds %struct.cop, %struct.cop* %1764, i32 0, i32 14
  %1765 = load %struct.sv*, %struct.sv** %cop_warnings3358, align 8
  %cmp3359 = icmp eq %struct.sv* %1765, null
  br i1 %cmp3359, label %land.rhs.3361, label %land.end.3365

land.rhs.3361:                                    ; preds = %lor.rhs.3357
  %1766 = load i8, i8* @PL_dowarn, align 1
  %conv3362 = zext i8 %1766 to i32
  %and3363 = and i32 %conv3362, 1
  %tobool3364 = icmp ne i32 %and3363, 0
  br label %land.end.3365

land.end.3365:                                    ; preds = %land.rhs.3361, %lor.rhs.3357
  %1767 = phi i1 [ false, %lor.rhs.3357 ], [ %tobool3364, %land.rhs.3361 ]
  br label %lor.end.3367

lor.end.3367:                                     ; preds = %land.end.3365, %lor.lhs.false.3349, %land.lhs.true.3345
  %1768 = phi i1 [ true, %lor.lhs.false.3349 ], [ true, %land.lhs.true.3345 ], [ %1767, %land.end.3365 ]
  %cond3369 = select i1 %1768, i32 0, i32 255
  %call3370 = call i64 @Perl_utf8n_to_uvuni(i8* %1751, i64 13, i64* null, i32 %cond3369)
  %conv3371 = trunc i64 %call3370 to i32
  store i32 %conv3371, i32* %c1, align 4
  store i32 %conv3371, i32* %c2, align 4
  br label %if.end.3372

if.end.3372:                                      ; preds = %lor.end.3367, %lor.end.3332
  br label %if.end.3373

if.end.3373:                                      ; preds = %if.end.3372, %if.end.3247
  br label %if.end.3374

if.end.3374:                                      ; preds = %if.end.3373, %if.then.3201
  br label %if.end.3376

if.else.3375:                                     ; preds = %land.lhs.true.3064, %lor.lhs.false.3057
  store i32 -1000, i32* %c2, align 4
  store i32 -1000, i32* %c1, align 4
  br label %if.end.3376

if.end.3376:                                      ; preds = %if.else.3375, %if.end.3374
  br label %assume_ok_easy

assume_ok_easy:                                   ; preds = %if.end.3376, %if.then.3209
  %1769 = load i8*, i8** %locinput, align 8
  store i8* %1769, i8** @PL_reginput, align 8
  %1770 = load i32, i32* %minmod, align 4
  %tobool3377 = icmp ne i32 %1770, 0
  br i1 %tobool3377, label %if.then.3378, label %if.else.3825

if.then.3378:                                     ; preds = %assume_ok_easy
  store i32 0, i32* %minmod, align 4
  %1771 = load i32, i32* %ln, align 4
  %tobool3380 = icmp ne i32 %1771, 0
  br i1 %tobool3380, label %land.lhs.true.3381, label %if.end.3386

land.lhs.true.3381:                               ; preds = %if.then.3378
  %1772 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1773 = load i32, i32* %ln, align 4
  %call3382 = call i32 @S_regrepeat(%struct.regnode* %1772, i32 %1773)
  %1774 = load i32, i32* %ln, align 4
  %cmp3383 = icmp slt i32 %call3382, %1774
  br i1 %cmp3383, label %if.then.3385, label %if.end.3386

if.then.3385:                                     ; preds = %land.lhs.true.3381
  br label %no

if.end.3386:                                      ; preds = %land.lhs.true.3381, %if.then.3378
  %1775 = load i8*, i8** @PL_reginput, align 8
  store i8* %1775, i8** %locinput, align 8
  %1776 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %1776, i32* %lastcp3379, align 4
  %1777 = load i32, i32* %c1, align 4
  %cmp3387 = icmp ne i32 %1777, -1000
  br i1 %cmp3387, label %if.then.3389, label %if.else.3656

if.then.3389:                                     ; preds = %if.end.3386
  %1778 = load i8*, i8** %locinput, align 8
  store i8* %1778, i8** %old, align 8
  store i32 0, i32* %count, align 4
  %1779 = load i32, i32* %n, align 4
  %cmp3391 = icmp eq i32 %1779, 32767
  br i1 %cmp3391, label %if.then.3393, label %if.else.3411

if.then.3393:                                     ; preds = %if.then.3389
  %1780 = load i8*, i8** @PL_regeol, align 8
  %add.ptr3394 = getelementptr inbounds i8, i8* %1780, i64 -1
  store i8* %add.ptr3394, i8** %e3390, align 8
  %1781 = load i8, i8* %do_utf8, align 1
  %tobool3395 = icmp ne i8 %1781, 0
  br i1 %tobool3395, label %if.then.3396, label %if.end.3410

if.then.3396:                                     ; preds = %if.then.3393
  br label %while.cond.3397

while.cond.3397:                                  ; preds = %while.body.3407, %if.then.3396
  %1782 = load i8*, i8** %e3390, align 8
  %1783 = load i8, i8* %1782, align 1
  %conv3398 = zext i8 %1783 to i32
  %cmp3399 = icmp sge i32 %conv3398, 128
  br i1 %cmp3399, label %land.rhs.3401, label %land.end.3405

land.rhs.3401:                                    ; preds = %while.cond.3397
  %1784 = load i8*, i8** %e3390, align 8
  %1785 = load i8, i8* %1784, align 1
  %conv3402 = zext i8 %1785 to i32
  %cmp3403 = icmp sle i32 %conv3402, 191
  br label %land.end.3405

land.end.3405:                                    ; preds = %land.rhs.3401, %while.cond.3397
  %1786 = phi i1 [ false, %while.cond.3397 ], [ %cmp3403, %land.rhs.3401 ]
  br i1 %1786, label %while.body.3407, label %while.end.3409

while.body.3407:                                  ; preds = %land.end.3405
  %1787 = load i8*, i8** %e3390, align 8
  %incdec.ptr3408 = getelementptr inbounds i8, i8* %1787, i32 -1
  store i8* %incdec.ptr3408, i8** %e3390, align 8
  br label %while.cond.3397

while.end.3409:                                   ; preds = %land.end.3405
  br label %if.end.3410

if.end.3410:                                      ; preds = %while.end.3409, %if.then.3393
  br label %if.end.3444

if.else.3411:                                     ; preds = %if.then.3389
  %1788 = load i8, i8* %do_utf8, align 1
  %tobool3412 = icmp ne i8 %1788, 0
  br i1 %tobool3412, label %if.then.3413, label %if.else.3433

if.then.3413:                                     ; preds = %if.else.3411
  %1789 = load i32, i32* %n, align 4
  %1790 = load i32, i32* %ln, align 4
  %sub3414 = sub nsw i32 %1789, %1790
  store i32 %sub3414, i32* %m, align 4
  %1791 = load i8*, i8** %locinput, align 8
  store i8* %1791, i8** %e3390, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.3413
  %1792 = load i32, i32* %m, align 4
  %cmp3415 = icmp sgt i32 %1792, 0
  br i1 %cmp3415, label %land.rhs.3417, label %land.end.3425

land.rhs.3417:                                    ; preds = %for.cond
  %1793 = load i8*, i8** %e3390, align 8
  %1794 = load i8*, i8** %e3390, align 8
  %1795 = load i8, i8* %1794, align 1
  %idxprom3418 = zext i8 %1795 to i64
  %arrayidx3419 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom3418
  %1796 = load i8, i8* %arrayidx3419, align 1
  %conv3420 = zext i8 %1796 to i32
  %idx.ext3421 = sext i32 %conv3420 to i64
  %add.ptr3422 = getelementptr inbounds i8, i8* %1793, i64 %idx.ext3421
  %1797 = load i8*, i8** @PL_regeol, align 8
  %cmp3423 = icmp ule i8* %add.ptr3422, %1797
  br label %land.end.3425

land.end.3425:                                    ; preds = %land.rhs.3417, %for.cond
  %1798 = phi i1 [ false, %for.cond ], [ %cmp3423, %land.rhs.3417 ]
  br i1 %1798, label %for.body, label %for.end

for.body:                                         ; preds = %land.end.3425
  %1799 = load i8*, i8** %e3390, align 8
  %1800 = load i8, i8* %1799, align 1
  %idxprom3427 = zext i8 %1800 to i64
  %arrayidx3428 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom3427
  %1801 = load i8, i8* %arrayidx3428, align 1
  %conv3429 = zext i8 %1801 to i32
  %1802 = load i8*, i8** %e3390, align 8
  %idx.ext3430 = sext i32 %conv3429 to i64
  %add.ptr3431 = getelementptr inbounds i8, i8* %1802, i64 %idx.ext3430
  store i8* %add.ptr3431, i8** %e3390, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %1803 = load i32, i32* %m, align 4
  %dec3432 = add nsw i32 %1803, -1
  store i32 %dec3432, i32* %m, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end.3425
  br label %if.end.3443

if.else.3433:                                     ; preds = %if.else.3411
  %1804 = load i8*, i8** %locinput, align 8
  %1805 = load i32, i32* %n, align 4
  %idx.ext3434 = sext i32 %1805 to i64
  %add.ptr3435 = getelementptr inbounds i8, i8* %1804, i64 %idx.ext3434
  %1806 = load i32, i32* %ln, align 4
  %idx.ext3436 = sext i32 %1806 to i64
  %idx.neg = sub i64 0, %idx.ext3436
  %add.ptr3437 = getelementptr inbounds i8, i8* %add.ptr3435, i64 %idx.neg
  store i8* %add.ptr3437, i8** %e3390, align 8
  %1807 = load i8*, i8** %e3390, align 8
  %1808 = load i8*, i8** @PL_regeol, align 8
  %cmp3438 = icmp uge i8* %1807, %1808
  br i1 %cmp3438, label %if.then.3440, label %if.end.3442

if.then.3440:                                     ; preds = %if.else.3433
  %1809 = load i8*, i8** @PL_regeol, align 8
  %add.ptr3441 = getelementptr inbounds i8, i8* %1809, i64 -1
  store i8* %add.ptr3441, i8** %e3390, align 8
  br label %if.end.3442

if.end.3442:                                      ; preds = %if.then.3440, %if.else.3433
  br label %if.end.3443

if.end.3443:                                      ; preds = %if.end.3442, %for.end
  br label %if.end.3444

if.end.3444:                                      ; preds = %if.end.3443, %if.end.3410
  br label %while.body.3446

while.body.3446:                                  ; preds = %if.end.3444, %if.end.3655
  %1810 = load i8, i8* %do_utf8, align 1
  %tobool3447 = icmp ne i8 %1810, 0
  br i1 %tobool3447, label %if.else.3486, label %if.then.3448

if.then.3448:                                     ; preds = %while.body.3446
  %1811 = load i32, i32* %c1, align 4
  %1812 = load i32, i32* %c2, align 4
  %cmp3449 = icmp eq i32 %1811, %1812
  br i1 %cmp3449, label %if.then.3451, label %if.else.3464

if.then.3451:                                     ; preds = %if.then.3448
  br label %while.cond.3452

while.cond.3452:                                  ; preds = %while.body.3461, %if.then.3451
  %1813 = load i8*, i8** %locinput, align 8
  %1814 = load i8*, i8** %e3390, align 8
  %cmp3453 = icmp ule i8* %1813, %1814
  br i1 %cmp3453, label %land.rhs.3455, label %land.end.3459

land.rhs.3455:                                    ; preds = %while.cond.3452
  %1815 = load i8*, i8** %locinput, align 8
  %1816 = load i8, i8* %1815, align 1
  %conv3456 = zext i8 %1816 to i32
  %1817 = load i32, i32* %c1, align 4
  %cmp3457 = icmp ne i32 %conv3456, %1817
  br label %land.end.3459

land.end.3459:                                    ; preds = %land.rhs.3455, %while.cond.3452
  %1818 = phi i1 [ false, %while.cond.3452 ], [ %cmp3457, %land.rhs.3455 ]
  br i1 %1818, label %while.body.3461, label %while.end.3463

while.body.3461:                                  ; preds = %land.end.3459
  %1819 = load i8*, i8** %locinput, align 8
  %incdec.ptr3462 = getelementptr inbounds i8, i8* %1819, i32 1
  store i8* %incdec.ptr3462, i8** %locinput, align 8
  br label %while.cond.3452

while.end.3463:                                   ; preds = %land.end.3459
  br label %if.end.3481

if.else.3464:                                     ; preds = %if.then.3448
  br label %while.cond.3465

while.cond.3465:                                  ; preds = %while.body.3478, %if.else.3464
  %1820 = load i8*, i8** %locinput, align 8
  %1821 = load i8*, i8** %e3390, align 8
  %cmp3466 = icmp ule i8* %1820, %1821
  br i1 %cmp3466, label %land.lhs.true.3468, label %land.end.3476

land.lhs.true.3468:                               ; preds = %while.cond.3465
  %1822 = load i8*, i8** %locinput, align 8
  %1823 = load i8, i8* %1822, align 1
  %conv3469 = zext i8 %1823 to i32
  %1824 = load i32, i32* %c1, align 4
  %cmp3470 = icmp ne i32 %conv3469, %1824
  br i1 %cmp3470, label %land.rhs.3472, label %land.end.3476

land.rhs.3472:                                    ; preds = %land.lhs.true.3468
  %1825 = load i8*, i8** %locinput, align 8
  %1826 = load i8, i8* %1825, align 1
  %conv3473 = zext i8 %1826 to i32
  %1827 = load i32, i32* %c2, align 4
  %cmp3474 = icmp ne i32 %conv3473, %1827
  br label %land.end.3476

land.end.3476:                                    ; preds = %land.rhs.3472, %land.lhs.true.3468, %while.cond.3465
  %1828 = phi i1 [ false, %land.lhs.true.3468 ], [ false, %while.cond.3465 ], [ %cmp3474, %land.rhs.3472 ]
  br i1 %1828, label %while.body.3478, label %while.end.3480

while.body.3478:                                  ; preds = %land.end.3476
  %1829 = load i8*, i8** %locinput, align 8
  %incdec.ptr3479 = getelementptr inbounds i8, i8* %1829, i32 1
  store i8* %incdec.ptr3479, i8** %locinput, align 8
  br label %while.cond.3465

while.end.3480:                                   ; preds = %land.end.3476
  br label %if.end.3481

if.end.3481:                                      ; preds = %while.end.3480, %while.end.3463
  %1830 = load i8*, i8** %locinput, align 8
  %1831 = load i8*, i8** %old, align 8
  %sub.ptr.lhs.cast3482 = ptrtoint i8* %1830 to i64
  %sub.ptr.rhs.cast3483 = ptrtoint i8* %1831 to i64
  %sub.ptr.sub3484 = sub i64 %sub.ptr.lhs.cast3482, %sub.ptr.rhs.cast3483
  %conv3485 = trunc i64 %sub.ptr.sub3484 to i32
  store i32 %conv3485, i32* %count, align 4
  br label %if.end.3588

if.else.3486:                                     ; preds = %while.body.3446
  %1832 = load i32, i32* %c1, align 4
  %1833 = load i32, i32* %c2, align 4
  %cmp3488 = icmp eq i32 %1832, %1833
  br i1 %cmp3488, label %if.then.3490, label %if.else.3537

if.then.3490:                                     ; preds = %if.else.3486
  br label %while.cond.3491

while.cond.3491:                                  ; preds = %while.body.3533, %if.then.3490
  %1834 = load i8*, i8** %locinput, align 8
  %1835 = load i8*, i8** %e3390, align 8
  %cmp3492 = icmp ule i8* %1834, %1835
  br i1 %cmp3492, label %land.rhs.3494, label %land.end.3531

land.rhs.3494:                                    ; preds = %while.cond.3491
  %1836 = load i8*, i8** %locinput, align 8
  %1837 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3495 = getelementptr inbounds %struct.cop, %struct.cop* %1837, i32 0, i32 14
  %1838 = load %struct.sv*, %struct.sv** %cop_warnings3495, align 8
  %cmp3496 = icmp ne %struct.sv* %1838, null
  br i1 %cmp3496, label %land.lhs.true.3498, label %lor.rhs.3514

land.lhs.true.3498:                               ; preds = %land.rhs.3494
  %1839 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3499 = getelementptr inbounds %struct.cop, %struct.cop* %1839, i32 0, i32 14
  %1840 = load %struct.sv*, %struct.sv** %cop_warnings3499, align 8
  %cmp3500 = icmp ne %struct.sv* %1840, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp3500, label %land.lhs.true.3502, label %lor.rhs.3514

land.lhs.true.3502:                               ; preds = %land.lhs.true.3498
  %1841 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3503 = getelementptr inbounds %struct.cop, %struct.cop* %1841, i32 0, i32 14
  %1842 = load %struct.sv*, %struct.sv** %cop_warnings3503, align 8
  %cmp3504 = icmp eq %struct.sv* %1842, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp3504, label %lor.end.3524, label %lor.lhs.false.3506

lor.lhs.false.3506:                               ; preds = %land.lhs.true.3502
  %1843 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3507 = getelementptr inbounds %struct.cop, %struct.cop* %1843, i32 0, i32 14
  %1844 = load %struct.sv*, %struct.sv** %cop_warnings3507, align 8
  %sv_any3508 = getelementptr inbounds %struct.sv, %struct.sv* %1844, i32 0, i32 0
  %1845 = load i8*, i8** %sv_any3508, align 8
  %1846 = bitcast i8* %1845 to %struct.xpv*
  %xpv_pv3509 = getelementptr inbounds %struct.xpv, %struct.xpv* %1846, i32 0, i32 0
  %1847 = load i8*, i8** %xpv_pv3509, align 8
  %arrayidx3510 = getelementptr inbounds i8, i8* %1847, i64 11
  %1848 = load i8, i8* %arrayidx3510, align 1
  %conv3511 = sext i8 %1848 to i32
  %and3512 = and i32 %conv3511, 1
  %tobool3513 = icmp ne i32 %and3512, 0
  br i1 %tobool3513, label %lor.end.3524, label %lor.rhs.3514

lor.rhs.3514:                                     ; preds = %lor.lhs.false.3506, %land.lhs.true.3498, %land.rhs.3494
  %1849 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3515 = getelementptr inbounds %struct.cop, %struct.cop* %1849, i32 0, i32 14
  %1850 = load %struct.sv*, %struct.sv** %cop_warnings3515, align 8
  %cmp3516 = icmp eq %struct.sv* %1850, null
  br i1 %cmp3516, label %land.rhs.3518, label %land.end.3522

land.rhs.3518:                                    ; preds = %lor.rhs.3514
  %1851 = load i8, i8* @PL_dowarn, align 1
  %conv3519 = zext i8 %1851 to i32
  %and3520 = and i32 %conv3519, 1
  %tobool3521 = icmp ne i32 %and3520, 0
  br label %land.end.3522

land.end.3522:                                    ; preds = %land.rhs.3518, %lor.rhs.3514
  %1852 = phi i1 [ false, %lor.rhs.3514 ], [ %tobool3521, %land.rhs.3518 ]
  br label %lor.end.3524

lor.end.3524:                                     ; preds = %land.end.3522, %lor.lhs.false.3506, %land.lhs.true.3502
  %1853 = phi i1 [ true, %lor.lhs.false.3506 ], [ true, %land.lhs.true.3502 ], [ %1852, %land.end.3522 ]
  %cond3526 = select i1 %1853, i32 0, i32 255
  %call3527 = call i64 @Perl_utf8n_to_uvuni(i8* %1836, i64 13, i64* %len3487, i32 %cond3526)
  %1854 = load i32, i32* %c1, align 4
  %conv3528 = sext i32 %1854 to i64
  %cmp3529 = icmp ne i64 %call3527, %conv3528
  br label %land.end.3531

land.end.3531:                                    ; preds = %lor.end.3524, %while.cond.3491
  %1855 = phi i1 [ false, %while.cond.3491 ], [ %cmp3529, %lor.end.3524 ]
  br i1 %1855, label %while.body.3533, label %while.end.3536

while.body.3533:                                  ; preds = %land.end.3531
  %1856 = load i64, i64* %len3487, align 8
  %1857 = load i8*, i8** %locinput, align 8
  %add.ptr3534 = getelementptr inbounds i8, i8* %1857, i64 %1856
  store i8* %add.ptr3534, i8** %locinput, align 8
  %1858 = load i32, i32* %count, align 4
  %inc3535 = add nsw i32 %1858, 1
  store i32 %inc3535, i32* %count, align 4
  br label %while.cond.3491

while.end.3536:                                   ; preds = %land.end.3531
  br label %if.end.3587

if.else.3537:                                     ; preds = %if.else.3486
  br label %while.cond.3538

while.cond.3538:                                  ; preds = %if.end.3583, %if.else.3537
  %1859 = load i8*, i8** %locinput, align 8
  %1860 = load i8*, i8** %e3390, align 8
  %cmp3539 = icmp ule i8* %1859, %1860
  br i1 %cmp3539, label %while.body.3541, label %while.end.3586

while.body.3541:                                  ; preds = %while.cond.3538
  %1861 = load i8*, i8** %locinput, align 8
  %1862 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3542 = getelementptr inbounds %struct.cop, %struct.cop* %1862, i32 0, i32 14
  %1863 = load %struct.sv*, %struct.sv** %cop_warnings3542, align 8
  %cmp3543 = icmp ne %struct.sv* %1863, null
  br i1 %cmp3543, label %land.lhs.true.3545, label %lor.rhs.3561

land.lhs.true.3545:                               ; preds = %while.body.3541
  %1864 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3546 = getelementptr inbounds %struct.cop, %struct.cop* %1864, i32 0, i32 14
  %1865 = load %struct.sv*, %struct.sv** %cop_warnings3546, align 8
  %cmp3547 = icmp ne %struct.sv* %1865, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp3547, label %land.lhs.true.3549, label %lor.rhs.3561

land.lhs.true.3549:                               ; preds = %land.lhs.true.3545
  %1866 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3550 = getelementptr inbounds %struct.cop, %struct.cop* %1866, i32 0, i32 14
  %1867 = load %struct.sv*, %struct.sv** %cop_warnings3550, align 8
  %cmp3551 = icmp eq %struct.sv* %1867, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp3551, label %lor.end.3571, label %lor.lhs.false.3553

lor.lhs.false.3553:                               ; preds = %land.lhs.true.3549
  %1868 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3554 = getelementptr inbounds %struct.cop, %struct.cop* %1868, i32 0, i32 14
  %1869 = load %struct.sv*, %struct.sv** %cop_warnings3554, align 8
  %sv_any3555 = getelementptr inbounds %struct.sv, %struct.sv* %1869, i32 0, i32 0
  %1870 = load i8*, i8** %sv_any3555, align 8
  %1871 = bitcast i8* %1870 to %struct.xpv*
  %xpv_pv3556 = getelementptr inbounds %struct.xpv, %struct.xpv* %1871, i32 0, i32 0
  %1872 = load i8*, i8** %xpv_pv3556, align 8
  %arrayidx3557 = getelementptr inbounds i8, i8* %1872, i64 11
  %1873 = load i8, i8* %arrayidx3557, align 1
  %conv3558 = sext i8 %1873 to i32
  %and3559 = and i32 %conv3558, 1
  %tobool3560 = icmp ne i32 %and3559, 0
  br i1 %tobool3560, label %lor.end.3571, label %lor.rhs.3561

lor.rhs.3561:                                     ; preds = %lor.lhs.false.3553, %land.lhs.true.3545, %while.body.3541
  %1874 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3562 = getelementptr inbounds %struct.cop, %struct.cop* %1874, i32 0, i32 14
  %1875 = load %struct.sv*, %struct.sv** %cop_warnings3562, align 8
  %cmp3563 = icmp eq %struct.sv* %1875, null
  br i1 %cmp3563, label %land.rhs.3565, label %land.end.3569

land.rhs.3565:                                    ; preds = %lor.rhs.3561
  %1876 = load i8, i8* @PL_dowarn, align 1
  %conv3566 = zext i8 %1876 to i32
  %and3567 = and i32 %conv3566, 1
  %tobool3568 = icmp ne i32 %and3567, 0
  br label %land.end.3569

land.end.3569:                                    ; preds = %land.rhs.3565, %lor.rhs.3561
  %1877 = phi i1 [ false, %lor.rhs.3561 ], [ %tobool3568, %land.rhs.3565 ]
  br label %lor.end.3571

lor.end.3571:                                     ; preds = %land.end.3569, %lor.lhs.false.3553, %land.lhs.true.3549
  %1878 = phi i1 [ true, %lor.lhs.false.3553 ], [ true, %land.lhs.true.3549 ], [ %1877, %land.end.3569 ]
  %cond3573 = select i1 %1878, i32 0, i32 255
  %call3574 = call i64 @Perl_utf8n_to_uvuni(i8* %1861, i64 13, i64* %len3487, i32 %cond3573)
  store i64 %call3574, i64* %c, align 8
  %1879 = load i64, i64* %c, align 8
  %1880 = load i32, i32* %c1, align 4
  %conv3575 = sext i32 %1880 to i64
  %cmp3576 = icmp eq i64 %1879, %conv3575
  br i1 %cmp3576, label %if.then.3582, label %lor.lhs.false.3578

lor.lhs.false.3578:                               ; preds = %lor.end.3571
  %1881 = load i64, i64* %c, align 8
  %1882 = load i32, i32* %c2, align 4
  %conv3579 = sext i32 %1882 to i64
  %cmp3580 = icmp eq i64 %1881, %conv3579
  br i1 %cmp3580, label %if.then.3582, label %if.end.3583

if.then.3582:                                     ; preds = %lor.lhs.false.3578, %lor.end.3571
  br label %while.end.3586

if.end.3583:                                      ; preds = %lor.lhs.false.3578
  %1883 = load i64, i64* %len3487, align 8
  %1884 = load i8*, i8** %locinput, align 8
  %add.ptr3584 = getelementptr inbounds i8, i8* %1884, i64 %1883
  store i8* %add.ptr3584, i8** %locinput, align 8
  %1885 = load i32, i32* %count, align 4
  %inc3585 = add nsw i32 %1885, 1
  store i32 %inc3585, i32* %count, align 4
  br label %while.cond.3538

while.end.3586:                                   ; preds = %if.then.3582, %while.cond.3538
  br label %if.end.3587

if.end.3587:                                      ; preds = %while.end.3586, %while.end.3536
  br label %if.end.3588

if.end.3588:                                      ; preds = %if.end.3587, %if.end.3481
  %1886 = load i8*, i8** %locinput, align 8
  %1887 = load i8*, i8** %e3390, align 8
  %cmp3589 = icmp ugt i8* %1886, %1887
  br i1 %cmp3589, label %if.then.3591, label %if.end.3592

if.then.3591:                                     ; preds = %if.end.3588
  br label %no

if.end.3592:                                      ; preds = %if.end.3588
  %1888 = load i8*, i8** %locinput, align 8
  %1889 = load i8*, i8** %old, align 8
  %cmp3593 = icmp ne i8* %1888, %1889
  br i1 %cmp3593, label %if.then.3595, label %if.end.3601

if.then.3595:                                     ; preds = %if.end.3592
  store i32 1, i32* %ln, align 4
  %1890 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1891 = load i32, i32* %count, align 4
  %call3596 = call i32 @S_regrepeat(%struct.regnode* %1890, i32 %1891)
  %1892 = load i32, i32* %count, align 4
  %cmp3597 = icmp slt i32 %call3596, %1892
  br i1 %cmp3597, label %if.then.3599, label %if.end.3600

if.then.3599:                                     ; preds = %if.then.3595
  br label %no

if.end.3600:                                      ; preds = %if.then.3595
  br label %if.end.3601

if.end.3601:                                      ; preds = %if.end.3600, %if.end.3592
  %1893 = load i32, i32* %paren, align 4
  %tobool3602 = icmp ne i32 %1893, 0
  br i1 %tobool3602, label %if.then.3603, label %if.end.3630

if.then.3603:                                     ; preds = %if.end.3601
  %1894 = load i32, i32* %ln, align 4
  %tobool3604 = icmp ne i32 %1894, 0
  br i1 %tobool3604, label %if.then.3605, label %if.else.3626

if.then.3605:                                     ; preds = %if.then.3603
  %1895 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv3606 = sext i8 %1895 to i32
  %tobool3607 = icmp ne i32 %conv3606, 0
  br i1 %tobool3607, label %cond.true.3608, label %cond.false.3610

cond.true.3608:                                   ; preds = %if.then.3605
  %1896 = load i8*, i8** %locinput, align 8
  %call3609 = call i8* @S_reghop(i8* %1896, i32 -1)
  br label %cond.end.3612

cond.false.3610:                                  ; preds = %if.then.3605
  %1897 = load i8*, i8** %locinput, align 8
  %add.ptr3611 = getelementptr inbounds i8, i8* %1897, i64 -1
  br label %cond.end.3612

cond.end.3612:                                    ; preds = %cond.false.3610, %cond.true.3608
  %cond3613 = phi i8* [ %call3609, %cond.true.3608 ], [ %add.ptr3611, %cond.false.3610 ]
  %1898 = load i8*, i8** @PL_bostr, align 8
  %sub.ptr.lhs.cast3614 = ptrtoint i8* %cond3613 to i64
  %sub.ptr.rhs.cast3615 = ptrtoint i8* %1898 to i64
  %sub.ptr.sub3616 = sub i64 %sub.ptr.lhs.cast3614, %sub.ptr.rhs.cast3615
  %conv3617 = trunc i64 %sub.ptr.sub3616 to i32
  %1899 = load i32, i32* %paren, align 4
  %idxprom3618 = sext i32 %1899 to i64
  %1900 = load i32*, i32** @PL_regstartp, align 8
  %arrayidx3619 = getelementptr inbounds i32, i32* %1900, i64 %idxprom3618
  store i32 %conv3617, i32* %arrayidx3619, align 4
  %1901 = load i8*, i8** %locinput, align 8
  %1902 = load i8*, i8** @PL_bostr, align 8
  %sub.ptr.lhs.cast3620 = ptrtoint i8* %1901 to i64
  %sub.ptr.rhs.cast3621 = ptrtoint i8* %1902 to i64
  %sub.ptr.sub3622 = sub i64 %sub.ptr.lhs.cast3620, %sub.ptr.rhs.cast3621
  %conv3623 = trunc i64 %sub.ptr.sub3622 to i32
  %1903 = load i32, i32* %paren, align 4
  %idxprom3624 = sext i32 %1903 to i64
  %1904 = load i32*, i32** @PL_regendp, align 8
  %arrayidx3625 = getelementptr inbounds i32, i32* %1904, i64 %idxprom3624
  store i32 %conv3623, i32* %arrayidx3625, align 4
  br label %if.end.3629

if.else.3626:                                     ; preds = %if.then.3603
  %1905 = load i32, i32* %paren, align 4
  %idxprom3627 = sext i32 %1905 to i64
  %1906 = load i32*, i32** @PL_regendp, align 8
  %arrayidx3628 = getelementptr inbounds i32, i32* %1906, i64 %idxprom3627
  store i32 -1, i32* %arrayidx3628, align 4
  br label %if.end.3629

if.end.3629:                                      ; preds = %if.else.3626, %cond.end.3612
  br label %if.end.3630

if.end.3630:                                      ; preds = %if.end.3629, %if.end.3601
  %1907 = load %struct.regnode*, %struct.regnode** %next, align 8
  %call3631 = call i32 @S_regmatch(%struct.regnode* %1907)
  %tobool3632 = icmp ne i32 %call3631, 0
  br i1 %tobool3632, label %if.then.3633, label %if.end.3634

if.then.3633:                                     ; preds = %if.end.3630
  br label %yes

if.end.3634:                                      ; preds = %if.end.3630
  %1908 = load i32, i32* %paren, align 4
  %tobool3635 = icmp ne i32 %1908, 0
  br i1 %tobool3635, label %land.lhs.true.3636, label %if.end.3641

land.lhs.true.3636:                               ; preds = %if.end.3634
  %1909 = load i32, i32* %ln, align 4
  %tobool3637 = icmp ne i32 %1909, 0
  br i1 %tobool3637, label %if.then.3638, label %if.end.3641

if.then.3638:                                     ; preds = %land.lhs.true.3636
  %1910 = load i32, i32* %paren, align 4
  %idxprom3639 = sext i32 %1910 to i64
  %1911 = load i32*, i32** @PL_regendp, align 8
  %arrayidx3640 = getelementptr inbounds i32, i32* %1911, i64 %idxprom3639
  store i32 -1, i32* %arrayidx3640, align 4
  br label %if.end.3641

if.end.3641:                                      ; preds = %if.then.3638, %land.lhs.true.3636, %if.end.3634
  %1912 = load i8*, i8** %locinput, align 8
  store i8* %1912, i8** @PL_reginput, align 8
  %1913 = load i32, i32* @PL_savestack_ix, align 4
  %1914 = load i32, i32* %lastcp3379, align 4
  %cmp3642 = icmp sgt i32 %1913, %1914
  br i1 %cmp3642, label %if.then.3644, label %if.end.3645

if.then.3644:                                     ; preds = %if.end.3641
  %1915 = load i32, i32* %lastcp3379, align 4
  call void @Perl_leave_scope(i32 %1915)
  br label %if.end.3645

if.end.3645:                                      ; preds = %if.then.3644, %if.end.3641
  %1916 = load i8*, i8** %locinput, align 8
  store i8* %1916, i8** %old, align 8
  %1917 = load i8, i8* %do_utf8, align 1
  %tobool3646 = icmp ne i8 %1917, 0
  br i1 %tobool3646, label %if.then.3647, label %if.else.3653

if.then.3647:                                     ; preds = %if.end.3645
  %1918 = load i8*, i8** %locinput, align 8
  %1919 = load i8, i8* %1918, align 1
  %idxprom3648 = zext i8 %1919 to i64
  %arrayidx3649 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom3648
  %1920 = load i8, i8* %arrayidx3649, align 1
  %conv3650 = zext i8 %1920 to i32
  %1921 = load i8*, i8** %locinput, align 8
  %idx.ext3651 = sext i32 %conv3650 to i64
  %add.ptr3652 = getelementptr inbounds i8, i8* %1921, i64 %idx.ext3651
  store i8* %add.ptr3652, i8** %locinput, align 8
  br label %if.end.3655

if.else.3653:                                     ; preds = %if.end.3645
  %1922 = load i8*, i8** %locinput, align 8
  %incdec.ptr3654 = getelementptr inbounds i8, i8* %1922, i32 1
  store i8* %incdec.ptr3654, i8** %locinput, align 8
  br label %if.end.3655

if.end.3655:                                      ; preds = %if.else.3653, %if.then.3647
  store i32 1, i32* %count, align 4
  br label %while.body.3446

if.else.3656:                                     ; preds = %if.end.3386
  br label %while.cond.3657

while.cond.3657:                                  ; preds = %if.end.3822, %if.else.3656
  %1923 = load i32, i32* %n, align 4
  %1924 = load i32, i32* %ln, align 4
  %cmp3658 = icmp sge i32 %1923, %1924
  br i1 %cmp3658, label %lor.end.3668, label %lor.rhs.3660

lor.rhs.3660:                                     ; preds = %while.cond.3657
  %1925 = load i32, i32* %n, align 4
  %cmp3661 = icmp eq i32 %1925, 32767
  br i1 %cmp3661, label %land.rhs.3663, label %land.end.3666

land.rhs.3663:                                    ; preds = %lor.rhs.3660
  %1926 = load i32, i32* %ln, align 4
  %cmp3664 = icmp sgt i32 %1926, 0
  br label %land.end.3666

land.end.3666:                                    ; preds = %land.rhs.3663, %lor.rhs.3660
  %1927 = phi i1 [ false, %lor.rhs.3660 ], [ %cmp3664, %land.rhs.3663 ]
  br label %lor.end.3668

lor.end.3668:                                     ; preds = %land.end.3666, %while.cond.3657
  %1928 = phi i1 [ true, %while.cond.3657 ], [ %1927, %land.end.3666 ]
  br i1 %1928, label %while.body.3670, label %while.end.3823

while.body.3670:                                  ; preds = %lor.end.3668
  %1929 = load i32, i32* %c1, align 4
  %cmp3672 = icmp ne i32 %1929, -1000
  br i1 %cmp3672, label %if.then.3674, label %if.else.3767

if.then.3674:                                     ; preds = %while.body.3670
  %1930 = load i8, i8* %do_utf8, align 1
  %tobool3675 = icmp ne i8 %1930, 0
  br i1 %tobool3675, label %if.then.3676, label %if.else.3710

if.then.3676:                                     ; preds = %if.then.3674
  %1931 = load i8*, i8** @PL_reginput, align 8
  %1932 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3677 = getelementptr inbounds %struct.cop, %struct.cop* %1932, i32 0, i32 14
  %1933 = load %struct.sv*, %struct.sv** %cop_warnings3677, align 8
  %cmp3678 = icmp ne %struct.sv* %1933, null
  br i1 %cmp3678, label %land.lhs.true.3680, label %lor.rhs.3696

land.lhs.true.3680:                               ; preds = %if.then.3676
  %1934 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3681 = getelementptr inbounds %struct.cop, %struct.cop* %1934, i32 0, i32 14
  %1935 = load %struct.sv*, %struct.sv** %cop_warnings3681, align 8
  %cmp3682 = icmp ne %struct.sv* %1935, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp3682, label %land.lhs.true.3684, label %lor.rhs.3696

land.lhs.true.3684:                               ; preds = %land.lhs.true.3680
  %1936 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3685 = getelementptr inbounds %struct.cop, %struct.cop* %1936, i32 0, i32 14
  %1937 = load %struct.sv*, %struct.sv** %cop_warnings3685, align 8
  %cmp3686 = icmp eq %struct.sv* %1937, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp3686, label %lor.end.3706, label %lor.lhs.false.3688

lor.lhs.false.3688:                               ; preds = %land.lhs.true.3684
  %1938 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3689 = getelementptr inbounds %struct.cop, %struct.cop* %1938, i32 0, i32 14
  %1939 = load %struct.sv*, %struct.sv** %cop_warnings3689, align 8
  %sv_any3690 = getelementptr inbounds %struct.sv, %struct.sv* %1939, i32 0, i32 0
  %1940 = load i8*, i8** %sv_any3690, align 8
  %1941 = bitcast i8* %1940 to %struct.xpv*
  %xpv_pv3691 = getelementptr inbounds %struct.xpv, %struct.xpv* %1941, i32 0, i32 0
  %1942 = load i8*, i8** %xpv_pv3691, align 8
  %arrayidx3692 = getelementptr inbounds i8, i8* %1942, i64 11
  %1943 = load i8, i8* %arrayidx3692, align 1
  %conv3693 = sext i8 %1943 to i32
  %and3694 = and i32 %conv3693, 1
  %tobool3695 = icmp ne i32 %and3694, 0
  br i1 %tobool3695, label %lor.end.3706, label %lor.rhs.3696

lor.rhs.3696:                                     ; preds = %lor.lhs.false.3688, %land.lhs.true.3680, %if.then.3676
  %1944 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3697 = getelementptr inbounds %struct.cop, %struct.cop* %1944, i32 0, i32 14
  %1945 = load %struct.sv*, %struct.sv** %cop_warnings3697, align 8
  %cmp3698 = icmp eq %struct.sv* %1945, null
  br i1 %cmp3698, label %land.rhs.3700, label %land.end.3704

land.rhs.3700:                                    ; preds = %lor.rhs.3696
  %1946 = load i8, i8* @PL_dowarn, align 1
  %conv3701 = zext i8 %1946 to i32
  %and3702 = and i32 %conv3701, 1
  %tobool3703 = icmp ne i32 %and3702, 0
  br label %land.end.3704

land.end.3704:                                    ; preds = %land.rhs.3700, %lor.rhs.3696
  %1947 = phi i1 [ false, %lor.rhs.3696 ], [ %tobool3703, %land.rhs.3700 ]
  br label %lor.end.3706

lor.end.3706:                                     ; preds = %land.end.3704, %lor.lhs.false.3688, %land.lhs.true.3684
  %1948 = phi i1 [ true, %lor.lhs.false.3688 ], [ true, %land.lhs.true.3684 ], [ %1947, %land.end.3704 ]
  %cond3708 = select i1 %1948, i32 0, i32 255
  %call3709 = call i64 @Perl_utf8n_to_uvuni(i8* %1931, i64 13, i64* null, i32 %cond3708)
  store i64 %call3709, i64* %c3671, align 8
  br label %if.end.3713

if.else.3710:                                     ; preds = %if.then.3674
  %1949 = load i8*, i8** @PL_reginput, align 8
  %1950 = load i8, i8* %1949, align 1
  %conv3711 = zext i8 %1950 to i32
  %conv3712 = sext i32 %conv3711 to i64
  store i64 %conv3712, i64* %c3671, align 8
  br label %if.end.3713

if.end.3713:                                      ; preds = %if.else.3710, %lor.end.3706
  %1951 = load i64, i64* %c3671, align 8
  %1952 = load i32, i32* %c1, align 4
  %conv3714 = sext i32 %1952 to i64
  %cmp3715 = icmp eq i64 %1951, %conv3714
  br i1 %cmp3715, label %if.then.3721, label %lor.lhs.false.3717

lor.lhs.false.3717:                               ; preds = %if.end.3713
  %1953 = load i64, i64* %c3671, align 8
  %1954 = load i32, i32* %c2, align 4
  %conv3718 = sext i32 %1954 to i64
  %cmp3719 = icmp eq i64 %1953, %conv3718
  br i1 %cmp3719, label %if.then.3721, label %if.end.3766

if.then.3721:                                     ; preds = %lor.lhs.false.3717, %if.end.3713
  %1955 = load i32, i32* %paren, align 4
  %tobool3722 = icmp ne i32 %1955, 0
  br i1 %tobool3722, label %if.then.3723, label %if.end.3750

if.then.3723:                                     ; preds = %if.then.3721
  %1956 = load i32, i32* %ln, align 4
  %tobool3724 = icmp ne i32 %1956, 0
  br i1 %tobool3724, label %if.then.3725, label %if.else.3746

if.then.3725:                                     ; preds = %if.then.3723
  %1957 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv3726 = sext i8 %1957 to i32
  %tobool3727 = icmp ne i32 %conv3726, 0
  br i1 %tobool3727, label %cond.true.3728, label %cond.false.3730

cond.true.3728:                                   ; preds = %if.then.3725
  %1958 = load i8*, i8** @PL_reginput, align 8
  %call3729 = call i8* @S_reghop(i8* %1958, i32 -1)
  br label %cond.end.3732

cond.false.3730:                                  ; preds = %if.then.3725
  %1959 = load i8*, i8** @PL_reginput, align 8
  %add.ptr3731 = getelementptr inbounds i8, i8* %1959, i64 -1
  br label %cond.end.3732

cond.end.3732:                                    ; preds = %cond.false.3730, %cond.true.3728
  %cond3733 = phi i8* [ %call3729, %cond.true.3728 ], [ %add.ptr3731, %cond.false.3730 ]
  %1960 = load i8*, i8** @PL_bostr, align 8
  %sub.ptr.lhs.cast3734 = ptrtoint i8* %cond3733 to i64
  %sub.ptr.rhs.cast3735 = ptrtoint i8* %1960 to i64
  %sub.ptr.sub3736 = sub i64 %sub.ptr.lhs.cast3734, %sub.ptr.rhs.cast3735
  %conv3737 = trunc i64 %sub.ptr.sub3736 to i32
  %1961 = load i32, i32* %paren, align 4
  %idxprom3738 = sext i32 %1961 to i64
  %1962 = load i32*, i32** @PL_regstartp, align 8
  %arrayidx3739 = getelementptr inbounds i32, i32* %1962, i64 %idxprom3738
  store i32 %conv3737, i32* %arrayidx3739, align 4
  %1963 = load i8*, i8** @PL_reginput, align 8
  %1964 = load i8*, i8** @PL_bostr, align 8
  %sub.ptr.lhs.cast3740 = ptrtoint i8* %1963 to i64
  %sub.ptr.rhs.cast3741 = ptrtoint i8* %1964 to i64
  %sub.ptr.sub3742 = sub i64 %sub.ptr.lhs.cast3740, %sub.ptr.rhs.cast3741
  %conv3743 = trunc i64 %sub.ptr.sub3742 to i32
  %1965 = load i32, i32* %paren, align 4
  %idxprom3744 = sext i32 %1965 to i64
  %1966 = load i32*, i32** @PL_regendp, align 8
  %arrayidx3745 = getelementptr inbounds i32, i32* %1966, i64 %idxprom3744
  store i32 %conv3743, i32* %arrayidx3745, align 4
  br label %if.end.3749

if.else.3746:                                     ; preds = %if.then.3723
  %1967 = load i32, i32* %paren, align 4
  %idxprom3747 = sext i32 %1967 to i64
  %1968 = load i32*, i32** @PL_regendp, align 8
  %arrayidx3748 = getelementptr inbounds i32, i32* %1968, i64 %idxprom3747
  store i32 -1, i32* %arrayidx3748, align 4
  br label %if.end.3749

if.end.3749:                                      ; preds = %if.else.3746, %cond.end.3732
  br label %if.end.3750

if.end.3750:                                      ; preds = %if.end.3749, %if.then.3721
  %1969 = load %struct.regnode*, %struct.regnode** %next, align 8
  %call3751 = call i32 @S_regmatch(%struct.regnode* %1969)
  %tobool3752 = icmp ne i32 %call3751, 0
  br i1 %tobool3752, label %if.then.3753, label %if.end.3754

if.then.3753:                                     ; preds = %if.end.3750
  br label %yes

if.end.3754:                                      ; preds = %if.end.3750
  %1970 = load i32, i32* %paren, align 4
  %tobool3755 = icmp ne i32 %1970, 0
  br i1 %tobool3755, label %land.lhs.true.3756, label %if.end.3761

land.lhs.true.3756:                               ; preds = %if.end.3754
  %1971 = load i32, i32* %ln, align 4
  %tobool3757 = icmp ne i32 %1971, 0
  br i1 %tobool3757, label %if.then.3758, label %if.end.3761

if.then.3758:                                     ; preds = %land.lhs.true.3756
  %1972 = load i32, i32* %paren, align 4
  %idxprom3759 = sext i32 %1972 to i64
  %1973 = load i32*, i32** @PL_regendp, align 8
  %arrayidx3760 = getelementptr inbounds i32, i32* %1973, i64 %idxprom3759
  store i32 -1, i32* %arrayidx3760, align 4
  br label %if.end.3761

if.end.3761:                                      ; preds = %if.then.3758, %land.lhs.true.3756, %if.end.3754
  %1974 = load i32, i32* @PL_savestack_ix, align 4
  %1975 = load i32, i32* %lastcp3379, align 4
  %cmp3762 = icmp sgt i32 %1974, %1975
  br i1 %cmp3762, label %if.then.3764, label %if.end.3765

if.then.3764:                                     ; preds = %if.end.3761
  %1976 = load i32, i32* %lastcp3379, align 4
  call void @Perl_leave_scope(i32 %1976)
  br label %if.end.3765

if.end.3765:                                      ; preds = %if.then.3764, %if.end.3761
  br label %if.end.3766

if.end.3766:                                      ; preds = %if.end.3765, %lor.lhs.false.3717
  br label %if.end.3816

if.else.3767:                                     ; preds = %while.body.3670
  %1977 = load i32, i32* %c1, align 4
  %cmp3768 = icmp eq i32 %1977, -1000
  br i1 %cmp3768, label %if.then.3770, label %if.end.3815

if.then.3770:                                     ; preds = %if.else.3767
  %1978 = load i32, i32* %paren, align 4
  %tobool3771 = icmp ne i32 %1978, 0
  br i1 %tobool3771, label %if.then.3772, label %if.end.3799

if.then.3772:                                     ; preds = %if.then.3770
  %1979 = load i32, i32* %ln, align 4
  %tobool3773 = icmp ne i32 %1979, 0
  br i1 %tobool3773, label %if.then.3774, label %if.else.3795

if.then.3774:                                     ; preds = %if.then.3772
  %1980 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv3775 = sext i8 %1980 to i32
  %tobool3776 = icmp ne i32 %conv3775, 0
  br i1 %tobool3776, label %cond.true.3777, label %cond.false.3779

cond.true.3777:                                   ; preds = %if.then.3774
  %1981 = load i8*, i8** @PL_reginput, align 8
  %call3778 = call i8* @S_reghop(i8* %1981, i32 -1)
  br label %cond.end.3781

cond.false.3779:                                  ; preds = %if.then.3774
  %1982 = load i8*, i8** @PL_reginput, align 8
  %add.ptr3780 = getelementptr inbounds i8, i8* %1982, i64 -1
  br label %cond.end.3781

cond.end.3781:                                    ; preds = %cond.false.3779, %cond.true.3777
  %cond3782 = phi i8* [ %call3778, %cond.true.3777 ], [ %add.ptr3780, %cond.false.3779 ]
  %1983 = load i8*, i8** @PL_bostr, align 8
  %sub.ptr.lhs.cast3783 = ptrtoint i8* %cond3782 to i64
  %sub.ptr.rhs.cast3784 = ptrtoint i8* %1983 to i64
  %sub.ptr.sub3785 = sub i64 %sub.ptr.lhs.cast3783, %sub.ptr.rhs.cast3784
  %conv3786 = trunc i64 %sub.ptr.sub3785 to i32
  %1984 = load i32, i32* %paren, align 4
  %idxprom3787 = sext i32 %1984 to i64
  %1985 = load i32*, i32** @PL_regstartp, align 8
  %arrayidx3788 = getelementptr inbounds i32, i32* %1985, i64 %idxprom3787
  store i32 %conv3786, i32* %arrayidx3788, align 4
  %1986 = load i8*, i8** @PL_reginput, align 8
  %1987 = load i8*, i8** @PL_bostr, align 8
  %sub.ptr.lhs.cast3789 = ptrtoint i8* %1986 to i64
  %sub.ptr.rhs.cast3790 = ptrtoint i8* %1987 to i64
  %sub.ptr.sub3791 = sub i64 %sub.ptr.lhs.cast3789, %sub.ptr.rhs.cast3790
  %conv3792 = trunc i64 %sub.ptr.sub3791 to i32
  %1988 = load i32, i32* %paren, align 4
  %idxprom3793 = sext i32 %1988 to i64
  %1989 = load i32*, i32** @PL_regendp, align 8
  %arrayidx3794 = getelementptr inbounds i32, i32* %1989, i64 %idxprom3793
  store i32 %conv3792, i32* %arrayidx3794, align 4
  br label %if.end.3798

if.else.3795:                                     ; preds = %if.then.3772
  %1990 = load i32, i32* %paren, align 4
  %idxprom3796 = sext i32 %1990 to i64
  %1991 = load i32*, i32** @PL_regendp, align 8
  %arrayidx3797 = getelementptr inbounds i32, i32* %1991, i64 %idxprom3796
  store i32 -1, i32* %arrayidx3797, align 4
  br label %if.end.3798

if.end.3798:                                      ; preds = %if.else.3795, %cond.end.3781
  br label %if.end.3799

if.end.3799:                                      ; preds = %if.end.3798, %if.then.3770
  %1992 = load %struct.regnode*, %struct.regnode** %next, align 8
  %call3800 = call i32 @S_regmatch(%struct.regnode* %1992)
  %tobool3801 = icmp ne i32 %call3800, 0
  br i1 %tobool3801, label %if.then.3802, label %if.end.3803

if.then.3802:                                     ; preds = %if.end.3799
  br label %yes

if.end.3803:                                      ; preds = %if.end.3799
  %1993 = load i32, i32* %paren, align 4
  %tobool3804 = icmp ne i32 %1993, 0
  br i1 %tobool3804, label %land.lhs.true.3805, label %if.end.3810

land.lhs.true.3805:                               ; preds = %if.end.3803
  %1994 = load i32, i32* %ln, align 4
  %tobool3806 = icmp ne i32 %1994, 0
  br i1 %tobool3806, label %if.then.3807, label %if.end.3810

if.then.3807:                                     ; preds = %land.lhs.true.3805
  %1995 = load i32, i32* %paren, align 4
  %idxprom3808 = sext i32 %1995 to i64
  %1996 = load i32*, i32** @PL_regendp, align 8
  %arrayidx3809 = getelementptr inbounds i32, i32* %1996, i64 %idxprom3808
  store i32 -1, i32* %arrayidx3809, align 4
  br label %if.end.3810

if.end.3810:                                      ; preds = %if.then.3807, %land.lhs.true.3805, %if.end.3803
  %1997 = load i32, i32* @PL_savestack_ix, align 4
  %1998 = load i32, i32* %lastcp3379, align 4
  %cmp3811 = icmp sgt i32 %1997, %1998
  br i1 %cmp3811, label %if.then.3813, label %if.end.3814

if.then.3813:                                     ; preds = %if.end.3810
  %1999 = load i32, i32* %lastcp3379, align 4
  call void @Perl_leave_scope(i32 %1999)
  br label %if.end.3814

if.end.3814:                                      ; preds = %if.then.3813, %if.end.3810
  br label %if.end.3815

if.end.3815:                                      ; preds = %if.end.3814, %if.else.3767
  br label %if.end.3816

if.end.3816:                                      ; preds = %if.end.3815, %if.end.3766
  %2000 = load i8*, i8** %locinput, align 8
  store i8* %2000, i8** @PL_reginput, align 8
  %2001 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %call3817 = call i32 @S_regrepeat(%struct.regnode* %2001, i32 1)
  %tobool3818 = icmp ne i32 %call3817, 0
  br i1 %tobool3818, label %if.then.3819, label %if.else.3821

if.then.3819:                                     ; preds = %if.end.3816
  %2002 = load i32, i32* %ln, align 4
  %inc3820 = add nsw i32 %2002, 1
  store i32 %inc3820, i32* %ln, align 4
  %2003 = load i8*, i8** @PL_reginput, align 8
  store i8* %2003, i8** %locinput, align 8
  br label %if.end.3822

if.else.3821:                                     ; preds = %if.end.3816
  br label %no

if.end.3822:                                      ; preds = %if.then.3819
  br label %while.cond.3657

while.end.3823:                                   ; preds = %lor.end.3668
  br label %if.end.3824

if.end.3824:                                      ; preds = %while.end.3823
  br label %if.end.4100

if.else.3825:                                     ; preds = %assume_ok_easy
  %2004 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2005 = load i32, i32* %n, align 4
  %call3827 = call i32 @S_regrepeat(%struct.regnode* %2004, i32 %2005)
  store i32 %call3827, i32* %n, align 4
  %2006 = load i8*, i8** @PL_reginput, align 8
  store i8* %2006, i8** %locinput, align 8
  %2007 = load i32, i32* %ln, align 4
  %2008 = load i32, i32* %n, align 4
  %cmp3828 = icmp slt i32 %2007, %2008
  br i1 %cmp3828, label %land.lhs.true.3830, label %if.end.3867

land.lhs.true.3830:                               ; preds = %if.else.3825
  %2009 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type3831 = getelementptr inbounds %struct.regnode, %struct.regnode* %2009, i32 0, i32 1
  %2010 = load i8, i8* %type3831, align 1
  %idxprom3832 = zext i8 %2010 to i64
  %arrayidx3833 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i32 0, i64 %idxprom3832
  %2011 = load i8, i8* %arrayidx3833, align 1
  %conv3834 = zext i8 %2011 to i32
  %cmp3835 = icmp eq i32 %conv3834, 6
  br i1 %cmp3835, label %land.lhs.true.3837, label %if.end.3867

land.lhs.true.3837:                               ; preds = %land.lhs.true.3830
  %2012 = load i32, i32* @PL_multiline, align 4
  %tobool3838 = icmp ne i32 %2012, 0
  br i1 %tobool3838, label %lor.lhs.false.3844, label %land.lhs.true.3839

land.lhs.true.3839:                               ; preds = %land.lhs.true.3837
  %2013 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type3840 = getelementptr inbounds %struct.regnode, %struct.regnode* %2013, i32 0, i32 1
  %2014 = load i8, i8* %type3840, align 1
  %conv3841 = zext i8 %2014 to i32
  %cmp3842 = icmp ne i32 %conv3841, 7
  br i1 %cmp3842, label %if.then.3854, label %lor.lhs.false.3844

lor.lhs.false.3844:                               ; preds = %land.lhs.true.3839, %land.lhs.true.3837
  %2015 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type3845 = getelementptr inbounds %struct.regnode, %struct.regnode* %2015, i32 0, i32 1
  %2016 = load i8, i8* %type3845, align 1
  %conv3846 = zext i8 %2016 to i32
  %cmp3847 = icmp eq i32 %conv3846, 8
  br i1 %cmp3847, label %if.then.3854, label %lor.lhs.false.3849

lor.lhs.false.3849:                               ; preds = %lor.lhs.false.3844
  %2017 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type3850 = getelementptr inbounds %struct.regnode, %struct.regnode* %2017, i32 0, i32 1
  %2018 = load i8, i8* %type3850, align 1
  %conv3851 = zext i8 %2018 to i32
  %cmp3852 = icmp eq i32 %conv3851, 5
  br i1 %cmp3852, label %if.then.3854, label %if.end.3867

if.then.3854:                                     ; preds = %lor.lhs.false.3849, %lor.lhs.false.3844, %land.lhs.true.3839
  %2019 = load i32, i32* %n, align 4
  store i32 %2019, i32* %ln, align 4
  %2020 = load i8*, i8** @PL_reginput, align 8
  %add.ptr3855 = getelementptr inbounds i8, i8* %2020, i64 -1
  %2021 = load i8, i8* %add.ptr3855, align 1
  %conv3856 = zext i8 %2021 to i32
  %cmp3857 = icmp eq i32 %conv3856, 10
  br i1 %cmp3857, label %land.lhs.true.3859, label %if.end.3866

land.lhs.true.3859:                               ; preds = %if.then.3854
  %2022 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type3860 = getelementptr inbounds %struct.regnode, %struct.regnode* %2022, i32 0, i32 1
  %2023 = load i8, i8* %type3860, align 1
  %conv3861 = zext i8 %2023 to i32
  %cmp3862 = icmp ne i32 %conv3861, 5
  br i1 %cmp3862, label %if.then.3864, label %if.end.3866

if.then.3864:                                     ; preds = %land.lhs.true.3859
  %2024 = load i32, i32* %ln, align 4
  %dec3865 = add nsw i32 %2024, -1
  store i32 %dec3865, i32* %ln, align 4
  br label %if.end.3866

if.end.3866:                                      ; preds = %if.then.3864, %land.lhs.true.3859, %if.then.3854
  br label %if.end.3867

if.end.3867:                                      ; preds = %if.end.3866, %lor.lhs.false.3849, %land.lhs.true.3830, %if.else.3825
  %2025 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %2025, i32* %lastcp3826, align 4
  %2026 = load i32, i32* %paren, align 4
  %tobool3868 = icmp ne i32 %2026, 0
  br i1 %tobool3868, label %if.then.3869, label %if.else.3984

if.then.3869:                                     ; preds = %if.end.3867
  store i64 0, i64* %c3870, align 8
  br label %while.cond.3871

while.cond.3871:                                  ; preds = %cond.end.3981, %if.then.3869
  %2027 = load i32, i32* %n, align 4
  %2028 = load i32, i32* %ln, align 4
  %cmp3872 = icmp sge i32 %2027, %2028
  br i1 %cmp3872, label %while.body.3874, label %while.end.3983

while.body.3874:                                  ; preds = %while.cond.3871
  %2029 = load i32, i32* %c1, align 4
  %cmp3875 = icmp ne i32 %2029, -1000
  br i1 %cmp3875, label %if.then.3877, label %if.end.3917

if.then.3877:                                     ; preds = %while.body.3874
  %2030 = load i8, i8* %do_utf8, align 1
  %tobool3878 = icmp ne i8 %2030, 0
  br i1 %tobool3878, label %if.then.3879, label %if.else.3913

if.then.3879:                                     ; preds = %if.then.3877
  %2031 = load i8*, i8** @PL_reginput, align 8
  %2032 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3880 = getelementptr inbounds %struct.cop, %struct.cop* %2032, i32 0, i32 14
  %2033 = load %struct.sv*, %struct.sv** %cop_warnings3880, align 8
  %cmp3881 = icmp ne %struct.sv* %2033, null
  br i1 %cmp3881, label %land.lhs.true.3883, label %lor.rhs.3899

land.lhs.true.3883:                               ; preds = %if.then.3879
  %2034 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3884 = getelementptr inbounds %struct.cop, %struct.cop* %2034, i32 0, i32 14
  %2035 = load %struct.sv*, %struct.sv** %cop_warnings3884, align 8
  %cmp3885 = icmp ne %struct.sv* %2035, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp3885, label %land.lhs.true.3887, label %lor.rhs.3899

land.lhs.true.3887:                               ; preds = %land.lhs.true.3883
  %2036 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3888 = getelementptr inbounds %struct.cop, %struct.cop* %2036, i32 0, i32 14
  %2037 = load %struct.sv*, %struct.sv** %cop_warnings3888, align 8
  %cmp3889 = icmp eq %struct.sv* %2037, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp3889, label %lor.end.3909, label %lor.lhs.false.3891

lor.lhs.false.3891:                               ; preds = %land.lhs.true.3887
  %2038 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3892 = getelementptr inbounds %struct.cop, %struct.cop* %2038, i32 0, i32 14
  %2039 = load %struct.sv*, %struct.sv** %cop_warnings3892, align 8
  %sv_any3893 = getelementptr inbounds %struct.sv, %struct.sv* %2039, i32 0, i32 0
  %2040 = load i8*, i8** %sv_any3893, align 8
  %2041 = bitcast i8* %2040 to %struct.xpv*
  %xpv_pv3894 = getelementptr inbounds %struct.xpv, %struct.xpv* %2041, i32 0, i32 0
  %2042 = load i8*, i8** %xpv_pv3894, align 8
  %arrayidx3895 = getelementptr inbounds i8, i8* %2042, i64 11
  %2043 = load i8, i8* %arrayidx3895, align 1
  %conv3896 = sext i8 %2043 to i32
  %and3897 = and i32 %conv3896, 1
  %tobool3898 = icmp ne i32 %and3897, 0
  br i1 %tobool3898, label %lor.end.3909, label %lor.rhs.3899

lor.rhs.3899:                                     ; preds = %lor.lhs.false.3891, %land.lhs.true.3883, %if.then.3879
  %2044 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3900 = getelementptr inbounds %struct.cop, %struct.cop* %2044, i32 0, i32 14
  %2045 = load %struct.sv*, %struct.sv** %cop_warnings3900, align 8
  %cmp3901 = icmp eq %struct.sv* %2045, null
  br i1 %cmp3901, label %land.rhs.3903, label %land.end.3907

land.rhs.3903:                                    ; preds = %lor.rhs.3899
  %2046 = load i8, i8* @PL_dowarn, align 1
  %conv3904 = zext i8 %2046 to i32
  %and3905 = and i32 %conv3904, 1
  %tobool3906 = icmp ne i32 %and3905, 0
  br label %land.end.3907

land.end.3907:                                    ; preds = %land.rhs.3903, %lor.rhs.3899
  %2047 = phi i1 [ false, %lor.rhs.3899 ], [ %tobool3906, %land.rhs.3903 ]
  br label %lor.end.3909

lor.end.3909:                                     ; preds = %land.end.3907, %lor.lhs.false.3891, %land.lhs.true.3887
  %2048 = phi i1 [ true, %lor.lhs.false.3891 ], [ true, %land.lhs.true.3887 ], [ %2047, %land.end.3907 ]
  %cond3911 = select i1 %2048, i32 0, i32 255
  %call3912 = call i64 @Perl_utf8n_to_uvuni(i8* %2031, i64 13, i64* null, i32 %cond3911)
  store i64 %call3912, i64* %c3870, align 8
  br label %if.end.3916

if.else.3913:                                     ; preds = %if.then.3877
  %2049 = load i8*, i8** @PL_reginput, align 8
  %2050 = load i8, i8* %2049, align 1
  %conv3914 = zext i8 %2050 to i32
  %conv3915 = sext i32 %conv3914 to i64
  store i64 %conv3915, i64* %c3870, align 8
  br label %if.end.3916

if.end.3916:                                      ; preds = %if.else.3913, %lor.end.3909
  br label %if.end.3917

if.end.3917:                                      ; preds = %if.end.3916, %while.body.3874
  %2051 = load i32, i32* %c1, align 4
  %cmp3918 = icmp eq i32 %2051, -1000
  br i1 %cmp3918, label %if.then.3928, label %lor.lhs.false.3920

lor.lhs.false.3920:                               ; preds = %if.end.3917
  %2052 = load i64, i64* %c3870, align 8
  %2053 = load i32, i32* %c1, align 4
  %conv3921 = sext i32 %2053 to i64
  %cmp3922 = icmp eq i64 %2052, %conv3921
  br i1 %cmp3922, label %if.then.3928, label %lor.lhs.false.3924

lor.lhs.false.3924:                               ; preds = %lor.lhs.false.3920
  %2054 = load i64, i64* %c3870, align 8
  %2055 = load i32, i32* %c2, align 4
  %conv3925 = sext i32 %2055 to i64
  %cmp3926 = icmp eq i64 %2054, %conv3925
  br i1 %cmp3926, label %if.then.3928, label %if.end.3973

if.then.3928:                                     ; preds = %lor.lhs.false.3924, %lor.lhs.false.3920, %if.end.3917
  %2056 = load i32, i32* %paren, align 4
  %tobool3929 = icmp ne i32 %2056, 0
  br i1 %tobool3929, label %if.then.3930, label %if.end.3957

if.then.3930:                                     ; preds = %if.then.3928
  %2057 = load i32, i32* %n, align 4
  %tobool3931 = icmp ne i32 %2057, 0
  br i1 %tobool3931, label %if.then.3932, label %if.else.3953

if.then.3932:                                     ; preds = %if.then.3930
  %2058 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv3933 = sext i8 %2058 to i32
  %tobool3934 = icmp ne i32 %conv3933, 0
  br i1 %tobool3934, label %cond.true.3935, label %cond.false.3937

cond.true.3935:                                   ; preds = %if.then.3932
  %2059 = load i8*, i8** @PL_reginput, align 8
  %call3936 = call i8* @S_reghop(i8* %2059, i32 -1)
  br label %cond.end.3939

cond.false.3937:                                  ; preds = %if.then.3932
  %2060 = load i8*, i8** @PL_reginput, align 8
  %add.ptr3938 = getelementptr inbounds i8, i8* %2060, i64 -1
  br label %cond.end.3939

cond.end.3939:                                    ; preds = %cond.false.3937, %cond.true.3935
  %cond3940 = phi i8* [ %call3936, %cond.true.3935 ], [ %add.ptr3938, %cond.false.3937 ]
  %2061 = load i8*, i8** @PL_bostr, align 8
  %sub.ptr.lhs.cast3941 = ptrtoint i8* %cond3940 to i64
  %sub.ptr.rhs.cast3942 = ptrtoint i8* %2061 to i64
  %sub.ptr.sub3943 = sub i64 %sub.ptr.lhs.cast3941, %sub.ptr.rhs.cast3942
  %conv3944 = trunc i64 %sub.ptr.sub3943 to i32
  %2062 = load i32, i32* %paren, align 4
  %idxprom3945 = sext i32 %2062 to i64
  %2063 = load i32*, i32** @PL_regstartp, align 8
  %arrayidx3946 = getelementptr inbounds i32, i32* %2063, i64 %idxprom3945
  store i32 %conv3944, i32* %arrayidx3946, align 4
  %2064 = load i8*, i8** @PL_reginput, align 8
  %2065 = load i8*, i8** @PL_bostr, align 8
  %sub.ptr.lhs.cast3947 = ptrtoint i8* %2064 to i64
  %sub.ptr.rhs.cast3948 = ptrtoint i8* %2065 to i64
  %sub.ptr.sub3949 = sub i64 %sub.ptr.lhs.cast3947, %sub.ptr.rhs.cast3948
  %conv3950 = trunc i64 %sub.ptr.sub3949 to i32
  %2066 = load i32, i32* %paren, align 4
  %idxprom3951 = sext i32 %2066 to i64
  %2067 = load i32*, i32** @PL_regendp, align 8
  %arrayidx3952 = getelementptr inbounds i32, i32* %2067, i64 %idxprom3951
  store i32 %conv3950, i32* %arrayidx3952, align 4
  br label %if.end.3956

if.else.3953:                                     ; preds = %if.then.3930
  %2068 = load i32, i32* %paren, align 4
  %idxprom3954 = sext i32 %2068 to i64
  %2069 = load i32*, i32** @PL_regendp, align 8
  %arrayidx3955 = getelementptr inbounds i32, i32* %2069, i64 %idxprom3954
  store i32 -1, i32* %arrayidx3955, align 4
  br label %if.end.3956

if.end.3956:                                      ; preds = %if.else.3953, %cond.end.3939
  br label %if.end.3957

if.end.3957:                                      ; preds = %if.end.3956, %if.then.3928
  %2070 = load %struct.regnode*, %struct.regnode** %next, align 8
  %call3958 = call i32 @S_regmatch(%struct.regnode* %2070)
  %tobool3959 = icmp ne i32 %call3958, 0
  br i1 %tobool3959, label %if.then.3960, label %if.end.3961

if.then.3960:                                     ; preds = %if.end.3957
  br label %yes

if.end.3961:                                      ; preds = %if.end.3957
  %2071 = load i32, i32* %paren, align 4
  %tobool3962 = icmp ne i32 %2071, 0
  br i1 %tobool3962, label %land.lhs.true.3963, label %if.end.3968

land.lhs.true.3963:                               ; preds = %if.end.3961
  %2072 = load i32, i32* %n, align 4
  %tobool3964 = icmp ne i32 %2072, 0
  br i1 %tobool3964, label %if.then.3965, label %if.end.3968

if.then.3965:                                     ; preds = %land.lhs.true.3963
  %2073 = load i32, i32* %paren, align 4
  %idxprom3966 = sext i32 %2073 to i64
  %2074 = load i32*, i32** @PL_regendp, align 8
  %arrayidx3967 = getelementptr inbounds i32, i32* %2074, i64 %idxprom3966
  store i32 -1, i32* %arrayidx3967, align 4
  br label %if.end.3968

if.end.3968:                                      ; preds = %if.then.3965, %land.lhs.true.3963, %if.end.3961
  %2075 = load i32, i32* @PL_savestack_ix, align 4
  %2076 = load i32, i32* %lastcp3826, align 4
  %cmp3969 = icmp sgt i32 %2075, %2076
  br i1 %cmp3969, label %if.then.3971, label %if.end.3972

if.then.3971:                                     ; preds = %if.end.3968
  %2077 = load i32, i32* %lastcp3826, align 4
  call void @Perl_leave_scope(i32 %2077)
  br label %if.end.3972

if.end.3972:                                      ; preds = %if.then.3971, %if.end.3968
  br label %if.end.3973

if.end.3973:                                      ; preds = %if.end.3972, %lor.lhs.false.3924
  %2078 = load i32, i32* %n, align 4
  %dec3974 = add nsw i32 %2078, -1
  store i32 %dec3974, i32* %n, align 4
  %2079 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv3975 = sext i8 %2079 to i32
  %tobool3976 = icmp ne i32 %conv3975, 0
  br i1 %tobool3976, label %cond.true.3977, label %cond.false.3979

cond.true.3977:                                   ; preds = %if.end.3973
  %2080 = load i8*, i8** %locinput, align 8
  %call3978 = call i8* @S_reghop(i8* %2080, i32 -1)
  br label %cond.end.3981

cond.false.3979:                                  ; preds = %if.end.3973
  %2081 = load i8*, i8** %locinput, align 8
  %add.ptr3980 = getelementptr inbounds i8, i8* %2081, i64 -1
  br label %cond.end.3981

cond.end.3981:                                    ; preds = %cond.false.3979, %cond.true.3977
  %cond3982 = phi i8* [ %call3978, %cond.true.3977 ], [ %add.ptr3980, %cond.false.3979 ]
  store i8* %cond3982, i8** %locinput, align 8
  store i8* %cond3982, i8** @PL_reginput, align 8
  br label %while.cond.3871

while.end.3983:                                   ; preds = %while.cond.3871
  br label %if.end.4099

if.else.3984:                                     ; preds = %if.end.3867
  store i64 0, i64* %c3985, align 8
  br label %while.cond.3986

while.cond.3986:                                  ; preds = %cond.end.4096, %if.else.3984
  %2082 = load i32, i32* %n, align 4
  %2083 = load i32, i32* %ln, align 4
  %cmp3987 = icmp sge i32 %2082, %2083
  br i1 %cmp3987, label %while.body.3989, label %while.end.4098

while.body.3989:                                  ; preds = %while.cond.3986
  %2084 = load i32, i32* %c1, align 4
  %cmp3990 = icmp ne i32 %2084, -1000
  br i1 %cmp3990, label %if.then.3992, label %if.end.4032

if.then.3992:                                     ; preds = %while.body.3989
  %2085 = load i8, i8* %do_utf8, align 1
  %tobool3993 = icmp ne i8 %2085, 0
  br i1 %tobool3993, label %if.then.3994, label %if.else.4028

if.then.3994:                                     ; preds = %if.then.3992
  %2086 = load i8*, i8** @PL_reginput, align 8
  %2087 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3995 = getelementptr inbounds %struct.cop, %struct.cop* %2087, i32 0, i32 14
  %2088 = load %struct.sv*, %struct.sv** %cop_warnings3995, align 8
  %cmp3996 = icmp ne %struct.sv* %2088, null
  br i1 %cmp3996, label %land.lhs.true.3998, label %lor.rhs.4014

land.lhs.true.3998:                               ; preds = %if.then.3994
  %2089 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3999 = getelementptr inbounds %struct.cop, %struct.cop* %2089, i32 0, i32 14
  %2090 = load %struct.sv*, %struct.sv** %cop_warnings3999, align 8
  %cmp4000 = icmp ne %struct.sv* %2090, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp4000, label %land.lhs.true.4002, label %lor.rhs.4014

land.lhs.true.4002:                               ; preds = %land.lhs.true.3998
  %2091 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4003 = getelementptr inbounds %struct.cop, %struct.cop* %2091, i32 0, i32 14
  %2092 = load %struct.sv*, %struct.sv** %cop_warnings4003, align 8
  %cmp4004 = icmp eq %struct.sv* %2092, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp4004, label %lor.end.4024, label %lor.lhs.false.4006

lor.lhs.false.4006:                               ; preds = %land.lhs.true.4002
  %2093 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4007 = getelementptr inbounds %struct.cop, %struct.cop* %2093, i32 0, i32 14
  %2094 = load %struct.sv*, %struct.sv** %cop_warnings4007, align 8
  %sv_any4008 = getelementptr inbounds %struct.sv, %struct.sv* %2094, i32 0, i32 0
  %2095 = load i8*, i8** %sv_any4008, align 8
  %2096 = bitcast i8* %2095 to %struct.xpv*
  %xpv_pv4009 = getelementptr inbounds %struct.xpv, %struct.xpv* %2096, i32 0, i32 0
  %2097 = load i8*, i8** %xpv_pv4009, align 8
  %arrayidx4010 = getelementptr inbounds i8, i8* %2097, i64 11
  %2098 = load i8, i8* %arrayidx4010, align 1
  %conv4011 = sext i8 %2098 to i32
  %and4012 = and i32 %conv4011, 1
  %tobool4013 = icmp ne i32 %and4012, 0
  br i1 %tobool4013, label %lor.end.4024, label %lor.rhs.4014

lor.rhs.4014:                                     ; preds = %lor.lhs.false.4006, %land.lhs.true.3998, %if.then.3994
  %2099 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4015 = getelementptr inbounds %struct.cop, %struct.cop* %2099, i32 0, i32 14
  %2100 = load %struct.sv*, %struct.sv** %cop_warnings4015, align 8
  %cmp4016 = icmp eq %struct.sv* %2100, null
  br i1 %cmp4016, label %land.rhs.4018, label %land.end.4022

land.rhs.4018:                                    ; preds = %lor.rhs.4014
  %2101 = load i8, i8* @PL_dowarn, align 1
  %conv4019 = zext i8 %2101 to i32
  %and4020 = and i32 %conv4019, 1
  %tobool4021 = icmp ne i32 %and4020, 0
  br label %land.end.4022

land.end.4022:                                    ; preds = %land.rhs.4018, %lor.rhs.4014
  %2102 = phi i1 [ false, %lor.rhs.4014 ], [ %tobool4021, %land.rhs.4018 ]
  br label %lor.end.4024

lor.end.4024:                                     ; preds = %land.end.4022, %lor.lhs.false.4006, %land.lhs.true.4002
  %2103 = phi i1 [ true, %lor.lhs.false.4006 ], [ true, %land.lhs.true.4002 ], [ %2102, %land.end.4022 ]
  %cond4026 = select i1 %2103, i32 0, i32 255
  %call4027 = call i64 @Perl_utf8n_to_uvuni(i8* %2086, i64 13, i64* null, i32 %cond4026)
  store i64 %call4027, i64* %c3985, align 8
  br label %if.end.4031

if.else.4028:                                     ; preds = %if.then.3992
  %2104 = load i8*, i8** @PL_reginput, align 8
  %2105 = load i8, i8* %2104, align 1
  %conv4029 = zext i8 %2105 to i32
  %conv4030 = sext i32 %conv4029 to i64
  store i64 %conv4030, i64* %c3985, align 8
  br label %if.end.4031

if.end.4031:                                      ; preds = %if.else.4028, %lor.end.4024
  br label %if.end.4032

if.end.4032:                                      ; preds = %if.end.4031, %while.body.3989
  %2106 = load i32, i32* %c1, align 4
  %cmp4033 = icmp eq i32 %2106, -1000
  br i1 %cmp4033, label %if.then.4043, label %lor.lhs.false.4035

lor.lhs.false.4035:                               ; preds = %if.end.4032
  %2107 = load i64, i64* %c3985, align 8
  %2108 = load i32, i32* %c1, align 4
  %conv4036 = sext i32 %2108 to i64
  %cmp4037 = icmp eq i64 %2107, %conv4036
  br i1 %cmp4037, label %if.then.4043, label %lor.lhs.false.4039

lor.lhs.false.4039:                               ; preds = %lor.lhs.false.4035
  %2109 = load i64, i64* %c3985, align 8
  %2110 = load i32, i32* %c2, align 4
  %conv4040 = sext i32 %2110 to i64
  %cmp4041 = icmp eq i64 %2109, %conv4040
  br i1 %cmp4041, label %if.then.4043, label %if.end.4088

if.then.4043:                                     ; preds = %lor.lhs.false.4039, %lor.lhs.false.4035, %if.end.4032
  %2111 = load i32, i32* %paren, align 4
  %tobool4044 = icmp ne i32 %2111, 0
  br i1 %tobool4044, label %if.then.4045, label %if.end.4072

if.then.4045:                                     ; preds = %if.then.4043
  %2112 = load i32, i32* %n, align 4
  %tobool4046 = icmp ne i32 %2112, 0
  br i1 %tobool4046, label %if.then.4047, label %if.else.4068

if.then.4047:                                     ; preds = %if.then.4045
  %2113 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv4048 = sext i8 %2113 to i32
  %tobool4049 = icmp ne i32 %conv4048, 0
  br i1 %tobool4049, label %cond.true.4050, label %cond.false.4052

cond.true.4050:                                   ; preds = %if.then.4047
  %2114 = load i8*, i8** @PL_reginput, align 8
  %call4051 = call i8* @S_reghop(i8* %2114, i32 -1)
  br label %cond.end.4054

cond.false.4052:                                  ; preds = %if.then.4047
  %2115 = load i8*, i8** @PL_reginput, align 8
  %add.ptr4053 = getelementptr inbounds i8, i8* %2115, i64 -1
  br label %cond.end.4054

cond.end.4054:                                    ; preds = %cond.false.4052, %cond.true.4050
  %cond4055 = phi i8* [ %call4051, %cond.true.4050 ], [ %add.ptr4053, %cond.false.4052 ]
  %2116 = load i8*, i8** @PL_bostr, align 8
  %sub.ptr.lhs.cast4056 = ptrtoint i8* %cond4055 to i64
  %sub.ptr.rhs.cast4057 = ptrtoint i8* %2116 to i64
  %sub.ptr.sub4058 = sub i64 %sub.ptr.lhs.cast4056, %sub.ptr.rhs.cast4057
  %conv4059 = trunc i64 %sub.ptr.sub4058 to i32
  %2117 = load i32, i32* %paren, align 4
  %idxprom4060 = sext i32 %2117 to i64
  %2118 = load i32*, i32** @PL_regstartp, align 8
  %arrayidx4061 = getelementptr inbounds i32, i32* %2118, i64 %idxprom4060
  store i32 %conv4059, i32* %arrayidx4061, align 4
  %2119 = load i8*, i8** @PL_reginput, align 8
  %2120 = load i8*, i8** @PL_bostr, align 8
  %sub.ptr.lhs.cast4062 = ptrtoint i8* %2119 to i64
  %sub.ptr.rhs.cast4063 = ptrtoint i8* %2120 to i64
  %sub.ptr.sub4064 = sub i64 %sub.ptr.lhs.cast4062, %sub.ptr.rhs.cast4063
  %conv4065 = trunc i64 %sub.ptr.sub4064 to i32
  %2121 = load i32, i32* %paren, align 4
  %idxprom4066 = sext i32 %2121 to i64
  %2122 = load i32*, i32** @PL_regendp, align 8
  %arrayidx4067 = getelementptr inbounds i32, i32* %2122, i64 %idxprom4066
  store i32 %conv4065, i32* %arrayidx4067, align 4
  br label %if.end.4071

if.else.4068:                                     ; preds = %if.then.4045
  %2123 = load i32, i32* %paren, align 4
  %idxprom4069 = sext i32 %2123 to i64
  %2124 = load i32*, i32** @PL_regendp, align 8
  %arrayidx4070 = getelementptr inbounds i32, i32* %2124, i64 %idxprom4069
  store i32 -1, i32* %arrayidx4070, align 4
  br label %if.end.4071

if.end.4071:                                      ; preds = %if.else.4068, %cond.end.4054
  br label %if.end.4072

if.end.4072:                                      ; preds = %if.end.4071, %if.then.4043
  %2125 = load %struct.regnode*, %struct.regnode** %next, align 8
  %call4073 = call i32 @S_regmatch(%struct.regnode* %2125)
  %tobool4074 = icmp ne i32 %call4073, 0
  br i1 %tobool4074, label %if.then.4075, label %if.end.4076

if.then.4075:                                     ; preds = %if.end.4072
  br label %yes

if.end.4076:                                      ; preds = %if.end.4072
  %2126 = load i32, i32* %paren, align 4
  %tobool4077 = icmp ne i32 %2126, 0
  br i1 %tobool4077, label %land.lhs.true.4078, label %if.end.4083

land.lhs.true.4078:                               ; preds = %if.end.4076
  %2127 = load i32, i32* %n, align 4
  %tobool4079 = icmp ne i32 %2127, 0
  br i1 %tobool4079, label %if.then.4080, label %if.end.4083

if.then.4080:                                     ; preds = %land.lhs.true.4078
  %2128 = load i32, i32* %paren, align 4
  %idxprom4081 = sext i32 %2128 to i64
  %2129 = load i32*, i32** @PL_regendp, align 8
  %arrayidx4082 = getelementptr inbounds i32, i32* %2129, i64 %idxprom4081
  store i32 -1, i32* %arrayidx4082, align 4
  br label %if.end.4083

if.end.4083:                                      ; preds = %if.then.4080, %land.lhs.true.4078, %if.end.4076
  %2130 = load i32, i32* @PL_savestack_ix, align 4
  %2131 = load i32, i32* %lastcp3826, align 4
  %cmp4084 = icmp sgt i32 %2130, %2131
  br i1 %cmp4084, label %if.then.4086, label %if.end.4087

if.then.4086:                                     ; preds = %if.end.4083
  %2132 = load i32, i32* %lastcp3826, align 4
  call void @Perl_leave_scope(i32 %2132)
  br label %if.end.4087

if.end.4087:                                      ; preds = %if.then.4086, %if.end.4083
  br label %if.end.4088

if.end.4088:                                      ; preds = %if.end.4087, %lor.lhs.false.4039
  %2133 = load i32, i32* %n, align 4
  %dec4089 = add nsw i32 %2133, -1
  store i32 %dec4089, i32* %n, align 4
  %2134 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv4090 = sext i8 %2134 to i32
  %tobool4091 = icmp ne i32 %conv4090, 0
  br i1 %tobool4091, label %cond.true.4092, label %cond.false.4094

cond.true.4092:                                   ; preds = %if.end.4088
  %2135 = load i8*, i8** %locinput, align 8
  %call4093 = call i8* @S_reghop(i8* %2135, i32 -1)
  br label %cond.end.4096

cond.false.4094:                                  ; preds = %if.end.4088
  %2136 = load i8*, i8** %locinput, align 8
  %add.ptr4095 = getelementptr inbounds i8, i8* %2136, i64 -1
  br label %cond.end.4096

cond.end.4096:                                    ; preds = %cond.false.4094, %cond.true.4092
  %cond4097 = phi i8* [ %call4093, %cond.true.4092 ], [ %add.ptr4095, %cond.false.4094 ]
  store i8* %cond4097, i8** %locinput, align 8
  store i8* %cond4097, i8** @PL_reginput, align 8
  br label %while.cond.3986

while.end.4098:                                   ; preds = %while.cond.3986
  br label %if.end.4099

if.end.4099:                                      ; preds = %while.end.4098, %while.end.3983
  br label %if.end.4100

if.end.4100:                                      ; preds = %if.end.4099, %if.end.3824
  br label %no

sw.bb.4101:                                       ; preds = %if.end
  %2137 = load %struct.re_cc_state*, %struct.re_cc_state** @PL_reg_call_cc, align 8
  %tobool4102 = icmp ne %struct.re_cc_state* %2137, null
  br i1 %tobool4102, label %if.then.4103, label %if.end.4127

if.then.4103:                                     ; preds = %sw.bb.4101
  %2138 = load %struct.re_cc_state*, %struct.re_cc_state** @PL_reg_call_cc, align 8
  store %struct.re_cc_state* %2138, %struct.re_cc_state** %cur_call_cc, align 8
  %2139 = load %struct.curcur*, %struct.curcur** @PL_regcc, align 8
  store %struct.curcur* %2139, %struct.curcur** %cctmp, align 8
  %2140 = load %struct.regexp*, %struct.regexp** @PL_reg_re, align 8
  store %struct.regexp* %2140, %struct.regexp** %re4104, align 8
  %call4107 = call i32 @S_regcppush(i32 0)
  store i32 %call4107, i32* %cp4105, align 4
  %2141 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %2141, i32* %lastcp4106, align 4
  %2142 = load %struct.re_cc_state*, %struct.re_cc_state** @PL_reg_call_cc, align 8
  %ss4108 = getelementptr inbounds %struct.re_cc_state, %struct.re_cc_state* %2142, i32 0, i32 0
  %2143 = load i32, i32* %ss4108, align 4
  %call4109 = call i8* @S_regcp_set_to(i32 %2143)
  %2144 = load i8*, i8** %locinput, align 8
  store i8* %2144, i8** @PL_reginput, align 8
  %2145 = load %struct.re_cc_state*, %struct.re_cc_state** @PL_reg_call_cc, align 8
  %re4110 = getelementptr inbounds %struct.re_cc_state, %struct.re_cc_state* %2145, i32 0, i32 4
  %2146 = load %struct.regexp*, %struct.regexp** %re4110, align 8
  call void @S_cache_re(%struct.regexp* %2146)
  %2147 = load %struct.re_cc_state*, %struct.re_cc_state** @PL_reg_call_cc, align 8
  %cc4111 = getelementptr inbounds %struct.re_cc_state, %struct.re_cc_state* %2147, i32 0, i32 3
  %2148 = load %struct.curcur*, %struct.curcur** %cc4111, align 8
  store %struct.curcur* %2148, %struct.curcur** @PL_regcc, align 8
  %2149 = load %struct.re_cc_state*, %struct.re_cc_state** @PL_reg_call_cc, align 8
  %prev4112 = getelementptr inbounds %struct.re_cc_state, %struct.re_cc_state* %2149, i32 0, i32 2
  %2150 = load %struct.re_cc_state*, %struct.re_cc_state** %prev4112, align 8
  store %struct.re_cc_state* %2150, %struct.re_cc_state** @PL_reg_call_cc, align 8
  %2151 = load %struct.re_cc_state*, %struct.re_cc_state** %cur_call_cc, align 8
  %node4113 = getelementptr inbounds %struct.re_cc_state, %struct.re_cc_state* %2151, i32 0, i32 1
  %2152 = load %struct.regnode*, %struct.regnode** %node4113, align 8
  %call4114 = call i32 @S_regmatch(%struct.regnode* %2152)
  %tobool4115 = icmp ne i32 %call4114, 0
  br i1 %tobool4115, label %if.then.4116, label %if.end.4121

if.then.4116:                                     ; preds = %if.then.4103
  %2153 = load %struct.re_cc_state*, %struct.re_cc_state** %cur_call_cc, align 8
  store %struct.re_cc_state* %2153, %struct.re_cc_state** @PL_reg_call_cc, align 8
  %2154 = load i32, i32* @PL_savestack_ix, align 4
  %2155 = load i32, i32* %cp4105, align 4
  %cmp4117 = icmp sgt i32 %2154, %2155
  br i1 %cmp4117, label %if.then.4119, label %if.end.4120

if.then.4119:                                     ; preds = %if.then.4116
  %2156 = load i32, i32* %cp4105, align 4
  call void @Perl_leave_scope(i32 %2156)
  br label %if.end.4120

if.end.4120:                                      ; preds = %if.then.4119, %if.then.4116
  br label %yes

if.end.4121:                                      ; preds = %if.then.4103
  %2157 = load i32, i32* @PL_savestack_ix, align 4
  %2158 = load i32, i32* %lastcp4106, align 4
  %cmp4122 = icmp sgt i32 %2157, %2158
  br i1 %cmp4122, label %if.then.4124, label %if.end.4125

if.then.4124:                                     ; preds = %if.end.4121
  %2159 = load i32, i32* %lastcp4106, align 4
  call void @Perl_leave_scope(i32 %2159)
  br label %if.end.4125

if.end.4125:                                      ; preds = %if.then.4124, %if.end.4121
  %call4126 = call i8* @S_regcppop()
  %2160 = load %struct.re_cc_state*, %struct.re_cc_state** %cur_call_cc, align 8
  store %struct.re_cc_state* %2160, %struct.re_cc_state** @PL_reg_call_cc, align 8
  %2161 = load %struct.curcur*, %struct.curcur** %cctmp, align 8
  store %struct.curcur* %2161, %struct.curcur** @PL_regcc, align 8
  %2162 = load %struct.regexp*, %struct.regexp** %re4104, align 8
  store %struct.regexp* %2162, %struct.regexp** @PL_reg_re, align 8
  %2163 = load %struct.regexp*, %struct.regexp** %re4104, align 8
  call void @S_cache_re(%struct.regexp* %2163)
  br label %do_no

if.end.4127:                                      ; preds = %sw.bb.4101
  %2164 = load i8*, i8** %locinput, align 8
  %2165 = load i8*, i8** @PL_regtill, align 8
  %cmp4128 = icmp ult i8* %2164, %2165
  br i1 %cmp4128, label %if.then.4130, label %if.end.4131

if.then.4130:                                     ; preds = %if.end.4127
  br label %no_final

if.end.4131:                                      ; preds = %if.end.4127
  %2166 = load i8*, i8** %locinput, align 8
  store i8* %2166, i8** @PL_reginput, align 8
  br label %yes_final

sw.bb.4132:                                       ; preds = %if.end
  %2167 = load i8*, i8** %locinput, align 8
  store i8* %2167, i8** @PL_reginput, align 8
  br label %yes_loud

sw.bb.4133:                                       ; preds = %if.end
  store i32 1, i32* %n, align 4
  %2168 = load i8*, i8** %locinput, align 8
  store i8* %2168, i8** @PL_reginput, align 8
  br label %do_ifmatch

sw.bb.4134:                                       ; preds = %if.end
  store i32 0, i32* %n, align 4
  %2169 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags4135 = getelementptr inbounds %struct.regnode, %struct.regnode* %2169, i32 0, i32 0
  %2170 = load i8, i8* %flags4135, align 1
  %tobool4136 = icmp ne i8 %2170, 0
  br i1 %tobool4136, label %if.then.4137, label %if.else.4167

if.then.4137:                                     ; preds = %sw.bb.4134
  %2171 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv4138 = sext i8 %2171 to i32
  %tobool4139 = icmp ne i32 %conv4138, 0
  br i1 %tobool4139, label %cond.true.4140, label %cond.false.4145

cond.true.4140:                                   ; preds = %if.then.4137
  %2172 = load i8*, i8** %locinput, align 8
  %2173 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags4141 = getelementptr inbounds %struct.regnode, %struct.regnode* %2173, i32 0, i32 0
  %2174 = load i8, i8* %flags4141, align 1
  %conv4142 = zext i8 %2174 to i32
  %sub4143 = sub nsw i32 0, %conv4142
  %call4144 = call i8* @S_reghopmaybe(i8* %2172, i32 %sub4143)
  br label %cond.end.4162

cond.false.4145:                                  ; preds = %if.then.4137
  %2175 = load i8*, i8** %locinput, align 8
  %2176 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags4146 = getelementptr inbounds %struct.regnode, %struct.regnode* %2176, i32 0, i32 0
  %2177 = load i8, i8* %flags4146, align 1
  %conv4147 = zext i8 %2177 to i32
  %idx.ext4148 = sext i32 %conv4147 to i64
  %idx.neg4149 = sub i64 0, %idx.ext4148
  %add.ptr4150 = getelementptr inbounds i8, i8* %2175, i64 %idx.neg4149
  %2178 = load i8*, i8** @PL_bostr, align 8
  %cmp4151 = icmp uge i8* %add.ptr4150, %2178
  br i1 %cmp4151, label %cond.true.4153, label %cond.false.4159

cond.true.4153:                                   ; preds = %cond.false.4145
  %2179 = load i8*, i8** %locinput, align 8
  %2180 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags4154 = getelementptr inbounds %struct.regnode, %struct.regnode* %2180, i32 0, i32 0
  %2181 = load i8, i8* %flags4154, align 1
  %conv4155 = zext i8 %2181 to i32
  %idx.ext4156 = sext i32 %conv4155 to i64
  %idx.neg4157 = sub i64 0, %idx.ext4156
  %add.ptr4158 = getelementptr inbounds i8, i8* %2179, i64 %idx.neg4157
  br label %cond.end.4160

cond.false.4159:                                  ; preds = %cond.false.4145
  br label %cond.end.4160

cond.end.4160:                                    ; preds = %cond.false.4159, %cond.true.4153
  %cond4161 = phi i8* [ %add.ptr4158, %cond.true.4153 ], [ null, %cond.false.4159 ]
  br label %cond.end.4162

cond.end.4162:                                    ; preds = %cond.end.4160, %cond.true.4140
  %cond4163 = phi i8* [ %call4144, %cond.true.4140 ], [ %cond4161, %cond.end.4160 ]
  store i8* %cond4163, i8** %s, align 8
  %2182 = load i8*, i8** %s, align 8
  %tobool4164 = icmp ne i8* %2182, null
  br i1 %tobool4164, label %if.end.4166, label %if.then.4165

if.then.4165:                                     ; preds = %cond.end.4162
  br label %say_yes

if.end.4166:                                      ; preds = %cond.end.4162
  %2183 = load i8*, i8** %s, align 8
  store i8* %2183, i8** @PL_reginput, align 8
  br label %if.end.4168

if.else.4167:                                     ; preds = %sw.bb.4134
  %2184 = load i8*, i8** %locinput, align 8
  store i8* %2184, i8** @PL_reginput, align 8
  br label %if.end.4168

if.end.4168:                                      ; preds = %if.else.4167, %if.end.4166
  br label %do_ifmatch

sw.bb.4169:                                       ; preds = %if.end
  store i32 1, i32* %n, align 4
  %2185 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags4170 = getelementptr inbounds %struct.regnode, %struct.regnode* %2185, i32 0, i32 0
  %2186 = load i8, i8* %flags4170, align 1
  %tobool4171 = icmp ne i8 %2186, 0
  br i1 %tobool4171, label %if.then.4172, label %if.else.4202

if.then.4172:                                     ; preds = %sw.bb.4169
  %2187 = load i8, i8* @PL_reg_match_utf8, align 1
  %conv4173 = sext i8 %2187 to i32
  %tobool4174 = icmp ne i32 %conv4173, 0
  br i1 %tobool4174, label %cond.true.4175, label %cond.false.4180

cond.true.4175:                                   ; preds = %if.then.4172
  %2188 = load i8*, i8** %locinput, align 8
  %2189 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags4176 = getelementptr inbounds %struct.regnode, %struct.regnode* %2189, i32 0, i32 0
  %2190 = load i8, i8* %flags4176, align 1
  %conv4177 = zext i8 %2190 to i32
  %sub4178 = sub nsw i32 0, %conv4177
  %call4179 = call i8* @S_reghopmaybe(i8* %2188, i32 %sub4178)
  br label %cond.end.4197

cond.false.4180:                                  ; preds = %if.then.4172
  %2191 = load i8*, i8** %locinput, align 8
  %2192 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags4181 = getelementptr inbounds %struct.regnode, %struct.regnode* %2192, i32 0, i32 0
  %2193 = load i8, i8* %flags4181, align 1
  %conv4182 = zext i8 %2193 to i32
  %idx.ext4183 = sext i32 %conv4182 to i64
  %idx.neg4184 = sub i64 0, %idx.ext4183
  %add.ptr4185 = getelementptr inbounds i8, i8* %2191, i64 %idx.neg4184
  %2194 = load i8*, i8** @PL_bostr, align 8
  %cmp4186 = icmp uge i8* %add.ptr4185, %2194
  br i1 %cmp4186, label %cond.true.4188, label %cond.false.4194

cond.true.4188:                                   ; preds = %cond.false.4180
  %2195 = load i8*, i8** %locinput, align 8
  %2196 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags4189 = getelementptr inbounds %struct.regnode, %struct.regnode* %2196, i32 0, i32 0
  %2197 = load i8, i8* %flags4189, align 1
  %conv4190 = zext i8 %2197 to i32
  %idx.ext4191 = sext i32 %conv4190 to i64
  %idx.neg4192 = sub i64 0, %idx.ext4191
  %add.ptr4193 = getelementptr inbounds i8, i8* %2195, i64 %idx.neg4192
  br label %cond.end.4195

cond.false.4194:                                  ; preds = %cond.false.4180
  br label %cond.end.4195

cond.end.4195:                                    ; preds = %cond.false.4194, %cond.true.4188
  %cond4196 = phi i8* [ %add.ptr4193, %cond.true.4188 ], [ null, %cond.false.4194 ]
  br label %cond.end.4197

cond.end.4197:                                    ; preds = %cond.end.4195, %cond.true.4175
  %cond4198 = phi i8* [ %call4179, %cond.true.4175 ], [ %cond4196, %cond.end.4195 ]
  store i8* %cond4198, i8** %s, align 8
  %2198 = load i8*, i8** %s, align 8
  %tobool4199 = icmp ne i8* %2198, null
  br i1 %tobool4199, label %if.end.4201, label %if.then.4200

if.then.4200:                                     ; preds = %cond.end.4197
  br label %say_no

if.end.4201:                                      ; preds = %cond.end.4197
  %2199 = load i8*, i8** %s, align 8
  store i8* %2199, i8** @PL_reginput, align 8
  br label %if.end.4203

if.else.4202:                                     ; preds = %sw.bb.4169
  %2200 = load i8*, i8** %locinput, align 8
  store i8* %2200, i8** @PL_reginput, align 8
  br label %if.end.4203

if.end.4203:                                      ; preds = %if.else.4202, %if.end.4201
  br label %do_ifmatch

do_ifmatch:                                       ; preds = %if.end.4203, %if.end.4168, %sw.bb.4133
  %2201 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr4204 = getelementptr inbounds %struct.regnode, %struct.regnode* %2201, i64 1
  %add.ptr4205 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr4204, i64 1
  store %struct.regnode* %add.ptr4205, %struct.regnode** %inner, align 8
  %2202 = load %struct.regnode*, %struct.regnode** %inner, align 8
  %call4206 = call i32 @S_regmatch(%struct.regnode* %2202)
  %2203 = load i32, i32* %n, align 4
  %cmp4207 = icmp ne i32 %call4206, %2203
  br i1 %cmp4207, label %if.then.4209, label %if.end.4213

if.then.4209:                                     ; preds = %do_ifmatch
  br label %say_no

say_no:                                           ; preds = %if.then.4209, %if.then.4200
  %2204 = load i32, i32* %logical, align 4
  %tobool4210 = icmp ne i32 %2204, 0
  br i1 %tobool4210, label %if.then.4211, label %if.else.4212

if.then.4211:                                     ; preds = %say_no
  store i32 0, i32* %logical, align 4
  store i32 0, i32* %sw, align 4
  br label %do_longjump

if.else.4212:                                     ; preds = %say_no
  br label %no

if.end.4213:                                      ; preds = %do_ifmatch
  br label %say_yes

say_yes:                                          ; preds = %if.end.4213, %if.then.4165
  %2205 = load i32, i32* %logical, align 4
  %tobool4214 = icmp ne i32 %2205, 0
  br i1 %tobool4214, label %if.then.4215, label %if.end.4216

if.then.4215:                                     ; preds = %say_yes
  store i32 0, i32* %logical, align 4
  store i32 1, i32* %sw, align 4
  br label %if.end.4216

if.end.4216:                                      ; preds = %if.then.4215, %say_yes
  %2206 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type4217 = getelementptr inbounds %struct.regnode, %struct.regnode* %2206, i32 0, i32 1
  %2207 = load i8, i8* %type4217, align 1
  %conv4218 = zext i8 %2207 to i32
  %cmp4219 = icmp eq i32 %conv4218, 52
  br i1 %cmp4219, label %if.then.4221, label %if.end.4223

if.then.4221:                                     ; preds = %if.end.4216
  %2208 = load i8*, i8** @PL_reginput, align 8
  store i8* %2208, i8** %locinput, align 8
  %2209 = load i8*, i8** %locinput, align 8
  %2210 = load i8, i8* %2209, align 1
  %conv4222 = zext i8 %2210 to i32
  store i32 %conv4222, i32* %nextchr, align 4
  br label %if.end.4223

if.end.4223:                                      ; preds = %if.then.4221, %if.end.4216
  br label %sw.bb.4224

sw.bb.4224:                                       ; preds = %if.end, %if.end.4223
  br label %do_longjump

do_longjump:                                      ; preds = %sw.bb.4224, %if.then.4211
  %2211 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2212 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2213 = bitcast %struct.regnode* %2212 to %struct.regnode_1*
  %arg14225 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2213, i32 0, i32 3
  %2214 = load i32, i32* %arg14225, align 4
  %idx.ext4226 = zext i32 %2214 to i64
  %add.ptr4227 = getelementptr inbounds %struct.regnode, %struct.regnode* %2211, i64 %idx.ext4226
  store %struct.regnode* %add.ptr4227, %struct.regnode** %next, align 8
  %2215 = load %struct.regnode*, %struct.regnode** %next, align 8
  %2216 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %cmp4228 = icmp eq %struct.regnode* %2215, %2216
  br i1 %cmp4228, label %if.then.4230, label %if.end.4231

if.then.4230:                                     ; preds = %do_longjump
  store %struct.regnode* null, %struct.regnode** %next, align 8
  br label %if.end.4231

if.end.4231:                                      ; preds = %if.then.4230, %do_longjump
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  %2217 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %tobool4232 = icmp ne %struct.gv* %2217, null
  br i1 %tobool4232, label %land.lhs.true.4233, label %cond.false.4253

land.lhs.true.4233:                               ; preds = %sw.default
  %2218 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_flags4234 = getelementptr inbounds %struct.gv, %struct.gv* %2218, i32 0, i32 2
  %2219 = load i32, i32* %sv_flags4234, align 4
  %and4235 = and i32 %2219, 255
  %cmp4236 = icmp eq i32 %and4235, 13
  br i1 %cmp4236, label %land.lhs.true.4238, label %cond.false.4253

land.lhs.true.4238:                               ; preds = %land.lhs.true.4233
  %2220 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_any4239 = getelementptr inbounds %struct.gv, %struct.gv* %2220, i32 0, i32 0
  %2221 = load %struct.xpvgv*, %struct.xpvgv** %sv_any4239, align 8
  %xgv_gp = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2221, i32 0, i32 7
  %2222 = load %struct.gp*, %struct.gp** %xgv_gp, align 8
  %gp_io = getelementptr inbounds %struct.gp, %struct.gp* %2222, i32 0, i32 2
  %2223 = load %struct.io*, %struct.io** %gp_io, align 8
  %tobool4240 = icmp ne %struct.io* %2223, null
  br i1 %tobool4240, label %land.lhs.true.4241, label %cond.false.4253

land.lhs.true.4241:                               ; preds = %land.lhs.true.4238
  %2224 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_any4242 = getelementptr inbounds %struct.gv, %struct.gv* %2224, i32 0, i32 0
  %2225 = load %struct.xpvgv*, %struct.xpvgv** %sv_any4242, align 8
  %xgv_gp4243 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2225, i32 0, i32 7
  %2226 = load %struct.gp*, %struct.gp** %xgv_gp4243, align 8
  %gp_io4244 = getelementptr inbounds %struct.gp, %struct.gp* %2226, i32 0, i32 2
  %2227 = load %struct.io*, %struct.io** %gp_io4244, align 8
  %sv_any4245 = getelementptr inbounds %struct.io, %struct.io* %2227, i32 0, i32 0
  %2228 = load %struct.xpvio*, %struct.xpvio** %sv_any4245, align 8
  %xio_ofp = getelementptr inbounds %struct.xpvio, %struct.xpvio* %2228, i32 0, i32 8
  %2229 = load %struct._PerlIO**, %struct._PerlIO*** %xio_ofp, align 8
  %tobool4246 = icmp ne %struct._PerlIO** %2229, null
  br i1 %tobool4246, label %cond.true.4247, label %cond.false.4253

cond.true.4247:                                   ; preds = %land.lhs.true.4241
  %2230 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_any4248 = getelementptr inbounds %struct.gv, %struct.gv* %2230, i32 0, i32 0
  %2231 = load %struct.xpvgv*, %struct.xpvgv** %sv_any4248, align 8
  %xgv_gp4249 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2231, i32 0, i32 7
  %2232 = load %struct.gp*, %struct.gp** %xgv_gp4249, align 8
  %gp_io4250 = getelementptr inbounds %struct.gp, %struct.gp* %2232, i32 0, i32 2
  %2233 = load %struct.io*, %struct.io** %gp_io4250, align 8
  %sv_any4251 = getelementptr inbounds %struct.io, %struct.io* %2233, i32 0, i32 0
  %2234 = load %struct.xpvio*, %struct.xpvio** %sv_any4251, align 8
  %xio_ofp4252 = getelementptr inbounds %struct.xpvio, %struct.xpvio* %2234, i32 0, i32 8
  %2235 = load %struct._PerlIO**, %struct._PerlIO*** %xio_ofp4252, align 8
  br label %cond.end.4255

cond.false.4253:                                  ; preds = %land.lhs.true.4241, %land.lhs.true.4238, %land.lhs.true.4233, %sw.default
  %call4254 = call %struct._PerlIO** @Perl_PerlIO_stderr()
  br label %cond.end.4255

cond.end.4255:                                    ; preds = %cond.false.4253, %cond.true.4247
  %cond4256 = phi %struct._PerlIO** [ %2235, %cond.true.4247 ], [ %call4254, %cond.false.4253 ]
  %2236 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2237 = ptrtoint %struct.regnode* %2236 to i64
  %2238 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type4257 = getelementptr inbounds %struct.regnode, %struct.regnode* %2238, i32 0, i32 1
  %2239 = load i8, i8* %type4257, align 1
  %conv4258 = zext i8 %2239 to i32
  %call4259 = call i32 (%struct._PerlIO**, i8*, ...) @PerlIO_printf(%struct._PerlIO** %cond4256, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i32 0, i32 0), i64 %2237, i32 %conv4258)
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12, i32 0, i32 0))
  br label %sw.epilog

sw.epilog:                                        ; preds = %cond.end.4255, %if.end.4231, %sw.bb.2317, %if.end.2316, %sw.bb.1752, %if.end.1751, %land.end.1732, %if.end.1722, %if.end.1702, %if.end.1694, %sw.bb.1485, %sw.bb.1484, %if.end.1480, %if.end.1424, %if.then.1377, %if.end.1359, %if.end.1315, %if.end.1285, %if.end.1231, %if.end.1201, %if.end.1150, %if.end.1111, %if.end.1059, %if.end.982, %if.end.928, %if.end.714, %if.end.666, %if.end.607, %if.end.559, %if.end.506, %if.end.438, %cond.end.405, %if.end.381, %if.end.339, %if.end.251, %if.end.228, %if.end.130, %if.end.102, %if.end.95, %if.end.74, %if.end.69, %if.end.55, %if.then.41, %if.then.36, %if.then.31, %if.then.16
  br label %reenter

reenter:                                          ; preds = %if.end.4322, %sw.epilog
  %2240 = load %struct.regnode*, %struct.regnode** %next, align 8
  store %struct.regnode* %2240, %struct.regnode** %scan, align 8
  br label %while.cond

while.end.4260:                                   ; preds = %while.cond
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i32 0, i32 0))
  br label %no

yes_loud:                                         ; preds = %sw.bb.4132
  br label %yes

yes_final:                                        ; preds = %if.end.4131
  br label %yes

yes:                                              ; preds = %yes_final, %yes_loud, %if.end.4120, %if.then.4075, %if.then.3960, %if.then.3802, %if.then.3753, %if.then.3633, %if.then.2959, %if.then.2652, %if.end.2246, %if.end.2166, %if.end.2084, %if.end.1965, %if.then.1910, %if.then.1833, %if.then.1817, %if.then.1791, %if.end.1622
  store i32 1, i32* %retval
  br label %return

no:                                               ; preds = %while.end.4260, %if.else.4212, %if.end.4100, %if.else.3821, %if.then.3599, %if.then.3591, %if.then.3385, %if.end.2979, %if.else.2663, %if.then.2354, %if.end.2282, %if.end.2121, %if.end.2043, %if.end.1834, %if.end.1822, %if.else.1792, %if.end.1635, %if.then.1479, %if.then.1455, %if.then.1447, %if.then.1419, %if.then.1406, %if.then.1371, %if.then.1355, %if.then.1331, %if.then.1321, %if.then.1314, %if.then.1284, %if.then.1241, %if.then.1230, %if.then.1200, %if.then.1157, %if.then.1149, %if.then.1110, %if.then.1067, %if.then.1055, %if.then.1020, %if.then.981, %if.then.933, %if.then.927, %if.then.713, %if.then.665, %if.then.617, %if.then.606, %if.then.558, %if.then.511, %if.else.505, %if.then.437, %if.then.397, %if.then.380, %if.then.365, %if.then.357, %if.then.337, %if.then.250, %if.then.242, %if.then.234, %if.then.223, %if.then.187, %if.then.176, %if.then.149, %if.then.124, %if.then.113, %if.then.101, %if.then.90, %if.then.80, %if.then.73, %if.then.68, %if.then.64, %if.then.54, %if.end.42, %if.end.37, %if.end.32, %if.end.17
  br label %do_no

no_final:                                         ; preds = %if.then.4130
  br label %do_no

do_no:                                            ; preds = %if.then.4296, %no_final, %no, %if.end.4125, %if.else.1911
  %2241 = load i32, i32* %unwind, align 4
  %tobool4261 = icmp ne i32 %2241, 0
  br i1 %tobool4261, label %if.then.4262, label %if.end.4327

if.then.4262:                                     ; preds = %do_no
  %2242 = load %union.any*, %union.any** @PL_savestack, align 8
  %2243 = bitcast %union.any* %2242 to i8*
  %2244 = load i32, i32* %unwind, align 4
  %idx.ext4264 = sext i32 %2244 to i64
  %add.ptr4265 = getelementptr inbounds i8, i8* %2243, i64 %idx.ext4264
  %2245 = bitcast i8* %add.ptr4265 to %union.re_unwind_t*
  store %union.re_unwind_t* %2245, %union.re_unwind_t** %uw4263, align 8
  %2246 = load %union.re_unwind_t*, %union.re_unwind_t** %uw4263, align 8
  %type4266 = bitcast %union.re_unwind_t* %2246 to i32*
  %2247 = load i32, i32* %type4266, align 4
  switch i32 %2247, label %sw.default.4325 [
    i32 1, label %sw.bb.4267
    i32 2, label %sw.bb.4267
  ]

sw.bb.4267:                                       ; preds = %if.then.4262, %if.then.4262
  %2248 = load %union.re_unwind_t*, %union.re_unwind_t** %uw4263, align 8
  %branch = bitcast %union.re_unwind_t* %2248 to %struct.re_unwind_branch_t*
  store %struct.re_unwind_branch_t* %branch, %struct.re_unwind_branch_t** %uwb, align 8
  %2249 = load %struct.re_unwind_branch_t*, %struct.re_unwind_branch_t** %uwb, align 8
  %lastparen4269 = getelementptr inbounds %struct.re_unwind_branch_t, %struct.re_unwind_branch_t* %2249, i32 0, i32 3
  %2250 = load i32, i32* %lastparen4269, align 4
  store i32 %2250, i32* %lastparen4268, align 4
  %2251 = load i32, i32* @PL_savestack_ix, align 4
  %2252 = load %struct.re_unwind_branch_t*, %struct.re_unwind_branch_t** %uwb, align 8
  %lastcp4270 = getelementptr inbounds %struct.re_unwind_branch_t, %struct.re_unwind_branch_t* %2252, i32 0, i32 2
  %2253 = load i32, i32* %lastcp4270, align 4
  %cmp4271 = icmp sgt i32 %2251, %2253
  br i1 %cmp4271, label %if.then.4273, label %if.end.4275

if.then.4273:                                     ; preds = %sw.bb.4267
  %2254 = load %struct.re_unwind_branch_t*, %struct.re_unwind_branch_t** %uwb, align 8
  %lastcp4274 = getelementptr inbounds %struct.re_unwind_branch_t, %struct.re_unwind_branch_t* %2254, i32 0, i32 2
  %2255 = load i32, i32* %lastcp4274, align 4
  call void @Perl_leave_scope(i32 %2255)
  br label %if.end.4275

if.end.4275:                                      ; preds = %if.then.4273, %sw.bb.4267
  %2256 = load i32*, i32** @PL_reglastparen, align 8
  %2257 = load i32, i32* %2256, align 4
  store i32 %2257, i32* %n, align 4
  br label %for.cond.4276

for.cond.4276:                                    ; preds = %for.inc.4282, %if.end.4275
  %2258 = load i32, i32* %n, align 4
  %2259 = load i32, i32* %lastparen4268, align 4
  %cmp4277 = icmp sgt i32 %2258, %2259
  br i1 %cmp4277, label %for.body.4279, label %for.end.4284

for.body.4279:                                    ; preds = %for.cond.4276
  %2260 = load i32, i32* %n, align 4
  %idxprom4280 = sext i32 %2260 to i64
  %2261 = load i32*, i32** @PL_regendp, align 8
  %arrayidx4281 = getelementptr inbounds i32, i32* %2261, i64 %idxprom4280
  store i32 -1, i32* %arrayidx4281, align 4
  br label %for.inc.4282

for.inc.4282:                                     ; preds = %for.body.4279
  %2262 = load i32, i32* %n, align 4
  %dec4283 = add nsw i32 %2262, -1
  store i32 %dec4283, i32* %n, align 4
  br label %for.cond.4276

for.end.4284:                                     ; preds = %for.cond.4276
  %2263 = load i32, i32* %n, align 4
  %2264 = load i32*, i32** @PL_reglastparen, align 8
  store i32 %2263, i32* %2264, align 4
  %2265 = load %struct.re_unwind_branch_t*, %struct.re_unwind_branch_t** %uwb, align 8
  %next4285 = getelementptr inbounds %struct.re_unwind_branch_t, %struct.re_unwind_branch_t* %2265, i32 0, i32 4
  %2266 = load %struct.regnode*, %struct.regnode** %next4285, align 8
  store %struct.regnode* %2266, %struct.regnode** %next, align 8
  store %struct.regnode* %2266, %struct.regnode** %scan, align 8
  %2267 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %tobool4286 = icmp ne %struct.regnode* %2267, null
  br i1 %tobool4286, label %lor.lhs.false.4287, label %if.then.4296

lor.lhs.false.4287:                               ; preds = %for.end.4284
  %2268 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type4288 = getelementptr inbounds %struct.regnode, %struct.regnode* %2268, i32 0, i32 1
  %2269 = load i8, i8* %type4288, align 1
  %conv4289 = zext i8 %2269 to i32
  %2270 = load %struct.re_unwind_branch_t*, %struct.re_unwind_branch_t** %uwb, align 8
  %type4290 = getelementptr inbounds %struct.re_unwind_branch_t, %struct.re_unwind_branch_t* %2270, i32 0, i32 0
  %2271 = load i32, i32* %type4290, align 4
  %cmp4291 = icmp eq i32 %2271, 1
  %cond4293 = select i1 %cmp4291, i32 31, i32 56
  %cmp4294 = icmp ne i32 %conv4289, %cond4293
  br i1 %cmp4294, label %if.then.4296, label %if.end.4298

if.then.4296:                                     ; preds = %lor.lhs.false.4287, %for.end.4284
  %2272 = load %struct.re_unwind_branch_t*, %struct.re_unwind_branch_t** %uwb, align 8
  %prev4297 = getelementptr inbounds %struct.re_unwind_branch_t, %struct.re_unwind_branch_t* %2272, i32 0, i32 1
  %2273 = load i32, i32* %prev4297, align 4
  store i32 %2273, i32* %unwind, align 4
  br label %do_no

if.end.4298:                                      ; preds = %lor.lhs.false.4287
  %2274 = load %struct.re_unwind_branch_t*, %struct.re_unwind_branch_t** %uwb, align 8
  %type4299 = getelementptr inbounds %struct.re_unwind_branch_t, %struct.re_unwind_branch_t* %2274, i32 0, i32 0
  %2275 = load i32, i32* %type4299, align 4
  %cmp4300 = icmp eq i32 %2275, 1
  br i1 %cmp4300, label %cond.true.4302, label %cond.false.4305

cond.true.4302:                                   ; preds = %if.end.4298
  %2276 = load %struct.regnode*, %struct.regnode** %next, align 8
  %next_off4303 = getelementptr inbounds %struct.regnode, %struct.regnode* %2276, i32 0, i32 2
  %2277 = load i16, i16* %next_off4303, align 2
  %conv4304 = zext i16 %2277 to i32
  br label %cond.end.4307

cond.false.4305:                                  ; preds = %if.end.4298
  %2278 = load %struct.regnode*, %struct.regnode** %next, align 8
  %2279 = bitcast %struct.regnode* %2278 to %struct.regnode_1*
  %arg14306 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2279, i32 0, i32 3
  %2280 = load i32, i32* %arg14306, align 4
  br label %cond.end.4307

cond.end.4307:                                    ; preds = %cond.false.4305, %cond.true.4302
  %cond4308 = phi i32 [ %conv4304, %cond.true.4302 ], [ %2280, %cond.false.4305 ]
  store i32 %cond4308, i32* %n, align 4
  %tobool4309 = icmp ne i32 %cond4308, 0
  br i1 %tobool4309, label %if.then.4310, label %if.else.4313

if.then.4310:                                     ; preds = %cond.end.4307
  %2281 = load i32, i32* %n, align 4
  %2282 = load %struct.regnode*, %struct.regnode** %next, align 8
  %idx.ext4311 = sext i32 %2281 to i64
  %add.ptr4312 = getelementptr inbounds %struct.regnode, %struct.regnode* %2282, i64 %idx.ext4311
  store %struct.regnode* %add.ptr4312, %struct.regnode** %next, align 8
  br label %if.end.4314

if.else.4313:                                     ; preds = %cond.end.4307
  store %struct.regnode* null, %struct.regnode** %next, align 8
  br label %if.end.4314

if.end.4314:                                      ; preds = %if.else.4313, %if.then.4310
  %2283 = load %struct.regnode*, %struct.regnode** %next, align 8
  %2284 = load %struct.re_unwind_branch_t*, %struct.re_unwind_branch_t** %uwb, align 8
  %next4315 = getelementptr inbounds %struct.re_unwind_branch_t, %struct.re_unwind_branch_t* %2284, i32 0, i32 4
  store %struct.regnode* %2283, %struct.regnode** %next4315, align 8
  %2285 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr4316 = getelementptr inbounds %struct.regnode, %struct.regnode* %2285, i64 1
  store %struct.regnode* %add.ptr4316, %struct.regnode** %next, align 8
  %2286 = load %struct.re_unwind_branch_t*, %struct.re_unwind_branch_t** %uwb, align 8
  %type4317 = getelementptr inbounds %struct.re_unwind_branch_t, %struct.re_unwind_branch_t* %2286, i32 0, i32 0
  %2287 = load i32, i32* %type4317, align 4
  %cmp4318 = icmp eq i32 %2287, 2
  br i1 %cmp4318, label %if.then.4320, label %if.end.4322

if.then.4320:                                     ; preds = %if.end.4314
  %2288 = load %struct.regnode*, %struct.regnode** %next, align 8
  %add.ptr4321 = getelementptr inbounds %struct.regnode, %struct.regnode* %2288, i64 1
  store %struct.regnode* %add.ptr4321, %struct.regnode** %next, align 8
  br label %if.end.4322

if.end.4322:                                      ; preds = %if.then.4320, %if.end.4314
  %2289 = load %struct.re_unwind_branch_t*, %struct.re_unwind_branch_t** %uwb, align 8
  %locinput4323 = getelementptr inbounds %struct.re_unwind_branch_t, %struct.re_unwind_branch_t* %2289, i32 0, i32 5
  %2290 = load i8*, i8** %locinput4323, align 8
  store i8* %2290, i8** %locinput, align 8
  %2291 = load %struct.re_unwind_branch_t*, %struct.re_unwind_branch_t** %uwb, align 8
  %nextchr4324 = getelementptr inbounds %struct.re_unwind_branch_t, %struct.re_unwind_branch_t* %2291, i32 0, i32 6
  %2292 = load i32, i32* %nextchr4324, align 4
  store i32 %2292, i32* %nextchr, align 4
  br label %reenter

sw.default.4325:                                  ; preds = %if.then.4262
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14, i32 0, i32 0))
  br label %sw.epilog.4326

sw.epilog.4326:                                   ; preds = %sw.default.4325
  br label %if.end.4327

if.end.4327:                                      ; preds = %sw.epilog.4326, %do_no
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.4327, %yes
  %2293 = load i32, i32* %retval
  ret i32 %2293
}

declare void @Perl_leave_scope(i32) #1

declare signext i8 @Perl_is_utf8_mark(i8*) #1

declare i32 @Perl_sv_unmagic(%struct.sv*, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @S_regcppush(i32 %parenfloor) #0 {
entry:
  %parenfloor.addr = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %paren_elems_to_push = alloca i32, align 4
  %p = alloca i32, align 4
  store i32 %parenfloor, i32* %parenfloor.addr, align 4
  %0 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %0, i32* %retval1, align 4
  %1 = load i32, i32* @PL_regsize, align 4
  %2 = load i32, i32* %parenfloor.addr, align 4
  %sub = sub nsw i32 %1, %2
  %mul = mul nsw i32 %sub, 4
  store i32 %mul, i32* %paren_elems_to_push, align 4
  %3 = load i32, i32* %paren_elems_to_push, align 4
  %cmp = icmp slt i32 %3, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* @PL_savestack_ix, align 4
  %5 = load i32, i32* %paren_elems_to_push, align 4
  %add = add nsw i32 %5, 6
  %add2 = add nsw i32 %4, %add
  %6 = load i32, i32* @PL_savestack_max, align 4
  %cmp3 = icmp sgt i32 %add2, %6
  br i1 %cmp3, label %if.then.4, label %if.end.6

if.then.4:                                        ; preds = %if.end
  %7 = load i32, i32* %paren_elems_to_push, align 4
  %add5 = add nsw i32 %7, 6
  call void @Perl_savestack_grow_cnt(i32 %add5)
  br label %if.end.6

if.end.6:                                         ; preds = %if.then.4, %if.end
  %8 = load i32, i32* @PL_regsize, align 4
  store i32 %8, i32* %p, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.6
  %9 = load i32, i32* %p, align 4
  %10 = load i32, i32* %parenfloor.addr, align 4
  %cmp7 = icmp sgt i32 %9, %10
  br i1 %cmp7, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %p, align 4
  %idxprom = sext i32 %11 to i64
  %12 = load i32*, i32** @PL_regendp, align 8
  %arrayidx = getelementptr inbounds i32, i32* %12, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %14 = load i32, i32* @PL_savestack_ix, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* @PL_savestack_ix, align 4
  %idxprom8 = sext i32 %14 to i64
  %15 = load %union.any*, %union.any** @PL_savestack, align 8
  %arrayidx9 = getelementptr inbounds %union.any, %union.any* %15, i64 %idxprom8
  %any_i32 = bitcast %union.any* %arrayidx9 to i32*
  store i32 %13, i32* %any_i32, align 4
  %16 = load i32, i32* %p, align 4
  %idxprom10 = sext i32 %16 to i64
  %17 = load i32*, i32** @PL_regstartp, align 8
  %arrayidx11 = getelementptr inbounds i32, i32* %17, i64 %idxprom10
  %18 = load i32, i32* %arrayidx11, align 4
  %19 = load i32, i32* @PL_savestack_ix, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* @PL_savestack_ix, align 4
  %idxprom13 = sext i32 %19 to i64
  %20 = load %union.any*, %union.any** @PL_savestack, align 8
  %arrayidx14 = getelementptr inbounds %union.any, %union.any* %20, i64 %idxprom13
  %any_i3215 = bitcast %union.any* %arrayidx14 to i32*
  store i32 %18, i32* %any_i3215, align 4
  %21 = load i32, i32* %p, align 4
  %idxprom16 = sext i32 %21 to i64
  %22 = load i8**, i8*** @PL_reg_start_tmp, align 8
  %arrayidx17 = getelementptr inbounds i8*, i8** %22, i64 %idxprom16
  %23 = load i8*, i8** %arrayidx17, align 8
  %24 = load i32, i32* @PL_savestack_ix, align 4
  %inc18 = add nsw i32 %24, 1
  store i32 %inc18, i32* @PL_savestack_ix, align 4
  %idxprom19 = sext i32 %24 to i64
  %25 = load %union.any*, %union.any** @PL_savestack, align 8
  %arrayidx20 = getelementptr inbounds %union.any, %union.any* %25, i64 %idxprom19
  %any_ptr = bitcast %union.any* %arrayidx20 to i8**
  store i8* %23, i8** %any_ptr, align 8
  %26 = load i32, i32* %p, align 4
  %27 = load i32, i32* @PL_savestack_ix, align 4
  %inc21 = add nsw i32 %27, 1
  store i32 %inc21, i32* @PL_savestack_ix, align 4
  %idxprom22 = sext i32 %27 to i64
  %28 = load %union.any*, %union.any** @PL_savestack, align 8
  %arrayidx23 = getelementptr inbounds %union.any, %union.any* %28, i64 %idxprom22
  %any_i3224 = bitcast %union.any* %arrayidx23 to i32*
  store i32 %26, i32* %any_i3224, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %p, align 4
  %dec = add nsw i32 %29, -1
  store i32 %dec, i32* %p, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %30 = load i32, i32* @PL_regsize, align 4
  %31 = load i32, i32* @PL_savestack_ix, align 4
  %inc25 = add nsw i32 %31, 1
  store i32 %inc25, i32* @PL_savestack_ix, align 4
  %idxprom26 = sext i32 %31 to i64
  %32 = load %union.any*, %union.any** @PL_savestack, align 8
  %arrayidx27 = getelementptr inbounds %union.any, %union.any* %32, i64 %idxprom26
  %any_i3228 = bitcast %union.any* %arrayidx27 to i32*
  store i32 %30, i32* %any_i3228, align 4
  %33 = load i32*, i32** @PL_reglastparen, align 8
  %34 = load i32, i32* %33, align 4
  %35 = load i32, i32* @PL_savestack_ix, align 4
  %inc29 = add nsw i32 %35, 1
  store i32 %inc29, i32* @PL_savestack_ix, align 4
  %idxprom30 = sext i32 %35 to i64
  %36 = load %union.any*, %union.any** @PL_savestack, align 8
  %arrayidx31 = getelementptr inbounds %union.any, %union.any* %36, i64 %idxprom30
  %any_i3232 = bitcast %union.any* %arrayidx31 to i32*
  store i32 %34, i32* %any_i3232, align 4
  %37 = load i32*, i32** @PL_reglastcloseparen, align 8
  %38 = load i32, i32* %37, align 4
  %39 = load i32, i32* @PL_savestack_ix, align 4
  %inc33 = add nsw i32 %39, 1
  store i32 %inc33, i32* @PL_savestack_ix, align 4
  %idxprom34 = sext i32 %39 to i64
  %40 = load %union.any*, %union.any** @PL_savestack, align 8
  %arrayidx35 = getelementptr inbounds %union.any, %union.any* %40, i64 %idxprom34
  %any_i3236 = bitcast %union.any* %arrayidx35 to i32*
  store i32 %38, i32* %any_i3236, align 4
  %41 = load i8*, i8** @PL_reginput, align 8
  %42 = load i32, i32* @PL_savestack_ix, align 4
  %inc37 = add nsw i32 %42, 1
  store i32 %inc37, i32* @PL_savestack_ix, align 4
  %idxprom38 = sext i32 %42 to i64
  %43 = load %union.any*, %union.any** @PL_savestack, align 8
  %arrayidx39 = getelementptr inbounds %union.any, %union.any* %43, i64 %idxprom38
  %any_ptr40 = bitcast %union.any* %arrayidx39 to i8**
  store i8* %41, i8** %any_ptr40, align 8
  %44 = load i32, i32* %paren_elems_to_push, align 4
  %add41 = add nsw i32 %44, 6
  %sub42 = sub nsw i32 %add41, 2
  %45 = load i32, i32* @PL_savestack_ix, align 4
  %inc43 = add nsw i32 %45, 1
  store i32 %inc43, i32* @PL_savestack_ix, align 4
  %idxprom44 = sext i32 %45 to i64
  %46 = load %union.any*, %union.any** @PL_savestack, align 8
  %arrayidx45 = getelementptr inbounds %union.any, %union.any* %46, i64 %idxprom44
  %any_i3246 = bitcast %union.any* %arrayidx45 to i32*
  store i32 %sub42, i32* %any_i3246, align 4
  %47 = load i32, i32* @PL_savestack_ix, align 4
  %inc47 = add nsw i32 %47, 1
  store i32 %inc47, i32* @PL_savestack_ix, align 4
  %idxprom48 = sext i32 %47 to i64
  %48 = load %union.any*, %union.any** @PL_savestack, align 8
  %arrayidx49 = getelementptr inbounds %union.any, %union.any* %48, i64 %idxprom48
  %any_i3250 = bitcast %union.any* %arrayidx49 to i32*
  store i32 21, i32* %any_i3250, align 4
  %49 = load i32, i32* %retval1, align 4
  ret i32 %49
}

; Function Attrs: nounwind uwtable
define internal i8* @S_regcppop() #0 {
entry:
  %i = alloca i32, align 4
  %paren = alloca i32, align 4
  %input = alloca i8*, align 8
  %tmps = alloca i32, align 4
  store i32 0, i32* %paren, align 4
  %0 = load i32, i32* @PL_savestack_ix, align 4
  %dec = add nsw i32 %0, -1
  store i32 %dec, i32* @PL_savestack_ix, align 4
  %idxprom = sext i32 %dec to i64
  %1 = load %union.any*, %union.any** @PL_savestack, align 8
  %arrayidx = getelementptr inbounds %union.any, %union.any* %1, i64 %idxprom
  %any_i32 = bitcast %union.any* %arrayidx to i32*
  %2 = load i32, i32* %any_i32, align 4
  store i32 %2, i32* %i, align 4
  %3 = load i32, i32* @PL_savestack_ix, align 4
  %dec1 = add nsw i32 %3, -1
  store i32 %dec1, i32* @PL_savestack_ix, align 4
  %idxprom2 = sext i32 %dec1 to i64
  %4 = load %union.any*, %union.any** @PL_savestack, align 8
  %arrayidx3 = getelementptr inbounds %union.any, %union.any* %4, i64 %idxprom2
  %any_i324 = bitcast %union.any* %arrayidx3 to i32*
  %5 = load i32, i32* %any_i324, align 4
  store i32 %5, i32* %i, align 4
  %6 = load i32, i32* @PL_savestack_ix, align 4
  %dec5 = add nsw i32 %6, -1
  store i32 %dec5, i32* @PL_savestack_ix, align 4
  %idxprom6 = sext i32 %dec5 to i64
  %7 = load %union.any*, %union.any** @PL_savestack, align 8
  %arrayidx7 = getelementptr inbounds %union.any, %union.any* %7, i64 %idxprom6
  %any_ptr = bitcast %union.any* %arrayidx7 to i8**
  %8 = load i8*, i8** %any_ptr, align 8
  store i8* %8, i8** %input, align 8
  %9 = load i32, i32* @PL_savestack_ix, align 4
  %dec8 = add nsw i32 %9, -1
  store i32 %dec8, i32* @PL_savestack_ix, align 4
  %idxprom9 = sext i32 %dec8 to i64
  %10 = load %union.any*, %union.any** @PL_savestack, align 8
  %arrayidx10 = getelementptr inbounds %union.any, %union.any* %10, i64 %idxprom9
  %any_i3211 = bitcast %union.any* %arrayidx10 to i32*
  %11 = load i32, i32* %any_i3211, align 4
  %12 = load i32*, i32** @PL_reglastcloseparen, align 8
  store i32 %11, i32* %12, align 4
  %13 = load i32, i32* @PL_savestack_ix, align 4
  %dec12 = add nsw i32 %13, -1
  store i32 %dec12, i32* @PL_savestack_ix, align 4
  %idxprom13 = sext i32 %dec12 to i64
  %14 = load %union.any*, %union.any** @PL_savestack, align 8
  %arrayidx14 = getelementptr inbounds %union.any, %union.any* %14, i64 %idxprom13
  %any_i3215 = bitcast %union.any* %arrayidx14 to i32*
  %15 = load i32, i32* %any_i3215, align 4
  %16 = load i32*, i32** @PL_reglastparen, align 8
  store i32 %15, i32* %16, align 4
  %17 = load i32, i32* @PL_savestack_ix, align 4
  %dec16 = add nsw i32 %17, -1
  store i32 %dec16, i32* @PL_savestack_ix, align 4
  %idxprom17 = sext i32 %dec16 to i64
  %18 = load %union.any*, %union.any** @PL_savestack, align 8
  %arrayidx18 = getelementptr inbounds %union.any, %union.any* %18, i64 %idxprom17
  %any_i3219 = bitcast %union.any* %arrayidx18 to i32*
  %19 = load i32, i32* %any_i3219, align 4
  store i32 %19, i32* @PL_regsize, align 4
  %20 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %20, 4
  store i32 %sub, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %21 = load i32, i32* %i, align 4
  %cmp = icmp sgt i32 %21, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %22 = load i32, i32* @PL_savestack_ix, align 4
  %dec20 = add nsw i32 %22, -1
  store i32 %dec20, i32* @PL_savestack_ix, align 4
  %idxprom21 = sext i32 %dec20 to i64
  %23 = load %union.any*, %union.any** @PL_savestack, align 8
  %arrayidx22 = getelementptr inbounds %union.any, %union.any* %23, i64 %idxprom21
  %any_i3223 = bitcast %union.any* %arrayidx22 to i32*
  %24 = load i32, i32* %any_i3223, align 4
  store i32 %24, i32* %paren, align 4
  %25 = load i32, i32* @PL_savestack_ix, align 4
  %dec24 = add nsw i32 %25, -1
  store i32 %dec24, i32* @PL_savestack_ix, align 4
  %idxprom25 = sext i32 %dec24 to i64
  %26 = load %union.any*, %union.any** @PL_savestack, align 8
  %arrayidx26 = getelementptr inbounds %union.any, %union.any* %26, i64 %idxprom25
  %any_ptr27 = bitcast %union.any* %arrayidx26 to i8**
  %27 = load i8*, i8** %any_ptr27, align 8
  %28 = load i32, i32* %paren, align 4
  %idxprom28 = zext i32 %28 to i64
  %29 = load i8**, i8*** @PL_reg_start_tmp, align 8
  %arrayidx29 = getelementptr inbounds i8*, i8** %29, i64 %idxprom28
  store i8* %27, i8** %arrayidx29, align 8
  %30 = load i32, i32* @PL_savestack_ix, align 4
  %dec30 = add nsw i32 %30, -1
  store i32 %dec30, i32* @PL_savestack_ix, align 4
  %idxprom31 = sext i32 %dec30 to i64
  %31 = load %union.any*, %union.any** @PL_savestack, align 8
  %arrayidx32 = getelementptr inbounds %union.any, %union.any* %31, i64 %idxprom31
  %any_i3233 = bitcast %union.any* %arrayidx32 to i32*
  %32 = load i32, i32* %any_i3233, align 4
  %33 = load i32, i32* %paren, align 4
  %idxprom34 = zext i32 %33 to i64
  %34 = load i32*, i32** @PL_regstartp, align 8
  %arrayidx35 = getelementptr inbounds i32, i32* %34, i64 %idxprom34
  store i32 %32, i32* %arrayidx35, align 4
  %35 = load i32, i32* @PL_savestack_ix, align 4
  %dec36 = add nsw i32 %35, -1
  store i32 %dec36, i32* @PL_savestack_ix, align 4
  %idxprom37 = sext i32 %dec36 to i64
  %36 = load %union.any*, %union.any** @PL_savestack, align 8
  %arrayidx38 = getelementptr inbounds %union.any, %union.any* %36, i64 %idxprom37
  %any_i3239 = bitcast %union.any* %arrayidx38 to i32*
  %37 = load i32, i32* %any_i3239, align 4
  store i32 %37, i32* %tmps, align 4
  %38 = load i32, i32* %paren, align 4
  %39 = load i32*, i32** @PL_reglastparen, align 8
  %40 = load i32, i32* %39, align 4
  %cmp40 = icmp ule i32 %38, %40
  br i1 %cmp40, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %41 = load i32, i32* %tmps, align 4
  %42 = load i32, i32* %paren, align 4
  %idxprom41 = zext i32 %42 to i64
  %43 = load i32*, i32** @PL_regendp, align 8
  %arrayidx42 = getelementptr inbounds i32, i32* %43, i64 %idxprom41
  store i32 %41, i32* %arrayidx42, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %44 = load i32, i32* %i, align 4
  %sub43 = sub nsw i32 %44, 4
  store i32 %sub43, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %45 = load i32*, i32** @PL_reglastparen, align 8
  %46 = load i32, i32* %45, align 4
  %add = add i32 %46, 1
  store i32 %add, i32* %paren, align 4
  br label %for.cond.44

for.cond.44:                                      ; preds = %for.inc.54, %for.end
  %47 = load i32, i32* %paren, align 4
  %48 = load i32, i32* @PL_regnpar, align 4
  %cmp45 = icmp sle i32 %47, %48
  br i1 %cmp45, label %for.body.46, label %for.end.55

for.body.46:                                      ; preds = %for.cond.44
  %49 = load i32, i32* %paren, align 4
  %50 = load i32, i32* @PL_regsize, align 4
  %cmp47 = icmp sgt i32 %49, %50
  br i1 %cmp47, label %if.then.48, label %if.end.51

if.then.48:                                       ; preds = %for.body.46
  %51 = load i32, i32* %paren, align 4
  %idxprom49 = zext i32 %51 to i64
  %52 = load i32*, i32** @PL_regstartp, align 8
  %arrayidx50 = getelementptr inbounds i32, i32* %52, i64 %idxprom49
  store i32 -1, i32* %arrayidx50, align 4
  br label %if.end.51

if.end.51:                                        ; preds = %if.then.48, %for.body.46
  %53 = load i32, i32* %paren, align 4
  %idxprom52 = zext i32 %53 to i64
  %54 = load i32*, i32** @PL_regendp, align 8
  %arrayidx53 = getelementptr inbounds i32, i32* %54, i64 %idxprom52
  store i32 -1, i32* %arrayidx53, align 4
  br label %for.inc.54

for.inc.54:                                       ; preds = %if.end.51
  %55 = load i32, i32* %paren, align 4
  %inc = add i32 %55, 1
  store i32 %inc, i32* %paren, align 4
  br label %for.cond.44

for.end.55:                                       ; preds = %for.cond.44
  %56 = load i8*, i8** %input, align 8
  ret i8* %56
}

declare signext i8 @Perl_sv_2bool(%struct.sv*) #1

declare %struct.sv* @Perl_save_scalar(%struct.gv*) #1

declare void @Perl_warner(i32, i8*, ...) #1

declare i32 @Perl_save_alloc(i32, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @S_regrepeat_hard(%struct.regnode* %p, i32 %max, i32* %lp) #0 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca %struct.regnode*, align 8
  %max.addr = alloca i32, align 4
  %lp.addr = alloca i32*, align 8
  %scan = alloca i8*, align 8
  %start = alloca i8*, align 8
  %loceol = alloca i8*, align 8
  %l = alloca i32, align 4
  %count = alloca i32, align 4
  %res = alloca i32, align 4
  store %struct.regnode* %p, %struct.regnode** %p.addr, align 8
  store i32 %max, i32* %max.addr, align 4
  store i32* %lp, i32** %lp.addr, align 8
  store i8* null, i8** %scan, align 8
  %0 = load i8*, i8** @PL_regeol, align 8
  store i8* %0, i8** %loceol, align 8
  store i32 0, i32* %l, align 4
  store i32 0, i32* %count, align 4
  store i32 1, i32* %res, align 4
  %1 = load i32, i32* %max.addr, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** @PL_reginput, align 8
  store i8* %2, i8** %start, align 8
  %3 = load i8, i8* @PL_reg_match_utf8, align 1
  %tobool1 = icmp ne i8 %3, 0
  br i1 %tobool1, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.end
  br label %while.cond

while.cond:                                       ; preds = %if.end.18, %if.then.2
  %4 = load i8*, i8** @PL_reginput, align 8
  %5 = load i8*, i8** %loceol, align 8
  %cmp = icmp ult i8* %4, %5
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %6 = load i8*, i8** @PL_reginput, align 8
  store i8* %6, i8** %scan, align 8
  %7 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %call = call i32 @S_regmatch(%struct.regnode* %7)
  store i32 %call, i32* %res, align 4
  %tobool3 = icmp ne i32 %call, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %8 = phi i1 [ false, %while.cond ], [ %tobool3, %land.rhs ]
  br i1 %8, label %while.body, label %while.end.19

while.body:                                       ; preds = %land.end
  %9 = load i32, i32* %count, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %count, align 4
  %tobool4 = icmp ne i32 %9, 0
  br i1 %tobool4, label %if.end.14, label %if.then.5

if.then.5:                                        ; preds = %while.body
  store i32 0, i32* %l, align 4
  br label %while.cond.6

while.cond.6:                                     ; preds = %while.body.8, %if.then.5
  %10 = load i8*, i8** %start, align 8
  %11 = load i8*, i8** @PL_reginput, align 8
  %cmp7 = icmp ult i8* %10, %11
  br i1 %cmp7, label %while.body.8, label %while.end

while.body.8:                                     ; preds = %while.cond.6
  %12 = load i32, i32* %l, align 4
  %inc9 = add nsw i32 %12, 1
  store i32 %inc9, i32* %l, align 4
  %13 = load i8*, i8** %start, align 8
  %14 = load i8, i8* %13, align 1
  %idxprom = zext i8 %14 to i64
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom
  %15 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %15 to i32
  %16 = load i8*, i8** %start, align 8
  %idx.ext = sext i32 %conv to i64
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %idx.ext
  store i8* %add.ptr, i8** %start, align 8
  br label %while.cond.6

while.end:                                        ; preds = %while.cond.6
  %17 = load i32, i32* %l, align 4
  %18 = load i32*, i32** %lp.addr, align 8
  store i32 %17, i32* %18, align 4
  %19 = load i32, i32* %l, align 4
  %cmp10 = icmp eq i32 %19, 0
  br i1 %cmp10, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %while.end
  %20 = load i32, i32* %max.addr, align 4
  store i32 %20, i32* %retval
  br label %return

if.end.13:                                        ; preds = %while.end
  br label %if.end.14

if.end.14:                                        ; preds = %if.end.13, %while.body
  %21 = load i32, i32* %count, align 4
  %22 = load i32, i32* %max.addr, align 4
  %cmp15 = icmp eq i32 %21, %22
  br i1 %cmp15, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %if.end.14
  %23 = load i32, i32* %count, align 4
  store i32 %23, i32* %retval
  br label %return

if.end.18:                                        ; preds = %if.end.14
  br label %while.cond

while.end.19:                                     ; preds = %land.end
  br label %if.end.51

if.else:                                          ; preds = %if.end
  br label %while.cond.20

while.cond.20:                                    ; preds = %if.end.49, %if.else
  %24 = load i8*, i8** @PL_reginput, align 8
  %25 = load i8*, i8** %loceol, align 8
  %cmp21 = icmp ult i8* %24, %25
  br i1 %cmp21, label %land.rhs.23, label %land.end.26

land.rhs.23:                                      ; preds = %while.cond.20
  %26 = load i8*, i8** @PL_reginput, align 8
  store i8* %26, i8** %scan, align 8
  %27 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %call24 = call i32 @S_regmatch(%struct.regnode* %27)
  store i32 %call24, i32* %res, align 4
  %tobool25 = icmp ne i32 %call24, 0
  br label %land.end.26

land.end.26:                                      ; preds = %land.rhs.23, %while.cond.20
  %28 = phi i1 [ false, %while.cond.20 ], [ %tobool25, %land.rhs.23 ]
  br i1 %28, label %while.body.27, label %while.end.50

while.body.27:                                    ; preds = %land.end.26
  %29 = load i32, i32* %count, align 4
  %inc28 = add nsw i32 %29, 1
  store i32 %inc28, i32* %count, align 4
  %tobool29 = icmp ne i32 %29, 0
  br i1 %tobool29, label %if.end.49, label %if.then.30

if.then.30:                                       ; preds = %while.body.27
  %30 = load i8*, i8** @PL_reginput, align 8
  %31 = load i8*, i8** %start, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %30 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %31 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv31 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv31, i32* %l, align 4
  %32 = load i32*, i32** %lp.addr, align 8
  store i32 %conv31, i32* %32, align 4
  %33 = load i32, i32* %max.addr, align 4
  %cmp32 = icmp ne i32 %33, 32767
  br i1 %cmp32, label %land.lhs.true, label %if.end.44

land.lhs.true:                                    ; preds = %if.then.30
  %34 = load i32, i32* %l, align 4
  %35 = load i32, i32* %max.addr, align 4
  %mul = mul nsw i32 %34, %35
  %conv34 = sext i32 %mul to i64
  %36 = load i8*, i8** %loceol, align 8
  %37 = load i8*, i8** %scan, align 8
  %sub.ptr.lhs.cast35 = ptrtoint i8* %36 to i64
  %sub.ptr.rhs.cast36 = ptrtoint i8* %37 to i64
  %sub.ptr.sub37 = sub i64 %sub.ptr.lhs.cast35, %sub.ptr.rhs.cast36
  %cmp38 = icmp slt i64 %conv34, %sub.ptr.sub37
  br i1 %cmp38, label %if.then.40, label %if.end.44

if.then.40:                                       ; preds = %land.lhs.true
  %38 = load i8*, i8** %scan, align 8
  %39 = load i32, i32* %l, align 4
  %40 = load i32, i32* %max.addr, align 4
  %mul41 = mul nsw i32 %39, %40
  %idx.ext42 = sext i32 %mul41 to i64
  %add.ptr43 = getelementptr inbounds i8, i8* %38, i64 %idx.ext42
  store i8* %add.ptr43, i8** %loceol, align 8
  br label %if.end.44

if.end.44:                                        ; preds = %if.then.40, %land.lhs.true, %if.then.30
  %41 = load i32, i32* %l, align 4
  %cmp45 = icmp eq i32 %41, 0
  br i1 %cmp45, label %if.then.47, label %if.end.48

if.then.47:                                       ; preds = %if.end.44
  %42 = load i32, i32* %max.addr, align 4
  store i32 %42, i32* %retval
  br label %return

if.end.48:                                        ; preds = %if.end.44
  br label %if.end.49

if.end.49:                                        ; preds = %if.end.48, %while.body.27
  br label %while.cond.20

while.end.50:                                     ; preds = %land.end.26
  br label %if.end.51

if.end.51:                                        ; preds = %while.end.50, %while.end.19
  %43 = load i32, i32* %res, align 4
  %tobool52 = icmp ne i32 %43, 0
  br i1 %tobool52, label %if.end.54, label %if.then.53

if.then.53:                                       ; preds = %if.end.51
  %44 = load i8*, i8** %scan, align 8
  store i8* %44, i8** @PL_reginput, align 8
  br label %if.end.54

if.end.54:                                        ; preds = %if.then.53, %if.end.51
  %45 = load i32, i32* %count, align 4
  store i32 %45, i32* %retval
  br label %return

return:                                           ; preds = %if.end.54, %if.then.47, %if.then.17, %if.then.12, %if.then
  %46 = load i32, i32* %retval
  ret i32 %46
}

declare %struct.regnode* @Perl_regnext(%struct.regnode*) #1

; Function Attrs: nounwind uwtable
define internal i32 @S_regrepeat(%struct.regnode* %p, i32 %max) #0 {
entry:
  %p.addr = alloca %struct.regnode*, align 8
  %max.addr = alloca i32, align 4
  %scan = alloca i8*, align 8
  %c = alloca i32, align 4
  %loceol = alloca i8*, align 8
  %hardcount = alloca i32, align 4
  %do_utf8 = alloca i8, align 1
  store %struct.regnode* %p, %struct.regnode** %p.addr, align 8
  store i32 %max, i32* %max.addr, align 4
  %0 = load i8*, i8** @PL_regeol, align 8
  store i8* %0, i8** %loceol, align 8
  store i32 0, i32* %hardcount, align 4
  %1 = load i8, i8* @PL_reg_match_utf8, align 1
  store i8 %1, i8* %do_utf8, align 1
  %2 = load i8*, i8** @PL_reginput, align 8
  store i8* %2, i8** %scan, align 8
  %3 = load i32, i32* %max.addr, align 4
  %cmp = icmp eq i32 %3, 32767
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 2147483647, i32* %max.addr, align 4
  br label %if.end.4

if.else:                                          ; preds = %entry
  %4 = load i32, i32* %max.addr, align 4
  %conv = sext i32 %4 to i64
  %5 = load i8*, i8** %loceol, align 8
  %6 = load i8*, i8** %scan, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp1 = icmp slt i64 %conv, %sub.ptr.sub
  br i1 %cmp1, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %if.else
  %7 = load i8*, i8** %scan, align 8
  %8 = load i32, i32* %max.addr, align 4
  %idx.ext = sext i32 %8 to i64
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %idx.ext
  store i8* %add.ptr, i8** %loceol, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.3, %if.else
  br label %if.end.4

if.end.4:                                         ; preds = %if.end, %if.then
  %9 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %type = getelementptr inbounds %struct.regnode, %struct.regnode* %9, i32 0, i32 1
  %10 = load i8, i8* %type, align 1
  %conv5 = zext i8 %10 to i32
  switch i32 %conv5, label %sw.default [
    i32 14, label %sw.bb
    i32 15, label %sw.bb.29
    i32 16, label %sw.bb.49
    i32 33, label %sw.bb.50
    i32 34, label %sw.bb.63
    i32 35, label %sw.bb.84
    i32 17, label %sw.bb.107
    i32 18, label %sw.bb.150
    i32 19, label %sw.bb.212
    i32 20, label %sw.bb.293
    i32 21, label %sw.bb.359
    i32 22, label %sw.bb.443
    i32 23, label %sw.bb.505
    i32 24, label %sw.bb.582
    i32 25, label %sw.bb.646
    i32 26, label %sw.bb.725
    i32 28, label %sw.bb.771
  ]

sw.bb:                                            ; preds = %if.end.4
  %11 = load i8, i8* %do_utf8, align 1
  %tobool = icmp ne i8 %11, 0
  br i1 %tobool, label %if.then.6, label %if.else.17

if.then.6:                                        ; preds = %sw.bb
  %12 = load i8*, i8** @PL_regeol, align 8
  store i8* %12, i8** %loceol, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then.6
  %13 = load i8*, i8** %scan, align 8
  %14 = load i8*, i8** %loceol, align 8
  %cmp7 = icmp ult i8* %13, %14
  br i1 %cmp7, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %while.cond
  %15 = load i32, i32* %hardcount, align 4
  %16 = load i32, i32* %max.addr, align 4
  %cmp9 = icmp slt i32 %15, %16
  br i1 %cmp9, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %17 = load i8*, i8** %scan, align 8
  %18 = load i8, i8* %17, align 1
  %conv11 = sext i8 %18 to i32
  %cmp12 = icmp ne i32 %conv11, 10
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.cond
  %19 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp12, %land.rhs ]
  br i1 %19, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %20 = load i8*, i8** %scan, align 8
  %21 = load i8, i8* %20, align 1
  %idxprom = zext i8 %21 to i64
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom
  %22 = load i8, i8* %arrayidx, align 1
  %conv14 = zext i8 %22 to i32
  %23 = load i8*, i8** %scan, align 8
  %idx.ext15 = sext i32 %conv14 to i64
  %add.ptr16 = getelementptr inbounds i8, i8* %23, i64 %idx.ext15
  store i8* %add.ptr16, i8** %scan, align 8
  %24 = load i32, i32* %hardcount, align 4
  %inc = add nsw i32 %24, 1
  store i32 %inc, i32* %hardcount, align 4
  br label %while.cond

while.end:                                        ; preds = %land.end
  br label %if.end.28

if.else.17:                                       ; preds = %sw.bb
  br label %while.cond.18

while.cond.18:                                    ; preds = %while.body.26, %if.else.17
  %25 = load i8*, i8** %scan, align 8
  %26 = load i8*, i8** %loceol, align 8
  %cmp19 = icmp ult i8* %25, %26
  br i1 %cmp19, label %land.rhs.21, label %land.end.25

land.rhs.21:                                      ; preds = %while.cond.18
  %27 = load i8*, i8** %scan, align 8
  %28 = load i8, i8* %27, align 1
  %conv22 = sext i8 %28 to i32
  %cmp23 = icmp ne i32 %conv22, 10
  br label %land.end.25

land.end.25:                                      ; preds = %land.rhs.21, %while.cond.18
  %29 = phi i1 [ false, %while.cond.18 ], [ %cmp23, %land.rhs.21 ]
  br i1 %29, label %while.body.26, label %while.end.27

while.body.26:                                    ; preds = %land.end.25
  %30 = load i8*, i8** %scan, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr, i8** %scan, align 8
  br label %while.cond.18

while.end.27:                                     ; preds = %land.end.25
  br label %if.end.28

if.end.28:                                        ; preds = %while.end.27, %while.end
  br label %sw.epilog

sw.bb.29:                                         ; preds = %if.end.4
  %31 = load i8, i8* %do_utf8, align 1
  %tobool30 = icmp ne i8 %31, 0
  br i1 %tobool30, label %if.then.31, label %if.else.47

if.then.31:                                       ; preds = %sw.bb.29
  %32 = load i8*, i8** @PL_regeol, align 8
  store i8* %32, i8** %loceol, align 8
  br label %while.cond.32

while.cond.32:                                    ; preds = %while.body.39, %if.then.31
  %33 = load i8*, i8** %scan, align 8
  %34 = load i8*, i8** %loceol, align 8
  %cmp33 = icmp ult i8* %33, %34
  br i1 %cmp33, label %land.rhs.35, label %land.end.38

land.rhs.35:                                      ; preds = %while.cond.32
  %35 = load i32, i32* %hardcount, align 4
  %36 = load i32, i32* %max.addr, align 4
  %cmp36 = icmp slt i32 %35, %36
  br label %land.end.38

land.end.38:                                      ; preds = %land.rhs.35, %while.cond.32
  %37 = phi i1 [ false, %while.cond.32 ], [ %cmp36, %land.rhs.35 ]
  br i1 %37, label %while.body.39, label %while.end.46

while.body.39:                                    ; preds = %land.end.38
  %38 = load i8*, i8** %scan, align 8
  %39 = load i8, i8* %38, align 1
  %idxprom40 = zext i8 %39 to i64
  %arrayidx41 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom40
  %40 = load i8, i8* %arrayidx41, align 1
  %conv42 = zext i8 %40 to i32
  %41 = load i8*, i8** %scan, align 8
  %idx.ext43 = sext i32 %conv42 to i64
  %add.ptr44 = getelementptr inbounds i8, i8* %41, i64 %idx.ext43
  store i8* %add.ptr44, i8** %scan, align 8
  %42 = load i32, i32* %hardcount, align 4
  %inc45 = add nsw i32 %42, 1
  store i32 %inc45, i32* %hardcount, align 4
  br label %while.cond.32

while.end.46:                                     ; preds = %land.end.38
  br label %if.end.48

if.else.47:                                       ; preds = %sw.bb.29
  %43 = load i8*, i8** %loceol, align 8
  store i8* %43, i8** %scan, align 8
  br label %if.end.48

if.end.48:                                        ; preds = %if.else.47, %while.end.46
  br label %sw.epilog

sw.bb.49:                                         ; preds = %if.end.4
  %44 = load i8*, i8** %loceol, align 8
  store i8* %44, i8** %scan, align 8
  br label %sw.epilog

sw.bb.50:                                         ; preds = %if.end.4
  %45 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %46 = bitcast %struct.regnode* %45 to %struct.regnode_string*
  %string = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %46, i32 0, i32 3
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %string, i32 0, i32 0
  %47 = load i8, i8* %arraydecay, align 1
  %conv51 = zext i8 %47 to i32
  store i32 %conv51, i32* %c, align 4
  br label %while.cond.52

while.cond.52:                                    ; preds = %while.body.60, %sw.bb.50
  %48 = load i8*, i8** %scan, align 8
  %49 = load i8*, i8** %loceol, align 8
  %cmp53 = icmp ult i8* %48, %49
  br i1 %cmp53, label %land.rhs.55, label %land.end.59

land.rhs.55:                                      ; preds = %while.cond.52
  %50 = load i8*, i8** %scan, align 8
  %51 = load i8, i8* %50, align 1
  %conv56 = zext i8 %51 to i32
  %52 = load i32, i32* %c, align 4
  %cmp57 = icmp eq i32 %conv56, %52
  br label %land.end.59

land.end.59:                                      ; preds = %land.rhs.55, %while.cond.52
  %53 = phi i1 [ false, %while.cond.52 ], [ %cmp57, %land.rhs.55 ]
  br i1 %53, label %while.body.60, label %while.end.62

while.body.60:                                    ; preds = %land.end.59
  %54 = load i8*, i8** %scan, align 8
  %incdec.ptr61 = getelementptr inbounds i8, i8* %54, i32 1
  store i8* %incdec.ptr61, i8** %scan, align 8
  br label %while.cond.52

while.end.62:                                     ; preds = %land.end.59
  br label %sw.epilog

sw.bb.63:                                         ; preds = %if.end.4
  %55 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %56 = bitcast %struct.regnode* %55 to %struct.regnode_string*
  %string64 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %56, i32 0, i32 3
  %arraydecay65 = getelementptr inbounds [1 x i8], [1 x i8]* %string64, i32 0, i32 0
  %57 = load i8, i8* %arraydecay65, align 1
  %conv66 = zext i8 %57 to i32
  store i32 %conv66, i32* %c, align 4
  br label %while.cond.67

while.cond.67:                                    ; preds = %while.body.81, %sw.bb.63
  %58 = load i8*, i8** %scan, align 8
  %59 = load i8*, i8** %loceol, align 8
  %cmp68 = icmp ult i8* %58, %59
  br i1 %cmp68, label %land.rhs.70, label %land.end.80

land.rhs.70:                                      ; preds = %while.cond.67
  %60 = load i8*, i8** %scan, align 8
  %61 = load i8, i8* %60, align 1
  %conv71 = zext i8 %61 to i32
  %62 = load i32, i32* %c, align 4
  %cmp72 = icmp eq i32 %conv71, %62
  br i1 %cmp72, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs.70
  %63 = load i8*, i8** %scan, align 8
  %64 = load i8, i8* %63, align 1
  %conv74 = zext i8 %64 to i32
  %65 = load i32, i32* %c, align 4
  %idxprom75 = sext i32 %65 to i64
  %arrayidx76 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_fold, i32 0, i64 %idxprom75
  %66 = load i8, i8* %arrayidx76, align 1
  %conv77 = zext i8 %66 to i32
  %cmp78 = icmp eq i32 %conv74, %conv77
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs.70
  %67 = phi i1 [ true, %land.rhs.70 ], [ %cmp78, %lor.rhs ]
  br label %land.end.80

land.end.80:                                      ; preds = %lor.end, %while.cond.67
  %68 = phi i1 [ false, %while.cond.67 ], [ %67, %lor.end ]
  br i1 %68, label %while.body.81, label %while.end.83

while.body.81:                                    ; preds = %land.end.80
  %69 = load i8*, i8** %scan, align 8
  %incdec.ptr82 = getelementptr inbounds i8, i8* %69, i32 1
  store i8* %incdec.ptr82, i8** %scan, align 8
  br label %while.cond.67

while.end.83:                                     ; preds = %land.end.80
  br label %sw.epilog

sw.bb.84:                                         ; preds = %if.end.4
  %70 = load i32, i32* @PL_reg_flags, align 4
  %or = or i32 %70, 1
  store i32 %or, i32* @PL_reg_flags, align 4
  %71 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %72 = bitcast %struct.regnode* %71 to %struct.regnode_string*
  %string85 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %72, i32 0, i32 3
  %arraydecay86 = getelementptr inbounds [1 x i8], [1 x i8]* %string85, i32 0, i32 0
  %73 = load i8, i8* %arraydecay86, align 1
  %conv87 = zext i8 %73 to i32
  store i32 %conv87, i32* %c, align 4
  br label %while.cond.88

while.cond.88:                                    ; preds = %while.body.104, %sw.bb.84
  %74 = load i8*, i8** %scan, align 8
  %75 = load i8*, i8** %loceol, align 8
  %cmp89 = icmp ult i8* %74, %75
  br i1 %cmp89, label %land.rhs.91, label %land.end.103

land.rhs.91:                                      ; preds = %while.cond.88
  %76 = load i8*, i8** %scan, align 8
  %77 = load i8, i8* %76, align 1
  %conv92 = zext i8 %77 to i32
  %78 = load i32, i32* %c, align 4
  %cmp93 = icmp eq i32 %conv92, %78
  br i1 %cmp93, label %lor.end.102, label %lor.rhs.95

lor.rhs.95:                                       ; preds = %land.rhs.91
  %79 = load i8*, i8** %scan, align 8
  %80 = load i8, i8* %79, align 1
  %conv96 = zext i8 %80 to i32
  %81 = load i32, i32* %c, align 4
  %idxprom97 = sext i32 %81 to i64
  %arrayidx98 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_fold_locale, i32 0, i64 %idxprom97
  %82 = load i8, i8* %arrayidx98, align 1
  %conv99 = zext i8 %82 to i32
  %cmp100 = icmp eq i32 %conv96, %conv99
  br label %lor.end.102

lor.end.102:                                      ; preds = %lor.rhs.95, %land.rhs.91
  %83 = phi i1 [ true, %land.rhs.91 ], [ %cmp100, %lor.rhs.95 ]
  br label %land.end.103

land.end.103:                                     ; preds = %lor.end.102, %while.cond.88
  %84 = phi i1 [ false, %while.cond.88 ], [ %83, %lor.end.102 ]
  br i1 %84, label %while.body.104, label %while.end.106

while.body.104:                                   ; preds = %land.end.103
  %85 = load i8*, i8** %scan, align 8
  %incdec.ptr105 = getelementptr inbounds i8, i8* %85, i32 1
  store i8* %incdec.ptr105, i8** %scan, align 8
  br label %while.cond.88

while.end.106:                                    ; preds = %land.end.103
  br label %sw.epilog

sw.bb.107:                                        ; preds = %if.end.4
  %86 = load i8, i8* %do_utf8, align 1
  %tobool108 = icmp ne i8 %86, 0
  br i1 %tobool108, label %if.then.109, label %if.else.128

if.then.109:                                      ; preds = %sw.bb.107
  %87 = load i8*, i8** @PL_regeol, align 8
  store i8* %87, i8** %loceol, align 8
  br label %while.cond.110

while.cond.110:                                   ; preds = %while.body.120, %if.then.109
  %88 = load i32, i32* %hardcount, align 4
  %89 = load i32, i32* %max.addr, align 4
  %cmp111 = icmp slt i32 %88, %89
  br i1 %cmp111, label %land.lhs.true.113, label %land.end.119

land.lhs.true.113:                                ; preds = %while.cond.110
  %90 = load i8*, i8** %scan, align 8
  %91 = load i8*, i8** %loceol, align 8
  %cmp114 = icmp ult i8* %90, %91
  br i1 %cmp114, label %land.rhs.116, label %land.end.119

land.rhs.116:                                     ; preds = %land.lhs.true.113
  %92 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %93 = load i8*, i8** %scan, align 8
  %94 = load i8, i8* %do_utf8, align 1
  %call = call signext i8 @S_reginclass(%struct.regnode* %92, i8* %93, i64* null, i8 signext %94)
  %conv117 = sext i8 %call to i32
  %tobool118 = icmp ne i32 %conv117, 0
  br label %land.end.119

land.end.119:                                     ; preds = %land.rhs.116, %land.lhs.true.113, %while.cond.110
  %95 = phi i1 [ false, %land.lhs.true.113 ], [ false, %while.cond.110 ], [ %tobool118, %land.rhs.116 ]
  br i1 %95, label %while.body.120, label %while.end.127

while.body.120:                                   ; preds = %land.end.119
  %96 = load i8*, i8** %scan, align 8
  %97 = load i8, i8* %96, align 1
  %idxprom121 = zext i8 %97 to i64
  %arrayidx122 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom121
  %98 = load i8, i8* %arrayidx122, align 1
  %conv123 = zext i8 %98 to i32
  %99 = load i8*, i8** %scan, align 8
  %idx.ext124 = sext i32 %conv123 to i64
  %add.ptr125 = getelementptr inbounds i8, i8* %99, i64 %idx.ext124
  store i8* %add.ptr125, i8** %scan, align 8
  %100 = load i32, i32* %hardcount, align 4
  %inc126 = add nsw i32 %100, 1
  store i32 %inc126, i32* %hardcount, align 4
  br label %while.cond.110

while.end.127:                                    ; preds = %land.end.119
  br label %if.end.149

if.else.128:                                      ; preds = %sw.bb.107
  br label %while.cond.129

while.cond.129:                                   ; preds = %while.body.146, %if.else.128
  %101 = load i8*, i8** %scan, align 8
  %102 = load i8*, i8** %loceol, align 8
  %cmp130 = icmp ult i8* %101, %102
  br i1 %cmp130, label %land.rhs.132, label %land.end.145

land.rhs.132:                                     ; preds = %while.cond.129
  %103 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags = getelementptr inbounds %struct.regnode, %struct.regnode* %103, i32 0, i32 0
  %104 = load i8, i8* %flags, align 1
  %conv133 = zext i8 %104 to i32
  %tobool134 = icmp ne i32 %conv133, 0
  br i1 %tobool134, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.rhs.132
  %105 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %106 = load i8*, i8** %scan, align 8
  %call135 = call signext i8 @S_reginclass(%struct.regnode* %105, i8* %106, i64* null, i8 signext 0)
  %conv136 = sext i8 %call135 to i32
  br label %cond.end

cond.false:                                       ; preds = %land.rhs.132
  %107 = load i8*, i8** %scan, align 8
  %108 = load i8, i8* %107, align 1
  %conv137 = zext i8 %108 to i32
  %shr = ashr i32 %conv137, 3
  %and = and i32 %shr, 31
  %idxprom138 = sext i32 %and to i64
  %109 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %110 = bitcast %struct.regnode* %109 to %struct.regnode_charclass*
  %bitmap = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %110, i32 0, i32 4
  %arrayidx139 = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap, i32 0, i64 %idxprom138
  %111 = load i8, i8* %arrayidx139, align 1
  %conv140 = sext i8 %111 to i32
  %112 = load i8*, i8** %scan, align 8
  %113 = load i8, i8* %112, align 1
  %conv141 = zext i8 %113 to i32
  %and142 = and i32 %conv141, 7
  %shl = shl i32 1, %and142
  %and143 = and i32 %conv140, %shl
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv136, %cond.true ], [ %and143, %cond.false ]
  %tobool144 = icmp ne i32 %cond, 0
  br label %land.end.145

land.end.145:                                     ; preds = %cond.end, %while.cond.129
  %114 = phi i1 [ false, %while.cond.129 ], [ %tobool144, %cond.end ]
  br i1 %114, label %while.body.146, label %while.end.148

while.body.146:                                   ; preds = %land.end.145
  %115 = load i8*, i8** %scan, align 8
  %incdec.ptr147 = getelementptr inbounds i8, i8* %115, i32 1
  store i8* %incdec.ptr147, i8** %scan, align 8
  br label %while.cond.129

while.end.148:                                    ; preds = %land.end.145
  br label %if.end.149

if.end.149:                                       ; preds = %while.end.148, %while.end.127
  br label %sw.epilog

sw.bb.150:                                        ; preds = %if.end.4
  %116 = load i8, i8* %do_utf8, align 1
  %tobool151 = icmp ne i8 %116, 0
  br i1 %tobool151, label %if.then.152, label %if.else.175

if.then.152:                                      ; preds = %sw.bb.150
  %117 = load i8*, i8** @PL_regeol, align 8
  store i8* %117, i8** %loceol, align 8
  %118 = load %struct.sv*, %struct.sv** @PL_utf8_alnum, align 8
  %tobool153 = icmp ne %struct.sv* %118, null
  br i1 %tobool153, label %if.end.156, label %if.then.154

if.then.154:                                      ; preds = %if.then.152
  call void @Perl_push_scope()
  call void @Perl_save_re_context()
  %call155 = call signext i8 @Perl_is_utf8_alnum(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0))
  call void @Perl_pop_scope()
  br label %if.end.156

if.end.156:                                       ; preds = %if.then.154, %if.then.152
  br label %while.cond.157

while.cond.157:                                   ; preds = %while.body.167, %if.end.156
  %119 = load i32, i32* %hardcount, align 4
  %120 = load i32, i32* %max.addr, align 4
  %cmp158 = icmp slt i32 %119, %120
  br i1 %cmp158, label %land.lhs.true.160, label %land.end.166

land.lhs.true.160:                                ; preds = %while.cond.157
  %121 = load i8*, i8** %scan, align 8
  %122 = load i8*, i8** %loceol, align 8
  %cmp161 = icmp ult i8* %121, %122
  br i1 %cmp161, label %land.rhs.163, label %land.end.166

land.rhs.163:                                     ; preds = %land.lhs.true.160
  %123 = load %struct.sv*, %struct.sv** @PL_utf8_alnum, align 8
  %124 = load i8*, i8** %scan, align 8
  %125 = load i8, i8* %do_utf8, align 1
  %call164 = call i64 @Perl_swash_fetch(%struct.sv* %123, i8* %124, i8 signext %125)
  %tobool165 = icmp ne i64 %call164, 0
  br label %land.end.166

land.end.166:                                     ; preds = %land.rhs.163, %land.lhs.true.160, %while.cond.157
  %126 = phi i1 [ false, %land.lhs.true.160 ], [ false, %while.cond.157 ], [ %tobool165, %land.rhs.163 ]
  br i1 %126, label %while.body.167, label %while.end.174

while.body.167:                                   ; preds = %land.end.166
  %127 = load i8*, i8** %scan, align 8
  %128 = load i8, i8* %127, align 1
  %idxprom168 = zext i8 %128 to i64
  %arrayidx169 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom168
  %129 = load i8, i8* %arrayidx169, align 1
  %conv170 = zext i8 %129 to i32
  %130 = load i8*, i8** %scan, align 8
  %idx.ext171 = sext i32 %conv170 to i64
  %add.ptr172 = getelementptr inbounds i8, i8* %130, i64 %idx.ext171
  store i8* %add.ptr172, i8** %scan, align 8
  %131 = load i32, i32* %hardcount, align 4
  %inc173 = add nsw i32 %131, 1
  store i32 %inc173, i32* %hardcount, align 4
  br label %while.cond.157

while.end.174:                                    ; preds = %land.end.166
  br label %if.end.211

if.else.175:                                      ; preds = %sw.bb.150
  br label %while.cond.176

while.cond.176:                                   ; preds = %while.body.208, %if.else.175
  %132 = load i8*, i8** %scan, align 8
  %133 = load i8*, i8** %loceol, align 8
  %cmp177 = icmp ult i8* %132, %133
  br i1 %cmp177, label %land.rhs.179, label %land.end.207

land.rhs.179:                                     ; preds = %while.cond.176
  %134 = load i8*, i8** %scan, align 8
  %135 = load i8, i8* %134, align 1
  %conv180 = sext i8 %135 to i32
  %cmp181 = icmp sge i32 %conv180, 65
  br i1 %cmp181, label %land.lhs.true.183, label %lor.lhs.false

land.lhs.true.183:                                ; preds = %land.rhs.179
  %136 = load i8*, i8** %scan, align 8
  %137 = load i8, i8* %136, align 1
  %conv184 = sext i8 %137 to i32
  %cmp185 = icmp sle i32 %conv184, 90
  br i1 %cmp185, label %lor.end.206, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.183, %land.rhs.179
  %138 = load i8*, i8** %scan, align 8
  %139 = load i8, i8* %138, align 1
  %conv187 = sext i8 %139 to i32
  %cmp188 = icmp sge i32 %conv187, 97
  br i1 %cmp188, label %land.lhs.true.190, label %lor.lhs.false.194

land.lhs.true.190:                                ; preds = %lor.lhs.false
  %140 = load i8*, i8** %scan, align 8
  %141 = load i8, i8* %140, align 1
  %conv191 = sext i8 %141 to i32
  %cmp192 = icmp sle i32 %conv191, 122
  br i1 %cmp192, label %lor.end.206, label %lor.lhs.false.194

lor.lhs.false.194:                                ; preds = %land.lhs.true.190, %lor.lhs.false
  %142 = load i8*, i8** %scan, align 8
  %143 = load i8, i8* %142, align 1
  %conv195 = sext i8 %143 to i32
  %cmp196 = icmp sge i32 %conv195, 48
  br i1 %cmp196, label %land.lhs.true.198, label %lor.rhs.202

land.lhs.true.198:                                ; preds = %lor.lhs.false.194
  %144 = load i8*, i8** %scan, align 8
  %145 = load i8, i8* %144, align 1
  %conv199 = sext i8 %145 to i32
  %cmp200 = icmp sle i32 %conv199, 57
  br i1 %cmp200, label %lor.end.206, label %lor.rhs.202

lor.rhs.202:                                      ; preds = %land.lhs.true.198, %lor.lhs.false.194
  %146 = load i8*, i8** %scan, align 8
  %147 = load i8, i8* %146, align 1
  %conv203 = sext i8 %147 to i32
  %cmp204 = icmp eq i32 %conv203, 95
  br label %lor.end.206

lor.end.206:                                      ; preds = %lor.rhs.202, %land.lhs.true.198, %land.lhs.true.190, %land.lhs.true.183
  %148 = phi i1 [ true, %land.lhs.true.198 ], [ true, %land.lhs.true.190 ], [ true, %land.lhs.true.183 ], [ %cmp204, %lor.rhs.202 ]
  br label %land.end.207

land.end.207:                                     ; preds = %lor.end.206, %while.cond.176
  %149 = phi i1 [ false, %while.cond.176 ], [ %148, %lor.end.206 ]
  br i1 %149, label %while.body.208, label %while.end.210

while.body.208:                                   ; preds = %land.end.207
  %150 = load i8*, i8** %scan, align 8
  %incdec.ptr209 = getelementptr inbounds i8, i8* %150, i32 1
  store i8* %incdec.ptr209, i8** %scan, align 8
  br label %while.cond.176

while.end.210:                                    ; preds = %land.end.207
  br label %if.end.211

if.end.211:                                       ; preds = %while.end.210, %while.end.174
  br label %sw.epilog

sw.bb.212:                                        ; preds = %if.end.4
  %151 = load i32, i32* @PL_reg_flags, align 4
  %or213 = or i32 %151, 1
  store i32 %or213, i32* @PL_reg_flags, align 4
  %152 = load i8, i8* %do_utf8, align 1
  %tobool214 = icmp ne i8 %152, 0
  br i1 %tobool214, label %if.then.215, label %if.else.263

if.then.215:                                      ; preds = %sw.bb.212
  %153 = load i8*, i8** @PL_regeol, align 8
  store i8* %153, i8** %loceol, align 8
  br label %while.cond.216

while.cond.216:                                   ; preds = %while.body.255, %if.then.215
  %154 = load i32, i32* %hardcount, align 4
  %155 = load i32, i32* %max.addr, align 4
  %cmp217 = icmp slt i32 %154, %155
  br i1 %cmp217, label %land.lhs.true.219, label %land.end.253

land.lhs.true.219:                                ; preds = %while.cond.216
  %156 = load i8*, i8** %scan, align 8
  %157 = load i8*, i8** %loceol, align 8
  %cmp220 = icmp ult i8* %156, %157
  br i1 %cmp220, label %land.rhs.222, label %land.end.253

land.rhs.222:                                     ; preds = %land.lhs.true.219
  %158 = load i8*, i8** %scan, align 8
  %call223 = call i64 @Perl_utf8_to_uvchr(i8* %158, i64* null)
  %cmp224 = icmp ult i64 %call223, 256
  br i1 %cmp224, label %cond.true.226, label %cond.false.246

cond.true.226:                                    ; preds = %land.rhs.222
  %159 = load i8*, i8** %scan, align 8
  %call227 = call i64 @Perl_utf8_to_uvchr(i8* %159, i64* null)
  %and228 = and i64 %call227, -128
  %cmp229 = icmp eq i64 %and228, 0
  br i1 %cmp229, label %land.rhs.231, label %land.end.245

land.rhs.231:                                     ; preds = %cond.true.226
  %160 = load i8*, i8** %scan, align 8
  %call232 = call i64 @Perl_utf8_to_uvchr(i8* %160, i64* null)
  %conv233 = trunc i64 %call232 to i32
  %idxprom234 = sext i32 %conv233 to i64
  %call235 = call i16** @__ctype_b_loc()
  %161 = load i16*, i16** %call235, align 8
  %arrayidx236 = getelementptr inbounds i16, i16* %161, i64 %idxprom234
  %162 = load i16, i16* %arrayidx236, align 2
  %conv237 = zext i16 %162 to i32
  %and238 = and i32 %conv237, 8
  %tobool239 = icmp ne i32 %and238, 0
  br i1 %tobool239, label %lor.end.244, label %lor.rhs.240

lor.rhs.240:                                      ; preds = %land.rhs.231
  %163 = load i8*, i8** %scan, align 8
  %call241 = call i64 @Perl_utf8_to_uvchr(i8* %163, i64* null)
  %cmp242 = icmp eq i64 %call241, 95
  br label %lor.end.244

lor.end.244:                                      ; preds = %lor.rhs.240, %land.rhs.231
  %164 = phi i1 [ true, %land.rhs.231 ], [ %cmp242, %lor.rhs.240 ]
  br label %land.end.245

land.end.245:                                     ; preds = %lor.end.244, %cond.true.226
  %165 = phi i1 [ false, %cond.true.226 ], [ %164, %lor.end.244 ]
  %land.ext = zext i1 %165 to i32
  br label %cond.end.250

cond.false.246:                                   ; preds = %land.rhs.222
  %166 = load i8*, i8** %scan, align 8
  %call247 = call i64 @Perl_utf8_to_uvchr(i8* %166, i64* null)
  %call248 = call signext i8 @Perl_is_uni_alnum_lc(i64 %call247)
  %conv249 = sext i8 %call248 to i32
  br label %cond.end.250

cond.end.250:                                     ; preds = %cond.false.246, %land.end.245
  %cond251 = phi i32 [ %land.ext, %land.end.245 ], [ %conv249, %cond.false.246 ]
  %tobool252 = icmp ne i32 %cond251, 0
  br label %land.end.253

land.end.253:                                     ; preds = %cond.end.250, %land.lhs.true.219, %while.cond.216
  %167 = phi i1 [ false, %land.lhs.true.219 ], [ false, %while.cond.216 ], [ %tobool252, %cond.end.250 ]
  br i1 %167, label %while.body.255, label %while.end.262

while.body.255:                                   ; preds = %land.end.253
  %168 = load i8*, i8** %scan, align 8
  %169 = load i8, i8* %168, align 1
  %idxprom256 = zext i8 %169 to i64
  %arrayidx257 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom256
  %170 = load i8, i8* %arrayidx257, align 1
  %conv258 = zext i8 %170 to i32
  %171 = load i8*, i8** %scan, align 8
  %idx.ext259 = sext i32 %conv258 to i64
  %add.ptr260 = getelementptr inbounds i8, i8* %171, i64 %idx.ext259
  store i8* %add.ptr260, i8** %scan, align 8
  %172 = load i32, i32* %hardcount, align 4
  %inc261 = add nsw i32 %172, 1
  store i32 %inc261, i32* %hardcount, align 4
  br label %while.cond.216

while.end.262:                                    ; preds = %land.end.253
  br label %if.end.292

if.else.263:                                      ; preds = %sw.bb.212
  br label %while.cond.264

while.cond.264:                                   ; preds = %while.body.289, %if.else.263
  %173 = load i8*, i8** %scan, align 8
  %174 = load i8*, i8** %loceol, align 8
  %cmp265 = icmp ult i8* %173, %174
  br i1 %cmp265, label %land.rhs.267, label %land.end.287

land.rhs.267:                                     ; preds = %while.cond.264
  %175 = load i8*, i8** %scan, align 8
  %176 = load i8, i8* %175, align 1
  %conv268 = sext i8 %176 to i32
  %and269 = and i32 %conv268, -128
  %cmp270 = icmp eq i32 %and269, 0
  br i1 %cmp270, label %land.rhs.272, label %land.end.285

land.rhs.272:                                     ; preds = %land.rhs.267
  %177 = load i8*, i8** %scan, align 8
  %178 = load i8, i8* %177, align 1
  %conv273 = sext i8 %178 to i32
  %idxprom274 = sext i32 %conv273 to i64
  %call275 = call i16** @__ctype_b_loc()
  %179 = load i16*, i16** %call275, align 8
  %arrayidx276 = getelementptr inbounds i16, i16* %179, i64 %idxprom274
  %180 = load i16, i16* %arrayidx276, align 2
  %conv277 = zext i16 %180 to i32
  %and278 = and i32 %conv277, 8
  %tobool279 = icmp ne i32 %and278, 0
  br i1 %tobool279, label %lor.end.284, label %lor.rhs.280

lor.rhs.280:                                      ; preds = %land.rhs.272
  %181 = load i8*, i8** %scan, align 8
  %182 = load i8, i8* %181, align 1
  %conv281 = sext i8 %182 to i32
  %cmp282 = icmp eq i32 %conv281, 95
  br label %lor.end.284

lor.end.284:                                      ; preds = %lor.rhs.280, %land.rhs.272
  %183 = phi i1 [ true, %land.rhs.272 ], [ %cmp282, %lor.rhs.280 ]
  br label %land.end.285

land.end.285:                                     ; preds = %lor.end.284, %land.rhs.267
  %184 = phi i1 [ false, %land.rhs.267 ], [ %183, %lor.end.284 ]
  br label %land.end.287

land.end.287:                                     ; preds = %land.end.285, %while.cond.264
  %185 = phi i1 [ false, %while.cond.264 ], [ %184, %land.end.285 ]
  br i1 %185, label %while.body.289, label %while.end.291

while.body.289:                                   ; preds = %land.end.287
  %186 = load i8*, i8** %scan, align 8
  %incdec.ptr290 = getelementptr inbounds i8, i8* %186, i32 1
  store i8* %incdec.ptr290, i8** %scan, align 8
  br label %while.cond.264

while.end.291:                                    ; preds = %land.end.287
  br label %if.end.292

if.end.292:                                       ; preds = %while.end.291, %while.end.262
  br label %sw.epilog

sw.bb.293:                                        ; preds = %if.end.4
  %187 = load i8, i8* %do_utf8, align 1
  %tobool294 = icmp ne i8 %187, 0
  br i1 %tobool294, label %if.then.295, label %if.else.319

if.then.295:                                      ; preds = %sw.bb.293
  %188 = load i8*, i8** @PL_regeol, align 8
  store i8* %188, i8** %loceol, align 8
  %189 = load %struct.sv*, %struct.sv** @PL_utf8_alnum, align 8
  %tobool296 = icmp ne %struct.sv* %189, null
  br i1 %tobool296, label %if.end.299, label %if.then.297

if.then.297:                                      ; preds = %if.then.295
  call void @Perl_push_scope()
  call void @Perl_save_re_context()
  %call298 = call signext i8 @Perl_is_utf8_alnum(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0))
  call void @Perl_pop_scope()
  br label %if.end.299

if.end.299:                                       ; preds = %if.then.297, %if.then.295
  br label %while.cond.300

while.cond.300:                                   ; preds = %while.body.311, %if.end.299
  %190 = load i32, i32* %hardcount, align 4
  %191 = load i32, i32* %max.addr, align 4
  %cmp301 = icmp slt i32 %190, %191
  br i1 %cmp301, label %land.lhs.true.303, label %land.end.309

land.lhs.true.303:                                ; preds = %while.cond.300
  %192 = load i8*, i8** %scan, align 8
  %193 = load i8*, i8** %loceol, align 8
  %cmp304 = icmp ult i8* %192, %193
  br i1 %cmp304, label %land.rhs.306, label %land.end.309

land.rhs.306:                                     ; preds = %land.lhs.true.303
  %194 = load %struct.sv*, %struct.sv** @PL_utf8_alnum, align 8
  %195 = load i8*, i8** %scan, align 8
  %196 = load i8, i8* %do_utf8, align 1
  %call307 = call i64 @Perl_swash_fetch(%struct.sv* %194, i8* %195, i8 signext %196)
  %tobool308 = icmp ne i64 %call307, 0
  %lnot = xor i1 %tobool308, true
  br label %land.end.309

land.end.309:                                     ; preds = %land.rhs.306, %land.lhs.true.303, %while.cond.300
  %197 = phi i1 [ false, %land.lhs.true.303 ], [ false, %while.cond.300 ], [ %lnot, %land.rhs.306 ]
  br i1 %197, label %while.body.311, label %while.end.318

while.body.311:                                   ; preds = %land.end.309
  %198 = load i8*, i8** %scan, align 8
  %199 = load i8, i8* %198, align 1
  %idxprom312 = zext i8 %199 to i64
  %arrayidx313 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom312
  %200 = load i8, i8* %arrayidx313, align 1
  %conv314 = zext i8 %200 to i32
  %201 = load i8*, i8** %scan, align 8
  %idx.ext315 = sext i32 %conv314 to i64
  %add.ptr316 = getelementptr inbounds i8, i8* %201, i64 %idx.ext315
  store i8* %add.ptr316, i8** %scan, align 8
  %202 = load i32, i32* %hardcount, align 4
  %inc317 = add nsw i32 %202, 1
  store i32 %inc317, i32* %hardcount, align 4
  br label %while.cond.300

while.end.318:                                    ; preds = %land.end.309
  br label %if.end.358

if.else.319:                                      ; preds = %sw.bb.293
  br label %while.cond.320

while.cond.320:                                   ; preds = %while.body.355, %if.else.319
  %203 = load i8*, i8** %scan, align 8
  %204 = load i8*, i8** %loceol, align 8
  %cmp321 = icmp ult i8* %203, %204
  br i1 %cmp321, label %land.rhs.323, label %land.end.353

land.rhs.323:                                     ; preds = %while.cond.320
  %205 = load i8*, i8** %scan, align 8
  %206 = load i8, i8* %205, align 1
  %conv324 = sext i8 %206 to i32
  %cmp325 = icmp sge i32 %conv324, 65
  br i1 %cmp325, label %land.lhs.true.327, label %lor.lhs.false.331

land.lhs.true.327:                                ; preds = %land.rhs.323
  %207 = load i8*, i8** %scan, align 8
  %208 = load i8, i8* %207, align 1
  %conv328 = sext i8 %208 to i32
  %cmp329 = icmp sle i32 %conv328, 90
  br i1 %cmp329, label %lor.end.351, label %lor.lhs.false.331

lor.lhs.false.331:                                ; preds = %land.lhs.true.327, %land.rhs.323
  %209 = load i8*, i8** %scan, align 8
  %210 = load i8, i8* %209, align 1
  %conv332 = sext i8 %210 to i32
  %cmp333 = icmp sge i32 %conv332, 97
  br i1 %cmp333, label %land.lhs.true.335, label %lor.lhs.false.339

land.lhs.true.335:                                ; preds = %lor.lhs.false.331
  %211 = load i8*, i8** %scan, align 8
  %212 = load i8, i8* %211, align 1
  %conv336 = sext i8 %212 to i32
  %cmp337 = icmp sle i32 %conv336, 122
  br i1 %cmp337, label %lor.end.351, label %lor.lhs.false.339

lor.lhs.false.339:                                ; preds = %land.lhs.true.335, %lor.lhs.false.331
  %213 = load i8*, i8** %scan, align 8
  %214 = load i8, i8* %213, align 1
  %conv340 = sext i8 %214 to i32
  %cmp341 = icmp sge i32 %conv340, 48
  br i1 %cmp341, label %land.lhs.true.343, label %lor.rhs.347

land.lhs.true.343:                                ; preds = %lor.lhs.false.339
  %215 = load i8*, i8** %scan, align 8
  %216 = load i8, i8* %215, align 1
  %conv344 = sext i8 %216 to i32
  %cmp345 = icmp sle i32 %conv344, 57
  br i1 %cmp345, label %lor.end.351, label %lor.rhs.347

lor.rhs.347:                                      ; preds = %land.lhs.true.343, %lor.lhs.false.339
  %217 = load i8*, i8** %scan, align 8
  %218 = load i8, i8* %217, align 1
  %conv348 = sext i8 %218 to i32
  %cmp349 = icmp eq i32 %conv348, 95
  br label %lor.end.351

lor.end.351:                                      ; preds = %lor.rhs.347, %land.lhs.true.343, %land.lhs.true.335, %land.lhs.true.327
  %219 = phi i1 [ true, %land.lhs.true.343 ], [ true, %land.lhs.true.335 ], [ true, %land.lhs.true.327 ], [ %cmp349, %lor.rhs.347 ]
  %lnot352 = xor i1 %219, true
  br label %land.end.353

land.end.353:                                     ; preds = %lor.end.351, %while.cond.320
  %220 = phi i1 [ false, %while.cond.320 ], [ %lnot352, %lor.end.351 ]
  br i1 %220, label %while.body.355, label %while.end.357

while.body.355:                                   ; preds = %land.end.353
  %221 = load i8*, i8** %scan, align 8
  %incdec.ptr356 = getelementptr inbounds i8, i8* %221, i32 1
  store i8* %incdec.ptr356, i8** %scan, align 8
  br label %while.cond.320

while.end.357:                                    ; preds = %land.end.353
  br label %if.end.358

if.end.358:                                       ; preds = %while.end.357, %while.end.318
  br label %sw.epilog

sw.bb.359:                                        ; preds = %if.end.4
  %222 = load i32, i32* @PL_reg_flags, align 4
  %or360 = or i32 %222, 1
  store i32 %or360, i32* @PL_reg_flags, align 4
  %223 = load i8, i8* %do_utf8, align 1
  %tobool361 = icmp ne i8 %223, 0
  br i1 %tobool361, label %if.then.362, label %if.else.412

if.then.362:                                      ; preds = %sw.bb.359
  %224 = load i8*, i8** @PL_regeol, align 8
  store i8* %224, i8** %loceol, align 8
  br label %while.cond.363

while.cond.363:                                   ; preds = %while.body.404, %if.then.362
  %225 = load i32, i32* %hardcount, align 4
  %226 = load i32, i32* %max.addr, align 4
  %cmp364 = icmp slt i32 %225, %226
  br i1 %cmp364, label %land.lhs.true.366, label %land.end.402

land.lhs.true.366:                                ; preds = %while.cond.363
  %227 = load i8*, i8** %scan, align 8
  %228 = load i8*, i8** %loceol, align 8
  %cmp367 = icmp ult i8* %227, %228
  br i1 %cmp367, label %land.rhs.369, label %land.end.402

land.rhs.369:                                     ; preds = %land.lhs.true.366
  %229 = load i8*, i8** %scan, align 8
  %call370 = call i64 @Perl_utf8_to_uvchr(i8* %229, i64* null)
  %cmp371 = icmp ult i64 %call370, 256
  br i1 %cmp371, label %cond.true.373, label %cond.false.394

cond.true.373:                                    ; preds = %land.rhs.369
  %230 = load i8*, i8** %scan, align 8
  %call374 = call i64 @Perl_utf8_to_uvchr(i8* %230, i64* null)
  %and375 = and i64 %call374, -128
  %cmp376 = icmp eq i64 %and375, 0
  br i1 %cmp376, label %land.rhs.378, label %land.end.392

land.rhs.378:                                     ; preds = %cond.true.373
  %231 = load i8*, i8** %scan, align 8
  %call379 = call i64 @Perl_utf8_to_uvchr(i8* %231, i64* null)
  %conv380 = trunc i64 %call379 to i32
  %idxprom381 = sext i32 %conv380 to i64
  %call382 = call i16** @__ctype_b_loc()
  %232 = load i16*, i16** %call382, align 8
  %arrayidx383 = getelementptr inbounds i16, i16* %232, i64 %idxprom381
  %233 = load i16, i16* %arrayidx383, align 2
  %conv384 = zext i16 %233 to i32
  %and385 = and i32 %conv384, 8
  %tobool386 = icmp ne i32 %and385, 0
  br i1 %tobool386, label %lor.end.391, label %lor.rhs.387

lor.rhs.387:                                      ; preds = %land.rhs.378
  %234 = load i8*, i8** %scan, align 8
  %call388 = call i64 @Perl_utf8_to_uvchr(i8* %234, i64* null)
  %cmp389 = icmp eq i64 %call388, 95
  br label %lor.end.391

lor.end.391:                                      ; preds = %lor.rhs.387, %land.rhs.378
  %235 = phi i1 [ true, %land.rhs.378 ], [ %cmp389, %lor.rhs.387 ]
  br label %land.end.392

land.end.392:                                     ; preds = %lor.end.391, %cond.true.373
  %236 = phi i1 [ false, %cond.true.373 ], [ %235, %lor.end.391 ]
  %land.ext393 = zext i1 %236 to i32
  br label %cond.end.398

cond.false.394:                                   ; preds = %land.rhs.369
  %237 = load i8*, i8** %scan, align 8
  %call395 = call i64 @Perl_utf8_to_uvchr(i8* %237, i64* null)
  %call396 = call signext i8 @Perl_is_uni_alnum_lc(i64 %call395)
  %conv397 = sext i8 %call396 to i32
  br label %cond.end.398

cond.end.398:                                     ; preds = %cond.false.394, %land.end.392
  %cond399 = phi i32 [ %land.ext393, %land.end.392 ], [ %conv397, %cond.false.394 ]
  %tobool400 = icmp ne i32 %cond399, 0
  %lnot401 = xor i1 %tobool400, true
  br label %land.end.402

land.end.402:                                     ; preds = %cond.end.398, %land.lhs.true.366, %while.cond.363
  %238 = phi i1 [ false, %land.lhs.true.366 ], [ false, %while.cond.363 ], [ %lnot401, %cond.end.398 ]
  br i1 %238, label %while.body.404, label %while.end.411

while.body.404:                                   ; preds = %land.end.402
  %239 = load i8*, i8** %scan, align 8
  %240 = load i8, i8* %239, align 1
  %idxprom405 = zext i8 %240 to i64
  %arrayidx406 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom405
  %241 = load i8, i8* %arrayidx406, align 1
  %conv407 = zext i8 %241 to i32
  %242 = load i8*, i8** %scan, align 8
  %idx.ext408 = sext i32 %conv407 to i64
  %add.ptr409 = getelementptr inbounds i8, i8* %242, i64 %idx.ext408
  store i8* %add.ptr409, i8** %scan, align 8
  %243 = load i32, i32* %hardcount, align 4
  %inc410 = add nsw i32 %243, 1
  store i32 %inc410, i32* %hardcount, align 4
  br label %while.cond.363

while.end.411:                                    ; preds = %land.end.402
  br label %if.end.442

if.else.412:                                      ; preds = %sw.bb.359
  br label %while.cond.413

while.cond.413:                                   ; preds = %while.body.439, %if.else.412
  %244 = load i8*, i8** %scan, align 8
  %245 = load i8*, i8** %loceol, align 8
  %cmp414 = icmp ult i8* %244, %245
  br i1 %cmp414, label %land.rhs.416, label %land.end.437

land.rhs.416:                                     ; preds = %while.cond.413
  %246 = load i8*, i8** %scan, align 8
  %247 = load i8, i8* %246, align 1
  %conv417 = sext i8 %247 to i32
  %and418 = and i32 %conv417, -128
  %cmp419 = icmp eq i32 %and418, 0
  br i1 %cmp419, label %land.rhs.421, label %land.end.434

land.rhs.421:                                     ; preds = %land.rhs.416
  %248 = load i8*, i8** %scan, align 8
  %249 = load i8, i8* %248, align 1
  %conv422 = sext i8 %249 to i32
  %idxprom423 = sext i32 %conv422 to i64
  %call424 = call i16** @__ctype_b_loc()
  %250 = load i16*, i16** %call424, align 8
  %arrayidx425 = getelementptr inbounds i16, i16* %250, i64 %idxprom423
  %251 = load i16, i16* %arrayidx425, align 2
  %conv426 = zext i16 %251 to i32
  %and427 = and i32 %conv426, 8
  %tobool428 = icmp ne i32 %and427, 0
  br i1 %tobool428, label %lor.end.433, label %lor.rhs.429

lor.rhs.429:                                      ; preds = %land.rhs.421
  %252 = load i8*, i8** %scan, align 8
  %253 = load i8, i8* %252, align 1
  %conv430 = sext i8 %253 to i32
  %cmp431 = icmp eq i32 %conv430, 95
  br label %lor.end.433

lor.end.433:                                      ; preds = %lor.rhs.429, %land.rhs.421
  %254 = phi i1 [ true, %land.rhs.421 ], [ %cmp431, %lor.rhs.429 ]
  br label %land.end.434

land.end.434:                                     ; preds = %lor.end.433, %land.rhs.416
  %255 = phi i1 [ false, %land.rhs.416 ], [ %254, %lor.end.433 ]
  %lnot436 = xor i1 %255, true
  br label %land.end.437

land.end.437:                                     ; preds = %land.end.434, %while.cond.413
  %256 = phi i1 [ false, %while.cond.413 ], [ %lnot436, %land.end.434 ]
  br i1 %256, label %while.body.439, label %while.end.441

while.body.439:                                   ; preds = %land.end.437
  %257 = load i8*, i8** %scan, align 8
  %incdec.ptr440 = getelementptr inbounds i8, i8* %257, i32 1
  store i8* %incdec.ptr440, i8** %scan, align 8
  br label %while.cond.413

while.end.441:                                    ; preds = %land.end.437
  br label %if.end.442

if.end.442:                                       ; preds = %while.end.441, %while.end.411
  br label %sw.epilog

sw.bb.443:                                        ; preds = %if.end.4
  %258 = load i8, i8* %do_utf8, align 1
  %tobool444 = icmp ne i8 %258, 0
  br i1 %tobool444, label %if.then.445, label %if.else.474

if.then.445:                                      ; preds = %sw.bb.443
  %259 = load i8*, i8** @PL_regeol, align 8
  store i8* %259, i8** %loceol, align 8
  %260 = load %struct.sv*, %struct.sv** @PL_utf8_space, align 8
  %tobool446 = icmp ne %struct.sv* %260, null
  br i1 %tobool446, label %if.end.449, label %if.then.447

if.then.447:                                      ; preds = %if.then.445
  call void @Perl_push_scope()
  call void @Perl_save_re_context()
  %call448 = call signext i8 @Perl_is_utf8_space(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0))
  call void @Perl_pop_scope()
  br label %if.end.449

if.end.449:                                       ; preds = %if.then.447, %if.then.445
  br label %while.cond.450

while.cond.450:                                   ; preds = %while.body.466, %if.end.449
  %261 = load i32, i32* %hardcount, align 4
  %262 = load i32, i32* %max.addr, align 4
  %cmp451 = icmp slt i32 %261, %262
  br i1 %cmp451, label %land.lhs.true.453, label %land.end.464

land.lhs.true.453:                                ; preds = %while.cond.450
  %263 = load i8*, i8** %scan, align 8
  %264 = load i8*, i8** %loceol, align 8
  %cmp454 = icmp ult i8* %263, %264
  br i1 %cmp454, label %land.rhs.456, label %land.end.464

land.rhs.456:                                     ; preds = %land.lhs.true.453
  %265 = load i8*, i8** %scan, align 8
  %266 = load i8, i8* %265, align 1
  %conv457 = sext i8 %266 to i32
  %cmp458 = icmp eq i32 %conv457, 32
  br i1 %cmp458, label %lor.end.463, label %lor.rhs.460

lor.rhs.460:                                      ; preds = %land.rhs.456
  %267 = load %struct.sv*, %struct.sv** @PL_utf8_space, align 8
  %268 = load i8*, i8** %scan, align 8
  %269 = load i8, i8* %do_utf8, align 1
  %call461 = call i64 @Perl_swash_fetch(%struct.sv* %267, i8* %268, i8 signext %269)
  %tobool462 = icmp ne i64 %call461, 0
  br label %lor.end.463

lor.end.463:                                      ; preds = %lor.rhs.460, %land.rhs.456
  %270 = phi i1 [ true, %land.rhs.456 ], [ %tobool462, %lor.rhs.460 ]
  br label %land.end.464

land.end.464:                                     ; preds = %lor.end.463, %land.lhs.true.453, %while.cond.450
  %271 = phi i1 [ false, %land.lhs.true.453 ], [ false, %while.cond.450 ], [ %270, %lor.end.463 ]
  br i1 %271, label %while.body.466, label %while.end.473

while.body.466:                                   ; preds = %land.end.464
  %272 = load i8*, i8** %scan, align 8
  %273 = load i8, i8* %272, align 1
  %idxprom467 = zext i8 %273 to i64
  %arrayidx468 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom467
  %274 = load i8, i8* %arrayidx468, align 1
  %conv469 = zext i8 %274 to i32
  %275 = load i8*, i8** %scan, align 8
  %idx.ext470 = sext i32 %conv469 to i64
  %add.ptr471 = getelementptr inbounds i8, i8* %275, i64 %idx.ext470
  store i8* %add.ptr471, i8** %scan, align 8
  %276 = load i32, i32* %hardcount, align 4
  %inc472 = add nsw i32 %276, 1
  store i32 %inc472, i32* %hardcount, align 4
  br label %while.cond.450

while.end.473:                                    ; preds = %land.end.464
  br label %if.end.504

if.else.474:                                      ; preds = %sw.bb.443
  br label %while.cond.475

while.cond.475:                                   ; preds = %while.body.501, %if.else.474
  %277 = load i8*, i8** %scan, align 8
  %278 = load i8*, i8** %loceol, align 8
  %cmp476 = icmp ult i8* %277, %278
  br i1 %cmp476, label %land.rhs.478, label %land.end.499

land.rhs.478:                                     ; preds = %while.cond.475
  %279 = load i8*, i8** %scan, align 8
  %280 = load i8, i8* %279, align 1
  %conv479 = sext i8 %280 to i32
  %cmp480 = icmp eq i32 %conv479, 32
  br i1 %cmp480, label %lor.end.498, label %lor.lhs.false.482

lor.lhs.false.482:                                ; preds = %land.rhs.478
  %281 = load i8*, i8** %scan, align 8
  %282 = load i8, i8* %281, align 1
  %conv483 = sext i8 %282 to i32
  %cmp484 = icmp eq i32 %conv483, 9
  br i1 %cmp484, label %lor.end.498, label %lor.lhs.false.486

lor.lhs.false.486:                                ; preds = %lor.lhs.false.482
  %283 = load i8*, i8** %scan, align 8
  %284 = load i8, i8* %283, align 1
  %conv487 = sext i8 %284 to i32
  %cmp488 = icmp eq i32 %conv487, 10
  br i1 %cmp488, label %lor.end.498, label %lor.lhs.false.490

lor.lhs.false.490:                                ; preds = %lor.lhs.false.486
  %285 = load i8*, i8** %scan, align 8
  %286 = load i8, i8* %285, align 1
  %conv491 = sext i8 %286 to i32
  %cmp492 = icmp eq i32 %conv491, 13
  br i1 %cmp492, label %lor.end.498, label %lor.rhs.494

lor.rhs.494:                                      ; preds = %lor.lhs.false.490
  %287 = load i8*, i8** %scan, align 8
  %288 = load i8, i8* %287, align 1
  %conv495 = sext i8 %288 to i32
  %cmp496 = icmp eq i32 %conv495, 12
  br label %lor.end.498

lor.end.498:                                      ; preds = %lor.rhs.494, %lor.lhs.false.490, %lor.lhs.false.486, %lor.lhs.false.482, %land.rhs.478
  %289 = phi i1 [ true, %lor.lhs.false.490 ], [ true, %lor.lhs.false.486 ], [ true, %lor.lhs.false.482 ], [ true, %land.rhs.478 ], [ %cmp496, %lor.rhs.494 ]
  br label %land.end.499

land.end.499:                                     ; preds = %lor.end.498, %while.cond.475
  %290 = phi i1 [ false, %while.cond.475 ], [ %289, %lor.end.498 ]
  br i1 %290, label %while.body.501, label %while.end.503

while.body.501:                                   ; preds = %land.end.499
  %291 = load i8*, i8** %scan, align 8
  %incdec.ptr502 = getelementptr inbounds i8, i8* %291, i32 1
  store i8* %incdec.ptr502, i8** %scan, align 8
  br label %while.cond.475

while.end.503:                                    ; preds = %land.end.499
  br label %if.end.504

if.end.504:                                       ; preds = %while.end.503, %while.end.473
  br label %sw.epilog

sw.bb.505:                                        ; preds = %if.end.4
  %292 = load i32, i32* @PL_reg_flags, align 4
  %or506 = or i32 %292, 1
  store i32 %or506, i32* @PL_reg_flags, align 4
  %293 = load i8, i8* %do_utf8, align 1
  %tobool507 = icmp ne i8 %293, 0
  br i1 %tobool507, label %if.then.508, label %if.else.557

if.then.508:                                      ; preds = %sw.bb.505
  %294 = load i8*, i8** @PL_regeol, align 8
  store i8* %294, i8** %loceol, align 8
  br label %while.cond.509

while.cond.509:                                   ; preds = %while.body.549, %if.then.508
  %295 = load i32, i32* %hardcount, align 4
  %296 = load i32, i32* %max.addr, align 4
  %cmp510 = icmp slt i32 %295, %296
  br i1 %cmp510, label %land.lhs.true.512, label %land.end.547

land.lhs.true.512:                                ; preds = %while.cond.509
  %297 = load i8*, i8** %scan, align 8
  %298 = load i8*, i8** %loceol, align 8
  %cmp513 = icmp ult i8* %297, %298
  br i1 %cmp513, label %land.rhs.515, label %land.end.547

land.rhs.515:                                     ; preds = %land.lhs.true.512
  %299 = load i8*, i8** %scan, align 8
  %300 = load i8, i8* %299, align 1
  %conv516 = sext i8 %300 to i32
  %cmp517 = icmp eq i32 %conv516, 32
  br i1 %cmp517, label %lor.end.546, label %lor.rhs.519

lor.rhs.519:                                      ; preds = %land.rhs.515
  %301 = load i8*, i8** %scan, align 8
  %call520 = call i64 @Perl_utf8_to_uvchr(i8* %301, i64* null)
  %cmp521 = icmp ult i64 %call520, 256
  br i1 %cmp521, label %cond.true.523, label %cond.false.539

cond.true.523:                                    ; preds = %lor.rhs.519
  %302 = load i8*, i8** %scan, align 8
  %call524 = call i64 @Perl_utf8_to_uvchr(i8* %302, i64* null)
  %and525 = and i64 %call524, -128
  %cmp526 = icmp eq i64 %and525, 0
  br i1 %cmp526, label %land.rhs.528, label %land.end.537

land.rhs.528:                                     ; preds = %cond.true.523
  %303 = load i8*, i8** %scan, align 8
  %call529 = call i64 @Perl_utf8_to_uvchr(i8* %303, i64* null)
  %conv530 = trunc i64 %call529 to i32
  %idxprom531 = sext i32 %conv530 to i64
  %call532 = call i16** @__ctype_b_loc()
  %304 = load i16*, i16** %call532, align 8
  %arrayidx533 = getelementptr inbounds i16, i16* %304, i64 %idxprom531
  %305 = load i16, i16* %arrayidx533, align 2
  %conv534 = zext i16 %305 to i32
  %and535 = and i32 %conv534, 8192
  %tobool536 = icmp ne i32 %and535, 0
  br label %land.end.537

land.end.537:                                     ; preds = %land.rhs.528, %cond.true.523
  %306 = phi i1 [ false, %cond.true.523 ], [ %tobool536, %land.rhs.528 ]
  %land.ext538 = zext i1 %306 to i32
  br label %cond.end.543

cond.false.539:                                   ; preds = %lor.rhs.519
  %307 = load i8*, i8** %scan, align 8
  %call540 = call i64 @Perl_utf8_to_uvchr(i8* %307, i64* null)
  %call541 = call signext i8 @Perl_is_uni_space_lc(i64 %call540)
  %conv542 = sext i8 %call541 to i32
  br label %cond.end.543

cond.end.543:                                     ; preds = %cond.false.539, %land.end.537
  %cond544 = phi i32 [ %land.ext538, %land.end.537 ], [ %conv542, %cond.false.539 ]
  %tobool545 = icmp ne i32 %cond544, 0
  br label %lor.end.546

lor.end.546:                                      ; preds = %cond.end.543, %land.rhs.515
  %308 = phi i1 [ true, %land.rhs.515 ], [ %tobool545, %cond.end.543 ]
  br label %land.end.547

land.end.547:                                     ; preds = %lor.end.546, %land.lhs.true.512, %while.cond.509
  %309 = phi i1 [ false, %land.lhs.true.512 ], [ false, %while.cond.509 ], [ %308, %lor.end.546 ]
  br i1 %309, label %while.body.549, label %while.end.556

while.body.549:                                   ; preds = %land.end.547
  %310 = load i8*, i8** %scan, align 8
  %311 = load i8, i8* %310, align 1
  %idxprom550 = zext i8 %311 to i64
  %arrayidx551 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom550
  %312 = load i8, i8* %arrayidx551, align 1
  %conv552 = zext i8 %312 to i32
  %313 = load i8*, i8** %scan, align 8
  %idx.ext553 = sext i32 %conv552 to i64
  %add.ptr554 = getelementptr inbounds i8, i8* %313, i64 %idx.ext553
  store i8* %add.ptr554, i8** %scan, align 8
  %314 = load i32, i32* %hardcount, align 4
  %inc555 = add nsw i32 %314, 1
  store i32 %inc555, i32* %hardcount, align 4
  br label %while.cond.509

while.end.556:                                    ; preds = %land.end.547
  br label %if.end.581

if.else.557:                                      ; preds = %sw.bb.505
  br label %while.cond.558

while.cond.558:                                   ; preds = %while.body.578, %if.else.557
  %315 = load i8*, i8** %scan, align 8
  %316 = load i8*, i8** %loceol, align 8
  %cmp559 = icmp ult i8* %315, %316
  br i1 %cmp559, label %land.rhs.561, label %land.end.576

land.rhs.561:                                     ; preds = %while.cond.558
  %317 = load i8*, i8** %scan, align 8
  %318 = load i8, i8* %317, align 1
  %conv562 = sext i8 %318 to i32
  %and563 = and i32 %conv562, -128
  %cmp564 = icmp eq i32 %and563, 0
  br i1 %cmp564, label %land.rhs.566, label %land.end.574

land.rhs.566:                                     ; preds = %land.rhs.561
  %319 = load i8*, i8** %scan, align 8
  %320 = load i8, i8* %319, align 1
  %conv567 = sext i8 %320 to i32
  %idxprom568 = sext i32 %conv567 to i64
  %call569 = call i16** @__ctype_b_loc()
  %321 = load i16*, i16** %call569, align 8
  %arrayidx570 = getelementptr inbounds i16, i16* %321, i64 %idxprom568
  %322 = load i16, i16* %arrayidx570, align 2
  %conv571 = zext i16 %322 to i32
  %and572 = and i32 %conv571, 8192
  %tobool573 = icmp ne i32 %and572, 0
  br label %land.end.574

land.end.574:                                     ; preds = %land.rhs.566, %land.rhs.561
  %323 = phi i1 [ false, %land.rhs.561 ], [ %tobool573, %land.rhs.566 ]
  br label %land.end.576

land.end.576:                                     ; preds = %land.end.574, %while.cond.558
  %324 = phi i1 [ false, %while.cond.558 ], [ %323, %land.end.574 ]
  br i1 %324, label %while.body.578, label %while.end.580

while.body.578:                                   ; preds = %land.end.576
  %325 = load i8*, i8** %scan, align 8
  %incdec.ptr579 = getelementptr inbounds i8, i8* %325, i32 1
  store i8* %incdec.ptr579, i8** %scan, align 8
  br label %while.cond.558

while.end.580:                                    ; preds = %land.end.576
  br label %if.end.581

if.end.581:                                       ; preds = %while.end.580, %while.end.556
  br label %sw.epilog

sw.bb.582:                                        ; preds = %if.end.4
  %326 = load i8, i8* %do_utf8, align 1
  %tobool583 = icmp ne i8 %326, 0
  br i1 %tobool583, label %if.then.584, label %if.else.614

if.then.584:                                      ; preds = %sw.bb.582
  %327 = load i8*, i8** @PL_regeol, align 8
  store i8* %327, i8** %loceol, align 8
  %328 = load %struct.sv*, %struct.sv** @PL_utf8_space, align 8
  %tobool585 = icmp ne %struct.sv* %328, null
  br i1 %tobool585, label %if.end.588, label %if.then.586

if.then.586:                                      ; preds = %if.then.584
  call void @Perl_push_scope()
  call void @Perl_save_re_context()
  %call587 = call signext i8 @Perl_is_utf8_space(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0))
  call void @Perl_pop_scope()
  br label %if.end.588

if.end.588:                                       ; preds = %if.then.586, %if.then.584
  br label %while.cond.589

while.cond.589:                                   ; preds = %while.body.606, %if.end.588
  %329 = load i32, i32* %hardcount, align 4
  %330 = load i32, i32* %max.addr, align 4
  %cmp590 = icmp slt i32 %329, %330
  br i1 %cmp590, label %land.lhs.true.592, label %land.end.604

land.lhs.true.592:                                ; preds = %while.cond.589
  %331 = load i8*, i8** %scan, align 8
  %332 = load i8*, i8** %loceol, align 8
  %cmp593 = icmp ult i8* %331, %332
  br i1 %cmp593, label %land.rhs.595, label %land.end.604

land.rhs.595:                                     ; preds = %land.lhs.true.592
  %333 = load i8*, i8** %scan, align 8
  %334 = load i8, i8* %333, align 1
  %conv596 = sext i8 %334 to i32
  %cmp597 = icmp eq i32 %conv596, 32
  br i1 %cmp597, label %lor.end.602, label %lor.rhs.599

lor.rhs.599:                                      ; preds = %land.rhs.595
  %335 = load %struct.sv*, %struct.sv** @PL_utf8_space, align 8
  %336 = load i8*, i8** %scan, align 8
  %337 = load i8, i8* %do_utf8, align 1
  %call600 = call i64 @Perl_swash_fetch(%struct.sv* %335, i8* %336, i8 signext %337)
  %tobool601 = icmp ne i64 %call600, 0
  br label %lor.end.602

lor.end.602:                                      ; preds = %lor.rhs.599, %land.rhs.595
  %338 = phi i1 [ true, %land.rhs.595 ], [ %tobool601, %lor.rhs.599 ]
  %lnot603 = xor i1 %338, true
  br label %land.end.604

land.end.604:                                     ; preds = %lor.end.602, %land.lhs.true.592, %while.cond.589
  %339 = phi i1 [ false, %land.lhs.true.592 ], [ false, %while.cond.589 ], [ %lnot603, %lor.end.602 ]
  br i1 %339, label %while.body.606, label %while.end.613

while.body.606:                                   ; preds = %land.end.604
  %340 = load i8*, i8** %scan, align 8
  %341 = load i8, i8* %340, align 1
  %idxprom607 = zext i8 %341 to i64
  %arrayidx608 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom607
  %342 = load i8, i8* %arrayidx608, align 1
  %conv609 = zext i8 %342 to i32
  %343 = load i8*, i8** %scan, align 8
  %idx.ext610 = sext i32 %conv609 to i64
  %add.ptr611 = getelementptr inbounds i8, i8* %343, i64 %idx.ext610
  store i8* %add.ptr611, i8** %scan, align 8
  %344 = load i32, i32* %hardcount, align 4
  %inc612 = add nsw i32 %344, 1
  store i32 %inc612, i32* %hardcount, align 4
  br label %while.cond.589

while.end.613:                                    ; preds = %land.end.604
  br label %if.end.645

if.else.614:                                      ; preds = %sw.bb.582
  br label %while.cond.615

while.cond.615:                                   ; preds = %while.body.642, %if.else.614
  %345 = load i8*, i8** %scan, align 8
  %346 = load i8*, i8** %loceol, align 8
  %cmp616 = icmp ult i8* %345, %346
  br i1 %cmp616, label %land.rhs.618, label %land.end.640

land.rhs.618:                                     ; preds = %while.cond.615
  %347 = load i8*, i8** %scan, align 8
  %348 = load i8, i8* %347, align 1
  %conv619 = sext i8 %348 to i32
  %cmp620 = icmp eq i32 %conv619, 32
  br i1 %cmp620, label %lor.end.638, label %lor.lhs.false.622

lor.lhs.false.622:                                ; preds = %land.rhs.618
  %349 = load i8*, i8** %scan, align 8
  %350 = load i8, i8* %349, align 1
  %conv623 = sext i8 %350 to i32
  %cmp624 = icmp eq i32 %conv623, 9
  br i1 %cmp624, label %lor.end.638, label %lor.lhs.false.626

lor.lhs.false.626:                                ; preds = %lor.lhs.false.622
  %351 = load i8*, i8** %scan, align 8
  %352 = load i8, i8* %351, align 1
  %conv627 = sext i8 %352 to i32
  %cmp628 = icmp eq i32 %conv627, 10
  br i1 %cmp628, label %lor.end.638, label %lor.lhs.false.630

lor.lhs.false.630:                                ; preds = %lor.lhs.false.626
  %353 = load i8*, i8** %scan, align 8
  %354 = load i8, i8* %353, align 1
  %conv631 = sext i8 %354 to i32
  %cmp632 = icmp eq i32 %conv631, 13
  br i1 %cmp632, label %lor.end.638, label %lor.rhs.634

lor.rhs.634:                                      ; preds = %lor.lhs.false.630
  %355 = load i8*, i8** %scan, align 8
  %356 = load i8, i8* %355, align 1
  %conv635 = sext i8 %356 to i32
  %cmp636 = icmp eq i32 %conv635, 12
  br label %lor.end.638

lor.end.638:                                      ; preds = %lor.rhs.634, %lor.lhs.false.630, %lor.lhs.false.626, %lor.lhs.false.622, %land.rhs.618
  %357 = phi i1 [ true, %lor.lhs.false.630 ], [ true, %lor.lhs.false.626 ], [ true, %lor.lhs.false.622 ], [ true, %land.rhs.618 ], [ %cmp636, %lor.rhs.634 ]
  %lnot639 = xor i1 %357, true
  br label %land.end.640

land.end.640:                                     ; preds = %lor.end.638, %while.cond.615
  %358 = phi i1 [ false, %while.cond.615 ], [ %lnot639, %lor.end.638 ]
  br i1 %358, label %while.body.642, label %while.end.644

while.body.642:                                   ; preds = %land.end.640
  %359 = load i8*, i8** %scan, align 8
  %incdec.ptr643 = getelementptr inbounds i8, i8* %359, i32 1
  store i8* %incdec.ptr643, i8** %scan, align 8
  br label %while.cond.615

while.end.644:                                    ; preds = %land.end.640
  br label %sw.epilog

if.end.645:                                       ; preds = %while.end.613
  br label %sw.bb.646

sw.bb.646:                                        ; preds = %if.end.4, %if.end.645
  %360 = load i32, i32* @PL_reg_flags, align 4
  %or647 = or i32 %360, 1
  store i32 %or647, i32* @PL_reg_flags, align 4
  %361 = load i8, i8* %do_utf8, align 1
  %tobool648 = icmp ne i8 %361, 0
  br i1 %tobool648, label %if.then.649, label %if.else.699

if.then.649:                                      ; preds = %sw.bb.646
  %362 = load i8*, i8** @PL_regeol, align 8
  store i8* %362, i8** %loceol, align 8
  br label %while.cond.650

while.cond.650:                                   ; preds = %while.body.691, %if.then.649
  %363 = load i32, i32* %hardcount, align 4
  %364 = load i32, i32* %max.addr, align 4
  %cmp651 = icmp slt i32 %363, %364
  br i1 %cmp651, label %land.lhs.true.653, label %land.end.689

land.lhs.true.653:                                ; preds = %while.cond.650
  %365 = load i8*, i8** %scan, align 8
  %366 = load i8*, i8** %loceol, align 8
  %cmp654 = icmp ult i8* %365, %366
  br i1 %cmp654, label %land.rhs.656, label %land.end.689

land.rhs.656:                                     ; preds = %land.lhs.true.653
  %367 = load i8*, i8** %scan, align 8
  %368 = load i8, i8* %367, align 1
  %conv657 = sext i8 %368 to i32
  %cmp658 = icmp eq i32 %conv657, 32
  br i1 %cmp658, label %lor.end.687, label %lor.rhs.660

lor.rhs.660:                                      ; preds = %land.rhs.656
  %369 = load i8*, i8** %scan, align 8
  %call661 = call i64 @Perl_utf8_to_uvchr(i8* %369, i64* null)
  %cmp662 = icmp ult i64 %call661, 256
  br i1 %cmp662, label %cond.true.664, label %cond.false.680

cond.true.664:                                    ; preds = %lor.rhs.660
  %370 = load i8*, i8** %scan, align 8
  %call665 = call i64 @Perl_utf8_to_uvchr(i8* %370, i64* null)
  %and666 = and i64 %call665, -128
  %cmp667 = icmp eq i64 %and666, 0
  br i1 %cmp667, label %land.rhs.669, label %land.end.678

land.rhs.669:                                     ; preds = %cond.true.664
  %371 = load i8*, i8** %scan, align 8
  %call670 = call i64 @Perl_utf8_to_uvchr(i8* %371, i64* null)
  %conv671 = trunc i64 %call670 to i32
  %idxprom672 = sext i32 %conv671 to i64
  %call673 = call i16** @__ctype_b_loc()
  %372 = load i16*, i16** %call673, align 8
  %arrayidx674 = getelementptr inbounds i16, i16* %372, i64 %idxprom672
  %373 = load i16, i16* %arrayidx674, align 2
  %conv675 = zext i16 %373 to i32
  %and676 = and i32 %conv675, 8192
  %tobool677 = icmp ne i32 %and676, 0
  br label %land.end.678

land.end.678:                                     ; preds = %land.rhs.669, %cond.true.664
  %374 = phi i1 [ false, %cond.true.664 ], [ %tobool677, %land.rhs.669 ]
  %land.ext679 = zext i1 %374 to i32
  br label %cond.end.684

cond.false.680:                                   ; preds = %lor.rhs.660
  %375 = load i8*, i8** %scan, align 8
  %call681 = call i64 @Perl_utf8_to_uvchr(i8* %375, i64* null)
  %call682 = call signext i8 @Perl_is_uni_space_lc(i64 %call681)
  %conv683 = sext i8 %call682 to i32
  br label %cond.end.684

cond.end.684:                                     ; preds = %cond.false.680, %land.end.678
  %cond685 = phi i32 [ %land.ext679, %land.end.678 ], [ %conv683, %cond.false.680 ]
  %tobool686 = icmp ne i32 %cond685, 0
  br label %lor.end.687

lor.end.687:                                      ; preds = %cond.end.684, %land.rhs.656
  %376 = phi i1 [ true, %land.rhs.656 ], [ %tobool686, %cond.end.684 ]
  %lnot688 = xor i1 %376, true
  br label %land.end.689

land.end.689:                                     ; preds = %lor.end.687, %land.lhs.true.653, %while.cond.650
  %377 = phi i1 [ false, %land.lhs.true.653 ], [ false, %while.cond.650 ], [ %lnot688, %lor.end.687 ]
  br i1 %377, label %while.body.691, label %while.end.698

while.body.691:                                   ; preds = %land.end.689
  %378 = load i8*, i8** %scan, align 8
  %379 = load i8, i8* %378, align 1
  %idxprom692 = zext i8 %379 to i64
  %arrayidx693 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom692
  %380 = load i8, i8* %arrayidx693, align 1
  %conv694 = zext i8 %380 to i32
  %381 = load i8*, i8** %scan, align 8
  %idx.ext695 = sext i32 %conv694 to i64
  %add.ptr696 = getelementptr inbounds i8, i8* %381, i64 %idx.ext695
  store i8* %add.ptr696, i8** %scan, align 8
  %382 = load i32, i32* %hardcount, align 4
  %inc697 = add nsw i32 %382, 1
  store i32 %inc697, i32* %hardcount, align 4
  br label %while.cond.650

while.end.698:                                    ; preds = %land.end.689
  br label %if.end.724

if.else.699:                                      ; preds = %sw.bb.646
  br label %while.cond.700

while.cond.700:                                   ; preds = %while.body.721, %if.else.699
  %383 = load i8*, i8** %scan, align 8
  %384 = load i8*, i8** %loceol, align 8
  %cmp701 = icmp ult i8* %383, %384
  br i1 %cmp701, label %land.rhs.703, label %land.end.719

land.rhs.703:                                     ; preds = %while.cond.700
  %385 = load i8*, i8** %scan, align 8
  %386 = load i8, i8* %385, align 1
  %conv704 = sext i8 %386 to i32
  %and705 = and i32 %conv704, -128
  %cmp706 = icmp eq i32 %and705, 0
  br i1 %cmp706, label %land.rhs.708, label %land.end.716

land.rhs.708:                                     ; preds = %land.rhs.703
  %387 = load i8*, i8** %scan, align 8
  %388 = load i8, i8* %387, align 1
  %conv709 = sext i8 %388 to i32
  %idxprom710 = sext i32 %conv709 to i64
  %call711 = call i16** @__ctype_b_loc()
  %389 = load i16*, i16** %call711, align 8
  %arrayidx712 = getelementptr inbounds i16, i16* %389, i64 %idxprom710
  %390 = load i16, i16* %arrayidx712, align 2
  %conv713 = zext i16 %390 to i32
  %and714 = and i32 %conv713, 8192
  %tobool715 = icmp ne i32 %and714, 0
  br label %land.end.716

land.end.716:                                     ; preds = %land.rhs.708, %land.rhs.703
  %391 = phi i1 [ false, %land.rhs.703 ], [ %tobool715, %land.rhs.708 ]
  %lnot718 = xor i1 %391, true
  br label %land.end.719

land.end.719:                                     ; preds = %land.end.716, %while.cond.700
  %392 = phi i1 [ false, %while.cond.700 ], [ %lnot718, %land.end.716 ]
  br i1 %392, label %while.body.721, label %while.end.723

while.body.721:                                   ; preds = %land.end.719
  %393 = load i8*, i8** %scan, align 8
  %incdec.ptr722 = getelementptr inbounds i8, i8* %393, i32 1
  store i8* %incdec.ptr722, i8** %scan, align 8
  br label %while.cond.700

while.end.723:                                    ; preds = %land.end.719
  br label %if.end.724

if.end.724:                                       ; preds = %while.end.723, %while.end.698
  br label %sw.epilog

sw.bb.725:                                        ; preds = %if.end.4
  %394 = load i8, i8* %do_utf8, align 1
  %tobool726 = icmp ne i8 %394, 0
  br i1 %tobool726, label %if.then.727, label %if.else.751

if.then.727:                                      ; preds = %sw.bb.725
  %395 = load i8*, i8** @PL_regeol, align 8
  store i8* %395, i8** %loceol, align 8
  %396 = load %struct.sv*, %struct.sv** @PL_utf8_digit, align 8
  %tobool728 = icmp ne %struct.sv* %396, null
  br i1 %tobool728, label %if.end.731, label %if.then.729

if.then.729:                                      ; preds = %if.then.727
  call void @Perl_push_scope()
  call void @Perl_save_re_context()
  %call730 = call signext i8 @Perl_is_utf8_digit(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
  call void @Perl_pop_scope()
  br label %if.end.731

if.end.731:                                       ; preds = %if.then.729, %if.then.727
  br label %while.cond.732

while.cond.732:                                   ; preds = %while.body.743, %if.end.731
  %397 = load i32, i32* %hardcount, align 4
  %398 = load i32, i32* %max.addr, align 4
  %cmp733 = icmp slt i32 %397, %398
  br i1 %cmp733, label %land.lhs.true.735, label %land.end.741

land.lhs.true.735:                                ; preds = %while.cond.732
  %399 = load i8*, i8** %scan, align 8
  %400 = load i8*, i8** %loceol, align 8
  %cmp736 = icmp ult i8* %399, %400
  br i1 %cmp736, label %land.rhs.738, label %land.end.741

land.rhs.738:                                     ; preds = %land.lhs.true.735
  %401 = load %struct.sv*, %struct.sv** @PL_utf8_digit, align 8
  %402 = load i8*, i8** %scan, align 8
  %403 = load i8, i8* %do_utf8, align 1
  %call739 = call i64 @Perl_swash_fetch(%struct.sv* %401, i8* %402, i8 signext %403)
  %tobool740 = icmp ne i64 %call739, 0
  br label %land.end.741

land.end.741:                                     ; preds = %land.rhs.738, %land.lhs.true.735, %while.cond.732
  %404 = phi i1 [ false, %land.lhs.true.735 ], [ false, %while.cond.732 ], [ %tobool740, %land.rhs.738 ]
  br i1 %404, label %while.body.743, label %while.end.750

while.body.743:                                   ; preds = %land.end.741
  %405 = load i8*, i8** %scan, align 8
  %406 = load i8, i8* %405, align 1
  %idxprom744 = zext i8 %406 to i64
  %arrayidx745 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom744
  %407 = load i8, i8* %arrayidx745, align 1
  %conv746 = zext i8 %407 to i32
  %408 = load i8*, i8** %scan, align 8
  %idx.ext747 = sext i32 %conv746 to i64
  %add.ptr748 = getelementptr inbounds i8, i8* %408, i64 %idx.ext747
  store i8* %add.ptr748, i8** %scan, align 8
  %409 = load i32, i32* %hardcount, align 4
  %inc749 = add nsw i32 %409, 1
  store i32 %inc749, i32* %hardcount, align 4
  br label %while.cond.732

while.end.750:                                    ; preds = %land.end.741
  br label %if.end.770

if.else.751:                                      ; preds = %sw.bb.725
  br label %while.cond.752

while.cond.752:                                   ; preds = %while.body.767, %if.else.751
  %410 = load i8*, i8** %scan, align 8
  %411 = load i8*, i8** %loceol, align 8
  %cmp753 = icmp ult i8* %410, %411
  br i1 %cmp753, label %land.rhs.755, label %land.end.765

land.rhs.755:                                     ; preds = %while.cond.752
  %412 = load i8*, i8** %scan, align 8
  %413 = load i8, i8* %412, align 1
  %conv756 = sext i8 %413 to i32
  %cmp757 = icmp sge i32 %conv756, 48
  br i1 %cmp757, label %land.rhs.759, label %land.end.763

land.rhs.759:                                     ; preds = %land.rhs.755
  %414 = load i8*, i8** %scan, align 8
  %415 = load i8, i8* %414, align 1
  %conv760 = sext i8 %415 to i32
  %cmp761 = icmp sle i32 %conv760, 57
  br label %land.end.763

land.end.763:                                     ; preds = %land.rhs.759, %land.rhs.755
  %416 = phi i1 [ false, %land.rhs.755 ], [ %cmp761, %land.rhs.759 ]
  br label %land.end.765

land.end.765:                                     ; preds = %land.end.763, %while.cond.752
  %417 = phi i1 [ false, %while.cond.752 ], [ %416, %land.end.763 ]
  br i1 %417, label %while.body.767, label %while.end.769

while.body.767:                                   ; preds = %land.end.765
  %418 = load i8*, i8** %scan, align 8
  %incdec.ptr768 = getelementptr inbounds i8, i8* %418, i32 1
  store i8* %incdec.ptr768, i8** %scan, align 8
  br label %while.cond.752

while.end.769:                                    ; preds = %land.end.765
  br label %if.end.770

if.end.770:                                       ; preds = %while.end.769, %while.end.750
  br label %sw.epilog

sw.bb.771:                                        ; preds = %if.end.4
  %419 = load i8, i8* %do_utf8, align 1
  %tobool772 = icmp ne i8 %419, 0
  br i1 %tobool772, label %if.then.773, label %if.else.798

if.then.773:                                      ; preds = %sw.bb.771
  %420 = load i8*, i8** @PL_regeol, align 8
  store i8* %420, i8** %loceol, align 8
  %421 = load %struct.sv*, %struct.sv** @PL_utf8_digit, align 8
  %tobool774 = icmp ne %struct.sv* %421, null
  br i1 %tobool774, label %if.end.777, label %if.then.775

if.then.775:                                      ; preds = %if.then.773
  call void @Perl_push_scope()
  call void @Perl_save_re_context()
  %call776 = call signext i8 @Perl_is_utf8_digit(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
  call void @Perl_pop_scope()
  br label %if.end.777

if.end.777:                                       ; preds = %if.then.775, %if.then.773
  br label %while.cond.778

while.cond.778:                                   ; preds = %while.body.790, %if.end.777
  %422 = load i32, i32* %hardcount, align 4
  %423 = load i32, i32* %max.addr, align 4
  %cmp779 = icmp slt i32 %422, %423
  br i1 %cmp779, label %land.lhs.true.781, label %land.end.788

land.lhs.true.781:                                ; preds = %while.cond.778
  %424 = load i8*, i8** %scan, align 8
  %425 = load i8*, i8** %loceol, align 8
  %cmp782 = icmp ult i8* %424, %425
  br i1 %cmp782, label %land.rhs.784, label %land.end.788

land.rhs.784:                                     ; preds = %land.lhs.true.781
  %426 = load %struct.sv*, %struct.sv** @PL_utf8_digit, align 8
  %427 = load i8*, i8** %scan, align 8
  %428 = load i8, i8* %do_utf8, align 1
  %call785 = call i64 @Perl_swash_fetch(%struct.sv* %426, i8* %427, i8 signext %428)
  %tobool786 = icmp ne i64 %call785, 0
  %lnot787 = xor i1 %tobool786, true
  br label %land.end.788

land.end.788:                                     ; preds = %land.rhs.784, %land.lhs.true.781, %while.cond.778
  %429 = phi i1 [ false, %land.lhs.true.781 ], [ false, %while.cond.778 ], [ %lnot787, %land.rhs.784 ]
  br i1 %429, label %while.body.790, label %while.end.797

while.body.790:                                   ; preds = %land.end.788
  %430 = load i8*, i8** %scan, align 8
  %431 = load i8, i8* %430, align 1
  %idxprom791 = zext i8 %431 to i64
  %arrayidx792 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom791
  %432 = load i8, i8* %arrayidx792, align 1
  %conv793 = zext i8 %432 to i32
  %433 = load i8*, i8** %scan, align 8
  %idx.ext794 = sext i32 %conv793 to i64
  %add.ptr795 = getelementptr inbounds i8, i8* %433, i64 %idx.ext794
  store i8* %add.ptr795, i8** %scan, align 8
  %434 = load i32, i32* %hardcount, align 4
  %inc796 = add nsw i32 %434, 1
  store i32 %inc796, i32* %hardcount, align 4
  br label %while.cond.778

while.end.797:                                    ; preds = %land.end.788
  br label %if.end.818

if.else.798:                                      ; preds = %sw.bb.771
  br label %while.cond.799

while.cond.799:                                   ; preds = %while.body.815, %if.else.798
  %435 = load i8*, i8** %scan, align 8
  %436 = load i8*, i8** %loceol, align 8
  %cmp800 = icmp ult i8* %435, %436
  br i1 %cmp800, label %land.rhs.802, label %land.end.813

land.rhs.802:                                     ; preds = %while.cond.799
  %437 = load i8*, i8** %scan, align 8
  %438 = load i8, i8* %437, align 1
  %conv803 = sext i8 %438 to i32
  %cmp804 = icmp sge i32 %conv803, 48
  br i1 %cmp804, label %land.rhs.806, label %land.end.810

land.rhs.806:                                     ; preds = %land.rhs.802
  %439 = load i8*, i8** %scan, align 8
  %440 = load i8, i8* %439, align 1
  %conv807 = sext i8 %440 to i32
  %cmp808 = icmp sle i32 %conv807, 57
  br label %land.end.810

land.end.810:                                     ; preds = %land.rhs.806, %land.rhs.802
  %441 = phi i1 [ false, %land.rhs.802 ], [ %cmp808, %land.rhs.806 ]
  %lnot812 = xor i1 %441, true
  br label %land.end.813

land.end.813:                                     ; preds = %land.end.810, %while.cond.799
  %442 = phi i1 [ false, %while.cond.799 ], [ %lnot812, %land.end.810 ]
  br i1 %442, label %while.body.815, label %while.end.817

while.body.815:                                   ; preds = %land.end.813
  %443 = load i8*, i8** %scan, align 8
  %incdec.ptr816 = getelementptr inbounds i8, i8* %443, i32 1
  store i8* %incdec.ptr816, i8** %scan, align 8
  br label %while.cond.799

while.end.817:                                    ; preds = %land.end.813
  br label %if.end.818

if.end.818:                                       ; preds = %while.end.817, %while.end.797
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.818, %if.end.770, %if.end.724, %while.end.644, %if.end.581, %if.end.504, %if.end.442, %if.end.358, %if.end.292, %if.end.211, %if.end.149, %while.end.106, %while.end.83, %while.end.62, %sw.bb.49, %if.end.48, %if.end.28
  %444 = load i32, i32* %hardcount, align 4
  %tobool819 = icmp ne i32 %444, 0
  br i1 %tobool819, label %if.then.820, label %if.else.821

if.then.820:                                      ; preds = %sw.epilog
  %445 = load i32, i32* %hardcount, align 4
  store i32 %445, i32* %c, align 4
  br label %if.end.826

if.else.821:                                      ; preds = %sw.epilog
  %446 = load i8*, i8** %scan, align 8
  %447 = load i8*, i8** @PL_reginput, align 8
  %sub.ptr.lhs.cast822 = ptrtoint i8* %446 to i64
  %sub.ptr.rhs.cast823 = ptrtoint i8* %447 to i64
  %sub.ptr.sub824 = sub i64 %sub.ptr.lhs.cast822, %sub.ptr.rhs.cast823
  %conv825 = trunc i64 %sub.ptr.sub824 to i32
  store i32 %conv825, i32* %c, align 4
  br label %if.end.826

if.end.826:                                       ; preds = %if.else.821, %if.then.820
  %448 = load i8*, i8** %scan, align 8
  store i8* %448, i8** @PL_reginput, align 8
  %449 = load i32, i32* %c, align 4
  ret i32 %449
}

; Function Attrs: nounwind uwtable
define internal i8* @S_regcp_set_to(i32 %ss) #0 {
entry:
  %ss.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i32 %ss, i32* %ss.addr, align 4
  %0 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %0, i32* %tmp, align 4
  %1 = load i32, i32* %ss.addr, align 4
  store i32 %1, i32* @PL_savestack_ix, align 4
  %call = call i8* @S_regcppop()
  %2 = load i32, i32* %tmp, align 4
  store i32 %2, i32* @PL_savestack_ix, align 4
  ret i8* null
}

; Function Attrs: nounwind uwtable
define internal i8* @S_reghopmaybe(i8* %s, i32 %off) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %off.addr = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  store i32 %off, i32* %off.addr, align 4
  %0 = load i8*, i8** %s.addr, align 8
  %1 = load i32, i32* %off.addr, align 4
  %2 = load i32, i32* %off.addr, align 4
  %cmp = icmp sge i32 %2, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load i8*, i8** @PL_regeol, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  %4 = load i8*, i8** @PL_bostr, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %3, %cond.true ], [ %4, %cond.false ]
  %call = call i8* @S_reghopmaybe3(i8* %0, i32 %1, i8* %cond)
  ret i8* %call
}

declare i32 @PerlIO_printf(%struct._PerlIO**, i8*, ...) #1

declare %struct._PerlIO** @Perl_PerlIO_stderr() #1

declare void @Perl_savestack_grow_cnt(i32) #1

declare %struct.sv* @Perl_newSVsv(%struct.sv*) #1

declare i64 @Perl_sv_utf8_upgrade_flags(%struct.sv*, i32) #1

declare signext i8 @Perl_sv_utf8_downgrade(%struct.sv*, i8 signext) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
