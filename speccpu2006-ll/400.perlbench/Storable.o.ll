; ModuleID = 'Storable.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.stcxt = type { i32, i32, %struct.hv*, %struct.av*, %struct.av*, i64, %struct.hv*, %struct.av*, %struct.hv*, i64, i64, i32, i32, i32, i32, %struct.sv*, i32, i32, i32, i32, %struct.extendable, %struct.extendable, %struct.extendable, %struct._PerlIO**, i32, i32, %struct.sv* (...)**, %struct.sv*, %struct.sv* }
%struct.av = type { %struct.xpvav*, i32, i32 }
%struct.xpvav = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.sv**, %struct.sv*, i8 }
%struct.magic = type { %struct.magic*, %struct.mgvtbl*, i16, i8, i8, %struct.sv*, i8*, i32 }
%struct.mgvtbl = type { i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*, %struct.sv*, i8*, i32)*, i32 (%struct.magic*, %struct.clone_params*)* }
%struct.clone_params = type { %struct.av*, i64, %struct.interpreter* }
%struct.interpreter = type { i8 }
%struct.hv = type { %struct.xpvhv*, i32, i32 }
%struct.xpvhv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, i32, %struct.he*, %struct.pmop*, i8* }
%struct.he = type { %struct.he*, %struct.hek*, %struct.sv* }
%struct.hek = type { i32, i32, [1 x i8] }
%struct.pmop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8, %struct.op*, %struct.op*, %struct.op*, %struct.op*, %struct.pmop*, %struct.regexp*, i32, i32, i8, %struct.hv* }
%struct.op = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8 }
%struct.regexp = type { i32*, i32*, %struct.regnode*, %struct.reg_substr_data*, i8*, %struct.reg_data*, i8*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, [1 x %struct.regnode] }
%struct.regnode = type { i8, i8, i16 }
%struct.reg_substr_data = type opaque
%struct.reg_data = type opaque
%struct.extendable = type { i8*, i64, i8*, i8* }
%struct._PerlIO = type opaque
%struct.sv = type { i8*, i32, i32 }
%struct.xpv = type { i8*, i64, i64 }
%struct.xrv = type { %struct.sv* }
%struct.xpvmg = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv* }
%struct.cv = type { %struct.xpvcv*, i32, i32 }
%struct.xpvcv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.hv*, %struct.op*, %struct.op*, {}*, %union.any, %struct.gv*, i8*, i64, %struct.av*, %struct.cv*, i16, i32 }
%union.any = type { i8* }
%struct.gv = type { %struct.xpvgv*, i32, i32 }
%struct.xpvgv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.gp*, i8*, i64, %struct.hv*, i8 }
%struct.gp = type { %struct.sv*, i32, %struct.io*, %struct.cv*, %struct.av*, %struct.hv*, %struct.gv*, %struct.cv*, i32, i32, i32, i8* }
%struct.io = type { %struct.xpvio*, i32, i32 }
%struct.xpvio = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct._PerlIO**, %struct._PerlIO**, %union.anon, i64, i64, i64, i64, i8*, %struct.gv*, i8*, %struct.gv*, i8*, %struct.gv*, i16, i8, i8 }
%union.anon = type { %struct.__dirstream* }
%struct.__dirstream = type opaque
%struct.xpviv = type { i8*, i64, i64, i64 }
%struct.xpvuv = type { i8*, i64, i64, i64 }
%struct.xpvnv = type { i8*, i64, i64, i64, double }

@Context_ptr = internal global %struct.stcxt* null, align 8
@PL_sv_undef = external global %struct.sv, align 8
@PL_stack_sp = external global %struct.sv**, align 8
@PL_stack_base = external global %struct.sv**, align 8
@PL_markstack_ptr = external global i32*, align 8
@.str = private unnamed_addr constant [36 x i8] c"Usage: Storable::Cxt::DESTROY(self)\00", align 1
@.str.1 = private unnamed_addr constant [34 x i8] c"Usage: Storable::init_perinterp()\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"Usage: Storable::pstore(f, obj)\00", align 1
@PL_op = external global %struct.op*, align 8
@PL_curpad = external global %struct.sv**, align 8
@.str.3 = private unnamed_addr constant [36 x i8] c"Usage: Storable::net_pstore(f, obj)\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"Usage: Storable::mstore(obj)\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"Usage: Storable::net_mstore(obj)\00", align 1
@.str.6 = private unnamed_addr constant [30 x i8] c"Usage: Storable::pretrieve(f)\00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"Usage: Storable::mretrieve(sv)\00", align 1
@.str.8 = private unnamed_addr constant [28 x i8] c"Usage: Storable::dclone(sv)\00", align 1
@.str.9 = private unnamed_addr constant [39 x i8] c"Usage: Storable::last_op_in_netorder()\00", align 1
@.str.10 = private unnamed_addr constant [30 x i8] c"Usage: Storable::is_storing()\00", align 1
@.str.11 = private unnamed_addr constant [33 x i8] c"Usage: Storable::is_retrieving()\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"Storable.c\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"Storable::Cxt::DESTROY\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c"Storable::init_perinterp\00", align 1
@.str.15 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.16 = private unnamed_addr constant [17 x i8] c"Storable::pstore\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c"$$\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"Storable::net_pstore\00", align 1
@.str.19 = private unnamed_addr constant [17 x i8] c"Storable::mstore\00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c"$\00", align 1
@.str.21 = private unnamed_addr constant [21 x i8] c"Storable::net_mstore\00", align 1
@.str.22 = private unnamed_addr constant [20 x i8] c"Storable::pretrieve\00", align 1
@.str.23 = private unnamed_addr constant [20 x i8] c"Storable::mretrieve\00", align 1
@.str.24 = private unnamed_addr constant [17 x i8] c"Storable::dclone\00", align 1
@.str.25 = private unnamed_addr constant [30 x i8] c"Storable::last_op_in_netorder\00", align 1
@.str.26 = private unnamed_addr constant [21 x i8] c"Storable::is_storing\00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"Storable::is_retrieving\00", align 1
@.str.28 = private unnamed_addr constant [20 x i8] c"Storable::drop_utf8\00", align 1
@PL_sv_yes = external global %struct.sv, align 8
@.str.29 = private unnamed_addr constant [16 x i8] c"Not a reference\00", align 1
@.str.30 = private unnamed_addr constant [14 x i8] c"Storable::Cxt\00", align 1
@magic_write.network_file_header = internal constant [6 x i8] c"pst0\05\06", align 1
@magic_write.file_header = internal constant [19 x i8] c"pst0\04\06\0812345678\04\08\08\08", align 16
@sv_store = internal global [8 x i32 (%struct.stcxt*, %struct.sv*)*] [i32 (%struct.stcxt*, %struct.sv*)* @store_ref, i32 (%struct.stcxt*, %struct.sv*)* @store_scalar, i32 (%struct.stcxt*, %struct.sv*)* bitcast (i32 (%struct.stcxt*, %struct.av*)* @store_array to i32 (%struct.stcxt*, %struct.sv*)*), i32 (%struct.stcxt*, %struct.sv*)* bitcast (i32 (%struct.stcxt*, %struct.hv*)* @store_hash to i32 (%struct.stcxt*, %struct.sv*)*), i32 (%struct.stcxt*, %struct.sv*)* @store_tied, i32 (%struct.stcxt*, %struct.sv*)* @store_tied_item, i32 (%struct.stcxt*, %struct.sv*)* bitcast (i32 (%struct.stcxt*, %struct.cv*)* @store_code to i32 (%struct.stcxt*, %struct.sv*)*), i32 (%struct.stcxt*, %struct.sv*)* @store_other], align 16
@.str.31 = private unnamed_addr constant [16 x i8] c"STORABLE_freeze\00", align 1
@.str.32 = private unnamed_addr constant [44 x i8] c"Unexpected object type (%d) in store_hook()\00", align 1
@.str.33 = private unnamed_addr constant [43 x i8] c"Too late to ignore hooks for %s class \22%s\22\00", align 1
@.str.34 = private unnamed_addr constant [8 x i8] c"cloning\00", align 1
@.str.35 = private unnamed_addr constant [8 x i8] c"storing\00", align 1
@.str.36 = private unnamed_addr constant [63 x i8] c"Item #%d returned by STORABLE_freeze for %s is not a reference\00", align 1
@.str.37 = private unnamed_addr constant [45 x i8] c"Could not serialize item #%d from hook in %s\00", align 1
@PL_Sv = external global %struct.sv*, align 8
@.str.38 = private unnamed_addr constant [59 x i8] c"No magic '%c' found while storing ref to tied %s with hook\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"hash\00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"array\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c"scalar\00", align 1
@PL_tmps_floor = external global i32, align 4
@PL_tmps_ix = external global i32, align 4
@PL_markstack_max = external global i32*, align 8
@PL_stack_max = external global %struct.sv**, align 8
@.str.42 = private unnamed_addr constant [31 x i8] c"Unable to record new classname\00", align 1
@PL_amagic_generation = external global i64, align 8
@PL_sv_no = external global %struct.sv, align 8
@.str.43 = private unnamed_addr constant [34 x i8] c"Can't determine type of %s(0x%lx)\00", align 1
@.str.44 = private unnamed_addr constant [20 x i8] c"Storable::canonical\00", align 1
@PL_Xpv = external global %struct.xpv*, align 8
@PL_sv_placeholder = external global %struct.sv, align 8
@.str.45 = private unnamed_addr constant [42 x i8] c"No magic '%c' found while storing tied %s\00", align 1
@.str.46 = private unnamed_addr constant [56 x i8] c"No magic 'p' found while storing reference to tied item\00", align 1
@.str.47 = private unnamed_addr constant [18 x i8] c"Storable::Deparse\00", align 1
@.str.48 = private unnamed_addr constant [11 x i8] c"B::Deparse\00", align 1
@.str.49 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@.str.50 = private unnamed_addr constant [46 x i8] c"Unexpected return value from B::Deparse::new\0A\00", align 1
@.str.51 = private unnamed_addr constant [13 x i8] c"coderef2text\00", align 1
@.str.52 = private unnamed_addr constant [55 x i8] c"Unexpected return value from B::Deparse::coderef2text\0A\00", align 1
@.str.53 = private unnamed_addr constant [101 x i8] c"The result of B::Deparse::coderef2text was empty - maybe you're trying to serialize an XS function?\0A\00", align 1
@store_other.buf = internal global [80 x i8] zeroinitializer, align 16
@.str.54 = private unnamed_addr constant [21 x i8] c"Storable::forgive_me\00", align 1
@.str.55 = private unnamed_addr constant [21 x i8] c"Can't store %s items\00", align 1
@.str.56 = private unnamed_addr constant [27 x i8] c"Can't store item %s(0x%lx)\00", align 1
@.str.57 = private unnamed_addr constant [21 x i8] c"You lost %s(0x%lx)%c\00", align 1
@.str.58 = private unnamed_addr constant [58 x i8] c"Frozen string corrupt - contains characters outside 0-255\00", align 1
@.str.59 = private unnamed_addr constant [20 x i8] c"Not a scalar string\00", align 1
@.str.60 = private unnamed_addr constant [44 x i8] c"Magic number checking on storable %s failed\00", align 1
@.str.61 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.62 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@magicstr = internal constant [5 x i8] c"pst0\00", align 1
@old_magicstr = internal constant [11 x i8] c"perl-store\00", align 1
@.str.63 = private unnamed_addr constant [28 x i8] c"File is not a perl storable\00", align 1
@sv_retrieve = internal global [28 x %struct.sv* (%struct.stcxt*, i8*)*] [%struct.sv* (%struct.stcxt*, i8*)* null, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_lscalar, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_array, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_hash, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_ref, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_undef, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_integer, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_double, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_byte, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_netint, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_scalar, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_tied_array, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_tied_hash, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_tied_scalar, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_sv_undef, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_sv_yes, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_sv_no, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_blessed, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_idx_blessed, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_hook, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_overloaded, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_tied_key, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_tied_idx, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_utf8str, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_lutf8str, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_flag_hash, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_code, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other], align 16
@sv_old_retrieve = internal global [28 x %struct.sv* (%struct.stcxt*, i8*)*] [%struct.sv* (%struct.stcxt*, i8*)* null, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_lscalar, %struct.sv* (%struct.stcxt*, i8*)* @old_retrieve_array, %struct.sv* (%struct.stcxt*, i8*)* @old_retrieve_hash, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_ref, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_undef, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_integer, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_double, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_byte, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_netint, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_scalar, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_tied_array, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_tied_hash, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_tied_scalar, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other, %struct.sv* (%struct.stcxt*, i8*)* @retrieve_other], align 16
@.str.64 = private unnamed_addr constant [30 x i8] c"Storable::accept_future_minor\00", align 1
@.str.65 = private unnamed_addr constant [60 x i8] c"Storable binary image v%d.%d more recent than I am (v%d.%d)\00", align 1
@byteorderstr = internal constant [9 x i8] c"12345678\00", align 1
@.str.66 = private unnamed_addr constant [29 x i8] c"Byte order is not compatible\00", align 1
@.str.67 = private unnamed_addr constant [31 x i8] c"Integer size is not compatible\00", align 1
@.str.68 = private unnamed_addr constant [36 x i8] c"Long integer size is not compatible\00", align 1
@.str.69 = private unnamed_addr constant [31 x i8] c"Pointer size is not compatible\00", align 1
@.str.70 = private unnamed_addr constant [30 x i8] c"Double size is not compatible\00", align 1
@PL_tainting = external global i8, align 1
@PL_tainted = external global i8, align 1
@.str.71 = private unnamed_addr constant [46 x i8] c"Class name #%ld should have been seen already\00", align 1
@.str.72 = private unnamed_addr constant [47 x i8] c"Object #%ld should have been retrieved already\00", align 1
@.str.73 = private unnamed_addr constant [14 x i8] c"STORABLE_thaw\00", align 1
@.str.74 = private unnamed_addr constant [9 x i8] c"require \00", align 1
@.str.75 = private unnamed_addr constant [78 x i8] c"No STORABLE_thaw defined for objects of class %s (even after a \22require %s;\22)\00", align 1
@.str.76 = private unnamed_addr constant [34 x i8] c"Forgot to deal with extra type %d\00", align 1
@.str.77 = private unnamed_addr constant [60 x i8] c"Cannot restore overloading on %s(0x%lx) (package <unknown>)\00", align 1
@.str.78 = private unnamed_addr constant [82 x i8] c"Cannot restore overloading on %s(0x%lx) (package %s) (even after a \22require %s;\22)\00", align 1
@.str.79 = private unnamed_addr constant [37 x i8] c"Unexpected type %d in retrieve_code\0A\00", align 1
@.str.80 = private unnamed_addr constant [5 x i8] c"sub \00", align 1
@.str.81 = private unnamed_addr constant [15 x i8] c"Storable::Eval\00", align 1
@.str.82 = private unnamed_addr constant [55 x i8] c"Can't eval, please set $Storable::Eval to a true value\00", align 1
@.str.83 = private unnamed_addr constant [2 x i8] c"@\00", align 1
@.str.84 = private unnamed_addr constant [55 x i8] c"Unexpected return value from $Storable::Eval callback\0A\00", align 1
@.str.85 = private unnamed_addr constant [28 x i8] c"code %s caused an error: %s\00", align 1
@.str.86 = private unnamed_addr constant [52 x i8] c"code %s did not evaluate to a subroutine reference\0A\00", align 1
@.str.87 = private unnamed_addr constant [57 x i8] c"Corrupted storable %s (binary v%d.%d), current is v%d.%d\00", align 1
@.str.88 = private unnamed_addr constant [38 x i8] c"Corrupted storable %s (binary v%d.%d)\00", align 1
@old_retrieve_hash.sv_h_undef = internal global %struct.sv* null, align 8
@.str.89 = private unnamed_addr constant [46 x i8] c"Old tag 0x%lx should have been mapped already\00", align 1
@.str.90 = private unnamed_addr constant [119 x i8] c"Storable binary image v%d.%d contains data of type %d. This Storable is v%d.%d and can only handle data types up to %d\00", align 1

; Function Attrs: nounwind uwtable
define i32 @is_storing() #0 {
entry:
  %cxt = alloca %struct.stcxt*, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** @Context_ptr, align 8
  store %struct.stcxt* %0, %struct.stcxt** %cxt, align 8
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %entry1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 0
  %2 = load i32, i32* %entry1, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %optype = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 1
  %4 = load i32, i32* %optype, align 4
  %and = and i32 %4, 1
  %tobool2 = icmp ne i32 %and, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ]
  %land.ext = zext i1 %5 to i32
  ret i32 %land.ext
}

; Function Attrs: nounwind uwtable
define i32 @is_retrieving() #0 {
entry:
  %cxt = alloca %struct.stcxt*, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** @Context_ptr, align 8
  store %struct.stcxt* %0, %struct.stcxt** %cxt, align 8
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %entry1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 0
  %2 = load i32, i32* %entry1, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %optype = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 1
  %4 = load i32, i32* %optype, align 4
  %and = and i32 %4, 2
  %tobool2 = icmp ne i32 %and, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ]
  %land.ext = zext i1 %5 to i32
  ret i32 %land.ext
}

; Function Attrs: nounwind uwtable
define i32 @last_op_in_netorder() #0 {
entry:
  %cxt = alloca %struct.stcxt*, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** @Context_ptr, align 8
  store %struct.stcxt* %0, %struct.stcxt** %cxt, align 8
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 11
  %2 = load i32, i32* %netorder, align 4
  ret i32 %2
}

; Function Attrs: nounwind uwtable
define i32 @pstore(%struct._PerlIO** %f, %struct.sv* %sv) #0 {
entry:
  %f.addr = alloca %struct._PerlIO**, align 8
  %sv.addr = alloca %struct.sv*, align 8
  store %struct._PerlIO** %f, %struct._PerlIO*** %f.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct._PerlIO**, %struct._PerlIO*** %f.addr, align 8
  %1 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call = call i32 @do_store(%struct._PerlIO** %0, %struct.sv* %1, i32 0, i32 0, %struct.sv** null)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @do_store(%struct._PerlIO** %f, %struct.sv* %sv, i32 %optype, i32 %network_order, %struct.sv** %res) #0 {
entry:
  %retval = alloca i32, align 4
  %f.addr = alloca %struct._PerlIO**, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %optype.addr = alloca i32, align 4
  %network_order.addr = alloca i32, align 4
  %res.addr = alloca %struct.sv**, align 8
  %cxt = alloca %struct.stcxt*, align 8
  %status = alloca i32, align 4
  store %struct._PerlIO** %f, %struct._PerlIO*** %f.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i32 %optype, i32* %optype.addr, align 4
  store i32 %network_order, i32* %network_order.addr, align 4
  store %struct.sv** %res, %struct.sv*** %res.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** @Context_ptr, align 8
  store %struct.stcxt* %0, %struct.stcxt** %cxt, align 8
  %1 = load i32, i32* %optype.addr, align 4
  %or = or i32 %1, 1
  store i32 %or, i32* %optype.addr, align 4
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 18
  %3 = load i32, i32* %s_dirty, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  call void @clean_context(%struct.stcxt* %4)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %entry1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 0
  %6 = load i32, i32* %entry1, align 4
  %tobool2 = icmp ne i32 %6, 0
  br i1 %tobool2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %call = call %struct.stcxt* @allocate_context(%struct.stcxt* %7)
  store %struct.stcxt* %call, %struct.stcxt** %cxt, align 8
  br label %if.end.4

if.end.4:                                         ; preds = %if.then.3, %if.end
  %8 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %entry5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %8, i32 0, i32 0
  %9 = load i32, i32* %entry5, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %entry5, align 4
  %10 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %10, i32 0, i32 2
  %11 = load i32, i32* %sv_flags, align 4
  %and = and i32 %11, 524288
  %tobool6 = icmp ne i32 %and, 0
  br i1 %tobool6, label %if.end.9, label %if.then.7

if.then.7:                                        ; preds = %if.end.4
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %s_dirty8 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 18
  store i32 1, i32* %s_dirty8, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i32 0, i32 0))
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.7, %if.end.4
  %13 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %13, i32 0, i32 0
  %14 = load i8*, i8** %sv_any, align 8
  %15 = bitcast i8* %14 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %15, i32 0, i32 0
  %16 = load %struct.sv*, %struct.sv** %xrv_rv, align 8
  store %struct.sv* %16, %struct.sv** %sv.addr, align 8
  %17 = load %struct._PerlIO**, %struct._PerlIO*** %f.addr, align 8
  %tobool10 = icmp ne %struct._PerlIO** %17, null
  br i1 %tobool10, label %if.end.27, label %if.then.11

if.then.11:                                       ; preds = %if.end.9
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 21
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 0
  %19 = load i8*, i8** %arena, align 8
  %tobool12 = icmp ne i8* %19, null
  br i1 %tobool12, label %if.end.18, label %if.then.13

if.then.13:                                       ; preds = %if.then.11
  %call14 = call i8* @Perl_safesysmalloc(i64 8192)
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf15 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %20, i32 0, i32 21
  %arena16 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf15, i32 0, i32 0
  store i8* %call14, i8** %arena16, align 8
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf17 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 21
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf17, i32 0, i32 1
  store i64 8192, i64* %asiz, align 8
  br label %if.end.18

if.end.18:                                        ; preds = %if.then.13, %if.then.11
  %22 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %22, i32 0, i32 21
  %arena20 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf19, i32 0, i32 0
  %23 = load i8*, i8** %arena20, align 8
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf21 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf21, i32 0, i32 2
  store i8* %23, i8** %aptr, align 8
  %25 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %25, i32 0, i32 21
  %arena23 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf22, i32 0, i32 0
  %26 = load i8*, i8** %arena23, align 8
  %27 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf24 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %27, i32 0, i32 21
  %asiz25 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf24, i32 0, i32 1
  %28 = load i64, i64* %asiz25, align 8
  %add.ptr = getelementptr inbounds i8, i8* %26, i64 %28
  %29 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf26 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %29, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf26, i32 0, i32 3
  store i8* %add.ptr, i8** %aend, align 8
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.18, %if.end.9
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %31 = load %struct._PerlIO**, %struct._PerlIO*** %f.addr, align 8
  %32 = load i32, i32* %optype.addr, align 4
  %33 = load i32, i32* %network_order.addr, align 4
  call void @init_store_context(%struct.stcxt* %30, %struct._PerlIO** %31, i32 %32, i32 %33)
  %34 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %call28 = call i32 @magic_write(%struct.stcxt* %34)
  %cmp = icmp eq i32 -1, %call28
  br i1 %cmp, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %if.end.27
  store i32 0, i32* %retval
  br label %return

if.end.30:                                        ; preds = %if.end.27
  %35 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %36 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call31 = call i32 @store(%struct.stcxt* %35, %struct.sv* %36)
  store i32 %call31, i32* %status, align 4
  %37 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %37, i32 0, i32 23
  %38 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool32 = icmp ne %struct._PerlIO** %38, null
  br i1 %tobool32, label %if.end.36, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end.30
  %39 = load %struct.sv**, %struct.sv*** %res.addr, align 8
  %tobool33 = icmp ne %struct.sv** %39, null
  br i1 %tobool33, label %if.then.34, label %if.end.36

if.then.34:                                       ; preds = %land.lhs.true
  %call35 = call %struct.sv* @mbuf2sv()
  %40 = load %struct.sv**, %struct.sv*** %res.addr, align 8
  store %struct.sv* %call35, %struct.sv** %40, align 8
  br label %if.end.36

if.end.36:                                        ; preds = %if.then.34, %land.lhs.true, %if.end.30
  %41 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  call void @clean_store_context(%struct.stcxt* %41)
  %42 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %prev = getelementptr inbounds %struct.stcxt, %struct.stcxt* %42, i32 0, i32 27
  %43 = load %struct.sv*, %struct.sv** %prev, align 8
  %tobool37 = icmp ne %struct.sv* %43, null
  br i1 %tobool37, label %land.lhs.true.38, label %if.end.43

land.lhs.true.38:                                 ; preds = %if.end.36
  %44 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %optype39 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %44, i32 0, i32 1
  %45 = load i32, i32* %optype39, align 4
  %and40 = and i32 %45, 4
  %tobool41 = icmp ne i32 %and40, 0
  br i1 %tobool41, label %if.end.43, label %if.then.42

if.then.42:                                       ; preds = %land.lhs.true.38
  %46 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  call void @free_context(%struct.stcxt* %46)
  br label %if.end.43

if.end.43:                                        ; preds = %if.then.42, %land.lhs.true.38, %if.end.36
  %47 = load i32, i32* %status, align 4
  %cmp44 = icmp eq i32 %47, 0
  %conv = zext i1 %cmp44 to i32
  store i32 %conv, i32* %retval
  br label %return

return:                                           ; preds = %if.end.43, %if.then.29
  %48 = load i32, i32* %retval
  ret i32 %48
}

; Function Attrs: nounwind uwtable
define i32 @net_pstore(%struct._PerlIO** %f, %struct.sv* %sv) #0 {
entry:
  %f.addr = alloca %struct._PerlIO**, align 8
  %sv.addr = alloca %struct.sv*, align 8
  store %struct._PerlIO** %f, %struct._PerlIO*** %f.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct._PerlIO**, %struct._PerlIO*** %f.addr, align 8
  %1 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call = call i32 @do_store(%struct._PerlIO** %0, %struct.sv* %1, i32 0, i32 1, %struct.sv** null)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define %struct.sv* @mstore(%struct.sv* %sv) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %out = alloca %struct.sv*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call = call i32 @do_store(%struct._PerlIO** null, %struct.sv* %0, i32 0, i32 0, %struct.sv** %out)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.sv* @PL_sv_undef, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.sv*, %struct.sv** %out, align 8
  store %struct.sv* %1, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %2 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %2
}

; Function Attrs: nounwind uwtable
define %struct.sv* @net_mstore(%struct.sv* %sv) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %out = alloca %struct.sv*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call = call i32 @do_store(%struct._PerlIO** null, %struct.sv* %0, i32 0, i32 1, %struct.sv** %out)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.sv* @PL_sv_undef, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.sv*, %struct.sv** %out, align 8
  store %struct.sv* %1, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %2 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %2
}

; Function Attrs: nounwind uwtable
define %struct.sv* @pretrieve(%struct._PerlIO** %f) #0 {
entry:
  %f.addr = alloca %struct._PerlIO**, align 8
  store %struct._PerlIO** %f, %struct._PerlIO*** %f.addr, align 8
  %0 = load %struct._PerlIO**, %struct._PerlIO*** %f.addr, align 8
  %call = call %struct.sv* @do_retrieve(%struct._PerlIO** %0, %struct.sv* null, i32 0)
  ret %struct.sv* %call
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @do_retrieve(%struct._PerlIO** %f, %struct.sv* %in, i32 %optype) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %f.addr = alloca %struct._PerlIO**, align 8
  %in.addr = alloca %struct.sv*, align 8
  %optype.addr = alloca i32, align 4
  %cxt = alloca %struct.stcxt*, align 8
  %sv = alloca %struct.sv*, align 8
  %is_tainted = alloca i32, align 4
  %pre_06_fmt = alloca i32, align 4
  %length = alloca i64, align 8
  %orig = alloca i8*, align 8
  %asbytes = alloca i8*, align 8
  %klen_tmp = alloca i64, align 8
  %is_utf8 = alloca i8, align 1
  %tmp = alloca i8*, align 8
  %rv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %rv140 = alloca %struct.sv*, align 8
  store %struct._PerlIO** %f, %struct._PerlIO*** %f.addr, align 8
  store %struct.sv* %in, %struct.sv** %in.addr, align 8
  store i32 %optype, i32* %optype.addr, align 4
  %0 = load %struct.stcxt*, %struct.stcxt** @Context_ptr, align 8
  store %struct.stcxt* %0, %struct.stcxt** %cxt, align 8
  store i32 0, i32* %pre_06_fmt, align 4
  %1 = load i32, i32* %optype.addr, align 4
  %or = or i32 %1, 2
  store i32 %or, i32* %optype.addr, align 4
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 18
  %3 = load i32, i32* %s_dirty, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  call void @clean_context(%struct.stcxt* %4)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %entry1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 0
  %6 = load i32, i32* %entry1, align 4
  %tobool2 = icmp ne i32 %6, 0
  br i1 %tobool2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %call = call %struct.stcxt* @allocate_context(%struct.stcxt* %7)
  store %struct.stcxt* %call, %struct.stcxt** %cxt, align 8
  br label %if.end.4

if.end.4:                                         ; preds = %if.then.3, %if.end
  %8 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %entry5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %8, i32 0, i32 0
  %9 = load i32, i32* %entry5, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %entry5, align 4
  %10 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %keybuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %10, i32 0, i32 20
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf, i32 0, i32 0
  %11 = load i8*, i8** %arena, align 8
  %tobool6 = icmp ne i8* %11, null
  br i1 %tobool6, label %if.end.12, label %if.then.7

if.then.7:                                        ; preds = %if.end.4
  %call8 = call i8* @Perl_safesysmalloc(i64 128)
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %keybuf9 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 20
  %arena10 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf9, i32 0, i32 0
  store i8* %call8, i8** %arena10, align 8
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %keybuf11 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 20
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf11, i32 0, i32 1
  store i64 128, i64* %asiz, align 8
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.7, %if.end.4
  %14 = load %struct._PerlIO**, %struct._PerlIO*** %f.addr, align 8
  %tobool13 = icmp ne %struct._PerlIO** %14, null
  br i1 %tobool13, label %if.end.75, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end.12
  %15 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %tobool14 = icmp ne %struct.sv* %15, null
  br i1 %tobool14, label %if.then.15, label %if.end.75

if.then.15:                                       ; preds = %land.lhs.true
  %16 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 2
  %17 = load i32, i32* %sv_flags, align 4
  %and = and i32 %17, 536870912
  %tobool16 = icmp ne i32 %and, 0
  br i1 %tobool16, label %if.then.17, label %if.end.43

if.then.17:                                       ; preds = %if.then.15
  %18 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_flags18 = getelementptr inbounds %struct.sv, %struct.sv* %18, i32 0, i32 2
  %19 = load i32, i32* %sv_flags18, align 4
  %and19 = and i32 %19, 262144
  %cmp = icmp eq i32 %and19, 262144
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.17
  %20 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %20, i32 0, i32 0
  %21 = load i8*, i8** %sv_any, align 8
  %22 = bitcast i8* %21 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %22, i32 0, i32 1
  %23 = load i64, i64* %xpv_cur, align 8
  store i64 %23, i64* %length, align 8
  %24 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_any20 = getelementptr inbounds %struct.sv, %struct.sv* %24, i32 0, i32 0
  %25 = load i8*, i8** %sv_any20, align 8
  %26 = bitcast i8* %25 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %26, i32 0, i32 0
  %27 = load i8*, i8** %xpv_pv, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then.17
  %28 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %call21 = call i8* @Perl_sv_2pv_flags(%struct.sv* %28, i64* %length, i32 2)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %27, %cond.true ], [ %call21, %cond.false ]
  store i8* %cond, i8** %orig, align 8
  %29 = load i64, i64* %length, align 8
  %add = add i64 %29, 1
  store i64 %add, i64* %klen_tmp, align 8
  store i8 1, i8* %is_utf8, align 1
  %30 = load i8*, i8** %orig, align 8
  %call22 = call i8* @Perl_bytes_from_utf8(i8* %30, i64* %klen_tmp, i8* %is_utf8)
  store i8* %call22, i8** %asbytes, align 8
  %31 = load i8, i8* %is_utf8, align 1
  %tobool23 = icmp ne i8 %31, 0
  br i1 %tobool23, label %if.then.24, label %if.end.26

if.then.24:                                       ; preds = %cond.end
  %32 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %s_dirty25 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %32, i32 0, i32 18
  store i32 1, i32* %s_dirty25, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.58, i32 0, i32 0))
  br label %if.end.26

if.end.26:                                        ; preds = %if.then.24, %cond.end
  %33 = load i8*, i8** %asbytes, align 8
  %34 = load i8*, i8** %orig, align 8
  %cmp27 = icmp ne i8* %33, %34
  br i1 %cmp27, label %if.then.28, label %if.end.42

if.then.28:                                       ; preds = %if.end.26
  %call29 = call %struct.sv* @Perl_sv_newmortal()
  store %struct.sv* %call29, %struct.sv** %in.addr, align 8
  %35 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_flags30 = getelementptr inbounds %struct.sv, %struct.sv* %35, i32 0, i32 2
  %36 = load i32, i32* %sv_flags30, align 4
  %and31 = and i32 %36, 255
  %cmp32 = icmp uge i32 %and31, 4
  br i1 %cmp32, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then.28
  %37 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %call33 = call signext i8 @Perl_sv_upgrade(%struct.sv* %37, i32 4)
  %conv = sext i8 %call33 to i32
  %tobool34 = icmp ne i32 %conv, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.then.28
  %38 = phi i1 [ true, %if.then.28 ], [ %tobool34, %lor.rhs ]
  %lor.ext = zext i1 %38 to i32
  %39 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_flags35 = getelementptr inbounds %struct.sv, %struct.sv* %39, i32 0, i32 2
  %40 = load i32, i32* %sv_flags35, align 4
  %or36 = or i32 %40, 67371008
  store i32 %or36, i32* %sv_flags35, align 4
  %41 = load i8*, i8** %asbytes, align 8
  %42 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_any37 = getelementptr inbounds %struct.sv, %struct.sv* %42, i32 0, i32 0
  %43 = load i8*, i8** %sv_any37, align 8
  %44 = bitcast i8* %43 to %struct.xpv*
  %xpv_pv38 = getelementptr inbounds %struct.xpv, %struct.xpv* %44, i32 0, i32 0
  store i8* %41, i8** %xpv_pv38, align 8
  %45 = load i64, i64* %klen_tmp, align 8
  %46 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_any39 = getelementptr inbounds %struct.sv, %struct.sv* %46, i32 0, i32 0
  %47 = load i8*, i8** %sv_any39, align 8
  %48 = bitcast i8* %47 to %struct.xpv*
  %xpv_len = getelementptr inbounds %struct.xpv, %struct.xpv* %48, i32 0, i32 2
  store i64 %45, i64* %xpv_len, align 8
  %49 = load i64, i64* %klen_tmp, align 8
  %sub = sub i64 %49, 1
  %50 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_any40 = getelementptr inbounds %struct.sv, %struct.sv* %50, i32 0, i32 0
  %51 = load i8*, i8** %sv_any40, align 8
  %52 = bitcast i8* %51 to %struct.xpv*
  %xpv_cur41 = getelementptr inbounds %struct.xpv, %struct.xpv* %52, i32 0, i32 1
  store i64 %sub, i64* %xpv_cur41, align 8
  br label %if.end.42

if.end.42:                                        ; preds = %lor.end, %if.end.26
  br label %if.end.43

if.end.43:                                        ; preds = %if.end.42, %if.then.15
  %53 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf_ro = getelementptr inbounds %struct.stcxt, %struct.stcxt* %53, i32 0, i32 19
  store i32 1, i32* %membuf_ro, align 4
  %54 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %msaved = getelementptr inbounds %struct.stcxt, %struct.stcxt* %54, i32 0, i32 22
  %55 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %55, i32 0, i32 21
  %56 = bitcast %struct.extendable* %msaved to i8*
  %57 = bitcast %struct.extendable* %membuf to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 32, i32 8, i1 false)
  %58 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_flags44 = getelementptr inbounds %struct.sv, %struct.sv* %58, i32 0, i32 2
  %59 = load i32, i32* %sv_flags44, align 4
  %and45 = and i32 %59, 67108864
  %tobool46 = icmp ne i32 %and45, 0
  br i1 %tobool46, label %if.end.49, label %if.then.47

if.then.47:                                       ; preds = %if.end.43
  %60 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %s_dirty48 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %60, i32 0, i32 18
  store i32 1, i32* %s_dirty48, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.59, i32 0, i32 0))
  br label %if.end.49

if.end.49:                                        ; preds = %if.then.47, %if.end.43
  %61 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_flags50 = getelementptr inbounds %struct.sv, %struct.sv* %61, i32 0, i32 2
  %62 = load i32, i32* %sv_flags50, align 4
  %and51 = and i32 %62, 262144
  %cmp52 = icmp eq i32 %and51, 262144
  br i1 %cmp52, label %cond.true.54, label %cond.false.61

cond.true.54:                                     ; preds = %if.end.49
  %63 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_any55 = getelementptr inbounds %struct.sv, %struct.sv* %63, i32 0, i32 0
  %64 = load i8*, i8** %sv_any55, align 8
  %65 = bitcast i8* %64 to %struct.xpv*
  %xpv_cur56 = getelementptr inbounds %struct.xpv, %struct.xpv* %65, i32 0, i32 1
  %66 = load i64, i64* %xpv_cur56, align 8
  %67 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf57 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %67, i32 0, i32 21
  %asiz58 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf57, i32 0, i32 1
  store i64 %66, i64* %asiz58, align 8
  %68 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_any59 = getelementptr inbounds %struct.sv, %struct.sv* %68, i32 0, i32 0
  %69 = load i8*, i8** %sv_any59, align 8
  %70 = bitcast i8* %69 to %struct.xpv*
  %xpv_pv60 = getelementptr inbounds %struct.xpv, %struct.xpv* %70, i32 0, i32 0
  %71 = load i8*, i8** %xpv_pv60, align 8
  br label %cond.end.65

cond.false.61:                                    ; preds = %if.end.49
  %72 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %73 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf62 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %73, i32 0, i32 21
  %asiz63 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf62, i32 0, i32 1
  %call64 = call i8* @Perl_sv_2pv_flags(%struct.sv* %72, i64* %asiz63, i32 2)
  br label %cond.end.65

cond.end.65:                                      ; preds = %cond.false.61, %cond.true.54
  %cond66 = phi i8* [ %71, %cond.true.54 ], [ %call64, %cond.false.61 ]
  %74 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf67 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %74, i32 0, i32 21
  %arena68 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf67, i32 0, i32 0
  store i8* %cond66, i8** %arena68, align 8
  %75 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf69 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %75, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf69, i32 0, i32 2
  store i8* %cond66, i8** %aptr, align 8
  %76 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf70 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %76, i32 0, i32 21
  %arena71 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf70, i32 0, i32 0
  %77 = load i8*, i8** %arena71, align 8
  %78 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf72 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %78, i32 0, i32 21
  %asiz73 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf72, i32 0, i32 1
  %79 = load i64, i64* %asiz73, align 8
  %add.ptr = getelementptr inbounds i8, i8* %77, i64 %79
  %80 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf74 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %80, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf74, i32 0, i32 3
  store i8* %add.ptr, i8** %aend, align 8
  store i8* %add.ptr, i8** %tmp
  %81 = load i8*, i8** %tmp
  br label %if.end.75

if.end.75:                                        ; preds = %cond.end.65, %land.lhs.true, %if.end.12
  %82 = load %struct._PerlIO**, %struct._PerlIO*** %f.addr, align 8
  %83 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %83, i32 0, i32 23
  store %struct._PerlIO** %82, %struct._PerlIO*** %fio, align 8
  %84 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %call76 = call %struct.sv* @magic_check(%struct.stcxt* %84)
  %tobool77 = icmp ne %struct.sv* %call76, null
  br i1 %tobool77, label %if.end.83, label %if.then.78

if.then.78:                                       ; preds = %if.end.75
  %85 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %s_dirty79 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %85, i32 0, i32 18
  store i32 1, i32* %s_dirty79, align 4
  %86 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %fio80 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %86, i32 0, i32 23
  %87 = load %struct._PerlIO**, %struct._PerlIO*** %fio80, align 8
  %tobool81 = icmp ne %struct._PerlIO** %87, null
  %cond82 = select i1 %tobool81, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.62, i32 0, i32 0)
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.60, i32 0, i32 0), i8* %cond82)
  br label %if.end.83

if.end.83:                                        ; preds = %if.then.78, %if.end.75
  %88 = load %struct._PerlIO**, %struct._PerlIO*** %f.addr, align 8
  %tobool84 = icmp ne %struct._PerlIO** %88, null
  br i1 %tobool84, label %cond.true.85, label %cond.false.86

cond.true.85:                                     ; preds = %if.end.83
  br label %cond.end.98

cond.false.86:                                    ; preds = %if.end.83
  %89 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %tobool87 = icmp ne %struct.sv* %89, null
  br i1 %tobool87, label %cond.true.88, label %cond.false.95

cond.true.88:                                     ; preds = %cond.false.86
  %90 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %sv_flags89 = getelementptr inbounds %struct.sv, %struct.sv* %90, i32 0, i32 2
  %91 = load i32, i32* %sv_flags89, align 4
  %and90 = and i32 %91, 57344
  %tobool91 = icmp ne i32 %and90, 0
  br i1 %tobool91, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.true.88
  %92 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %call92 = call signext i8 @Perl_sv_tainted(%struct.sv* %92)
  %conv93 = sext i8 %call92 to i32
  %tobool94 = icmp ne i32 %conv93, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.true.88
  %93 = phi i1 [ false, %cond.true.88 ], [ %tobool94, %land.rhs ]
  %land.ext = zext i1 %93 to i32
  br label %cond.end.96

cond.false.95:                                    ; preds = %cond.false.86
  %94 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %s_tainted = getelementptr inbounds %struct.stcxt, %struct.stcxt* %94, i32 0, i32 12
  %95 = load i32, i32* %s_tainted, align 4
  br label %cond.end.96

cond.end.96:                                      ; preds = %cond.false.95, %land.end
  %cond97 = phi i32 [ %land.ext, %land.end ], [ %95, %cond.false.95 ]
  br label %cond.end.98

cond.end.98:                                      ; preds = %cond.end.96, %cond.true.85
  %cond99 = phi i32 [ 1, %cond.true.85 ], [ %cond97, %cond.end.96 ]
  store i32 %cond99, i32* %is_tainted, align 4
  %96 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %97 = load i32, i32* %optype.addr, align 4
  %98 = load i32, i32* %is_tainted, align 4
  call void @init_retrieve_context(%struct.stcxt* %96, i32 %97, i32 %98)
  %99 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %call100 = call %struct.sv* @retrieve(%struct.stcxt* %99, i8* null)
  store %struct.sv* %call100, %struct.sv** %sv, align 8
  %100 = load %struct._PerlIO**, %struct._PerlIO*** %f.addr, align 8
  %tobool101 = icmp ne %struct._PerlIO** %100, null
  br i1 %tobool101, label %if.end.108, label %land.lhs.true.102

land.lhs.true.102:                                ; preds = %cond.end.98
  %101 = load %struct.sv*, %struct.sv** %in.addr, align 8
  %tobool103 = icmp ne %struct.sv* %101, null
  br i1 %tobool103, label %if.then.104, label %if.end.108

if.then.104:                                      ; preds = %land.lhs.true.102
  %102 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf_ro105 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %102, i32 0, i32 19
  store i32 0, i32* %membuf_ro105, align 4
  %103 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf106 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %103, i32 0, i32 21
  %104 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %msaved107 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %104, i32 0, i32 22
  %105 = bitcast %struct.extendable* %membuf106 to i8*
  %106 = bitcast %struct.extendable* %msaved107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %105, i8* %106, i64 32, i32 8, i1 false)
  br label %if.end.108

if.end.108:                                       ; preds = %if.then.104, %land.lhs.true.102, %cond.end.98
  %107 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %hseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %107, i32 0, i32 2
  %108 = load %struct.hv*, %struct.hv** %hseen, align 8
  %cmp109 = icmp ne %struct.hv* %108, null
  %conv110 = zext i1 %cmp109 to i32
  store i32 %conv110, i32* %pre_06_fmt, align 4
  %109 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  call void @clean_retrieve_context(%struct.stcxt* %109)
  %110 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %prev = getelementptr inbounds %struct.stcxt, %struct.stcxt* %110, i32 0, i32 27
  %111 = load %struct.sv*, %struct.sv** %prev, align 8
  %tobool111 = icmp ne %struct.sv* %111, null
  br i1 %tobool111, label %if.then.112, label %if.end.113

if.then.112:                                      ; preds = %if.end.108
  %112 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  call void @free_context(%struct.stcxt* %112)
  br label %if.end.113

if.end.113:                                       ; preds = %if.then.112, %if.end.108
  %113 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool114 = icmp ne %struct.sv* %113, null
  br i1 %tobool114, label %if.end.116, label %if.then.115

if.then.115:                                      ; preds = %if.end.113
  store %struct.sv* @PL_sv_undef, %struct.sv** %retval
  br label %return

if.end.116:                                       ; preds = %if.end.113
  %114 = load i32, i32* %pre_06_fmt, align 4
  %tobool117 = icmp ne i32 %114, 0
  br i1 %tobool117, label %if.then.118, label %if.end.132

if.then.118:                                      ; preds = %if.end.116
  %115 = load %struct.sv*, %struct.sv** %sv, align 8
  %call120 = call i32 @sv_type(%struct.sv* %115)
  %cmp121 = icmp eq i32 %call120, 0
  br i1 %cmp121, label %land.lhs.true.123, label %if.end.131

land.lhs.true.123:                                ; preds = %if.then.118
  %116 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any124 = getelementptr inbounds %struct.sv, %struct.sv* %116, i32 0, i32 0
  %117 = load i8*, i8** %sv_any124, align 8
  %118 = bitcast i8* %117 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %118, i32 0, i32 0
  %119 = load %struct.sv*, %struct.sv** %xrv_rv, align 8
  store %struct.sv* %119, %struct.sv** %rv, align 8
  %tobool125 = icmp ne %struct.sv* %119, null
  br i1 %tobool125, label %land.lhs.true.126, label %if.end.131

land.lhs.true.126:                                ; preds = %land.lhs.true.123
  %120 = load %struct.sv*, %struct.sv** %rv, align 8
  %sv_flags127 = getelementptr inbounds %struct.sv, %struct.sv* %120, i32 0, i32 2
  %121 = load i32, i32* %sv_flags127, align 4
  %and128 = and i32 %121, 4096
  %tobool129 = icmp ne i32 %and128, 0
  br i1 %tobool129, label %if.then.130, label %if.end.131

if.then.130:                                      ; preds = %land.lhs.true.126
  %122 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %122, %struct.sv** %retval
  br label %return

if.end.131:                                       ; preds = %land.lhs.true.126, %land.lhs.true.123, %if.then.118
  br label %if.end.132

if.end.132:                                       ; preds = %if.end.131, %if.end.116
  %123 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags133 = getelementptr inbounds %struct.sv, %struct.sv* %123, i32 0, i32 2
  %124 = load i32, i32* %sv_flags133, align 4
  %and134 = and i32 %124, 4096
  %tobool135 = icmp ne i32 %and134, 0
  br i1 %tobool135, label %if.then.136, label %if.end.153

if.then.136:                                      ; preds = %if.end.132
  %125 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any138 = getelementptr inbounds %struct.sv, %struct.sv* %125, i32 0, i32 0
  %126 = load i8*, i8** %sv_any138, align 8
  %127 = bitcast i8* %126 to %struct.xpvmg*
  %xmg_stash = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %127, i32 0, i32 6
  %128 = load %struct.hv*, %struct.hv** %xmg_stash, align 8
  store %struct.hv* %128, %struct.hv** %stash, align 8
  %129 = load %struct.sv*, %struct.sv** %sv, align 8
  %call141 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %129)
  store %struct.sv* %call141, %struct.sv** %rv140, align 8
  %130 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool142 = icmp ne %struct.hv* %130, null
  br i1 %tobool142, label %land.lhs.true.143, label %if.end.152

land.lhs.true.143:                                ; preds = %if.then.136
  %131 = load i64, i64* @PL_amagic_generation, align 8
  %tobool144 = icmp ne i64 %131, 0
  br i1 %tobool144, label %land.lhs.true.145, label %if.end.152

land.lhs.true.145:                                ; preds = %land.lhs.true.143
  %132 = load %struct.hv*, %struct.hv** %stash, align 8
  %call146 = call signext i8 @Perl_Gv_AMupdate(%struct.hv* %132)
  %conv147 = sext i8 %call146 to i32
  %tobool148 = icmp ne i32 %conv147, 0
  br i1 %tobool148, label %if.then.149, label %if.end.152

if.then.149:                                      ; preds = %land.lhs.true.145
  %133 = load %struct.sv*, %struct.sv** %rv140, align 8
  %sv_flags150 = getelementptr inbounds %struct.sv, %struct.sv* %133, i32 0, i32 2
  %134 = load i32, i32* %sv_flags150, align 4
  %or151 = or i32 %134, 268435456
  store i32 %or151, i32* %sv_flags150, align 4
  br label %if.end.152

if.end.152:                                       ; preds = %if.then.149, %land.lhs.true.145, %land.lhs.true.143, %if.then.136
  %135 = load %struct.sv*, %struct.sv** %rv140, align 8
  store %struct.sv* %135, %struct.sv** %retval
  br label %return

if.end.153:                                       ; preds = %if.end.132
  %136 = load %struct.sv*, %struct.sv** %sv, align 8
  %call154 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %136)
  store %struct.sv* %call154, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.153, %if.end.152, %if.then.130, %if.then.115
  %137 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %137
}

; Function Attrs: nounwind uwtable
define %struct.sv* @mretrieve(%struct.sv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call = call %struct.sv* @do_retrieve(%struct._PerlIO** null, %struct.sv* %0, i32 0)
  ret %struct.sv* %call
}

; Function Attrs: nounwind uwtable
define %struct.sv* @dclone(%struct.sv* %sv) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %cxt = alloca %struct.stcxt*, align 8
  %size = alloca i32, align 4
  %real_context = alloca %struct.stcxt*, align 8
  %out = alloca %struct.sv*, align 8
  %cxt4 = alloca %struct.stcxt*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** @Context_ptr, align 8
  store %struct.stcxt* %0, %struct.stcxt** %cxt, align 8
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 18
  %2 = load i32, i32* %s_dirty, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  call void @clean_context(%struct.stcxt* %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call = call i32 @do_store(%struct._PerlIO** null, %struct.sv* %4, i32 4, i32 0, %struct.sv** null)
  %tobool1 = icmp ne i32 %call, 0
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct.sv* @PL_sv_undef, %struct.sv** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct.stcxt*, %struct.stcxt** @Context_ptr, align 8
  store %struct.stcxt* %5, %struct.stcxt** %cxt4, align 8
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt4, align 8
  store %struct.stcxt* %6, %struct.stcxt** %real_context, align 8
  %7 = load %struct.stcxt*, %struct.stcxt** %real_context, align 8
  store %struct.stcxt* %7, %struct.stcxt** %cxt, align 8
  %8 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %8, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %9 = load i8*, i8** %aptr, align 8
  %10 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %10, i32 0, i32 21
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf5, i32 0, i32 0
  %11 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %9 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %11 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  store i32 %conv, i32* %size, align 4
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf6 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 21
  %arena7 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf6, i32 0, i32 0
  %13 = load i8*, i8** %arena7, align 8
  %tobool8 = icmp ne i8* %13, null
  br i1 %tobool8, label %if.end.14, label %if.then.9

if.then.9:                                        ; preds = %if.end.3
  %call10 = call i8* @Perl_safesysmalloc(i64 8192)
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf11 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 21
  %arena12 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf11, i32 0, i32 0
  store i8* %call10, i8** %arena12, align 8
  %15 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf13 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %15, i32 0, i32 21
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf13, i32 0, i32 1
  store i64 8192, i64* %asiz, align 8
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.9, %if.end.3
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf15 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 21
  %arena16 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf15, i32 0, i32 0
  %17 = load i8*, i8** %arena16, align 8
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf17 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 21
  %aptr18 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf17, i32 0, i32 2
  store i8* %17, i8** %aptr18, align 8
  %19 = load i32, i32* %size, align 4
  %tobool19 = icmp ne i32 %19, 0
  br i1 %tobool19, label %if.then.20, label %if.else

if.then.20:                                       ; preds = %if.end.14
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf21 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %20, i32 0, i32 21
  %arena22 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf21, i32 0, i32 0
  %21 = load i8*, i8** %arena22, align 8
  %22 = load i32, i32* %size, align 4
  %idx.ext = sext i32 %22 to i64
  %add.ptr = getelementptr inbounds i8, i8* %21, i64 %idx.ext
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf23 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf23, i32 0, i32 3
  store i8* %add.ptr, i8** %aend, align 8
  br label %if.end.31

if.else:                                          ; preds = %if.end.14
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf24 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 21
  %arena25 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf24, i32 0, i32 0
  %25 = load i8*, i8** %arena25, align 8
  %26 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf26 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %26, i32 0, i32 21
  %asiz27 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf26, i32 0, i32 1
  %27 = load i64, i64* %asiz27, align 8
  %add.ptr28 = getelementptr inbounds i8, i8* %25, i64 %27
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf29 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 21
  %aend30 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf29, i32 0, i32 3
  store i8* %add.ptr28, i8** %aend30, align 8
  br label %if.end.31

if.end.31:                                        ; preds = %if.else, %if.then.20
  %29 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %29, i32 0, i32 2
  %30 = load i32, i32* %sv_flags, align 4
  %and = and i32 %30, 57344
  %tobool32 = icmp ne i32 %and, 0
  br i1 %tobool32, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end.31
  %31 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call33 = call signext i8 @Perl_sv_tainted(%struct.sv* %31)
  %conv34 = sext i8 %call33 to i32
  %tobool35 = icmp ne i32 %conv34, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.31
  %32 = phi i1 [ false, %if.end.31 ], [ %tobool35, %land.rhs ]
  %land.ext = zext i1 %32 to i32
  %33 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %s_tainted = getelementptr inbounds %struct.stcxt, %struct.stcxt* %33, i32 0, i32 12
  store i32 %land.ext, i32* %s_tainted, align 4
  %call36 = call %struct.sv* @do_retrieve(%struct._PerlIO** null, %struct.sv* null, i32 4)
  store %struct.sv* %call36, %struct.sv** %out, align 8
  %34 = load %struct.sv*, %struct.sv** %out, align 8
  store %struct.sv* %34, %struct.sv** %retval
  br label %return

return:                                           ; preds = %land.end, %if.then.2
  %35 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %35
}

; Function Attrs: nounwind uwtable
define internal void @clean_context(%struct.stcxt* %cxt) #0 {
entry:
  %cxt.addr = alloca %struct.stcxt*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf_ro = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 19
  %1 = load i32, i32* %membuf_ro, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf_ro1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 19
  store i32 0, i32* %membuf_ro1, align 4
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 21
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %msaved = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 22
  %5 = bitcast %struct.extendable* %membuf to i8*
  %6 = bitcast %struct.extendable* %msaved to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 32, i32 8, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %optype = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 1
  %8 = load i32, i32* %optype, align 4
  %and = and i32 %8, 2
  %tobool2 = icmp ne i32 %and, 0
  br i1 %tobool2, label %if.then.3, label %if.else

if.then.3:                                        ; preds = %if.end
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  call void @clean_retrieve_context(%struct.stcxt* %9)
  br label %if.end.10

if.else:                                          ; preds = %if.end
  %10 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %optype4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %10, i32 0, i32 1
  %11 = load i32, i32* %optype4, align 4
  %and5 = and i32 %11, 1
  %tobool6 = icmp ne i32 %and5, 0
  br i1 %tobool6, label %if.then.7, label %if.else.8

if.then.7:                                        ; preds = %if.else
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  call void @clean_store_context(%struct.stcxt* %12)
  br label %if.end.9

if.else.8:                                        ; preds = %if.else
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  call void @reset_context(%struct.stcxt* %13)
  br label %if.end.9

if.end.9:                                         ; preds = %if.else.8, %if.then.7
  br label %if.end.10

if.end.10:                                        ; preds = %if.end.9, %if.then.3
  ret void
}

declare i8* @Perl_safesysmalloc(i64) #1

declare signext i8 @Perl_sv_tainted(%struct.sv*) #1

; Function Attrs: nounwind uwtable
define void @XS_Storable__Cxt_DESTROY(%struct.cv* %cv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %sp = alloca %struct.sv**, align 8
  %mark = alloca %struct.sv**, align 8
  %ax = alloca i32, align 4
  %items = alloca i32, align 4
  %self = alloca %struct.sv*, align 8
  %cxt = alloca %struct.stcxt*, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %2 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %2, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %3 = load i32, i32* %2, align 4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %1, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %4 = load %struct.sv**, %struct.sv*** %mark, align 8
  %5 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %4 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %add = add nsw i64 %sub.ptr.div, 1
  %conv = trunc i64 %add to i32
  store i32 %conv, i32* %ax, align 4
  %6 = load %struct.sv**, %struct.sv*** %sp, align 8
  %7 = load %struct.sv**, %struct.sv*** %mark, align 8
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %6 to i64
  %sub.ptr.rhs.cast2 = ptrtoint %struct.sv** %7 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2
  %sub.ptr.div4 = sdiv exact i64 %sub.ptr.sub3, 8
  %conv5 = trunc i64 %sub.ptr.div4 to i32
  store i32 %conv5, i32* %items, align 4
  %8 = load i32, i32* %items, align 4
  %cmp = icmp ne i32 %8, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32, i32* %items, align 4
  %10 = load %struct.sv**, %struct.sv*** %sp, align 8
  %idx.ext7 = sext i32 %9 to i64
  %idx.neg = sub i64 0, %idx.ext7
  %add.ptr8 = getelementptr inbounds %struct.sv*, %struct.sv** %10, i64 %idx.neg
  store %struct.sv** %add.ptr8, %struct.sv*** %sp, align 8
  %11 = load i32, i32* %ax, align 4
  %add9 = add nsw i32 %11, 0
  %idxprom = sext i32 %add9 to i64
  %12 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %12, i64 %idxprom
  %13 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  store %struct.sv* %13, %struct.sv** %self, align 8
  %14 = load %struct.sv*, %struct.sv** %self, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %14, i32 0, i32 0
  %15 = load i8*, i8** %sv_any, align 8
  %16 = bitcast i8* %15 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %16, i32 0, i32 0
  %17 = load %struct.sv*, %struct.sv** %xrv_rv, align 8
  %sv_any10 = getelementptr inbounds %struct.sv, %struct.sv* %17, i32 0, i32 0
  %18 = load i8*, i8** %sv_any10, align 8
  %19 = bitcast i8* %18 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %19, i32 0, i32 0
  %20 = load i8*, i8** %xpv_pv, align 8
  %21 = bitcast i8* %20 to %struct.stcxt*
  store %struct.stcxt* %21, %struct.stcxt** %cxt, align 8
  %22 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %keybuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %22, i32 0, i32 20
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf, i32 0, i32 0
  %23 = load i8*, i8** %arena, align 8
  %tobool = icmp ne i8* %23, null
  br i1 %tobool, label %if.then.11, label %if.end.14

if.then.11:                                       ; preds = %if.end
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %keybuf12 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 20
  %arena13 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf12, i32 0, i32 0
  %25 = load i8*, i8** %arena13, align 8
  call void @Perl_safesysfree(i8* %25)
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.11, %if.end
  %26 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf_ro = getelementptr inbounds %struct.stcxt, %struct.stcxt* %26, i32 0, i32 19
  %27 = load i32, i32* %membuf_ro, align 4
  %tobool15 = icmp ne i32 %27, 0
  br i1 %tobool15, label %if.end.21, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end.14
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 21
  %arena16 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 0
  %29 = load i8*, i8** %arena16, align 8
  %tobool17 = icmp ne i8* %29, null
  br i1 %tobool17, label %if.then.18, label %if.end.21

if.then.18:                                       ; preds = %land.lhs.true
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 21
  %arena20 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf19, i32 0, i32 0
  %31 = load i8*, i8** %arena20, align 8
  call void @Perl_safesysfree(i8* %31)
  br label %if.end.21

if.end.21:                                        ; preds = %if.then.18, %land.lhs.true, %if.end.14
  %32 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf_ro22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %32, i32 0, i32 19
  %33 = load i32, i32* %membuf_ro22, align 4
  %tobool23 = icmp ne i32 %33, 0
  br i1 %tobool23, label %land.lhs.true.24, label %if.end.30

land.lhs.true.24:                                 ; preds = %if.end.21
  %34 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %msaved = getelementptr inbounds %struct.stcxt, %struct.stcxt* %34, i32 0, i32 22
  %arena25 = getelementptr inbounds %struct.extendable, %struct.extendable* %msaved, i32 0, i32 0
  %35 = load i8*, i8** %arena25, align 8
  %tobool26 = icmp ne i8* %35, null
  br i1 %tobool26, label %if.then.27, label %if.end.30

if.then.27:                                       ; preds = %land.lhs.true.24
  %36 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %msaved28 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %36, i32 0, i32 22
  %arena29 = getelementptr inbounds %struct.extendable, %struct.extendable* %msaved28, i32 0, i32 0
  %37 = load i8*, i8** %arena29, align 8
  call void @Perl_safesysfree(i8* %37)
  br label %if.end.30

if.end.30:                                        ; preds = %if.then.27, %land.lhs.true.24, %if.end.21
  %38 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %38, %struct.sv*** @PL_stack_sp, align 8
  ret void
}

declare void @Perl_croak(i8*, ...) #1

declare void @Perl_safesysfree(i8*) #1

; Function Attrs: nounwind uwtable
define void @XS_Storable_init_perinterp(%struct.cv* %cv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %sp = alloca %struct.sv**, align 8
  %mark = alloca %struct.sv**, align 8
  %ax = alloca i32, align 4
  %items = alloca i32, align 4
  %tmpXSoff = alloca i64, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %2 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %2, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %3 = load i32, i32* %2, align 4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %1, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %4 = load %struct.sv**, %struct.sv*** %mark, align 8
  %5 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %4 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %add = add nsw i64 %sub.ptr.div, 1
  %conv = trunc i64 %add to i32
  store i32 %conv, i32* %ax, align 4
  %6 = load %struct.sv**, %struct.sv*** %sp, align 8
  %7 = load %struct.sv**, %struct.sv*** %mark, align 8
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %6 to i64
  %sub.ptr.rhs.cast2 = ptrtoint %struct.sv** %7 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2
  %sub.ptr.div4 = sdiv exact i64 %sub.ptr.sub3, 8
  %conv5 = trunc i64 %sub.ptr.div4 to i32
  store i32 %conv5, i32* %items, align 4
  %8 = load i32, i32* %items, align 4
  %cmp = icmp ne i32 %8, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @init_perinterp()
  store i64 0, i64* %tmpXSoff, align 8
  %9 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %10 = load i32, i32* %ax, align 4
  %idx.ext7 = sext i32 %10 to i64
  %add.ptr8 = getelementptr inbounds %struct.sv*, %struct.sv** %9, i64 %idx.ext7
  %11 = load i64, i64* %tmpXSoff, align 8
  %sub = sub nsw i64 %11, 1
  %add.ptr9 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr8, i64 %sub
  store %struct.sv** %add.ptr9, %struct.sv*** @PL_stack_sp, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @init_perinterp() #0 {
entry:
  %cxt = alloca %struct.stcxt*, align 8
  %self = alloca %struct.sv*, align 8
  %my_sv = alloca %struct.sv*, align 8
  %tmp = alloca %struct.sv*, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** @Context_ptr, align 8
  store %struct.stcxt* %0, %struct.stcxt** %cxt, align 8
  %call = call %struct.sv* @Perl_newSV(i64 255)
  store %struct.sv* %call, %struct.sv** %self, align 8
  %1 = load %struct.sv*, %struct.sv** %self, align 8
  %call1 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %1)
  store %struct.sv* %call1, %struct.sv** %my_sv, align 8
  %2 = load %struct.sv*, %struct.sv** %my_sv, align 8
  %call2 = call %struct.hv* @Perl_gv_stashpv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.30, i32 0, i32 0), i32 1)
  %call3 = call %struct.sv* @Perl_sv_bless(%struct.sv* %2, %struct.hv* %call2)
  %3 = load %struct.sv*, %struct.sv** %self, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %3, i32 0, i32 0
  %4 = load i8*, i8** %sv_any, align 8
  %5 = bitcast i8* %4 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %5, i32 0, i32 0
  %6 = load i8*, i8** %xpv_pv, align 8
  %7 = bitcast i8* %6 to %struct.stcxt*
  store %struct.stcxt* %7, %struct.stcxt** %cxt, align 8
  %8 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %9 = bitcast %struct.stcxt* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 256, i32 1, i1 false)
  %10 = load %struct.sv*, %struct.sv** %my_sv, align 8
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %my_sv4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 28
  store %struct.sv* %10, %struct.sv** %my_sv4, align 8
  store %struct.sv* %10, %struct.sv** %tmp
  %12 = load %struct.sv*, %struct.sv** %tmp
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  store %struct.stcxt* %13, %struct.stcxt** @Context_ptr, align 8
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 11
  store i32 0, i32* %netorder, align 4
  %15 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %forgive_me = getelementptr inbounds %struct.stcxt, %struct.stcxt* %15, i32 0, i32 13
  store i32 -1, i32* %forgive_me, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define void @XS_Storable_pstore(%struct.cv* %cv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %sp = alloca %struct.sv**, align 8
  %mark = alloca %struct.sv**, align 8
  %ax = alloca i32, align 4
  %items = alloca i32, align 4
  %f = alloca %struct._PerlIO**, align 8
  %obj = alloca %struct.sv*, align 8
  %RETVAL = alloca i32, align 4
  %targ = alloca %struct.sv*, align 8
  %tmp = alloca %struct.sv*, align 8
  %tmpXSoff = alloca i64, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %2 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %2, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %3 = load i32, i32* %2, align 4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %1, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %4 = load %struct.sv**, %struct.sv*** %mark, align 8
  %5 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %4 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %add = add nsw i64 %sub.ptr.div, 1
  %conv = trunc i64 %add to i32
  store i32 %conv, i32* %ax, align 4
  %6 = load %struct.sv**, %struct.sv*** %sp, align 8
  %7 = load %struct.sv**, %struct.sv*** %mark, align 8
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %6 to i64
  %sub.ptr.rhs.cast2 = ptrtoint %struct.sv** %7 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2
  %sub.ptr.div4 = sdiv exact i64 %sub.ptr.sub3, 8
  %conv5 = trunc i64 %sub.ptr.div4 to i32
  store i32 %conv5, i32* %items, align 4
  %8 = load i32, i32* %items, align 4
  %cmp = icmp ne i32 %8, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32, i32* %ax, align 4
  %add7 = add nsw i32 %9, 0
  %idxprom = sext i32 %add7 to i64
  %10 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %10, i64 %idxprom
  %11 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  %call = call %struct.io* @Perl_sv_2io(%struct.sv* %11)
  %sv_any = getelementptr inbounds %struct.io, %struct.io* %call, i32 0, i32 0
  %12 = load %struct.xpvio*, %struct.xpvio** %sv_any, align 8
  %xio_ofp = getelementptr inbounds %struct.xpvio, %struct.xpvio* %12, i32 0, i32 8
  %13 = load %struct._PerlIO**, %struct._PerlIO*** %xio_ofp, align 8
  store %struct._PerlIO** %13, %struct._PerlIO*** %f, align 8
  %14 = load i32, i32* %ax, align 4
  %add8 = add nsw i32 %14, 1
  %idxprom9 = sext i32 %add8 to i64
  %15 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx10 = getelementptr inbounds %struct.sv*, %struct.sv** %15, i64 %idxprom9
  %16 = load %struct.sv*, %struct.sv** %arrayidx10, align 8
  store %struct.sv* %16, %struct.sv** %obj, align 8
  %17 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %17, i32 0, i32 7
  %18 = load i8, i8* %op_private, align 1
  %conv11 = zext i8 %18 to i32
  %and = and i32 %conv11, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %19 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ = getelementptr inbounds %struct.op, %struct.op* %19, i32 0, i32 3
  %20 = load i64, i64* %op_targ, align 8
  %21 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %arrayidx12 = getelementptr inbounds %struct.sv*, %struct.sv** %21, i64 %20
  %22 = load %struct.sv*, %struct.sv** %arrayidx12, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %call13 = call %struct.sv* @Perl_sv_newmortal()
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.sv* [ %22, %cond.true ], [ %call13, %cond.false ]
  store %struct.sv* %cond, %struct.sv** %targ, align 8
  %23 = load %struct._PerlIO**, %struct._PerlIO*** %f, align 8
  %24 = load %struct.sv*, %struct.sv** %obj, align 8
  %call14 = call i32 @pstore(%struct._PerlIO** %23, %struct.sv* %24)
  store i32 %call14, i32* %RETVAL, align 4
  %25 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %26 = load i32, i32* %ax, align 4
  %idx.ext15 = sext i32 %26 to i64
  %add.ptr16 = getelementptr inbounds %struct.sv*, %struct.sv** %25, i64 %idx.ext15
  %add.ptr17 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr16, i64 -1
  store %struct.sv** %add.ptr17, %struct.sv*** %sp, align 8
  %27 = load %struct.sv*, %struct.sv** %targ, align 8
  %28 = load i32, i32* %RETVAL, align 4
  %conv18 = sext i32 %28 to i64
  call void @Perl_sv_setiv(%struct.sv* %27, i64 %conv18)
  %29 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %29, i32 0, i32 2
  %30 = load i32, i32* %sv_flags, align 4
  %and19 = and i32 %30, 16384
  %tobool20 = icmp ne i32 %and19, 0
  br i1 %tobool20, label %if.then.21, label %if.end.23

if.then.21:                                       ; preds = %cond.end
  %31 = load %struct.sv*, %struct.sv** %targ, align 8
  %call22 = call i32 @Perl_mg_set(%struct.sv* %31)
  br label %if.end.23

if.end.23:                                        ; preds = %if.then.21, %cond.end
  %32 = load %struct.sv*, %struct.sv** %targ, align 8
  %33 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr24 = getelementptr inbounds %struct.sv*, %struct.sv** %33, i32 1
  store %struct.sv** %incdec.ptr24, %struct.sv*** %sp, align 8
  store %struct.sv* %32, %struct.sv** %incdec.ptr24, align 8
  store %struct.sv* %32, %struct.sv** %tmp
  %34 = load %struct.sv*, %struct.sv** %tmp
  store i64 1, i64* %tmpXSoff, align 8
  %35 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %36 = load i32, i32* %ax, align 4
  %idx.ext26 = sext i32 %36 to i64
  %add.ptr27 = getelementptr inbounds %struct.sv*, %struct.sv** %35, i64 %idx.ext26
  %37 = load i64, i64* %tmpXSoff, align 8
  %sub = sub nsw i64 %37, 1
  %add.ptr28 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr27, i64 %sub
  store %struct.sv** %add.ptr28, %struct.sv*** @PL_stack_sp, align 8
  ret void
}

declare %struct.io* @Perl_sv_2io(%struct.sv*) #1

declare %struct.sv* @Perl_sv_newmortal() #1

declare void @Perl_sv_setiv(%struct.sv*, i64) #1

declare i32 @Perl_mg_set(%struct.sv*) #1

; Function Attrs: nounwind uwtable
define void @XS_Storable_net_pstore(%struct.cv* %cv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %sp = alloca %struct.sv**, align 8
  %mark = alloca %struct.sv**, align 8
  %ax = alloca i32, align 4
  %items = alloca i32, align 4
  %f = alloca %struct._PerlIO**, align 8
  %obj = alloca %struct.sv*, align 8
  %RETVAL = alloca i32, align 4
  %targ = alloca %struct.sv*, align 8
  %tmp = alloca %struct.sv*, align 8
  %tmpXSoff = alloca i64, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %2 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %2, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %3 = load i32, i32* %2, align 4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %1, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %4 = load %struct.sv**, %struct.sv*** %mark, align 8
  %5 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %4 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %add = add nsw i64 %sub.ptr.div, 1
  %conv = trunc i64 %add to i32
  store i32 %conv, i32* %ax, align 4
  %6 = load %struct.sv**, %struct.sv*** %sp, align 8
  %7 = load %struct.sv**, %struct.sv*** %mark, align 8
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %6 to i64
  %sub.ptr.rhs.cast2 = ptrtoint %struct.sv** %7 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2
  %sub.ptr.div4 = sdiv exact i64 %sub.ptr.sub3, 8
  %conv5 = trunc i64 %sub.ptr.div4 to i32
  store i32 %conv5, i32* %items, align 4
  %8 = load i32, i32* %items, align 4
  %cmp = icmp ne i32 %8, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32, i32* %ax, align 4
  %add7 = add nsw i32 %9, 0
  %idxprom = sext i32 %add7 to i64
  %10 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %10, i64 %idxprom
  %11 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  %call = call %struct.io* @Perl_sv_2io(%struct.sv* %11)
  %sv_any = getelementptr inbounds %struct.io, %struct.io* %call, i32 0, i32 0
  %12 = load %struct.xpvio*, %struct.xpvio** %sv_any, align 8
  %xio_ofp = getelementptr inbounds %struct.xpvio, %struct.xpvio* %12, i32 0, i32 8
  %13 = load %struct._PerlIO**, %struct._PerlIO*** %xio_ofp, align 8
  store %struct._PerlIO** %13, %struct._PerlIO*** %f, align 8
  %14 = load i32, i32* %ax, align 4
  %add8 = add nsw i32 %14, 1
  %idxprom9 = sext i32 %add8 to i64
  %15 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx10 = getelementptr inbounds %struct.sv*, %struct.sv** %15, i64 %idxprom9
  %16 = load %struct.sv*, %struct.sv** %arrayidx10, align 8
  store %struct.sv* %16, %struct.sv** %obj, align 8
  %17 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %17, i32 0, i32 7
  %18 = load i8, i8* %op_private, align 1
  %conv11 = zext i8 %18 to i32
  %and = and i32 %conv11, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %19 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ = getelementptr inbounds %struct.op, %struct.op* %19, i32 0, i32 3
  %20 = load i64, i64* %op_targ, align 8
  %21 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %arrayidx12 = getelementptr inbounds %struct.sv*, %struct.sv** %21, i64 %20
  %22 = load %struct.sv*, %struct.sv** %arrayidx12, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %call13 = call %struct.sv* @Perl_sv_newmortal()
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.sv* [ %22, %cond.true ], [ %call13, %cond.false ]
  store %struct.sv* %cond, %struct.sv** %targ, align 8
  %23 = load %struct._PerlIO**, %struct._PerlIO*** %f, align 8
  %24 = load %struct.sv*, %struct.sv** %obj, align 8
  %call14 = call i32 @net_pstore(%struct._PerlIO** %23, %struct.sv* %24)
  store i32 %call14, i32* %RETVAL, align 4
  %25 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %26 = load i32, i32* %ax, align 4
  %idx.ext15 = sext i32 %26 to i64
  %add.ptr16 = getelementptr inbounds %struct.sv*, %struct.sv** %25, i64 %idx.ext15
  %add.ptr17 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr16, i64 -1
  store %struct.sv** %add.ptr17, %struct.sv*** %sp, align 8
  %27 = load %struct.sv*, %struct.sv** %targ, align 8
  %28 = load i32, i32* %RETVAL, align 4
  %conv18 = sext i32 %28 to i64
  call void @Perl_sv_setiv(%struct.sv* %27, i64 %conv18)
  %29 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %29, i32 0, i32 2
  %30 = load i32, i32* %sv_flags, align 4
  %and19 = and i32 %30, 16384
  %tobool20 = icmp ne i32 %and19, 0
  br i1 %tobool20, label %if.then.21, label %if.end.23

if.then.21:                                       ; preds = %cond.end
  %31 = load %struct.sv*, %struct.sv** %targ, align 8
  %call22 = call i32 @Perl_mg_set(%struct.sv* %31)
  br label %if.end.23

if.end.23:                                        ; preds = %if.then.21, %cond.end
  %32 = load %struct.sv*, %struct.sv** %targ, align 8
  %33 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr24 = getelementptr inbounds %struct.sv*, %struct.sv** %33, i32 1
  store %struct.sv** %incdec.ptr24, %struct.sv*** %sp, align 8
  store %struct.sv* %32, %struct.sv** %incdec.ptr24, align 8
  store %struct.sv* %32, %struct.sv** %tmp
  %34 = load %struct.sv*, %struct.sv** %tmp
  store i64 1, i64* %tmpXSoff, align 8
  %35 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %36 = load i32, i32* %ax, align 4
  %idx.ext26 = sext i32 %36 to i64
  %add.ptr27 = getelementptr inbounds %struct.sv*, %struct.sv** %35, i64 %idx.ext26
  %37 = load i64, i64* %tmpXSoff, align 8
  %sub = sub nsw i64 %37, 1
  %add.ptr28 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr27, i64 %sub
  store %struct.sv** %add.ptr28, %struct.sv*** @PL_stack_sp, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @XS_Storable_mstore(%struct.cv* %cv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %sp = alloca %struct.sv**, align 8
  %mark = alloca %struct.sv**, align 8
  %ax = alloca i32, align 4
  %items = alloca i32, align 4
  %obj = alloca %struct.sv*, align 8
  %RETVAL = alloca %struct.sv*, align 8
  %tmpXSoff = alloca i64, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %2 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %2, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %3 = load i32, i32* %2, align 4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %1, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %4 = load %struct.sv**, %struct.sv*** %mark, align 8
  %5 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %4 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %add = add nsw i64 %sub.ptr.div, 1
  %conv = trunc i64 %add to i32
  store i32 %conv, i32* %ax, align 4
  %6 = load %struct.sv**, %struct.sv*** %sp, align 8
  %7 = load %struct.sv**, %struct.sv*** %mark, align 8
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %6 to i64
  %sub.ptr.rhs.cast2 = ptrtoint %struct.sv** %7 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2
  %sub.ptr.div4 = sdiv exact i64 %sub.ptr.sub3, 8
  %conv5 = trunc i64 %sub.ptr.div4 to i32
  store i32 %conv5, i32* %items, align 4
  %8 = load i32, i32* %items, align 4
  %cmp = icmp ne i32 %8, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32, i32* %ax, align 4
  %add7 = add nsw i32 %9, 0
  %idxprom = sext i32 %add7 to i64
  %10 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %10, i64 %idxprom
  %11 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  store %struct.sv* %11, %struct.sv** %obj, align 8
  %12 = load %struct.sv*, %struct.sv** %obj, align 8
  %call = call %struct.sv* @mstore(%struct.sv* %12)
  store %struct.sv* %call, %struct.sv** %RETVAL, align 8
  %13 = load %struct.sv*, %struct.sv** %RETVAL, align 8
  %14 = load i32, i32* %ax, align 4
  %add8 = add nsw i32 %14, 0
  %idxprom9 = sext i32 %add8 to i64
  %15 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx10 = getelementptr inbounds %struct.sv*, %struct.sv** %15, i64 %idxprom9
  store %struct.sv* %13, %struct.sv** %arrayidx10, align 8
  %16 = load i32, i32* %ax, align 4
  %add11 = add nsw i32 %16, 0
  %idxprom12 = sext i32 %add11 to i64
  %17 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx13 = getelementptr inbounds %struct.sv*, %struct.sv** %17, i64 %idxprom12
  %18 = load %struct.sv*, %struct.sv** %arrayidx13, align 8
  %call14 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %18)
  store i64 1, i64* %tmpXSoff, align 8
  %19 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %20 = load i32, i32* %ax, align 4
  %idx.ext15 = sext i32 %20 to i64
  %add.ptr16 = getelementptr inbounds %struct.sv*, %struct.sv** %19, i64 %idx.ext15
  %21 = load i64, i64* %tmpXSoff, align 8
  %sub = sub nsw i64 %21, 1
  %add.ptr17 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr16, i64 %sub
  store %struct.sv** %add.ptr17, %struct.sv*** @PL_stack_sp, align 8
  ret void
}

declare %struct.sv* @Perl_sv_2mortal(%struct.sv*) #1

; Function Attrs: nounwind uwtable
define void @XS_Storable_net_mstore(%struct.cv* %cv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %sp = alloca %struct.sv**, align 8
  %mark = alloca %struct.sv**, align 8
  %ax = alloca i32, align 4
  %items = alloca i32, align 4
  %obj = alloca %struct.sv*, align 8
  %RETVAL = alloca %struct.sv*, align 8
  %tmpXSoff = alloca i64, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %2 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %2, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %3 = load i32, i32* %2, align 4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %1, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %4 = load %struct.sv**, %struct.sv*** %mark, align 8
  %5 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %4 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %add = add nsw i64 %sub.ptr.div, 1
  %conv = trunc i64 %add to i32
  store i32 %conv, i32* %ax, align 4
  %6 = load %struct.sv**, %struct.sv*** %sp, align 8
  %7 = load %struct.sv**, %struct.sv*** %mark, align 8
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %6 to i64
  %sub.ptr.rhs.cast2 = ptrtoint %struct.sv** %7 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2
  %sub.ptr.div4 = sdiv exact i64 %sub.ptr.sub3, 8
  %conv5 = trunc i64 %sub.ptr.div4 to i32
  store i32 %conv5, i32* %items, align 4
  %8 = load i32, i32* %items, align 4
  %cmp = icmp ne i32 %8, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32, i32* %ax, align 4
  %add7 = add nsw i32 %9, 0
  %idxprom = sext i32 %add7 to i64
  %10 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %10, i64 %idxprom
  %11 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  store %struct.sv* %11, %struct.sv** %obj, align 8
  %12 = load %struct.sv*, %struct.sv** %obj, align 8
  %call = call %struct.sv* @net_mstore(%struct.sv* %12)
  store %struct.sv* %call, %struct.sv** %RETVAL, align 8
  %13 = load %struct.sv*, %struct.sv** %RETVAL, align 8
  %14 = load i32, i32* %ax, align 4
  %add8 = add nsw i32 %14, 0
  %idxprom9 = sext i32 %add8 to i64
  %15 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx10 = getelementptr inbounds %struct.sv*, %struct.sv** %15, i64 %idxprom9
  store %struct.sv* %13, %struct.sv** %arrayidx10, align 8
  %16 = load i32, i32* %ax, align 4
  %add11 = add nsw i32 %16, 0
  %idxprom12 = sext i32 %add11 to i64
  %17 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx13 = getelementptr inbounds %struct.sv*, %struct.sv** %17, i64 %idxprom12
  %18 = load %struct.sv*, %struct.sv** %arrayidx13, align 8
  %call14 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %18)
  store i64 1, i64* %tmpXSoff, align 8
  %19 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %20 = load i32, i32* %ax, align 4
  %idx.ext15 = sext i32 %20 to i64
  %add.ptr16 = getelementptr inbounds %struct.sv*, %struct.sv** %19, i64 %idx.ext15
  %21 = load i64, i64* %tmpXSoff, align 8
  %sub = sub nsw i64 %21, 1
  %add.ptr17 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr16, i64 %sub
  store %struct.sv** %add.ptr17, %struct.sv*** @PL_stack_sp, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @XS_Storable_pretrieve(%struct.cv* %cv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %sp = alloca %struct.sv**, align 8
  %mark = alloca %struct.sv**, align 8
  %ax = alloca i32, align 4
  %items = alloca i32, align 4
  %f = alloca %struct._PerlIO**, align 8
  %RETVAL = alloca %struct.sv*, align 8
  %tmpXSoff = alloca i64, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %2 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %2, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %3 = load i32, i32* %2, align 4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %1, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %4 = load %struct.sv**, %struct.sv*** %mark, align 8
  %5 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %4 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %add = add nsw i64 %sub.ptr.div, 1
  %conv = trunc i64 %add to i32
  store i32 %conv, i32* %ax, align 4
  %6 = load %struct.sv**, %struct.sv*** %sp, align 8
  %7 = load %struct.sv**, %struct.sv*** %mark, align 8
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %6 to i64
  %sub.ptr.rhs.cast2 = ptrtoint %struct.sv** %7 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2
  %sub.ptr.div4 = sdiv exact i64 %sub.ptr.sub3, 8
  %conv5 = trunc i64 %sub.ptr.div4 to i32
  store i32 %conv5, i32* %items, align 4
  %8 = load i32, i32* %items, align 4
  %cmp = icmp ne i32 %8, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32, i32* %ax, align 4
  %add7 = add nsw i32 %9, 0
  %idxprom = sext i32 %add7 to i64
  %10 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %10, i64 %idxprom
  %11 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  %call = call %struct.io* @Perl_sv_2io(%struct.sv* %11)
  %sv_any = getelementptr inbounds %struct.io, %struct.io* %call, i32 0, i32 0
  %12 = load %struct.xpvio*, %struct.xpvio** %sv_any, align 8
  %xio_ifp = getelementptr inbounds %struct.xpvio, %struct.xpvio* %12, i32 0, i32 7
  %13 = load %struct._PerlIO**, %struct._PerlIO*** %xio_ifp, align 8
  store %struct._PerlIO** %13, %struct._PerlIO*** %f, align 8
  %14 = load %struct._PerlIO**, %struct._PerlIO*** %f, align 8
  %call8 = call %struct.sv* @pretrieve(%struct._PerlIO** %14)
  store %struct.sv* %call8, %struct.sv** %RETVAL, align 8
  %15 = load %struct.sv*, %struct.sv** %RETVAL, align 8
  %16 = load i32, i32* %ax, align 4
  %add9 = add nsw i32 %16, 0
  %idxprom10 = sext i32 %add9 to i64
  %17 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx11 = getelementptr inbounds %struct.sv*, %struct.sv** %17, i64 %idxprom10
  store %struct.sv* %15, %struct.sv** %arrayidx11, align 8
  %18 = load i32, i32* %ax, align 4
  %add12 = add nsw i32 %18, 0
  %idxprom13 = sext i32 %add12 to i64
  %19 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx14 = getelementptr inbounds %struct.sv*, %struct.sv** %19, i64 %idxprom13
  %20 = load %struct.sv*, %struct.sv** %arrayidx14, align 8
  %call15 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %20)
  store i64 1, i64* %tmpXSoff, align 8
  %21 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %22 = load i32, i32* %ax, align 4
  %idx.ext16 = sext i32 %22 to i64
  %add.ptr17 = getelementptr inbounds %struct.sv*, %struct.sv** %21, i64 %idx.ext16
  %23 = load i64, i64* %tmpXSoff, align 8
  %sub = sub nsw i64 %23, 1
  %add.ptr18 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr17, i64 %sub
  store %struct.sv** %add.ptr18, %struct.sv*** @PL_stack_sp, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @XS_Storable_mretrieve(%struct.cv* %cv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %sp = alloca %struct.sv**, align 8
  %mark = alloca %struct.sv**, align 8
  %ax = alloca i32, align 4
  %items = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  %RETVAL = alloca %struct.sv*, align 8
  %tmpXSoff = alloca i64, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %2 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %2, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %3 = load i32, i32* %2, align 4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %1, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %4 = load %struct.sv**, %struct.sv*** %mark, align 8
  %5 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %4 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %add = add nsw i64 %sub.ptr.div, 1
  %conv = trunc i64 %add to i32
  store i32 %conv, i32* %ax, align 4
  %6 = load %struct.sv**, %struct.sv*** %sp, align 8
  %7 = load %struct.sv**, %struct.sv*** %mark, align 8
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %6 to i64
  %sub.ptr.rhs.cast2 = ptrtoint %struct.sv** %7 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2
  %sub.ptr.div4 = sdiv exact i64 %sub.ptr.sub3, 8
  %conv5 = trunc i64 %sub.ptr.div4 to i32
  store i32 %conv5, i32* %items, align 4
  %8 = load i32, i32* %items, align 4
  %cmp = icmp ne i32 %8, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32, i32* %ax, align 4
  %add7 = add nsw i32 %9, 0
  %idxprom = sext i32 %add7 to i64
  %10 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %10, i64 %idxprom
  %11 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  store %struct.sv* %11, %struct.sv** %sv, align 8
  %12 = load %struct.sv*, %struct.sv** %sv, align 8
  %call = call %struct.sv* @mretrieve(%struct.sv* %12)
  store %struct.sv* %call, %struct.sv** %RETVAL, align 8
  %13 = load %struct.sv*, %struct.sv** %RETVAL, align 8
  %14 = load i32, i32* %ax, align 4
  %add8 = add nsw i32 %14, 0
  %idxprom9 = sext i32 %add8 to i64
  %15 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx10 = getelementptr inbounds %struct.sv*, %struct.sv** %15, i64 %idxprom9
  store %struct.sv* %13, %struct.sv** %arrayidx10, align 8
  %16 = load i32, i32* %ax, align 4
  %add11 = add nsw i32 %16, 0
  %idxprom12 = sext i32 %add11 to i64
  %17 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx13 = getelementptr inbounds %struct.sv*, %struct.sv** %17, i64 %idxprom12
  %18 = load %struct.sv*, %struct.sv** %arrayidx13, align 8
  %call14 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %18)
  store i64 1, i64* %tmpXSoff, align 8
  %19 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %20 = load i32, i32* %ax, align 4
  %idx.ext15 = sext i32 %20 to i64
  %add.ptr16 = getelementptr inbounds %struct.sv*, %struct.sv** %19, i64 %idx.ext15
  %21 = load i64, i64* %tmpXSoff, align 8
  %sub = sub nsw i64 %21, 1
  %add.ptr17 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr16, i64 %sub
  store %struct.sv** %add.ptr17, %struct.sv*** @PL_stack_sp, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @XS_Storable_dclone(%struct.cv* %cv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %sp = alloca %struct.sv**, align 8
  %mark = alloca %struct.sv**, align 8
  %ax = alloca i32, align 4
  %items = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  %RETVAL = alloca %struct.sv*, align 8
  %tmpXSoff = alloca i64, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %2 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %2, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %3 = load i32, i32* %2, align 4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %1, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %4 = load %struct.sv**, %struct.sv*** %mark, align 8
  %5 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %4 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %add = add nsw i64 %sub.ptr.div, 1
  %conv = trunc i64 %add to i32
  store i32 %conv, i32* %ax, align 4
  %6 = load %struct.sv**, %struct.sv*** %sp, align 8
  %7 = load %struct.sv**, %struct.sv*** %mark, align 8
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %6 to i64
  %sub.ptr.rhs.cast2 = ptrtoint %struct.sv** %7 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2
  %sub.ptr.div4 = sdiv exact i64 %sub.ptr.sub3, 8
  %conv5 = trunc i64 %sub.ptr.div4 to i32
  store i32 %conv5, i32* %items, align 4
  %8 = load i32, i32* %items, align 4
  %cmp = icmp ne i32 %8, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32, i32* %ax, align 4
  %add7 = add nsw i32 %9, 0
  %idxprom = sext i32 %add7 to i64
  %10 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %10, i64 %idxprom
  %11 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  store %struct.sv* %11, %struct.sv** %sv, align 8
  %12 = load %struct.sv*, %struct.sv** %sv, align 8
  %call = call %struct.sv* @dclone(%struct.sv* %12)
  store %struct.sv* %call, %struct.sv** %RETVAL, align 8
  %13 = load %struct.sv*, %struct.sv** %RETVAL, align 8
  %14 = load i32, i32* %ax, align 4
  %add8 = add nsw i32 %14, 0
  %idxprom9 = sext i32 %add8 to i64
  %15 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx10 = getelementptr inbounds %struct.sv*, %struct.sv** %15, i64 %idxprom9
  store %struct.sv* %13, %struct.sv** %arrayidx10, align 8
  %16 = load i32, i32* %ax, align 4
  %add11 = add nsw i32 %16, 0
  %idxprom12 = sext i32 %add11 to i64
  %17 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx13 = getelementptr inbounds %struct.sv*, %struct.sv** %17, i64 %idxprom12
  %18 = load %struct.sv*, %struct.sv** %arrayidx13, align 8
  %call14 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %18)
  store i64 1, i64* %tmpXSoff, align 8
  %19 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %20 = load i32, i32* %ax, align 4
  %idx.ext15 = sext i32 %20 to i64
  %add.ptr16 = getelementptr inbounds %struct.sv*, %struct.sv** %19, i64 %idx.ext15
  %21 = load i64, i64* %tmpXSoff, align 8
  %sub = sub nsw i64 %21, 1
  %add.ptr17 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr16, i64 %sub
  store %struct.sv** %add.ptr17, %struct.sv*** @PL_stack_sp, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @XS_Storable_last_op_in_netorder(%struct.cv* %cv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %sp = alloca %struct.sv**, align 8
  %mark = alloca %struct.sv**, align 8
  %ax = alloca i32, align 4
  %items = alloca i32, align 4
  %RETVAL = alloca i32, align 4
  %targ = alloca %struct.sv*, align 8
  %tmp = alloca %struct.sv*, align 8
  %tmpXSoff = alloca i64, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %2 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %2, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %3 = load i32, i32* %2, align 4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %1, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %4 = load %struct.sv**, %struct.sv*** %mark, align 8
  %5 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %4 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %add = add nsw i64 %sub.ptr.div, 1
  %conv = trunc i64 %add to i32
  store i32 %conv, i32* %ax, align 4
  %6 = load %struct.sv**, %struct.sv*** %sp, align 8
  %7 = load %struct.sv**, %struct.sv*** %mark, align 8
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %6 to i64
  %sub.ptr.rhs.cast2 = ptrtoint %struct.sv** %7 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2
  %sub.ptr.div4 = sdiv exact i64 %sub.ptr.sub3, 8
  %conv5 = trunc i64 %sub.ptr.div4 to i32
  store i32 %conv5, i32* %items, align 4
  %8 = load i32, i32* %items, align 4
  %cmp = icmp ne i32 %8, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.9, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %9, i32 0, i32 7
  %10 = load i8, i8* %op_private, align 1
  %conv7 = zext i8 %10 to i32
  %and = and i32 %conv7, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %11 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ = getelementptr inbounds %struct.op, %struct.op* %11, i32 0, i32 3
  %12 = load i64, i64* %op_targ, align 8
  %13 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %13, i64 %12
  %14 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %call = call %struct.sv* @Perl_sv_newmortal()
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.sv* [ %14, %cond.true ], [ %call, %cond.false ]
  store %struct.sv* %cond, %struct.sv** %targ, align 8
  %call8 = call i32 @last_op_in_netorder()
  store i32 %call8, i32* %RETVAL, align 4
  %15 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %16 = load i32, i32* %ax, align 4
  %idx.ext9 = sext i32 %16 to i64
  %add.ptr10 = getelementptr inbounds %struct.sv*, %struct.sv** %15, i64 %idx.ext9
  %add.ptr11 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr10, i64 -1
  store %struct.sv** %add.ptr11, %struct.sv*** %sp, align 8
  %17 = load %struct.sv*, %struct.sv** %targ, align 8
  %18 = load i32, i32* %RETVAL, align 4
  %conv12 = sext i32 %18 to i64
  call void @Perl_sv_setiv(%struct.sv* %17, i64 %conv12)
  %19 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %19, i32 0, i32 2
  %20 = load i32, i32* %sv_flags, align 4
  %and13 = and i32 %20, 16384
  %tobool14 = icmp ne i32 %and13, 0
  br i1 %tobool14, label %if.then.15, label %if.end.17

if.then.15:                                       ; preds = %cond.end
  %21 = load %struct.sv*, %struct.sv** %targ, align 8
  %call16 = call i32 @Perl_mg_set(%struct.sv* %21)
  br label %if.end.17

if.end.17:                                        ; preds = %if.then.15, %cond.end
  %22 = load %struct.sv*, %struct.sv** %targ, align 8
  %23 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr18 = getelementptr inbounds %struct.sv*, %struct.sv** %23, i32 1
  store %struct.sv** %incdec.ptr18, %struct.sv*** %sp, align 8
  store %struct.sv* %22, %struct.sv** %incdec.ptr18, align 8
  store %struct.sv* %22, %struct.sv** %tmp
  %24 = load %struct.sv*, %struct.sv** %tmp
  store i64 1, i64* %tmpXSoff, align 8
  %25 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %26 = load i32, i32* %ax, align 4
  %idx.ext20 = sext i32 %26 to i64
  %add.ptr21 = getelementptr inbounds %struct.sv*, %struct.sv** %25, i64 %idx.ext20
  %27 = load i64, i64* %tmpXSoff, align 8
  %sub = sub nsw i64 %27, 1
  %add.ptr22 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr21, i64 %sub
  store %struct.sv** %add.ptr22, %struct.sv*** @PL_stack_sp, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @XS_Storable_is_storing(%struct.cv* %cv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %sp = alloca %struct.sv**, align 8
  %mark = alloca %struct.sv**, align 8
  %ax = alloca i32, align 4
  %items = alloca i32, align 4
  %RETVAL = alloca i32, align 4
  %targ = alloca %struct.sv*, align 8
  %tmp = alloca %struct.sv*, align 8
  %tmpXSoff = alloca i64, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %2 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %2, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %3 = load i32, i32* %2, align 4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %1, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %4 = load %struct.sv**, %struct.sv*** %mark, align 8
  %5 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %4 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %add = add nsw i64 %sub.ptr.div, 1
  %conv = trunc i64 %add to i32
  store i32 %conv, i32* %ax, align 4
  %6 = load %struct.sv**, %struct.sv*** %sp, align 8
  %7 = load %struct.sv**, %struct.sv*** %mark, align 8
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %6 to i64
  %sub.ptr.rhs.cast2 = ptrtoint %struct.sv** %7 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2
  %sub.ptr.div4 = sdiv exact i64 %sub.ptr.sub3, 8
  %conv5 = trunc i64 %sub.ptr.div4 to i32
  store i32 %conv5, i32* %items, align 4
  %8 = load i32, i32* %items, align 4
  %cmp = icmp ne i32 %8, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %9, i32 0, i32 7
  %10 = load i8, i8* %op_private, align 1
  %conv7 = zext i8 %10 to i32
  %and = and i32 %conv7, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %11 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ = getelementptr inbounds %struct.op, %struct.op* %11, i32 0, i32 3
  %12 = load i64, i64* %op_targ, align 8
  %13 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %13, i64 %12
  %14 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %call = call %struct.sv* @Perl_sv_newmortal()
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.sv* [ %14, %cond.true ], [ %call, %cond.false ]
  store %struct.sv* %cond, %struct.sv** %targ, align 8
  %call8 = call i32 @is_storing()
  store i32 %call8, i32* %RETVAL, align 4
  %15 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %16 = load i32, i32* %ax, align 4
  %idx.ext9 = sext i32 %16 to i64
  %add.ptr10 = getelementptr inbounds %struct.sv*, %struct.sv** %15, i64 %idx.ext9
  %add.ptr11 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr10, i64 -1
  store %struct.sv** %add.ptr11, %struct.sv*** %sp, align 8
  %17 = load %struct.sv*, %struct.sv** %targ, align 8
  %18 = load i32, i32* %RETVAL, align 4
  %conv12 = sext i32 %18 to i64
  call void @Perl_sv_setiv(%struct.sv* %17, i64 %conv12)
  %19 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %19, i32 0, i32 2
  %20 = load i32, i32* %sv_flags, align 4
  %and13 = and i32 %20, 16384
  %tobool14 = icmp ne i32 %and13, 0
  br i1 %tobool14, label %if.then.15, label %if.end.17

if.then.15:                                       ; preds = %cond.end
  %21 = load %struct.sv*, %struct.sv** %targ, align 8
  %call16 = call i32 @Perl_mg_set(%struct.sv* %21)
  br label %if.end.17

if.end.17:                                        ; preds = %if.then.15, %cond.end
  %22 = load %struct.sv*, %struct.sv** %targ, align 8
  %23 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr18 = getelementptr inbounds %struct.sv*, %struct.sv** %23, i32 1
  store %struct.sv** %incdec.ptr18, %struct.sv*** %sp, align 8
  store %struct.sv* %22, %struct.sv** %incdec.ptr18, align 8
  store %struct.sv* %22, %struct.sv** %tmp
  %24 = load %struct.sv*, %struct.sv** %tmp
  store i64 1, i64* %tmpXSoff, align 8
  %25 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %26 = load i32, i32* %ax, align 4
  %idx.ext20 = sext i32 %26 to i64
  %add.ptr21 = getelementptr inbounds %struct.sv*, %struct.sv** %25, i64 %idx.ext20
  %27 = load i64, i64* %tmpXSoff, align 8
  %sub = sub nsw i64 %27, 1
  %add.ptr22 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr21, i64 %sub
  store %struct.sv** %add.ptr22, %struct.sv*** @PL_stack_sp, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @XS_Storable_is_retrieving(%struct.cv* %cv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %sp = alloca %struct.sv**, align 8
  %mark = alloca %struct.sv**, align 8
  %ax = alloca i32, align 4
  %items = alloca i32, align 4
  %RETVAL = alloca i32, align 4
  %targ = alloca %struct.sv*, align 8
  %tmp = alloca %struct.sv*, align 8
  %tmpXSoff = alloca i64, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %2 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %2, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %3 = load i32, i32* %2, align 4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %1, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %4 = load %struct.sv**, %struct.sv*** %mark, align 8
  %5 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %4 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %add = add nsw i64 %sub.ptr.div, 1
  %conv = trunc i64 %add to i32
  store i32 %conv, i32* %ax, align 4
  %6 = load %struct.sv**, %struct.sv*** %sp, align 8
  %7 = load %struct.sv**, %struct.sv*** %mark, align 8
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %6 to i64
  %sub.ptr.rhs.cast2 = ptrtoint %struct.sv** %7 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2
  %sub.ptr.div4 = sdiv exact i64 %sub.ptr.sub3, 8
  %conv5 = trunc i64 %sub.ptr.div4 to i32
  store i32 %conv5, i32* %items, align 4
  %8 = load i32, i32* %items, align 4
  %cmp = icmp ne i32 %8, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %9, i32 0, i32 7
  %10 = load i8, i8* %op_private, align 1
  %conv7 = zext i8 %10 to i32
  %and = and i32 %conv7, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %11 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_targ = getelementptr inbounds %struct.op, %struct.op* %11, i32 0, i32 3
  %12 = load i64, i64* %op_targ, align 8
  %13 = load %struct.sv**, %struct.sv*** @PL_curpad, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %13, i64 %12
  %14 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %call = call %struct.sv* @Perl_sv_newmortal()
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.sv* [ %14, %cond.true ], [ %call, %cond.false ]
  store %struct.sv* %cond, %struct.sv** %targ, align 8
  %call8 = call i32 @is_retrieving()
  store i32 %call8, i32* %RETVAL, align 4
  %15 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %16 = load i32, i32* %ax, align 4
  %idx.ext9 = sext i32 %16 to i64
  %add.ptr10 = getelementptr inbounds %struct.sv*, %struct.sv** %15, i64 %idx.ext9
  %add.ptr11 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr10, i64 -1
  store %struct.sv** %add.ptr11, %struct.sv*** %sp, align 8
  %17 = load %struct.sv*, %struct.sv** %targ, align 8
  %18 = load i32, i32* %RETVAL, align 4
  %conv12 = sext i32 %18 to i64
  call void @Perl_sv_setiv(%struct.sv* %17, i64 %conv12)
  %19 = load %struct.sv*, %struct.sv** %targ, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %19, i32 0, i32 2
  %20 = load i32, i32* %sv_flags, align 4
  %and13 = and i32 %20, 16384
  %tobool14 = icmp ne i32 %and13, 0
  br i1 %tobool14, label %if.then.15, label %if.end.17

if.then.15:                                       ; preds = %cond.end
  %21 = load %struct.sv*, %struct.sv** %targ, align 8
  %call16 = call i32 @Perl_mg_set(%struct.sv* %21)
  br label %if.end.17

if.end.17:                                        ; preds = %if.then.15, %cond.end
  %22 = load %struct.sv*, %struct.sv** %targ, align 8
  %23 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr18 = getelementptr inbounds %struct.sv*, %struct.sv** %23, i32 1
  store %struct.sv** %incdec.ptr18, %struct.sv*** %sp, align 8
  store %struct.sv* %22, %struct.sv** %incdec.ptr18, align 8
  store %struct.sv* %22, %struct.sv** %tmp
  %24 = load %struct.sv*, %struct.sv** %tmp
  store i64 1, i64* %tmpXSoff, align 8
  %25 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %26 = load i32, i32* %ax, align 4
  %idx.ext20 = sext i32 %26 to i64
  %add.ptr21 = getelementptr inbounds %struct.sv*, %struct.sv** %25, i64 %idx.ext20
  %27 = load i64, i64* %tmpXSoff, align 8
  %sub = sub nsw i64 %27, 1
  %add.ptr22 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr21, i64 %sub
  store %struct.sv** %add.ptr22, %struct.sv*** @PL_stack_sp, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @boot_Storable(%struct.cv* %cv) #0 {
entry:
  %cv.addr = alloca %struct.cv*, align 8
  %sp = alloca %struct.sv**, align 8
  %mark = alloca %struct.sv**, align 8
  %ax = alloca i32, align 4
  %items = alloca i32, align 4
  %file = alloca i8*, align 8
  %tmpXSoff = alloca i64, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %2 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %2, i32 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %3 = load i32, i32* %2, align 4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %1, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** %mark, align 8
  %4 = load %struct.sv**, %struct.sv*** %mark, align 8
  %5 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %4 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %add = add nsw i64 %sub.ptr.div, 1
  %conv = trunc i64 %add to i32
  store i32 %conv, i32* %ax, align 4
  %6 = load %struct.sv**, %struct.sv*** %sp, align 8
  %7 = load %struct.sv**, %struct.sv*** %mark, align 8
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %6 to i64
  %sub.ptr.rhs.cast2 = ptrtoint %struct.sv** %7 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2
  %sub.ptr.div4 = sdiv exact i64 %sub.ptr.sub3, 8
  %conv5 = trunc i64 %sub.ptr.div4 to i32
  store i32 %conv5, i32* %items, align 4
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i32 0, i32 0), i8** %file, align 8
  %8 = load i8*, i8** %file, align 8
  %call = call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i32 0, i32 0), void (%struct.cv*)* @XS_Storable__Cxt_DESTROY, i8* %8)
  %9 = load i8*, i8** %file, align 8
  %call6 = call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i32 0, i32 0), void (%struct.cv*)* @XS_Storable_init_perinterp, i8* %9)
  %10 = bitcast %struct.cv* %call6 to %struct.sv*
  call void @Perl_sv_setpv(%struct.sv* %10, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i32 0, i32 0))
  %11 = load i8*, i8** %file, align 8
  %call7 = call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i32 0, i32 0), void (%struct.cv*)* @XS_Storable_pstore, i8* %11)
  %12 = bitcast %struct.cv* %call7 to %struct.sv*
  call void @Perl_sv_setpv(%struct.sv* %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i32 0, i32 0))
  %13 = load i8*, i8** %file, align 8
  %call8 = call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i32 0, i32 0), void (%struct.cv*)* @XS_Storable_net_pstore, i8* %13)
  %14 = bitcast %struct.cv* %call8 to %struct.sv*
  call void @Perl_sv_setpv(%struct.sv* %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i32 0, i32 0))
  %15 = load i8*, i8** %file, align 8
  %call9 = call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i32 0, i32 0), void (%struct.cv*)* @XS_Storable_mstore, i8* %15)
  %16 = bitcast %struct.cv* %call9 to %struct.sv*
  call void @Perl_sv_setpv(%struct.sv* %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i32 0, i32 0))
  %17 = load i8*, i8** %file, align 8
  %call10 = call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21, i32 0, i32 0), void (%struct.cv*)* @XS_Storable_net_mstore, i8* %17)
  %18 = bitcast %struct.cv* %call10 to %struct.sv*
  call void @Perl_sv_setpv(%struct.sv* %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i32 0, i32 0))
  %19 = load i8*, i8** %file, align 8
  %call11 = call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22, i32 0, i32 0), void (%struct.cv*)* @XS_Storable_pretrieve, i8* %19)
  %20 = bitcast %struct.cv* %call11 to %struct.sv*
  call void @Perl_sv_setpv(%struct.sv* %20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i32 0, i32 0))
  %21 = load i8*, i8** %file, align 8
  %call12 = call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23, i32 0, i32 0), void (%struct.cv*)* @XS_Storable_mretrieve, i8* %21)
  %22 = bitcast %struct.cv* %call12 to %struct.sv*
  call void @Perl_sv_setpv(%struct.sv* %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i32 0, i32 0))
  %23 = load i8*, i8** %file, align 8
  %call13 = call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i32 0, i32 0), void (%struct.cv*)* @XS_Storable_dclone, i8* %23)
  %24 = bitcast %struct.cv* %call13 to %struct.sv*
  call void @Perl_sv_setpv(%struct.sv* %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i32 0, i32 0))
  %25 = load i8*, i8** %file, align 8
  %call14 = call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i32 0, i32 0), void (%struct.cv*)* @XS_Storable_last_op_in_netorder, i8* %25)
  %26 = bitcast %struct.cv* %call14 to %struct.sv*
  call void @Perl_sv_setpv(%struct.sv* %26, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i32 0, i32 0))
  %27 = load i8*, i8** %file, align 8
  %call15 = call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i32 0, i32 0), void (%struct.cv*)* @XS_Storable_is_storing, i8* %27)
  %28 = bitcast %struct.cv* %call15 to %struct.sv*
  call void @Perl_sv_setpv(%struct.sv* %28, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i32 0, i32 0))
  %29 = load i8*, i8** %file, align 8
  %call16 = call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i32 0, i32 0), void (%struct.cv*)* @XS_Storable_is_retrieving, i8* %29)
  %30 = bitcast %struct.cv* %call16 to %struct.sv*
  call void @Perl_sv_setpv(%struct.sv* %30, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i32 0, i32 0))
  call void @init_perinterp()
  %call17 = call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.28, i32 0, i32 0), i32 2, i32 4)
  %31 = load i32, i32* %ax, align 4
  %add18 = add nsw i32 %31, 0
  %idxprom = sext i32 %add18 to i64
  %32 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %32, i64 %idxprom
  store %struct.sv* @PL_sv_yes, %struct.sv** %arrayidx, align 8
  store i64 1, i64* %tmpXSoff, align 8
  %33 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %34 = load i32, i32* %ax, align 4
  %idx.ext19 = sext i32 %34 to i64
  %add.ptr20 = getelementptr inbounds %struct.sv*, %struct.sv** %33, i64 %idx.ext19
  %35 = load i64, i64* %tmpXSoff, align 8
  %sub = sub nsw i64 %35, 1
  %add.ptr21 = getelementptr inbounds %struct.sv*, %struct.sv** %add.ptr20, i64 %sub
  store %struct.sv** %add.ptr21, %struct.sv*** @PL_stack_sp, align 8
  ret void
}

declare %struct.cv* @Perl_newXS(i8*, void (%struct.cv*)*, i8*) #1

declare void @Perl_sv_setpv(%struct.sv*, i8*) #1

declare %struct.gv* @Perl_gv_fetchpv(i8*, i32, i32) #1

; Function Attrs: nounwind uwtable
define internal %struct.stcxt* @allocate_context(%struct.stcxt* %parent_cxt) #0 {
entry:
  %parent_cxt.addr = alloca %struct.stcxt*, align 8
  %cxt = alloca %struct.stcxt*, align 8
  %self = alloca %struct.sv*, align 8
  %my_sv = alloca %struct.sv*, align 8
  %tmp = alloca %struct.sv*, align 8
  store %struct.stcxt* %parent_cxt, %struct.stcxt** %parent_cxt.addr, align 8
  %call = call %struct.sv* @Perl_newSV(i64 255)
  store %struct.sv* %call, %struct.sv** %self, align 8
  %0 = load %struct.sv*, %struct.sv** %self, align 8
  %call1 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %0)
  store %struct.sv* %call1, %struct.sv** %my_sv, align 8
  %1 = load %struct.sv*, %struct.sv** %my_sv, align 8
  %call2 = call %struct.hv* @Perl_gv_stashpv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.30, i32 0, i32 0), i32 1)
  %call3 = call %struct.sv* @Perl_sv_bless(%struct.sv* %1, %struct.hv* %call2)
  %2 = load %struct.sv*, %struct.sv** %self, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 0
  %3 = load i8*, i8** %sv_any, align 8
  %4 = bitcast i8* %3 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %4, i32 0, i32 0
  %5 = load i8*, i8** %xpv_pv, align 8
  %6 = bitcast i8* %5 to %struct.stcxt*
  store %struct.stcxt* %6, %struct.stcxt** %cxt, align 8
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %8 = bitcast %struct.stcxt* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 256, i32 1, i1 false)
  %9 = load %struct.sv*, %struct.sv** %my_sv, align 8
  %10 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %my_sv4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %10, i32 0, i32 28
  store %struct.sv* %9, %struct.sv** %my_sv4, align 8
  store %struct.sv* %9, %struct.sv** %tmp
  %11 = load %struct.sv*, %struct.sv** %tmp
  %12 = load %struct.stcxt*, %struct.stcxt** %parent_cxt.addr, align 8
  %my_sv5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 28
  %13 = load %struct.sv*, %struct.sv** %my_sv5, align 8
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %prev = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 27
  store %struct.sv* %13, %struct.sv** %prev, align 8
  %15 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  store %struct.stcxt* %15, %struct.stcxt** @Context_ptr, align 8
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  ret %struct.stcxt* %16
}

; Function Attrs: nounwind uwtable
define internal void @init_store_context(%struct.stcxt* %cxt, %struct._PerlIO** %f, i32 %optype, i32 %network_order) #0 {
entry:
  %cxt.addr = alloca %struct.stcxt*, align 8
  %f.addr = alloca %struct._PerlIO**, align 8
  %optype.addr = alloca i32, align 4
  %network_order.addr = alloca i32, align 4
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct._PerlIO** %f, %struct._PerlIO*** %f.addr, align 8
  store i32 %optype, i32* %optype.addr, align 4
  store i32 %network_order, i32* %network_order.addr, align 4
  %0 = load i32, i32* %network_order.addr, align 4
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 11
  store i32 %0, i32* %netorder, align 4
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %forgive_me = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 13
  store i32 -1, i32* %forgive_me, align 4
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %deparse = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 14
  store i32 -1, i32* %deparse, align 4
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 15
  store %struct.sv* null, %struct.sv** %eval, align 8
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %canonical = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 16
  store i32 -1, i32* %canonical, align 4
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 9
  store i64 -1, i64* %tagnum, align 8
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %classnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 10
  store i64 -1, i64* %classnum, align 8
  %8 = load %struct._PerlIO**, %struct._PerlIO*** %f.addr, align 8
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 23
  store %struct._PerlIO** %8, %struct._PerlIO*** %fio, align 8
  %10 = load i32, i32* %optype.addr, align 4
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %optype1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 1
  store i32 %10, i32* %optype1, align 4
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %entry2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 0
  store i32 1, i32* %entry2, align 4
  %call = call %struct.hv* @Perl_newHV()
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 2
  store %struct.hv* %call, %struct.hv** %hseen, align 8
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 2
  %15 = load %struct.hv*, %struct.hv** %hseen3, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %15, i32 0, i32 2
  %16 = load i32, i32* %sv_flags, align 4
  %and = and i32 %16, -536870913
  store i32 %and, i32* %sv_flags, align 4
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 2
  %18 = load %struct.hv*, %struct.hv** %hseen4, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %18, i32 0, i32 0
  %19 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_max = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %19, i32 0, i32 2
  store i64 4095, i64* %xhv_max, align 8
  %call5 = call %struct.hv* @Perl_newHV()
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hclass = getelementptr inbounds %struct.stcxt, %struct.stcxt* %20, i32 0, i32 6
  store %struct.hv* %call5, %struct.hv** %hclass, align 8
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hclass6 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 6
  %22 = load %struct.hv*, %struct.hv** %hclass6, align 8
  %sv_any7 = getelementptr inbounds %struct.hv, %struct.hv* %22, i32 0, i32 0
  %23 = load %struct.xpvhv*, %struct.xpvhv** %sv_any7, align 8
  %xhv_max8 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %23, i32 0, i32 2
  store i64 4095, i64* %xhv_max8, align 8
  %call9 = call %struct.hv* @Perl_newHV()
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 8
  store %struct.hv* %call9, %struct.hv** %hook, align 8
  %call10 = call %struct.av* @Perl_newAV()
  %25 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook_seen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %25, i32 0, i32 3
  store %struct.av* %call10, %struct.av** %hook_seen, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @magic_write(%struct.stcxt* %cxt) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %header = alloca i8*, align 8
  %length = alloca i64, align 8
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %tmp38 = alloca i8*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 11
  %1 = load i32, i32* %netorder, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @magic_write.network_file_header, i32 0, i32 0), i8** %header, align 8
  store i64 6, i64* %length, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @magic_write.file_header, i32 0, i32 0), i8** %header, align 8
  store i64 19, i64* %length, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 23
  %3 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool1 = icmp ne %struct._PerlIO** %3, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %4 = load i8*, i8** %header, align 8
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 4
  store i8* %add.ptr, i8** %header, align 8
  %5 = load i64, i64* %length, align 8
  %sub = sub i64 %5, 4
  store i64 %sub, i64* %length, align 8
  br label %if.end.3

if.end.3:                                         ; preds = %if.then.2, %if.end
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 23
  %7 = load %struct._PerlIO**, %struct._PerlIO*** %fio4, align 8
  %tobool5 = icmp ne %struct._PerlIO** %7, null
  br i1 %tobool5, label %if.else.42, label %if.then.6

if.then.6:                                        ; preds = %if.end.3
  %8 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %8, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %9 = load i8*, i8** %aptr, align 8
  %10 = load i64, i64* %length, align 8
  %add.ptr7 = getelementptr inbounds i8, i8* %9, i64 %10
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf8 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf8, i32 0, i32 3
  %12 = load i8*, i8** %aend, align 8
  %cmp = icmp ugt i8* %add.ptr7, %12
  br i1 %cmp, label %if.then.9, label %if.end.35

if.then.9:                                        ; preds = %if.then.6
  %13 = load i64, i64* %length, align 8
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf10 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 21
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf10, i32 0, i32 1
  %15 = load i64, i64* %asiz, align 8
  %add = add i64 %13, %15
  %add11 = add i64 %add, 8191
  %and = and i64 %add11, -8192
  %conv = trunc i64 %and to i32
  store i32 %conv, i32* %nsz, align 4
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf12 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 21
  %aptr13 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf12, i32 0, i32 2
  %17 = load i8*, i8** %aptr13, align 8
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 21
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf14, i32 0, i32 0
  %19 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %17 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %19 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv15 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv15, i32* %offset, align 4
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf16 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %20, i32 0, i32 21
  %arena17 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf16, i32 0, i32 0
  %21 = load i8*, i8** %arena17, align 8
  %22 = load i32, i32* %nsz, align 4
  %conv18 = sext i32 %22 to i64
  %mul = mul i64 %conv18, 1
  %call = call i8* @Perl_safesysrealloc(i8* %21, i64 %mul)
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 21
  %arena20 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf19, i32 0, i32 0
  store i8* %call, i8** %arena20, align 8
  %24 = load i32, i32* %nsz, align 4
  %conv21 = sext i32 %24 to i64
  %25 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %25, i32 0, i32 21
  %asiz23 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf22, i32 0, i32 1
  store i64 %conv21, i64* %asiz23, align 8
  %26 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf24 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %26, i32 0, i32 21
  %arena25 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf24, i32 0, i32 0
  %27 = load i8*, i8** %arena25, align 8
  %28 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %28 to i64
  %add.ptr26 = getelementptr inbounds i8, i8* %27, i64 %idx.ext
  %29 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf27 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %29, i32 0, i32 21
  %aptr28 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf27, i32 0, i32 2
  store i8* %add.ptr26, i8** %aptr28, align 8
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf29 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 21
  %arena30 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf29, i32 0, i32 0
  %31 = load i8*, i8** %arena30, align 8
  %32 = load i32, i32* %nsz, align 4
  %idx.ext31 = sext i32 %32 to i64
  %add.ptr32 = getelementptr inbounds i8, i8* %31, i64 %idx.ext31
  %33 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf33 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %33, i32 0, i32 21
  %aend34 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf33, i32 0, i32 3
  store i8* %add.ptr32, i8** %aend34, align 8
  store i8* %add.ptr32, i8** %tmp
  %34 = load i8*, i8** %tmp
  br label %if.end.35

if.end.35:                                        ; preds = %if.then.9, %if.then.6
  %35 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf36 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %35, i32 0, i32 21
  %aptr37 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf36, i32 0, i32 2
  %36 = load i8*, i8** %aptr37, align 8
  %37 = load i8*, i8** %header, align 8
  %38 = load i64, i64* %length, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 %38, i32 1, i1 false)
  %39 = load i64, i64* %length, align 8
  %40 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf39 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %40, i32 0, i32 21
  %aptr40 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf39, i32 0, i32 2
  %41 = load i8*, i8** %aptr40, align 8
  %add.ptr41 = getelementptr inbounds i8, i8* %41, i64 %39
  store i8* %add.ptr41, i8** %aptr40, align 8
  store i8* %add.ptr41, i8** %tmp38
  %42 = load i8*, i8** %tmp38
  br label %if.end.49

if.else.42:                                       ; preds = %if.end.3
  %43 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio43 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %43, i32 0, i32 23
  %44 = load %struct._PerlIO**, %struct._PerlIO*** %fio43, align 8
  %45 = load i8*, i8** %header, align 8
  %46 = load i64, i64* %length, align 8
  %call44 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %44, i8* %45, i64 %46)
  %47 = load i64, i64* %length, align 8
  %cmp45 = icmp ne i64 %call44, %47
  br i1 %cmp45, label %if.then.47, label %if.end.48

if.then.47:                                       ; preds = %if.else.42
  store i32 -1, i32* %retval
  br label %return

if.end.48:                                        ; preds = %if.else.42
  br label %if.end.49

if.end.49:                                        ; preds = %if.end.48, %if.end.35
  %48 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder50 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %48, i32 0, i32 11
  %49 = load i32, i32* %netorder50, align 4
  %tobool51 = icmp ne i32 %49, 0
  br i1 %tobool51, label %if.end.53, label %if.then.52

if.then.52:                                       ; preds = %if.end.49
  br label %if.end.53

if.end.53:                                        ; preds = %if.then.52, %if.end.49
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.53, %if.then.47
  %50 = load i32, i32* %retval
  ret i32 %50
}

; Function Attrs: nounwind uwtable
define internal i32 @store(%struct.stcxt* %cxt, %struct.sv* %sv) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %svh = alloca %struct.sv**, align 8
  %ret = alloca i32, align 4
  %type = alloca i32, align 4
  %hseen = alloca %struct.hv*, align 8
  %tagval = alloca i32, align 4
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %nsz65 = alloca i32, align 4
  %offset73 = alloca i32, align 4
  %tmp98 = alloca i8*, align 8
  %tmp120 = alloca i8*, align 8
  %pkg = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 2
  %1 = load %struct.hv*, %struct.hv** %hseen1, align 8
  store %struct.hv* %1, %struct.hv** %hseen, align 8
  %2 = load %struct.hv*, %struct.hv** %hseen, align 8
  %3 = bitcast %struct.sv** %sv.addr to i8*
  %call = call %struct.sv** @Perl_hv_fetch(%struct.hv* %2, i8* %3, i32 8, i32 0)
  store %struct.sv** %call, %struct.sv*** %svh, align 8
  %4 = load %struct.sv**, %struct.sv*** %svh, align 8
  %tobool = icmp ne %struct.sv** %4, null
  br i1 %tobool, label %if.then, label %if.end.132

if.then:                                          ; preds = %entry
  %5 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %cmp = icmp eq %struct.sv* %5, @PL_sv_undef
  br i1 %cmp, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %if.then
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 9
  %7 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %7, 1
  store i64 %inc, i64* %tagnum, align 8
  store i32 1, i32* %type, align 4
  br label %undef_special_case

if.end:                                           ; preds = %if.then
  %8 = load %struct.sv**, %struct.sv*** %svh, align 8
  %9 = load %struct.sv*, %struct.sv** %8, align 8
  %10 = ptrtoint %struct.sv* %9 to i64
  %and = and i64 %10, 4294967295
  %conv = trunc i64 %and to i32
  %conv3 = sext i32 %conv to i64
  %call4 = call i64 @Perl_my_htonl(i64 %conv3)
  %conv5 = trunc i64 %call4 to i32
  store i32 %conv5, i32* %tagval, align 4
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 23
  %12 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool6 = icmp ne %struct._PerlIO** %12, null
  br i1 %tobool6, label %if.else.45, label %if.then.7

if.then.7:                                        ; preds = %if.end
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %14 = load i8*, i8** %aptr, align 8
  %15 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf8 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %15, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf8, i32 0, i32 3
  %16 = load i8*, i8** %aend, align 8
  %cmp9 = icmp ult i8* %14, %16
  br i1 %cmp9, label %if.then.11, label %if.else

if.then.11:                                       ; preds = %if.then.7
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf12 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 21
  %aptr13 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf12, i32 0, i32 2
  %18 = load i8*, i8** %aptr13, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr, i8** %aptr13, align 8
  store i8 0, i8* %18, align 1
  br label %if.end.44

if.else:                                          ; preds = %if.then.7
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 21
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf14, i32 0, i32 1
  %20 = load i64, i64* %asiz, align 8
  %add = add i64 1, %20
  %add15 = add i64 %add, 8191
  %and16 = and i64 %add15, -8192
  %conv17 = trunc i64 %and16 to i32
  store i32 %conv17, i32* %nsz, align 4
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf18 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 21
  %aptr19 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf18, i32 0, i32 2
  %22 = load i8*, i8** %aptr19, align 8
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf20 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 21
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf20, i32 0, i32 0
  %24 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %22 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %24 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv21 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv21, i32* %offset, align 4
  %25 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %25, i32 0, i32 21
  %arena23 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf22, i32 0, i32 0
  %26 = load i8*, i8** %arena23, align 8
  %27 = load i32, i32* %nsz, align 4
  %conv24 = sext i32 %27 to i64
  %mul = mul i64 %conv24, 1
  %call25 = call i8* @Perl_safesysrealloc(i8* %26, i64 %mul)
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf26 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 21
  %arena27 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf26, i32 0, i32 0
  store i8* %call25, i8** %arena27, align 8
  %29 = load i32, i32* %nsz, align 4
  %conv28 = sext i32 %29 to i64
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf29 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 21
  %asiz30 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf29, i32 0, i32 1
  store i64 %conv28, i64* %asiz30, align 8
  %31 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf31 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %31, i32 0, i32 21
  %arena32 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf31, i32 0, i32 0
  %32 = load i8*, i8** %arena32, align 8
  %33 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %33 to i64
  %add.ptr = getelementptr inbounds i8, i8* %32, i64 %idx.ext
  %34 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf33 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %34, i32 0, i32 21
  %aptr34 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf33, i32 0, i32 2
  store i8* %add.ptr, i8** %aptr34, align 8
  %35 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf35 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %35, i32 0, i32 21
  %arena36 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf35, i32 0, i32 0
  %36 = load i8*, i8** %arena36, align 8
  %37 = load i32, i32* %nsz, align 4
  %idx.ext37 = sext i32 %37 to i64
  %add.ptr38 = getelementptr inbounds i8, i8* %36, i64 %idx.ext37
  %38 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf39 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %38, i32 0, i32 21
  %aend40 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf39, i32 0, i32 3
  store i8* %add.ptr38, i8** %aend40, align 8
  store i8* %add.ptr38, i8** %tmp
  %39 = load i8*, i8** %tmp
  %40 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf41 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %40, i32 0, i32 21
  %aptr42 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf41, i32 0, i32 2
  %41 = load i8*, i8** %aptr42, align 8
  %incdec.ptr43 = getelementptr inbounds i8, i8* %41, i32 1
  store i8* %incdec.ptr43, i8** %aptr42, align 8
  store i8 0, i8* %41, align 1
  br label %if.end.44

if.end.44:                                        ; preds = %if.else, %if.then.11
  br label %if.end.52

if.else.45:                                       ; preds = %if.end
  %42 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio46 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %42, i32 0, i32 23
  %43 = load %struct._PerlIO**, %struct._PerlIO*** %fio46, align 8
  %call47 = call i32 @PerlIO_putc(%struct._PerlIO** %43, i32 0)
  %cmp48 = icmp eq i32 %call47, -1
  br i1 %cmp48, label %if.then.50, label %if.end.51

if.then.50:                                       ; preds = %if.else.45
  store i32 -1, i32* %retval
  br label %return

if.end.51:                                        ; preds = %if.else.45
  br label %if.end.52

if.end.52:                                        ; preds = %if.end.51, %if.end.44
  %44 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio53 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %44, i32 0, i32 23
  %45 = load %struct._PerlIO**, %struct._PerlIO*** %fio53, align 8
  %tobool54 = icmp ne %struct._PerlIO** %45, null
  br i1 %tobool54, label %if.else.124, label %if.then.55

if.then.55:                                       ; preds = %if.end.52
  %46 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf56 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %46, i32 0, i32 21
  %aptr57 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf56, i32 0, i32 2
  %47 = load i8*, i8** %aptr57, align 8
  %add.ptr58 = getelementptr inbounds i8, i8* %47, i64 4
  %48 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf59 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %48, i32 0, i32 21
  %aend60 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf59, i32 0, i32 3
  %49 = load i8*, i8** %aend60, align 8
  %cmp61 = icmp ugt i8* %add.ptr58, %49
  br i1 %cmp61, label %if.then.63, label %if.end.105

if.then.63:                                       ; preds = %if.then.55
  %50 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf66 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %50, i32 0, i32 21
  %asiz67 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf66, i32 0, i32 1
  %51 = load i64, i64* %asiz67, align 8
  %add68 = add i64 4, %51
  %add69 = add i64 %add68, 8191
  %and70 = and i64 %add69, -8192
  %conv71 = trunc i64 %and70 to i32
  store i32 %conv71, i32* %nsz65, align 4
  %52 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf74 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %52, i32 0, i32 21
  %aptr75 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf74, i32 0, i32 2
  %53 = load i8*, i8** %aptr75, align 8
  %54 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf76 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %54, i32 0, i32 21
  %arena77 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf76, i32 0, i32 0
  %55 = load i8*, i8** %arena77, align 8
  %sub.ptr.lhs.cast78 = ptrtoint i8* %53 to i64
  %sub.ptr.rhs.cast79 = ptrtoint i8* %55 to i64
  %sub.ptr.sub80 = sub i64 %sub.ptr.lhs.cast78, %sub.ptr.rhs.cast79
  %conv81 = trunc i64 %sub.ptr.sub80 to i32
  store i32 %conv81, i32* %offset73, align 4
  %56 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf82 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %56, i32 0, i32 21
  %arena83 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf82, i32 0, i32 0
  %57 = load i8*, i8** %arena83, align 8
  %58 = load i32, i32* %nsz65, align 4
  %conv84 = sext i32 %58 to i64
  %mul85 = mul i64 %conv84, 1
  %call86 = call i8* @Perl_safesysrealloc(i8* %57, i64 %mul85)
  %59 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf87 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %59, i32 0, i32 21
  %arena88 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf87, i32 0, i32 0
  store i8* %call86, i8** %arena88, align 8
  %60 = load i32, i32* %nsz65, align 4
  %conv89 = sext i32 %60 to i64
  %61 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf90 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %61, i32 0, i32 21
  %asiz91 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf90, i32 0, i32 1
  store i64 %conv89, i64* %asiz91, align 8
  %62 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf92 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %62, i32 0, i32 21
  %arena93 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf92, i32 0, i32 0
  %63 = load i8*, i8** %arena93, align 8
  %64 = load i32, i32* %offset73, align 4
  %idx.ext94 = sext i32 %64 to i64
  %add.ptr95 = getelementptr inbounds i8, i8* %63, i64 %idx.ext94
  %65 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf96 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %65, i32 0, i32 21
  %aptr97 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf96, i32 0, i32 2
  store i8* %add.ptr95, i8** %aptr97, align 8
  %66 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf99 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %66, i32 0, i32 21
  %arena100 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf99, i32 0, i32 0
  %67 = load i8*, i8** %arena100, align 8
  %68 = load i32, i32* %nsz65, align 4
  %idx.ext101 = sext i32 %68 to i64
  %add.ptr102 = getelementptr inbounds i8, i8* %67, i64 %idx.ext101
  %69 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf103 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %69, i32 0, i32 21
  %aend104 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf103, i32 0, i32 3
  store i8* %add.ptr102, i8** %aend104, align 8
  store i8* %add.ptr102, i8** %tmp98
  %70 = load i8*, i8** %tmp98
  br label %if.end.105

if.end.105:                                       ; preds = %if.then.63, %if.then.55
  %71 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf106 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %71, i32 0, i32 21
  %aptr107 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf106, i32 0, i32 2
  %72 = load i8*, i8** %aptr107, align 8
  %73 = ptrtoint i8* %72 to i64
  %74 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf108 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %74, i32 0, i32 21
  %aptr109 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf108, i32 0, i32 2
  %75 = load i8*, i8** %aptr109, align 8
  %76 = ptrtoint i8* %75 to i64
  %and110 = and i64 %76, -4
  %cmp111 = icmp eq i64 %73, %and110
  br i1 %cmp111, label %if.then.113, label %if.else.116

if.then.113:                                      ; preds = %if.end.105
  %77 = load i32, i32* %tagval, align 4
  %78 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf114 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %78, i32 0, i32 21
  %aptr115 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf114, i32 0, i32 2
  %79 = load i8*, i8** %aptr115, align 8
  %80 = bitcast i8* %79 to i32*
  store i32 %77, i32* %80, align 4
  br label %if.end.119

if.else.116:                                      ; preds = %if.end.105
  %81 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf117 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %81, i32 0, i32 21
  %aptr118 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf117, i32 0, i32 2
  %82 = load i8*, i8** %aptr118, align 8
  %83 = bitcast i32* %tagval to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %82, i8* %83, i64 4, i32 1, i1 false)
  br label %if.end.119

if.end.119:                                       ; preds = %if.else.116, %if.then.113
  %84 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf121 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %84, i32 0, i32 21
  %aptr122 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf121, i32 0, i32 2
  %85 = load i8*, i8** %aptr122, align 8
  %add.ptr123 = getelementptr inbounds i8, i8* %85, i64 4
  store i8* %add.ptr123, i8** %aptr122, align 8
  store i8* %add.ptr123, i8** %tmp120
  %86 = load i8*, i8** %tmp120
  br label %if.end.131

if.else.124:                                      ; preds = %if.end.52
  %87 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio125 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %87, i32 0, i32 23
  %88 = load %struct._PerlIO**, %struct._PerlIO*** %fio125, align 8
  %89 = bitcast i32* %tagval to i8*
  %call126 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %88, i8* %89, i64 4)
  %cmp127 = icmp ne i64 %call126, 4
  br i1 %cmp127, label %if.then.129, label %if.end.130

if.then.129:                                      ; preds = %if.else.124
  store i32 -1, i32* %retval
  br label %return

if.end.130:                                       ; preds = %if.else.124
  br label %if.end.131

if.end.131:                                       ; preds = %if.end.130, %if.end.119
  store i32 0, i32* %retval
  br label %return

if.end.132:                                       ; preds = %entry
  %90 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum133 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %90, i32 0, i32 9
  %91 = load i64, i64* %tagnum133, align 8
  %inc134 = add nsw i64 %91, 1
  store i64 %inc134, i64* %tagnum133, align 8
  %92 = load %struct.hv*, %struct.hv** %hseen, align 8
  %93 = bitcast %struct.sv** %sv.addr to i8*
  %94 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum135 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %94, i32 0, i32 9
  %95 = load i64, i64* %tagnum135, align 8
  %96 = inttoptr i64 %95 to %struct.sv*
  %call136 = call %struct.sv** @Perl_hv_store(%struct.hv* %92, i8* %93, i32 8, %struct.sv* %96, i32 0)
  %tobool137 = icmp ne %struct.sv** %call136, null
  br i1 %tobool137, label %if.end.139, label %if.then.138

if.then.138:                                      ; preds = %if.end.132
  store i32 -1, i32* %retval
  br label %return

if.end.139:                                       ; preds = %if.end.132
  %97 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call140 = call i32 @sv_type(%struct.sv* %97)
  store i32 %call140, i32* %type, align 4
  br label %undef_special_case

undef_special_case:                               ; preds = %if.end.139, %if.then.2
  %98 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %98, i32 0, i32 2
  %99 = load i32, i32* %sv_flags, align 4
  %and141 = and i32 %99, 4096
  %tobool142 = icmp ne i32 %and141, 0
  br i1 %tobool142, label %if.then.143, label %if.else.146

if.then.143:                                      ; preds = %undef_special_case
  %100 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %100, i32 0, i32 0
  %101 = load i8*, i8** %sv_any, align 8
  %102 = bitcast i8* %101 to %struct.xpvmg*
  %xmg_stash = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %102, i32 0, i32 6
  %103 = load %struct.hv*, %struct.hv** %xmg_stash, align 8
  store %struct.hv* %103, %struct.hv** %pkg, align 8
  %104 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %105 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %106 = load i32, i32* %type, align 4
  %107 = load %struct.hv*, %struct.hv** %pkg, align 8
  %call145 = call i32 @store_blessed(%struct.stcxt* %104, %struct.sv* %105, i32 %106, %struct.hv* %107)
  store i32 %call145, i32* %ret, align 4
  br label %if.end.148

if.else.146:                                      ; preds = %undef_special_case
  %108 = load i32, i32* %type, align 4
  %idxprom = sext i32 %108 to i64
  %arrayidx = getelementptr inbounds [8 x i32 (%struct.stcxt*, %struct.sv*)*], [8 x i32 (%struct.stcxt*, %struct.sv*)*]* @sv_store, i32 0, i64 %idxprom
  %109 = load i32 (%struct.stcxt*, %struct.sv*)*, i32 (%struct.stcxt*, %struct.sv*)** %arrayidx, align 8
  %110 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %111 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call147 = call i32 %109(%struct.stcxt* %110, %struct.sv* %111)
  store i32 %call147, i32* %ret, align 4
  br label %if.end.148

if.end.148:                                       ; preds = %if.else.146, %if.then.143
  %112 = load i32, i32* %ret, align 4
  store i32 %112, i32* %retval
  br label %return

return:                                           ; preds = %if.end.148, %if.then.138, %if.end.131, %if.then.129, %if.then.50
  %113 = load i32, i32* %retval
  ret i32 %113
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @mbuf2sv() #0 {
entry:
  %cxt = alloca %struct.stcxt*, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** @Context_ptr, align 8
  store %struct.stcxt* %0, %struct.stcxt** %cxt, align 8
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 21
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 0
  %2 = load i8*, i8** %arena, align 8
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1, i32 0, i32 2
  %4 = load i8*, i8** %aptr, align 8
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt, align 8
  %membuf2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 21
  %arena3 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2, i32 0, i32 0
  %6 = load i8*, i8** %arena3, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call = call %struct.sv* @Perl_newSVpv(i8* %2, i64 %sub.ptr.sub)
  ret %struct.sv* %call
}

; Function Attrs: nounwind uwtable
define internal void @clean_store_context(%struct.stcxt* %cxt) #0 {
entry:
  %cxt.addr = alloca %struct.stcxt*, align 8
  %he = alloca %struct.he*, align 8
  %hseen20 = alloca %struct.hv*, align 8
  %hclass27 = alloca %struct.hv*, align 8
  %hook33 = alloca %struct.hv*, align 8
  %hook_seen39 = alloca %struct.av*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 2
  %1 = load %struct.hv*, %struct.hv** %hseen, align 8
  %tobool = icmp ne %struct.hv* %1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 2
  %3 = load %struct.hv*, %struct.hv** %hseen1, align 8
  %call = call i32 @Perl_hv_iterinit(%struct.hv* %3)
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 2
  %5 = load %struct.hv*, %struct.hv** %hseen2, align 8
  %call3 = call %struct.he* @Perl_hv_iternext(%struct.hv* %5)
  store %struct.he* %call3, %struct.he** %he, align 8
  %tobool4 = icmp ne %struct.he* %call3, null
  br i1 %tobool4, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %6 = load %struct.he*, %struct.he** %he, align 8
  %hent_val = getelementptr inbounds %struct.he, %struct.he* %6, i32 0, i32 2
  store %struct.sv* @PL_sv_undef, %struct.sv** %hent_val, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end

if.end:                                           ; preds = %while.end, %entry
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hclass = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 6
  %8 = load %struct.hv*, %struct.hv** %hclass, align 8
  %tobool5 = icmp ne %struct.hv* %8, null
  br i1 %tobool5, label %if.then.6, label %if.end.16

if.then.6:                                        ; preds = %if.end
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hclass7 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 6
  %10 = load %struct.hv*, %struct.hv** %hclass7, align 8
  %call8 = call i32 @Perl_hv_iterinit(%struct.hv* %10)
  br label %while.cond.9

while.cond.9:                                     ; preds = %while.body.13, %if.then.6
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hclass10 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 6
  %12 = load %struct.hv*, %struct.hv** %hclass10, align 8
  %call11 = call %struct.he* @Perl_hv_iternext(%struct.hv* %12)
  store %struct.he* %call11, %struct.he** %he, align 8
  %tobool12 = icmp ne %struct.he* %call11, null
  br i1 %tobool12, label %while.body.13, label %while.end.15

while.body.13:                                    ; preds = %while.cond.9
  %13 = load %struct.he*, %struct.he** %he, align 8
  %hent_val14 = getelementptr inbounds %struct.he, %struct.he* %13, i32 0, i32 2
  store %struct.sv* @PL_sv_undef, %struct.sv** %hent_val14, align 8
  br label %while.cond.9

while.end.15:                                     ; preds = %while.cond.9
  br label %if.end.16

if.end.16:                                        ; preds = %while.end.15, %if.end
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen17 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 2
  %15 = load %struct.hv*, %struct.hv** %hseen17, align 8
  %tobool18 = icmp ne %struct.hv* %15, null
  br i1 %tobool18, label %if.then.19, label %if.end.23

if.then.19:                                       ; preds = %if.end.16
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen21 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 2
  %17 = load %struct.hv*, %struct.hv** %hseen21, align 8
  store %struct.hv* %17, %struct.hv** %hseen20, align 8
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 2
  store %struct.hv* null, %struct.hv** %hseen22, align 8
  %19 = load %struct.hv*, %struct.hv** %hseen20, align 8
  call void @Perl_hv_undef(%struct.hv* %19)
  %20 = load %struct.hv*, %struct.hv** %hseen20, align 8
  %21 = bitcast %struct.hv* %20 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %21)
  br label %if.end.23

if.end.23:                                        ; preds = %if.then.19, %if.end.16
  %22 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hclass24 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %22, i32 0, i32 6
  %23 = load %struct.hv*, %struct.hv** %hclass24, align 8
  %tobool25 = icmp ne %struct.hv* %23, null
  br i1 %tobool25, label %if.then.26, label %if.end.30

if.then.26:                                       ; preds = %if.end.23
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hclass28 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 6
  %25 = load %struct.hv*, %struct.hv** %hclass28, align 8
  store %struct.hv* %25, %struct.hv** %hclass27, align 8
  %26 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hclass29 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %26, i32 0, i32 6
  store %struct.hv* null, %struct.hv** %hclass29, align 8
  %27 = load %struct.hv*, %struct.hv** %hclass27, align 8
  call void @Perl_hv_undef(%struct.hv* %27)
  %28 = load %struct.hv*, %struct.hv** %hclass27, align 8
  %29 = bitcast %struct.hv* %28 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %29)
  br label %if.end.30

if.end.30:                                        ; preds = %if.then.26, %if.end.23
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 8
  %31 = load %struct.hv*, %struct.hv** %hook, align 8
  %tobool31 = icmp ne %struct.hv* %31, null
  br i1 %tobool31, label %if.then.32, label %if.end.36

if.then.32:                                       ; preds = %if.end.30
  %32 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook34 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %32, i32 0, i32 8
  %33 = load %struct.hv*, %struct.hv** %hook34, align 8
  store %struct.hv* %33, %struct.hv** %hook33, align 8
  %34 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook35 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %34, i32 0, i32 8
  store %struct.hv* null, %struct.hv** %hook35, align 8
  %35 = load %struct.hv*, %struct.hv** %hook33, align 8
  call void @Perl_hv_undef(%struct.hv* %35)
  %36 = load %struct.hv*, %struct.hv** %hook33, align 8
  %37 = bitcast %struct.hv* %36 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %37)
  br label %if.end.36

if.end.36:                                        ; preds = %if.then.32, %if.end.30
  %38 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook_seen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %38, i32 0, i32 3
  %39 = load %struct.av*, %struct.av** %hook_seen, align 8
  %tobool37 = icmp ne %struct.av* %39, null
  br i1 %tobool37, label %if.then.38, label %if.end.42

if.then.38:                                       ; preds = %if.end.36
  %40 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook_seen40 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %40, i32 0, i32 3
  %41 = load %struct.av*, %struct.av** %hook_seen40, align 8
  store %struct.av* %41, %struct.av** %hook_seen39, align 8
  %42 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook_seen41 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %42, i32 0, i32 3
  store %struct.av* null, %struct.av** %hook_seen41, align 8
  %43 = load %struct.av*, %struct.av** %hook_seen39, align 8
  call void @Perl_av_undef(%struct.av* %43)
  %44 = load %struct.av*, %struct.av** %hook_seen39, align 8
  %45 = bitcast %struct.av* %44 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %45)
  br label %if.end.42

if.end.42:                                        ; preds = %if.then.38, %if.end.36
  %46 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %forgive_me = getelementptr inbounds %struct.stcxt, %struct.stcxt* %46, i32 0, i32 13
  store i32 -1, i32* %forgive_me, align 4
  %47 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %deparse = getelementptr inbounds %struct.stcxt, %struct.stcxt* %47, i32 0, i32 14
  store i32 -1, i32* %deparse, align 4
  %48 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval = getelementptr inbounds %struct.stcxt, %struct.stcxt* %48, i32 0, i32 15
  %49 = load %struct.sv*, %struct.sv** %eval, align 8
  %tobool43 = icmp ne %struct.sv* %49, null
  br i1 %tobool43, label %if.then.44, label %if.end.46

if.then.44:                                       ; preds = %if.end.42
  %50 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval45 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %50, i32 0, i32 15
  %51 = load %struct.sv*, %struct.sv** %eval45, align 8
  call void @Perl_sv_free(%struct.sv* %51)
  br label %if.end.46

if.end.46:                                        ; preds = %if.then.44, %if.end.42
  %52 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval47 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %52, i32 0, i32 15
  store %struct.sv* null, %struct.sv** %eval47, align 8
  %53 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %canonical = getelementptr inbounds %struct.stcxt, %struct.stcxt* %53, i32 0, i32 16
  store i32 -1, i32* %canonical, align 4
  %54 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  call void @reset_context(%struct.stcxt* %54)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @free_context(%struct.stcxt* %cxt) #0 {
entry:
  %cxt.addr = alloca %struct.stcxt*, align 8
  %prev = alloca %struct.stcxt*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %prev1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 27
  %1 = load %struct.sv*, %struct.sv** %prev1, align 8
  %tobool = icmp ne %struct.sv* %1, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %prev2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 27
  %3 = load %struct.sv*, %struct.sv** %prev2, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %3, i32 0, i32 0
  %4 = load i8*, i8** %sv_any, align 8
  %5 = bitcast i8* %4 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %5, i32 0, i32 0
  %6 = load %struct.sv*, %struct.sv** %xrv_rv, align 8
  %sv_any3 = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 0
  %7 = load i8*, i8** %sv_any3, align 8
  %8 = bitcast i8* %7 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %8, i32 0, i32 0
  %9 = load i8*, i8** %xpv_pv, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %9, %cond.true ], [ null, %cond.false ]
  %10 = bitcast i8* %cond to %struct.stcxt*
  store %struct.stcxt* %10, %struct.stcxt** %prev, align 8
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %my_sv = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 28
  %12 = load %struct.sv*, %struct.sv** %my_sv, align 8
  call void @Perl_sv_free(%struct.sv* %12)
  %13 = load %struct.stcxt*, %struct.stcxt** %prev, align 8
  store %struct.stcxt* %13, %struct.stcxt** @Context_ptr, align 8
  ret void
}

declare %struct.sv* @Perl_newSV(i64) #1

declare %struct.sv* @Perl_newRV_noinc(%struct.sv*) #1

declare %struct.sv* @Perl_sv_bless(%struct.sv*, %struct.hv*) #1

declare %struct.hv* @Perl_gv_stashpv(i8*, i32) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

declare %struct.hv* @Perl_newHV() #1

declare %struct.av* @Perl_newAV() #1

declare i8* @Perl_safesysrealloc(i8*, i64) #1

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

declare i64 @Perl_PerlIO_write(%struct._PerlIO**, i8*, i64) #1

declare %struct.sv** @Perl_hv_fetch(%struct.hv*, i8*, i32, i32) #1

declare i64 @Perl_my_htonl(i64) #1

declare i32 @PerlIO_putc(%struct._PerlIO**, i32) #1

declare %struct.sv** @Perl_hv_store(%struct.hv*, i8*, i32, %struct.sv*, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @sv_type(%struct.sv* %sv) #0 {
entry:
  %retval = alloca i32, align 4
  %sv.addr = alloca %struct.sv*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 255
  switch i32 %and, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb.1
    i32 3, label %sw.bb.1
    i32 5, label %sw.bb.1
    i32 6, label %sw.bb.1
    i32 7, label %sw.bb.4
    i32 9, label %sw.bb.4
    i32 8, label %sw.bb.9
    i32 10, label %sw.bb.22
    i32 11, label %sw.bb.31
    i32 12, label %sw.bb.40
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry
  store i32 1, i32* %retval
  br label %return

sw.bb.1:                                          ; preds = %entry, %entry, %entry, %entry
  %2 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags2 = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 2
  %3 = load i32, i32* %sv_flags2, align 4
  %and3 = and i32 %3, 524288
  %tobool = icmp ne i32 %and3, 0
  %cond = select i1 %tobool, i32 0, i32 1
  store i32 %cond, i32* %retval
  br label %return

sw.bb.4:                                          ; preds = %entry, %entry
  %4 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags5 = getelementptr inbounds %struct.sv, %struct.sv* %4, i32 0, i32 2
  %5 = load i32, i32* %sv_flags5, align 4
  %and6 = and i32 %5, 32768
  %tobool7 = icmp ne i32 %and6, 0
  br i1 %tobool7, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %sw.bb.4
  %6 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call = call %struct.magic* @Perl_mg_find(%struct.sv* %6, i32 112)
  %tobool8 = icmp ne %struct.magic* %call, null
  br i1 %tobool8, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store i32 5, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %sw.bb.4
  br label %sw.bb.9

sw.bb.9:                                          ; preds = %entry, %if.end
  %7 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags10 = getelementptr inbounds %struct.sv, %struct.sv* %7, i32 0, i32 2
  %8 = load i32, i32* %sv_flags10, align 4
  %and11 = and i32 %8, 32768
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %land.lhs.true.13, label %if.end.17

land.lhs.true.13:                                 ; preds = %sw.bb.9
  %9 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call14 = call %struct.magic* @Perl_mg_find(%struct.sv* %9, i32 113)
  %tobool15 = icmp ne %struct.magic* %call14, null
  br i1 %tobool15, label %if.then.16, label %if.end.17

if.then.16:                                       ; preds = %land.lhs.true.13
  store i32 4, i32* %retval
  br label %return

if.end.17:                                        ; preds = %land.lhs.true.13, %sw.bb.9
  %10 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags18 = getelementptr inbounds %struct.sv, %struct.sv* %10, i32 0, i32 2
  %11 = load i32, i32* %sv_flags18, align 4
  %and19 = and i32 %11, 524288
  %tobool20 = icmp ne i32 %and19, 0
  %cond21 = select i1 %tobool20, i32 0, i32 1
  store i32 %cond21, i32* %retval
  br label %return

sw.bb.22:                                         ; preds = %entry
  %12 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags23 = getelementptr inbounds %struct.sv, %struct.sv* %12, i32 0, i32 2
  %13 = load i32, i32* %sv_flags23, align 4
  %and24 = and i32 %13, 32768
  %tobool25 = icmp ne i32 %and24, 0
  br i1 %tobool25, label %land.lhs.true.26, label %if.end.30

land.lhs.true.26:                                 ; preds = %sw.bb.22
  %14 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call27 = call %struct.magic* @Perl_mg_find(%struct.sv* %14, i32 80)
  %tobool28 = icmp ne %struct.magic* %call27, null
  br i1 %tobool28, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %land.lhs.true.26
  store i32 4, i32* %retval
  br label %return

if.end.30:                                        ; preds = %land.lhs.true.26, %sw.bb.22
  store i32 2, i32* %retval
  br label %return

sw.bb.31:                                         ; preds = %entry
  %15 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags32 = getelementptr inbounds %struct.sv, %struct.sv* %15, i32 0, i32 2
  %16 = load i32, i32* %sv_flags32, align 4
  %and33 = and i32 %16, 32768
  %tobool34 = icmp ne i32 %and33, 0
  br i1 %tobool34, label %land.lhs.true.35, label %if.end.39

land.lhs.true.35:                                 ; preds = %sw.bb.31
  %17 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call36 = call %struct.magic* @Perl_mg_find(%struct.sv* %17, i32 80)
  %tobool37 = icmp ne %struct.magic* %call36, null
  br i1 %tobool37, label %if.then.38, label %if.end.39

if.then.38:                                       ; preds = %land.lhs.true.35
  store i32 4, i32* %retval
  br label %return

if.end.39:                                        ; preds = %land.lhs.true.35, %sw.bb.31
  store i32 3, i32* %retval
  br label %return

sw.bb.40:                                         ; preds = %entry
  store i32 6, i32* %retval
  br label %return

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  store i32 7, i32* %retval
  br label %return

return:                                           ; preds = %sw.epilog, %sw.bb.40, %if.end.39, %if.then.38, %if.end.30, %if.then.29, %if.end.17, %if.then.16, %if.then, %sw.bb.1, %sw.bb
  %18 = load i32, i32* %retval
  ret i32 %18
}

; Function Attrs: nounwind uwtable
define internal i32 @store_blessed(%struct.stcxt* %cxt, %struct.sv* %sv, i32 %type, %struct.hv* %pkg) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %type.addr = alloca i32, align 4
  %pkg.addr = alloca %struct.hv*, align 8
  %hook = alloca %struct.sv*, align 8
  %len = alloca i32, align 4
  %class = alloca i8*, align 8
  %classnum = alloca i32, align 4
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %cnum = alloca i8, align 1
  %nsz72 = alloca i32, align 4
  %offset80 = alloca i32, align 4
  %tmp105 = alloca i8*, align 8
  %flag = alloca i8, align 1
  %nsz142 = alloca i32, align 4
  %offset150 = alloca i32, align 4
  %tmp175 = alloca i8*, align 8
  %y = alloca i32, align 4
  %nsz213 = alloca i32, align 4
  %offset221 = alloca i32, align 4
  %tmp246 = alloca i8*, align 8
  %tmp268 = alloca i8*, align 8
  %nsz293 = alloca i32, align 4
  %offset301 = alloca i32, align 4
  %tmp326 = alloca i8*, align 8
  %tmp348 = alloca i8*, align 8
  %nsz378 = alloca i32, align 4
  %offset386 = alloca i32, align 4
  %tmp411 = alloca i8*, align 8
  %clen = alloca i8, align 1
  %nsz450 = alloca i32, align 4
  %offset458 = alloca i32, align 4
  %tmp483 = alloca i8*, align 8
  %flag505 = alloca i8, align 1
  %nsz521 = alloca i32, align 4
  %offset529 = alloca i32, align 4
  %tmp554 = alloca i8*, align 8
  %y578 = alloca i32, align 4
  %nsz594 = alloca i32, align 4
  %offset602 = alloca i32, align 4
  %tmp627 = alloca i8*, align 8
  %tmp649 = alloca i8*, align 8
  %nsz674 = alloca i32, align 4
  %offset682 = alloca i32, align 4
  %tmp707 = alloca i8*, align 8
  %tmp729 = alloca i8*, align 8
  %nsz756 = alloca i32, align 4
  %offset765 = alloca i32, align 4
  %tmp790 = alloca i8*, align 8
  %tmp801 = alloca i8*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i32 %type, i32* %type.addr, align 4
  store %struct.hv* %pkg, %struct.hv** %pkg.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 8
  %1 = load %struct.hv*, %struct.hv** %hook1, align 8
  %2 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %call = call %struct.sv* @pkg_can(%struct.hv* %1, %struct.hv* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0))
  store %struct.sv* %call, %struct.sv** %hook, align 8
  %3 = load %struct.sv*, %struct.sv** %hook, align 8
  %tobool = icmp ne %struct.sv* %3, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %5 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %6 = load i32, i32* %type.addr, align 4
  %7 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %8 = load %struct.sv*, %struct.sv** %hook, align 8
  %call2 = call i32 @store_hook(%struct.stcxt* %4, %struct.sv* %5, i32 %6, %struct.hv* %7, %struct.sv* %8)
  store i32 %call2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %9 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %9, i32 0, i32 0
  %10 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_name = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %10, i32 0, i32 10
  %11 = load i8*, i8** %xhv_name, align 8
  store i8* %11, i8** %class, align 8
  %12 = load i8*, i8** %class, align 8
  %call3 = call i64 @strlen(i8* %12)
  %conv = trunc i64 %call3 to i32
  store i32 %conv, i32* %len, align 4
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %14 = load i8*, i8** %class, align 8
  %15 = load i32, i32* %len, align 4
  %call4 = call i32 @known_class(%struct.stcxt* %13, i8* %14, i32 %15, i32* %classnum)
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.then.6, label %if.else.362

if.then.6:                                        ; preds = %if.end
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 23
  %17 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool7 = icmp ne %struct._PerlIO** %17, null
  br i1 %tobool7, label %if.else.44, label %if.then.8

if.then.8:                                        ; preds = %if.then.6
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %19 = load i8*, i8** %aptr, align 8
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf9 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %20, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf9, i32 0, i32 3
  %21 = load i8*, i8** %aend, align 8
  %cmp = icmp ult i8* %19, %21
  br i1 %cmp, label %if.then.11, label %if.else

if.then.11:                                       ; preds = %if.then.8
  %22 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf12 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %22, i32 0, i32 21
  %aptr13 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf12, i32 0, i32 2
  %23 = load i8*, i8** %aptr13, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %23, i32 1
  store i8* %incdec.ptr, i8** %aptr13, align 8
  store i8 18, i8* %23, align 1
  br label %if.end.43

if.else:                                          ; preds = %if.then.8
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 21
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf14, i32 0, i32 1
  %25 = load i64, i64* %asiz, align 8
  %add = add i64 1, %25
  %add15 = add i64 %add, 8191
  %and = and i64 %add15, -8192
  %conv16 = trunc i64 %and to i32
  store i32 %conv16, i32* %nsz, align 4
  %26 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf17 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %26, i32 0, i32 21
  %aptr18 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf17, i32 0, i32 2
  %27 = load i8*, i8** %aptr18, align 8
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 21
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf19, i32 0, i32 0
  %29 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %27 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %29 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv20 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv20, i32* %offset, align 4
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf21 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 21
  %arena22 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf21, i32 0, i32 0
  %31 = load i8*, i8** %arena22, align 8
  %32 = load i32, i32* %nsz, align 4
  %conv23 = sext i32 %32 to i64
  %mul = mul i64 %conv23, 1
  %call24 = call i8* @Perl_safesysrealloc(i8* %31, i64 %mul)
  %33 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf25 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %33, i32 0, i32 21
  %arena26 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf25, i32 0, i32 0
  store i8* %call24, i8** %arena26, align 8
  %34 = load i32, i32* %nsz, align 4
  %conv27 = sext i32 %34 to i64
  %35 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf28 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %35, i32 0, i32 21
  %asiz29 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf28, i32 0, i32 1
  store i64 %conv27, i64* %asiz29, align 8
  %36 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf30 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %36, i32 0, i32 21
  %arena31 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf30, i32 0, i32 0
  %37 = load i8*, i8** %arena31, align 8
  %38 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %38 to i64
  %add.ptr = getelementptr inbounds i8, i8* %37, i64 %idx.ext
  %39 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf32 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %39, i32 0, i32 21
  %aptr33 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf32, i32 0, i32 2
  store i8* %add.ptr, i8** %aptr33, align 8
  %40 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf34 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %40, i32 0, i32 21
  %arena35 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf34, i32 0, i32 0
  %41 = load i8*, i8** %arena35, align 8
  %42 = load i32, i32* %nsz, align 4
  %idx.ext36 = sext i32 %42 to i64
  %add.ptr37 = getelementptr inbounds i8, i8* %41, i64 %idx.ext36
  %43 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf38 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %43, i32 0, i32 21
  %aend39 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf38, i32 0, i32 3
  store i8* %add.ptr37, i8** %aend39, align 8
  store i8* %add.ptr37, i8** %tmp
  %44 = load i8*, i8** %tmp
  %45 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf40 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %45, i32 0, i32 21
  %aptr41 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf40, i32 0, i32 2
  %46 = load i8*, i8** %aptr41, align 8
  %incdec.ptr42 = getelementptr inbounds i8, i8* %46, i32 1
  store i8* %incdec.ptr42, i8** %aptr41, align 8
  store i8 18, i8* %46, align 1
  br label %if.end.43

if.end.43:                                        ; preds = %if.else, %if.then.11
  br label %if.end.51

if.else.44:                                       ; preds = %if.then.6
  %47 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio45 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %47, i32 0, i32 23
  %48 = load %struct._PerlIO**, %struct._PerlIO*** %fio45, align 8
  %call46 = call i32 @PerlIO_putc(%struct._PerlIO** %48, i32 18)
  %cmp47 = icmp eq i32 %call46, -1
  br i1 %cmp47, label %if.then.49, label %if.end.50

if.then.49:                                       ; preds = %if.else.44
  store i32 -1, i32* %retval
  br label %return

if.end.50:                                        ; preds = %if.else.44
  br label %if.end.51

if.end.51:                                        ; preds = %if.end.50, %if.end.43
  %49 = load i32, i32* %classnum, align 4
  %cmp52 = icmp sle i32 %49, 127
  br i1 %cmp52, label %if.then.54, label %if.else.125

if.then.54:                                       ; preds = %if.end.51
  %50 = load i32, i32* %classnum, align 4
  %conv56 = trunc i32 %50 to i8
  store i8 %conv56, i8* %cnum, align 1
  %51 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio57 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %51, i32 0, i32 23
  %52 = load %struct._PerlIO**, %struct._PerlIO*** %fio57, align 8
  %tobool58 = icmp ne %struct._PerlIO** %52, null
  br i1 %tobool58, label %if.else.116, label %if.then.59

if.then.59:                                       ; preds = %if.then.54
  %53 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf60 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %53, i32 0, i32 21
  %aptr61 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf60, i32 0, i32 2
  %54 = load i8*, i8** %aptr61, align 8
  %55 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf62 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %55, i32 0, i32 21
  %aend63 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf62, i32 0, i32 3
  %56 = load i8*, i8** %aend63, align 8
  %cmp64 = icmp ult i8* %54, %56
  br i1 %cmp64, label %if.then.66, label %if.else.70

if.then.66:                                       ; preds = %if.then.59
  %57 = load i8, i8* %cnum, align 1
  %58 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf67 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %58, i32 0, i32 21
  %aptr68 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf67, i32 0, i32 2
  %59 = load i8*, i8** %aptr68, align 8
  %incdec.ptr69 = getelementptr inbounds i8, i8* %59, i32 1
  store i8* %incdec.ptr69, i8** %aptr68, align 8
  store i8 %57, i8* %59, align 1
  br label %if.end.115

if.else.70:                                       ; preds = %if.then.59
  %60 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf73 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %60, i32 0, i32 21
  %asiz74 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf73, i32 0, i32 1
  %61 = load i64, i64* %asiz74, align 8
  %add75 = add i64 1, %61
  %add76 = add i64 %add75, 8191
  %and77 = and i64 %add76, -8192
  %conv78 = trunc i64 %and77 to i32
  store i32 %conv78, i32* %nsz72, align 4
  %62 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf81 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %62, i32 0, i32 21
  %aptr82 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf81, i32 0, i32 2
  %63 = load i8*, i8** %aptr82, align 8
  %64 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf83 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %64, i32 0, i32 21
  %arena84 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf83, i32 0, i32 0
  %65 = load i8*, i8** %arena84, align 8
  %sub.ptr.lhs.cast85 = ptrtoint i8* %63 to i64
  %sub.ptr.rhs.cast86 = ptrtoint i8* %65 to i64
  %sub.ptr.sub87 = sub i64 %sub.ptr.lhs.cast85, %sub.ptr.rhs.cast86
  %conv88 = trunc i64 %sub.ptr.sub87 to i32
  store i32 %conv88, i32* %offset80, align 4
  %66 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf89 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %66, i32 0, i32 21
  %arena90 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf89, i32 0, i32 0
  %67 = load i8*, i8** %arena90, align 8
  %68 = load i32, i32* %nsz72, align 4
  %conv91 = sext i32 %68 to i64
  %mul92 = mul i64 %conv91, 1
  %call93 = call i8* @Perl_safesysrealloc(i8* %67, i64 %mul92)
  %69 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf94 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %69, i32 0, i32 21
  %arena95 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf94, i32 0, i32 0
  store i8* %call93, i8** %arena95, align 8
  %70 = load i32, i32* %nsz72, align 4
  %conv96 = sext i32 %70 to i64
  %71 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf97 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %71, i32 0, i32 21
  %asiz98 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf97, i32 0, i32 1
  store i64 %conv96, i64* %asiz98, align 8
  %72 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf99 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %72, i32 0, i32 21
  %arena100 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf99, i32 0, i32 0
  %73 = load i8*, i8** %arena100, align 8
  %74 = load i32, i32* %offset80, align 4
  %idx.ext101 = sext i32 %74 to i64
  %add.ptr102 = getelementptr inbounds i8, i8* %73, i64 %idx.ext101
  %75 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf103 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %75, i32 0, i32 21
  %aptr104 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf103, i32 0, i32 2
  store i8* %add.ptr102, i8** %aptr104, align 8
  %76 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf106 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %76, i32 0, i32 21
  %arena107 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf106, i32 0, i32 0
  %77 = load i8*, i8** %arena107, align 8
  %78 = load i32, i32* %nsz72, align 4
  %idx.ext108 = sext i32 %78 to i64
  %add.ptr109 = getelementptr inbounds i8, i8* %77, i64 %idx.ext108
  %79 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf110 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %79, i32 0, i32 21
  %aend111 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf110, i32 0, i32 3
  store i8* %add.ptr109, i8** %aend111, align 8
  store i8* %add.ptr109, i8** %tmp105
  %80 = load i8*, i8** %tmp105
  %81 = load i8, i8* %cnum, align 1
  %82 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf112 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %82, i32 0, i32 21
  %aptr113 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf112, i32 0, i32 2
  %83 = load i8*, i8** %aptr113, align 8
  %incdec.ptr114 = getelementptr inbounds i8, i8* %83, i32 1
  store i8* %incdec.ptr114, i8** %aptr113, align 8
  store i8 %81, i8* %83, align 1
  br label %if.end.115

if.end.115:                                       ; preds = %if.else.70, %if.then.66
  br label %if.end.124

if.else.116:                                      ; preds = %if.then.54
  %84 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio117 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %84, i32 0, i32 23
  %85 = load %struct._PerlIO**, %struct._PerlIO*** %fio117, align 8
  %86 = load i8, i8* %cnum, align 1
  %conv118 = zext i8 %86 to i32
  %call119 = call i32 @PerlIO_putc(%struct._PerlIO** %85, i32 %conv118)
  %cmp120 = icmp eq i32 %call119, -1
  br i1 %cmp120, label %if.then.122, label %if.end.123

if.then.122:                                      ; preds = %if.else.116
  store i32 -1, i32* %retval
  br label %return

if.end.123:                                       ; preds = %if.else.116
  br label %if.end.124

if.end.124:                                       ; preds = %if.end.123, %if.end.115
  br label %if.end.361

if.else.125:                                      ; preds = %if.end.51
  store i8 -128, i8* %flag, align 1
  %87 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio127 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %87, i32 0, i32 23
  %88 = load %struct._PerlIO**, %struct._PerlIO*** %fio127, align 8
  %tobool128 = icmp ne %struct._PerlIO** %88, null
  br i1 %tobool128, label %if.else.186, label %if.then.129

if.then.129:                                      ; preds = %if.else.125
  %89 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf130 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %89, i32 0, i32 21
  %aptr131 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf130, i32 0, i32 2
  %90 = load i8*, i8** %aptr131, align 8
  %91 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf132 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %91, i32 0, i32 21
  %aend133 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf132, i32 0, i32 3
  %92 = load i8*, i8** %aend133, align 8
  %cmp134 = icmp ult i8* %90, %92
  br i1 %cmp134, label %if.then.136, label %if.else.140

if.then.136:                                      ; preds = %if.then.129
  %93 = load i8, i8* %flag, align 1
  %94 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf137 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %94, i32 0, i32 21
  %aptr138 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf137, i32 0, i32 2
  %95 = load i8*, i8** %aptr138, align 8
  %incdec.ptr139 = getelementptr inbounds i8, i8* %95, i32 1
  store i8* %incdec.ptr139, i8** %aptr138, align 8
  store i8 %93, i8* %95, align 1
  br label %if.end.185

if.else.140:                                      ; preds = %if.then.129
  %96 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf143 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %96, i32 0, i32 21
  %asiz144 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf143, i32 0, i32 1
  %97 = load i64, i64* %asiz144, align 8
  %add145 = add i64 1, %97
  %add146 = add i64 %add145, 8191
  %and147 = and i64 %add146, -8192
  %conv148 = trunc i64 %and147 to i32
  store i32 %conv148, i32* %nsz142, align 4
  %98 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf151 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %98, i32 0, i32 21
  %aptr152 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf151, i32 0, i32 2
  %99 = load i8*, i8** %aptr152, align 8
  %100 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf153 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %100, i32 0, i32 21
  %arena154 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf153, i32 0, i32 0
  %101 = load i8*, i8** %arena154, align 8
  %sub.ptr.lhs.cast155 = ptrtoint i8* %99 to i64
  %sub.ptr.rhs.cast156 = ptrtoint i8* %101 to i64
  %sub.ptr.sub157 = sub i64 %sub.ptr.lhs.cast155, %sub.ptr.rhs.cast156
  %conv158 = trunc i64 %sub.ptr.sub157 to i32
  store i32 %conv158, i32* %offset150, align 4
  %102 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf159 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %102, i32 0, i32 21
  %arena160 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf159, i32 0, i32 0
  %103 = load i8*, i8** %arena160, align 8
  %104 = load i32, i32* %nsz142, align 4
  %conv161 = sext i32 %104 to i64
  %mul162 = mul i64 %conv161, 1
  %call163 = call i8* @Perl_safesysrealloc(i8* %103, i64 %mul162)
  %105 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf164 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %105, i32 0, i32 21
  %arena165 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf164, i32 0, i32 0
  store i8* %call163, i8** %arena165, align 8
  %106 = load i32, i32* %nsz142, align 4
  %conv166 = sext i32 %106 to i64
  %107 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf167 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %107, i32 0, i32 21
  %asiz168 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf167, i32 0, i32 1
  store i64 %conv166, i64* %asiz168, align 8
  %108 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf169 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %108, i32 0, i32 21
  %arena170 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf169, i32 0, i32 0
  %109 = load i8*, i8** %arena170, align 8
  %110 = load i32, i32* %offset150, align 4
  %idx.ext171 = sext i32 %110 to i64
  %add.ptr172 = getelementptr inbounds i8, i8* %109, i64 %idx.ext171
  %111 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf173 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %111, i32 0, i32 21
  %aptr174 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf173, i32 0, i32 2
  store i8* %add.ptr172, i8** %aptr174, align 8
  %112 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf176 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %112, i32 0, i32 21
  %arena177 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf176, i32 0, i32 0
  %113 = load i8*, i8** %arena177, align 8
  %114 = load i32, i32* %nsz142, align 4
  %idx.ext178 = sext i32 %114 to i64
  %add.ptr179 = getelementptr inbounds i8, i8* %113, i64 %idx.ext178
  %115 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf180 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %115, i32 0, i32 21
  %aend181 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf180, i32 0, i32 3
  store i8* %add.ptr179, i8** %aend181, align 8
  store i8* %add.ptr179, i8** %tmp175
  %116 = load i8*, i8** %tmp175
  %117 = load i8, i8* %flag, align 1
  %118 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf182 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %118, i32 0, i32 21
  %aptr183 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf182, i32 0, i32 2
  %119 = load i8*, i8** %aptr183, align 8
  %incdec.ptr184 = getelementptr inbounds i8, i8* %119, i32 1
  store i8* %incdec.ptr184, i8** %aptr183, align 8
  store i8 %117, i8* %119, align 1
  br label %if.end.185

if.end.185:                                       ; preds = %if.else.140, %if.then.136
  br label %if.end.194

if.else.186:                                      ; preds = %if.else.125
  %120 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio187 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %120, i32 0, i32 23
  %121 = load %struct._PerlIO**, %struct._PerlIO*** %fio187, align 8
  %122 = load i8, i8* %flag, align 1
  %conv188 = zext i8 %122 to i32
  %call189 = call i32 @PerlIO_putc(%struct._PerlIO** %121, i32 %conv188)
  %cmp190 = icmp eq i32 %call189, -1
  br i1 %cmp190, label %if.then.192, label %if.end.193

if.then.192:                                      ; preds = %if.else.186
  store i32 -1, i32* %retval
  br label %return

if.end.193:                                       ; preds = %if.else.186
  br label %if.end.194

if.end.194:                                       ; preds = %if.end.193, %if.end.185
  %123 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %123, i32 0, i32 11
  %124 = load i32, i32* %netorder, align 4
  %tobool195 = icmp ne i32 %124, 0
  br i1 %tobool195, label %if.then.196, label %if.else.280

if.then.196:                                      ; preds = %if.end.194
  %125 = load i32, i32* %classnum, align 4
  %conv198 = sext i32 %125 to i64
  %call199 = call i64 @Perl_my_htonl(i64 %conv198)
  %conv200 = trunc i64 %call199 to i32
  store i32 %conv200, i32* %y, align 4
  %126 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio201 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %126, i32 0, i32 23
  %127 = load %struct._PerlIO**, %struct._PerlIO*** %fio201, align 8
  %tobool202 = icmp ne %struct._PerlIO** %127, null
  br i1 %tobool202, label %if.else.272, label %if.then.203

if.then.203:                                      ; preds = %if.then.196
  %128 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf204 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %128, i32 0, i32 21
  %aptr205 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf204, i32 0, i32 2
  %129 = load i8*, i8** %aptr205, align 8
  %add.ptr206 = getelementptr inbounds i8, i8* %129, i64 4
  %130 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf207 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %130, i32 0, i32 21
  %aend208 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf207, i32 0, i32 3
  %131 = load i8*, i8** %aend208, align 8
  %cmp209 = icmp ugt i8* %add.ptr206, %131
  br i1 %cmp209, label %if.then.211, label %if.end.253

if.then.211:                                      ; preds = %if.then.203
  %132 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf214 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %132, i32 0, i32 21
  %asiz215 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf214, i32 0, i32 1
  %133 = load i64, i64* %asiz215, align 8
  %add216 = add i64 4, %133
  %add217 = add i64 %add216, 8191
  %and218 = and i64 %add217, -8192
  %conv219 = trunc i64 %and218 to i32
  store i32 %conv219, i32* %nsz213, align 4
  %134 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf222 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %134, i32 0, i32 21
  %aptr223 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf222, i32 0, i32 2
  %135 = load i8*, i8** %aptr223, align 8
  %136 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf224 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %136, i32 0, i32 21
  %arena225 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf224, i32 0, i32 0
  %137 = load i8*, i8** %arena225, align 8
  %sub.ptr.lhs.cast226 = ptrtoint i8* %135 to i64
  %sub.ptr.rhs.cast227 = ptrtoint i8* %137 to i64
  %sub.ptr.sub228 = sub i64 %sub.ptr.lhs.cast226, %sub.ptr.rhs.cast227
  %conv229 = trunc i64 %sub.ptr.sub228 to i32
  store i32 %conv229, i32* %offset221, align 4
  %138 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf230 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %138, i32 0, i32 21
  %arena231 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf230, i32 0, i32 0
  %139 = load i8*, i8** %arena231, align 8
  %140 = load i32, i32* %nsz213, align 4
  %conv232 = sext i32 %140 to i64
  %mul233 = mul i64 %conv232, 1
  %call234 = call i8* @Perl_safesysrealloc(i8* %139, i64 %mul233)
  %141 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf235 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %141, i32 0, i32 21
  %arena236 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf235, i32 0, i32 0
  store i8* %call234, i8** %arena236, align 8
  %142 = load i32, i32* %nsz213, align 4
  %conv237 = sext i32 %142 to i64
  %143 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf238 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %143, i32 0, i32 21
  %asiz239 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf238, i32 0, i32 1
  store i64 %conv237, i64* %asiz239, align 8
  %144 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf240 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %144, i32 0, i32 21
  %arena241 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf240, i32 0, i32 0
  %145 = load i8*, i8** %arena241, align 8
  %146 = load i32, i32* %offset221, align 4
  %idx.ext242 = sext i32 %146 to i64
  %add.ptr243 = getelementptr inbounds i8, i8* %145, i64 %idx.ext242
  %147 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf244 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %147, i32 0, i32 21
  %aptr245 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf244, i32 0, i32 2
  store i8* %add.ptr243, i8** %aptr245, align 8
  %148 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf247 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %148, i32 0, i32 21
  %arena248 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf247, i32 0, i32 0
  %149 = load i8*, i8** %arena248, align 8
  %150 = load i32, i32* %nsz213, align 4
  %idx.ext249 = sext i32 %150 to i64
  %add.ptr250 = getelementptr inbounds i8, i8* %149, i64 %idx.ext249
  %151 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf251 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %151, i32 0, i32 21
  %aend252 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf251, i32 0, i32 3
  store i8* %add.ptr250, i8** %aend252, align 8
  store i8* %add.ptr250, i8** %tmp246
  %152 = load i8*, i8** %tmp246
  br label %if.end.253

if.end.253:                                       ; preds = %if.then.211, %if.then.203
  %153 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf254 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %153, i32 0, i32 21
  %aptr255 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf254, i32 0, i32 2
  %154 = load i8*, i8** %aptr255, align 8
  %155 = ptrtoint i8* %154 to i64
  %156 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf256 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %156, i32 0, i32 21
  %aptr257 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf256, i32 0, i32 2
  %157 = load i8*, i8** %aptr257, align 8
  %158 = ptrtoint i8* %157 to i64
  %and258 = and i64 %158, -4
  %cmp259 = icmp eq i64 %155, %and258
  br i1 %cmp259, label %if.then.261, label %if.else.264

if.then.261:                                      ; preds = %if.end.253
  %159 = load i32, i32* %y, align 4
  %160 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf262 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %160, i32 0, i32 21
  %aptr263 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf262, i32 0, i32 2
  %161 = load i8*, i8** %aptr263, align 8
  %162 = bitcast i8* %161 to i32*
  store i32 %159, i32* %162, align 4
  br label %if.end.267

if.else.264:                                      ; preds = %if.end.253
  %163 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf265 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %163, i32 0, i32 21
  %aptr266 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf265, i32 0, i32 2
  %164 = load i8*, i8** %aptr266, align 8
  %165 = bitcast i32* %y to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %164, i8* %165, i64 4, i32 1, i1 false)
  br label %if.end.267

if.end.267:                                       ; preds = %if.else.264, %if.then.261
  %166 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf269 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %166, i32 0, i32 21
  %aptr270 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf269, i32 0, i32 2
  %167 = load i8*, i8** %aptr270, align 8
  %add.ptr271 = getelementptr inbounds i8, i8* %167, i64 4
  store i8* %add.ptr271, i8** %aptr270, align 8
  store i8* %add.ptr271, i8** %tmp268
  %168 = load i8*, i8** %tmp268
  br label %if.end.279

if.else.272:                                      ; preds = %if.then.196
  %169 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio273 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %169, i32 0, i32 23
  %170 = load %struct._PerlIO**, %struct._PerlIO*** %fio273, align 8
  %171 = bitcast i32* %y to i8*
  %call274 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %170, i8* %171, i64 4)
  %cmp275 = icmp ne i64 %call274, 4
  br i1 %cmp275, label %if.then.277, label %if.end.278

if.then.277:                                      ; preds = %if.else.272
  store i32 -1, i32* %retval
  br label %return

if.end.278:                                       ; preds = %if.else.272
  br label %if.end.279

if.end.279:                                       ; preds = %if.end.278, %if.end.267
  br label %if.end.360

if.else.280:                                      ; preds = %if.end.194
  %172 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio281 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %172, i32 0, i32 23
  %173 = load %struct._PerlIO**, %struct._PerlIO*** %fio281, align 8
  %tobool282 = icmp ne %struct._PerlIO** %173, null
  br i1 %tobool282, label %if.else.352, label %if.then.283

if.then.283:                                      ; preds = %if.else.280
  %174 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf284 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %174, i32 0, i32 21
  %aptr285 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf284, i32 0, i32 2
  %175 = load i8*, i8** %aptr285, align 8
  %add.ptr286 = getelementptr inbounds i8, i8* %175, i64 4
  %176 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf287 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %176, i32 0, i32 21
  %aend288 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf287, i32 0, i32 3
  %177 = load i8*, i8** %aend288, align 8
  %cmp289 = icmp ugt i8* %add.ptr286, %177
  br i1 %cmp289, label %if.then.291, label %if.end.333

if.then.291:                                      ; preds = %if.then.283
  %178 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf294 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %178, i32 0, i32 21
  %asiz295 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf294, i32 0, i32 1
  %179 = load i64, i64* %asiz295, align 8
  %add296 = add i64 4, %179
  %add297 = add i64 %add296, 8191
  %and298 = and i64 %add297, -8192
  %conv299 = trunc i64 %and298 to i32
  store i32 %conv299, i32* %nsz293, align 4
  %180 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf302 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %180, i32 0, i32 21
  %aptr303 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf302, i32 0, i32 2
  %181 = load i8*, i8** %aptr303, align 8
  %182 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf304 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %182, i32 0, i32 21
  %arena305 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf304, i32 0, i32 0
  %183 = load i8*, i8** %arena305, align 8
  %sub.ptr.lhs.cast306 = ptrtoint i8* %181 to i64
  %sub.ptr.rhs.cast307 = ptrtoint i8* %183 to i64
  %sub.ptr.sub308 = sub i64 %sub.ptr.lhs.cast306, %sub.ptr.rhs.cast307
  %conv309 = trunc i64 %sub.ptr.sub308 to i32
  store i32 %conv309, i32* %offset301, align 4
  %184 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf310 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %184, i32 0, i32 21
  %arena311 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf310, i32 0, i32 0
  %185 = load i8*, i8** %arena311, align 8
  %186 = load i32, i32* %nsz293, align 4
  %conv312 = sext i32 %186 to i64
  %mul313 = mul i64 %conv312, 1
  %call314 = call i8* @Perl_safesysrealloc(i8* %185, i64 %mul313)
  %187 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf315 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %187, i32 0, i32 21
  %arena316 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf315, i32 0, i32 0
  store i8* %call314, i8** %arena316, align 8
  %188 = load i32, i32* %nsz293, align 4
  %conv317 = sext i32 %188 to i64
  %189 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf318 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %189, i32 0, i32 21
  %asiz319 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf318, i32 0, i32 1
  store i64 %conv317, i64* %asiz319, align 8
  %190 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf320 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %190, i32 0, i32 21
  %arena321 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf320, i32 0, i32 0
  %191 = load i8*, i8** %arena321, align 8
  %192 = load i32, i32* %offset301, align 4
  %idx.ext322 = sext i32 %192 to i64
  %add.ptr323 = getelementptr inbounds i8, i8* %191, i64 %idx.ext322
  %193 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf324 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %193, i32 0, i32 21
  %aptr325 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf324, i32 0, i32 2
  store i8* %add.ptr323, i8** %aptr325, align 8
  %194 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf327 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %194, i32 0, i32 21
  %arena328 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf327, i32 0, i32 0
  %195 = load i8*, i8** %arena328, align 8
  %196 = load i32, i32* %nsz293, align 4
  %idx.ext329 = sext i32 %196 to i64
  %add.ptr330 = getelementptr inbounds i8, i8* %195, i64 %idx.ext329
  %197 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf331 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %197, i32 0, i32 21
  %aend332 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf331, i32 0, i32 3
  store i8* %add.ptr330, i8** %aend332, align 8
  store i8* %add.ptr330, i8** %tmp326
  %198 = load i8*, i8** %tmp326
  br label %if.end.333

if.end.333:                                       ; preds = %if.then.291, %if.then.283
  %199 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf334 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %199, i32 0, i32 21
  %aptr335 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf334, i32 0, i32 2
  %200 = load i8*, i8** %aptr335, align 8
  %201 = ptrtoint i8* %200 to i64
  %202 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf336 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %202, i32 0, i32 21
  %aptr337 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf336, i32 0, i32 2
  %203 = load i8*, i8** %aptr337, align 8
  %204 = ptrtoint i8* %203 to i64
  %and338 = and i64 %204, -4
  %cmp339 = icmp eq i64 %201, %and338
  br i1 %cmp339, label %if.then.341, label %if.else.344

if.then.341:                                      ; preds = %if.end.333
  %205 = load i32, i32* %classnum, align 4
  %206 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf342 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %206, i32 0, i32 21
  %aptr343 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf342, i32 0, i32 2
  %207 = load i8*, i8** %aptr343, align 8
  %208 = bitcast i8* %207 to i32*
  store i32 %205, i32* %208, align 4
  br label %if.end.347

if.else.344:                                      ; preds = %if.end.333
  %209 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf345 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %209, i32 0, i32 21
  %aptr346 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf345, i32 0, i32 2
  %210 = load i8*, i8** %aptr346, align 8
  %211 = bitcast i32* %classnum to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %210, i8* %211, i64 4, i32 1, i1 false)
  br label %if.end.347

if.end.347:                                       ; preds = %if.else.344, %if.then.341
  %212 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf349 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %212, i32 0, i32 21
  %aptr350 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf349, i32 0, i32 2
  %213 = load i8*, i8** %aptr350, align 8
  %add.ptr351 = getelementptr inbounds i8, i8* %213, i64 4
  store i8* %add.ptr351, i8** %aptr350, align 8
  store i8* %add.ptr351, i8** %tmp348
  %214 = load i8*, i8** %tmp348
  br label %if.end.359

if.else.352:                                      ; preds = %if.else.280
  %215 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio353 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %215, i32 0, i32 23
  %216 = load %struct._PerlIO**, %struct._PerlIO*** %fio353, align 8
  %217 = bitcast i32* %classnum to i8*
  %call354 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %216, i8* %217, i64 4)
  %cmp355 = icmp ne i64 %call354, 4
  br i1 %cmp355, label %if.then.357, label %if.end.358

if.then.357:                                      ; preds = %if.else.352
  store i32 -1, i32* %retval
  br label %return

if.end.358:                                       ; preds = %if.else.352
  br label %if.end.359

if.end.359:                                       ; preds = %if.end.358, %if.end.347
  br label %if.end.360

if.end.360:                                       ; preds = %if.end.359, %if.end.279
  br label %if.end.361

if.end.361:                                       ; preds = %if.end.360, %if.end.124
  br label %if.end.816

if.else.362:                                      ; preds = %if.end
  %218 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio363 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %218, i32 0, i32 23
  %219 = load %struct._PerlIO**, %struct._PerlIO*** %fio363, align 8
  %tobool364 = icmp ne %struct._PerlIO** %219, null
  br i1 %tobool364, label %if.else.422, label %if.then.365

if.then.365:                                      ; preds = %if.else.362
  %220 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf366 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %220, i32 0, i32 21
  %aptr367 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf366, i32 0, i32 2
  %221 = load i8*, i8** %aptr367, align 8
  %222 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf368 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %222, i32 0, i32 21
  %aend369 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf368, i32 0, i32 3
  %223 = load i8*, i8** %aend369, align 8
  %cmp370 = icmp ult i8* %221, %223
  br i1 %cmp370, label %if.then.372, label %if.else.376

if.then.372:                                      ; preds = %if.then.365
  %224 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf373 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %224, i32 0, i32 21
  %aptr374 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf373, i32 0, i32 2
  %225 = load i8*, i8** %aptr374, align 8
  %incdec.ptr375 = getelementptr inbounds i8, i8* %225, i32 1
  store i8* %incdec.ptr375, i8** %aptr374, align 8
  store i8 17, i8* %225, align 1
  br label %if.end.421

if.else.376:                                      ; preds = %if.then.365
  %226 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf379 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %226, i32 0, i32 21
  %asiz380 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf379, i32 0, i32 1
  %227 = load i64, i64* %asiz380, align 8
  %add381 = add i64 1, %227
  %add382 = add i64 %add381, 8191
  %and383 = and i64 %add382, -8192
  %conv384 = trunc i64 %and383 to i32
  store i32 %conv384, i32* %nsz378, align 4
  %228 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf387 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %228, i32 0, i32 21
  %aptr388 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf387, i32 0, i32 2
  %229 = load i8*, i8** %aptr388, align 8
  %230 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf389 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %230, i32 0, i32 21
  %arena390 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf389, i32 0, i32 0
  %231 = load i8*, i8** %arena390, align 8
  %sub.ptr.lhs.cast391 = ptrtoint i8* %229 to i64
  %sub.ptr.rhs.cast392 = ptrtoint i8* %231 to i64
  %sub.ptr.sub393 = sub i64 %sub.ptr.lhs.cast391, %sub.ptr.rhs.cast392
  %conv394 = trunc i64 %sub.ptr.sub393 to i32
  store i32 %conv394, i32* %offset386, align 4
  %232 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf395 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %232, i32 0, i32 21
  %arena396 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf395, i32 0, i32 0
  %233 = load i8*, i8** %arena396, align 8
  %234 = load i32, i32* %nsz378, align 4
  %conv397 = sext i32 %234 to i64
  %mul398 = mul i64 %conv397, 1
  %call399 = call i8* @Perl_safesysrealloc(i8* %233, i64 %mul398)
  %235 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf400 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %235, i32 0, i32 21
  %arena401 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf400, i32 0, i32 0
  store i8* %call399, i8** %arena401, align 8
  %236 = load i32, i32* %nsz378, align 4
  %conv402 = sext i32 %236 to i64
  %237 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf403 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %237, i32 0, i32 21
  %asiz404 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf403, i32 0, i32 1
  store i64 %conv402, i64* %asiz404, align 8
  %238 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf405 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %238, i32 0, i32 21
  %arena406 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf405, i32 0, i32 0
  %239 = load i8*, i8** %arena406, align 8
  %240 = load i32, i32* %offset386, align 4
  %idx.ext407 = sext i32 %240 to i64
  %add.ptr408 = getelementptr inbounds i8, i8* %239, i64 %idx.ext407
  %241 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf409 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %241, i32 0, i32 21
  %aptr410 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf409, i32 0, i32 2
  store i8* %add.ptr408, i8** %aptr410, align 8
  %242 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf412 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %242, i32 0, i32 21
  %arena413 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf412, i32 0, i32 0
  %243 = load i8*, i8** %arena413, align 8
  %244 = load i32, i32* %nsz378, align 4
  %idx.ext414 = sext i32 %244 to i64
  %add.ptr415 = getelementptr inbounds i8, i8* %243, i64 %idx.ext414
  %245 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf416 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %245, i32 0, i32 21
  %aend417 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf416, i32 0, i32 3
  store i8* %add.ptr415, i8** %aend417, align 8
  store i8* %add.ptr415, i8** %tmp411
  %246 = load i8*, i8** %tmp411
  %247 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf418 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %247, i32 0, i32 21
  %aptr419 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf418, i32 0, i32 2
  %248 = load i8*, i8** %aptr419, align 8
  %incdec.ptr420 = getelementptr inbounds i8, i8* %248, i32 1
  store i8* %incdec.ptr420, i8** %aptr419, align 8
  store i8 17, i8* %248, align 1
  br label %if.end.421

if.end.421:                                       ; preds = %if.else.376, %if.then.372
  br label %if.end.429

if.else.422:                                      ; preds = %if.else.362
  %249 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio423 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %249, i32 0, i32 23
  %250 = load %struct._PerlIO**, %struct._PerlIO*** %fio423, align 8
  %call424 = call i32 @PerlIO_putc(%struct._PerlIO** %250, i32 17)
  %cmp425 = icmp eq i32 %call424, -1
  br i1 %cmp425, label %if.then.427, label %if.end.428

if.then.427:                                      ; preds = %if.else.422
  store i32 -1, i32* %retval
  br label %return

if.end.428:                                       ; preds = %if.else.422
  br label %if.end.429

if.end.429:                                       ; preds = %if.end.428, %if.end.421
  %251 = load i32, i32* %len, align 4
  %cmp430 = icmp sle i32 %251, 127
  br i1 %cmp430, label %if.then.432, label %if.else.503

if.then.432:                                      ; preds = %if.end.429
  %252 = load i32, i32* %len, align 4
  %conv434 = trunc i32 %252 to i8
  store i8 %conv434, i8* %clen, align 1
  %253 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio435 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %253, i32 0, i32 23
  %254 = load %struct._PerlIO**, %struct._PerlIO*** %fio435, align 8
  %tobool436 = icmp ne %struct._PerlIO** %254, null
  br i1 %tobool436, label %if.else.494, label %if.then.437

if.then.437:                                      ; preds = %if.then.432
  %255 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf438 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %255, i32 0, i32 21
  %aptr439 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf438, i32 0, i32 2
  %256 = load i8*, i8** %aptr439, align 8
  %257 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf440 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %257, i32 0, i32 21
  %aend441 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf440, i32 0, i32 3
  %258 = load i8*, i8** %aend441, align 8
  %cmp442 = icmp ult i8* %256, %258
  br i1 %cmp442, label %if.then.444, label %if.else.448

if.then.444:                                      ; preds = %if.then.437
  %259 = load i8, i8* %clen, align 1
  %260 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf445 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %260, i32 0, i32 21
  %aptr446 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf445, i32 0, i32 2
  %261 = load i8*, i8** %aptr446, align 8
  %incdec.ptr447 = getelementptr inbounds i8, i8* %261, i32 1
  store i8* %incdec.ptr447, i8** %aptr446, align 8
  store i8 %259, i8* %261, align 1
  br label %if.end.493

if.else.448:                                      ; preds = %if.then.437
  %262 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf451 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %262, i32 0, i32 21
  %asiz452 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf451, i32 0, i32 1
  %263 = load i64, i64* %asiz452, align 8
  %add453 = add i64 1, %263
  %add454 = add i64 %add453, 8191
  %and455 = and i64 %add454, -8192
  %conv456 = trunc i64 %and455 to i32
  store i32 %conv456, i32* %nsz450, align 4
  %264 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf459 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %264, i32 0, i32 21
  %aptr460 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf459, i32 0, i32 2
  %265 = load i8*, i8** %aptr460, align 8
  %266 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf461 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %266, i32 0, i32 21
  %arena462 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf461, i32 0, i32 0
  %267 = load i8*, i8** %arena462, align 8
  %sub.ptr.lhs.cast463 = ptrtoint i8* %265 to i64
  %sub.ptr.rhs.cast464 = ptrtoint i8* %267 to i64
  %sub.ptr.sub465 = sub i64 %sub.ptr.lhs.cast463, %sub.ptr.rhs.cast464
  %conv466 = trunc i64 %sub.ptr.sub465 to i32
  store i32 %conv466, i32* %offset458, align 4
  %268 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf467 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %268, i32 0, i32 21
  %arena468 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf467, i32 0, i32 0
  %269 = load i8*, i8** %arena468, align 8
  %270 = load i32, i32* %nsz450, align 4
  %conv469 = sext i32 %270 to i64
  %mul470 = mul i64 %conv469, 1
  %call471 = call i8* @Perl_safesysrealloc(i8* %269, i64 %mul470)
  %271 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf472 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %271, i32 0, i32 21
  %arena473 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf472, i32 0, i32 0
  store i8* %call471, i8** %arena473, align 8
  %272 = load i32, i32* %nsz450, align 4
  %conv474 = sext i32 %272 to i64
  %273 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf475 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %273, i32 0, i32 21
  %asiz476 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf475, i32 0, i32 1
  store i64 %conv474, i64* %asiz476, align 8
  %274 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf477 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %274, i32 0, i32 21
  %arena478 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf477, i32 0, i32 0
  %275 = load i8*, i8** %arena478, align 8
  %276 = load i32, i32* %offset458, align 4
  %idx.ext479 = sext i32 %276 to i64
  %add.ptr480 = getelementptr inbounds i8, i8* %275, i64 %idx.ext479
  %277 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf481 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %277, i32 0, i32 21
  %aptr482 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf481, i32 0, i32 2
  store i8* %add.ptr480, i8** %aptr482, align 8
  %278 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf484 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %278, i32 0, i32 21
  %arena485 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf484, i32 0, i32 0
  %279 = load i8*, i8** %arena485, align 8
  %280 = load i32, i32* %nsz450, align 4
  %idx.ext486 = sext i32 %280 to i64
  %add.ptr487 = getelementptr inbounds i8, i8* %279, i64 %idx.ext486
  %281 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf488 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %281, i32 0, i32 21
  %aend489 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf488, i32 0, i32 3
  store i8* %add.ptr487, i8** %aend489, align 8
  store i8* %add.ptr487, i8** %tmp483
  %282 = load i8*, i8** %tmp483
  %283 = load i8, i8* %clen, align 1
  %284 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf490 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %284, i32 0, i32 21
  %aptr491 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf490, i32 0, i32 2
  %285 = load i8*, i8** %aptr491, align 8
  %incdec.ptr492 = getelementptr inbounds i8, i8* %285, i32 1
  store i8* %incdec.ptr492, i8** %aptr491, align 8
  store i8 %283, i8* %285, align 1
  br label %if.end.493

if.end.493:                                       ; preds = %if.else.448, %if.then.444
  br label %if.end.502

if.else.494:                                      ; preds = %if.then.432
  %286 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio495 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %286, i32 0, i32 23
  %287 = load %struct._PerlIO**, %struct._PerlIO*** %fio495, align 8
  %288 = load i8, i8* %clen, align 1
  %conv496 = zext i8 %288 to i32
  %call497 = call i32 @PerlIO_putc(%struct._PerlIO** %287, i32 %conv496)
  %cmp498 = icmp eq i32 %call497, -1
  br i1 %cmp498, label %if.then.500, label %if.end.501

if.then.500:                                      ; preds = %if.else.494
  store i32 -1, i32* %retval
  br label %return

if.end.501:                                       ; preds = %if.else.494
  br label %if.end.502

if.end.502:                                       ; preds = %if.end.501, %if.end.493
  br label %if.end.742

if.else.503:                                      ; preds = %if.end.429
  store i8 -128, i8* %flag505, align 1
  %289 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio506 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %289, i32 0, i32 23
  %290 = load %struct._PerlIO**, %struct._PerlIO*** %fio506, align 8
  %tobool507 = icmp ne %struct._PerlIO** %290, null
  br i1 %tobool507, label %if.else.565, label %if.then.508

if.then.508:                                      ; preds = %if.else.503
  %291 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf509 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %291, i32 0, i32 21
  %aptr510 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf509, i32 0, i32 2
  %292 = load i8*, i8** %aptr510, align 8
  %293 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf511 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %293, i32 0, i32 21
  %aend512 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf511, i32 0, i32 3
  %294 = load i8*, i8** %aend512, align 8
  %cmp513 = icmp ult i8* %292, %294
  br i1 %cmp513, label %if.then.515, label %if.else.519

if.then.515:                                      ; preds = %if.then.508
  %295 = load i8, i8* %flag505, align 1
  %296 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf516 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %296, i32 0, i32 21
  %aptr517 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf516, i32 0, i32 2
  %297 = load i8*, i8** %aptr517, align 8
  %incdec.ptr518 = getelementptr inbounds i8, i8* %297, i32 1
  store i8* %incdec.ptr518, i8** %aptr517, align 8
  store i8 %295, i8* %297, align 1
  br label %if.end.564

if.else.519:                                      ; preds = %if.then.508
  %298 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf522 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %298, i32 0, i32 21
  %asiz523 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf522, i32 0, i32 1
  %299 = load i64, i64* %asiz523, align 8
  %add524 = add i64 1, %299
  %add525 = add i64 %add524, 8191
  %and526 = and i64 %add525, -8192
  %conv527 = trunc i64 %and526 to i32
  store i32 %conv527, i32* %nsz521, align 4
  %300 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf530 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %300, i32 0, i32 21
  %aptr531 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf530, i32 0, i32 2
  %301 = load i8*, i8** %aptr531, align 8
  %302 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf532 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %302, i32 0, i32 21
  %arena533 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf532, i32 0, i32 0
  %303 = load i8*, i8** %arena533, align 8
  %sub.ptr.lhs.cast534 = ptrtoint i8* %301 to i64
  %sub.ptr.rhs.cast535 = ptrtoint i8* %303 to i64
  %sub.ptr.sub536 = sub i64 %sub.ptr.lhs.cast534, %sub.ptr.rhs.cast535
  %conv537 = trunc i64 %sub.ptr.sub536 to i32
  store i32 %conv537, i32* %offset529, align 4
  %304 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf538 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %304, i32 0, i32 21
  %arena539 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf538, i32 0, i32 0
  %305 = load i8*, i8** %arena539, align 8
  %306 = load i32, i32* %nsz521, align 4
  %conv540 = sext i32 %306 to i64
  %mul541 = mul i64 %conv540, 1
  %call542 = call i8* @Perl_safesysrealloc(i8* %305, i64 %mul541)
  %307 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf543 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %307, i32 0, i32 21
  %arena544 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf543, i32 0, i32 0
  store i8* %call542, i8** %arena544, align 8
  %308 = load i32, i32* %nsz521, align 4
  %conv545 = sext i32 %308 to i64
  %309 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf546 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %309, i32 0, i32 21
  %asiz547 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf546, i32 0, i32 1
  store i64 %conv545, i64* %asiz547, align 8
  %310 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf548 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %310, i32 0, i32 21
  %arena549 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf548, i32 0, i32 0
  %311 = load i8*, i8** %arena549, align 8
  %312 = load i32, i32* %offset529, align 4
  %idx.ext550 = sext i32 %312 to i64
  %add.ptr551 = getelementptr inbounds i8, i8* %311, i64 %idx.ext550
  %313 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf552 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %313, i32 0, i32 21
  %aptr553 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf552, i32 0, i32 2
  store i8* %add.ptr551, i8** %aptr553, align 8
  %314 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf555 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %314, i32 0, i32 21
  %arena556 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf555, i32 0, i32 0
  %315 = load i8*, i8** %arena556, align 8
  %316 = load i32, i32* %nsz521, align 4
  %idx.ext557 = sext i32 %316 to i64
  %add.ptr558 = getelementptr inbounds i8, i8* %315, i64 %idx.ext557
  %317 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf559 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %317, i32 0, i32 21
  %aend560 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf559, i32 0, i32 3
  store i8* %add.ptr558, i8** %aend560, align 8
  store i8* %add.ptr558, i8** %tmp554
  %318 = load i8*, i8** %tmp554
  %319 = load i8, i8* %flag505, align 1
  %320 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf561 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %320, i32 0, i32 21
  %aptr562 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf561, i32 0, i32 2
  %321 = load i8*, i8** %aptr562, align 8
  %incdec.ptr563 = getelementptr inbounds i8, i8* %321, i32 1
  store i8* %incdec.ptr563, i8** %aptr562, align 8
  store i8 %319, i8* %321, align 1
  br label %if.end.564

if.end.564:                                       ; preds = %if.else.519, %if.then.515
  br label %if.end.573

if.else.565:                                      ; preds = %if.else.503
  %322 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio566 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %322, i32 0, i32 23
  %323 = load %struct._PerlIO**, %struct._PerlIO*** %fio566, align 8
  %324 = load i8, i8* %flag505, align 1
  %conv567 = zext i8 %324 to i32
  %call568 = call i32 @PerlIO_putc(%struct._PerlIO** %323, i32 %conv567)
  %cmp569 = icmp eq i32 %call568, -1
  br i1 %cmp569, label %if.then.571, label %if.end.572

if.then.571:                                      ; preds = %if.else.565
  store i32 -1, i32* %retval
  br label %return

if.end.572:                                       ; preds = %if.else.565
  br label %if.end.573

if.end.573:                                       ; preds = %if.end.572, %if.end.564
  %325 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder574 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %325, i32 0, i32 11
  %326 = load i32, i32* %netorder574, align 4
  %tobool575 = icmp ne i32 %326, 0
  br i1 %tobool575, label %if.then.576, label %if.else.661

if.then.576:                                      ; preds = %if.end.573
  %327 = load i32, i32* %len, align 4
  %conv579 = sext i32 %327 to i64
  %call580 = call i64 @Perl_my_htonl(i64 %conv579)
  %conv581 = trunc i64 %call580 to i32
  store i32 %conv581, i32* %y578, align 4
  %328 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio582 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %328, i32 0, i32 23
  %329 = load %struct._PerlIO**, %struct._PerlIO*** %fio582, align 8
  %tobool583 = icmp ne %struct._PerlIO** %329, null
  br i1 %tobool583, label %if.else.653, label %if.then.584

if.then.584:                                      ; preds = %if.then.576
  %330 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf585 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %330, i32 0, i32 21
  %aptr586 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf585, i32 0, i32 2
  %331 = load i8*, i8** %aptr586, align 8
  %add.ptr587 = getelementptr inbounds i8, i8* %331, i64 4
  %332 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf588 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %332, i32 0, i32 21
  %aend589 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf588, i32 0, i32 3
  %333 = load i8*, i8** %aend589, align 8
  %cmp590 = icmp ugt i8* %add.ptr587, %333
  br i1 %cmp590, label %if.then.592, label %if.end.634

if.then.592:                                      ; preds = %if.then.584
  %334 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf595 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %334, i32 0, i32 21
  %asiz596 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf595, i32 0, i32 1
  %335 = load i64, i64* %asiz596, align 8
  %add597 = add i64 4, %335
  %add598 = add i64 %add597, 8191
  %and599 = and i64 %add598, -8192
  %conv600 = trunc i64 %and599 to i32
  store i32 %conv600, i32* %nsz594, align 4
  %336 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf603 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %336, i32 0, i32 21
  %aptr604 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf603, i32 0, i32 2
  %337 = load i8*, i8** %aptr604, align 8
  %338 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf605 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %338, i32 0, i32 21
  %arena606 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf605, i32 0, i32 0
  %339 = load i8*, i8** %arena606, align 8
  %sub.ptr.lhs.cast607 = ptrtoint i8* %337 to i64
  %sub.ptr.rhs.cast608 = ptrtoint i8* %339 to i64
  %sub.ptr.sub609 = sub i64 %sub.ptr.lhs.cast607, %sub.ptr.rhs.cast608
  %conv610 = trunc i64 %sub.ptr.sub609 to i32
  store i32 %conv610, i32* %offset602, align 4
  %340 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf611 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %340, i32 0, i32 21
  %arena612 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf611, i32 0, i32 0
  %341 = load i8*, i8** %arena612, align 8
  %342 = load i32, i32* %nsz594, align 4
  %conv613 = sext i32 %342 to i64
  %mul614 = mul i64 %conv613, 1
  %call615 = call i8* @Perl_safesysrealloc(i8* %341, i64 %mul614)
  %343 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf616 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %343, i32 0, i32 21
  %arena617 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf616, i32 0, i32 0
  store i8* %call615, i8** %arena617, align 8
  %344 = load i32, i32* %nsz594, align 4
  %conv618 = sext i32 %344 to i64
  %345 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf619 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %345, i32 0, i32 21
  %asiz620 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf619, i32 0, i32 1
  store i64 %conv618, i64* %asiz620, align 8
  %346 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf621 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %346, i32 0, i32 21
  %arena622 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf621, i32 0, i32 0
  %347 = load i8*, i8** %arena622, align 8
  %348 = load i32, i32* %offset602, align 4
  %idx.ext623 = sext i32 %348 to i64
  %add.ptr624 = getelementptr inbounds i8, i8* %347, i64 %idx.ext623
  %349 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf625 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %349, i32 0, i32 21
  %aptr626 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf625, i32 0, i32 2
  store i8* %add.ptr624, i8** %aptr626, align 8
  %350 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf628 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %350, i32 0, i32 21
  %arena629 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf628, i32 0, i32 0
  %351 = load i8*, i8** %arena629, align 8
  %352 = load i32, i32* %nsz594, align 4
  %idx.ext630 = sext i32 %352 to i64
  %add.ptr631 = getelementptr inbounds i8, i8* %351, i64 %idx.ext630
  %353 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf632 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %353, i32 0, i32 21
  %aend633 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf632, i32 0, i32 3
  store i8* %add.ptr631, i8** %aend633, align 8
  store i8* %add.ptr631, i8** %tmp627
  %354 = load i8*, i8** %tmp627
  br label %if.end.634

if.end.634:                                       ; preds = %if.then.592, %if.then.584
  %355 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf635 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %355, i32 0, i32 21
  %aptr636 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf635, i32 0, i32 2
  %356 = load i8*, i8** %aptr636, align 8
  %357 = ptrtoint i8* %356 to i64
  %358 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf637 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %358, i32 0, i32 21
  %aptr638 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf637, i32 0, i32 2
  %359 = load i8*, i8** %aptr638, align 8
  %360 = ptrtoint i8* %359 to i64
  %and639 = and i64 %360, -4
  %cmp640 = icmp eq i64 %357, %and639
  br i1 %cmp640, label %if.then.642, label %if.else.645

if.then.642:                                      ; preds = %if.end.634
  %361 = load i32, i32* %y578, align 4
  %362 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf643 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %362, i32 0, i32 21
  %aptr644 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf643, i32 0, i32 2
  %363 = load i8*, i8** %aptr644, align 8
  %364 = bitcast i8* %363 to i32*
  store i32 %361, i32* %364, align 4
  br label %if.end.648

if.else.645:                                      ; preds = %if.end.634
  %365 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf646 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %365, i32 0, i32 21
  %aptr647 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf646, i32 0, i32 2
  %366 = load i8*, i8** %aptr647, align 8
  %367 = bitcast i32* %y578 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %366, i8* %367, i64 4, i32 1, i1 false)
  br label %if.end.648

if.end.648:                                       ; preds = %if.else.645, %if.then.642
  %368 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf650 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %368, i32 0, i32 21
  %aptr651 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf650, i32 0, i32 2
  %369 = load i8*, i8** %aptr651, align 8
  %add.ptr652 = getelementptr inbounds i8, i8* %369, i64 4
  store i8* %add.ptr652, i8** %aptr651, align 8
  store i8* %add.ptr652, i8** %tmp649
  %370 = load i8*, i8** %tmp649
  br label %if.end.660

if.else.653:                                      ; preds = %if.then.576
  %371 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio654 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %371, i32 0, i32 23
  %372 = load %struct._PerlIO**, %struct._PerlIO*** %fio654, align 8
  %373 = bitcast i32* %y578 to i8*
  %call655 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %372, i8* %373, i64 4)
  %cmp656 = icmp ne i64 %call655, 4
  br i1 %cmp656, label %if.then.658, label %if.end.659

if.then.658:                                      ; preds = %if.else.653
  store i32 -1, i32* %retval
  br label %return

if.end.659:                                       ; preds = %if.else.653
  br label %if.end.660

if.end.660:                                       ; preds = %if.end.659, %if.end.648
  br label %if.end.741

if.else.661:                                      ; preds = %if.end.573
  %374 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio662 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %374, i32 0, i32 23
  %375 = load %struct._PerlIO**, %struct._PerlIO*** %fio662, align 8
  %tobool663 = icmp ne %struct._PerlIO** %375, null
  br i1 %tobool663, label %if.else.733, label %if.then.664

if.then.664:                                      ; preds = %if.else.661
  %376 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf665 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %376, i32 0, i32 21
  %aptr666 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf665, i32 0, i32 2
  %377 = load i8*, i8** %aptr666, align 8
  %add.ptr667 = getelementptr inbounds i8, i8* %377, i64 4
  %378 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf668 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %378, i32 0, i32 21
  %aend669 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf668, i32 0, i32 3
  %379 = load i8*, i8** %aend669, align 8
  %cmp670 = icmp ugt i8* %add.ptr667, %379
  br i1 %cmp670, label %if.then.672, label %if.end.714

if.then.672:                                      ; preds = %if.then.664
  %380 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf675 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %380, i32 0, i32 21
  %asiz676 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf675, i32 0, i32 1
  %381 = load i64, i64* %asiz676, align 8
  %add677 = add i64 4, %381
  %add678 = add i64 %add677, 8191
  %and679 = and i64 %add678, -8192
  %conv680 = trunc i64 %and679 to i32
  store i32 %conv680, i32* %nsz674, align 4
  %382 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf683 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %382, i32 0, i32 21
  %aptr684 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf683, i32 0, i32 2
  %383 = load i8*, i8** %aptr684, align 8
  %384 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf685 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %384, i32 0, i32 21
  %arena686 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf685, i32 0, i32 0
  %385 = load i8*, i8** %arena686, align 8
  %sub.ptr.lhs.cast687 = ptrtoint i8* %383 to i64
  %sub.ptr.rhs.cast688 = ptrtoint i8* %385 to i64
  %sub.ptr.sub689 = sub i64 %sub.ptr.lhs.cast687, %sub.ptr.rhs.cast688
  %conv690 = trunc i64 %sub.ptr.sub689 to i32
  store i32 %conv690, i32* %offset682, align 4
  %386 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf691 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %386, i32 0, i32 21
  %arena692 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf691, i32 0, i32 0
  %387 = load i8*, i8** %arena692, align 8
  %388 = load i32, i32* %nsz674, align 4
  %conv693 = sext i32 %388 to i64
  %mul694 = mul i64 %conv693, 1
  %call695 = call i8* @Perl_safesysrealloc(i8* %387, i64 %mul694)
  %389 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf696 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %389, i32 0, i32 21
  %arena697 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf696, i32 0, i32 0
  store i8* %call695, i8** %arena697, align 8
  %390 = load i32, i32* %nsz674, align 4
  %conv698 = sext i32 %390 to i64
  %391 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf699 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %391, i32 0, i32 21
  %asiz700 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf699, i32 0, i32 1
  store i64 %conv698, i64* %asiz700, align 8
  %392 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf701 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %392, i32 0, i32 21
  %arena702 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf701, i32 0, i32 0
  %393 = load i8*, i8** %arena702, align 8
  %394 = load i32, i32* %offset682, align 4
  %idx.ext703 = sext i32 %394 to i64
  %add.ptr704 = getelementptr inbounds i8, i8* %393, i64 %idx.ext703
  %395 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf705 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %395, i32 0, i32 21
  %aptr706 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf705, i32 0, i32 2
  store i8* %add.ptr704, i8** %aptr706, align 8
  %396 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf708 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %396, i32 0, i32 21
  %arena709 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf708, i32 0, i32 0
  %397 = load i8*, i8** %arena709, align 8
  %398 = load i32, i32* %nsz674, align 4
  %idx.ext710 = sext i32 %398 to i64
  %add.ptr711 = getelementptr inbounds i8, i8* %397, i64 %idx.ext710
  %399 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf712 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %399, i32 0, i32 21
  %aend713 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf712, i32 0, i32 3
  store i8* %add.ptr711, i8** %aend713, align 8
  store i8* %add.ptr711, i8** %tmp707
  %400 = load i8*, i8** %tmp707
  br label %if.end.714

if.end.714:                                       ; preds = %if.then.672, %if.then.664
  %401 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf715 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %401, i32 0, i32 21
  %aptr716 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf715, i32 0, i32 2
  %402 = load i8*, i8** %aptr716, align 8
  %403 = ptrtoint i8* %402 to i64
  %404 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf717 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %404, i32 0, i32 21
  %aptr718 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf717, i32 0, i32 2
  %405 = load i8*, i8** %aptr718, align 8
  %406 = ptrtoint i8* %405 to i64
  %and719 = and i64 %406, -4
  %cmp720 = icmp eq i64 %403, %and719
  br i1 %cmp720, label %if.then.722, label %if.else.725

if.then.722:                                      ; preds = %if.end.714
  %407 = load i32, i32* %len, align 4
  %408 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf723 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %408, i32 0, i32 21
  %aptr724 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf723, i32 0, i32 2
  %409 = load i8*, i8** %aptr724, align 8
  %410 = bitcast i8* %409 to i32*
  store i32 %407, i32* %410, align 4
  br label %if.end.728

if.else.725:                                      ; preds = %if.end.714
  %411 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf726 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %411, i32 0, i32 21
  %aptr727 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf726, i32 0, i32 2
  %412 = load i8*, i8** %aptr727, align 8
  %413 = bitcast i32* %len to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %412, i8* %413, i64 4, i32 1, i1 false)
  br label %if.end.728

if.end.728:                                       ; preds = %if.else.725, %if.then.722
  %414 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf730 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %414, i32 0, i32 21
  %aptr731 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf730, i32 0, i32 2
  %415 = load i8*, i8** %aptr731, align 8
  %add.ptr732 = getelementptr inbounds i8, i8* %415, i64 4
  store i8* %add.ptr732, i8** %aptr731, align 8
  store i8* %add.ptr732, i8** %tmp729
  %416 = load i8*, i8** %tmp729
  br label %if.end.740

if.else.733:                                      ; preds = %if.else.661
  %417 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio734 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %417, i32 0, i32 23
  %418 = load %struct._PerlIO**, %struct._PerlIO*** %fio734, align 8
  %419 = bitcast i32* %len to i8*
  %call735 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %418, i8* %419, i64 4)
  %cmp736 = icmp ne i64 %call735, 4
  br i1 %cmp736, label %if.then.738, label %if.end.739

if.then.738:                                      ; preds = %if.else.733
  store i32 -1, i32* %retval
  br label %return

if.end.739:                                       ; preds = %if.else.733
  br label %if.end.740

if.end.740:                                       ; preds = %if.end.739, %if.end.728
  br label %if.end.741

if.end.741:                                       ; preds = %if.end.740, %if.end.660
  br label %if.end.742

if.end.742:                                       ; preds = %if.end.741, %if.end.502
  %420 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio743 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %420, i32 0, i32 23
  %421 = load %struct._PerlIO**, %struct._PerlIO*** %fio743, align 8
  %tobool744 = icmp ne %struct._PerlIO** %421, null
  br i1 %tobool744, label %if.else.806, label %if.then.745

if.then.745:                                      ; preds = %if.end.742
  %422 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf746 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %422, i32 0, i32 21
  %aptr747 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf746, i32 0, i32 2
  %423 = load i8*, i8** %aptr747, align 8
  %424 = load i32, i32* %len, align 4
  %idx.ext748 = sext i32 %424 to i64
  %add.ptr749 = getelementptr inbounds i8, i8* %423, i64 %idx.ext748
  %425 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf750 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %425, i32 0, i32 21
  %aend751 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf750, i32 0, i32 3
  %426 = load i8*, i8** %aend751, align 8
  %cmp752 = icmp ugt i8* %add.ptr749, %426
  br i1 %cmp752, label %if.then.754, label %if.end.797

if.then.754:                                      ; preds = %if.then.745
  %427 = load i32, i32* %len, align 4
  %conv757 = sext i32 %427 to i64
  %428 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf758 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %428, i32 0, i32 21
  %asiz759 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf758, i32 0, i32 1
  %429 = load i64, i64* %asiz759, align 8
  %add760 = add i64 %conv757, %429
  %add761 = add i64 %add760, 8191
  %and762 = and i64 %add761, -8192
  %conv763 = trunc i64 %and762 to i32
  store i32 %conv763, i32* %nsz756, align 4
  %430 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf766 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %430, i32 0, i32 21
  %aptr767 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf766, i32 0, i32 2
  %431 = load i8*, i8** %aptr767, align 8
  %432 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf768 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %432, i32 0, i32 21
  %arena769 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf768, i32 0, i32 0
  %433 = load i8*, i8** %arena769, align 8
  %sub.ptr.lhs.cast770 = ptrtoint i8* %431 to i64
  %sub.ptr.rhs.cast771 = ptrtoint i8* %433 to i64
  %sub.ptr.sub772 = sub i64 %sub.ptr.lhs.cast770, %sub.ptr.rhs.cast771
  %conv773 = trunc i64 %sub.ptr.sub772 to i32
  store i32 %conv773, i32* %offset765, align 4
  %434 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf774 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %434, i32 0, i32 21
  %arena775 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf774, i32 0, i32 0
  %435 = load i8*, i8** %arena775, align 8
  %436 = load i32, i32* %nsz756, align 4
  %conv776 = sext i32 %436 to i64
  %mul777 = mul i64 %conv776, 1
  %call778 = call i8* @Perl_safesysrealloc(i8* %435, i64 %mul777)
  %437 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf779 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %437, i32 0, i32 21
  %arena780 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf779, i32 0, i32 0
  store i8* %call778, i8** %arena780, align 8
  %438 = load i32, i32* %nsz756, align 4
  %conv781 = sext i32 %438 to i64
  %439 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf782 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %439, i32 0, i32 21
  %asiz783 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf782, i32 0, i32 1
  store i64 %conv781, i64* %asiz783, align 8
  %440 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf784 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %440, i32 0, i32 21
  %arena785 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf784, i32 0, i32 0
  %441 = load i8*, i8** %arena785, align 8
  %442 = load i32, i32* %offset765, align 4
  %idx.ext786 = sext i32 %442 to i64
  %add.ptr787 = getelementptr inbounds i8, i8* %441, i64 %idx.ext786
  %443 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf788 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %443, i32 0, i32 21
  %aptr789 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf788, i32 0, i32 2
  store i8* %add.ptr787, i8** %aptr789, align 8
  %444 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf791 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %444, i32 0, i32 21
  %arena792 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf791, i32 0, i32 0
  %445 = load i8*, i8** %arena792, align 8
  %446 = load i32, i32* %nsz756, align 4
  %idx.ext793 = sext i32 %446 to i64
  %add.ptr794 = getelementptr inbounds i8, i8* %445, i64 %idx.ext793
  %447 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf795 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %447, i32 0, i32 21
  %aend796 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf795, i32 0, i32 3
  store i8* %add.ptr794, i8** %aend796, align 8
  store i8* %add.ptr794, i8** %tmp790
  %448 = load i8*, i8** %tmp790
  br label %if.end.797

if.end.797:                                       ; preds = %if.then.754, %if.then.745
  %449 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf798 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %449, i32 0, i32 21
  %aptr799 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf798, i32 0, i32 2
  %450 = load i8*, i8** %aptr799, align 8
  %451 = load i8*, i8** %class, align 8
  %452 = load i32, i32* %len, align 4
  %conv800 = sext i32 %452 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %450, i8* %451, i64 %conv800, i32 1, i1 false)
  %453 = load i32, i32* %len, align 4
  %454 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf802 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %454, i32 0, i32 21
  %aptr803 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf802, i32 0, i32 2
  %455 = load i8*, i8** %aptr803, align 8
  %idx.ext804 = sext i32 %453 to i64
  %add.ptr805 = getelementptr inbounds i8, i8* %455, i64 %idx.ext804
  store i8* %add.ptr805, i8** %aptr803, align 8
  store i8* %add.ptr805, i8** %tmp801
  %456 = load i8*, i8** %tmp801
  br label %if.end.815

if.else.806:                                      ; preds = %if.end.742
  %457 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio807 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %457, i32 0, i32 23
  %458 = load %struct._PerlIO**, %struct._PerlIO*** %fio807, align 8
  %459 = load i8*, i8** %class, align 8
  %460 = load i32, i32* %len, align 4
  %conv808 = sext i32 %460 to i64
  %call809 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %458, i8* %459, i64 %conv808)
  %461 = load i32, i32* %len, align 4
  %conv810 = sext i32 %461 to i64
  %cmp811 = icmp ne i64 %call809, %conv810
  br i1 %cmp811, label %if.then.813, label %if.end.814

if.then.813:                                      ; preds = %if.else.806
  store i32 -1, i32* %retval
  br label %return

if.end.814:                                       ; preds = %if.else.806
  br label %if.end.815

if.end.815:                                       ; preds = %if.end.814, %if.end.797
  br label %if.end.816

if.end.816:                                       ; preds = %if.end.815, %if.end.361
  %462 = load i32, i32* %type.addr, align 4
  %idxprom = sext i32 %462 to i64
  %arrayidx = getelementptr inbounds [8 x i32 (%struct.stcxt*, %struct.sv*)*], [8 x i32 (%struct.stcxt*, %struct.sv*)*]* @sv_store, i32 0, i64 %idxprom
  %463 = load i32 (%struct.stcxt*, %struct.sv*)*, i32 (%struct.stcxt*, %struct.sv*)** %arrayidx, align 8
  %464 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %465 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call817 = call i32 %463(%struct.stcxt* %464, %struct.sv* %465)
  store i32 %call817, i32* %retval
  br label %return

return:                                           ; preds = %if.end.816, %if.then.813, %if.then.738, %if.then.658, %if.then.571, %if.then.500, %if.then.427, %if.then.357, %if.then.277, %if.then.192, %if.then.122, %if.then.49, %if.then
  %466 = load i32, i32* %retval
  ret i32 %466
}

declare %struct.magic* @Perl_mg_find(%struct.sv*, i32) #1

; Function Attrs: nounwind uwtable
define internal %struct.sv* @pkg_can(%struct.hv* %cache, %struct.hv* %pkg, i8* %method) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cache.addr = alloca %struct.hv*, align 8
  %pkg.addr = alloca %struct.hv*, align 8
  %method.addr = alloca i8*, align 8
  %svh = alloca %struct.sv**, align 8
  %sv = alloca %struct.sv*, align 8
  store %struct.hv* %cache, %struct.hv** %cache.addr, align 8
  store %struct.hv* %pkg, %struct.hv** %pkg.addr, align 8
  store i8* %method, i8** %method.addr, align 8
  %0 = load %struct.hv*, %struct.hv** %cache.addr, align 8
  %1 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %1, i32 0, i32 0
  %2 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_name = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %2, i32 0, i32 10
  %3 = load i8*, i8** %xhv_name, align 8
  %4 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any1 = getelementptr inbounds %struct.hv, %struct.hv* %4, i32 0, i32 0
  %5 = load %struct.xpvhv*, %struct.xpvhv** %sv_any1, align 8
  %xhv_name2 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %5, i32 0, i32 10
  %6 = load i8*, i8** %xhv_name2, align 8
  %call = call i64 @strlen(i8* %6)
  %conv = trunc i64 %call to i32
  %call3 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %0, i8* %3, i32 %conv, i32 0)
  store %struct.sv** %call3, %struct.sv*** %svh, align 8
  %7 = load %struct.sv**, %struct.sv*** %svh, align 8
  %tobool = icmp ne %struct.sv** %7, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load %struct.sv**, %struct.sv*** %svh, align 8
  %9 = load %struct.sv*, %struct.sv** %8, align 8
  store %struct.sv* %9, %struct.sv** %sv, align 8
  %10 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %10, i32 0, i32 2
  %11 = load i32, i32* %sv_flags, align 4
  %and = and i32 %11, 118423552
  %tobool4 = icmp ne i32 %and, 0
  br i1 %tobool4, label %if.else, label %if.then.5

if.then.5:                                        ; preds = %if.then
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.else:                                          ; preds = %if.then
  %12 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %12, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %entry
  %13 = load %struct.hv*, %struct.hv** %cache.addr, align 8
  %14 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %15 = load i8*, i8** %method.addr, align 8
  %call6 = call %struct.sv* @pkg_fetchmeth(%struct.hv* %13, %struct.hv* %14, i8* %15)
  store %struct.sv* %call6, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end, %if.else, %if.then.5
  %16 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %16
}

; Function Attrs: nounwind uwtable
define internal i32 @store_hook(%struct.stcxt* %cxt, %struct.sv* %sv, i32 %type, %struct.hv* %pkg, %struct.sv* %hook) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %type.addr = alloca i32, align 4
  %pkg.addr = alloca %struct.hv*, align 8
  %hook.addr = alloca %struct.sv*, align 8
  %len = alloca i32, align 4
  %class = alloca i8*, align 8
  %len2 = alloca i64, align 8
  %Perl_ref = alloca %struct.sv*, align 8
  %av = alloca %struct.av*, align 8
  %ary = alloca %struct.sv**, align 8
  %count = alloca i32, align 4
  %flags = alloca i8, align 1
  %pv = alloca i8*, align 8
  %i = alloca i32, align 4
  %recursed = alloca i32, align 4
  %obj_type = alloca i32, align 4
  %classnum = alloca i32, align 4
  %ret = alloca i32, align 4
  %clone = alloca i32, align 4
  %mtype = alloca i8, align 1
  %eflags = alloca i8, align 1
  %svh = alloca %struct.sv**, align 8
  %rsv = alloca %struct.sv*, align 8
  %xsv = alloca %struct.sv*, align 8
  %av_hook = alloca %struct.av*, align 8
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %nsz116 = alloca i32, align 4
  %offset124 = alloca i32, align 4
  %tmp149 = alloca i8*, align 8
  %nsz187 = alloca i32, align 4
  %offset195 = alloca i32, align 4
  %tmp220 = alloca i8*, align 8
  %nsz257 = alloca i32, align 4
  %offset265 = alloca i32, align 4
  %tmp290 = alloca i8*, align 8
  %nsz396 = alloca i32, align 4
  %offset404 = alloca i32, align 4
  %tmp429 = alloca i8*, align 8
  %nsz463 = alloca i32, align 4
  %offset471 = alloca i32, align 4
  %tmp496 = alloca i8*, align 8
  %nsz534 = alloca i32, align 4
  %offset542 = alloca i32, align 4
  %tmp567 = alloca i8*, align 8
  %nsz604 = alloca i32, align 4
  %offset612 = alloca i32, align 4
  %tmp637 = alloca i8*, align 8
  %y = alloca i32, align 4
  %nsz684 = alloca i32, align 4
  %offset692 = alloca i32, align 4
  %tmp717 = alloca i8*, align 8
  %tmp739 = alloca i8*, align 8
  %nsz764 = alloca i32, align 4
  %offset772 = alloca i32, align 4
  %tmp797 = alloca i8*, align 8
  %tmp819 = alloca i8*, align 8
  %cnum = alloca i8, align 1
  %nsz850 = alloca i32, align 4
  %offset858 = alloca i32, align 4
  %tmp883 = alloca i8*, align 8
  %y913 = alloca i32, align 4
  %nsz929 = alloca i32, align 4
  %offset937 = alloca i32, align 4
  %tmp962 = alloca i8*, align 8
  %tmp984 = alloca i8*, align 8
  %nsz1009 = alloca i32, align 4
  %offset1017 = alloca i32, align 4
  %tmp1042 = alloca i8*, align 8
  %tmp1064 = alloca i8*, align 8
  %clen = alloca i8, align 1
  %nsz1095 = alloca i32, align 4
  %offset1103 = alloca i32, align 4
  %tmp1128 = alloca i8*, align 8
  %nsz1162 = alloca i32, align 4
  %offset1171 = alloca i32, align 4
  %tmp1196 = alloca i8*, align 8
  %tmp1207 = alloca i8*, align 8
  %wlen2 = alloca i32, align 4
  %y1233 = alloca i32, align 4
  %nsz1249 = alloca i32, align 4
  %offset1257 = alloca i32, align 4
  %tmp1282 = alloca i8*, align 8
  %tmp1304 = alloca i8*, align 8
  %nsz1329 = alloca i32, align 4
  %offset1337 = alloca i32, align 4
  %tmp1362 = alloca i8*, align 8
  %tmp1384 = alloca i8*, align 8
  %clen1399 = alloca i8, align 1
  %nsz1416 = alloca i32, align 4
  %offset1424 = alloca i32, align 4
  %tmp1449 = alloca i8*, align 8
  %nsz1484 = alloca i32, align 4
  %offset1492 = alloca i32, align 4
  %tmp1517 = alloca i8*, align 8
  %tmp1527 = alloca i8*, align 8
  %len3 = alloca i32, align 4
  %y1553 = alloca i32, align 4
  %nsz1569 = alloca i32, align 4
  %offset1577 = alloca i32, align 4
  %tmp1602 = alloca i8*, align 8
  %tmp1624 = alloca i8*, align 8
  %nsz1649 = alloca i32, align 4
  %offset1657 = alloca i32, align 4
  %tmp1682 = alloca i8*, align 8
  %tmp1704 = alloca i8*, align 8
  %clen1719 = alloca i8, align 1
  %nsz1736 = alloca i32, align 4
  %offset1744 = alloca i32, align 4
  %tmp1769 = alloca i8*, align 8
  %tagval = alloca i32, align 4
  %nsz1814 = alloca i32, align 4
  %offset1822 = alloca i32, align 4
  %tmp1847 = alloca i8*, align 8
  %tmp1869 = alloca i8*, align 8
  %mg = alloca %struct.magic*, align 8
  %svt = alloca i32, align 4
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i32 %type, i32* %type.addr, align 4
  store %struct.hv* %pkg, %struct.hv** %pkg.addr, align 8
  store %struct.sv* %hook, %struct.sv** %hook.addr, align 8
  store i32 0, i32* %recursed, align 4
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %optype = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 1
  %1 = load i32, i32* %optype, align 4
  %and = and i32 %1, 4
  store i32 %and, i32* %clone, align 4
  store i8 0, i8* %mtype, align 1
  store i8 0, i8* %eflags, align 1
  %2 = load i32, i32* %type.addr, align 4
  switch i32 %2, label %sw.default.7 [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.1
    i32 3, label %sw.bb.2
    i32 4, label %sw.bb.3
  ]

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %obj_type, align 4
  br label %sw.epilog.8

sw.bb.1:                                          ; preds = %entry
  store i32 1, i32* %obj_type, align 4
  br label %sw.epilog.8

sw.bb.2:                                          ; preds = %entry
  store i32 2, i32* %obj_type, align 4
  br label %sw.epilog.8

sw.bb.3:                                          ; preds = %entry
  store i32 3, i32* %obj_type, align 4
  %3 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %3, i32 0, i32 2
  %4 = load i32, i32* %sv_flags, align 4
  %and4 = and i32 %4, 255
  switch i32 %and4, label %sw.default [
    i32 11, label %sw.bb.5
    i32 10, label %sw.bb.6
  ]

sw.bb.5:                                          ; preds = %sw.bb.3
  store i8 6, i8* %eflags, align 1
  store i8 80, i8* %mtype, align 1
  br label %sw.epilog

sw.bb.6:                                          ; preds = %sw.bb.3
  store i8 5, i8* %eflags, align 1
  store i8 80, i8* %mtype, align 1
  br label %sw.epilog

sw.default:                                       ; preds = %sw.bb.3
  store i8 4, i8* %eflags, align 1
  store i8 113, i8* %mtype, align 1
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.6, %sw.bb.5
  br label %sw.epilog.8

sw.default.7:                                     ; preds = %entry
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 18
  store i32 1, i32* %s_dirty, align 4
  %6 = load i32, i32* %type.addr, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.32, i32 0, i32 0), i32 %6)
  br label %sw.epilog.8

sw.epilog.8:                                      ; preds = %sw.default.7, %sw.epilog, %sw.bb.2, %sw.bb.1, %sw.bb
  %7 = load i32, i32* %obj_type, align 4
  %or = or i32 64, %7
  %conv = trunc i32 %or to i8
  store i8 %conv, i8* %flags, align 1
  %8 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %8, i32 0, i32 0
  %9 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_name = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %9, i32 0, i32 10
  %10 = load i8*, i8** %xhv_name, align 8
  store i8* %10, i8** %class, align 8
  %11 = load i8*, i8** %class, align 8
  %call = call i64 @strlen(i8* %11)
  %conv9 = trunc i64 %call to i32
  store i32 %conv9, i32* %len, align 4
  %12 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call10 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %12)
  store %struct.sv* %call10, %struct.sv** %Perl_ref, align 8
  %13 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %14 = load %struct.sv*, %struct.sv** %hook.addr, align 8
  %15 = load i32, i32* %clone, align 4
  %call11 = call %struct.av* @array_call(%struct.sv* %13, %struct.sv* %14, i32 %15)
  store %struct.av* %call11, %struct.av** %av, align 8
  %16 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any12 = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 0
  %17 = load i8*, i8** %sv_any12, align 8
  %18 = bitcast i8* %17 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %18, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %19 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %19)
  %20 = load %struct.av*, %struct.av** %av, align 8
  %sv_any13 = getelementptr inbounds %struct.av, %struct.av* %20, i32 0, i32 0
  %21 = load %struct.xpvav*, %struct.xpvav** %sv_any13, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %21, i32 0, i32 1
  %22 = load i64, i64* %xav_fill, align 8
  %add = add nsw i64 %22, 1
  %conv14 = trunc i64 %add to i32
  store i32 %conv14, i32* %count, align 4
  %23 = load i32, i32* %count, align 4
  %tobool = icmp ne i32 %23, 0
  br i1 %tobool, label %if.end.24, label %if.then

if.then:                                          ; preds = %sw.epilog.8
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hclass = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 6
  %25 = load %struct.hv*, %struct.hv** %hclass, align 8
  %26 = load i8*, i8** %class, align 8
  %27 = load i32, i32* %len, align 4
  %call15 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %25, i8* %26, i32 %27, i32 0)
  %tobool16 = icmp ne %struct.sv** %call15, null
  br i1 %tobool16, label %if.then.17, label %if.end

if.then.17:                                       ; preds = %if.then
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty18 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 18
  store i32 1, i32* %s_dirty18, align 4
  %29 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %optype19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %29, i32 0, i32 1
  %30 = load i32, i32* %optype19, align 4
  %and20 = and i32 %30, 4
  %tobool21 = icmp ne i32 %and20, 0
  %cond = select i1 %tobool21, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.35, i32 0, i32 0)
  %31 = load i8*, i8** %class, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.33, i32 0, i32 0), i8* %cond, i8* %31)
  br label %if.end

if.end:                                           ; preds = %if.then.17, %if.then
  %32 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %32, i32 0, i32 8
  %33 = load %struct.hv*, %struct.hv** %hook22, align 8
  %34 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  call void @pkg_hide(%struct.hv* %33, %struct.hv* %34, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0))
  %35 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %36 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %37 = load i32, i32* %type.addr, align 4
  %38 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %call23 = call i32 @store_blessed(%struct.stcxt* %35, %struct.sv* %36, i32 %37, %struct.hv* %38)
  store i32 %call23, i32* %retval
  br label %return

if.end.24:                                        ; preds = %sw.epilog.8
  %39 = load %struct.av*, %struct.av** %av, align 8
  %sv_any25 = getelementptr inbounds %struct.av, %struct.av* %39, i32 0, i32 0
  %40 = load %struct.xpvav*, %struct.xpvav** %sv_any25, align 8
  %xav_array = getelementptr inbounds %struct.xpvav, %struct.xpvav* %40, i32 0, i32 0
  %41 = load i8*, i8** %xav_array, align 8
  %42 = bitcast i8* %41 to %struct.sv**
  store %struct.sv** %42, %struct.sv*** %ary, align 8
  %43 = load %struct.sv**, %struct.sv*** %ary, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %43, i64 0
  %44 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  %sv_flags26 = getelementptr inbounds %struct.sv, %struct.sv* %44, i32 0, i32 2
  %45 = load i32, i32* %sv_flags26, align 4
  %and27 = and i32 %45, 262144
  %cmp = icmp eq i32 %and27, 262144
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.24
  %46 = load %struct.sv**, %struct.sv*** %ary, align 8
  %arrayidx29 = getelementptr inbounds %struct.sv*, %struct.sv** %46, i64 0
  %47 = load %struct.sv*, %struct.sv** %arrayidx29, align 8
  %sv_any30 = getelementptr inbounds %struct.sv, %struct.sv* %47, i32 0, i32 0
  %48 = load i8*, i8** %sv_any30, align 8
  %49 = bitcast i8* %48 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %49, i32 0, i32 1
  %50 = load i64, i64* %xpv_cur, align 8
  store i64 %50, i64* %len2, align 8
  %51 = load %struct.sv**, %struct.sv*** %ary, align 8
  %arrayidx31 = getelementptr inbounds %struct.sv*, %struct.sv** %51, i64 0
  %52 = load %struct.sv*, %struct.sv** %arrayidx31, align 8
  %sv_any32 = getelementptr inbounds %struct.sv, %struct.sv* %52, i32 0, i32 0
  %53 = load i8*, i8** %sv_any32, align 8
  %54 = bitcast i8* %53 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %54, i32 0, i32 0
  %55 = load i8*, i8** %xpv_pv, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end.24
  %56 = load %struct.sv**, %struct.sv*** %ary, align 8
  %arrayidx33 = getelementptr inbounds %struct.sv*, %struct.sv** %56, i64 0
  %57 = load %struct.sv*, %struct.sv** %arrayidx33, align 8
  %call34 = call i8* @Perl_sv_2pv_flags(%struct.sv* %57, i64* %len2, i32 2)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond35 = phi i8* [ %55, %cond.true ], [ %call34, %cond.false ]
  store i8* %cond35, i8** %pv, align 8
  store i32 1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* %count, align 4
  %cmp36 = icmp slt i32 %58, %59
  br i1 %cmp36, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %60 = load i32, i32* %i, align 4
  %idxprom = sext i32 %60 to i64
  %61 = load %struct.sv**, %struct.sv*** %ary, align 8
  %arrayidx38 = getelementptr inbounds %struct.sv*, %struct.sv** %61, i64 %idxprom
  %62 = load %struct.sv*, %struct.sv** %arrayidx38, align 8
  store %struct.sv* %62, %struct.sv** %rsv, align 8
  %63 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook_seen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %63, i32 0, i32 3
  %64 = load %struct.av*, %struct.av** %hook_seen, align 8
  store %struct.av* %64, %struct.av** %av_hook, align 8
  %65 = load %struct.sv*, %struct.sv** %rsv, align 8
  %sv_flags39 = getelementptr inbounds %struct.sv, %struct.sv* %65, i32 0, i32 2
  %66 = load i32, i32* %sv_flags39, align 4
  %and40 = and i32 %66, 524288
  %tobool41 = icmp ne i32 %and40, 0
  br i1 %tobool41, label %if.end.44, label %if.then.42

if.then.42:                                       ; preds = %for.body
  %67 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty43 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %67, i32 0, i32 18
  store i32 1, i32* %s_dirty43, align 4
  %68 = load i32, i32* %i, align 4
  %69 = load i8*, i8** %class, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.36, i32 0, i32 0), i32 %68, i8* %69)
  br label %if.end.44

if.end.44:                                        ; preds = %if.then.42, %for.body
  %70 = load %struct.sv*, %struct.sv** %rsv, align 8
  %sv_any45 = getelementptr inbounds %struct.sv, %struct.sv* %70, i32 0, i32 0
  %71 = load i8*, i8** %sv_any45, align 8
  %72 = bitcast i8* %71 to %struct.xrv*
  %xrv_rv46 = getelementptr inbounds %struct.xrv, %struct.xrv* %72, i32 0, i32 0
  %73 = load %struct.sv*, %struct.sv** %xrv_rv46, align 8
  store %struct.sv* %73, %struct.sv** %xsv, align 8
  %74 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %74, i32 0, i32 2
  %75 = load %struct.hv*, %struct.hv** %hseen, align 8
  %76 = bitcast %struct.sv** %xsv to i8*
  %call47 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %75, i8* %76, i32 8, i32 0)
  store %struct.sv** %call47, %struct.sv*** %svh, align 8
  %tobool48 = icmp ne %struct.sv** %call47, null
  br i1 %tobool48, label %if.then.49, label %if.end.50

if.then.49:                                       ; preds = %if.end.44
  br label %sv_seen

if.end.50:                                        ; preds = %if.end.44
  %77 = load i32, i32* %recursed, align 4
  %inc = add nsw i32 %77, 1
  store i32 %inc, i32* %recursed, align 4
  %tobool51 = icmp ne i32 %77, 0
  br i1 %tobool51, label %if.else.241, label %if.then.52

if.then.52:                                       ; preds = %if.end.50
  %78 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %78, i32 0, i32 23
  %79 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool53 = icmp ne %struct._PerlIO** %79, null
  br i1 %tobool53, label %if.else.93, label %if.then.54

if.then.54:                                       ; preds = %if.then.52
  %80 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %80, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %81 = load i8*, i8** %aptr, align 8
  %82 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf55 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %82, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf55, i32 0, i32 3
  %83 = load i8*, i8** %aend, align 8
  %cmp56 = icmp ult i8* %81, %83
  br i1 %cmp56, label %if.then.58, label %if.else

if.then.58:                                       ; preds = %if.then.54
  %84 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf59 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %84, i32 0, i32 21
  %aptr60 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf59, i32 0, i32 2
  %85 = load i8*, i8** %aptr60, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %85, i32 1
  store i8* %incdec.ptr, i8** %aptr60, align 8
  store i8 19, i8* %85, align 1
  br label %if.end.92

if.else:                                          ; preds = %if.then.54
  %86 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf61 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %86, i32 0, i32 21
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf61, i32 0, i32 1
  %87 = load i64, i64* %asiz, align 8
  %add62 = add i64 1, %87
  %add63 = add i64 %add62, 8191
  %and64 = and i64 %add63, -8192
  %conv65 = trunc i64 %and64 to i32
  store i32 %conv65, i32* %nsz, align 4
  %88 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf66 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %88, i32 0, i32 21
  %aptr67 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf66, i32 0, i32 2
  %89 = load i8*, i8** %aptr67, align 8
  %90 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf68 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %90, i32 0, i32 21
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf68, i32 0, i32 0
  %91 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %89 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %91 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv69 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv69, i32* %offset, align 4
  %92 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf70 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %92, i32 0, i32 21
  %arena71 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf70, i32 0, i32 0
  %93 = load i8*, i8** %arena71, align 8
  %94 = load i32, i32* %nsz, align 4
  %conv72 = sext i32 %94 to i64
  %mul = mul i64 %conv72, 1
  %call73 = call i8* @Perl_safesysrealloc(i8* %93, i64 %mul)
  %95 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf74 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %95, i32 0, i32 21
  %arena75 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf74, i32 0, i32 0
  store i8* %call73, i8** %arena75, align 8
  %96 = load i32, i32* %nsz, align 4
  %conv76 = sext i32 %96 to i64
  %97 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf77 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %97, i32 0, i32 21
  %asiz78 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf77, i32 0, i32 1
  store i64 %conv76, i64* %asiz78, align 8
  %98 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf79 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %98, i32 0, i32 21
  %arena80 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf79, i32 0, i32 0
  %99 = load i8*, i8** %arena80, align 8
  %100 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %100 to i64
  %add.ptr = getelementptr inbounds i8, i8* %99, i64 %idx.ext
  %101 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf81 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %101, i32 0, i32 21
  %aptr82 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf81, i32 0, i32 2
  store i8* %add.ptr, i8** %aptr82, align 8
  %102 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf83 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %102, i32 0, i32 21
  %arena84 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf83, i32 0, i32 0
  %103 = load i8*, i8** %arena84, align 8
  %104 = load i32, i32* %nsz, align 4
  %idx.ext85 = sext i32 %104 to i64
  %add.ptr86 = getelementptr inbounds i8, i8* %103, i64 %idx.ext85
  %105 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf87 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %105, i32 0, i32 21
  %aend88 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf87, i32 0, i32 3
  store i8* %add.ptr86, i8** %aend88, align 8
  store i8* %add.ptr86, i8** %tmp
  %106 = load i8*, i8** %tmp
  %107 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf89 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %107, i32 0, i32 21
  %aptr90 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf89, i32 0, i32 2
  %108 = load i8*, i8** %aptr90, align 8
  %incdec.ptr91 = getelementptr inbounds i8, i8* %108, i32 1
  store i8* %incdec.ptr91, i8** %aptr90, align 8
  store i8 19, i8* %108, align 1
  br label %if.end.92

if.end.92:                                        ; preds = %if.else, %if.then.58
  br label %if.end.100

if.else.93:                                       ; preds = %if.then.52
  %109 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio94 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %109, i32 0, i32 23
  %110 = load %struct._PerlIO**, %struct._PerlIO*** %fio94, align 8
  %call95 = call i32 @PerlIO_putc(%struct._PerlIO** %110, i32 19)
  %cmp96 = icmp eq i32 %call95, -1
  br i1 %cmp96, label %if.then.98, label %if.end.99

if.then.98:                                       ; preds = %if.else.93
  store i32 -1, i32* %retval
  br label %return

if.end.99:                                        ; preds = %if.else.93
  br label %if.end.100

if.end.100:                                       ; preds = %if.end.99, %if.end.92
  %111 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio101 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %111, i32 0, i32 23
  %112 = load %struct._PerlIO**, %struct._PerlIO*** %fio101, align 8
  %tobool102 = icmp ne %struct._PerlIO** %112, null
  br i1 %tobool102, label %if.else.160, label %if.then.103

if.then.103:                                      ; preds = %if.end.100
  %113 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf104 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %113, i32 0, i32 21
  %aptr105 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf104, i32 0, i32 2
  %114 = load i8*, i8** %aptr105, align 8
  %115 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf106 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %115, i32 0, i32 21
  %aend107 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf106, i32 0, i32 3
  %116 = load i8*, i8** %aend107, align 8
  %cmp108 = icmp ult i8* %114, %116
  br i1 %cmp108, label %if.then.110, label %if.else.114

if.then.110:                                      ; preds = %if.then.103
  %117 = load i8, i8* %flags, align 1
  %118 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf111 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %118, i32 0, i32 21
  %aptr112 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf111, i32 0, i32 2
  %119 = load i8*, i8** %aptr112, align 8
  %incdec.ptr113 = getelementptr inbounds i8, i8* %119, i32 1
  store i8* %incdec.ptr113, i8** %aptr112, align 8
  store i8 %117, i8* %119, align 1
  br label %if.end.159

if.else.114:                                      ; preds = %if.then.103
  %120 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf117 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %120, i32 0, i32 21
  %asiz118 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf117, i32 0, i32 1
  %121 = load i64, i64* %asiz118, align 8
  %add119 = add i64 1, %121
  %add120 = add i64 %add119, 8191
  %and121 = and i64 %add120, -8192
  %conv122 = trunc i64 %and121 to i32
  store i32 %conv122, i32* %nsz116, align 4
  %122 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf125 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %122, i32 0, i32 21
  %aptr126 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf125, i32 0, i32 2
  %123 = load i8*, i8** %aptr126, align 8
  %124 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf127 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %124, i32 0, i32 21
  %arena128 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf127, i32 0, i32 0
  %125 = load i8*, i8** %arena128, align 8
  %sub.ptr.lhs.cast129 = ptrtoint i8* %123 to i64
  %sub.ptr.rhs.cast130 = ptrtoint i8* %125 to i64
  %sub.ptr.sub131 = sub i64 %sub.ptr.lhs.cast129, %sub.ptr.rhs.cast130
  %conv132 = trunc i64 %sub.ptr.sub131 to i32
  store i32 %conv132, i32* %offset124, align 4
  %126 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf133 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %126, i32 0, i32 21
  %arena134 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf133, i32 0, i32 0
  %127 = load i8*, i8** %arena134, align 8
  %128 = load i32, i32* %nsz116, align 4
  %conv135 = sext i32 %128 to i64
  %mul136 = mul i64 %conv135, 1
  %call137 = call i8* @Perl_safesysrealloc(i8* %127, i64 %mul136)
  %129 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf138 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %129, i32 0, i32 21
  %arena139 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf138, i32 0, i32 0
  store i8* %call137, i8** %arena139, align 8
  %130 = load i32, i32* %nsz116, align 4
  %conv140 = sext i32 %130 to i64
  %131 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf141 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %131, i32 0, i32 21
  %asiz142 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf141, i32 0, i32 1
  store i64 %conv140, i64* %asiz142, align 8
  %132 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf143 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %132, i32 0, i32 21
  %arena144 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf143, i32 0, i32 0
  %133 = load i8*, i8** %arena144, align 8
  %134 = load i32, i32* %offset124, align 4
  %idx.ext145 = sext i32 %134 to i64
  %add.ptr146 = getelementptr inbounds i8, i8* %133, i64 %idx.ext145
  %135 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf147 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %135, i32 0, i32 21
  %aptr148 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf147, i32 0, i32 2
  store i8* %add.ptr146, i8** %aptr148, align 8
  %136 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf150 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %136, i32 0, i32 21
  %arena151 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf150, i32 0, i32 0
  %137 = load i8*, i8** %arena151, align 8
  %138 = load i32, i32* %nsz116, align 4
  %idx.ext152 = sext i32 %138 to i64
  %add.ptr153 = getelementptr inbounds i8, i8* %137, i64 %idx.ext152
  %139 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf154 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %139, i32 0, i32 21
  %aend155 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf154, i32 0, i32 3
  store i8* %add.ptr153, i8** %aend155, align 8
  store i8* %add.ptr153, i8** %tmp149
  %140 = load i8*, i8** %tmp149
  %141 = load i8, i8* %flags, align 1
  %142 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf156 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %142, i32 0, i32 21
  %aptr157 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf156, i32 0, i32 2
  %143 = load i8*, i8** %aptr157, align 8
  %incdec.ptr158 = getelementptr inbounds i8, i8* %143, i32 1
  store i8* %incdec.ptr158, i8** %aptr157, align 8
  store i8 %141, i8* %143, align 1
  br label %if.end.159

if.end.159:                                       ; preds = %if.else.114, %if.then.110
  br label %if.end.168

if.else.160:                                      ; preds = %if.end.100
  %144 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio161 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %144, i32 0, i32 23
  %145 = load %struct._PerlIO**, %struct._PerlIO*** %fio161, align 8
  %146 = load i8, i8* %flags, align 1
  %conv162 = zext i8 %146 to i32
  %call163 = call i32 @PerlIO_putc(%struct._PerlIO** %145, i32 %conv162)
  %cmp164 = icmp eq i32 %call163, -1
  br i1 %cmp164, label %if.then.166, label %if.end.167

if.then.166:                                      ; preds = %if.else.160
  store i32 -1, i32* %retval
  br label %return

if.end.167:                                       ; preds = %if.else.160
  br label %if.end.168

if.end.168:                                       ; preds = %if.end.167, %if.end.159
  %147 = load i32, i32* %obj_type, align 4
  %cmp169 = icmp eq i32 %147, 3
  br i1 %cmp169, label %if.then.171, label %if.end.240

if.then.171:                                      ; preds = %if.end.168
  %148 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio172 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %148, i32 0, i32 23
  %149 = load %struct._PerlIO**, %struct._PerlIO*** %fio172, align 8
  %tobool173 = icmp ne %struct._PerlIO** %149, null
  br i1 %tobool173, label %if.else.231, label %if.then.174

if.then.174:                                      ; preds = %if.then.171
  %150 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf175 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %150, i32 0, i32 21
  %aptr176 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf175, i32 0, i32 2
  %151 = load i8*, i8** %aptr176, align 8
  %152 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf177 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %152, i32 0, i32 21
  %aend178 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf177, i32 0, i32 3
  %153 = load i8*, i8** %aend178, align 8
  %cmp179 = icmp ult i8* %151, %153
  br i1 %cmp179, label %if.then.181, label %if.else.185

if.then.181:                                      ; preds = %if.then.174
  %154 = load i8, i8* %eflags, align 1
  %155 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf182 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %155, i32 0, i32 21
  %aptr183 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf182, i32 0, i32 2
  %156 = load i8*, i8** %aptr183, align 8
  %incdec.ptr184 = getelementptr inbounds i8, i8* %156, i32 1
  store i8* %incdec.ptr184, i8** %aptr183, align 8
  store i8 %154, i8* %156, align 1
  br label %if.end.230

if.else.185:                                      ; preds = %if.then.174
  %157 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf188 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %157, i32 0, i32 21
  %asiz189 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf188, i32 0, i32 1
  %158 = load i64, i64* %asiz189, align 8
  %add190 = add i64 1, %158
  %add191 = add i64 %add190, 8191
  %and192 = and i64 %add191, -8192
  %conv193 = trunc i64 %and192 to i32
  store i32 %conv193, i32* %nsz187, align 4
  %159 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf196 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %159, i32 0, i32 21
  %aptr197 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf196, i32 0, i32 2
  %160 = load i8*, i8** %aptr197, align 8
  %161 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf198 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %161, i32 0, i32 21
  %arena199 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf198, i32 0, i32 0
  %162 = load i8*, i8** %arena199, align 8
  %sub.ptr.lhs.cast200 = ptrtoint i8* %160 to i64
  %sub.ptr.rhs.cast201 = ptrtoint i8* %162 to i64
  %sub.ptr.sub202 = sub i64 %sub.ptr.lhs.cast200, %sub.ptr.rhs.cast201
  %conv203 = trunc i64 %sub.ptr.sub202 to i32
  store i32 %conv203, i32* %offset195, align 4
  %163 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf204 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %163, i32 0, i32 21
  %arena205 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf204, i32 0, i32 0
  %164 = load i8*, i8** %arena205, align 8
  %165 = load i32, i32* %nsz187, align 4
  %conv206 = sext i32 %165 to i64
  %mul207 = mul i64 %conv206, 1
  %call208 = call i8* @Perl_safesysrealloc(i8* %164, i64 %mul207)
  %166 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf209 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %166, i32 0, i32 21
  %arena210 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf209, i32 0, i32 0
  store i8* %call208, i8** %arena210, align 8
  %167 = load i32, i32* %nsz187, align 4
  %conv211 = sext i32 %167 to i64
  %168 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf212 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %168, i32 0, i32 21
  %asiz213 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf212, i32 0, i32 1
  store i64 %conv211, i64* %asiz213, align 8
  %169 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf214 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %169, i32 0, i32 21
  %arena215 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf214, i32 0, i32 0
  %170 = load i8*, i8** %arena215, align 8
  %171 = load i32, i32* %offset195, align 4
  %idx.ext216 = sext i32 %171 to i64
  %add.ptr217 = getelementptr inbounds i8, i8* %170, i64 %idx.ext216
  %172 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf218 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %172, i32 0, i32 21
  %aptr219 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf218, i32 0, i32 2
  store i8* %add.ptr217, i8** %aptr219, align 8
  %173 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf221 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %173, i32 0, i32 21
  %arena222 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf221, i32 0, i32 0
  %174 = load i8*, i8** %arena222, align 8
  %175 = load i32, i32* %nsz187, align 4
  %idx.ext223 = sext i32 %175 to i64
  %add.ptr224 = getelementptr inbounds i8, i8* %174, i64 %idx.ext223
  %176 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf225 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %176, i32 0, i32 21
  %aend226 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf225, i32 0, i32 3
  store i8* %add.ptr224, i8** %aend226, align 8
  store i8* %add.ptr224, i8** %tmp220
  %177 = load i8*, i8** %tmp220
  %178 = load i8, i8* %eflags, align 1
  %179 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf227 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %179, i32 0, i32 21
  %aptr228 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf227, i32 0, i32 2
  %180 = load i8*, i8** %aptr228, align 8
  %incdec.ptr229 = getelementptr inbounds i8, i8* %180, i32 1
  store i8* %incdec.ptr229, i8** %aptr228, align 8
  store i8 %178, i8* %180, align 1
  br label %if.end.230

if.end.230:                                       ; preds = %if.else.185, %if.then.181
  br label %if.end.239

if.else.231:                                      ; preds = %if.then.171
  %181 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio232 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %181, i32 0, i32 23
  %182 = load %struct._PerlIO**, %struct._PerlIO*** %fio232, align 8
  %183 = load i8, i8* %eflags, align 1
  %conv233 = zext i8 %183 to i32
  %call234 = call i32 @PerlIO_putc(%struct._PerlIO** %182, i32 %conv233)
  %cmp235 = icmp eq i32 %call234, -1
  br i1 %cmp235, label %if.then.237, label %if.end.238

if.then.237:                                      ; preds = %if.else.231
  store i32 -1, i32* %retval
  br label %return

if.end.238:                                       ; preds = %if.else.231
  br label %if.end.239

if.end.239:                                       ; preds = %if.end.238, %if.end.230
  br label %if.end.240

if.end.240:                                       ; preds = %if.end.239, %if.end.168
  br label %if.end.310

if.else.241:                                      ; preds = %if.end.50
  %184 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio242 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %184, i32 0, i32 23
  %185 = load %struct._PerlIO**, %struct._PerlIO*** %fio242, align 8
  %tobool243 = icmp ne %struct._PerlIO** %185, null
  br i1 %tobool243, label %if.else.301, label %if.then.244

if.then.244:                                      ; preds = %if.else.241
  %186 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf245 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %186, i32 0, i32 21
  %aptr246 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf245, i32 0, i32 2
  %187 = load i8*, i8** %aptr246, align 8
  %188 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf247 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %188, i32 0, i32 21
  %aend248 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf247, i32 0, i32 3
  %189 = load i8*, i8** %aend248, align 8
  %cmp249 = icmp ult i8* %187, %189
  br i1 %cmp249, label %if.then.251, label %if.else.255

if.then.251:                                      ; preds = %if.then.244
  %190 = load i8, i8* %flags, align 1
  %191 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf252 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %191, i32 0, i32 21
  %aptr253 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf252, i32 0, i32 2
  %192 = load i8*, i8** %aptr253, align 8
  %incdec.ptr254 = getelementptr inbounds i8, i8* %192, i32 1
  store i8* %incdec.ptr254, i8** %aptr253, align 8
  store i8 %190, i8* %192, align 1
  br label %if.end.300

if.else.255:                                      ; preds = %if.then.244
  %193 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf258 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %193, i32 0, i32 21
  %asiz259 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf258, i32 0, i32 1
  %194 = load i64, i64* %asiz259, align 8
  %add260 = add i64 1, %194
  %add261 = add i64 %add260, 8191
  %and262 = and i64 %add261, -8192
  %conv263 = trunc i64 %and262 to i32
  store i32 %conv263, i32* %nsz257, align 4
  %195 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf266 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %195, i32 0, i32 21
  %aptr267 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf266, i32 0, i32 2
  %196 = load i8*, i8** %aptr267, align 8
  %197 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf268 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %197, i32 0, i32 21
  %arena269 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf268, i32 0, i32 0
  %198 = load i8*, i8** %arena269, align 8
  %sub.ptr.lhs.cast270 = ptrtoint i8* %196 to i64
  %sub.ptr.rhs.cast271 = ptrtoint i8* %198 to i64
  %sub.ptr.sub272 = sub i64 %sub.ptr.lhs.cast270, %sub.ptr.rhs.cast271
  %conv273 = trunc i64 %sub.ptr.sub272 to i32
  store i32 %conv273, i32* %offset265, align 4
  %199 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf274 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %199, i32 0, i32 21
  %arena275 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf274, i32 0, i32 0
  %200 = load i8*, i8** %arena275, align 8
  %201 = load i32, i32* %nsz257, align 4
  %conv276 = sext i32 %201 to i64
  %mul277 = mul i64 %conv276, 1
  %call278 = call i8* @Perl_safesysrealloc(i8* %200, i64 %mul277)
  %202 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf279 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %202, i32 0, i32 21
  %arena280 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf279, i32 0, i32 0
  store i8* %call278, i8** %arena280, align 8
  %203 = load i32, i32* %nsz257, align 4
  %conv281 = sext i32 %203 to i64
  %204 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf282 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %204, i32 0, i32 21
  %asiz283 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf282, i32 0, i32 1
  store i64 %conv281, i64* %asiz283, align 8
  %205 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf284 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %205, i32 0, i32 21
  %arena285 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf284, i32 0, i32 0
  %206 = load i8*, i8** %arena285, align 8
  %207 = load i32, i32* %offset265, align 4
  %idx.ext286 = sext i32 %207 to i64
  %add.ptr287 = getelementptr inbounds i8, i8* %206, i64 %idx.ext286
  %208 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf288 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %208, i32 0, i32 21
  %aptr289 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf288, i32 0, i32 2
  store i8* %add.ptr287, i8** %aptr289, align 8
  %209 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf291 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %209, i32 0, i32 21
  %arena292 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf291, i32 0, i32 0
  %210 = load i8*, i8** %arena292, align 8
  %211 = load i32, i32* %nsz257, align 4
  %idx.ext293 = sext i32 %211 to i64
  %add.ptr294 = getelementptr inbounds i8, i8* %210, i64 %idx.ext293
  %212 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf295 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %212, i32 0, i32 21
  %aend296 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf295, i32 0, i32 3
  store i8* %add.ptr294, i8** %aend296, align 8
  store i8* %add.ptr294, i8** %tmp290
  %213 = load i8*, i8** %tmp290
  %214 = load i8, i8* %flags, align 1
  %215 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf297 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %215, i32 0, i32 21
  %aptr298 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf297, i32 0, i32 2
  %216 = load i8*, i8** %aptr298, align 8
  %incdec.ptr299 = getelementptr inbounds i8, i8* %216, i32 1
  store i8* %incdec.ptr299, i8** %aptr298, align 8
  store i8 %214, i8* %216, align 1
  br label %if.end.300

if.end.300:                                       ; preds = %if.else.255, %if.then.251
  br label %if.end.309

if.else.301:                                      ; preds = %if.else.241
  %217 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio302 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %217, i32 0, i32 23
  %218 = load %struct._PerlIO**, %struct._PerlIO*** %fio302, align 8
  %219 = load i8, i8* %flags, align 1
  %conv303 = zext i8 %219 to i32
  %call304 = call i32 @PerlIO_putc(%struct._PerlIO** %218, i32 %conv303)
  %cmp305 = icmp eq i32 %call304, -1
  br i1 %cmp305, label %if.then.307, label %if.end.308

if.then.307:                                      ; preds = %if.else.301
  store i32 -1, i32* %retval
  br label %return

if.end.308:                                       ; preds = %if.else.301
  br label %if.end.309

if.end.309:                                       ; preds = %if.end.308, %if.end.300
  br label %if.end.310

if.end.310:                                       ; preds = %if.end.309, %if.end.240
  %220 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %221 = load %struct.sv*, %struct.sv** %xsv, align 8
  %call311 = call i32 @store(%struct.stcxt* %220, %struct.sv* %221)
  store i32 %call311, i32* %ret, align 4
  %tobool312 = icmp ne i32 %call311, 0
  br i1 %tobool312, label %if.then.313, label %if.end.314

if.then.313:                                      ; preds = %if.end.310
  %222 = load i32, i32* %ret, align 4
  store i32 %222, i32* %retval
  br label %return

if.end.314:                                       ; preds = %if.end.310
  %223 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen315 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %223, i32 0, i32 2
  %224 = load %struct.hv*, %struct.hv** %hseen315, align 8
  %225 = bitcast %struct.sv** %xsv to i8*
  %call316 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %224, i8* %225, i32 8, i32 0)
  store %struct.sv** %call316, %struct.sv*** %svh, align 8
  %226 = load %struct.sv**, %struct.sv*** %svh, align 8
  %tobool317 = icmp ne %struct.sv** %226, null
  br i1 %tobool317, label %if.end.320, label %if.then.318

if.then.318:                                      ; preds = %if.end.314
  %227 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty319 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %227, i32 0, i32 18
  store i32 1, i32* %s_dirty319, align 4
  %228 = load i32, i32* %i, align 4
  %229 = load i8*, i8** %class, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.37, i32 0, i32 0), i32 %228, i8* %229)
  br label %if.end.320

if.end.320:                                       ; preds = %if.then.318, %if.end.314
  %230 = load %struct.av*, %struct.av** %av_hook, align 8
  %231 = load %struct.av*, %struct.av** %av_hook, align 8
  %sv_any321 = getelementptr inbounds %struct.av, %struct.av* %231, i32 0, i32 0
  %232 = load %struct.xpvav*, %struct.xpvav** %sv_any321, align 8
  %xav_fill322 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %232, i32 0, i32 1
  %233 = load i64, i64* %xav_fill322, align 8
  %add323 = add nsw i64 %233, 1
  %conv324 = trunc i64 %add323 to i32
  %234 = load %struct.sv*, %struct.sv** %xsv, align 8
  store %struct.sv* %234, %struct.sv** @PL_Sv, align 8
  %235 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool325 = icmp ne %struct.sv* %235, null
  br i1 %tobool325, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end.320
  %236 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %236, i32 0, i32 1
  %237 = load i32, i32* %sv_refcnt, align 4
  %inc326 = add i32 %237, 1
  store i32 %inc326, i32* %sv_refcnt, align 4
  %tobool327 = icmp ne i32 %inc326, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.320
  %238 = phi i1 [ false, %if.end.320 ], [ %tobool327, %land.rhs ]
  %land.ext = zext i1 %238 to i32
  %239 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call328 = call %struct.sv** @Perl_av_store(%struct.av* %230, i32 %conv324, %struct.sv* %239)
  br label %sv_seen

sv_seen:                                          ; preds = %land.end, %if.then.49
  %240 = load %struct.sv*, %struct.sv** %rsv, align 8
  call void @Perl_sv_free(%struct.sv* %240)
  %241 = load %struct.sv**, %struct.sv*** %svh, align 8
  %242 = load %struct.sv*, %struct.sv** %241, align 8
  %243 = load i32, i32* %i, align 4
  %idxprom329 = sext i32 %243 to i64
  %244 = load %struct.sv**, %struct.sv*** %ary, align 8
  %arrayidx330 = getelementptr inbounds %struct.sv*, %struct.sv** %244, i64 %idxprom329
  store %struct.sv* %242, %struct.sv** %arrayidx330, align 8
  br label %for.inc

for.inc:                                          ; preds = %sv_seen
  %245 = load i32, i32* %i, align 4
  %inc331 = add nsw i32 %245, 1
  store i32 %inc331, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %246 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %247 = load i8*, i8** %class, align 8
  %248 = load i32, i32* %len, align 4
  %call332 = call i32 @known_class(%struct.stcxt* %246, i8* %247, i32 %248, i32* %classnum)
  %tobool333 = icmp ne i32 %call332, 0
  br i1 %tobool333, label %if.else.335, label %if.then.334

if.then.334:                                      ; preds = %for.end
  store i32 -1, i32* %classnum, align 4
  br label %if.end.336

if.else.335:                                      ; preds = %for.end
  br label %if.end.336

if.end.336:                                       ; preds = %if.else.335, %if.then.334
  %249 = load i32, i32* %obj_type, align 4
  %conv337 = trunc i32 %249 to i8
  store i8 %conv337, i8* %flags, align 1
  %250 = load i32, i32* %classnum, align 4
  %cmp338 = icmp eq i32 %250, -1
  br i1 %cmp338, label %cond.true.340, label %cond.false.341

cond.true.340:                                    ; preds = %if.end.336
  %251 = load i32, i32* %len, align 4
  br label %cond.end.342

cond.false.341:                                   ; preds = %if.end.336
  %252 = load i32, i32* %classnum, align 4
  br label %cond.end.342

cond.end.342:                                     ; preds = %cond.false.341, %cond.true.340
  %cond343 = phi i32 [ %251, %cond.true.340 ], [ %252, %cond.false.341 ]
  %cmp344 = icmp sgt i32 %cond343, 255
  br i1 %cmp344, label %if.then.346, label %if.end.350

if.then.346:                                      ; preds = %cond.end.342
  %253 = load i8, i8* %flags, align 1
  %conv347 = zext i8 %253 to i32
  %or348 = or i32 %conv347, 4
  %conv349 = trunc i32 %or348 to i8
  store i8 %conv349, i8* %flags, align 1
  br label %if.end.350

if.end.350:                                       ; preds = %if.then.346, %cond.end.342
  %254 = load i32, i32* %classnum, align 4
  %cmp351 = icmp ne i32 %254, -1
  br i1 %cmp351, label %if.then.353, label %if.end.357

if.then.353:                                      ; preds = %if.end.350
  %255 = load i8, i8* %flags, align 1
  %conv354 = zext i8 %255 to i32
  %or355 = or i32 %conv354, 32
  %conv356 = trunc i32 %or355 to i8
  store i8 %conv356, i8* %flags, align 1
  br label %if.end.357

if.end.357:                                       ; preds = %if.then.353, %if.end.350
  %256 = load i64, i64* %len2, align 8
  %cmp358 = icmp ugt i64 %256, 255
  br i1 %cmp358, label %if.then.360, label %if.end.364

if.then.360:                                      ; preds = %if.end.357
  %257 = load i8, i8* %flags, align 1
  %conv361 = zext i8 %257 to i32
  %or362 = or i32 %conv361, 8
  %conv363 = trunc i32 %or362 to i8
  store i8 %conv363, i8* %flags, align 1
  br label %if.end.364

if.end.364:                                       ; preds = %if.then.360, %if.end.357
  %258 = load i32, i32* %count, align 4
  %cmp365 = icmp sgt i32 %258, 1
  br i1 %cmp365, label %if.then.367, label %if.end.371

if.then.367:                                      ; preds = %if.end.364
  %259 = load i8, i8* %flags, align 1
  %conv368 = zext i8 %259 to i32
  %or369 = or i32 %conv368, 128
  %conv370 = trunc i32 %or369 to i8
  store i8 %conv370, i8* %flags, align 1
  br label %if.end.371

if.end.371:                                       ; preds = %if.then.367, %if.end.364
  %260 = load i32, i32* %count, align 4
  %cmp372 = icmp sgt i32 %260, 256
  br i1 %cmp372, label %if.then.374, label %if.end.378

if.then.374:                                      ; preds = %if.end.371
  %261 = load i8, i8* %flags, align 1
  %conv375 = zext i8 %261 to i32
  %or376 = or i32 %conv375, 16
  %conv377 = trunc i32 %or376 to i8
  store i8 %conv377, i8* %flags, align 1
  br label %if.end.378

if.end.378:                                       ; preds = %if.then.374, %if.end.371
  %262 = load i32, i32* %recursed, align 4
  %tobool379 = icmp ne i32 %262, 0
  br i1 %tobool379, label %if.else.588, label %if.then.380

if.then.380:                                      ; preds = %if.end.378
  %263 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio381 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %263, i32 0, i32 23
  %264 = load %struct._PerlIO**, %struct._PerlIO*** %fio381, align 8
  %tobool382 = icmp ne %struct._PerlIO** %264, null
  br i1 %tobool382, label %if.else.440, label %if.then.383

if.then.383:                                      ; preds = %if.then.380
  %265 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf384 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %265, i32 0, i32 21
  %aptr385 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf384, i32 0, i32 2
  %266 = load i8*, i8** %aptr385, align 8
  %267 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf386 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %267, i32 0, i32 21
  %aend387 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf386, i32 0, i32 3
  %268 = load i8*, i8** %aend387, align 8
  %cmp388 = icmp ult i8* %266, %268
  br i1 %cmp388, label %if.then.390, label %if.else.394

if.then.390:                                      ; preds = %if.then.383
  %269 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf391 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %269, i32 0, i32 21
  %aptr392 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf391, i32 0, i32 2
  %270 = load i8*, i8** %aptr392, align 8
  %incdec.ptr393 = getelementptr inbounds i8, i8* %270, i32 1
  store i8* %incdec.ptr393, i8** %aptr392, align 8
  store i8 19, i8* %270, align 1
  br label %if.end.439

if.else.394:                                      ; preds = %if.then.383
  %271 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf397 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %271, i32 0, i32 21
  %asiz398 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf397, i32 0, i32 1
  %272 = load i64, i64* %asiz398, align 8
  %add399 = add i64 1, %272
  %add400 = add i64 %add399, 8191
  %and401 = and i64 %add400, -8192
  %conv402 = trunc i64 %and401 to i32
  store i32 %conv402, i32* %nsz396, align 4
  %273 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf405 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %273, i32 0, i32 21
  %aptr406 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf405, i32 0, i32 2
  %274 = load i8*, i8** %aptr406, align 8
  %275 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf407 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %275, i32 0, i32 21
  %arena408 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf407, i32 0, i32 0
  %276 = load i8*, i8** %arena408, align 8
  %sub.ptr.lhs.cast409 = ptrtoint i8* %274 to i64
  %sub.ptr.rhs.cast410 = ptrtoint i8* %276 to i64
  %sub.ptr.sub411 = sub i64 %sub.ptr.lhs.cast409, %sub.ptr.rhs.cast410
  %conv412 = trunc i64 %sub.ptr.sub411 to i32
  store i32 %conv412, i32* %offset404, align 4
  %277 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf413 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %277, i32 0, i32 21
  %arena414 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf413, i32 0, i32 0
  %278 = load i8*, i8** %arena414, align 8
  %279 = load i32, i32* %nsz396, align 4
  %conv415 = sext i32 %279 to i64
  %mul416 = mul i64 %conv415, 1
  %call417 = call i8* @Perl_safesysrealloc(i8* %278, i64 %mul416)
  %280 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf418 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %280, i32 0, i32 21
  %arena419 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf418, i32 0, i32 0
  store i8* %call417, i8** %arena419, align 8
  %281 = load i32, i32* %nsz396, align 4
  %conv420 = sext i32 %281 to i64
  %282 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf421 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %282, i32 0, i32 21
  %asiz422 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf421, i32 0, i32 1
  store i64 %conv420, i64* %asiz422, align 8
  %283 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf423 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %283, i32 0, i32 21
  %arena424 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf423, i32 0, i32 0
  %284 = load i8*, i8** %arena424, align 8
  %285 = load i32, i32* %offset404, align 4
  %idx.ext425 = sext i32 %285 to i64
  %add.ptr426 = getelementptr inbounds i8, i8* %284, i64 %idx.ext425
  %286 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf427 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %286, i32 0, i32 21
  %aptr428 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf427, i32 0, i32 2
  store i8* %add.ptr426, i8** %aptr428, align 8
  %287 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf430 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %287, i32 0, i32 21
  %arena431 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf430, i32 0, i32 0
  %288 = load i8*, i8** %arena431, align 8
  %289 = load i32, i32* %nsz396, align 4
  %idx.ext432 = sext i32 %289 to i64
  %add.ptr433 = getelementptr inbounds i8, i8* %288, i64 %idx.ext432
  %290 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf434 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %290, i32 0, i32 21
  %aend435 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf434, i32 0, i32 3
  store i8* %add.ptr433, i8** %aend435, align 8
  store i8* %add.ptr433, i8** %tmp429
  %291 = load i8*, i8** %tmp429
  %292 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf436 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %292, i32 0, i32 21
  %aptr437 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf436, i32 0, i32 2
  %293 = load i8*, i8** %aptr437, align 8
  %incdec.ptr438 = getelementptr inbounds i8, i8* %293, i32 1
  store i8* %incdec.ptr438, i8** %aptr437, align 8
  store i8 19, i8* %293, align 1
  br label %if.end.439

if.end.439:                                       ; preds = %if.else.394, %if.then.390
  br label %if.end.447

if.else.440:                                      ; preds = %if.then.380
  %294 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio441 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %294, i32 0, i32 23
  %295 = load %struct._PerlIO**, %struct._PerlIO*** %fio441, align 8
  %call442 = call i32 @PerlIO_putc(%struct._PerlIO** %295, i32 19)
  %cmp443 = icmp eq i32 %call442, -1
  br i1 %cmp443, label %if.then.445, label %if.end.446

if.then.445:                                      ; preds = %if.else.440
  store i32 -1, i32* %retval
  br label %return

if.end.446:                                       ; preds = %if.else.440
  br label %if.end.447

if.end.447:                                       ; preds = %if.end.446, %if.end.439
  %296 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio448 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %296, i32 0, i32 23
  %297 = load %struct._PerlIO**, %struct._PerlIO*** %fio448, align 8
  %tobool449 = icmp ne %struct._PerlIO** %297, null
  br i1 %tobool449, label %if.else.507, label %if.then.450

if.then.450:                                      ; preds = %if.end.447
  %298 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf451 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %298, i32 0, i32 21
  %aptr452 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf451, i32 0, i32 2
  %299 = load i8*, i8** %aptr452, align 8
  %300 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf453 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %300, i32 0, i32 21
  %aend454 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf453, i32 0, i32 3
  %301 = load i8*, i8** %aend454, align 8
  %cmp455 = icmp ult i8* %299, %301
  br i1 %cmp455, label %if.then.457, label %if.else.461

if.then.457:                                      ; preds = %if.then.450
  %302 = load i8, i8* %flags, align 1
  %303 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf458 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %303, i32 0, i32 21
  %aptr459 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf458, i32 0, i32 2
  %304 = load i8*, i8** %aptr459, align 8
  %incdec.ptr460 = getelementptr inbounds i8, i8* %304, i32 1
  store i8* %incdec.ptr460, i8** %aptr459, align 8
  store i8 %302, i8* %304, align 1
  br label %if.end.506

if.else.461:                                      ; preds = %if.then.450
  %305 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf464 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %305, i32 0, i32 21
  %asiz465 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf464, i32 0, i32 1
  %306 = load i64, i64* %asiz465, align 8
  %add466 = add i64 1, %306
  %add467 = add i64 %add466, 8191
  %and468 = and i64 %add467, -8192
  %conv469 = trunc i64 %and468 to i32
  store i32 %conv469, i32* %nsz463, align 4
  %307 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf472 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %307, i32 0, i32 21
  %aptr473 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf472, i32 0, i32 2
  %308 = load i8*, i8** %aptr473, align 8
  %309 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf474 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %309, i32 0, i32 21
  %arena475 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf474, i32 0, i32 0
  %310 = load i8*, i8** %arena475, align 8
  %sub.ptr.lhs.cast476 = ptrtoint i8* %308 to i64
  %sub.ptr.rhs.cast477 = ptrtoint i8* %310 to i64
  %sub.ptr.sub478 = sub i64 %sub.ptr.lhs.cast476, %sub.ptr.rhs.cast477
  %conv479 = trunc i64 %sub.ptr.sub478 to i32
  store i32 %conv479, i32* %offset471, align 4
  %311 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf480 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %311, i32 0, i32 21
  %arena481 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf480, i32 0, i32 0
  %312 = load i8*, i8** %arena481, align 8
  %313 = load i32, i32* %nsz463, align 4
  %conv482 = sext i32 %313 to i64
  %mul483 = mul i64 %conv482, 1
  %call484 = call i8* @Perl_safesysrealloc(i8* %312, i64 %mul483)
  %314 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf485 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %314, i32 0, i32 21
  %arena486 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf485, i32 0, i32 0
  store i8* %call484, i8** %arena486, align 8
  %315 = load i32, i32* %nsz463, align 4
  %conv487 = sext i32 %315 to i64
  %316 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf488 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %316, i32 0, i32 21
  %asiz489 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf488, i32 0, i32 1
  store i64 %conv487, i64* %asiz489, align 8
  %317 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf490 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %317, i32 0, i32 21
  %arena491 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf490, i32 0, i32 0
  %318 = load i8*, i8** %arena491, align 8
  %319 = load i32, i32* %offset471, align 4
  %idx.ext492 = sext i32 %319 to i64
  %add.ptr493 = getelementptr inbounds i8, i8* %318, i64 %idx.ext492
  %320 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf494 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %320, i32 0, i32 21
  %aptr495 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf494, i32 0, i32 2
  store i8* %add.ptr493, i8** %aptr495, align 8
  %321 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf497 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %321, i32 0, i32 21
  %arena498 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf497, i32 0, i32 0
  %322 = load i8*, i8** %arena498, align 8
  %323 = load i32, i32* %nsz463, align 4
  %idx.ext499 = sext i32 %323 to i64
  %add.ptr500 = getelementptr inbounds i8, i8* %322, i64 %idx.ext499
  %324 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf501 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %324, i32 0, i32 21
  %aend502 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf501, i32 0, i32 3
  store i8* %add.ptr500, i8** %aend502, align 8
  store i8* %add.ptr500, i8** %tmp496
  %325 = load i8*, i8** %tmp496
  %326 = load i8, i8* %flags, align 1
  %327 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf503 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %327, i32 0, i32 21
  %aptr504 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf503, i32 0, i32 2
  %328 = load i8*, i8** %aptr504, align 8
  %incdec.ptr505 = getelementptr inbounds i8, i8* %328, i32 1
  store i8* %incdec.ptr505, i8** %aptr504, align 8
  store i8 %326, i8* %328, align 1
  br label %if.end.506

if.end.506:                                       ; preds = %if.else.461, %if.then.457
  br label %if.end.515

if.else.507:                                      ; preds = %if.end.447
  %329 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio508 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %329, i32 0, i32 23
  %330 = load %struct._PerlIO**, %struct._PerlIO*** %fio508, align 8
  %331 = load i8, i8* %flags, align 1
  %conv509 = zext i8 %331 to i32
  %call510 = call i32 @PerlIO_putc(%struct._PerlIO** %330, i32 %conv509)
  %cmp511 = icmp eq i32 %call510, -1
  br i1 %cmp511, label %if.then.513, label %if.end.514

if.then.513:                                      ; preds = %if.else.507
  store i32 -1, i32* %retval
  br label %return

if.end.514:                                       ; preds = %if.else.507
  br label %if.end.515

if.end.515:                                       ; preds = %if.end.514, %if.end.506
  %332 = load i32, i32* %obj_type, align 4
  %cmp516 = icmp eq i32 %332, 3
  br i1 %cmp516, label %if.then.518, label %if.end.587

if.then.518:                                      ; preds = %if.end.515
  %333 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio519 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %333, i32 0, i32 23
  %334 = load %struct._PerlIO**, %struct._PerlIO*** %fio519, align 8
  %tobool520 = icmp ne %struct._PerlIO** %334, null
  br i1 %tobool520, label %if.else.578, label %if.then.521

if.then.521:                                      ; preds = %if.then.518
  %335 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf522 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %335, i32 0, i32 21
  %aptr523 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf522, i32 0, i32 2
  %336 = load i8*, i8** %aptr523, align 8
  %337 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf524 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %337, i32 0, i32 21
  %aend525 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf524, i32 0, i32 3
  %338 = load i8*, i8** %aend525, align 8
  %cmp526 = icmp ult i8* %336, %338
  br i1 %cmp526, label %if.then.528, label %if.else.532

if.then.528:                                      ; preds = %if.then.521
  %339 = load i8, i8* %eflags, align 1
  %340 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf529 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %340, i32 0, i32 21
  %aptr530 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf529, i32 0, i32 2
  %341 = load i8*, i8** %aptr530, align 8
  %incdec.ptr531 = getelementptr inbounds i8, i8* %341, i32 1
  store i8* %incdec.ptr531, i8** %aptr530, align 8
  store i8 %339, i8* %341, align 1
  br label %if.end.577

if.else.532:                                      ; preds = %if.then.521
  %342 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf535 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %342, i32 0, i32 21
  %asiz536 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf535, i32 0, i32 1
  %343 = load i64, i64* %asiz536, align 8
  %add537 = add i64 1, %343
  %add538 = add i64 %add537, 8191
  %and539 = and i64 %add538, -8192
  %conv540 = trunc i64 %and539 to i32
  store i32 %conv540, i32* %nsz534, align 4
  %344 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf543 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %344, i32 0, i32 21
  %aptr544 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf543, i32 0, i32 2
  %345 = load i8*, i8** %aptr544, align 8
  %346 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf545 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %346, i32 0, i32 21
  %arena546 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf545, i32 0, i32 0
  %347 = load i8*, i8** %arena546, align 8
  %sub.ptr.lhs.cast547 = ptrtoint i8* %345 to i64
  %sub.ptr.rhs.cast548 = ptrtoint i8* %347 to i64
  %sub.ptr.sub549 = sub i64 %sub.ptr.lhs.cast547, %sub.ptr.rhs.cast548
  %conv550 = trunc i64 %sub.ptr.sub549 to i32
  store i32 %conv550, i32* %offset542, align 4
  %348 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf551 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %348, i32 0, i32 21
  %arena552 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf551, i32 0, i32 0
  %349 = load i8*, i8** %arena552, align 8
  %350 = load i32, i32* %nsz534, align 4
  %conv553 = sext i32 %350 to i64
  %mul554 = mul i64 %conv553, 1
  %call555 = call i8* @Perl_safesysrealloc(i8* %349, i64 %mul554)
  %351 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf556 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %351, i32 0, i32 21
  %arena557 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf556, i32 0, i32 0
  store i8* %call555, i8** %arena557, align 8
  %352 = load i32, i32* %nsz534, align 4
  %conv558 = sext i32 %352 to i64
  %353 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf559 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %353, i32 0, i32 21
  %asiz560 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf559, i32 0, i32 1
  store i64 %conv558, i64* %asiz560, align 8
  %354 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf561 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %354, i32 0, i32 21
  %arena562 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf561, i32 0, i32 0
  %355 = load i8*, i8** %arena562, align 8
  %356 = load i32, i32* %offset542, align 4
  %idx.ext563 = sext i32 %356 to i64
  %add.ptr564 = getelementptr inbounds i8, i8* %355, i64 %idx.ext563
  %357 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf565 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %357, i32 0, i32 21
  %aptr566 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf565, i32 0, i32 2
  store i8* %add.ptr564, i8** %aptr566, align 8
  %358 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf568 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %358, i32 0, i32 21
  %arena569 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf568, i32 0, i32 0
  %359 = load i8*, i8** %arena569, align 8
  %360 = load i32, i32* %nsz534, align 4
  %idx.ext570 = sext i32 %360 to i64
  %add.ptr571 = getelementptr inbounds i8, i8* %359, i64 %idx.ext570
  %361 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf572 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %361, i32 0, i32 21
  %aend573 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf572, i32 0, i32 3
  store i8* %add.ptr571, i8** %aend573, align 8
  store i8* %add.ptr571, i8** %tmp567
  %362 = load i8*, i8** %tmp567
  %363 = load i8, i8* %eflags, align 1
  %364 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf574 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %364, i32 0, i32 21
  %aptr575 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf574, i32 0, i32 2
  %365 = load i8*, i8** %aptr575, align 8
  %incdec.ptr576 = getelementptr inbounds i8, i8* %365, i32 1
  store i8* %incdec.ptr576, i8** %aptr575, align 8
  store i8 %363, i8* %365, align 1
  br label %if.end.577

if.end.577:                                       ; preds = %if.else.532, %if.then.528
  br label %if.end.586

if.else.578:                                      ; preds = %if.then.518
  %366 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio579 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %366, i32 0, i32 23
  %367 = load %struct._PerlIO**, %struct._PerlIO*** %fio579, align 8
  %368 = load i8, i8* %eflags, align 1
  %conv580 = zext i8 %368 to i32
  %call581 = call i32 @PerlIO_putc(%struct._PerlIO** %367, i32 %conv580)
  %cmp582 = icmp eq i32 %call581, -1
  br i1 %cmp582, label %if.then.584, label %if.end.585

if.then.584:                                      ; preds = %if.else.578
  store i32 -1, i32* %retval
  br label %return

if.end.585:                                       ; preds = %if.else.578
  br label %if.end.586

if.end.586:                                       ; preds = %if.end.585, %if.end.577
  br label %if.end.587

if.end.587:                                       ; preds = %if.end.586, %if.end.515
  br label %if.end.657

if.else.588:                                      ; preds = %if.end.378
  %369 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio589 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %369, i32 0, i32 23
  %370 = load %struct._PerlIO**, %struct._PerlIO*** %fio589, align 8
  %tobool590 = icmp ne %struct._PerlIO** %370, null
  br i1 %tobool590, label %if.else.648, label %if.then.591

if.then.591:                                      ; preds = %if.else.588
  %371 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf592 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %371, i32 0, i32 21
  %aptr593 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf592, i32 0, i32 2
  %372 = load i8*, i8** %aptr593, align 8
  %373 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf594 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %373, i32 0, i32 21
  %aend595 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf594, i32 0, i32 3
  %374 = load i8*, i8** %aend595, align 8
  %cmp596 = icmp ult i8* %372, %374
  br i1 %cmp596, label %if.then.598, label %if.else.602

if.then.598:                                      ; preds = %if.then.591
  %375 = load i8, i8* %flags, align 1
  %376 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf599 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %376, i32 0, i32 21
  %aptr600 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf599, i32 0, i32 2
  %377 = load i8*, i8** %aptr600, align 8
  %incdec.ptr601 = getelementptr inbounds i8, i8* %377, i32 1
  store i8* %incdec.ptr601, i8** %aptr600, align 8
  store i8 %375, i8* %377, align 1
  br label %if.end.647

if.else.602:                                      ; preds = %if.then.591
  %378 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf605 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %378, i32 0, i32 21
  %asiz606 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf605, i32 0, i32 1
  %379 = load i64, i64* %asiz606, align 8
  %add607 = add i64 1, %379
  %add608 = add i64 %add607, 8191
  %and609 = and i64 %add608, -8192
  %conv610 = trunc i64 %and609 to i32
  store i32 %conv610, i32* %nsz604, align 4
  %380 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf613 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %380, i32 0, i32 21
  %aptr614 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf613, i32 0, i32 2
  %381 = load i8*, i8** %aptr614, align 8
  %382 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf615 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %382, i32 0, i32 21
  %arena616 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf615, i32 0, i32 0
  %383 = load i8*, i8** %arena616, align 8
  %sub.ptr.lhs.cast617 = ptrtoint i8* %381 to i64
  %sub.ptr.rhs.cast618 = ptrtoint i8* %383 to i64
  %sub.ptr.sub619 = sub i64 %sub.ptr.lhs.cast617, %sub.ptr.rhs.cast618
  %conv620 = trunc i64 %sub.ptr.sub619 to i32
  store i32 %conv620, i32* %offset612, align 4
  %384 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf621 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %384, i32 0, i32 21
  %arena622 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf621, i32 0, i32 0
  %385 = load i8*, i8** %arena622, align 8
  %386 = load i32, i32* %nsz604, align 4
  %conv623 = sext i32 %386 to i64
  %mul624 = mul i64 %conv623, 1
  %call625 = call i8* @Perl_safesysrealloc(i8* %385, i64 %mul624)
  %387 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf626 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %387, i32 0, i32 21
  %arena627 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf626, i32 0, i32 0
  store i8* %call625, i8** %arena627, align 8
  %388 = load i32, i32* %nsz604, align 4
  %conv628 = sext i32 %388 to i64
  %389 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf629 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %389, i32 0, i32 21
  %asiz630 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf629, i32 0, i32 1
  store i64 %conv628, i64* %asiz630, align 8
  %390 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf631 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %390, i32 0, i32 21
  %arena632 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf631, i32 0, i32 0
  %391 = load i8*, i8** %arena632, align 8
  %392 = load i32, i32* %offset612, align 4
  %idx.ext633 = sext i32 %392 to i64
  %add.ptr634 = getelementptr inbounds i8, i8* %391, i64 %idx.ext633
  %393 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf635 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %393, i32 0, i32 21
  %aptr636 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf635, i32 0, i32 2
  store i8* %add.ptr634, i8** %aptr636, align 8
  %394 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf638 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %394, i32 0, i32 21
  %arena639 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf638, i32 0, i32 0
  %395 = load i8*, i8** %arena639, align 8
  %396 = load i32, i32* %nsz604, align 4
  %idx.ext640 = sext i32 %396 to i64
  %add.ptr641 = getelementptr inbounds i8, i8* %395, i64 %idx.ext640
  %397 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf642 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %397, i32 0, i32 21
  %aend643 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf642, i32 0, i32 3
  store i8* %add.ptr641, i8** %aend643, align 8
  store i8* %add.ptr641, i8** %tmp637
  %398 = load i8*, i8** %tmp637
  %399 = load i8, i8* %flags, align 1
  %400 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf644 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %400, i32 0, i32 21
  %aptr645 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf644, i32 0, i32 2
  %401 = load i8*, i8** %aptr645, align 8
  %incdec.ptr646 = getelementptr inbounds i8, i8* %401, i32 1
  store i8* %incdec.ptr646, i8** %aptr645, align 8
  store i8 %399, i8* %401, align 1
  br label %if.end.647

if.end.647:                                       ; preds = %if.else.602, %if.then.598
  br label %if.end.656

if.else.648:                                      ; preds = %if.else.588
  %402 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio649 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %402, i32 0, i32 23
  %403 = load %struct._PerlIO**, %struct._PerlIO*** %fio649, align 8
  %404 = load i8, i8* %flags, align 1
  %conv650 = zext i8 %404 to i32
  %call651 = call i32 @PerlIO_putc(%struct._PerlIO** %403, i32 %conv650)
  %cmp652 = icmp eq i32 %call651, -1
  br i1 %cmp652, label %if.then.654, label %if.end.655

if.then.654:                                      ; preds = %if.else.648
  store i32 -1, i32* %retval
  br label %return

if.end.655:                                       ; preds = %if.else.648
  br label %if.end.656

if.end.656:                                       ; preds = %if.end.655, %if.end.647
  br label %if.end.657

if.end.657:                                       ; preds = %if.end.656, %if.end.587
  %405 = load i8, i8* %flags, align 1
  %conv658 = zext i8 %405 to i32
  %and659 = and i32 %conv658, 32
  %tobool660 = icmp ne i32 %and659, 0
  br i1 %tobool660, label %if.then.661, label %if.else.904

if.then.661:                                      ; preds = %if.end.657
  %406 = load i8, i8* %flags, align 1
  %conv662 = zext i8 %406 to i32
  %and663 = and i32 %conv662, 4
  %tobool664 = icmp ne i32 %and663, 0
  br i1 %tobool664, label %if.then.665, label %if.else.832

if.then.665:                                      ; preds = %if.then.661
  %407 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %407, i32 0, i32 11
  %408 = load i32, i32* %netorder, align 4
  %tobool666 = icmp ne i32 %408, 0
  br i1 %tobool666, label %if.then.667, label %if.else.751

if.then.667:                                      ; preds = %if.then.665
  %409 = load i32, i32* %classnum, align 4
  %conv669 = sext i32 %409 to i64
  %call670 = call i64 @Perl_my_htonl(i64 %conv669)
  %conv671 = trunc i64 %call670 to i32
  store i32 %conv671, i32* %y, align 4
  %410 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio672 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %410, i32 0, i32 23
  %411 = load %struct._PerlIO**, %struct._PerlIO*** %fio672, align 8
  %tobool673 = icmp ne %struct._PerlIO** %411, null
  br i1 %tobool673, label %if.else.743, label %if.then.674

if.then.674:                                      ; preds = %if.then.667
  %412 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf675 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %412, i32 0, i32 21
  %aptr676 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf675, i32 0, i32 2
  %413 = load i8*, i8** %aptr676, align 8
  %add.ptr677 = getelementptr inbounds i8, i8* %413, i64 4
  %414 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf678 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %414, i32 0, i32 21
  %aend679 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf678, i32 0, i32 3
  %415 = load i8*, i8** %aend679, align 8
  %cmp680 = icmp ugt i8* %add.ptr677, %415
  br i1 %cmp680, label %if.then.682, label %if.end.724

if.then.682:                                      ; preds = %if.then.674
  %416 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf685 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %416, i32 0, i32 21
  %asiz686 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf685, i32 0, i32 1
  %417 = load i64, i64* %asiz686, align 8
  %add687 = add i64 4, %417
  %add688 = add i64 %add687, 8191
  %and689 = and i64 %add688, -8192
  %conv690 = trunc i64 %and689 to i32
  store i32 %conv690, i32* %nsz684, align 4
  %418 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf693 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %418, i32 0, i32 21
  %aptr694 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf693, i32 0, i32 2
  %419 = load i8*, i8** %aptr694, align 8
  %420 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf695 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %420, i32 0, i32 21
  %arena696 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf695, i32 0, i32 0
  %421 = load i8*, i8** %arena696, align 8
  %sub.ptr.lhs.cast697 = ptrtoint i8* %419 to i64
  %sub.ptr.rhs.cast698 = ptrtoint i8* %421 to i64
  %sub.ptr.sub699 = sub i64 %sub.ptr.lhs.cast697, %sub.ptr.rhs.cast698
  %conv700 = trunc i64 %sub.ptr.sub699 to i32
  store i32 %conv700, i32* %offset692, align 4
  %422 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf701 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %422, i32 0, i32 21
  %arena702 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf701, i32 0, i32 0
  %423 = load i8*, i8** %arena702, align 8
  %424 = load i32, i32* %nsz684, align 4
  %conv703 = sext i32 %424 to i64
  %mul704 = mul i64 %conv703, 1
  %call705 = call i8* @Perl_safesysrealloc(i8* %423, i64 %mul704)
  %425 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf706 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %425, i32 0, i32 21
  %arena707 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf706, i32 0, i32 0
  store i8* %call705, i8** %arena707, align 8
  %426 = load i32, i32* %nsz684, align 4
  %conv708 = sext i32 %426 to i64
  %427 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf709 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %427, i32 0, i32 21
  %asiz710 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf709, i32 0, i32 1
  store i64 %conv708, i64* %asiz710, align 8
  %428 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf711 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %428, i32 0, i32 21
  %arena712 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf711, i32 0, i32 0
  %429 = load i8*, i8** %arena712, align 8
  %430 = load i32, i32* %offset692, align 4
  %idx.ext713 = sext i32 %430 to i64
  %add.ptr714 = getelementptr inbounds i8, i8* %429, i64 %idx.ext713
  %431 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf715 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %431, i32 0, i32 21
  %aptr716 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf715, i32 0, i32 2
  store i8* %add.ptr714, i8** %aptr716, align 8
  %432 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf718 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %432, i32 0, i32 21
  %arena719 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf718, i32 0, i32 0
  %433 = load i8*, i8** %arena719, align 8
  %434 = load i32, i32* %nsz684, align 4
  %idx.ext720 = sext i32 %434 to i64
  %add.ptr721 = getelementptr inbounds i8, i8* %433, i64 %idx.ext720
  %435 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf722 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %435, i32 0, i32 21
  %aend723 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf722, i32 0, i32 3
  store i8* %add.ptr721, i8** %aend723, align 8
  store i8* %add.ptr721, i8** %tmp717
  %436 = load i8*, i8** %tmp717
  br label %if.end.724

if.end.724:                                       ; preds = %if.then.682, %if.then.674
  %437 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf725 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %437, i32 0, i32 21
  %aptr726 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf725, i32 0, i32 2
  %438 = load i8*, i8** %aptr726, align 8
  %439 = ptrtoint i8* %438 to i64
  %440 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf727 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %440, i32 0, i32 21
  %aptr728 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf727, i32 0, i32 2
  %441 = load i8*, i8** %aptr728, align 8
  %442 = ptrtoint i8* %441 to i64
  %and729 = and i64 %442, -4
  %cmp730 = icmp eq i64 %439, %and729
  br i1 %cmp730, label %if.then.732, label %if.else.735

if.then.732:                                      ; preds = %if.end.724
  %443 = load i32, i32* %y, align 4
  %444 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf733 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %444, i32 0, i32 21
  %aptr734 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf733, i32 0, i32 2
  %445 = load i8*, i8** %aptr734, align 8
  %446 = bitcast i8* %445 to i32*
  store i32 %443, i32* %446, align 4
  br label %if.end.738

if.else.735:                                      ; preds = %if.end.724
  %447 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf736 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %447, i32 0, i32 21
  %aptr737 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf736, i32 0, i32 2
  %448 = load i8*, i8** %aptr737, align 8
  %449 = bitcast i32* %y to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %448, i8* %449, i64 4, i32 1, i1 false)
  br label %if.end.738

if.end.738:                                       ; preds = %if.else.735, %if.then.732
  %450 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf740 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %450, i32 0, i32 21
  %aptr741 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf740, i32 0, i32 2
  %451 = load i8*, i8** %aptr741, align 8
  %add.ptr742 = getelementptr inbounds i8, i8* %451, i64 4
  store i8* %add.ptr742, i8** %aptr741, align 8
  store i8* %add.ptr742, i8** %tmp739
  %452 = load i8*, i8** %tmp739
  br label %if.end.750

if.else.743:                                      ; preds = %if.then.667
  %453 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio744 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %453, i32 0, i32 23
  %454 = load %struct._PerlIO**, %struct._PerlIO*** %fio744, align 8
  %455 = bitcast i32* %y to i8*
  %call745 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %454, i8* %455, i64 4)
  %cmp746 = icmp ne i64 %call745, 4
  br i1 %cmp746, label %if.then.748, label %if.end.749

if.then.748:                                      ; preds = %if.else.743
  store i32 -1, i32* %retval
  br label %return

if.end.749:                                       ; preds = %if.else.743
  br label %if.end.750

if.end.750:                                       ; preds = %if.end.749, %if.end.738
  br label %if.end.831

if.else.751:                                      ; preds = %if.then.665
  %456 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio752 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %456, i32 0, i32 23
  %457 = load %struct._PerlIO**, %struct._PerlIO*** %fio752, align 8
  %tobool753 = icmp ne %struct._PerlIO** %457, null
  br i1 %tobool753, label %if.else.823, label %if.then.754

if.then.754:                                      ; preds = %if.else.751
  %458 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf755 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %458, i32 0, i32 21
  %aptr756 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf755, i32 0, i32 2
  %459 = load i8*, i8** %aptr756, align 8
  %add.ptr757 = getelementptr inbounds i8, i8* %459, i64 4
  %460 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf758 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %460, i32 0, i32 21
  %aend759 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf758, i32 0, i32 3
  %461 = load i8*, i8** %aend759, align 8
  %cmp760 = icmp ugt i8* %add.ptr757, %461
  br i1 %cmp760, label %if.then.762, label %if.end.804

if.then.762:                                      ; preds = %if.then.754
  %462 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf765 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %462, i32 0, i32 21
  %asiz766 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf765, i32 0, i32 1
  %463 = load i64, i64* %asiz766, align 8
  %add767 = add i64 4, %463
  %add768 = add i64 %add767, 8191
  %and769 = and i64 %add768, -8192
  %conv770 = trunc i64 %and769 to i32
  store i32 %conv770, i32* %nsz764, align 4
  %464 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf773 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %464, i32 0, i32 21
  %aptr774 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf773, i32 0, i32 2
  %465 = load i8*, i8** %aptr774, align 8
  %466 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf775 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %466, i32 0, i32 21
  %arena776 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf775, i32 0, i32 0
  %467 = load i8*, i8** %arena776, align 8
  %sub.ptr.lhs.cast777 = ptrtoint i8* %465 to i64
  %sub.ptr.rhs.cast778 = ptrtoint i8* %467 to i64
  %sub.ptr.sub779 = sub i64 %sub.ptr.lhs.cast777, %sub.ptr.rhs.cast778
  %conv780 = trunc i64 %sub.ptr.sub779 to i32
  store i32 %conv780, i32* %offset772, align 4
  %468 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf781 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %468, i32 0, i32 21
  %arena782 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf781, i32 0, i32 0
  %469 = load i8*, i8** %arena782, align 8
  %470 = load i32, i32* %nsz764, align 4
  %conv783 = sext i32 %470 to i64
  %mul784 = mul i64 %conv783, 1
  %call785 = call i8* @Perl_safesysrealloc(i8* %469, i64 %mul784)
  %471 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf786 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %471, i32 0, i32 21
  %arena787 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf786, i32 0, i32 0
  store i8* %call785, i8** %arena787, align 8
  %472 = load i32, i32* %nsz764, align 4
  %conv788 = sext i32 %472 to i64
  %473 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf789 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %473, i32 0, i32 21
  %asiz790 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf789, i32 0, i32 1
  store i64 %conv788, i64* %asiz790, align 8
  %474 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf791 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %474, i32 0, i32 21
  %arena792 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf791, i32 0, i32 0
  %475 = load i8*, i8** %arena792, align 8
  %476 = load i32, i32* %offset772, align 4
  %idx.ext793 = sext i32 %476 to i64
  %add.ptr794 = getelementptr inbounds i8, i8* %475, i64 %idx.ext793
  %477 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf795 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %477, i32 0, i32 21
  %aptr796 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf795, i32 0, i32 2
  store i8* %add.ptr794, i8** %aptr796, align 8
  %478 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf798 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %478, i32 0, i32 21
  %arena799 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf798, i32 0, i32 0
  %479 = load i8*, i8** %arena799, align 8
  %480 = load i32, i32* %nsz764, align 4
  %idx.ext800 = sext i32 %480 to i64
  %add.ptr801 = getelementptr inbounds i8, i8* %479, i64 %idx.ext800
  %481 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf802 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %481, i32 0, i32 21
  %aend803 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf802, i32 0, i32 3
  store i8* %add.ptr801, i8** %aend803, align 8
  store i8* %add.ptr801, i8** %tmp797
  %482 = load i8*, i8** %tmp797
  br label %if.end.804

if.end.804:                                       ; preds = %if.then.762, %if.then.754
  %483 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf805 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %483, i32 0, i32 21
  %aptr806 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf805, i32 0, i32 2
  %484 = load i8*, i8** %aptr806, align 8
  %485 = ptrtoint i8* %484 to i64
  %486 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf807 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %486, i32 0, i32 21
  %aptr808 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf807, i32 0, i32 2
  %487 = load i8*, i8** %aptr808, align 8
  %488 = ptrtoint i8* %487 to i64
  %and809 = and i64 %488, -4
  %cmp810 = icmp eq i64 %485, %and809
  br i1 %cmp810, label %if.then.812, label %if.else.815

if.then.812:                                      ; preds = %if.end.804
  %489 = load i32, i32* %classnum, align 4
  %490 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf813 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %490, i32 0, i32 21
  %aptr814 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf813, i32 0, i32 2
  %491 = load i8*, i8** %aptr814, align 8
  %492 = bitcast i8* %491 to i32*
  store i32 %489, i32* %492, align 4
  br label %if.end.818

if.else.815:                                      ; preds = %if.end.804
  %493 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf816 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %493, i32 0, i32 21
  %aptr817 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf816, i32 0, i32 2
  %494 = load i8*, i8** %aptr817, align 8
  %495 = bitcast i32* %classnum to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %494, i8* %495, i64 4, i32 1, i1 false)
  br label %if.end.818

if.end.818:                                       ; preds = %if.else.815, %if.then.812
  %496 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf820 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %496, i32 0, i32 21
  %aptr821 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf820, i32 0, i32 2
  %497 = load i8*, i8** %aptr821, align 8
  %add.ptr822 = getelementptr inbounds i8, i8* %497, i64 4
  store i8* %add.ptr822, i8** %aptr821, align 8
  store i8* %add.ptr822, i8** %tmp819
  %498 = load i8*, i8** %tmp819
  br label %if.end.830

if.else.823:                                      ; preds = %if.else.751
  %499 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio824 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %499, i32 0, i32 23
  %500 = load %struct._PerlIO**, %struct._PerlIO*** %fio824, align 8
  %501 = bitcast i32* %classnum to i8*
  %call825 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %500, i8* %501, i64 4)
  %cmp826 = icmp ne i64 %call825, 4
  br i1 %cmp826, label %if.then.828, label %if.end.829

if.then.828:                                      ; preds = %if.else.823
  store i32 -1, i32* %retval
  br label %return

if.end.829:                                       ; preds = %if.else.823
  br label %if.end.830

if.end.830:                                       ; preds = %if.end.829, %if.end.818
  br label %if.end.831

if.end.831:                                       ; preds = %if.end.830, %if.end.750
  br label %if.end.903

if.else.832:                                      ; preds = %if.then.661
  %502 = load i32, i32* %classnum, align 4
  %conv834 = trunc i32 %502 to i8
  store i8 %conv834, i8* %cnum, align 1
  %503 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio835 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %503, i32 0, i32 23
  %504 = load %struct._PerlIO**, %struct._PerlIO*** %fio835, align 8
  %tobool836 = icmp ne %struct._PerlIO** %504, null
  br i1 %tobool836, label %if.else.894, label %if.then.837

if.then.837:                                      ; preds = %if.else.832
  %505 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf838 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %505, i32 0, i32 21
  %aptr839 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf838, i32 0, i32 2
  %506 = load i8*, i8** %aptr839, align 8
  %507 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf840 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %507, i32 0, i32 21
  %aend841 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf840, i32 0, i32 3
  %508 = load i8*, i8** %aend841, align 8
  %cmp842 = icmp ult i8* %506, %508
  br i1 %cmp842, label %if.then.844, label %if.else.848

if.then.844:                                      ; preds = %if.then.837
  %509 = load i8, i8* %cnum, align 1
  %510 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf845 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %510, i32 0, i32 21
  %aptr846 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf845, i32 0, i32 2
  %511 = load i8*, i8** %aptr846, align 8
  %incdec.ptr847 = getelementptr inbounds i8, i8* %511, i32 1
  store i8* %incdec.ptr847, i8** %aptr846, align 8
  store i8 %509, i8* %511, align 1
  br label %if.end.893

if.else.848:                                      ; preds = %if.then.837
  %512 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf851 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %512, i32 0, i32 21
  %asiz852 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf851, i32 0, i32 1
  %513 = load i64, i64* %asiz852, align 8
  %add853 = add i64 1, %513
  %add854 = add i64 %add853, 8191
  %and855 = and i64 %add854, -8192
  %conv856 = trunc i64 %and855 to i32
  store i32 %conv856, i32* %nsz850, align 4
  %514 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf859 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %514, i32 0, i32 21
  %aptr860 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf859, i32 0, i32 2
  %515 = load i8*, i8** %aptr860, align 8
  %516 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf861 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %516, i32 0, i32 21
  %arena862 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf861, i32 0, i32 0
  %517 = load i8*, i8** %arena862, align 8
  %sub.ptr.lhs.cast863 = ptrtoint i8* %515 to i64
  %sub.ptr.rhs.cast864 = ptrtoint i8* %517 to i64
  %sub.ptr.sub865 = sub i64 %sub.ptr.lhs.cast863, %sub.ptr.rhs.cast864
  %conv866 = trunc i64 %sub.ptr.sub865 to i32
  store i32 %conv866, i32* %offset858, align 4
  %518 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf867 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %518, i32 0, i32 21
  %arena868 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf867, i32 0, i32 0
  %519 = load i8*, i8** %arena868, align 8
  %520 = load i32, i32* %nsz850, align 4
  %conv869 = sext i32 %520 to i64
  %mul870 = mul i64 %conv869, 1
  %call871 = call i8* @Perl_safesysrealloc(i8* %519, i64 %mul870)
  %521 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf872 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %521, i32 0, i32 21
  %arena873 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf872, i32 0, i32 0
  store i8* %call871, i8** %arena873, align 8
  %522 = load i32, i32* %nsz850, align 4
  %conv874 = sext i32 %522 to i64
  %523 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf875 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %523, i32 0, i32 21
  %asiz876 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf875, i32 0, i32 1
  store i64 %conv874, i64* %asiz876, align 8
  %524 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf877 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %524, i32 0, i32 21
  %arena878 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf877, i32 0, i32 0
  %525 = load i8*, i8** %arena878, align 8
  %526 = load i32, i32* %offset858, align 4
  %idx.ext879 = sext i32 %526 to i64
  %add.ptr880 = getelementptr inbounds i8, i8* %525, i64 %idx.ext879
  %527 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf881 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %527, i32 0, i32 21
  %aptr882 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf881, i32 0, i32 2
  store i8* %add.ptr880, i8** %aptr882, align 8
  %528 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf884 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %528, i32 0, i32 21
  %arena885 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf884, i32 0, i32 0
  %529 = load i8*, i8** %arena885, align 8
  %530 = load i32, i32* %nsz850, align 4
  %idx.ext886 = sext i32 %530 to i64
  %add.ptr887 = getelementptr inbounds i8, i8* %529, i64 %idx.ext886
  %531 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf888 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %531, i32 0, i32 21
  %aend889 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf888, i32 0, i32 3
  store i8* %add.ptr887, i8** %aend889, align 8
  store i8* %add.ptr887, i8** %tmp883
  %532 = load i8*, i8** %tmp883
  %533 = load i8, i8* %cnum, align 1
  %534 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf890 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %534, i32 0, i32 21
  %aptr891 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf890, i32 0, i32 2
  %535 = load i8*, i8** %aptr891, align 8
  %incdec.ptr892 = getelementptr inbounds i8, i8* %535, i32 1
  store i8* %incdec.ptr892, i8** %aptr891, align 8
  store i8 %533, i8* %535, align 1
  br label %if.end.893

if.end.893:                                       ; preds = %if.else.848, %if.then.844
  br label %if.end.902

if.else.894:                                      ; preds = %if.else.832
  %536 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio895 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %536, i32 0, i32 23
  %537 = load %struct._PerlIO**, %struct._PerlIO*** %fio895, align 8
  %538 = load i8, i8* %cnum, align 1
  %conv896 = zext i8 %538 to i32
  %call897 = call i32 @PerlIO_putc(%struct._PerlIO** %537, i32 %conv896)
  %cmp898 = icmp eq i32 %call897, -1
  br i1 %cmp898, label %if.then.900, label %if.end.901

if.then.900:                                      ; preds = %if.else.894
  store i32 -1, i32* %retval
  br label %return

if.end.901:                                       ; preds = %if.else.894
  br label %if.end.902

if.end.902:                                       ; preds = %if.end.901, %if.end.893
  br label %if.end.903

if.end.903:                                       ; preds = %if.end.902, %if.end.831
  br label %if.end.1222

if.else.904:                                      ; preds = %if.end.657
  %539 = load i8, i8* %flags, align 1
  %conv905 = zext i8 %539 to i32
  %and906 = and i32 %conv905, 4
  %tobool907 = icmp ne i32 %and906, 0
  br i1 %tobool907, label %if.then.908, label %if.else.1077

if.then.908:                                      ; preds = %if.else.904
  %540 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder909 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %540, i32 0, i32 11
  %541 = load i32, i32* %netorder909, align 4
  %tobool910 = icmp ne i32 %541, 0
  br i1 %tobool910, label %if.then.911, label %if.else.996

if.then.911:                                      ; preds = %if.then.908
  %542 = load i32, i32* %len, align 4
  %conv914 = sext i32 %542 to i64
  %call915 = call i64 @Perl_my_htonl(i64 %conv914)
  %conv916 = trunc i64 %call915 to i32
  store i32 %conv916, i32* %y913, align 4
  %543 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio917 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %543, i32 0, i32 23
  %544 = load %struct._PerlIO**, %struct._PerlIO*** %fio917, align 8
  %tobool918 = icmp ne %struct._PerlIO** %544, null
  br i1 %tobool918, label %if.else.988, label %if.then.919

if.then.919:                                      ; preds = %if.then.911
  %545 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf920 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %545, i32 0, i32 21
  %aptr921 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf920, i32 0, i32 2
  %546 = load i8*, i8** %aptr921, align 8
  %add.ptr922 = getelementptr inbounds i8, i8* %546, i64 4
  %547 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf923 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %547, i32 0, i32 21
  %aend924 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf923, i32 0, i32 3
  %548 = load i8*, i8** %aend924, align 8
  %cmp925 = icmp ugt i8* %add.ptr922, %548
  br i1 %cmp925, label %if.then.927, label %if.end.969

if.then.927:                                      ; preds = %if.then.919
  %549 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf930 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %549, i32 0, i32 21
  %asiz931 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf930, i32 0, i32 1
  %550 = load i64, i64* %asiz931, align 8
  %add932 = add i64 4, %550
  %add933 = add i64 %add932, 8191
  %and934 = and i64 %add933, -8192
  %conv935 = trunc i64 %and934 to i32
  store i32 %conv935, i32* %nsz929, align 4
  %551 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf938 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %551, i32 0, i32 21
  %aptr939 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf938, i32 0, i32 2
  %552 = load i8*, i8** %aptr939, align 8
  %553 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf940 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %553, i32 0, i32 21
  %arena941 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf940, i32 0, i32 0
  %554 = load i8*, i8** %arena941, align 8
  %sub.ptr.lhs.cast942 = ptrtoint i8* %552 to i64
  %sub.ptr.rhs.cast943 = ptrtoint i8* %554 to i64
  %sub.ptr.sub944 = sub i64 %sub.ptr.lhs.cast942, %sub.ptr.rhs.cast943
  %conv945 = trunc i64 %sub.ptr.sub944 to i32
  store i32 %conv945, i32* %offset937, align 4
  %555 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf946 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %555, i32 0, i32 21
  %arena947 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf946, i32 0, i32 0
  %556 = load i8*, i8** %arena947, align 8
  %557 = load i32, i32* %nsz929, align 4
  %conv948 = sext i32 %557 to i64
  %mul949 = mul i64 %conv948, 1
  %call950 = call i8* @Perl_safesysrealloc(i8* %556, i64 %mul949)
  %558 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf951 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %558, i32 0, i32 21
  %arena952 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf951, i32 0, i32 0
  store i8* %call950, i8** %arena952, align 8
  %559 = load i32, i32* %nsz929, align 4
  %conv953 = sext i32 %559 to i64
  %560 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf954 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %560, i32 0, i32 21
  %asiz955 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf954, i32 0, i32 1
  store i64 %conv953, i64* %asiz955, align 8
  %561 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf956 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %561, i32 0, i32 21
  %arena957 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf956, i32 0, i32 0
  %562 = load i8*, i8** %arena957, align 8
  %563 = load i32, i32* %offset937, align 4
  %idx.ext958 = sext i32 %563 to i64
  %add.ptr959 = getelementptr inbounds i8, i8* %562, i64 %idx.ext958
  %564 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf960 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %564, i32 0, i32 21
  %aptr961 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf960, i32 0, i32 2
  store i8* %add.ptr959, i8** %aptr961, align 8
  %565 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf963 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %565, i32 0, i32 21
  %arena964 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf963, i32 0, i32 0
  %566 = load i8*, i8** %arena964, align 8
  %567 = load i32, i32* %nsz929, align 4
  %idx.ext965 = sext i32 %567 to i64
  %add.ptr966 = getelementptr inbounds i8, i8* %566, i64 %idx.ext965
  %568 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf967 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %568, i32 0, i32 21
  %aend968 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf967, i32 0, i32 3
  store i8* %add.ptr966, i8** %aend968, align 8
  store i8* %add.ptr966, i8** %tmp962
  %569 = load i8*, i8** %tmp962
  br label %if.end.969

if.end.969:                                       ; preds = %if.then.927, %if.then.919
  %570 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf970 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %570, i32 0, i32 21
  %aptr971 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf970, i32 0, i32 2
  %571 = load i8*, i8** %aptr971, align 8
  %572 = ptrtoint i8* %571 to i64
  %573 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf972 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %573, i32 0, i32 21
  %aptr973 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf972, i32 0, i32 2
  %574 = load i8*, i8** %aptr973, align 8
  %575 = ptrtoint i8* %574 to i64
  %and974 = and i64 %575, -4
  %cmp975 = icmp eq i64 %572, %and974
  br i1 %cmp975, label %if.then.977, label %if.else.980

if.then.977:                                      ; preds = %if.end.969
  %576 = load i32, i32* %y913, align 4
  %577 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf978 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %577, i32 0, i32 21
  %aptr979 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf978, i32 0, i32 2
  %578 = load i8*, i8** %aptr979, align 8
  %579 = bitcast i8* %578 to i32*
  store i32 %576, i32* %579, align 4
  br label %if.end.983

if.else.980:                                      ; preds = %if.end.969
  %580 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf981 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %580, i32 0, i32 21
  %aptr982 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf981, i32 0, i32 2
  %581 = load i8*, i8** %aptr982, align 8
  %582 = bitcast i32* %y913 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %581, i8* %582, i64 4, i32 1, i1 false)
  br label %if.end.983

if.end.983:                                       ; preds = %if.else.980, %if.then.977
  %583 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf985 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %583, i32 0, i32 21
  %aptr986 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf985, i32 0, i32 2
  %584 = load i8*, i8** %aptr986, align 8
  %add.ptr987 = getelementptr inbounds i8, i8* %584, i64 4
  store i8* %add.ptr987, i8** %aptr986, align 8
  store i8* %add.ptr987, i8** %tmp984
  %585 = load i8*, i8** %tmp984
  br label %if.end.995

if.else.988:                                      ; preds = %if.then.911
  %586 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio989 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %586, i32 0, i32 23
  %587 = load %struct._PerlIO**, %struct._PerlIO*** %fio989, align 8
  %588 = bitcast i32* %y913 to i8*
  %call990 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %587, i8* %588, i64 4)
  %cmp991 = icmp ne i64 %call990, 4
  br i1 %cmp991, label %if.then.993, label %if.end.994

if.then.993:                                      ; preds = %if.else.988
  store i32 -1, i32* %retval
  br label %return

if.end.994:                                       ; preds = %if.else.988
  br label %if.end.995

if.end.995:                                       ; preds = %if.end.994, %if.end.983
  br label %if.end.1076

if.else.996:                                      ; preds = %if.then.908
  %589 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio997 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %589, i32 0, i32 23
  %590 = load %struct._PerlIO**, %struct._PerlIO*** %fio997, align 8
  %tobool998 = icmp ne %struct._PerlIO** %590, null
  br i1 %tobool998, label %if.else.1068, label %if.then.999

if.then.999:                                      ; preds = %if.else.996
  %591 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1000 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %591, i32 0, i32 21
  %aptr1001 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1000, i32 0, i32 2
  %592 = load i8*, i8** %aptr1001, align 8
  %add.ptr1002 = getelementptr inbounds i8, i8* %592, i64 4
  %593 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1003 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %593, i32 0, i32 21
  %aend1004 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1003, i32 0, i32 3
  %594 = load i8*, i8** %aend1004, align 8
  %cmp1005 = icmp ugt i8* %add.ptr1002, %594
  br i1 %cmp1005, label %if.then.1007, label %if.end.1049

if.then.1007:                                     ; preds = %if.then.999
  %595 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1010 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %595, i32 0, i32 21
  %asiz1011 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1010, i32 0, i32 1
  %596 = load i64, i64* %asiz1011, align 8
  %add1012 = add i64 4, %596
  %add1013 = add i64 %add1012, 8191
  %and1014 = and i64 %add1013, -8192
  %conv1015 = trunc i64 %and1014 to i32
  store i32 %conv1015, i32* %nsz1009, align 4
  %597 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1018 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %597, i32 0, i32 21
  %aptr1019 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1018, i32 0, i32 2
  %598 = load i8*, i8** %aptr1019, align 8
  %599 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1020 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %599, i32 0, i32 21
  %arena1021 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1020, i32 0, i32 0
  %600 = load i8*, i8** %arena1021, align 8
  %sub.ptr.lhs.cast1022 = ptrtoint i8* %598 to i64
  %sub.ptr.rhs.cast1023 = ptrtoint i8* %600 to i64
  %sub.ptr.sub1024 = sub i64 %sub.ptr.lhs.cast1022, %sub.ptr.rhs.cast1023
  %conv1025 = trunc i64 %sub.ptr.sub1024 to i32
  store i32 %conv1025, i32* %offset1017, align 4
  %601 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1026 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %601, i32 0, i32 21
  %arena1027 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1026, i32 0, i32 0
  %602 = load i8*, i8** %arena1027, align 8
  %603 = load i32, i32* %nsz1009, align 4
  %conv1028 = sext i32 %603 to i64
  %mul1029 = mul i64 %conv1028, 1
  %call1030 = call i8* @Perl_safesysrealloc(i8* %602, i64 %mul1029)
  %604 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1031 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %604, i32 0, i32 21
  %arena1032 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1031, i32 0, i32 0
  store i8* %call1030, i8** %arena1032, align 8
  %605 = load i32, i32* %nsz1009, align 4
  %conv1033 = sext i32 %605 to i64
  %606 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1034 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %606, i32 0, i32 21
  %asiz1035 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1034, i32 0, i32 1
  store i64 %conv1033, i64* %asiz1035, align 8
  %607 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1036 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %607, i32 0, i32 21
  %arena1037 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1036, i32 0, i32 0
  %608 = load i8*, i8** %arena1037, align 8
  %609 = load i32, i32* %offset1017, align 4
  %idx.ext1038 = sext i32 %609 to i64
  %add.ptr1039 = getelementptr inbounds i8, i8* %608, i64 %idx.ext1038
  %610 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1040 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %610, i32 0, i32 21
  %aptr1041 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1040, i32 0, i32 2
  store i8* %add.ptr1039, i8** %aptr1041, align 8
  %611 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1043 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %611, i32 0, i32 21
  %arena1044 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1043, i32 0, i32 0
  %612 = load i8*, i8** %arena1044, align 8
  %613 = load i32, i32* %nsz1009, align 4
  %idx.ext1045 = sext i32 %613 to i64
  %add.ptr1046 = getelementptr inbounds i8, i8* %612, i64 %idx.ext1045
  %614 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1047 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %614, i32 0, i32 21
  %aend1048 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1047, i32 0, i32 3
  store i8* %add.ptr1046, i8** %aend1048, align 8
  store i8* %add.ptr1046, i8** %tmp1042
  %615 = load i8*, i8** %tmp1042
  br label %if.end.1049

if.end.1049:                                      ; preds = %if.then.1007, %if.then.999
  %616 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1050 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %616, i32 0, i32 21
  %aptr1051 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1050, i32 0, i32 2
  %617 = load i8*, i8** %aptr1051, align 8
  %618 = ptrtoint i8* %617 to i64
  %619 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1052 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %619, i32 0, i32 21
  %aptr1053 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1052, i32 0, i32 2
  %620 = load i8*, i8** %aptr1053, align 8
  %621 = ptrtoint i8* %620 to i64
  %and1054 = and i64 %621, -4
  %cmp1055 = icmp eq i64 %618, %and1054
  br i1 %cmp1055, label %if.then.1057, label %if.else.1060

if.then.1057:                                     ; preds = %if.end.1049
  %622 = load i32, i32* %len, align 4
  %623 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1058 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %623, i32 0, i32 21
  %aptr1059 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1058, i32 0, i32 2
  %624 = load i8*, i8** %aptr1059, align 8
  %625 = bitcast i8* %624 to i32*
  store i32 %622, i32* %625, align 4
  br label %if.end.1063

if.else.1060:                                     ; preds = %if.end.1049
  %626 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1061 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %626, i32 0, i32 21
  %aptr1062 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1061, i32 0, i32 2
  %627 = load i8*, i8** %aptr1062, align 8
  %628 = bitcast i32* %len to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %627, i8* %628, i64 4, i32 1, i1 false)
  br label %if.end.1063

if.end.1063:                                      ; preds = %if.else.1060, %if.then.1057
  %629 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1065 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %629, i32 0, i32 21
  %aptr1066 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1065, i32 0, i32 2
  %630 = load i8*, i8** %aptr1066, align 8
  %add.ptr1067 = getelementptr inbounds i8, i8* %630, i64 4
  store i8* %add.ptr1067, i8** %aptr1066, align 8
  store i8* %add.ptr1067, i8** %tmp1064
  %631 = load i8*, i8** %tmp1064
  br label %if.end.1075

if.else.1068:                                     ; preds = %if.else.996
  %632 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1069 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %632, i32 0, i32 23
  %633 = load %struct._PerlIO**, %struct._PerlIO*** %fio1069, align 8
  %634 = bitcast i32* %len to i8*
  %call1070 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %633, i8* %634, i64 4)
  %cmp1071 = icmp ne i64 %call1070, 4
  br i1 %cmp1071, label %if.then.1073, label %if.end.1074

if.then.1073:                                     ; preds = %if.else.1068
  store i32 -1, i32* %retval
  br label %return

if.end.1074:                                      ; preds = %if.else.1068
  br label %if.end.1075

if.end.1075:                                      ; preds = %if.end.1074, %if.end.1063
  br label %if.end.1076

if.end.1076:                                      ; preds = %if.end.1075, %if.end.995
  br label %if.end.1148

if.else.1077:                                     ; preds = %if.else.904
  %635 = load i32, i32* %len, align 4
  %conv1079 = trunc i32 %635 to i8
  store i8 %conv1079, i8* %clen, align 1
  %636 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1080 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %636, i32 0, i32 23
  %637 = load %struct._PerlIO**, %struct._PerlIO*** %fio1080, align 8
  %tobool1081 = icmp ne %struct._PerlIO** %637, null
  br i1 %tobool1081, label %if.else.1139, label %if.then.1082

if.then.1082:                                     ; preds = %if.else.1077
  %638 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1083 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %638, i32 0, i32 21
  %aptr1084 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1083, i32 0, i32 2
  %639 = load i8*, i8** %aptr1084, align 8
  %640 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1085 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %640, i32 0, i32 21
  %aend1086 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1085, i32 0, i32 3
  %641 = load i8*, i8** %aend1086, align 8
  %cmp1087 = icmp ult i8* %639, %641
  br i1 %cmp1087, label %if.then.1089, label %if.else.1093

if.then.1089:                                     ; preds = %if.then.1082
  %642 = load i8, i8* %clen, align 1
  %643 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1090 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %643, i32 0, i32 21
  %aptr1091 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1090, i32 0, i32 2
  %644 = load i8*, i8** %aptr1091, align 8
  %incdec.ptr1092 = getelementptr inbounds i8, i8* %644, i32 1
  store i8* %incdec.ptr1092, i8** %aptr1091, align 8
  store i8 %642, i8* %644, align 1
  br label %if.end.1138

if.else.1093:                                     ; preds = %if.then.1082
  %645 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1096 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %645, i32 0, i32 21
  %asiz1097 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1096, i32 0, i32 1
  %646 = load i64, i64* %asiz1097, align 8
  %add1098 = add i64 1, %646
  %add1099 = add i64 %add1098, 8191
  %and1100 = and i64 %add1099, -8192
  %conv1101 = trunc i64 %and1100 to i32
  store i32 %conv1101, i32* %nsz1095, align 4
  %647 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1104 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %647, i32 0, i32 21
  %aptr1105 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1104, i32 0, i32 2
  %648 = load i8*, i8** %aptr1105, align 8
  %649 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1106 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %649, i32 0, i32 21
  %arena1107 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1106, i32 0, i32 0
  %650 = load i8*, i8** %arena1107, align 8
  %sub.ptr.lhs.cast1108 = ptrtoint i8* %648 to i64
  %sub.ptr.rhs.cast1109 = ptrtoint i8* %650 to i64
  %sub.ptr.sub1110 = sub i64 %sub.ptr.lhs.cast1108, %sub.ptr.rhs.cast1109
  %conv1111 = trunc i64 %sub.ptr.sub1110 to i32
  store i32 %conv1111, i32* %offset1103, align 4
  %651 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1112 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %651, i32 0, i32 21
  %arena1113 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1112, i32 0, i32 0
  %652 = load i8*, i8** %arena1113, align 8
  %653 = load i32, i32* %nsz1095, align 4
  %conv1114 = sext i32 %653 to i64
  %mul1115 = mul i64 %conv1114, 1
  %call1116 = call i8* @Perl_safesysrealloc(i8* %652, i64 %mul1115)
  %654 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1117 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %654, i32 0, i32 21
  %arena1118 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1117, i32 0, i32 0
  store i8* %call1116, i8** %arena1118, align 8
  %655 = load i32, i32* %nsz1095, align 4
  %conv1119 = sext i32 %655 to i64
  %656 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1120 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %656, i32 0, i32 21
  %asiz1121 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1120, i32 0, i32 1
  store i64 %conv1119, i64* %asiz1121, align 8
  %657 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1122 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %657, i32 0, i32 21
  %arena1123 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1122, i32 0, i32 0
  %658 = load i8*, i8** %arena1123, align 8
  %659 = load i32, i32* %offset1103, align 4
  %idx.ext1124 = sext i32 %659 to i64
  %add.ptr1125 = getelementptr inbounds i8, i8* %658, i64 %idx.ext1124
  %660 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1126 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %660, i32 0, i32 21
  %aptr1127 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1126, i32 0, i32 2
  store i8* %add.ptr1125, i8** %aptr1127, align 8
  %661 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1129 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %661, i32 0, i32 21
  %arena1130 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1129, i32 0, i32 0
  %662 = load i8*, i8** %arena1130, align 8
  %663 = load i32, i32* %nsz1095, align 4
  %idx.ext1131 = sext i32 %663 to i64
  %add.ptr1132 = getelementptr inbounds i8, i8* %662, i64 %idx.ext1131
  %664 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1133 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %664, i32 0, i32 21
  %aend1134 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1133, i32 0, i32 3
  store i8* %add.ptr1132, i8** %aend1134, align 8
  store i8* %add.ptr1132, i8** %tmp1128
  %665 = load i8*, i8** %tmp1128
  %666 = load i8, i8* %clen, align 1
  %667 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1135 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %667, i32 0, i32 21
  %aptr1136 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1135, i32 0, i32 2
  %668 = load i8*, i8** %aptr1136, align 8
  %incdec.ptr1137 = getelementptr inbounds i8, i8* %668, i32 1
  store i8* %incdec.ptr1137, i8** %aptr1136, align 8
  store i8 %666, i8* %668, align 1
  br label %if.end.1138

if.end.1138:                                      ; preds = %if.else.1093, %if.then.1089
  br label %if.end.1147

if.else.1139:                                     ; preds = %if.else.1077
  %669 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1140 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %669, i32 0, i32 23
  %670 = load %struct._PerlIO**, %struct._PerlIO*** %fio1140, align 8
  %671 = load i8, i8* %clen, align 1
  %conv1141 = zext i8 %671 to i32
  %call1142 = call i32 @PerlIO_putc(%struct._PerlIO** %670, i32 %conv1141)
  %cmp1143 = icmp eq i32 %call1142, -1
  br i1 %cmp1143, label %if.then.1145, label %if.end.1146

if.then.1145:                                     ; preds = %if.else.1139
  store i32 -1, i32* %retval
  br label %return

if.end.1146:                                      ; preds = %if.else.1139
  br label %if.end.1147

if.end.1147:                                      ; preds = %if.end.1146, %if.end.1138
  br label %if.end.1148

if.end.1148:                                      ; preds = %if.end.1147, %if.end.1076
  %672 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1149 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %672, i32 0, i32 23
  %673 = load %struct._PerlIO**, %struct._PerlIO*** %fio1149, align 8
  %tobool1150 = icmp ne %struct._PerlIO** %673, null
  br i1 %tobool1150, label %if.else.1212, label %if.then.1151

if.then.1151:                                     ; preds = %if.end.1148
  %674 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1152 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %674, i32 0, i32 21
  %aptr1153 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1152, i32 0, i32 2
  %675 = load i8*, i8** %aptr1153, align 8
  %676 = load i32, i32* %len, align 4
  %idx.ext1154 = sext i32 %676 to i64
  %add.ptr1155 = getelementptr inbounds i8, i8* %675, i64 %idx.ext1154
  %677 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1156 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %677, i32 0, i32 21
  %aend1157 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1156, i32 0, i32 3
  %678 = load i8*, i8** %aend1157, align 8
  %cmp1158 = icmp ugt i8* %add.ptr1155, %678
  br i1 %cmp1158, label %if.then.1160, label %if.end.1203

if.then.1160:                                     ; preds = %if.then.1151
  %679 = load i32, i32* %len, align 4
  %conv1163 = sext i32 %679 to i64
  %680 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1164 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %680, i32 0, i32 21
  %asiz1165 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1164, i32 0, i32 1
  %681 = load i64, i64* %asiz1165, align 8
  %add1166 = add i64 %conv1163, %681
  %add1167 = add i64 %add1166, 8191
  %and1168 = and i64 %add1167, -8192
  %conv1169 = trunc i64 %and1168 to i32
  store i32 %conv1169, i32* %nsz1162, align 4
  %682 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1172 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %682, i32 0, i32 21
  %aptr1173 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1172, i32 0, i32 2
  %683 = load i8*, i8** %aptr1173, align 8
  %684 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1174 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %684, i32 0, i32 21
  %arena1175 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1174, i32 0, i32 0
  %685 = load i8*, i8** %arena1175, align 8
  %sub.ptr.lhs.cast1176 = ptrtoint i8* %683 to i64
  %sub.ptr.rhs.cast1177 = ptrtoint i8* %685 to i64
  %sub.ptr.sub1178 = sub i64 %sub.ptr.lhs.cast1176, %sub.ptr.rhs.cast1177
  %conv1179 = trunc i64 %sub.ptr.sub1178 to i32
  store i32 %conv1179, i32* %offset1171, align 4
  %686 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1180 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %686, i32 0, i32 21
  %arena1181 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1180, i32 0, i32 0
  %687 = load i8*, i8** %arena1181, align 8
  %688 = load i32, i32* %nsz1162, align 4
  %conv1182 = sext i32 %688 to i64
  %mul1183 = mul i64 %conv1182, 1
  %call1184 = call i8* @Perl_safesysrealloc(i8* %687, i64 %mul1183)
  %689 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1185 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %689, i32 0, i32 21
  %arena1186 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1185, i32 0, i32 0
  store i8* %call1184, i8** %arena1186, align 8
  %690 = load i32, i32* %nsz1162, align 4
  %conv1187 = sext i32 %690 to i64
  %691 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1188 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %691, i32 0, i32 21
  %asiz1189 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1188, i32 0, i32 1
  store i64 %conv1187, i64* %asiz1189, align 8
  %692 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1190 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %692, i32 0, i32 21
  %arena1191 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1190, i32 0, i32 0
  %693 = load i8*, i8** %arena1191, align 8
  %694 = load i32, i32* %offset1171, align 4
  %idx.ext1192 = sext i32 %694 to i64
  %add.ptr1193 = getelementptr inbounds i8, i8* %693, i64 %idx.ext1192
  %695 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1194 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %695, i32 0, i32 21
  %aptr1195 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1194, i32 0, i32 2
  store i8* %add.ptr1193, i8** %aptr1195, align 8
  %696 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1197 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %696, i32 0, i32 21
  %arena1198 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1197, i32 0, i32 0
  %697 = load i8*, i8** %arena1198, align 8
  %698 = load i32, i32* %nsz1162, align 4
  %idx.ext1199 = sext i32 %698 to i64
  %add.ptr1200 = getelementptr inbounds i8, i8* %697, i64 %idx.ext1199
  %699 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1201 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %699, i32 0, i32 21
  %aend1202 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1201, i32 0, i32 3
  store i8* %add.ptr1200, i8** %aend1202, align 8
  store i8* %add.ptr1200, i8** %tmp1196
  %700 = load i8*, i8** %tmp1196
  br label %if.end.1203

if.end.1203:                                      ; preds = %if.then.1160, %if.then.1151
  %701 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1204 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %701, i32 0, i32 21
  %aptr1205 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1204, i32 0, i32 2
  %702 = load i8*, i8** %aptr1205, align 8
  %703 = load i8*, i8** %class, align 8
  %704 = load i32, i32* %len, align 4
  %conv1206 = sext i32 %704 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %702, i8* %703, i64 %conv1206, i32 1, i1 false)
  %705 = load i32, i32* %len, align 4
  %706 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1208 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %706, i32 0, i32 21
  %aptr1209 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1208, i32 0, i32 2
  %707 = load i8*, i8** %aptr1209, align 8
  %idx.ext1210 = sext i32 %705 to i64
  %add.ptr1211 = getelementptr inbounds i8, i8* %707, i64 %idx.ext1210
  store i8* %add.ptr1211, i8** %aptr1209, align 8
  store i8* %add.ptr1211, i8** %tmp1207
  %708 = load i8*, i8** %tmp1207
  br label %if.end.1221

if.else.1212:                                     ; preds = %if.end.1148
  %709 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1213 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %709, i32 0, i32 23
  %710 = load %struct._PerlIO**, %struct._PerlIO*** %fio1213, align 8
  %711 = load i8*, i8** %class, align 8
  %712 = load i32, i32* %len, align 4
  %conv1214 = sext i32 %712 to i64
  %call1215 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %710, i8* %711, i64 %conv1214)
  %713 = load i32, i32* %len, align 4
  %conv1216 = sext i32 %713 to i64
  %cmp1217 = icmp ne i64 %call1215, %conv1216
  br i1 %cmp1217, label %if.then.1219, label %if.end.1220

if.then.1219:                                     ; preds = %if.else.1212
  store i32 -1, i32* %retval
  br label %return

if.end.1220:                                      ; preds = %if.else.1212
  br label %if.end.1221

if.end.1221:                                      ; preds = %if.end.1220, %if.end.1203
  br label %if.end.1222

if.end.1222:                                      ; preds = %if.end.1221, %if.end.903
  %714 = load i8, i8* %flags, align 1
  %conv1223 = zext i8 %714 to i32
  %and1224 = and i32 %conv1223, 8
  %tobool1225 = icmp ne i32 %and1224, 0
  br i1 %tobool1225, label %if.then.1226, label %if.else.1397

if.then.1226:                                     ; preds = %if.end.1222
  %715 = load i64, i64* %len2, align 8
  %conv1228 = trunc i64 %715 to i32
  store i32 %conv1228, i32* %wlen2, align 4
  %716 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder1229 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %716, i32 0, i32 11
  %717 = load i32, i32* %netorder1229, align 4
  %tobool1230 = icmp ne i32 %717, 0
  br i1 %tobool1230, label %if.then.1231, label %if.else.1316

if.then.1231:                                     ; preds = %if.then.1226
  %718 = load i32, i32* %wlen2, align 4
  %conv1234 = sext i32 %718 to i64
  %call1235 = call i64 @Perl_my_htonl(i64 %conv1234)
  %conv1236 = trunc i64 %call1235 to i32
  store i32 %conv1236, i32* %y1233, align 4
  %719 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1237 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %719, i32 0, i32 23
  %720 = load %struct._PerlIO**, %struct._PerlIO*** %fio1237, align 8
  %tobool1238 = icmp ne %struct._PerlIO** %720, null
  br i1 %tobool1238, label %if.else.1308, label %if.then.1239

if.then.1239:                                     ; preds = %if.then.1231
  %721 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1240 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %721, i32 0, i32 21
  %aptr1241 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1240, i32 0, i32 2
  %722 = load i8*, i8** %aptr1241, align 8
  %add.ptr1242 = getelementptr inbounds i8, i8* %722, i64 4
  %723 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1243 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %723, i32 0, i32 21
  %aend1244 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1243, i32 0, i32 3
  %724 = load i8*, i8** %aend1244, align 8
  %cmp1245 = icmp ugt i8* %add.ptr1242, %724
  br i1 %cmp1245, label %if.then.1247, label %if.end.1289

if.then.1247:                                     ; preds = %if.then.1239
  %725 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1250 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %725, i32 0, i32 21
  %asiz1251 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1250, i32 0, i32 1
  %726 = load i64, i64* %asiz1251, align 8
  %add1252 = add i64 4, %726
  %add1253 = add i64 %add1252, 8191
  %and1254 = and i64 %add1253, -8192
  %conv1255 = trunc i64 %and1254 to i32
  store i32 %conv1255, i32* %nsz1249, align 4
  %727 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1258 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %727, i32 0, i32 21
  %aptr1259 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1258, i32 0, i32 2
  %728 = load i8*, i8** %aptr1259, align 8
  %729 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1260 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %729, i32 0, i32 21
  %arena1261 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1260, i32 0, i32 0
  %730 = load i8*, i8** %arena1261, align 8
  %sub.ptr.lhs.cast1262 = ptrtoint i8* %728 to i64
  %sub.ptr.rhs.cast1263 = ptrtoint i8* %730 to i64
  %sub.ptr.sub1264 = sub i64 %sub.ptr.lhs.cast1262, %sub.ptr.rhs.cast1263
  %conv1265 = trunc i64 %sub.ptr.sub1264 to i32
  store i32 %conv1265, i32* %offset1257, align 4
  %731 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1266 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %731, i32 0, i32 21
  %arena1267 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1266, i32 0, i32 0
  %732 = load i8*, i8** %arena1267, align 8
  %733 = load i32, i32* %nsz1249, align 4
  %conv1268 = sext i32 %733 to i64
  %mul1269 = mul i64 %conv1268, 1
  %call1270 = call i8* @Perl_safesysrealloc(i8* %732, i64 %mul1269)
  %734 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1271 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %734, i32 0, i32 21
  %arena1272 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1271, i32 0, i32 0
  store i8* %call1270, i8** %arena1272, align 8
  %735 = load i32, i32* %nsz1249, align 4
  %conv1273 = sext i32 %735 to i64
  %736 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1274 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %736, i32 0, i32 21
  %asiz1275 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1274, i32 0, i32 1
  store i64 %conv1273, i64* %asiz1275, align 8
  %737 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1276 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %737, i32 0, i32 21
  %arena1277 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1276, i32 0, i32 0
  %738 = load i8*, i8** %arena1277, align 8
  %739 = load i32, i32* %offset1257, align 4
  %idx.ext1278 = sext i32 %739 to i64
  %add.ptr1279 = getelementptr inbounds i8, i8* %738, i64 %idx.ext1278
  %740 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1280 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %740, i32 0, i32 21
  %aptr1281 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1280, i32 0, i32 2
  store i8* %add.ptr1279, i8** %aptr1281, align 8
  %741 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1283 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %741, i32 0, i32 21
  %arena1284 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1283, i32 0, i32 0
  %742 = load i8*, i8** %arena1284, align 8
  %743 = load i32, i32* %nsz1249, align 4
  %idx.ext1285 = sext i32 %743 to i64
  %add.ptr1286 = getelementptr inbounds i8, i8* %742, i64 %idx.ext1285
  %744 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1287 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %744, i32 0, i32 21
  %aend1288 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1287, i32 0, i32 3
  store i8* %add.ptr1286, i8** %aend1288, align 8
  store i8* %add.ptr1286, i8** %tmp1282
  %745 = load i8*, i8** %tmp1282
  br label %if.end.1289

if.end.1289:                                      ; preds = %if.then.1247, %if.then.1239
  %746 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1290 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %746, i32 0, i32 21
  %aptr1291 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1290, i32 0, i32 2
  %747 = load i8*, i8** %aptr1291, align 8
  %748 = ptrtoint i8* %747 to i64
  %749 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1292 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %749, i32 0, i32 21
  %aptr1293 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1292, i32 0, i32 2
  %750 = load i8*, i8** %aptr1293, align 8
  %751 = ptrtoint i8* %750 to i64
  %and1294 = and i64 %751, -4
  %cmp1295 = icmp eq i64 %748, %and1294
  br i1 %cmp1295, label %if.then.1297, label %if.else.1300

if.then.1297:                                     ; preds = %if.end.1289
  %752 = load i32, i32* %y1233, align 4
  %753 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1298 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %753, i32 0, i32 21
  %aptr1299 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1298, i32 0, i32 2
  %754 = load i8*, i8** %aptr1299, align 8
  %755 = bitcast i8* %754 to i32*
  store i32 %752, i32* %755, align 4
  br label %if.end.1303

if.else.1300:                                     ; preds = %if.end.1289
  %756 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1301 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %756, i32 0, i32 21
  %aptr1302 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1301, i32 0, i32 2
  %757 = load i8*, i8** %aptr1302, align 8
  %758 = bitcast i32* %y1233 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %757, i8* %758, i64 4, i32 1, i1 false)
  br label %if.end.1303

if.end.1303:                                      ; preds = %if.else.1300, %if.then.1297
  %759 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1305 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %759, i32 0, i32 21
  %aptr1306 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1305, i32 0, i32 2
  %760 = load i8*, i8** %aptr1306, align 8
  %add.ptr1307 = getelementptr inbounds i8, i8* %760, i64 4
  store i8* %add.ptr1307, i8** %aptr1306, align 8
  store i8* %add.ptr1307, i8** %tmp1304
  %761 = load i8*, i8** %tmp1304
  br label %if.end.1315

if.else.1308:                                     ; preds = %if.then.1231
  %762 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1309 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %762, i32 0, i32 23
  %763 = load %struct._PerlIO**, %struct._PerlIO*** %fio1309, align 8
  %764 = bitcast i32* %y1233 to i8*
  %call1310 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %763, i8* %764, i64 4)
  %cmp1311 = icmp ne i64 %call1310, 4
  br i1 %cmp1311, label %if.then.1313, label %if.end.1314

if.then.1313:                                     ; preds = %if.else.1308
  store i32 -1, i32* %retval
  br label %return

if.end.1314:                                      ; preds = %if.else.1308
  br label %if.end.1315

if.end.1315:                                      ; preds = %if.end.1314, %if.end.1303
  br label %if.end.1396

if.else.1316:                                     ; preds = %if.then.1226
  %765 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1317 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %765, i32 0, i32 23
  %766 = load %struct._PerlIO**, %struct._PerlIO*** %fio1317, align 8
  %tobool1318 = icmp ne %struct._PerlIO** %766, null
  br i1 %tobool1318, label %if.else.1388, label %if.then.1319

if.then.1319:                                     ; preds = %if.else.1316
  %767 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1320 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %767, i32 0, i32 21
  %aptr1321 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1320, i32 0, i32 2
  %768 = load i8*, i8** %aptr1321, align 8
  %add.ptr1322 = getelementptr inbounds i8, i8* %768, i64 4
  %769 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1323 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %769, i32 0, i32 21
  %aend1324 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1323, i32 0, i32 3
  %770 = load i8*, i8** %aend1324, align 8
  %cmp1325 = icmp ugt i8* %add.ptr1322, %770
  br i1 %cmp1325, label %if.then.1327, label %if.end.1369

if.then.1327:                                     ; preds = %if.then.1319
  %771 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1330 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %771, i32 0, i32 21
  %asiz1331 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1330, i32 0, i32 1
  %772 = load i64, i64* %asiz1331, align 8
  %add1332 = add i64 4, %772
  %add1333 = add i64 %add1332, 8191
  %and1334 = and i64 %add1333, -8192
  %conv1335 = trunc i64 %and1334 to i32
  store i32 %conv1335, i32* %nsz1329, align 4
  %773 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1338 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %773, i32 0, i32 21
  %aptr1339 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1338, i32 0, i32 2
  %774 = load i8*, i8** %aptr1339, align 8
  %775 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1340 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %775, i32 0, i32 21
  %arena1341 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1340, i32 0, i32 0
  %776 = load i8*, i8** %arena1341, align 8
  %sub.ptr.lhs.cast1342 = ptrtoint i8* %774 to i64
  %sub.ptr.rhs.cast1343 = ptrtoint i8* %776 to i64
  %sub.ptr.sub1344 = sub i64 %sub.ptr.lhs.cast1342, %sub.ptr.rhs.cast1343
  %conv1345 = trunc i64 %sub.ptr.sub1344 to i32
  store i32 %conv1345, i32* %offset1337, align 4
  %777 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1346 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %777, i32 0, i32 21
  %arena1347 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1346, i32 0, i32 0
  %778 = load i8*, i8** %arena1347, align 8
  %779 = load i32, i32* %nsz1329, align 4
  %conv1348 = sext i32 %779 to i64
  %mul1349 = mul i64 %conv1348, 1
  %call1350 = call i8* @Perl_safesysrealloc(i8* %778, i64 %mul1349)
  %780 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1351 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %780, i32 0, i32 21
  %arena1352 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1351, i32 0, i32 0
  store i8* %call1350, i8** %arena1352, align 8
  %781 = load i32, i32* %nsz1329, align 4
  %conv1353 = sext i32 %781 to i64
  %782 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1354 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %782, i32 0, i32 21
  %asiz1355 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1354, i32 0, i32 1
  store i64 %conv1353, i64* %asiz1355, align 8
  %783 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1356 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %783, i32 0, i32 21
  %arena1357 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1356, i32 0, i32 0
  %784 = load i8*, i8** %arena1357, align 8
  %785 = load i32, i32* %offset1337, align 4
  %idx.ext1358 = sext i32 %785 to i64
  %add.ptr1359 = getelementptr inbounds i8, i8* %784, i64 %idx.ext1358
  %786 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1360 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %786, i32 0, i32 21
  %aptr1361 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1360, i32 0, i32 2
  store i8* %add.ptr1359, i8** %aptr1361, align 8
  %787 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1363 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %787, i32 0, i32 21
  %arena1364 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1363, i32 0, i32 0
  %788 = load i8*, i8** %arena1364, align 8
  %789 = load i32, i32* %nsz1329, align 4
  %idx.ext1365 = sext i32 %789 to i64
  %add.ptr1366 = getelementptr inbounds i8, i8* %788, i64 %idx.ext1365
  %790 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1367 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %790, i32 0, i32 21
  %aend1368 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1367, i32 0, i32 3
  store i8* %add.ptr1366, i8** %aend1368, align 8
  store i8* %add.ptr1366, i8** %tmp1362
  %791 = load i8*, i8** %tmp1362
  br label %if.end.1369

if.end.1369:                                      ; preds = %if.then.1327, %if.then.1319
  %792 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1370 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %792, i32 0, i32 21
  %aptr1371 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1370, i32 0, i32 2
  %793 = load i8*, i8** %aptr1371, align 8
  %794 = ptrtoint i8* %793 to i64
  %795 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1372 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %795, i32 0, i32 21
  %aptr1373 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1372, i32 0, i32 2
  %796 = load i8*, i8** %aptr1373, align 8
  %797 = ptrtoint i8* %796 to i64
  %and1374 = and i64 %797, -4
  %cmp1375 = icmp eq i64 %794, %and1374
  br i1 %cmp1375, label %if.then.1377, label %if.else.1380

if.then.1377:                                     ; preds = %if.end.1369
  %798 = load i32, i32* %wlen2, align 4
  %799 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1378 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %799, i32 0, i32 21
  %aptr1379 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1378, i32 0, i32 2
  %800 = load i8*, i8** %aptr1379, align 8
  %801 = bitcast i8* %800 to i32*
  store i32 %798, i32* %801, align 4
  br label %if.end.1383

if.else.1380:                                     ; preds = %if.end.1369
  %802 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1381 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %802, i32 0, i32 21
  %aptr1382 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1381, i32 0, i32 2
  %803 = load i8*, i8** %aptr1382, align 8
  %804 = bitcast i32* %wlen2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %803, i8* %804, i64 4, i32 1, i1 false)
  br label %if.end.1383

if.end.1383:                                      ; preds = %if.else.1380, %if.then.1377
  %805 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1385 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %805, i32 0, i32 21
  %aptr1386 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1385, i32 0, i32 2
  %806 = load i8*, i8** %aptr1386, align 8
  %add.ptr1387 = getelementptr inbounds i8, i8* %806, i64 4
  store i8* %add.ptr1387, i8** %aptr1386, align 8
  store i8* %add.ptr1387, i8** %tmp1384
  %807 = load i8*, i8** %tmp1384
  br label %if.end.1395

if.else.1388:                                     ; preds = %if.else.1316
  %808 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1389 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %808, i32 0, i32 23
  %809 = load %struct._PerlIO**, %struct._PerlIO*** %fio1389, align 8
  %810 = bitcast i32* %wlen2 to i8*
  %call1390 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %809, i8* %810, i64 4)
  %cmp1391 = icmp ne i64 %call1390, 4
  br i1 %cmp1391, label %if.then.1393, label %if.end.1394

if.then.1393:                                     ; preds = %if.else.1388
  store i32 -1, i32* %retval
  br label %return

if.end.1394:                                      ; preds = %if.else.1388
  br label %if.end.1395

if.end.1395:                                      ; preds = %if.end.1394, %if.end.1383
  br label %if.end.1396

if.end.1396:                                      ; preds = %if.end.1395, %if.end.1315
  br label %if.end.1469

if.else.1397:                                     ; preds = %if.end.1222
  %811 = load i64, i64* %len2, align 8
  %conv1400 = trunc i64 %811 to i8
  store i8 %conv1400, i8* %clen1399, align 1
  %812 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1401 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %812, i32 0, i32 23
  %813 = load %struct._PerlIO**, %struct._PerlIO*** %fio1401, align 8
  %tobool1402 = icmp ne %struct._PerlIO** %813, null
  br i1 %tobool1402, label %if.else.1460, label %if.then.1403

if.then.1403:                                     ; preds = %if.else.1397
  %814 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1404 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %814, i32 0, i32 21
  %aptr1405 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1404, i32 0, i32 2
  %815 = load i8*, i8** %aptr1405, align 8
  %816 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1406 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %816, i32 0, i32 21
  %aend1407 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1406, i32 0, i32 3
  %817 = load i8*, i8** %aend1407, align 8
  %cmp1408 = icmp ult i8* %815, %817
  br i1 %cmp1408, label %if.then.1410, label %if.else.1414

if.then.1410:                                     ; preds = %if.then.1403
  %818 = load i8, i8* %clen1399, align 1
  %819 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1411 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %819, i32 0, i32 21
  %aptr1412 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1411, i32 0, i32 2
  %820 = load i8*, i8** %aptr1412, align 8
  %incdec.ptr1413 = getelementptr inbounds i8, i8* %820, i32 1
  store i8* %incdec.ptr1413, i8** %aptr1412, align 8
  store i8 %818, i8* %820, align 1
  br label %if.end.1459

if.else.1414:                                     ; preds = %if.then.1403
  %821 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1417 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %821, i32 0, i32 21
  %asiz1418 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1417, i32 0, i32 1
  %822 = load i64, i64* %asiz1418, align 8
  %add1419 = add i64 1, %822
  %add1420 = add i64 %add1419, 8191
  %and1421 = and i64 %add1420, -8192
  %conv1422 = trunc i64 %and1421 to i32
  store i32 %conv1422, i32* %nsz1416, align 4
  %823 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1425 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %823, i32 0, i32 21
  %aptr1426 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1425, i32 0, i32 2
  %824 = load i8*, i8** %aptr1426, align 8
  %825 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1427 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %825, i32 0, i32 21
  %arena1428 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1427, i32 0, i32 0
  %826 = load i8*, i8** %arena1428, align 8
  %sub.ptr.lhs.cast1429 = ptrtoint i8* %824 to i64
  %sub.ptr.rhs.cast1430 = ptrtoint i8* %826 to i64
  %sub.ptr.sub1431 = sub i64 %sub.ptr.lhs.cast1429, %sub.ptr.rhs.cast1430
  %conv1432 = trunc i64 %sub.ptr.sub1431 to i32
  store i32 %conv1432, i32* %offset1424, align 4
  %827 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1433 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %827, i32 0, i32 21
  %arena1434 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1433, i32 0, i32 0
  %828 = load i8*, i8** %arena1434, align 8
  %829 = load i32, i32* %nsz1416, align 4
  %conv1435 = sext i32 %829 to i64
  %mul1436 = mul i64 %conv1435, 1
  %call1437 = call i8* @Perl_safesysrealloc(i8* %828, i64 %mul1436)
  %830 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1438 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %830, i32 0, i32 21
  %arena1439 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1438, i32 0, i32 0
  store i8* %call1437, i8** %arena1439, align 8
  %831 = load i32, i32* %nsz1416, align 4
  %conv1440 = sext i32 %831 to i64
  %832 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1441 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %832, i32 0, i32 21
  %asiz1442 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1441, i32 0, i32 1
  store i64 %conv1440, i64* %asiz1442, align 8
  %833 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1443 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %833, i32 0, i32 21
  %arena1444 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1443, i32 0, i32 0
  %834 = load i8*, i8** %arena1444, align 8
  %835 = load i32, i32* %offset1424, align 4
  %idx.ext1445 = sext i32 %835 to i64
  %add.ptr1446 = getelementptr inbounds i8, i8* %834, i64 %idx.ext1445
  %836 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1447 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %836, i32 0, i32 21
  %aptr1448 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1447, i32 0, i32 2
  store i8* %add.ptr1446, i8** %aptr1448, align 8
  %837 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1450 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %837, i32 0, i32 21
  %arena1451 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1450, i32 0, i32 0
  %838 = load i8*, i8** %arena1451, align 8
  %839 = load i32, i32* %nsz1416, align 4
  %idx.ext1452 = sext i32 %839 to i64
  %add.ptr1453 = getelementptr inbounds i8, i8* %838, i64 %idx.ext1452
  %840 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1454 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %840, i32 0, i32 21
  %aend1455 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1454, i32 0, i32 3
  store i8* %add.ptr1453, i8** %aend1455, align 8
  store i8* %add.ptr1453, i8** %tmp1449
  %841 = load i8*, i8** %tmp1449
  %842 = load i8, i8* %clen1399, align 1
  %843 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1456 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %843, i32 0, i32 21
  %aptr1457 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1456, i32 0, i32 2
  %844 = load i8*, i8** %aptr1457, align 8
  %incdec.ptr1458 = getelementptr inbounds i8, i8* %844, i32 1
  store i8* %incdec.ptr1458, i8** %aptr1457, align 8
  store i8 %842, i8* %844, align 1
  br label %if.end.1459

if.end.1459:                                      ; preds = %if.else.1414, %if.then.1410
  br label %if.end.1468

if.else.1460:                                     ; preds = %if.else.1397
  %845 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1461 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %845, i32 0, i32 23
  %846 = load %struct._PerlIO**, %struct._PerlIO*** %fio1461, align 8
  %847 = load i8, i8* %clen1399, align 1
  %conv1462 = zext i8 %847 to i32
  %call1463 = call i32 @PerlIO_putc(%struct._PerlIO** %846, i32 %conv1462)
  %cmp1464 = icmp eq i32 %call1463, -1
  br i1 %cmp1464, label %if.then.1466, label %if.end.1467

if.then.1466:                                     ; preds = %if.else.1460
  store i32 -1, i32* %retval
  br label %return

if.end.1467:                                      ; preds = %if.else.1460
  br label %if.end.1468

if.end.1468:                                      ; preds = %if.end.1467, %if.end.1459
  br label %if.end.1469

if.end.1469:                                      ; preds = %if.end.1468, %if.end.1396
  %848 = load i64, i64* %len2, align 8
  %tobool1470 = icmp ne i64 %848, 0
  br i1 %tobool1470, label %if.then.1471, label %if.end.1539

if.then.1471:                                     ; preds = %if.end.1469
  %849 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1472 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %849, i32 0, i32 23
  %850 = load %struct._PerlIO**, %struct._PerlIO*** %fio1472, align 8
  %tobool1473 = icmp ne %struct._PerlIO** %850, null
  br i1 %tobool1473, label %if.else.1531, label %if.then.1474

if.then.1474:                                     ; preds = %if.then.1471
  %851 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1475 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %851, i32 0, i32 21
  %aptr1476 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1475, i32 0, i32 2
  %852 = load i8*, i8** %aptr1476, align 8
  %853 = load i64, i64* %len2, align 8
  %add.ptr1477 = getelementptr inbounds i8, i8* %852, i64 %853
  %854 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1478 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %854, i32 0, i32 21
  %aend1479 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1478, i32 0, i32 3
  %855 = load i8*, i8** %aend1479, align 8
  %cmp1480 = icmp ugt i8* %add.ptr1477, %855
  br i1 %cmp1480, label %if.then.1482, label %if.end.1524

if.then.1482:                                     ; preds = %if.then.1474
  %856 = load i64, i64* %len2, align 8
  %857 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1485 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %857, i32 0, i32 21
  %asiz1486 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1485, i32 0, i32 1
  %858 = load i64, i64* %asiz1486, align 8
  %add1487 = add i64 %856, %858
  %add1488 = add i64 %add1487, 8191
  %and1489 = and i64 %add1488, -8192
  %conv1490 = trunc i64 %and1489 to i32
  store i32 %conv1490, i32* %nsz1484, align 4
  %859 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1493 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %859, i32 0, i32 21
  %aptr1494 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1493, i32 0, i32 2
  %860 = load i8*, i8** %aptr1494, align 8
  %861 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1495 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %861, i32 0, i32 21
  %arena1496 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1495, i32 0, i32 0
  %862 = load i8*, i8** %arena1496, align 8
  %sub.ptr.lhs.cast1497 = ptrtoint i8* %860 to i64
  %sub.ptr.rhs.cast1498 = ptrtoint i8* %862 to i64
  %sub.ptr.sub1499 = sub i64 %sub.ptr.lhs.cast1497, %sub.ptr.rhs.cast1498
  %conv1500 = trunc i64 %sub.ptr.sub1499 to i32
  store i32 %conv1500, i32* %offset1492, align 4
  %863 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1501 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %863, i32 0, i32 21
  %arena1502 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1501, i32 0, i32 0
  %864 = load i8*, i8** %arena1502, align 8
  %865 = load i32, i32* %nsz1484, align 4
  %conv1503 = sext i32 %865 to i64
  %mul1504 = mul i64 %conv1503, 1
  %call1505 = call i8* @Perl_safesysrealloc(i8* %864, i64 %mul1504)
  %866 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1506 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %866, i32 0, i32 21
  %arena1507 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1506, i32 0, i32 0
  store i8* %call1505, i8** %arena1507, align 8
  %867 = load i32, i32* %nsz1484, align 4
  %conv1508 = sext i32 %867 to i64
  %868 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1509 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %868, i32 0, i32 21
  %asiz1510 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1509, i32 0, i32 1
  store i64 %conv1508, i64* %asiz1510, align 8
  %869 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1511 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %869, i32 0, i32 21
  %arena1512 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1511, i32 0, i32 0
  %870 = load i8*, i8** %arena1512, align 8
  %871 = load i32, i32* %offset1492, align 4
  %idx.ext1513 = sext i32 %871 to i64
  %add.ptr1514 = getelementptr inbounds i8, i8* %870, i64 %idx.ext1513
  %872 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1515 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %872, i32 0, i32 21
  %aptr1516 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1515, i32 0, i32 2
  store i8* %add.ptr1514, i8** %aptr1516, align 8
  %873 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1518 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %873, i32 0, i32 21
  %arena1519 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1518, i32 0, i32 0
  %874 = load i8*, i8** %arena1519, align 8
  %875 = load i32, i32* %nsz1484, align 4
  %idx.ext1520 = sext i32 %875 to i64
  %add.ptr1521 = getelementptr inbounds i8, i8* %874, i64 %idx.ext1520
  %876 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1522 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %876, i32 0, i32 21
  %aend1523 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1522, i32 0, i32 3
  store i8* %add.ptr1521, i8** %aend1523, align 8
  store i8* %add.ptr1521, i8** %tmp1517
  %877 = load i8*, i8** %tmp1517
  br label %if.end.1524

if.end.1524:                                      ; preds = %if.then.1482, %if.then.1474
  %878 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1525 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %878, i32 0, i32 21
  %aptr1526 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1525, i32 0, i32 2
  %879 = load i8*, i8** %aptr1526, align 8
  %880 = load i8*, i8** %pv, align 8
  %881 = load i64, i64* %len2, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %879, i8* %880, i64 %881, i32 1, i1 false)
  %882 = load i64, i64* %len2, align 8
  %883 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1528 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %883, i32 0, i32 21
  %aptr1529 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1528, i32 0, i32 2
  %884 = load i8*, i8** %aptr1529, align 8
  %add.ptr1530 = getelementptr inbounds i8, i8* %884, i64 %882
  store i8* %add.ptr1530, i8** %aptr1529, align 8
  store i8* %add.ptr1530, i8** %tmp1527
  %885 = load i8*, i8** %tmp1527
  br label %if.end.1538

if.else.1531:                                     ; preds = %if.then.1471
  %886 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1532 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %886, i32 0, i32 23
  %887 = load %struct._PerlIO**, %struct._PerlIO*** %fio1532, align 8
  %888 = load i8*, i8** %pv, align 8
  %889 = load i64, i64* %len2, align 8
  %call1533 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %887, i8* %888, i64 %889)
  %890 = load i64, i64* %len2, align 8
  %cmp1534 = icmp ne i64 %call1533, %890
  br i1 %cmp1534, label %if.then.1536, label %if.end.1537

if.then.1536:                                     ; preds = %if.else.1531
  store i32 -1, i32* %retval
  br label %return

if.end.1537:                                      ; preds = %if.else.1531
  br label %if.end.1538

if.end.1538:                                      ; preds = %if.end.1537, %if.end.1524
  br label %if.end.1539

if.end.1539:                                      ; preds = %if.end.1538, %if.end.1469
  %891 = load i8, i8* %flags, align 1
  %conv1540 = zext i8 %891 to i32
  %and1541 = and i32 %conv1540, 128
  %tobool1542 = icmp ne i32 %and1541, 0
  br i1 %tobool1542, label %if.then.1543, label %if.end.1884

if.then.1543:                                     ; preds = %if.end.1539
  %892 = load i32, i32* %count, align 4
  %sub = sub nsw i32 %892, 1
  store i32 %sub, i32* %len3, align 4
  %893 = load i8, i8* %flags, align 1
  %conv1545 = zext i8 %893 to i32
  %and1546 = and i32 %conv1545, 16
  %tobool1547 = icmp ne i32 %and1546, 0
  br i1 %tobool1547, label %if.then.1548, label %if.else.1717

if.then.1548:                                     ; preds = %if.then.1543
  %894 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder1549 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %894, i32 0, i32 11
  %895 = load i32, i32* %netorder1549, align 4
  %tobool1550 = icmp ne i32 %895, 0
  br i1 %tobool1550, label %if.then.1551, label %if.else.1636

if.then.1551:                                     ; preds = %if.then.1548
  %896 = load i32, i32* %len3, align 4
  %conv1554 = sext i32 %896 to i64
  %call1555 = call i64 @Perl_my_htonl(i64 %conv1554)
  %conv1556 = trunc i64 %call1555 to i32
  store i32 %conv1556, i32* %y1553, align 4
  %897 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1557 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %897, i32 0, i32 23
  %898 = load %struct._PerlIO**, %struct._PerlIO*** %fio1557, align 8
  %tobool1558 = icmp ne %struct._PerlIO** %898, null
  br i1 %tobool1558, label %if.else.1628, label %if.then.1559

if.then.1559:                                     ; preds = %if.then.1551
  %899 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1560 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %899, i32 0, i32 21
  %aptr1561 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1560, i32 0, i32 2
  %900 = load i8*, i8** %aptr1561, align 8
  %add.ptr1562 = getelementptr inbounds i8, i8* %900, i64 4
  %901 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1563 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %901, i32 0, i32 21
  %aend1564 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1563, i32 0, i32 3
  %902 = load i8*, i8** %aend1564, align 8
  %cmp1565 = icmp ugt i8* %add.ptr1562, %902
  br i1 %cmp1565, label %if.then.1567, label %if.end.1609

if.then.1567:                                     ; preds = %if.then.1559
  %903 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1570 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %903, i32 0, i32 21
  %asiz1571 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1570, i32 0, i32 1
  %904 = load i64, i64* %asiz1571, align 8
  %add1572 = add i64 4, %904
  %add1573 = add i64 %add1572, 8191
  %and1574 = and i64 %add1573, -8192
  %conv1575 = trunc i64 %and1574 to i32
  store i32 %conv1575, i32* %nsz1569, align 4
  %905 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1578 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %905, i32 0, i32 21
  %aptr1579 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1578, i32 0, i32 2
  %906 = load i8*, i8** %aptr1579, align 8
  %907 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1580 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %907, i32 0, i32 21
  %arena1581 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1580, i32 0, i32 0
  %908 = load i8*, i8** %arena1581, align 8
  %sub.ptr.lhs.cast1582 = ptrtoint i8* %906 to i64
  %sub.ptr.rhs.cast1583 = ptrtoint i8* %908 to i64
  %sub.ptr.sub1584 = sub i64 %sub.ptr.lhs.cast1582, %sub.ptr.rhs.cast1583
  %conv1585 = trunc i64 %sub.ptr.sub1584 to i32
  store i32 %conv1585, i32* %offset1577, align 4
  %909 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1586 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %909, i32 0, i32 21
  %arena1587 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1586, i32 0, i32 0
  %910 = load i8*, i8** %arena1587, align 8
  %911 = load i32, i32* %nsz1569, align 4
  %conv1588 = sext i32 %911 to i64
  %mul1589 = mul i64 %conv1588, 1
  %call1590 = call i8* @Perl_safesysrealloc(i8* %910, i64 %mul1589)
  %912 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1591 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %912, i32 0, i32 21
  %arena1592 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1591, i32 0, i32 0
  store i8* %call1590, i8** %arena1592, align 8
  %913 = load i32, i32* %nsz1569, align 4
  %conv1593 = sext i32 %913 to i64
  %914 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1594 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %914, i32 0, i32 21
  %asiz1595 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1594, i32 0, i32 1
  store i64 %conv1593, i64* %asiz1595, align 8
  %915 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1596 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %915, i32 0, i32 21
  %arena1597 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1596, i32 0, i32 0
  %916 = load i8*, i8** %arena1597, align 8
  %917 = load i32, i32* %offset1577, align 4
  %idx.ext1598 = sext i32 %917 to i64
  %add.ptr1599 = getelementptr inbounds i8, i8* %916, i64 %idx.ext1598
  %918 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1600 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %918, i32 0, i32 21
  %aptr1601 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1600, i32 0, i32 2
  store i8* %add.ptr1599, i8** %aptr1601, align 8
  %919 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1603 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %919, i32 0, i32 21
  %arena1604 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1603, i32 0, i32 0
  %920 = load i8*, i8** %arena1604, align 8
  %921 = load i32, i32* %nsz1569, align 4
  %idx.ext1605 = sext i32 %921 to i64
  %add.ptr1606 = getelementptr inbounds i8, i8* %920, i64 %idx.ext1605
  %922 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1607 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %922, i32 0, i32 21
  %aend1608 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1607, i32 0, i32 3
  store i8* %add.ptr1606, i8** %aend1608, align 8
  store i8* %add.ptr1606, i8** %tmp1602
  %923 = load i8*, i8** %tmp1602
  br label %if.end.1609

if.end.1609:                                      ; preds = %if.then.1567, %if.then.1559
  %924 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1610 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %924, i32 0, i32 21
  %aptr1611 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1610, i32 0, i32 2
  %925 = load i8*, i8** %aptr1611, align 8
  %926 = ptrtoint i8* %925 to i64
  %927 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1612 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %927, i32 0, i32 21
  %aptr1613 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1612, i32 0, i32 2
  %928 = load i8*, i8** %aptr1613, align 8
  %929 = ptrtoint i8* %928 to i64
  %and1614 = and i64 %929, -4
  %cmp1615 = icmp eq i64 %926, %and1614
  br i1 %cmp1615, label %if.then.1617, label %if.else.1620

if.then.1617:                                     ; preds = %if.end.1609
  %930 = load i32, i32* %y1553, align 4
  %931 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1618 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %931, i32 0, i32 21
  %aptr1619 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1618, i32 0, i32 2
  %932 = load i8*, i8** %aptr1619, align 8
  %933 = bitcast i8* %932 to i32*
  store i32 %930, i32* %933, align 4
  br label %if.end.1623

if.else.1620:                                     ; preds = %if.end.1609
  %934 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1621 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %934, i32 0, i32 21
  %aptr1622 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1621, i32 0, i32 2
  %935 = load i8*, i8** %aptr1622, align 8
  %936 = bitcast i32* %y1553 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %935, i8* %936, i64 4, i32 1, i1 false)
  br label %if.end.1623

if.end.1623:                                      ; preds = %if.else.1620, %if.then.1617
  %937 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1625 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %937, i32 0, i32 21
  %aptr1626 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1625, i32 0, i32 2
  %938 = load i8*, i8** %aptr1626, align 8
  %add.ptr1627 = getelementptr inbounds i8, i8* %938, i64 4
  store i8* %add.ptr1627, i8** %aptr1626, align 8
  store i8* %add.ptr1627, i8** %tmp1624
  %939 = load i8*, i8** %tmp1624
  br label %if.end.1635

if.else.1628:                                     ; preds = %if.then.1551
  %940 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1629 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %940, i32 0, i32 23
  %941 = load %struct._PerlIO**, %struct._PerlIO*** %fio1629, align 8
  %942 = bitcast i32* %y1553 to i8*
  %call1630 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %941, i8* %942, i64 4)
  %cmp1631 = icmp ne i64 %call1630, 4
  br i1 %cmp1631, label %if.then.1633, label %if.end.1634

if.then.1633:                                     ; preds = %if.else.1628
  store i32 -1, i32* %retval
  br label %return

if.end.1634:                                      ; preds = %if.else.1628
  br label %if.end.1635

if.end.1635:                                      ; preds = %if.end.1634, %if.end.1623
  br label %if.end.1716

if.else.1636:                                     ; preds = %if.then.1548
  %943 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1637 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %943, i32 0, i32 23
  %944 = load %struct._PerlIO**, %struct._PerlIO*** %fio1637, align 8
  %tobool1638 = icmp ne %struct._PerlIO** %944, null
  br i1 %tobool1638, label %if.else.1708, label %if.then.1639

if.then.1639:                                     ; preds = %if.else.1636
  %945 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1640 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %945, i32 0, i32 21
  %aptr1641 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1640, i32 0, i32 2
  %946 = load i8*, i8** %aptr1641, align 8
  %add.ptr1642 = getelementptr inbounds i8, i8* %946, i64 4
  %947 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1643 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %947, i32 0, i32 21
  %aend1644 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1643, i32 0, i32 3
  %948 = load i8*, i8** %aend1644, align 8
  %cmp1645 = icmp ugt i8* %add.ptr1642, %948
  br i1 %cmp1645, label %if.then.1647, label %if.end.1689

if.then.1647:                                     ; preds = %if.then.1639
  %949 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1650 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %949, i32 0, i32 21
  %asiz1651 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1650, i32 0, i32 1
  %950 = load i64, i64* %asiz1651, align 8
  %add1652 = add i64 4, %950
  %add1653 = add i64 %add1652, 8191
  %and1654 = and i64 %add1653, -8192
  %conv1655 = trunc i64 %and1654 to i32
  store i32 %conv1655, i32* %nsz1649, align 4
  %951 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1658 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %951, i32 0, i32 21
  %aptr1659 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1658, i32 0, i32 2
  %952 = load i8*, i8** %aptr1659, align 8
  %953 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1660 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %953, i32 0, i32 21
  %arena1661 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1660, i32 0, i32 0
  %954 = load i8*, i8** %arena1661, align 8
  %sub.ptr.lhs.cast1662 = ptrtoint i8* %952 to i64
  %sub.ptr.rhs.cast1663 = ptrtoint i8* %954 to i64
  %sub.ptr.sub1664 = sub i64 %sub.ptr.lhs.cast1662, %sub.ptr.rhs.cast1663
  %conv1665 = trunc i64 %sub.ptr.sub1664 to i32
  store i32 %conv1665, i32* %offset1657, align 4
  %955 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1666 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %955, i32 0, i32 21
  %arena1667 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1666, i32 0, i32 0
  %956 = load i8*, i8** %arena1667, align 8
  %957 = load i32, i32* %nsz1649, align 4
  %conv1668 = sext i32 %957 to i64
  %mul1669 = mul i64 %conv1668, 1
  %call1670 = call i8* @Perl_safesysrealloc(i8* %956, i64 %mul1669)
  %958 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1671 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %958, i32 0, i32 21
  %arena1672 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1671, i32 0, i32 0
  store i8* %call1670, i8** %arena1672, align 8
  %959 = load i32, i32* %nsz1649, align 4
  %conv1673 = sext i32 %959 to i64
  %960 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1674 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %960, i32 0, i32 21
  %asiz1675 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1674, i32 0, i32 1
  store i64 %conv1673, i64* %asiz1675, align 8
  %961 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1676 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %961, i32 0, i32 21
  %arena1677 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1676, i32 0, i32 0
  %962 = load i8*, i8** %arena1677, align 8
  %963 = load i32, i32* %offset1657, align 4
  %idx.ext1678 = sext i32 %963 to i64
  %add.ptr1679 = getelementptr inbounds i8, i8* %962, i64 %idx.ext1678
  %964 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1680 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %964, i32 0, i32 21
  %aptr1681 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1680, i32 0, i32 2
  store i8* %add.ptr1679, i8** %aptr1681, align 8
  %965 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1683 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %965, i32 0, i32 21
  %arena1684 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1683, i32 0, i32 0
  %966 = load i8*, i8** %arena1684, align 8
  %967 = load i32, i32* %nsz1649, align 4
  %idx.ext1685 = sext i32 %967 to i64
  %add.ptr1686 = getelementptr inbounds i8, i8* %966, i64 %idx.ext1685
  %968 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1687 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %968, i32 0, i32 21
  %aend1688 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1687, i32 0, i32 3
  store i8* %add.ptr1686, i8** %aend1688, align 8
  store i8* %add.ptr1686, i8** %tmp1682
  %969 = load i8*, i8** %tmp1682
  br label %if.end.1689

if.end.1689:                                      ; preds = %if.then.1647, %if.then.1639
  %970 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1690 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %970, i32 0, i32 21
  %aptr1691 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1690, i32 0, i32 2
  %971 = load i8*, i8** %aptr1691, align 8
  %972 = ptrtoint i8* %971 to i64
  %973 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1692 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %973, i32 0, i32 21
  %aptr1693 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1692, i32 0, i32 2
  %974 = load i8*, i8** %aptr1693, align 8
  %975 = ptrtoint i8* %974 to i64
  %and1694 = and i64 %975, -4
  %cmp1695 = icmp eq i64 %972, %and1694
  br i1 %cmp1695, label %if.then.1697, label %if.else.1700

if.then.1697:                                     ; preds = %if.end.1689
  %976 = load i32, i32* %len3, align 4
  %977 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1698 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %977, i32 0, i32 21
  %aptr1699 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1698, i32 0, i32 2
  %978 = load i8*, i8** %aptr1699, align 8
  %979 = bitcast i8* %978 to i32*
  store i32 %976, i32* %979, align 4
  br label %if.end.1703

if.else.1700:                                     ; preds = %if.end.1689
  %980 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1701 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %980, i32 0, i32 21
  %aptr1702 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1701, i32 0, i32 2
  %981 = load i8*, i8** %aptr1702, align 8
  %982 = bitcast i32* %len3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %981, i8* %982, i64 4, i32 1, i1 false)
  br label %if.end.1703

if.end.1703:                                      ; preds = %if.else.1700, %if.then.1697
  %983 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1705 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %983, i32 0, i32 21
  %aptr1706 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1705, i32 0, i32 2
  %984 = load i8*, i8** %aptr1706, align 8
  %add.ptr1707 = getelementptr inbounds i8, i8* %984, i64 4
  store i8* %add.ptr1707, i8** %aptr1706, align 8
  store i8* %add.ptr1707, i8** %tmp1704
  %985 = load i8*, i8** %tmp1704
  br label %if.end.1715

if.else.1708:                                     ; preds = %if.else.1636
  %986 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1709 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %986, i32 0, i32 23
  %987 = load %struct._PerlIO**, %struct._PerlIO*** %fio1709, align 8
  %988 = bitcast i32* %len3 to i8*
  %call1710 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %987, i8* %988, i64 4)
  %cmp1711 = icmp ne i64 %call1710, 4
  br i1 %cmp1711, label %if.then.1713, label %if.end.1714

if.then.1713:                                     ; preds = %if.else.1708
  store i32 -1, i32* %retval
  br label %return

if.end.1714:                                      ; preds = %if.else.1708
  br label %if.end.1715

if.end.1715:                                      ; preds = %if.end.1714, %if.end.1703
  br label %if.end.1716

if.end.1716:                                      ; preds = %if.end.1715, %if.end.1635
  br label %if.end.1789

if.else.1717:                                     ; preds = %if.then.1543
  %989 = load i32, i32* %len3, align 4
  %conv1720 = trunc i32 %989 to i8
  store i8 %conv1720, i8* %clen1719, align 1
  %990 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1721 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %990, i32 0, i32 23
  %991 = load %struct._PerlIO**, %struct._PerlIO*** %fio1721, align 8
  %tobool1722 = icmp ne %struct._PerlIO** %991, null
  br i1 %tobool1722, label %if.else.1780, label %if.then.1723

if.then.1723:                                     ; preds = %if.else.1717
  %992 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1724 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %992, i32 0, i32 21
  %aptr1725 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1724, i32 0, i32 2
  %993 = load i8*, i8** %aptr1725, align 8
  %994 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1726 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %994, i32 0, i32 21
  %aend1727 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1726, i32 0, i32 3
  %995 = load i8*, i8** %aend1727, align 8
  %cmp1728 = icmp ult i8* %993, %995
  br i1 %cmp1728, label %if.then.1730, label %if.else.1734

if.then.1730:                                     ; preds = %if.then.1723
  %996 = load i8, i8* %clen1719, align 1
  %997 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1731 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %997, i32 0, i32 21
  %aptr1732 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1731, i32 0, i32 2
  %998 = load i8*, i8** %aptr1732, align 8
  %incdec.ptr1733 = getelementptr inbounds i8, i8* %998, i32 1
  store i8* %incdec.ptr1733, i8** %aptr1732, align 8
  store i8 %996, i8* %998, align 1
  br label %if.end.1779

if.else.1734:                                     ; preds = %if.then.1723
  %999 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1737 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %999, i32 0, i32 21
  %asiz1738 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1737, i32 0, i32 1
  %1000 = load i64, i64* %asiz1738, align 8
  %add1739 = add i64 1, %1000
  %add1740 = add i64 %add1739, 8191
  %and1741 = and i64 %add1740, -8192
  %conv1742 = trunc i64 %and1741 to i32
  store i32 %conv1742, i32* %nsz1736, align 4
  %1001 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1745 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1001, i32 0, i32 21
  %aptr1746 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1745, i32 0, i32 2
  %1002 = load i8*, i8** %aptr1746, align 8
  %1003 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1747 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1003, i32 0, i32 21
  %arena1748 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1747, i32 0, i32 0
  %1004 = load i8*, i8** %arena1748, align 8
  %sub.ptr.lhs.cast1749 = ptrtoint i8* %1002 to i64
  %sub.ptr.rhs.cast1750 = ptrtoint i8* %1004 to i64
  %sub.ptr.sub1751 = sub i64 %sub.ptr.lhs.cast1749, %sub.ptr.rhs.cast1750
  %conv1752 = trunc i64 %sub.ptr.sub1751 to i32
  store i32 %conv1752, i32* %offset1744, align 4
  %1005 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1753 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1005, i32 0, i32 21
  %arena1754 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1753, i32 0, i32 0
  %1006 = load i8*, i8** %arena1754, align 8
  %1007 = load i32, i32* %nsz1736, align 4
  %conv1755 = sext i32 %1007 to i64
  %mul1756 = mul i64 %conv1755, 1
  %call1757 = call i8* @Perl_safesysrealloc(i8* %1006, i64 %mul1756)
  %1008 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1758 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1008, i32 0, i32 21
  %arena1759 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1758, i32 0, i32 0
  store i8* %call1757, i8** %arena1759, align 8
  %1009 = load i32, i32* %nsz1736, align 4
  %conv1760 = sext i32 %1009 to i64
  %1010 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1761 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1010, i32 0, i32 21
  %asiz1762 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1761, i32 0, i32 1
  store i64 %conv1760, i64* %asiz1762, align 8
  %1011 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1763 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1011, i32 0, i32 21
  %arena1764 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1763, i32 0, i32 0
  %1012 = load i8*, i8** %arena1764, align 8
  %1013 = load i32, i32* %offset1744, align 4
  %idx.ext1765 = sext i32 %1013 to i64
  %add.ptr1766 = getelementptr inbounds i8, i8* %1012, i64 %idx.ext1765
  %1014 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1767 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1014, i32 0, i32 21
  %aptr1768 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1767, i32 0, i32 2
  store i8* %add.ptr1766, i8** %aptr1768, align 8
  %1015 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1770 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1015, i32 0, i32 21
  %arena1771 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1770, i32 0, i32 0
  %1016 = load i8*, i8** %arena1771, align 8
  %1017 = load i32, i32* %nsz1736, align 4
  %idx.ext1772 = sext i32 %1017 to i64
  %add.ptr1773 = getelementptr inbounds i8, i8* %1016, i64 %idx.ext1772
  %1018 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1774 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1018, i32 0, i32 21
  %aend1775 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1774, i32 0, i32 3
  store i8* %add.ptr1773, i8** %aend1775, align 8
  store i8* %add.ptr1773, i8** %tmp1769
  %1019 = load i8*, i8** %tmp1769
  %1020 = load i8, i8* %clen1719, align 1
  %1021 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1776 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1021, i32 0, i32 21
  %aptr1777 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1776, i32 0, i32 2
  %1022 = load i8*, i8** %aptr1777, align 8
  %incdec.ptr1778 = getelementptr inbounds i8, i8* %1022, i32 1
  store i8* %incdec.ptr1778, i8** %aptr1777, align 8
  store i8 %1020, i8* %1022, align 1
  br label %if.end.1779

if.end.1779:                                      ; preds = %if.else.1734, %if.then.1730
  br label %if.end.1788

if.else.1780:                                     ; preds = %if.else.1717
  %1023 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1781 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1023, i32 0, i32 23
  %1024 = load %struct._PerlIO**, %struct._PerlIO*** %fio1781, align 8
  %1025 = load i8, i8* %clen1719, align 1
  %conv1782 = zext i8 %1025 to i32
  %call1783 = call i32 @PerlIO_putc(%struct._PerlIO** %1024, i32 %conv1782)
  %cmp1784 = icmp eq i32 %call1783, -1
  br i1 %cmp1784, label %if.then.1786, label %if.end.1787

if.then.1786:                                     ; preds = %if.else.1780
  store i32 -1, i32* %retval
  br label %return

if.end.1787:                                      ; preds = %if.else.1780
  br label %if.end.1788

if.end.1788:                                      ; preds = %if.end.1787, %if.end.1779
  br label %if.end.1789

if.end.1789:                                      ; preds = %if.end.1788, %if.end.1716
  store i32 1, i32* %i, align 4
  br label %for.cond.1790

for.cond.1790:                                    ; preds = %for.inc.1881, %if.end.1789
  %1026 = load i32, i32* %i, align 4
  %1027 = load i32, i32* %count, align 4
  %cmp1791 = icmp slt i32 %1026, %1027
  br i1 %cmp1791, label %for.body.1793, label %for.end.1883

for.body.1793:                                    ; preds = %for.cond.1790
  %1028 = load i32, i32* %i, align 4
  %idxprom1795 = sext i32 %1028 to i64
  %1029 = load %struct.sv**, %struct.sv*** %ary, align 8
  %arrayidx1796 = getelementptr inbounds %struct.sv*, %struct.sv** %1029, i64 %idxprom1795
  %1030 = load %struct.sv*, %struct.sv** %arrayidx1796, align 8
  %1031 = ptrtoint %struct.sv* %1030 to i64
  %and1797 = and i64 %1031, 4294967295
  %conv1798 = trunc i64 %and1797 to i32
  %conv1799 = sext i32 %conv1798 to i64
  %call1800 = call i64 @Perl_my_htonl(i64 %conv1799)
  %conv1801 = trunc i64 %call1800 to i32
  store i32 %conv1801, i32* %tagval, align 4
  %1032 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1802 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1032, i32 0, i32 23
  %1033 = load %struct._PerlIO**, %struct._PerlIO*** %fio1802, align 8
  %tobool1803 = icmp ne %struct._PerlIO** %1033, null
  br i1 %tobool1803, label %if.else.1873, label %if.then.1804

if.then.1804:                                     ; preds = %for.body.1793
  %1034 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1805 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1034, i32 0, i32 21
  %aptr1806 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1805, i32 0, i32 2
  %1035 = load i8*, i8** %aptr1806, align 8
  %add.ptr1807 = getelementptr inbounds i8, i8* %1035, i64 4
  %1036 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1808 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1036, i32 0, i32 21
  %aend1809 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1808, i32 0, i32 3
  %1037 = load i8*, i8** %aend1809, align 8
  %cmp1810 = icmp ugt i8* %add.ptr1807, %1037
  br i1 %cmp1810, label %if.then.1812, label %if.end.1854

if.then.1812:                                     ; preds = %if.then.1804
  %1038 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1815 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1038, i32 0, i32 21
  %asiz1816 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1815, i32 0, i32 1
  %1039 = load i64, i64* %asiz1816, align 8
  %add1817 = add i64 4, %1039
  %add1818 = add i64 %add1817, 8191
  %and1819 = and i64 %add1818, -8192
  %conv1820 = trunc i64 %and1819 to i32
  store i32 %conv1820, i32* %nsz1814, align 4
  %1040 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1823 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1040, i32 0, i32 21
  %aptr1824 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1823, i32 0, i32 2
  %1041 = load i8*, i8** %aptr1824, align 8
  %1042 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1825 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1042, i32 0, i32 21
  %arena1826 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1825, i32 0, i32 0
  %1043 = load i8*, i8** %arena1826, align 8
  %sub.ptr.lhs.cast1827 = ptrtoint i8* %1041 to i64
  %sub.ptr.rhs.cast1828 = ptrtoint i8* %1043 to i64
  %sub.ptr.sub1829 = sub i64 %sub.ptr.lhs.cast1827, %sub.ptr.rhs.cast1828
  %conv1830 = trunc i64 %sub.ptr.sub1829 to i32
  store i32 %conv1830, i32* %offset1822, align 4
  %1044 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1831 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1044, i32 0, i32 21
  %arena1832 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1831, i32 0, i32 0
  %1045 = load i8*, i8** %arena1832, align 8
  %1046 = load i32, i32* %nsz1814, align 4
  %conv1833 = sext i32 %1046 to i64
  %mul1834 = mul i64 %conv1833, 1
  %call1835 = call i8* @Perl_safesysrealloc(i8* %1045, i64 %mul1834)
  %1047 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1836 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1047, i32 0, i32 21
  %arena1837 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1836, i32 0, i32 0
  store i8* %call1835, i8** %arena1837, align 8
  %1048 = load i32, i32* %nsz1814, align 4
  %conv1838 = sext i32 %1048 to i64
  %1049 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1839 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1049, i32 0, i32 21
  %asiz1840 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1839, i32 0, i32 1
  store i64 %conv1838, i64* %asiz1840, align 8
  %1050 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1841 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1050, i32 0, i32 21
  %arena1842 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1841, i32 0, i32 0
  %1051 = load i8*, i8** %arena1842, align 8
  %1052 = load i32, i32* %offset1822, align 4
  %idx.ext1843 = sext i32 %1052 to i64
  %add.ptr1844 = getelementptr inbounds i8, i8* %1051, i64 %idx.ext1843
  %1053 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1845 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1053, i32 0, i32 21
  %aptr1846 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1845, i32 0, i32 2
  store i8* %add.ptr1844, i8** %aptr1846, align 8
  %1054 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1848 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1054, i32 0, i32 21
  %arena1849 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1848, i32 0, i32 0
  %1055 = load i8*, i8** %arena1849, align 8
  %1056 = load i32, i32* %nsz1814, align 4
  %idx.ext1850 = sext i32 %1056 to i64
  %add.ptr1851 = getelementptr inbounds i8, i8* %1055, i64 %idx.ext1850
  %1057 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1852 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1057, i32 0, i32 21
  %aend1853 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1852, i32 0, i32 3
  store i8* %add.ptr1851, i8** %aend1853, align 8
  store i8* %add.ptr1851, i8** %tmp1847
  %1058 = load i8*, i8** %tmp1847
  br label %if.end.1854

if.end.1854:                                      ; preds = %if.then.1812, %if.then.1804
  %1059 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1855 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1059, i32 0, i32 21
  %aptr1856 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1855, i32 0, i32 2
  %1060 = load i8*, i8** %aptr1856, align 8
  %1061 = ptrtoint i8* %1060 to i64
  %1062 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1857 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1062, i32 0, i32 21
  %aptr1858 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1857, i32 0, i32 2
  %1063 = load i8*, i8** %aptr1858, align 8
  %1064 = ptrtoint i8* %1063 to i64
  %and1859 = and i64 %1064, -4
  %cmp1860 = icmp eq i64 %1061, %and1859
  br i1 %cmp1860, label %if.then.1862, label %if.else.1865

if.then.1862:                                     ; preds = %if.end.1854
  %1065 = load i32, i32* %tagval, align 4
  %1066 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1863 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1066, i32 0, i32 21
  %aptr1864 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1863, i32 0, i32 2
  %1067 = load i8*, i8** %aptr1864, align 8
  %1068 = bitcast i8* %1067 to i32*
  store i32 %1065, i32* %1068, align 4
  br label %if.end.1868

if.else.1865:                                     ; preds = %if.end.1854
  %1069 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1866 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1069, i32 0, i32 21
  %aptr1867 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1866, i32 0, i32 2
  %1070 = load i8*, i8** %aptr1867, align 8
  %1071 = bitcast i32* %tagval to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1070, i8* %1071, i64 4, i32 1, i1 false)
  br label %if.end.1868

if.end.1868:                                      ; preds = %if.else.1865, %if.then.1862
  %1072 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1870 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1072, i32 0, i32 21
  %aptr1871 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1870, i32 0, i32 2
  %1073 = load i8*, i8** %aptr1871, align 8
  %add.ptr1872 = getelementptr inbounds i8, i8* %1073, i64 4
  store i8* %add.ptr1872, i8** %aptr1871, align 8
  store i8* %add.ptr1872, i8** %tmp1869
  %1074 = load i8*, i8** %tmp1869
  br label %if.end.1880

if.else.1873:                                     ; preds = %for.body.1793
  %1075 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1874 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1075, i32 0, i32 23
  %1076 = load %struct._PerlIO**, %struct._PerlIO*** %fio1874, align 8
  %1077 = bitcast i32* %tagval to i8*
  %call1875 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %1076, i8* %1077, i64 4)
  %cmp1876 = icmp ne i64 %call1875, 4
  br i1 %cmp1876, label %if.then.1878, label %if.end.1879

if.then.1878:                                     ; preds = %if.else.1873
  store i32 -1, i32* %retval
  br label %return

if.end.1879:                                      ; preds = %if.else.1873
  br label %if.end.1880

if.end.1880:                                      ; preds = %if.end.1879, %if.end.1868
  br label %for.inc.1881

for.inc.1881:                                     ; preds = %if.end.1880
  %1078 = load i32, i32* %i, align 4
  %inc1882 = add nsw i32 %1078, 1
  store i32 %inc1882, i32* %i, align 4
  br label %for.cond.1790

for.end.1883:                                     ; preds = %for.cond.1790
  br label %if.end.1884

if.end.1884:                                      ; preds = %for.end.1883, %if.end.1539
  %1079 = load i32, i32* %count, align 4
  %cmp1885 = icmp sgt i32 %1079, 1
  br i1 %cmp1885, label %if.then.1887, label %if.end.1890

if.then.1887:                                     ; preds = %if.end.1884
  %1080 = load %struct.av*, %struct.av** %av, align 8
  %sv_any1888 = getelementptr inbounds %struct.av, %struct.av* %1080, i32 0, i32 0
  %1081 = load %struct.xpvav*, %struct.xpvav** %sv_any1888, align 8
  %xav_fill1889 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %1081, i32 0, i32 1
  store i64 0, i64* %xav_fill1889, align 8
  br label %if.end.1890

if.end.1890:                                      ; preds = %if.then.1887, %if.end.1884
  %1082 = load %struct.av*, %struct.av** %av, align 8
  call void @Perl_av_undef(%struct.av* %1082)
  %1083 = load %struct.av*, %struct.av** %av, align 8
  %1084 = bitcast %struct.av* %1083 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %1084)
  %1085 = load i32, i32* %obj_type, align 4
  %cmp1891 = icmp eq i32 %1085, 3
  br i1 %cmp1891, label %if.then.1893, label %if.end.1918

if.then.1893:                                     ; preds = %if.end.1890
  %1086 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %1087 = load i8, i8* %mtype, align 1
  %conv1895 = sext i8 %1087 to i32
  %call1896 = call %struct.magic* @Perl_mg_find(%struct.sv* %1086, i32 %conv1895)
  store %struct.magic* %call1896, %struct.magic** %mg, align 8
  %tobool1897 = icmp ne %struct.magic* %call1896, null
  br i1 %tobool1897, label %if.end.1913, label %if.then.1898

if.then.1898:                                     ; preds = %if.then.1893
  %1088 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags1900 = getelementptr inbounds %struct.sv, %struct.sv* %1088, i32 0, i32 2
  %1089 = load i32, i32* %sv_flags1900, align 4
  %and1901 = and i32 %1089, 255
  store i32 %and1901, i32* %svt, align 4
  %1090 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty1902 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1090, i32 0, i32 18
  store i32 1, i32* %s_dirty1902, align 4
  %1091 = load i8, i8* %mtype, align 1
  %conv1903 = sext i8 %1091 to i32
  %1092 = load i32, i32* %svt, align 4
  %cmp1904 = icmp eq i32 %1092, 11
  br i1 %cmp1904, label %cond.true.1906, label %cond.false.1907

cond.true.1906:                                   ; preds = %if.then.1898
  br label %cond.end.1911

cond.false.1907:                                  ; preds = %if.then.1898
  %1093 = load i32, i32* %svt, align 4
  %cmp1908 = icmp eq i32 %1093, 10
  %cond1910 = select i1 %cmp1908, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i32 0, i32 0)
  br label %cond.end.1911

cond.end.1911:                                    ; preds = %cond.false.1907, %cond.true.1906
  %cond1912 = phi i8* [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i32 0, i32 0), %cond.true.1906 ], [ %cond1910, %cond.false.1907 ]
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.38, i32 0, i32 0), i32 %conv1903, i8* %cond1912)
  br label %if.end.1913

if.end.1913:                                      ; preds = %cond.end.1911, %if.then.1893
  %1094 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %1095 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_obj = getelementptr inbounds %struct.magic, %struct.magic* %1095, i32 0, i32 5
  %1096 = load %struct.sv*, %struct.sv** %mg_obj, align 8
  %call1914 = call i32 @store(%struct.stcxt* %1094, %struct.sv* %1096)
  store i32 %call1914, i32* %ret, align 4
  %tobool1915 = icmp ne i32 %call1914, 0
  br i1 %tobool1915, label %if.then.1916, label %if.end.1917

if.then.1916:                                     ; preds = %if.end.1913
  %1097 = load i32, i32* %ret, align 4
  store i32 %1097, i32* %retval
  br label %return

if.end.1917:                                      ; preds = %if.end.1913
  br label %if.end.1918

if.end.1918:                                      ; preds = %if.end.1917, %if.end.1890
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.1918, %if.then.1916, %if.then.1878, %if.then.1786, %if.then.1713, %if.then.1633, %if.then.1536, %if.then.1466, %if.then.1393, %if.then.1313, %if.then.1219, %if.then.1145, %if.then.1073, %if.then.993, %if.then.900, %if.then.828, %if.then.748, %if.then.654, %if.then.584, %if.then.513, %if.then.445, %if.then.313, %if.then.307, %if.then.237, %if.then.166, %if.then.98, %if.end
  %1098 = load i32, i32* %retval
  ret i32 %1098
}

declare i64 @strlen(i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @known_class(%struct.stcxt* %cxt, i8* %name, i32 %len, i32* %classnum) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %name.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %classnum.addr = alloca i32*, align 8
  %svh = alloca %struct.sv**, align 8
  %hclass = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i32* %classnum, i32** %classnum.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hclass1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 6
  %1 = load %struct.hv*, %struct.hv** %hclass1, align 8
  store %struct.hv* %1, %struct.hv** %hclass, align 8
  %2 = load %struct.hv*, %struct.hv** %hclass, align 8
  %3 = load i8*, i8** %name.addr, align 8
  %4 = load i32, i32* %len.addr, align 4
  %call = call %struct.sv** @Perl_hv_fetch(%struct.hv* %2, i8* %3, i32 %4, i32 0)
  store %struct.sv** %call, %struct.sv*** %svh, align 8
  %5 = load %struct.sv**, %struct.sv*** %svh, align 8
  %tobool = icmp ne %struct.sv** %5, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load %struct.sv**, %struct.sv*** %svh, align 8
  %7 = load %struct.sv*, %struct.sv** %6, align 8
  %8 = ptrtoint %struct.sv* %7 to i64
  %and = and i64 %8, 4294967295
  %conv = trunc i64 %and to i32
  %9 = load i32*, i32** %classnum.addr, align 8
  store i32 %conv, i32* %9, align 4
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %10 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %classnum2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %10, i32 0, i32 10
  %11 = load i64, i64* %classnum2, align 8
  %inc = add nsw i64 %11, 1
  store i64 %inc, i64* %classnum2, align 8
  %12 = load %struct.hv*, %struct.hv** %hclass, align 8
  %13 = load i8*, i8** %name.addr, align 8
  %14 = load i32, i32* %len.addr, align 4
  %15 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %classnum3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %15, i32 0, i32 10
  %16 = load i64, i64* %classnum3, align 8
  %17 = inttoptr i64 %16 to %struct.sv*
  %call4 = call %struct.sv** @Perl_hv_store(%struct.hv* %12, i8* %13, i32 %14, %struct.sv* %17, i32 0)
  %tobool5 = icmp ne %struct.sv** %call4, null
  br i1 %tobool5, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %if.end
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 18
  store i32 1, i32* %s_dirty, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.42, i32 0, i32 0))
  br label %if.end.7

if.end.7:                                         ; preds = %if.then.6, %if.end
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %classnum8 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 10
  %20 = load i64, i64* %classnum8, align 8
  %conv9 = trunc i64 %20 to i32
  %21 = load i32*, i32** %classnum.addr, align 8
  store i32 %conv9, i32* %21, align 4
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.7, %if.then
  %22 = load i32, i32* %retval
  ret i32 %22
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @pkg_fetchmeth(%struct.hv* %cache, %struct.hv* %pkg, i8* %method) #0 {
entry:
  %cache.addr = alloca %struct.hv*, align 8
  %pkg.addr = alloca %struct.hv*, align 8
  %method.addr = alloca i8*, align 8
  %gv = alloca %struct.gv*, align 8
  %sv = alloca %struct.sv*, align 8
  store %struct.hv* %cache, %struct.hv** %cache.addr, align 8
  store %struct.hv* %pkg, %struct.hv** %pkg.addr, align 8
  store i8* %method, i8** %method.addr, align 8
  %0 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %1 = load i8*, i8** %method.addr, align 8
  %call = call %struct.gv* @Perl_gv_fetchmethod_autoload(%struct.hv* %0, i8* %1, i32 0)
  store %struct.gv* %call, %struct.gv** %gv, align 8
  %2 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool = icmp ne %struct.gv* %2, null
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_flags = getelementptr inbounds %struct.gv, %struct.gv* %3, i32 0, i32 2
  %4 = load i32, i32* %sv_flags, align 4
  %and = and i32 %4, 255
  %cmp = icmp eq i32 %and, 13
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %5, i32 0, i32 0
  %6 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xgv_gp = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %6, i32 0, i32 7
  %7 = load %struct.gp*, %struct.gp** %xgv_gp, align 8
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %7, i32 0, i32 7
  %8 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  %9 = bitcast %struct.cv* %8 to %struct.sv*
  %call1 = call %struct.sv* @Perl_newRV(%struct.sv* %9)
  store %struct.sv* %call1, %struct.sv** %sv, align 8
  br label %if.end

if.else:                                          ; preds = %land.lhs.true, %entry
  %call2 = call %struct.sv* @Perl_newSVsv(%struct.sv* @PL_sv_undef)
  store %struct.sv* %call2, %struct.sv** %sv, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load %struct.hv*, %struct.hv** %cache.addr, align 8
  %11 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any3 = getelementptr inbounds %struct.hv, %struct.hv* %11, i32 0, i32 0
  %12 = load %struct.xpvhv*, %struct.xpvhv** %sv_any3, align 8
  %xhv_name = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %12, i32 0, i32 10
  %13 = load i8*, i8** %xhv_name, align 8
  %14 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any4 = getelementptr inbounds %struct.hv, %struct.hv* %14, i32 0, i32 0
  %15 = load %struct.xpvhv*, %struct.xpvhv** %sv_any4, align 8
  %xhv_name5 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %15, i32 0, i32 10
  %16 = load i8*, i8** %xhv_name5, align 8
  %call6 = call i64 @strlen(i8* %16)
  %conv = trunc i64 %call6 to i32
  %17 = load %struct.sv*, %struct.sv** %sv, align 8
  %call7 = call %struct.sv** @Perl_hv_store(%struct.hv* %10, i8* %13, i32 %conv, %struct.sv* %17, i32 0)
  %18 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags8 = getelementptr inbounds %struct.sv, %struct.sv* %18, i32 0, i32 2
  %19 = load i32, i32* %sv_flags8, align 4
  %and9 = and i32 %19, 118423552
  %tobool10 = icmp ne i32 %and9, 0
  br i1 %tobool10, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %20 = load %struct.sv*, %struct.sv** %sv, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.sv* [ %20, %cond.true ], [ null, %cond.false ]
  ret %struct.sv* %cond
}

declare %struct.gv* @Perl_gv_fetchmethod_autoload(%struct.hv*, i8*, i32) #1

declare %struct.sv* @Perl_newRV(%struct.sv*) #1

declare %struct.sv* @Perl_newSVsv(%struct.sv*) #1

; Function Attrs: nounwind uwtable
define internal %struct.av* @array_call(%struct.sv* %obj, %struct.sv* %hook, i32 %cloning) #0 {
entry:
  %obj.addr = alloca %struct.sv*, align 8
  %hook.addr = alloca %struct.sv*, align 8
  %cloning.addr = alloca i32, align 4
  %sp = alloca %struct.sv**, align 8
  %count = alloca i32, align 4
  %av = alloca %struct.av*, align 8
  %i = alloca i32, align 4
  %tmp = alloca i32, align 4
  %tmp9 = alloca %struct.sv*, align 8
  %tmp20 = alloca %struct.sv*, align 8
  %sv = alloca %struct.sv*, align 8
  store %struct.sv* %obj, %struct.sv** %obj.addr, align 8
  store %struct.sv* %hook, %struct.sv** %hook.addr, align 8
  store i32 %cloning, i32* %cloning.addr, align 4
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  call void @Perl_push_scope()
  call void @Perl_save_int(i32* @PL_tmps_floor)
  %1 = load i32, i32* @PL_tmps_ix, align 4
  store i32 %1, i32* @PL_tmps_floor, align 4
  %2 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %2, i32 1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %3 = load i32*, i32** @PL_markstack_max, align 8
  %cmp = icmp eq i32* %incdec.ptr, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @Perl_markstack_grow()
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.sv**, %struct.sv*** %sp, align 8
  %5 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %4 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv = trunc i64 %sub.ptr.div to i32
  %6 = load i32*, i32** @PL_markstack_ptr, align 8
  store i32 %conv, i32* %6, align 4
  store i32 %conv, i32* %tmp
  %7 = load i32, i32* %tmp
  %8 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %9 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %8 to i64
  %sub.ptr.rhs.cast2 = ptrtoint %struct.sv** %9 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2
  %sub.ptr.div4 = sdiv exact i64 %sub.ptr.sub3, 8
  %cmp5 = icmp slt i64 %sub.ptr.div4, 1
  br i1 %cmp5, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.end
  %10 = load %struct.sv**, %struct.sv*** %sp, align 8
  %11 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call = call %struct.sv** @Perl_stack_grow(%struct.sv** %10, %struct.sv** %11, i32 1)
  store %struct.sv** %call, %struct.sv*** %sp, align 8
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.7, %if.end
  %12 = load %struct.sv*, %struct.sv** %obj.addr, align 8
  %13 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr10 = getelementptr inbounds %struct.sv*, %struct.sv** %13, i32 1
  store %struct.sv** %incdec.ptr10, %struct.sv*** %sp, align 8
  store %struct.sv* %12, %struct.sv** %incdec.ptr10, align 8
  store %struct.sv* %12, %struct.sv** %tmp9
  %14 = load %struct.sv*, %struct.sv** %tmp9
  %15 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %16 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast11 = ptrtoint %struct.sv** %15 to i64
  %sub.ptr.rhs.cast12 = ptrtoint %struct.sv** %16 to i64
  %sub.ptr.sub13 = sub i64 %sub.ptr.lhs.cast11, %sub.ptr.rhs.cast12
  %sub.ptr.div14 = sdiv exact i64 %sub.ptr.sub13, 8
  %cmp15 = icmp slt i64 %sub.ptr.div14, 1
  br i1 %cmp15, label %if.then.17, label %if.end.19

if.then.17:                                       ; preds = %if.end.8
  %17 = load %struct.sv**, %struct.sv*** %sp, align 8
  %18 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call18 = call %struct.sv** @Perl_stack_grow(%struct.sv** %17, %struct.sv** %18, i32 1)
  store %struct.sv** %call18, %struct.sv*** %sp, align 8
  br label %if.end.19

if.end.19:                                        ; preds = %if.then.17, %if.end.8
  %19 = load i32, i32* %cloning.addr, align 4
  %conv21 = sext i32 %19 to i64
  %call22 = call %struct.sv* @Perl_newSViv(i64 %conv21)
  %call23 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call22)
  %20 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr24 = getelementptr inbounds %struct.sv*, %struct.sv** %20, i32 1
  store %struct.sv** %incdec.ptr24, %struct.sv*** %sp, align 8
  store %struct.sv* %call23, %struct.sv** %incdec.ptr24, align 8
  store %struct.sv* %call23, %struct.sv** %tmp20
  %21 = load %struct.sv*, %struct.sv** %tmp20
  %22 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %22, %struct.sv*** @PL_stack_sp, align 8
  %23 = load %struct.sv*, %struct.sv** %hook.addr, align 8
  %call25 = call i32 @Perl_call_sv(%struct.sv* %23, i32 1)
  store i32 %call25, i32* %count, align 4
  %24 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %24, %struct.sv*** %sp, align 8
  %call26 = call %struct.av* @Perl_newAV()
  store %struct.av* %call26, %struct.av** %av, align 8
  %25 = load i32, i32* %count, align 4
  %sub = sub nsw i32 %25, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.19
  %26 = load i32, i32* %i, align 4
  %cmp27 = icmp sge i32 %26, 0
  br i1 %cmp27, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %27 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr30 = getelementptr inbounds %struct.sv*, %struct.sv** %27, i32 -1
  store %struct.sv** %incdec.ptr30, %struct.sv*** %sp, align 8
  %28 = load %struct.sv*, %struct.sv** %27, align 8
  store %struct.sv* %28, %struct.sv** %sv, align 8
  %29 = load %struct.av*, %struct.av** %av, align 8
  %30 = load i32, i32* %i, align 4
  %31 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %31, %struct.sv** @PL_Sv, align 8
  %32 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool = icmp ne %struct.sv* %32, null
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.body
  %33 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %33, i32 0, i32 1
  %34 = load i32, i32* %sv_refcnt, align 4
  %inc = add i32 %34, 1
  store i32 %inc, i32* %sv_refcnt, align 4
  %tobool31 = icmp ne i32 %inc, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body
  %35 = phi i1 [ false, %for.body ], [ %tobool31, %land.rhs ]
  %land.ext = zext i1 %35 to i32
  %36 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call32 = call %struct.sv** @Perl_av_store(%struct.av* %29, i32 %30, %struct.sv* %36)
  br label %for.inc

for.inc:                                          ; preds = %land.end
  %37 = load i32, i32* %i, align 4
  %dec = add nsw i32 %37, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %38 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %38, %struct.sv*** @PL_stack_sp, align 8
  %39 = load i32, i32* @PL_tmps_ix, align 4
  %40 = load i32, i32* @PL_tmps_floor, align 4
  %cmp33 = icmp sgt i32 %39, %40
  br i1 %cmp33, label %if.then.35, label %if.end.36

if.then.35:                                       ; preds = %for.end
  call void @Perl_free_tmps()
  br label %if.end.36

if.end.36:                                        ; preds = %if.then.35, %for.end
  call void @Perl_pop_scope()
  %41 = load %struct.av*, %struct.av** %av, align 8
  ret %struct.av* %41
}

declare void @Perl_sv_free(%struct.sv*) #1

; Function Attrs: nounwind uwtable
define internal void @pkg_hide(%struct.hv* %cache, %struct.hv* %pkg, i8* %method) #0 {
entry:
  %cache.addr = alloca %struct.hv*, align 8
  %pkg.addr = alloca %struct.hv*, align 8
  %method.addr = alloca i8*, align 8
  store %struct.hv* %cache, %struct.hv** %cache.addr, align 8
  store %struct.hv* %pkg, %struct.hv** %pkg.addr, align 8
  store i8* %method, i8** %method.addr, align 8
  %0 = load %struct.hv*, %struct.hv** %cache.addr, align 8
  %1 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %1, i32 0, i32 0
  %2 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_name = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %2, i32 0, i32 10
  %3 = load i8*, i8** %xhv_name, align 8
  %4 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any1 = getelementptr inbounds %struct.hv, %struct.hv* %4, i32 0, i32 0
  %5 = load %struct.xpvhv*, %struct.xpvhv** %sv_any1, align 8
  %xhv_name2 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %5, i32 0, i32 10
  %6 = load i8*, i8** %xhv_name2, align 8
  %call = call i64 @strlen(i8* %6)
  %conv = trunc i64 %call to i32
  %call3 = call %struct.sv* @Perl_newSVsv(%struct.sv* @PL_sv_undef)
  %call4 = call %struct.sv** @Perl_hv_store(%struct.hv* %0, i8* %3, i32 %conv, %struct.sv* %call3, i32 0)
  ret void
}

declare i8* @Perl_sv_2pv_flags(%struct.sv*, i64*, i32) #1

declare %struct.sv** @Perl_av_store(%struct.av*, i32, %struct.sv*) #1

declare void @Perl_av_undef(%struct.av*) #1

declare void @Perl_push_scope() #1

declare void @Perl_save_int(i32*) #1

declare void @Perl_markstack_grow() #1

declare %struct.sv** @Perl_stack_grow(%struct.sv**, %struct.sv**, i32) #1

declare %struct.sv* @Perl_newSViv(i64) #1

declare i32 @Perl_call_sv(%struct.sv*, i32) #1

declare void @Perl_free_tmps() #1

declare void @Perl_pop_scope() #1

; Function Attrs: nounwind uwtable
define internal i32 @store_ref(%struct.stcxt* %cxt, %struct.sv* %sv) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %nsz68 = alloca i32, align 4
  %offset76 = alloca i32, align 4
  %tmp101 = alloca i8*, align 8
  %nsz137 = alloca i32, align 4
  %offset145 = alloca i32, align 4
  %tmp170 = alloca i8*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 0
  %1 = load i8*, i8** %sv_any, align 8
  %2 = bitcast i8* %1 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %2, i32 0, i32 0
  %3 = load %struct.sv*, %struct.sv** %xrv_rv, align 8
  store %struct.sv* %3, %struct.sv** %sv.addr, align 8
  %4 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %4, i32 0, i32 2
  %5 = load i32, i32* %sv_flags, align 4
  %and = and i32 %5, 4096
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.else.121

if.then:                                          ; preds = %entry
  %6 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any1 = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 0
  %7 = load i8*, i8** %sv_any1, align 8
  %8 = bitcast i8* %7 to %struct.xpvmg*
  %xmg_stash = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %8, i32 0, i32 6
  %9 = load %struct.hv*, %struct.hv** %xmg_stash, align 8
  store %struct.hv* %9, %struct.hv** %stash, align 8
  %10 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool2 = icmp ne %struct.hv* %10, null
  br i1 %tobool2, label %land.lhs.true, label %if.else.52

land.lhs.true:                                    ; preds = %if.then
  %11 = load i64, i64* @PL_amagic_generation, align 8
  %tobool3 = icmp ne i64 %11, 0
  br i1 %tobool3, label %land.lhs.true.4, label %if.else.52

land.lhs.true.4:                                  ; preds = %land.lhs.true
  %12 = load %struct.hv*, %struct.hv** %stash, align 8
  %call = call signext i8 @Perl_Gv_AMupdate(%struct.hv* %12)
  %conv = sext i8 %call to i32
  %tobool5 = icmp ne i32 %conv, 0
  br i1 %tobool5, label %if.then.6, label %if.else.52

if.then.6:                                        ; preds = %land.lhs.true.4
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 23
  %14 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool7 = icmp ne %struct._PerlIO** %14, null
  br i1 %tobool7, label %if.else.44, label %if.then.8

if.then.8:                                        ; preds = %if.then.6
  %15 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %15, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %16 = load i8*, i8** %aptr, align 8
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf9 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf9, i32 0, i32 3
  %18 = load i8*, i8** %aend, align 8
  %cmp = icmp ult i8* %16, %18
  br i1 %cmp, label %if.then.11, label %if.else

if.then.11:                                       ; preds = %if.then.8
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf12 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 21
  %aptr13 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf12, i32 0, i32 2
  %20 = load i8*, i8** %aptr13, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %20, i32 1
  store i8* %incdec.ptr, i8** %aptr13, align 8
  store i8 20, i8* %20, align 1
  br label %if.end

if.else:                                          ; preds = %if.then.8
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 21
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf14, i32 0, i32 1
  %22 = load i64, i64* %asiz, align 8
  %add = add i64 1, %22
  %add15 = add i64 %add, 8191
  %and16 = and i64 %add15, -8192
  %conv17 = trunc i64 %and16 to i32
  store i32 %conv17, i32* %nsz, align 4
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf18 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 21
  %aptr19 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf18, i32 0, i32 2
  %24 = load i8*, i8** %aptr19, align 8
  %25 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf20 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %25, i32 0, i32 21
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf20, i32 0, i32 0
  %26 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %24 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %26 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv21 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv21, i32* %offset, align 4
  %27 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %27, i32 0, i32 21
  %arena23 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf22, i32 0, i32 0
  %28 = load i8*, i8** %arena23, align 8
  %29 = load i32, i32* %nsz, align 4
  %conv24 = sext i32 %29 to i64
  %mul = mul i64 %conv24, 1
  %call25 = call i8* @Perl_safesysrealloc(i8* %28, i64 %mul)
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf26 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 21
  %arena27 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf26, i32 0, i32 0
  store i8* %call25, i8** %arena27, align 8
  %31 = load i32, i32* %nsz, align 4
  %conv28 = sext i32 %31 to i64
  %32 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf29 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %32, i32 0, i32 21
  %asiz30 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf29, i32 0, i32 1
  store i64 %conv28, i64* %asiz30, align 8
  %33 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf31 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %33, i32 0, i32 21
  %arena32 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf31, i32 0, i32 0
  %34 = load i8*, i8** %arena32, align 8
  %35 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %35 to i64
  %add.ptr = getelementptr inbounds i8, i8* %34, i64 %idx.ext
  %36 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf33 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %36, i32 0, i32 21
  %aptr34 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf33, i32 0, i32 2
  store i8* %add.ptr, i8** %aptr34, align 8
  %37 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf35 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %37, i32 0, i32 21
  %arena36 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf35, i32 0, i32 0
  %38 = load i8*, i8** %arena36, align 8
  %39 = load i32, i32* %nsz, align 4
  %idx.ext37 = sext i32 %39 to i64
  %add.ptr38 = getelementptr inbounds i8, i8* %38, i64 %idx.ext37
  %40 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf39 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %40, i32 0, i32 21
  %aend40 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf39, i32 0, i32 3
  store i8* %add.ptr38, i8** %aend40, align 8
  store i8* %add.ptr38, i8** %tmp
  %41 = load i8*, i8** %tmp
  %42 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf41 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %42, i32 0, i32 21
  %aptr42 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf41, i32 0, i32 2
  %43 = load i8*, i8** %aptr42, align 8
  %incdec.ptr43 = getelementptr inbounds i8, i8* %43, i32 1
  store i8* %incdec.ptr43, i8** %aptr42, align 8
  store i8 20, i8* %43, align 1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.11
  br label %if.end.51

if.else.44:                                       ; preds = %if.then.6
  %44 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio45 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %44, i32 0, i32 23
  %45 = load %struct._PerlIO**, %struct._PerlIO*** %fio45, align 8
  %call46 = call i32 @PerlIO_putc(%struct._PerlIO** %45, i32 20)
  %cmp47 = icmp eq i32 %call46, -1
  br i1 %cmp47, label %if.then.49, label %if.end.50

if.then.49:                                       ; preds = %if.else.44
  store i32 -1, i32* %retval
  br label %return

if.end.50:                                        ; preds = %if.else.44
  br label %if.end.51

if.end.51:                                        ; preds = %if.end.50, %if.end
  br label %if.end.120

if.else.52:                                       ; preds = %land.lhs.true.4, %land.lhs.true, %if.then
  %46 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio53 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %46, i32 0, i32 23
  %47 = load %struct._PerlIO**, %struct._PerlIO*** %fio53, align 8
  %tobool54 = icmp ne %struct._PerlIO** %47, null
  br i1 %tobool54, label %if.else.112, label %if.then.55

if.then.55:                                       ; preds = %if.else.52
  %48 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf56 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %48, i32 0, i32 21
  %aptr57 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf56, i32 0, i32 2
  %49 = load i8*, i8** %aptr57, align 8
  %50 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf58 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %50, i32 0, i32 21
  %aend59 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf58, i32 0, i32 3
  %51 = load i8*, i8** %aend59, align 8
  %cmp60 = icmp ult i8* %49, %51
  br i1 %cmp60, label %if.then.62, label %if.else.66

if.then.62:                                       ; preds = %if.then.55
  %52 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf63 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %52, i32 0, i32 21
  %aptr64 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf63, i32 0, i32 2
  %53 = load i8*, i8** %aptr64, align 8
  %incdec.ptr65 = getelementptr inbounds i8, i8* %53, i32 1
  store i8* %incdec.ptr65, i8** %aptr64, align 8
  store i8 4, i8* %53, align 1
  br label %if.end.111

if.else.66:                                       ; preds = %if.then.55
  %54 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf69 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %54, i32 0, i32 21
  %asiz70 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf69, i32 0, i32 1
  %55 = load i64, i64* %asiz70, align 8
  %add71 = add i64 1, %55
  %add72 = add i64 %add71, 8191
  %and73 = and i64 %add72, -8192
  %conv74 = trunc i64 %and73 to i32
  store i32 %conv74, i32* %nsz68, align 4
  %56 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf77 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %56, i32 0, i32 21
  %aptr78 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf77, i32 0, i32 2
  %57 = load i8*, i8** %aptr78, align 8
  %58 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf79 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %58, i32 0, i32 21
  %arena80 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf79, i32 0, i32 0
  %59 = load i8*, i8** %arena80, align 8
  %sub.ptr.lhs.cast81 = ptrtoint i8* %57 to i64
  %sub.ptr.rhs.cast82 = ptrtoint i8* %59 to i64
  %sub.ptr.sub83 = sub i64 %sub.ptr.lhs.cast81, %sub.ptr.rhs.cast82
  %conv84 = trunc i64 %sub.ptr.sub83 to i32
  store i32 %conv84, i32* %offset76, align 4
  %60 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf85 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %60, i32 0, i32 21
  %arena86 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf85, i32 0, i32 0
  %61 = load i8*, i8** %arena86, align 8
  %62 = load i32, i32* %nsz68, align 4
  %conv87 = sext i32 %62 to i64
  %mul88 = mul i64 %conv87, 1
  %call89 = call i8* @Perl_safesysrealloc(i8* %61, i64 %mul88)
  %63 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf90 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %63, i32 0, i32 21
  %arena91 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf90, i32 0, i32 0
  store i8* %call89, i8** %arena91, align 8
  %64 = load i32, i32* %nsz68, align 4
  %conv92 = sext i32 %64 to i64
  %65 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf93 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %65, i32 0, i32 21
  %asiz94 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf93, i32 0, i32 1
  store i64 %conv92, i64* %asiz94, align 8
  %66 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf95 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %66, i32 0, i32 21
  %arena96 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf95, i32 0, i32 0
  %67 = load i8*, i8** %arena96, align 8
  %68 = load i32, i32* %offset76, align 4
  %idx.ext97 = sext i32 %68 to i64
  %add.ptr98 = getelementptr inbounds i8, i8* %67, i64 %idx.ext97
  %69 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf99 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %69, i32 0, i32 21
  %aptr100 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf99, i32 0, i32 2
  store i8* %add.ptr98, i8** %aptr100, align 8
  %70 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf102 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %70, i32 0, i32 21
  %arena103 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf102, i32 0, i32 0
  %71 = load i8*, i8** %arena103, align 8
  %72 = load i32, i32* %nsz68, align 4
  %idx.ext104 = sext i32 %72 to i64
  %add.ptr105 = getelementptr inbounds i8, i8* %71, i64 %idx.ext104
  %73 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf106 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %73, i32 0, i32 21
  %aend107 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf106, i32 0, i32 3
  store i8* %add.ptr105, i8** %aend107, align 8
  store i8* %add.ptr105, i8** %tmp101
  %74 = load i8*, i8** %tmp101
  %75 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf108 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %75, i32 0, i32 21
  %aptr109 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf108, i32 0, i32 2
  %76 = load i8*, i8** %aptr109, align 8
  %incdec.ptr110 = getelementptr inbounds i8, i8* %76, i32 1
  store i8* %incdec.ptr110, i8** %aptr109, align 8
  store i8 4, i8* %76, align 1
  br label %if.end.111

if.end.111:                                       ; preds = %if.else.66, %if.then.62
  br label %if.end.119

if.else.112:                                      ; preds = %if.else.52
  %77 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio113 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %77, i32 0, i32 23
  %78 = load %struct._PerlIO**, %struct._PerlIO*** %fio113, align 8
  %call114 = call i32 @PerlIO_putc(%struct._PerlIO** %78, i32 4)
  %cmp115 = icmp eq i32 %call114, -1
  br i1 %cmp115, label %if.then.117, label %if.end.118

if.then.117:                                      ; preds = %if.else.112
  store i32 -1, i32* %retval
  br label %return

if.end.118:                                       ; preds = %if.else.112
  br label %if.end.119

if.end.119:                                       ; preds = %if.end.118, %if.end.111
  br label %if.end.120

if.end.120:                                       ; preds = %if.end.119, %if.end.51
  br label %if.end.189

if.else.121:                                      ; preds = %entry
  %79 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio122 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %79, i32 0, i32 23
  %80 = load %struct._PerlIO**, %struct._PerlIO*** %fio122, align 8
  %tobool123 = icmp ne %struct._PerlIO** %80, null
  br i1 %tobool123, label %if.else.181, label %if.then.124

if.then.124:                                      ; preds = %if.else.121
  %81 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf125 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %81, i32 0, i32 21
  %aptr126 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf125, i32 0, i32 2
  %82 = load i8*, i8** %aptr126, align 8
  %83 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf127 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %83, i32 0, i32 21
  %aend128 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf127, i32 0, i32 3
  %84 = load i8*, i8** %aend128, align 8
  %cmp129 = icmp ult i8* %82, %84
  br i1 %cmp129, label %if.then.131, label %if.else.135

if.then.131:                                      ; preds = %if.then.124
  %85 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf132 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %85, i32 0, i32 21
  %aptr133 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf132, i32 0, i32 2
  %86 = load i8*, i8** %aptr133, align 8
  %incdec.ptr134 = getelementptr inbounds i8, i8* %86, i32 1
  store i8* %incdec.ptr134, i8** %aptr133, align 8
  store i8 4, i8* %86, align 1
  br label %if.end.180

if.else.135:                                      ; preds = %if.then.124
  %87 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf138 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %87, i32 0, i32 21
  %asiz139 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf138, i32 0, i32 1
  %88 = load i64, i64* %asiz139, align 8
  %add140 = add i64 1, %88
  %add141 = add i64 %add140, 8191
  %and142 = and i64 %add141, -8192
  %conv143 = trunc i64 %and142 to i32
  store i32 %conv143, i32* %nsz137, align 4
  %89 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf146 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %89, i32 0, i32 21
  %aptr147 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf146, i32 0, i32 2
  %90 = load i8*, i8** %aptr147, align 8
  %91 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf148 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %91, i32 0, i32 21
  %arena149 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf148, i32 0, i32 0
  %92 = load i8*, i8** %arena149, align 8
  %sub.ptr.lhs.cast150 = ptrtoint i8* %90 to i64
  %sub.ptr.rhs.cast151 = ptrtoint i8* %92 to i64
  %sub.ptr.sub152 = sub i64 %sub.ptr.lhs.cast150, %sub.ptr.rhs.cast151
  %conv153 = trunc i64 %sub.ptr.sub152 to i32
  store i32 %conv153, i32* %offset145, align 4
  %93 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf154 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %93, i32 0, i32 21
  %arena155 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf154, i32 0, i32 0
  %94 = load i8*, i8** %arena155, align 8
  %95 = load i32, i32* %nsz137, align 4
  %conv156 = sext i32 %95 to i64
  %mul157 = mul i64 %conv156, 1
  %call158 = call i8* @Perl_safesysrealloc(i8* %94, i64 %mul157)
  %96 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf159 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %96, i32 0, i32 21
  %arena160 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf159, i32 0, i32 0
  store i8* %call158, i8** %arena160, align 8
  %97 = load i32, i32* %nsz137, align 4
  %conv161 = sext i32 %97 to i64
  %98 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf162 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %98, i32 0, i32 21
  %asiz163 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf162, i32 0, i32 1
  store i64 %conv161, i64* %asiz163, align 8
  %99 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf164 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %99, i32 0, i32 21
  %arena165 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf164, i32 0, i32 0
  %100 = load i8*, i8** %arena165, align 8
  %101 = load i32, i32* %offset145, align 4
  %idx.ext166 = sext i32 %101 to i64
  %add.ptr167 = getelementptr inbounds i8, i8* %100, i64 %idx.ext166
  %102 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf168 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %102, i32 0, i32 21
  %aptr169 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf168, i32 0, i32 2
  store i8* %add.ptr167, i8** %aptr169, align 8
  %103 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf171 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %103, i32 0, i32 21
  %arena172 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf171, i32 0, i32 0
  %104 = load i8*, i8** %arena172, align 8
  %105 = load i32, i32* %nsz137, align 4
  %idx.ext173 = sext i32 %105 to i64
  %add.ptr174 = getelementptr inbounds i8, i8* %104, i64 %idx.ext173
  %106 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf175 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %106, i32 0, i32 21
  %aend176 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf175, i32 0, i32 3
  store i8* %add.ptr174, i8** %aend176, align 8
  store i8* %add.ptr174, i8** %tmp170
  %107 = load i8*, i8** %tmp170
  %108 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf177 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %108, i32 0, i32 21
  %aptr178 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf177, i32 0, i32 2
  %109 = load i8*, i8** %aptr178, align 8
  %incdec.ptr179 = getelementptr inbounds i8, i8* %109, i32 1
  store i8* %incdec.ptr179, i8** %aptr178, align 8
  store i8 4, i8* %109, align 1
  br label %if.end.180

if.end.180:                                       ; preds = %if.else.135, %if.then.131
  br label %if.end.188

if.else.181:                                      ; preds = %if.else.121
  %110 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio182 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %110, i32 0, i32 23
  %111 = load %struct._PerlIO**, %struct._PerlIO*** %fio182, align 8
  %call183 = call i32 @PerlIO_putc(%struct._PerlIO** %111, i32 4)
  %cmp184 = icmp eq i32 %call183, -1
  br i1 %cmp184, label %if.then.186, label %if.end.187

if.then.186:                                      ; preds = %if.else.181
  store i32 -1, i32* %retval
  br label %return

if.end.187:                                       ; preds = %if.else.181
  br label %if.end.188

if.end.188:                                       ; preds = %if.end.187, %if.end.180
  br label %if.end.189

if.end.189:                                       ; preds = %if.end.188, %if.end.120
  %112 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %113 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call190 = call i32 @store(%struct.stcxt* %112, %struct.sv* %113)
  store i32 %call190, i32* %retval
  br label %return

return:                                           ; preds = %if.end.189, %if.then.186, %if.then.117, %if.then.49
  %114 = load i32, i32* %retval
  ret i32 %114
}

; Function Attrs: nounwind uwtable
define internal i32 @store_scalar(%struct.stcxt* %cxt, %struct.sv* %sv) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %iv = alloca i64, align 8
  %pv = alloca i8*, align 8
  %len = alloca i64, align 8
  %flags = alloca i32, align 4
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %nsz61 = alloca i32, align 4
  %offset69 = alloca i32, align 4
  %tmp94 = alloca i8*, align 8
  %nsz137 = alloca i32, align 4
  %offset145 = alloca i32, align 4
  %tmp170 = alloca i8*, align 8
  %nsz208 = alloca i32, align 4
  %offset216 = alloca i32, align 4
  %tmp241 = alloca i8*, align 8
  %siv = alloca i8, align 1
  %nsz325 = alloca i32, align 4
  %offset333 = alloca i32, align 4
  %tmp358 = alloca i8*, align 8
  %nsz392 = alloca i32, align 4
  %offset400 = alloca i32, align 4
  %tmp425 = alloca i8*, align 8
  %niv = alloca i32, align 4
  %nsz490 = alloca i32, align 4
  %offset498 = alloca i32, align 4
  %tmp523 = alloca i8*, align 8
  %nsz554 = alloca i32, align 4
  %offset562 = alloca i32, align 4
  %tmp587 = alloca i8*, align 8
  %tmp609 = alloca i8*, align 8
  %nsz637 = alloca i32, align 4
  %offset645 = alloca i32, align 4
  %tmp670 = alloca i8*, align 8
  %nsz701 = alloca i32, align 4
  %offset709 = alloca i32, align 4
  %tmp734 = alloca i8*, align 8
  %tmp744 = alloca i8*, align 8
  %nv = alloca double, align 8
  %nsz830 = alloca i32, align 4
  %offset838 = alloca i32, align 4
  %tmp863 = alloca i8*, align 8
  %nsz894 = alloca i32, align 4
  %offset902 = alloca i32, align 4
  %tmp927 = alloca i8*, align 8
  %tmp937 = alloca i8*, align 8
  %wlen = alloca i32, align 4
  %clen = alloca i8, align 1
  %nsz992 = alloca i32, align 4
  %offset1000 = alloca i32, align 4
  %tmp1025 = alloca i8*, align 8
  %nsz1059 = alloca i32, align 4
  %offset1067 = alloca i32, align 4
  %tmp1092 = alloca i8*, align 8
  %nsz1127 = alloca i32, align 4
  %offset1136 = alloca i32, align 4
  %tmp1161 = alloca i8*, align 8
  %tmp1172 = alloca i8*, align 8
  %nsz1204 = alloca i32, align 4
  %offset1212 = alloca i32, align 4
  %tmp1237 = alloca i8*, align 8
  %y = alloca i32, align 4
  %nsz1275 = alloca i32, align 4
  %offset1283 = alloca i32, align 4
  %tmp1308 = alloca i8*, align 8
  %tmp1330 = alloca i8*, align 8
  %nsz1355 = alloca i32, align 4
  %offset1363 = alloca i32, align 4
  %tmp1388 = alloca i8*, align 8
  %tmp1410 = alloca i8*, align 8
  %nsz1436 = alloca i32, align 4
  %offset1445 = alloca i32, align 4
  %tmp1470 = alloca i8*, align 8
  %tmp1481 = alloca i8*, align 8
  %clen1502 = alloca i8, align 1
  %nsz1519 = alloca i32, align 4
  %offset1527 = alloca i32, align 4
  %tmp1552 = alloca i8*, align 8
  %nsz1586 = alloca i32, align 4
  %offset1594 = alloca i32, align 4
  %tmp1619 = alloca i8*, align 8
  %nsz1654 = alloca i32, align 4
  %offset1663 = alloca i32, align 4
  %tmp1688 = alloca i8*, align 8
  %tmp1699 = alloca i8*, align 8
  %nsz1731 = alloca i32, align 4
  %offset1739 = alloca i32, align 4
  %tmp1764 = alloca i8*, align 8
  %y1787 = alloca i32, align 4
  %nsz1803 = alloca i32, align 4
  %offset1811 = alloca i32, align 4
  %tmp1836 = alloca i8*, align 8
  %tmp1858 = alloca i8*, align 8
  %nsz1883 = alloca i32, align 4
  %offset1891 = alloca i32, align 4
  %tmp1916 = alloca i8*, align 8
  %tmp1938 = alloca i8*, align 8
  %nsz1964 = alloca i32, align 4
  %offset1973 = alloca i32, align 4
  %tmp1998 = alloca i8*, align 8
  %tmp2009 = alloca i8*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  store i32 %1, i32* %flags, align 4
  %2 = load i32, i32* %flags, align 4
  %and = and i32 %2, 118423552
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end.114, label %if.then

if.then:                                          ; preds = %entry
  %3 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %cmp = icmp eq %struct.sv* %3, @PL_sv_undef
  br i1 %cmp, label %if.then.1, label %if.else.45

if.then.1:                                        ; preds = %if.then
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 23
  %5 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool2 = icmp ne %struct._PerlIO** %5, null
  br i1 %tobool2, label %if.else.37, label %if.then.3

if.then.3:                                        ; preds = %if.then.1
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %7 = load i8*, i8** %aptr, align 8
  %8 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %8, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf4, i32 0, i32 3
  %9 = load i8*, i8** %aend, align 8
  %cmp5 = icmp ult i8* %7, %9
  br i1 %cmp5, label %if.then.6, label %if.else

if.then.6:                                        ; preds = %if.then.3
  %10 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf7 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %10, i32 0, i32 21
  %aptr8 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf7, i32 0, i32 2
  %11 = load i8*, i8** %aptr8, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %incdec.ptr, i8** %aptr8, align 8
  store i8 14, i8* %11, align 1
  br label %if.end

if.else:                                          ; preds = %if.then.3
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf9 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 21
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf9, i32 0, i32 1
  %13 = load i64, i64* %asiz, align 8
  %add = add i64 1, %13
  %add10 = add i64 %add, 8191
  %and11 = and i64 %add10, -8192
  %conv = trunc i64 %and11 to i32
  store i32 %conv, i32* %nsz, align 4
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf12 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 21
  %aptr13 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf12, i32 0, i32 2
  %15 = load i8*, i8** %aptr13, align 8
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 21
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf14, i32 0, i32 0
  %17 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %15 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %17 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv15 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv15, i32* %offset, align 4
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf16 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 21
  %arena17 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf16, i32 0, i32 0
  %19 = load i8*, i8** %arena17, align 8
  %20 = load i32, i32* %nsz, align 4
  %conv18 = sext i32 %20 to i64
  %mul = mul i64 %conv18, 1
  %call = call i8* @Perl_safesysrealloc(i8* %19, i64 %mul)
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 21
  %arena20 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf19, i32 0, i32 0
  store i8* %call, i8** %arena20, align 8
  %22 = load i32, i32* %nsz, align 4
  %conv21 = sext i32 %22 to i64
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 21
  %asiz23 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf22, i32 0, i32 1
  store i64 %conv21, i64* %asiz23, align 8
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf24 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 21
  %arena25 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf24, i32 0, i32 0
  %25 = load i8*, i8** %arena25, align 8
  %26 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %26 to i64
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 %idx.ext
  %27 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf26 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %27, i32 0, i32 21
  %aptr27 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf26, i32 0, i32 2
  store i8* %add.ptr, i8** %aptr27, align 8
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf28 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 21
  %arena29 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf28, i32 0, i32 0
  %29 = load i8*, i8** %arena29, align 8
  %30 = load i32, i32* %nsz, align 4
  %idx.ext30 = sext i32 %30 to i64
  %add.ptr31 = getelementptr inbounds i8, i8* %29, i64 %idx.ext30
  %31 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf32 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %31, i32 0, i32 21
  %aend33 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf32, i32 0, i32 3
  store i8* %add.ptr31, i8** %aend33, align 8
  store i8* %add.ptr31, i8** %tmp
  %32 = load i8*, i8** %tmp
  %33 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf34 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %33, i32 0, i32 21
  %aptr35 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf34, i32 0, i32 2
  %34 = load i8*, i8** %aptr35, align 8
  %incdec.ptr36 = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %incdec.ptr36, i8** %aptr35, align 8
  store i8 14, i8* %34, align 1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.6
  br label %if.end.44

if.else.37:                                       ; preds = %if.then.1
  %35 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio38 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %35, i32 0, i32 23
  %36 = load %struct._PerlIO**, %struct._PerlIO*** %fio38, align 8
  %call39 = call i32 @PerlIO_putc(%struct._PerlIO** %36, i32 14)
  %cmp40 = icmp eq i32 %call39, -1
  br i1 %cmp40, label %if.then.42, label %if.end.43

if.then.42:                                       ; preds = %if.else.37
  store i32 -1, i32* %retval
  br label %return

if.end.43:                                        ; preds = %if.else.37
  br label %if.end.44

if.end.44:                                        ; preds = %if.end.43, %if.end
  br label %if.end.113

if.else.45:                                       ; preds = %if.then
  %37 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio46 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %37, i32 0, i32 23
  %38 = load %struct._PerlIO**, %struct._PerlIO*** %fio46, align 8
  %tobool47 = icmp ne %struct._PerlIO** %38, null
  br i1 %tobool47, label %if.else.105, label %if.then.48

if.then.48:                                       ; preds = %if.else.45
  %39 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf49 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %39, i32 0, i32 21
  %aptr50 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf49, i32 0, i32 2
  %40 = load i8*, i8** %aptr50, align 8
  %41 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf51 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %41, i32 0, i32 21
  %aend52 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf51, i32 0, i32 3
  %42 = load i8*, i8** %aend52, align 8
  %cmp53 = icmp ult i8* %40, %42
  br i1 %cmp53, label %if.then.55, label %if.else.59

if.then.55:                                       ; preds = %if.then.48
  %43 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf56 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %43, i32 0, i32 21
  %aptr57 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf56, i32 0, i32 2
  %44 = load i8*, i8** %aptr57, align 8
  %incdec.ptr58 = getelementptr inbounds i8, i8* %44, i32 1
  store i8* %incdec.ptr58, i8** %aptr57, align 8
  store i8 5, i8* %44, align 1
  br label %if.end.104

if.else.59:                                       ; preds = %if.then.48
  %45 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf62 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %45, i32 0, i32 21
  %asiz63 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf62, i32 0, i32 1
  %46 = load i64, i64* %asiz63, align 8
  %add64 = add i64 1, %46
  %add65 = add i64 %add64, 8191
  %and66 = and i64 %add65, -8192
  %conv67 = trunc i64 %and66 to i32
  store i32 %conv67, i32* %nsz61, align 4
  %47 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf70 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %47, i32 0, i32 21
  %aptr71 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf70, i32 0, i32 2
  %48 = load i8*, i8** %aptr71, align 8
  %49 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf72 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %49, i32 0, i32 21
  %arena73 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf72, i32 0, i32 0
  %50 = load i8*, i8** %arena73, align 8
  %sub.ptr.lhs.cast74 = ptrtoint i8* %48 to i64
  %sub.ptr.rhs.cast75 = ptrtoint i8* %50 to i64
  %sub.ptr.sub76 = sub i64 %sub.ptr.lhs.cast74, %sub.ptr.rhs.cast75
  %conv77 = trunc i64 %sub.ptr.sub76 to i32
  store i32 %conv77, i32* %offset69, align 4
  %51 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf78 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %51, i32 0, i32 21
  %arena79 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf78, i32 0, i32 0
  %52 = load i8*, i8** %arena79, align 8
  %53 = load i32, i32* %nsz61, align 4
  %conv80 = sext i32 %53 to i64
  %mul81 = mul i64 %conv80, 1
  %call82 = call i8* @Perl_safesysrealloc(i8* %52, i64 %mul81)
  %54 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf83 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %54, i32 0, i32 21
  %arena84 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf83, i32 0, i32 0
  store i8* %call82, i8** %arena84, align 8
  %55 = load i32, i32* %nsz61, align 4
  %conv85 = sext i32 %55 to i64
  %56 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf86 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %56, i32 0, i32 21
  %asiz87 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf86, i32 0, i32 1
  store i64 %conv85, i64* %asiz87, align 8
  %57 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf88 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %57, i32 0, i32 21
  %arena89 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf88, i32 0, i32 0
  %58 = load i8*, i8** %arena89, align 8
  %59 = load i32, i32* %offset69, align 4
  %idx.ext90 = sext i32 %59 to i64
  %add.ptr91 = getelementptr inbounds i8, i8* %58, i64 %idx.ext90
  %60 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf92 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %60, i32 0, i32 21
  %aptr93 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf92, i32 0, i32 2
  store i8* %add.ptr91, i8** %aptr93, align 8
  %61 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf95 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %61, i32 0, i32 21
  %arena96 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf95, i32 0, i32 0
  %62 = load i8*, i8** %arena96, align 8
  %63 = load i32, i32* %nsz61, align 4
  %idx.ext97 = sext i32 %63 to i64
  %add.ptr98 = getelementptr inbounds i8, i8* %62, i64 %idx.ext97
  %64 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf99 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %64, i32 0, i32 21
  %aend100 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf99, i32 0, i32 3
  store i8* %add.ptr98, i8** %aend100, align 8
  store i8* %add.ptr98, i8** %tmp94
  %65 = load i8*, i8** %tmp94
  %66 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf101 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %66, i32 0, i32 21
  %aptr102 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf101, i32 0, i32 2
  %67 = load i8*, i8** %aptr102, align 8
  %incdec.ptr103 = getelementptr inbounds i8, i8* %67, i32 1
  store i8* %incdec.ptr103, i8** %aptr102, align 8
  store i8 5, i8* %67, align 1
  br label %if.end.104

if.end.104:                                       ; preds = %if.else.59, %if.then.55
  br label %if.end.112

if.else.105:                                      ; preds = %if.else.45
  %68 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio106 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %68, i32 0, i32 23
  %69 = load %struct._PerlIO**, %struct._PerlIO*** %fio106, align 8
  %call107 = call i32 @PerlIO_putc(%struct._PerlIO** %69, i32 5)
  %cmp108 = icmp eq i32 %call107, -1
  br i1 %cmp108, label %if.then.110, label %if.end.111

if.then.110:                                      ; preds = %if.else.105
  store i32 -1, i32* %retval
  br label %return

if.end.111:                                       ; preds = %if.else.105
  br label %if.end.112

if.end.112:                                       ; preds = %if.end.111, %if.end.104
  br label %if.end.113

if.end.113:                                       ; preds = %if.end.112, %if.end.44
  store i32 0, i32* %retval
  br label %return

if.end.114:                                       ; preds = %entry
  %70 = load i32, i32* %flags, align 4
  %and115 = and i32 %70, 8781824
  %cmp116 = icmp eq i32 %and115, 8781824
  br i1 %cmp116, label %if.then.118, label %if.else.269

if.then.118:                                      ; preds = %if.end.114
  %71 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %cmp119 = icmp eq %struct.sv* %71, @PL_sv_yes
  br i1 %cmp119, label %if.then.121, label %if.else.189

if.then.121:                                      ; preds = %if.then.118
  %72 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio122 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %72, i32 0, i32 23
  %73 = load %struct._PerlIO**, %struct._PerlIO*** %fio122, align 8
  %tobool123 = icmp ne %struct._PerlIO** %73, null
  br i1 %tobool123, label %if.else.181, label %if.then.124

if.then.124:                                      ; preds = %if.then.121
  %74 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf125 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %74, i32 0, i32 21
  %aptr126 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf125, i32 0, i32 2
  %75 = load i8*, i8** %aptr126, align 8
  %76 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf127 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %76, i32 0, i32 21
  %aend128 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf127, i32 0, i32 3
  %77 = load i8*, i8** %aend128, align 8
  %cmp129 = icmp ult i8* %75, %77
  br i1 %cmp129, label %if.then.131, label %if.else.135

if.then.131:                                      ; preds = %if.then.124
  %78 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf132 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %78, i32 0, i32 21
  %aptr133 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf132, i32 0, i32 2
  %79 = load i8*, i8** %aptr133, align 8
  %incdec.ptr134 = getelementptr inbounds i8, i8* %79, i32 1
  store i8* %incdec.ptr134, i8** %aptr133, align 8
  store i8 15, i8* %79, align 1
  br label %if.end.180

if.else.135:                                      ; preds = %if.then.124
  %80 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf138 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %80, i32 0, i32 21
  %asiz139 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf138, i32 0, i32 1
  %81 = load i64, i64* %asiz139, align 8
  %add140 = add i64 1, %81
  %add141 = add i64 %add140, 8191
  %and142 = and i64 %add141, -8192
  %conv143 = trunc i64 %and142 to i32
  store i32 %conv143, i32* %nsz137, align 4
  %82 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf146 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %82, i32 0, i32 21
  %aptr147 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf146, i32 0, i32 2
  %83 = load i8*, i8** %aptr147, align 8
  %84 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf148 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %84, i32 0, i32 21
  %arena149 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf148, i32 0, i32 0
  %85 = load i8*, i8** %arena149, align 8
  %sub.ptr.lhs.cast150 = ptrtoint i8* %83 to i64
  %sub.ptr.rhs.cast151 = ptrtoint i8* %85 to i64
  %sub.ptr.sub152 = sub i64 %sub.ptr.lhs.cast150, %sub.ptr.rhs.cast151
  %conv153 = trunc i64 %sub.ptr.sub152 to i32
  store i32 %conv153, i32* %offset145, align 4
  %86 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf154 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %86, i32 0, i32 21
  %arena155 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf154, i32 0, i32 0
  %87 = load i8*, i8** %arena155, align 8
  %88 = load i32, i32* %nsz137, align 4
  %conv156 = sext i32 %88 to i64
  %mul157 = mul i64 %conv156, 1
  %call158 = call i8* @Perl_safesysrealloc(i8* %87, i64 %mul157)
  %89 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf159 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %89, i32 0, i32 21
  %arena160 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf159, i32 0, i32 0
  store i8* %call158, i8** %arena160, align 8
  %90 = load i32, i32* %nsz137, align 4
  %conv161 = sext i32 %90 to i64
  %91 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf162 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %91, i32 0, i32 21
  %asiz163 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf162, i32 0, i32 1
  store i64 %conv161, i64* %asiz163, align 8
  %92 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf164 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %92, i32 0, i32 21
  %arena165 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf164, i32 0, i32 0
  %93 = load i8*, i8** %arena165, align 8
  %94 = load i32, i32* %offset145, align 4
  %idx.ext166 = sext i32 %94 to i64
  %add.ptr167 = getelementptr inbounds i8, i8* %93, i64 %idx.ext166
  %95 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf168 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %95, i32 0, i32 21
  %aptr169 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf168, i32 0, i32 2
  store i8* %add.ptr167, i8** %aptr169, align 8
  %96 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf171 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %96, i32 0, i32 21
  %arena172 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf171, i32 0, i32 0
  %97 = load i8*, i8** %arena172, align 8
  %98 = load i32, i32* %nsz137, align 4
  %idx.ext173 = sext i32 %98 to i64
  %add.ptr174 = getelementptr inbounds i8, i8* %97, i64 %idx.ext173
  %99 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf175 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %99, i32 0, i32 21
  %aend176 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf175, i32 0, i32 3
  store i8* %add.ptr174, i8** %aend176, align 8
  store i8* %add.ptr174, i8** %tmp170
  %100 = load i8*, i8** %tmp170
  %101 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf177 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %101, i32 0, i32 21
  %aptr178 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf177, i32 0, i32 2
  %102 = load i8*, i8** %aptr178, align 8
  %incdec.ptr179 = getelementptr inbounds i8, i8* %102, i32 1
  store i8* %incdec.ptr179, i8** %aptr178, align 8
  store i8 15, i8* %102, align 1
  br label %if.end.180

if.end.180:                                       ; preds = %if.else.135, %if.then.131
  br label %if.end.188

if.else.181:                                      ; preds = %if.then.121
  %103 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio182 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %103, i32 0, i32 23
  %104 = load %struct._PerlIO**, %struct._PerlIO*** %fio182, align 8
  %call183 = call i32 @PerlIO_putc(%struct._PerlIO** %104, i32 15)
  %cmp184 = icmp eq i32 %call183, -1
  br i1 %cmp184, label %if.then.186, label %if.end.187

if.then.186:                                      ; preds = %if.else.181
  store i32 -1, i32* %retval
  br label %return

if.end.187:                                       ; preds = %if.else.181
  br label %if.end.188

if.end.188:                                       ; preds = %if.end.187, %if.end.180
  br label %if.end.268

if.else.189:                                      ; preds = %if.then.118
  %105 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %cmp190 = icmp eq %struct.sv* %105, @PL_sv_no
  br i1 %cmp190, label %if.then.192, label %if.else.260

if.then.192:                                      ; preds = %if.else.189
  %106 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio193 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %106, i32 0, i32 23
  %107 = load %struct._PerlIO**, %struct._PerlIO*** %fio193, align 8
  %tobool194 = icmp ne %struct._PerlIO** %107, null
  br i1 %tobool194, label %if.else.252, label %if.then.195

if.then.195:                                      ; preds = %if.then.192
  %108 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf196 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %108, i32 0, i32 21
  %aptr197 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf196, i32 0, i32 2
  %109 = load i8*, i8** %aptr197, align 8
  %110 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf198 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %110, i32 0, i32 21
  %aend199 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf198, i32 0, i32 3
  %111 = load i8*, i8** %aend199, align 8
  %cmp200 = icmp ult i8* %109, %111
  br i1 %cmp200, label %if.then.202, label %if.else.206

if.then.202:                                      ; preds = %if.then.195
  %112 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf203 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %112, i32 0, i32 21
  %aptr204 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf203, i32 0, i32 2
  %113 = load i8*, i8** %aptr204, align 8
  %incdec.ptr205 = getelementptr inbounds i8, i8* %113, i32 1
  store i8* %incdec.ptr205, i8** %aptr204, align 8
  store i8 16, i8* %113, align 1
  br label %if.end.251

if.else.206:                                      ; preds = %if.then.195
  %114 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf209 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %114, i32 0, i32 21
  %asiz210 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf209, i32 0, i32 1
  %115 = load i64, i64* %asiz210, align 8
  %add211 = add i64 1, %115
  %add212 = add i64 %add211, 8191
  %and213 = and i64 %add212, -8192
  %conv214 = trunc i64 %and213 to i32
  store i32 %conv214, i32* %nsz208, align 4
  %116 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf217 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %116, i32 0, i32 21
  %aptr218 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf217, i32 0, i32 2
  %117 = load i8*, i8** %aptr218, align 8
  %118 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf219 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %118, i32 0, i32 21
  %arena220 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf219, i32 0, i32 0
  %119 = load i8*, i8** %arena220, align 8
  %sub.ptr.lhs.cast221 = ptrtoint i8* %117 to i64
  %sub.ptr.rhs.cast222 = ptrtoint i8* %119 to i64
  %sub.ptr.sub223 = sub i64 %sub.ptr.lhs.cast221, %sub.ptr.rhs.cast222
  %conv224 = trunc i64 %sub.ptr.sub223 to i32
  store i32 %conv224, i32* %offset216, align 4
  %120 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf225 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %120, i32 0, i32 21
  %arena226 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf225, i32 0, i32 0
  %121 = load i8*, i8** %arena226, align 8
  %122 = load i32, i32* %nsz208, align 4
  %conv227 = sext i32 %122 to i64
  %mul228 = mul i64 %conv227, 1
  %call229 = call i8* @Perl_safesysrealloc(i8* %121, i64 %mul228)
  %123 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf230 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %123, i32 0, i32 21
  %arena231 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf230, i32 0, i32 0
  store i8* %call229, i8** %arena231, align 8
  %124 = load i32, i32* %nsz208, align 4
  %conv232 = sext i32 %124 to i64
  %125 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf233 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %125, i32 0, i32 21
  %asiz234 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf233, i32 0, i32 1
  store i64 %conv232, i64* %asiz234, align 8
  %126 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf235 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %126, i32 0, i32 21
  %arena236 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf235, i32 0, i32 0
  %127 = load i8*, i8** %arena236, align 8
  %128 = load i32, i32* %offset216, align 4
  %idx.ext237 = sext i32 %128 to i64
  %add.ptr238 = getelementptr inbounds i8, i8* %127, i64 %idx.ext237
  %129 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf239 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %129, i32 0, i32 21
  %aptr240 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf239, i32 0, i32 2
  store i8* %add.ptr238, i8** %aptr240, align 8
  %130 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf242 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %130, i32 0, i32 21
  %arena243 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf242, i32 0, i32 0
  %131 = load i8*, i8** %arena243, align 8
  %132 = load i32, i32* %nsz208, align 4
  %idx.ext244 = sext i32 %132 to i64
  %add.ptr245 = getelementptr inbounds i8, i8* %131, i64 %idx.ext244
  %133 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf246 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %133, i32 0, i32 21
  %aend247 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf246, i32 0, i32 3
  store i8* %add.ptr245, i8** %aend247, align 8
  store i8* %add.ptr245, i8** %tmp241
  %134 = load i8*, i8** %tmp241
  %135 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf248 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %135, i32 0, i32 21
  %aptr249 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf248, i32 0, i32 2
  %136 = load i8*, i8** %aptr249, align 8
  %incdec.ptr250 = getelementptr inbounds i8, i8* %136, i32 1
  store i8* %incdec.ptr250, i8** %aptr249, align 8
  store i8 16, i8* %136, align 1
  br label %if.end.251

if.end.251:                                       ; preds = %if.else.206, %if.then.202
  br label %if.end.259

if.else.252:                                      ; preds = %if.then.192
  %137 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio253 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %137, i32 0, i32 23
  %138 = load %struct._PerlIO**, %struct._PerlIO*** %fio253, align 8
  %call254 = call i32 @PerlIO_putc(%struct._PerlIO** %138, i32 16)
  %cmp255 = icmp eq i32 %call254, -1
  br i1 %cmp255, label %if.then.257, label %if.end.258

if.then.257:                                      ; preds = %if.else.252
  store i32 -1, i32* %retval
  br label %return

if.end.258:                                       ; preds = %if.else.252
  br label %if.end.259

if.end.259:                                       ; preds = %if.end.258, %if.end.251
  br label %if.end.267

if.else.260:                                      ; preds = %if.else.189
  %139 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags261 = getelementptr inbounds %struct.sv, %struct.sv* %139, i32 0, i32 2
  %140 = load i32, i32* %sv_flags261, align 4
  %and262 = and i32 %140, 262144
  %cmp263 = icmp eq i32 %and262, 262144
  br i1 %cmp263, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else.260
  %141 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %141, i32 0, i32 0
  %142 = load i8*, i8** %sv_any, align 8
  %143 = bitcast i8* %142 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %143, i32 0, i32 1
  %144 = load i64, i64* %xpv_cur, align 8
  store i64 %144, i64* %len, align 8
  %145 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any265 = getelementptr inbounds %struct.sv, %struct.sv* %145, i32 0, i32 0
  %146 = load i8*, i8** %sv_any265, align 8
  %147 = bitcast i8* %146 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %147, i32 0, i32 0
  %148 = load i8*, i8** %xpv_pv, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.else.260
  %149 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call266 = call i8* @Perl_sv_2pv_flags(%struct.sv* %149, i64* %len, i32 2)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %148, %cond.true ], [ %call266, %cond.false ]
  store i8* %cond, i8** %pv, align 8
  br label %string

if.end.267:                                       ; preds = %if.end.259
  br label %if.end.268

if.end.268:                                       ; preds = %if.end.267, %if.end.188
  br label %if.end.2032

if.else.269:                                      ; preds = %if.end.114
  %150 = load i32, i32* %flags, align 4
  %and270 = and i32 %150, 262144
  %tobool271 = icmp ne i32 %and270, 0
  br i1 %tobool271, label %if.then.272, label %if.else.273

if.then.272:                                      ; preds = %if.else.269
  br label %string_readlen

if.else.273:                                      ; preds = %if.else.269
  %151 = load i32, i32* %flags, align 4
  %and274 = and i32 %151, 65536
  %tobool275 = icmp ne i32 %and274, 0
  br i1 %tobool275, label %if.then.276, label %if.else.758

if.then.276:                                      ; preds = %if.else.273
  %152 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags277 = getelementptr inbounds %struct.sv, %struct.sv* %152, i32 0, i32 2
  %153 = load i32, i32* %sv_flags277, align 4
  %and278 = and i32 %153, 65536
  %tobool279 = icmp ne i32 %and278, 0
  br i1 %tobool279, label %cond.true.280, label %cond.false.282

cond.true.280:                                    ; preds = %if.then.276
  %154 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any281 = getelementptr inbounds %struct.sv, %struct.sv* %154, i32 0, i32 0
  %155 = load i8*, i8** %sv_any281, align 8
  %156 = bitcast i8* %155 to %struct.xpviv*
  %xiv_iv = getelementptr inbounds %struct.xpviv, %struct.xpviv* %156, i32 0, i32 3
  %157 = load i64, i64* %xiv_iv, align 8
  br label %cond.end.284

cond.false.282:                                   ; preds = %if.then.276
  %158 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call283 = call i64 @Perl_sv_2iv(%struct.sv* %158)
  br label %cond.end.284

cond.end.284:                                     ; preds = %cond.false.282, %cond.true.280
  %cond285 = phi i64 [ %157, %cond.true.280 ], [ %call283, %cond.false.282 ]
  store i64 %cond285, i64* %iv, align 8
  br label %integer

integer:                                          ; preds = %cond.end.799, %cond.end.284
  %159 = load i32, i32* %flags, align 4
  %and286 = and i32 %159, -2147483648
  %tobool287 = icmp ne i32 %and286, 0
  br i1 %tobool287, label %land.lhs.true, label %if.end.300

land.lhs.true:                                    ; preds = %integer
  %160 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags288 = getelementptr inbounds %struct.sv, %struct.sv* %160, i32 0, i32 2
  %161 = load i32, i32* %sv_flags288, align 4
  %and289 = and i32 %161, 65536
  %tobool290 = icmp ne i32 %and289, 0
  br i1 %tobool290, label %cond.true.291, label %cond.false.293

cond.true.291:                                    ; preds = %land.lhs.true
  %162 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any292 = getelementptr inbounds %struct.sv, %struct.sv* %162, i32 0, i32 0
  %163 = load i8*, i8** %sv_any292, align 8
  %164 = bitcast i8* %163 to %struct.xpvuv*
  %xuv_uv = getelementptr inbounds %struct.xpvuv, %struct.xpvuv* %164, i32 0, i32 3
  %165 = load i64, i64* %xuv_uv, align 8
  br label %cond.end.295

cond.false.293:                                   ; preds = %land.lhs.true
  %166 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call294 = call i64 @Perl_sv_2uv(%struct.sv* %166)
  br label %cond.end.295

cond.end.295:                                     ; preds = %cond.false.293, %cond.true.291
  %cond296 = phi i64 [ %165, %cond.true.291 ], [ %call294, %cond.false.293 ]
  %cmp297 = icmp ugt i64 %cond296, 9223372036854775807
  br i1 %cmp297, label %if.then.299, label %if.end.300

if.then.299:                                      ; preds = %cond.end.295
  br label %string_readlen

if.end.300:                                       ; preds = %cond.end.295, %integer
  %167 = load i64, i64* %iv, align 8
  %cmp301 = icmp sge i64 %167, -128
  br i1 %cmp301, label %land.lhs.true.303, label %if.else.445

land.lhs.true.303:                                ; preds = %if.end.300
  %168 = load i64, i64* %iv, align 8
  %cmp304 = icmp sle i64 %168, 127
  br i1 %cmp304, label %if.then.306, label %if.else.445

if.then.306:                                      ; preds = %land.lhs.true.303
  %169 = load i64, i64* %iv, align 8
  %add308 = add nsw i64 %169, 128
  %conv309 = trunc i64 %add308 to i8
  store i8 %conv309, i8* %siv, align 1
  %170 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio310 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %170, i32 0, i32 23
  %171 = load %struct._PerlIO**, %struct._PerlIO*** %fio310, align 8
  %tobool311 = icmp ne %struct._PerlIO** %171, null
  br i1 %tobool311, label %if.else.369, label %if.then.312

if.then.312:                                      ; preds = %if.then.306
  %172 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf313 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %172, i32 0, i32 21
  %aptr314 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf313, i32 0, i32 2
  %173 = load i8*, i8** %aptr314, align 8
  %174 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf315 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %174, i32 0, i32 21
  %aend316 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf315, i32 0, i32 3
  %175 = load i8*, i8** %aend316, align 8
  %cmp317 = icmp ult i8* %173, %175
  br i1 %cmp317, label %if.then.319, label %if.else.323

if.then.319:                                      ; preds = %if.then.312
  %176 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf320 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %176, i32 0, i32 21
  %aptr321 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf320, i32 0, i32 2
  %177 = load i8*, i8** %aptr321, align 8
  %incdec.ptr322 = getelementptr inbounds i8, i8* %177, i32 1
  store i8* %incdec.ptr322, i8** %aptr321, align 8
  store i8 8, i8* %177, align 1
  br label %if.end.368

if.else.323:                                      ; preds = %if.then.312
  %178 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf326 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %178, i32 0, i32 21
  %asiz327 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf326, i32 0, i32 1
  %179 = load i64, i64* %asiz327, align 8
  %add328 = add i64 1, %179
  %add329 = add i64 %add328, 8191
  %and330 = and i64 %add329, -8192
  %conv331 = trunc i64 %and330 to i32
  store i32 %conv331, i32* %nsz325, align 4
  %180 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf334 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %180, i32 0, i32 21
  %aptr335 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf334, i32 0, i32 2
  %181 = load i8*, i8** %aptr335, align 8
  %182 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf336 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %182, i32 0, i32 21
  %arena337 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf336, i32 0, i32 0
  %183 = load i8*, i8** %arena337, align 8
  %sub.ptr.lhs.cast338 = ptrtoint i8* %181 to i64
  %sub.ptr.rhs.cast339 = ptrtoint i8* %183 to i64
  %sub.ptr.sub340 = sub i64 %sub.ptr.lhs.cast338, %sub.ptr.rhs.cast339
  %conv341 = trunc i64 %sub.ptr.sub340 to i32
  store i32 %conv341, i32* %offset333, align 4
  %184 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf342 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %184, i32 0, i32 21
  %arena343 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf342, i32 0, i32 0
  %185 = load i8*, i8** %arena343, align 8
  %186 = load i32, i32* %nsz325, align 4
  %conv344 = sext i32 %186 to i64
  %mul345 = mul i64 %conv344, 1
  %call346 = call i8* @Perl_safesysrealloc(i8* %185, i64 %mul345)
  %187 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf347 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %187, i32 0, i32 21
  %arena348 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf347, i32 0, i32 0
  store i8* %call346, i8** %arena348, align 8
  %188 = load i32, i32* %nsz325, align 4
  %conv349 = sext i32 %188 to i64
  %189 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf350 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %189, i32 0, i32 21
  %asiz351 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf350, i32 0, i32 1
  store i64 %conv349, i64* %asiz351, align 8
  %190 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf352 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %190, i32 0, i32 21
  %arena353 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf352, i32 0, i32 0
  %191 = load i8*, i8** %arena353, align 8
  %192 = load i32, i32* %offset333, align 4
  %idx.ext354 = sext i32 %192 to i64
  %add.ptr355 = getelementptr inbounds i8, i8* %191, i64 %idx.ext354
  %193 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf356 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %193, i32 0, i32 21
  %aptr357 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf356, i32 0, i32 2
  store i8* %add.ptr355, i8** %aptr357, align 8
  %194 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf359 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %194, i32 0, i32 21
  %arena360 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf359, i32 0, i32 0
  %195 = load i8*, i8** %arena360, align 8
  %196 = load i32, i32* %nsz325, align 4
  %idx.ext361 = sext i32 %196 to i64
  %add.ptr362 = getelementptr inbounds i8, i8* %195, i64 %idx.ext361
  %197 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf363 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %197, i32 0, i32 21
  %aend364 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf363, i32 0, i32 3
  store i8* %add.ptr362, i8** %aend364, align 8
  store i8* %add.ptr362, i8** %tmp358
  %198 = load i8*, i8** %tmp358
  %199 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf365 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %199, i32 0, i32 21
  %aptr366 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf365, i32 0, i32 2
  %200 = load i8*, i8** %aptr366, align 8
  %incdec.ptr367 = getelementptr inbounds i8, i8* %200, i32 1
  store i8* %incdec.ptr367, i8** %aptr366, align 8
  store i8 8, i8* %200, align 1
  br label %if.end.368

if.end.368:                                       ; preds = %if.else.323, %if.then.319
  br label %if.end.376

if.else.369:                                      ; preds = %if.then.306
  %201 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio370 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %201, i32 0, i32 23
  %202 = load %struct._PerlIO**, %struct._PerlIO*** %fio370, align 8
  %call371 = call i32 @PerlIO_putc(%struct._PerlIO** %202, i32 8)
  %cmp372 = icmp eq i32 %call371, -1
  br i1 %cmp372, label %if.then.374, label %if.end.375

if.then.374:                                      ; preds = %if.else.369
  store i32 -1, i32* %retval
  br label %return

if.end.375:                                       ; preds = %if.else.369
  br label %if.end.376

if.end.376:                                       ; preds = %if.end.375, %if.end.368
  %203 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio377 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %203, i32 0, i32 23
  %204 = load %struct._PerlIO**, %struct._PerlIO*** %fio377, align 8
  %tobool378 = icmp ne %struct._PerlIO** %204, null
  br i1 %tobool378, label %if.else.436, label %if.then.379

if.then.379:                                      ; preds = %if.end.376
  %205 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf380 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %205, i32 0, i32 21
  %aptr381 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf380, i32 0, i32 2
  %206 = load i8*, i8** %aptr381, align 8
  %207 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf382 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %207, i32 0, i32 21
  %aend383 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf382, i32 0, i32 3
  %208 = load i8*, i8** %aend383, align 8
  %cmp384 = icmp ult i8* %206, %208
  br i1 %cmp384, label %if.then.386, label %if.else.390

if.then.386:                                      ; preds = %if.then.379
  %209 = load i8, i8* %siv, align 1
  %210 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf387 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %210, i32 0, i32 21
  %aptr388 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf387, i32 0, i32 2
  %211 = load i8*, i8** %aptr388, align 8
  %incdec.ptr389 = getelementptr inbounds i8, i8* %211, i32 1
  store i8* %incdec.ptr389, i8** %aptr388, align 8
  store i8 %209, i8* %211, align 1
  br label %if.end.435

if.else.390:                                      ; preds = %if.then.379
  %212 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf393 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %212, i32 0, i32 21
  %asiz394 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf393, i32 0, i32 1
  %213 = load i64, i64* %asiz394, align 8
  %add395 = add i64 1, %213
  %add396 = add i64 %add395, 8191
  %and397 = and i64 %add396, -8192
  %conv398 = trunc i64 %and397 to i32
  store i32 %conv398, i32* %nsz392, align 4
  %214 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf401 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %214, i32 0, i32 21
  %aptr402 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf401, i32 0, i32 2
  %215 = load i8*, i8** %aptr402, align 8
  %216 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf403 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %216, i32 0, i32 21
  %arena404 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf403, i32 0, i32 0
  %217 = load i8*, i8** %arena404, align 8
  %sub.ptr.lhs.cast405 = ptrtoint i8* %215 to i64
  %sub.ptr.rhs.cast406 = ptrtoint i8* %217 to i64
  %sub.ptr.sub407 = sub i64 %sub.ptr.lhs.cast405, %sub.ptr.rhs.cast406
  %conv408 = trunc i64 %sub.ptr.sub407 to i32
  store i32 %conv408, i32* %offset400, align 4
  %218 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf409 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %218, i32 0, i32 21
  %arena410 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf409, i32 0, i32 0
  %219 = load i8*, i8** %arena410, align 8
  %220 = load i32, i32* %nsz392, align 4
  %conv411 = sext i32 %220 to i64
  %mul412 = mul i64 %conv411, 1
  %call413 = call i8* @Perl_safesysrealloc(i8* %219, i64 %mul412)
  %221 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf414 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %221, i32 0, i32 21
  %arena415 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf414, i32 0, i32 0
  store i8* %call413, i8** %arena415, align 8
  %222 = load i32, i32* %nsz392, align 4
  %conv416 = sext i32 %222 to i64
  %223 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf417 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %223, i32 0, i32 21
  %asiz418 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf417, i32 0, i32 1
  store i64 %conv416, i64* %asiz418, align 8
  %224 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf419 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %224, i32 0, i32 21
  %arena420 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf419, i32 0, i32 0
  %225 = load i8*, i8** %arena420, align 8
  %226 = load i32, i32* %offset400, align 4
  %idx.ext421 = sext i32 %226 to i64
  %add.ptr422 = getelementptr inbounds i8, i8* %225, i64 %idx.ext421
  %227 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf423 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %227, i32 0, i32 21
  %aptr424 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf423, i32 0, i32 2
  store i8* %add.ptr422, i8** %aptr424, align 8
  %228 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf426 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %228, i32 0, i32 21
  %arena427 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf426, i32 0, i32 0
  %229 = load i8*, i8** %arena427, align 8
  %230 = load i32, i32* %nsz392, align 4
  %idx.ext428 = sext i32 %230 to i64
  %add.ptr429 = getelementptr inbounds i8, i8* %229, i64 %idx.ext428
  %231 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf430 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %231, i32 0, i32 21
  %aend431 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf430, i32 0, i32 3
  store i8* %add.ptr429, i8** %aend431, align 8
  store i8* %add.ptr429, i8** %tmp425
  %232 = load i8*, i8** %tmp425
  %233 = load i8, i8* %siv, align 1
  %234 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf432 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %234, i32 0, i32 21
  %aptr433 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf432, i32 0, i32 2
  %235 = load i8*, i8** %aptr433, align 8
  %incdec.ptr434 = getelementptr inbounds i8, i8* %235, i32 1
  store i8* %incdec.ptr434, i8** %aptr433, align 8
  store i8 %233, i8* %235, align 1
  br label %if.end.435

if.end.435:                                       ; preds = %if.else.390, %if.then.386
  br label %if.end.444

if.else.436:                                      ; preds = %if.end.376
  %236 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio437 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %236, i32 0, i32 23
  %237 = load %struct._PerlIO**, %struct._PerlIO*** %fio437, align 8
  %238 = load i8, i8* %siv, align 1
  %conv438 = zext i8 %238 to i32
  %call439 = call i32 @PerlIO_putc(%struct._PerlIO** %237, i32 %conv438)
  %cmp440 = icmp eq i32 %call439, -1
  br i1 %cmp440, label %if.then.442, label %if.end.443

if.then.442:                                      ; preds = %if.else.436
  store i32 -1, i32* %retval
  br label %return

if.end.443:                                       ; preds = %if.else.436
  br label %if.end.444

if.end.444:                                       ; preds = %if.end.443, %if.end.435
  br label %if.end.757

if.else.445:                                      ; preds = %land.lhs.true.303, %if.end.300
  %239 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %239, i32 0, i32 11
  %240 = load i32, i32* %netorder, align 4
  %tobool446 = icmp ne i32 %240, 0
  br i1 %tobool446, label %if.then.447, label %if.else.621

if.then.447:                                      ; preds = %if.else.445
  %241 = load i32, i32* %flags, align 4
  %and449 = and i32 %241, -2147483648
  %tobool450 = icmp ne i32 %and449, 0
  br i1 %tobool450, label %land.lhs.true.451, label %lor.lhs.false

land.lhs.true.451:                                ; preds = %if.then.447
  %242 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags452 = getelementptr inbounds %struct.sv, %struct.sv* %242, i32 0, i32 2
  %243 = load i32, i32* %sv_flags452, align 4
  %and453 = and i32 %243, 65536
  %tobool454 = icmp ne i32 %and453, 0
  br i1 %tobool454, label %cond.true.455, label %cond.false.458

cond.true.455:                                    ; preds = %land.lhs.true.451
  %244 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any456 = getelementptr inbounds %struct.sv, %struct.sv* %244, i32 0, i32 0
  %245 = load i8*, i8** %sv_any456, align 8
  %246 = bitcast i8* %245 to %struct.xpvuv*
  %xuv_uv457 = getelementptr inbounds %struct.xpvuv, %struct.xpvuv* %246, i32 0, i32 3
  %247 = load i64, i64* %xuv_uv457, align 8
  br label %cond.end.460

cond.false.458:                                   ; preds = %land.lhs.true.451
  %248 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call459 = call i64 @Perl_sv_2uv(%struct.sv* %248)
  br label %cond.end.460

cond.end.460:                                     ; preds = %cond.false.458, %cond.true.455
  %cond461 = phi i64 [ %247, %cond.true.455 ], [ %call459, %cond.false.458 ]
  %cmp462 = icmp ugt i64 %cond461, 2147483647
  br i1 %cmp462, label %if.then.469, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.end.460, %if.then.447
  %249 = load i64, i64* %iv, align 8
  %cmp464 = icmp sgt i64 %249, 2147483647
  br i1 %cmp464, label %if.then.469, label %lor.lhs.false.466

lor.lhs.false.466:                                ; preds = %lor.lhs.false
  %250 = load i64, i64* %iv, align 8
  %cmp467 = icmp slt i64 %250, 2147483648
  br i1 %cmp467, label %if.then.469, label %if.end.470

if.then.469:                                      ; preds = %lor.lhs.false.466, %lor.lhs.false, %cond.end.460
  br label %string_readlen

if.end.470:                                       ; preds = %lor.lhs.false.466
  %251 = load i64, i64* %iv, align 8
  %conv471 = trunc i64 %251 to i32
  %conv472 = sext i32 %conv471 to i64
  %call473 = call i64 @Perl_my_htonl(i64 %conv472)
  %conv474 = trunc i64 %call473 to i32
  store i32 %conv474, i32* %niv, align 4
  %252 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio475 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %252, i32 0, i32 23
  %253 = load %struct._PerlIO**, %struct._PerlIO*** %fio475, align 8
  %tobool476 = icmp ne %struct._PerlIO** %253, null
  br i1 %tobool476, label %if.else.534, label %if.then.477

if.then.477:                                      ; preds = %if.end.470
  %254 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf478 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %254, i32 0, i32 21
  %aptr479 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf478, i32 0, i32 2
  %255 = load i8*, i8** %aptr479, align 8
  %256 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf480 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %256, i32 0, i32 21
  %aend481 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf480, i32 0, i32 3
  %257 = load i8*, i8** %aend481, align 8
  %cmp482 = icmp ult i8* %255, %257
  br i1 %cmp482, label %if.then.484, label %if.else.488

if.then.484:                                      ; preds = %if.then.477
  %258 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf485 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %258, i32 0, i32 21
  %aptr486 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf485, i32 0, i32 2
  %259 = load i8*, i8** %aptr486, align 8
  %incdec.ptr487 = getelementptr inbounds i8, i8* %259, i32 1
  store i8* %incdec.ptr487, i8** %aptr486, align 8
  store i8 9, i8* %259, align 1
  br label %if.end.533

if.else.488:                                      ; preds = %if.then.477
  %260 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf491 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %260, i32 0, i32 21
  %asiz492 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf491, i32 0, i32 1
  %261 = load i64, i64* %asiz492, align 8
  %add493 = add i64 1, %261
  %add494 = add i64 %add493, 8191
  %and495 = and i64 %add494, -8192
  %conv496 = trunc i64 %and495 to i32
  store i32 %conv496, i32* %nsz490, align 4
  %262 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf499 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %262, i32 0, i32 21
  %aptr500 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf499, i32 0, i32 2
  %263 = load i8*, i8** %aptr500, align 8
  %264 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf501 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %264, i32 0, i32 21
  %arena502 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf501, i32 0, i32 0
  %265 = load i8*, i8** %arena502, align 8
  %sub.ptr.lhs.cast503 = ptrtoint i8* %263 to i64
  %sub.ptr.rhs.cast504 = ptrtoint i8* %265 to i64
  %sub.ptr.sub505 = sub i64 %sub.ptr.lhs.cast503, %sub.ptr.rhs.cast504
  %conv506 = trunc i64 %sub.ptr.sub505 to i32
  store i32 %conv506, i32* %offset498, align 4
  %266 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf507 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %266, i32 0, i32 21
  %arena508 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf507, i32 0, i32 0
  %267 = load i8*, i8** %arena508, align 8
  %268 = load i32, i32* %nsz490, align 4
  %conv509 = sext i32 %268 to i64
  %mul510 = mul i64 %conv509, 1
  %call511 = call i8* @Perl_safesysrealloc(i8* %267, i64 %mul510)
  %269 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf512 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %269, i32 0, i32 21
  %arena513 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf512, i32 0, i32 0
  store i8* %call511, i8** %arena513, align 8
  %270 = load i32, i32* %nsz490, align 4
  %conv514 = sext i32 %270 to i64
  %271 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf515 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %271, i32 0, i32 21
  %asiz516 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf515, i32 0, i32 1
  store i64 %conv514, i64* %asiz516, align 8
  %272 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf517 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %272, i32 0, i32 21
  %arena518 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf517, i32 0, i32 0
  %273 = load i8*, i8** %arena518, align 8
  %274 = load i32, i32* %offset498, align 4
  %idx.ext519 = sext i32 %274 to i64
  %add.ptr520 = getelementptr inbounds i8, i8* %273, i64 %idx.ext519
  %275 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf521 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %275, i32 0, i32 21
  %aptr522 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf521, i32 0, i32 2
  store i8* %add.ptr520, i8** %aptr522, align 8
  %276 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf524 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %276, i32 0, i32 21
  %arena525 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf524, i32 0, i32 0
  %277 = load i8*, i8** %arena525, align 8
  %278 = load i32, i32* %nsz490, align 4
  %idx.ext526 = sext i32 %278 to i64
  %add.ptr527 = getelementptr inbounds i8, i8* %277, i64 %idx.ext526
  %279 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf528 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %279, i32 0, i32 21
  %aend529 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf528, i32 0, i32 3
  store i8* %add.ptr527, i8** %aend529, align 8
  store i8* %add.ptr527, i8** %tmp523
  %280 = load i8*, i8** %tmp523
  %281 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf530 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %281, i32 0, i32 21
  %aptr531 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf530, i32 0, i32 2
  %282 = load i8*, i8** %aptr531, align 8
  %incdec.ptr532 = getelementptr inbounds i8, i8* %282, i32 1
  store i8* %incdec.ptr532, i8** %aptr531, align 8
  store i8 9, i8* %282, align 1
  br label %if.end.533

if.end.533:                                       ; preds = %if.else.488, %if.then.484
  br label %if.end.541

if.else.534:                                      ; preds = %if.end.470
  %283 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio535 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %283, i32 0, i32 23
  %284 = load %struct._PerlIO**, %struct._PerlIO*** %fio535, align 8
  %call536 = call i32 @PerlIO_putc(%struct._PerlIO** %284, i32 9)
  %cmp537 = icmp eq i32 %call536, -1
  br i1 %cmp537, label %if.then.539, label %if.end.540

if.then.539:                                      ; preds = %if.else.534
  store i32 -1, i32* %retval
  br label %return

if.end.540:                                       ; preds = %if.else.534
  br label %if.end.541

if.end.541:                                       ; preds = %if.end.540, %if.end.533
  %285 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio542 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %285, i32 0, i32 23
  %286 = load %struct._PerlIO**, %struct._PerlIO*** %fio542, align 8
  %tobool543 = icmp ne %struct._PerlIO** %286, null
  br i1 %tobool543, label %if.else.613, label %if.then.544

if.then.544:                                      ; preds = %if.end.541
  %287 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf545 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %287, i32 0, i32 21
  %aptr546 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf545, i32 0, i32 2
  %288 = load i8*, i8** %aptr546, align 8
  %add.ptr547 = getelementptr inbounds i8, i8* %288, i64 4
  %289 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf548 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %289, i32 0, i32 21
  %aend549 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf548, i32 0, i32 3
  %290 = load i8*, i8** %aend549, align 8
  %cmp550 = icmp ugt i8* %add.ptr547, %290
  br i1 %cmp550, label %if.then.552, label %if.end.594

if.then.552:                                      ; preds = %if.then.544
  %291 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf555 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %291, i32 0, i32 21
  %asiz556 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf555, i32 0, i32 1
  %292 = load i64, i64* %asiz556, align 8
  %add557 = add i64 4, %292
  %add558 = add i64 %add557, 8191
  %and559 = and i64 %add558, -8192
  %conv560 = trunc i64 %and559 to i32
  store i32 %conv560, i32* %nsz554, align 4
  %293 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf563 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %293, i32 0, i32 21
  %aptr564 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf563, i32 0, i32 2
  %294 = load i8*, i8** %aptr564, align 8
  %295 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf565 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %295, i32 0, i32 21
  %arena566 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf565, i32 0, i32 0
  %296 = load i8*, i8** %arena566, align 8
  %sub.ptr.lhs.cast567 = ptrtoint i8* %294 to i64
  %sub.ptr.rhs.cast568 = ptrtoint i8* %296 to i64
  %sub.ptr.sub569 = sub i64 %sub.ptr.lhs.cast567, %sub.ptr.rhs.cast568
  %conv570 = trunc i64 %sub.ptr.sub569 to i32
  store i32 %conv570, i32* %offset562, align 4
  %297 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf571 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %297, i32 0, i32 21
  %arena572 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf571, i32 0, i32 0
  %298 = load i8*, i8** %arena572, align 8
  %299 = load i32, i32* %nsz554, align 4
  %conv573 = sext i32 %299 to i64
  %mul574 = mul i64 %conv573, 1
  %call575 = call i8* @Perl_safesysrealloc(i8* %298, i64 %mul574)
  %300 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf576 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %300, i32 0, i32 21
  %arena577 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf576, i32 0, i32 0
  store i8* %call575, i8** %arena577, align 8
  %301 = load i32, i32* %nsz554, align 4
  %conv578 = sext i32 %301 to i64
  %302 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf579 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %302, i32 0, i32 21
  %asiz580 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf579, i32 0, i32 1
  store i64 %conv578, i64* %asiz580, align 8
  %303 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf581 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %303, i32 0, i32 21
  %arena582 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf581, i32 0, i32 0
  %304 = load i8*, i8** %arena582, align 8
  %305 = load i32, i32* %offset562, align 4
  %idx.ext583 = sext i32 %305 to i64
  %add.ptr584 = getelementptr inbounds i8, i8* %304, i64 %idx.ext583
  %306 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf585 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %306, i32 0, i32 21
  %aptr586 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf585, i32 0, i32 2
  store i8* %add.ptr584, i8** %aptr586, align 8
  %307 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf588 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %307, i32 0, i32 21
  %arena589 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf588, i32 0, i32 0
  %308 = load i8*, i8** %arena589, align 8
  %309 = load i32, i32* %nsz554, align 4
  %idx.ext590 = sext i32 %309 to i64
  %add.ptr591 = getelementptr inbounds i8, i8* %308, i64 %idx.ext590
  %310 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf592 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %310, i32 0, i32 21
  %aend593 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf592, i32 0, i32 3
  store i8* %add.ptr591, i8** %aend593, align 8
  store i8* %add.ptr591, i8** %tmp587
  %311 = load i8*, i8** %tmp587
  br label %if.end.594

if.end.594:                                       ; preds = %if.then.552, %if.then.544
  %312 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf595 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %312, i32 0, i32 21
  %aptr596 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf595, i32 0, i32 2
  %313 = load i8*, i8** %aptr596, align 8
  %314 = ptrtoint i8* %313 to i64
  %315 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf597 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %315, i32 0, i32 21
  %aptr598 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf597, i32 0, i32 2
  %316 = load i8*, i8** %aptr598, align 8
  %317 = ptrtoint i8* %316 to i64
  %and599 = and i64 %317, -4
  %cmp600 = icmp eq i64 %314, %and599
  br i1 %cmp600, label %if.then.602, label %if.else.605

if.then.602:                                      ; preds = %if.end.594
  %318 = load i32, i32* %niv, align 4
  %319 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf603 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %319, i32 0, i32 21
  %aptr604 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf603, i32 0, i32 2
  %320 = load i8*, i8** %aptr604, align 8
  %321 = bitcast i8* %320 to i32*
  store i32 %318, i32* %321, align 4
  br label %if.end.608

if.else.605:                                      ; preds = %if.end.594
  %322 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf606 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %322, i32 0, i32 21
  %aptr607 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf606, i32 0, i32 2
  %323 = load i8*, i8** %aptr607, align 8
  %324 = bitcast i32* %niv to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %323, i8* %324, i64 4, i32 1, i1 false)
  br label %if.end.608

if.end.608:                                       ; preds = %if.else.605, %if.then.602
  %325 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf610 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %325, i32 0, i32 21
  %aptr611 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf610, i32 0, i32 2
  %326 = load i8*, i8** %aptr611, align 8
  %add.ptr612 = getelementptr inbounds i8, i8* %326, i64 4
  store i8* %add.ptr612, i8** %aptr611, align 8
  store i8* %add.ptr612, i8** %tmp609
  %327 = load i8*, i8** %tmp609
  br label %if.end.620

if.else.613:                                      ; preds = %if.end.541
  %328 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio614 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %328, i32 0, i32 23
  %329 = load %struct._PerlIO**, %struct._PerlIO*** %fio614, align 8
  %330 = bitcast i32* %niv to i8*
  %call615 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %329, i8* %330, i64 4)
  %cmp616 = icmp ne i64 %call615, 4
  br i1 %cmp616, label %if.then.618, label %if.end.619

if.then.618:                                      ; preds = %if.else.613
  store i32 -1, i32* %retval
  br label %return

if.end.619:                                       ; preds = %if.else.613
  br label %if.end.620

if.end.620:                                       ; preds = %if.end.619, %if.end.608
  br label %if.end.756

if.else.621:                                      ; preds = %if.else.445
  %331 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio622 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %331, i32 0, i32 23
  %332 = load %struct._PerlIO**, %struct._PerlIO*** %fio622, align 8
  %tobool623 = icmp ne %struct._PerlIO** %332, null
  br i1 %tobool623, label %if.else.681, label %if.then.624

if.then.624:                                      ; preds = %if.else.621
  %333 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf625 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %333, i32 0, i32 21
  %aptr626 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf625, i32 0, i32 2
  %334 = load i8*, i8** %aptr626, align 8
  %335 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf627 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %335, i32 0, i32 21
  %aend628 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf627, i32 0, i32 3
  %336 = load i8*, i8** %aend628, align 8
  %cmp629 = icmp ult i8* %334, %336
  br i1 %cmp629, label %if.then.631, label %if.else.635

if.then.631:                                      ; preds = %if.then.624
  %337 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf632 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %337, i32 0, i32 21
  %aptr633 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf632, i32 0, i32 2
  %338 = load i8*, i8** %aptr633, align 8
  %incdec.ptr634 = getelementptr inbounds i8, i8* %338, i32 1
  store i8* %incdec.ptr634, i8** %aptr633, align 8
  store i8 6, i8* %338, align 1
  br label %if.end.680

if.else.635:                                      ; preds = %if.then.624
  %339 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf638 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %339, i32 0, i32 21
  %asiz639 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf638, i32 0, i32 1
  %340 = load i64, i64* %asiz639, align 8
  %add640 = add i64 1, %340
  %add641 = add i64 %add640, 8191
  %and642 = and i64 %add641, -8192
  %conv643 = trunc i64 %and642 to i32
  store i32 %conv643, i32* %nsz637, align 4
  %341 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf646 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %341, i32 0, i32 21
  %aptr647 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf646, i32 0, i32 2
  %342 = load i8*, i8** %aptr647, align 8
  %343 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf648 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %343, i32 0, i32 21
  %arena649 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf648, i32 0, i32 0
  %344 = load i8*, i8** %arena649, align 8
  %sub.ptr.lhs.cast650 = ptrtoint i8* %342 to i64
  %sub.ptr.rhs.cast651 = ptrtoint i8* %344 to i64
  %sub.ptr.sub652 = sub i64 %sub.ptr.lhs.cast650, %sub.ptr.rhs.cast651
  %conv653 = trunc i64 %sub.ptr.sub652 to i32
  store i32 %conv653, i32* %offset645, align 4
  %345 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf654 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %345, i32 0, i32 21
  %arena655 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf654, i32 0, i32 0
  %346 = load i8*, i8** %arena655, align 8
  %347 = load i32, i32* %nsz637, align 4
  %conv656 = sext i32 %347 to i64
  %mul657 = mul i64 %conv656, 1
  %call658 = call i8* @Perl_safesysrealloc(i8* %346, i64 %mul657)
  %348 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf659 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %348, i32 0, i32 21
  %arena660 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf659, i32 0, i32 0
  store i8* %call658, i8** %arena660, align 8
  %349 = load i32, i32* %nsz637, align 4
  %conv661 = sext i32 %349 to i64
  %350 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf662 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %350, i32 0, i32 21
  %asiz663 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf662, i32 0, i32 1
  store i64 %conv661, i64* %asiz663, align 8
  %351 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf664 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %351, i32 0, i32 21
  %arena665 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf664, i32 0, i32 0
  %352 = load i8*, i8** %arena665, align 8
  %353 = load i32, i32* %offset645, align 4
  %idx.ext666 = sext i32 %353 to i64
  %add.ptr667 = getelementptr inbounds i8, i8* %352, i64 %idx.ext666
  %354 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf668 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %354, i32 0, i32 21
  %aptr669 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf668, i32 0, i32 2
  store i8* %add.ptr667, i8** %aptr669, align 8
  %355 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf671 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %355, i32 0, i32 21
  %arena672 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf671, i32 0, i32 0
  %356 = load i8*, i8** %arena672, align 8
  %357 = load i32, i32* %nsz637, align 4
  %idx.ext673 = sext i32 %357 to i64
  %add.ptr674 = getelementptr inbounds i8, i8* %356, i64 %idx.ext673
  %358 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf675 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %358, i32 0, i32 21
  %aend676 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf675, i32 0, i32 3
  store i8* %add.ptr674, i8** %aend676, align 8
  store i8* %add.ptr674, i8** %tmp670
  %359 = load i8*, i8** %tmp670
  %360 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf677 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %360, i32 0, i32 21
  %aptr678 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf677, i32 0, i32 2
  %361 = load i8*, i8** %aptr678, align 8
  %incdec.ptr679 = getelementptr inbounds i8, i8* %361, i32 1
  store i8* %incdec.ptr679, i8** %aptr678, align 8
  store i8 6, i8* %361, align 1
  br label %if.end.680

if.end.680:                                       ; preds = %if.else.635, %if.then.631
  br label %if.end.688

if.else.681:                                      ; preds = %if.else.621
  %362 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio682 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %362, i32 0, i32 23
  %363 = load %struct._PerlIO**, %struct._PerlIO*** %fio682, align 8
  %call683 = call i32 @PerlIO_putc(%struct._PerlIO** %363, i32 6)
  %cmp684 = icmp eq i32 %call683, -1
  br i1 %cmp684, label %if.then.686, label %if.end.687

if.then.686:                                      ; preds = %if.else.681
  store i32 -1, i32* %retval
  br label %return

if.end.687:                                       ; preds = %if.else.681
  br label %if.end.688

if.end.688:                                       ; preds = %if.end.687, %if.end.680
  %364 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio689 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %364, i32 0, i32 23
  %365 = load %struct._PerlIO**, %struct._PerlIO*** %fio689, align 8
  %tobool690 = icmp ne %struct._PerlIO** %365, null
  br i1 %tobool690, label %if.else.748, label %if.then.691

if.then.691:                                      ; preds = %if.end.688
  %366 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf692 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %366, i32 0, i32 21
  %aptr693 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf692, i32 0, i32 2
  %367 = load i8*, i8** %aptr693, align 8
  %add.ptr694 = getelementptr inbounds i8, i8* %367, i64 8
  %368 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf695 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %368, i32 0, i32 21
  %aend696 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf695, i32 0, i32 3
  %369 = load i8*, i8** %aend696, align 8
  %cmp697 = icmp ugt i8* %add.ptr694, %369
  br i1 %cmp697, label %if.then.699, label %if.end.741

if.then.699:                                      ; preds = %if.then.691
  %370 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf702 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %370, i32 0, i32 21
  %asiz703 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf702, i32 0, i32 1
  %371 = load i64, i64* %asiz703, align 8
  %add704 = add i64 8, %371
  %add705 = add i64 %add704, 8191
  %and706 = and i64 %add705, -8192
  %conv707 = trunc i64 %and706 to i32
  store i32 %conv707, i32* %nsz701, align 4
  %372 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf710 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %372, i32 0, i32 21
  %aptr711 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf710, i32 0, i32 2
  %373 = load i8*, i8** %aptr711, align 8
  %374 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf712 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %374, i32 0, i32 21
  %arena713 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf712, i32 0, i32 0
  %375 = load i8*, i8** %arena713, align 8
  %sub.ptr.lhs.cast714 = ptrtoint i8* %373 to i64
  %sub.ptr.rhs.cast715 = ptrtoint i8* %375 to i64
  %sub.ptr.sub716 = sub i64 %sub.ptr.lhs.cast714, %sub.ptr.rhs.cast715
  %conv717 = trunc i64 %sub.ptr.sub716 to i32
  store i32 %conv717, i32* %offset709, align 4
  %376 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf718 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %376, i32 0, i32 21
  %arena719 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf718, i32 0, i32 0
  %377 = load i8*, i8** %arena719, align 8
  %378 = load i32, i32* %nsz701, align 4
  %conv720 = sext i32 %378 to i64
  %mul721 = mul i64 %conv720, 1
  %call722 = call i8* @Perl_safesysrealloc(i8* %377, i64 %mul721)
  %379 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf723 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %379, i32 0, i32 21
  %arena724 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf723, i32 0, i32 0
  store i8* %call722, i8** %arena724, align 8
  %380 = load i32, i32* %nsz701, align 4
  %conv725 = sext i32 %380 to i64
  %381 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf726 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %381, i32 0, i32 21
  %asiz727 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf726, i32 0, i32 1
  store i64 %conv725, i64* %asiz727, align 8
  %382 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf728 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %382, i32 0, i32 21
  %arena729 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf728, i32 0, i32 0
  %383 = load i8*, i8** %arena729, align 8
  %384 = load i32, i32* %offset709, align 4
  %idx.ext730 = sext i32 %384 to i64
  %add.ptr731 = getelementptr inbounds i8, i8* %383, i64 %idx.ext730
  %385 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf732 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %385, i32 0, i32 21
  %aptr733 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf732, i32 0, i32 2
  store i8* %add.ptr731, i8** %aptr733, align 8
  %386 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf735 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %386, i32 0, i32 21
  %arena736 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf735, i32 0, i32 0
  %387 = load i8*, i8** %arena736, align 8
  %388 = load i32, i32* %nsz701, align 4
  %idx.ext737 = sext i32 %388 to i64
  %add.ptr738 = getelementptr inbounds i8, i8* %387, i64 %idx.ext737
  %389 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf739 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %389, i32 0, i32 21
  %aend740 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf739, i32 0, i32 3
  store i8* %add.ptr738, i8** %aend740, align 8
  store i8* %add.ptr738, i8** %tmp734
  %390 = load i8*, i8** %tmp734
  br label %if.end.741

if.end.741:                                       ; preds = %if.then.699, %if.then.691
  %391 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf742 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %391, i32 0, i32 21
  %aptr743 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf742, i32 0, i32 2
  %392 = load i8*, i8** %aptr743, align 8
  %393 = bitcast i64* %iv to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %392, i8* %393, i64 8, i32 1, i1 false)
  %394 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf745 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %394, i32 0, i32 21
  %aptr746 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf745, i32 0, i32 2
  %395 = load i8*, i8** %aptr746, align 8
  %add.ptr747 = getelementptr inbounds i8, i8* %395, i64 8
  store i8* %add.ptr747, i8** %aptr746, align 8
  store i8* %add.ptr747, i8** %tmp744
  %396 = load i8*, i8** %tmp744
  br label %if.end.755

if.else.748:                                      ; preds = %if.end.688
  %397 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio749 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %397, i32 0, i32 23
  %398 = load %struct._PerlIO**, %struct._PerlIO*** %fio749, align 8
  %399 = bitcast i64* %iv to i8*
  %call750 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %398, i8* %399, i64 8)
  %cmp751 = icmp ne i64 %call750, 8
  br i1 %cmp751, label %if.then.753, label %if.end.754

if.then.753:                                      ; preds = %if.else.748
  store i32 -1, i32* %retval
  br label %return

if.end.754:                                       ; preds = %if.else.748
  br label %if.end.755

if.end.755:                                       ; preds = %if.end.754, %if.end.741
  br label %if.end.756

if.end.756:                                       ; preds = %if.end.755, %if.end.620
  br label %if.end.757

if.end.757:                                       ; preds = %if.end.756, %if.end.444
  br label %if.end.2030

if.else.758:                                      ; preds = %if.else.273
  %400 = load i32, i32* %flags, align 4
  %and759 = and i32 %400, 131072
  %tobool760 = icmp ne i32 %and759, 0
  br i1 %tobool760, label %if.then.761, label %if.else.949

if.then.761:                                      ; preds = %if.else.758
  %401 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags763 = getelementptr inbounds %struct.sv, %struct.sv* %401, i32 0, i32 2
  %402 = load i32, i32* %sv_flags763, align 4
  %and764 = and i32 %402, 16777216
  %tobool765 = icmp ne i32 %and764, 0
  br i1 %tobool765, label %if.end.785, label %land.lhs.true.766

land.lhs.true.766:                                ; preds = %if.then.761
  %403 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags767 = getelementptr inbounds %struct.sv, %struct.sv* %403, i32 0, i32 2
  %404 = load i32, i32* %sv_flags767, align 4
  %and768 = and i32 %404, 131072
  %tobool769 = icmp ne i32 %and768, 0
  br i1 %tobool769, label %if.then.774, label %lor.lhs.false.770

lor.lhs.false.770:                                ; preds = %land.lhs.true.766
  %405 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags771 = getelementptr inbounds %struct.sv, %struct.sv* %405, i32 0, i32 2
  %406 = load i32, i32* %sv_flags771, align 4
  %and772 = and i32 %406, 262144
  %tobool773 = icmp ne i32 %and772, 0
  br i1 %tobool773, label %if.then.774, label %if.end.785

if.then.774:                                      ; preds = %lor.lhs.false.770, %land.lhs.true.766
  %407 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags775 = getelementptr inbounds %struct.sv, %struct.sv* %407, i32 0, i32 2
  %408 = load i32, i32* %sv_flags775, align 4
  %and776 = and i32 %408, 65536
  %tobool777 = icmp ne i32 %and776, 0
  br i1 %tobool777, label %cond.true.778, label %cond.false.781

cond.true.778:                                    ; preds = %if.then.774
  %409 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any779 = getelementptr inbounds %struct.sv, %struct.sv* %409, i32 0, i32 0
  %410 = load i8*, i8** %sv_any779, align 8
  %411 = bitcast i8* %410 to %struct.xpviv*
  %xiv_iv780 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %411, i32 0, i32 3
  %412 = load i64, i64* %xiv_iv780, align 8
  br label %cond.end.783

cond.false.781:                                   ; preds = %if.then.774
  %413 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call782 = call i64 @Perl_sv_2iv(%struct.sv* %413)
  br label %cond.end.783

cond.end.783:                                     ; preds = %cond.false.781, %cond.true.778
  %cond784 = phi i64 [ %412, %cond.true.778 ], [ %call782, %cond.false.781 ]
  br label %if.end.785

if.end.785:                                       ; preds = %cond.end.783, %lor.lhs.false.770, %if.then.761
  %414 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags786 = getelementptr inbounds %struct.sv, %struct.sv* %414, i32 0, i32 2
  %415 = load i32, i32* %sv_flags786, align 4
  %and787 = and i32 %415, -2147418112
  %cmp788 = icmp eq i32 %and787, 65536
  br i1 %cmp788, label %if.then.790, label %if.end.801

if.then.790:                                      ; preds = %if.end.785
  %416 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags791 = getelementptr inbounds %struct.sv, %struct.sv* %416, i32 0, i32 2
  %417 = load i32, i32* %sv_flags791, align 4
  %and792 = and i32 %417, 65536
  %tobool793 = icmp ne i32 %and792, 0
  br i1 %tobool793, label %cond.true.794, label %cond.false.797

cond.true.794:                                    ; preds = %if.then.790
  %418 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any795 = getelementptr inbounds %struct.sv, %struct.sv* %418, i32 0, i32 0
  %419 = load i8*, i8** %sv_any795, align 8
  %420 = bitcast i8* %419 to %struct.xpviv*
  %xiv_iv796 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %420, i32 0, i32 3
  %421 = load i64, i64* %xiv_iv796, align 8
  br label %cond.end.799

cond.false.797:                                   ; preds = %if.then.790
  %422 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call798 = call i64 @Perl_sv_2iv(%struct.sv* %422)
  br label %cond.end.799

cond.end.799:                                     ; preds = %cond.false.797, %cond.true.794
  %cond800 = phi i64 [ %421, %cond.true.794 ], [ %call798, %cond.false.797 ]
  store i64 %cond800, i64* %iv, align 8
  br label %integer

if.end.801:                                       ; preds = %if.end.785
  %423 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags802 = getelementptr inbounds %struct.sv, %struct.sv* %423, i32 0, i32 2
  %424 = load i32, i32* %sv_flags802, align 4
  %and803 = and i32 %424, 131072
  %tobool804 = icmp ne i32 %and803, 0
  br i1 %tobool804, label %cond.true.805, label %cond.false.807

cond.true.805:                                    ; preds = %if.end.801
  %425 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any806 = getelementptr inbounds %struct.sv, %struct.sv* %425, i32 0, i32 0
  %426 = load i8*, i8** %sv_any806, align 8
  %427 = bitcast i8* %426 to %struct.xpvnv*
  %xnv_nv = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %427, i32 0, i32 4
  %428 = load double, double* %xnv_nv, align 8
  br label %cond.end.809

cond.false.807:                                   ; preds = %if.end.801
  %429 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call808 = call double @Perl_sv_2nv(%struct.sv* %429)
  br label %cond.end.809

cond.end.809:                                     ; preds = %cond.false.807, %cond.true.805
  %cond810 = phi double [ %428, %cond.true.805 ], [ %call808, %cond.false.807 ]
  store double %cond810, double* %nv, align 8
  %430 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder811 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %430, i32 0, i32 11
  %431 = load i32, i32* %netorder811, align 4
  %tobool812 = icmp ne i32 %431, 0
  br i1 %tobool812, label %if.then.813, label %if.end.814

if.then.813:                                      ; preds = %cond.end.809
  br label %string_readlen

if.end.814:                                       ; preds = %cond.end.809
  %432 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio815 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %432, i32 0, i32 23
  %433 = load %struct._PerlIO**, %struct._PerlIO*** %fio815, align 8
  %tobool816 = icmp ne %struct._PerlIO** %433, null
  br i1 %tobool816, label %if.else.874, label %if.then.817

if.then.817:                                      ; preds = %if.end.814
  %434 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf818 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %434, i32 0, i32 21
  %aptr819 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf818, i32 0, i32 2
  %435 = load i8*, i8** %aptr819, align 8
  %436 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf820 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %436, i32 0, i32 21
  %aend821 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf820, i32 0, i32 3
  %437 = load i8*, i8** %aend821, align 8
  %cmp822 = icmp ult i8* %435, %437
  br i1 %cmp822, label %if.then.824, label %if.else.828

if.then.824:                                      ; preds = %if.then.817
  %438 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf825 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %438, i32 0, i32 21
  %aptr826 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf825, i32 0, i32 2
  %439 = load i8*, i8** %aptr826, align 8
  %incdec.ptr827 = getelementptr inbounds i8, i8* %439, i32 1
  store i8* %incdec.ptr827, i8** %aptr826, align 8
  store i8 7, i8* %439, align 1
  br label %if.end.873

if.else.828:                                      ; preds = %if.then.817
  %440 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf831 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %440, i32 0, i32 21
  %asiz832 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf831, i32 0, i32 1
  %441 = load i64, i64* %asiz832, align 8
  %add833 = add i64 1, %441
  %add834 = add i64 %add833, 8191
  %and835 = and i64 %add834, -8192
  %conv836 = trunc i64 %and835 to i32
  store i32 %conv836, i32* %nsz830, align 4
  %442 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf839 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %442, i32 0, i32 21
  %aptr840 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf839, i32 0, i32 2
  %443 = load i8*, i8** %aptr840, align 8
  %444 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf841 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %444, i32 0, i32 21
  %arena842 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf841, i32 0, i32 0
  %445 = load i8*, i8** %arena842, align 8
  %sub.ptr.lhs.cast843 = ptrtoint i8* %443 to i64
  %sub.ptr.rhs.cast844 = ptrtoint i8* %445 to i64
  %sub.ptr.sub845 = sub i64 %sub.ptr.lhs.cast843, %sub.ptr.rhs.cast844
  %conv846 = trunc i64 %sub.ptr.sub845 to i32
  store i32 %conv846, i32* %offset838, align 4
  %446 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf847 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %446, i32 0, i32 21
  %arena848 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf847, i32 0, i32 0
  %447 = load i8*, i8** %arena848, align 8
  %448 = load i32, i32* %nsz830, align 4
  %conv849 = sext i32 %448 to i64
  %mul850 = mul i64 %conv849, 1
  %call851 = call i8* @Perl_safesysrealloc(i8* %447, i64 %mul850)
  %449 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf852 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %449, i32 0, i32 21
  %arena853 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf852, i32 0, i32 0
  store i8* %call851, i8** %arena853, align 8
  %450 = load i32, i32* %nsz830, align 4
  %conv854 = sext i32 %450 to i64
  %451 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf855 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %451, i32 0, i32 21
  %asiz856 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf855, i32 0, i32 1
  store i64 %conv854, i64* %asiz856, align 8
  %452 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf857 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %452, i32 0, i32 21
  %arena858 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf857, i32 0, i32 0
  %453 = load i8*, i8** %arena858, align 8
  %454 = load i32, i32* %offset838, align 4
  %idx.ext859 = sext i32 %454 to i64
  %add.ptr860 = getelementptr inbounds i8, i8* %453, i64 %idx.ext859
  %455 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf861 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %455, i32 0, i32 21
  %aptr862 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf861, i32 0, i32 2
  store i8* %add.ptr860, i8** %aptr862, align 8
  %456 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf864 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %456, i32 0, i32 21
  %arena865 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf864, i32 0, i32 0
  %457 = load i8*, i8** %arena865, align 8
  %458 = load i32, i32* %nsz830, align 4
  %idx.ext866 = sext i32 %458 to i64
  %add.ptr867 = getelementptr inbounds i8, i8* %457, i64 %idx.ext866
  %459 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf868 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %459, i32 0, i32 21
  %aend869 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf868, i32 0, i32 3
  store i8* %add.ptr867, i8** %aend869, align 8
  store i8* %add.ptr867, i8** %tmp863
  %460 = load i8*, i8** %tmp863
  %461 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf870 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %461, i32 0, i32 21
  %aptr871 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf870, i32 0, i32 2
  %462 = load i8*, i8** %aptr871, align 8
  %incdec.ptr872 = getelementptr inbounds i8, i8* %462, i32 1
  store i8* %incdec.ptr872, i8** %aptr871, align 8
  store i8 7, i8* %462, align 1
  br label %if.end.873

if.end.873:                                       ; preds = %if.else.828, %if.then.824
  br label %if.end.881

if.else.874:                                      ; preds = %if.end.814
  %463 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio875 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %463, i32 0, i32 23
  %464 = load %struct._PerlIO**, %struct._PerlIO*** %fio875, align 8
  %call876 = call i32 @PerlIO_putc(%struct._PerlIO** %464, i32 7)
  %cmp877 = icmp eq i32 %call876, -1
  br i1 %cmp877, label %if.then.879, label %if.end.880

if.then.879:                                      ; preds = %if.else.874
  store i32 -1, i32* %retval
  br label %return

if.end.880:                                       ; preds = %if.else.874
  br label %if.end.881

if.end.881:                                       ; preds = %if.end.880, %if.end.873
  %465 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio882 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %465, i32 0, i32 23
  %466 = load %struct._PerlIO**, %struct._PerlIO*** %fio882, align 8
  %tobool883 = icmp ne %struct._PerlIO** %466, null
  br i1 %tobool883, label %if.else.941, label %if.then.884

if.then.884:                                      ; preds = %if.end.881
  %467 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf885 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %467, i32 0, i32 21
  %aptr886 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf885, i32 0, i32 2
  %468 = load i8*, i8** %aptr886, align 8
  %add.ptr887 = getelementptr inbounds i8, i8* %468, i64 8
  %469 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf888 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %469, i32 0, i32 21
  %aend889 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf888, i32 0, i32 3
  %470 = load i8*, i8** %aend889, align 8
  %cmp890 = icmp ugt i8* %add.ptr887, %470
  br i1 %cmp890, label %if.then.892, label %if.end.934

if.then.892:                                      ; preds = %if.then.884
  %471 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf895 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %471, i32 0, i32 21
  %asiz896 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf895, i32 0, i32 1
  %472 = load i64, i64* %asiz896, align 8
  %add897 = add i64 8, %472
  %add898 = add i64 %add897, 8191
  %and899 = and i64 %add898, -8192
  %conv900 = trunc i64 %and899 to i32
  store i32 %conv900, i32* %nsz894, align 4
  %473 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf903 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %473, i32 0, i32 21
  %aptr904 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf903, i32 0, i32 2
  %474 = load i8*, i8** %aptr904, align 8
  %475 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf905 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %475, i32 0, i32 21
  %arena906 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf905, i32 0, i32 0
  %476 = load i8*, i8** %arena906, align 8
  %sub.ptr.lhs.cast907 = ptrtoint i8* %474 to i64
  %sub.ptr.rhs.cast908 = ptrtoint i8* %476 to i64
  %sub.ptr.sub909 = sub i64 %sub.ptr.lhs.cast907, %sub.ptr.rhs.cast908
  %conv910 = trunc i64 %sub.ptr.sub909 to i32
  store i32 %conv910, i32* %offset902, align 4
  %477 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf911 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %477, i32 0, i32 21
  %arena912 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf911, i32 0, i32 0
  %478 = load i8*, i8** %arena912, align 8
  %479 = load i32, i32* %nsz894, align 4
  %conv913 = sext i32 %479 to i64
  %mul914 = mul i64 %conv913, 1
  %call915 = call i8* @Perl_safesysrealloc(i8* %478, i64 %mul914)
  %480 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf916 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %480, i32 0, i32 21
  %arena917 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf916, i32 0, i32 0
  store i8* %call915, i8** %arena917, align 8
  %481 = load i32, i32* %nsz894, align 4
  %conv918 = sext i32 %481 to i64
  %482 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf919 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %482, i32 0, i32 21
  %asiz920 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf919, i32 0, i32 1
  store i64 %conv918, i64* %asiz920, align 8
  %483 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf921 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %483, i32 0, i32 21
  %arena922 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf921, i32 0, i32 0
  %484 = load i8*, i8** %arena922, align 8
  %485 = load i32, i32* %offset902, align 4
  %idx.ext923 = sext i32 %485 to i64
  %add.ptr924 = getelementptr inbounds i8, i8* %484, i64 %idx.ext923
  %486 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf925 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %486, i32 0, i32 21
  %aptr926 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf925, i32 0, i32 2
  store i8* %add.ptr924, i8** %aptr926, align 8
  %487 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf928 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %487, i32 0, i32 21
  %arena929 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf928, i32 0, i32 0
  %488 = load i8*, i8** %arena929, align 8
  %489 = load i32, i32* %nsz894, align 4
  %idx.ext930 = sext i32 %489 to i64
  %add.ptr931 = getelementptr inbounds i8, i8* %488, i64 %idx.ext930
  %490 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf932 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %490, i32 0, i32 21
  %aend933 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf932, i32 0, i32 3
  store i8* %add.ptr931, i8** %aend933, align 8
  store i8* %add.ptr931, i8** %tmp927
  %491 = load i8*, i8** %tmp927
  br label %if.end.934

if.end.934:                                       ; preds = %if.then.892, %if.then.884
  %492 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf935 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %492, i32 0, i32 21
  %aptr936 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf935, i32 0, i32 2
  %493 = load i8*, i8** %aptr936, align 8
  %494 = bitcast double* %nv to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %493, i8* %494, i64 8, i32 1, i1 false)
  %495 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf938 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %495, i32 0, i32 21
  %aptr939 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf938, i32 0, i32 2
  %496 = load i8*, i8** %aptr939, align 8
  %add.ptr940 = getelementptr inbounds i8, i8* %496, i64 8
  store i8* %add.ptr940, i8** %aptr939, align 8
  store i8* %add.ptr940, i8** %tmp937
  %497 = load i8*, i8** %tmp937
  br label %if.end.948

if.else.941:                                      ; preds = %if.end.881
  %498 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio942 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %498, i32 0, i32 23
  %499 = load %struct._PerlIO**, %struct._PerlIO*** %fio942, align 8
  %500 = bitcast double* %nv to i8*
  %call943 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %499, i8* %500, i64 8)
  %cmp944 = icmp ne i64 %call943, 8
  br i1 %cmp944, label %if.then.946, label %if.end.947

if.then.946:                                      ; preds = %if.else.941
  store i32 -1, i32* %retval
  br label %return

if.end.947:                                       ; preds = %if.else.941
  br label %if.end.948

if.end.948:                                       ; preds = %if.end.947, %if.end.934
  br label %if.end.2029

if.else.949:                                      ; preds = %if.else.758
  %501 = load i32, i32* %flags, align 4
  %and950 = and i32 %501, 117440512
  %tobool951 = icmp ne i32 %and950, 0
  br i1 %tobool951, label %if.then.952, label %if.else.2026

if.then.952:                                      ; preds = %if.else.949
  br label %string_readlen

string_readlen:                                   ; preds = %if.then.952, %if.then.813, %if.then.469, %if.then.299, %if.then.272
  %502 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags954 = getelementptr inbounds %struct.sv, %struct.sv* %502, i32 0, i32 2
  %503 = load i32, i32* %sv_flags954, align 4
  %and955 = and i32 %503, 262144
  %cmp956 = icmp eq i32 %and955, 262144
  br i1 %cmp956, label %cond.true.958, label %cond.false.963

cond.true.958:                                    ; preds = %string_readlen
  %504 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any959 = getelementptr inbounds %struct.sv, %struct.sv* %504, i32 0, i32 0
  %505 = load i8*, i8** %sv_any959, align 8
  %506 = bitcast i8* %505 to %struct.xpv*
  %xpv_cur960 = getelementptr inbounds %struct.xpv, %struct.xpv* %506, i32 0, i32 1
  %507 = load i64, i64* %xpv_cur960, align 8
  store i64 %507, i64* %len, align 8
  %508 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any961 = getelementptr inbounds %struct.sv, %struct.sv* %508, i32 0, i32 0
  %509 = load i8*, i8** %sv_any961, align 8
  %510 = bitcast i8* %509 to %struct.xpv*
  %xpv_pv962 = getelementptr inbounds %struct.xpv, %struct.xpv* %510, i32 0, i32 0
  %511 = load i8*, i8** %xpv_pv962, align 8
  br label %cond.end.965

cond.false.963:                                   ; preds = %string_readlen
  %512 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call964 = call i8* @Perl_sv_2pv_flags(%struct.sv* %512, i64* %len, i32 2)
  br label %cond.end.965

cond.end.965:                                     ; preds = %cond.false.963, %cond.true.958
  %cond966 = phi i8* [ %511, %cond.true.958 ], [ %call964, %cond.false.963 ]
  store i8* %cond966, i8** %pv, align 8
  br label %string

string:                                           ; preds = %cond.end.965, %cond.end
  %513 = load i64, i64* %len, align 8
  %conv967 = trunc i64 %513 to i32
  store i32 %conv967, i32* %wlen, align 4
  %514 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags968 = getelementptr inbounds %struct.sv, %struct.sv* %514, i32 0, i32 2
  %515 = load i32, i32* %sv_flags968, align 4
  %and969 = and i32 %515, 536870912
  %tobool970 = icmp ne i32 %and969, 0
  br i1 %tobool970, label %if.then.971, label %if.else.1497

if.then.971:                                      ; preds = %string
  %516 = load i32, i32* %wlen, align 4
  %cmp972 = icmp sle i32 %516, 255
  br i1 %cmp972, label %if.then.974, label %if.else.1188

if.then.974:                                      ; preds = %if.then.971
  %517 = load i32, i32* %wlen, align 4
  %conv976 = trunc i32 %517 to i8
  store i8 %conv976, i8* %clen, align 1
  %518 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio977 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %518, i32 0, i32 23
  %519 = load %struct._PerlIO**, %struct._PerlIO*** %fio977, align 8
  %tobool978 = icmp ne %struct._PerlIO** %519, null
  br i1 %tobool978, label %if.else.1036, label %if.then.979

if.then.979:                                      ; preds = %if.then.974
  %520 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf980 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %520, i32 0, i32 21
  %aptr981 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf980, i32 0, i32 2
  %521 = load i8*, i8** %aptr981, align 8
  %522 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf982 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %522, i32 0, i32 21
  %aend983 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf982, i32 0, i32 3
  %523 = load i8*, i8** %aend983, align 8
  %cmp984 = icmp ult i8* %521, %523
  br i1 %cmp984, label %if.then.986, label %if.else.990

if.then.986:                                      ; preds = %if.then.979
  %524 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf987 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %524, i32 0, i32 21
  %aptr988 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf987, i32 0, i32 2
  %525 = load i8*, i8** %aptr988, align 8
  %incdec.ptr989 = getelementptr inbounds i8, i8* %525, i32 1
  store i8* %incdec.ptr989, i8** %aptr988, align 8
  store i8 23, i8* %525, align 1
  br label %if.end.1035

if.else.990:                                      ; preds = %if.then.979
  %526 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf993 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %526, i32 0, i32 21
  %asiz994 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf993, i32 0, i32 1
  %527 = load i64, i64* %asiz994, align 8
  %add995 = add i64 1, %527
  %add996 = add i64 %add995, 8191
  %and997 = and i64 %add996, -8192
  %conv998 = trunc i64 %and997 to i32
  store i32 %conv998, i32* %nsz992, align 4
  %528 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1001 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %528, i32 0, i32 21
  %aptr1002 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1001, i32 0, i32 2
  %529 = load i8*, i8** %aptr1002, align 8
  %530 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1003 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %530, i32 0, i32 21
  %arena1004 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1003, i32 0, i32 0
  %531 = load i8*, i8** %arena1004, align 8
  %sub.ptr.lhs.cast1005 = ptrtoint i8* %529 to i64
  %sub.ptr.rhs.cast1006 = ptrtoint i8* %531 to i64
  %sub.ptr.sub1007 = sub i64 %sub.ptr.lhs.cast1005, %sub.ptr.rhs.cast1006
  %conv1008 = trunc i64 %sub.ptr.sub1007 to i32
  store i32 %conv1008, i32* %offset1000, align 4
  %532 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1009 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %532, i32 0, i32 21
  %arena1010 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1009, i32 0, i32 0
  %533 = load i8*, i8** %arena1010, align 8
  %534 = load i32, i32* %nsz992, align 4
  %conv1011 = sext i32 %534 to i64
  %mul1012 = mul i64 %conv1011, 1
  %call1013 = call i8* @Perl_safesysrealloc(i8* %533, i64 %mul1012)
  %535 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1014 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %535, i32 0, i32 21
  %arena1015 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1014, i32 0, i32 0
  store i8* %call1013, i8** %arena1015, align 8
  %536 = load i32, i32* %nsz992, align 4
  %conv1016 = sext i32 %536 to i64
  %537 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1017 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %537, i32 0, i32 21
  %asiz1018 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1017, i32 0, i32 1
  store i64 %conv1016, i64* %asiz1018, align 8
  %538 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1019 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %538, i32 0, i32 21
  %arena1020 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1019, i32 0, i32 0
  %539 = load i8*, i8** %arena1020, align 8
  %540 = load i32, i32* %offset1000, align 4
  %idx.ext1021 = sext i32 %540 to i64
  %add.ptr1022 = getelementptr inbounds i8, i8* %539, i64 %idx.ext1021
  %541 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1023 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %541, i32 0, i32 21
  %aptr1024 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1023, i32 0, i32 2
  store i8* %add.ptr1022, i8** %aptr1024, align 8
  %542 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1026 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %542, i32 0, i32 21
  %arena1027 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1026, i32 0, i32 0
  %543 = load i8*, i8** %arena1027, align 8
  %544 = load i32, i32* %nsz992, align 4
  %idx.ext1028 = sext i32 %544 to i64
  %add.ptr1029 = getelementptr inbounds i8, i8* %543, i64 %idx.ext1028
  %545 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1030 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %545, i32 0, i32 21
  %aend1031 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1030, i32 0, i32 3
  store i8* %add.ptr1029, i8** %aend1031, align 8
  store i8* %add.ptr1029, i8** %tmp1025
  %546 = load i8*, i8** %tmp1025
  %547 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1032 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %547, i32 0, i32 21
  %aptr1033 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1032, i32 0, i32 2
  %548 = load i8*, i8** %aptr1033, align 8
  %incdec.ptr1034 = getelementptr inbounds i8, i8* %548, i32 1
  store i8* %incdec.ptr1034, i8** %aptr1033, align 8
  store i8 23, i8* %548, align 1
  br label %if.end.1035

if.end.1035:                                      ; preds = %if.else.990, %if.then.986
  br label %if.end.1043

if.else.1036:                                     ; preds = %if.then.974
  %549 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1037 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %549, i32 0, i32 23
  %550 = load %struct._PerlIO**, %struct._PerlIO*** %fio1037, align 8
  %call1038 = call i32 @PerlIO_putc(%struct._PerlIO** %550, i32 23)
  %cmp1039 = icmp eq i32 %call1038, -1
  br i1 %cmp1039, label %if.then.1041, label %if.end.1042

if.then.1041:                                     ; preds = %if.else.1036
  store i32 -1, i32* %retval
  br label %return

if.end.1042:                                      ; preds = %if.else.1036
  br label %if.end.1043

if.end.1043:                                      ; preds = %if.end.1042, %if.end.1035
  %551 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1044 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %551, i32 0, i32 23
  %552 = load %struct._PerlIO**, %struct._PerlIO*** %fio1044, align 8
  %tobool1045 = icmp ne %struct._PerlIO** %552, null
  br i1 %tobool1045, label %if.else.1103, label %if.then.1046

if.then.1046:                                     ; preds = %if.end.1043
  %553 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1047 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %553, i32 0, i32 21
  %aptr1048 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1047, i32 0, i32 2
  %554 = load i8*, i8** %aptr1048, align 8
  %555 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1049 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %555, i32 0, i32 21
  %aend1050 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1049, i32 0, i32 3
  %556 = load i8*, i8** %aend1050, align 8
  %cmp1051 = icmp ult i8* %554, %556
  br i1 %cmp1051, label %if.then.1053, label %if.else.1057

if.then.1053:                                     ; preds = %if.then.1046
  %557 = load i8, i8* %clen, align 1
  %558 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1054 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %558, i32 0, i32 21
  %aptr1055 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1054, i32 0, i32 2
  %559 = load i8*, i8** %aptr1055, align 8
  %incdec.ptr1056 = getelementptr inbounds i8, i8* %559, i32 1
  store i8* %incdec.ptr1056, i8** %aptr1055, align 8
  store i8 %557, i8* %559, align 1
  br label %if.end.1102

if.else.1057:                                     ; preds = %if.then.1046
  %560 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1060 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %560, i32 0, i32 21
  %asiz1061 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1060, i32 0, i32 1
  %561 = load i64, i64* %asiz1061, align 8
  %add1062 = add i64 1, %561
  %add1063 = add i64 %add1062, 8191
  %and1064 = and i64 %add1063, -8192
  %conv1065 = trunc i64 %and1064 to i32
  store i32 %conv1065, i32* %nsz1059, align 4
  %562 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1068 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %562, i32 0, i32 21
  %aptr1069 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1068, i32 0, i32 2
  %563 = load i8*, i8** %aptr1069, align 8
  %564 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1070 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %564, i32 0, i32 21
  %arena1071 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1070, i32 0, i32 0
  %565 = load i8*, i8** %arena1071, align 8
  %sub.ptr.lhs.cast1072 = ptrtoint i8* %563 to i64
  %sub.ptr.rhs.cast1073 = ptrtoint i8* %565 to i64
  %sub.ptr.sub1074 = sub i64 %sub.ptr.lhs.cast1072, %sub.ptr.rhs.cast1073
  %conv1075 = trunc i64 %sub.ptr.sub1074 to i32
  store i32 %conv1075, i32* %offset1067, align 4
  %566 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1076 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %566, i32 0, i32 21
  %arena1077 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1076, i32 0, i32 0
  %567 = load i8*, i8** %arena1077, align 8
  %568 = load i32, i32* %nsz1059, align 4
  %conv1078 = sext i32 %568 to i64
  %mul1079 = mul i64 %conv1078, 1
  %call1080 = call i8* @Perl_safesysrealloc(i8* %567, i64 %mul1079)
  %569 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1081 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %569, i32 0, i32 21
  %arena1082 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1081, i32 0, i32 0
  store i8* %call1080, i8** %arena1082, align 8
  %570 = load i32, i32* %nsz1059, align 4
  %conv1083 = sext i32 %570 to i64
  %571 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1084 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %571, i32 0, i32 21
  %asiz1085 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1084, i32 0, i32 1
  store i64 %conv1083, i64* %asiz1085, align 8
  %572 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1086 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %572, i32 0, i32 21
  %arena1087 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1086, i32 0, i32 0
  %573 = load i8*, i8** %arena1087, align 8
  %574 = load i32, i32* %offset1067, align 4
  %idx.ext1088 = sext i32 %574 to i64
  %add.ptr1089 = getelementptr inbounds i8, i8* %573, i64 %idx.ext1088
  %575 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1090 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %575, i32 0, i32 21
  %aptr1091 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1090, i32 0, i32 2
  store i8* %add.ptr1089, i8** %aptr1091, align 8
  %576 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1093 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %576, i32 0, i32 21
  %arena1094 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1093, i32 0, i32 0
  %577 = load i8*, i8** %arena1094, align 8
  %578 = load i32, i32* %nsz1059, align 4
  %idx.ext1095 = sext i32 %578 to i64
  %add.ptr1096 = getelementptr inbounds i8, i8* %577, i64 %idx.ext1095
  %579 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1097 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %579, i32 0, i32 21
  %aend1098 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1097, i32 0, i32 3
  store i8* %add.ptr1096, i8** %aend1098, align 8
  store i8* %add.ptr1096, i8** %tmp1092
  %580 = load i8*, i8** %tmp1092
  %581 = load i8, i8* %clen, align 1
  %582 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1099 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %582, i32 0, i32 21
  %aptr1100 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1099, i32 0, i32 2
  %583 = load i8*, i8** %aptr1100, align 8
  %incdec.ptr1101 = getelementptr inbounds i8, i8* %583, i32 1
  store i8* %incdec.ptr1101, i8** %aptr1100, align 8
  store i8 %581, i8* %583, align 1
  br label %if.end.1102

if.end.1102:                                      ; preds = %if.else.1057, %if.then.1053
  br label %if.end.1111

if.else.1103:                                     ; preds = %if.end.1043
  %584 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1104 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %584, i32 0, i32 23
  %585 = load %struct._PerlIO**, %struct._PerlIO*** %fio1104, align 8
  %586 = load i8, i8* %clen, align 1
  %conv1105 = zext i8 %586 to i32
  %call1106 = call i32 @PerlIO_putc(%struct._PerlIO** %585, i32 %conv1105)
  %cmp1107 = icmp eq i32 %call1106, -1
  br i1 %cmp1107, label %if.then.1109, label %if.end.1110

if.then.1109:                                     ; preds = %if.else.1103
  store i32 -1, i32* %retval
  br label %return

if.end.1110:                                      ; preds = %if.else.1103
  br label %if.end.1111

if.end.1111:                                      ; preds = %if.end.1110, %if.end.1102
  %587 = load i32, i32* %wlen, align 4
  %tobool1112 = icmp ne i32 %587, 0
  br i1 %tobool1112, label %if.then.1113, label %if.end.1187

if.then.1113:                                     ; preds = %if.end.1111
  %588 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1114 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %588, i32 0, i32 23
  %589 = load %struct._PerlIO**, %struct._PerlIO*** %fio1114, align 8
  %tobool1115 = icmp ne %struct._PerlIO** %589, null
  br i1 %tobool1115, label %if.else.1177, label %if.then.1116

if.then.1116:                                     ; preds = %if.then.1113
  %590 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1117 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %590, i32 0, i32 21
  %aptr1118 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1117, i32 0, i32 2
  %591 = load i8*, i8** %aptr1118, align 8
  %592 = load i32, i32* %wlen, align 4
  %idx.ext1119 = sext i32 %592 to i64
  %add.ptr1120 = getelementptr inbounds i8, i8* %591, i64 %idx.ext1119
  %593 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1121 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %593, i32 0, i32 21
  %aend1122 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1121, i32 0, i32 3
  %594 = load i8*, i8** %aend1122, align 8
  %cmp1123 = icmp ugt i8* %add.ptr1120, %594
  br i1 %cmp1123, label %if.then.1125, label %if.end.1168

if.then.1125:                                     ; preds = %if.then.1116
  %595 = load i32, i32* %wlen, align 4
  %conv1128 = sext i32 %595 to i64
  %596 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1129 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %596, i32 0, i32 21
  %asiz1130 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1129, i32 0, i32 1
  %597 = load i64, i64* %asiz1130, align 8
  %add1131 = add i64 %conv1128, %597
  %add1132 = add i64 %add1131, 8191
  %and1133 = and i64 %add1132, -8192
  %conv1134 = trunc i64 %and1133 to i32
  store i32 %conv1134, i32* %nsz1127, align 4
  %598 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1137 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %598, i32 0, i32 21
  %aptr1138 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1137, i32 0, i32 2
  %599 = load i8*, i8** %aptr1138, align 8
  %600 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1139 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %600, i32 0, i32 21
  %arena1140 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1139, i32 0, i32 0
  %601 = load i8*, i8** %arena1140, align 8
  %sub.ptr.lhs.cast1141 = ptrtoint i8* %599 to i64
  %sub.ptr.rhs.cast1142 = ptrtoint i8* %601 to i64
  %sub.ptr.sub1143 = sub i64 %sub.ptr.lhs.cast1141, %sub.ptr.rhs.cast1142
  %conv1144 = trunc i64 %sub.ptr.sub1143 to i32
  store i32 %conv1144, i32* %offset1136, align 4
  %602 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1145 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %602, i32 0, i32 21
  %arena1146 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1145, i32 0, i32 0
  %603 = load i8*, i8** %arena1146, align 8
  %604 = load i32, i32* %nsz1127, align 4
  %conv1147 = sext i32 %604 to i64
  %mul1148 = mul i64 %conv1147, 1
  %call1149 = call i8* @Perl_safesysrealloc(i8* %603, i64 %mul1148)
  %605 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1150 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %605, i32 0, i32 21
  %arena1151 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1150, i32 0, i32 0
  store i8* %call1149, i8** %arena1151, align 8
  %606 = load i32, i32* %nsz1127, align 4
  %conv1152 = sext i32 %606 to i64
  %607 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1153 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %607, i32 0, i32 21
  %asiz1154 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1153, i32 0, i32 1
  store i64 %conv1152, i64* %asiz1154, align 8
  %608 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1155 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %608, i32 0, i32 21
  %arena1156 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1155, i32 0, i32 0
  %609 = load i8*, i8** %arena1156, align 8
  %610 = load i32, i32* %offset1136, align 4
  %idx.ext1157 = sext i32 %610 to i64
  %add.ptr1158 = getelementptr inbounds i8, i8* %609, i64 %idx.ext1157
  %611 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1159 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %611, i32 0, i32 21
  %aptr1160 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1159, i32 0, i32 2
  store i8* %add.ptr1158, i8** %aptr1160, align 8
  %612 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1162 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %612, i32 0, i32 21
  %arena1163 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1162, i32 0, i32 0
  %613 = load i8*, i8** %arena1163, align 8
  %614 = load i32, i32* %nsz1127, align 4
  %idx.ext1164 = sext i32 %614 to i64
  %add.ptr1165 = getelementptr inbounds i8, i8* %613, i64 %idx.ext1164
  %615 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1166 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %615, i32 0, i32 21
  %aend1167 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1166, i32 0, i32 3
  store i8* %add.ptr1165, i8** %aend1167, align 8
  store i8* %add.ptr1165, i8** %tmp1161
  %616 = load i8*, i8** %tmp1161
  br label %if.end.1168

if.end.1168:                                      ; preds = %if.then.1125, %if.then.1116
  %617 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1169 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %617, i32 0, i32 21
  %aptr1170 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1169, i32 0, i32 2
  %618 = load i8*, i8** %aptr1170, align 8
  %619 = load i8*, i8** %pv, align 8
  %620 = load i32, i32* %wlen, align 4
  %conv1171 = sext i32 %620 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %618, i8* %619, i64 %conv1171, i32 1, i1 false)
  %621 = load i32, i32* %wlen, align 4
  %622 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1173 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %622, i32 0, i32 21
  %aptr1174 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1173, i32 0, i32 2
  %623 = load i8*, i8** %aptr1174, align 8
  %idx.ext1175 = sext i32 %621 to i64
  %add.ptr1176 = getelementptr inbounds i8, i8* %623, i64 %idx.ext1175
  store i8* %add.ptr1176, i8** %aptr1174, align 8
  store i8* %add.ptr1176, i8** %tmp1172
  %624 = load i8*, i8** %tmp1172
  br label %if.end.1186

if.else.1177:                                     ; preds = %if.then.1113
  %625 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1178 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %625, i32 0, i32 23
  %626 = load %struct._PerlIO**, %struct._PerlIO*** %fio1178, align 8
  %627 = load i8*, i8** %pv, align 8
  %628 = load i32, i32* %wlen, align 4
  %conv1179 = sext i32 %628 to i64
  %call1180 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %626, i8* %627, i64 %conv1179)
  %629 = load i32, i32* %wlen, align 4
  %conv1181 = sext i32 %629 to i64
  %cmp1182 = icmp ne i64 %call1180, %conv1181
  br i1 %cmp1182, label %if.then.1184, label %if.end.1185

if.then.1184:                                     ; preds = %if.else.1177
  store i32 -1, i32* %retval
  br label %return

if.end.1185:                                      ; preds = %if.else.1177
  br label %if.end.1186

if.end.1186:                                      ; preds = %if.end.1185, %if.end.1168
  br label %if.end.1187

if.end.1187:                                      ; preds = %if.end.1186, %if.end.1111
  br label %if.end.1496

if.else.1188:                                     ; preds = %if.then.971
  %630 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1189 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %630, i32 0, i32 23
  %631 = load %struct._PerlIO**, %struct._PerlIO*** %fio1189, align 8
  %tobool1190 = icmp ne %struct._PerlIO** %631, null
  br i1 %tobool1190, label %if.else.1248, label %if.then.1191

if.then.1191:                                     ; preds = %if.else.1188
  %632 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1192 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %632, i32 0, i32 21
  %aptr1193 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1192, i32 0, i32 2
  %633 = load i8*, i8** %aptr1193, align 8
  %634 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1194 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %634, i32 0, i32 21
  %aend1195 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1194, i32 0, i32 3
  %635 = load i8*, i8** %aend1195, align 8
  %cmp1196 = icmp ult i8* %633, %635
  br i1 %cmp1196, label %if.then.1198, label %if.else.1202

if.then.1198:                                     ; preds = %if.then.1191
  %636 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1199 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %636, i32 0, i32 21
  %aptr1200 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1199, i32 0, i32 2
  %637 = load i8*, i8** %aptr1200, align 8
  %incdec.ptr1201 = getelementptr inbounds i8, i8* %637, i32 1
  store i8* %incdec.ptr1201, i8** %aptr1200, align 8
  store i8 24, i8* %637, align 1
  br label %if.end.1247

if.else.1202:                                     ; preds = %if.then.1191
  %638 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1205 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %638, i32 0, i32 21
  %asiz1206 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1205, i32 0, i32 1
  %639 = load i64, i64* %asiz1206, align 8
  %add1207 = add i64 1, %639
  %add1208 = add i64 %add1207, 8191
  %and1209 = and i64 %add1208, -8192
  %conv1210 = trunc i64 %and1209 to i32
  store i32 %conv1210, i32* %nsz1204, align 4
  %640 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1213 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %640, i32 0, i32 21
  %aptr1214 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1213, i32 0, i32 2
  %641 = load i8*, i8** %aptr1214, align 8
  %642 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1215 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %642, i32 0, i32 21
  %arena1216 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1215, i32 0, i32 0
  %643 = load i8*, i8** %arena1216, align 8
  %sub.ptr.lhs.cast1217 = ptrtoint i8* %641 to i64
  %sub.ptr.rhs.cast1218 = ptrtoint i8* %643 to i64
  %sub.ptr.sub1219 = sub i64 %sub.ptr.lhs.cast1217, %sub.ptr.rhs.cast1218
  %conv1220 = trunc i64 %sub.ptr.sub1219 to i32
  store i32 %conv1220, i32* %offset1212, align 4
  %644 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1221 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %644, i32 0, i32 21
  %arena1222 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1221, i32 0, i32 0
  %645 = load i8*, i8** %arena1222, align 8
  %646 = load i32, i32* %nsz1204, align 4
  %conv1223 = sext i32 %646 to i64
  %mul1224 = mul i64 %conv1223, 1
  %call1225 = call i8* @Perl_safesysrealloc(i8* %645, i64 %mul1224)
  %647 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1226 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %647, i32 0, i32 21
  %arena1227 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1226, i32 0, i32 0
  store i8* %call1225, i8** %arena1227, align 8
  %648 = load i32, i32* %nsz1204, align 4
  %conv1228 = sext i32 %648 to i64
  %649 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1229 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %649, i32 0, i32 21
  %asiz1230 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1229, i32 0, i32 1
  store i64 %conv1228, i64* %asiz1230, align 8
  %650 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1231 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %650, i32 0, i32 21
  %arena1232 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1231, i32 0, i32 0
  %651 = load i8*, i8** %arena1232, align 8
  %652 = load i32, i32* %offset1212, align 4
  %idx.ext1233 = sext i32 %652 to i64
  %add.ptr1234 = getelementptr inbounds i8, i8* %651, i64 %idx.ext1233
  %653 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1235 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %653, i32 0, i32 21
  %aptr1236 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1235, i32 0, i32 2
  store i8* %add.ptr1234, i8** %aptr1236, align 8
  %654 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1238 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %654, i32 0, i32 21
  %arena1239 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1238, i32 0, i32 0
  %655 = load i8*, i8** %arena1239, align 8
  %656 = load i32, i32* %nsz1204, align 4
  %idx.ext1240 = sext i32 %656 to i64
  %add.ptr1241 = getelementptr inbounds i8, i8* %655, i64 %idx.ext1240
  %657 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1242 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %657, i32 0, i32 21
  %aend1243 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1242, i32 0, i32 3
  store i8* %add.ptr1241, i8** %aend1243, align 8
  store i8* %add.ptr1241, i8** %tmp1237
  %658 = load i8*, i8** %tmp1237
  %659 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1244 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %659, i32 0, i32 21
  %aptr1245 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1244, i32 0, i32 2
  %660 = load i8*, i8** %aptr1245, align 8
  %incdec.ptr1246 = getelementptr inbounds i8, i8* %660, i32 1
  store i8* %incdec.ptr1246, i8** %aptr1245, align 8
  store i8 24, i8* %660, align 1
  br label %if.end.1247

if.end.1247:                                      ; preds = %if.else.1202, %if.then.1198
  br label %if.end.1255

if.else.1248:                                     ; preds = %if.else.1188
  %661 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1249 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %661, i32 0, i32 23
  %662 = load %struct._PerlIO**, %struct._PerlIO*** %fio1249, align 8
  %call1250 = call i32 @PerlIO_putc(%struct._PerlIO** %662, i32 24)
  %cmp1251 = icmp eq i32 %call1250, -1
  br i1 %cmp1251, label %if.then.1253, label %if.end.1254

if.then.1253:                                     ; preds = %if.else.1248
  store i32 -1, i32* %retval
  br label %return

if.end.1254:                                      ; preds = %if.else.1248
  br label %if.end.1255

if.end.1255:                                      ; preds = %if.end.1254, %if.end.1247
  %663 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder1256 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %663, i32 0, i32 11
  %664 = load i32, i32* %netorder1256, align 4
  %tobool1257 = icmp ne i32 %664, 0
  br i1 %tobool1257, label %if.then.1258, label %if.else.1342

if.then.1258:                                     ; preds = %if.end.1255
  %665 = load i32, i32* %wlen, align 4
  %conv1260 = sext i32 %665 to i64
  %call1261 = call i64 @Perl_my_htonl(i64 %conv1260)
  %conv1262 = trunc i64 %call1261 to i32
  store i32 %conv1262, i32* %y, align 4
  %666 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1263 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %666, i32 0, i32 23
  %667 = load %struct._PerlIO**, %struct._PerlIO*** %fio1263, align 8
  %tobool1264 = icmp ne %struct._PerlIO** %667, null
  br i1 %tobool1264, label %if.else.1334, label %if.then.1265

if.then.1265:                                     ; preds = %if.then.1258
  %668 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1266 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %668, i32 0, i32 21
  %aptr1267 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1266, i32 0, i32 2
  %669 = load i8*, i8** %aptr1267, align 8
  %add.ptr1268 = getelementptr inbounds i8, i8* %669, i64 4
  %670 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1269 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %670, i32 0, i32 21
  %aend1270 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1269, i32 0, i32 3
  %671 = load i8*, i8** %aend1270, align 8
  %cmp1271 = icmp ugt i8* %add.ptr1268, %671
  br i1 %cmp1271, label %if.then.1273, label %if.end.1315

if.then.1273:                                     ; preds = %if.then.1265
  %672 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1276 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %672, i32 0, i32 21
  %asiz1277 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1276, i32 0, i32 1
  %673 = load i64, i64* %asiz1277, align 8
  %add1278 = add i64 4, %673
  %add1279 = add i64 %add1278, 8191
  %and1280 = and i64 %add1279, -8192
  %conv1281 = trunc i64 %and1280 to i32
  store i32 %conv1281, i32* %nsz1275, align 4
  %674 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1284 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %674, i32 0, i32 21
  %aptr1285 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1284, i32 0, i32 2
  %675 = load i8*, i8** %aptr1285, align 8
  %676 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1286 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %676, i32 0, i32 21
  %arena1287 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1286, i32 0, i32 0
  %677 = load i8*, i8** %arena1287, align 8
  %sub.ptr.lhs.cast1288 = ptrtoint i8* %675 to i64
  %sub.ptr.rhs.cast1289 = ptrtoint i8* %677 to i64
  %sub.ptr.sub1290 = sub i64 %sub.ptr.lhs.cast1288, %sub.ptr.rhs.cast1289
  %conv1291 = trunc i64 %sub.ptr.sub1290 to i32
  store i32 %conv1291, i32* %offset1283, align 4
  %678 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1292 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %678, i32 0, i32 21
  %arena1293 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1292, i32 0, i32 0
  %679 = load i8*, i8** %arena1293, align 8
  %680 = load i32, i32* %nsz1275, align 4
  %conv1294 = sext i32 %680 to i64
  %mul1295 = mul i64 %conv1294, 1
  %call1296 = call i8* @Perl_safesysrealloc(i8* %679, i64 %mul1295)
  %681 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1297 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %681, i32 0, i32 21
  %arena1298 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1297, i32 0, i32 0
  store i8* %call1296, i8** %arena1298, align 8
  %682 = load i32, i32* %nsz1275, align 4
  %conv1299 = sext i32 %682 to i64
  %683 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1300 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %683, i32 0, i32 21
  %asiz1301 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1300, i32 0, i32 1
  store i64 %conv1299, i64* %asiz1301, align 8
  %684 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1302 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %684, i32 0, i32 21
  %arena1303 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1302, i32 0, i32 0
  %685 = load i8*, i8** %arena1303, align 8
  %686 = load i32, i32* %offset1283, align 4
  %idx.ext1304 = sext i32 %686 to i64
  %add.ptr1305 = getelementptr inbounds i8, i8* %685, i64 %idx.ext1304
  %687 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1306 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %687, i32 0, i32 21
  %aptr1307 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1306, i32 0, i32 2
  store i8* %add.ptr1305, i8** %aptr1307, align 8
  %688 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1309 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %688, i32 0, i32 21
  %arena1310 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1309, i32 0, i32 0
  %689 = load i8*, i8** %arena1310, align 8
  %690 = load i32, i32* %nsz1275, align 4
  %idx.ext1311 = sext i32 %690 to i64
  %add.ptr1312 = getelementptr inbounds i8, i8* %689, i64 %idx.ext1311
  %691 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1313 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %691, i32 0, i32 21
  %aend1314 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1313, i32 0, i32 3
  store i8* %add.ptr1312, i8** %aend1314, align 8
  store i8* %add.ptr1312, i8** %tmp1308
  %692 = load i8*, i8** %tmp1308
  br label %if.end.1315

if.end.1315:                                      ; preds = %if.then.1273, %if.then.1265
  %693 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1316 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %693, i32 0, i32 21
  %aptr1317 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1316, i32 0, i32 2
  %694 = load i8*, i8** %aptr1317, align 8
  %695 = ptrtoint i8* %694 to i64
  %696 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1318 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %696, i32 0, i32 21
  %aptr1319 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1318, i32 0, i32 2
  %697 = load i8*, i8** %aptr1319, align 8
  %698 = ptrtoint i8* %697 to i64
  %and1320 = and i64 %698, -4
  %cmp1321 = icmp eq i64 %695, %and1320
  br i1 %cmp1321, label %if.then.1323, label %if.else.1326

if.then.1323:                                     ; preds = %if.end.1315
  %699 = load i32, i32* %y, align 4
  %700 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1324 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %700, i32 0, i32 21
  %aptr1325 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1324, i32 0, i32 2
  %701 = load i8*, i8** %aptr1325, align 8
  %702 = bitcast i8* %701 to i32*
  store i32 %699, i32* %702, align 4
  br label %if.end.1329

if.else.1326:                                     ; preds = %if.end.1315
  %703 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1327 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %703, i32 0, i32 21
  %aptr1328 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1327, i32 0, i32 2
  %704 = load i8*, i8** %aptr1328, align 8
  %705 = bitcast i32* %y to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %704, i8* %705, i64 4, i32 1, i1 false)
  br label %if.end.1329

if.end.1329:                                      ; preds = %if.else.1326, %if.then.1323
  %706 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1331 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %706, i32 0, i32 21
  %aptr1332 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1331, i32 0, i32 2
  %707 = load i8*, i8** %aptr1332, align 8
  %add.ptr1333 = getelementptr inbounds i8, i8* %707, i64 4
  store i8* %add.ptr1333, i8** %aptr1332, align 8
  store i8* %add.ptr1333, i8** %tmp1330
  %708 = load i8*, i8** %tmp1330
  br label %if.end.1341

if.else.1334:                                     ; preds = %if.then.1258
  %709 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1335 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %709, i32 0, i32 23
  %710 = load %struct._PerlIO**, %struct._PerlIO*** %fio1335, align 8
  %711 = bitcast i32* %y to i8*
  %call1336 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %710, i8* %711, i64 4)
  %cmp1337 = icmp ne i64 %call1336, 4
  br i1 %cmp1337, label %if.then.1339, label %if.end.1340

if.then.1339:                                     ; preds = %if.else.1334
  store i32 -1, i32* %retval
  br label %return

if.end.1340:                                      ; preds = %if.else.1334
  br label %if.end.1341

if.end.1341:                                      ; preds = %if.end.1340, %if.end.1329
  br label %if.end.1422

if.else.1342:                                     ; preds = %if.end.1255
  %712 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1343 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %712, i32 0, i32 23
  %713 = load %struct._PerlIO**, %struct._PerlIO*** %fio1343, align 8
  %tobool1344 = icmp ne %struct._PerlIO** %713, null
  br i1 %tobool1344, label %if.else.1414, label %if.then.1345

if.then.1345:                                     ; preds = %if.else.1342
  %714 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1346 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %714, i32 0, i32 21
  %aptr1347 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1346, i32 0, i32 2
  %715 = load i8*, i8** %aptr1347, align 8
  %add.ptr1348 = getelementptr inbounds i8, i8* %715, i64 4
  %716 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1349 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %716, i32 0, i32 21
  %aend1350 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1349, i32 0, i32 3
  %717 = load i8*, i8** %aend1350, align 8
  %cmp1351 = icmp ugt i8* %add.ptr1348, %717
  br i1 %cmp1351, label %if.then.1353, label %if.end.1395

if.then.1353:                                     ; preds = %if.then.1345
  %718 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1356 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %718, i32 0, i32 21
  %asiz1357 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1356, i32 0, i32 1
  %719 = load i64, i64* %asiz1357, align 8
  %add1358 = add i64 4, %719
  %add1359 = add i64 %add1358, 8191
  %and1360 = and i64 %add1359, -8192
  %conv1361 = trunc i64 %and1360 to i32
  store i32 %conv1361, i32* %nsz1355, align 4
  %720 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1364 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %720, i32 0, i32 21
  %aptr1365 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1364, i32 0, i32 2
  %721 = load i8*, i8** %aptr1365, align 8
  %722 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1366 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %722, i32 0, i32 21
  %arena1367 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1366, i32 0, i32 0
  %723 = load i8*, i8** %arena1367, align 8
  %sub.ptr.lhs.cast1368 = ptrtoint i8* %721 to i64
  %sub.ptr.rhs.cast1369 = ptrtoint i8* %723 to i64
  %sub.ptr.sub1370 = sub i64 %sub.ptr.lhs.cast1368, %sub.ptr.rhs.cast1369
  %conv1371 = trunc i64 %sub.ptr.sub1370 to i32
  store i32 %conv1371, i32* %offset1363, align 4
  %724 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1372 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %724, i32 0, i32 21
  %arena1373 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1372, i32 0, i32 0
  %725 = load i8*, i8** %arena1373, align 8
  %726 = load i32, i32* %nsz1355, align 4
  %conv1374 = sext i32 %726 to i64
  %mul1375 = mul i64 %conv1374, 1
  %call1376 = call i8* @Perl_safesysrealloc(i8* %725, i64 %mul1375)
  %727 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1377 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %727, i32 0, i32 21
  %arena1378 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1377, i32 0, i32 0
  store i8* %call1376, i8** %arena1378, align 8
  %728 = load i32, i32* %nsz1355, align 4
  %conv1379 = sext i32 %728 to i64
  %729 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1380 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %729, i32 0, i32 21
  %asiz1381 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1380, i32 0, i32 1
  store i64 %conv1379, i64* %asiz1381, align 8
  %730 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1382 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %730, i32 0, i32 21
  %arena1383 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1382, i32 0, i32 0
  %731 = load i8*, i8** %arena1383, align 8
  %732 = load i32, i32* %offset1363, align 4
  %idx.ext1384 = sext i32 %732 to i64
  %add.ptr1385 = getelementptr inbounds i8, i8* %731, i64 %idx.ext1384
  %733 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1386 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %733, i32 0, i32 21
  %aptr1387 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1386, i32 0, i32 2
  store i8* %add.ptr1385, i8** %aptr1387, align 8
  %734 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1389 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %734, i32 0, i32 21
  %arena1390 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1389, i32 0, i32 0
  %735 = load i8*, i8** %arena1390, align 8
  %736 = load i32, i32* %nsz1355, align 4
  %idx.ext1391 = sext i32 %736 to i64
  %add.ptr1392 = getelementptr inbounds i8, i8* %735, i64 %idx.ext1391
  %737 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1393 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %737, i32 0, i32 21
  %aend1394 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1393, i32 0, i32 3
  store i8* %add.ptr1392, i8** %aend1394, align 8
  store i8* %add.ptr1392, i8** %tmp1388
  %738 = load i8*, i8** %tmp1388
  br label %if.end.1395

if.end.1395:                                      ; preds = %if.then.1353, %if.then.1345
  %739 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1396 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %739, i32 0, i32 21
  %aptr1397 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1396, i32 0, i32 2
  %740 = load i8*, i8** %aptr1397, align 8
  %741 = ptrtoint i8* %740 to i64
  %742 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1398 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %742, i32 0, i32 21
  %aptr1399 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1398, i32 0, i32 2
  %743 = load i8*, i8** %aptr1399, align 8
  %744 = ptrtoint i8* %743 to i64
  %and1400 = and i64 %744, -4
  %cmp1401 = icmp eq i64 %741, %and1400
  br i1 %cmp1401, label %if.then.1403, label %if.else.1406

if.then.1403:                                     ; preds = %if.end.1395
  %745 = load i32, i32* %wlen, align 4
  %746 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1404 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %746, i32 0, i32 21
  %aptr1405 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1404, i32 0, i32 2
  %747 = load i8*, i8** %aptr1405, align 8
  %748 = bitcast i8* %747 to i32*
  store i32 %745, i32* %748, align 4
  br label %if.end.1409

if.else.1406:                                     ; preds = %if.end.1395
  %749 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1407 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %749, i32 0, i32 21
  %aptr1408 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1407, i32 0, i32 2
  %750 = load i8*, i8** %aptr1408, align 8
  %751 = bitcast i32* %wlen to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %750, i8* %751, i64 4, i32 1, i1 false)
  br label %if.end.1409

if.end.1409:                                      ; preds = %if.else.1406, %if.then.1403
  %752 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1411 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %752, i32 0, i32 21
  %aptr1412 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1411, i32 0, i32 2
  %753 = load i8*, i8** %aptr1412, align 8
  %add.ptr1413 = getelementptr inbounds i8, i8* %753, i64 4
  store i8* %add.ptr1413, i8** %aptr1412, align 8
  store i8* %add.ptr1413, i8** %tmp1410
  %754 = load i8*, i8** %tmp1410
  br label %if.end.1421

if.else.1414:                                     ; preds = %if.else.1342
  %755 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1415 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %755, i32 0, i32 23
  %756 = load %struct._PerlIO**, %struct._PerlIO*** %fio1415, align 8
  %757 = bitcast i32* %wlen to i8*
  %call1416 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %756, i8* %757, i64 4)
  %cmp1417 = icmp ne i64 %call1416, 4
  br i1 %cmp1417, label %if.then.1419, label %if.end.1420

if.then.1419:                                     ; preds = %if.else.1414
  store i32 -1, i32* %retval
  br label %return

if.end.1420:                                      ; preds = %if.else.1414
  br label %if.end.1421

if.end.1421:                                      ; preds = %if.end.1420, %if.end.1409
  br label %if.end.1422

if.end.1422:                                      ; preds = %if.end.1421, %if.end.1341
  %758 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1423 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %758, i32 0, i32 23
  %759 = load %struct._PerlIO**, %struct._PerlIO*** %fio1423, align 8
  %tobool1424 = icmp ne %struct._PerlIO** %759, null
  br i1 %tobool1424, label %if.else.1486, label %if.then.1425

if.then.1425:                                     ; preds = %if.end.1422
  %760 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1426 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %760, i32 0, i32 21
  %aptr1427 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1426, i32 0, i32 2
  %761 = load i8*, i8** %aptr1427, align 8
  %762 = load i32, i32* %wlen, align 4
  %idx.ext1428 = sext i32 %762 to i64
  %add.ptr1429 = getelementptr inbounds i8, i8* %761, i64 %idx.ext1428
  %763 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1430 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %763, i32 0, i32 21
  %aend1431 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1430, i32 0, i32 3
  %764 = load i8*, i8** %aend1431, align 8
  %cmp1432 = icmp ugt i8* %add.ptr1429, %764
  br i1 %cmp1432, label %if.then.1434, label %if.end.1477

if.then.1434:                                     ; preds = %if.then.1425
  %765 = load i32, i32* %wlen, align 4
  %conv1437 = sext i32 %765 to i64
  %766 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1438 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %766, i32 0, i32 21
  %asiz1439 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1438, i32 0, i32 1
  %767 = load i64, i64* %asiz1439, align 8
  %add1440 = add i64 %conv1437, %767
  %add1441 = add i64 %add1440, 8191
  %and1442 = and i64 %add1441, -8192
  %conv1443 = trunc i64 %and1442 to i32
  store i32 %conv1443, i32* %nsz1436, align 4
  %768 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1446 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %768, i32 0, i32 21
  %aptr1447 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1446, i32 0, i32 2
  %769 = load i8*, i8** %aptr1447, align 8
  %770 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1448 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %770, i32 0, i32 21
  %arena1449 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1448, i32 0, i32 0
  %771 = load i8*, i8** %arena1449, align 8
  %sub.ptr.lhs.cast1450 = ptrtoint i8* %769 to i64
  %sub.ptr.rhs.cast1451 = ptrtoint i8* %771 to i64
  %sub.ptr.sub1452 = sub i64 %sub.ptr.lhs.cast1450, %sub.ptr.rhs.cast1451
  %conv1453 = trunc i64 %sub.ptr.sub1452 to i32
  store i32 %conv1453, i32* %offset1445, align 4
  %772 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1454 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %772, i32 0, i32 21
  %arena1455 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1454, i32 0, i32 0
  %773 = load i8*, i8** %arena1455, align 8
  %774 = load i32, i32* %nsz1436, align 4
  %conv1456 = sext i32 %774 to i64
  %mul1457 = mul i64 %conv1456, 1
  %call1458 = call i8* @Perl_safesysrealloc(i8* %773, i64 %mul1457)
  %775 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1459 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %775, i32 0, i32 21
  %arena1460 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1459, i32 0, i32 0
  store i8* %call1458, i8** %arena1460, align 8
  %776 = load i32, i32* %nsz1436, align 4
  %conv1461 = sext i32 %776 to i64
  %777 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1462 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %777, i32 0, i32 21
  %asiz1463 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1462, i32 0, i32 1
  store i64 %conv1461, i64* %asiz1463, align 8
  %778 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1464 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %778, i32 0, i32 21
  %arena1465 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1464, i32 0, i32 0
  %779 = load i8*, i8** %arena1465, align 8
  %780 = load i32, i32* %offset1445, align 4
  %idx.ext1466 = sext i32 %780 to i64
  %add.ptr1467 = getelementptr inbounds i8, i8* %779, i64 %idx.ext1466
  %781 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1468 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %781, i32 0, i32 21
  %aptr1469 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1468, i32 0, i32 2
  store i8* %add.ptr1467, i8** %aptr1469, align 8
  %782 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1471 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %782, i32 0, i32 21
  %arena1472 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1471, i32 0, i32 0
  %783 = load i8*, i8** %arena1472, align 8
  %784 = load i32, i32* %nsz1436, align 4
  %idx.ext1473 = sext i32 %784 to i64
  %add.ptr1474 = getelementptr inbounds i8, i8* %783, i64 %idx.ext1473
  %785 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1475 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %785, i32 0, i32 21
  %aend1476 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1475, i32 0, i32 3
  store i8* %add.ptr1474, i8** %aend1476, align 8
  store i8* %add.ptr1474, i8** %tmp1470
  %786 = load i8*, i8** %tmp1470
  br label %if.end.1477

if.end.1477:                                      ; preds = %if.then.1434, %if.then.1425
  %787 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1478 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %787, i32 0, i32 21
  %aptr1479 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1478, i32 0, i32 2
  %788 = load i8*, i8** %aptr1479, align 8
  %789 = load i8*, i8** %pv, align 8
  %790 = load i32, i32* %wlen, align 4
  %conv1480 = sext i32 %790 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %788, i8* %789, i64 %conv1480, i32 1, i1 false)
  %791 = load i32, i32* %wlen, align 4
  %792 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1482 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %792, i32 0, i32 21
  %aptr1483 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1482, i32 0, i32 2
  %793 = load i8*, i8** %aptr1483, align 8
  %idx.ext1484 = sext i32 %791 to i64
  %add.ptr1485 = getelementptr inbounds i8, i8* %793, i64 %idx.ext1484
  store i8* %add.ptr1485, i8** %aptr1483, align 8
  store i8* %add.ptr1485, i8** %tmp1481
  %794 = load i8*, i8** %tmp1481
  br label %if.end.1495

if.else.1486:                                     ; preds = %if.end.1422
  %795 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1487 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %795, i32 0, i32 23
  %796 = load %struct._PerlIO**, %struct._PerlIO*** %fio1487, align 8
  %797 = load i8*, i8** %pv, align 8
  %798 = load i32, i32* %wlen, align 4
  %conv1488 = sext i32 %798 to i64
  %call1489 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %796, i8* %797, i64 %conv1488)
  %799 = load i32, i32* %wlen, align 4
  %conv1490 = sext i32 %799 to i64
  %cmp1491 = icmp ne i64 %call1489, %conv1490
  br i1 %cmp1491, label %if.then.1493, label %if.end.1494

if.then.1493:                                     ; preds = %if.else.1486
  store i32 -1, i32* %retval
  br label %return

if.end.1494:                                      ; preds = %if.else.1486
  br label %if.end.1495

if.end.1495:                                      ; preds = %if.end.1494, %if.end.1477
  br label %if.end.1496

if.end.1496:                                      ; preds = %if.end.1495, %if.end.1187
  br label %if.end.2025

if.else.1497:                                     ; preds = %string
  %800 = load i32, i32* %wlen, align 4
  %cmp1498 = icmp sle i32 %800, 255
  br i1 %cmp1498, label %if.then.1500, label %if.else.1715

if.then.1500:                                     ; preds = %if.else.1497
  %801 = load i32, i32* %wlen, align 4
  %conv1503 = trunc i32 %801 to i8
  store i8 %conv1503, i8* %clen1502, align 1
  %802 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1504 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %802, i32 0, i32 23
  %803 = load %struct._PerlIO**, %struct._PerlIO*** %fio1504, align 8
  %tobool1505 = icmp ne %struct._PerlIO** %803, null
  br i1 %tobool1505, label %if.else.1563, label %if.then.1506

if.then.1506:                                     ; preds = %if.then.1500
  %804 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1507 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %804, i32 0, i32 21
  %aptr1508 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1507, i32 0, i32 2
  %805 = load i8*, i8** %aptr1508, align 8
  %806 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1509 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %806, i32 0, i32 21
  %aend1510 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1509, i32 0, i32 3
  %807 = load i8*, i8** %aend1510, align 8
  %cmp1511 = icmp ult i8* %805, %807
  br i1 %cmp1511, label %if.then.1513, label %if.else.1517

if.then.1513:                                     ; preds = %if.then.1506
  %808 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1514 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %808, i32 0, i32 21
  %aptr1515 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1514, i32 0, i32 2
  %809 = load i8*, i8** %aptr1515, align 8
  %incdec.ptr1516 = getelementptr inbounds i8, i8* %809, i32 1
  store i8* %incdec.ptr1516, i8** %aptr1515, align 8
  store i8 10, i8* %809, align 1
  br label %if.end.1562

if.else.1517:                                     ; preds = %if.then.1506
  %810 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1520 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %810, i32 0, i32 21
  %asiz1521 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1520, i32 0, i32 1
  %811 = load i64, i64* %asiz1521, align 8
  %add1522 = add i64 1, %811
  %add1523 = add i64 %add1522, 8191
  %and1524 = and i64 %add1523, -8192
  %conv1525 = trunc i64 %and1524 to i32
  store i32 %conv1525, i32* %nsz1519, align 4
  %812 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1528 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %812, i32 0, i32 21
  %aptr1529 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1528, i32 0, i32 2
  %813 = load i8*, i8** %aptr1529, align 8
  %814 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1530 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %814, i32 0, i32 21
  %arena1531 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1530, i32 0, i32 0
  %815 = load i8*, i8** %arena1531, align 8
  %sub.ptr.lhs.cast1532 = ptrtoint i8* %813 to i64
  %sub.ptr.rhs.cast1533 = ptrtoint i8* %815 to i64
  %sub.ptr.sub1534 = sub i64 %sub.ptr.lhs.cast1532, %sub.ptr.rhs.cast1533
  %conv1535 = trunc i64 %sub.ptr.sub1534 to i32
  store i32 %conv1535, i32* %offset1527, align 4
  %816 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1536 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %816, i32 0, i32 21
  %arena1537 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1536, i32 0, i32 0
  %817 = load i8*, i8** %arena1537, align 8
  %818 = load i32, i32* %nsz1519, align 4
  %conv1538 = sext i32 %818 to i64
  %mul1539 = mul i64 %conv1538, 1
  %call1540 = call i8* @Perl_safesysrealloc(i8* %817, i64 %mul1539)
  %819 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1541 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %819, i32 0, i32 21
  %arena1542 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1541, i32 0, i32 0
  store i8* %call1540, i8** %arena1542, align 8
  %820 = load i32, i32* %nsz1519, align 4
  %conv1543 = sext i32 %820 to i64
  %821 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1544 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %821, i32 0, i32 21
  %asiz1545 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1544, i32 0, i32 1
  store i64 %conv1543, i64* %asiz1545, align 8
  %822 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1546 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %822, i32 0, i32 21
  %arena1547 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1546, i32 0, i32 0
  %823 = load i8*, i8** %arena1547, align 8
  %824 = load i32, i32* %offset1527, align 4
  %idx.ext1548 = sext i32 %824 to i64
  %add.ptr1549 = getelementptr inbounds i8, i8* %823, i64 %idx.ext1548
  %825 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1550 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %825, i32 0, i32 21
  %aptr1551 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1550, i32 0, i32 2
  store i8* %add.ptr1549, i8** %aptr1551, align 8
  %826 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1553 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %826, i32 0, i32 21
  %arena1554 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1553, i32 0, i32 0
  %827 = load i8*, i8** %arena1554, align 8
  %828 = load i32, i32* %nsz1519, align 4
  %idx.ext1555 = sext i32 %828 to i64
  %add.ptr1556 = getelementptr inbounds i8, i8* %827, i64 %idx.ext1555
  %829 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1557 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %829, i32 0, i32 21
  %aend1558 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1557, i32 0, i32 3
  store i8* %add.ptr1556, i8** %aend1558, align 8
  store i8* %add.ptr1556, i8** %tmp1552
  %830 = load i8*, i8** %tmp1552
  %831 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1559 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %831, i32 0, i32 21
  %aptr1560 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1559, i32 0, i32 2
  %832 = load i8*, i8** %aptr1560, align 8
  %incdec.ptr1561 = getelementptr inbounds i8, i8* %832, i32 1
  store i8* %incdec.ptr1561, i8** %aptr1560, align 8
  store i8 10, i8* %832, align 1
  br label %if.end.1562

if.end.1562:                                      ; preds = %if.else.1517, %if.then.1513
  br label %if.end.1570

if.else.1563:                                     ; preds = %if.then.1500
  %833 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1564 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %833, i32 0, i32 23
  %834 = load %struct._PerlIO**, %struct._PerlIO*** %fio1564, align 8
  %call1565 = call i32 @PerlIO_putc(%struct._PerlIO** %834, i32 10)
  %cmp1566 = icmp eq i32 %call1565, -1
  br i1 %cmp1566, label %if.then.1568, label %if.end.1569

if.then.1568:                                     ; preds = %if.else.1563
  store i32 -1, i32* %retval
  br label %return

if.end.1569:                                      ; preds = %if.else.1563
  br label %if.end.1570

if.end.1570:                                      ; preds = %if.end.1569, %if.end.1562
  %835 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1571 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %835, i32 0, i32 23
  %836 = load %struct._PerlIO**, %struct._PerlIO*** %fio1571, align 8
  %tobool1572 = icmp ne %struct._PerlIO** %836, null
  br i1 %tobool1572, label %if.else.1630, label %if.then.1573

if.then.1573:                                     ; preds = %if.end.1570
  %837 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1574 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %837, i32 0, i32 21
  %aptr1575 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1574, i32 0, i32 2
  %838 = load i8*, i8** %aptr1575, align 8
  %839 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1576 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %839, i32 0, i32 21
  %aend1577 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1576, i32 0, i32 3
  %840 = load i8*, i8** %aend1577, align 8
  %cmp1578 = icmp ult i8* %838, %840
  br i1 %cmp1578, label %if.then.1580, label %if.else.1584

if.then.1580:                                     ; preds = %if.then.1573
  %841 = load i8, i8* %clen1502, align 1
  %842 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1581 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %842, i32 0, i32 21
  %aptr1582 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1581, i32 0, i32 2
  %843 = load i8*, i8** %aptr1582, align 8
  %incdec.ptr1583 = getelementptr inbounds i8, i8* %843, i32 1
  store i8* %incdec.ptr1583, i8** %aptr1582, align 8
  store i8 %841, i8* %843, align 1
  br label %if.end.1629

if.else.1584:                                     ; preds = %if.then.1573
  %844 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1587 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %844, i32 0, i32 21
  %asiz1588 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1587, i32 0, i32 1
  %845 = load i64, i64* %asiz1588, align 8
  %add1589 = add i64 1, %845
  %add1590 = add i64 %add1589, 8191
  %and1591 = and i64 %add1590, -8192
  %conv1592 = trunc i64 %and1591 to i32
  store i32 %conv1592, i32* %nsz1586, align 4
  %846 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1595 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %846, i32 0, i32 21
  %aptr1596 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1595, i32 0, i32 2
  %847 = load i8*, i8** %aptr1596, align 8
  %848 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1597 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %848, i32 0, i32 21
  %arena1598 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1597, i32 0, i32 0
  %849 = load i8*, i8** %arena1598, align 8
  %sub.ptr.lhs.cast1599 = ptrtoint i8* %847 to i64
  %sub.ptr.rhs.cast1600 = ptrtoint i8* %849 to i64
  %sub.ptr.sub1601 = sub i64 %sub.ptr.lhs.cast1599, %sub.ptr.rhs.cast1600
  %conv1602 = trunc i64 %sub.ptr.sub1601 to i32
  store i32 %conv1602, i32* %offset1594, align 4
  %850 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1603 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %850, i32 0, i32 21
  %arena1604 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1603, i32 0, i32 0
  %851 = load i8*, i8** %arena1604, align 8
  %852 = load i32, i32* %nsz1586, align 4
  %conv1605 = sext i32 %852 to i64
  %mul1606 = mul i64 %conv1605, 1
  %call1607 = call i8* @Perl_safesysrealloc(i8* %851, i64 %mul1606)
  %853 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1608 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %853, i32 0, i32 21
  %arena1609 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1608, i32 0, i32 0
  store i8* %call1607, i8** %arena1609, align 8
  %854 = load i32, i32* %nsz1586, align 4
  %conv1610 = sext i32 %854 to i64
  %855 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1611 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %855, i32 0, i32 21
  %asiz1612 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1611, i32 0, i32 1
  store i64 %conv1610, i64* %asiz1612, align 8
  %856 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1613 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %856, i32 0, i32 21
  %arena1614 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1613, i32 0, i32 0
  %857 = load i8*, i8** %arena1614, align 8
  %858 = load i32, i32* %offset1594, align 4
  %idx.ext1615 = sext i32 %858 to i64
  %add.ptr1616 = getelementptr inbounds i8, i8* %857, i64 %idx.ext1615
  %859 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1617 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %859, i32 0, i32 21
  %aptr1618 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1617, i32 0, i32 2
  store i8* %add.ptr1616, i8** %aptr1618, align 8
  %860 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1620 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %860, i32 0, i32 21
  %arena1621 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1620, i32 0, i32 0
  %861 = load i8*, i8** %arena1621, align 8
  %862 = load i32, i32* %nsz1586, align 4
  %idx.ext1622 = sext i32 %862 to i64
  %add.ptr1623 = getelementptr inbounds i8, i8* %861, i64 %idx.ext1622
  %863 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1624 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %863, i32 0, i32 21
  %aend1625 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1624, i32 0, i32 3
  store i8* %add.ptr1623, i8** %aend1625, align 8
  store i8* %add.ptr1623, i8** %tmp1619
  %864 = load i8*, i8** %tmp1619
  %865 = load i8, i8* %clen1502, align 1
  %866 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1626 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %866, i32 0, i32 21
  %aptr1627 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1626, i32 0, i32 2
  %867 = load i8*, i8** %aptr1627, align 8
  %incdec.ptr1628 = getelementptr inbounds i8, i8* %867, i32 1
  store i8* %incdec.ptr1628, i8** %aptr1627, align 8
  store i8 %865, i8* %867, align 1
  br label %if.end.1629

if.end.1629:                                      ; preds = %if.else.1584, %if.then.1580
  br label %if.end.1638

if.else.1630:                                     ; preds = %if.end.1570
  %868 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1631 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %868, i32 0, i32 23
  %869 = load %struct._PerlIO**, %struct._PerlIO*** %fio1631, align 8
  %870 = load i8, i8* %clen1502, align 1
  %conv1632 = zext i8 %870 to i32
  %call1633 = call i32 @PerlIO_putc(%struct._PerlIO** %869, i32 %conv1632)
  %cmp1634 = icmp eq i32 %call1633, -1
  br i1 %cmp1634, label %if.then.1636, label %if.end.1637

if.then.1636:                                     ; preds = %if.else.1630
  store i32 -1, i32* %retval
  br label %return

if.end.1637:                                      ; preds = %if.else.1630
  br label %if.end.1638

if.end.1638:                                      ; preds = %if.end.1637, %if.end.1629
  %871 = load i32, i32* %wlen, align 4
  %tobool1639 = icmp ne i32 %871, 0
  br i1 %tobool1639, label %if.then.1640, label %if.end.1714

if.then.1640:                                     ; preds = %if.end.1638
  %872 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1641 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %872, i32 0, i32 23
  %873 = load %struct._PerlIO**, %struct._PerlIO*** %fio1641, align 8
  %tobool1642 = icmp ne %struct._PerlIO** %873, null
  br i1 %tobool1642, label %if.else.1704, label %if.then.1643

if.then.1643:                                     ; preds = %if.then.1640
  %874 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1644 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %874, i32 0, i32 21
  %aptr1645 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1644, i32 0, i32 2
  %875 = load i8*, i8** %aptr1645, align 8
  %876 = load i32, i32* %wlen, align 4
  %idx.ext1646 = sext i32 %876 to i64
  %add.ptr1647 = getelementptr inbounds i8, i8* %875, i64 %idx.ext1646
  %877 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1648 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %877, i32 0, i32 21
  %aend1649 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1648, i32 0, i32 3
  %878 = load i8*, i8** %aend1649, align 8
  %cmp1650 = icmp ugt i8* %add.ptr1647, %878
  br i1 %cmp1650, label %if.then.1652, label %if.end.1695

if.then.1652:                                     ; preds = %if.then.1643
  %879 = load i32, i32* %wlen, align 4
  %conv1655 = sext i32 %879 to i64
  %880 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1656 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %880, i32 0, i32 21
  %asiz1657 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1656, i32 0, i32 1
  %881 = load i64, i64* %asiz1657, align 8
  %add1658 = add i64 %conv1655, %881
  %add1659 = add i64 %add1658, 8191
  %and1660 = and i64 %add1659, -8192
  %conv1661 = trunc i64 %and1660 to i32
  store i32 %conv1661, i32* %nsz1654, align 4
  %882 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1664 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %882, i32 0, i32 21
  %aptr1665 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1664, i32 0, i32 2
  %883 = load i8*, i8** %aptr1665, align 8
  %884 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1666 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %884, i32 0, i32 21
  %arena1667 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1666, i32 0, i32 0
  %885 = load i8*, i8** %arena1667, align 8
  %sub.ptr.lhs.cast1668 = ptrtoint i8* %883 to i64
  %sub.ptr.rhs.cast1669 = ptrtoint i8* %885 to i64
  %sub.ptr.sub1670 = sub i64 %sub.ptr.lhs.cast1668, %sub.ptr.rhs.cast1669
  %conv1671 = trunc i64 %sub.ptr.sub1670 to i32
  store i32 %conv1671, i32* %offset1663, align 4
  %886 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1672 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %886, i32 0, i32 21
  %arena1673 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1672, i32 0, i32 0
  %887 = load i8*, i8** %arena1673, align 8
  %888 = load i32, i32* %nsz1654, align 4
  %conv1674 = sext i32 %888 to i64
  %mul1675 = mul i64 %conv1674, 1
  %call1676 = call i8* @Perl_safesysrealloc(i8* %887, i64 %mul1675)
  %889 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1677 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %889, i32 0, i32 21
  %arena1678 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1677, i32 0, i32 0
  store i8* %call1676, i8** %arena1678, align 8
  %890 = load i32, i32* %nsz1654, align 4
  %conv1679 = sext i32 %890 to i64
  %891 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1680 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %891, i32 0, i32 21
  %asiz1681 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1680, i32 0, i32 1
  store i64 %conv1679, i64* %asiz1681, align 8
  %892 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1682 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %892, i32 0, i32 21
  %arena1683 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1682, i32 0, i32 0
  %893 = load i8*, i8** %arena1683, align 8
  %894 = load i32, i32* %offset1663, align 4
  %idx.ext1684 = sext i32 %894 to i64
  %add.ptr1685 = getelementptr inbounds i8, i8* %893, i64 %idx.ext1684
  %895 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1686 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %895, i32 0, i32 21
  %aptr1687 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1686, i32 0, i32 2
  store i8* %add.ptr1685, i8** %aptr1687, align 8
  %896 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1689 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %896, i32 0, i32 21
  %arena1690 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1689, i32 0, i32 0
  %897 = load i8*, i8** %arena1690, align 8
  %898 = load i32, i32* %nsz1654, align 4
  %idx.ext1691 = sext i32 %898 to i64
  %add.ptr1692 = getelementptr inbounds i8, i8* %897, i64 %idx.ext1691
  %899 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1693 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %899, i32 0, i32 21
  %aend1694 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1693, i32 0, i32 3
  store i8* %add.ptr1692, i8** %aend1694, align 8
  store i8* %add.ptr1692, i8** %tmp1688
  %900 = load i8*, i8** %tmp1688
  br label %if.end.1695

if.end.1695:                                      ; preds = %if.then.1652, %if.then.1643
  %901 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1696 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %901, i32 0, i32 21
  %aptr1697 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1696, i32 0, i32 2
  %902 = load i8*, i8** %aptr1697, align 8
  %903 = load i8*, i8** %pv, align 8
  %904 = load i32, i32* %wlen, align 4
  %conv1698 = sext i32 %904 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %902, i8* %903, i64 %conv1698, i32 1, i1 false)
  %905 = load i32, i32* %wlen, align 4
  %906 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1700 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %906, i32 0, i32 21
  %aptr1701 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1700, i32 0, i32 2
  %907 = load i8*, i8** %aptr1701, align 8
  %idx.ext1702 = sext i32 %905 to i64
  %add.ptr1703 = getelementptr inbounds i8, i8* %907, i64 %idx.ext1702
  store i8* %add.ptr1703, i8** %aptr1701, align 8
  store i8* %add.ptr1703, i8** %tmp1699
  %908 = load i8*, i8** %tmp1699
  br label %if.end.1713

if.else.1704:                                     ; preds = %if.then.1640
  %909 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1705 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %909, i32 0, i32 23
  %910 = load %struct._PerlIO**, %struct._PerlIO*** %fio1705, align 8
  %911 = load i8*, i8** %pv, align 8
  %912 = load i32, i32* %wlen, align 4
  %conv1706 = sext i32 %912 to i64
  %call1707 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %910, i8* %911, i64 %conv1706)
  %913 = load i32, i32* %wlen, align 4
  %conv1708 = sext i32 %913 to i64
  %cmp1709 = icmp ne i64 %call1707, %conv1708
  br i1 %cmp1709, label %if.then.1711, label %if.end.1712

if.then.1711:                                     ; preds = %if.else.1704
  store i32 -1, i32* %retval
  br label %return

if.end.1712:                                      ; preds = %if.else.1704
  br label %if.end.1713

if.end.1713:                                      ; preds = %if.end.1712, %if.end.1695
  br label %if.end.1714

if.end.1714:                                      ; preds = %if.end.1713, %if.end.1638
  br label %if.end.2024

if.else.1715:                                     ; preds = %if.else.1497
  %914 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1716 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %914, i32 0, i32 23
  %915 = load %struct._PerlIO**, %struct._PerlIO*** %fio1716, align 8
  %tobool1717 = icmp ne %struct._PerlIO** %915, null
  br i1 %tobool1717, label %if.else.1775, label %if.then.1718

if.then.1718:                                     ; preds = %if.else.1715
  %916 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1719 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %916, i32 0, i32 21
  %aptr1720 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1719, i32 0, i32 2
  %917 = load i8*, i8** %aptr1720, align 8
  %918 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1721 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %918, i32 0, i32 21
  %aend1722 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1721, i32 0, i32 3
  %919 = load i8*, i8** %aend1722, align 8
  %cmp1723 = icmp ult i8* %917, %919
  br i1 %cmp1723, label %if.then.1725, label %if.else.1729

if.then.1725:                                     ; preds = %if.then.1718
  %920 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1726 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %920, i32 0, i32 21
  %aptr1727 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1726, i32 0, i32 2
  %921 = load i8*, i8** %aptr1727, align 8
  %incdec.ptr1728 = getelementptr inbounds i8, i8* %921, i32 1
  store i8* %incdec.ptr1728, i8** %aptr1727, align 8
  store i8 1, i8* %921, align 1
  br label %if.end.1774

if.else.1729:                                     ; preds = %if.then.1718
  %922 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1732 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %922, i32 0, i32 21
  %asiz1733 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1732, i32 0, i32 1
  %923 = load i64, i64* %asiz1733, align 8
  %add1734 = add i64 1, %923
  %add1735 = add i64 %add1734, 8191
  %and1736 = and i64 %add1735, -8192
  %conv1737 = trunc i64 %and1736 to i32
  store i32 %conv1737, i32* %nsz1731, align 4
  %924 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1740 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %924, i32 0, i32 21
  %aptr1741 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1740, i32 0, i32 2
  %925 = load i8*, i8** %aptr1741, align 8
  %926 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1742 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %926, i32 0, i32 21
  %arena1743 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1742, i32 0, i32 0
  %927 = load i8*, i8** %arena1743, align 8
  %sub.ptr.lhs.cast1744 = ptrtoint i8* %925 to i64
  %sub.ptr.rhs.cast1745 = ptrtoint i8* %927 to i64
  %sub.ptr.sub1746 = sub i64 %sub.ptr.lhs.cast1744, %sub.ptr.rhs.cast1745
  %conv1747 = trunc i64 %sub.ptr.sub1746 to i32
  store i32 %conv1747, i32* %offset1739, align 4
  %928 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1748 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %928, i32 0, i32 21
  %arena1749 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1748, i32 0, i32 0
  %929 = load i8*, i8** %arena1749, align 8
  %930 = load i32, i32* %nsz1731, align 4
  %conv1750 = sext i32 %930 to i64
  %mul1751 = mul i64 %conv1750, 1
  %call1752 = call i8* @Perl_safesysrealloc(i8* %929, i64 %mul1751)
  %931 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1753 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %931, i32 0, i32 21
  %arena1754 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1753, i32 0, i32 0
  store i8* %call1752, i8** %arena1754, align 8
  %932 = load i32, i32* %nsz1731, align 4
  %conv1755 = sext i32 %932 to i64
  %933 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1756 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %933, i32 0, i32 21
  %asiz1757 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1756, i32 0, i32 1
  store i64 %conv1755, i64* %asiz1757, align 8
  %934 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1758 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %934, i32 0, i32 21
  %arena1759 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1758, i32 0, i32 0
  %935 = load i8*, i8** %arena1759, align 8
  %936 = load i32, i32* %offset1739, align 4
  %idx.ext1760 = sext i32 %936 to i64
  %add.ptr1761 = getelementptr inbounds i8, i8* %935, i64 %idx.ext1760
  %937 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1762 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %937, i32 0, i32 21
  %aptr1763 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1762, i32 0, i32 2
  store i8* %add.ptr1761, i8** %aptr1763, align 8
  %938 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1765 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %938, i32 0, i32 21
  %arena1766 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1765, i32 0, i32 0
  %939 = load i8*, i8** %arena1766, align 8
  %940 = load i32, i32* %nsz1731, align 4
  %idx.ext1767 = sext i32 %940 to i64
  %add.ptr1768 = getelementptr inbounds i8, i8* %939, i64 %idx.ext1767
  %941 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1769 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %941, i32 0, i32 21
  %aend1770 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1769, i32 0, i32 3
  store i8* %add.ptr1768, i8** %aend1770, align 8
  store i8* %add.ptr1768, i8** %tmp1764
  %942 = load i8*, i8** %tmp1764
  %943 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1771 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %943, i32 0, i32 21
  %aptr1772 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1771, i32 0, i32 2
  %944 = load i8*, i8** %aptr1772, align 8
  %incdec.ptr1773 = getelementptr inbounds i8, i8* %944, i32 1
  store i8* %incdec.ptr1773, i8** %aptr1772, align 8
  store i8 1, i8* %944, align 1
  br label %if.end.1774

if.end.1774:                                      ; preds = %if.else.1729, %if.then.1725
  br label %if.end.1782

if.else.1775:                                     ; preds = %if.else.1715
  %945 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1776 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %945, i32 0, i32 23
  %946 = load %struct._PerlIO**, %struct._PerlIO*** %fio1776, align 8
  %call1777 = call i32 @PerlIO_putc(%struct._PerlIO** %946, i32 1)
  %cmp1778 = icmp eq i32 %call1777, -1
  br i1 %cmp1778, label %if.then.1780, label %if.end.1781

if.then.1780:                                     ; preds = %if.else.1775
  store i32 -1, i32* %retval
  br label %return

if.end.1781:                                      ; preds = %if.else.1775
  br label %if.end.1782

if.end.1782:                                      ; preds = %if.end.1781, %if.end.1774
  %947 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder1783 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %947, i32 0, i32 11
  %948 = load i32, i32* %netorder1783, align 4
  %tobool1784 = icmp ne i32 %948, 0
  br i1 %tobool1784, label %if.then.1785, label %if.else.1870

if.then.1785:                                     ; preds = %if.end.1782
  %949 = load i32, i32* %wlen, align 4
  %conv1788 = sext i32 %949 to i64
  %call1789 = call i64 @Perl_my_htonl(i64 %conv1788)
  %conv1790 = trunc i64 %call1789 to i32
  store i32 %conv1790, i32* %y1787, align 4
  %950 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1791 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %950, i32 0, i32 23
  %951 = load %struct._PerlIO**, %struct._PerlIO*** %fio1791, align 8
  %tobool1792 = icmp ne %struct._PerlIO** %951, null
  br i1 %tobool1792, label %if.else.1862, label %if.then.1793

if.then.1793:                                     ; preds = %if.then.1785
  %952 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1794 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %952, i32 0, i32 21
  %aptr1795 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1794, i32 0, i32 2
  %953 = load i8*, i8** %aptr1795, align 8
  %add.ptr1796 = getelementptr inbounds i8, i8* %953, i64 4
  %954 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1797 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %954, i32 0, i32 21
  %aend1798 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1797, i32 0, i32 3
  %955 = load i8*, i8** %aend1798, align 8
  %cmp1799 = icmp ugt i8* %add.ptr1796, %955
  br i1 %cmp1799, label %if.then.1801, label %if.end.1843

if.then.1801:                                     ; preds = %if.then.1793
  %956 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1804 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %956, i32 0, i32 21
  %asiz1805 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1804, i32 0, i32 1
  %957 = load i64, i64* %asiz1805, align 8
  %add1806 = add i64 4, %957
  %add1807 = add i64 %add1806, 8191
  %and1808 = and i64 %add1807, -8192
  %conv1809 = trunc i64 %and1808 to i32
  store i32 %conv1809, i32* %nsz1803, align 4
  %958 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1812 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %958, i32 0, i32 21
  %aptr1813 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1812, i32 0, i32 2
  %959 = load i8*, i8** %aptr1813, align 8
  %960 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1814 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %960, i32 0, i32 21
  %arena1815 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1814, i32 0, i32 0
  %961 = load i8*, i8** %arena1815, align 8
  %sub.ptr.lhs.cast1816 = ptrtoint i8* %959 to i64
  %sub.ptr.rhs.cast1817 = ptrtoint i8* %961 to i64
  %sub.ptr.sub1818 = sub i64 %sub.ptr.lhs.cast1816, %sub.ptr.rhs.cast1817
  %conv1819 = trunc i64 %sub.ptr.sub1818 to i32
  store i32 %conv1819, i32* %offset1811, align 4
  %962 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1820 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %962, i32 0, i32 21
  %arena1821 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1820, i32 0, i32 0
  %963 = load i8*, i8** %arena1821, align 8
  %964 = load i32, i32* %nsz1803, align 4
  %conv1822 = sext i32 %964 to i64
  %mul1823 = mul i64 %conv1822, 1
  %call1824 = call i8* @Perl_safesysrealloc(i8* %963, i64 %mul1823)
  %965 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1825 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %965, i32 0, i32 21
  %arena1826 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1825, i32 0, i32 0
  store i8* %call1824, i8** %arena1826, align 8
  %966 = load i32, i32* %nsz1803, align 4
  %conv1827 = sext i32 %966 to i64
  %967 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1828 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %967, i32 0, i32 21
  %asiz1829 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1828, i32 0, i32 1
  store i64 %conv1827, i64* %asiz1829, align 8
  %968 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1830 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %968, i32 0, i32 21
  %arena1831 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1830, i32 0, i32 0
  %969 = load i8*, i8** %arena1831, align 8
  %970 = load i32, i32* %offset1811, align 4
  %idx.ext1832 = sext i32 %970 to i64
  %add.ptr1833 = getelementptr inbounds i8, i8* %969, i64 %idx.ext1832
  %971 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1834 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %971, i32 0, i32 21
  %aptr1835 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1834, i32 0, i32 2
  store i8* %add.ptr1833, i8** %aptr1835, align 8
  %972 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1837 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %972, i32 0, i32 21
  %arena1838 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1837, i32 0, i32 0
  %973 = load i8*, i8** %arena1838, align 8
  %974 = load i32, i32* %nsz1803, align 4
  %idx.ext1839 = sext i32 %974 to i64
  %add.ptr1840 = getelementptr inbounds i8, i8* %973, i64 %idx.ext1839
  %975 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1841 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %975, i32 0, i32 21
  %aend1842 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1841, i32 0, i32 3
  store i8* %add.ptr1840, i8** %aend1842, align 8
  store i8* %add.ptr1840, i8** %tmp1836
  %976 = load i8*, i8** %tmp1836
  br label %if.end.1843

if.end.1843:                                      ; preds = %if.then.1801, %if.then.1793
  %977 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1844 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %977, i32 0, i32 21
  %aptr1845 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1844, i32 0, i32 2
  %978 = load i8*, i8** %aptr1845, align 8
  %979 = ptrtoint i8* %978 to i64
  %980 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1846 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %980, i32 0, i32 21
  %aptr1847 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1846, i32 0, i32 2
  %981 = load i8*, i8** %aptr1847, align 8
  %982 = ptrtoint i8* %981 to i64
  %and1848 = and i64 %982, -4
  %cmp1849 = icmp eq i64 %979, %and1848
  br i1 %cmp1849, label %if.then.1851, label %if.else.1854

if.then.1851:                                     ; preds = %if.end.1843
  %983 = load i32, i32* %y1787, align 4
  %984 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1852 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %984, i32 0, i32 21
  %aptr1853 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1852, i32 0, i32 2
  %985 = load i8*, i8** %aptr1853, align 8
  %986 = bitcast i8* %985 to i32*
  store i32 %983, i32* %986, align 4
  br label %if.end.1857

if.else.1854:                                     ; preds = %if.end.1843
  %987 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1855 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %987, i32 0, i32 21
  %aptr1856 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1855, i32 0, i32 2
  %988 = load i8*, i8** %aptr1856, align 8
  %989 = bitcast i32* %y1787 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %988, i8* %989, i64 4, i32 1, i1 false)
  br label %if.end.1857

if.end.1857:                                      ; preds = %if.else.1854, %if.then.1851
  %990 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1859 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %990, i32 0, i32 21
  %aptr1860 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1859, i32 0, i32 2
  %991 = load i8*, i8** %aptr1860, align 8
  %add.ptr1861 = getelementptr inbounds i8, i8* %991, i64 4
  store i8* %add.ptr1861, i8** %aptr1860, align 8
  store i8* %add.ptr1861, i8** %tmp1858
  %992 = load i8*, i8** %tmp1858
  br label %if.end.1869

if.else.1862:                                     ; preds = %if.then.1785
  %993 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1863 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %993, i32 0, i32 23
  %994 = load %struct._PerlIO**, %struct._PerlIO*** %fio1863, align 8
  %995 = bitcast i32* %y1787 to i8*
  %call1864 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %994, i8* %995, i64 4)
  %cmp1865 = icmp ne i64 %call1864, 4
  br i1 %cmp1865, label %if.then.1867, label %if.end.1868

if.then.1867:                                     ; preds = %if.else.1862
  store i32 -1, i32* %retval
  br label %return

if.end.1868:                                      ; preds = %if.else.1862
  br label %if.end.1869

if.end.1869:                                      ; preds = %if.end.1868, %if.end.1857
  br label %if.end.1950

if.else.1870:                                     ; preds = %if.end.1782
  %996 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1871 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %996, i32 0, i32 23
  %997 = load %struct._PerlIO**, %struct._PerlIO*** %fio1871, align 8
  %tobool1872 = icmp ne %struct._PerlIO** %997, null
  br i1 %tobool1872, label %if.else.1942, label %if.then.1873

if.then.1873:                                     ; preds = %if.else.1870
  %998 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1874 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %998, i32 0, i32 21
  %aptr1875 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1874, i32 0, i32 2
  %999 = load i8*, i8** %aptr1875, align 8
  %add.ptr1876 = getelementptr inbounds i8, i8* %999, i64 4
  %1000 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1877 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1000, i32 0, i32 21
  %aend1878 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1877, i32 0, i32 3
  %1001 = load i8*, i8** %aend1878, align 8
  %cmp1879 = icmp ugt i8* %add.ptr1876, %1001
  br i1 %cmp1879, label %if.then.1881, label %if.end.1923

if.then.1881:                                     ; preds = %if.then.1873
  %1002 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1884 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1002, i32 0, i32 21
  %asiz1885 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1884, i32 0, i32 1
  %1003 = load i64, i64* %asiz1885, align 8
  %add1886 = add i64 4, %1003
  %add1887 = add i64 %add1886, 8191
  %and1888 = and i64 %add1887, -8192
  %conv1889 = trunc i64 %and1888 to i32
  store i32 %conv1889, i32* %nsz1883, align 4
  %1004 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1892 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1004, i32 0, i32 21
  %aptr1893 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1892, i32 0, i32 2
  %1005 = load i8*, i8** %aptr1893, align 8
  %1006 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1894 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1006, i32 0, i32 21
  %arena1895 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1894, i32 0, i32 0
  %1007 = load i8*, i8** %arena1895, align 8
  %sub.ptr.lhs.cast1896 = ptrtoint i8* %1005 to i64
  %sub.ptr.rhs.cast1897 = ptrtoint i8* %1007 to i64
  %sub.ptr.sub1898 = sub i64 %sub.ptr.lhs.cast1896, %sub.ptr.rhs.cast1897
  %conv1899 = trunc i64 %sub.ptr.sub1898 to i32
  store i32 %conv1899, i32* %offset1891, align 4
  %1008 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1900 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1008, i32 0, i32 21
  %arena1901 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1900, i32 0, i32 0
  %1009 = load i8*, i8** %arena1901, align 8
  %1010 = load i32, i32* %nsz1883, align 4
  %conv1902 = sext i32 %1010 to i64
  %mul1903 = mul i64 %conv1902, 1
  %call1904 = call i8* @Perl_safesysrealloc(i8* %1009, i64 %mul1903)
  %1011 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1905 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1011, i32 0, i32 21
  %arena1906 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1905, i32 0, i32 0
  store i8* %call1904, i8** %arena1906, align 8
  %1012 = load i32, i32* %nsz1883, align 4
  %conv1907 = sext i32 %1012 to i64
  %1013 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1908 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1013, i32 0, i32 21
  %asiz1909 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1908, i32 0, i32 1
  store i64 %conv1907, i64* %asiz1909, align 8
  %1014 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1910 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1014, i32 0, i32 21
  %arena1911 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1910, i32 0, i32 0
  %1015 = load i8*, i8** %arena1911, align 8
  %1016 = load i32, i32* %offset1891, align 4
  %idx.ext1912 = sext i32 %1016 to i64
  %add.ptr1913 = getelementptr inbounds i8, i8* %1015, i64 %idx.ext1912
  %1017 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1914 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1017, i32 0, i32 21
  %aptr1915 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1914, i32 0, i32 2
  store i8* %add.ptr1913, i8** %aptr1915, align 8
  %1018 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1917 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1018, i32 0, i32 21
  %arena1918 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1917, i32 0, i32 0
  %1019 = load i8*, i8** %arena1918, align 8
  %1020 = load i32, i32* %nsz1883, align 4
  %idx.ext1919 = sext i32 %1020 to i64
  %add.ptr1920 = getelementptr inbounds i8, i8* %1019, i64 %idx.ext1919
  %1021 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1921 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1021, i32 0, i32 21
  %aend1922 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1921, i32 0, i32 3
  store i8* %add.ptr1920, i8** %aend1922, align 8
  store i8* %add.ptr1920, i8** %tmp1916
  %1022 = load i8*, i8** %tmp1916
  br label %if.end.1923

if.end.1923:                                      ; preds = %if.then.1881, %if.then.1873
  %1023 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1924 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1023, i32 0, i32 21
  %aptr1925 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1924, i32 0, i32 2
  %1024 = load i8*, i8** %aptr1925, align 8
  %1025 = ptrtoint i8* %1024 to i64
  %1026 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1926 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1026, i32 0, i32 21
  %aptr1927 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1926, i32 0, i32 2
  %1027 = load i8*, i8** %aptr1927, align 8
  %1028 = ptrtoint i8* %1027 to i64
  %and1928 = and i64 %1028, -4
  %cmp1929 = icmp eq i64 %1025, %and1928
  br i1 %cmp1929, label %if.then.1931, label %if.else.1934

if.then.1931:                                     ; preds = %if.end.1923
  %1029 = load i32, i32* %wlen, align 4
  %1030 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1932 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1030, i32 0, i32 21
  %aptr1933 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1932, i32 0, i32 2
  %1031 = load i8*, i8** %aptr1933, align 8
  %1032 = bitcast i8* %1031 to i32*
  store i32 %1029, i32* %1032, align 4
  br label %if.end.1937

if.else.1934:                                     ; preds = %if.end.1923
  %1033 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1935 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1033, i32 0, i32 21
  %aptr1936 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1935, i32 0, i32 2
  %1034 = load i8*, i8** %aptr1936, align 8
  %1035 = bitcast i32* %wlen to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1034, i8* %1035, i64 4, i32 1, i1 false)
  br label %if.end.1937

if.end.1937:                                      ; preds = %if.else.1934, %if.then.1931
  %1036 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1939 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1036, i32 0, i32 21
  %aptr1940 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1939, i32 0, i32 2
  %1037 = load i8*, i8** %aptr1940, align 8
  %add.ptr1941 = getelementptr inbounds i8, i8* %1037, i64 4
  store i8* %add.ptr1941, i8** %aptr1940, align 8
  store i8* %add.ptr1941, i8** %tmp1938
  %1038 = load i8*, i8** %tmp1938
  br label %if.end.1949

if.else.1942:                                     ; preds = %if.else.1870
  %1039 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1943 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1039, i32 0, i32 23
  %1040 = load %struct._PerlIO**, %struct._PerlIO*** %fio1943, align 8
  %1041 = bitcast i32* %wlen to i8*
  %call1944 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %1040, i8* %1041, i64 4)
  %cmp1945 = icmp ne i64 %call1944, 4
  br i1 %cmp1945, label %if.then.1947, label %if.end.1948

if.then.1947:                                     ; preds = %if.else.1942
  store i32 -1, i32* %retval
  br label %return

if.end.1948:                                      ; preds = %if.else.1942
  br label %if.end.1949

if.end.1949:                                      ; preds = %if.end.1948, %if.end.1937
  br label %if.end.1950

if.end.1950:                                      ; preds = %if.end.1949, %if.end.1869
  %1042 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1951 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1042, i32 0, i32 23
  %1043 = load %struct._PerlIO**, %struct._PerlIO*** %fio1951, align 8
  %tobool1952 = icmp ne %struct._PerlIO** %1043, null
  br i1 %tobool1952, label %if.else.2014, label %if.then.1953

if.then.1953:                                     ; preds = %if.end.1950
  %1044 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1954 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1044, i32 0, i32 21
  %aptr1955 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1954, i32 0, i32 2
  %1045 = load i8*, i8** %aptr1955, align 8
  %1046 = load i32, i32* %wlen, align 4
  %idx.ext1956 = sext i32 %1046 to i64
  %add.ptr1957 = getelementptr inbounds i8, i8* %1045, i64 %idx.ext1956
  %1047 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1958 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1047, i32 0, i32 21
  %aend1959 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1958, i32 0, i32 3
  %1048 = load i8*, i8** %aend1959, align 8
  %cmp1960 = icmp ugt i8* %add.ptr1957, %1048
  br i1 %cmp1960, label %if.then.1962, label %if.end.2005

if.then.1962:                                     ; preds = %if.then.1953
  %1049 = load i32, i32* %wlen, align 4
  %conv1965 = sext i32 %1049 to i64
  %1050 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1966 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1050, i32 0, i32 21
  %asiz1967 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1966, i32 0, i32 1
  %1051 = load i64, i64* %asiz1967, align 8
  %add1968 = add i64 %conv1965, %1051
  %add1969 = add i64 %add1968, 8191
  %and1970 = and i64 %add1969, -8192
  %conv1971 = trunc i64 %and1970 to i32
  store i32 %conv1971, i32* %nsz1964, align 4
  %1052 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1974 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1052, i32 0, i32 21
  %aptr1975 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1974, i32 0, i32 2
  %1053 = load i8*, i8** %aptr1975, align 8
  %1054 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1976 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1054, i32 0, i32 21
  %arena1977 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1976, i32 0, i32 0
  %1055 = load i8*, i8** %arena1977, align 8
  %sub.ptr.lhs.cast1978 = ptrtoint i8* %1053 to i64
  %sub.ptr.rhs.cast1979 = ptrtoint i8* %1055 to i64
  %sub.ptr.sub1980 = sub i64 %sub.ptr.lhs.cast1978, %sub.ptr.rhs.cast1979
  %conv1981 = trunc i64 %sub.ptr.sub1980 to i32
  store i32 %conv1981, i32* %offset1973, align 4
  %1056 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1982 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1056, i32 0, i32 21
  %arena1983 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1982, i32 0, i32 0
  %1057 = load i8*, i8** %arena1983, align 8
  %1058 = load i32, i32* %nsz1964, align 4
  %conv1984 = sext i32 %1058 to i64
  %mul1985 = mul i64 %conv1984, 1
  %call1986 = call i8* @Perl_safesysrealloc(i8* %1057, i64 %mul1985)
  %1059 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1987 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1059, i32 0, i32 21
  %arena1988 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1987, i32 0, i32 0
  store i8* %call1986, i8** %arena1988, align 8
  %1060 = load i32, i32* %nsz1964, align 4
  %conv1989 = sext i32 %1060 to i64
  %1061 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1990 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1061, i32 0, i32 21
  %asiz1991 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1990, i32 0, i32 1
  store i64 %conv1989, i64* %asiz1991, align 8
  %1062 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1992 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1062, i32 0, i32 21
  %arena1993 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1992, i32 0, i32 0
  %1063 = load i8*, i8** %arena1993, align 8
  %1064 = load i32, i32* %offset1973, align 4
  %idx.ext1994 = sext i32 %1064 to i64
  %add.ptr1995 = getelementptr inbounds i8, i8* %1063, i64 %idx.ext1994
  %1065 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1996 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1065, i32 0, i32 21
  %aptr1997 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1996, i32 0, i32 2
  store i8* %add.ptr1995, i8** %aptr1997, align 8
  %1066 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1999 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1066, i32 0, i32 21
  %arena2000 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1999, i32 0, i32 0
  %1067 = load i8*, i8** %arena2000, align 8
  %1068 = load i32, i32* %nsz1964, align 4
  %idx.ext2001 = sext i32 %1068 to i64
  %add.ptr2002 = getelementptr inbounds i8, i8* %1067, i64 %idx.ext2001
  %1069 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2003 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1069, i32 0, i32 21
  %aend2004 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2003, i32 0, i32 3
  store i8* %add.ptr2002, i8** %aend2004, align 8
  store i8* %add.ptr2002, i8** %tmp1998
  %1070 = load i8*, i8** %tmp1998
  br label %if.end.2005

if.end.2005:                                      ; preds = %if.then.1962, %if.then.1953
  %1071 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2006 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1071, i32 0, i32 21
  %aptr2007 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2006, i32 0, i32 2
  %1072 = load i8*, i8** %aptr2007, align 8
  %1073 = load i8*, i8** %pv, align 8
  %1074 = load i32, i32* %wlen, align 4
  %conv2008 = sext i32 %1074 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1072, i8* %1073, i64 %conv2008, i32 1, i1 false)
  %1075 = load i32, i32* %wlen, align 4
  %1076 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2010 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1076, i32 0, i32 21
  %aptr2011 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2010, i32 0, i32 2
  %1077 = load i8*, i8** %aptr2011, align 8
  %idx.ext2012 = sext i32 %1075 to i64
  %add.ptr2013 = getelementptr inbounds i8, i8* %1077, i64 %idx.ext2012
  store i8* %add.ptr2013, i8** %aptr2011, align 8
  store i8* %add.ptr2013, i8** %tmp2009
  %1078 = load i8*, i8** %tmp2009
  br label %if.end.2023

if.else.2014:                                     ; preds = %if.end.1950
  %1079 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio2015 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1079, i32 0, i32 23
  %1080 = load %struct._PerlIO**, %struct._PerlIO*** %fio2015, align 8
  %1081 = load i8*, i8** %pv, align 8
  %1082 = load i32, i32* %wlen, align 4
  %conv2016 = sext i32 %1082 to i64
  %call2017 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %1080, i8* %1081, i64 %conv2016)
  %1083 = load i32, i32* %wlen, align 4
  %conv2018 = sext i32 %1083 to i64
  %cmp2019 = icmp ne i64 %call2017, %conv2018
  br i1 %cmp2019, label %if.then.2021, label %if.end.2022

if.then.2021:                                     ; preds = %if.else.2014
  store i32 -1, i32* %retval
  br label %return

if.end.2022:                                      ; preds = %if.else.2014
  br label %if.end.2023

if.end.2023:                                      ; preds = %if.end.2022, %if.end.2005
  br label %if.end.2024

if.end.2024:                                      ; preds = %if.end.2023, %if.end.1714
  br label %if.end.2025

if.end.2025:                                      ; preds = %if.end.2024, %if.end.1496
  br label %if.end.2028

if.else.2026:                                     ; preds = %if.else.949
  %1084 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1084, i32 0, i32 18
  store i32 1, i32* %s_dirty, align 4
  %1085 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call2027 = call i8* @Perl_sv_reftype(%struct.sv* %1085, i32 0)
  %1086 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %1087 = ptrtoint %struct.sv* %1086 to i64
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.43, i32 0, i32 0), i8* %call2027, i64 %1087)
  br label %if.end.2028

if.end.2028:                                      ; preds = %if.else.2026, %if.end.2025
  br label %if.end.2029

if.end.2029:                                      ; preds = %if.end.2028, %if.end.948
  br label %if.end.2030

if.end.2030:                                      ; preds = %if.end.2029, %if.end.757
  br label %if.end.2031

if.end.2031:                                      ; preds = %if.end.2030
  br label %if.end.2032

if.end.2032:                                      ; preds = %if.end.2031, %if.end.268
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.2032, %if.then.2021, %if.then.1947, %if.then.1867, %if.then.1780, %if.then.1711, %if.then.1636, %if.then.1568, %if.then.1493, %if.then.1419, %if.then.1339, %if.then.1253, %if.then.1184, %if.then.1109, %if.then.1041, %if.then.946, %if.then.879, %if.then.753, %if.then.686, %if.then.618, %if.then.539, %if.then.442, %if.then.374, %if.then.257, %if.then.186, %if.end.113, %if.then.110, %if.then.42
  %1088 = load i32, i32* %retval
  ret i32 %1088
}

; Function Attrs: nounwind uwtable
define internal i32 @store_array(%struct.stcxt* %cxt, %struct.av* %av) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %av.addr = alloca %struct.av*, align 8
  %sav = alloca %struct.sv**, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %y = alloca i32, align 4
  %nsz60 = alloca i32, align 4
  %offset68 = alloca i32, align 4
  %tmp93 = alloca i8*, align 8
  %tmp115 = alloca i8*, align 8
  %nsz140 = alloca i32, align 4
  %offset148 = alloca i32, align 4
  %tmp173 = alloca i8*, align 8
  %tmp195 = alloca i8*, align 8
  %nsz228 = alloca i32, align 4
  %offset236 = alloca i32, align 4
  %tmp261 = alloca i8*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct.av* %av, %struct.av** %av.addr, align 8
  %0 = load %struct.av*, %struct.av** %av.addr, align 8
  %call = call i32 @Perl_av_len(%struct.av* %0)
  %add = add nsw i32 %call, 1
  store i32 %add, i32* %len, align 4
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 23
  %2 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %2, null
  br i1 %tobool, label %if.else.34, label %if.then

if.then:                                          ; preds = %entry
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %4 = load i8*, i8** %aptr, align 8
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1, i32 0, i32 3
  %6 = load i8*, i8** %aend, align 8
  %cmp = icmp ult i8* %4, %6
  br i1 %cmp, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.then
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 21
  %aptr4 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf3, i32 0, i32 2
  %8 = load i8*, i8** %aptr4, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %incdec.ptr, i8** %aptr4, align 8
  store i8 2, i8* %8, align 1
  br label %if.end

if.else:                                          ; preds = %if.then
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 21
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf5, i32 0, i32 1
  %10 = load i64, i64* %asiz, align 8
  %add6 = add i64 1, %10
  %add7 = add i64 %add6, 8191
  %and = and i64 %add7, -8192
  %conv = trunc i64 %and to i32
  store i32 %conv, i32* %nsz, align 4
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf8 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 21
  %aptr9 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf8, i32 0, i32 2
  %12 = load i8*, i8** %aptr9, align 8
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf10 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 21
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf10, i32 0, i32 0
  %14 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %12 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %14 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv11 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv11, i32* %offset, align 4
  %15 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf12 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %15, i32 0, i32 21
  %arena13 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf12, i32 0, i32 0
  %16 = load i8*, i8** %arena13, align 8
  %17 = load i32, i32* %nsz, align 4
  %conv14 = sext i32 %17 to i64
  %mul = mul i64 %conv14, 1
  %call15 = call i8* @Perl_safesysrealloc(i8* %16, i64 %mul)
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf16 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 21
  %arena17 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf16, i32 0, i32 0
  store i8* %call15, i8** %arena17, align 8
  %19 = load i32, i32* %nsz, align 4
  %conv18 = sext i32 %19 to i64
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %20, i32 0, i32 21
  %asiz20 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf19, i32 0, i32 1
  store i64 %conv18, i64* %asiz20, align 8
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf21 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 21
  %arena22 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf21, i32 0, i32 0
  %22 = load i8*, i8** %arena22, align 8
  %23 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %23 to i64
  %add.ptr = getelementptr inbounds i8, i8* %22, i64 %idx.ext
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf23 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 21
  %aptr24 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf23, i32 0, i32 2
  store i8* %add.ptr, i8** %aptr24, align 8
  %25 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf25 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %25, i32 0, i32 21
  %arena26 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf25, i32 0, i32 0
  %26 = load i8*, i8** %arena26, align 8
  %27 = load i32, i32* %nsz, align 4
  %idx.ext27 = sext i32 %27 to i64
  %add.ptr28 = getelementptr inbounds i8, i8* %26, i64 %idx.ext27
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf29 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 21
  %aend30 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf29, i32 0, i32 3
  store i8* %add.ptr28, i8** %aend30, align 8
  store i8* %add.ptr28, i8** %tmp
  %29 = load i8*, i8** %tmp
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf31 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 21
  %aptr32 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf31, i32 0, i32 2
  %31 = load i8*, i8** %aptr32, align 8
  %incdec.ptr33 = getelementptr inbounds i8, i8* %31, i32 1
  store i8* %incdec.ptr33, i8** %aptr32, align 8
  store i8 2, i8* %31, align 1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.2
  br label %if.end.41

if.else.34:                                       ; preds = %entry
  %32 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio35 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %32, i32 0, i32 23
  %33 = load %struct._PerlIO**, %struct._PerlIO*** %fio35, align 8
  %call36 = call i32 @PerlIO_putc(%struct._PerlIO** %33, i32 2)
  %cmp37 = icmp eq i32 %call36, -1
  br i1 %cmp37, label %if.then.39, label %if.end.40

if.then.39:                                       ; preds = %if.else.34
  store i32 -1, i32* %retval
  br label %return

if.end.40:                                        ; preds = %if.else.34
  br label %if.end.41

if.end.41:                                        ; preds = %if.end.40, %if.end
  %34 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %34, i32 0, i32 11
  %35 = load i32, i32* %netorder, align 4
  %tobool42 = icmp ne i32 %35, 0
  br i1 %tobool42, label %if.then.43, label %if.else.127

if.then.43:                                       ; preds = %if.end.41
  %36 = load i32, i32* %len, align 4
  %conv45 = sext i32 %36 to i64
  %call46 = call i64 @Perl_my_htonl(i64 %conv45)
  %conv47 = trunc i64 %call46 to i32
  store i32 %conv47, i32* %y, align 4
  %37 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio48 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %37, i32 0, i32 23
  %38 = load %struct._PerlIO**, %struct._PerlIO*** %fio48, align 8
  %tobool49 = icmp ne %struct._PerlIO** %38, null
  br i1 %tobool49, label %if.else.119, label %if.then.50

if.then.50:                                       ; preds = %if.then.43
  %39 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf51 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %39, i32 0, i32 21
  %aptr52 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf51, i32 0, i32 2
  %40 = load i8*, i8** %aptr52, align 8
  %add.ptr53 = getelementptr inbounds i8, i8* %40, i64 4
  %41 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf54 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %41, i32 0, i32 21
  %aend55 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf54, i32 0, i32 3
  %42 = load i8*, i8** %aend55, align 8
  %cmp56 = icmp ugt i8* %add.ptr53, %42
  br i1 %cmp56, label %if.then.58, label %if.end.100

if.then.58:                                       ; preds = %if.then.50
  %43 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf61 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %43, i32 0, i32 21
  %asiz62 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf61, i32 0, i32 1
  %44 = load i64, i64* %asiz62, align 8
  %add63 = add i64 4, %44
  %add64 = add i64 %add63, 8191
  %and65 = and i64 %add64, -8192
  %conv66 = trunc i64 %and65 to i32
  store i32 %conv66, i32* %nsz60, align 4
  %45 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf69 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %45, i32 0, i32 21
  %aptr70 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf69, i32 0, i32 2
  %46 = load i8*, i8** %aptr70, align 8
  %47 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf71 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %47, i32 0, i32 21
  %arena72 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf71, i32 0, i32 0
  %48 = load i8*, i8** %arena72, align 8
  %sub.ptr.lhs.cast73 = ptrtoint i8* %46 to i64
  %sub.ptr.rhs.cast74 = ptrtoint i8* %48 to i64
  %sub.ptr.sub75 = sub i64 %sub.ptr.lhs.cast73, %sub.ptr.rhs.cast74
  %conv76 = trunc i64 %sub.ptr.sub75 to i32
  store i32 %conv76, i32* %offset68, align 4
  %49 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf77 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %49, i32 0, i32 21
  %arena78 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf77, i32 0, i32 0
  %50 = load i8*, i8** %arena78, align 8
  %51 = load i32, i32* %nsz60, align 4
  %conv79 = sext i32 %51 to i64
  %mul80 = mul i64 %conv79, 1
  %call81 = call i8* @Perl_safesysrealloc(i8* %50, i64 %mul80)
  %52 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf82 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %52, i32 0, i32 21
  %arena83 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf82, i32 0, i32 0
  store i8* %call81, i8** %arena83, align 8
  %53 = load i32, i32* %nsz60, align 4
  %conv84 = sext i32 %53 to i64
  %54 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf85 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %54, i32 0, i32 21
  %asiz86 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf85, i32 0, i32 1
  store i64 %conv84, i64* %asiz86, align 8
  %55 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf87 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %55, i32 0, i32 21
  %arena88 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf87, i32 0, i32 0
  %56 = load i8*, i8** %arena88, align 8
  %57 = load i32, i32* %offset68, align 4
  %idx.ext89 = sext i32 %57 to i64
  %add.ptr90 = getelementptr inbounds i8, i8* %56, i64 %idx.ext89
  %58 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf91 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %58, i32 0, i32 21
  %aptr92 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf91, i32 0, i32 2
  store i8* %add.ptr90, i8** %aptr92, align 8
  %59 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf94 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %59, i32 0, i32 21
  %arena95 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf94, i32 0, i32 0
  %60 = load i8*, i8** %arena95, align 8
  %61 = load i32, i32* %nsz60, align 4
  %idx.ext96 = sext i32 %61 to i64
  %add.ptr97 = getelementptr inbounds i8, i8* %60, i64 %idx.ext96
  %62 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf98 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %62, i32 0, i32 21
  %aend99 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf98, i32 0, i32 3
  store i8* %add.ptr97, i8** %aend99, align 8
  store i8* %add.ptr97, i8** %tmp93
  %63 = load i8*, i8** %tmp93
  br label %if.end.100

if.end.100:                                       ; preds = %if.then.58, %if.then.50
  %64 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf101 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %64, i32 0, i32 21
  %aptr102 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf101, i32 0, i32 2
  %65 = load i8*, i8** %aptr102, align 8
  %66 = ptrtoint i8* %65 to i64
  %67 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf103 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %67, i32 0, i32 21
  %aptr104 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf103, i32 0, i32 2
  %68 = load i8*, i8** %aptr104, align 8
  %69 = ptrtoint i8* %68 to i64
  %and105 = and i64 %69, -4
  %cmp106 = icmp eq i64 %66, %and105
  br i1 %cmp106, label %if.then.108, label %if.else.111

if.then.108:                                      ; preds = %if.end.100
  %70 = load i32, i32* %y, align 4
  %71 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf109 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %71, i32 0, i32 21
  %aptr110 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf109, i32 0, i32 2
  %72 = load i8*, i8** %aptr110, align 8
  %73 = bitcast i8* %72 to i32*
  store i32 %70, i32* %73, align 4
  br label %if.end.114

if.else.111:                                      ; preds = %if.end.100
  %74 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf112 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %74, i32 0, i32 21
  %aptr113 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf112, i32 0, i32 2
  %75 = load i8*, i8** %aptr113, align 8
  %76 = bitcast i32* %y to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 4, i32 1, i1 false)
  br label %if.end.114

if.end.114:                                       ; preds = %if.else.111, %if.then.108
  %77 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf116 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %77, i32 0, i32 21
  %aptr117 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf116, i32 0, i32 2
  %78 = load i8*, i8** %aptr117, align 8
  %add.ptr118 = getelementptr inbounds i8, i8* %78, i64 4
  store i8* %add.ptr118, i8** %aptr117, align 8
  store i8* %add.ptr118, i8** %tmp115
  %79 = load i8*, i8** %tmp115
  br label %if.end.126

if.else.119:                                      ; preds = %if.then.43
  %80 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio120 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %80, i32 0, i32 23
  %81 = load %struct._PerlIO**, %struct._PerlIO*** %fio120, align 8
  %82 = bitcast i32* %y to i8*
  %call121 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %81, i8* %82, i64 4)
  %cmp122 = icmp ne i64 %call121, 4
  br i1 %cmp122, label %if.then.124, label %if.end.125

if.then.124:                                      ; preds = %if.else.119
  store i32 -1, i32* %retval
  br label %return

if.end.125:                                       ; preds = %if.else.119
  br label %if.end.126

if.end.126:                                       ; preds = %if.end.125, %if.end.114
  br label %if.end.207

if.else.127:                                      ; preds = %if.end.41
  %83 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio128 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %83, i32 0, i32 23
  %84 = load %struct._PerlIO**, %struct._PerlIO*** %fio128, align 8
  %tobool129 = icmp ne %struct._PerlIO** %84, null
  br i1 %tobool129, label %if.else.199, label %if.then.130

if.then.130:                                      ; preds = %if.else.127
  %85 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf131 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %85, i32 0, i32 21
  %aptr132 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf131, i32 0, i32 2
  %86 = load i8*, i8** %aptr132, align 8
  %add.ptr133 = getelementptr inbounds i8, i8* %86, i64 4
  %87 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf134 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %87, i32 0, i32 21
  %aend135 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf134, i32 0, i32 3
  %88 = load i8*, i8** %aend135, align 8
  %cmp136 = icmp ugt i8* %add.ptr133, %88
  br i1 %cmp136, label %if.then.138, label %if.end.180

if.then.138:                                      ; preds = %if.then.130
  %89 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf141 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %89, i32 0, i32 21
  %asiz142 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf141, i32 0, i32 1
  %90 = load i64, i64* %asiz142, align 8
  %add143 = add i64 4, %90
  %add144 = add i64 %add143, 8191
  %and145 = and i64 %add144, -8192
  %conv146 = trunc i64 %and145 to i32
  store i32 %conv146, i32* %nsz140, align 4
  %91 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf149 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %91, i32 0, i32 21
  %aptr150 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf149, i32 0, i32 2
  %92 = load i8*, i8** %aptr150, align 8
  %93 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf151 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %93, i32 0, i32 21
  %arena152 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf151, i32 0, i32 0
  %94 = load i8*, i8** %arena152, align 8
  %sub.ptr.lhs.cast153 = ptrtoint i8* %92 to i64
  %sub.ptr.rhs.cast154 = ptrtoint i8* %94 to i64
  %sub.ptr.sub155 = sub i64 %sub.ptr.lhs.cast153, %sub.ptr.rhs.cast154
  %conv156 = trunc i64 %sub.ptr.sub155 to i32
  store i32 %conv156, i32* %offset148, align 4
  %95 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf157 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %95, i32 0, i32 21
  %arena158 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf157, i32 0, i32 0
  %96 = load i8*, i8** %arena158, align 8
  %97 = load i32, i32* %nsz140, align 4
  %conv159 = sext i32 %97 to i64
  %mul160 = mul i64 %conv159, 1
  %call161 = call i8* @Perl_safesysrealloc(i8* %96, i64 %mul160)
  %98 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf162 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %98, i32 0, i32 21
  %arena163 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf162, i32 0, i32 0
  store i8* %call161, i8** %arena163, align 8
  %99 = load i32, i32* %nsz140, align 4
  %conv164 = sext i32 %99 to i64
  %100 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf165 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %100, i32 0, i32 21
  %asiz166 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf165, i32 0, i32 1
  store i64 %conv164, i64* %asiz166, align 8
  %101 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf167 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %101, i32 0, i32 21
  %arena168 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf167, i32 0, i32 0
  %102 = load i8*, i8** %arena168, align 8
  %103 = load i32, i32* %offset148, align 4
  %idx.ext169 = sext i32 %103 to i64
  %add.ptr170 = getelementptr inbounds i8, i8* %102, i64 %idx.ext169
  %104 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf171 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %104, i32 0, i32 21
  %aptr172 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf171, i32 0, i32 2
  store i8* %add.ptr170, i8** %aptr172, align 8
  %105 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf174 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %105, i32 0, i32 21
  %arena175 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf174, i32 0, i32 0
  %106 = load i8*, i8** %arena175, align 8
  %107 = load i32, i32* %nsz140, align 4
  %idx.ext176 = sext i32 %107 to i64
  %add.ptr177 = getelementptr inbounds i8, i8* %106, i64 %idx.ext176
  %108 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf178 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %108, i32 0, i32 21
  %aend179 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf178, i32 0, i32 3
  store i8* %add.ptr177, i8** %aend179, align 8
  store i8* %add.ptr177, i8** %tmp173
  %109 = load i8*, i8** %tmp173
  br label %if.end.180

if.end.180:                                       ; preds = %if.then.138, %if.then.130
  %110 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf181 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %110, i32 0, i32 21
  %aptr182 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf181, i32 0, i32 2
  %111 = load i8*, i8** %aptr182, align 8
  %112 = ptrtoint i8* %111 to i64
  %113 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf183 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %113, i32 0, i32 21
  %aptr184 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf183, i32 0, i32 2
  %114 = load i8*, i8** %aptr184, align 8
  %115 = ptrtoint i8* %114 to i64
  %and185 = and i64 %115, -4
  %cmp186 = icmp eq i64 %112, %and185
  br i1 %cmp186, label %if.then.188, label %if.else.191

if.then.188:                                      ; preds = %if.end.180
  %116 = load i32, i32* %len, align 4
  %117 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf189 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %117, i32 0, i32 21
  %aptr190 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf189, i32 0, i32 2
  %118 = load i8*, i8** %aptr190, align 8
  %119 = bitcast i8* %118 to i32*
  store i32 %116, i32* %119, align 4
  br label %if.end.194

if.else.191:                                      ; preds = %if.end.180
  %120 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf192 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %120, i32 0, i32 21
  %aptr193 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf192, i32 0, i32 2
  %121 = load i8*, i8** %aptr193, align 8
  %122 = bitcast i32* %len to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %121, i8* %122, i64 4, i32 1, i1 false)
  br label %if.end.194

if.end.194:                                       ; preds = %if.else.191, %if.then.188
  %123 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf196 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %123, i32 0, i32 21
  %aptr197 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf196, i32 0, i32 2
  %124 = load i8*, i8** %aptr197, align 8
  %add.ptr198 = getelementptr inbounds i8, i8* %124, i64 4
  store i8* %add.ptr198, i8** %aptr197, align 8
  store i8* %add.ptr198, i8** %tmp195
  %125 = load i8*, i8** %tmp195
  br label %if.end.206

if.else.199:                                      ; preds = %if.else.127
  %126 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio200 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %126, i32 0, i32 23
  %127 = load %struct._PerlIO**, %struct._PerlIO*** %fio200, align 8
  %128 = bitcast i32* %len to i8*
  %call201 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %127, i8* %128, i64 4)
  %cmp202 = icmp ne i64 %call201, 4
  br i1 %cmp202, label %if.then.204, label %if.end.205

if.then.204:                                      ; preds = %if.else.199
  store i32 -1, i32* %retval
  br label %return

if.end.205:                                       ; preds = %if.else.199
  br label %if.end.206

if.end.206:                                       ; preds = %if.end.205, %if.end.194
  br label %if.end.207

if.end.207:                                       ; preds = %if.end.206, %if.end.126
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.207
  %129 = load i32, i32* %i, align 4
  %130 = load i32, i32* %len, align 4
  %cmp208 = icmp slt i32 %129, %130
  br i1 %cmp208, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %131 = load %struct.av*, %struct.av** %av.addr, align 8
  %132 = load i32, i32* %i, align 4
  %call210 = call %struct.sv** @Perl_av_fetch(%struct.av* %131, i32 %132, i32 0)
  store %struct.sv** %call210, %struct.sv*** %sav, align 8
  %133 = load %struct.sv**, %struct.sv*** %sav, align 8
  %tobool211 = icmp ne %struct.sv** %133, null
  br i1 %tobool211, label %if.end.280, label %if.then.212

if.then.212:                                      ; preds = %for.body
  %134 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %134, i32 0, i32 9
  %135 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %135, 1
  store i64 %inc, i64* %tagnum, align 8
  %136 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio213 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %136, i32 0, i32 23
  %137 = load %struct._PerlIO**, %struct._PerlIO*** %fio213, align 8
  %tobool214 = icmp ne %struct._PerlIO** %137, null
  br i1 %tobool214, label %if.else.272, label %if.then.215

if.then.215:                                      ; preds = %if.then.212
  %138 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf216 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %138, i32 0, i32 21
  %aptr217 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf216, i32 0, i32 2
  %139 = load i8*, i8** %aptr217, align 8
  %140 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf218 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %140, i32 0, i32 21
  %aend219 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf218, i32 0, i32 3
  %141 = load i8*, i8** %aend219, align 8
  %cmp220 = icmp ult i8* %139, %141
  br i1 %cmp220, label %if.then.222, label %if.else.226

if.then.222:                                      ; preds = %if.then.215
  %142 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf223 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %142, i32 0, i32 21
  %aptr224 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf223, i32 0, i32 2
  %143 = load i8*, i8** %aptr224, align 8
  %incdec.ptr225 = getelementptr inbounds i8, i8* %143, i32 1
  store i8* %incdec.ptr225, i8** %aptr224, align 8
  store i8 14, i8* %143, align 1
  br label %if.end.271

if.else.226:                                      ; preds = %if.then.215
  %144 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf229 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %144, i32 0, i32 21
  %asiz230 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf229, i32 0, i32 1
  %145 = load i64, i64* %asiz230, align 8
  %add231 = add i64 1, %145
  %add232 = add i64 %add231, 8191
  %and233 = and i64 %add232, -8192
  %conv234 = trunc i64 %and233 to i32
  store i32 %conv234, i32* %nsz228, align 4
  %146 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf237 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %146, i32 0, i32 21
  %aptr238 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf237, i32 0, i32 2
  %147 = load i8*, i8** %aptr238, align 8
  %148 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf239 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %148, i32 0, i32 21
  %arena240 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf239, i32 0, i32 0
  %149 = load i8*, i8** %arena240, align 8
  %sub.ptr.lhs.cast241 = ptrtoint i8* %147 to i64
  %sub.ptr.rhs.cast242 = ptrtoint i8* %149 to i64
  %sub.ptr.sub243 = sub i64 %sub.ptr.lhs.cast241, %sub.ptr.rhs.cast242
  %conv244 = trunc i64 %sub.ptr.sub243 to i32
  store i32 %conv244, i32* %offset236, align 4
  %150 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf245 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %150, i32 0, i32 21
  %arena246 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf245, i32 0, i32 0
  %151 = load i8*, i8** %arena246, align 8
  %152 = load i32, i32* %nsz228, align 4
  %conv247 = sext i32 %152 to i64
  %mul248 = mul i64 %conv247, 1
  %call249 = call i8* @Perl_safesysrealloc(i8* %151, i64 %mul248)
  %153 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf250 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %153, i32 0, i32 21
  %arena251 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf250, i32 0, i32 0
  store i8* %call249, i8** %arena251, align 8
  %154 = load i32, i32* %nsz228, align 4
  %conv252 = sext i32 %154 to i64
  %155 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf253 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %155, i32 0, i32 21
  %asiz254 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf253, i32 0, i32 1
  store i64 %conv252, i64* %asiz254, align 8
  %156 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf255 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %156, i32 0, i32 21
  %arena256 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf255, i32 0, i32 0
  %157 = load i8*, i8** %arena256, align 8
  %158 = load i32, i32* %offset236, align 4
  %idx.ext257 = sext i32 %158 to i64
  %add.ptr258 = getelementptr inbounds i8, i8* %157, i64 %idx.ext257
  %159 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf259 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %159, i32 0, i32 21
  %aptr260 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf259, i32 0, i32 2
  store i8* %add.ptr258, i8** %aptr260, align 8
  %160 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf262 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %160, i32 0, i32 21
  %arena263 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf262, i32 0, i32 0
  %161 = load i8*, i8** %arena263, align 8
  %162 = load i32, i32* %nsz228, align 4
  %idx.ext264 = sext i32 %162 to i64
  %add.ptr265 = getelementptr inbounds i8, i8* %161, i64 %idx.ext264
  %163 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf266 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %163, i32 0, i32 21
  %aend267 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf266, i32 0, i32 3
  store i8* %add.ptr265, i8** %aend267, align 8
  store i8* %add.ptr265, i8** %tmp261
  %164 = load i8*, i8** %tmp261
  %165 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf268 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %165, i32 0, i32 21
  %aptr269 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf268, i32 0, i32 2
  %166 = load i8*, i8** %aptr269, align 8
  %incdec.ptr270 = getelementptr inbounds i8, i8* %166, i32 1
  store i8* %incdec.ptr270, i8** %aptr269, align 8
  store i8 14, i8* %166, align 1
  br label %if.end.271

if.end.271:                                       ; preds = %if.else.226, %if.then.222
  br label %if.end.279

if.else.272:                                      ; preds = %if.then.212
  %167 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio273 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %167, i32 0, i32 23
  %168 = load %struct._PerlIO**, %struct._PerlIO*** %fio273, align 8
  %call274 = call i32 @PerlIO_putc(%struct._PerlIO** %168, i32 14)
  %cmp275 = icmp eq i32 %call274, -1
  br i1 %cmp275, label %if.then.277, label %if.end.278

if.then.277:                                      ; preds = %if.else.272
  store i32 -1, i32* %retval
  br label %return

if.end.278:                                       ; preds = %if.else.272
  br label %if.end.279

if.end.279:                                       ; preds = %if.end.278, %if.end.271
  br label %for.inc

if.end.280:                                       ; preds = %for.body
  %169 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %170 = load %struct.sv**, %struct.sv*** %sav, align 8
  %171 = load %struct.sv*, %struct.sv** %170, align 8
  %call281 = call i32 @store(%struct.stcxt* %169, %struct.sv* %171)
  store i32 %call281, i32* %ret, align 4
  %tobool282 = icmp ne i32 %call281, 0
  br i1 %tobool282, label %if.then.283, label %if.end.284

if.then.283:                                      ; preds = %if.end.280
  %172 = load i32, i32* %ret, align 4
  store i32 %172, i32* %retval
  br label %return

if.end.284:                                       ; preds = %if.end.280
  br label %for.inc

for.inc:                                          ; preds = %if.end.284, %if.end.279
  %173 = load i32, i32* %i, align 4
  %inc285 = add nsw i32 %173, 1
  store i32 %inc285, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %for.end, %if.then.283, %if.then.277, %if.then.204, %if.then.124, %if.then.39
  %174 = load i32, i32* %retval
  ret i32 %174
}

; Function Attrs: nounwind uwtable
define internal i32 @store_hash(%struct.stcxt* %cxt, %struct.hv* %hv) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %hv.addr = alloca %struct.hv*, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %riter = alloca i32, align 4
  %eiter = alloca %struct.he*, align 8
  %flagged_hash = alloca i32, align 4
  %hash_flags = alloca i8, align 1
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %nsz73 = alloca i32, align 4
  %offset81 = alloca i32, align 4
  %tmp106 = alloca i8*, align 8
  %nsz142 = alloca i32, align 4
  %offset150 = alloca i32, align 4
  %tmp175 = alloca i8*, align 8
  %y = alloca i32, align 4
  %nsz213 = alloca i32, align 4
  %offset221 = alloca i32, align 4
  %tmp246 = alloca i8*, align 8
  %tmp268 = alloca i8*, align 8
  %nsz293 = alloca i32, align 4
  %offset301 = alloca i32, align 4
  %tmp326 = alloca i8*, align 8
  %tmp348 = alloca i8*, align 8
  %av = alloca %struct.av*, align 8
  %he = alloca %struct.he*, align 8
  %key = alloca %struct.sv*, align 8
  %placeholders = alloca i32, align 4
  %flags = alloca i8, align 1
  %keyval = alloca i8*, align 8
  %keylen_tmp = alloca i64, align 8
  %keylen = alloca i32, align 4
  %key457 = alloca %struct.sv*, align 8
  %he460 = alloca %struct.he*, align 8
  %val = alloca %struct.sv*, align 8
  %keysave = alloca i8*, align 8
  %is_utf8 = alloca i8, align 1
  %nsz540 = alloca i32, align 4
  %offset548 = alloca i32, align 4
  %tmp573 = alloca i8*, align 8
  %y599 = alloca i32, align 4
  %nsz615 = alloca i32, align 4
  %offset623 = alloca i32, align 4
  %tmp648 = alloca i8*, align 8
  %tmp670 = alloca i8*, align 8
  %nsz695 = alloca i32, align 4
  %offset703 = alloca i32, align 4
  %tmp728 = alloca i8*, align 8
  %tmp750 = alloca i8*, align 8
  %nsz778 = alloca i32, align 4
  %offset787 = alloca i32, align 4
  %tmp812 = alloca i8*, align 8
  %tmp823 = alloca i8*, align 8
  %key853 = alloca i8*, align 8
  %len855 = alloca i32, align 4
  %flags857 = alloca i8, align 1
  %he859 = alloca %struct.he*, align 8
  %val862 = alloca %struct.sv*, align 8
  %key_sv = alloca %struct.sv*, align 8
  %hek = alloca %struct.hek*, align 8
  %nsz952 = alloca i32, align 4
  %offset960 = alloca i32, align 4
  %tmp985 = alloca i8*, align 8
  %y1017 = alloca i32, align 4
  %nsz1033 = alloca i32, align 4
  %offset1041 = alloca i32, align 4
  %tmp1066 = alloca i8*, align 8
  %tmp1088 = alloca i8*, align 8
  %nsz1113 = alloca i32, align 4
  %offset1121 = alloca i32, align 4
  %tmp1146 = alloca i8*, align 8
  %tmp1168 = alloca i8*, align 8
  %nsz1196 = alloca i32, align 4
  %offset1205 = alloca i32, align 4
  %tmp1230 = alloca i8*, align 8
  %tmp1241 = alloca i8*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct.hv* %hv, %struct.hv** %hv.addr, align 8
  %0 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %0, i32 0, i32 0
  %1 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_keys = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %1, i32 0, i32 3
  %2 = load i64, i64* %xhv_keys, align 8
  %conv = trunc i64 %2 to i32
  store i32 %conv, i32* %len, align 4
  store i32 0, i32* %ret, align 4
  %3 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.hv, %struct.hv* %3, i32 0, i32 2
  %4 = load i32, i32* %sv_flags, align 4
  %and = and i32 %4, 8388608
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %5 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %sv_flags1 = getelementptr inbounds %struct.hv, %struct.hv* %5, i32 0, i32 2
  %6 = load i32, i32* %sv_flags1, align 4
  %and2 = and i32 %6, -2147483648
  %tobool3 = icmp ne i32 %and2, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %7 = phi i1 [ true, %entry ], [ %tobool3, %lor.rhs ]
  %cond = select i1 %7, i32 1, i32 0
  store i32 %cond, i32* %flagged_hash, align 4
  %8 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %sv_flags4 = getelementptr inbounds %struct.hv, %struct.hv* %8, i32 0, i32 2
  %9 = load i32, i32* %sv_flags4, align 4
  %and5 = and i32 %9, 8388608
  %tobool6 = icmp ne i32 %and5, 0
  %cond7 = select i1 %tobool6, i32 1, i32 0
  %conv8 = trunc i32 %cond7 to i8
  store i8 %conv8, i8* %hash_flags, align 1
  %10 = load i32, i32* %flagged_hash, align 4
  %tobool9 = icmp ne i32 %10, 0
  br i1 %tobool9, label %if.then, label %if.else

if.then:                                          ; preds = %lor.end
  br label %if.end

if.else:                                          ; preds = %lor.end
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load i32, i32* %flagged_hash, align 4
  %tobool10 = icmp ne i32 %11, 0
  br i1 %tobool10, label %if.then.11, label %if.else.126

if.then.11:                                       ; preds = %if.end
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 23
  %13 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool12 = icmp ne %struct._PerlIO** %13, null
  br i1 %tobool12, label %if.else.50, label %if.then.13

if.then.13:                                       ; preds = %if.then.11
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %15 = load i8*, i8** %aptr, align 8
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf14, i32 0, i32 3
  %17 = load i8*, i8** %aend, align 8
  %cmp = icmp ult i8* %15, %17
  br i1 %cmp, label %if.then.16, label %if.else.19

if.then.16:                                       ; preds = %if.then.13
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf17 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 21
  %aptr18 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf17, i32 0, i32 2
  %19 = load i8*, i8** %aptr18, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr, i8** %aptr18, align 8
  store i8 25, i8* %19, align 1
  br label %if.end.49

if.else.19:                                       ; preds = %if.then.13
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf20 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %20, i32 0, i32 21
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf20, i32 0, i32 1
  %21 = load i64, i64* %asiz, align 8
  %add = add i64 1, %21
  %add21 = add i64 %add, 8191
  %and22 = and i64 %add21, -8192
  %conv23 = trunc i64 %and22 to i32
  store i32 %conv23, i32* %nsz, align 4
  %22 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf24 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %22, i32 0, i32 21
  %aptr25 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf24, i32 0, i32 2
  %23 = load i8*, i8** %aptr25, align 8
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf26 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 21
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf26, i32 0, i32 0
  %25 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %23 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %25 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv27 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv27, i32* %offset, align 4
  %26 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf28 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %26, i32 0, i32 21
  %arena29 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf28, i32 0, i32 0
  %27 = load i8*, i8** %arena29, align 8
  %28 = load i32, i32* %nsz, align 4
  %conv30 = sext i32 %28 to i64
  %mul = mul i64 %conv30, 1
  %call = call i8* @Perl_safesysrealloc(i8* %27, i64 %mul)
  %29 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf31 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %29, i32 0, i32 21
  %arena32 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf31, i32 0, i32 0
  store i8* %call, i8** %arena32, align 8
  %30 = load i32, i32* %nsz, align 4
  %conv33 = sext i32 %30 to i64
  %31 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf34 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %31, i32 0, i32 21
  %asiz35 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf34, i32 0, i32 1
  store i64 %conv33, i64* %asiz35, align 8
  %32 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf36 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %32, i32 0, i32 21
  %arena37 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf36, i32 0, i32 0
  %33 = load i8*, i8** %arena37, align 8
  %34 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %34 to i64
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 %idx.ext
  %35 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf38 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %35, i32 0, i32 21
  %aptr39 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf38, i32 0, i32 2
  store i8* %add.ptr, i8** %aptr39, align 8
  %36 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf40 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %36, i32 0, i32 21
  %arena41 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf40, i32 0, i32 0
  %37 = load i8*, i8** %arena41, align 8
  %38 = load i32, i32* %nsz, align 4
  %idx.ext42 = sext i32 %38 to i64
  %add.ptr43 = getelementptr inbounds i8, i8* %37, i64 %idx.ext42
  %39 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf44 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %39, i32 0, i32 21
  %aend45 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf44, i32 0, i32 3
  store i8* %add.ptr43, i8** %aend45, align 8
  store i8* %add.ptr43, i8** %tmp
  %40 = load i8*, i8** %tmp
  %41 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf46 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %41, i32 0, i32 21
  %aptr47 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf46, i32 0, i32 2
  %42 = load i8*, i8** %aptr47, align 8
  %incdec.ptr48 = getelementptr inbounds i8, i8* %42, i32 1
  store i8* %incdec.ptr48, i8** %aptr47, align 8
  store i8 25, i8* %42, align 1
  br label %if.end.49

if.end.49:                                        ; preds = %if.else.19, %if.then.16
  br label %if.end.57

if.else.50:                                       ; preds = %if.then.11
  %43 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio51 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %43, i32 0, i32 23
  %44 = load %struct._PerlIO**, %struct._PerlIO*** %fio51, align 8
  %call52 = call i32 @PerlIO_putc(%struct._PerlIO** %44, i32 25)
  %cmp53 = icmp eq i32 %call52, -1
  br i1 %cmp53, label %if.then.55, label %if.end.56

if.then.55:                                       ; preds = %if.else.50
  store i32 -1, i32* %retval
  br label %return

if.end.56:                                        ; preds = %if.else.50
  br label %if.end.57

if.end.57:                                        ; preds = %if.end.56, %if.end.49
  %45 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio58 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %45, i32 0, i32 23
  %46 = load %struct._PerlIO**, %struct._PerlIO*** %fio58, align 8
  %tobool59 = icmp ne %struct._PerlIO** %46, null
  br i1 %tobool59, label %if.else.117, label %if.then.60

if.then.60:                                       ; preds = %if.end.57
  %47 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf61 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %47, i32 0, i32 21
  %aptr62 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf61, i32 0, i32 2
  %48 = load i8*, i8** %aptr62, align 8
  %49 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf63 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %49, i32 0, i32 21
  %aend64 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf63, i32 0, i32 3
  %50 = load i8*, i8** %aend64, align 8
  %cmp65 = icmp ult i8* %48, %50
  br i1 %cmp65, label %if.then.67, label %if.else.71

if.then.67:                                       ; preds = %if.then.60
  %51 = load i8, i8* %hash_flags, align 1
  %52 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf68 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %52, i32 0, i32 21
  %aptr69 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf68, i32 0, i32 2
  %53 = load i8*, i8** %aptr69, align 8
  %incdec.ptr70 = getelementptr inbounds i8, i8* %53, i32 1
  store i8* %incdec.ptr70, i8** %aptr69, align 8
  store i8 %51, i8* %53, align 1
  br label %if.end.116

if.else.71:                                       ; preds = %if.then.60
  %54 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf74 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %54, i32 0, i32 21
  %asiz75 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf74, i32 0, i32 1
  %55 = load i64, i64* %asiz75, align 8
  %add76 = add i64 1, %55
  %add77 = add i64 %add76, 8191
  %and78 = and i64 %add77, -8192
  %conv79 = trunc i64 %and78 to i32
  store i32 %conv79, i32* %nsz73, align 4
  %56 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf82 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %56, i32 0, i32 21
  %aptr83 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf82, i32 0, i32 2
  %57 = load i8*, i8** %aptr83, align 8
  %58 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf84 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %58, i32 0, i32 21
  %arena85 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf84, i32 0, i32 0
  %59 = load i8*, i8** %arena85, align 8
  %sub.ptr.lhs.cast86 = ptrtoint i8* %57 to i64
  %sub.ptr.rhs.cast87 = ptrtoint i8* %59 to i64
  %sub.ptr.sub88 = sub i64 %sub.ptr.lhs.cast86, %sub.ptr.rhs.cast87
  %conv89 = trunc i64 %sub.ptr.sub88 to i32
  store i32 %conv89, i32* %offset81, align 4
  %60 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf90 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %60, i32 0, i32 21
  %arena91 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf90, i32 0, i32 0
  %61 = load i8*, i8** %arena91, align 8
  %62 = load i32, i32* %nsz73, align 4
  %conv92 = sext i32 %62 to i64
  %mul93 = mul i64 %conv92, 1
  %call94 = call i8* @Perl_safesysrealloc(i8* %61, i64 %mul93)
  %63 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf95 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %63, i32 0, i32 21
  %arena96 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf95, i32 0, i32 0
  store i8* %call94, i8** %arena96, align 8
  %64 = load i32, i32* %nsz73, align 4
  %conv97 = sext i32 %64 to i64
  %65 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf98 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %65, i32 0, i32 21
  %asiz99 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf98, i32 0, i32 1
  store i64 %conv97, i64* %asiz99, align 8
  %66 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf100 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %66, i32 0, i32 21
  %arena101 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf100, i32 0, i32 0
  %67 = load i8*, i8** %arena101, align 8
  %68 = load i32, i32* %offset81, align 4
  %idx.ext102 = sext i32 %68 to i64
  %add.ptr103 = getelementptr inbounds i8, i8* %67, i64 %idx.ext102
  %69 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf104 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %69, i32 0, i32 21
  %aptr105 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf104, i32 0, i32 2
  store i8* %add.ptr103, i8** %aptr105, align 8
  %70 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf107 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %70, i32 0, i32 21
  %arena108 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf107, i32 0, i32 0
  %71 = load i8*, i8** %arena108, align 8
  %72 = load i32, i32* %nsz73, align 4
  %idx.ext109 = sext i32 %72 to i64
  %add.ptr110 = getelementptr inbounds i8, i8* %71, i64 %idx.ext109
  %73 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf111 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %73, i32 0, i32 21
  %aend112 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf111, i32 0, i32 3
  store i8* %add.ptr110, i8** %aend112, align 8
  store i8* %add.ptr110, i8** %tmp106
  %74 = load i8*, i8** %tmp106
  %75 = load i8, i8* %hash_flags, align 1
  %76 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf113 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %76, i32 0, i32 21
  %aptr114 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf113, i32 0, i32 2
  %77 = load i8*, i8** %aptr114, align 8
  %incdec.ptr115 = getelementptr inbounds i8, i8* %77, i32 1
  store i8* %incdec.ptr115, i8** %aptr114, align 8
  store i8 %75, i8* %77, align 1
  br label %if.end.116

if.end.116:                                       ; preds = %if.else.71, %if.then.67
  br label %if.end.125

if.else.117:                                      ; preds = %if.end.57
  %78 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio118 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %78, i32 0, i32 23
  %79 = load %struct._PerlIO**, %struct._PerlIO*** %fio118, align 8
  %80 = load i8, i8* %hash_flags, align 1
  %conv119 = zext i8 %80 to i32
  %call120 = call i32 @PerlIO_putc(%struct._PerlIO** %79, i32 %conv119)
  %cmp121 = icmp eq i32 %call120, -1
  br i1 %cmp121, label %if.then.123, label %if.end.124

if.then.123:                                      ; preds = %if.else.117
  store i32 -1, i32* %retval
  br label %return

if.end.124:                                       ; preds = %if.else.117
  br label %if.end.125

if.end.125:                                       ; preds = %if.end.124, %if.end.116
  br label %if.end.194

if.else.126:                                      ; preds = %if.end
  %81 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio127 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %81, i32 0, i32 23
  %82 = load %struct._PerlIO**, %struct._PerlIO*** %fio127, align 8
  %tobool128 = icmp ne %struct._PerlIO** %82, null
  br i1 %tobool128, label %if.else.186, label %if.then.129

if.then.129:                                      ; preds = %if.else.126
  %83 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf130 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %83, i32 0, i32 21
  %aptr131 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf130, i32 0, i32 2
  %84 = load i8*, i8** %aptr131, align 8
  %85 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf132 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %85, i32 0, i32 21
  %aend133 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf132, i32 0, i32 3
  %86 = load i8*, i8** %aend133, align 8
  %cmp134 = icmp ult i8* %84, %86
  br i1 %cmp134, label %if.then.136, label %if.else.140

if.then.136:                                      ; preds = %if.then.129
  %87 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf137 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %87, i32 0, i32 21
  %aptr138 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf137, i32 0, i32 2
  %88 = load i8*, i8** %aptr138, align 8
  %incdec.ptr139 = getelementptr inbounds i8, i8* %88, i32 1
  store i8* %incdec.ptr139, i8** %aptr138, align 8
  store i8 3, i8* %88, align 1
  br label %if.end.185

if.else.140:                                      ; preds = %if.then.129
  %89 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf143 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %89, i32 0, i32 21
  %asiz144 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf143, i32 0, i32 1
  %90 = load i64, i64* %asiz144, align 8
  %add145 = add i64 1, %90
  %add146 = add i64 %add145, 8191
  %and147 = and i64 %add146, -8192
  %conv148 = trunc i64 %and147 to i32
  store i32 %conv148, i32* %nsz142, align 4
  %91 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf151 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %91, i32 0, i32 21
  %aptr152 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf151, i32 0, i32 2
  %92 = load i8*, i8** %aptr152, align 8
  %93 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf153 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %93, i32 0, i32 21
  %arena154 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf153, i32 0, i32 0
  %94 = load i8*, i8** %arena154, align 8
  %sub.ptr.lhs.cast155 = ptrtoint i8* %92 to i64
  %sub.ptr.rhs.cast156 = ptrtoint i8* %94 to i64
  %sub.ptr.sub157 = sub i64 %sub.ptr.lhs.cast155, %sub.ptr.rhs.cast156
  %conv158 = trunc i64 %sub.ptr.sub157 to i32
  store i32 %conv158, i32* %offset150, align 4
  %95 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf159 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %95, i32 0, i32 21
  %arena160 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf159, i32 0, i32 0
  %96 = load i8*, i8** %arena160, align 8
  %97 = load i32, i32* %nsz142, align 4
  %conv161 = sext i32 %97 to i64
  %mul162 = mul i64 %conv161, 1
  %call163 = call i8* @Perl_safesysrealloc(i8* %96, i64 %mul162)
  %98 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf164 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %98, i32 0, i32 21
  %arena165 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf164, i32 0, i32 0
  store i8* %call163, i8** %arena165, align 8
  %99 = load i32, i32* %nsz142, align 4
  %conv166 = sext i32 %99 to i64
  %100 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf167 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %100, i32 0, i32 21
  %asiz168 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf167, i32 0, i32 1
  store i64 %conv166, i64* %asiz168, align 8
  %101 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf169 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %101, i32 0, i32 21
  %arena170 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf169, i32 0, i32 0
  %102 = load i8*, i8** %arena170, align 8
  %103 = load i32, i32* %offset150, align 4
  %idx.ext171 = sext i32 %103 to i64
  %add.ptr172 = getelementptr inbounds i8, i8* %102, i64 %idx.ext171
  %104 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf173 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %104, i32 0, i32 21
  %aptr174 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf173, i32 0, i32 2
  store i8* %add.ptr172, i8** %aptr174, align 8
  %105 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf176 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %105, i32 0, i32 21
  %arena177 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf176, i32 0, i32 0
  %106 = load i8*, i8** %arena177, align 8
  %107 = load i32, i32* %nsz142, align 4
  %idx.ext178 = sext i32 %107 to i64
  %add.ptr179 = getelementptr inbounds i8, i8* %106, i64 %idx.ext178
  %108 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf180 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %108, i32 0, i32 21
  %aend181 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf180, i32 0, i32 3
  store i8* %add.ptr179, i8** %aend181, align 8
  store i8* %add.ptr179, i8** %tmp175
  %109 = load i8*, i8** %tmp175
  %110 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf182 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %110, i32 0, i32 21
  %aptr183 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf182, i32 0, i32 2
  %111 = load i8*, i8** %aptr183, align 8
  %incdec.ptr184 = getelementptr inbounds i8, i8* %111, i32 1
  store i8* %incdec.ptr184, i8** %aptr183, align 8
  store i8 3, i8* %111, align 1
  br label %if.end.185

if.end.185:                                       ; preds = %if.else.140, %if.then.136
  br label %if.end.193

if.else.186:                                      ; preds = %if.else.126
  %112 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio187 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %112, i32 0, i32 23
  %113 = load %struct._PerlIO**, %struct._PerlIO*** %fio187, align 8
  %call188 = call i32 @PerlIO_putc(%struct._PerlIO** %113, i32 3)
  %cmp189 = icmp eq i32 %call188, -1
  br i1 %cmp189, label %if.then.191, label %if.end.192

if.then.191:                                      ; preds = %if.else.186
  store i32 -1, i32* %retval
  br label %return

if.end.192:                                       ; preds = %if.else.186
  br label %if.end.193

if.end.193:                                       ; preds = %if.end.192, %if.end.185
  br label %if.end.194

if.end.194:                                       ; preds = %if.end.193, %if.end.125
  %114 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %114, i32 0, i32 11
  %115 = load i32, i32* %netorder, align 4
  %tobool195 = icmp ne i32 %115, 0
  br i1 %tobool195, label %if.then.196, label %if.else.280

if.then.196:                                      ; preds = %if.end.194
  %116 = load i32, i32* %len, align 4
  %conv198 = sext i32 %116 to i64
  %call199 = call i64 @Perl_my_htonl(i64 %conv198)
  %conv200 = trunc i64 %call199 to i32
  store i32 %conv200, i32* %y, align 4
  %117 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio201 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %117, i32 0, i32 23
  %118 = load %struct._PerlIO**, %struct._PerlIO*** %fio201, align 8
  %tobool202 = icmp ne %struct._PerlIO** %118, null
  br i1 %tobool202, label %if.else.272, label %if.then.203

if.then.203:                                      ; preds = %if.then.196
  %119 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf204 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %119, i32 0, i32 21
  %aptr205 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf204, i32 0, i32 2
  %120 = load i8*, i8** %aptr205, align 8
  %add.ptr206 = getelementptr inbounds i8, i8* %120, i64 4
  %121 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf207 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %121, i32 0, i32 21
  %aend208 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf207, i32 0, i32 3
  %122 = load i8*, i8** %aend208, align 8
  %cmp209 = icmp ugt i8* %add.ptr206, %122
  br i1 %cmp209, label %if.then.211, label %if.end.253

if.then.211:                                      ; preds = %if.then.203
  %123 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf214 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %123, i32 0, i32 21
  %asiz215 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf214, i32 0, i32 1
  %124 = load i64, i64* %asiz215, align 8
  %add216 = add i64 4, %124
  %add217 = add i64 %add216, 8191
  %and218 = and i64 %add217, -8192
  %conv219 = trunc i64 %and218 to i32
  store i32 %conv219, i32* %nsz213, align 4
  %125 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf222 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %125, i32 0, i32 21
  %aptr223 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf222, i32 0, i32 2
  %126 = load i8*, i8** %aptr223, align 8
  %127 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf224 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %127, i32 0, i32 21
  %arena225 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf224, i32 0, i32 0
  %128 = load i8*, i8** %arena225, align 8
  %sub.ptr.lhs.cast226 = ptrtoint i8* %126 to i64
  %sub.ptr.rhs.cast227 = ptrtoint i8* %128 to i64
  %sub.ptr.sub228 = sub i64 %sub.ptr.lhs.cast226, %sub.ptr.rhs.cast227
  %conv229 = trunc i64 %sub.ptr.sub228 to i32
  store i32 %conv229, i32* %offset221, align 4
  %129 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf230 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %129, i32 0, i32 21
  %arena231 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf230, i32 0, i32 0
  %130 = load i8*, i8** %arena231, align 8
  %131 = load i32, i32* %nsz213, align 4
  %conv232 = sext i32 %131 to i64
  %mul233 = mul i64 %conv232, 1
  %call234 = call i8* @Perl_safesysrealloc(i8* %130, i64 %mul233)
  %132 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf235 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %132, i32 0, i32 21
  %arena236 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf235, i32 0, i32 0
  store i8* %call234, i8** %arena236, align 8
  %133 = load i32, i32* %nsz213, align 4
  %conv237 = sext i32 %133 to i64
  %134 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf238 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %134, i32 0, i32 21
  %asiz239 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf238, i32 0, i32 1
  store i64 %conv237, i64* %asiz239, align 8
  %135 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf240 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %135, i32 0, i32 21
  %arena241 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf240, i32 0, i32 0
  %136 = load i8*, i8** %arena241, align 8
  %137 = load i32, i32* %offset221, align 4
  %idx.ext242 = sext i32 %137 to i64
  %add.ptr243 = getelementptr inbounds i8, i8* %136, i64 %idx.ext242
  %138 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf244 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %138, i32 0, i32 21
  %aptr245 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf244, i32 0, i32 2
  store i8* %add.ptr243, i8** %aptr245, align 8
  %139 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf247 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %139, i32 0, i32 21
  %arena248 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf247, i32 0, i32 0
  %140 = load i8*, i8** %arena248, align 8
  %141 = load i32, i32* %nsz213, align 4
  %idx.ext249 = sext i32 %141 to i64
  %add.ptr250 = getelementptr inbounds i8, i8* %140, i64 %idx.ext249
  %142 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf251 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %142, i32 0, i32 21
  %aend252 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf251, i32 0, i32 3
  store i8* %add.ptr250, i8** %aend252, align 8
  store i8* %add.ptr250, i8** %tmp246
  %143 = load i8*, i8** %tmp246
  br label %if.end.253

if.end.253:                                       ; preds = %if.then.211, %if.then.203
  %144 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf254 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %144, i32 0, i32 21
  %aptr255 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf254, i32 0, i32 2
  %145 = load i8*, i8** %aptr255, align 8
  %146 = ptrtoint i8* %145 to i64
  %147 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf256 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %147, i32 0, i32 21
  %aptr257 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf256, i32 0, i32 2
  %148 = load i8*, i8** %aptr257, align 8
  %149 = ptrtoint i8* %148 to i64
  %and258 = and i64 %149, -4
  %cmp259 = icmp eq i64 %146, %and258
  br i1 %cmp259, label %if.then.261, label %if.else.264

if.then.261:                                      ; preds = %if.end.253
  %150 = load i32, i32* %y, align 4
  %151 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf262 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %151, i32 0, i32 21
  %aptr263 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf262, i32 0, i32 2
  %152 = load i8*, i8** %aptr263, align 8
  %153 = bitcast i8* %152 to i32*
  store i32 %150, i32* %153, align 4
  br label %if.end.267

if.else.264:                                      ; preds = %if.end.253
  %154 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf265 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %154, i32 0, i32 21
  %aptr266 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf265, i32 0, i32 2
  %155 = load i8*, i8** %aptr266, align 8
  %156 = bitcast i32* %y to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %155, i8* %156, i64 4, i32 1, i1 false)
  br label %if.end.267

if.end.267:                                       ; preds = %if.else.264, %if.then.261
  %157 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf269 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %157, i32 0, i32 21
  %aptr270 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf269, i32 0, i32 2
  %158 = load i8*, i8** %aptr270, align 8
  %add.ptr271 = getelementptr inbounds i8, i8* %158, i64 4
  store i8* %add.ptr271, i8** %aptr270, align 8
  store i8* %add.ptr271, i8** %tmp268
  %159 = load i8*, i8** %tmp268
  br label %if.end.279

if.else.272:                                      ; preds = %if.then.196
  %160 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio273 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %160, i32 0, i32 23
  %161 = load %struct._PerlIO**, %struct._PerlIO*** %fio273, align 8
  %162 = bitcast i32* %y to i8*
  %call274 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %161, i8* %162, i64 4)
  %cmp275 = icmp ne i64 %call274, 4
  br i1 %cmp275, label %if.then.277, label %if.end.278

if.then.277:                                      ; preds = %if.else.272
  store i32 -1, i32* %retval
  br label %return

if.end.278:                                       ; preds = %if.else.272
  br label %if.end.279

if.end.279:                                       ; preds = %if.end.278, %if.end.267
  br label %if.end.360

if.else.280:                                      ; preds = %if.end.194
  %163 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio281 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %163, i32 0, i32 23
  %164 = load %struct._PerlIO**, %struct._PerlIO*** %fio281, align 8
  %tobool282 = icmp ne %struct._PerlIO** %164, null
  br i1 %tobool282, label %if.else.352, label %if.then.283

if.then.283:                                      ; preds = %if.else.280
  %165 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf284 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %165, i32 0, i32 21
  %aptr285 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf284, i32 0, i32 2
  %166 = load i8*, i8** %aptr285, align 8
  %add.ptr286 = getelementptr inbounds i8, i8* %166, i64 4
  %167 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf287 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %167, i32 0, i32 21
  %aend288 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf287, i32 0, i32 3
  %168 = load i8*, i8** %aend288, align 8
  %cmp289 = icmp ugt i8* %add.ptr286, %168
  br i1 %cmp289, label %if.then.291, label %if.end.333

if.then.291:                                      ; preds = %if.then.283
  %169 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf294 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %169, i32 0, i32 21
  %asiz295 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf294, i32 0, i32 1
  %170 = load i64, i64* %asiz295, align 8
  %add296 = add i64 4, %170
  %add297 = add i64 %add296, 8191
  %and298 = and i64 %add297, -8192
  %conv299 = trunc i64 %and298 to i32
  store i32 %conv299, i32* %nsz293, align 4
  %171 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf302 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %171, i32 0, i32 21
  %aptr303 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf302, i32 0, i32 2
  %172 = load i8*, i8** %aptr303, align 8
  %173 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf304 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %173, i32 0, i32 21
  %arena305 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf304, i32 0, i32 0
  %174 = load i8*, i8** %arena305, align 8
  %sub.ptr.lhs.cast306 = ptrtoint i8* %172 to i64
  %sub.ptr.rhs.cast307 = ptrtoint i8* %174 to i64
  %sub.ptr.sub308 = sub i64 %sub.ptr.lhs.cast306, %sub.ptr.rhs.cast307
  %conv309 = trunc i64 %sub.ptr.sub308 to i32
  store i32 %conv309, i32* %offset301, align 4
  %175 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf310 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %175, i32 0, i32 21
  %arena311 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf310, i32 0, i32 0
  %176 = load i8*, i8** %arena311, align 8
  %177 = load i32, i32* %nsz293, align 4
  %conv312 = sext i32 %177 to i64
  %mul313 = mul i64 %conv312, 1
  %call314 = call i8* @Perl_safesysrealloc(i8* %176, i64 %mul313)
  %178 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf315 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %178, i32 0, i32 21
  %arena316 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf315, i32 0, i32 0
  store i8* %call314, i8** %arena316, align 8
  %179 = load i32, i32* %nsz293, align 4
  %conv317 = sext i32 %179 to i64
  %180 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf318 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %180, i32 0, i32 21
  %asiz319 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf318, i32 0, i32 1
  store i64 %conv317, i64* %asiz319, align 8
  %181 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf320 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %181, i32 0, i32 21
  %arena321 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf320, i32 0, i32 0
  %182 = load i8*, i8** %arena321, align 8
  %183 = load i32, i32* %offset301, align 4
  %idx.ext322 = sext i32 %183 to i64
  %add.ptr323 = getelementptr inbounds i8, i8* %182, i64 %idx.ext322
  %184 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf324 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %184, i32 0, i32 21
  %aptr325 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf324, i32 0, i32 2
  store i8* %add.ptr323, i8** %aptr325, align 8
  %185 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf327 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %185, i32 0, i32 21
  %arena328 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf327, i32 0, i32 0
  %186 = load i8*, i8** %arena328, align 8
  %187 = load i32, i32* %nsz293, align 4
  %idx.ext329 = sext i32 %187 to i64
  %add.ptr330 = getelementptr inbounds i8, i8* %186, i64 %idx.ext329
  %188 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf331 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %188, i32 0, i32 21
  %aend332 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf331, i32 0, i32 3
  store i8* %add.ptr330, i8** %aend332, align 8
  store i8* %add.ptr330, i8** %tmp326
  %189 = load i8*, i8** %tmp326
  br label %if.end.333

if.end.333:                                       ; preds = %if.then.291, %if.then.283
  %190 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf334 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %190, i32 0, i32 21
  %aptr335 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf334, i32 0, i32 2
  %191 = load i8*, i8** %aptr335, align 8
  %192 = ptrtoint i8* %191 to i64
  %193 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf336 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %193, i32 0, i32 21
  %aptr337 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf336, i32 0, i32 2
  %194 = load i8*, i8** %aptr337, align 8
  %195 = ptrtoint i8* %194 to i64
  %and338 = and i64 %195, -4
  %cmp339 = icmp eq i64 %192, %and338
  br i1 %cmp339, label %if.then.341, label %if.else.344

if.then.341:                                      ; preds = %if.end.333
  %196 = load i32, i32* %len, align 4
  %197 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf342 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %197, i32 0, i32 21
  %aptr343 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf342, i32 0, i32 2
  %198 = load i8*, i8** %aptr343, align 8
  %199 = bitcast i8* %198 to i32*
  store i32 %196, i32* %199, align 4
  br label %if.end.347

if.else.344:                                      ; preds = %if.end.333
  %200 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf345 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %200, i32 0, i32 21
  %aptr346 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf345, i32 0, i32 2
  %201 = load i8*, i8** %aptr346, align 8
  %202 = bitcast i32* %len to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %201, i8* %202, i64 4, i32 1, i1 false)
  br label %if.end.347

if.end.347:                                       ; preds = %if.else.344, %if.then.341
  %203 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf349 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %203, i32 0, i32 21
  %aptr350 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf349, i32 0, i32 2
  %204 = load i8*, i8** %aptr350, align 8
  %add.ptr351 = getelementptr inbounds i8, i8* %204, i64 4
  store i8* %add.ptr351, i8** %aptr350, align 8
  store i8* %add.ptr351, i8** %tmp348
  %205 = load i8*, i8** %tmp348
  br label %if.end.359

if.else.352:                                      ; preds = %if.else.280
  %206 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio353 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %206, i32 0, i32 23
  %207 = load %struct._PerlIO**, %struct._PerlIO*** %fio353, align 8
  %208 = bitcast i32* %len to i8*
  %call354 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %207, i8* %208, i64 4)
  %cmp355 = icmp ne i64 %call354, 4
  br i1 %cmp355, label %if.then.357, label %if.end.358

if.then.357:                                      ; preds = %if.else.352
  store i32 -1, i32* %retval
  br label %return

if.end.358:                                       ; preds = %if.else.352
  br label %if.end.359

if.end.359:                                       ; preds = %if.end.358, %if.end.347
  br label %if.end.360

if.end.360:                                       ; preds = %if.end.359, %if.end.279
  %209 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %sv_any361 = getelementptr inbounds %struct.hv, %struct.hv* %209, i32 0, i32 0
  %210 = load %struct.xpvhv*, %struct.xpvhv** %sv_any361, align 8
  %xhv_riter = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %210, i32 0, i32 7
  %211 = load i32, i32* %xhv_riter, align 4
  store i32 %211, i32* %riter, align 4
  %212 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %sv_any362 = getelementptr inbounds %struct.hv, %struct.hv* %212, i32 0, i32 0
  %213 = load %struct.xpvhv*, %struct.xpvhv** %sv_any362, align 8
  %xhv_eiter = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %213, i32 0, i32 8
  %214 = load %struct.he*, %struct.he** %xhv_eiter, align 8
  store %struct.he* %214, %struct.he** %eiter, align 8
  %215 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %call363 = call i32 @Perl_hv_iterinit(%struct.hv* %215)
  %216 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %optype = getelementptr inbounds %struct.stcxt, %struct.stcxt* %216, i32 0, i32 1
  %217 = load i32, i32* %optype, align 4
  %and364 = and i32 %217, 4
  %tobool365 = icmp ne i32 %and364, 0
  br i1 %tobool365, label %if.else.847, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end.360
  %218 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %canonical = getelementptr inbounds %struct.stcxt, %struct.stcxt* %218, i32 0, i32 16
  %219 = load i32, i32* %canonical, align 4
  %cmp366 = icmp eq i32 %219, 1
  br i1 %cmp366, label %if.then.429, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %220 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %canonical368 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %220, i32 0, i32 16
  %221 = load i32, i32* %canonical368, align 4
  %cmp369 = icmp slt i32 %221, 0
  br i1 %cmp369, label %land.lhs.true.371, label %if.else.847

land.lhs.true.371:                                ; preds = %lor.lhs.false
  %call372 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44, i32 0, i32 0), i32 1)
  %tobool373 = icmp ne %struct.sv* %call372, null
  br i1 %tobool373, label %cond.false, label %cond.true

cond.true:                                        ; preds = %land.lhs.true.371
  br label %cond.end.423

cond.false:                                       ; preds = %land.lhs.true.371
  %call374 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44, i32 0, i32 0), i32 1)
  %sv_flags375 = getelementptr inbounds %struct.sv, %struct.sv* %call374, i32 0, i32 2
  %222 = load i32, i32* %sv_flags375, align 4
  %and376 = and i32 %222, 262144
  %tobool377 = icmp ne i32 %and376, 0
  br i1 %tobool377, label %cond.true.378, label %cond.false.394

cond.true.378:                                    ; preds = %cond.false
  %call379 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44, i32 0, i32 0), i32 1)
  %sv_any380 = getelementptr inbounds %struct.sv, %struct.sv* %call379, i32 0, i32 0
  %223 = load i8*, i8** %sv_any380, align 8
  %224 = bitcast i8* %223 to %struct.xpv*
  store %struct.xpv* %224, %struct.xpv** @PL_Xpv, align 8
  %tobool381 = icmp ne %struct.xpv* %224, null
  br i1 %tobool381, label %land.rhs, label %land.end.392

land.rhs:                                         ; preds = %cond.true.378
  %225 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %225, i32 0, i32 1
  %226 = load i64, i64* %xpv_cur, align 8
  %cmp382 = icmp ugt i64 %226, 1
  br i1 %cmp382, label %lor.end.391, label %lor.rhs.384

lor.rhs.384:                                      ; preds = %land.rhs
  %227 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_cur385 = getelementptr inbounds %struct.xpv, %struct.xpv* %227, i32 0, i32 1
  %228 = load i64, i64* %xpv_cur385, align 8
  %tobool386 = icmp ne i64 %228, 0
  br i1 %tobool386, label %land.rhs.387, label %land.end

land.rhs.387:                                     ; preds = %lor.rhs.384
  %229 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %229, i32 0, i32 0
  %230 = load i8*, i8** %xpv_pv, align 8
  %231 = load i8, i8* %230, align 1
  %conv388 = sext i8 %231 to i32
  %cmp389 = icmp ne i32 %conv388, 48
  br label %land.end

land.end:                                         ; preds = %land.rhs.387, %lor.rhs.384
  %232 = phi i1 [ false, %lor.rhs.384 ], [ %cmp389, %land.rhs.387 ]
  br label %lor.end.391

lor.end.391:                                      ; preds = %land.end, %land.rhs
  %233 = phi i1 [ true, %land.rhs ], [ %232, %land.end ]
  br label %land.end.392

land.end.392:                                     ; preds = %lor.end.391, %cond.true.378
  %234 = phi i1 [ false, %cond.true.378 ], [ %233, %lor.end.391 ]
  %cond393 = select i1 %234, i32 1, i32 0
  br label %cond.end.421

cond.false.394:                                   ; preds = %cond.false
  %call395 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44, i32 0, i32 0), i32 1)
  %sv_flags396 = getelementptr inbounds %struct.sv, %struct.sv* %call395, i32 0, i32 2
  %235 = load i32, i32* %sv_flags396, align 4
  %and397 = and i32 %235, 65536
  %tobool398 = icmp ne i32 %and397, 0
  br i1 %tobool398, label %cond.true.399, label %cond.false.404

cond.true.399:                                    ; preds = %cond.false.394
  %call400 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44, i32 0, i32 0), i32 1)
  %sv_any401 = getelementptr inbounds %struct.sv, %struct.sv* %call400, i32 0, i32 0
  %236 = load i8*, i8** %sv_any401, align 8
  %237 = bitcast i8* %236 to %struct.xpviv*
  %xiv_iv = getelementptr inbounds %struct.xpviv, %struct.xpviv* %237, i32 0, i32 3
  %238 = load i64, i64* %xiv_iv, align 8
  %cmp402 = icmp ne i64 %238, 0
  %conv403 = zext i1 %cmp402 to i32
  br label %cond.end.419

cond.false.404:                                   ; preds = %cond.false.394
  %call405 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44, i32 0, i32 0), i32 1)
  %sv_flags406 = getelementptr inbounds %struct.sv, %struct.sv* %call405, i32 0, i32 2
  %239 = load i32, i32* %sv_flags406, align 4
  %and407 = and i32 %239, 131072
  %tobool408 = icmp ne i32 %and407, 0
  br i1 %tobool408, label %cond.true.409, label %cond.false.414

cond.true.409:                                    ; preds = %cond.false.404
  %call410 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44, i32 0, i32 0), i32 1)
  %sv_any411 = getelementptr inbounds %struct.sv, %struct.sv* %call410, i32 0, i32 0
  %240 = load i8*, i8** %sv_any411, align 8
  %241 = bitcast i8* %240 to %struct.xpvnv*
  %xnv_nv = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %241, i32 0, i32 4
  %242 = load double, double* %xnv_nv, align 8
  %cmp412 = fcmp une double %242, 0.000000e+00
  %conv413 = zext i1 %cmp412 to i32
  br label %cond.end

cond.false.414:                                   ; preds = %cond.false.404
  %call415 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44, i32 0, i32 0), i32 1)
  %call416 = call signext i8 @Perl_sv_2bool(%struct.sv* %call415)
  %conv417 = sext i8 %call416 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false.414, %cond.true.409
  %cond418 = phi i32 [ %conv413, %cond.true.409 ], [ %conv417, %cond.false.414 ]
  br label %cond.end.419

cond.end.419:                                     ; preds = %cond.end, %cond.true.399
  %cond420 = phi i32 [ %conv403, %cond.true.399 ], [ %cond418, %cond.end ]
  br label %cond.end.421

cond.end.421:                                     ; preds = %cond.end.419, %land.end.392
  %cond422 = phi i32 [ %cond393, %land.end.392 ], [ %cond420, %cond.end.419 ]
  br label %cond.end.423

cond.end.423:                                     ; preds = %cond.end.421, %cond.true
  %cond424 = phi i32 [ 0, %cond.true ], [ %cond422, %cond.end.421 ]
  %tobool425 = icmp ne i32 %cond424, 0
  %cond426 = select i1 %tobool425, i32 1, i32 0
  %243 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %canonical427 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %243, i32 0, i32 16
  store i32 %cond426, i32* %canonical427, align 4
  %tobool428 = icmp ne i32 %cond426, 0
  br i1 %tobool428, label %if.then.429, label %if.else.847

if.then.429:                                      ; preds = %cond.end.423, %land.lhs.true
  %call431 = call %struct.av* @Perl_newAV()
  store %struct.av* %call431, %struct.av** %av, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.429
  %244 = load i32, i32* %i, align 4
  %245 = load i32, i32* %len, align 4
  %cmp432 = icmp slt i32 %244, %245
  br i1 %cmp432, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %246 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %call435 = call %struct.he* @Perl_hv_iternext_flags(%struct.hv* %246, i32 1)
  store %struct.he* %call435, %struct.he** %he, align 8
  %247 = load %struct.he*, %struct.he** %he, align 8
  %call437 = call %struct.sv* @Perl_hv_iterkeysv(%struct.he* %247)
  store %struct.sv* %call437, %struct.sv** %key, align 8
  %248 = load %struct.av*, %struct.av** %av, align 8
  %249 = load %struct.av*, %struct.av** %av, align 8
  %sv_any438 = getelementptr inbounds %struct.av, %struct.av* %249, i32 0, i32 0
  %250 = load %struct.xpvav*, %struct.xpvav** %sv_any438, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %250, i32 0, i32 1
  %251 = load i64, i64* %xav_fill, align 8
  %add439 = add nsw i64 %251, 1
  %conv440 = trunc i64 %add439 to i32
  %252 = load %struct.sv*, %struct.sv** %key, align 8
  %call441 = call %struct.sv** @Perl_av_store(%struct.av* %248, i32 %conv440, %struct.sv* %252)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %253 = load i32, i32* %i, align 4
  %inc = add nsw i32 %253, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %254 = load %struct.av*, %struct.av** %av, align 8
  %sv_any442 = getelementptr inbounds %struct.av, %struct.av* %254, i32 0, i32 0
  %255 = load %struct.xpvav*, %struct.xpvav** %sv_any442, align 8
  %xav_array = getelementptr inbounds %struct.xpvav, %struct.xpvav* %255, i32 0, i32 0
  %256 = load i8*, i8** %xav_array, align 8
  %257 = bitcast i8* %256 to %struct.sv**
  %258 = load i32, i32* %len, align 4
  %conv443 = sext i32 %258 to i64
  call void @Perl_sortsv(%struct.sv** %257, i64 %conv443, i32 (%struct.sv*, %struct.sv*)* @Perl_sv_cmp)
  store i32 0, i32* %i, align 4
  br label %for.cond.444

for.cond.444:                                     ; preds = %for.inc.844, %for.end
  %259 = load i32, i32* %i, align 4
  %260 = load i32, i32* %len, align 4
  %cmp445 = icmp slt i32 %259, %260
  br i1 %cmp445, label %for.body.447, label %for.end.846

for.body.447:                                     ; preds = %for.cond.444
  %261 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %sv_any449 = getelementptr inbounds %struct.hv, %struct.hv* %261, i32 0, i32 0
  %262 = load %struct.xpvhv*, %struct.xpvhv** %sv_any449, align 8
  %xnv_nv450 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %262, i32 0, i32 4
  %263 = load double, double* %xnv_nv450, align 8
  %conv451 = fptosi double %263 to i32
  store i32 %conv451, i32* %placeholders, align 4
  store i8 0, i8* %flags, align 1
  %264 = load %struct.av*, %struct.av** %av, align 8
  %call458 = call %struct.sv* @Perl_av_shift(%struct.av* %264)
  store %struct.sv* %call458, %struct.sv** %key457, align 8
  %265 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %266 = load %struct.sv*, %struct.sv** %key457, align 8
  %call461 = call %struct.he* @Perl_hv_fetch_ent(%struct.hv* %265, %struct.sv* %266, i32 0, i32 0)
  store %struct.he* %call461, %struct.he** %he460, align 8
  %267 = load %struct.he*, %struct.he** %he460, align 8
  %tobool463 = icmp ne %struct.he* %267, null
  br i1 %tobool463, label %if.then.464, label %if.else.468

if.then.464:                                      ; preds = %for.body.447
  %268 = load %struct.he*, %struct.he** %he460, align 8
  %hent_val = getelementptr inbounds %struct.he, %struct.he* %268, i32 0, i32 2
  %269 = load %struct.sv*, %struct.sv** %hent_val, align 8
  store %struct.sv* %269, %struct.sv** %val, align 8
  %tobool465 = icmp ne %struct.sv* %269, null
  br i1 %tobool465, label %if.end.467, label %if.then.466

if.then.466:                                      ; preds = %if.then.464
  store i32 1, i32* %retval
  br label %return

if.end.467:                                       ; preds = %if.then.464
  br label %if.end.473

if.else.468:                                      ; preds = %for.body.447
  %270 = load i32, i32* %placeholders, align 4
  %dec = add nsw i32 %270, -1
  store i32 %dec, i32* %placeholders, align 4
  %cmp469 = icmp slt i32 %270, 0
  br i1 %cmp469, label %if.then.471, label %if.end.472

if.then.471:                                      ; preds = %if.else.468
  store i32 1, i32* %retval
  br label %return

if.end.472:                                       ; preds = %if.else.468
  store %struct.sv* @PL_sv_undef, %struct.sv** %val, align 8
  store i8 16, i8* %flags, align 1
  br label %if.end.473

if.end.473:                                       ; preds = %if.end.472, %if.end.467
  %271 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %272 = load %struct.sv*, %struct.sv** %val, align 8
  %call474 = call i32 @store(%struct.stcxt* %271, %struct.sv* %272)
  store i32 %call474, i32* %ret, align 4
  %tobool475 = icmp ne i32 %call474, 0
  br i1 %tobool475, label %if.then.476, label %if.end.477

if.then.476:                                      ; preds = %if.end.473
  br label %out

if.end.477:                                       ; preds = %if.end.473
  %273 = load i8, i8* %hash_flags, align 1
  %conv478 = zext i8 %273 to i32
  %and479 = and i32 %conv478, 1
  %tobool480 = icmp ne i32 %and479, 0
  br i1 %tobool480, label %land.lhs.true.481, label %if.end.488

land.lhs.true.481:                                ; preds = %if.end.477
  %274 = load %struct.sv*, %struct.sv** %val, align 8
  %sv_flags482 = getelementptr inbounds %struct.sv, %struct.sv* %274, i32 0, i32 2
  %275 = load i32, i32* %sv_flags482, align 4
  %and483 = and i32 %275, 8388608
  %tobool484 = icmp ne i32 %and483, 0
  br i1 %tobool484, label %if.then.485, label %if.end.488

if.then.485:                                      ; preds = %land.lhs.true.481
  %276 = load i8, i8* %flags, align 1
  %conv486 = zext i8 %276 to i32
  %or = or i32 %conv486, 4
  %conv487 = trunc i32 %or to i8
  store i8 %conv487, i8* %flags, align 1
  br label %if.end.488

if.end.488:                                       ; preds = %if.then.485, %land.lhs.true.481, %if.end.477
  %277 = load %struct.sv*, %struct.sv** %key457, align 8
  %sv_flags489 = getelementptr inbounds %struct.sv, %struct.sv* %277, i32 0, i32 2
  %278 = load i32, i32* %sv_flags489, align 4
  %and490 = and i32 %278, 262144
  %cmp491 = icmp eq i32 %and490, 262144
  br i1 %cmp491, label %cond.true.493, label %cond.false.498

cond.true.493:                                    ; preds = %if.end.488
  %279 = load %struct.sv*, %struct.sv** %key457, align 8
  %sv_any494 = getelementptr inbounds %struct.sv, %struct.sv* %279, i32 0, i32 0
  %280 = load i8*, i8** %sv_any494, align 8
  %281 = bitcast i8* %280 to %struct.xpv*
  %xpv_cur495 = getelementptr inbounds %struct.xpv, %struct.xpv* %281, i32 0, i32 1
  %282 = load i64, i64* %xpv_cur495, align 8
  store i64 %282, i64* %keylen_tmp, align 8
  %283 = load %struct.sv*, %struct.sv** %key457, align 8
  %sv_any496 = getelementptr inbounds %struct.sv, %struct.sv* %283, i32 0, i32 0
  %284 = load i8*, i8** %sv_any496, align 8
  %285 = bitcast i8* %284 to %struct.xpv*
  %xpv_pv497 = getelementptr inbounds %struct.xpv, %struct.xpv* %285, i32 0, i32 0
  %286 = load i8*, i8** %xpv_pv497, align 8
  br label %cond.end.500

cond.false.498:                                   ; preds = %if.end.488
  %287 = load %struct.sv*, %struct.sv** %key457, align 8
  %call499 = call i8* @Perl_sv_2pv_flags(%struct.sv* %287, i64* %keylen_tmp, i32 2)
  br label %cond.end.500

cond.end.500:                                     ; preds = %cond.false.498, %cond.true.493
  %cond501 = phi i8* [ %286, %cond.true.493 ], [ %call499, %cond.false.498 ]
  store i8* %cond501, i8** %keyval, align 8
  %288 = load i64, i64* %keylen_tmp, align 8
  %conv502 = trunc i64 %288 to i32
  store i32 %conv502, i32* %keylen, align 4
  %289 = load %struct.sv*, %struct.sv** %key457, align 8
  %sv_flags503 = getelementptr inbounds %struct.sv, %struct.sv* %289, i32 0, i32 2
  %290 = load i32, i32* %sv_flags503, align 4
  %and504 = and i32 %290, 536870912
  %tobool505 = icmp ne i32 %and504, 0
  br i1 %tobool505, label %if.then.506, label %if.end.522

if.then.506:                                      ; preds = %cond.end.500
  %291 = load i8*, i8** %keyval, align 8
  store i8* %291, i8** %keysave, align 8
  store i8 1, i8* %is_utf8, align 1
  %292 = load i8*, i8** %keyval, align 8
  %call509 = call i8* @Perl_bytes_from_utf8(i8* %292, i64* %keylen_tmp, i8* %is_utf8)
  store i8* %call509, i8** %keyval, align 8
  %293 = load i8*, i8** %keyval, align 8
  %294 = load i8*, i8** %keysave, align 8
  %cmp510 = icmp ne i8* %293, %294
  br i1 %cmp510, label %if.then.512, label %if.else.517

if.then.512:                                      ; preds = %if.then.506
  %295 = load i64, i64* %keylen_tmp, align 8
  %conv513 = trunc i64 %295 to i32
  store i32 %conv513, i32* %keylen, align 4
  %296 = load i8, i8* %flags, align 1
  %conv514 = zext i8 %296 to i32
  %or515 = or i32 %conv514, 2
  %conv516 = trunc i32 %or515 to i8
  store i8 %conv516, i8* %flags, align 1
  br label %if.end.521

if.else.517:                                      ; preds = %if.then.506
  %297 = load i8, i8* %flags, align 1
  %conv518 = zext i8 %297 to i32
  %or519 = or i32 %conv518, 1
  %conv520 = trunc i32 %or519 to i8
  store i8 %conv520, i8* %flags, align 1
  br label %if.end.521

if.end.521:                                       ; preds = %if.else.517, %if.then.512
  br label %if.end.522

if.end.522:                                       ; preds = %if.end.521, %cond.end.500
  %298 = load i32, i32* %flagged_hash, align 4
  %tobool523 = icmp ne i32 %298, 0
  br i1 %tobool523, label %if.then.524, label %if.else.593

if.then.524:                                      ; preds = %if.end.522
  %299 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio525 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %299, i32 0, i32 23
  %300 = load %struct._PerlIO**, %struct._PerlIO*** %fio525, align 8
  %tobool526 = icmp ne %struct._PerlIO** %300, null
  br i1 %tobool526, label %if.else.584, label %if.then.527

if.then.527:                                      ; preds = %if.then.524
  %301 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf528 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %301, i32 0, i32 21
  %aptr529 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf528, i32 0, i32 2
  %302 = load i8*, i8** %aptr529, align 8
  %303 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf530 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %303, i32 0, i32 21
  %aend531 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf530, i32 0, i32 3
  %304 = load i8*, i8** %aend531, align 8
  %cmp532 = icmp ult i8* %302, %304
  br i1 %cmp532, label %if.then.534, label %if.else.538

if.then.534:                                      ; preds = %if.then.527
  %305 = load i8, i8* %flags, align 1
  %306 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf535 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %306, i32 0, i32 21
  %aptr536 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf535, i32 0, i32 2
  %307 = load i8*, i8** %aptr536, align 8
  %incdec.ptr537 = getelementptr inbounds i8, i8* %307, i32 1
  store i8* %incdec.ptr537, i8** %aptr536, align 8
  store i8 %305, i8* %307, align 1
  br label %if.end.583

if.else.538:                                      ; preds = %if.then.527
  %308 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf541 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %308, i32 0, i32 21
  %asiz542 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf541, i32 0, i32 1
  %309 = load i64, i64* %asiz542, align 8
  %add543 = add i64 1, %309
  %add544 = add i64 %add543, 8191
  %and545 = and i64 %add544, -8192
  %conv546 = trunc i64 %and545 to i32
  store i32 %conv546, i32* %nsz540, align 4
  %310 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf549 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %310, i32 0, i32 21
  %aptr550 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf549, i32 0, i32 2
  %311 = load i8*, i8** %aptr550, align 8
  %312 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf551 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %312, i32 0, i32 21
  %arena552 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf551, i32 0, i32 0
  %313 = load i8*, i8** %arena552, align 8
  %sub.ptr.lhs.cast553 = ptrtoint i8* %311 to i64
  %sub.ptr.rhs.cast554 = ptrtoint i8* %313 to i64
  %sub.ptr.sub555 = sub i64 %sub.ptr.lhs.cast553, %sub.ptr.rhs.cast554
  %conv556 = trunc i64 %sub.ptr.sub555 to i32
  store i32 %conv556, i32* %offset548, align 4
  %314 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf557 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %314, i32 0, i32 21
  %arena558 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf557, i32 0, i32 0
  %315 = load i8*, i8** %arena558, align 8
  %316 = load i32, i32* %nsz540, align 4
  %conv559 = sext i32 %316 to i64
  %mul560 = mul i64 %conv559, 1
  %call561 = call i8* @Perl_safesysrealloc(i8* %315, i64 %mul560)
  %317 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf562 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %317, i32 0, i32 21
  %arena563 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf562, i32 0, i32 0
  store i8* %call561, i8** %arena563, align 8
  %318 = load i32, i32* %nsz540, align 4
  %conv564 = sext i32 %318 to i64
  %319 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf565 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %319, i32 0, i32 21
  %asiz566 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf565, i32 0, i32 1
  store i64 %conv564, i64* %asiz566, align 8
  %320 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf567 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %320, i32 0, i32 21
  %arena568 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf567, i32 0, i32 0
  %321 = load i8*, i8** %arena568, align 8
  %322 = load i32, i32* %offset548, align 4
  %idx.ext569 = sext i32 %322 to i64
  %add.ptr570 = getelementptr inbounds i8, i8* %321, i64 %idx.ext569
  %323 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf571 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %323, i32 0, i32 21
  %aptr572 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf571, i32 0, i32 2
  store i8* %add.ptr570, i8** %aptr572, align 8
  %324 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf574 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %324, i32 0, i32 21
  %arena575 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf574, i32 0, i32 0
  %325 = load i8*, i8** %arena575, align 8
  %326 = load i32, i32* %nsz540, align 4
  %idx.ext576 = sext i32 %326 to i64
  %add.ptr577 = getelementptr inbounds i8, i8* %325, i64 %idx.ext576
  %327 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf578 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %327, i32 0, i32 21
  %aend579 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf578, i32 0, i32 3
  store i8* %add.ptr577, i8** %aend579, align 8
  store i8* %add.ptr577, i8** %tmp573
  %328 = load i8*, i8** %tmp573
  %329 = load i8, i8* %flags, align 1
  %330 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf580 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %330, i32 0, i32 21
  %aptr581 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf580, i32 0, i32 2
  %331 = load i8*, i8** %aptr581, align 8
  %incdec.ptr582 = getelementptr inbounds i8, i8* %331, i32 1
  store i8* %incdec.ptr582, i8** %aptr581, align 8
  store i8 %329, i8* %331, align 1
  br label %if.end.583

if.end.583:                                       ; preds = %if.else.538, %if.then.534
  br label %if.end.592

if.else.584:                                      ; preds = %if.then.524
  %332 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio585 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %332, i32 0, i32 23
  %333 = load %struct._PerlIO**, %struct._PerlIO*** %fio585, align 8
  %334 = load i8, i8* %flags, align 1
  %conv586 = zext i8 %334 to i32
  %call587 = call i32 @PerlIO_putc(%struct._PerlIO** %333, i32 %conv586)
  %cmp588 = icmp eq i32 %call587, -1
  br i1 %cmp588, label %if.then.590, label %if.end.591

if.then.590:                                      ; preds = %if.else.584
  store i32 -1, i32* %retval
  br label %return

if.end.591:                                       ; preds = %if.else.584
  br label %if.end.592

if.end.592:                                       ; preds = %if.end.591, %if.end.583
  br label %if.end.594

if.else.593:                                      ; preds = %if.end.522
  br label %if.end.594

if.end.594:                                       ; preds = %if.else.593, %if.end.592
  %335 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder595 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %335, i32 0, i32 11
  %336 = load i32, i32* %netorder595, align 4
  %tobool596 = icmp ne i32 %336, 0
  br i1 %tobool596, label %if.then.597, label %if.else.682

if.then.597:                                      ; preds = %if.end.594
  %337 = load i32, i32* %keylen, align 4
  %conv600 = sext i32 %337 to i64
  %call601 = call i64 @Perl_my_htonl(i64 %conv600)
  %conv602 = trunc i64 %call601 to i32
  store i32 %conv602, i32* %y599, align 4
  %338 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio603 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %338, i32 0, i32 23
  %339 = load %struct._PerlIO**, %struct._PerlIO*** %fio603, align 8
  %tobool604 = icmp ne %struct._PerlIO** %339, null
  br i1 %tobool604, label %if.else.674, label %if.then.605

if.then.605:                                      ; preds = %if.then.597
  %340 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf606 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %340, i32 0, i32 21
  %aptr607 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf606, i32 0, i32 2
  %341 = load i8*, i8** %aptr607, align 8
  %add.ptr608 = getelementptr inbounds i8, i8* %341, i64 4
  %342 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf609 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %342, i32 0, i32 21
  %aend610 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf609, i32 0, i32 3
  %343 = load i8*, i8** %aend610, align 8
  %cmp611 = icmp ugt i8* %add.ptr608, %343
  br i1 %cmp611, label %if.then.613, label %if.end.655

if.then.613:                                      ; preds = %if.then.605
  %344 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf616 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %344, i32 0, i32 21
  %asiz617 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf616, i32 0, i32 1
  %345 = load i64, i64* %asiz617, align 8
  %add618 = add i64 4, %345
  %add619 = add i64 %add618, 8191
  %and620 = and i64 %add619, -8192
  %conv621 = trunc i64 %and620 to i32
  store i32 %conv621, i32* %nsz615, align 4
  %346 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf624 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %346, i32 0, i32 21
  %aptr625 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf624, i32 0, i32 2
  %347 = load i8*, i8** %aptr625, align 8
  %348 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf626 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %348, i32 0, i32 21
  %arena627 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf626, i32 0, i32 0
  %349 = load i8*, i8** %arena627, align 8
  %sub.ptr.lhs.cast628 = ptrtoint i8* %347 to i64
  %sub.ptr.rhs.cast629 = ptrtoint i8* %349 to i64
  %sub.ptr.sub630 = sub i64 %sub.ptr.lhs.cast628, %sub.ptr.rhs.cast629
  %conv631 = trunc i64 %sub.ptr.sub630 to i32
  store i32 %conv631, i32* %offset623, align 4
  %350 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf632 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %350, i32 0, i32 21
  %arena633 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf632, i32 0, i32 0
  %351 = load i8*, i8** %arena633, align 8
  %352 = load i32, i32* %nsz615, align 4
  %conv634 = sext i32 %352 to i64
  %mul635 = mul i64 %conv634, 1
  %call636 = call i8* @Perl_safesysrealloc(i8* %351, i64 %mul635)
  %353 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf637 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %353, i32 0, i32 21
  %arena638 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf637, i32 0, i32 0
  store i8* %call636, i8** %arena638, align 8
  %354 = load i32, i32* %nsz615, align 4
  %conv639 = sext i32 %354 to i64
  %355 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf640 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %355, i32 0, i32 21
  %asiz641 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf640, i32 0, i32 1
  store i64 %conv639, i64* %asiz641, align 8
  %356 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf642 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %356, i32 0, i32 21
  %arena643 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf642, i32 0, i32 0
  %357 = load i8*, i8** %arena643, align 8
  %358 = load i32, i32* %offset623, align 4
  %idx.ext644 = sext i32 %358 to i64
  %add.ptr645 = getelementptr inbounds i8, i8* %357, i64 %idx.ext644
  %359 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf646 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %359, i32 0, i32 21
  %aptr647 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf646, i32 0, i32 2
  store i8* %add.ptr645, i8** %aptr647, align 8
  %360 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf649 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %360, i32 0, i32 21
  %arena650 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf649, i32 0, i32 0
  %361 = load i8*, i8** %arena650, align 8
  %362 = load i32, i32* %nsz615, align 4
  %idx.ext651 = sext i32 %362 to i64
  %add.ptr652 = getelementptr inbounds i8, i8* %361, i64 %idx.ext651
  %363 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf653 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %363, i32 0, i32 21
  %aend654 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf653, i32 0, i32 3
  store i8* %add.ptr652, i8** %aend654, align 8
  store i8* %add.ptr652, i8** %tmp648
  %364 = load i8*, i8** %tmp648
  br label %if.end.655

if.end.655:                                       ; preds = %if.then.613, %if.then.605
  %365 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf656 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %365, i32 0, i32 21
  %aptr657 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf656, i32 0, i32 2
  %366 = load i8*, i8** %aptr657, align 8
  %367 = ptrtoint i8* %366 to i64
  %368 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf658 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %368, i32 0, i32 21
  %aptr659 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf658, i32 0, i32 2
  %369 = load i8*, i8** %aptr659, align 8
  %370 = ptrtoint i8* %369 to i64
  %and660 = and i64 %370, -4
  %cmp661 = icmp eq i64 %367, %and660
  br i1 %cmp661, label %if.then.663, label %if.else.666

if.then.663:                                      ; preds = %if.end.655
  %371 = load i32, i32* %y599, align 4
  %372 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf664 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %372, i32 0, i32 21
  %aptr665 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf664, i32 0, i32 2
  %373 = load i8*, i8** %aptr665, align 8
  %374 = bitcast i8* %373 to i32*
  store i32 %371, i32* %374, align 4
  br label %if.end.669

if.else.666:                                      ; preds = %if.end.655
  %375 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf667 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %375, i32 0, i32 21
  %aptr668 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf667, i32 0, i32 2
  %376 = load i8*, i8** %aptr668, align 8
  %377 = bitcast i32* %y599 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %376, i8* %377, i64 4, i32 1, i1 false)
  br label %if.end.669

if.end.669:                                       ; preds = %if.else.666, %if.then.663
  %378 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf671 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %378, i32 0, i32 21
  %aptr672 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf671, i32 0, i32 2
  %379 = load i8*, i8** %aptr672, align 8
  %add.ptr673 = getelementptr inbounds i8, i8* %379, i64 4
  store i8* %add.ptr673, i8** %aptr672, align 8
  store i8* %add.ptr673, i8** %tmp670
  %380 = load i8*, i8** %tmp670
  br label %if.end.681

if.else.674:                                      ; preds = %if.then.597
  %381 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio675 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %381, i32 0, i32 23
  %382 = load %struct._PerlIO**, %struct._PerlIO*** %fio675, align 8
  %383 = bitcast i32* %y599 to i8*
  %call676 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %382, i8* %383, i64 4)
  %cmp677 = icmp ne i64 %call676, 4
  br i1 %cmp677, label %if.then.679, label %if.end.680

if.then.679:                                      ; preds = %if.else.674
  store i32 -1, i32* %retval
  br label %return

if.end.680:                                       ; preds = %if.else.674
  br label %if.end.681

if.end.681:                                       ; preds = %if.end.680, %if.end.669
  br label %if.end.762

if.else.682:                                      ; preds = %if.end.594
  %384 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio683 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %384, i32 0, i32 23
  %385 = load %struct._PerlIO**, %struct._PerlIO*** %fio683, align 8
  %tobool684 = icmp ne %struct._PerlIO** %385, null
  br i1 %tobool684, label %if.else.754, label %if.then.685

if.then.685:                                      ; preds = %if.else.682
  %386 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf686 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %386, i32 0, i32 21
  %aptr687 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf686, i32 0, i32 2
  %387 = load i8*, i8** %aptr687, align 8
  %add.ptr688 = getelementptr inbounds i8, i8* %387, i64 4
  %388 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf689 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %388, i32 0, i32 21
  %aend690 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf689, i32 0, i32 3
  %389 = load i8*, i8** %aend690, align 8
  %cmp691 = icmp ugt i8* %add.ptr688, %389
  br i1 %cmp691, label %if.then.693, label %if.end.735

if.then.693:                                      ; preds = %if.then.685
  %390 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf696 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %390, i32 0, i32 21
  %asiz697 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf696, i32 0, i32 1
  %391 = load i64, i64* %asiz697, align 8
  %add698 = add i64 4, %391
  %add699 = add i64 %add698, 8191
  %and700 = and i64 %add699, -8192
  %conv701 = trunc i64 %and700 to i32
  store i32 %conv701, i32* %nsz695, align 4
  %392 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf704 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %392, i32 0, i32 21
  %aptr705 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf704, i32 0, i32 2
  %393 = load i8*, i8** %aptr705, align 8
  %394 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf706 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %394, i32 0, i32 21
  %arena707 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf706, i32 0, i32 0
  %395 = load i8*, i8** %arena707, align 8
  %sub.ptr.lhs.cast708 = ptrtoint i8* %393 to i64
  %sub.ptr.rhs.cast709 = ptrtoint i8* %395 to i64
  %sub.ptr.sub710 = sub i64 %sub.ptr.lhs.cast708, %sub.ptr.rhs.cast709
  %conv711 = trunc i64 %sub.ptr.sub710 to i32
  store i32 %conv711, i32* %offset703, align 4
  %396 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf712 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %396, i32 0, i32 21
  %arena713 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf712, i32 0, i32 0
  %397 = load i8*, i8** %arena713, align 8
  %398 = load i32, i32* %nsz695, align 4
  %conv714 = sext i32 %398 to i64
  %mul715 = mul i64 %conv714, 1
  %call716 = call i8* @Perl_safesysrealloc(i8* %397, i64 %mul715)
  %399 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf717 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %399, i32 0, i32 21
  %arena718 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf717, i32 0, i32 0
  store i8* %call716, i8** %arena718, align 8
  %400 = load i32, i32* %nsz695, align 4
  %conv719 = sext i32 %400 to i64
  %401 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf720 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %401, i32 0, i32 21
  %asiz721 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf720, i32 0, i32 1
  store i64 %conv719, i64* %asiz721, align 8
  %402 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf722 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %402, i32 0, i32 21
  %arena723 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf722, i32 0, i32 0
  %403 = load i8*, i8** %arena723, align 8
  %404 = load i32, i32* %offset703, align 4
  %idx.ext724 = sext i32 %404 to i64
  %add.ptr725 = getelementptr inbounds i8, i8* %403, i64 %idx.ext724
  %405 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf726 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %405, i32 0, i32 21
  %aptr727 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf726, i32 0, i32 2
  store i8* %add.ptr725, i8** %aptr727, align 8
  %406 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf729 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %406, i32 0, i32 21
  %arena730 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf729, i32 0, i32 0
  %407 = load i8*, i8** %arena730, align 8
  %408 = load i32, i32* %nsz695, align 4
  %idx.ext731 = sext i32 %408 to i64
  %add.ptr732 = getelementptr inbounds i8, i8* %407, i64 %idx.ext731
  %409 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf733 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %409, i32 0, i32 21
  %aend734 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf733, i32 0, i32 3
  store i8* %add.ptr732, i8** %aend734, align 8
  store i8* %add.ptr732, i8** %tmp728
  %410 = load i8*, i8** %tmp728
  br label %if.end.735

if.end.735:                                       ; preds = %if.then.693, %if.then.685
  %411 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf736 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %411, i32 0, i32 21
  %aptr737 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf736, i32 0, i32 2
  %412 = load i8*, i8** %aptr737, align 8
  %413 = ptrtoint i8* %412 to i64
  %414 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf738 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %414, i32 0, i32 21
  %aptr739 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf738, i32 0, i32 2
  %415 = load i8*, i8** %aptr739, align 8
  %416 = ptrtoint i8* %415 to i64
  %and740 = and i64 %416, -4
  %cmp741 = icmp eq i64 %413, %and740
  br i1 %cmp741, label %if.then.743, label %if.else.746

if.then.743:                                      ; preds = %if.end.735
  %417 = load i32, i32* %keylen, align 4
  %418 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf744 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %418, i32 0, i32 21
  %aptr745 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf744, i32 0, i32 2
  %419 = load i8*, i8** %aptr745, align 8
  %420 = bitcast i8* %419 to i32*
  store i32 %417, i32* %420, align 4
  br label %if.end.749

if.else.746:                                      ; preds = %if.end.735
  %421 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf747 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %421, i32 0, i32 21
  %aptr748 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf747, i32 0, i32 2
  %422 = load i8*, i8** %aptr748, align 8
  %423 = bitcast i32* %keylen to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %422, i8* %423, i64 4, i32 1, i1 false)
  br label %if.end.749

if.end.749:                                       ; preds = %if.else.746, %if.then.743
  %424 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf751 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %424, i32 0, i32 21
  %aptr752 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf751, i32 0, i32 2
  %425 = load i8*, i8** %aptr752, align 8
  %add.ptr753 = getelementptr inbounds i8, i8* %425, i64 4
  store i8* %add.ptr753, i8** %aptr752, align 8
  store i8* %add.ptr753, i8** %tmp750
  %426 = load i8*, i8** %tmp750
  br label %if.end.761

if.else.754:                                      ; preds = %if.else.682
  %427 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio755 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %427, i32 0, i32 23
  %428 = load %struct._PerlIO**, %struct._PerlIO*** %fio755, align 8
  %429 = bitcast i32* %keylen to i8*
  %call756 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %428, i8* %429, i64 4)
  %cmp757 = icmp ne i64 %call756, 4
  br i1 %cmp757, label %if.then.759, label %if.end.760

if.then.759:                                      ; preds = %if.else.754
  store i32 -1, i32* %retval
  br label %return

if.end.760:                                       ; preds = %if.else.754
  br label %if.end.761

if.end.761:                                       ; preds = %if.end.760, %if.end.749
  br label %if.end.762

if.end.762:                                       ; preds = %if.end.761, %if.end.681
  %430 = load i32, i32* %keylen, align 4
  %tobool763 = icmp ne i32 %430, 0
  br i1 %tobool763, label %if.then.764, label %if.end.838

if.then.764:                                      ; preds = %if.end.762
  %431 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio765 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %431, i32 0, i32 23
  %432 = load %struct._PerlIO**, %struct._PerlIO*** %fio765, align 8
  %tobool766 = icmp ne %struct._PerlIO** %432, null
  br i1 %tobool766, label %if.else.828, label %if.then.767

if.then.767:                                      ; preds = %if.then.764
  %433 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf768 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %433, i32 0, i32 21
  %aptr769 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf768, i32 0, i32 2
  %434 = load i8*, i8** %aptr769, align 8
  %435 = load i32, i32* %keylen, align 4
  %idx.ext770 = sext i32 %435 to i64
  %add.ptr771 = getelementptr inbounds i8, i8* %434, i64 %idx.ext770
  %436 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf772 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %436, i32 0, i32 21
  %aend773 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf772, i32 0, i32 3
  %437 = load i8*, i8** %aend773, align 8
  %cmp774 = icmp ugt i8* %add.ptr771, %437
  br i1 %cmp774, label %if.then.776, label %if.end.819

if.then.776:                                      ; preds = %if.then.767
  %438 = load i32, i32* %keylen, align 4
  %conv779 = sext i32 %438 to i64
  %439 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf780 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %439, i32 0, i32 21
  %asiz781 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf780, i32 0, i32 1
  %440 = load i64, i64* %asiz781, align 8
  %add782 = add i64 %conv779, %440
  %add783 = add i64 %add782, 8191
  %and784 = and i64 %add783, -8192
  %conv785 = trunc i64 %and784 to i32
  store i32 %conv785, i32* %nsz778, align 4
  %441 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf788 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %441, i32 0, i32 21
  %aptr789 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf788, i32 0, i32 2
  %442 = load i8*, i8** %aptr789, align 8
  %443 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf790 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %443, i32 0, i32 21
  %arena791 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf790, i32 0, i32 0
  %444 = load i8*, i8** %arena791, align 8
  %sub.ptr.lhs.cast792 = ptrtoint i8* %442 to i64
  %sub.ptr.rhs.cast793 = ptrtoint i8* %444 to i64
  %sub.ptr.sub794 = sub i64 %sub.ptr.lhs.cast792, %sub.ptr.rhs.cast793
  %conv795 = trunc i64 %sub.ptr.sub794 to i32
  store i32 %conv795, i32* %offset787, align 4
  %445 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf796 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %445, i32 0, i32 21
  %arena797 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf796, i32 0, i32 0
  %446 = load i8*, i8** %arena797, align 8
  %447 = load i32, i32* %nsz778, align 4
  %conv798 = sext i32 %447 to i64
  %mul799 = mul i64 %conv798, 1
  %call800 = call i8* @Perl_safesysrealloc(i8* %446, i64 %mul799)
  %448 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf801 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %448, i32 0, i32 21
  %arena802 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf801, i32 0, i32 0
  store i8* %call800, i8** %arena802, align 8
  %449 = load i32, i32* %nsz778, align 4
  %conv803 = sext i32 %449 to i64
  %450 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf804 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %450, i32 0, i32 21
  %asiz805 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf804, i32 0, i32 1
  store i64 %conv803, i64* %asiz805, align 8
  %451 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf806 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %451, i32 0, i32 21
  %arena807 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf806, i32 0, i32 0
  %452 = load i8*, i8** %arena807, align 8
  %453 = load i32, i32* %offset787, align 4
  %idx.ext808 = sext i32 %453 to i64
  %add.ptr809 = getelementptr inbounds i8, i8* %452, i64 %idx.ext808
  %454 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf810 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %454, i32 0, i32 21
  %aptr811 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf810, i32 0, i32 2
  store i8* %add.ptr809, i8** %aptr811, align 8
  %455 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf813 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %455, i32 0, i32 21
  %arena814 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf813, i32 0, i32 0
  %456 = load i8*, i8** %arena814, align 8
  %457 = load i32, i32* %nsz778, align 4
  %idx.ext815 = sext i32 %457 to i64
  %add.ptr816 = getelementptr inbounds i8, i8* %456, i64 %idx.ext815
  %458 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf817 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %458, i32 0, i32 21
  %aend818 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf817, i32 0, i32 3
  store i8* %add.ptr816, i8** %aend818, align 8
  store i8* %add.ptr816, i8** %tmp812
  %459 = load i8*, i8** %tmp812
  br label %if.end.819

if.end.819:                                       ; preds = %if.then.776, %if.then.767
  %460 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf820 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %460, i32 0, i32 21
  %aptr821 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf820, i32 0, i32 2
  %461 = load i8*, i8** %aptr821, align 8
  %462 = load i8*, i8** %keyval, align 8
  %463 = load i32, i32* %keylen, align 4
  %conv822 = sext i32 %463 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %461, i8* %462, i64 %conv822, i32 1, i1 false)
  %464 = load i32, i32* %keylen, align 4
  %465 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf824 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %465, i32 0, i32 21
  %aptr825 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf824, i32 0, i32 2
  %466 = load i8*, i8** %aptr825, align 8
  %idx.ext826 = sext i32 %464 to i64
  %add.ptr827 = getelementptr inbounds i8, i8* %466, i64 %idx.ext826
  store i8* %add.ptr827, i8** %aptr825, align 8
  store i8* %add.ptr827, i8** %tmp823
  %467 = load i8*, i8** %tmp823
  br label %if.end.837

if.else.828:                                      ; preds = %if.then.764
  %468 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio829 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %468, i32 0, i32 23
  %469 = load %struct._PerlIO**, %struct._PerlIO*** %fio829, align 8
  %470 = load i8*, i8** %keyval, align 8
  %471 = load i32, i32* %keylen, align 4
  %conv830 = sext i32 %471 to i64
  %call831 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %469, i8* %470, i64 %conv830)
  %472 = load i32, i32* %keylen, align 4
  %conv832 = sext i32 %472 to i64
  %cmp833 = icmp ne i64 %call831, %conv832
  br i1 %cmp833, label %if.then.835, label %if.end.836

if.then.835:                                      ; preds = %if.else.828
  store i32 -1, i32* %retval
  br label %return

if.end.836:                                       ; preds = %if.else.828
  br label %if.end.837

if.end.837:                                       ; preds = %if.end.836, %if.end.819
  br label %if.end.838

if.end.838:                                       ; preds = %if.end.837, %if.end.762
  %473 = load i8, i8* %flags, align 1
  %conv839 = zext i8 %473 to i32
  %and840 = and i32 %conv839, 2
  %tobool841 = icmp ne i32 %and840, 0
  br i1 %tobool841, label %if.then.842, label %if.end.843

if.then.842:                                      ; preds = %if.end.838
  %474 = load i8*, i8** %keyval, align 8
  call void @Perl_safesysfree(i8* %474)
  br label %if.end.843

if.end.843:                                       ; preds = %if.then.842, %if.end.838
  br label %for.inc.844

for.inc.844:                                      ; preds = %if.end.843
  %475 = load i32, i32* %i, align 4
  %inc845 = add nsw i32 %475, 1
  store i32 %inc845, i32* %i, align 4
  br label %for.cond.444

for.end.846:                                      ; preds = %for.cond.444
  %476 = load %struct.av*, %struct.av** %av, align 8
  call void @Perl_av_undef(%struct.av* %476)
  %477 = load %struct.av*, %struct.av** %av, align 8
  %478 = bitcast %struct.av* %477 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %478)
  br label %if.end.1261

if.else.847:                                      ; preds = %cond.end.423, %lor.lhs.false, %if.end.360
  store i32 0, i32* %i, align 4
  br label %for.cond.848

for.cond.848:                                     ; preds = %for.inc.1258, %if.else.847
  %479 = load i32, i32* %i, align 4
  %480 = load i32, i32* %len, align 4
  %cmp849 = icmp slt i32 %479, %480
  br i1 %cmp849, label %for.body.851, label %for.end.1260

for.body.851:                                     ; preds = %for.cond.848
  %481 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %call860 = call %struct.he* @Perl_hv_iternext_flags(%struct.hv* %481, i32 1)
  store %struct.he* %call860, %struct.he** %he859, align 8
  %482 = load %struct.he*, %struct.he** %he859, align 8
  %tobool863 = icmp ne %struct.he* %482, null
  br i1 %tobool863, label %cond.true.864, label %cond.false.866

cond.true.864:                                    ; preds = %for.body.851
  %483 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %484 = load %struct.he*, %struct.he** %he859, align 8
  %call865 = call %struct.sv* @Perl_hv_iterval(%struct.hv* %483, %struct.he* %484)
  br label %cond.end.867

cond.false.866:                                   ; preds = %for.body.851
  br label %cond.end.867

cond.end.867:                                     ; preds = %cond.false.866, %cond.true.864
  %cond868 = phi %struct.sv* [ %call865, %cond.true.864 ], [ null, %cond.false.866 ]
  store %struct.sv* %cond868, %struct.sv** %val862, align 8
  store %struct.sv* null, %struct.sv** %key_sv, align 8
  %485 = load %struct.sv*, %struct.sv** %val862, align 8
  %cmp871 = icmp eq %struct.sv* %485, null
  br i1 %cmp871, label %if.then.873, label %if.end.874

if.then.873:                                      ; preds = %cond.end.867
  store i32 1, i32* %retval
  br label %return

if.end.874:                                       ; preds = %cond.end.867
  %486 = load i8, i8* %hash_flags, align 1
  %conv875 = zext i8 %486 to i32
  %and876 = and i32 %conv875, 1
  %tobool877 = icmp ne i32 %and876, 0
  br i1 %tobool877, label %land.rhs.878, label %land.end.882

land.rhs.878:                                     ; preds = %if.end.874
  %487 = load %struct.sv*, %struct.sv** %val862, align 8
  %sv_flags879 = getelementptr inbounds %struct.sv, %struct.sv* %487, i32 0, i32 2
  %488 = load i32, i32* %sv_flags879, align 4
  %and880 = and i32 %488, 8388608
  %tobool881 = icmp ne i32 %and880, 0
  br label %land.end.882

land.end.882:                                     ; preds = %land.rhs.878, %if.end.874
  %489 = phi i1 [ false, %if.end.874 ], [ %tobool881, %land.rhs.878 ]
  %cond883 = select i1 %489, i32 4, i32 0
  %conv884 = trunc i32 %cond883 to i8
  store i8 %conv884, i8* %flags857, align 1
  %490 = load %struct.sv*, %struct.sv** %val862, align 8
  %cmp885 = icmp eq %struct.sv* %490, @PL_sv_placeholder
  br i1 %cmp885, label %if.then.887, label %if.end.891

if.then.887:                                      ; preds = %land.end.882
  %491 = load i8, i8* %flags857, align 1
  %conv888 = zext i8 %491 to i32
  %or889 = or i32 %conv888, 16
  %conv890 = trunc i32 %or889 to i8
  store i8 %conv890, i8* %flags857, align 1
  store %struct.sv* @PL_sv_undef, %struct.sv** %val862, align 8
  br label %if.end.891

if.end.891:                                       ; preds = %if.then.887, %land.end.882
  %492 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %493 = load %struct.sv*, %struct.sv** %val862, align 8
  %call892 = call i32 @store(%struct.stcxt* %492, %struct.sv* %493)
  store i32 %call892, i32* %ret, align 4
  %tobool893 = icmp ne i32 %call892, 0
  br i1 %tobool893, label %if.then.894, label %if.end.895

if.then.894:                                      ; preds = %if.end.891
  br label %out

if.end.895:                                       ; preds = %if.end.891
  %494 = load %struct.he*, %struct.he** %he859, align 8
  %hent_hek = getelementptr inbounds %struct.he, %struct.he* %494, i32 0, i32 1
  %495 = load %struct.hek*, %struct.hek** %hent_hek, align 8
  store %struct.hek* %495, %struct.hek** %hek, align 8
  %496 = load %struct.hek*, %struct.hek** %hek, align 8
  %hek_len = getelementptr inbounds %struct.hek, %struct.hek* %496, i32 0, i32 1
  %497 = load i32, i32* %hek_len, align 4
  store i32 %497, i32* %len855, align 4
  %498 = load i32, i32* %len855, align 4
  %cmp896 = icmp eq i32 %498, -2
  br i1 %cmp896, label %if.then.898, label %if.else.903

if.then.898:                                      ; preds = %if.end.895
  %499 = load %struct.he*, %struct.he** %he859, align 8
  %hent_hek899 = getelementptr inbounds %struct.he, %struct.he* %499, i32 0, i32 1
  %500 = load %struct.hek*, %struct.hek** %hent_hek899, align 8
  %hek_key = getelementptr inbounds %struct.hek, %struct.hek* %500, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key, i32 0, i32 0
  %501 = bitcast i8* %arraydecay to %struct.sv**
  %502 = load %struct.sv*, %struct.sv** %501, align 8
  store %struct.sv* %502, %struct.sv** %key_sv, align 8
  %503 = load i8, i8* %flags857, align 1
  %conv900 = zext i8 %503 to i32
  %or901 = or i32 %conv900, 8
  %conv902 = trunc i32 %or901 to i8
  store i8 %conv902, i8* %flags857, align 1
  br label %if.end.934

if.else.903:                                      ; preds = %if.end.895
  %504 = load %struct.hek*, %struct.hek** %hek, align 8
  %hek_key904 = getelementptr inbounds %struct.hek, %struct.hek* %504, i32 0, i32 2
  %arraydecay905 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key904, i32 0, i32 0
  %505 = load %struct.hek*, %struct.hek** %hek, align 8
  %hek_len906 = getelementptr inbounds %struct.hek, %struct.hek* %505, i32 0, i32 1
  %506 = load i32, i32* %hek_len906, align 4
  %idx.ext907 = sext i32 %506 to i64
  %add.ptr908 = getelementptr inbounds i8, i8* %arraydecay905, i64 %idx.ext907
  %add.ptr909 = getelementptr inbounds i8, i8* %add.ptr908, i64 1
  %507 = load i8, i8* %add.ptr909, align 1
  %conv910 = zext i8 %507 to i32
  %and911 = and i32 %conv910, 1
  %tobool912 = icmp ne i32 %and911, 0
  br i1 %tobool912, label %if.then.913, label %if.end.917

if.then.913:                                      ; preds = %if.else.903
  %508 = load i8, i8* %flags857, align 1
  %conv914 = zext i8 %508 to i32
  %or915 = or i32 %conv914, 1
  %conv916 = trunc i32 %or915 to i8
  store i8 %conv916, i8* %flags857, align 1
  br label %if.end.917

if.end.917:                                       ; preds = %if.then.913, %if.else.903
  %509 = load %struct.hek*, %struct.hek** %hek, align 8
  %hek_key918 = getelementptr inbounds %struct.hek, %struct.hek* %509, i32 0, i32 2
  %arraydecay919 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key918, i32 0, i32 0
  %510 = load %struct.hek*, %struct.hek** %hek, align 8
  %hek_len920 = getelementptr inbounds %struct.hek, %struct.hek* %510, i32 0, i32 1
  %511 = load i32, i32* %hek_len920, align 4
  %idx.ext921 = sext i32 %511 to i64
  %add.ptr922 = getelementptr inbounds i8, i8* %arraydecay919, i64 %idx.ext921
  %add.ptr923 = getelementptr inbounds i8, i8* %add.ptr922, i64 1
  %512 = load i8, i8* %add.ptr923, align 1
  %conv924 = zext i8 %512 to i32
  %and925 = and i32 %conv924, 2
  %tobool926 = icmp ne i32 %and925, 0
  br i1 %tobool926, label %if.then.927, label %if.end.931

if.then.927:                                      ; preds = %if.end.917
  %513 = load i8, i8* %flags857, align 1
  %conv928 = zext i8 %513 to i32
  %or929 = or i32 %conv928, 2
  %conv930 = trunc i32 %or929 to i8
  store i8 %conv930, i8* %flags857, align 1
  br label %if.end.931

if.end.931:                                       ; preds = %if.then.927, %if.end.917
  %514 = load %struct.hek*, %struct.hek** %hek, align 8
  %hek_key932 = getelementptr inbounds %struct.hek, %struct.hek* %514, i32 0, i32 2
  %arraydecay933 = getelementptr inbounds [1 x i8], [1 x i8]* %hek_key932, i32 0, i32 0
  store i8* %arraydecay933, i8** %key853, align 8
  br label %if.end.934

if.end.934:                                       ; preds = %if.end.931, %if.then.898
  %515 = load i32, i32* %flagged_hash, align 4
  %tobool935 = icmp ne i32 %515, 0
  br i1 %tobool935, label %if.then.936, label %if.else.1005

if.then.936:                                      ; preds = %if.end.934
  %516 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio937 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %516, i32 0, i32 23
  %517 = load %struct._PerlIO**, %struct._PerlIO*** %fio937, align 8
  %tobool938 = icmp ne %struct._PerlIO** %517, null
  br i1 %tobool938, label %if.else.996, label %if.then.939

if.then.939:                                      ; preds = %if.then.936
  %518 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf940 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %518, i32 0, i32 21
  %aptr941 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf940, i32 0, i32 2
  %519 = load i8*, i8** %aptr941, align 8
  %520 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf942 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %520, i32 0, i32 21
  %aend943 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf942, i32 0, i32 3
  %521 = load i8*, i8** %aend943, align 8
  %cmp944 = icmp ult i8* %519, %521
  br i1 %cmp944, label %if.then.946, label %if.else.950

if.then.946:                                      ; preds = %if.then.939
  %522 = load i8, i8* %flags857, align 1
  %523 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf947 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %523, i32 0, i32 21
  %aptr948 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf947, i32 0, i32 2
  %524 = load i8*, i8** %aptr948, align 8
  %incdec.ptr949 = getelementptr inbounds i8, i8* %524, i32 1
  store i8* %incdec.ptr949, i8** %aptr948, align 8
  store i8 %522, i8* %524, align 1
  br label %if.end.995

if.else.950:                                      ; preds = %if.then.939
  %525 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf953 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %525, i32 0, i32 21
  %asiz954 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf953, i32 0, i32 1
  %526 = load i64, i64* %asiz954, align 8
  %add955 = add i64 1, %526
  %add956 = add i64 %add955, 8191
  %and957 = and i64 %add956, -8192
  %conv958 = trunc i64 %and957 to i32
  store i32 %conv958, i32* %nsz952, align 4
  %527 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf961 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %527, i32 0, i32 21
  %aptr962 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf961, i32 0, i32 2
  %528 = load i8*, i8** %aptr962, align 8
  %529 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf963 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %529, i32 0, i32 21
  %arena964 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf963, i32 0, i32 0
  %530 = load i8*, i8** %arena964, align 8
  %sub.ptr.lhs.cast965 = ptrtoint i8* %528 to i64
  %sub.ptr.rhs.cast966 = ptrtoint i8* %530 to i64
  %sub.ptr.sub967 = sub i64 %sub.ptr.lhs.cast965, %sub.ptr.rhs.cast966
  %conv968 = trunc i64 %sub.ptr.sub967 to i32
  store i32 %conv968, i32* %offset960, align 4
  %531 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf969 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %531, i32 0, i32 21
  %arena970 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf969, i32 0, i32 0
  %532 = load i8*, i8** %arena970, align 8
  %533 = load i32, i32* %nsz952, align 4
  %conv971 = sext i32 %533 to i64
  %mul972 = mul i64 %conv971, 1
  %call973 = call i8* @Perl_safesysrealloc(i8* %532, i64 %mul972)
  %534 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf974 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %534, i32 0, i32 21
  %arena975 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf974, i32 0, i32 0
  store i8* %call973, i8** %arena975, align 8
  %535 = load i32, i32* %nsz952, align 4
  %conv976 = sext i32 %535 to i64
  %536 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf977 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %536, i32 0, i32 21
  %asiz978 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf977, i32 0, i32 1
  store i64 %conv976, i64* %asiz978, align 8
  %537 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf979 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %537, i32 0, i32 21
  %arena980 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf979, i32 0, i32 0
  %538 = load i8*, i8** %arena980, align 8
  %539 = load i32, i32* %offset960, align 4
  %idx.ext981 = sext i32 %539 to i64
  %add.ptr982 = getelementptr inbounds i8, i8* %538, i64 %idx.ext981
  %540 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf983 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %540, i32 0, i32 21
  %aptr984 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf983, i32 0, i32 2
  store i8* %add.ptr982, i8** %aptr984, align 8
  %541 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf986 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %541, i32 0, i32 21
  %arena987 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf986, i32 0, i32 0
  %542 = load i8*, i8** %arena987, align 8
  %543 = load i32, i32* %nsz952, align 4
  %idx.ext988 = sext i32 %543 to i64
  %add.ptr989 = getelementptr inbounds i8, i8* %542, i64 %idx.ext988
  %544 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf990 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %544, i32 0, i32 21
  %aend991 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf990, i32 0, i32 3
  store i8* %add.ptr989, i8** %aend991, align 8
  store i8* %add.ptr989, i8** %tmp985
  %545 = load i8*, i8** %tmp985
  %546 = load i8, i8* %flags857, align 1
  %547 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf992 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %547, i32 0, i32 21
  %aptr993 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf992, i32 0, i32 2
  %548 = load i8*, i8** %aptr993, align 8
  %incdec.ptr994 = getelementptr inbounds i8, i8* %548, i32 1
  store i8* %incdec.ptr994, i8** %aptr993, align 8
  store i8 %546, i8* %548, align 1
  br label %if.end.995

if.end.995:                                       ; preds = %if.else.950, %if.then.946
  br label %if.end.1004

if.else.996:                                      ; preds = %if.then.936
  %549 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio997 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %549, i32 0, i32 23
  %550 = load %struct._PerlIO**, %struct._PerlIO*** %fio997, align 8
  %551 = load i8, i8* %flags857, align 1
  %conv998 = zext i8 %551 to i32
  %call999 = call i32 @PerlIO_putc(%struct._PerlIO** %550, i32 %conv998)
  %cmp1000 = icmp eq i32 %call999, -1
  br i1 %cmp1000, label %if.then.1002, label %if.end.1003

if.then.1002:                                     ; preds = %if.else.996
  store i32 -1, i32* %retval
  br label %return

if.end.1003:                                      ; preds = %if.else.996
  br label %if.end.1004

if.end.1004:                                      ; preds = %if.end.1003, %if.end.995
  br label %if.end.1006

if.else.1005:                                     ; preds = %if.end.934
  br label %if.end.1006

if.end.1006:                                      ; preds = %if.else.1005, %if.end.1004
  %552 = load i8, i8* %flags857, align 1
  %conv1007 = zext i8 %552 to i32
  %and1008 = and i32 %conv1007, 8
  %tobool1009 = icmp ne i32 %and1008, 0
  br i1 %tobool1009, label %if.then.1010, label %if.else.1012

if.then.1010:                                     ; preds = %if.end.1006
  %553 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %554 = load %struct.sv*, %struct.sv** %key_sv, align 8
  %call1011 = call i32 @store(%struct.stcxt* %553, %struct.sv* %554)
  br label %if.end.1257

if.else.1012:                                     ; preds = %if.end.1006
  %555 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder1013 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %555, i32 0, i32 11
  %556 = load i32, i32* %netorder1013, align 4
  %tobool1014 = icmp ne i32 %556, 0
  br i1 %tobool1014, label %if.then.1015, label %if.else.1100

if.then.1015:                                     ; preds = %if.else.1012
  %557 = load i32, i32* %len855, align 4
  %conv1018 = sext i32 %557 to i64
  %call1019 = call i64 @Perl_my_htonl(i64 %conv1018)
  %conv1020 = trunc i64 %call1019 to i32
  store i32 %conv1020, i32* %y1017, align 4
  %558 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1021 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %558, i32 0, i32 23
  %559 = load %struct._PerlIO**, %struct._PerlIO*** %fio1021, align 8
  %tobool1022 = icmp ne %struct._PerlIO** %559, null
  br i1 %tobool1022, label %if.else.1092, label %if.then.1023

if.then.1023:                                     ; preds = %if.then.1015
  %560 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1024 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %560, i32 0, i32 21
  %aptr1025 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1024, i32 0, i32 2
  %561 = load i8*, i8** %aptr1025, align 8
  %add.ptr1026 = getelementptr inbounds i8, i8* %561, i64 4
  %562 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1027 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %562, i32 0, i32 21
  %aend1028 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1027, i32 0, i32 3
  %563 = load i8*, i8** %aend1028, align 8
  %cmp1029 = icmp ugt i8* %add.ptr1026, %563
  br i1 %cmp1029, label %if.then.1031, label %if.end.1073

if.then.1031:                                     ; preds = %if.then.1023
  %564 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1034 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %564, i32 0, i32 21
  %asiz1035 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1034, i32 0, i32 1
  %565 = load i64, i64* %asiz1035, align 8
  %add1036 = add i64 4, %565
  %add1037 = add i64 %add1036, 8191
  %and1038 = and i64 %add1037, -8192
  %conv1039 = trunc i64 %and1038 to i32
  store i32 %conv1039, i32* %nsz1033, align 4
  %566 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1042 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %566, i32 0, i32 21
  %aptr1043 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1042, i32 0, i32 2
  %567 = load i8*, i8** %aptr1043, align 8
  %568 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1044 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %568, i32 0, i32 21
  %arena1045 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1044, i32 0, i32 0
  %569 = load i8*, i8** %arena1045, align 8
  %sub.ptr.lhs.cast1046 = ptrtoint i8* %567 to i64
  %sub.ptr.rhs.cast1047 = ptrtoint i8* %569 to i64
  %sub.ptr.sub1048 = sub i64 %sub.ptr.lhs.cast1046, %sub.ptr.rhs.cast1047
  %conv1049 = trunc i64 %sub.ptr.sub1048 to i32
  store i32 %conv1049, i32* %offset1041, align 4
  %570 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1050 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %570, i32 0, i32 21
  %arena1051 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1050, i32 0, i32 0
  %571 = load i8*, i8** %arena1051, align 8
  %572 = load i32, i32* %nsz1033, align 4
  %conv1052 = sext i32 %572 to i64
  %mul1053 = mul i64 %conv1052, 1
  %call1054 = call i8* @Perl_safesysrealloc(i8* %571, i64 %mul1053)
  %573 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1055 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %573, i32 0, i32 21
  %arena1056 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1055, i32 0, i32 0
  store i8* %call1054, i8** %arena1056, align 8
  %574 = load i32, i32* %nsz1033, align 4
  %conv1057 = sext i32 %574 to i64
  %575 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1058 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %575, i32 0, i32 21
  %asiz1059 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1058, i32 0, i32 1
  store i64 %conv1057, i64* %asiz1059, align 8
  %576 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1060 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %576, i32 0, i32 21
  %arena1061 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1060, i32 0, i32 0
  %577 = load i8*, i8** %arena1061, align 8
  %578 = load i32, i32* %offset1041, align 4
  %idx.ext1062 = sext i32 %578 to i64
  %add.ptr1063 = getelementptr inbounds i8, i8* %577, i64 %idx.ext1062
  %579 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1064 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %579, i32 0, i32 21
  %aptr1065 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1064, i32 0, i32 2
  store i8* %add.ptr1063, i8** %aptr1065, align 8
  %580 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1067 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %580, i32 0, i32 21
  %arena1068 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1067, i32 0, i32 0
  %581 = load i8*, i8** %arena1068, align 8
  %582 = load i32, i32* %nsz1033, align 4
  %idx.ext1069 = sext i32 %582 to i64
  %add.ptr1070 = getelementptr inbounds i8, i8* %581, i64 %idx.ext1069
  %583 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1071 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %583, i32 0, i32 21
  %aend1072 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1071, i32 0, i32 3
  store i8* %add.ptr1070, i8** %aend1072, align 8
  store i8* %add.ptr1070, i8** %tmp1066
  %584 = load i8*, i8** %tmp1066
  br label %if.end.1073

if.end.1073:                                      ; preds = %if.then.1031, %if.then.1023
  %585 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1074 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %585, i32 0, i32 21
  %aptr1075 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1074, i32 0, i32 2
  %586 = load i8*, i8** %aptr1075, align 8
  %587 = ptrtoint i8* %586 to i64
  %588 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1076 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %588, i32 0, i32 21
  %aptr1077 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1076, i32 0, i32 2
  %589 = load i8*, i8** %aptr1077, align 8
  %590 = ptrtoint i8* %589 to i64
  %and1078 = and i64 %590, -4
  %cmp1079 = icmp eq i64 %587, %and1078
  br i1 %cmp1079, label %if.then.1081, label %if.else.1084

if.then.1081:                                     ; preds = %if.end.1073
  %591 = load i32, i32* %y1017, align 4
  %592 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1082 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %592, i32 0, i32 21
  %aptr1083 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1082, i32 0, i32 2
  %593 = load i8*, i8** %aptr1083, align 8
  %594 = bitcast i8* %593 to i32*
  store i32 %591, i32* %594, align 4
  br label %if.end.1087

if.else.1084:                                     ; preds = %if.end.1073
  %595 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1085 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %595, i32 0, i32 21
  %aptr1086 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1085, i32 0, i32 2
  %596 = load i8*, i8** %aptr1086, align 8
  %597 = bitcast i32* %y1017 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %596, i8* %597, i64 4, i32 1, i1 false)
  br label %if.end.1087

if.end.1087:                                      ; preds = %if.else.1084, %if.then.1081
  %598 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1089 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %598, i32 0, i32 21
  %aptr1090 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1089, i32 0, i32 2
  %599 = load i8*, i8** %aptr1090, align 8
  %add.ptr1091 = getelementptr inbounds i8, i8* %599, i64 4
  store i8* %add.ptr1091, i8** %aptr1090, align 8
  store i8* %add.ptr1091, i8** %tmp1088
  %600 = load i8*, i8** %tmp1088
  br label %if.end.1099

if.else.1092:                                     ; preds = %if.then.1015
  %601 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1093 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %601, i32 0, i32 23
  %602 = load %struct._PerlIO**, %struct._PerlIO*** %fio1093, align 8
  %603 = bitcast i32* %y1017 to i8*
  %call1094 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %602, i8* %603, i64 4)
  %cmp1095 = icmp ne i64 %call1094, 4
  br i1 %cmp1095, label %if.then.1097, label %if.end.1098

if.then.1097:                                     ; preds = %if.else.1092
  store i32 -1, i32* %retval
  br label %return

if.end.1098:                                      ; preds = %if.else.1092
  br label %if.end.1099

if.end.1099:                                      ; preds = %if.end.1098, %if.end.1087
  br label %if.end.1180

if.else.1100:                                     ; preds = %if.else.1012
  %604 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1101 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %604, i32 0, i32 23
  %605 = load %struct._PerlIO**, %struct._PerlIO*** %fio1101, align 8
  %tobool1102 = icmp ne %struct._PerlIO** %605, null
  br i1 %tobool1102, label %if.else.1172, label %if.then.1103

if.then.1103:                                     ; preds = %if.else.1100
  %606 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1104 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %606, i32 0, i32 21
  %aptr1105 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1104, i32 0, i32 2
  %607 = load i8*, i8** %aptr1105, align 8
  %add.ptr1106 = getelementptr inbounds i8, i8* %607, i64 4
  %608 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1107 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %608, i32 0, i32 21
  %aend1108 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1107, i32 0, i32 3
  %609 = load i8*, i8** %aend1108, align 8
  %cmp1109 = icmp ugt i8* %add.ptr1106, %609
  br i1 %cmp1109, label %if.then.1111, label %if.end.1153

if.then.1111:                                     ; preds = %if.then.1103
  %610 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1114 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %610, i32 0, i32 21
  %asiz1115 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1114, i32 0, i32 1
  %611 = load i64, i64* %asiz1115, align 8
  %add1116 = add i64 4, %611
  %add1117 = add i64 %add1116, 8191
  %and1118 = and i64 %add1117, -8192
  %conv1119 = trunc i64 %and1118 to i32
  store i32 %conv1119, i32* %nsz1113, align 4
  %612 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1122 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %612, i32 0, i32 21
  %aptr1123 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1122, i32 0, i32 2
  %613 = load i8*, i8** %aptr1123, align 8
  %614 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1124 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %614, i32 0, i32 21
  %arena1125 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1124, i32 0, i32 0
  %615 = load i8*, i8** %arena1125, align 8
  %sub.ptr.lhs.cast1126 = ptrtoint i8* %613 to i64
  %sub.ptr.rhs.cast1127 = ptrtoint i8* %615 to i64
  %sub.ptr.sub1128 = sub i64 %sub.ptr.lhs.cast1126, %sub.ptr.rhs.cast1127
  %conv1129 = trunc i64 %sub.ptr.sub1128 to i32
  store i32 %conv1129, i32* %offset1121, align 4
  %616 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1130 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %616, i32 0, i32 21
  %arena1131 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1130, i32 0, i32 0
  %617 = load i8*, i8** %arena1131, align 8
  %618 = load i32, i32* %nsz1113, align 4
  %conv1132 = sext i32 %618 to i64
  %mul1133 = mul i64 %conv1132, 1
  %call1134 = call i8* @Perl_safesysrealloc(i8* %617, i64 %mul1133)
  %619 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1135 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %619, i32 0, i32 21
  %arena1136 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1135, i32 0, i32 0
  store i8* %call1134, i8** %arena1136, align 8
  %620 = load i32, i32* %nsz1113, align 4
  %conv1137 = sext i32 %620 to i64
  %621 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1138 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %621, i32 0, i32 21
  %asiz1139 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1138, i32 0, i32 1
  store i64 %conv1137, i64* %asiz1139, align 8
  %622 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1140 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %622, i32 0, i32 21
  %arena1141 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1140, i32 0, i32 0
  %623 = load i8*, i8** %arena1141, align 8
  %624 = load i32, i32* %offset1121, align 4
  %idx.ext1142 = sext i32 %624 to i64
  %add.ptr1143 = getelementptr inbounds i8, i8* %623, i64 %idx.ext1142
  %625 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1144 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %625, i32 0, i32 21
  %aptr1145 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1144, i32 0, i32 2
  store i8* %add.ptr1143, i8** %aptr1145, align 8
  %626 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1147 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %626, i32 0, i32 21
  %arena1148 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1147, i32 0, i32 0
  %627 = load i8*, i8** %arena1148, align 8
  %628 = load i32, i32* %nsz1113, align 4
  %idx.ext1149 = sext i32 %628 to i64
  %add.ptr1150 = getelementptr inbounds i8, i8* %627, i64 %idx.ext1149
  %629 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1151 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %629, i32 0, i32 21
  %aend1152 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1151, i32 0, i32 3
  store i8* %add.ptr1150, i8** %aend1152, align 8
  store i8* %add.ptr1150, i8** %tmp1146
  %630 = load i8*, i8** %tmp1146
  br label %if.end.1153

if.end.1153:                                      ; preds = %if.then.1111, %if.then.1103
  %631 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1154 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %631, i32 0, i32 21
  %aptr1155 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1154, i32 0, i32 2
  %632 = load i8*, i8** %aptr1155, align 8
  %633 = ptrtoint i8* %632 to i64
  %634 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1156 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %634, i32 0, i32 21
  %aptr1157 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1156, i32 0, i32 2
  %635 = load i8*, i8** %aptr1157, align 8
  %636 = ptrtoint i8* %635 to i64
  %and1158 = and i64 %636, -4
  %cmp1159 = icmp eq i64 %633, %and1158
  br i1 %cmp1159, label %if.then.1161, label %if.else.1164

if.then.1161:                                     ; preds = %if.end.1153
  %637 = load i32, i32* %len855, align 4
  %638 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1162 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %638, i32 0, i32 21
  %aptr1163 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1162, i32 0, i32 2
  %639 = load i8*, i8** %aptr1163, align 8
  %640 = bitcast i8* %639 to i32*
  store i32 %637, i32* %640, align 4
  br label %if.end.1167

if.else.1164:                                     ; preds = %if.end.1153
  %641 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1165 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %641, i32 0, i32 21
  %aptr1166 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1165, i32 0, i32 2
  %642 = load i8*, i8** %aptr1166, align 8
  %643 = bitcast i32* %len855 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %642, i8* %643, i64 4, i32 1, i1 false)
  br label %if.end.1167

if.end.1167:                                      ; preds = %if.else.1164, %if.then.1161
  %644 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1169 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %644, i32 0, i32 21
  %aptr1170 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1169, i32 0, i32 2
  %645 = load i8*, i8** %aptr1170, align 8
  %add.ptr1171 = getelementptr inbounds i8, i8* %645, i64 4
  store i8* %add.ptr1171, i8** %aptr1170, align 8
  store i8* %add.ptr1171, i8** %tmp1168
  %646 = load i8*, i8** %tmp1168
  br label %if.end.1179

if.else.1172:                                     ; preds = %if.else.1100
  %647 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1173 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %647, i32 0, i32 23
  %648 = load %struct._PerlIO**, %struct._PerlIO*** %fio1173, align 8
  %649 = bitcast i32* %len855 to i8*
  %call1174 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %648, i8* %649, i64 4)
  %cmp1175 = icmp ne i64 %call1174, 4
  br i1 %cmp1175, label %if.then.1177, label %if.end.1178

if.then.1177:                                     ; preds = %if.else.1172
  store i32 -1, i32* %retval
  br label %return

if.end.1178:                                      ; preds = %if.else.1172
  br label %if.end.1179

if.end.1179:                                      ; preds = %if.end.1178, %if.end.1167
  br label %if.end.1180

if.end.1180:                                      ; preds = %if.end.1179, %if.end.1099
  %650 = load i32, i32* %len855, align 4
  %tobool1181 = icmp ne i32 %650, 0
  br i1 %tobool1181, label %if.then.1182, label %if.end.1256

if.then.1182:                                     ; preds = %if.end.1180
  %651 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1183 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %651, i32 0, i32 23
  %652 = load %struct._PerlIO**, %struct._PerlIO*** %fio1183, align 8
  %tobool1184 = icmp ne %struct._PerlIO** %652, null
  br i1 %tobool1184, label %if.else.1246, label %if.then.1185

if.then.1185:                                     ; preds = %if.then.1182
  %653 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1186 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %653, i32 0, i32 21
  %aptr1187 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1186, i32 0, i32 2
  %654 = load i8*, i8** %aptr1187, align 8
  %655 = load i32, i32* %len855, align 4
  %idx.ext1188 = sext i32 %655 to i64
  %add.ptr1189 = getelementptr inbounds i8, i8* %654, i64 %idx.ext1188
  %656 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1190 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %656, i32 0, i32 21
  %aend1191 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1190, i32 0, i32 3
  %657 = load i8*, i8** %aend1191, align 8
  %cmp1192 = icmp ugt i8* %add.ptr1189, %657
  br i1 %cmp1192, label %if.then.1194, label %if.end.1237

if.then.1194:                                     ; preds = %if.then.1185
  %658 = load i32, i32* %len855, align 4
  %conv1197 = sext i32 %658 to i64
  %659 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1198 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %659, i32 0, i32 21
  %asiz1199 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1198, i32 0, i32 1
  %660 = load i64, i64* %asiz1199, align 8
  %add1200 = add i64 %conv1197, %660
  %add1201 = add i64 %add1200, 8191
  %and1202 = and i64 %add1201, -8192
  %conv1203 = trunc i64 %and1202 to i32
  store i32 %conv1203, i32* %nsz1196, align 4
  %661 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1206 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %661, i32 0, i32 21
  %aptr1207 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1206, i32 0, i32 2
  %662 = load i8*, i8** %aptr1207, align 8
  %663 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1208 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %663, i32 0, i32 21
  %arena1209 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1208, i32 0, i32 0
  %664 = load i8*, i8** %arena1209, align 8
  %sub.ptr.lhs.cast1210 = ptrtoint i8* %662 to i64
  %sub.ptr.rhs.cast1211 = ptrtoint i8* %664 to i64
  %sub.ptr.sub1212 = sub i64 %sub.ptr.lhs.cast1210, %sub.ptr.rhs.cast1211
  %conv1213 = trunc i64 %sub.ptr.sub1212 to i32
  store i32 %conv1213, i32* %offset1205, align 4
  %665 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1214 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %665, i32 0, i32 21
  %arena1215 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1214, i32 0, i32 0
  %666 = load i8*, i8** %arena1215, align 8
  %667 = load i32, i32* %nsz1196, align 4
  %conv1216 = sext i32 %667 to i64
  %mul1217 = mul i64 %conv1216, 1
  %call1218 = call i8* @Perl_safesysrealloc(i8* %666, i64 %mul1217)
  %668 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1219 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %668, i32 0, i32 21
  %arena1220 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1219, i32 0, i32 0
  store i8* %call1218, i8** %arena1220, align 8
  %669 = load i32, i32* %nsz1196, align 4
  %conv1221 = sext i32 %669 to i64
  %670 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1222 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %670, i32 0, i32 21
  %asiz1223 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1222, i32 0, i32 1
  store i64 %conv1221, i64* %asiz1223, align 8
  %671 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1224 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %671, i32 0, i32 21
  %arena1225 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1224, i32 0, i32 0
  %672 = load i8*, i8** %arena1225, align 8
  %673 = load i32, i32* %offset1205, align 4
  %idx.ext1226 = sext i32 %673 to i64
  %add.ptr1227 = getelementptr inbounds i8, i8* %672, i64 %idx.ext1226
  %674 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1228 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %674, i32 0, i32 21
  %aptr1229 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1228, i32 0, i32 2
  store i8* %add.ptr1227, i8** %aptr1229, align 8
  %675 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1231 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %675, i32 0, i32 21
  %arena1232 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1231, i32 0, i32 0
  %676 = load i8*, i8** %arena1232, align 8
  %677 = load i32, i32* %nsz1196, align 4
  %idx.ext1233 = sext i32 %677 to i64
  %add.ptr1234 = getelementptr inbounds i8, i8* %676, i64 %idx.ext1233
  %678 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1235 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %678, i32 0, i32 21
  %aend1236 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1235, i32 0, i32 3
  store i8* %add.ptr1234, i8** %aend1236, align 8
  store i8* %add.ptr1234, i8** %tmp1230
  %679 = load i8*, i8** %tmp1230
  br label %if.end.1237

if.end.1237:                                      ; preds = %if.then.1194, %if.then.1185
  %680 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1238 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %680, i32 0, i32 21
  %aptr1239 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1238, i32 0, i32 2
  %681 = load i8*, i8** %aptr1239, align 8
  %682 = load i8*, i8** %key853, align 8
  %683 = load i32, i32* %len855, align 4
  %conv1240 = sext i32 %683 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %681, i8* %682, i64 %conv1240, i32 1, i1 false)
  %684 = load i32, i32* %len855, align 4
  %685 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1242 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %685, i32 0, i32 21
  %aptr1243 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1242, i32 0, i32 2
  %686 = load i8*, i8** %aptr1243, align 8
  %idx.ext1244 = sext i32 %684 to i64
  %add.ptr1245 = getelementptr inbounds i8, i8* %686, i64 %idx.ext1244
  store i8* %add.ptr1245, i8** %aptr1243, align 8
  store i8* %add.ptr1245, i8** %tmp1241
  %687 = load i8*, i8** %tmp1241
  br label %if.end.1255

if.else.1246:                                     ; preds = %if.then.1182
  %688 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1247 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %688, i32 0, i32 23
  %689 = load %struct._PerlIO**, %struct._PerlIO*** %fio1247, align 8
  %690 = load i8*, i8** %key853, align 8
  %691 = load i32, i32* %len855, align 4
  %conv1248 = sext i32 %691 to i64
  %call1249 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %689, i8* %690, i64 %conv1248)
  %692 = load i32, i32* %len855, align 4
  %conv1250 = sext i32 %692 to i64
  %cmp1251 = icmp ne i64 %call1249, %conv1250
  br i1 %cmp1251, label %if.then.1253, label %if.end.1254

if.then.1253:                                     ; preds = %if.else.1246
  store i32 -1, i32* %retval
  br label %return

if.end.1254:                                      ; preds = %if.else.1246
  br label %if.end.1255

if.end.1255:                                      ; preds = %if.end.1254, %if.end.1237
  br label %if.end.1256

if.end.1256:                                      ; preds = %if.end.1255, %if.end.1180
  br label %if.end.1257

if.end.1257:                                      ; preds = %if.end.1256, %if.then.1010
  br label %for.inc.1258

for.inc.1258:                                     ; preds = %if.end.1257
  %693 = load i32, i32* %i, align 4
  %inc1259 = add nsw i32 %693, 1
  store i32 %inc1259, i32* %i, align 4
  br label %for.cond.848

for.end.1260:                                     ; preds = %for.cond.848
  br label %if.end.1261

if.end.1261:                                      ; preds = %for.end.1260, %for.end.846
  br label %out

out:                                              ; preds = %if.end.1261, %if.then.894, %if.then.476
  %694 = load i32, i32* %riter, align 4
  %695 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %sv_any1262 = getelementptr inbounds %struct.hv, %struct.hv* %695, i32 0, i32 0
  %696 = load %struct.xpvhv*, %struct.xpvhv** %sv_any1262, align 8
  %xhv_riter1263 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %696, i32 0, i32 7
  store i32 %694, i32* %xhv_riter1263, align 4
  %697 = load %struct.he*, %struct.he** %eiter, align 8
  %698 = load %struct.hv*, %struct.hv** %hv.addr, align 8
  %sv_any1264 = getelementptr inbounds %struct.hv, %struct.hv* %698, i32 0, i32 0
  %699 = load %struct.xpvhv*, %struct.xpvhv** %sv_any1264, align 8
  %xhv_eiter1265 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %699, i32 0, i32 8
  store %struct.he* %697, %struct.he** %xhv_eiter1265, align 8
  %700 = load i32, i32* %ret, align 4
  store i32 %700, i32* %retval
  br label %return

return:                                           ; preds = %out, %if.then.1253, %if.then.1177, %if.then.1097, %if.then.1002, %if.then.873, %if.then.835, %if.then.759, %if.then.679, %if.then.590, %if.then.471, %if.then.466, %if.then.357, %if.then.277, %if.then.191, %if.then.123, %if.then.55
  %701 = load i32, i32* %retval
  ret i32 %701
}

; Function Attrs: nounwind uwtable
define internal i32 @store_tied(%struct.stcxt* %cxt, %struct.sv* %sv) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %mg = alloca %struct.magic*, align 8
  %obj = alloca %struct.sv*, align 8
  %ret = alloca i32, align 4
  %svt = alloca i32, align 4
  %mtype = alloca i8, align 1
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %nsz62 = alloca i32, align 4
  %offset70 = alloca i32, align 4
  %tmp95 = alloca i8*, align 8
  %nsz130 = alloca i32, align 4
  %offset138 = alloca i32, align 4
  %tmp163 = alloca i8*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store %struct.sv* null, %struct.sv** %obj, align 8
  store i32 0, i32* %ret, align 4
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 255
  store i32 %and, i32* %svt, align 4
  store i8 80, i8* %mtype, align 1
  %2 = load i32, i32* %svt, align 4
  %cmp = icmp eq i32 %2, 11
  br i1 %cmp, label %if.then, label %if.else.43

if.then:                                          ; preds = %entry
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 23
  %4 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %4, null
  br i1 %tobool, label %if.else.35, label %if.then.1

if.then.1:                                        ; preds = %if.then
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %6 = load i8*, i8** %aptr, align 8
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf2, i32 0, i32 3
  %8 = load i8*, i8** %aend, align 8
  %cmp3 = icmp ult i8* %6, %8
  br i1 %cmp3, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %if.then.1
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 21
  %aptr6 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf5, i32 0, i32 2
  %10 = load i8*, i8** %aptr6, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr, i8** %aptr6, align 8
  store i8 12, i8* %10, align 1
  br label %if.end

if.else:                                          ; preds = %if.then.1
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf7 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 21
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf7, i32 0, i32 1
  %12 = load i64, i64* %asiz, align 8
  %add = add i64 1, %12
  %add8 = add i64 %add, 8191
  %and9 = and i64 %add8, -8192
  %conv = trunc i64 %and9 to i32
  store i32 %conv, i32* %nsz, align 4
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf10 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 21
  %aptr11 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf10, i32 0, i32 2
  %14 = load i8*, i8** %aptr11, align 8
  %15 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf12 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %15, i32 0, i32 21
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf12, i32 0, i32 0
  %16 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %14 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %16 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv13 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv13, i32* %offset, align 4
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 21
  %arena15 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf14, i32 0, i32 0
  %18 = load i8*, i8** %arena15, align 8
  %19 = load i32, i32* %nsz, align 4
  %conv16 = sext i32 %19 to i64
  %mul = mul i64 %conv16, 1
  %call = call i8* @Perl_safesysrealloc(i8* %18, i64 %mul)
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf17 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %20, i32 0, i32 21
  %arena18 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf17, i32 0, i32 0
  store i8* %call, i8** %arena18, align 8
  %21 = load i32, i32* %nsz, align 4
  %conv19 = sext i32 %21 to i64
  %22 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf20 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %22, i32 0, i32 21
  %asiz21 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf20, i32 0, i32 1
  store i64 %conv19, i64* %asiz21, align 8
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 21
  %arena23 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf22, i32 0, i32 0
  %24 = load i8*, i8** %arena23, align 8
  %25 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %25 to i64
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext
  %26 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf24 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %26, i32 0, i32 21
  %aptr25 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf24, i32 0, i32 2
  store i8* %add.ptr, i8** %aptr25, align 8
  %27 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf26 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %27, i32 0, i32 21
  %arena27 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf26, i32 0, i32 0
  %28 = load i8*, i8** %arena27, align 8
  %29 = load i32, i32* %nsz, align 4
  %idx.ext28 = sext i32 %29 to i64
  %add.ptr29 = getelementptr inbounds i8, i8* %28, i64 %idx.ext28
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf30 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 21
  %aend31 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf30, i32 0, i32 3
  store i8* %add.ptr29, i8** %aend31, align 8
  store i8* %add.ptr29, i8** %tmp
  %31 = load i8*, i8** %tmp
  %32 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf32 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %32, i32 0, i32 21
  %aptr33 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf32, i32 0, i32 2
  %33 = load i8*, i8** %aptr33, align 8
  %incdec.ptr34 = getelementptr inbounds i8, i8* %33, i32 1
  store i8* %incdec.ptr34, i8** %aptr33, align 8
  store i8 12, i8* %33, align 1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  br label %if.end.42

if.else.35:                                       ; preds = %if.then
  %34 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio36 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %34, i32 0, i32 23
  %35 = load %struct._PerlIO**, %struct._PerlIO*** %fio36, align 8
  %call37 = call i32 @PerlIO_putc(%struct._PerlIO** %35, i32 12)
  %cmp38 = icmp eq i32 %call37, -1
  br i1 %cmp38, label %if.then.40, label %if.end.41

if.then.40:                                       ; preds = %if.else.35
  store i32 -1, i32* %retval
  br label %return

if.end.41:                                        ; preds = %if.else.35
  br label %if.end.42

if.end.42:                                        ; preds = %if.end.41, %if.end
  br label %if.end.183

if.else.43:                                       ; preds = %entry
  %36 = load i32, i32* %svt, align 4
  %cmp44 = icmp eq i32 %36, 10
  br i1 %cmp44, label %if.then.46, label %if.else.114

if.then.46:                                       ; preds = %if.else.43
  %37 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio47 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %37, i32 0, i32 23
  %38 = load %struct._PerlIO**, %struct._PerlIO*** %fio47, align 8
  %tobool48 = icmp ne %struct._PerlIO** %38, null
  br i1 %tobool48, label %if.else.106, label %if.then.49

if.then.49:                                       ; preds = %if.then.46
  %39 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf50 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %39, i32 0, i32 21
  %aptr51 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf50, i32 0, i32 2
  %40 = load i8*, i8** %aptr51, align 8
  %41 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf52 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %41, i32 0, i32 21
  %aend53 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf52, i32 0, i32 3
  %42 = load i8*, i8** %aend53, align 8
  %cmp54 = icmp ult i8* %40, %42
  br i1 %cmp54, label %if.then.56, label %if.else.60

if.then.56:                                       ; preds = %if.then.49
  %43 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf57 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %43, i32 0, i32 21
  %aptr58 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf57, i32 0, i32 2
  %44 = load i8*, i8** %aptr58, align 8
  %incdec.ptr59 = getelementptr inbounds i8, i8* %44, i32 1
  store i8* %incdec.ptr59, i8** %aptr58, align 8
  store i8 11, i8* %44, align 1
  br label %if.end.105

if.else.60:                                       ; preds = %if.then.49
  %45 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf63 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %45, i32 0, i32 21
  %asiz64 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf63, i32 0, i32 1
  %46 = load i64, i64* %asiz64, align 8
  %add65 = add i64 1, %46
  %add66 = add i64 %add65, 8191
  %and67 = and i64 %add66, -8192
  %conv68 = trunc i64 %and67 to i32
  store i32 %conv68, i32* %nsz62, align 4
  %47 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf71 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %47, i32 0, i32 21
  %aptr72 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf71, i32 0, i32 2
  %48 = load i8*, i8** %aptr72, align 8
  %49 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf73 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %49, i32 0, i32 21
  %arena74 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf73, i32 0, i32 0
  %50 = load i8*, i8** %arena74, align 8
  %sub.ptr.lhs.cast75 = ptrtoint i8* %48 to i64
  %sub.ptr.rhs.cast76 = ptrtoint i8* %50 to i64
  %sub.ptr.sub77 = sub i64 %sub.ptr.lhs.cast75, %sub.ptr.rhs.cast76
  %conv78 = trunc i64 %sub.ptr.sub77 to i32
  store i32 %conv78, i32* %offset70, align 4
  %51 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf79 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %51, i32 0, i32 21
  %arena80 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf79, i32 0, i32 0
  %52 = load i8*, i8** %arena80, align 8
  %53 = load i32, i32* %nsz62, align 4
  %conv81 = sext i32 %53 to i64
  %mul82 = mul i64 %conv81, 1
  %call83 = call i8* @Perl_safesysrealloc(i8* %52, i64 %mul82)
  %54 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf84 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %54, i32 0, i32 21
  %arena85 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf84, i32 0, i32 0
  store i8* %call83, i8** %arena85, align 8
  %55 = load i32, i32* %nsz62, align 4
  %conv86 = sext i32 %55 to i64
  %56 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf87 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %56, i32 0, i32 21
  %asiz88 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf87, i32 0, i32 1
  store i64 %conv86, i64* %asiz88, align 8
  %57 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf89 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %57, i32 0, i32 21
  %arena90 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf89, i32 0, i32 0
  %58 = load i8*, i8** %arena90, align 8
  %59 = load i32, i32* %offset70, align 4
  %idx.ext91 = sext i32 %59 to i64
  %add.ptr92 = getelementptr inbounds i8, i8* %58, i64 %idx.ext91
  %60 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf93 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %60, i32 0, i32 21
  %aptr94 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf93, i32 0, i32 2
  store i8* %add.ptr92, i8** %aptr94, align 8
  %61 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf96 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %61, i32 0, i32 21
  %arena97 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf96, i32 0, i32 0
  %62 = load i8*, i8** %arena97, align 8
  %63 = load i32, i32* %nsz62, align 4
  %idx.ext98 = sext i32 %63 to i64
  %add.ptr99 = getelementptr inbounds i8, i8* %62, i64 %idx.ext98
  %64 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf100 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %64, i32 0, i32 21
  %aend101 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf100, i32 0, i32 3
  store i8* %add.ptr99, i8** %aend101, align 8
  store i8* %add.ptr99, i8** %tmp95
  %65 = load i8*, i8** %tmp95
  %66 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf102 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %66, i32 0, i32 21
  %aptr103 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf102, i32 0, i32 2
  %67 = load i8*, i8** %aptr103, align 8
  %incdec.ptr104 = getelementptr inbounds i8, i8* %67, i32 1
  store i8* %incdec.ptr104, i8** %aptr103, align 8
  store i8 11, i8* %67, align 1
  br label %if.end.105

if.end.105:                                       ; preds = %if.else.60, %if.then.56
  br label %if.end.113

if.else.106:                                      ; preds = %if.then.46
  %68 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio107 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %68, i32 0, i32 23
  %69 = load %struct._PerlIO**, %struct._PerlIO*** %fio107, align 8
  %call108 = call i32 @PerlIO_putc(%struct._PerlIO** %69, i32 11)
  %cmp109 = icmp eq i32 %call108, -1
  br i1 %cmp109, label %if.then.111, label %if.end.112

if.then.111:                                      ; preds = %if.else.106
  store i32 -1, i32* %retval
  br label %return

if.end.112:                                       ; preds = %if.else.106
  br label %if.end.113

if.end.113:                                       ; preds = %if.end.112, %if.end.105
  br label %if.end.182

if.else.114:                                      ; preds = %if.else.43
  %70 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio115 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %70, i32 0, i32 23
  %71 = load %struct._PerlIO**, %struct._PerlIO*** %fio115, align 8
  %tobool116 = icmp ne %struct._PerlIO** %71, null
  br i1 %tobool116, label %if.else.174, label %if.then.117

if.then.117:                                      ; preds = %if.else.114
  %72 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf118 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %72, i32 0, i32 21
  %aptr119 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf118, i32 0, i32 2
  %73 = load i8*, i8** %aptr119, align 8
  %74 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf120 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %74, i32 0, i32 21
  %aend121 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf120, i32 0, i32 3
  %75 = load i8*, i8** %aend121, align 8
  %cmp122 = icmp ult i8* %73, %75
  br i1 %cmp122, label %if.then.124, label %if.else.128

if.then.124:                                      ; preds = %if.then.117
  %76 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf125 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %76, i32 0, i32 21
  %aptr126 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf125, i32 0, i32 2
  %77 = load i8*, i8** %aptr126, align 8
  %incdec.ptr127 = getelementptr inbounds i8, i8* %77, i32 1
  store i8* %incdec.ptr127, i8** %aptr126, align 8
  store i8 13, i8* %77, align 1
  br label %if.end.173

if.else.128:                                      ; preds = %if.then.117
  %78 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf131 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %78, i32 0, i32 21
  %asiz132 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf131, i32 0, i32 1
  %79 = load i64, i64* %asiz132, align 8
  %add133 = add i64 1, %79
  %add134 = add i64 %add133, 8191
  %and135 = and i64 %add134, -8192
  %conv136 = trunc i64 %and135 to i32
  store i32 %conv136, i32* %nsz130, align 4
  %80 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf139 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %80, i32 0, i32 21
  %aptr140 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf139, i32 0, i32 2
  %81 = load i8*, i8** %aptr140, align 8
  %82 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf141 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %82, i32 0, i32 21
  %arena142 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf141, i32 0, i32 0
  %83 = load i8*, i8** %arena142, align 8
  %sub.ptr.lhs.cast143 = ptrtoint i8* %81 to i64
  %sub.ptr.rhs.cast144 = ptrtoint i8* %83 to i64
  %sub.ptr.sub145 = sub i64 %sub.ptr.lhs.cast143, %sub.ptr.rhs.cast144
  %conv146 = trunc i64 %sub.ptr.sub145 to i32
  store i32 %conv146, i32* %offset138, align 4
  %84 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf147 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %84, i32 0, i32 21
  %arena148 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf147, i32 0, i32 0
  %85 = load i8*, i8** %arena148, align 8
  %86 = load i32, i32* %nsz130, align 4
  %conv149 = sext i32 %86 to i64
  %mul150 = mul i64 %conv149, 1
  %call151 = call i8* @Perl_safesysrealloc(i8* %85, i64 %mul150)
  %87 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf152 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %87, i32 0, i32 21
  %arena153 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf152, i32 0, i32 0
  store i8* %call151, i8** %arena153, align 8
  %88 = load i32, i32* %nsz130, align 4
  %conv154 = sext i32 %88 to i64
  %89 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf155 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %89, i32 0, i32 21
  %asiz156 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf155, i32 0, i32 1
  store i64 %conv154, i64* %asiz156, align 8
  %90 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf157 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %90, i32 0, i32 21
  %arena158 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf157, i32 0, i32 0
  %91 = load i8*, i8** %arena158, align 8
  %92 = load i32, i32* %offset138, align 4
  %idx.ext159 = sext i32 %92 to i64
  %add.ptr160 = getelementptr inbounds i8, i8* %91, i64 %idx.ext159
  %93 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf161 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %93, i32 0, i32 21
  %aptr162 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf161, i32 0, i32 2
  store i8* %add.ptr160, i8** %aptr162, align 8
  %94 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf164 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %94, i32 0, i32 21
  %arena165 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf164, i32 0, i32 0
  %95 = load i8*, i8** %arena165, align 8
  %96 = load i32, i32* %nsz130, align 4
  %idx.ext166 = sext i32 %96 to i64
  %add.ptr167 = getelementptr inbounds i8, i8* %95, i64 %idx.ext166
  %97 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf168 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %97, i32 0, i32 21
  %aend169 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf168, i32 0, i32 3
  store i8* %add.ptr167, i8** %aend169, align 8
  store i8* %add.ptr167, i8** %tmp163
  %98 = load i8*, i8** %tmp163
  %99 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf170 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %99, i32 0, i32 21
  %aptr171 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf170, i32 0, i32 2
  %100 = load i8*, i8** %aptr171, align 8
  %incdec.ptr172 = getelementptr inbounds i8, i8* %100, i32 1
  store i8* %incdec.ptr172, i8** %aptr171, align 8
  store i8 13, i8* %100, align 1
  br label %if.end.173

if.end.173:                                       ; preds = %if.else.128, %if.then.124
  br label %if.end.181

if.else.174:                                      ; preds = %if.else.114
  %101 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio175 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %101, i32 0, i32 23
  %102 = load %struct._PerlIO**, %struct._PerlIO*** %fio175, align 8
  %call176 = call i32 @PerlIO_putc(%struct._PerlIO** %102, i32 13)
  %cmp177 = icmp eq i32 %call176, -1
  br i1 %cmp177, label %if.then.179, label %if.end.180

if.then.179:                                      ; preds = %if.else.174
  store i32 -1, i32* %retval
  br label %return

if.end.180:                                       ; preds = %if.else.174
  br label %if.end.181

if.end.181:                                       ; preds = %if.end.180, %if.end.173
  store i8 113, i8* %mtype, align 1
  br label %if.end.182

if.end.182:                                       ; preds = %if.end.181, %if.end.113
  br label %if.end.183

if.end.183:                                       ; preds = %if.end.182, %if.end.42
  %103 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %104 = load i8, i8* %mtype, align 1
  %conv184 = sext i8 %104 to i32
  %call185 = call %struct.magic* @Perl_mg_find(%struct.sv* %103, i32 %conv184)
  store %struct.magic* %call185, %struct.magic** %mg, align 8
  %tobool186 = icmp ne %struct.magic* %call185, null
  br i1 %tobool186, label %if.end.194, label %if.then.187

if.then.187:                                      ; preds = %if.end.183
  %105 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %105, i32 0, i32 18
  store i32 1, i32* %s_dirty, align 4
  %106 = load i8, i8* %mtype, align 1
  %conv188 = sext i8 %106 to i32
  %107 = load i32, i32* %svt, align 4
  %cmp189 = icmp eq i32 %107, 11
  br i1 %cmp189, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.187
  br label %cond.end

cond.false:                                       ; preds = %if.then.187
  %108 = load i32, i32* %svt, align 4
  %cmp191 = icmp eq i32 %108, 10
  %cond = select i1 %cmp191, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i32 0, i32 0)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond193 = phi i8* [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i32 0, i32 0), %cond.true ], [ %cond, %cond.false ]
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.45, i32 0, i32 0), i32 %conv188, i8* %cond193)
  br label %if.end.194

if.end.194:                                       ; preds = %cond.end, %if.end.183
  %109 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_obj = getelementptr inbounds %struct.magic, %struct.magic* %109, i32 0, i32 5
  %110 = load %struct.sv*, %struct.sv** %mg_obj, align 8
  %tobool195 = icmp ne %struct.sv* %110, null
  br i1 %tobool195, label %cond.true.196, label %cond.false.198

cond.true.196:                                    ; preds = %if.end.194
  %111 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_obj197 = getelementptr inbounds %struct.magic, %struct.magic* %111, i32 0, i32 5
  %112 = load %struct.sv*, %struct.sv** %mg_obj197, align 8
  br label %cond.end.200

cond.false.198:                                   ; preds = %if.end.194
  %call199 = call %struct.sv* @Perl_newSV(i64 0)
  br label %cond.end.200

cond.end.200:                                     ; preds = %cond.false.198, %cond.true.196
  %cond201 = phi %struct.sv* [ %112, %cond.true.196 ], [ %call199, %cond.false.198 ]
  store %struct.sv* %cond201, %struct.sv** %obj, align 8
  %113 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %114 = load %struct.sv*, %struct.sv** %obj, align 8
  %call202 = call i32 @store(%struct.stcxt* %113, %struct.sv* %114)
  store i32 %call202, i32* %ret, align 4
  %tobool203 = icmp ne i32 %call202, 0
  br i1 %tobool203, label %if.then.204, label %if.end.205

if.then.204:                                      ; preds = %cond.end.200
  %115 = load i32, i32* %ret, align 4
  store i32 %115, i32* %retval
  br label %return

if.end.205:                                       ; preds = %cond.end.200
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.205, %if.then.204, %if.then.179, %if.then.111, %if.then.40
  %116 = load i32, i32* %retval
  ret i32 %116
}

; Function Attrs: nounwind uwtable
define internal i32 @store_tied_item(%struct.stcxt* %cxt, %struct.sv* %sv) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %mg = alloca %struct.magic*, align 8
  %ret = alloca i32, align 4
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %idx = alloca i32, align 4
  %nsz72 = alloca i32, align 4
  %offset80 = alloca i32, align 4
  %tmp105 = alloca i8*, align 8
  %y = alloca i32, align 4
  %nsz147 = alloca i32, align 4
  %offset155 = alloca i32, align 4
  %tmp180 = alloca i8*, align 8
  %tmp202 = alloca i8*, align 8
  %nsz227 = alloca i32, align 4
  %offset235 = alloca i32, align 4
  %tmp260 = alloca i8*, align 8
  %tmp282 = alloca i8*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call = call %struct.magic* @Perl_mg_find(%struct.sv* %0, i32 112)
  store %struct.magic* %call, %struct.magic** %mg, align 8
  %tobool = icmp ne %struct.magic* %call, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 18
  store i32 1, i32* %s_dirty, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.46, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_ptr = getelementptr inbounds %struct.magic, %struct.magic* %2, i32 0, i32 6
  %3 = load i8*, i8** %mg_ptr, align 8
  %tobool1 = icmp ne i8* %3, null
  br i1 %tobool1, label %if.then.2, label %if.else.55

if.then.2:                                        ; preds = %if.end
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 23
  %5 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool3 = icmp ne %struct._PerlIO** %5, null
  br i1 %tobool3, label %if.else.38, label %if.then.4

if.then.4:                                        ; preds = %if.then.2
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %7 = load i8*, i8** %aptr, align 8
  %8 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %8, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf5, i32 0, i32 3
  %9 = load i8*, i8** %aend, align 8
  %cmp = icmp ult i8* %7, %9
  br i1 %cmp, label %if.then.6, label %if.else

if.then.6:                                        ; preds = %if.then.4
  %10 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf7 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %10, i32 0, i32 21
  %aptr8 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf7, i32 0, i32 2
  %11 = load i8*, i8** %aptr8, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %incdec.ptr, i8** %aptr8, align 8
  store i8 21, i8* %11, align 1
  br label %if.end.37

if.else:                                          ; preds = %if.then.4
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf9 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 21
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf9, i32 0, i32 1
  %13 = load i64, i64* %asiz, align 8
  %add = add i64 1, %13
  %add10 = add i64 %add, 8191
  %and = and i64 %add10, -8192
  %conv = trunc i64 %and to i32
  store i32 %conv, i32* %nsz, align 4
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf11 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 21
  %aptr12 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf11, i32 0, i32 2
  %15 = load i8*, i8** %aptr12, align 8
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf13 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 21
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf13, i32 0, i32 0
  %17 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %15 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %17 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv14 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv14, i32* %offset, align 4
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf15 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 21
  %arena16 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf15, i32 0, i32 0
  %19 = load i8*, i8** %arena16, align 8
  %20 = load i32, i32* %nsz, align 4
  %conv17 = sext i32 %20 to i64
  %mul = mul i64 %conv17, 1
  %call18 = call i8* @Perl_safesysrealloc(i8* %19, i64 %mul)
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 21
  %arena20 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf19, i32 0, i32 0
  store i8* %call18, i8** %arena20, align 8
  %22 = load i32, i32* %nsz, align 4
  %conv21 = sext i32 %22 to i64
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 21
  %asiz23 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf22, i32 0, i32 1
  store i64 %conv21, i64* %asiz23, align 8
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf24 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 21
  %arena25 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf24, i32 0, i32 0
  %25 = load i8*, i8** %arena25, align 8
  %26 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %26 to i64
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 %idx.ext
  %27 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf26 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %27, i32 0, i32 21
  %aptr27 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf26, i32 0, i32 2
  store i8* %add.ptr, i8** %aptr27, align 8
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf28 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 21
  %arena29 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf28, i32 0, i32 0
  %29 = load i8*, i8** %arena29, align 8
  %30 = load i32, i32* %nsz, align 4
  %idx.ext30 = sext i32 %30 to i64
  %add.ptr31 = getelementptr inbounds i8, i8* %29, i64 %idx.ext30
  %31 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf32 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %31, i32 0, i32 21
  %aend33 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf32, i32 0, i32 3
  store i8* %add.ptr31, i8** %aend33, align 8
  store i8* %add.ptr31, i8** %tmp
  %32 = load i8*, i8** %tmp
  %33 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf34 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %33, i32 0, i32 21
  %aptr35 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf34, i32 0, i32 2
  %34 = load i8*, i8** %aptr35, align 8
  %incdec.ptr36 = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %incdec.ptr36, i8** %aptr35, align 8
  store i8 21, i8* %34, align 1
  br label %if.end.37

if.end.37:                                        ; preds = %if.else, %if.then.6
  br label %if.end.45

if.else.38:                                       ; preds = %if.then.2
  %35 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio39 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %35, i32 0, i32 23
  %36 = load %struct._PerlIO**, %struct._PerlIO*** %fio39, align 8
  %call40 = call i32 @PerlIO_putc(%struct._PerlIO** %36, i32 21)
  %cmp41 = icmp eq i32 %call40, -1
  br i1 %cmp41, label %if.then.43, label %if.end.44

if.then.43:                                       ; preds = %if.else.38
  store i32 -1, i32* %retval
  br label %return

if.end.44:                                        ; preds = %if.else.38
  br label %if.end.45

if.end.45:                                        ; preds = %if.end.44, %if.end.37
  %37 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %38 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_obj = getelementptr inbounds %struct.magic, %struct.magic* %38, i32 0, i32 5
  %39 = load %struct.sv*, %struct.sv** %mg_obj, align 8
  %call46 = call i32 @store(%struct.stcxt* %37, %struct.sv* %39)
  store i32 %call46, i32* %ret, align 4
  %tobool47 = icmp ne i32 %call46, 0
  br i1 %tobool47, label %if.then.48, label %if.end.49

if.then.48:                                       ; preds = %if.end.45
  %40 = load i32, i32* %ret, align 4
  store i32 %40, i32* %retval
  br label %return

if.end.49:                                        ; preds = %if.end.45
  %41 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %42 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_ptr50 = getelementptr inbounds %struct.magic, %struct.magic* %42, i32 0, i32 6
  %43 = load i8*, i8** %mg_ptr50, align 8
  %44 = bitcast i8* %43 to %struct.sv*
  %call51 = call i32 @store(%struct.stcxt* %41, %struct.sv* %44)
  store i32 %call51, i32* %ret, align 4
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.then.53, label %if.end.54

if.then.53:                                       ; preds = %if.end.49
  %45 = load i32, i32* %ret, align 4
  store i32 %45, i32* %retval
  br label %return

if.end.54:                                        ; preds = %if.end.49
  br label %if.end.295

if.else.55:                                       ; preds = %if.end
  %46 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_len = getelementptr inbounds %struct.magic, %struct.magic* %46, i32 0, i32 7
  %47 = load i32, i32* %mg_len, align 4
  store i32 %47, i32* %idx, align 4
  %48 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio57 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %48, i32 0, i32 23
  %49 = load %struct._PerlIO**, %struct._PerlIO*** %fio57, align 8
  %tobool58 = icmp ne %struct._PerlIO** %49, null
  br i1 %tobool58, label %if.else.116, label %if.then.59

if.then.59:                                       ; preds = %if.else.55
  %50 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf60 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %50, i32 0, i32 21
  %aptr61 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf60, i32 0, i32 2
  %51 = load i8*, i8** %aptr61, align 8
  %52 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf62 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %52, i32 0, i32 21
  %aend63 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf62, i32 0, i32 3
  %53 = load i8*, i8** %aend63, align 8
  %cmp64 = icmp ult i8* %51, %53
  br i1 %cmp64, label %if.then.66, label %if.else.70

if.then.66:                                       ; preds = %if.then.59
  %54 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf67 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %54, i32 0, i32 21
  %aptr68 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf67, i32 0, i32 2
  %55 = load i8*, i8** %aptr68, align 8
  %incdec.ptr69 = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %incdec.ptr69, i8** %aptr68, align 8
  store i8 22, i8* %55, align 1
  br label %if.end.115

if.else.70:                                       ; preds = %if.then.59
  %56 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf73 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %56, i32 0, i32 21
  %asiz74 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf73, i32 0, i32 1
  %57 = load i64, i64* %asiz74, align 8
  %add75 = add i64 1, %57
  %add76 = add i64 %add75, 8191
  %and77 = and i64 %add76, -8192
  %conv78 = trunc i64 %and77 to i32
  store i32 %conv78, i32* %nsz72, align 4
  %58 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf81 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %58, i32 0, i32 21
  %aptr82 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf81, i32 0, i32 2
  %59 = load i8*, i8** %aptr82, align 8
  %60 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf83 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %60, i32 0, i32 21
  %arena84 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf83, i32 0, i32 0
  %61 = load i8*, i8** %arena84, align 8
  %sub.ptr.lhs.cast85 = ptrtoint i8* %59 to i64
  %sub.ptr.rhs.cast86 = ptrtoint i8* %61 to i64
  %sub.ptr.sub87 = sub i64 %sub.ptr.lhs.cast85, %sub.ptr.rhs.cast86
  %conv88 = trunc i64 %sub.ptr.sub87 to i32
  store i32 %conv88, i32* %offset80, align 4
  %62 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf89 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %62, i32 0, i32 21
  %arena90 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf89, i32 0, i32 0
  %63 = load i8*, i8** %arena90, align 8
  %64 = load i32, i32* %nsz72, align 4
  %conv91 = sext i32 %64 to i64
  %mul92 = mul i64 %conv91, 1
  %call93 = call i8* @Perl_safesysrealloc(i8* %63, i64 %mul92)
  %65 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf94 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %65, i32 0, i32 21
  %arena95 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf94, i32 0, i32 0
  store i8* %call93, i8** %arena95, align 8
  %66 = load i32, i32* %nsz72, align 4
  %conv96 = sext i32 %66 to i64
  %67 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf97 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %67, i32 0, i32 21
  %asiz98 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf97, i32 0, i32 1
  store i64 %conv96, i64* %asiz98, align 8
  %68 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf99 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %68, i32 0, i32 21
  %arena100 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf99, i32 0, i32 0
  %69 = load i8*, i8** %arena100, align 8
  %70 = load i32, i32* %offset80, align 4
  %idx.ext101 = sext i32 %70 to i64
  %add.ptr102 = getelementptr inbounds i8, i8* %69, i64 %idx.ext101
  %71 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf103 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %71, i32 0, i32 21
  %aptr104 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf103, i32 0, i32 2
  store i8* %add.ptr102, i8** %aptr104, align 8
  %72 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf106 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %72, i32 0, i32 21
  %arena107 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf106, i32 0, i32 0
  %73 = load i8*, i8** %arena107, align 8
  %74 = load i32, i32* %nsz72, align 4
  %idx.ext108 = sext i32 %74 to i64
  %add.ptr109 = getelementptr inbounds i8, i8* %73, i64 %idx.ext108
  %75 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf110 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %75, i32 0, i32 21
  %aend111 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf110, i32 0, i32 3
  store i8* %add.ptr109, i8** %aend111, align 8
  store i8* %add.ptr109, i8** %tmp105
  %76 = load i8*, i8** %tmp105
  %77 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf112 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %77, i32 0, i32 21
  %aptr113 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf112, i32 0, i32 2
  %78 = load i8*, i8** %aptr113, align 8
  %incdec.ptr114 = getelementptr inbounds i8, i8* %78, i32 1
  store i8* %incdec.ptr114, i8** %aptr113, align 8
  store i8 22, i8* %78, align 1
  br label %if.end.115

if.end.115:                                       ; preds = %if.else.70, %if.then.66
  br label %if.end.123

if.else.116:                                      ; preds = %if.else.55
  %79 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio117 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %79, i32 0, i32 23
  %80 = load %struct._PerlIO**, %struct._PerlIO*** %fio117, align 8
  %call118 = call i32 @PerlIO_putc(%struct._PerlIO** %80, i32 22)
  %cmp119 = icmp eq i32 %call118, -1
  br i1 %cmp119, label %if.then.121, label %if.end.122

if.then.121:                                      ; preds = %if.else.116
  store i32 -1, i32* %retval
  br label %return

if.end.122:                                       ; preds = %if.else.116
  br label %if.end.123

if.end.123:                                       ; preds = %if.end.122, %if.end.115
  %81 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %82 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_obj124 = getelementptr inbounds %struct.magic, %struct.magic* %82, i32 0, i32 5
  %83 = load %struct.sv*, %struct.sv** %mg_obj124, align 8
  %call125 = call i32 @store(%struct.stcxt* %81, %struct.sv* %83)
  store i32 %call125, i32* %ret, align 4
  %tobool126 = icmp ne i32 %call125, 0
  br i1 %tobool126, label %if.then.127, label %if.end.128

if.then.127:                                      ; preds = %if.end.123
  %84 = load i32, i32* %ret, align 4
  store i32 %84, i32* %retval
  br label %return

if.end.128:                                       ; preds = %if.end.123
  %85 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %85, i32 0, i32 11
  %86 = load i32, i32* %netorder, align 4
  %tobool129 = icmp ne i32 %86, 0
  br i1 %tobool129, label %if.then.130, label %if.else.214

if.then.130:                                      ; preds = %if.end.128
  %87 = load i32, i32* %idx, align 4
  %conv132 = sext i32 %87 to i64
  %call133 = call i64 @Perl_my_htonl(i64 %conv132)
  %conv134 = trunc i64 %call133 to i32
  store i32 %conv134, i32* %y, align 4
  %88 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio135 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %88, i32 0, i32 23
  %89 = load %struct._PerlIO**, %struct._PerlIO*** %fio135, align 8
  %tobool136 = icmp ne %struct._PerlIO** %89, null
  br i1 %tobool136, label %if.else.206, label %if.then.137

if.then.137:                                      ; preds = %if.then.130
  %90 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf138 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %90, i32 0, i32 21
  %aptr139 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf138, i32 0, i32 2
  %91 = load i8*, i8** %aptr139, align 8
  %add.ptr140 = getelementptr inbounds i8, i8* %91, i64 4
  %92 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf141 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %92, i32 0, i32 21
  %aend142 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf141, i32 0, i32 3
  %93 = load i8*, i8** %aend142, align 8
  %cmp143 = icmp ugt i8* %add.ptr140, %93
  br i1 %cmp143, label %if.then.145, label %if.end.187

if.then.145:                                      ; preds = %if.then.137
  %94 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf148 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %94, i32 0, i32 21
  %asiz149 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf148, i32 0, i32 1
  %95 = load i64, i64* %asiz149, align 8
  %add150 = add i64 4, %95
  %add151 = add i64 %add150, 8191
  %and152 = and i64 %add151, -8192
  %conv153 = trunc i64 %and152 to i32
  store i32 %conv153, i32* %nsz147, align 4
  %96 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf156 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %96, i32 0, i32 21
  %aptr157 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf156, i32 0, i32 2
  %97 = load i8*, i8** %aptr157, align 8
  %98 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf158 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %98, i32 0, i32 21
  %arena159 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf158, i32 0, i32 0
  %99 = load i8*, i8** %arena159, align 8
  %sub.ptr.lhs.cast160 = ptrtoint i8* %97 to i64
  %sub.ptr.rhs.cast161 = ptrtoint i8* %99 to i64
  %sub.ptr.sub162 = sub i64 %sub.ptr.lhs.cast160, %sub.ptr.rhs.cast161
  %conv163 = trunc i64 %sub.ptr.sub162 to i32
  store i32 %conv163, i32* %offset155, align 4
  %100 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf164 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %100, i32 0, i32 21
  %arena165 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf164, i32 0, i32 0
  %101 = load i8*, i8** %arena165, align 8
  %102 = load i32, i32* %nsz147, align 4
  %conv166 = sext i32 %102 to i64
  %mul167 = mul i64 %conv166, 1
  %call168 = call i8* @Perl_safesysrealloc(i8* %101, i64 %mul167)
  %103 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf169 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %103, i32 0, i32 21
  %arena170 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf169, i32 0, i32 0
  store i8* %call168, i8** %arena170, align 8
  %104 = load i32, i32* %nsz147, align 4
  %conv171 = sext i32 %104 to i64
  %105 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf172 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %105, i32 0, i32 21
  %asiz173 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf172, i32 0, i32 1
  store i64 %conv171, i64* %asiz173, align 8
  %106 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf174 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %106, i32 0, i32 21
  %arena175 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf174, i32 0, i32 0
  %107 = load i8*, i8** %arena175, align 8
  %108 = load i32, i32* %offset155, align 4
  %idx.ext176 = sext i32 %108 to i64
  %add.ptr177 = getelementptr inbounds i8, i8* %107, i64 %idx.ext176
  %109 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf178 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %109, i32 0, i32 21
  %aptr179 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf178, i32 0, i32 2
  store i8* %add.ptr177, i8** %aptr179, align 8
  %110 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf181 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %110, i32 0, i32 21
  %arena182 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf181, i32 0, i32 0
  %111 = load i8*, i8** %arena182, align 8
  %112 = load i32, i32* %nsz147, align 4
  %idx.ext183 = sext i32 %112 to i64
  %add.ptr184 = getelementptr inbounds i8, i8* %111, i64 %idx.ext183
  %113 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf185 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %113, i32 0, i32 21
  %aend186 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf185, i32 0, i32 3
  store i8* %add.ptr184, i8** %aend186, align 8
  store i8* %add.ptr184, i8** %tmp180
  %114 = load i8*, i8** %tmp180
  br label %if.end.187

if.end.187:                                       ; preds = %if.then.145, %if.then.137
  %115 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf188 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %115, i32 0, i32 21
  %aptr189 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf188, i32 0, i32 2
  %116 = load i8*, i8** %aptr189, align 8
  %117 = ptrtoint i8* %116 to i64
  %118 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf190 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %118, i32 0, i32 21
  %aptr191 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf190, i32 0, i32 2
  %119 = load i8*, i8** %aptr191, align 8
  %120 = ptrtoint i8* %119 to i64
  %and192 = and i64 %120, -4
  %cmp193 = icmp eq i64 %117, %and192
  br i1 %cmp193, label %if.then.195, label %if.else.198

if.then.195:                                      ; preds = %if.end.187
  %121 = load i32, i32* %y, align 4
  %122 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf196 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %122, i32 0, i32 21
  %aptr197 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf196, i32 0, i32 2
  %123 = load i8*, i8** %aptr197, align 8
  %124 = bitcast i8* %123 to i32*
  store i32 %121, i32* %124, align 4
  br label %if.end.201

if.else.198:                                      ; preds = %if.end.187
  %125 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf199 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %125, i32 0, i32 21
  %aptr200 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf199, i32 0, i32 2
  %126 = load i8*, i8** %aptr200, align 8
  %127 = bitcast i32* %y to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %126, i8* %127, i64 4, i32 1, i1 false)
  br label %if.end.201

if.end.201:                                       ; preds = %if.else.198, %if.then.195
  %128 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf203 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %128, i32 0, i32 21
  %aptr204 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf203, i32 0, i32 2
  %129 = load i8*, i8** %aptr204, align 8
  %add.ptr205 = getelementptr inbounds i8, i8* %129, i64 4
  store i8* %add.ptr205, i8** %aptr204, align 8
  store i8* %add.ptr205, i8** %tmp202
  %130 = load i8*, i8** %tmp202
  br label %if.end.213

if.else.206:                                      ; preds = %if.then.130
  %131 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio207 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %131, i32 0, i32 23
  %132 = load %struct._PerlIO**, %struct._PerlIO*** %fio207, align 8
  %133 = bitcast i32* %y to i8*
  %call208 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %132, i8* %133, i64 4)
  %cmp209 = icmp ne i64 %call208, 4
  br i1 %cmp209, label %if.then.211, label %if.end.212

if.then.211:                                      ; preds = %if.else.206
  store i32 -1, i32* %retval
  br label %return

if.end.212:                                       ; preds = %if.else.206
  br label %if.end.213

if.end.213:                                       ; preds = %if.end.212, %if.end.201
  br label %if.end.294

if.else.214:                                      ; preds = %if.end.128
  %134 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio215 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %134, i32 0, i32 23
  %135 = load %struct._PerlIO**, %struct._PerlIO*** %fio215, align 8
  %tobool216 = icmp ne %struct._PerlIO** %135, null
  br i1 %tobool216, label %if.else.286, label %if.then.217

if.then.217:                                      ; preds = %if.else.214
  %136 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf218 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %136, i32 0, i32 21
  %aptr219 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf218, i32 0, i32 2
  %137 = load i8*, i8** %aptr219, align 8
  %add.ptr220 = getelementptr inbounds i8, i8* %137, i64 4
  %138 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf221 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %138, i32 0, i32 21
  %aend222 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf221, i32 0, i32 3
  %139 = load i8*, i8** %aend222, align 8
  %cmp223 = icmp ugt i8* %add.ptr220, %139
  br i1 %cmp223, label %if.then.225, label %if.end.267

if.then.225:                                      ; preds = %if.then.217
  %140 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf228 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %140, i32 0, i32 21
  %asiz229 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf228, i32 0, i32 1
  %141 = load i64, i64* %asiz229, align 8
  %add230 = add i64 4, %141
  %add231 = add i64 %add230, 8191
  %and232 = and i64 %add231, -8192
  %conv233 = trunc i64 %and232 to i32
  store i32 %conv233, i32* %nsz227, align 4
  %142 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf236 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %142, i32 0, i32 21
  %aptr237 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf236, i32 0, i32 2
  %143 = load i8*, i8** %aptr237, align 8
  %144 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf238 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %144, i32 0, i32 21
  %arena239 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf238, i32 0, i32 0
  %145 = load i8*, i8** %arena239, align 8
  %sub.ptr.lhs.cast240 = ptrtoint i8* %143 to i64
  %sub.ptr.rhs.cast241 = ptrtoint i8* %145 to i64
  %sub.ptr.sub242 = sub i64 %sub.ptr.lhs.cast240, %sub.ptr.rhs.cast241
  %conv243 = trunc i64 %sub.ptr.sub242 to i32
  store i32 %conv243, i32* %offset235, align 4
  %146 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf244 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %146, i32 0, i32 21
  %arena245 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf244, i32 0, i32 0
  %147 = load i8*, i8** %arena245, align 8
  %148 = load i32, i32* %nsz227, align 4
  %conv246 = sext i32 %148 to i64
  %mul247 = mul i64 %conv246, 1
  %call248 = call i8* @Perl_safesysrealloc(i8* %147, i64 %mul247)
  %149 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf249 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %149, i32 0, i32 21
  %arena250 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf249, i32 0, i32 0
  store i8* %call248, i8** %arena250, align 8
  %150 = load i32, i32* %nsz227, align 4
  %conv251 = sext i32 %150 to i64
  %151 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf252 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %151, i32 0, i32 21
  %asiz253 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf252, i32 0, i32 1
  store i64 %conv251, i64* %asiz253, align 8
  %152 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf254 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %152, i32 0, i32 21
  %arena255 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf254, i32 0, i32 0
  %153 = load i8*, i8** %arena255, align 8
  %154 = load i32, i32* %offset235, align 4
  %idx.ext256 = sext i32 %154 to i64
  %add.ptr257 = getelementptr inbounds i8, i8* %153, i64 %idx.ext256
  %155 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf258 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %155, i32 0, i32 21
  %aptr259 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf258, i32 0, i32 2
  store i8* %add.ptr257, i8** %aptr259, align 8
  %156 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf261 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %156, i32 0, i32 21
  %arena262 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf261, i32 0, i32 0
  %157 = load i8*, i8** %arena262, align 8
  %158 = load i32, i32* %nsz227, align 4
  %idx.ext263 = sext i32 %158 to i64
  %add.ptr264 = getelementptr inbounds i8, i8* %157, i64 %idx.ext263
  %159 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf265 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %159, i32 0, i32 21
  %aend266 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf265, i32 0, i32 3
  store i8* %add.ptr264, i8** %aend266, align 8
  store i8* %add.ptr264, i8** %tmp260
  %160 = load i8*, i8** %tmp260
  br label %if.end.267

if.end.267:                                       ; preds = %if.then.225, %if.then.217
  %161 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf268 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %161, i32 0, i32 21
  %aptr269 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf268, i32 0, i32 2
  %162 = load i8*, i8** %aptr269, align 8
  %163 = ptrtoint i8* %162 to i64
  %164 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf270 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %164, i32 0, i32 21
  %aptr271 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf270, i32 0, i32 2
  %165 = load i8*, i8** %aptr271, align 8
  %166 = ptrtoint i8* %165 to i64
  %and272 = and i64 %166, -4
  %cmp273 = icmp eq i64 %163, %and272
  br i1 %cmp273, label %if.then.275, label %if.else.278

if.then.275:                                      ; preds = %if.end.267
  %167 = load i32, i32* %idx, align 4
  %168 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf276 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %168, i32 0, i32 21
  %aptr277 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf276, i32 0, i32 2
  %169 = load i8*, i8** %aptr277, align 8
  %170 = bitcast i8* %169 to i32*
  store i32 %167, i32* %170, align 4
  br label %if.end.281

if.else.278:                                      ; preds = %if.end.267
  %171 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf279 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %171, i32 0, i32 21
  %aptr280 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf279, i32 0, i32 2
  %172 = load i8*, i8** %aptr280, align 8
  %173 = bitcast i32* %idx to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %172, i8* %173, i64 4, i32 1, i1 false)
  br label %if.end.281

if.end.281:                                       ; preds = %if.else.278, %if.then.275
  %174 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf283 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %174, i32 0, i32 21
  %aptr284 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf283, i32 0, i32 2
  %175 = load i8*, i8** %aptr284, align 8
  %add.ptr285 = getelementptr inbounds i8, i8* %175, i64 4
  store i8* %add.ptr285, i8** %aptr284, align 8
  store i8* %add.ptr285, i8** %tmp282
  %176 = load i8*, i8** %tmp282
  br label %if.end.293

if.else.286:                                      ; preds = %if.else.214
  %177 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio287 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %177, i32 0, i32 23
  %178 = load %struct._PerlIO**, %struct._PerlIO*** %fio287, align 8
  %179 = bitcast i32* %idx to i8*
  %call288 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %178, i8* %179, i64 4)
  %cmp289 = icmp ne i64 %call288, 4
  br i1 %cmp289, label %if.then.291, label %if.end.292

if.then.291:                                      ; preds = %if.else.286
  store i32 -1, i32* %retval
  br label %return

if.end.292:                                       ; preds = %if.else.286
  br label %if.end.293

if.end.293:                                       ; preds = %if.end.292, %if.end.281
  br label %if.end.294

if.end.294:                                       ; preds = %if.end.293, %if.end.213
  br label %if.end.295

if.end.295:                                       ; preds = %if.end.294, %if.end.54
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.295, %if.then.291, %if.then.211, %if.then.127, %if.then.121, %if.then.53, %if.then.48, %if.then.43
  %180 = load i32, i32* %retval
  ret i32 %180
}

; Function Attrs: nounwind uwtable
define internal i32 @store_code(%struct.stcxt* %cxt, %struct.cv* %cv) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cv.addr = alloca %struct.cv*, align 8
  %sp = alloca %struct.sv**, align 8
  %len = alloca i32, align 4
  %count = alloca i32, align 4
  %reallen = alloca i32, align 4
  %text = alloca %struct.sv*, align 8
  %bdeparse = alloca %struct.sv*, align 8
  %tmp = alloca i32, align 4
  %tmp67 = alloca %struct.sv*, align 8
  %tmp82 = alloca i32, align 4
  %tmp97 = alloca %struct.sv*, align 8
  %tmp108 = alloca %struct.sv*, align 8
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %tmp192 = alloca i8*, align 8
  %clen = alloca i8, align 1
  %nsz231 = alloca i32, align 4
  %offset239 = alloca i32, align 4
  %tmp264 = alloca i8*, align 8
  %nsz298 = alloca i32, align 4
  %offset306 = alloca i32, align 4
  %tmp331 = alloca i8*, align 8
  %nsz366 = alloca i32, align 4
  %offset375 = alloca i32, align 4
  %tmp400 = alloca i8*, align 8
  %tmp422 = alloca i8*, align 8
  %nsz465 = alloca i32, align 4
  %offset473 = alloca i32, align 4
  %tmp498 = alloca i8*, align 8
  %y = alloca i32, align 4
  %nsz535 = alloca i32, align 4
  %offset543 = alloca i32, align 4
  %tmp568 = alloca i8*, align 8
  %tmp590 = alloca i8*, align 8
  %nsz615 = alloca i32, align 4
  %offset623 = alloca i32, align 4
  %tmp648 = alloca i8*, align 8
  %tmp670 = alloca i8*, align 8
  %nsz696 = alloca i32, align 4
  %offset705 = alloca i32, align 4
  %tmp730 = alloca i8*, align 8
  %tmp752 = alloca i8*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct.cv* %cv, %struct.cv** %cv.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %deparse = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 14
  %2 = load i32, i32* %deparse, align 4
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %deparse1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 14
  %4 = load i32, i32* %deparse1, align 4
  %cmp2 = icmp slt i32 %4, 0
  br i1 %cmp2, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.47, i32 0, i32 0), i32 1)
  %tobool = icmp ne %struct.sv* %call, null
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end.44

cond.false:                                       ; preds = %land.lhs.true
  %call3 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.47, i32 0, i32 0), i32 1)
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %call3, i32 0, i32 2
  %5 = load i32, i32* %sv_flags, align 4
  %and = and i32 %5, 262144
  %tobool4 = icmp ne i32 %and, 0
  br i1 %tobool4, label %cond.true.5, label %cond.false.15

cond.true.5:                                      ; preds = %cond.false
  %call6 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.47, i32 0, i32 0), i32 1)
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %call6, i32 0, i32 0
  %6 = load i8*, i8** %sv_any, align 8
  %7 = bitcast i8* %6 to %struct.xpv*
  store %struct.xpv* %7, %struct.xpv** @PL_Xpv, align 8
  %tobool7 = icmp ne %struct.xpv* %7, null
  br i1 %tobool7, label %land.rhs, label %land.end.14

land.rhs:                                         ; preds = %cond.true.5
  %8 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %8, i32 0, i32 1
  %9 = load i64, i64* %xpv_cur, align 8
  %cmp8 = icmp ugt i64 %9, 1
  br i1 %cmp8, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %10 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_cur9 = getelementptr inbounds %struct.xpv, %struct.xpv* %10, i32 0, i32 1
  %11 = load i64, i64* %xpv_cur9, align 8
  %tobool10 = icmp ne i64 %11, 0
  br i1 %tobool10, label %land.rhs.11, label %land.end

land.rhs.11:                                      ; preds = %lor.rhs
  %12 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %12, i32 0, i32 0
  %13 = load i8*, i8** %xpv_pv, align 8
  %14 = load i8, i8* %13, align 1
  %conv = sext i8 %14 to i32
  %cmp12 = icmp ne i32 %conv, 48
  br label %land.end

land.end:                                         ; preds = %land.rhs.11, %lor.rhs
  %15 = phi i1 [ false, %lor.rhs ], [ %cmp12, %land.rhs.11 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %land.rhs
  %16 = phi i1 [ true, %land.rhs ], [ %15, %land.end ]
  br label %land.end.14

land.end.14:                                      ; preds = %lor.end, %cond.true.5
  %17 = phi i1 [ false, %cond.true.5 ], [ %16, %lor.end ]
  %cond = select i1 %17, i32 1, i32 0
  br label %cond.end.42

cond.false.15:                                    ; preds = %cond.false
  %call16 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.47, i32 0, i32 0), i32 1)
  %sv_flags17 = getelementptr inbounds %struct.sv, %struct.sv* %call16, i32 0, i32 2
  %18 = load i32, i32* %sv_flags17, align 4
  %and18 = and i32 %18, 65536
  %tobool19 = icmp ne i32 %and18, 0
  br i1 %tobool19, label %cond.true.20, label %cond.false.25

cond.true.20:                                     ; preds = %cond.false.15
  %call21 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.47, i32 0, i32 0), i32 1)
  %sv_any22 = getelementptr inbounds %struct.sv, %struct.sv* %call21, i32 0, i32 0
  %19 = load i8*, i8** %sv_any22, align 8
  %20 = bitcast i8* %19 to %struct.xpviv*
  %xiv_iv = getelementptr inbounds %struct.xpviv, %struct.xpviv* %20, i32 0, i32 3
  %21 = load i64, i64* %xiv_iv, align 8
  %cmp23 = icmp ne i64 %21, 0
  %conv24 = zext i1 %cmp23 to i32
  br label %cond.end.40

cond.false.25:                                    ; preds = %cond.false.15
  %call26 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.47, i32 0, i32 0), i32 1)
  %sv_flags27 = getelementptr inbounds %struct.sv, %struct.sv* %call26, i32 0, i32 2
  %22 = load i32, i32* %sv_flags27, align 4
  %and28 = and i32 %22, 131072
  %tobool29 = icmp ne i32 %and28, 0
  br i1 %tobool29, label %cond.true.30, label %cond.false.35

cond.true.30:                                     ; preds = %cond.false.25
  %call31 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.47, i32 0, i32 0), i32 1)
  %sv_any32 = getelementptr inbounds %struct.sv, %struct.sv* %call31, i32 0, i32 0
  %23 = load i8*, i8** %sv_any32, align 8
  %24 = bitcast i8* %23 to %struct.xpvnv*
  %xnv_nv = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %24, i32 0, i32 4
  %25 = load double, double* %xnv_nv, align 8
  %cmp33 = fcmp une double %25, 0.000000e+00
  %conv34 = zext i1 %cmp33 to i32
  br label %cond.end

cond.false.35:                                    ; preds = %cond.false.25
  %call36 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.47, i32 0, i32 0), i32 1)
  %call37 = call signext i8 @Perl_sv_2bool(%struct.sv* %call36)
  %conv38 = sext i8 %call37 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false.35, %cond.true.30
  %cond39 = phi i32 [ %conv34, %cond.true.30 ], [ %conv38, %cond.false.35 ]
  br label %cond.end.40

cond.end.40:                                      ; preds = %cond.end, %cond.true.20
  %cond41 = phi i32 [ %conv24, %cond.true.20 ], [ %cond39, %cond.end ]
  br label %cond.end.42

cond.end.42:                                      ; preds = %cond.end.40, %land.end.14
  %cond43 = phi i32 [ %cond, %land.end.14 ], [ %cond41, %cond.end.40 ]
  br label %cond.end.44

cond.end.44:                                      ; preds = %cond.end.42, %cond.true
  %cond45 = phi i32 [ 0, %cond.true ], [ %cond43, %cond.end.42 ]
  %tobool46 = icmp ne i32 %cond45, 0
  %cond47 = select i1 %tobool46, i32 1, i32 0
  %26 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %deparse48 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %26, i32 0, i32 14
  store i32 %cond47, i32* %deparse48, align 4
  %tobool49 = icmp ne i32 %cond47, 0
  br i1 %tobool49, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end.44, %entry
  %27 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %28 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %29 = bitcast %struct.cv* %28 to %struct.sv*
  %call50 = call i32 @store_other(%struct.stcxt* %27, %struct.sv* %29)
  store i32 %call50, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end.44, %lor.lhs.false
  %call51 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.48, i32 0, i32 0), i64 10)
  %call52 = call %struct.sv* @Perl_newSVnv(double 6.100000e-01)
  call void (i32, %struct.sv*, %struct.sv*, ...) @Perl_load_module(i32 2, %struct.sv* %call51, %struct.sv* %call52)
  call void @Perl_push_scope()
  call void @Perl_save_int(i32* @PL_tmps_floor)
  %30 = load i32, i32* @PL_tmps_ix, align 4
  store i32 %30, i32* @PL_tmps_floor, align 4
  %31 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %31, i32 1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %32 = load i32*, i32** @PL_markstack_max, align 8
  %cmp53 = icmp eq i32* %incdec.ptr, %32
  br i1 %cmp53, label %if.then.55, label %if.end.56

if.then.55:                                       ; preds = %if.end
  call void @Perl_markstack_grow()
  br label %if.end.56

if.end.56:                                        ; preds = %if.then.55, %if.end
  %33 = load %struct.sv**, %struct.sv*** %sp, align 8
  %34 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %33 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %34 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv57 = trunc i64 %sub.ptr.div to i32
  %35 = load i32*, i32** @PL_markstack_ptr, align 8
  store i32 %conv57, i32* %35, align 4
  store i32 %conv57, i32* %tmp
  %36 = load i32, i32* %tmp
  %37 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %38 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast58 = ptrtoint %struct.sv** %37 to i64
  %sub.ptr.rhs.cast59 = ptrtoint %struct.sv** %38 to i64
  %sub.ptr.sub60 = sub i64 %sub.ptr.lhs.cast58, %sub.ptr.rhs.cast59
  %sub.ptr.div61 = sdiv exact i64 %sub.ptr.sub60, 8
  %cmp62 = icmp slt i64 %sub.ptr.div61, 1
  br i1 %cmp62, label %if.then.64, label %if.end.66

if.then.64:                                       ; preds = %if.end.56
  %39 = load %struct.sv**, %struct.sv*** %sp, align 8
  %40 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call65 = call %struct.sv** @Perl_stack_grow(%struct.sv** %39, %struct.sv** %40, i32 1)
  store %struct.sv** %call65, %struct.sv*** %sp, align 8
  br label %if.end.66

if.end.66:                                        ; preds = %if.then.64, %if.end.56
  %call68 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.48, i32 0, i32 0), i64 10)
  %call69 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call68)
  %41 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr70 = getelementptr inbounds %struct.sv*, %struct.sv** %41, i32 1
  store %struct.sv** %incdec.ptr70, %struct.sv*** %sp, align 8
  store %struct.sv* %call69, %struct.sv** %incdec.ptr70, align 8
  store %struct.sv* %call69, %struct.sv** %tmp67
  %42 = load %struct.sv*, %struct.sv** %tmp67
  %43 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %43, %struct.sv*** @PL_stack_sp, align 8
  %call71 = call i32 @Perl_call_method(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49, i32 0, i32 0), i32 0)
  store i32 %call71, i32* %count, align 4
  %44 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %44, %struct.sv*** %sp, align 8
  %45 = load i32, i32* %count, align 4
  %cmp72 = icmp ne i32 %45, 1
  br i1 %cmp72, label %if.then.74, label %if.end.75

if.then.74:                                       ; preds = %if.end.66
  %46 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %46, i32 0, i32 18
  store i32 1, i32* %s_dirty, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.50, i32 0, i32 0))
  br label %if.end.75

if.end.75:                                        ; preds = %if.then.74, %if.end.66
  %47 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr76 = getelementptr inbounds %struct.sv*, %struct.sv** %47, i32 -1
  store %struct.sv** %incdec.ptr76, %struct.sv*** %sp, align 8
  %48 = load %struct.sv*, %struct.sv** %47, align 8
  store %struct.sv* %48, %struct.sv** %bdeparse, align 8
  %49 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr77 = getelementptr inbounds i32, i32* %49, i32 1
  store i32* %incdec.ptr77, i32** @PL_markstack_ptr, align 8
  %50 = load i32*, i32** @PL_markstack_max, align 8
  %cmp78 = icmp eq i32* %incdec.ptr77, %50
  br i1 %cmp78, label %if.then.80, label %if.end.81

if.then.80:                                       ; preds = %if.end.75
  call void @Perl_markstack_grow()
  br label %if.end.81

if.end.81:                                        ; preds = %if.then.80, %if.end.75
  %51 = load %struct.sv**, %struct.sv*** %sp, align 8
  %52 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast83 = ptrtoint %struct.sv** %51 to i64
  %sub.ptr.rhs.cast84 = ptrtoint %struct.sv** %52 to i64
  %sub.ptr.sub85 = sub i64 %sub.ptr.lhs.cast83, %sub.ptr.rhs.cast84
  %sub.ptr.div86 = sdiv exact i64 %sub.ptr.sub85, 8
  %conv87 = trunc i64 %sub.ptr.div86 to i32
  %53 = load i32*, i32** @PL_markstack_ptr, align 8
  store i32 %conv87, i32* %53, align 4
  store i32 %conv87, i32* %tmp82
  %54 = load i32, i32* %tmp82
  %55 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %56 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast88 = ptrtoint %struct.sv** %55 to i64
  %sub.ptr.rhs.cast89 = ptrtoint %struct.sv** %56 to i64
  %sub.ptr.sub90 = sub i64 %sub.ptr.lhs.cast88, %sub.ptr.rhs.cast89
  %sub.ptr.div91 = sdiv exact i64 %sub.ptr.sub90, 8
  %cmp92 = icmp slt i64 %sub.ptr.div91, 1
  br i1 %cmp92, label %if.then.94, label %if.end.96

if.then.94:                                       ; preds = %if.end.81
  %57 = load %struct.sv**, %struct.sv*** %sp, align 8
  %58 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call95 = call %struct.sv** @Perl_stack_grow(%struct.sv** %57, %struct.sv** %58, i32 1)
  store %struct.sv** %call95, %struct.sv*** %sp, align 8
  br label %if.end.96

if.end.96:                                        ; preds = %if.then.94, %if.end.81
  %59 = load %struct.sv*, %struct.sv** %bdeparse, align 8
  %60 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr98 = getelementptr inbounds %struct.sv*, %struct.sv** %60, i32 1
  store %struct.sv** %incdec.ptr98, %struct.sv*** %sp, align 8
  store %struct.sv* %59, %struct.sv** %incdec.ptr98, align 8
  store %struct.sv* %59, %struct.sv** %tmp97
  %61 = load %struct.sv*, %struct.sv** %tmp97
  %62 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %63 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast99 = ptrtoint %struct.sv** %62 to i64
  %sub.ptr.rhs.cast100 = ptrtoint %struct.sv** %63 to i64
  %sub.ptr.sub101 = sub i64 %sub.ptr.lhs.cast99, %sub.ptr.rhs.cast100
  %sub.ptr.div102 = sdiv exact i64 %sub.ptr.sub101, 8
  %cmp103 = icmp slt i64 %sub.ptr.div102, 1
  br i1 %cmp103, label %if.then.105, label %if.end.107

if.then.105:                                      ; preds = %if.end.96
  %64 = load %struct.sv**, %struct.sv*** %sp, align 8
  %65 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call106 = call %struct.sv** @Perl_stack_grow(%struct.sv** %64, %struct.sv** %65, i32 1)
  store %struct.sv** %call106, %struct.sv*** %sp, align 8
  br label %if.end.107

if.end.107:                                       ; preds = %if.then.105, %if.end.96
  %66 = load %struct.cv*, %struct.cv** %cv.addr, align 8
  %67 = bitcast %struct.cv* %66 to %struct.sv*
  %call109 = call %struct.sv* @Perl_newRV(%struct.sv* %67)
  %call110 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call109)
  %68 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr111 = getelementptr inbounds %struct.sv*, %struct.sv** %68, i32 1
  store %struct.sv** %incdec.ptr111, %struct.sv*** %sp, align 8
  store %struct.sv* %call110, %struct.sv** %incdec.ptr111, align 8
  store %struct.sv* %call110, %struct.sv** %tmp108
  %69 = load %struct.sv*, %struct.sv** %tmp108
  %70 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %70, %struct.sv*** @PL_stack_sp, align 8
  %call112 = call i32 @Perl_call_method(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i32 0, i32 0), i32 0)
  store i32 %call112, i32* %count, align 4
  %71 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %71, %struct.sv*** %sp, align 8
  %72 = load i32, i32* %count, align 4
  %cmp113 = icmp ne i32 %72, 1
  br i1 %cmp113, label %if.then.115, label %if.end.117

if.then.115:                                      ; preds = %if.end.107
  %73 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty116 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %73, i32 0, i32 18
  store i32 1, i32* %s_dirty116, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.52, i32 0, i32 0))
  br label %if.end.117

if.end.117:                                       ; preds = %if.then.115, %if.end.107
  %74 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr118 = getelementptr inbounds %struct.sv*, %struct.sv** %74, i32 -1
  store %struct.sv** %incdec.ptr118, %struct.sv*** %sp, align 8
  %75 = load %struct.sv*, %struct.sv** %74, align 8
  store %struct.sv* %75, %struct.sv** %text, align 8
  %76 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_any119 = getelementptr inbounds %struct.sv, %struct.sv* %76, i32 0, i32 0
  %77 = load i8*, i8** %sv_any119, align 8
  %78 = bitcast i8* %77 to %struct.xpv*
  %xpv_len = getelementptr inbounds %struct.xpv, %struct.xpv* %78, i32 0, i32 2
  %79 = load i64, i64* %xpv_len, align 8
  %conv120 = trunc i64 %79 to i32
  store i32 %conv120, i32* %len, align 4
  %80 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_flags121 = getelementptr inbounds %struct.sv, %struct.sv* %80, i32 0, i32 2
  %81 = load i32, i32* %sv_flags121, align 4
  %and122 = and i32 %81, 262144
  %cmp123 = icmp eq i32 %and122, 262144
  br i1 %cmp123, label %cond.true.125, label %cond.false.128

cond.true.125:                                    ; preds = %if.end.117
  %82 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_any126 = getelementptr inbounds %struct.sv, %struct.sv* %82, i32 0, i32 0
  %83 = load i8*, i8** %sv_any126, align 8
  %84 = bitcast i8* %83 to %struct.xpv*
  %xpv_pv127 = getelementptr inbounds %struct.xpv, %struct.xpv* %84, i32 0, i32 0
  %85 = load i8*, i8** %xpv_pv127, align 8
  br label %cond.end.130

cond.false.128:                                   ; preds = %if.end.117
  %86 = load %struct.sv*, %struct.sv** %text, align 8
  %call129 = call i8* @Perl_sv_2pv_nolen(%struct.sv* %86)
  br label %cond.end.130

cond.end.130:                                     ; preds = %cond.false.128, %cond.true.125
  %cond131 = phi i8* [ %85, %cond.true.125 ], [ %call129, %cond.false.128 ]
  %call132 = call i64 @strlen(i8* %cond131)
  %conv133 = trunc i64 %call132 to i32
  store i32 %conv133, i32* %reallen, align 4
  %87 = load i32, i32* %len, align 4
  %cmp134 = icmp eq i32 %87, 0
  br i1 %cmp134, label %if.then.152, label %lor.lhs.false.136

lor.lhs.false.136:                                ; preds = %cond.end.130
  %88 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_flags137 = getelementptr inbounds %struct.sv, %struct.sv* %88, i32 0, i32 2
  %89 = load i32, i32* %sv_flags137, align 4
  %and138 = and i32 %89, 262144
  %cmp139 = icmp eq i32 %and138, 262144
  br i1 %cmp139, label %cond.true.141, label %cond.false.144

cond.true.141:                                    ; preds = %lor.lhs.false.136
  %90 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_any142 = getelementptr inbounds %struct.sv, %struct.sv* %90, i32 0, i32 0
  %91 = load i8*, i8** %sv_any142, align 8
  %92 = bitcast i8* %91 to %struct.xpv*
  %xpv_pv143 = getelementptr inbounds %struct.xpv, %struct.xpv* %92, i32 0, i32 0
  %93 = load i8*, i8** %xpv_pv143, align 8
  br label %cond.end.146

cond.false.144:                                   ; preds = %lor.lhs.false.136
  %94 = load %struct.sv*, %struct.sv** %text, align 8
  %call145 = call i8* @Perl_sv_2pv_nolen(%struct.sv* %94)
  br label %cond.end.146

cond.end.146:                                     ; preds = %cond.false.144, %cond.true.141
  %cond147 = phi i8* [ %93, %cond.true.141 ], [ %call145, %cond.false.144 ]
  %95 = load i32, i32* %reallen, align 4
  %idx.ext = sext i32 %95 to i64
  %add.ptr = getelementptr inbounds i8, i8* %cond147, i64 %idx.ext
  %add.ptr148 = getelementptr inbounds i8, i8* %add.ptr, i64 -1
  %96 = load i8, i8* %add.ptr148, align 1
  %conv149 = sext i8 %96 to i32
  %cmp150 = icmp eq i32 %conv149, 59
  br i1 %cmp150, label %if.then.152, label %if.end.154

if.then.152:                                      ; preds = %cond.end.146, %cond.end.130
  %97 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty153 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %97, i32 0, i32 18
  store i32 1, i32* %s_dirty153, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.53, i32 0, i32 0))
  br label %if.end.154

if.end.154:                                       ; preds = %if.then.152, %cond.end.146
  %98 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %98, i32 0, i32 23
  %99 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool155 = icmp ne %struct._PerlIO** %99, null
  br i1 %tobool155, label %if.else.203, label %if.then.156

if.then.156:                                      ; preds = %if.end.154
  %100 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %100, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %101 = load i8*, i8** %aptr, align 8
  %102 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf157 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %102, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf157, i32 0, i32 3
  %103 = load i8*, i8** %aend, align 8
  %cmp158 = icmp ult i8* %101, %103
  br i1 %cmp158, label %if.then.160, label %if.else

if.then.160:                                      ; preds = %if.then.156
  %104 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf161 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %104, i32 0, i32 21
  %aptr162 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf161, i32 0, i32 2
  %105 = load i8*, i8** %aptr162, align 8
  %incdec.ptr163 = getelementptr inbounds i8, i8* %105, i32 1
  store i8* %incdec.ptr163, i8** %aptr162, align 8
  store i8 26, i8* %105, align 1
  br label %if.end.202

if.else:                                          ; preds = %if.then.156
  %106 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf165 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %106, i32 0, i32 21
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf165, i32 0, i32 1
  %107 = load i64, i64* %asiz, align 8
  %add = add i64 1, %107
  %add166 = add i64 %add, 8191
  %and167 = and i64 %add166, -8192
  %conv168 = trunc i64 %and167 to i32
  store i32 %conv168, i32* %nsz, align 4
  %108 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf170 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %108, i32 0, i32 21
  %aptr171 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf170, i32 0, i32 2
  %109 = load i8*, i8** %aptr171, align 8
  %110 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf172 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %110, i32 0, i32 21
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf172, i32 0, i32 0
  %111 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast173 = ptrtoint i8* %109 to i64
  %sub.ptr.rhs.cast174 = ptrtoint i8* %111 to i64
  %sub.ptr.sub175 = sub i64 %sub.ptr.lhs.cast173, %sub.ptr.rhs.cast174
  %conv176 = trunc i64 %sub.ptr.sub175 to i32
  store i32 %conv176, i32* %offset, align 4
  %112 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf177 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %112, i32 0, i32 21
  %arena178 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf177, i32 0, i32 0
  %113 = load i8*, i8** %arena178, align 8
  %114 = load i32, i32* %nsz, align 4
  %conv179 = sext i32 %114 to i64
  %mul = mul i64 %conv179, 1
  %call180 = call i8* @Perl_safesysrealloc(i8* %113, i64 %mul)
  %115 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf181 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %115, i32 0, i32 21
  %arena182 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf181, i32 0, i32 0
  store i8* %call180, i8** %arena182, align 8
  %116 = load i32, i32* %nsz, align 4
  %conv183 = sext i32 %116 to i64
  %117 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf184 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %117, i32 0, i32 21
  %asiz185 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf184, i32 0, i32 1
  store i64 %conv183, i64* %asiz185, align 8
  %118 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf186 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %118, i32 0, i32 21
  %arena187 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf186, i32 0, i32 0
  %119 = load i8*, i8** %arena187, align 8
  %120 = load i32, i32* %offset, align 4
  %idx.ext188 = sext i32 %120 to i64
  %add.ptr189 = getelementptr inbounds i8, i8* %119, i64 %idx.ext188
  %121 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf190 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %121, i32 0, i32 21
  %aptr191 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf190, i32 0, i32 2
  store i8* %add.ptr189, i8** %aptr191, align 8
  %122 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf193 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %122, i32 0, i32 21
  %arena194 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf193, i32 0, i32 0
  %123 = load i8*, i8** %arena194, align 8
  %124 = load i32, i32* %nsz, align 4
  %idx.ext195 = sext i32 %124 to i64
  %add.ptr196 = getelementptr inbounds i8, i8* %123, i64 %idx.ext195
  %125 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf197 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %125, i32 0, i32 21
  %aend198 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf197, i32 0, i32 3
  store i8* %add.ptr196, i8** %aend198, align 8
  store i8* %add.ptr196, i8** %tmp192
  %126 = load i8*, i8** %tmp192
  %127 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf199 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %127, i32 0, i32 21
  %aptr200 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf199, i32 0, i32 2
  %128 = load i8*, i8** %aptr200, align 8
  %incdec.ptr201 = getelementptr inbounds i8, i8* %128, i32 1
  store i8* %incdec.ptr201, i8** %aptr200, align 8
  store i8 26, i8* %128, align 1
  br label %if.end.202

if.end.202:                                       ; preds = %if.else, %if.then.160
  br label %if.end.210

if.else.203:                                      ; preds = %if.end.154
  %129 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio204 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %129, i32 0, i32 23
  %130 = load %struct._PerlIO**, %struct._PerlIO*** %fio204, align 8
  %call205 = call i32 @PerlIO_putc(%struct._PerlIO** %130, i32 26)
  %cmp206 = icmp eq i32 %call205, -1
  br i1 %cmp206, label %if.then.208, label %if.end.209

if.then.208:                                      ; preds = %if.else.203
  store i32 -1, i32* %retval
  br label %return

if.end.209:                                       ; preds = %if.else.203
  br label %if.end.210

if.end.210:                                       ; preds = %if.end.209, %if.end.202
  %131 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %131, i32 0, i32 9
  %132 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %132, 1
  store i64 %inc, i64* %tagnum, align 8
  %133 = load i32, i32* %len, align 4
  %cmp211 = icmp sle i32 %133, 255
  br i1 %cmp211, label %if.then.213, label %if.else.449

if.then.213:                                      ; preds = %if.end.210
  %134 = load i32, i32* %len, align 4
  %conv215 = trunc i32 %134 to i8
  store i8 %conv215, i8* %clen, align 1
  %135 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio216 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %135, i32 0, i32 23
  %136 = load %struct._PerlIO**, %struct._PerlIO*** %fio216, align 8
  %tobool217 = icmp ne %struct._PerlIO** %136, null
  br i1 %tobool217, label %if.else.275, label %if.then.218

if.then.218:                                      ; preds = %if.then.213
  %137 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf219 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %137, i32 0, i32 21
  %aptr220 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf219, i32 0, i32 2
  %138 = load i8*, i8** %aptr220, align 8
  %139 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf221 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %139, i32 0, i32 21
  %aend222 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf221, i32 0, i32 3
  %140 = load i8*, i8** %aend222, align 8
  %cmp223 = icmp ult i8* %138, %140
  br i1 %cmp223, label %if.then.225, label %if.else.229

if.then.225:                                      ; preds = %if.then.218
  %141 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf226 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %141, i32 0, i32 21
  %aptr227 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf226, i32 0, i32 2
  %142 = load i8*, i8** %aptr227, align 8
  %incdec.ptr228 = getelementptr inbounds i8, i8* %142, i32 1
  store i8* %incdec.ptr228, i8** %aptr227, align 8
  store i8 10, i8* %142, align 1
  br label %if.end.274

if.else.229:                                      ; preds = %if.then.218
  %143 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf232 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %143, i32 0, i32 21
  %asiz233 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf232, i32 0, i32 1
  %144 = load i64, i64* %asiz233, align 8
  %add234 = add i64 1, %144
  %add235 = add i64 %add234, 8191
  %and236 = and i64 %add235, -8192
  %conv237 = trunc i64 %and236 to i32
  store i32 %conv237, i32* %nsz231, align 4
  %145 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf240 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %145, i32 0, i32 21
  %aptr241 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf240, i32 0, i32 2
  %146 = load i8*, i8** %aptr241, align 8
  %147 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf242 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %147, i32 0, i32 21
  %arena243 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf242, i32 0, i32 0
  %148 = load i8*, i8** %arena243, align 8
  %sub.ptr.lhs.cast244 = ptrtoint i8* %146 to i64
  %sub.ptr.rhs.cast245 = ptrtoint i8* %148 to i64
  %sub.ptr.sub246 = sub i64 %sub.ptr.lhs.cast244, %sub.ptr.rhs.cast245
  %conv247 = trunc i64 %sub.ptr.sub246 to i32
  store i32 %conv247, i32* %offset239, align 4
  %149 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf248 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %149, i32 0, i32 21
  %arena249 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf248, i32 0, i32 0
  %150 = load i8*, i8** %arena249, align 8
  %151 = load i32, i32* %nsz231, align 4
  %conv250 = sext i32 %151 to i64
  %mul251 = mul i64 %conv250, 1
  %call252 = call i8* @Perl_safesysrealloc(i8* %150, i64 %mul251)
  %152 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf253 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %152, i32 0, i32 21
  %arena254 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf253, i32 0, i32 0
  store i8* %call252, i8** %arena254, align 8
  %153 = load i32, i32* %nsz231, align 4
  %conv255 = sext i32 %153 to i64
  %154 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf256 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %154, i32 0, i32 21
  %asiz257 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf256, i32 0, i32 1
  store i64 %conv255, i64* %asiz257, align 8
  %155 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf258 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %155, i32 0, i32 21
  %arena259 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf258, i32 0, i32 0
  %156 = load i8*, i8** %arena259, align 8
  %157 = load i32, i32* %offset239, align 4
  %idx.ext260 = sext i32 %157 to i64
  %add.ptr261 = getelementptr inbounds i8, i8* %156, i64 %idx.ext260
  %158 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf262 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %158, i32 0, i32 21
  %aptr263 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf262, i32 0, i32 2
  store i8* %add.ptr261, i8** %aptr263, align 8
  %159 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf265 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %159, i32 0, i32 21
  %arena266 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf265, i32 0, i32 0
  %160 = load i8*, i8** %arena266, align 8
  %161 = load i32, i32* %nsz231, align 4
  %idx.ext267 = sext i32 %161 to i64
  %add.ptr268 = getelementptr inbounds i8, i8* %160, i64 %idx.ext267
  %162 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf269 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %162, i32 0, i32 21
  %aend270 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf269, i32 0, i32 3
  store i8* %add.ptr268, i8** %aend270, align 8
  store i8* %add.ptr268, i8** %tmp264
  %163 = load i8*, i8** %tmp264
  %164 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf271 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %164, i32 0, i32 21
  %aptr272 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf271, i32 0, i32 2
  %165 = load i8*, i8** %aptr272, align 8
  %incdec.ptr273 = getelementptr inbounds i8, i8* %165, i32 1
  store i8* %incdec.ptr273, i8** %aptr272, align 8
  store i8 10, i8* %165, align 1
  br label %if.end.274

if.end.274:                                       ; preds = %if.else.229, %if.then.225
  br label %if.end.282

if.else.275:                                      ; preds = %if.then.213
  %166 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio276 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %166, i32 0, i32 23
  %167 = load %struct._PerlIO**, %struct._PerlIO*** %fio276, align 8
  %call277 = call i32 @PerlIO_putc(%struct._PerlIO** %167, i32 10)
  %cmp278 = icmp eq i32 %call277, -1
  br i1 %cmp278, label %if.then.280, label %if.end.281

if.then.280:                                      ; preds = %if.else.275
  store i32 -1, i32* %retval
  br label %return

if.end.281:                                       ; preds = %if.else.275
  br label %if.end.282

if.end.282:                                       ; preds = %if.end.281, %if.end.274
  %168 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio283 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %168, i32 0, i32 23
  %169 = load %struct._PerlIO**, %struct._PerlIO*** %fio283, align 8
  %tobool284 = icmp ne %struct._PerlIO** %169, null
  br i1 %tobool284, label %if.else.342, label %if.then.285

if.then.285:                                      ; preds = %if.end.282
  %170 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf286 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %170, i32 0, i32 21
  %aptr287 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf286, i32 0, i32 2
  %171 = load i8*, i8** %aptr287, align 8
  %172 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf288 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %172, i32 0, i32 21
  %aend289 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf288, i32 0, i32 3
  %173 = load i8*, i8** %aend289, align 8
  %cmp290 = icmp ult i8* %171, %173
  br i1 %cmp290, label %if.then.292, label %if.else.296

if.then.292:                                      ; preds = %if.then.285
  %174 = load i8, i8* %clen, align 1
  %175 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf293 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %175, i32 0, i32 21
  %aptr294 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf293, i32 0, i32 2
  %176 = load i8*, i8** %aptr294, align 8
  %incdec.ptr295 = getelementptr inbounds i8, i8* %176, i32 1
  store i8* %incdec.ptr295, i8** %aptr294, align 8
  store i8 %174, i8* %176, align 1
  br label %if.end.341

if.else.296:                                      ; preds = %if.then.285
  %177 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf299 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %177, i32 0, i32 21
  %asiz300 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf299, i32 0, i32 1
  %178 = load i64, i64* %asiz300, align 8
  %add301 = add i64 1, %178
  %add302 = add i64 %add301, 8191
  %and303 = and i64 %add302, -8192
  %conv304 = trunc i64 %and303 to i32
  store i32 %conv304, i32* %nsz298, align 4
  %179 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf307 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %179, i32 0, i32 21
  %aptr308 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf307, i32 0, i32 2
  %180 = load i8*, i8** %aptr308, align 8
  %181 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf309 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %181, i32 0, i32 21
  %arena310 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf309, i32 0, i32 0
  %182 = load i8*, i8** %arena310, align 8
  %sub.ptr.lhs.cast311 = ptrtoint i8* %180 to i64
  %sub.ptr.rhs.cast312 = ptrtoint i8* %182 to i64
  %sub.ptr.sub313 = sub i64 %sub.ptr.lhs.cast311, %sub.ptr.rhs.cast312
  %conv314 = trunc i64 %sub.ptr.sub313 to i32
  store i32 %conv314, i32* %offset306, align 4
  %183 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf315 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %183, i32 0, i32 21
  %arena316 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf315, i32 0, i32 0
  %184 = load i8*, i8** %arena316, align 8
  %185 = load i32, i32* %nsz298, align 4
  %conv317 = sext i32 %185 to i64
  %mul318 = mul i64 %conv317, 1
  %call319 = call i8* @Perl_safesysrealloc(i8* %184, i64 %mul318)
  %186 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf320 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %186, i32 0, i32 21
  %arena321 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf320, i32 0, i32 0
  store i8* %call319, i8** %arena321, align 8
  %187 = load i32, i32* %nsz298, align 4
  %conv322 = sext i32 %187 to i64
  %188 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf323 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %188, i32 0, i32 21
  %asiz324 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf323, i32 0, i32 1
  store i64 %conv322, i64* %asiz324, align 8
  %189 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf325 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %189, i32 0, i32 21
  %arena326 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf325, i32 0, i32 0
  %190 = load i8*, i8** %arena326, align 8
  %191 = load i32, i32* %offset306, align 4
  %idx.ext327 = sext i32 %191 to i64
  %add.ptr328 = getelementptr inbounds i8, i8* %190, i64 %idx.ext327
  %192 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf329 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %192, i32 0, i32 21
  %aptr330 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf329, i32 0, i32 2
  store i8* %add.ptr328, i8** %aptr330, align 8
  %193 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf332 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %193, i32 0, i32 21
  %arena333 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf332, i32 0, i32 0
  %194 = load i8*, i8** %arena333, align 8
  %195 = load i32, i32* %nsz298, align 4
  %idx.ext334 = sext i32 %195 to i64
  %add.ptr335 = getelementptr inbounds i8, i8* %194, i64 %idx.ext334
  %196 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf336 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %196, i32 0, i32 21
  %aend337 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf336, i32 0, i32 3
  store i8* %add.ptr335, i8** %aend337, align 8
  store i8* %add.ptr335, i8** %tmp331
  %197 = load i8*, i8** %tmp331
  %198 = load i8, i8* %clen, align 1
  %199 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf338 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %199, i32 0, i32 21
  %aptr339 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf338, i32 0, i32 2
  %200 = load i8*, i8** %aptr339, align 8
  %incdec.ptr340 = getelementptr inbounds i8, i8* %200, i32 1
  store i8* %incdec.ptr340, i8** %aptr339, align 8
  store i8 %198, i8* %200, align 1
  br label %if.end.341

if.end.341:                                       ; preds = %if.else.296, %if.then.292
  br label %if.end.350

if.else.342:                                      ; preds = %if.end.282
  %201 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio343 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %201, i32 0, i32 23
  %202 = load %struct._PerlIO**, %struct._PerlIO*** %fio343, align 8
  %203 = load i8, i8* %clen, align 1
  %conv344 = zext i8 %203 to i32
  %call345 = call i32 @PerlIO_putc(%struct._PerlIO** %202, i32 %conv344)
  %cmp346 = icmp eq i32 %call345, -1
  br i1 %cmp346, label %if.then.348, label %if.end.349

if.then.348:                                      ; preds = %if.else.342
  store i32 -1, i32* %retval
  br label %return

if.end.349:                                       ; preds = %if.else.342
  br label %if.end.350

if.end.350:                                       ; preds = %if.end.349, %if.end.341
  %204 = load i32, i32* %len, align 4
  %tobool351 = icmp ne i32 %204, 0
  br i1 %tobool351, label %if.then.352, label %if.end.448

if.then.352:                                      ; preds = %if.end.350
  %205 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio353 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %205, i32 0, i32 23
  %206 = load %struct._PerlIO**, %struct._PerlIO*** %fio353, align 8
  %tobool354 = icmp ne %struct._PerlIO** %206, null
  br i1 %tobool354, label %if.else.427, label %if.then.355

if.then.355:                                      ; preds = %if.then.352
  %207 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf356 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %207, i32 0, i32 21
  %aptr357 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf356, i32 0, i32 2
  %208 = load i8*, i8** %aptr357, align 8
  %209 = load i32, i32* %len, align 4
  %idx.ext358 = sext i32 %209 to i64
  %add.ptr359 = getelementptr inbounds i8, i8* %208, i64 %idx.ext358
  %210 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf360 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %210, i32 0, i32 21
  %aend361 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf360, i32 0, i32 3
  %211 = load i8*, i8** %aend361, align 8
  %cmp362 = icmp ugt i8* %add.ptr359, %211
  br i1 %cmp362, label %if.then.364, label %if.end.407

if.then.364:                                      ; preds = %if.then.355
  %212 = load i32, i32* %len, align 4
  %conv367 = sext i32 %212 to i64
  %213 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf368 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %213, i32 0, i32 21
  %asiz369 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf368, i32 0, i32 1
  %214 = load i64, i64* %asiz369, align 8
  %add370 = add i64 %conv367, %214
  %add371 = add i64 %add370, 8191
  %and372 = and i64 %add371, -8192
  %conv373 = trunc i64 %and372 to i32
  store i32 %conv373, i32* %nsz366, align 4
  %215 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf376 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %215, i32 0, i32 21
  %aptr377 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf376, i32 0, i32 2
  %216 = load i8*, i8** %aptr377, align 8
  %217 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf378 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %217, i32 0, i32 21
  %arena379 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf378, i32 0, i32 0
  %218 = load i8*, i8** %arena379, align 8
  %sub.ptr.lhs.cast380 = ptrtoint i8* %216 to i64
  %sub.ptr.rhs.cast381 = ptrtoint i8* %218 to i64
  %sub.ptr.sub382 = sub i64 %sub.ptr.lhs.cast380, %sub.ptr.rhs.cast381
  %conv383 = trunc i64 %sub.ptr.sub382 to i32
  store i32 %conv383, i32* %offset375, align 4
  %219 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf384 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %219, i32 0, i32 21
  %arena385 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf384, i32 0, i32 0
  %220 = load i8*, i8** %arena385, align 8
  %221 = load i32, i32* %nsz366, align 4
  %conv386 = sext i32 %221 to i64
  %mul387 = mul i64 %conv386, 1
  %call388 = call i8* @Perl_safesysrealloc(i8* %220, i64 %mul387)
  %222 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf389 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %222, i32 0, i32 21
  %arena390 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf389, i32 0, i32 0
  store i8* %call388, i8** %arena390, align 8
  %223 = load i32, i32* %nsz366, align 4
  %conv391 = sext i32 %223 to i64
  %224 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf392 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %224, i32 0, i32 21
  %asiz393 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf392, i32 0, i32 1
  store i64 %conv391, i64* %asiz393, align 8
  %225 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf394 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %225, i32 0, i32 21
  %arena395 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf394, i32 0, i32 0
  %226 = load i8*, i8** %arena395, align 8
  %227 = load i32, i32* %offset375, align 4
  %idx.ext396 = sext i32 %227 to i64
  %add.ptr397 = getelementptr inbounds i8, i8* %226, i64 %idx.ext396
  %228 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf398 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %228, i32 0, i32 21
  %aptr399 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf398, i32 0, i32 2
  store i8* %add.ptr397, i8** %aptr399, align 8
  %229 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf401 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %229, i32 0, i32 21
  %arena402 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf401, i32 0, i32 0
  %230 = load i8*, i8** %arena402, align 8
  %231 = load i32, i32* %nsz366, align 4
  %idx.ext403 = sext i32 %231 to i64
  %add.ptr404 = getelementptr inbounds i8, i8* %230, i64 %idx.ext403
  %232 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf405 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %232, i32 0, i32 21
  %aend406 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf405, i32 0, i32 3
  store i8* %add.ptr404, i8** %aend406, align 8
  store i8* %add.ptr404, i8** %tmp400
  %233 = load i8*, i8** %tmp400
  br label %if.end.407

if.end.407:                                       ; preds = %if.then.364, %if.then.355
  %234 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf408 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %234, i32 0, i32 21
  %aptr409 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf408, i32 0, i32 2
  %235 = load i8*, i8** %aptr409, align 8
  %236 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_flags410 = getelementptr inbounds %struct.sv, %struct.sv* %236, i32 0, i32 2
  %237 = load i32, i32* %sv_flags410, align 4
  %and411 = and i32 %237, 262144
  %cmp412 = icmp eq i32 %and411, 262144
  br i1 %cmp412, label %cond.true.414, label %cond.false.417

cond.true.414:                                    ; preds = %if.end.407
  %238 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_any415 = getelementptr inbounds %struct.sv, %struct.sv* %238, i32 0, i32 0
  %239 = load i8*, i8** %sv_any415, align 8
  %240 = bitcast i8* %239 to %struct.xpv*
  %xpv_pv416 = getelementptr inbounds %struct.xpv, %struct.xpv* %240, i32 0, i32 0
  %241 = load i8*, i8** %xpv_pv416, align 8
  br label %cond.end.419

cond.false.417:                                   ; preds = %if.end.407
  %242 = load %struct.sv*, %struct.sv** %text, align 8
  %call418 = call i8* @Perl_sv_2pv_nolen(%struct.sv* %242)
  br label %cond.end.419

cond.end.419:                                     ; preds = %cond.false.417, %cond.true.414
  %cond420 = phi i8* [ %241, %cond.true.414 ], [ %call418, %cond.false.417 ]
  %243 = load i32, i32* %len, align 4
  %conv421 = sext i32 %243 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %235, i8* %cond420, i64 %conv421, i32 1, i1 false)
  %244 = load i32, i32* %len, align 4
  %245 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf423 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %245, i32 0, i32 21
  %aptr424 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf423, i32 0, i32 2
  %246 = load i8*, i8** %aptr424, align 8
  %idx.ext425 = sext i32 %244 to i64
  %add.ptr426 = getelementptr inbounds i8, i8* %246, i64 %idx.ext425
  store i8* %add.ptr426, i8** %aptr424, align 8
  store i8* %add.ptr426, i8** %tmp422
  %247 = load i8*, i8** %tmp422
  br label %if.end.447

if.else.427:                                      ; preds = %if.then.352
  %248 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio428 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %248, i32 0, i32 23
  %249 = load %struct._PerlIO**, %struct._PerlIO*** %fio428, align 8
  %250 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_flags429 = getelementptr inbounds %struct.sv, %struct.sv* %250, i32 0, i32 2
  %251 = load i32, i32* %sv_flags429, align 4
  %and430 = and i32 %251, 262144
  %cmp431 = icmp eq i32 %and430, 262144
  br i1 %cmp431, label %cond.true.433, label %cond.false.436

cond.true.433:                                    ; preds = %if.else.427
  %252 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_any434 = getelementptr inbounds %struct.sv, %struct.sv* %252, i32 0, i32 0
  %253 = load i8*, i8** %sv_any434, align 8
  %254 = bitcast i8* %253 to %struct.xpv*
  %xpv_pv435 = getelementptr inbounds %struct.xpv, %struct.xpv* %254, i32 0, i32 0
  %255 = load i8*, i8** %xpv_pv435, align 8
  br label %cond.end.438

cond.false.436:                                   ; preds = %if.else.427
  %256 = load %struct.sv*, %struct.sv** %text, align 8
  %call437 = call i8* @Perl_sv_2pv_nolen(%struct.sv* %256)
  br label %cond.end.438

cond.end.438:                                     ; preds = %cond.false.436, %cond.true.433
  %cond439 = phi i8* [ %255, %cond.true.433 ], [ %call437, %cond.false.436 ]
  %257 = load i32, i32* %len, align 4
  %conv440 = sext i32 %257 to i64
  %call441 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %249, i8* %cond439, i64 %conv440)
  %258 = load i32, i32* %len, align 4
  %conv442 = sext i32 %258 to i64
  %cmp443 = icmp ne i64 %call441, %conv442
  br i1 %cmp443, label %if.then.445, label %if.end.446

if.then.445:                                      ; preds = %cond.end.438
  store i32 -1, i32* %retval
  br label %return

if.end.446:                                       ; preds = %cond.end.438
  br label %if.end.447

if.end.447:                                       ; preds = %if.end.446, %cond.end.419
  br label %if.end.448

if.end.448:                                       ; preds = %if.end.447, %if.end.350
  br label %if.end.778

if.else.449:                                      ; preds = %if.end.210
  %259 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio450 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %259, i32 0, i32 23
  %260 = load %struct._PerlIO**, %struct._PerlIO*** %fio450, align 8
  %tobool451 = icmp ne %struct._PerlIO** %260, null
  br i1 %tobool451, label %if.else.509, label %if.then.452

if.then.452:                                      ; preds = %if.else.449
  %261 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf453 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %261, i32 0, i32 21
  %aptr454 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf453, i32 0, i32 2
  %262 = load i8*, i8** %aptr454, align 8
  %263 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf455 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %263, i32 0, i32 21
  %aend456 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf455, i32 0, i32 3
  %264 = load i8*, i8** %aend456, align 8
  %cmp457 = icmp ult i8* %262, %264
  br i1 %cmp457, label %if.then.459, label %if.else.463

if.then.459:                                      ; preds = %if.then.452
  %265 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf460 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %265, i32 0, i32 21
  %aptr461 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf460, i32 0, i32 2
  %266 = load i8*, i8** %aptr461, align 8
  %incdec.ptr462 = getelementptr inbounds i8, i8* %266, i32 1
  store i8* %incdec.ptr462, i8** %aptr461, align 8
  store i8 1, i8* %266, align 1
  br label %if.end.508

if.else.463:                                      ; preds = %if.then.452
  %267 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf466 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %267, i32 0, i32 21
  %asiz467 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf466, i32 0, i32 1
  %268 = load i64, i64* %asiz467, align 8
  %add468 = add i64 1, %268
  %add469 = add i64 %add468, 8191
  %and470 = and i64 %add469, -8192
  %conv471 = trunc i64 %and470 to i32
  store i32 %conv471, i32* %nsz465, align 4
  %269 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf474 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %269, i32 0, i32 21
  %aptr475 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf474, i32 0, i32 2
  %270 = load i8*, i8** %aptr475, align 8
  %271 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf476 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %271, i32 0, i32 21
  %arena477 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf476, i32 0, i32 0
  %272 = load i8*, i8** %arena477, align 8
  %sub.ptr.lhs.cast478 = ptrtoint i8* %270 to i64
  %sub.ptr.rhs.cast479 = ptrtoint i8* %272 to i64
  %sub.ptr.sub480 = sub i64 %sub.ptr.lhs.cast478, %sub.ptr.rhs.cast479
  %conv481 = trunc i64 %sub.ptr.sub480 to i32
  store i32 %conv481, i32* %offset473, align 4
  %273 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf482 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %273, i32 0, i32 21
  %arena483 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf482, i32 0, i32 0
  %274 = load i8*, i8** %arena483, align 8
  %275 = load i32, i32* %nsz465, align 4
  %conv484 = sext i32 %275 to i64
  %mul485 = mul i64 %conv484, 1
  %call486 = call i8* @Perl_safesysrealloc(i8* %274, i64 %mul485)
  %276 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf487 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %276, i32 0, i32 21
  %arena488 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf487, i32 0, i32 0
  store i8* %call486, i8** %arena488, align 8
  %277 = load i32, i32* %nsz465, align 4
  %conv489 = sext i32 %277 to i64
  %278 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf490 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %278, i32 0, i32 21
  %asiz491 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf490, i32 0, i32 1
  store i64 %conv489, i64* %asiz491, align 8
  %279 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf492 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %279, i32 0, i32 21
  %arena493 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf492, i32 0, i32 0
  %280 = load i8*, i8** %arena493, align 8
  %281 = load i32, i32* %offset473, align 4
  %idx.ext494 = sext i32 %281 to i64
  %add.ptr495 = getelementptr inbounds i8, i8* %280, i64 %idx.ext494
  %282 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf496 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %282, i32 0, i32 21
  %aptr497 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf496, i32 0, i32 2
  store i8* %add.ptr495, i8** %aptr497, align 8
  %283 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf499 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %283, i32 0, i32 21
  %arena500 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf499, i32 0, i32 0
  %284 = load i8*, i8** %arena500, align 8
  %285 = load i32, i32* %nsz465, align 4
  %idx.ext501 = sext i32 %285 to i64
  %add.ptr502 = getelementptr inbounds i8, i8* %284, i64 %idx.ext501
  %286 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf503 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %286, i32 0, i32 21
  %aend504 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf503, i32 0, i32 3
  store i8* %add.ptr502, i8** %aend504, align 8
  store i8* %add.ptr502, i8** %tmp498
  %287 = load i8*, i8** %tmp498
  %288 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf505 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %288, i32 0, i32 21
  %aptr506 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf505, i32 0, i32 2
  %289 = load i8*, i8** %aptr506, align 8
  %incdec.ptr507 = getelementptr inbounds i8, i8* %289, i32 1
  store i8* %incdec.ptr507, i8** %aptr506, align 8
  store i8 1, i8* %289, align 1
  br label %if.end.508

if.end.508:                                       ; preds = %if.else.463, %if.then.459
  br label %if.end.516

if.else.509:                                      ; preds = %if.else.449
  %290 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio510 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %290, i32 0, i32 23
  %291 = load %struct._PerlIO**, %struct._PerlIO*** %fio510, align 8
  %call511 = call i32 @PerlIO_putc(%struct._PerlIO** %291, i32 1)
  %cmp512 = icmp eq i32 %call511, -1
  br i1 %cmp512, label %if.then.514, label %if.end.515

if.then.514:                                      ; preds = %if.else.509
  store i32 -1, i32* %retval
  br label %return

if.end.515:                                       ; preds = %if.else.509
  br label %if.end.516

if.end.516:                                       ; preds = %if.end.515, %if.end.508
  %292 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %292, i32 0, i32 11
  %293 = load i32, i32* %netorder, align 4
  %tobool517 = icmp ne i32 %293, 0
  br i1 %tobool517, label %if.then.518, label %if.else.602

if.then.518:                                      ; preds = %if.end.516
  %294 = load i32, i32* %len, align 4
  %conv520 = sext i32 %294 to i64
  %call521 = call i64 @Perl_my_htonl(i64 %conv520)
  %conv522 = trunc i64 %call521 to i32
  store i32 %conv522, i32* %y, align 4
  %295 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio523 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %295, i32 0, i32 23
  %296 = load %struct._PerlIO**, %struct._PerlIO*** %fio523, align 8
  %tobool524 = icmp ne %struct._PerlIO** %296, null
  br i1 %tobool524, label %if.else.594, label %if.then.525

if.then.525:                                      ; preds = %if.then.518
  %297 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf526 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %297, i32 0, i32 21
  %aptr527 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf526, i32 0, i32 2
  %298 = load i8*, i8** %aptr527, align 8
  %add.ptr528 = getelementptr inbounds i8, i8* %298, i64 4
  %299 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf529 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %299, i32 0, i32 21
  %aend530 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf529, i32 0, i32 3
  %300 = load i8*, i8** %aend530, align 8
  %cmp531 = icmp ugt i8* %add.ptr528, %300
  br i1 %cmp531, label %if.then.533, label %if.end.575

if.then.533:                                      ; preds = %if.then.525
  %301 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf536 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %301, i32 0, i32 21
  %asiz537 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf536, i32 0, i32 1
  %302 = load i64, i64* %asiz537, align 8
  %add538 = add i64 4, %302
  %add539 = add i64 %add538, 8191
  %and540 = and i64 %add539, -8192
  %conv541 = trunc i64 %and540 to i32
  store i32 %conv541, i32* %nsz535, align 4
  %303 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf544 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %303, i32 0, i32 21
  %aptr545 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf544, i32 0, i32 2
  %304 = load i8*, i8** %aptr545, align 8
  %305 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf546 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %305, i32 0, i32 21
  %arena547 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf546, i32 0, i32 0
  %306 = load i8*, i8** %arena547, align 8
  %sub.ptr.lhs.cast548 = ptrtoint i8* %304 to i64
  %sub.ptr.rhs.cast549 = ptrtoint i8* %306 to i64
  %sub.ptr.sub550 = sub i64 %sub.ptr.lhs.cast548, %sub.ptr.rhs.cast549
  %conv551 = trunc i64 %sub.ptr.sub550 to i32
  store i32 %conv551, i32* %offset543, align 4
  %307 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf552 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %307, i32 0, i32 21
  %arena553 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf552, i32 0, i32 0
  %308 = load i8*, i8** %arena553, align 8
  %309 = load i32, i32* %nsz535, align 4
  %conv554 = sext i32 %309 to i64
  %mul555 = mul i64 %conv554, 1
  %call556 = call i8* @Perl_safesysrealloc(i8* %308, i64 %mul555)
  %310 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf557 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %310, i32 0, i32 21
  %arena558 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf557, i32 0, i32 0
  store i8* %call556, i8** %arena558, align 8
  %311 = load i32, i32* %nsz535, align 4
  %conv559 = sext i32 %311 to i64
  %312 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf560 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %312, i32 0, i32 21
  %asiz561 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf560, i32 0, i32 1
  store i64 %conv559, i64* %asiz561, align 8
  %313 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf562 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %313, i32 0, i32 21
  %arena563 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf562, i32 0, i32 0
  %314 = load i8*, i8** %arena563, align 8
  %315 = load i32, i32* %offset543, align 4
  %idx.ext564 = sext i32 %315 to i64
  %add.ptr565 = getelementptr inbounds i8, i8* %314, i64 %idx.ext564
  %316 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf566 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %316, i32 0, i32 21
  %aptr567 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf566, i32 0, i32 2
  store i8* %add.ptr565, i8** %aptr567, align 8
  %317 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf569 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %317, i32 0, i32 21
  %arena570 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf569, i32 0, i32 0
  %318 = load i8*, i8** %arena570, align 8
  %319 = load i32, i32* %nsz535, align 4
  %idx.ext571 = sext i32 %319 to i64
  %add.ptr572 = getelementptr inbounds i8, i8* %318, i64 %idx.ext571
  %320 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf573 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %320, i32 0, i32 21
  %aend574 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf573, i32 0, i32 3
  store i8* %add.ptr572, i8** %aend574, align 8
  store i8* %add.ptr572, i8** %tmp568
  %321 = load i8*, i8** %tmp568
  br label %if.end.575

if.end.575:                                       ; preds = %if.then.533, %if.then.525
  %322 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf576 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %322, i32 0, i32 21
  %aptr577 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf576, i32 0, i32 2
  %323 = load i8*, i8** %aptr577, align 8
  %324 = ptrtoint i8* %323 to i64
  %325 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf578 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %325, i32 0, i32 21
  %aptr579 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf578, i32 0, i32 2
  %326 = load i8*, i8** %aptr579, align 8
  %327 = ptrtoint i8* %326 to i64
  %and580 = and i64 %327, -4
  %cmp581 = icmp eq i64 %324, %and580
  br i1 %cmp581, label %if.then.583, label %if.else.586

if.then.583:                                      ; preds = %if.end.575
  %328 = load i32, i32* %y, align 4
  %329 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf584 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %329, i32 0, i32 21
  %aptr585 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf584, i32 0, i32 2
  %330 = load i8*, i8** %aptr585, align 8
  %331 = bitcast i8* %330 to i32*
  store i32 %328, i32* %331, align 4
  br label %if.end.589

if.else.586:                                      ; preds = %if.end.575
  %332 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf587 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %332, i32 0, i32 21
  %aptr588 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf587, i32 0, i32 2
  %333 = load i8*, i8** %aptr588, align 8
  %334 = bitcast i32* %y to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %333, i8* %334, i64 4, i32 1, i1 false)
  br label %if.end.589

if.end.589:                                       ; preds = %if.else.586, %if.then.583
  %335 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf591 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %335, i32 0, i32 21
  %aptr592 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf591, i32 0, i32 2
  %336 = load i8*, i8** %aptr592, align 8
  %add.ptr593 = getelementptr inbounds i8, i8* %336, i64 4
  store i8* %add.ptr593, i8** %aptr592, align 8
  store i8* %add.ptr593, i8** %tmp590
  %337 = load i8*, i8** %tmp590
  br label %if.end.601

if.else.594:                                      ; preds = %if.then.518
  %338 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio595 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %338, i32 0, i32 23
  %339 = load %struct._PerlIO**, %struct._PerlIO*** %fio595, align 8
  %340 = bitcast i32* %y to i8*
  %call596 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %339, i8* %340, i64 4)
  %cmp597 = icmp ne i64 %call596, 4
  br i1 %cmp597, label %if.then.599, label %if.end.600

if.then.599:                                      ; preds = %if.else.594
  store i32 -1, i32* %retval
  br label %return

if.end.600:                                       ; preds = %if.else.594
  br label %if.end.601

if.end.601:                                       ; preds = %if.end.600, %if.end.589
  br label %if.end.682

if.else.602:                                      ; preds = %if.end.516
  %341 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio603 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %341, i32 0, i32 23
  %342 = load %struct._PerlIO**, %struct._PerlIO*** %fio603, align 8
  %tobool604 = icmp ne %struct._PerlIO** %342, null
  br i1 %tobool604, label %if.else.674, label %if.then.605

if.then.605:                                      ; preds = %if.else.602
  %343 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf606 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %343, i32 0, i32 21
  %aptr607 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf606, i32 0, i32 2
  %344 = load i8*, i8** %aptr607, align 8
  %add.ptr608 = getelementptr inbounds i8, i8* %344, i64 4
  %345 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf609 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %345, i32 0, i32 21
  %aend610 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf609, i32 0, i32 3
  %346 = load i8*, i8** %aend610, align 8
  %cmp611 = icmp ugt i8* %add.ptr608, %346
  br i1 %cmp611, label %if.then.613, label %if.end.655

if.then.613:                                      ; preds = %if.then.605
  %347 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf616 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %347, i32 0, i32 21
  %asiz617 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf616, i32 0, i32 1
  %348 = load i64, i64* %asiz617, align 8
  %add618 = add i64 4, %348
  %add619 = add i64 %add618, 8191
  %and620 = and i64 %add619, -8192
  %conv621 = trunc i64 %and620 to i32
  store i32 %conv621, i32* %nsz615, align 4
  %349 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf624 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %349, i32 0, i32 21
  %aptr625 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf624, i32 0, i32 2
  %350 = load i8*, i8** %aptr625, align 8
  %351 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf626 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %351, i32 0, i32 21
  %arena627 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf626, i32 0, i32 0
  %352 = load i8*, i8** %arena627, align 8
  %sub.ptr.lhs.cast628 = ptrtoint i8* %350 to i64
  %sub.ptr.rhs.cast629 = ptrtoint i8* %352 to i64
  %sub.ptr.sub630 = sub i64 %sub.ptr.lhs.cast628, %sub.ptr.rhs.cast629
  %conv631 = trunc i64 %sub.ptr.sub630 to i32
  store i32 %conv631, i32* %offset623, align 4
  %353 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf632 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %353, i32 0, i32 21
  %arena633 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf632, i32 0, i32 0
  %354 = load i8*, i8** %arena633, align 8
  %355 = load i32, i32* %nsz615, align 4
  %conv634 = sext i32 %355 to i64
  %mul635 = mul i64 %conv634, 1
  %call636 = call i8* @Perl_safesysrealloc(i8* %354, i64 %mul635)
  %356 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf637 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %356, i32 0, i32 21
  %arena638 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf637, i32 0, i32 0
  store i8* %call636, i8** %arena638, align 8
  %357 = load i32, i32* %nsz615, align 4
  %conv639 = sext i32 %357 to i64
  %358 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf640 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %358, i32 0, i32 21
  %asiz641 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf640, i32 0, i32 1
  store i64 %conv639, i64* %asiz641, align 8
  %359 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf642 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %359, i32 0, i32 21
  %arena643 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf642, i32 0, i32 0
  %360 = load i8*, i8** %arena643, align 8
  %361 = load i32, i32* %offset623, align 4
  %idx.ext644 = sext i32 %361 to i64
  %add.ptr645 = getelementptr inbounds i8, i8* %360, i64 %idx.ext644
  %362 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf646 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %362, i32 0, i32 21
  %aptr647 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf646, i32 0, i32 2
  store i8* %add.ptr645, i8** %aptr647, align 8
  %363 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf649 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %363, i32 0, i32 21
  %arena650 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf649, i32 0, i32 0
  %364 = load i8*, i8** %arena650, align 8
  %365 = load i32, i32* %nsz615, align 4
  %idx.ext651 = sext i32 %365 to i64
  %add.ptr652 = getelementptr inbounds i8, i8* %364, i64 %idx.ext651
  %366 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf653 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %366, i32 0, i32 21
  %aend654 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf653, i32 0, i32 3
  store i8* %add.ptr652, i8** %aend654, align 8
  store i8* %add.ptr652, i8** %tmp648
  %367 = load i8*, i8** %tmp648
  br label %if.end.655

if.end.655:                                       ; preds = %if.then.613, %if.then.605
  %368 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf656 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %368, i32 0, i32 21
  %aptr657 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf656, i32 0, i32 2
  %369 = load i8*, i8** %aptr657, align 8
  %370 = ptrtoint i8* %369 to i64
  %371 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf658 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %371, i32 0, i32 21
  %aptr659 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf658, i32 0, i32 2
  %372 = load i8*, i8** %aptr659, align 8
  %373 = ptrtoint i8* %372 to i64
  %and660 = and i64 %373, -4
  %cmp661 = icmp eq i64 %370, %and660
  br i1 %cmp661, label %if.then.663, label %if.else.666

if.then.663:                                      ; preds = %if.end.655
  %374 = load i32, i32* %len, align 4
  %375 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf664 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %375, i32 0, i32 21
  %aptr665 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf664, i32 0, i32 2
  %376 = load i8*, i8** %aptr665, align 8
  %377 = bitcast i8* %376 to i32*
  store i32 %374, i32* %377, align 4
  br label %if.end.669

if.else.666:                                      ; preds = %if.end.655
  %378 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf667 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %378, i32 0, i32 21
  %aptr668 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf667, i32 0, i32 2
  %379 = load i8*, i8** %aptr668, align 8
  %380 = bitcast i32* %len to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %379, i8* %380, i64 4, i32 1, i1 false)
  br label %if.end.669

if.end.669:                                       ; preds = %if.else.666, %if.then.663
  %381 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf671 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %381, i32 0, i32 21
  %aptr672 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf671, i32 0, i32 2
  %382 = load i8*, i8** %aptr672, align 8
  %add.ptr673 = getelementptr inbounds i8, i8* %382, i64 4
  store i8* %add.ptr673, i8** %aptr672, align 8
  store i8* %add.ptr673, i8** %tmp670
  %383 = load i8*, i8** %tmp670
  br label %if.end.681

if.else.674:                                      ; preds = %if.else.602
  %384 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio675 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %384, i32 0, i32 23
  %385 = load %struct._PerlIO**, %struct._PerlIO*** %fio675, align 8
  %386 = bitcast i32* %len to i8*
  %call676 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %385, i8* %386, i64 4)
  %cmp677 = icmp ne i64 %call676, 4
  br i1 %cmp677, label %if.then.679, label %if.end.680

if.then.679:                                      ; preds = %if.else.674
  store i32 -1, i32* %retval
  br label %return

if.end.680:                                       ; preds = %if.else.674
  br label %if.end.681

if.end.681:                                       ; preds = %if.end.680, %if.end.669
  br label %if.end.682

if.end.682:                                       ; preds = %if.end.681, %if.end.601
  %387 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio683 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %387, i32 0, i32 23
  %388 = load %struct._PerlIO**, %struct._PerlIO*** %fio683, align 8
  %tobool684 = icmp ne %struct._PerlIO** %388, null
  br i1 %tobool684, label %if.else.757, label %if.then.685

if.then.685:                                      ; preds = %if.end.682
  %389 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf686 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %389, i32 0, i32 21
  %aptr687 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf686, i32 0, i32 2
  %390 = load i8*, i8** %aptr687, align 8
  %391 = load i32, i32* %len, align 4
  %idx.ext688 = sext i32 %391 to i64
  %add.ptr689 = getelementptr inbounds i8, i8* %390, i64 %idx.ext688
  %392 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf690 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %392, i32 0, i32 21
  %aend691 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf690, i32 0, i32 3
  %393 = load i8*, i8** %aend691, align 8
  %cmp692 = icmp ugt i8* %add.ptr689, %393
  br i1 %cmp692, label %if.then.694, label %if.end.737

if.then.694:                                      ; preds = %if.then.685
  %394 = load i32, i32* %len, align 4
  %conv697 = sext i32 %394 to i64
  %395 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf698 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %395, i32 0, i32 21
  %asiz699 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf698, i32 0, i32 1
  %396 = load i64, i64* %asiz699, align 8
  %add700 = add i64 %conv697, %396
  %add701 = add i64 %add700, 8191
  %and702 = and i64 %add701, -8192
  %conv703 = trunc i64 %and702 to i32
  store i32 %conv703, i32* %nsz696, align 4
  %397 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf706 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %397, i32 0, i32 21
  %aptr707 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf706, i32 0, i32 2
  %398 = load i8*, i8** %aptr707, align 8
  %399 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf708 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %399, i32 0, i32 21
  %arena709 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf708, i32 0, i32 0
  %400 = load i8*, i8** %arena709, align 8
  %sub.ptr.lhs.cast710 = ptrtoint i8* %398 to i64
  %sub.ptr.rhs.cast711 = ptrtoint i8* %400 to i64
  %sub.ptr.sub712 = sub i64 %sub.ptr.lhs.cast710, %sub.ptr.rhs.cast711
  %conv713 = trunc i64 %sub.ptr.sub712 to i32
  store i32 %conv713, i32* %offset705, align 4
  %401 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf714 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %401, i32 0, i32 21
  %arena715 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf714, i32 0, i32 0
  %402 = load i8*, i8** %arena715, align 8
  %403 = load i32, i32* %nsz696, align 4
  %conv716 = sext i32 %403 to i64
  %mul717 = mul i64 %conv716, 1
  %call718 = call i8* @Perl_safesysrealloc(i8* %402, i64 %mul717)
  %404 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf719 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %404, i32 0, i32 21
  %arena720 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf719, i32 0, i32 0
  store i8* %call718, i8** %arena720, align 8
  %405 = load i32, i32* %nsz696, align 4
  %conv721 = sext i32 %405 to i64
  %406 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf722 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %406, i32 0, i32 21
  %asiz723 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf722, i32 0, i32 1
  store i64 %conv721, i64* %asiz723, align 8
  %407 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf724 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %407, i32 0, i32 21
  %arena725 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf724, i32 0, i32 0
  %408 = load i8*, i8** %arena725, align 8
  %409 = load i32, i32* %offset705, align 4
  %idx.ext726 = sext i32 %409 to i64
  %add.ptr727 = getelementptr inbounds i8, i8* %408, i64 %idx.ext726
  %410 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf728 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %410, i32 0, i32 21
  %aptr729 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf728, i32 0, i32 2
  store i8* %add.ptr727, i8** %aptr729, align 8
  %411 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf731 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %411, i32 0, i32 21
  %arena732 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf731, i32 0, i32 0
  %412 = load i8*, i8** %arena732, align 8
  %413 = load i32, i32* %nsz696, align 4
  %idx.ext733 = sext i32 %413 to i64
  %add.ptr734 = getelementptr inbounds i8, i8* %412, i64 %idx.ext733
  %414 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf735 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %414, i32 0, i32 21
  %aend736 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf735, i32 0, i32 3
  store i8* %add.ptr734, i8** %aend736, align 8
  store i8* %add.ptr734, i8** %tmp730
  %415 = load i8*, i8** %tmp730
  br label %if.end.737

if.end.737:                                       ; preds = %if.then.694, %if.then.685
  %416 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf738 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %416, i32 0, i32 21
  %aptr739 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf738, i32 0, i32 2
  %417 = load i8*, i8** %aptr739, align 8
  %418 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_flags740 = getelementptr inbounds %struct.sv, %struct.sv* %418, i32 0, i32 2
  %419 = load i32, i32* %sv_flags740, align 4
  %and741 = and i32 %419, 262144
  %cmp742 = icmp eq i32 %and741, 262144
  br i1 %cmp742, label %cond.true.744, label %cond.false.747

cond.true.744:                                    ; preds = %if.end.737
  %420 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_any745 = getelementptr inbounds %struct.sv, %struct.sv* %420, i32 0, i32 0
  %421 = load i8*, i8** %sv_any745, align 8
  %422 = bitcast i8* %421 to %struct.xpv*
  %xpv_pv746 = getelementptr inbounds %struct.xpv, %struct.xpv* %422, i32 0, i32 0
  %423 = load i8*, i8** %xpv_pv746, align 8
  br label %cond.end.749

cond.false.747:                                   ; preds = %if.end.737
  %424 = load %struct.sv*, %struct.sv** %text, align 8
  %call748 = call i8* @Perl_sv_2pv_nolen(%struct.sv* %424)
  br label %cond.end.749

cond.end.749:                                     ; preds = %cond.false.747, %cond.true.744
  %cond750 = phi i8* [ %423, %cond.true.744 ], [ %call748, %cond.false.747 ]
  %425 = load i32, i32* %len, align 4
  %conv751 = sext i32 %425 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %417, i8* %cond750, i64 %conv751, i32 1, i1 false)
  %426 = load i32, i32* %len, align 4
  %427 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf753 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %427, i32 0, i32 21
  %aptr754 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf753, i32 0, i32 2
  %428 = load i8*, i8** %aptr754, align 8
  %idx.ext755 = sext i32 %426 to i64
  %add.ptr756 = getelementptr inbounds i8, i8* %428, i64 %idx.ext755
  store i8* %add.ptr756, i8** %aptr754, align 8
  store i8* %add.ptr756, i8** %tmp752
  %429 = load i8*, i8** %tmp752
  br label %if.end.777

if.else.757:                                      ; preds = %if.end.682
  %430 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio758 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %430, i32 0, i32 23
  %431 = load %struct._PerlIO**, %struct._PerlIO*** %fio758, align 8
  %432 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_flags759 = getelementptr inbounds %struct.sv, %struct.sv* %432, i32 0, i32 2
  %433 = load i32, i32* %sv_flags759, align 4
  %and760 = and i32 %433, 262144
  %cmp761 = icmp eq i32 %and760, 262144
  br i1 %cmp761, label %cond.true.763, label %cond.false.766

cond.true.763:                                    ; preds = %if.else.757
  %434 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_any764 = getelementptr inbounds %struct.sv, %struct.sv* %434, i32 0, i32 0
  %435 = load i8*, i8** %sv_any764, align 8
  %436 = bitcast i8* %435 to %struct.xpv*
  %xpv_pv765 = getelementptr inbounds %struct.xpv, %struct.xpv* %436, i32 0, i32 0
  %437 = load i8*, i8** %xpv_pv765, align 8
  br label %cond.end.768

cond.false.766:                                   ; preds = %if.else.757
  %438 = load %struct.sv*, %struct.sv** %text, align 8
  %call767 = call i8* @Perl_sv_2pv_nolen(%struct.sv* %438)
  br label %cond.end.768

cond.end.768:                                     ; preds = %cond.false.766, %cond.true.763
  %cond769 = phi i8* [ %437, %cond.true.763 ], [ %call767, %cond.false.766 ]
  %439 = load i32, i32* %len, align 4
  %conv770 = sext i32 %439 to i64
  %call771 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %431, i8* %cond769, i64 %conv770)
  %440 = load i32, i32* %len, align 4
  %conv772 = sext i32 %440 to i64
  %cmp773 = icmp ne i64 %call771, %conv772
  br i1 %cmp773, label %if.then.775, label %if.end.776

if.then.775:                                      ; preds = %cond.end.768
  store i32 -1, i32* %retval
  br label %return

if.end.776:                                       ; preds = %cond.end.768
  br label %if.end.777

if.end.777:                                       ; preds = %if.end.776, %cond.end.749
  br label %if.end.778

if.end.778:                                       ; preds = %if.end.777, %if.end.448
  %441 = load i32, i32* @PL_tmps_ix, align 4
  %442 = load i32, i32* @PL_tmps_floor, align 4
  %cmp779 = icmp sgt i32 %441, %442
  br i1 %cmp779, label %if.then.781, label %if.end.782

if.then.781:                                      ; preds = %if.end.778
  call void @Perl_free_tmps()
  br label %if.end.782

if.end.782:                                       ; preds = %if.then.781, %if.end.778
  call void @Perl_pop_scope()
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.782, %if.then.775, %if.then.679, %if.then.599, %if.then.514, %if.then.445, %if.then.348, %if.then.280, %if.then.208, %if.then
  %443 = load i32, i32* %retval
  ret i32 %443
}

; Function Attrs: nounwind uwtable
define internal i32 @store_other(%struct.stcxt* %cxt, %struct.sv* %sv) #0 {
entry:
  %retval = alloca i32, align 4
  %cxt.addr = alloca %struct.stcxt*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %len = alloca i32, align 4
  %clen = alloca i8, align 1
  %nsz = alloca i32, align 4
  %offset = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %nsz122 = alloca i32, align 4
  %offset130 = alloca i32, align 4
  %tmp155 = alloca i8*, align 8
  %nsz190 = alloca i32, align 4
  %offset199 = alloca i32, align 4
  %tmp224 = alloca i8*, align 8
  %tmp235 = alloca i8*, align 8
  %nsz267 = alloca i32, align 4
  %offset275 = alloca i32, align 4
  %tmp300 = alloca i8*, align 8
  %y = alloca i32, align 4
  %nsz337 = alloca i32, align 4
  %offset345 = alloca i32, align 4
  %tmp370 = alloca i8*, align 8
  %tmp392 = alloca i8*, align 8
  %nsz417 = alloca i32, align 4
  %offset425 = alloca i32, align 4
  %tmp450 = alloca i8*, align 8
  %tmp472 = alloca i8*, align 8
  %nsz498 = alloca i32, align 4
  %offset507 = alloca i32, align 4
  %tmp532 = alloca i8*, align 8
  %tmp543 = alloca i8*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %forgive_me = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 13
  %1 = load i32, i32* %forgive_me, align 4
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %forgive_me1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 13
  %3 = load i32, i32* %forgive_me1, align 4
  %cmp2 = icmp slt i32 %3, 0
  br i1 %cmp2, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i32 0, i32 0), i32 1)
  %tobool = icmp ne %struct.sv* %call, null
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end.44

cond.false:                                       ; preds = %land.lhs.true
  %call3 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i32 0, i32 0), i32 1)
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %call3, i32 0, i32 2
  %4 = load i32, i32* %sv_flags, align 4
  %and = and i32 %4, 262144
  %tobool4 = icmp ne i32 %and, 0
  br i1 %tobool4, label %cond.true.5, label %cond.false.15

cond.true.5:                                      ; preds = %cond.false
  %call6 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i32 0, i32 0), i32 1)
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %call6, i32 0, i32 0
  %5 = load i8*, i8** %sv_any, align 8
  %6 = bitcast i8* %5 to %struct.xpv*
  store %struct.xpv* %6, %struct.xpv** @PL_Xpv, align 8
  %tobool7 = icmp ne %struct.xpv* %6, null
  br i1 %tobool7, label %land.rhs, label %land.end.14

land.rhs:                                         ; preds = %cond.true.5
  %7 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %7, i32 0, i32 1
  %8 = load i64, i64* %xpv_cur, align 8
  %cmp8 = icmp ugt i64 %8, 1
  br i1 %cmp8, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %9 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_cur9 = getelementptr inbounds %struct.xpv, %struct.xpv* %9, i32 0, i32 1
  %10 = load i64, i64* %xpv_cur9, align 8
  %tobool10 = icmp ne i64 %10, 0
  br i1 %tobool10, label %land.rhs.11, label %land.end

land.rhs.11:                                      ; preds = %lor.rhs
  %11 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %11, i32 0, i32 0
  %12 = load i8*, i8** %xpv_pv, align 8
  %13 = load i8, i8* %12, align 1
  %conv = sext i8 %13 to i32
  %cmp12 = icmp ne i32 %conv, 48
  br label %land.end

land.end:                                         ; preds = %land.rhs.11, %lor.rhs
  %14 = phi i1 [ false, %lor.rhs ], [ %cmp12, %land.rhs.11 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %land.rhs
  %15 = phi i1 [ true, %land.rhs ], [ %14, %land.end ]
  br label %land.end.14

land.end.14:                                      ; preds = %lor.end, %cond.true.5
  %16 = phi i1 [ false, %cond.true.5 ], [ %15, %lor.end ]
  %cond = select i1 %16, i32 1, i32 0
  br label %cond.end.42

cond.false.15:                                    ; preds = %cond.false
  %call16 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i32 0, i32 0), i32 1)
  %sv_flags17 = getelementptr inbounds %struct.sv, %struct.sv* %call16, i32 0, i32 2
  %17 = load i32, i32* %sv_flags17, align 4
  %and18 = and i32 %17, 65536
  %tobool19 = icmp ne i32 %and18, 0
  br i1 %tobool19, label %cond.true.20, label %cond.false.25

cond.true.20:                                     ; preds = %cond.false.15
  %call21 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i32 0, i32 0), i32 1)
  %sv_any22 = getelementptr inbounds %struct.sv, %struct.sv* %call21, i32 0, i32 0
  %18 = load i8*, i8** %sv_any22, align 8
  %19 = bitcast i8* %18 to %struct.xpviv*
  %xiv_iv = getelementptr inbounds %struct.xpviv, %struct.xpviv* %19, i32 0, i32 3
  %20 = load i64, i64* %xiv_iv, align 8
  %cmp23 = icmp ne i64 %20, 0
  %conv24 = zext i1 %cmp23 to i32
  br label %cond.end.40

cond.false.25:                                    ; preds = %cond.false.15
  %call26 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i32 0, i32 0), i32 1)
  %sv_flags27 = getelementptr inbounds %struct.sv, %struct.sv* %call26, i32 0, i32 2
  %21 = load i32, i32* %sv_flags27, align 4
  %and28 = and i32 %21, 131072
  %tobool29 = icmp ne i32 %and28, 0
  br i1 %tobool29, label %cond.true.30, label %cond.false.35

cond.true.30:                                     ; preds = %cond.false.25
  %call31 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i32 0, i32 0), i32 1)
  %sv_any32 = getelementptr inbounds %struct.sv, %struct.sv* %call31, i32 0, i32 0
  %22 = load i8*, i8** %sv_any32, align 8
  %23 = bitcast i8* %22 to %struct.xpvnv*
  %xnv_nv = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %23, i32 0, i32 4
  %24 = load double, double* %xnv_nv, align 8
  %cmp33 = fcmp une double %24, 0.000000e+00
  %conv34 = zext i1 %cmp33 to i32
  br label %cond.end

cond.false.35:                                    ; preds = %cond.false.25
  %call36 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i32 0, i32 0), i32 1)
  %call37 = call signext i8 @Perl_sv_2bool(%struct.sv* %call36)
  %conv38 = sext i8 %call37 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false.35, %cond.true.30
  %cond39 = phi i32 [ %conv34, %cond.true.30 ], [ %conv38, %cond.false.35 ]
  br label %cond.end.40

cond.end.40:                                      ; preds = %cond.end, %cond.true.20
  %cond41 = phi i32 [ %conv24, %cond.true.20 ], [ %cond39, %cond.end ]
  br label %cond.end.42

cond.end.42:                                      ; preds = %cond.end.40, %land.end.14
  %cond43 = phi i32 [ %cond, %land.end.14 ], [ %cond41, %cond.end.40 ]
  br label %cond.end.44

cond.end.44:                                      ; preds = %cond.end.42, %cond.true
  %cond45 = phi i32 [ 0, %cond.true ], [ %cond43, %cond.end.42 ]
  %tobool46 = icmp ne i32 %cond45, 0
  %cond47 = select i1 %tobool46, i32 1, i32 0
  %25 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %forgive_me48 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %25, i32 0, i32 13
  store i32 %cond47, i32* %forgive_me48, align 4
  %tobool49 = icmp ne i32 %cond47, 0
  br i1 %tobool49, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end.44, %entry
  %26 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %26, i32 0, i32 18
  store i32 1, i32* %s_dirty, align 4
  %27 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call50 = call i8* @Perl_sv_reftype(%struct.sv* %27, i32 0)
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.55, i32 0, i32 0), i8* %call50)
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end.44, %lor.lhs.false
  %28 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call51 = call i8* @Perl_sv_reftype(%struct.sv* %28, i32 0)
  %29 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %30 = ptrtoint %struct.sv* %29 to i64
  call void (i8*, ...) @Perl_warn(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.56, i32 0, i32 0), i8* %call51, i64 %30)
  %31 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call52 = call i8* @Perl_sv_reftype(%struct.sv* %31, i32 0)
  %32 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %33 = ptrtoint %struct.sv* %32 to i64
  %call53 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @store_other.buf, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.57, i32 0, i32 0), i8* %call52, i64 %33, i32 0)
  %call54 = call i64 @strlen(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @store_other.buf, i32 0, i32 0))
  %conv55 = trunc i64 %call54 to i32
  store i32 %conv55, i32* %len, align 4
  %34 = load i32, i32* %len, align 4
  %cmp56 = icmp sle i32 %34, 255
  br i1 %cmp56, label %if.then.58, label %if.else.251

if.then.58:                                       ; preds = %if.end
  %35 = load i32, i32* %len, align 4
  %conv59 = trunc i32 %35 to i8
  store i8 %conv59, i8* %clen, align 1
  %36 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %36, i32 0, i32 23
  %37 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool60 = icmp ne %struct._PerlIO** %37, null
  br i1 %tobool60, label %if.else.99, label %if.then.61

if.then.61:                                       ; preds = %if.then.58
  %38 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %38, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %39 = load i8*, i8** %aptr, align 8
  %40 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf62 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %40, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf62, i32 0, i32 3
  %41 = load i8*, i8** %aend, align 8
  %cmp63 = icmp ult i8* %39, %41
  br i1 %cmp63, label %if.then.65, label %if.else

if.then.65:                                       ; preds = %if.then.61
  %42 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf66 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %42, i32 0, i32 21
  %aptr67 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf66, i32 0, i32 2
  %43 = load i8*, i8** %aptr67, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %43, i32 1
  store i8* %incdec.ptr, i8** %aptr67, align 8
  store i8 10, i8* %43, align 1
  br label %if.end.98

if.else:                                          ; preds = %if.then.61
  %44 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf68 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %44, i32 0, i32 21
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf68, i32 0, i32 1
  %45 = load i64, i64* %asiz, align 8
  %add = add i64 1, %45
  %add69 = add i64 %add, 8191
  %and70 = and i64 %add69, -8192
  %conv71 = trunc i64 %and70 to i32
  store i32 %conv71, i32* %nsz, align 4
  %46 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf72 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %46, i32 0, i32 21
  %aptr73 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf72, i32 0, i32 2
  %47 = load i8*, i8** %aptr73, align 8
  %48 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf74 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %48, i32 0, i32 21
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf74, i32 0, i32 0
  %49 = load i8*, i8** %arena, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %47 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %49 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv75 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv75, i32* %offset, align 4
  %50 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf76 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %50, i32 0, i32 21
  %arena77 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf76, i32 0, i32 0
  %51 = load i8*, i8** %arena77, align 8
  %52 = load i32, i32* %nsz, align 4
  %conv78 = sext i32 %52 to i64
  %mul = mul i64 %conv78, 1
  %call79 = call i8* @Perl_safesysrealloc(i8* %51, i64 %mul)
  %53 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf80 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %53, i32 0, i32 21
  %arena81 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf80, i32 0, i32 0
  store i8* %call79, i8** %arena81, align 8
  %54 = load i32, i32* %nsz, align 4
  %conv82 = sext i32 %54 to i64
  %55 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf83 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %55, i32 0, i32 21
  %asiz84 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf83, i32 0, i32 1
  store i64 %conv82, i64* %asiz84, align 8
  %56 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf85 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %56, i32 0, i32 21
  %arena86 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf85, i32 0, i32 0
  %57 = load i8*, i8** %arena86, align 8
  %58 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %58 to i64
  %add.ptr = getelementptr inbounds i8, i8* %57, i64 %idx.ext
  %59 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf87 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %59, i32 0, i32 21
  %aptr88 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf87, i32 0, i32 2
  store i8* %add.ptr, i8** %aptr88, align 8
  %60 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf89 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %60, i32 0, i32 21
  %arena90 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf89, i32 0, i32 0
  %61 = load i8*, i8** %arena90, align 8
  %62 = load i32, i32* %nsz, align 4
  %idx.ext91 = sext i32 %62 to i64
  %add.ptr92 = getelementptr inbounds i8, i8* %61, i64 %idx.ext91
  %63 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf93 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %63, i32 0, i32 21
  %aend94 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf93, i32 0, i32 3
  store i8* %add.ptr92, i8** %aend94, align 8
  store i8* %add.ptr92, i8** %tmp
  %64 = load i8*, i8** %tmp
  %65 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf95 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %65, i32 0, i32 21
  %aptr96 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf95, i32 0, i32 2
  %66 = load i8*, i8** %aptr96, align 8
  %incdec.ptr97 = getelementptr inbounds i8, i8* %66, i32 1
  store i8* %incdec.ptr97, i8** %aptr96, align 8
  store i8 10, i8* %66, align 1
  br label %if.end.98

if.end.98:                                        ; preds = %if.else, %if.then.65
  br label %if.end.106

if.else.99:                                       ; preds = %if.then.58
  %67 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio100 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %67, i32 0, i32 23
  %68 = load %struct._PerlIO**, %struct._PerlIO*** %fio100, align 8
  %call101 = call i32 @PerlIO_putc(%struct._PerlIO** %68, i32 10)
  %cmp102 = icmp eq i32 %call101, -1
  br i1 %cmp102, label %if.then.104, label %if.end.105

if.then.104:                                      ; preds = %if.else.99
  store i32 -1, i32* %retval
  br label %return

if.end.105:                                       ; preds = %if.else.99
  br label %if.end.106

if.end.106:                                       ; preds = %if.end.105, %if.end.98
  %69 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio107 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %69, i32 0, i32 23
  %70 = load %struct._PerlIO**, %struct._PerlIO*** %fio107, align 8
  %tobool108 = icmp ne %struct._PerlIO** %70, null
  br i1 %tobool108, label %if.else.166, label %if.then.109

if.then.109:                                      ; preds = %if.end.106
  %71 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf110 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %71, i32 0, i32 21
  %aptr111 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf110, i32 0, i32 2
  %72 = load i8*, i8** %aptr111, align 8
  %73 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf112 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %73, i32 0, i32 21
  %aend113 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf112, i32 0, i32 3
  %74 = load i8*, i8** %aend113, align 8
  %cmp114 = icmp ult i8* %72, %74
  br i1 %cmp114, label %if.then.116, label %if.else.120

if.then.116:                                      ; preds = %if.then.109
  %75 = load i8, i8* %clen, align 1
  %76 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf117 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %76, i32 0, i32 21
  %aptr118 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf117, i32 0, i32 2
  %77 = load i8*, i8** %aptr118, align 8
  %incdec.ptr119 = getelementptr inbounds i8, i8* %77, i32 1
  store i8* %incdec.ptr119, i8** %aptr118, align 8
  store i8 %75, i8* %77, align 1
  br label %if.end.165

if.else.120:                                      ; preds = %if.then.109
  %78 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf123 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %78, i32 0, i32 21
  %asiz124 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf123, i32 0, i32 1
  %79 = load i64, i64* %asiz124, align 8
  %add125 = add i64 1, %79
  %add126 = add i64 %add125, 8191
  %and127 = and i64 %add126, -8192
  %conv128 = trunc i64 %and127 to i32
  store i32 %conv128, i32* %nsz122, align 4
  %80 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf131 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %80, i32 0, i32 21
  %aptr132 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf131, i32 0, i32 2
  %81 = load i8*, i8** %aptr132, align 8
  %82 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf133 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %82, i32 0, i32 21
  %arena134 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf133, i32 0, i32 0
  %83 = load i8*, i8** %arena134, align 8
  %sub.ptr.lhs.cast135 = ptrtoint i8* %81 to i64
  %sub.ptr.rhs.cast136 = ptrtoint i8* %83 to i64
  %sub.ptr.sub137 = sub i64 %sub.ptr.lhs.cast135, %sub.ptr.rhs.cast136
  %conv138 = trunc i64 %sub.ptr.sub137 to i32
  store i32 %conv138, i32* %offset130, align 4
  %84 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf139 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %84, i32 0, i32 21
  %arena140 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf139, i32 0, i32 0
  %85 = load i8*, i8** %arena140, align 8
  %86 = load i32, i32* %nsz122, align 4
  %conv141 = sext i32 %86 to i64
  %mul142 = mul i64 %conv141, 1
  %call143 = call i8* @Perl_safesysrealloc(i8* %85, i64 %mul142)
  %87 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf144 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %87, i32 0, i32 21
  %arena145 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf144, i32 0, i32 0
  store i8* %call143, i8** %arena145, align 8
  %88 = load i32, i32* %nsz122, align 4
  %conv146 = sext i32 %88 to i64
  %89 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf147 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %89, i32 0, i32 21
  %asiz148 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf147, i32 0, i32 1
  store i64 %conv146, i64* %asiz148, align 8
  %90 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf149 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %90, i32 0, i32 21
  %arena150 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf149, i32 0, i32 0
  %91 = load i8*, i8** %arena150, align 8
  %92 = load i32, i32* %offset130, align 4
  %idx.ext151 = sext i32 %92 to i64
  %add.ptr152 = getelementptr inbounds i8, i8* %91, i64 %idx.ext151
  %93 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf153 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %93, i32 0, i32 21
  %aptr154 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf153, i32 0, i32 2
  store i8* %add.ptr152, i8** %aptr154, align 8
  %94 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf156 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %94, i32 0, i32 21
  %arena157 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf156, i32 0, i32 0
  %95 = load i8*, i8** %arena157, align 8
  %96 = load i32, i32* %nsz122, align 4
  %idx.ext158 = sext i32 %96 to i64
  %add.ptr159 = getelementptr inbounds i8, i8* %95, i64 %idx.ext158
  %97 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf160 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %97, i32 0, i32 21
  %aend161 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf160, i32 0, i32 3
  store i8* %add.ptr159, i8** %aend161, align 8
  store i8* %add.ptr159, i8** %tmp155
  %98 = load i8*, i8** %tmp155
  %99 = load i8, i8* %clen, align 1
  %100 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf162 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %100, i32 0, i32 21
  %aptr163 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf162, i32 0, i32 2
  %101 = load i8*, i8** %aptr163, align 8
  %incdec.ptr164 = getelementptr inbounds i8, i8* %101, i32 1
  store i8* %incdec.ptr164, i8** %aptr163, align 8
  store i8 %99, i8* %101, align 1
  br label %if.end.165

if.end.165:                                       ; preds = %if.else.120, %if.then.116
  br label %if.end.174

if.else.166:                                      ; preds = %if.end.106
  %102 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio167 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %102, i32 0, i32 23
  %103 = load %struct._PerlIO**, %struct._PerlIO*** %fio167, align 8
  %104 = load i8, i8* %clen, align 1
  %conv168 = zext i8 %104 to i32
  %call169 = call i32 @PerlIO_putc(%struct._PerlIO** %103, i32 %conv168)
  %cmp170 = icmp eq i32 %call169, -1
  br i1 %cmp170, label %if.then.172, label %if.end.173

if.then.172:                                      ; preds = %if.else.166
  store i32 -1, i32* %retval
  br label %return

if.end.173:                                       ; preds = %if.else.166
  br label %if.end.174

if.end.174:                                       ; preds = %if.end.173, %if.end.165
  %105 = load i32, i32* %len, align 4
  %tobool175 = icmp ne i32 %105, 0
  br i1 %tobool175, label %if.then.176, label %if.end.250

if.then.176:                                      ; preds = %if.end.174
  %106 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio177 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %106, i32 0, i32 23
  %107 = load %struct._PerlIO**, %struct._PerlIO*** %fio177, align 8
  %tobool178 = icmp ne %struct._PerlIO** %107, null
  br i1 %tobool178, label %if.else.240, label %if.then.179

if.then.179:                                      ; preds = %if.then.176
  %108 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf180 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %108, i32 0, i32 21
  %aptr181 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf180, i32 0, i32 2
  %109 = load i8*, i8** %aptr181, align 8
  %110 = load i32, i32* %len, align 4
  %idx.ext182 = sext i32 %110 to i64
  %add.ptr183 = getelementptr inbounds i8, i8* %109, i64 %idx.ext182
  %111 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf184 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %111, i32 0, i32 21
  %aend185 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf184, i32 0, i32 3
  %112 = load i8*, i8** %aend185, align 8
  %cmp186 = icmp ugt i8* %add.ptr183, %112
  br i1 %cmp186, label %if.then.188, label %if.end.231

if.then.188:                                      ; preds = %if.then.179
  %113 = load i32, i32* %len, align 4
  %conv191 = sext i32 %113 to i64
  %114 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf192 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %114, i32 0, i32 21
  %asiz193 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf192, i32 0, i32 1
  %115 = load i64, i64* %asiz193, align 8
  %add194 = add i64 %conv191, %115
  %add195 = add i64 %add194, 8191
  %and196 = and i64 %add195, -8192
  %conv197 = trunc i64 %and196 to i32
  store i32 %conv197, i32* %nsz190, align 4
  %116 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf200 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %116, i32 0, i32 21
  %aptr201 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf200, i32 0, i32 2
  %117 = load i8*, i8** %aptr201, align 8
  %118 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf202 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %118, i32 0, i32 21
  %arena203 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf202, i32 0, i32 0
  %119 = load i8*, i8** %arena203, align 8
  %sub.ptr.lhs.cast204 = ptrtoint i8* %117 to i64
  %sub.ptr.rhs.cast205 = ptrtoint i8* %119 to i64
  %sub.ptr.sub206 = sub i64 %sub.ptr.lhs.cast204, %sub.ptr.rhs.cast205
  %conv207 = trunc i64 %sub.ptr.sub206 to i32
  store i32 %conv207, i32* %offset199, align 4
  %120 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf208 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %120, i32 0, i32 21
  %arena209 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf208, i32 0, i32 0
  %121 = load i8*, i8** %arena209, align 8
  %122 = load i32, i32* %nsz190, align 4
  %conv210 = sext i32 %122 to i64
  %mul211 = mul i64 %conv210, 1
  %call212 = call i8* @Perl_safesysrealloc(i8* %121, i64 %mul211)
  %123 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf213 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %123, i32 0, i32 21
  %arena214 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf213, i32 0, i32 0
  store i8* %call212, i8** %arena214, align 8
  %124 = load i32, i32* %nsz190, align 4
  %conv215 = sext i32 %124 to i64
  %125 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf216 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %125, i32 0, i32 21
  %asiz217 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf216, i32 0, i32 1
  store i64 %conv215, i64* %asiz217, align 8
  %126 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf218 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %126, i32 0, i32 21
  %arena219 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf218, i32 0, i32 0
  %127 = load i8*, i8** %arena219, align 8
  %128 = load i32, i32* %offset199, align 4
  %idx.ext220 = sext i32 %128 to i64
  %add.ptr221 = getelementptr inbounds i8, i8* %127, i64 %idx.ext220
  %129 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf222 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %129, i32 0, i32 21
  %aptr223 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf222, i32 0, i32 2
  store i8* %add.ptr221, i8** %aptr223, align 8
  %130 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf225 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %130, i32 0, i32 21
  %arena226 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf225, i32 0, i32 0
  %131 = load i8*, i8** %arena226, align 8
  %132 = load i32, i32* %nsz190, align 4
  %idx.ext227 = sext i32 %132 to i64
  %add.ptr228 = getelementptr inbounds i8, i8* %131, i64 %idx.ext227
  %133 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf229 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %133, i32 0, i32 21
  %aend230 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf229, i32 0, i32 3
  store i8* %add.ptr228, i8** %aend230, align 8
  store i8* %add.ptr228, i8** %tmp224
  %134 = load i8*, i8** %tmp224
  br label %if.end.231

if.end.231:                                       ; preds = %if.then.188, %if.then.179
  %135 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf232 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %135, i32 0, i32 21
  %aptr233 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf232, i32 0, i32 2
  %136 = load i8*, i8** %aptr233, align 8
  %137 = load i32, i32* %len, align 4
  %conv234 = sext i32 %137 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %136, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @store_other.buf, i32 0, i32 0), i64 %conv234, i32 1, i1 false)
  %138 = load i32, i32* %len, align 4
  %139 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf236 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %139, i32 0, i32 21
  %aptr237 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf236, i32 0, i32 2
  %140 = load i8*, i8** %aptr237, align 8
  %idx.ext238 = sext i32 %138 to i64
  %add.ptr239 = getelementptr inbounds i8, i8* %140, i64 %idx.ext238
  store i8* %add.ptr239, i8** %aptr237, align 8
  store i8* %add.ptr239, i8** %tmp235
  %141 = load i8*, i8** %tmp235
  br label %if.end.249

if.else.240:                                      ; preds = %if.then.176
  %142 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio241 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %142, i32 0, i32 23
  %143 = load %struct._PerlIO**, %struct._PerlIO*** %fio241, align 8
  %144 = load i32, i32* %len, align 4
  %conv242 = sext i32 %144 to i64
  %call243 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %143, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @store_other.buf, i32 0, i32 0), i64 %conv242)
  %145 = load i32, i32* %len, align 4
  %conv244 = sext i32 %145 to i64
  %cmp245 = icmp ne i64 %call243, %conv244
  br i1 %cmp245, label %if.then.247, label %if.end.248

if.then.247:                                      ; preds = %if.else.240
  store i32 -1, i32* %retval
  br label %return

if.end.248:                                       ; preds = %if.else.240
  br label %if.end.249

if.end.249:                                       ; preds = %if.end.248, %if.end.231
  br label %if.end.250

if.end.250:                                       ; preds = %if.end.249, %if.end.174
  br label %if.end.558

if.else.251:                                      ; preds = %if.end
  %146 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio252 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %146, i32 0, i32 23
  %147 = load %struct._PerlIO**, %struct._PerlIO*** %fio252, align 8
  %tobool253 = icmp ne %struct._PerlIO** %147, null
  br i1 %tobool253, label %if.else.311, label %if.then.254

if.then.254:                                      ; preds = %if.else.251
  %148 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf255 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %148, i32 0, i32 21
  %aptr256 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf255, i32 0, i32 2
  %149 = load i8*, i8** %aptr256, align 8
  %150 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf257 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %150, i32 0, i32 21
  %aend258 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf257, i32 0, i32 3
  %151 = load i8*, i8** %aend258, align 8
  %cmp259 = icmp ult i8* %149, %151
  br i1 %cmp259, label %if.then.261, label %if.else.265

if.then.261:                                      ; preds = %if.then.254
  %152 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf262 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %152, i32 0, i32 21
  %aptr263 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf262, i32 0, i32 2
  %153 = load i8*, i8** %aptr263, align 8
  %incdec.ptr264 = getelementptr inbounds i8, i8* %153, i32 1
  store i8* %incdec.ptr264, i8** %aptr263, align 8
  store i8 1, i8* %153, align 1
  br label %if.end.310

if.else.265:                                      ; preds = %if.then.254
  %154 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf268 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %154, i32 0, i32 21
  %asiz269 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf268, i32 0, i32 1
  %155 = load i64, i64* %asiz269, align 8
  %add270 = add i64 1, %155
  %add271 = add i64 %add270, 8191
  %and272 = and i64 %add271, -8192
  %conv273 = trunc i64 %and272 to i32
  store i32 %conv273, i32* %nsz267, align 4
  %156 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf276 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %156, i32 0, i32 21
  %aptr277 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf276, i32 0, i32 2
  %157 = load i8*, i8** %aptr277, align 8
  %158 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf278 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %158, i32 0, i32 21
  %arena279 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf278, i32 0, i32 0
  %159 = load i8*, i8** %arena279, align 8
  %sub.ptr.lhs.cast280 = ptrtoint i8* %157 to i64
  %sub.ptr.rhs.cast281 = ptrtoint i8* %159 to i64
  %sub.ptr.sub282 = sub i64 %sub.ptr.lhs.cast280, %sub.ptr.rhs.cast281
  %conv283 = trunc i64 %sub.ptr.sub282 to i32
  store i32 %conv283, i32* %offset275, align 4
  %160 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf284 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %160, i32 0, i32 21
  %arena285 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf284, i32 0, i32 0
  %161 = load i8*, i8** %arena285, align 8
  %162 = load i32, i32* %nsz267, align 4
  %conv286 = sext i32 %162 to i64
  %mul287 = mul i64 %conv286, 1
  %call288 = call i8* @Perl_safesysrealloc(i8* %161, i64 %mul287)
  %163 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf289 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %163, i32 0, i32 21
  %arena290 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf289, i32 0, i32 0
  store i8* %call288, i8** %arena290, align 8
  %164 = load i32, i32* %nsz267, align 4
  %conv291 = sext i32 %164 to i64
  %165 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf292 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %165, i32 0, i32 21
  %asiz293 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf292, i32 0, i32 1
  store i64 %conv291, i64* %asiz293, align 8
  %166 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf294 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %166, i32 0, i32 21
  %arena295 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf294, i32 0, i32 0
  %167 = load i8*, i8** %arena295, align 8
  %168 = load i32, i32* %offset275, align 4
  %idx.ext296 = sext i32 %168 to i64
  %add.ptr297 = getelementptr inbounds i8, i8* %167, i64 %idx.ext296
  %169 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf298 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %169, i32 0, i32 21
  %aptr299 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf298, i32 0, i32 2
  store i8* %add.ptr297, i8** %aptr299, align 8
  %170 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf301 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %170, i32 0, i32 21
  %arena302 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf301, i32 0, i32 0
  %171 = load i8*, i8** %arena302, align 8
  %172 = load i32, i32* %nsz267, align 4
  %idx.ext303 = sext i32 %172 to i64
  %add.ptr304 = getelementptr inbounds i8, i8* %171, i64 %idx.ext303
  %173 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf305 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %173, i32 0, i32 21
  %aend306 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf305, i32 0, i32 3
  store i8* %add.ptr304, i8** %aend306, align 8
  store i8* %add.ptr304, i8** %tmp300
  %174 = load i8*, i8** %tmp300
  %175 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf307 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %175, i32 0, i32 21
  %aptr308 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf307, i32 0, i32 2
  %176 = load i8*, i8** %aptr308, align 8
  %incdec.ptr309 = getelementptr inbounds i8, i8* %176, i32 1
  store i8* %incdec.ptr309, i8** %aptr308, align 8
  store i8 1, i8* %176, align 1
  br label %if.end.310

if.end.310:                                       ; preds = %if.else.265, %if.then.261
  br label %if.end.318

if.else.311:                                      ; preds = %if.else.251
  %177 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio312 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %177, i32 0, i32 23
  %178 = load %struct._PerlIO**, %struct._PerlIO*** %fio312, align 8
  %call313 = call i32 @PerlIO_putc(%struct._PerlIO** %178, i32 1)
  %cmp314 = icmp eq i32 %call313, -1
  br i1 %cmp314, label %if.then.316, label %if.end.317

if.then.316:                                      ; preds = %if.else.311
  store i32 -1, i32* %retval
  br label %return

if.end.317:                                       ; preds = %if.else.311
  br label %if.end.318

if.end.318:                                       ; preds = %if.end.317, %if.end.310
  %179 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %179, i32 0, i32 11
  %180 = load i32, i32* %netorder, align 4
  %tobool319 = icmp ne i32 %180, 0
  br i1 %tobool319, label %if.then.320, label %if.else.404

if.then.320:                                      ; preds = %if.end.318
  %181 = load i32, i32* %len, align 4
  %conv322 = sext i32 %181 to i64
  %call323 = call i64 @Perl_my_htonl(i64 %conv322)
  %conv324 = trunc i64 %call323 to i32
  store i32 %conv324, i32* %y, align 4
  %182 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio325 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %182, i32 0, i32 23
  %183 = load %struct._PerlIO**, %struct._PerlIO*** %fio325, align 8
  %tobool326 = icmp ne %struct._PerlIO** %183, null
  br i1 %tobool326, label %if.else.396, label %if.then.327

if.then.327:                                      ; preds = %if.then.320
  %184 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf328 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %184, i32 0, i32 21
  %aptr329 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf328, i32 0, i32 2
  %185 = load i8*, i8** %aptr329, align 8
  %add.ptr330 = getelementptr inbounds i8, i8* %185, i64 4
  %186 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf331 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %186, i32 0, i32 21
  %aend332 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf331, i32 0, i32 3
  %187 = load i8*, i8** %aend332, align 8
  %cmp333 = icmp ugt i8* %add.ptr330, %187
  br i1 %cmp333, label %if.then.335, label %if.end.377

if.then.335:                                      ; preds = %if.then.327
  %188 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf338 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %188, i32 0, i32 21
  %asiz339 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf338, i32 0, i32 1
  %189 = load i64, i64* %asiz339, align 8
  %add340 = add i64 4, %189
  %add341 = add i64 %add340, 8191
  %and342 = and i64 %add341, -8192
  %conv343 = trunc i64 %and342 to i32
  store i32 %conv343, i32* %nsz337, align 4
  %190 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf346 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %190, i32 0, i32 21
  %aptr347 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf346, i32 0, i32 2
  %191 = load i8*, i8** %aptr347, align 8
  %192 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf348 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %192, i32 0, i32 21
  %arena349 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf348, i32 0, i32 0
  %193 = load i8*, i8** %arena349, align 8
  %sub.ptr.lhs.cast350 = ptrtoint i8* %191 to i64
  %sub.ptr.rhs.cast351 = ptrtoint i8* %193 to i64
  %sub.ptr.sub352 = sub i64 %sub.ptr.lhs.cast350, %sub.ptr.rhs.cast351
  %conv353 = trunc i64 %sub.ptr.sub352 to i32
  store i32 %conv353, i32* %offset345, align 4
  %194 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf354 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %194, i32 0, i32 21
  %arena355 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf354, i32 0, i32 0
  %195 = load i8*, i8** %arena355, align 8
  %196 = load i32, i32* %nsz337, align 4
  %conv356 = sext i32 %196 to i64
  %mul357 = mul i64 %conv356, 1
  %call358 = call i8* @Perl_safesysrealloc(i8* %195, i64 %mul357)
  %197 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf359 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %197, i32 0, i32 21
  %arena360 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf359, i32 0, i32 0
  store i8* %call358, i8** %arena360, align 8
  %198 = load i32, i32* %nsz337, align 4
  %conv361 = sext i32 %198 to i64
  %199 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf362 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %199, i32 0, i32 21
  %asiz363 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf362, i32 0, i32 1
  store i64 %conv361, i64* %asiz363, align 8
  %200 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf364 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %200, i32 0, i32 21
  %arena365 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf364, i32 0, i32 0
  %201 = load i8*, i8** %arena365, align 8
  %202 = load i32, i32* %offset345, align 4
  %idx.ext366 = sext i32 %202 to i64
  %add.ptr367 = getelementptr inbounds i8, i8* %201, i64 %idx.ext366
  %203 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf368 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %203, i32 0, i32 21
  %aptr369 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf368, i32 0, i32 2
  store i8* %add.ptr367, i8** %aptr369, align 8
  %204 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf371 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %204, i32 0, i32 21
  %arena372 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf371, i32 0, i32 0
  %205 = load i8*, i8** %arena372, align 8
  %206 = load i32, i32* %nsz337, align 4
  %idx.ext373 = sext i32 %206 to i64
  %add.ptr374 = getelementptr inbounds i8, i8* %205, i64 %idx.ext373
  %207 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf375 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %207, i32 0, i32 21
  %aend376 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf375, i32 0, i32 3
  store i8* %add.ptr374, i8** %aend376, align 8
  store i8* %add.ptr374, i8** %tmp370
  %208 = load i8*, i8** %tmp370
  br label %if.end.377

if.end.377:                                       ; preds = %if.then.335, %if.then.327
  %209 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf378 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %209, i32 0, i32 21
  %aptr379 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf378, i32 0, i32 2
  %210 = load i8*, i8** %aptr379, align 8
  %211 = ptrtoint i8* %210 to i64
  %212 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf380 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %212, i32 0, i32 21
  %aptr381 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf380, i32 0, i32 2
  %213 = load i8*, i8** %aptr381, align 8
  %214 = ptrtoint i8* %213 to i64
  %and382 = and i64 %214, -4
  %cmp383 = icmp eq i64 %211, %and382
  br i1 %cmp383, label %if.then.385, label %if.else.388

if.then.385:                                      ; preds = %if.end.377
  %215 = load i32, i32* %y, align 4
  %216 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf386 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %216, i32 0, i32 21
  %aptr387 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf386, i32 0, i32 2
  %217 = load i8*, i8** %aptr387, align 8
  %218 = bitcast i8* %217 to i32*
  store i32 %215, i32* %218, align 4
  br label %if.end.391

if.else.388:                                      ; preds = %if.end.377
  %219 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf389 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %219, i32 0, i32 21
  %aptr390 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf389, i32 0, i32 2
  %220 = load i8*, i8** %aptr390, align 8
  %221 = bitcast i32* %y to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %220, i8* %221, i64 4, i32 1, i1 false)
  br label %if.end.391

if.end.391:                                       ; preds = %if.else.388, %if.then.385
  %222 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf393 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %222, i32 0, i32 21
  %aptr394 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf393, i32 0, i32 2
  %223 = load i8*, i8** %aptr394, align 8
  %add.ptr395 = getelementptr inbounds i8, i8* %223, i64 4
  store i8* %add.ptr395, i8** %aptr394, align 8
  store i8* %add.ptr395, i8** %tmp392
  %224 = load i8*, i8** %tmp392
  br label %if.end.403

if.else.396:                                      ; preds = %if.then.320
  %225 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio397 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %225, i32 0, i32 23
  %226 = load %struct._PerlIO**, %struct._PerlIO*** %fio397, align 8
  %227 = bitcast i32* %y to i8*
  %call398 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %226, i8* %227, i64 4)
  %cmp399 = icmp ne i64 %call398, 4
  br i1 %cmp399, label %if.then.401, label %if.end.402

if.then.401:                                      ; preds = %if.else.396
  store i32 -1, i32* %retval
  br label %return

if.end.402:                                       ; preds = %if.else.396
  br label %if.end.403

if.end.403:                                       ; preds = %if.end.402, %if.end.391
  br label %if.end.484

if.else.404:                                      ; preds = %if.end.318
  %228 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio405 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %228, i32 0, i32 23
  %229 = load %struct._PerlIO**, %struct._PerlIO*** %fio405, align 8
  %tobool406 = icmp ne %struct._PerlIO** %229, null
  br i1 %tobool406, label %if.else.476, label %if.then.407

if.then.407:                                      ; preds = %if.else.404
  %230 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf408 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %230, i32 0, i32 21
  %aptr409 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf408, i32 0, i32 2
  %231 = load i8*, i8** %aptr409, align 8
  %add.ptr410 = getelementptr inbounds i8, i8* %231, i64 4
  %232 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf411 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %232, i32 0, i32 21
  %aend412 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf411, i32 0, i32 3
  %233 = load i8*, i8** %aend412, align 8
  %cmp413 = icmp ugt i8* %add.ptr410, %233
  br i1 %cmp413, label %if.then.415, label %if.end.457

if.then.415:                                      ; preds = %if.then.407
  %234 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf418 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %234, i32 0, i32 21
  %asiz419 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf418, i32 0, i32 1
  %235 = load i64, i64* %asiz419, align 8
  %add420 = add i64 4, %235
  %add421 = add i64 %add420, 8191
  %and422 = and i64 %add421, -8192
  %conv423 = trunc i64 %and422 to i32
  store i32 %conv423, i32* %nsz417, align 4
  %236 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf426 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %236, i32 0, i32 21
  %aptr427 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf426, i32 0, i32 2
  %237 = load i8*, i8** %aptr427, align 8
  %238 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf428 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %238, i32 0, i32 21
  %arena429 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf428, i32 0, i32 0
  %239 = load i8*, i8** %arena429, align 8
  %sub.ptr.lhs.cast430 = ptrtoint i8* %237 to i64
  %sub.ptr.rhs.cast431 = ptrtoint i8* %239 to i64
  %sub.ptr.sub432 = sub i64 %sub.ptr.lhs.cast430, %sub.ptr.rhs.cast431
  %conv433 = trunc i64 %sub.ptr.sub432 to i32
  store i32 %conv433, i32* %offset425, align 4
  %240 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf434 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %240, i32 0, i32 21
  %arena435 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf434, i32 0, i32 0
  %241 = load i8*, i8** %arena435, align 8
  %242 = load i32, i32* %nsz417, align 4
  %conv436 = sext i32 %242 to i64
  %mul437 = mul i64 %conv436, 1
  %call438 = call i8* @Perl_safesysrealloc(i8* %241, i64 %mul437)
  %243 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf439 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %243, i32 0, i32 21
  %arena440 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf439, i32 0, i32 0
  store i8* %call438, i8** %arena440, align 8
  %244 = load i32, i32* %nsz417, align 4
  %conv441 = sext i32 %244 to i64
  %245 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf442 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %245, i32 0, i32 21
  %asiz443 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf442, i32 0, i32 1
  store i64 %conv441, i64* %asiz443, align 8
  %246 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf444 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %246, i32 0, i32 21
  %arena445 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf444, i32 0, i32 0
  %247 = load i8*, i8** %arena445, align 8
  %248 = load i32, i32* %offset425, align 4
  %idx.ext446 = sext i32 %248 to i64
  %add.ptr447 = getelementptr inbounds i8, i8* %247, i64 %idx.ext446
  %249 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf448 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %249, i32 0, i32 21
  %aptr449 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf448, i32 0, i32 2
  store i8* %add.ptr447, i8** %aptr449, align 8
  %250 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf451 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %250, i32 0, i32 21
  %arena452 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf451, i32 0, i32 0
  %251 = load i8*, i8** %arena452, align 8
  %252 = load i32, i32* %nsz417, align 4
  %idx.ext453 = sext i32 %252 to i64
  %add.ptr454 = getelementptr inbounds i8, i8* %251, i64 %idx.ext453
  %253 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf455 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %253, i32 0, i32 21
  %aend456 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf455, i32 0, i32 3
  store i8* %add.ptr454, i8** %aend456, align 8
  store i8* %add.ptr454, i8** %tmp450
  %254 = load i8*, i8** %tmp450
  br label %if.end.457

if.end.457:                                       ; preds = %if.then.415, %if.then.407
  %255 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf458 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %255, i32 0, i32 21
  %aptr459 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf458, i32 0, i32 2
  %256 = load i8*, i8** %aptr459, align 8
  %257 = ptrtoint i8* %256 to i64
  %258 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf460 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %258, i32 0, i32 21
  %aptr461 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf460, i32 0, i32 2
  %259 = load i8*, i8** %aptr461, align 8
  %260 = ptrtoint i8* %259 to i64
  %and462 = and i64 %260, -4
  %cmp463 = icmp eq i64 %257, %and462
  br i1 %cmp463, label %if.then.465, label %if.else.468

if.then.465:                                      ; preds = %if.end.457
  %261 = load i32, i32* %len, align 4
  %262 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf466 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %262, i32 0, i32 21
  %aptr467 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf466, i32 0, i32 2
  %263 = load i8*, i8** %aptr467, align 8
  %264 = bitcast i8* %263 to i32*
  store i32 %261, i32* %264, align 4
  br label %if.end.471

if.else.468:                                      ; preds = %if.end.457
  %265 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf469 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %265, i32 0, i32 21
  %aptr470 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf469, i32 0, i32 2
  %266 = load i8*, i8** %aptr470, align 8
  %267 = bitcast i32* %len to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %266, i8* %267, i64 4, i32 1, i1 false)
  br label %if.end.471

if.end.471:                                       ; preds = %if.else.468, %if.then.465
  %268 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf473 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %268, i32 0, i32 21
  %aptr474 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf473, i32 0, i32 2
  %269 = load i8*, i8** %aptr474, align 8
  %add.ptr475 = getelementptr inbounds i8, i8* %269, i64 4
  store i8* %add.ptr475, i8** %aptr474, align 8
  store i8* %add.ptr475, i8** %tmp472
  %270 = load i8*, i8** %tmp472
  br label %if.end.483

if.else.476:                                      ; preds = %if.else.404
  %271 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio477 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %271, i32 0, i32 23
  %272 = load %struct._PerlIO**, %struct._PerlIO*** %fio477, align 8
  %273 = bitcast i32* %len to i8*
  %call478 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %272, i8* %273, i64 4)
  %cmp479 = icmp ne i64 %call478, 4
  br i1 %cmp479, label %if.then.481, label %if.end.482

if.then.481:                                      ; preds = %if.else.476
  store i32 -1, i32* %retval
  br label %return

if.end.482:                                       ; preds = %if.else.476
  br label %if.end.483

if.end.483:                                       ; preds = %if.end.482, %if.end.471
  br label %if.end.484

if.end.484:                                       ; preds = %if.end.483, %if.end.403
  %274 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio485 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %274, i32 0, i32 23
  %275 = load %struct._PerlIO**, %struct._PerlIO*** %fio485, align 8
  %tobool486 = icmp ne %struct._PerlIO** %275, null
  br i1 %tobool486, label %if.else.548, label %if.then.487

if.then.487:                                      ; preds = %if.end.484
  %276 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf488 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %276, i32 0, i32 21
  %aptr489 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf488, i32 0, i32 2
  %277 = load i8*, i8** %aptr489, align 8
  %278 = load i32, i32* %len, align 4
  %idx.ext490 = sext i32 %278 to i64
  %add.ptr491 = getelementptr inbounds i8, i8* %277, i64 %idx.ext490
  %279 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf492 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %279, i32 0, i32 21
  %aend493 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf492, i32 0, i32 3
  %280 = load i8*, i8** %aend493, align 8
  %cmp494 = icmp ugt i8* %add.ptr491, %280
  br i1 %cmp494, label %if.then.496, label %if.end.539

if.then.496:                                      ; preds = %if.then.487
  %281 = load i32, i32* %len, align 4
  %conv499 = sext i32 %281 to i64
  %282 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf500 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %282, i32 0, i32 21
  %asiz501 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf500, i32 0, i32 1
  %283 = load i64, i64* %asiz501, align 8
  %add502 = add i64 %conv499, %283
  %add503 = add i64 %add502, 8191
  %and504 = and i64 %add503, -8192
  %conv505 = trunc i64 %and504 to i32
  store i32 %conv505, i32* %nsz498, align 4
  %284 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf508 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %284, i32 0, i32 21
  %aptr509 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf508, i32 0, i32 2
  %285 = load i8*, i8** %aptr509, align 8
  %286 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf510 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %286, i32 0, i32 21
  %arena511 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf510, i32 0, i32 0
  %287 = load i8*, i8** %arena511, align 8
  %sub.ptr.lhs.cast512 = ptrtoint i8* %285 to i64
  %sub.ptr.rhs.cast513 = ptrtoint i8* %287 to i64
  %sub.ptr.sub514 = sub i64 %sub.ptr.lhs.cast512, %sub.ptr.rhs.cast513
  %conv515 = trunc i64 %sub.ptr.sub514 to i32
  store i32 %conv515, i32* %offset507, align 4
  %288 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf516 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %288, i32 0, i32 21
  %arena517 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf516, i32 0, i32 0
  %289 = load i8*, i8** %arena517, align 8
  %290 = load i32, i32* %nsz498, align 4
  %conv518 = sext i32 %290 to i64
  %mul519 = mul i64 %conv518, 1
  %call520 = call i8* @Perl_safesysrealloc(i8* %289, i64 %mul519)
  %291 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf521 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %291, i32 0, i32 21
  %arena522 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf521, i32 0, i32 0
  store i8* %call520, i8** %arena522, align 8
  %292 = load i32, i32* %nsz498, align 4
  %conv523 = sext i32 %292 to i64
  %293 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf524 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %293, i32 0, i32 21
  %asiz525 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf524, i32 0, i32 1
  store i64 %conv523, i64* %asiz525, align 8
  %294 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf526 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %294, i32 0, i32 21
  %arena527 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf526, i32 0, i32 0
  %295 = load i8*, i8** %arena527, align 8
  %296 = load i32, i32* %offset507, align 4
  %idx.ext528 = sext i32 %296 to i64
  %add.ptr529 = getelementptr inbounds i8, i8* %295, i64 %idx.ext528
  %297 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf530 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %297, i32 0, i32 21
  %aptr531 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf530, i32 0, i32 2
  store i8* %add.ptr529, i8** %aptr531, align 8
  %298 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf533 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %298, i32 0, i32 21
  %arena534 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf533, i32 0, i32 0
  %299 = load i8*, i8** %arena534, align 8
  %300 = load i32, i32* %nsz498, align 4
  %idx.ext535 = sext i32 %300 to i64
  %add.ptr536 = getelementptr inbounds i8, i8* %299, i64 %idx.ext535
  %301 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf537 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %301, i32 0, i32 21
  %aend538 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf537, i32 0, i32 3
  store i8* %add.ptr536, i8** %aend538, align 8
  store i8* %add.ptr536, i8** %tmp532
  %302 = load i8*, i8** %tmp532
  br label %if.end.539

if.end.539:                                       ; preds = %if.then.496, %if.then.487
  %303 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf540 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %303, i32 0, i32 21
  %aptr541 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf540, i32 0, i32 2
  %304 = load i8*, i8** %aptr541, align 8
  %305 = load i32, i32* %len, align 4
  %conv542 = sext i32 %305 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %304, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @store_other.buf, i32 0, i32 0), i64 %conv542, i32 1, i1 false)
  %306 = load i32, i32* %len, align 4
  %307 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf544 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %307, i32 0, i32 21
  %aptr545 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf544, i32 0, i32 2
  %308 = load i8*, i8** %aptr545, align 8
  %idx.ext546 = sext i32 %306 to i64
  %add.ptr547 = getelementptr inbounds i8, i8* %308, i64 %idx.ext546
  store i8* %add.ptr547, i8** %aptr545, align 8
  store i8* %add.ptr547, i8** %tmp543
  %309 = load i8*, i8** %tmp543
  br label %if.end.557

if.else.548:                                      ; preds = %if.end.484
  %310 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio549 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %310, i32 0, i32 23
  %311 = load %struct._PerlIO**, %struct._PerlIO*** %fio549, align 8
  %312 = load i32, i32* %len, align 4
  %conv550 = sext i32 %312 to i64
  %call551 = call i64 @Perl_PerlIO_write(%struct._PerlIO** %311, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @store_other.buf, i32 0, i32 0), i64 %conv550)
  %313 = load i32, i32* %len, align 4
  %conv552 = sext i32 %313 to i64
  %cmp553 = icmp ne i64 %call551, %conv552
  br i1 %cmp553, label %if.then.555, label %if.end.556

if.then.555:                                      ; preds = %if.else.548
  store i32 -1, i32* %retval
  br label %return

if.end.556:                                       ; preds = %if.else.548
  br label %if.end.557

if.end.557:                                       ; preds = %if.end.556, %if.end.539
  br label %if.end.558

if.end.558:                                       ; preds = %if.end.557, %if.end.250
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.558, %if.then.555, %if.then.481, %if.then.401, %if.then.316, %if.then.247, %if.then.172, %if.then.104
  %314 = load i32, i32* %retval
  ret i32 %314
}

declare signext i8 @Perl_Gv_AMupdate(%struct.hv*) #1

declare i64 @Perl_sv_2iv(%struct.sv*) #1

declare i64 @Perl_sv_2uv(%struct.sv*) #1

declare double @Perl_sv_2nv(%struct.sv*) #1

declare i8* @Perl_sv_reftype(%struct.sv*, i32) #1

declare i32 @Perl_av_len(%struct.av*) #1

declare %struct.sv** @Perl_av_fetch(%struct.av*, i32, i32) #1

declare i32 @Perl_hv_iterinit(%struct.hv*) #1

declare %struct.sv* @Perl_get_sv(i8*, i32) #1

declare signext i8 @Perl_sv_2bool(%struct.sv*) #1

declare %struct.he* @Perl_hv_iternext_flags(%struct.hv*, i32) #1

declare %struct.sv* @Perl_hv_iterkeysv(%struct.he*) #1

declare void @Perl_sortsv(%struct.sv**, i64, i32 (%struct.sv*, %struct.sv*)*) #1

declare i32 @Perl_sv_cmp(%struct.sv*, %struct.sv*) #1

declare %struct.sv* @Perl_av_shift(%struct.av*) #1

declare %struct.he* @Perl_hv_fetch_ent(%struct.hv*, %struct.sv*, i32, i32) #1

declare i8* @Perl_bytes_from_utf8(i8*, i64*, i8*) #1

declare %struct.sv* @Perl_hv_iterval(%struct.hv*, %struct.he*) #1

declare void @Perl_load_module(i32, %struct.sv*, %struct.sv*, ...) #1

declare %struct.sv* @Perl_newSVpvn(i8*, i64) #1

declare %struct.sv* @Perl_newSVnv(double) #1

declare i32 @Perl_call_method(i8*, i32) #1

declare i8* @Perl_sv_2pv_nolen(%struct.sv*) #1

declare void @Perl_warn(i8*, ...) #1

declare i32 @sprintf(i8*, i8*, ...) #1

declare %struct.sv* @Perl_newSVpv(i8*, i64) #1

declare %struct.he* @Perl_hv_iternext(%struct.hv*) #1

declare void @Perl_hv_undef(%struct.hv*) #1

; Function Attrs: nounwind uwtable
define internal void @reset_context(%struct.stcxt* %cxt) #0 {
entry:
  %cxt.addr = alloca %struct.stcxt*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %entry1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 0
  store i32 0, i32* %entry1, align 4
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 18
  store i32 0, i32* %s_dirty, align 4
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %optype = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 1
  %3 = load i32, i32* %optype, align 4
  %and = and i32 %3, -4
  store i32 %and, i32* %optype, align 4
  ret void
}

declare signext i8 @Perl_sv_upgrade(%struct.sv*, i32) #1

; Function Attrs: nounwind uwtable
define internal %struct.sv* @magic_check(%struct.stcxt* %cxt) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %buf = alloca [259 x i8], align 16
  %current = alloca i8*, align 8
  %c = alloca i32, align 4
  %length = alloca i32, align 4
  %use_network_order = alloca i32, align 4
  %use_NV_size = alloca i32, align 4
  %version_major = alloca i32, align 4
  %version_minor = alloca i32, align 4
  %len = alloca i64, align 8
  %old_len = alloca i64, align 8
  %croak_now = alloca i32, align 4
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i32 0, i32* %version_minor, align 4
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 23
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.then, label %if.else.61

if.then:                                          ; preds = %entry
  store i64 5, i64* %len, align 8
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 23
  %3 = load %struct._PerlIO**, %struct._PerlIO*** %fio1, align 8
  %tobool2 = icmp ne %struct._PerlIO** %3, null
  br i1 %tobool2, label %if.else.11, label %if.then.3

if.then.3:                                        ; preds = %if.then
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %5 = load i8*, i8** %aptr, align 8
  %6 = load i64, i64* %len, align 8
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %6
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf4, i32 0, i32 3
  %8 = load i8*, i8** %aend, align 8
  %cmp = icmp ule i8* %add.ptr, %8
  br i1 %cmp, label %if.then.5, label %if.else

if.then.5:                                        ; preds = %if.then.3
  %9 = bitcast [259 x i8]* %buf to i8*
  %10 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf6 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %10, i32 0, i32 21
  %aptr7 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf6, i32 0, i32 2
  %11 = load i8*, i8** %aptr7, align 8
  %12 = load i64, i64* %len, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %11, i64 %12, i32 1, i1 false)
  %13 = load i64, i64* %len, align 8
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf8 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 21
  %aptr9 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf8, i32 0, i32 2
  %15 = load i8*, i8** %aptr9, align 8
  %add.ptr10 = getelementptr inbounds i8, i8* %15, i64 %13
  store i8* %add.ptr10, i8** %aptr9, align 8
  br label %if.end

if.else:                                          ; preds = %if.then.3
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %if.then.5
  br label %if.end.16

if.else.11:                                       ; preds = %if.then
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio12 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 23
  %17 = load %struct._PerlIO**, %struct._PerlIO*** %fio12, align 8
  %arraydecay = getelementptr inbounds [259 x i8], [259 x i8]* %buf, i32 0, i32 0
  %18 = load i64, i64* %len, align 8
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %17, i8* %arraydecay, i64 %18)
  %19 = load i64, i64* %len, align 8
  %cmp13 = icmp ne i64 %call, %19
  br i1 %cmp13, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.else.11
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.15:                                        ; preds = %if.else.11
  br label %if.end.16

if.end.16:                                        ; preds = %if.end.15, %if.end
  %arraydecay17 = getelementptr inbounds [259 x i8], [259 x i8]* %buf, i32 0, i32 0
  %20 = load i64, i64* %len, align 8
  %dec = add i64 %20, -1
  store i64 %dec, i64* %len, align 8
  %add.ptr18 = getelementptr inbounds i8, i8* %arraydecay17, i64 %dec
  store i8* %add.ptr18, i8** %current, align 8
  %arraydecay19 = getelementptr inbounds [259 x i8], [259 x i8]* %buf, i32 0, i32 0
  %21 = load i64, i64* %len, align 8
  %call20 = call i32 @memcmp(i8* %arraydecay19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @magicstr, i32 0, i32 0), i64 %21)
  %tobool21 = icmp ne i32 %call20, 0
  br i1 %tobool21, label %if.then.22, label %if.end.60

if.then.22:                                       ; preds = %if.end.16
  store i64 10, i64* %old_len, align 8
  %22 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio23 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %22, i32 0, i32 23
  %23 = load %struct._PerlIO**, %struct._PerlIO*** %fio23, align 8
  %tobool24 = icmp ne %struct._PerlIO** %23, null
  br i1 %tobool24, label %if.else.43, label %if.then.25

if.then.25:                                       ; preds = %if.then.22
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf26 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 21
  %aptr27 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf26, i32 0, i32 2
  %25 = load i8*, i8** %aptr27, align 8
  %26 = load i64, i64* %old_len, align 8
  %27 = load i64, i64* %len, align 8
  %sub = sub i64 %26, %27
  %add.ptr28 = getelementptr inbounds i8, i8* %25, i64 %sub
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf29 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 21
  %aend30 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf29, i32 0, i32 3
  %29 = load i8*, i8** %aend30, align 8
  %cmp31 = icmp ule i8* %add.ptr28, %29
  br i1 %cmp31, label %if.then.32, label %if.else.41

if.then.32:                                       ; preds = %if.then.25
  %30 = load i8*, i8** %current, align 8
  %add.ptr33 = getelementptr inbounds i8, i8* %30, i64 1
  %31 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf34 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %31, i32 0, i32 21
  %aptr35 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf34, i32 0, i32 2
  %32 = load i8*, i8** %aptr35, align 8
  %33 = load i64, i64* %old_len, align 8
  %34 = load i64, i64* %len, align 8
  %sub36 = sub i64 %33, %34
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr33, i8* %32, i64 %sub36, i32 1, i1 false)
  %35 = load i64, i64* %old_len, align 8
  %36 = load i64, i64* %len, align 8
  %sub37 = sub i64 %35, %36
  %37 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf38 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %37, i32 0, i32 21
  %aptr39 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf38, i32 0, i32 2
  %38 = load i8*, i8** %aptr39, align 8
  %add.ptr40 = getelementptr inbounds i8, i8* %38, i64 %sub37
  store i8* %add.ptr40, i8** %aptr39, align 8
  br label %if.end.42

if.else.41:                                       ; preds = %if.then.25
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.42:                                        ; preds = %if.then.32
  br label %if.end.52

if.else.43:                                       ; preds = %if.then.22
  %39 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio44 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %39, i32 0, i32 23
  %40 = load %struct._PerlIO**, %struct._PerlIO*** %fio44, align 8
  %41 = load i8*, i8** %current, align 8
  %add.ptr45 = getelementptr inbounds i8, i8* %41, i64 1
  %42 = load i64, i64* %old_len, align 8
  %43 = load i64, i64* %len, align 8
  %sub46 = sub i64 %42, %43
  %call47 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %40, i8* %add.ptr45, i64 %sub46)
  %44 = load i64, i64* %old_len, align 8
  %45 = load i64, i64* %len, align 8
  %sub48 = sub i64 %44, %45
  %cmp49 = icmp ne i64 %call47, %sub48
  br i1 %cmp49, label %if.then.50, label %if.end.51

if.then.50:                                       ; preds = %if.else.43
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.51:                                        ; preds = %if.else.43
  br label %if.end.52

if.end.52:                                        ; preds = %if.end.51, %if.end.42
  %arraydecay53 = getelementptr inbounds [259 x i8], [259 x i8]* %buf, i32 0, i32 0
  %46 = load i64, i64* %old_len, align 8
  %call54 = call i32 @memcmp(i8* %arraydecay53, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @old_magicstr, i32 0, i32 0), i64 %46)
  %tobool55 = icmp ne i32 %call54, 0
  br i1 %tobool55, label %if.then.56, label %if.end.57

if.then.56:                                       ; preds = %if.end.52
  %47 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %47, i32 0, i32 18
  store i32 1, i32* %s_dirty, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.63, i32 0, i32 0))
  br label %if.end.57

if.end.57:                                        ; preds = %if.then.56, %if.end.52
  %arraydecay58 = getelementptr inbounds [259 x i8], [259 x i8]* %buf, i32 0, i32 0
  %48 = load i64, i64* %old_len, align 8
  %add.ptr59 = getelementptr inbounds i8, i8* %arraydecay58, i64 %48
  store i8* %add.ptr59, i8** %current, align 8
  br label %if.end.60

if.end.60:                                        ; preds = %if.end.57, %if.end.16
  %49 = load i8*, i8** %current, align 8
  %50 = load i8, i8* %49, align 1
  %conv = zext i8 %50 to i32
  store i32 %conv, i32* %use_network_order, align 4
  br label %if.end.85

if.else.61:                                       ; preds = %entry
  %51 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio62 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %51, i32 0, i32 23
  %52 = load %struct._PerlIO**, %struct._PerlIO*** %fio62, align 8
  %tobool63 = icmp ne %struct._PerlIO** %52, null
  br i1 %tobool63, label %if.else.77, label %if.then.64

if.then.64:                                       ; preds = %if.else.61
  %53 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf65 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %53, i32 0, i32 21
  %aptr66 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf65, i32 0, i32 2
  %54 = load i8*, i8** %aptr66, align 8
  %55 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf67 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %55, i32 0, i32 21
  %aend68 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf67, i32 0, i32 3
  %56 = load i8*, i8** %aend68, align 8
  %cmp69 = icmp ult i8* %54, %56
  br i1 %cmp69, label %if.then.71, label %if.else.75

if.then.71:                                       ; preds = %if.then.64
  %57 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf72 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %57, i32 0, i32 21
  %aptr73 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf72, i32 0, i32 2
  %58 = load i8*, i8** %aptr73, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %58, i32 1
  store i8* %incdec.ptr, i8** %aptr73, align 8
  %59 = load i8, i8* %58, align 1
  %conv74 = zext i8 %59 to i32
  store i32 %conv74, i32* %use_network_order, align 4
  br label %if.end.76

if.else.75:                                       ; preds = %if.then.64
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.76:                                        ; preds = %if.then.71
  br label %if.end.84

if.else.77:                                       ; preds = %if.else.61
  %60 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio78 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %60, i32 0, i32 23
  %61 = load %struct._PerlIO**, %struct._PerlIO*** %fio78, align 8
  %call79 = call i32 @PerlIO_getc(%struct._PerlIO** %61)
  store i32 %call79, i32* %use_network_order, align 4
  %cmp80 = icmp eq i32 %call79, -1
  br i1 %cmp80, label %if.then.82, label %if.end.83

if.then.82:                                       ; preds = %if.else.77
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.83:                                        ; preds = %if.else.77
  br label %if.end.84

if.end.84:                                        ; preds = %if.end.83, %if.end.76
  br label %if.end.85

if.end.85:                                        ; preds = %if.end.84, %if.end.60
  %62 = load i32, i32* %use_network_order, align 4
  %shr = ashr i32 %62, 1
  store i32 %shr, i32* %version_major, align 4
  %63 = load i32, i32* %version_major, align 4
  %tobool86 = icmp ne i32 %63, 0
  %cond = select i1 %tobool86, %struct.sv* (%struct.stcxt*, i8*)** getelementptr inbounds ([28 x %struct.sv* (%struct.stcxt*, i8*)*], [28 x %struct.sv* (%struct.stcxt*, i8*)*]* @sv_retrieve, i32 0, i32 0), %struct.sv* (%struct.stcxt*, i8*)** getelementptr inbounds ([28 x %struct.sv* (%struct.stcxt*, i8*)*], [28 x %struct.sv* (%struct.stcxt*, i8*)*]* @sv_old_retrieve, i32 0, i32 0)
  %64 = bitcast %struct.sv* (%struct.stcxt*, i8*)** %cond to %struct.sv* (...)**
  %65 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %retrieve_vtbl = getelementptr inbounds %struct.stcxt, %struct.stcxt* %65, i32 0, i32 26
  store %struct.sv* (...)** %64, %struct.sv* (...)*** %retrieve_vtbl, align 8
  %66 = load i32, i32* %version_major, align 4
  %cmp87 = icmp sgt i32 %66, 1
  br i1 %cmp87, label %if.then.89, label %if.end.114

if.then.89:                                       ; preds = %if.end.85
  %67 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio90 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %67, i32 0, i32 23
  %68 = load %struct._PerlIO**, %struct._PerlIO*** %fio90, align 8
  %tobool91 = icmp ne %struct._PerlIO** %68, null
  br i1 %tobool91, label %if.else.106, label %if.then.92

if.then.92:                                       ; preds = %if.then.89
  %69 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf93 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %69, i32 0, i32 21
  %aptr94 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf93, i32 0, i32 2
  %70 = load i8*, i8** %aptr94, align 8
  %71 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf95 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %71, i32 0, i32 21
  %aend96 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf95, i32 0, i32 3
  %72 = load i8*, i8** %aend96, align 8
  %cmp97 = icmp ult i8* %70, %72
  br i1 %cmp97, label %if.then.99, label %if.else.104

if.then.99:                                       ; preds = %if.then.92
  %73 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf100 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %73, i32 0, i32 21
  %aptr101 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf100, i32 0, i32 2
  %74 = load i8*, i8** %aptr101, align 8
  %incdec.ptr102 = getelementptr inbounds i8, i8* %74, i32 1
  store i8* %incdec.ptr102, i8** %aptr101, align 8
  %75 = load i8, i8* %74, align 1
  %conv103 = zext i8 %75 to i32
  store i32 %conv103, i32* %version_minor, align 4
  br label %if.end.105

if.else.104:                                      ; preds = %if.then.92
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.105:                                       ; preds = %if.then.99
  br label %if.end.113

if.else.106:                                      ; preds = %if.then.89
  %76 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio107 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %76, i32 0, i32 23
  %77 = load %struct._PerlIO**, %struct._PerlIO*** %fio107, align 8
  %call108 = call i32 @PerlIO_getc(%struct._PerlIO** %77)
  store i32 %call108, i32* %version_minor, align 4
  %cmp109 = icmp eq i32 %call108, -1
  br i1 %cmp109, label %if.then.111, label %if.end.112

if.then.111:                                      ; preds = %if.else.106
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.112:                                       ; preds = %if.else.106
  br label %if.end.113

if.end.113:                                       ; preds = %if.end.112, %if.end.105
  br label %if.end.114

if.end.114:                                       ; preds = %if.end.113, %if.end.85
  %78 = load i32, i32* %version_major, align 4
  %79 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_major = getelementptr inbounds %struct.stcxt, %struct.stcxt* %79, i32 0, i32 24
  store i32 %78, i32* %ver_major, align 4
  %80 = load i32, i32* %version_minor, align 4
  %81 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_minor = getelementptr inbounds %struct.stcxt, %struct.stcxt* %81, i32 0, i32 25
  store i32 %80, i32* %ver_minor, align 4
  %82 = load i32, i32* %version_major, align 4
  %cmp115 = icmp sgt i32 %82, 2
  br i1 %cmp115, label %if.then.121, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.114
  %83 = load i32, i32* %version_major, align 4
  %cmp117 = icmp eq i32 %83, 2
  br i1 %cmp117, label %land.lhs.true, label %if.end.190

land.lhs.true:                                    ; preds = %lor.lhs.false
  %84 = load i32, i32* %version_minor, align 4
  %cmp119 = icmp sgt i32 %84, 6
  br i1 %cmp119, label %if.then.121, label %if.end.190

if.then.121:                                      ; preds = %land.lhs.true, %if.end.114
  store i32 1, i32* %croak_now, align 4
  %85 = load i32, i32* %version_major, align 4
  %cmp122 = icmp eq i32 %85, 2
  br i1 %cmp122, label %if.then.124, label %if.end.185

if.then.124:                                      ; preds = %if.then.121
  %86 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %accept_future_minor = getelementptr inbounds %struct.stcxt, %struct.stcxt* %86, i32 0, i32 17
  %87 = load i32, i32* %accept_future_minor, align 4
  %cmp125 = icmp slt i32 %87, 0
  br i1 %cmp125, label %if.then.127, label %if.end.179

if.then.127:                                      ; preds = %if.then.124
  %call128 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i32 0, i32 0), i32 1)
  %tobool129 = icmp ne %struct.sv* %call128, null
  br i1 %tobool129, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.then.127
  br label %cond.end.174

cond.false:                                       ; preds = %if.then.127
  %call130 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i32 0, i32 0), i32 1)
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %call130, i32 0, i32 2
  %88 = load i32, i32* %sv_flags, align 4
  %and = and i32 %88, 262144
  %tobool131 = icmp ne i32 %and, 0
  br i1 %tobool131, label %cond.true.132, label %cond.false.145

cond.true.132:                                    ; preds = %cond.false
  %call133 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i32 0, i32 0), i32 1)
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %call133, i32 0, i32 0
  %89 = load i8*, i8** %sv_any, align 8
  %90 = bitcast i8* %89 to %struct.xpv*
  store %struct.xpv* %90, %struct.xpv** @PL_Xpv, align 8
  %tobool134 = icmp ne %struct.xpv* %90, null
  br i1 %tobool134, label %land.rhs, label %land.end.143

land.rhs:                                         ; preds = %cond.true.132
  %91 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %91, i32 0, i32 1
  %92 = load i64, i64* %xpv_cur, align 8
  %cmp135 = icmp ugt i64 %92, 1
  br i1 %cmp135, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %93 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_cur137 = getelementptr inbounds %struct.xpv, %struct.xpv* %93, i32 0, i32 1
  %94 = load i64, i64* %xpv_cur137, align 8
  %tobool138 = icmp ne i64 %94, 0
  br i1 %tobool138, label %land.rhs.139, label %land.end

land.rhs.139:                                     ; preds = %lor.rhs
  %95 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %95, i32 0, i32 0
  %96 = load i8*, i8** %xpv_pv, align 8
  %97 = load i8, i8* %96, align 1
  %conv140 = sext i8 %97 to i32
  %cmp141 = icmp ne i32 %conv140, 48
  br label %land.end

land.end:                                         ; preds = %land.rhs.139, %lor.rhs
  %98 = phi i1 [ false, %lor.rhs ], [ %cmp141, %land.rhs.139 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %land.rhs
  %99 = phi i1 [ true, %land.rhs ], [ %98, %land.end ]
  br label %land.end.143

land.end.143:                                     ; preds = %lor.end, %cond.true.132
  %100 = phi i1 [ false, %cond.true.132 ], [ %99, %lor.end ]
  %cond144 = select i1 %100, i32 1, i32 0
  br label %cond.end.172

cond.false.145:                                   ; preds = %cond.false
  %call146 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i32 0, i32 0), i32 1)
  %sv_flags147 = getelementptr inbounds %struct.sv, %struct.sv* %call146, i32 0, i32 2
  %101 = load i32, i32* %sv_flags147, align 4
  %and148 = and i32 %101, 65536
  %tobool149 = icmp ne i32 %and148, 0
  br i1 %tobool149, label %cond.true.150, label %cond.false.155

cond.true.150:                                    ; preds = %cond.false.145
  %call151 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i32 0, i32 0), i32 1)
  %sv_any152 = getelementptr inbounds %struct.sv, %struct.sv* %call151, i32 0, i32 0
  %102 = load i8*, i8** %sv_any152, align 8
  %103 = bitcast i8* %102 to %struct.xpviv*
  %xiv_iv = getelementptr inbounds %struct.xpviv, %struct.xpviv* %103, i32 0, i32 3
  %104 = load i64, i64* %xiv_iv, align 8
  %cmp153 = icmp ne i64 %104, 0
  %conv154 = zext i1 %cmp153 to i32
  br label %cond.end.170

cond.false.155:                                   ; preds = %cond.false.145
  %call156 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i32 0, i32 0), i32 1)
  %sv_flags157 = getelementptr inbounds %struct.sv, %struct.sv* %call156, i32 0, i32 2
  %105 = load i32, i32* %sv_flags157, align 4
  %and158 = and i32 %105, 131072
  %tobool159 = icmp ne i32 %and158, 0
  br i1 %tobool159, label %cond.true.160, label %cond.false.165

cond.true.160:                                    ; preds = %cond.false.155
  %call161 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i32 0, i32 0), i32 1)
  %sv_any162 = getelementptr inbounds %struct.sv, %struct.sv* %call161, i32 0, i32 0
  %106 = load i8*, i8** %sv_any162, align 8
  %107 = bitcast i8* %106 to %struct.xpvnv*
  %xnv_nv = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %107, i32 0, i32 4
  %108 = load double, double* %xnv_nv, align 8
  %cmp163 = fcmp une double %108, 0.000000e+00
  %conv164 = zext i1 %cmp163 to i32
  br label %cond.end

cond.false.165:                                   ; preds = %cond.false.155
  %call166 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i32 0, i32 0), i32 1)
  %call167 = call signext i8 @Perl_sv_2bool(%struct.sv* %call166)
  %conv168 = sext i8 %call167 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false.165, %cond.true.160
  %cond169 = phi i32 [ %conv164, %cond.true.160 ], [ %conv168, %cond.false.165 ]
  br label %cond.end.170

cond.end.170:                                     ; preds = %cond.end, %cond.true.150
  %cond171 = phi i32 [ %conv154, %cond.true.150 ], [ %cond169, %cond.end ]
  br label %cond.end.172

cond.end.172:                                     ; preds = %cond.end.170, %land.end.143
  %cond173 = phi i32 [ %cond144, %land.end.143 ], [ %cond171, %cond.end.170 ]
  br label %cond.end.174

cond.end.174:                                     ; preds = %cond.end.172, %cond.true
  %cond175 = phi i32 [ 0, %cond.true ], [ %cond173, %cond.end.172 ]
  %tobool176 = icmp ne i32 %cond175, 0
  %cond177 = select i1 %tobool176, i32 1, i32 0
  %109 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %accept_future_minor178 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %109, i32 0, i32 17
  store i32 %cond177, i32* %accept_future_minor178, align 4
  br label %if.end.179

if.end.179:                                       ; preds = %cond.end.174, %if.then.124
  %110 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %accept_future_minor180 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %110, i32 0, i32 17
  %111 = load i32, i32* %accept_future_minor180, align 4
  %cmp181 = icmp eq i32 %111, 1
  br i1 %cmp181, label %if.then.183, label %if.end.184

if.then.183:                                      ; preds = %if.end.179
  store i32 0, i32* %croak_now, align 4
  br label %if.end.184

if.end.184:                                       ; preds = %if.then.183, %if.end.179
  br label %if.end.185

if.end.185:                                       ; preds = %if.end.184, %if.then.121
  %112 = load i32, i32* %croak_now, align 4
  %tobool186 = icmp ne i32 %112, 0
  br i1 %tobool186, label %if.then.187, label %if.end.189

if.then.187:                                      ; preds = %if.end.185
  %113 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty188 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %113, i32 0, i32 18
  store i32 1, i32* %s_dirty188, align 4
  %114 = load i32, i32* %version_major, align 4
  %115 = load i32, i32* %version_minor, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.65, i32 0, i32 0), i32 %114, i32 %115, i32 2, i32 6)
  br label %if.end.189

if.end.189:                                       ; preds = %if.then.187, %if.end.185
  br label %if.end.190

if.end.190:                                       ; preds = %if.end.189, %land.lhs.true, %lor.lhs.false
  %116 = load i32, i32* %use_network_order, align 4
  %and191 = and i32 %116, 1
  %117 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %117, i32 0, i32 11
  store i32 %and191, i32* %netorder, align 4
  %tobool192 = icmp ne i32 %and191, 0
  br i1 %tobool192, label %if.then.193, label %if.end.194

if.then.193:                                      ; preds = %if.end.190
  store %struct.sv* @PL_sv_undef, %struct.sv** %retval
  br label %return

if.end.194:                                       ; preds = %if.end.190
  %118 = load i32, i32* %version_major, align 4
  %cmp195 = icmp sge i32 %118, 2
  br i1 %cmp195, label %land.rhs.197, label %land.end.200

land.rhs.197:                                     ; preds = %if.end.194
  %119 = load i32, i32* %version_minor, align 4
  %cmp198 = icmp sge i32 %119, 2
  br label %land.end.200

land.end.200:                                     ; preds = %land.rhs.197, %if.end.194
  %120 = phi i1 [ false, %if.end.194 ], [ %cmp198, %land.rhs.197 ]
  %land.ext = zext i1 %120 to i32
  store i32 %land.ext, i32* %use_NV_size, align 4
  %121 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio201 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %121, i32 0, i32 23
  %122 = load %struct._PerlIO**, %struct._PerlIO*** %fio201, align 8
  %tobool202 = icmp ne %struct._PerlIO** %122, null
  br i1 %tobool202, label %if.else.217, label %if.then.203

if.then.203:                                      ; preds = %land.end.200
  %123 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf204 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %123, i32 0, i32 21
  %aptr205 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf204, i32 0, i32 2
  %124 = load i8*, i8** %aptr205, align 8
  %125 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf206 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %125, i32 0, i32 21
  %aend207 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf206, i32 0, i32 3
  %126 = load i8*, i8** %aend207, align 8
  %cmp208 = icmp ult i8* %124, %126
  br i1 %cmp208, label %if.then.210, label %if.else.215

if.then.210:                                      ; preds = %if.then.203
  %127 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf211 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %127, i32 0, i32 21
  %aptr212 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf211, i32 0, i32 2
  %128 = load i8*, i8** %aptr212, align 8
  %incdec.ptr213 = getelementptr inbounds i8, i8* %128, i32 1
  store i8* %incdec.ptr213, i8** %aptr212, align 8
  %129 = load i8, i8* %128, align 1
  %conv214 = zext i8 %129 to i32
  store i32 %conv214, i32* %c, align 4
  br label %if.end.216

if.else.215:                                      ; preds = %if.then.203
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.216:                                       ; preds = %if.then.210
  br label %if.end.224

if.else.217:                                      ; preds = %land.end.200
  %130 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio218 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %130, i32 0, i32 23
  %131 = load %struct._PerlIO**, %struct._PerlIO*** %fio218, align 8
  %call219 = call i32 @PerlIO_getc(%struct._PerlIO** %131)
  store i32 %call219, i32* %c, align 4
  %cmp220 = icmp eq i32 %call219, -1
  br i1 %cmp220, label %if.then.222, label %if.end.223

if.then.222:                                      ; preds = %if.else.217
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.223:                                       ; preds = %if.else.217
  br label %if.end.224

if.end.224:                                       ; preds = %if.end.223, %if.end.216
  %132 = load i32, i32* %c, align 4
  %add = add nsw i32 %132, 3
  %133 = load i32, i32* %use_NV_size, align 4
  %add225 = add nsw i32 %add, %133
  store i32 %add225, i32* %length, align 4
  %134 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio226 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %134, i32 0, i32 23
  %135 = load %struct._PerlIO**, %struct._PerlIO*** %fio226, align 8
  %tobool227 = icmp ne %struct._PerlIO** %135, null
  br i1 %tobool227, label %if.else.246, label %if.then.228

if.then.228:                                      ; preds = %if.end.224
  %136 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf229 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %136, i32 0, i32 21
  %aptr230 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf229, i32 0, i32 2
  %137 = load i8*, i8** %aptr230, align 8
  %138 = load i32, i32* %length, align 4
  %idx.ext = sext i32 %138 to i64
  %add.ptr231 = getelementptr inbounds i8, i8* %137, i64 %idx.ext
  %139 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf232 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %139, i32 0, i32 21
  %aend233 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf232, i32 0, i32 3
  %140 = load i8*, i8** %aend233, align 8
  %cmp234 = icmp ule i8* %add.ptr231, %140
  br i1 %cmp234, label %if.then.236, label %if.else.244

if.then.236:                                      ; preds = %if.then.228
  %141 = bitcast [259 x i8]* %buf to i8*
  %142 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf237 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %142, i32 0, i32 21
  %aptr238 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf237, i32 0, i32 2
  %143 = load i8*, i8** %aptr238, align 8
  %144 = load i32, i32* %length, align 4
  %conv239 = sext i32 %144 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %141, i8* %143, i64 %conv239, i32 1, i1 false)
  %145 = load i32, i32* %length, align 4
  %146 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf240 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %146, i32 0, i32 21
  %aptr241 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf240, i32 0, i32 2
  %147 = load i8*, i8** %aptr241, align 8
  %idx.ext242 = sext i32 %145 to i64
  %add.ptr243 = getelementptr inbounds i8, i8* %147, i64 %idx.ext242
  store i8* %add.ptr243, i8** %aptr241, align 8
  br label %if.end.245

if.else.244:                                      ; preds = %if.then.228
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.245:                                       ; preds = %if.then.236
  br label %if.end.256

if.else.246:                                      ; preds = %if.end.224
  %148 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio247 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %148, i32 0, i32 23
  %149 = load %struct._PerlIO**, %struct._PerlIO*** %fio247, align 8
  %arraydecay248 = getelementptr inbounds [259 x i8], [259 x i8]* %buf, i32 0, i32 0
  %150 = load i32, i32* %length, align 4
  %conv249 = sext i32 %150 to i64
  %call250 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %149, i8* %arraydecay248, i64 %conv249)
  %151 = load i32, i32* %length, align 4
  %conv251 = sext i32 %151 to i64
  %cmp252 = icmp ne i64 %call250, %conv251
  br i1 %cmp252, label %if.then.254, label %if.end.255

if.then.254:                                      ; preds = %if.else.246
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.255:                                       ; preds = %if.else.246
  br label %if.end.256

if.end.256:                                       ; preds = %if.end.255, %if.end.245
  %152 = load i32, i32* %c, align 4
  %conv257 = sext i32 %152 to i64
  %cmp258 = icmp ne i64 %conv257, 8
  br i1 %cmp258, label %if.then.265, label %lor.lhs.false.260

lor.lhs.false.260:                                ; preds = %if.end.256
  %arraydecay261 = getelementptr inbounds [259 x i8], [259 x i8]* %buf, i32 0, i32 0
  %153 = load i32, i32* %c, align 4
  %conv262 = sext i32 %153 to i64
  %call263 = call i32 @memcmp(i8* %arraydecay261, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @byteorderstr, i32 0, i32 0), i64 %conv262)
  %tobool264 = icmp ne i32 %call263, 0
  br i1 %tobool264, label %if.then.265, label %if.end.267

if.then.265:                                      ; preds = %lor.lhs.false.260, %if.end.256
  %154 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty266 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %154, i32 0, i32 18
  store i32 1, i32* %s_dirty266, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.66, i32 0, i32 0))
  br label %if.end.267

if.end.267:                                       ; preds = %if.then.265, %lor.lhs.false.260
  %arraydecay268 = getelementptr inbounds [259 x i8], [259 x i8]* %buf, i32 0, i32 0
  %155 = load i32, i32* %c, align 4
  %idx.ext269 = sext i32 %155 to i64
  %add.ptr270 = getelementptr inbounds i8, i8* %arraydecay268, i64 %idx.ext269
  store i8* %add.ptr270, i8** %current, align 8
  %156 = load i8*, i8** %current, align 8
  %incdec.ptr271 = getelementptr inbounds i8, i8* %156, i32 1
  store i8* %incdec.ptr271, i8** %current, align 8
  %157 = load i8, i8* %156, align 1
  %conv272 = zext i8 %157 to i32
  %conv273 = sext i32 %conv272 to i64
  %cmp274 = icmp ne i64 %conv273, 4
  br i1 %cmp274, label %if.then.276, label %if.end.278

if.then.276:                                      ; preds = %if.end.267
  %158 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty277 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %158, i32 0, i32 18
  store i32 1, i32* %s_dirty277, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.67, i32 0, i32 0))
  br label %if.end.278

if.end.278:                                       ; preds = %if.then.276, %if.end.267
  %159 = load i8*, i8** %current, align 8
  %incdec.ptr279 = getelementptr inbounds i8, i8* %159, i32 1
  store i8* %incdec.ptr279, i8** %current, align 8
  %160 = load i8, i8* %159, align 1
  %conv280 = zext i8 %160 to i32
  %conv281 = sext i32 %conv280 to i64
  %cmp282 = icmp ne i64 %conv281, 8
  br i1 %cmp282, label %if.then.284, label %if.end.286

if.then.284:                                      ; preds = %if.end.278
  %161 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty285 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %161, i32 0, i32 18
  store i32 1, i32* %s_dirty285, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.68, i32 0, i32 0))
  br label %if.end.286

if.end.286:                                       ; preds = %if.then.284, %if.end.278
  %162 = load i8*, i8** %current, align 8
  %163 = load i8, i8* %162, align 1
  %conv287 = zext i8 %163 to i32
  %conv288 = sext i32 %conv287 to i64
  %cmp289 = icmp ne i64 %conv288, 8
  br i1 %cmp289, label %if.then.291, label %if.end.293

if.then.291:                                      ; preds = %if.end.286
  %164 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty292 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %164, i32 0, i32 18
  store i32 1, i32* %s_dirty292, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.69, i32 0, i32 0))
  br label %if.end.293

if.end.293:                                       ; preds = %if.then.291, %if.end.286
  %165 = load i32, i32* %use_NV_size, align 4
  %tobool294 = icmp ne i32 %165, 0
  br i1 %tobool294, label %if.then.295, label %if.end.304

if.then.295:                                      ; preds = %if.end.293
  %166 = load i8*, i8** %current, align 8
  %incdec.ptr296 = getelementptr inbounds i8, i8* %166, i32 1
  store i8* %incdec.ptr296, i8** %current, align 8
  %167 = load i8, i8* %incdec.ptr296, align 1
  %conv297 = zext i8 %167 to i32
  %conv298 = sext i32 %conv297 to i64
  %cmp299 = icmp ne i64 %conv298, 8
  br i1 %cmp299, label %if.then.301, label %if.end.303

if.then.301:                                      ; preds = %if.then.295
  %168 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty302 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %168, i32 0, i32 18
  store i32 1, i32* %s_dirty302, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.70, i32 0, i32 0))
  br label %if.end.303

if.end.303:                                       ; preds = %if.then.301, %if.then.295
  br label %if.end.304

if.end.304:                                       ; preds = %if.end.303, %if.end.293
  store %struct.sv* @PL_sv_undef, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.304, %if.then.254, %if.else.244, %if.then.222, %if.else.215, %if.then.193, %if.then.111, %if.else.104, %if.then.82, %if.else.75, %if.then.50, %if.else.41, %if.then.14, %if.else
  %169 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %169
}

; Function Attrs: nounwind uwtable
define internal void @init_retrieve_context(%struct.stcxt* %cxt, i32 %optype, i32 %is_tainted) #0 {
entry:
  %cxt.addr = alloca %struct.stcxt*, align 8
  %optype.addr = alloca i32, align 4
  %is_tainted.addr = alloca i32, align 4
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i32 %optype, i32* %optype.addr, align 4
  store i32 %is_tainted, i32* %is_tainted.addr, align 4
  %call = call %struct.hv* @Perl_newHV()
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 8
  store %struct.hv* %call, %struct.hv** %hook, align 8
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %retrieve_vtbl = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 26
  %2 = load %struct.sv* (...)**, %struct.sv* (...)*** %retrieve_vtbl, align 8
  %3 = bitcast %struct.sv* (...)** %2 to i8*
  %cmp = icmp eq i8* %3, bitcast ([28 x %struct.sv* (%struct.stcxt*, i8*)*]* @sv_old_retrieve to i8*)
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %call1 = call %struct.hv* @Perl_newHV()
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %call1, %cond.true ], [ null, %cond.false ]
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 2
  store %struct.hv* %cond, %struct.hv** %hseen, align 8
  %call2 = call %struct.av* @Perl_newAV()
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 4
  store %struct.av* %call2, %struct.av** %aseen, align 8
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %where_is_undef = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 5
  store i64 -1, i64* %where_is_undef, align 8
  %call3 = call %struct.av* @Perl_newAV()
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aclass = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 7
  store %struct.av* %call3, %struct.av** %aclass, align 8
  %8 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %8, i32 0, i32 9
  store i64 0, i64* %tagnum, align 8
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %classnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 10
  store i64 0, i64* %classnum, align 8
  %10 = load i32, i32* %optype.addr, align 4
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %optype4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 1
  store i32 %10, i32* %optype4, align 4
  %12 = load i32, i32* %is_tainted.addr, align 4
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_tainted = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 12
  store i32 %12, i32* %s_tainted, align 4
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %entry5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 0
  store i32 1, i32* %entry5, align 4
  %15 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %accept_future_minor = getelementptr inbounds %struct.stcxt, %struct.stcxt* %15, i32 0, i32 17
  store i32 -1, i32* %accept_future_minor, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %type = alloca i32, align 4
  %svh = alloca %struct.sv**, align 8
  %sv = alloca %struct.sv*, align 8
  %tag = alloca i64, align 8
  %nettag = alloca i32, align 4
  %tagn = alloca i32, align 4
  %tag123 = alloca i32, align 4
  %len = alloca i32, align 4
  %Perl_ref = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 2
  %1 = load %struct.hv*, %struct.hv** %hseen, align 8
  %tobool = icmp ne %struct.hv* %1, null
  br i1 %tobool, label %if.then, label %if.end.95

if.then:                                          ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 11
  %3 = load i32, i32* %netorder, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.then.2, label %if.else.18

if.then.2:                                        ; preds = %if.then
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 23
  %5 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool3 = icmp ne %struct._PerlIO** %5, null
  br i1 %tobool3, label %if.else.12, label %if.then.4

if.then.4:                                        ; preds = %if.then.2
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %7 = load i8*, i8** %aptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 4
  %8 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %8, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf5, i32 0, i32 3
  %9 = load i8*, i8** %aend, align 8
  %cmp = icmp ule i8* %add.ptr, %9
  br i1 %cmp, label %if.then.6, label %if.else

if.then.6:                                        ; preds = %if.then.4
  %10 = bitcast i32* %nettag to i8*
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf7 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 21
  %aptr8 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf7, i32 0, i32 2
  %12 = load i8*, i8** %aptr8, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %12, i64 4, i32 1, i1 false)
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf9 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 21
  %aptr10 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf9, i32 0, i32 2
  %14 = load i8*, i8** %aptr10, align 8
  %add.ptr11 = getelementptr inbounds i8, i8* %14, i64 4
  store i8* %add.ptr11, i8** %aptr10, align 8
  br label %if.end

if.else:                                          ; preds = %if.then.4
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %if.then.6
  br label %if.end.17

if.else.12:                                       ; preds = %if.then.2
  %15 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio13 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %15, i32 0, i32 23
  %16 = load %struct._PerlIO**, %struct._PerlIO*** %fio13, align 8
  %17 = bitcast i32* %nettag to i8*
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %16, i8* %17, i64 4)
  %cmp14 = icmp ne i64 %call, 4
  br i1 %cmp14, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.else.12
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.16:                                        ; preds = %if.else.12
  br label %if.end.17

if.end.17:                                        ; preds = %if.end.16, %if.end
  %18 = load i32, i32* %nettag, align 4
  %conv = sext i32 %18 to i64
  store i64 %conv, i64* %tag, align 8
  br label %if.end.45

if.else.18:                                       ; preds = %if.then
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 23
  %20 = load %struct._PerlIO**, %struct._PerlIO*** %fio19, align 8
  %tobool20 = icmp ne %struct._PerlIO** %20, null
  br i1 %tobool20, label %if.else.37, label %if.then.21

if.then.21:                                       ; preds = %if.else.18
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 21
  %aptr23 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf22, i32 0, i32 2
  %22 = load i8*, i8** %aptr23, align 8
  %add.ptr24 = getelementptr inbounds i8, i8* %22, i64 8
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf25 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 21
  %aend26 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf25, i32 0, i32 3
  %24 = load i8*, i8** %aend26, align 8
  %cmp27 = icmp ule i8* %add.ptr24, %24
  br i1 %cmp27, label %if.then.29, label %if.else.35

if.then.29:                                       ; preds = %if.then.21
  %25 = bitcast i64* %tag to i8*
  %26 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf30 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %26, i32 0, i32 21
  %aptr31 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf30, i32 0, i32 2
  %27 = load i8*, i8** %aptr31, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %27, i64 8, i32 1, i1 false)
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf32 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 21
  %aptr33 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf32, i32 0, i32 2
  %29 = load i8*, i8** %aptr33, align 8
  %add.ptr34 = getelementptr inbounds i8, i8* %29, i64 8
  store i8* %add.ptr34, i8** %aptr33, align 8
  br label %if.end.36

if.else.35:                                       ; preds = %if.then.21
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.36:                                        ; preds = %if.then.29
  br label %if.end.44

if.else.37:                                       ; preds = %if.else.18
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio38 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 23
  %31 = load %struct._PerlIO**, %struct._PerlIO*** %fio38, align 8
  %32 = bitcast i64* %tag to i8*
  %call39 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %31, i8* %32, i64 8)
  %cmp40 = icmp ne i64 %call39, 8
  br i1 %cmp40, label %if.then.42, label %if.end.43

if.then.42:                                       ; preds = %if.else.37
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.43:                                        ; preds = %if.else.37
  br label %if.end.44

if.end.44:                                        ; preds = %if.end.43, %if.end.36
  br label %if.end.45

if.end.45:                                        ; preds = %if.end.44, %if.end.17
  %33 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio46 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %33, i32 0, i32 23
  %34 = load %struct._PerlIO**, %struct._PerlIO*** %fio46, align 8
  %tobool47 = icmp ne %struct._PerlIO** %34, null
  br i1 %tobool47, label %if.else.61, label %if.then.48

if.then.48:                                       ; preds = %if.end.45
  %35 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf49 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %35, i32 0, i32 21
  %aptr50 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf49, i32 0, i32 2
  %36 = load i8*, i8** %aptr50, align 8
  %37 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf51 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %37, i32 0, i32 21
  %aend52 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf51, i32 0, i32 3
  %38 = load i8*, i8** %aend52, align 8
  %cmp53 = icmp ult i8* %36, %38
  br i1 %cmp53, label %if.then.55, label %if.else.59

if.then.55:                                       ; preds = %if.then.48
  %39 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf56 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %39, i32 0, i32 21
  %aptr57 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf56, i32 0, i32 2
  %40 = load i8*, i8** %aptr57, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %40, i32 1
  store i8* %incdec.ptr, i8** %aptr57, align 8
  %41 = load i8, i8* %40, align 1
  %conv58 = zext i8 %41 to i32
  store i32 %conv58, i32* %type, align 4
  br label %if.end.60

if.else.59:                                       ; preds = %if.then.48
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.60:                                        ; preds = %if.then.55
  br label %if.end.68

if.else.61:                                       ; preds = %if.end.45
  %42 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio62 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %42, i32 0, i32 23
  %43 = load %struct._PerlIO**, %struct._PerlIO*** %fio62, align 8
  %call63 = call i32 @PerlIO_getc(%struct._PerlIO** %43)
  store i32 %call63, i32* %type, align 4
  %cmp64 = icmp eq i32 %call63, -1
  br i1 %cmp64, label %if.then.66, label %if.end.67

if.then.66:                                       ; preds = %if.else.61
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.67:                                        ; preds = %if.else.61
  br label %if.end.68

if.end.68:                                        ; preds = %if.end.67, %if.end.60
  %44 = load i32, i32* %type, align 4
  %cmp69 = icmp eq i32 %44, 0
  br i1 %cmp69, label %if.then.71, label %if.end.88

if.then.71:                                       ; preds = %if.end.68
  %45 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen72 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %45, i32 0, i32 2
  %46 = load %struct.hv*, %struct.hv** %hseen72, align 8
  %47 = bitcast i64* %tag to i8*
  %call73 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %46, i8* %47, i32 8, i32 0)
  store %struct.sv** %call73, %struct.sv*** %svh, align 8
  %48 = load %struct.sv**, %struct.sv*** %svh, align 8
  %tobool74 = icmp ne %struct.sv** %48, null
  br i1 %tobool74, label %if.end.76, label %if.then.75

if.then.75:                                       ; preds = %if.then.71
  %49 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %49, i32 0, i32 18
  store i32 1, i32* %s_dirty, align 4
  %50 = load i64, i64* %tag, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.89, i32 0, i32 0), i64 %50)
  br label %if.end.76

if.end.76:                                        ; preds = %if.then.75, %if.then.71
  %51 = load %struct.sv**, %struct.sv*** %svh, align 8
  %52 = load %struct.sv*, %struct.sv** %51, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %52, i32 0, i32 2
  %53 = load i32, i32* %sv_flags, align 4
  %and = and i32 %53, 65536
  %tobool77 = icmp ne i32 %and, 0
  br i1 %tobool77, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.76
  %54 = load %struct.sv**, %struct.sv*** %svh, align 8
  %55 = load %struct.sv*, %struct.sv** %54, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %55, i32 0, i32 0
  %56 = load i8*, i8** %sv_any, align 8
  %57 = bitcast i8* %56 to %struct.xpviv*
  %xiv_iv = getelementptr inbounds %struct.xpviv, %struct.xpviv* %57, i32 0, i32 3
  %58 = load i64, i64* %xiv_iv, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end.76
  %59 = load %struct.sv**, %struct.sv*** %svh, align 8
  %60 = load %struct.sv*, %struct.sv** %59, align 8
  %call78 = call i64 @Perl_sv_2iv(%struct.sv* %60)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %58, %cond.true ], [ %call78, %cond.false ]
  %conv79 = trunc i64 %cond to i32
  store i32 %conv79, i32* %tagn, align 4
  %61 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %61, i32 0, i32 4
  %62 = load %struct.av*, %struct.av** %aseen, align 8
  %63 = load i32, i32* %tagn, align 4
  %call80 = call %struct.sv** @Perl_av_fetch(%struct.av* %62, i32 %63, i32 0)
  store %struct.sv** %call80, %struct.sv*** %svh, align 8
  %64 = load %struct.sv**, %struct.sv*** %svh, align 8
  %tobool81 = icmp ne %struct.sv** %64, null
  br i1 %tobool81, label %if.end.85, label %if.then.82

if.then.82:                                       ; preds = %cond.end
  %65 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty83 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %65, i32 0, i32 18
  store i32 1, i32* %s_dirty83, align 4
  %66 = load i32, i32* %tagn, align 4
  %conv84 = sext i32 %66 to i64
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.72, i32 0, i32 0), i64 %conv84)
  br label %if.end.85

if.end.85:                                        ; preds = %if.then.82, %cond.end
  %67 = load %struct.sv**, %struct.sv*** %svh, align 8
  %68 = load %struct.sv*, %struct.sv** %67, align 8
  store %struct.sv* %68, %struct.sv** %sv, align 8
  %69 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %69, %struct.sv** @PL_Sv, align 8
  %70 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool86 = icmp ne %struct.sv* %70, null
  br i1 %tobool86, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end.85
  %71 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %71, i32 0, i32 1
  %72 = load i32, i32* %sv_refcnt, align 4
  %inc = add i32 %72, 1
  store i32 %inc, i32* %sv_refcnt, align 4
  %tobool87 = icmp ne i32 %inc, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.85
  %73 = phi i1 [ false, %if.end.85 ], [ %tobool87, %land.rhs ]
  %land.ext = zext i1 %73 to i32
  %74 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %75 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %75, %struct.sv** %retval
  br label %return

if.end.88:                                        ; preds = %if.end.68
  %76 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen89 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %76, i32 0, i32 2
  %77 = load %struct.hv*, %struct.hv** %hseen89, align 8
  %78 = bitcast i64* %tag to i8*
  %79 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %79, i32 0, i32 9
  %80 = load i64, i64* %tagnum, align 8
  %call90 = call %struct.sv* @Perl_newSViv(i64 %80)
  %call91 = call %struct.sv** @Perl_hv_store(%struct.hv* %77, i8* %78, i32 8, %struct.sv* %call90, i32 0)
  %tobool92 = icmp ne %struct.sv** %call91, null
  br i1 %tobool92, label %if.end.94, label %if.then.93

if.then.93:                                       ; preds = %if.end.88
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.94:                                        ; preds = %if.end.88
  br label %first_time

if.end.95:                                        ; preds = %entry
  %81 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio96 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %81, i32 0, i32 23
  %82 = load %struct._PerlIO**, %struct._PerlIO*** %fio96, align 8
  %tobool97 = icmp ne %struct._PerlIO** %82, null
  br i1 %tobool97, label %if.else.112, label %if.then.98

if.then.98:                                       ; preds = %if.end.95
  %83 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf99 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %83, i32 0, i32 21
  %aptr100 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf99, i32 0, i32 2
  %84 = load i8*, i8** %aptr100, align 8
  %85 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf101 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %85, i32 0, i32 21
  %aend102 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf101, i32 0, i32 3
  %86 = load i8*, i8** %aend102, align 8
  %cmp103 = icmp ult i8* %84, %86
  br i1 %cmp103, label %if.then.105, label %if.else.110

if.then.105:                                      ; preds = %if.then.98
  %87 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf106 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %87, i32 0, i32 21
  %aptr107 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf106, i32 0, i32 2
  %88 = load i8*, i8** %aptr107, align 8
  %incdec.ptr108 = getelementptr inbounds i8, i8* %88, i32 1
  store i8* %incdec.ptr108, i8** %aptr107, align 8
  %89 = load i8, i8* %88, align 1
  %conv109 = zext i8 %89 to i32
  store i32 %conv109, i32* %type, align 4
  br label %if.end.111

if.else.110:                                      ; preds = %if.then.98
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.111:                                       ; preds = %if.then.105
  br label %if.end.119

if.else.112:                                      ; preds = %if.end.95
  %90 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio113 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %90, i32 0, i32 23
  %91 = load %struct._PerlIO**, %struct._PerlIO*** %fio113, align 8
  %call114 = call i32 @PerlIO_getc(%struct._PerlIO** %91)
  store i32 %call114, i32* %type, align 4
  %cmp115 = icmp eq i32 %call114, -1
  br i1 %cmp115, label %if.then.117, label %if.end.118

if.then.117:                                      ; preds = %if.else.112
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.118:                                       ; preds = %if.else.112
  br label %if.end.119

if.end.119:                                       ; preds = %if.end.118, %if.end.111
  %92 = load i32, i32* %type, align 4
  %cmp120 = icmp eq i32 %92, 0
  br i1 %cmp120, label %if.then.122, label %if.else.179

if.then.122:                                      ; preds = %if.end.119
  %93 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio124 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %93, i32 0, i32 23
  %94 = load %struct._PerlIO**, %struct._PerlIO*** %fio124, align 8
  %tobool125 = icmp ne %struct._PerlIO** %94, null
  br i1 %tobool125, label %if.else.154, label %if.then.126

if.then.126:                                      ; preds = %if.then.122
  %95 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf127 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %95, i32 0, i32 21
  %aptr128 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf127, i32 0, i32 2
  %96 = load i8*, i8** %aptr128, align 8
  %add.ptr129 = getelementptr inbounds i8, i8* %96, i64 4
  %97 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf130 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %97, i32 0, i32 21
  %aend131 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf130, i32 0, i32 3
  %98 = load i8*, i8** %aend131, align 8
  %cmp132 = icmp ule i8* %add.ptr129, %98
  br i1 %cmp132, label %if.then.134, label %if.else.152

if.then.134:                                      ; preds = %if.then.126
  %99 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf135 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %99, i32 0, i32 21
  %aptr136 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf135, i32 0, i32 2
  %100 = load i8*, i8** %aptr136, align 8
  %101 = ptrtoint i8* %100 to i64
  %102 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf137 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %102, i32 0, i32 21
  %aptr138 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf137, i32 0, i32 2
  %103 = load i8*, i8** %aptr138, align 8
  %104 = ptrtoint i8* %103 to i64
  %and139 = and i64 %104, -4
  %cmp140 = icmp eq i64 %101, %and139
  br i1 %cmp140, label %if.then.142, label %if.else.145

if.then.142:                                      ; preds = %if.then.134
  %105 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf143 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %105, i32 0, i32 21
  %aptr144 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf143, i32 0, i32 2
  %106 = load i8*, i8** %aptr144, align 8
  %107 = bitcast i8* %106 to i32*
  %108 = load i32, i32* %107, align 4
  store i32 %108, i32* %tag123, align 4
  br label %if.end.148

if.else.145:                                      ; preds = %if.then.134
  %109 = bitcast i32* %tag123 to i8*
  %110 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf146 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %110, i32 0, i32 21
  %aptr147 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf146, i32 0, i32 2
  %111 = load i8*, i8** %aptr147, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %109, i8* %111, i64 4, i32 1, i1 false)
  br label %if.end.148

if.end.148:                                       ; preds = %if.else.145, %if.then.142
  %112 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf149 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %112, i32 0, i32 21
  %aptr150 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf149, i32 0, i32 2
  %113 = load i8*, i8** %aptr150, align 8
  %add.ptr151 = getelementptr inbounds i8, i8* %113, i64 4
  store i8* %add.ptr151, i8** %aptr150, align 8
  br label %if.end.153

if.else.152:                                      ; preds = %if.then.126
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.153:                                       ; preds = %if.end.148
  br label %if.end.161

if.else.154:                                      ; preds = %if.then.122
  %114 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio155 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %114, i32 0, i32 23
  %115 = load %struct._PerlIO**, %struct._PerlIO*** %fio155, align 8
  %116 = bitcast i32* %tag123 to i8*
  %call156 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %115, i8* %116, i64 4)
  %cmp157 = icmp ne i64 %call156, 4
  br i1 %cmp157, label %if.then.159, label %if.end.160

if.then.159:                                      ; preds = %if.else.154
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.160:                                       ; preds = %if.else.154
  br label %if.end.161

if.end.161:                                       ; preds = %if.end.160, %if.end.153
  %117 = load i32, i32* %tag123, align 4
  %conv162 = sext i32 %117 to i64
  %call163 = call i64 @Perl_my_ntohl(i64 %conv162)
  %conv164 = trunc i64 %call163 to i32
  store i32 %conv164, i32* %tag123, align 4
  %118 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen165 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %118, i32 0, i32 4
  %119 = load %struct.av*, %struct.av** %aseen165, align 8
  %120 = load i32, i32* %tag123, align 4
  %call166 = call %struct.sv** @Perl_av_fetch(%struct.av* %119, i32 %120, i32 0)
  store %struct.sv** %call166, %struct.sv*** %svh, align 8
  %121 = load %struct.sv**, %struct.sv*** %svh, align 8
  %tobool167 = icmp ne %struct.sv** %121, null
  br i1 %tobool167, label %if.end.171, label %if.then.168

if.then.168:                                      ; preds = %if.end.161
  %122 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty169 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %122, i32 0, i32 18
  store i32 1, i32* %s_dirty169, align 4
  %123 = load i32, i32* %tag123, align 4
  %conv170 = sext i32 %123 to i64
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.72, i32 0, i32 0), i64 %conv170)
  br label %if.end.171

if.end.171:                                       ; preds = %if.then.168, %if.end.161
  %124 = load %struct.sv**, %struct.sv*** %svh, align 8
  %125 = load %struct.sv*, %struct.sv** %124, align 8
  store %struct.sv* %125, %struct.sv** %sv, align 8
  %126 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %126, %struct.sv** @PL_Sv, align 8
  %127 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool172 = icmp ne %struct.sv* %127, null
  br i1 %tobool172, label %land.rhs.173, label %land.end.177

land.rhs.173:                                     ; preds = %if.end.171
  %128 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt174 = getelementptr inbounds %struct.sv, %struct.sv* %128, i32 0, i32 1
  %129 = load i32, i32* %sv_refcnt174, align 4
  %inc175 = add i32 %129, 1
  store i32 %inc175, i32* %sv_refcnt174, align 4
  %tobool176 = icmp ne i32 %inc175, 0
  br label %land.end.177

land.end.177:                                     ; preds = %land.rhs.173, %if.end.171
  %130 = phi i1 [ false, %if.end.171 ], [ %tobool176, %land.rhs.173 ]
  %land.ext178 = zext i1 %130 to i32
  %131 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %132 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %132, %struct.sv** %retval
  br label %return

if.else.179:                                      ; preds = %if.end.119
  %133 = load i32, i32* %type, align 4
  %cmp180 = icmp sge i32 %133, 27
  br i1 %cmp180, label %land.lhs.true, label %if.end.258

land.lhs.true:                                    ; preds = %if.else.179
  %134 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_minor = getelementptr inbounds %struct.stcxt, %struct.stcxt* %134, i32 0, i32 25
  %135 = load i32, i32* %ver_minor, align 4
  %cmp182 = icmp sgt i32 %135, 6
  br i1 %cmp182, label %if.then.184, label %if.end.258

if.then.184:                                      ; preds = %land.lhs.true
  %136 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %accept_future_minor = getelementptr inbounds %struct.stcxt, %struct.stcxt* %136, i32 0, i32 17
  %137 = load i32, i32* %accept_future_minor, align 4
  %cmp185 = icmp slt i32 %137, 0
  br i1 %cmp185, label %if.then.187, label %if.end.250

if.then.187:                                      ; preds = %if.then.184
  %call188 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i32 0, i32 0), i32 1)
  %tobool189 = icmp ne %struct.sv* %call188, null
  br i1 %tobool189, label %cond.false.191, label %cond.true.190

cond.true.190:                                    ; preds = %if.then.187
  br label %cond.end.245

cond.false.191:                                   ; preds = %if.then.187
  %call192 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i32 0, i32 0), i32 1)
  %sv_flags193 = getelementptr inbounds %struct.sv, %struct.sv* %call192, i32 0, i32 2
  %138 = load i32, i32* %sv_flags193, align 4
  %and194 = and i32 %138, 262144
  %tobool195 = icmp ne i32 %and194, 0
  br i1 %tobool195, label %cond.true.196, label %cond.false.214

cond.true.196:                                    ; preds = %cond.false.191
  %call197 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i32 0, i32 0), i32 1)
  %sv_any198 = getelementptr inbounds %struct.sv, %struct.sv* %call197, i32 0, i32 0
  %139 = load i8*, i8** %sv_any198, align 8
  %140 = bitcast i8* %139 to %struct.xpv*
  store %struct.xpv* %140, %struct.xpv** @PL_Xpv, align 8
  %tobool199 = icmp ne %struct.xpv* %140, null
  br i1 %tobool199, label %land.rhs.200, label %land.end.211

land.rhs.200:                                     ; preds = %cond.true.196
  %141 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %141, i32 0, i32 1
  %142 = load i64, i64* %xpv_cur, align 8
  %cmp201 = icmp ugt i64 %142, 1
  br i1 %cmp201, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs.200
  %143 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_cur203 = getelementptr inbounds %struct.xpv, %struct.xpv* %143, i32 0, i32 1
  %144 = load i64, i64* %xpv_cur203, align 8
  %tobool204 = icmp ne i64 %144, 0
  br i1 %tobool204, label %land.rhs.205, label %land.end.209

land.rhs.205:                                     ; preds = %lor.rhs
  %145 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %145, i32 0, i32 0
  %146 = load i8*, i8** %xpv_pv, align 8
  %147 = load i8, i8* %146, align 1
  %conv206 = sext i8 %147 to i32
  %cmp207 = icmp ne i32 %conv206, 48
  br label %land.end.209

land.end.209:                                     ; preds = %land.rhs.205, %lor.rhs
  %148 = phi i1 [ false, %lor.rhs ], [ %cmp207, %land.rhs.205 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end.209, %land.rhs.200
  %149 = phi i1 [ true, %land.rhs.200 ], [ %148, %land.end.209 ]
  br label %land.end.211

land.end.211:                                     ; preds = %lor.end, %cond.true.196
  %150 = phi i1 [ false, %cond.true.196 ], [ %149, %lor.end ]
  %cond213 = select i1 %150, i32 1, i32 0
  br label %cond.end.243

cond.false.214:                                   ; preds = %cond.false.191
  %call215 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i32 0, i32 0), i32 1)
  %sv_flags216 = getelementptr inbounds %struct.sv, %struct.sv* %call215, i32 0, i32 2
  %151 = load i32, i32* %sv_flags216, align 4
  %and217 = and i32 %151, 65536
  %tobool218 = icmp ne i32 %and217, 0
  br i1 %tobool218, label %cond.true.219, label %cond.false.225

cond.true.219:                                    ; preds = %cond.false.214
  %call220 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i32 0, i32 0), i32 1)
  %sv_any221 = getelementptr inbounds %struct.sv, %struct.sv* %call220, i32 0, i32 0
  %152 = load i8*, i8** %sv_any221, align 8
  %153 = bitcast i8* %152 to %struct.xpviv*
  %xiv_iv222 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %153, i32 0, i32 3
  %154 = load i64, i64* %xiv_iv222, align 8
  %cmp223 = icmp ne i64 %154, 0
  %conv224 = zext i1 %cmp223 to i32
  br label %cond.end.241

cond.false.225:                                   ; preds = %cond.false.214
  %call226 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i32 0, i32 0), i32 1)
  %sv_flags227 = getelementptr inbounds %struct.sv, %struct.sv* %call226, i32 0, i32 2
  %155 = load i32, i32* %sv_flags227, align 4
  %and228 = and i32 %155, 131072
  %tobool229 = icmp ne i32 %and228, 0
  br i1 %tobool229, label %cond.true.230, label %cond.false.235

cond.true.230:                                    ; preds = %cond.false.225
  %call231 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i32 0, i32 0), i32 1)
  %sv_any232 = getelementptr inbounds %struct.sv, %struct.sv* %call231, i32 0, i32 0
  %156 = load i8*, i8** %sv_any232, align 8
  %157 = bitcast i8* %156 to %struct.xpvnv*
  %xnv_nv = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %157, i32 0, i32 4
  %158 = load double, double* %xnv_nv, align 8
  %cmp233 = fcmp une double %158, 0.000000e+00
  %conv234 = zext i1 %cmp233 to i32
  br label %cond.end.239

cond.false.235:                                   ; preds = %cond.false.225
  %call236 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i32 0, i32 0), i32 1)
  %call237 = call signext i8 @Perl_sv_2bool(%struct.sv* %call236)
  %conv238 = sext i8 %call237 to i32
  br label %cond.end.239

cond.end.239:                                     ; preds = %cond.false.235, %cond.true.230
  %cond240 = phi i32 [ %conv234, %cond.true.230 ], [ %conv238, %cond.false.235 ]
  br label %cond.end.241

cond.end.241:                                     ; preds = %cond.end.239, %cond.true.219
  %cond242 = phi i32 [ %conv224, %cond.true.219 ], [ %cond240, %cond.end.239 ]
  br label %cond.end.243

cond.end.243:                                     ; preds = %cond.end.241, %land.end.211
  %cond244 = phi i32 [ %cond213, %land.end.211 ], [ %cond242, %cond.end.241 ]
  br label %cond.end.245

cond.end.245:                                     ; preds = %cond.end.243, %cond.true.190
  %cond246 = phi i32 [ 0, %cond.true.190 ], [ %cond244, %cond.end.243 ]
  %tobool247 = icmp ne i32 %cond246, 0
  %cond248 = select i1 %tobool247, i32 1, i32 0
  %159 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %accept_future_minor249 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %159, i32 0, i32 17
  store i32 %cond248, i32* %accept_future_minor249, align 4
  br label %if.end.250

if.end.250:                                       ; preds = %cond.end.245, %if.then.184
  %160 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %accept_future_minor251 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %160, i32 0, i32 17
  %161 = load i32, i32* %accept_future_minor251, align 4
  %cmp252 = icmp eq i32 %161, 1
  br i1 %cmp252, label %if.then.254, label %if.end.257

if.then.254:                                      ; preds = %if.end.250
  %162 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty255 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %162, i32 0, i32 18
  store i32 1, i32* %s_dirty255, align 4
  %163 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_major = getelementptr inbounds %struct.stcxt, %struct.stcxt* %163, i32 0, i32 24
  %164 = load i32, i32* %ver_major, align 4
  %165 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_minor256 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %165, i32 0, i32 25
  %166 = load i32, i32* %ver_minor256, align 4
  %167 = load i32, i32* %type, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([119 x i8], [119 x i8]* @.str.90, i32 0, i32 0), i32 %164, i32 %166, i32 %167, i32 2, i32 6, i32 26)
  br label %if.end.257

if.end.257:                                       ; preds = %if.then.254, %if.end.250
  br label %if.end.258

if.end.258:                                       ; preds = %if.end.257, %land.lhs.true, %if.else.179
  br label %if.end.259

if.end.259:                                       ; preds = %if.end.258
  br label %first_time

first_time:                                       ; preds = %if.end.259, %if.end.94
  %168 = load i32, i32* %type, align 4
  %cmp260 = icmp sge i32 %168, 27
  br i1 %cmp260, label %cond.true.262, label %cond.false.263

cond.true.262:                                    ; preds = %first_time
  br label %cond.end.264

cond.false.263:                                   ; preds = %first_time
  %169 = load i32, i32* %type, align 4
  br label %cond.end.264

cond.end.264:                                     ; preds = %cond.false.263, %cond.true.262
  %cond265 = phi i32 [ 27, %cond.true.262 ], [ %169, %cond.false.263 ]
  %idxprom = sext i32 %cond265 to i64
  %170 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %retrieve_vtbl = getelementptr inbounds %struct.stcxt, %struct.stcxt* %170, i32 0, i32 26
  %171 = load %struct.sv* (...)**, %struct.sv* (...)*** %retrieve_vtbl, align 8
  %arrayidx = getelementptr inbounds %struct.sv* (...)*, %struct.sv* (...)** %171, i64 %idxprom
  %172 = load %struct.sv* (...)*, %struct.sv* (...)** %arrayidx, align 8
  %173 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %174 = load i8*, i8** %cname.addr, align 8
  %callee.knr.cast = bitcast %struct.sv* (...)* %172 to %struct.sv* (%struct.stcxt*, i8*, ...)*
  %call266 = call %struct.sv* (%struct.stcxt*, i8*, ...) %callee.knr.cast(%struct.stcxt* %173, i8* %174)
  store %struct.sv* %call266, %struct.sv** %sv, align 8
  %175 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool267 = icmp ne %struct.sv* %175, null
  br i1 %tobool267, label %if.end.269, label %if.then.268

if.then.268:                                      ; preds = %cond.end.264
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.269:                                       ; preds = %cond.end.264
  %176 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_major270 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %176, i32 0, i32 24
  %177 = load i32, i32* %ver_major270, align 4
  %cmp271 = icmp slt i32 %177, 2
  br i1 %cmp271, label %if.then.273, label %if.end.430

if.then.273:                                      ; preds = %if.end.269
  br label %while.cond

while.cond:                                       ; preds = %if.end.419, %if.then.273
  %178 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio274 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %178, i32 0, i32 23
  %179 = load %struct._PerlIO**, %struct._PerlIO*** %fio274, align 8
  %tobool275 = icmp ne %struct._PerlIO** %179, null
  br i1 %tobool275, label %cond.true.276, label %cond.false.279

cond.true.276:                                    ; preds = %while.cond
  %180 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio277 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %180, i32 0, i32 23
  %181 = load %struct._PerlIO**, %struct._PerlIO*** %fio277, align 8
  %call278 = call i32 @PerlIO_getc(%struct._PerlIO** %181)
  br label %cond.end.294

cond.false.279:                                   ; preds = %while.cond
  %182 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf280 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %182, i32 0, i32 21
  %aptr281 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf280, i32 0, i32 2
  %183 = load i8*, i8** %aptr281, align 8
  %184 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf282 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %184, i32 0, i32 21
  %aend283 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf282, i32 0, i32 3
  %185 = load i8*, i8** %aend283, align 8
  %cmp284 = icmp uge i8* %183, %185
  br i1 %cmp284, label %cond.true.286, label %cond.false.287

cond.true.286:                                    ; preds = %cond.false.279
  br label %cond.end.292

cond.false.287:                                   ; preds = %cond.false.279
  %186 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf288 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %186, i32 0, i32 21
  %aptr289 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf288, i32 0, i32 2
  %187 = load i8*, i8** %aptr289, align 8
  %incdec.ptr290 = getelementptr inbounds i8, i8* %187, i32 1
  store i8* %incdec.ptr290, i8** %aptr289, align 8
  %188 = load i8, i8* %187, align 1
  %conv291 = sext i8 %188 to i32
  br label %cond.end.292

cond.end.292:                                     ; preds = %cond.false.287, %cond.true.286
  %cond293 = phi i32 [ -1, %cond.true.286 ], [ %conv291, %cond.false.287 ]
  br label %cond.end.294

cond.end.294:                                     ; preds = %cond.end.292, %cond.true.276
  %cond295 = phi i32 [ %call278, %cond.true.276 ], [ %cond293, %cond.end.292 ]
  store i32 %cond295, i32* %type, align 4
  %cmp296 = icmp ne i32 %cond295, 88
  br i1 %cmp296, label %while.body, label %while.end

while.body:                                       ; preds = %cond.end.294
  %189 = load i32, i32* %type, align 4
  switch i32 %189, label %sw.default [
    i32 98, label %sw.bb
    i32 66, label %sw.bb.322
    i32 -1, label %sw.bb.368
  ]

sw.bb:                                            ; preds = %while.body
  %190 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio298 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %190, i32 0, i32 23
  %191 = load %struct._PerlIO**, %struct._PerlIO*** %fio298, align 8
  %tobool299 = icmp ne %struct._PerlIO** %191, null
  br i1 %tobool299, label %if.else.314, label %if.then.300

if.then.300:                                      ; preds = %sw.bb
  %192 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf301 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %192, i32 0, i32 21
  %aptr302 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf301, i32 0, i32 2
  %193 = load i8*, i8** %aptr302, align 8
  %194 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf303 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %194, i32 0, i32 21
  %aend304 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf303, i32 0, i32 3
  %195 = load i8*, i8** %aend304, align 8
  %cmp305 = icmp ult i8* %193, %195
  br i1 %cmp305, label %if.then.307, label %if.else.312

if.then.307:                                      ; preds = %if.then.300
  %196 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf308 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %196, i32 0, i32 21
  %aptr309 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf308, i32 0, i32 2
  %197 = load i8*, i8** %aptr309, align 8
  %incdec.ptr310 = getelementptr inbounds i8, i8* %197, i32 1
  store i8* %incdec.ptr310, i8** %aptr309, align 8
  %198 = load i8, i8* %197, align 1
  %conv311 = zext i8 %198 to i32
  store i32 %conv311, i32* %len, align 4
  br label %if.end.313

if.else.312:                                      ; preds = %if.then.300
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.313:                                       ; preds = %if.then.307
  br label %if.end.321

if.else.314:                                      ; preds = %sw.bb
  %199 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio315 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %199, i32 0, i32 23
  %200 = load %struct._PerlIO**, %struct._PerlIO*** %fio315, align 8
  %call316 = call i32 @PerlIO_getc(%struct._PerlIO** %200)
  store i32 %call316, i32* %len, align 4
  %cmp317 = icmp eq i32 %call316, -1
  br i1 %cmp317, label %if.then.319, label %if.end.320

if.then.319:                                      ; preds = %if.else.314
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.320:                                       ; preds = %if.else.314
  br label %if.end.321

if.end.321:                                       ; preds = %if.end.320, %if.end.313
  br label %sw.epilog

sw.bb.322:                                        ; preds = %while.body
  %201 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio323 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %201, i32 0, i32 23
  %202 = load %struct._PerlIO**, %struct._PerlIO*** %fio323, align 8
  %tobool324 = icmp ne %struct._PerlIO** %202, null
  br i1 %tobool324, label %if.else.353, label %if.then.325

if.then.325:                                      ; preds = %sw.bb.322
  %203 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf326 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %203, i32 0, i32 21
  %aptr327 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf326, i32 0, i32 2
  %204 = load i8*, i8** %aptr327, align 8
  %add.ptr328 = getelementptr inbounds i8, i8* %204, i64 4
  %205 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf329 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %205, i32 0, i32 21
  %aend330 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf329, i32 0, i32 3
  %206 = load i8*, i8** %aend330, align 8
  %cmp331 = icmp ule i8* %add.ptr328, %206
  br i1 %cmp331, label %if.then.333, label %if.else.351

if.then.333:                                      ; preds = %if.then.325
  %207 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf334 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %207, i32 0, i32 21
  %aptr335 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf334, i32 0, i32 2
  %208 = load i8*, i8** %aptr335, align 8
  %209 = ptrtoint i8* %208 to i64
  %210 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf336 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %210, i32 0, i32 21
  %aptr337 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf336, i32 0, i32 2
  %211 = load i8*, i8** %aptr337, align 8
  %212 = ptrtoint i8* %211 to i64
  %and338 = and i64 %212, -4
  %cmp339 = icmp eq i64 %209, %and338
  br i1 %cmp339, label %if.then.341, label %if.else.344

if.then.341:                                      ; preds = %if.then.333
  %213 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf342 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %213, i32 0, i32 21
  %aptr343 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf342, i32 0, i32 2
  %214 = load i8*, i8** %aptr343, align 8
  %215 = bitcast i8* %214 to i32*
  %216 = load i32, i32* %215, align 4
  store i32 %216, i32* %len, align 4
  br label %if.end.347

if.else.344:                                      ; preds = %if.then.333
  %217 = bitcast i32* %len to i8*
  %218 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf345 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %218, i32 0, i32 21
  %aptr346 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf345, i32 0, i32 2
  %219 = load i8*, i8** %aptr346, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %217, i8* %219, i64 4, i32 1, i1 false)
  br label %if.end.347

if.end.347:                                       ; preds = %if.else.344, %if.then.341
  %220 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf348 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %220, i32 0, i32 21
  %aptr349 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf348, i32 0, i32 2
  %221 = load i8*, i8** %aptr349, align 8
  %add.ptr350 = getelementptr inbounds i8, i8* %221, i64 4
  store i8* %add.ptr350, i8** %aptr349, align 8
  br label %if.end.352

if.else.351:                                      ; preds = %if.then.325
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.352:                                       ; preds = %if.end.347
  br label %if.end.360

if.else.353:                                      ; preds = %sw.bb.322
  %222 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio354 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %222, i32 0, i32 23
  %223 = load %struct._PerlIO**, %struct._PerlIO*** %fio354, align 8
  %224 = bitcast i32* %len to i8*
  %call355 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %223, i8* %224, i64 4)
  %cmp356 = icmp ne i64 %call355, 4
  br i1 %cmp356, label %if.then.358, label %if.end.359

if.then.358:                                      ; preds = %if.else.353
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.359:                                       ; preds = %if.else.353
  br label %if.end.360

if.end.360:                                       ; preds = %if.end.359, %if.end.352
  %225 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder361 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %225, i32 0, i32 11
  %226 = load i32, i32* %netorder361, align 4
  %tobool362 = icmp ne i32 %226, 0
  br i1 %tobool362, label %if.then.363, label %if.end.367

if.then.363:                                      ; preds = %if.end.360
  %227 = load i32, i32* %len, align 4
  %conv364 = sext i32 %227 to i64
  %call365 = call i64 @Perl_my_ntohl(i64 %conv364)
  %conv366 = trunc i64 %call365 to i32
  store i32 %conv366, i32* %len, align 4
  br label %if.end.367

if.end.367:                                       ; preds = %if.then.363, %if.end.360
  br label %sw.epilog

sw.bb.368:                                        ; preds = %while.body
  br label %sw.default

sw.default:                                       ; preds = %while.body, %sw.bb.368
  store %struct.sv* null, %struct.sv** %retval
  br label %return

sw.epilog:                                        ; preds = %if.end.367, %if.end.321
  %228 = load i32, i32* %len, align 4
  %conv369 = sext i32 %228 to i64
  %229 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %229, i32 0, i32 20
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf, i32 0, i32 1
  %230 = load i64, i64* %asiz, align 8
  %cmp370 = icmp uge i64 %conv369, %230
  br i1 %cmp370, label %if.then.372, label %if.end.382

if.then.372:                                      ; preds = %sw.epilog
  %231 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf373 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %231, i32 0, i32 20
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf373, i32 0, i32 0
  %232 = load i8*, i8** %arena, align 8
  %233 = load i32, i32* %len, align 4
  %conv374 = sext i32 %233 to i64
  %add = add i64 %conv374, 1
  %mul = mul i64 %add, 1
  %call375 = call i8* @Perl_safesysrealloc(i8* %232, i64 %mul)
  %234 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf376 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %234, i32 0, i32 20
  %arena377 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf376, i32 0, i32 0
  store i8* %call375, i8** %arena377, align 8
  %235 = load i32, i32* %len, align 4
  %conv378 = sext i32 %235 to i64
  %add379 = add i64 %conv378, 1
  %236 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf380 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %236, i32 0, i32 20
  %asiz381 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf380, i32 0, i32 1
  store i64 %add379, i64* %asiz381, align 8
  br label %if.end.382

if.end.382:                                       ; preds = %if.then.372, %sw.epilog
  %237 = load i32, i32* %len, align 4
  %tobool383 = icmp ne i32 %237, 0
  br i1 %tobool383, label %if.then.384, label %if.end.419

if.then.384:                                      ; preds = %if.end.382
  %238 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio385 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %238, i32 0, i32 23
  %239 = load %struct._PerlIO**, %struct._PerlIO*** %fio385, align 8
  %tobool386 = icmp ne %struct._PerlIO** %239, null
  br i1 %tobool386, label %if.else.407, label %if.then.387

if.then.387:                                      ; preds = %if.then.384
  %240 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf388 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %240, i32 0, i32 21
  %aptr389 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf388, i32 0, i32 2
  %241 = load i8*, i8** %aptr389, align 8
  %242 = load i32, i32* %len, align 4
  %idx.ext = sext i32 %242 to i64
  %add.ptr390 = getelementptr inbounds i8, i8* %241, i64 %idx.ext
  %243 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf391 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %243, i32 0, i32 21
  %aend392 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf391, i32 0, i32 3
  %244 = load i8*, i8** %aend392, align 8
  %cmp393 = icmp ule i8* %add.ptr390, %244
  br i1 %cmp393, label %if.then.395, label %if.else.405

if.then.395:                                      ; preds = %if.then.387
  %245 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf396 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %245, i32 0, i32 20
  %arena397 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf396, i32 0, i32 0
  %246 = load i8*, i8** %arena397, align 8
  %247 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf398 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %247, i32 0, i32 21
  %aptr399 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf398, i32 0, i32 2
  %248 = load i8*, i8** %aptr399, align 8
  %249 = load i32, i32* %len, align 4
  %conv400 = sext i32 %249 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %246, i8* %248, i64 %conv400, i32 1, i1 false)
  %250 = load i32, i32* %len, align 4
  %251 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf401 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %251, i32 0, i32 21
  %aptr402 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf401, i32 0, i32 2
  %252 = load i8*, i8** %aptr402, align 8
  %idx.ext403 = sext i32 %250 to i64
  %add.ptr404 = getelementptr inbounds i8, i8* %252, i64 %idx.ext403
  store i8* %add.ptr404, i8** %aptr402, align 8
  br label %if.end.406

if.else.405:                                      ; preds = %if.then.387
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.406:                                       ; preds = %if.then.395
  br label %if.end.418

if.else.407:                                      ; preds = %if.then.384
  %253 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio408 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %253, i32 0, i32 23
  %254 = load %struct._PerlIO**, %struct._PerlIO*** %fio408, align 8
  %255 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf409 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %255, i32 0, i32 20
  %arena410 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf409, i32 0, i32 0
  %256 = load i8*, i8** %arena410, align 8
  %257 = load i32, i32* %len, align 4
  %conv411 = sext i32 %257 to i64
  %call412 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %254, i8* %256, i64 %conv411)
  %258 = load i32, i32* %len, align 4
  %conv413 = sext i32 %258 to i64
  %cmp414 = icmp ne i64 %call412, %conv413
  br i1 %cmp414, label %if.then.416, label %if.end.417

if.then.416:                                      ; preds = %if.else.407
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.417:                                       ; preds = %if.else.407
  br label %if.end.418

if.end.418:                                       ; preds = %if.end.417, %if.end.406
  br label %if.end.419

if.end.419:                                       ; preds = %if.end.418, %if.end.382
  %259 = load i32, i32* %len, align 4
  %idxprom420 = sext i32 %259 to i64
  %260 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf421 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %260, i32 0, i32 20
  %arena422 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf421, i32 0, i32 0
  %261 = load i8*, i8** %arena422, align 8
  %arrayidx423 = getelementptr inbounds i8, i8* %261, i64 %idxprom420
  store i8 0, i8* %arrayidx423, align 1
  %262 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf424 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %262, i32 0, i32 20
  %arena425 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf424, i32 0, i32 0
  %263 = load i8*, i8** %arena425, align 8
  %call426 = call %struct.hv* @Perl_gv_stashpv(i8* %263, i32 1)
  store %struct.hv* %call426, %struct.hv** %stash, align 8
  %264 = load %struct.sv*, %struct.sv** %sv, align 8
  %call427 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %264)
  store %struct.sv* %call427, %struct.sv** %Perl_ref, align 8
  %265 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %266 = load %struct.hv*, %struct.hv** %stash, align 8
  %call428 = call %struct.sv* @Perl_sv_bless(%struct.sv* %265, %struct.hv* %266)
  %267 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any429 = getelementptr inbounds %struct.sv, %struct.sv* %267, i32 0, i32 0
  %268 = load i8*, i8** %sv_any429, align 8
  %269 = bitcast i8* %268 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %269, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %270 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %270)
  br label %while.cond

while.end:                                        ; preds = %cond.end.294
  br label %if.end.430

if.end.430:                                       ; preds = %while.end, %if.end.269
  %271 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %271, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.430, %if.then.416, %if.else.405, %sw.default, %if.then.358, %if.else.351, %if.then.319, %if.else.312, %if.then.268, %land.end.177, %if.then.159, %if.else.152, %if.then.117, %if.else.110, %if.then.93, %land.end, %if.then.66, %if.else.59, %if.then.42, %if.else.35, %if.then.15, %if.else
  %272 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %272
}

; Function Attrs: nounwind uwtable
define internal void @clean_retrieve_context(%struct.stcxt* %cxt) #0 {
entry:
  %cxt.addr = alloca %struct.stcxt*, align 8
  %aseen1 = alloca %struct.av*, align 8
  %aclass6 = alloca %struct.av*, align 8
  %hook12 = alloca %struct.hv*, align 8
  %hseen18 = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 4
  %1 = load %struct.av*, %struct.av** %aseen, align 8
  %tobool = icmp ne %struct.av* %1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 4
  %3 = load %struct.av*, %struct.av** %aseen2, align 8
  store %struct.av* %3, %struct.av** %aseen1, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 4
  store %struct.av* null, %struct.av** %aseen3, align 8
  %5 = load %struct.av*, %struct.av** %aseen1, align 8
  call void @Perl_av_undef(%struct.av* %5)
  %6 = load %struct.av*, %struct.av** %aseen1, align 8
  %7 = bitcast %struct.av* %6 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %7)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %where_is_undef = getelementptr inbounds %struct.stcxt, %struct.stcxt* %8, i32 0, i32 5
  store i64 -1, i64* %where_is_undef, align 8
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aclass = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 7
  %10 = load %struct.av*, %struct.av** %aclass, align 8
  %tobool4 = icmp ne %struct.av* %10, null
  br i1 %tobool4, label %if.then.5, label %if.end.9

if.then.5:                                        ; preds = %if.end
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aclass7 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 7
  %12 = load %struct.av*, %struct.av** %aclass7, align 8
  store %struct.av* %12, %struct.av** %aclass6, align 8
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aclass8 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 7
  store %struct.av* null, %struct.av** %aclass8, align 8
  %14 = load %struct.av*, %struct.av** %aclass6, align 8
  call void @Perl_av_undef(%struct.av* %14)
  %15 = load %struct.av*, %struct.av** %aclass6, align 8
  %16 = bitcast %struct.av* %15 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %16)
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.5, %if.end
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 8
  %18 = load %struct.hv*, %struct.hv** %hook, align 8
  %tobool10 = icmp ne %struct.hv* %18, null
  br i1 %tobool10, label %if.then.11, label %if.end.15

if.then.11:                                       ; preds = %if.end.9
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook13 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 8
  %20 = load %struct.hv*, %struct.hv** %hook13, align 8
  store %struct.hv* %20, %struct.hv** %hook12, align 8
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 8
  store %struct.hv* null, %struct.hv** %hook14, align 8
  %22 = load %struct.hv*, %struct.hv** %hook12, align 8
  call void @Perl_hv_undef(%struct.hv* %22)
  %23 = load %struct.hv*, %struct.hv** %hook12, align 8
  %24 = bitcast %struct.hv* %23 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %24)
  br label %if.end.15

if.end.15:                                        ; preds = %if.then.11, %if.end.9
  %25 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %25, i32 0, i32 2
  %26 = load %struct.hv*, %struct.hv** %hseen, align 8
  %tobool16 = icmp ne %struct.hv* %26, null
  br i1 %tobool16, label %if.then.17, label %if.end.21

if.then.17:                                       ; preds = %if.end.15
  %27 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %27, i32 0, i32 2
  %28 = load %struct.hv*, %struct.hv** %hseen19, align 8
  store %struct.hv* %28, %struct.hv** %hseen18, align 8
  %29 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hseen20 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %29, i32 0, i32 2
  store %struct.hv* null, %struct.hv** %hseen20, align 8
  %30 = load %struct.hv*, %struct.hv** %hseen18, align 8
  call void @Perl_hv_undef(%struct.hv* %30)
  %31 = load %struct.hv*, %struct.hv** %hseen18, align 8
  %32 = bitcast %struct.hv* %31 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %32)
  br label %if.end.21

if.end.21:                                        ; preds = %if.then.17, %if.end.15
  %33 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %accept_future_minor = getelementptr inbounds %struct.stcxt, %struct.stcxt* %33, i32 0, i32 17
  store i32 -1, i32* %accept_future_minor, align 4
  %34 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  call void @reset_context(%struct.stcxt* %34)
  ret void
}

declare i64 @Perl_PerlIO_read(%struct._PerlIO**, i8*, i64) #1

declare i32 @memcmp(i8*, i8*, i64) #1

declare i32 @PerlIO_getc(%struct._PerlIO**) #1

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_lscalar(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  %Perl_ref = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %tmp = alloca i64, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 23
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else.18, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 4
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ule i8* %add.ptr, %5
  br i1 %cmp, label %if.then.2, label %if.else.16

if.then.2:                                        ; preds = %if.then
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 21
  %aptr4 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf3, i32 0, i32 2
  %7 = load i8*, i8** %aptr4, align 8
  %8 = ptrtoint i8* %7 to i64
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 21
  %aptr6 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf5, i32 0, i32 2
  %10 = load i8*, i8** %aptr6, align 8
  %11 = ptrtoint i8* %10 to i64
  %and = and i64 %11, -4
  %cmp7 = icmp eq i64 %8, %and
  br i1 %cmp7, label %if.then.8, label %if.else

if.then.8:                                        ; preds = %if.then.2
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf9 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 21
  %aptr10 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf9, i32 0, i32 2
  %13 = load i8*, i8** %aptr10, align 8
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %len, align 4
  br label %if.end

if.else:                                          ; preds = %if.then.2
  %16 = bitcast i32* %len to i8*
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf11 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 21
  %aptr12 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf11, i32 0, i32 2
  %18 = load i8*, i8** %aptr12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %18, i64 4, i32 1, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.8
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf13 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 21
  %aptr14 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf13, i32 0, i32 2
  %20 = load i8*, i8** %aptr14, align 8
  %add.ptr15 = getelementptr inbounds i8, i8* %20, i64 4
  store i8* %add.ptr15, i8** %aptr14, align 8
  br label %if.end.17

if.else.16:                                       ; preds = %if.then
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.17:                                        ; preds = %if.end
  br label %if.end.23

if.else.18:                                       ; preds = %entry
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 23
  %22 = load %struct._PerlIO**, %struct._PerlIO*** %fio19, align 8
  %23 = bitcast i32* %len to i8*
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %22, i8* %23, i64 4)
  %cmp20 = icmp ne i64 %call, 4
  br i1 %cmp20, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %if.else.18
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.22:                                        ; preds = %if.else.18
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.22, %if.end.17
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 11
  %25 = load i32, i32* %netorder, align 4
  %tobool24 = icmp ne i32 %25, 0
  br i1 %tobool24, label %if.then.25, label %if.end.28

if.then.25:                                       ; preds = %if.end.23
  %26 = load i32, i32* %len, align 4
  %conv = sext i32 %26 to i64
  %call26 = call i64 @Perl_my_ntohl(i64 %conv)
  %conv27 = trunc i64 %call26 to i32
  store i32 %conv27, i32* %len, align 4
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.25, %if.end.23
  %27 = load i32, i32* %len, align 4
  %conv29 = sext i32 %27 to i64
  %call30 = call %struct.sv* @Perl_newSV(i64 %conv29)
  store %struct.sv* %call30, %struct.sv** %sv, align 8
  %28 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool31 = icmp ne %struct.sv* %28, null
  br i1 %tobool31, label %if.end.33, label %if.then.32

if.then.32:                                       ; preds = %if.end.28
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.33:                                        ; preds = %if.end.28
  %29 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %29, i32 0, i32 4
  %30 = load %struct.av*, %struct.av** %aseen, align 8
  %31 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %31, i32 0, i32 9
  %32 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %32, 1
  store i64 %inc, i64* %tagnum, align 8
  %conv34 = trunc i64 %32 to i32
  %33 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %33, %struct.sv** @PL_Sv, align 8
  %34 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool35 = icmp ne %struct.sv* %34, null
  br i1 %tobool35, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end.33
  %35 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %35, i32 0, i32 1
  %36 = load i32, i32* %sv_refcnt, align 4
  %inc36 = add i32 %36, 1
  store i32 %inc36, i32* %sv_refcnt, align 4
  %tobool37 = icmp ne i32 %inc36, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.33
  %37 = phi i1 [ false, %if.end.33 ], [ %tobool37, %land.rhs ]
  %land.ext = zext i1 %37 to i32
  %38 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call38 = call %struct.sv** @Perl_av_store(%struct.av* %30, i32 %conv34, %struct.sv* %38)
  %cmp39 = icmp eq %struct.sv** %call38, null
  br i1 %cmp39, label %if.then.41, label %if.end.42

if.then.41:                                       ; preds = %land.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.42:                                        ; preds = %land.end
  %39 = load i8*, i8** %cname.addr, align 8
  %tobool43 = icmp ne i8* %39, null
  br i1 %tobool43, label %if.then.44, label %if.end.48

if.then.44:                                       ; preds = %if.end.42
  %40 = load i8*, i8** %cname.addr, align 8
  %call45 = call %struct.hv* @Perl_gv_stashpv(i8* %40, i32 1)
  store %struct.hv* %call45, %struct.hv** %stash, align 8
  %41 = load %struct.sv*, %struct.sv** %sv, align 8
  %call46 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %41)
  store %struct.sv* %call46, %struct.sv** %Perl_ref, align 8
  %42 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %43 = load %struct.hv*, %struct.hv** %stash, align 8
  %call47 = call %struct.sv* @Perl_sv_bless(%struct.sv* %42, %struct.hv* %43)
  %44 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %44, i32 0, i32 0
  %45 = load i8*, i8** %sv_any, align 8
  %46 = bitcast i8* %45 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %46, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %47 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %47)
  br label %if.end.48

if.end.48:                                        ; preds = %if.then.44, %if.end.42
  %48 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio49 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %48, i32 0, i32 23
  %49 = load %struct._PerlIO**, %struct._PerlIO*** %fio49, align 8
  %tobool50 = icmp ne %struct._PerlIO** %49, null
  br i1 %tobool50, label %if.else.70, label %if.then.51

if.then.51:                                       ; preds = %if.end.48
  %50 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf52 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %50, i32 0, i32 21
  %aptr53 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf52, i32 0, i32 2
  %51 = load i8*, i8** %aptr53, align 8
  %52 = load i32, i32* %len, align 4
  %idx.ext = sext i32 %52 to i64
  %add.ptr54 = getelementptr inbounds i8, i8* %51, i64 %idx.ext
  %53 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf55 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %53, i32 0, i32 21
  %aend56 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf55, i32 0, i32 3
  %54 = load i8*, i8** %aend56, align 8
  %cmp57 = icmp ule i8* %add.ptr54, %54
  br i1 %cmp57, label %if.then.59, label %if.else.68

if.then.59:                                       ; preds = %if.then.51
  %55 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any60 = getelementptr inbounds %struct.sv, %struct.sv* %55, i32 0, i32 0
  %56 = load i8*, i8** %sv_any60, align 8
  %57 = bitcast i8* %56 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %57, i32 0, i32 0
  %58 = load i8*, i8** %xpv_pv, align 8
  %59 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf61 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %59, i32 0, i32 21
  %aptr62 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf61, i32 0, i32 2
  %60 = load i8*, i8** %aptr62, align 8
  %61 = load i32, i32* %len, align 4
  %conv63 = sext i32 %61 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %60, i64 %conv63, i32 1, i1 false)
  %62 = load i32, i32* %len, align 4
  %63 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf64 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %63, i32 0, i32 21
  %aptr65 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf64, i32 0, i32 2
  %64 = load i8*, i8** %aptr65, align 8
  %idx.ext66 = sext i32 %62 to i64
  %add.ptr67 = getelementptr inbounds i8, i8* %64, i64 %idx.ext66
  store i8* %add.ptr67, i8** %aptr65, align 8
  br label %if.end.69

if.else.68:                                       ; preds = %if.then.51
  %65 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_free(%struct.sv* %65)
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.69:                                        ; preds = %if.then.59
  br label %if.end.81

if.else.70:                                       ; preds = %if.end.48
  %66 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio71 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %66, i32 0, i32 23
  %67 = load %struct._PerlIO**, %struct._PerlIO*** %fio71, align 8
  %68 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any72 = getelementptr inbounds %struct.sv, %struct.sv* %68, i32 0, i32 0
  %69 = load i8*, i8** %sv_any72, align 8
  %70 = bitcast i8* %69 to %struct.xpv*
  %xpv_pv73 = getelementptr inbounds %struct.xpv, %struct.xpv* %70, i32 0, i32 0
  %71 = load i8*, i8** %xpv_pv73, align 8
  %72 = load i32, i32* %len, align 4
  %conv74 = sext i32 %72 to i64
  %call75 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %67, i8* %71, i64 %conv74)
  %73 = load i32, i32* %len, align 4
  %conv76 = sext i32 %73 to i64
  %cmp77 = icmp ne i64 %call75, %conv76
  br i1 %cmp77, label %if.then.79, label %if.end.80

if.then.79:                                       ; preds = %if.else.70
  %74 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_free(%struct.sv* %74)
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.80:                                        ; preds = %if.else.70
  br label %if.end.81

if.end.81:                                        ; preds = %if.end.80, %if.end.69
  %75 = load i32, i32* %len, align 4
  %conv82 = sext i32 %75 to i64
  %76 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any83 = getelementptr inbounds %struct.sv, %struct.sv* %76, i32 0, i32 0
  %77 = load i8*, i8** %sv_any83, align 8
  %78 = bitcast i8* %77 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %78, i32 0, i32 1
  store i64 %conv82, i64* %xpv_cur, align 8
  store i64 %conv82, i64* %tmp
  %79 = load i64, i64* %tmp
  %80 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any84 = getelementptr inbounds %struct.sv, %struct.sv* %80, i32 0, i32 0
  %81 = load i8*, i8** %sv_any84, align 8
  %82 = bitcast i8* %81 to %struct.xpv*
  %xpv_pv85 = getelementptr inbounds %struct.xpv, %struct.xpv* %82, i32 0, i32 0
  %83 = load i8*, i8** %xpv_pv85, align 8
  %84 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any86 = getelementptr inbounds %struct.sv, %struct.sv* %84, i32 0, i32 0
  %85 = load i8*, i8** %sv_any86, align 8
  %86 = bitcast i8* %85 to %struct.xpv*
  %xpv_cur87 = getelementptr inbounds %struct.xpv, %struct.xpv* %86, i32 0, i32 1
  %87 = load i64, i64* %xpv_cur87, align 8
  %add.ptr88 = getelementptr inbounds i8, i8* %83, i64 %87
  store i8 0, i8* %add.ptr88, align 1
  %88 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %88, i32 0, i32 2
  %89 = load i32, i32* %sv_flags, align 4
  %and89 = and i32 %89, 1223753727
  store i32 %and89, i32* %sv_flags, align 4
  %90 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags90 = getelementptr inbounds %struct.sv, %struct.sv* %90, i32 0, i32 2
  %91 = load i32, i32* %sv_flags90, align 4
  %or = or i32 %91, 67371008
  store i32 %or, i32* %sv_flags90, align 4
  %92 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_tainted = getelementptr inbounds %struct.stcxt, %struct.stcxt* %92, i32 0, i32 12
  %93 = load i32, i32* %s_tainted, align 4
  %tobool91 = icmp ne i32 %93, 0
  br i1 %tobool91, label %if.then.92, label %if.end.102

if.then.92:                                       ; preds = %if.end.81
  %94 = load i8, i8* @PL_tainting, align 1
  %tobool93 = icmp ne i8 %94, 0
  br i1 %tobool93, label %if.then.94, label %if.end.101

if.then.94:                                       ; preds = %if.then.92
  %95 = load i8, i8* @PL_tainted, align 1
  %tobool95 = icmp ne i8 %95, 0
  br i1 %tobool95, label %if.then.96, label %if.end.100

if.then.96:                                       ; preds = %if.then.94
  %96 = load i8, i8* @PL_tainting, align 1
  %tobool97 = icmp ne i8 %96, 0
  br i1 %tobool97, label %if.then.98, label %if.end.99

if.then.98:                                       ; preds = %if.then.96
  %97 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_taint(%struct.sv* %97)
  br label %if.end.99

if.end.99:                                        ; preds = %if.then.98, %if.then.96
  br label %if.end.100

if.end.100:                                       ; preds = %if.end.99, %if.then.94
  br label %if.end.101

if.end.101:                                       ; preds = %if.end.100, %if.then.92
  br label %if.end.102

if.end.102:                                       ; preds = %if.end.101, %if.end.81
  %98 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %98, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.102, %if.then.79, %if.else.68, %if.then.41, %if.then.32, %if.then.21, %if.else.16
  %99 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %99
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_array(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %av = alloca %struct.av*, align 8
  %sv = alloca %struct.sv*, align 8
  %Perl_ref = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 23
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else.18, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 4
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ule i8* %add.ptr, %5
  br i1 %cmp, label %if.then.2, label %if.else.16

if.then.2:                                        ; preds = %if.then
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 21
  %aptr4 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf3, i32 0, i32 2
  %7 = load i8*, i8** %aptr4, align 8
  %8 = ptrtoint i8* %7 to i64
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 21
  %aptr6 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf5, i32 0, i32 2
  %10 = load i8*, i8** %aptr6, align 8
  %11 = ptrtoint i8* %10 to i64
  %and = and i64 %11, -4
  %cmp7 = icmp eq i64 %8, %and
  br i1 %cmp7, label %if.then.8, label %if.else

if.then.8:                                        ; preds = %if.then.2
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf9 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 21
  %aptr10 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf9, i32 0, i32 2
  %13 = load i8*, i8** %aptr10, align 8
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %len, align 4
  br label %if.end

if.else:                                          ; preds = %if.then.2
  %16 = bitcast i32* %len to i8*
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf11 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 21
  %aptr12 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf11, i32 0, i32 2
  %18 = load i8*, i8** %aptr12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %18, i64 4, i32 1, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.8
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf13 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 21
  %aptr14 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf13, i32 0, i32 2
  %20 = load i8*, i8** %aptr14, align 8
  %add.ptr15 = getelementptr inbounds i8, i8* %20, i64 4
  store i8* %add.ptr15, i8** %aptr14, align 8
  br label %if.end.17

if.else.16:                                       ; preds = %if.then
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.17:                                        ; preds = %if.end
  br label %if.end.23

if.else.18:                                       ; preds = %entry
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 23
  %22 = load %struct._PerlIO**, %struct._PerlIO*** %fio19, align 8
  %23 = bitcast i32* %len to i8*
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %22, i8* %23, i64 4)
  %cmp20 = icmp ne i64 %call, 4
  br i1 %cmp20, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %if.else.18
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.22:                                        ; preds = %if.else.18
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.22, %if.end.17
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 11
  %25 = load i32, i32* %netorder, align 4
  %tobool24 = icmp ne i32 %25, 0
  br i1 %tobool24, label %if.then.25, label %if.end.28

if.then.25:                                       ; preds = %if.end.23
  %26 = load i32, i32* %len, align 4
  %conv = sext i32 %26 to i64
  %call26 = call i64 @Perl_my_ntohl(i64 %conv)
  %conv27 = trunc i64 %call26 to i32
  store i32 %conv27, i32* %len, align 4
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.25, %if.end.23
  %call29 = call %struct.av* @Perl_newAV()
  store %struct.av* %call29, %struct.av** %av, align 8
  %27 = load %struct.av*, %struct.av** %av, align 8
  %tobool30 = icmp ne %struct.av* %27, null
  br i1 %tobool30, label %if.end.32, label %if.then.31

if.then.31:                                       ; preds = %if.end.28
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.32:                                        ; preds = %if.end.28
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 4
  %29 = load %struct.av*, %struct.av** %aseen, align 8
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 9
  %31 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %31, 1
  store i64 %inc, i64* %tagnum, align 8
  %conv33 = trunc i64 %31 to i32
  %32 = load %struct.av*, %struct.av** %av, align 8
  %33 = bitcast %struct.av* %32 to %struct.sv*
  store %struct.sv* %33, %struct.sv** @PL_Sv, align 8
  %34 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool34 = icmp ne %struct.sv* %34, null
  br i1 %tobool34, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end.32
  %35 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %35, i32 0, i32 1
  %36 = load i32, i32* %sv_refcnt, align 4
  %inc35 = add i32 %36, 1
  store i32 %inc35, i32* %sv_refcnt, align 4
  %tobool36 = icmp ne i32 %inc35, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.32
  %37 = phi i1 [ false, %if.end.32 ], [ %tobool36, %land.rhs ]
  %land.ext = zext i1 %37 to i32
  %38 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call37 = call %struct.sv** @Perl_av_store(%struct.av* %29, i32 %conv33, %struct.sv* %38)
  %cmp38 = icmp eq %struct.sv** %call37, null
  br i1 %cmp38, label %if.then.40, label %if.end.41

if.then.40:                                       ; preds = %land.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.41:                                        ; preds = %land.end
  %39 = load i8*, i8** %cname.addr, align 8
  %tobool42 = icmp ne i8* %39, null
  br i1 %tobool42, label %if.then.43, label %if.end.47

if.then.43:                                       ; preds = %if.end.41
  %40 = load i8*, i8** %cname.addr, align 8
  %call44 = call %struct.hv* @Perl_gv_stashpv(i8* %40, i32 1)
  store %struct.hv* %call44, %struct.hv** %stash, align 8
  %41 = load %struct.av*, %struct.av** %av, align 8
  %42 = bitcast %struct.av* %41 to %struct.sv*
  %call45 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %42)
  store %struct.sv* %call45, %struct.sv** %Perl_ref, align 8
  %43 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %44 = load %struct.hv*, %struct.hv** %stash, align 8
  %call46 = call %struct.sv* @Perl_sv_bless(%struct.sv* %43, %struct.hv* %44)
  %45 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %45, i32 0, i32 0
  %46 = load i8*, i8** %sv_any, align 8
  %47 = bitcast i8* %46 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %47, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %48 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %48)
  br label %if.end.47

if.end.47:                                        ; preds = %if.then.43, %if.end.41
  %49 = load i32, i32* %len, align 4
  %tobool48 = icmp ne i32 %49, 0
  br i1 %tobool48, label %if.then.49, label %if.else.50

if.then.49:                                       ; preds = %if.end.47
  %50 = load %struct.av*, %struct.av** %av, align 8
  %51 = load i32, i32* %len, align 4
  call void @Perl_av_extend(%struct.av* %50, i32 %51)
  br label %if.end.51

if.else.50:                                       ; preds = %if.end.47
  %52 = load %struct.av*, %struct.av** %av, align 8
  %53 = bitcast %struct.av* %52 to %struct.sv*
  store %struct.sv* %53, %struct.sv** %retval
  br label %return

if.end.51:                                        ; preds = %if.then.49
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.51
  %54 = load i32, i32* %i, align 4
  %55 = load i32, i32* %len, align 4
  %cmp52 = icmp slt i32 %54, %55
  br i1 %cmp52, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %56 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call54 = call %struct.sv* @retrieve(%struct.stcxt* %56, i8* null)
  store %struct.sv* %call54, %struct.sv** %sv, align 8
  %57 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool55 = icmp ne %struct.sv* %57, null
  br i1 %tobool55, label %if.end.57, label %if.then.56

if.then.56:                                       ; preds = %for.body
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.57:                                        ; preds = %for.body
  %58 = load %struct.av*, %struct.av** %av, align 8
  %59 = load i32, i32* %i, align 4
  %60 = load %struct.sv*, %struct.sv** %sv, align 8
  %call58 = call %struct.sv** @Perl_av_store(%struct.av* %58, i32 %59, %struct.sv* %60)
  %cmp59 = icmp eq %struct.sv** %call58, null
  br i1 %cmp59, label %if.then.61, label %if.end.62

if.then.61:                                       ; preds = %if.end.57
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.62:                                        ; preds = %if.end.57
  br label %for.inc

for.inc:                                          ; preds = %if.end.62
  %61 = load i32, i32* %i, align 4
  %inc63 = add nsw i32 %61, 1
  store i32 %inc63, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %62 = load %struct.av*, %struct.av** %av, align 8
  %63 = bitcast %struct.av* %62 to %struct.sv*
  store %struct.sv* %63, %struct.sv** %retval
  br label %return

return:                                           ; preds = %for.end, %if.then.61, %if.then.56, %if.else.50, %if.then.40, %if.then.31, %if.then.21, %if.else.16
  %64 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %64
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_hash(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  %size = alloca i32, align 4
  %i = alloca i32, align 4
  %hv = alloca %struct.hv*, align 8
  %sv = alloca %struct.sv*, align 8
  %Perl_ref = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 23
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else.18, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 4
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ule i8* %add.ptr, %5
  br i1 %cmp, label %if.then.2, label %if.else.16

if.then.2:                                        ; preds = %if.then
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 21
  %aptr4 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf3, i32 0, i32 2
  %7 = load i8*, i8** %aptr4, align 8
  %8 = ptrtoint i8* %7 to i64
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 21
  %aptr6 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf5, i32 0, i32 2
  %10 = load i8*, i8** %aptr6, align 8
  %11 = ptrtoint i8* %10 to i64
  %and = and i64 %11, -4
  %cmp7 = icmp eq i64 %8, %and
  br i1 %cmp7, label %if.then.8, label %if.else

if.then.8:                                        ; preds = %if.then.2
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf9 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 21
  %aptr10 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf9, i32 0, i32 2
  %13 = load i8*, i8** %aptr10, align 8
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %len, align 4
  br label %if.end

if.else:                                          ; preds = %if.then.2
  %16 = bitcast i32* %len to i8*
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf11 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 21
  %aptr12 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf11, i32 0, i32 2
  %18 = load i8*, i8** %aptr12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %18, i64 4, i32 1, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.8
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf13 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 21
  %aptr14 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf13, i32 0, i32 2
  %20 = load i8*, i8** %aptr14, align 8
  %add.ptr15 = getelementptr inbounds i8, i8* %20, i64 4
  store i8* %add.ptr15, i8** %aptr14, align 8
  br label %if.end.17

if.else.16:                                       ; preds = %if.then
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.17:                                        ; preds = %if.end
  br label %if.end.23

if.else.18:                                       ; preds = %entry
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 23
  %22 = load %struct._PerlIO**, %struct._PerlIO*** %fio19, align 8
  %23 = bitcast i32* %len to i8*
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %22, i8* %23, i64 4)
  %cmp20 = icmp ne i64 %call, 4
  br i1 %cmp20, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %if.else.18
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.22:                                        ; preds = %if.else.18
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.22, %if.end.17
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 11
  %25 = load i32, i32* %netorder, align 4
  %tobool24 = icmp ne i32 %25, 0
  br i1 %tobool24, label %if.then.25, label %if.end.28

if.then.25:                                       ; preds = %if.end.23
  %26 = load i32, i32* %len, align 4
  %conv = sext i32 %26 to i64
  %call26 = call i64 @Perl_my_ntohl(i64 %conv)
  %conv27 = trunc i64 %call26 to i32
  store i32 %conv27, i32* %len, align 4
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.25, %if.end.23
  %call29 = call %struct.hv* @Perl_newHV()
  store %struct.hv* %call29, %struct.hv** %hv, align 8
  %27 = load %struct.hv*, %struct.hv** %hv, align 8
  %tobool30 = icmp ne %struct.hv* %27, null
  br i1 %tobool30, label %if.end.32, label %if.then.31

if.then.31:                                       ; preds = %if.end.28
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.32:                                        ; preds = %if.end.28
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 4
  %29 = load %struct.av*, %struct.av** %aseen, align 8
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 9
  %31 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %31, 1
  store i64 %inc, i64* %tagnum, align 8
  %conv33 = trunc i64 %31 to i32
  %32 = load %struct.hv*, %struct.hv** %hv, align 8
  %33 = bitcast %struct.hv* %32 to %struct.sv*
  store %struct.sv* %33, %struct.sv** @PL_Sv, align 8
  %34 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool34 = icmp ne %struct.sv* %34, null
  br i1 %tobool34, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end.32
  %35 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %35, i32 0, i32 1
  %36 = load i32, i32* %sv_refcnt, align 4
  %inc35 = add i32 %36, 1
  store i32 %inc35, i32* %sv_refcnt, align 4
  %tobool36 = icmp ne i32 %inc35, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.32
  %37 = phi i1 [ false, %if.end.32 ], [ %tobool36, %land.rhs ]
  %land.ext = zext i1 %37 to i32
  %38 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call37 = call %struct.sv** @Perl_av_store(%struct.av* %29, i32 %conv33, %struct.sv* %38)
  %cmp38 = icmp eq %struct.sv** %call37, null
  br i1 %cmp38, label %if.then.40, label %if.end.41

if.then.40:                                       ; preds = %land.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.41:                                        ; preds = %land.end
  %39 = load i8*, i8** %cname.addr, align 8
  %tobool42 = icmp ne i8* %39, null
  br i1 %tobool42, label %if.then.43, label %if.end.47

if.then.43:                                       ; preds = %if.end.41
  %40 = load i8*, i8** %cname.addr, align 8
  %call44 = call %struct.hv* @Perl_gv_stashpv(i8* %40, i32 1)
  store %struct.hv* %call44, %struct.hv** %stash, align 8
  %41 = load %struct.hv*, %struct.hv** %hv, align 8
  %42 = bitcast %struct.hv* %41 to %struct.sv*
  %call45 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %42)
  store %struct.sv* %call45, %struct.sv** %Perl_ref, align 8
  %43 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %44 = load %struct.hv*, %struct.hv** %stash, align 8
  %call46 = call %struct.sv* @Perl_sv_bless(%struct.sv* %43, %struct.hv* %44)
  %45 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %45, i32 0, i32 0
  %46 = load i8*, i8** %sv_any, align 8
  %47 = bitcast i8* %46 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %47, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %48 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %48)
  br label %if.end.47

if.end.47:                                        ; preds = %if.then.43, %if.end.41
  %49 = load i32, i32* %len, align 4
  %cmp48 = icmp eq i32 %49, 0
  br i1 %cmp48, label %if.then.50, label %if.end.51

if.then.50:                                       ; preds = %if.end.47
  %50 = load %struct.hv*, %struct.hv** %hv, align 8
  %51 = bitcast %struct.hv* %50 to %struct.sv*
  store %struct.sv* %51, %struct.sv** %retval
  br label %return

if.end.51:                                        ; preds = %if.end.47
  %52 = load %struct.hv*, %struct.hv** %hv, align 8
  %53 = load i32, i32* %len, align 4
  %conv52 = sext i32 %53 to i64
  call void @Perl_hv_ksplit(%struct.hv* %52, i64 %conv52)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.51
  %54 = load i32, i32* %i, align 4
  %55 = load i32, i32* %len, align 4
  %cmp53 = icmp slt i32 %54, %55
  br i1 %cmp53, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %56 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call55 = call %struct.sv* @retrieve(%struct.stcxt* %56, i8* null)
  store %struct.sv* %call55, %struct.sv** %sv, align 8
  %57 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool56 = icmp ne %struct.sv* %57, null
  br i1 %tobool56, label %if.end.58, label %if.then.57

if.then.57:                                       ; preds = %for.body
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.58:                                        ; preds = %for.body
  %58 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio59 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %58, i32 0, i32 23
  %59 = load %struct._PerlIO**, %struct._PerlIO*** %fio59, align 8
  %tobool60 = icmp ne %struct._PerlIO** %59, null
  br i1 %tobool60, label %if.else.89, label %if.then.61

if.then.61:                                       ; preds = %if.end.58
  %60 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf62 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %60, i32 0, i32 21
  %aptr63 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf62, i32 0, i32 2
  %61 = load i8*, i8** %aptr63, align 8
  %add.ptr64 = getelementptr inbounds i8, i8* %61, i64 4
  %62 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf65 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %62, i32 0, i32 21
  %aend66 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf65, i32 0, i32 3
  %63 = load i8*, i8** %aend66, align 8
  %cmp67 = icmp ule i8* %add.ptr64, %63
  br i1 %cmp67, label %if.then.69, label %if.else.87

if.then.69:                                       ; preds = %if.then.61
  %64 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf70 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %64, i32 0, i32 21
  %aptr71 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf70, i32 0, i32 2
  %65 = load i8*, i8** %aptr71, align 8
  %66 = ptrtoint i8* %65 to i64
  %67 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf72 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %67, i32 0, i32 21
  %aptr73 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf72, i32 0, i32 2
  %68 = load i8*, i8** %aptr73, align 8
  %69 = ptrtoint i8* %68 to i64
  %and74 = and i64 %69, -4
  %cmp75 = icmp eq i64 %66, %and74
  br i1 %cmp75, label %if.then.77, label %if.else.80

if.then.77:                                       ; preds = %if.then.69
  %70 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf78 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %70, i32 0, i32 21
  %aptr79 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf78, i32 0, i32 2
  %71 = load i8*, i8** %aptr79, align 8
  %72 = bitcast i8* %71 to i32*
  %73 = load i32, i32* %72, align 4
  store i32 %73, i32* %size, align 4
  br label %if.end.83

if.else.80:                                       ; preds = %if.then.69
  %74 = bitcast i32* %size to i8*
  %75 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf81 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %75, i32 0, i32 21
  %aptr82 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf81, i32 0, i32 2
  %76 = load i8*, i8** %aptr82, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %76, i64 4, i32 1, i1 false)
  br label %if.end.83

if.end.83:                                        ; preds = %if.else.80, %if.then.77
  %77 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf84 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %77, i32 0, i32 21
  %aptr85 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf84, i32 0, i32 2
  %78 = load i8*, i8** %aptr85, align 8
  %add.ptr86 = getelementptr inbounds i8, i8* %78, i64 4
  store i8* %add.ptr86, i8** %aptr85, align 8
  br label %if.end.88

if.else.87:                                       ; preds = %if.then.61
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.88:                                        ; preds = %if.end.83
  br label %if.end.96

if.else.89:                                       ; preds = %if.end.58
  %79 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio90 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %79, i32 0, i32 23
  %80 = load %struct._PerlIO**, %struct._PerlIO*** %fio90, align 8
  %81 = bitcast i32* %size to i8*
  %call91 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %80, i8* %81, i64 4)
  %cmp92 = icmp ne i64 %call91, 4
  br i1 %cmp92, label %if.then.94, label %if.end.95

if.then.94:                                       ; preds = %if.else.89
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.95:                                        ; preds = %if.else.89
  br label %if.end.96

if.end.96:                                        ; preds = %if.end.95, %if.end.88
  %82 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder97 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %82, i32 0, i32 11
  %83 = load i32, i32* %netorder97, align 4
  %tobool98 = icmp ne i32 %83, 0
  br i1 %tobool98, label %if.then.99, label %if.end.103

if.then.99:                                       ; preds = %if.end.96
  %84 = load i32, i32* %size, align 4
  %conv100 = sext i32 %84 to i64
  %call101 = call i64 @Perl_my_ntohl(i64 %conv100)
  %conv102 = trunc i64 %call101 to i32
  store i32 %conv102, i32* %size, align 4
  br label %if.end.103

if.end.103:                                       ; preds = %if.then.99, %if.end.96
  %85 = load i32, i32* %size, align 4
  %conv104 = sext i32 %85 to i64
  %86 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %86, i32 0, i32 20
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf, i32 0, i32 1
  %87 = load i64, i64* %asiz, align 8
  %cmp105 = icmp uge i64 %conv104, %87
  br i1 %cmp105, label %if.then.107, label %if.end.117

if.then.107:                                      ; preds = %if.end.103
  %88 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf108 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %88, i32 0, i32 20
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf108, i32 0, i32 0
  %89 = load i8*, i8** %arena, align 8
  %90 = load i32, i32* %size, align 4
  %conv109 = sext i32 %90 to i64
  %add = add i64 %conv109, 1
  %mul = mul i64 %add, 1
  %call110 = call i8* @Perl_safesysrealloc(i8* %89, i64 %mul)
  %91 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf111 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %91, i32 0, i32 20
  %arena112 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf111, i32 0, i32 0
  store i8* %call110, i8** %arena112, align 8
  %92 = load i32, i32* %size, align 4
  %conv113 = sext i32 %92 to i64
  %add114 = add i64 %conv113, 1
  %93 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf115 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %93, i32 0, i32 20
  %asiz116 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf115, i32 0, i32 1
  store i64 %add114, i64* %asiz116, align 8
  br label %if.end.117

if.end.117:                                       ; preds = %if.then.107, %if.end.103
  %94 = load i32, i32* %size, align 4
  %tobool118 = icmp ne i32 %94, 0
  br i1 %tobool118, label %if.then.119, label %if.end.154

if.then.119:                                      ; preds = %if.end.117
  %95 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio120 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %95, i32 0, i32 23
  %96 = load %struct._PerlIO**, %struct._PerlIO*** %fio120, align 8
  %tobool121 = icmp ne %struct._PerlIO** %96, null
  br i1 %tobool121, label %if.else.142, label %if.then.122

if.then.122:                                      ; preds = %if.then.119
  %97 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf123 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %97, i32 0, i32 21
  %aptr124 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf123, i32 0, i32 2
  %98 = load i8*, i8** %aptr124, align 8
  %99 = load i32, i32* %size, align 4
  %idx.ext = sext i32 %99 to i64
  %add.ptr125 = getelementptr inbounds i8, i8* %98, i64 %idx.ext
  %100 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf126 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %100, i32 0, i32 21
  %aend127 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf126, i32 0, i32 3
  %101 = load i8*, i8** %aend127, align 8
  %cmp128 = icmp ule i8* %add.ptr125, %101
  br i1 %cmp128, label %if.then.130, label %if.else.140

if.then.130:                                      ; preds = %if.then.122
  %102 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf131 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %102, i32 0, i32 20
  %arena132 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf131, i32 0, i32 0
  %103 = load i8*, i8** %arena132, align 8
  %104 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf133 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %104, i32 0, i32 21
  %aptr134 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf133, i32 0, i32 2
  %105 = load i8*, i8** %aptr134, align 8
  %106 = load i32, i32* %size, align 4
  %conv135 = sext i32 %106 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %103, i8* %105, i64 %conv135, i32 1, i1 false)
  %107 = load i32, i32* %size, align 4
  %108 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf136 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %108, i32 0, i32 21
  %aptr137 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf136, i32 0, i32 2
  %109 = load i8*, i8** %aptr137, align 8
  %idx.ext138 = sext i32 %107 to i64
  %add.ptr139 = getelementptr inbounds i8, i8* %109, i64 %idx.ext138
  store i8* %add.ptr139, i8** %aptr137, align 8
  br label %if.end.141

if.else.140:                                      ; preds = %if.then.122
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.141:                                       ; preds = %if.then.130
  br label %if.end.153

if.else.142:                                      ; preds = %if.then.119
  %110 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio143 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %110, i32 0, i32 23
  %111 = load %struct._PerlIO**, %struct._PerlIO*** %fio143, align 8
  %112 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf144 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %112, i32 0, i32 20
  %arena145 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf144, i32 0, i32 0
  %113 = load i8*, i8** %arena145, align 8
  %114 = load i32, i32* %size, align 4
  %conv146 = sext i32 %114 to i64
  %call147 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %111, i8* %113, i64 %conv146)
  %115 = load i32, i32* %size, align 4
  %conv148 = sext i32 %115 to i64
  %cmp149 = icmp ne i64 %call147, %conv148
  br i1 %cmp149, label %if.then.151, label %if.end.152

if.then.151:                                      ; preds = %if.else.142
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.152:                                       ; preds = %if.else.142
  br label %if.end.153

if.end.153:                                       ; preds = %if.end.152, %if.end.141
  br label %if.end.154

if.end.154:                                       ; preds = %if.end.153, %if.end.117
  %116 = load i32, i32* %size, align 4
  %idxprom = sext i32 %116 to i64
  %117 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf155 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %117, i32 0, i32 20
  %arena156 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf155, i32 0, i32 0
  %118 = load i8*, i8** %arena156, align 8
  %arrayidx = getelementptr inbounds i8, i8* %118, i64 %idxprom
  store i8 0, i8* %arrayidx, align 1
  %119 = load %struct.hv*, %struct.hv** %hv, align 8
  %120 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf157 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %120, i32 0, i32 20
  %arena158 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf157, i32 0, i32 0
  %121 = load i8*, i8** %arena158, align 8
  %122 = load i32, i32* %size, align 4
  %123 = load %struct.sv*, %struct.sv** %sv, align 8
  %call159 = call %struct.sv** @Perl_hv_store(%struct.hv* %119, i8* %121, i32 %122, %struct.sv* %123, i32 0)
  %cmp160 = icmp eq %struct.sv** %call159, null
  br i1 %cmp160, label %if.then.162, label %if.end.163

if.then.162:                                      ; preds = %if.end.154
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.163:                                       ; preds = %if.end.154
  br label %for.inc

for.inc:                                          ; preds = %if.end.163
  %124 = load i32, i32* %i, align 4
  %inc164 = add nsw i32 %124, 1
  store i32 %inc164, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %125 = load %struct.hv*, %struct.hv** %hv, align 8
  %126 = bitcast %struct.hv* %125 to %struct.sv*
  store %struct.sv* %126, %struct.sv** %retval
  br label %return

return:                                           ; preds = %for.end, %if.then.162, %if.then.151, %if.else.140, %if.then.94, %if.else.87, %if.then.57, %if.then.50, %if.then.40, %if.then.31, %if.then.21, %if.else.16
  %127 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %127
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_ref(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %rv = alloca %struct.sv*, align 8
  %sv = alloca %struct.sv*, align 8
  %Perl_ref = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %call = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call, %struct.sv** %rv, align 8
  %0 = load %struct.sv*, %struct.sv** %rv, align 8
  %tobool = icmp ne %struct.sv* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 4
  %2 = load %struct.av*, %struct.av** %aseen, align 8
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 9
  %4 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %4, 1
  store i64 %inc, i64* %tagnum, align 8
  %conv = trunc i64 %4 to i32
  %5 = load %struct.sv*, %struct.sv** %rv, align 8
  store %struct.sv* %5, %struct.sv** @PL_Sv, align 8
  %6 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool1 = icmp ne %struct.sv* %6, null
  br i1 %tobool1, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end
  %7 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %7, i32 0, i32 1
  %8 = load i32, i32* %sv_refcnt, align 4
  %inc2 = add i32 %8, 1
  store i32 %inc2, i32* %sv_refcnt, align 4
  %tobool3 = icmp ne i32 %inc2, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %9 = phi i1 [ false, %if.end ], [ %tobool3, %land.rhs ]
  %land.ext = zext i1 %9 to i32
  %10 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call4 = call %struct.sv** @Perl_av_store(%struct.av* %2, i32 %conv, %struct.sv* %10)
  %cmp = icmp eq %struct.sv** %call4, null
  br i1 %cmp, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %land.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.7:                                         ; preds = %land.end
  %11 = load i8*, i8** %cname.addr, align 8
  %tobool8 = icmp ne i8* %11, null
  br i1 %tobool8, label %if.then.9, label %if.end.13

if.then.9:                                        ; preds = %if.end.7
  %12 = load i8*, i8** %cname.addr, align 8
  %call10 = call %struct.hv* @Perl_gv_stashpv(i8* %12, i32 1)
  store %struct.hv* %call10, %struct.hv** %stash, align 8
  %13 = load %struct.sv*, %struct.sv** %rv, align 8
  %call11 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %13)
  store %struct.sv* %call11, %struct.sv** %Perl_ref, align 8
  %14 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %15 = load %struct.hv*, %struct.hv** %stash, align 8
  %call12 = call %struct.sv* @Perl_sv_bless(%struct.sv* %14, %struct.hv* %15)
  %16 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 0
  %17 = load i8*, i8** %sv_any, align 8
  %18 = bitcast i8* %17 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %18, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %19 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %19)
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.9, %if.end.7
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call14 = call %struct.sv* @retrieve(%struct.stcxt* %20, i8* null)
  store %struct.sv* %call14, %struct.sv** %sv, align 8
  %21 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool15 = icmp ne %struct.sv* %21, null
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.end.13
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.17:                                        ; preds = %if.end.13
  %22 = load i8*, i8** %cname.addr, align 8
  %tobool18 = icmp ne i8* %22, null
  br i1 %tobool18, label %if.then.19, label %if.else

if.then.19:                                       ; preds = %if.end.17
  br label %if.end.21

if.else:                                          ; preds = %if.end.17
  %23 = load %struct.sv*, %struct.sv** %rv, align 8
  %call20 = call signext i8 @Perl_sv_upgrade(%struct.sv* %23, i32 3)
  br label %if.end.21

if.end.21:                                        ; preds = %if.else, %if.then.19
  %24 = load %struct.sv*, %struct.sv** %sv, align 8
  %25 = load %struct.sv*, %struct.sv** %rv, align 8
  %sv_any22 = getelementptr inbounds %struct.sv, %struct.sv* %25, i32 0, i32 0
  %26 = load i8*, i8** %sv_any22, align 8
  %27 = bitcast i8* %26 to %struct.xrv*
  %xrv_rv23 = getelementptr inbounds %struct.xrv, %struct.xrv* %27, i32 0, i32 0
  store %struct.sv* %24, %struct.sv** %xrv_rv23, align 8
  %28 = load %struct.sv*, %struct.sv** %rv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %28, i32 0, i32 2
  %29 = load i32, i32* %sv_flags, align 4
  %or = or i32 %29, 524288
  store i32 %or, i32* %sv_flags, align 4
  %30 = load %struct.sv*, %struct.sv** %rv, align 8
  store %struct.sv* %30, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.21, %if.then.16, %if.then.6, %if.then
  %31 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %31
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_undef(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  %Perl_ref = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %call = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call, %struct.sv** %sv, align 8
  %0 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool = icmp ne %struct.sv* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 4
  %2 = load %struct.av*, %struct.av** %aseen, align 8
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 9
  %4 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %4, 1
  store i64 %inc, i64* %tagnum, align 8
  %conv = trunc i64 %4 to i32
  %5 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %5, %struct.sv** @PL_Sv, align 8
  %6 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool1 = icmp ne %struct.sv* %6, null
  br i1 %tobool1, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end
  %7 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %7, i32 0, i32 1
  %8 = load i32, i32* %sv_refcnt, align 4
  %inc2 = add i32 %8, 1
  store i32 %inc2, i32* %sv_refcnt, align 4
  %tobool3 = icmp ne i32 %inc2, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %9 = phi i1 [ false, %if.end ], [ %tobool3, %land.rhs ]
  %land.ext = zext i1 %9 to i32
  %10 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call4 = call %struct.sv** @Perl_av_store(%struct.av* %2, i32 %conv, %struct.sv* %10)
  %cmp = icmp eq %struct.sv** %call4, null
  br i1 %cmp, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %land.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.7:                                         ; preds = %land.end
  %11 = load i8*, i8** %cname.addr, align 8
  %tobool8 = icmp ne i8* %11, null
  br i1 %tobool8, label %if.then.9, label %if.end.13

if.then.9:                                        ; preds = %if.end.7
  %12 = load i8*, i8** %cname.addr, align 8
  %call10 = call %struct.hv* @Perl_gv_stashpv(i8* %12, i32 1)
  store %struct.hv* %call10, %struct.hv** %stash, align 8
  %13 = load %struct.sv*, %struct.sv** %sv, align 8
  %call11 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %13)
  store %struct.sv* %call11, %struct.sv** %Perl_ref, align 8
  %14 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %15 = load %struct.hv*, %struct.hv** %stash, align 8
  %call12 = call %struct.sv* @Perl_sv_bless(%struct.sv* %14, %struct.hv* %15)
  %16 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 0
  %17 = load i8*, i8** %sv_any, align 8
  %18 = bitcast i8* %17 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %18, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %19 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %19)
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.9, %if.end.7
  %20 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %20, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.13, %if.then.6, %if.then
  %21 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %21
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_integer(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  %iv = alloca i64, align 8
  %Perl_ref = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 23
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else.8, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ule i8* %add.ptr, %5
  br i1 %cmp, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.then
  %6 = bitcast i64* %iv to i8*
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 21
  %aptr4 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf3, i32 0, i32 2
  %8 = load i8*, i8** %aptr4, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %8, i64 8, i32 1, i1 false)
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 21
  %aptr6 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf5, i32 0, i32 2
  %10 = load i8*, i8** %aptr6, align 8
  %add.ptr7 = getelementptr inbounds i8, i8* %10, i64 8
  store i8* %add.ptr7, i8** %aptr6, align 8
  br label %if.end

if.else:                                          ; preds = %if.then
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %if.then.2
  br label %if.end.13

if.else.8:                                        ; preds = %entry
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio9 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 23
  %12 = load %struct._PerlIO**, %struct._PerlIO*** %fio9, align 8
  %13 = bitcast i64* %iv to i8*
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %12, i8* %13, i64 8)
  %cmp10 = icmp ne i64 %call, 8
  br i1 %cmp10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.else.8
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.12:                                        ; preds = %if.else.8
  br label %if.end.13

if.end.13:                                        ; preds = %if.end.12, %if.end
  %14 = load i64, i64* %iv, align 8
  %call14 = call %struct.sv* @Perl_newSViv(i64 %14)
  store %struct.sv* %call14, %struct.sv** %sv, align 8
  %15 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool15 = icmp ne %struct.sv* %15, null
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.end.13
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.17:                                        ; preds = %if.end.13
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 4
  %17 = load %struct.av*, %struct.av** %aseen, align 8
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 9
  %19 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %19, 1
  store i64 %inc, i64* %tagnum, align 8
  %conv = trunc i64 %19 to i32
  %20 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %20, %struct.sv** @PL_Sv, align 8
  %21 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool18 = icmp ne %struct.sv* %21, null
  br i1 %tobool18, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end.17
  %22 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %22, i32 0, i32 1
  %23 = load i32, i32* %sv_refcnt, align 4
  %inc19 = add i32 %23, 1
  store i32 %inc19, i32* %sv_refcnt, align 4
  %tobool20 = icmp ne i32 %inc19, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.17
  %24 = phi i1 [ false, %if.end.17 ], [ %tobool20, %land.rhs ]
  %land.ext = zext i1 %24 to i32
  %25 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call21 = call %struct.sv** @Perl_av_store(%struct.av* %17, i32 %conv, %struct.sv* %25)
  %cmp22 = icmp eq %struct.sv** %call21, null
  br i1 %cmp22, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %land.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.25:                                        ; preds = %land.end
  %26 = load i8*, i8** %cname.addr, align 8
  %tobool26 = icmp ne i8* %26, null
  br i1 %tobool26, label %if.then.27, label %if.end.31

if.then.27:                                       ; preds = %if.end.25
  %27 = load i8*, i8** %cname.addr, align 8
  %call28 = call %struct.hv* @Perl_gv_stashpv(i8* %27, i32 1)
  store %struct.hv* %call28, %struct.hv** %stash, align 8
  %28 = load %struct.sv*, %struct.sv** %sv, align 8
  %call29 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %28)
  store %struct.sv* %call29, %struct.sv** %Perl_ref, align 8
  %29 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %30 = load %struct.hv*, %struct.hv** %stash, align 8
  %call30 = call %struct.sv* @Perl_sv_bless(%struct.sv* %29, %struct.hv* %30)
  %31 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %31, i32 0, i32 0
  %32 = load i8*, i8** %sv_any, align 8
  %33 = bitcast i8* %32 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %33, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %34 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %34)
  br label %if.end.31

if.end.31:                                        ; preds = %if.then.27, %if.end.25
  %35 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %35, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.31, %if.then.24, %if.then.16, %if.then.11, %if.else
  %36 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %36
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_double(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  %nv = alloca double, align 8
  %Perl_ref = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 23
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else.8, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ule i8* %add.ptr, %5
  br i1 %cmp, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.then
  %6 = bitcast double* %nv to i8*
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 21
  %aptr4 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf3, i32 0, i32 2
  %8 = load i8*, i8** %aptr4, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %8, i64 8, i32 1, i1 false)
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 21
  %aptr6 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf5, i32 0, i32 2
  %10 = load i8*, i8** %aptr6, align 8
  %add.ptr7 = getelementptr inbounds i8, i8* %10, i64 8
  store i8* %add.ptr7, i8** %aptr6, align 8
  br label %if.end

if.else:                                          ; preds = %if.then
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %if.then.2
  br label %if.end.13

if.else.8:                                        ; preds = %entry
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio9 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 23
  %12 = load %struct._PerlIO**, %struct._PerlIO*** %fio9, align 8
  %13 = bitcast double* %nv to i8*
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %12, i8* %13, i64 8)
  %cmp10 = icmp ne i64 %call, 8
  br i1 %cmp10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.else.8
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.12:                                        ; preds = %if.else.8
  br label %if.end.13

if.end.13:                                        ; preds = %if.end.12, %if.end
  %14 = load double, double* %nv, align 8
  %call14 = call %struct.sv* @Perl_newSVnv(double %14)
  store %struct.sv* %call14, %struct.sv** %sv, align 8
  %15 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool15 = icmp ne %struct.sv* %15, null
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.end.13
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.17:                                        ; preds = %if.end.13
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 4
  %17 = load %struct.av*, %struct.av** %aseen, align 8
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 9
  %19 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %19, 1
  store i64 %inc, i64* %tagnum, align 8
  %conv = trunc i64 %19 to i32
  %20 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %20, %struct.sv** @PL_Sv, align 8
  %21 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool18 = icmp ne %struct.sv* %21, null
  br i1 %tobool18, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end.17
  %22 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %22, i32 0, i32 1
  %23 = load i32, i32* %sv_refcnt, align 4
  %inc19 = add i32 %23, 1
  store i32 %inc19, i32* %sv_refcnt, align 4
  %tobool20 = icmp ne i32 %inc19, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.17
  %24 = phi i1 [ false, %if.end.17 ], [ %tobool20, %land.rhs ]
  %land.ext = zext i1 %24 to i32
  %25 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call21 = call %struct.sv** @Perl_av_store(%struct.av* %17, i32 %conv, %struct.sv* %25)
  %cmp22 = icmp eq %struct.sv** %call21, null
  br i1 %cmp22, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %land.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.25:                                        ; preds = %land.end
  %26 = load i8*, i8** %cname.addr, align 8
  %tobool26 = icmp ne i8* %26, null
  br i1 %tobool26, label %if.then.27, label %if.end.31

if.then.27:                                       ; preds = %if.end.25
  %27 = load i8*, i8** %cname.addr, align 8
  %call28 = call %struct.hv* @Perl_gv_stashpv(i8* %27, i32 1)
  store %struct.hv* %call28, %struct.hv** %stash, align 8
  %28 = load %struct.sv*, %struct.sv** %sv, align 8
  %call29 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %28)
  store %struct.sv* %call29, %struct.sv** %Perl_ref, align 8
  %29 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %30 = load %struct.hv*, %struct.hv** %stash, align 8
  %call30 = call %struct.sv* @Perl_sv_bless(%struct.sv* %29, %struct.hv* %30)
  %31 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %31, i32 0, i32 0
  %32 = load i8*, i8** %sv_any, align 8
  %33 = bitcast i8* %32 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %33, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %34 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %34)
  br label %if.end.31

if.end.31:                                        ; preds = %if.then.27, %if.end.25
  %35 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %35, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.31, %if.then.24, %if.then.16, %if.then.11, %if.else
  %36 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %36
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_byte(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  %siv = alloca i32, align 4
  %tmp = alloca i8, align 1
  %Perl_ref = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 23
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else.5, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ult i8* %3, %5
  br i1 %cmp, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.then
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 21
  %aptr4 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf3, i32 0, i32 2
  %7 = load i8*, i8** %aptr4, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %aptr4, align 8
  %8 = load i8, i8* %7, align 1
  %conv = zext i8 %8 to i32
  store i32 %conv, i32* %siv, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %if.then.2
  br label %if.end.11

if.else.5:                                        ; preds = %entry
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio6 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 23
  %10 = load %struct._PerlIO**, %struct._PerlIO*** %fio6, align 8
  %call = call i32 @PerlIO_getc(%struct._PerlIO** %10)
  store i32 %call, i32* %siv, align 4
  %cmp7 = icmp eq i32 %call, -1
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.else.5
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.10:                                        ; preds = %if.else.5
  br label %if.end.11

if.end.11:                                        ; preds = %if.end.10, %if.end
  %11 = load i32, i32* %siv, align 4
  %conv12 = trunc i32 %11 to i8
  %conv13 = zext i8 %conv12 to i32
  %sub = sub nsw i32 %conv13, 128
  %conv14 = trunc i32 %sub to i8
  store i8 %conv14, i8* %tmp, align 1
  %12 = load i8, i8* %tmp, align 1
  %conv15 = sext i8 %12 to i64
  %call16 = call %struct.sv* @Perl_newSViv(i64 %conv15)
  store %struct.sv* %call16, %struct.sv** %sv, align 8
  %13 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool17 = icmp ne %struct.sv* %13, null
  br i1 %tobool17, label %if.end.19, label %if.then.18

if.then.18:                                       ; preds = %if.end.11
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.19:                                        ; preds = %if.end.11
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 4
  %15 = load %struct.av*, %struct.av** %aseen, align 8
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 9
  %17 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %17, 1
  store i64 %inc, i64* %tagnum, align 8
  %conv20 = trunc i64 %17 to i32
  %18 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %18, %struct.sv** @PL_Sv, align 8
  %19 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool21 = icmp ne %struct.sv* %19, null
  br i1 %tobool21, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end.19
  %20 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %20, i32 0, i32 1
  %21 = load i32, i32* %sv_refcnt, align 4
  %inc22 = add i32 %21, 1
  store i32 %inc22, i32* %sv_refcnt, align 4
  %tobool23 = icmp ne i32 %inc22, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.19
  %22 = phi i1 [ false, %if.end.19 ], [ %tobool23, %land.rhs ]
  %land.ext = zext i1 %22 to i32
  %23 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call24 = call %struct.sv** @Perl_av_store(%struct.av* %15, i32 %conv20, %struct.sv* %23)
  %cmp25 = icmp eq %struct.sv** %call24, null
  br i1 %cmp25, label %if.then.27, label %if.end.28

if.then.27:                                       ; preds = %land.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.28:                                        ; preds = %land.end
  %24 = load i8*, i8** %cname.addr, align 8
  %tobool29 = icmp ne i8* %24, null
  br i1 %tobool29, label %if.then.30, label %if.end.36

if.then.30:                                       ; preds = %if.end.28
  %25 = load i8*, i8** %cname.addr, align 8
  %call33 = call %struct.hv* @Perl_gv_stashpv(i8* %25, i32 1)
  store %struct.hv* %call33, %struct.hv** %stash, align 8
  %26 = load %struct.sv*, %struct.sv** %sv, align 8
  %call34 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %26)
  store %struct.sv* %call34, %struct.sv** %Perl_ref, align 8
  %27 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %28 = load %struct.hv*, %struct.hv** %stash, align 8
  %call35 = call %struct.sv* @Perl_sv_bless(%struct.sv* %27, %struct.hv* %28)
  %29 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %29, i32 0, i32 0
  %30 = load i8*, i8** %sv_any, align 8
  %31 = bitcast i8* %30 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %31, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %32 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %32)
  br label %if.end.36

if.end.36:                                        ; preds = %if.then.30, %if.end.28
  %33 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %33, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.36, %if.then.27, %if.then.18, %if.then.9, %if.else
  %34 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %34
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_netint(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  %iv = alloca i32, align 4
  %Perl_ref = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 23
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else.18, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 4
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ule i8* %add.ptr, %5
  br i1 %cmp, label %if.then.2, label %if.else.16

if.then.2:                                        ; preds = %if.then
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 21
  %aptr4 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf3, i32 0, i32 2
  %7 = load i8*, i8** %aptr4, align 8
  %8 = ptrtoint i8* %7 to i64
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 21
  %aptr6 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf5, i32 0, i32 2
  %10 = load i8*, i8** %aptr6, align 8
  %11 = ptrtoint i8* %10 to i64
  %and = and i64 %11, -4
  %cmp7 = icmp eq i64 %8, %and
  br i1 %cmp7, label %if.then.8, label %if.else

if.then.8:                                        ; preds = %if.then.2
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf9 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 21
  %aptr10 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf9, i32 0, i32 2
  %13 = load i8*, i8** %aptr10, align 8
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %iv, align 4
  br label %if.end

if.else:                                          ; preds = %if.then.2
  %16 = bitcast i32* %iv to i8*
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf11 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 21
  %aptr12 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf11, i32 0, i32 2
  %18 = load i8*, i8** %aptr12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %18, i64 4, i32 1, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.8
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf13 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 21
  %aptr14 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf13, i32 0, i32 2
  %20 = load i8*, i8** %aptr14, align 8
  %add.ptr15 = getelementptr inbounds i8, i8* %20, i64 4
  store i8* %add.ptr15, i8** %aptr14, align 8
  br label %if.end.17

if.else.16:                                       ; preds = %if.then
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.17:                                        ; preds = %if.end
  br label %if.end.23

if.else.18:                                       ; preds = %entry
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 23
  %22 = load %struct._PerlIO**, %struct._PerlIO*** %fio19, align 8
  %23 = bitcast i32* %iv to i8*
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %22, i8* %23, i64 4)
  %cmp20 = icmp ne i64 %call, 4
  br i1 %cmp20, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %if.else.18
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.22:                                        ; preds = %if.else.18
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.22, %if.end.17
  %24 = load i32, i32* %iv, align 4
  %conv = sext i32 %24 to i64
  %call24 = call i64 @Perl_my_ntohl(i64 %conv)
  %conv25 = trunc i64 %call24 to i32
  %conv26 = sext i32 %conv25 to i64
  %call27 = call %struct.sv* @Perl_newSViv(i64 %conv26)
  store %struct.sv* %call27, %struct.sv** %sv, align 8
  %25 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool28 = icmp ne %struct.sv* %25, null
  br i1 %tobool28, label %if.end.30, label %if.then.29

if.then.29:                                       ; preds = %if.end.23
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.30:                                        ; preds = %if.end.23
  %26 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %26, i32 0, i32 4
  %27 = load %struct.av*, %struct.av** %aseen, align 8
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 9
  %29 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %29, 1
  store i64 %inc, i64* %tagnum, align 8
  %conv31 = trunc i64 %29 to i32
  %30 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %30, %struct.sv** @PL_Sv, align 8
  %31 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool32 = icmp ne %struct.sv* %31, null
  br i1 %tobool32, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end.30
  %32 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %32, i32 0, i32 1
  %33 = load i32, i32* %sv_refcnt, align 4
  %inc33 = add i32 %33, 1
  store i32 %inc33, i32* %sv_refcnt, align 4
  %tobool34 = icmp ne i32 %inc33, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.30
  %34 = phi i1 [ false, %if.end.30 ], [ %tobool34, %land.rhs ]
  %land.ext = zext i1 %34 to i32
  %35 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call35 = call %struct.sv** @Perl_av_store(%struct.av* %27, i32 %conv31, %struct.sv* %35)
  %cmp36 = icmp eq %struct.sv** %call35, null
  br i1 %cmp36, label %if.then.38, label %if.end.39

if.then.38:                                       ; preds = %land.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.39:                                        ; preds = %land.end
  %36 = load i8*, i8** %cname.addr, align 8
  %tobool40 = icmp ne i8* %36, null
  br i1 %tobool40, label %if.then.41, label %if.end.45

if.then.41:                                       ; preds = %if.end.39
  %37 = load i8*, i8** %cname.addr, align 8
  %call42 = call %struct.hv* @Perl_gv_stashpv(i8* %37, i32 1)
  store %struct.hv* %call42, %struct.hv** %stash, align 8
  %38 = load %struct.sv*, %struct.sv** %sv, align 8
  %call43 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %38)
  store %struct.sv* %call43, %struct.sv** %Perl_ref, align 8
  %39 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %40 = load %struct.hv*, %struct.hv** %stash, align 8
  %call44 = call %struct.sv* @Perl_sv_bless(%struct.sv* %39, %struct.hv* %40)
  %41 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %41, i32 0, i32 0
  %42 = load i8*, i8** %sv_any, align 8
  %43 = bitcast i8* %42 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %43, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %44 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %44)
  br label %if.end.45

if.end.45:                                        ; preds = %if.then.41, %if.end.39
  %45 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %45, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.45, %if.then.38, %if.then.29, %if.then.21, %if.else.16
  %46 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %46
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_scalar(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  %Perl_ref = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %tmp = alloca i64, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 23
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else.5, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ult i8* %3, %5
  br i1 %cmp, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.then
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 21
  %aptr4 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf3, i32 0, i32 2
  %7 = load i8*, i8** %aptr4, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %aptr4, align 8
  %8 = load i8, i8* %7, align 1
  %conv = zext i8 %8 to i32
  store i32 %conv, i32* %len, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %if.then.2
  br label %if.end.11

if.else.5:                                        ; preds = %entry
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio6 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 23
  %10 = load %struct._PerlIO**, %struct._PerlIO*** %fio6, align 8
  %call = call i32 @PerlIO_getc(%struct._PerlIO** %10)
  store i32 %call, i32* %len, align 4
  %cmp7 = icmp eq i32 %call, -1
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.else.5
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.10:                                        ; preds = %if.else.5
  br label %if.end.11

if.end.11:                                        ; preds = %if.end.10, %if.end
  %11 = load i32, i32* %len, align 4
  %conv12 = sext i32 %11 to i64
  %call13 = call %struct.sv* @Perl_newSV(i64 %conv12)
  store %struct.sv* %call13, %struct.sv** %sv, align 8
  %12 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool14 = icmp ne %struct.sv* %12, null
  br i1 %tobool14, label %if.end.16, label %if.then.15

if.then.15:                                       ; preds = %if.end.11
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.16:                                        ; preds = %if.end.11
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 4
  %14 = load %struct.av*, %struct.av** %aseen, align 8
  %15 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %15, i32 0, i32 9
  %16 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %16, 1
  store i64 %inc, i64* %tagnum, align 8
  %conv17 = trunc i64 %16 to i32
  %17 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %17, %struct.sv** @PL_Sv, align 8
  %18 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool18 = icmp ne %struct.sv* %18, null
  br i1 %tobool18, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end.16
  %19 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %19, i32 0, i32 1
  %20 = load i32, i32* %sv_refcnt, align 4
  %inc19 = add i32 %20, 1
  store i32 %inc19, i32* %sv_refcnt, align 4
  %tobool20 = icmp ne i32 %inc19, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.16
  %21 = phi i1 [ false, %if.end.16 ], [ %tobool20, %land.rhs ]
  %land.ext = zext i1 %21 to i32
  %22 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call21 = call %struct.sv** @Perl_av_store(%struct.av* %14, i32 %conv17, %struct.sv* %22)
  %cmp22 = icmp eq %struct.sv** %call21, null
  br i1 %cmp22, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %land.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.25:                                        ; preds = %land.end
  %23 = load i8*, i8** %cname.addr, align 8
  %tobool26 = icmp ne i8* %23, null
  br i1 %tobool26, label %if.then.27, label %if.end.31

if.then.27:                                       ; preds = %if.end.25
  %24 = load i8*, i8** %cname.addr, align 8
  %call28 = call %struct.hv* @Perl_gv_stashpv(i8* %24, i32 1)
  store %struct.hv* %call28, %struct.hv** %stash, align 8
  %25 = load %struct.sv*, %struct.sv** %sv, align 8
  %call29 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %25)
  store %struct.sv* %call29, %struct.sv** %Perl_ref, align 8
  %26 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %27 = load %struct.hv*, %struct.hv** %stash, align 8
  %call30 = call %struct.sv* @Perl_sv_bless(%struct.sv* %26, %struct.hv* %27)
  %28 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %28, i32 0, i32 0
  %29 = load i8*, i8** %sv_any, align 8
  %30 = bitcast i8* %29 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %30, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %31 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %31)
  br label %if.end.31

if.end.31:                                        ; preds = %if.then.27, %if.end.25
  %32 = load i32, i32* %len, align 4
  %cmp32 = icmp eq i32 %32, 0
  br i1 %cmp32, label %if.then.34, label %if.else.48

if.then.34:                                       ; preds = %if.end.31
  %33 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %33, i32 0, i32 2
  %34 = load i32, i32* %sv_flags, align 4
  %and = and i32 %34, 255
  %cmp35 = icmp ule i32 %and, 4
  br i1 %cmp35, label %if.then.37, label %if.end.39

if.then.37:                                       ; preds = %if.then.34
  %35 = load %struct.sv*, %struct.sv** %sv, align 8
  %call38 = call signext i8 @Perl_sv_upgrade(%struct.sv* %35, i32 4)
  br label %if.end.39

if.end.39:                                        ; preds = %if.then.37, %if.then.34
  %36 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any40 = getelementptr inbounds %struct.sv, %struct.sv* %36, i32 0, i32 0
  %37 = load i8*, i8** %sv_any40, align 8
  %38 = bitcast i8* %37 to %struct.xpv*
  %xpv_len = getelementptr inbounds %struct.xpv, %struct.xpv* %38, i32 0, i32 2
  %39 = load i64, i64* %xpv_len, align 8
  %cmp41 = icmp ult i64 %39, 1
  br i1 %cmp41, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.39
  %40 = load %struct.sv*, %struct.sv** %sv, align 8
  %call43 = call i8* @Perl_sv_grow(%struct.sv* %40, i64 1)
  br label %cond.end

cond.false:                                       ; preds = %if.end.39
  %41 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any44 = getelementptr inbounds %struct.sv, %struct.sv* %41, i32 0, i32 0
  %42 = load i8*, i8** %sv_any44, align 8
  %43 = bitcast i8* %42 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %43, i32 0, i32 0
  %44 = load i8*, i8** %xpv_pv, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call43, %cond.true ], [ %44, %cond.false ]
  %45 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any45 = getelementptr inbounds %struct.sv, %struct.sv* %45, i32 0, i32 0
  %46 = load i8*, i8** %sv_any45, align 8
  %47 = bitcast i8* %46 to %struct.xpv*
  %xpv_pv46 = getelementptr inbounds %struct.xpv, %struct.xpv* %47, i32 0, i32 0
  %48 = load i8*, i8** %xpv_pv46, align 8
  %49 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any47 = getelementptr inbounds %struct.sv, %struct.sv* %49, i32 0, i32 0
  %50 = load i8*, i8** %sv_any47, align 8
  %51 = bitcast i8* %50 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %51, i32 0, i32 1
  %52 = load i64, i64* %xpv_cur, align 8
  %add.ptr = getelementptr inbounds i8, i8* %48, i64 %52
  store i8 0, i8* %add.ptr, align 1
  br label %if.end.91

if.else.48:                                       ; preds = %if.end.31
  %53 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio49 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %53, i32 0, i32 23
  %54 = load %struct._PerlIO**, %struct._PerlIO*** %fio49, align 8
  %tobool50 = icmp ne %struct._PerlIO** %54, null
  br i1 %tobool50, label %if.else.71, label %if.then.51

if.then.51:                                       ; preds = %if.else.48
  %55 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf52 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %55, i32 0, i32 21
  %aptr53 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf52, i32 0, i32 2
  %56 = load i8*, i8** %aptr53, align 8
  %57 = load i32, i32* %len, align 4
  %idx.ext = sext i32 %57 to i64
  %add.ptr54 = getelementptr inbounds i8, i8* %56, i64 %idx.ext
  %58 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf55 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %58, i32 0, i32 21
  %aend56 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf55, i32 0, i32 3
  %59 = load i8*, i8** %aend56, align 8
  %cmp57 = icmp ule i8* %add.ptr54, %59
  br i1 %cmp57, label %if.then.59, label %if.else.69

if.then.59:                                       ; preds = %if.then.51
  %60 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any60 = getelementptr inbounds %struct.sv, %struct.sv* %60, i32 0, i32 0
  %61 = load i8*, i8** %sv_any60, align 8
  %62 = bitcast i8* %61 to %struct.xpv*
  %xpv_pv61 = getelementptr inbounds %struct.xpv, %struct.xpv* %62, i32 0, i32 0
  %63 = load i8*, i8** %xpv_pv61, align 8
  %64 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf62 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %64, i32 0, i32 21
  %aptr63 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf62, i32 0, i32 2
  %65 = load i8*, i8** %aptr63, align 8
  %66 = load i32, i32* %len, align 4
  %conv64 = sext i32 %66 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %65, i64 %conv64, i32 1, i1 false)
  %67 = load i32, i32* %len, align 4
  %68 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf65 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %68, i32 0, i32 21
  %aptr66 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf65, i32 0, i32 2
  %69 = load i8*, i8** %aptr66, align 8
  %idx.ext67 = sext i32 %67 to i64
  %add.ptr68 = getelementptr inbounds i8, i8* %69, i64 %idx.ext67
  store i8* %add.ptr68, i8** %aptr66, align 8
  br label %if.end.70

if.else.69:                                       ; preds = %if.then.51
  %70 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_free(%struct.sv* %70)
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.70:                                        ; preds = %if.then.59
  br label %if.end.82

if.else.71:                                       ; preds = %if.else.48
  %71 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio72 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %71, i32 0, i32 23
  %72 = load %struct._PerlIO**, %struct._PerlIO*** %fio72, align 8
  %73 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any73 = getelementptr inbounds %struct.sv, %struct.sv* %73, i32 0, i32 0
  %74 = load i8*, i8** %sv_any73, align 8
  %75 = bitcast i8* %74 to %struct.xpv*
  %xpv_pv74 = getelementptr inbounds %struct.xpv, %struct.xpv* %75, i32 0, i32 0
  %76 = load i8*, i8** %xpv_pv74, align 8
  %77 = load i32, i32* %len, align 4
  %conv75 = sext i32 %77 to i64
  %call76 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %72, i8* %76, i64 %conv75)
  %78 = load i32, i32* %len, align 4
  %conv77 = sext i32 %78 to i64
  %cmp78 = icmp ne i64 %call76, %conv77
  br i1 %cmp78, label %if.then.80, label %if.end.81

if.then.80:                                       ; preds = %if.else.71
  %79 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_free(%struct.sv* %79)
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.81:                                        ; preds = %if.else.71
  br label %if.end.82

if.end.82:                                        ; preds = %if.end.81, %if.end.70
  %80 = load i32, i32* %len, align 4
  %conv83 = sext i32 %80 to i64
  %81 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any84 = getelementptr inbounds %struct.sv, %struct.sv* %81, i32 0, i32 0
  %82 = load i8*, i8** %sv_any84, align 8
  %83 = bitcast i8* %82 to %struct.xpv*
  %xpv_cur85 = getelementptr inbounds %struct.xpv, %struct.xpv* %83, i32 0, i32 1
  store i64 %conv83, i64* %xpv_cur85, align 8
  store i64 %conv83, i64* %tmp
  %84 = load i64, i64* %tmp
  %85 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any86 = getelementptr inbounds %struct.sv, %struct.sv* %85, i32 0, i32 0
  %86 = load i8*, i8** %sv_any86, align 8
  %87 = bitcast i8* %86 to %struct.xpv*
  %xpv_pv87 = getelementptr inbounds %struct.xpv, %struct.xpv* %87, i32 0, i32 0
  %88 = load i8*, i8** %xpv_pv87, align 8
  %89 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any88 = getelementptr inbounds %struct.sv, %struct.sv* %89, i32 0, i32 0
  %90 = load i8*, i8** %sv_any88, align 8
  %91 = bitcast i8* %90 to %struct.xpv*
  %xpv_cur89 = getelementptr inbounds %struct.xpv, %struct.xpv* %91, i32 0, i32 1
  %92 = load i64, i64* %xpv_cur89, align 8
  %add.ptr90 = getelementptr inbounds i8, i8* %88, i64 %92
  store i8 0, i8* %add.ptr90, align 1
  br label %if.end.91

if.end.91:                                        ; preds = %if.end.82, %cond.end
  %93 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags92 = getelementptr inbounds %struct.sv, %struct.sv* %93, i32 0, i32 2
  %94 = load i32, i32* %sv_flags92, align 4
  %and93 = and i32 %94, 1223753727
  store i32 %and93, i32* %sv_flags92, align 4
  %95 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags94 = getelementptr inbounds %struct.sv, %struct.sv* %95, i32 0, i32 2
  %96 = load i32, i32* %sv_flags94, align 4
  %or = or i32 %96, 67371008
  store i32 %or, i32* %sv_flags94, align 4
  %97 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_tainted = getelementptr inbounds %struct.stcxt, %struct.stcxt* %97, i32 0, i32 12
  %98 = load i32, i32* %s_tainted, align 4
  %tobool95 = icmp ne i32 %98, 0
  br i1 %tobool95, label %if.then.96, label %if.end.106

if.then.96:                                       ; preds = %if.end.91
  %99 = load i8, i8* @PL_tainting, align 1
  %tobool97 = icmp ne i8 %99, 0
  br i1 %tobool97, label %if.then.98, label %if.end.105

if.then.98:                                       ; preds = %if.then.96
  %100 = load i8, i8* @PL_tainted, align 1
  %tobool99 = icmp ne i8 %100, 0
  br i1 %tobool99, label %if.then.100, label %if.end.104

if.then.100:                                      ; preds = %if.then.98
  %101 = load i8, i8* @PL_tainting, align 1
  %tobool101 = icmp ne i8 %101, 0
  br i1 %tobool101, label %if.then.102, label %if.end.103

if.then.102:                                      ; preds = %if.then.100
  %102 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_taint(%struct.sv* %102)
  br label %if.end.103

if.end.103:                                       ; preds = %if.then.102, %if.then.100
  br label %if.end.104

if.end.104:                                       ; preds = %if.end.103, %if.then.98
  br label %if.end.105

if.end.105:                                       ; preds = %if.end.104, %if.then.96
  br label %if.end.106

if.end.106:                                       ; preds = %if.end.105, %if.end.91
  %103 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %103, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.106, %if.then.80, %if.else.69, %if.then.24, %if.then.15, %if.then.9, %if.else
  %104 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %104
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_tied_array(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %tv = alloca %struct.sv*, align 8
  %sv = alloca %struct.sv*, align 8
  %Perl_ref = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %call = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call, %struct.sv** %tv, align 8
  %0 = load %struct.sv*, %struct.sv** %tv, align 8
  %tobool = icmp ne %struct.sv* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 4
  %2 = load %struct.av*, %struct.av** %aseen, align 8
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 9
  %4 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %4, 1
  store i64 %inc, i64* %tagnum, align 8
  %conv = trunc i64 %4 to i32
  %5 = load %struct.sv*, %struct.sv** %tv, align 8
  store %struct.sv* %5, %struct.sv** @PL_Sv, align 8
  %6 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool1 = icmp ne %struct.sv* %6, null
  br i1 %tobool1, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end
  %7 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %7, i32 0, i32 1
  %8 = load i32, i32* %sv_refcnt, align 4
  %inc2 = add i32 %8, 1
  store i32 %inc2, i32* %sv_refcnt, align 4
  %tobool3 = icmp ne i32 %inc2, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %9 = phi i1 [ false, %if.end ], [ %tobool3, %land.rhs ]
  %land.ext = zext i1 %9 to i32
  %10 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call4 = call %struct.sv** @Perl_av_store(%struct.av* %2, i32 %conv, %struct.sv* %10)
  %cmp = icmp eq %struct.sv** %call4, null
  br i1 %cmp, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %land.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.7:                                         ; preds = %land.end
  %11 = load i8*, i8** %cname.addr, align 8
  %tobool8 = icmp ne i8* %11, null
  br i1 %tobool8, label %if.then.9, label %if.end.13

if.then.9:                                        ; preds = %if.end.7
  %12 = load i8*, i8** %cname.addr, align 8
  %call10 = call %struct.hv* @Perl_gv_stashpv(i8* %12, i32 1)
  store %struct.hv* %call10, %struct.hv** %stash, align 8
  %13 = load %struct.sv*, %struct.sv** %tv, align 8
  %call11 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %13)
  store %struct.sv* %call11, %struct.sv** %Perl_ref, align 8
  %14 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %15 = load %struct.hv*, %struct.hv** %stash, align 8
  %call12 = call %struct.sv* @Perl_sv_bless(%struct.sv* %14, %struct.hv* %15)
  %16 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 0
  %17 = load i8*, i8** %sv_any, align 8
  %18 = bitcast i8* %17 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %18, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %19 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %19)
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.9, %if.end.7
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call14 = call %struct.sv* @retrieve(%struct.stcxt* %20, i8* null)
  store %struct.sv* %call14, %struct.sv** %sv, align 8
  %21 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool15 = icmp ne %struct.sv* %21, null
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.end.13
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.17:                                        ; preds = %if.end.13
  %22 = load %struct.sv*, %struct.sv** %tv, align 8
  %call18 = call signext i8 @Perl_sv_upgrade(%struct.sv* %22, i32 10)
  %23 = load %struct.sv*, %struct.sv** %tv, align 8
  %24 = bitcast %struct.sv* %23 to %struct.av*
  %sv_any19 = getelementptr inbounds %struct.av, %struct.av* %24, i32 0, i32 0
  %25 = load %struct.xpvav*, %struct.xpvav** %sv_any19, align 8
  %xav_flags = getelementptr inbounds %struct.xpvav, %struct.xpvav* %25, i32 0, i32 9
  %26 = load i8, i8* %xav_flags, align 1
  %conv20 = zext i8 %26 to i32
  %and = and i32 %conv20, -2
  %conv21 = trunc i32 %and to i8
  store i8 %conv21, i8* %xav_flags, align 1
  %27 = load %struct.sv*, %struct.sv** %tv, align 8
  %28 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_magic(%struct.sv* %27, %struct.sv* %28, i32 80, i8* null, i32 0)
  %29 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_free(%struct.sv* %29)
  %30 = load %struct.sv*, %struct.sv** %tv, align 8
  store %struct.sv* %30, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.17, %if.then.16, %if.then.6, %if.then
  %31 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %31
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_tied_hash(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %tv = alloca %struct.sv*, align 8
  %sv = alloca %struct.sv*, align 8
  %Perl_ref = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %call = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call, %struct.sv** %tv, align 8
  %0 = load %struct.sv*, %struct.sv** %tv, align 8
  %tobool = icmp ne %struct.sv* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 4
  %2 = load %struct.av*, %struct.av** %aseen, align 8
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 9
  %4 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %4, 1
  store i64 %inc, i64* %tagnum, align 8
  %conv = trunc i64 %4 to i32
  %5 = load %struct.sv*, %struct.sv** %tv, align 8
  store %struct.sv* %5, %struct.sv** @PL_Sv, align 8
  %6 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool1 = icmp ne %struct.sv* %6, null
  br i1 %tobool1, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end
  %7 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %7, i32 0, i32 1
  %8 = load i32, i32* %sv_refcnt, align 4
  %inc2 = add i32 %8, 1
  store i32 %inc2, i32* %sv_refcnt, align 4
  %tobool3 = icmp ne i32 %inc2, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %9 = phi i1 [ false, %if.end ], [ %tobool3, %land.rhs ]
  %land.ext = zext i1 %9 to i32
  %10 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call4 = call %struct.sv** @Perl_av_store(%struct.av* %2, i32 %conv, %struct.sv* %10)
  %cmp = icmp eq %struct.sv** %call4, null
  br i1 %cmp, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %land.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.7:                                         ; preds = %land.end
  %11 = load i8*, i8** %cname.addr, align 8
  %tobool8 = icmp ne i8* %11, null
  br i1 %tobool8, label %if.then.9, label %if.end.13

if.then.9:                                        ; preds = %if.end.7
  %12 = load i8*, i8** %cname.addr, align 8
  %call10 = call %struct.hv* @Perl_gv_stashpv(i8* %12, i32 1)
  store %struct.hv* %call10, %struct.hv** %stash, align 8
  %13 = load %struct.sv*, %struct.sv** %tv, align 8
  %call11 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %13)
  store %struct.sv* %call11, %struct.sv** %Perl_ref, align 8
  %14 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %15 = load %struct.hv*, %struct.hv** %stash, align 8
  %call12 = call %struct.sv* @Perl_sv_bless(%struct.sv* %14, %struct.hv* %15)
  %16 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 0
  %17 = load i8*, i8** %sv_any, align 8
  %18 = bitcast i8* %17 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %18, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %19 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %19)
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.9, %if.end.7
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call14 = call %struct.sv* @retrieve(%struct.stcxt* %20, i8* null)
  store %struct.sv* %call14, %struct.sv** %sv, align 8
  %21 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool15 = icmp ne %struct.sv* %21, null
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.end.13
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.17:                                        ; preds = %if.end.13
  %22 = load %struct.sv*, %struct.sv** %tv, align 8
  %call18 = call signext i8 @Perl_sv_upgrade(%struct.sv* %22, i32 11)
  %23 = load %struct.sv*, %struct.sv** %tv, align 8
  %24 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_magic(%struct.sv* %23, %struct.sv* %24, i32 80, i8* null, i32 0)
  %25 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_free(%struct.sv* %25)
  %26 = load %struct.sv*, %struct.sv** %tv, align 8
  store %struct.sv* %26, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.17, %if.then.16, %if.then.6, %if.then
  %27 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %27
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_tied_scalar(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %tv = alloca %struct.sv*, align 8
  %sv = alloca %struct.sv*, align 8
  %obj = alloca %struct.sv*, align 8
  %Perl_ref = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  store %struct.sv* null, %struct.sv** %obj, align 8
  %call = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call, %struct.sv** %tv, align 8
  %0 = load %struct.sv*, %struct.sv** %tv, align 8
  %tobool = icmp ne %struct.sv* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 4
  %2 = load %struct.av*, %struct.av** %aseen, align 8
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 9
  %4 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %4, 1
  store i64 %inc, i64* %tagnum, align 8
  %conv = trunc i64 %4 to i32
  %5 = load %struct.sv*, %struct.sv** %tv, align 8
  store %struct.sv* %5, %struct.sv** @PL_Sv, align 8
  %6 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool1 = icmp ne %struct.sv* %6, null
  br i1 %tobool1, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end
  %7 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %7, i32 0, i32 1
  %8 = load i32, i32* %sv_refcnt, align 4
  %inc2 = add i32 %8, 1
  store i32 %inc2, i32* %sv_refcnt, align 4
  %tobool3 = icmp ne i32 %inc2, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %9 = phi i1 [ false, %if.end ], [ %tobool3, %land.rhs ]
  %land.ext = zext i1 %9 to i32
  %10 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call4 = call %struct.sv** @Perl_av_store(%struct.av* %2, i32 %conv, %struct.sv* %10)
  %cmp = icmp eq %struct.sv** %call4, null
  br i1 %cmp, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %land.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.7:                                         ; preds = %land.end
  %11 = load i8*, i8** %cname.addr, align 8
  %tobool8 = icmp ne i8* %11, null
  br i1 %tobool8, label %if.then.9, label %if.end.13

if.then.9:                                        ; preds = %if.end.7
  %12 = load i8*, i8** %cname.addr, align 8
  %call10 = call %struct.hv* @Perl_gv_stashpv(i8* %12, i32 1)
  store %struct.hv* %call10, %struct.hv** %stash, align 8
  %13 = load %struct.sv*, %struct.sv** %tv, align 8
  %call11 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %13)
  store %struct.sv* %call11, %struct.sv** %Perl_ref, align 8
  %14 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %15 = load %struct.hv*, %struct.hv** %stash, align 8
  %call12 = call %struct.sv* @Perl_sv_bless(%struct.sv* %14, %struct.hv* %15)
  %16 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 0
  %17 = load i8*, i8** %sv_any, align 8
  %18 = bitcast i8* %17 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %18, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %19 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %19)
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.9, %if.end.7
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call14 = call %struct.sv* @retrieve(%struct.stcxt* %20, i8* null)
  store %struct.sv* %call14, %struct.sv** %sv, align 8
  %21 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool15 = icmp ne %struct.sv* %21, null
  br i1 %tobool15, label %if.else, label %if.then.16

if.then.16:                                       ; preds = %if.end.13
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.else:                                          ; preds = %if.end.13
  %22 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %22, i32 0, i32 2
  %23 = load i32, i32* %sv_flags, align 4
  %and = and i32 %23, 255
  %cmp17 = icmp ne i32 %and, 0
  br i1 %cmp17, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %if.else
  %24 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %24, %struct.sv** %obj, align 8
  br label %if.end.20

if.end.20:                                        ; preds = %if.then.19, %if.else
  br label %if.end.21

if.end.21:                                        ; preds = %if.end.20
  %25 = load %struct.sv*, %struct.sv** %tv, align 8
  %call22 = call signext i8 @Perl_sv_upgrade(%struct.sv* %25, i32 7)
  %26 = load %struct.sv*, %struct.sv** %tv, align 8
  %27 = load %struct.sv*, %struct.sv** %obj, align 8
  call void @Perl_sv_magic(%struct.sv* %26, %struct.sv* %27, i32 113, i8* null, i32 0)
  %28 = load %struct.sv*, %struct.sv** %obj, align 8
  %tobool23 = icmp ne %struct.sv* %28, null
  br i1 %tobool23, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %if.end.21
  %29 = load %struct.sv*, %struct.sv** %obj, align 8
  call void @Perl_sv_free(%struct.sv* %29)
  br label %if.end.25

if.end.25:                                        ; preds = %if.then.24, %if.end.21
  %30 = load %struct.sv*, %struct.sv** %tv, align 8
  store %struct.sv* %30, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.25, %if.then.16, %if.then.6, %if.then
  %31 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %31
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_sv_undef(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  %Perl_ref = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  store %struct.sv* @PL_sv_undef, %struct.sv** %sv, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %where_is_undef = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 5
  %1 = load i64, i64* %where_is_undef, align 8
  %cmp = icmp eq i64 %1, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 9
  %3 = load i64, i64* %tagnum, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %where_is_undef1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 5
  store i64 %3, i64* %where_is_undef1, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool = icmp ne %struct.sv* %5, null
  br i1 %tobool, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 4
  %7 = load %struct.av*, %struct.av** %aseen, align 8
  %8 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %8, i32 0, i32 9
  %9 = load i64, i64* %tagnum4, align 8
  %inc = add nsw i64 %9, 1
  store i64 %inc, i64* %tagnum4, align 8
  %conv = trunc i64 %9 to i32
  %10 = load %struct.sv*, %struct.sv** %sv, align 8
  %call = call %struct.sv** @Perl_av_store(%struct.av* %7, i32 %conv, %struct.sv* %10)
  %cmp5 = icmp eq %struct.sv** %call, null
  br i1 %cmp5, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.end.3
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.8:                                         ; preds = %if.end.3
  %11 = load i8*, i8** %cname.addr, align 8
  %tobool9 = icmp ne i8* %11, null
  br i1 %tobool9, label %if.then.10, label %if.end.14

if.then.10:                                       ; preds = %if.end.8
  %12 = load i8*, i8** %cname.addr, align 8
  %call11 = call %struct.hv* @Perl_gv_stashpv(i8* %12, i32 1)
  store %struct.hv* %call11, %struct.hv** %stash, align 8
  %13 = load %struct.sv*, %struct.sv** %sv, align 8
  %call12 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %13)
  store %struct.sv* %call12, %struct.sv** %Perl_ref, align 8
  %14 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %15 = load %struct.hv*, %struct.hv** %stash, align 8
  %call13 = call %struct.sv* @Perl_sv_bless(%struct.sv* %14, %struct.hv* %15)
  %16 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 0
  %17 = load i8*, i8** %sv_any, align 8
  %18 = bitcast i8* %17 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %18, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %19 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %19)
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.10, %if.end.8
  %20 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %20, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.14, %if.then.7, %if.then.2
  %21 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %21
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_sv_yes(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  %Perl_ref = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  store %struct.sv* @PL_sv_yes, %struct.sv** %sv, align 8
  %0 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool = icmp ne %struct.sv* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 4
  %2 = load %struct.av*, %struct.av** %aseen, align 8
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 9
  %4 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %4, 1
  store i64 %inc, i64* %tagnum, align 8
  %conv = trunc i64 %4 to i32
  %5 = load %struct.sv*, %struct.sv** %sv, align 8
  %call = call %struct.sv** @Perl_av_store(%struct.av* %2, i32 %conv, %struct.sv* %5)
  %cmp = icmp eq %struct.sv** %call, null
  br i1 %cmp, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %6 = load i8*, i8** %cname.addr, align 8
  %tobool4 = icmp ne i8* %6, null
  br i1 %tobool4, label %if.then.5, label %if.end.9

if.then.5:                                        ; preds = %if.end.3
  %7 = load i8*, i8** %cname.addr, align 8
  %call6 = call %struct.hv* @Perl_gv_stashpv(i8* %7, i32 1)
  store %struct.hv* %call6, %struct.hv** %stash, align 8
  %8 = load %struct.sv*, %struct.sv** %sv, align 8
  %call7 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %8)
  store %struct.sv* %call7, %struct.sv** %Perl_ref, align 8
  %9 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %10 = load %struct.hv*, %struct.hv** %stash, align 8
  %call8 = call %struct.sv* @Perl_sv_bless(%struct.sv* %9, %struct.hv* %10)
  %11 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %11, i32 0, i32 0
  %12 = load i8*, i8** %sv_any, align 8
  %13 = bitcast i8* %12 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %13, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %14 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %14)
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.5, %if.end.3
  %15 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %15, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.9, %if.then.2, %if.then
  %16 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %16
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_sv_no(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  %Perl_ref = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  store %struct.sv* @PL_sv_no, %struct.sv** %sv, align 8
  %0 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool = icmp ne %struct.sv* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 4
  %2 = load %struct.av*, %struct.av** %aseen, align 8
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 9
  %4 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %4, 1
  store i64 %inc, i64* %tagnum, align 8
  %conv = trunc i64 %4 to i32
  %5 = load %struct.sv*, %struct.sv** %sv, align 8
  %call = call %struct.sv** @Perl_av_store(%struct.av* %2, i32 %conv, %struct.sv* %5)
  %cmp = icmp eq %struct.sv** %call, null
  br i1 %cmp, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %6 = load i8*, i8** %cname.addr, align 8
  %tobool4 = icmp ne i8* %6, null
  br i1 %tobool4, label %if.then.5, label %if.end.9

if.then.5:                                        ; preds = %if.end.3
  %7 = load i8*, i8** %cname.addr, align 8
  %call6 = call %struct.hv* @Perl_gv_stashpv(i8* %7, i32 1)
  store %struct.hv* %call6, %struct.hv** %stash, align 8
  %8 = load %struct.sv*, %struct.sv** %sv, align 8
  %call7 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %8)
  store %struct.sv* %call7, %struct.sv** %Perl_ref, align 8
  %9 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %10 = load %struct.hv*, %struct.hv** %stash, align 8
  %call8 = call %struct.sv* @Perl_sv_bless(%struct.sv* %9, %struct.hv* %10)
  %11 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %11, i32 0, i32 0
  %12 = load i8*, i8** %sv_any, align 8
  %13 = bitcast i8* %12 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %13, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %14 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %14)
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.5, %if.end.3
  %15 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %15, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.9, %if.then.2, %if.then
  %16 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %16
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_blessed(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  %buf = alloca [128 x i8], align 16
  %class = alloca i8*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay, i8** %class, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 23
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else.5, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ult i8* %3, %5
  br i1 %cmp, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.then
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 21
  %aptr4 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf3, i32 0, i32 2
  %7 = load i8*, i8** %aptr4, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %aptr4, align 8
  %8 = load i8, i8* %7, align 1
  %conv = zext i8 %8 to i32
  store i32 %conv, i32* %len, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %if.then.2
  br label %if.end.11

if.else.5:                                        ; preds = %entry
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio6 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 23
  %10 = load %struct._PerlIO**, %struct._PerlIO*** %fio6, align 8
  %call = call i32 @PerlIO_getc(%struct._PerlIO** %10)
  store i32 %call, i32* %len, align 4
  %cmp7 = icmp eq i32 %call, -1
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.else.5
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.10:                                        ; preds = %if.else.5
  br label %if.end.11

if.end.11:                                        ; preds = %if.end.10, %if.end
  %11 = load i32, i32* %len, align 4
  %and = and i32 %11, 128
  %tobool12 = icmp ne i32 %and, 0
  br i1 %tobool12, label %if.then.13, label %if.end.59

if.then.13:                                       ; preds = %if.end.11
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 23
  %13 = load %struct._PerlIO**, %struct._PerlIO*** %fio14, align 8
  %tobool15 = icmp ne %struct._PerlIO** %13, null
  br i1 %tobool15, label %if.else.43, label %if.then.16

if.then.16:                                       ; preds = %if.then.13
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf17 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 21
  %aptr18 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf17, i32 0, i32 2
  %15 = load i8*, i8** %aptr18, align 8
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 4
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 21
  %aend20 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf19, i32 0, i32 3
  %17 = load i8*, i8** %aend20, align 8
  %cmp21 = icmp ule i8* %add.ptr, %17
  br i1 %cmp21, label %if.then.23, label %if.else.41

if.then.23:                                       ; preds = %if.then.16
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf24 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 21
  %aptr25 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf24, i32 0, i32 2
  %19 = load i8*, i8** %aptr25, align 8
  %20 = ptrtoint i8* %19 to i64
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf26 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 21
  %aptr27 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf26, i32 0, i32 2
  %22 = load i8*, i8** %aptr27, align 8
  %23 = ptrtoint i8* %22 to i64
  %and28 = and i64 %23, -4
  %cmp29 = icmp eq i64 %20, %and28
  br i1 %cmp29, label %if.then.31, label %if.else.34

if.then.31:                                       ; preds = %if.then.23
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf32 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 21
  %aptr33 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf32, i32 0, i32 2
  %25 = load i8*, i8** %aptr33, align 8
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* %len, align 4
  br label %if.end.37

if.else.34:                                       ; preds = %if.then.23
  %28 = bitcast i32* %len to i8*
  %29 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf35 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %29, i32 0, i32 21
  %aptr36 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf35, i32 0, i32 2
  %30 = load i8*, i8** %aptr36, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %30, i64 4, i32 1, i1 false)
  br label %if.end.37

if.end.37:                                        ; preds = %if.else.34, %if.then.31
  %31 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf38 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %31, i32 0, i32 21
  %aptr39 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf38, i32 0, i32 2
  %32 = load i8*, i8** %aptr39, align 8
  %add.ptr40 = getelementptr inbounds i8, i8* %32, i64 4
  store i8* %add.ptr40, i8** %aptr39, align 8
  br label %if.end.42

if.else.41:                                       ; preds = %if.then.16
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.42:                                        ; preds = %if.end.37
  br label %if.end.50

if.else.43:                                       ; preds = %if.then.13
  %33 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio44 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %33, i32 0, i32 23
  %34 = load %struct._PerlIO**, %struct._PerlIO*** %fio44, align 8
  %35 = bitcast i32* %len to i8*
  %call45 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %34, i8* %35, i64 4)
  %cmp46 = icmp ne i64 %call45, 4
  br i1 %cmp46, label %if.then.48, label %if.end.49

if.then.48:                                       ; preds = %if.else.43
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.49:                                        ; preds = %if.else.43
  br label %if.end.50

if.end.50:                                        ; preds = %if.end.49, %if.end.42
  %36 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %36, i32 0, i32 11
  %37 = load i32, i32* %netorder, align 4
  %tobool51 = icmp ne i32 %37, 0
  br i1 %tobool51, label %if.then.52, label %if.end.56

if.then.52:                                       ; preds = %if.end.50
  %38 = load i32, i32* %len, align 4
  %conv53 = sext i32 %38 to i64
  %call54 = call i64 @Perl_my_ntohl(i64 %conv53)
  %conv55 = trunc i64 %call54 to i32
  store i32 %conv55, i32* %len, align 4
  br label %if.end.56

if.end.56:                                        ; preds = %if.then.52, %if.end.50
  %39 = load i32, i32* %len, align 4
  %add = add nsw i32 %39, 1
  %conv57 = sext i32 %add to i64
  %mul = mul i64 %conv57, 1
  %call58 = call i8* @Perl_safesysmalloc(i64 %mul)
  store i8* %call58, i8** %class, align 8
  br label %if.end.59

if.end.59:                                        ; preds = %if.end.56, %if.end.11
  %40 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio60 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %40, i32 0, i32 23
  %41 = load %struct._PerlIO**, %struct._PerlIO*** %fio60, align 8
  %tobool61 = icmp ne %struct._PerlIO** %41, null
  br i1 %tobool61, label %if.else.80, label %if.then.62

if.then.62:                                       ; preds = %if.end.59
  %42 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf63 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %42, i32 0, i32 21
  %aptr64 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf63, i32 0, i32 2
  %43 = load i8*, i8** %aptr64, align 8
  %44 = load i32, i32* %len, align 4
  %idx.ext = sext i32 %44 to i64
  %add.ptr65 = getelementptr inbounds i8, i8* %43, i64 %idx.ext
  %45 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf66 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %45, i32 0, i32 21
  %aend67 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf66, i32 0, i32 3
  %46 = load i8*, i8** %aend67, align 8
  %cmp68 = icmp ule i8* %add.ptr65, %46
  br i1 %cmp68, label %if.then.70, label %if.else.78

if.then.70:                                       ; preds = %if.then.62
  %47 = load i8*, i8** %class, align 8
  %48 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf71 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %48, i32 0, i32 21
  %aptr72 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf71, i32 0, i32 2
  %49 = load i8*, i8** %aptr72, align 8
  %50 = load i32, i32* %len, align 4
  %conv73 = sext i32 %50 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %49, i64 %conv73, i32 1, i1 false)
  %51 = load i32, i32* %len, align 4
  %52 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf74 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %52, i32 0, i32 21
  %aptr75 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf74, i32 0, i32 2
  %53 = load i8*, i8** %aptr75, align 8
  %idx.ext76 = sext i32 %51 to i64
  %add.ptr77 = getelementptr inbounds i8, i8* %53, i64 %idx.ext76
  store i8* %add.ptr77, i8** %aptr75, align 8
  br label %if.end.79

if.else.78:                                       ; preds = %if.then.62
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.79:                                        ; preds = %if.then.70
  br label %if.end.89

if.else.80:                                       ; preds = %if.end.59
  %54 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio81 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %54, i32 0, i32 23
  %55 = load %struct._PerlIO**, %struct._PerlIO*** %fio81, align 8
  %56 = load i8*, i8** %class, align 8
  %57 = load i32, i32* %len, align 4
  %conv82 = sext i32 %57 to i64
  %call83 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %55, i8* %56, i64 %conv82)
  %58 = load i32, i32* %len, align 4
  %conv84 = sext i32 %58 to i64
  %cmp85 = icmp ne i64 %call83, %conv84
  br i1 %cmp85, label %if.then.87, label %if.end.88

if.then.87:                                       ; preds = %if.else.80
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.88:                                        ; preds = %if.else.80
  br label %if.end.89

if.end.89:                                        ; preds = %if.end.88, %if.end.79
  %59 = load i32, i32* %len, align 4
  %idxprom = sext i32 %59 to i64
  %60 = load i8*, i8** %class, align 8
  %arrayidx = getelementptr inbounds i8, i8* %60, i64 %idxprom
  store i8 0, i8* %arrayidx, align 1
  %61 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aclass = getelementptr inbounds %struct.stcxt, %struct.stcxt* %61, i32 0, i32 7
  %62 = load %struct.av*, %struct.av** %aclass, align 8
  %63 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %classnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %63, i32 0, i32 10
  %64 = load i64, i64* %classnum, align 8
  %inc = add nsw i64 %64, 1
  store i64 %inc, i64* %classnum, align 8
  %conv90 = trunc i64 %64 to i32
  %65 = load i8*, i8** %class, align 8
  %66 = load i32, i32* %len, align 4
  %conv91 = sext i32 %66 to i64
  %call92 = call %struct.sv* @Perl_newSVpvn(i8* %65, i64 %conv91)
  %call93 = call %struct.sv** @Perl_av_store(%struct.av* %62, i32 %conv90, %struct.sv* %call92)
  %tobool94 = icmp ne %struct.sv** %call93, null
  br i1 %tobool94, label %if.end.96, label %if.then.95

if.then.95:                                       ; preds = %if.end.89
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.96:                                        ; preds = %if.end.89
  %67 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %68 = load i8*, i8** %class, align 8
  %call97 = call %struct.sv* @retrieve(%struct.stcxt* %67, i8* %68)
  store %struct.sv* %call97, %struct.sv** %sv, align 8
  %69 = load i8*, i8** %class, align 8
  %arraydecay98 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i32 0, i32 0
  %cmp99 = icmp ne i8* %69, %arraydecay98
  br i1 %cmp99, label %if.then.101, label %if.end.102

if.then.101:                                      ; preds = %if.end.96
  %70 = load i8*, i8** %class, align 8
  call void @Perl_safesysfree(i8* %70)
  br label %if.end.102

if.end.102:                                       ; preds = %if.then.101, %if.end.96
  %71 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %71, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.102, %if.then.95, %if.then.87, %if.else.78, %if.then.48, %if.else.41, %if.then.9, %if.else
  %72 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %72
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_idx_blessed(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %idx = alloca i32, align 4
  %class = alloca i8*, align 8
  %sva = alloca %struct.sv**, align 8
  %sv = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 23
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else.5, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ult i8* %3, %5
  br i1 %cmp, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.then
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 21
  %aptr4 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf3, i32 0, i32 2
  %7 = load i8*, i8** %aptr4, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %aptr4, align 8
  %8 = load i8, i8* %7, align 1
  %conv = zext i8 %8 to i32
  store i32 %conv, i32* %idx, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %if.then.2
  br label %if.end.11

if.else.5:                                        ; preds = %entry
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio6 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 23
  %10 = load %struct._PerlIO**, %struct._PerlIO*** %fio6, align 8
  %call = call i32 @PerlIO_getc(%struct._PerlIO** %10)
  store i32 %call, i32* %idx, align 4
  %cmp7 = icmp eq i32 %call, -1
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.else.5
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.10:                                        ; preds = %if.else.5
  br label %if.end.11

if.end.11:                                        ; preds = %if.end.10, %if.end
  %11 = load i32, i32* %idx, align 4
  %and = and i32 %11, 128
  %tobool12 = icmp ne i32 %and, 0
  br i1 %tobool12, label %if.then.13, label %if.end.57

if.then.13:                                       ; preds = %if.end.11
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio14 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 23
  %13 = load %struct._PerlIO**, %struct._PerlIO*** %fio14, align 8
  %tobool15 = icmp ne %struct._PerlIO** %13, null
  br i1 %tobool15, label %if.else.43, label %if.then.16

if.then.16:                                       ; preds = %if.then.13
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf17 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 21
  %aptr18 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf17, i32 0, i32 2
  %15 = load i8*, i8** %aptr18, align 8
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 4
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 21
  %aend20 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf19, i32 0, i32 3
  %17 = load i8*, i8** %aend20, align 8
  %cmp21 = icmp ule i8* %add.ptr, %17
  br i1 %cmp21, label %if.then.23, label %if.else.41

if.then.23:                                       ; preds = %if.then.16
  %18 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf24 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %18, i32 0, i32 21
  %aptr25 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf24, i32 0, i32 2
  %19 = load i8*, i8** %aptr25, align 8
  %20 = ptrtoint i8* %19 to i64
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf26 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 21
  %aptr27 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf26, i32 0, i32 2
  %22 = load i8*, i8** %aptr27, align 8
  %23 = ptrtoint i8* %22 to i64
  %and28 = and i64 %23, -4
  %cmp29 = icmp eq i64 %20, %and28
  br i1 %cmp29, label %if.then.31, label %if.else.34

if.then.31:                                       ; preds = %if.then.23
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf32 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 21
  %aptr33 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf32, i32 0, i32 2
  %25 = load i8*, i8** %aptr33, align 8
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* %idx, align 4
  br label %if.end.37

if.else.34:                                       ; preds = %if.then.23
  %28 = bitcast i32* %idx to i8*
  %29 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf35 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %29, i32 0, i32 21
  %aptr36 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf35, i32 0, i32 2
  %30 = load i8*, i8** %aptr36, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %30, i64 4, i32 1, i1 false)
  br label %if.end.37

if.end.37:                                        ; preds = %if.else.34, %if.then.31
  %31 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf38 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %31, i32 0, i32 21
  %aptr39 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf38, i32 0, i32 2
  %32 = load i8*, i8** %aptr39, align 8
  %add.ptr40 = getelementptr inbounds i8, i8* %32, i64 4
  store i8* %add.ptr40, i8** %aptr39, align 8
  br label %if.end.42

if.else.41:                                       ; preds = %if.then.16
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.42:                                        ; preds = %if.end.37
  br label %if.end.50

if.else.43:                                       ; preds = %if.then.13
  %33 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio44 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %33, i32 0, i32 23
  %34 = load %struct._PerlIO**, %struct._PerlIO*** %fio44, align 8
  %35 = bitcast i32* %idx to i8*
  %call45 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %34, i8* %35, i64 4)
  %cmp46 = icmp ne i64 %call45, 4
  br i1 %cmp46, label %if.then.48, label %if.end.49

if.then.48:                                       ; preds = %if.else.43
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.49:                                        ; preds = %if.else.43
  br label %if.end.50

if.end.50:                                        ; preds = %if.end.49, %if.end.42
  %36 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %36, i32 0, i32 11
  %37 = load i32, i32* %netorder, align 4
  %tobool51 = icmp ne i32 %37, 0
  br i1 %tobool51, label %if.then.52, label %if.end.56

if.then.52:                                       ; preds = %if.end.50
  %38 = load i32, i32* %idx, align 4
  %conv53 = sext i32 %38 to i64
  %call54 = call i64 @Perl_my_ntohl(i64 %conv53)
  %conv55 = trunc i64 %call54 to i32
  store i32 %conv55, i32* %idx, align 4
  br label %if.end.56

if.end.56:                                        ; preds = %if.then.52, %if.end.50
  br label %if.end.57

if.end.57:                                        ; preds = %if.end.56, %if.end.11
  %39 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aclass = getelementptr inbounds %struct.stcxt, %struct.stcxt* %39, i32 0, i32 7
  %40 = load %struct.av*, %struct.av** %aclass, align 8
  %41 = load i32, i32* %idx, align 4
  %call58 = call %struct.sv** @Perl_av_fetch(%struct.av* %40, i32 %41, i32 0)
  store %struct.sv** %call58, %struct.sv*** %sva, align 8
  %42 = load %struct.sv**, %struct.sv*** %sva, align 8
  %tobool59 = icmp ne %struct.sv** %42, null
  br i1 %tobool59, label %if.end.62, label %if.then.60

if.then.60:                                       ; preds = %if.end.57
  %43 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %43, i32 0, i32 18
  store i32 1, i32* %s_dirty, align 4
  %44 = load i32, i32* %idx, align 4
  %conv61 = sext i32 %44 to i64
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.71, i32 0, i32 0), i64 %conv61)
  br label %if.end.62

if.end.62:                                        ; preds = %if.then.60, %if.end.57
  %45 = load %struct.sv**, %struct.sv*** %sva, align 8
  %46 = load %struct.sv*, %struct.sv** %45, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %46, i32 0, i32 0
  %47 = load i8*, i8** %sv_any, align 8
  %48 = bitcast i8* %47 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %48, i32 0, i32 0
  %49 = load i8*, i8** %xpv_pv, align 8
  store i8* %49, i8** %class, align 8
  %50 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %51 = load i8*, i8** %class, align 8
  %call63 = call %struct.sv* @retrieve(%struct.stcxt* %50, i8* %51)
  store %struct.sv* %call63, %struct.sv** %sv, align 8
  %52 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %52, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.62, %if.then.48, %if.else.41, %if.then.9, %if.else
  %53 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %53
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_hook(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  %buf = alloca [128 x i8], align 16
  %class = alloca i8*, align 8
  %flags = alloca i32, align 4
  %len2 = alloca i32, align 4
  %frozen = alloca %struct.sv*, align 8
  %len3 = alloca i32, align 4
  %av = alloca %struct.av*, align 8
  %hook = alloca %struct.sv*, align 8
  %sv = alloca %struct.sv*, align 8
  %rv = alloca %struct.sv*, align 8
  %obj_type = alloca i32, align 4
  %clone = alloca i32, align 4
  %mtype = alloca i8, align 1
  %extra_type = alloca i32, align 4
  %sva = alloca %struct.sv**, align 8
  %idx = alloca i32, align 4
  %tmp = alloca i64, align 8
  %ary = alloca %struct.sv**, align 8
  %i = alloca i32, align 4
  %tag = alloca i32, align 4
  %svh = alloca %struct.sv**, align 8
  %xsv = alloca %struct.sv*, align 8
  %Perl_ref = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %psv = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay, i8** %class, align 8
  store i32 0, i32* %len3, align 4
  store %struct.av* null, %struct.av** %av, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %optype = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 1
  %1 = load i32, i32* %optype, align 4
  %and = and i32 %1, 4
  store i32 %and, i32* %clone, align 4
  store i8 0, i8* %mtype, align 1
  store i32 0, i32* %extra_type, align 4
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 23
  %3 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %3, null
  br i1 %tobool, label %if.else.5, label %if.then

if.then:                                          ; preds = %entry
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %5 = load i8*, i8** %aptr, align 8
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1, i32 0, i32 3
  %7 = load i8*, i8** %aend, align 8
  %cmp = icmp ult i8* %5, %7
  br i1 %cmp, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.then
  %8 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %8, i32 0, i32 21
  %aptr4 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf3, i32 0, i32 2
  %9 = load i8*, i8** %aptr4, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1
  store i8* %incdec.ptr, i8** %aptr4, align 8
  %10 = load i8, i8* %9, align 1
  %conv = zext i8 %10 to i32
  store i32 %conv, i32* %flags, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %if.then.2
  br label %if.end.11

if.else.5:                                        ; preds = %entry
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio6 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 23
  %12 = load %struct._PerlIO**, %struct._PerlIO*** %fio6, align 8
  %call = call i32 @PerlIO_getc(%struct._PerlIO** %12)
  store i32 %call, i32* %flags, align 4
  %cmp7 = icmp eq i32 %call, -1
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.else.5
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.10:                                        ; preds = %if.else.5
  br label %if.end.11

if.end.11:                                        ; preds = %if.end.10, %if.end
  %13 = load i32, i32* %flags, align 4
  %and12 = and i32 %13, 3
  store i32 %and12, i32* %obj_type, align 4
  %14 = load i32, i32* %obj_type, align 4
  switch i32 %14, label %sw.default.50 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.14
    i32 2, label %sw.bb.16
    i32 3, label %sw.bb.18
  ]

sw.bb:                                            ; preds = %if.end.11
  %call13 = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call13, %struct.sv** %sv, align 8
  br label %sw.epilog.52

sw.bb.14:                                         ; preds = %if.end.11
  %call15 = call %struct.av* @Perl_newAV()
  %15 = bitcast %struct.av* %call15 to %struct.sv*
  store %struct.sv* %15, %struct.sv** %sv, align 8
  br label %sw.epilog.52

sw.bb.16:                                         ; preds = %if.end.11
  %call17 = call %struct.hv* @Perl_newHV()
  %16 = bitcast %struct.hv* %call17 to %struct.sv*
  store %struct.sv* %16, %struct.sv** %sv, align 8
  br label %sw.epilog.52

sw.bb.18:                                         ; preds = %if.end.11
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 23
  %18 = load %struct._PerlIO**, %struct._PerlIO*** %fio19, align 8
  %tobool20 = icmp ne %struct._PerlIO** %18, null
  br i1 %tobool20, label %if.else.35, label %if.then.21

if.then.21:                                       ; preds = %sw.bb.18
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 21
  %aptr23 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf22, i32 0, i32 2
  %20 = load i8*, i8** %aptr23, align 8
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf24 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 21
  %aend25 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf24, i32 0, i32 3
  %22 = load i8*, i8** %aend25, align 8
  %cmp26 = icmp ult i8* %20, %22
  br i1 %cmp26, label %if.then.28, label %if.else.33

if.then.28:                                       ; preds = %if.then.21
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf29 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 21
  %aptr30 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf29, i32 0, i32 2
  %24 = load i8*, i8** %aptr30, align 8
  %incdec.ptr31 = getelementptr inbounds i8, i8* %24, i32 1
  store i8* %incdec.ptr31, i8** %aptr30, align 8
  %25 = load i8, i8* %24, align 1
  %conv32 = zext i8 %25 to i32
  store i32 %conv32, i32* %extra_type, align 4
  br label %if.end.34

if.else.33:                                       ; preds = %if.then.21
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.34:                                        ; preds = %if.then.28
  br label %if.end.42

if.else.35:                                       ; preds = %sw.bb.18
  %26 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio36 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %26, i32 0, i32 23
  %27 = load %struct._PerlIO**, %struct._PerlIO*** %fio36, align 8
  %call37 = call i32 @PerlIO_getc(%struct._PerlIO** %27)
  store i32 %call37, i32* %extra_type, align 4
  %cmp38 = icmp eq i32 %call37, -1
  br i1 %cmp38, label %if.then.40, label %if.end.41

if.then.40:                                       ; preds = %if.else.35
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.41:                                        ; preds = %if.else.35
  br label %if.end.42

if.end.42:                                        ; preds = %if.end.41, %if.end.34
  %28 = load i32, i32* %extra_type, align 4
  switch i32 %28, label %sw.default [
    i32 4, label %sw.bb.43
    i32 5, label %sw.bb.45
    i32 6, label %sw.bb.47
  ]

sw.bb.43:                                         ; preds = %if.end.42
  %call44 = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call44, %struct.sv** %sv, align 8
  store i8 113, i8* %mtype, align 1
  br label %sw.epilog

sw.bb.45:                                         ; preds = %if.end.42
  %call46 = call %struct.av* @Perl_newAV()
  %29 = bitcast %struct.av* %call46 to %struct.sv*
  store %struct.sv* %29, %struct.sv** %sv, align 8
  store i8 80, i8* %mtype, align 1
  br label %sw.epilog

sw.bb.47:                                         ; preds = %if.end.42
  %call48 = call %struct.hv* @Perl_newHV()
  %30 = bitcast %struct.hv* %call48 to %struct.sv*
  store %struct.sv* %30, %struct.sv** %sv, align 8
  store i8 80, i8* %mtype, align 1
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.42
  %31 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call49 = call %struct.sv* @retrieve_other(%struct.stcxt* %31, i8* null)
  store %struct.sv* %call49, %struct.sv** %retval
  br label %return

sw.epilog:                                        ; preds = %sw.bb.47, %sw.bb.45, %sw.bb.43
  br label %sw.epilog.52

sw.default.50:                                    ; preds = %if.end.11
  %32 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call51 = call %struct.sv* @retrieve_other(%struct.stcxt* %32, i8* null)
  store %struct.sv* %call51, %struct.sv** %retval
  br label %return

sw.epilog.52:                                     ; preds = %sw.epilog, %sw.bb.16, %sw.bb.14, %sw.bb
  %33 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool53 = icmp ne %struct.sv* %33, null
  br i1 %tobool53, label %if.end.55, label %if.then.54

if.then.54:                                       ; preds = %sw.epilog.52
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.55:                                        ; preds = %sw.epilog.52
  %34 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %34, i32 0, i32 4
  %35 = load %struct.av*, %struct.av** %aseen, align 8
  %36 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %36, i32 0, i32 9
  %37 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %37, 1
  store i64 %inc, i64* %tagnum, align 8
  %conv56 = trunc i64 %37 to i32
  %38 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %38, %struct.sv** @PL_Sv, align 8
  %39 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool57 = icmp ne %struct.sv* %39, null
  br i1 %tobool57, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end.55
  %40 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %40, i32 0, i32 1
  %41 = load i32, i32* %sv_refcnt, align 4
  %inc58 = add i32 %41, 1
  store i32 %inc58, i32* %sv_refcnt, align 4
  %tobool59 = icmp ne i32 %inc58, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.55
  %42 = phi i1 [ false, %if.end.55 ], [ %tobool59, %land.rhs ]
  %land.ext = zext i1 %42 to i32
  %43 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call60 = call %struct.sv** @Perl_av_store(%struct.av* %35, i32 %conv56, %struct.sv* %43)
  %cmp61 = icmp eq %struct.sv** %call60, null
  br i1 %cmp61, label %if.then.63, label %if.end.64

if.then.63:                                       ; preds = %land.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.64:                                        ; preds = %land.end
  br label %while.cond

while.cond:                                       ; preds = %if.end.94, %if.end.64
  %44 = load i32, i32* %flags, align 4
  %and65 = and i32 %44, 64
  %tobool66 = icmp ne i32 %and65, 0
  br i1 %tobool66, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %45 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call67 = call %struct.sv* @retrieve(%struct.stcxt* %45, i8* null)
  store %struct.sv* %call67, %struct.sv** %rv, align 8
  %46 = load %struct.sv*, %struct.sv** %rv, align 8
  %tobool68 = icmp ne %struct.sv* %46, null
  br i1 %tobool68, label %if.end.70, label %if.then.69

if.then.69:                                       ; preds = %while.body
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.70:                                        ; preds = %while.body
  %47 = load %struct.sv*, %struct.sv** %rv, align 8
  call void @Perl_sv_free(%struct.sv* %47)
  %48 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio71 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %48, i32 0, i32 23
  %49 = load %struct._PerlIO**, %struct._PerlIO*** %fio71, align 8
  %tobool72 = icmp ne %struct._PerlIO** %49, null
  br i1 %tobool72, label %if.else.87, label %if.then.73

if.then.73:                                       ; preds = %if.end.70
  %50 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf74 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %50, i32 0, i32 21
  %aptr75 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf74, i32 0, i32 2
  %51 = load i8*, i8** %aptr75, align 8
  %52 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf76 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %52, i32 0, i32 21
  %aend77 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf76, i32 0, i32 3
  %53 = load i8*, i8** %aend77, align 8
  %cmp78 = icmp ult i8* %51, %53
  br i1 %cmp78, label %if.then.80, label %if.else.85

if.then.80:                                       ; preds = %if.then.73
  %54 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf81 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %54, i32 0, i32 21
  %aptr82 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf81, i32 0, i32 2
  %55 = load i8*, i8** %aptr82, align 8
  %incdec.ptr83 = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %incdec.ptr83, i8** %aptr82, align 8
  %56 = load i8, i8* %55, align 1
  %conv84 = zext i8 %56 to i32
  store i32 %conv84, i32* %flags, align 4
  br label %if.end.86

if.else.85:                                       ; preds = %if.then.73
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.86:                                        ; preds = %if.then.80
  br label %if.end.94

if.else.87:                                       ; preds = %if.end.70
  %57 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio88 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %57, i32 0, i32 23
  %58 = load %struct._PerlIO**, %struct._PerlIO*** %fio88, align 8
  %call89 = call i32 @PerlIO_getc(%struct._PerlIO** %58)
  store i32 %call89, i32* %flags, align 4
  %cmp90 = icmp eq i32 %call89, -1
  br i1 %cmp90, label %if.then.92, label %if.end.93

if.then.92:                                       ; preds = %if.else.87
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.93:                                        ; preds = %if.else.87
  br label %if.end.94

if.end.94:                                        ; preds = %if.end.93, %if.end.86
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %59 = load i32, i32* %flags, align 4
  %and95 = and i32 %59, 32
  %tobool96 = icmp ne i32 %and95, 0
  br i1 %tobool96, label %if.then.97, label %if.else.175

if.then.97:                                       ; preds = %while.end
  %60 = load i32, i32* %flags, align 4
  %and98 = and i32 %60, 4
  %tobool99 = icmp ne i32 %and98, 0
  br i1 %tobool99, label %if.then.100, label %if.else.144

if.then.100:                                      ; preds = %if.then.97
  %61 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio101 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %61, i32 0, i32 23
  %62 = load %struct._PerlIO**, %struct._PerlIO*** %fio101, align 8
  %tobool102 = icmp ne %struct._PerlIO** %62, null
  br i1 %tobool102, label %if.else.130, label %if.then.103

if.then.103:                                      ; preds = %if.then.100
  %63 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf104 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %63, i32 0, i32 21
  %aptr105 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf104, i32 0, i32 2
  %64 = load i8*, i8** %aptr105, align 8
  %add.ptr = getelementptr inbounds i8, i8* %64, i64 4
  %65 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf106 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %65, i32 0, i32 21
  %aend107 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf106, i32 0, i32 3
  %66 = load i8*, i8** %aend107, align 8
  %cmp108 = icmp ule i8* %add.ptr, %66
  br i1 %cmp108, label %if.then.110, label %if.else.128

if.then.110:                                      ; preds = %if.then.103
  %67 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf111 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %67, i32 0, i32 21
  %aptr112 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf111, i32 0, i32 2
  %68 = load i8*, i8** %aptr112, align 8
  %69 = ptrtoint i8* %68 to i64
  %70 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf113 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %70, i32 0, i32 21
  %aptr114 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf113, i32 0, i32 2
  %71 = load i8*, i8** %aptr114, align 8
  %72 = ptrtoint i8* %71 to i64
  %and115 = and i64 %72, -4
  %cmp116 = icmp eq i64 %69, %and115
  br i1 %cmp116, label %if.then.118, label %if.else.121

if.then.118:                                      ; preds = %if.then.110
  %73 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf119 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %73, i32 0, i32 21
  %aptr120 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf119, i32 0, i32 2
  %74 = load i8*, i8** %aptr120, align 8
  %75 = bitcast i8* %74 to i32*
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %idx, align 4
  br label %if.end.124

if.else.121:                                      ; preds = %if.then.110
  %77 = bitcast i32* %idx to i8*
  %78 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf122 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %78, i32 0, i32 21
  %aptr123 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf122, i32 0, i32 2
  %79 = load i8*, i8** %aptr123, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %79, i64 4, i32 1, i1 false)
  br label %if.end.124

if.end.124:                                       ; preds = %if.else.121, %if.then.118
  %80 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf125 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %80, i32 0, i32 21
  %aptr126 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf125, i32 0, i32 2
  %81 = load i8*, i8** %aptr126, align 8
  %add.ptr127 = getelementptr inbounds i8, i8* %81, i64 4
  store i8* %add.ptr127, i8** %aptr126, align 8
  br label %if.end.129

if.else.128:                                      ; preds = %if.then.103
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.129:                                       ; preds = %if.end.124
  br label %if.end.137

if.else.130:                                      ; preds = %if.then.100
  %82 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio131 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %82, i32 0, i32 23
  %83 = load %struct._PerlIO**, %struct._PerlIO*** %fio131, align 8
  %84 = bitcast i32* %idx to i8*
  %call132 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %83, i8* %84, i64 4)
  %cmp133 = icmp ne i64 %call132, 4
  br i1 %cmp133, label %if.then.135, label %if.end.136

if.then.135:                                      ; preds = %if.else.130
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.136:                                       ; preds = %if.else.130
  br label %if.end.137

if.end.137:                                       ; preds = %if.end.136, %if.end.129
  %85 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %85, i32 0, i32 11
  %86 = load i32, i32* %netorder, align 4
  %tobool138 = icmp ne i32 %86, 0
  br i1 %tobool138, label %if.then.139, label %if.end.143

if.then.139:                                      ; preds = %if.end.137
  %87 = load i32, i32* %idx, align 4
  %conv140 = sext i32 %87 to i64
  %call141 = call i64 @Perl_my_ntohl(i64 %conv140)
  %conv142 = trunc i64 %call141 to i32
  store i32 %conv142, i32* %idx, align 4
  br label %if.end.143

if.end.143:                                       ; preds = %if.then.139, %if.end.137
  br label %if.end.169

if.else.144:                                      ; preds = %if.then.97
  %88 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio145 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %88, i32 0, i32 23
  %89 = load %struct._PerlIO**, %struct._PerlIO*** %fio145, align 8
  %tobool146 = icmp ne %struct._PerlIO** %89, null
  br i1 %tobool146, label %if.else.161, label %if.then.147

if.then.147:                                      ; preds = %if.else.144
  %90 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf148 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %90, i32 0, i32 21
  %aptr149 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf148, i32 0, i32 2
  %91 = load i8*, i8** %aptr149, align 8
  %92 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf150 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %92, i32 0, i32 21
  %aend151 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf150, i32 0, i32 3
  %93 = load i8*, i8** %aend151, align 8
  %cmp152 = icmp ult i8* %91, %93
  br i1 %cmp152, label %if.then.154, label %if.else.159

if.then.154:                                      ; preds = %if.then.147
  %94 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf155 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %94, i32 0, i32 21
  %aptr156 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf155, i32 0, i32 2
  %95 = load i8*, i8** %aptr156, align 8
  %incdec.ptr157 = getelementptr inbounds i8, i8* %95, i32 1
  store i8* %incdec.ptr157, i8** %aptr156, align 8
  %96 = load i8, i8* %95, align 1
  %conv158 = zext i8 %96 to i32
  store i32 %conv158, i32* %idx, align 4
  br label %if.end.160

if.else.159:                                      ; preds = %if.then.147
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.160:                                       ; preds = %if.then.154
  br label %if.end.168

if.else.161:                                      ; preds = %if.else.144
  %97 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio162 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %97, i32 0, i32 23
  %98 = load %struct._PerlIO**, %struct._PerlIO*** %fio162, align 8
  %call163 = call i32 @PerlIO_getc(%struct._PerlIO** %98)
  store i32 %call163, i32* %idx, align 4
  %cmp164 = icmp eq i32 %call163, -1
  br i1 %cmp164, label %if.then.166, label %if.end.167

if.then.166:                                      ; preds = %if.else.161
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.167:                                       ; preds = %if.else.161
  br label %if.end.168

if.end.168:                                       ; preds = %if.end.167, %if.end.160
  br label %if.end.169

if.end.169:                                       ; preds = %if.end.168, %if.end.143
  %99 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aclass = getelementptr inbounds %struct.stcxt, %struct.stcxt* %99, i32 0, i32 7
  %100 = load %struct.av*, %struct.av** %aclass, align 8
  %101 = load i32, i32* %idx, align 4
  %call170 = call %struct.sv** @Perl_av_fetch(%struct.av* %100, i32 %101, i32 0)
  store %struct.sv** %call170, %struct.sv*** %sva, align 8
  %102 = load %struct.sv**, %struct.sv*** %sva, align 8
  %tobool171 = icmp ne %struct.sv** %102, null
  br i1 %tobool171, label %if.end.174, label %if.then.172

if.then.172:                                      ; preds = %if.end.169
  %103 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %103, i32 0, i32 18
  store i32 1, i32* %s_dirty, align 4
  %104 = load i32, i32* %idx, align 4
  %conv173 = sext i32 %104 to i64
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.71, i32 0, i32 0), i64 %conv173)
  br label %if.end.174

if.end.174:                                       ; preds = %if.then.172, %if.end.169
  %105 = load %struct.sv**, %struct.sv*** %sva, align 8
  %106 = load %struct.sv*, %struct.sv** %105, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %106, i32 0, i32 0
  %107 = load i8*, i8** %sv_any, align 8
  %108 = bitcast i8* %107 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %108, i32 0, i32 0
  %109 = load i8*, i8** %xpv_pv, align 8
  store i8* %109, i8** %class, align 8
  br label %if.end.295

if.else.175:                                      ; preds = %while.end
  %110 = load i32, i32* %flags, align 4
  %and176 = and i32 %110, 4
  %tobool177 = icmp ne i32 %and176, 0
  br i1 %tobool177, label %if.then.178, label %if.else.224

if.then.178:                                      ; preds = %if.else.175
  %111 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio179 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %111, i32 0, i32 23
  %112 = load %struct._PerlIO**, %struct._PerlIO*** %fio179, align 8
  %tobool180 = icmp ne %struct._PerlIO** %112, null
  br i1 %tobool180, label %if.else.209, label %if.then.181

if.then.181:                                      ; preds = %if.then.178
  %113 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf182 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %113, i32 0, i32 21
  %aptr183 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf182, i32 0, i32 2
  %114 = load i8*, i8** %aptr183, align 8
  %add.ptr184 = getelementptr inbounds i8, i8* %114, i64 4
  %115 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf185 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %115, i32 0, i32 21
  %aend186 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf185, i32 0, i32 3
  %116 = load i8*, i8** %aend186, align 8
  %cmp187 = icmp ule i8* %add.ptr184, %116
  br i1 %cmp187, label %if.then.189, label %if.else.207

if.then.189:                                      ; preds = %if.then.181
  %117 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf190 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %117, i32 0, i32 21
  %aptr191 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf190, i32 0, i32 2
  %118 = load i8*, i8** %aptr191, align 8
  %119 = ptrtoint i8* %118 to i64
  %120 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf192 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %120, i32 0, i32 21
  %aptr193 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf192, i32 0, i32 2
  %121 = load i8*, i8** %aptr193, align 8
  %122 = ptrtoint i8* %121 to i64
  %and194 = and i64 %122, -4
  %cmp195 = icmp eq i64 %119, %and194
  br i1 %cmp195, label %if.then.197, label %if.else.200

if.then.197:                                      ; preds = %if.then.189
  %123 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf198 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %123, i32 0, i32 21
  %aptr199 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf198, i32 0, i32 2
  %124 = load i8*, i8** %aptr199, align 8
  %125 = bitcast i8* %124 to i32*
  %126 = load i32, i32* %125, align 4
  store i32 %126, i32* %len, align 4
  br label %if.end.203

if.else.200:                                      ; preds = %if.then.189
  %127 = bitcast i32* %len to i8*
  %128 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf201 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %128, i32 0, i32 21
  %aptr202 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf201, i32 0, i32 2
  %129 = load i8*, i8** %aptr202, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %127, i8* %129, i64 4, i32 1, i1 false)
  br label %if.end.203

if.end.203:                                       ; preds = %if.else.200, %if.then.197
  %130 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf204 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %130, i32 0, i32 21
  %aptr205 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf204, i32 0, i32 2
  %131 = load i8*, i8** %aptr205, align 8
  %add.ptr206 = getelementptr inbounds i8, i8* %131, i64 4
  store i8* %add.ptr206, i8** %aptr205, align 8
  br label %if.end.208

if.else.207:                                      ; preds = %if.then.181
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.208:                                       ; preds = %if.end.203
  br label %if.end.216

if.else.209:                                      ; preds = %if.then.178
  %132 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio210 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %132, i32 0, i32 23
  %133 = load %struct._PerlIO**, %struct._PerlIO*** %fio210, align 8
  %134 = bitcast i32* %len to i8*
  %call211 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %133, i8* %134, i64 4)
  %cmp212 = icmp ne i64 %call211, 4
  br i1 %cmp212, label %if.then.214, label %if.end.215

if.then.214:                                      ; preds = %if.else.209
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.215:                                       ; preds = %if.else.209
  br label %if.end.216

if.end.216:                                       ; preds = %if.end.215, %if.end.208
  %135 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder217 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %135, i32 0, i32 11
  %136 = load i32, i32* %netorder217, align 4
  %tobool218 = icmp ne i32 %136, 0
  br i1 %tobool218, label %if.then.219, label %if.end.223

if.then.219:                                      ; preds = %if.end.216
  %137 = load i32, i32* %len, align 4
  %conv220 = sext i32 %137 to i64
  %call221 = call i64 @Perl_my_ntohl(i64 %conv220)
  %conv222 = trunc i64 %call221 to i32
  store i32 %conv222, i32* %len, align 4
  br label %if.end.223

if.end.223:                                       ; preds = %if.then.219, %if.end.216
  br label %if.end.249

if.else.224:                                      ; preds = %if.else.175
  %138 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio225 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %138, i32 0, i32 23
  %139 = load %struct._PerlIO**, %struct._PerlIO*** %fio225, align 8
  %tobool226 = icmp ne %struct._PerlIO** %139, null
  br i1 %tobool226, label %if.else.241, label %if.then.227

if.then.227:                                      ; preds = %if.else.224
  %140 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf228 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %140, i32 0, i32 21
  %aptr229 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf228, i32 0, i32 2
  %141 = load i8*, i8** %aptr229, align 8
  %142 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf230 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %142, i32 0, i32 21
  %aend231 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf230, i32 0, i32 3
  %143 = load i8*, i8** %aend231, align 8
  %cmp232 = icmp ult i8* %141, %143
  br i1 %cmp232, label %if.then.234, label %if.else.239

if.then.234:                                      ; preds = %if.then.227
  %144 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf235 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %144, i32 0, i32 21
  %aptr236 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf235, i32 0, i32 2
  %145 = load i8*, i8** %aptr236, align 8
  %incdec.ptr237 = getelementptr inbounds i8, i8* %145, i32 1
  store i8* %incdec.ptr237, i8** %aptr236, align 8
  %146 = load i8, i8* %145, align 1
  %conv238 = zext i8 %146 to i32
  store i32 %conv238, i32* %len, align 4
  br label %if.end.240

if.else.239:                                      ; preds = %if.then.227
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.240:                                       ; preds = %if.then.234
  br label %if.end.248

if.else.241:                                      ; preds = %if.else.224
  %147 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio242 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %147, i32 0, i32 23
  %148 = load %struct._PerlIO**, %struct._PerlIO*** %fio242, align 8
  %call243 = call i32 @PerlIO_getc(%struct._PerlIO** %148)
  store i32 %call243, i32* %len, align 4
  %cmp244 = icmp eq i32 %call243, -1
  br i1 %cmp244, label %if.then.246, label %if.end.247

if.then.246:                                      ; preds = %if.else.241
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.247:                                       ; preds = %if.else.241
  br label %if.end.248

if.end.248:                                       ; preds = %if.end.247, %if.end.240
  br label %if.end.249

if.end.249:                                       ; preds = %if.end.248, %if.end.223
  %149 = load i32, i32* %len, align 4
  %cmp250 = icmp sgt i32 %149, 127
  br i1 %cmp250, label %if.then.252, label %if.end.255

if.then.252:                                      ; preds = %if.end.249
  %150 = load i32, i32* %len, align 4
  %add = add nsw i32 %150, 1
  %conv253 = sext i32 %add to i64
  %mul = mul i64 %conv253, 1
  %call254 = call i8* @Perl_safesysmalloc(i64 %mul)
  store i8* %call254, i8** %class, align 8
  br label %if.end.255

if.end.255:                                       ; preds = %if.then.252, %if.end.249
  %151 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio256 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %151, i32 0, i32 23
  %152 = load %struct._PerlIO**, %struct._PerlIO*** %fio256, align 8
  %tobool257 = icmp ne %struct._PerlIO** %152, null
  br i1 %tobool257, label %if.else.276, label %if.then.258

if.then.258:                                      ; preds = %if.end.255
  %153 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf259 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %153, i32 0, i32 21
  %aptr260 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf259, i32 0, i32 2
  %154 = load i8*, i8** %aptr260, align 8
  %155 = load i32, i32* %len, align 4
  %idx.ext = sext i32 %155 to i64
  %add.ptr261 = getelementptr inbounds i8, i8* %154, i64 %idx.ext
  %156 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf262 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %156, i32 0, i32 21
  %aend263 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf262, i32 0, i32 3
  %157 = load i8*, i8** %aend263, align 8
  %cmp264 = icmp ule i8* %add.ptr261, %157
  br i1 %cmp264, label %if.then.266, label %if.else.274

if.then.266:                                      ; preds = %if.then.258
  %158 = load i8*, i8** %class, align 8
  %159 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf267 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %159, i32 0, i32 21
  %aptr268 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf267, i32 0, i32 2
  %160 = load i8*, i8** %aptr268, align 8
  %161 = load i32, i32* %len, align 4
  %conv269 = sext i32 %161 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %158, i8* %160, i64 %conv269, i32 1, i1 false)
  %162 = load i32, i32* %len, align 4
  %163 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf270 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %163, i32 0, i32 21
  %aptr271 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf270, i32 0, i32 2
  %164 = load i8*, i8** %aptr271, align 8
  %idx.ext272 = sext i32 %162 to i64
  %add.ptr273 = getelementptr inbounds i8, i8* %164, i64 %idx.ext272
  store i8* %add.ptr273, i8** %aptr271, align 8
  br label %if.end.275

if.else.274:                                      ; preds = %if.then.258
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.275:                                       ; preds = %if.then.266
  br label %if.end.285

if.else.276:                                      ; preds = %if.end.255
  %165 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio277 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %165, i32 0, i32 23
  %166 = load %struct._PerlIO**, %struct._PerlIO*** %fio277, align 8
  %167 = load i8*, i8** %class, align 8
  %168 = load i32, i32* %len, align 4
  %conv278 = sext i32 %168 to i64
  %call279 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %166, i8* %167, i64 %conv278)
  %169 = load i32, i32* %len, align 4
  %conv280 = sext i32 %169 to i64
  %cmp281 = icmp ne i64 %call279, %conv280
  br i1 %cmp281, label %if.then.283, label %if.end.284

if.then.283:                                      ; preds = %if.else.276
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.284:                                       ; preds = %if.else.276
  br label %if.end.285

if.end.285:                                       ; preds = %if.end.284, %if.end.275
  %170 = load i32, i32* %len, align 4
  %idxprom = sext i32 %170 to i64
  %171 = load i8*, i8** %class, align 8
  %arrayidx = getelementptr inbounds i8, i8* %171, i64 %idxprom
  store i8 0, i8* %arrayidx, align 1
  %172 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aclass286 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %172, i32 0, i32 7
  %173 = load %struct.av*, %struct.av** %aclass286, align 8
  %174 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %classnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %174, i32 0, i32 10
  %175 = load i64, i64* %classnum, align 8
  %inc287 = add nsw i64 %175, 1
  store i64 %inc287, i64* %classnum, align 8
  %conv288 = trunc i64 %175 to i32
  %176 = load i8*, i8** %class, align 8
  %177 = load i32, i32* %len, align 4
  %conv289 = sext i32 %177 to i64
  %call290 = call %struct.sv* @Perl_newSVpvn(i8* %176, i64 %conv289)
  %call291 = call %struct.sv** @Perl_av_store(%struct.av* %173, i32 %conv288, %struct.sv* %call290)
  %tobool292 = icmp ne %struct.sv** %call291, null
  br i1 %tobool292, label %if.end.294, label %if.then.293

if.then.293:                                      ; preds = %if.end.285
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.294:                                       ; preds = %if.end.285
  br label %if.end.295

if.end.295:                                       ; preds = %if.end.294, %if.end.174
  %178 = load i32, i32* %flags, align 4
  %and296 = and i32 %178, 8
  %tobool297 = icmp ne i32 %and296, 0
  br i1 %tobool297, label %if.then.298, label %if.else.344

if.then.298:                                      ; preds = %if.end.295
  %179 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio299 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %179, i32 0, i32 23
  %180 = load %struct._PerlIO**, %struct._PerlIO*** %fio299, align 8
  %tobool300 = icmp ne %struct._PerlIO** %180, null
  br i1 %tobool300, label %if.else.329, label %if.then.301

if.then.301:                                      ; preds = %if.then.298
  %181 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf302 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %181, i32 0, i32 21
  %aptr303 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf302, i32 0, i32 2
  %182 = load i8*, i8** %aptr303, align 8
  %add.ptr304 = getelementptr inbounds i8, i8* %182, i64 4
  %183 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf305 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %183, i32 0, i32 21
  %aend306 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf305, i32 0, i32 3
  %184 = load i8*, i8** %aend306, align 8
  %cmp307 = icmp ule i8* %add.ptr304, %184
  br i1 %cmp307, label %if.then.309, label %if.else.327

if.then.309:                                      ; preds = %if.then.301
  %185 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf310 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %185, i32 0, i32 21
  %aptr311 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf310, i32 0, i32 2
  %186 = load i8*, i8** %aptr311, align 8
  %187 = ptrtoint i8* %186 to i64
  %188 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf312 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %188, i32 0, i32 21
  %aptr313 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf312, i32 0, i32 2
  %189 = load i8*, i8** %aptr313, align 8
  %190 = ptrtoint i8* %189 to i64
  %and314 = and i64 %190, -4
  %cmp315 = icmp eq i64 %187, %and314
  br i1 %cmp315, label %if.then.317, label %if.else.320

if.then.317:                                      ; preds = %if.then.309
  %191 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf318 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %191, i32 0, i32 21
  %aptr319 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf318, i32 0, i32 2
  %192 = load i8*, i8** %aptr319, align 8
  %193 = bitcast i8* %192 to i32*
  %194 = load i32, i32* %193, align 4
  store i32 %194, i32* %len2, align 4
  br label %if.end.323

if.else.320:                                      ; preds = %if.then.309
  %195 = bitcast i32* %len2 to i8*
  %196 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf321 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %196, i32 0, i32 21
  %aptr322 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf321, i32 0, i32 2
  %197 = load i8*, i8** %aptr322, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %195, i8* %197, i64 4, i32 1, i1 false)
  br label %if.end.323

if.end.323:                                       ; preds = %if.else.320, %if.then.317
  %198 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf324 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %198, i32 0, i32 21
  %aptr325 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf324, i32 0, i32 2
  %199 = load i8*, i8** %aptr325, align 8
  %add.ptr326 = getelementptr inbounds i8, i8* %199, i64 4
  store i8* %add.ptr326, i8** %aptr325, align 8
  br label %if.end.328

if.else.327:                                      ; preds = %if.then.301
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.328:                                       ; preds = %if.end.323
  br label %if.end.336

if.else.329:                                      ; preds = %if.then.298
  %200 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio330 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %200, i32 0, i32 23
  %201 = load %struct._PerlIO**, %struct._PerlIO*** %fio330, align 8
  %202 = bitcast i32* %len2 to i8*
  %call331 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %201, i8* %202, i64 4)
  %cmp332 = icmp ne i64 %call331, 4
  br i1 %cmp332, label %if.then.334, label %if.end.335

if.then.334:                                      ; preds = %if.else.329
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.335:                                       ; preds = %if.else.329
  br label %if.end.336

if.end.336:                                       ; preds = %if.end.335, %if.end.328
  %203 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder337 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %203, i32 0, i32 11
  %204 = load i32, i32* %netorder337, align 4
  %tobool338 = icmp ne i32 %204, 0
  br i1 %tobool338, label %if.then.339, label %if.end.343

if.then.339:                                      ; preds = %if.end.336
  %205 = load i32, i32* %len2, align 4
  %conv340 = sext i32 %205 to i64
  %call341 = call i64 @Perl_my_ntohl(i64 %conv340)
  %conv342 = trunc i64 %call341 to i32
  store i32 %conv342, i32* %len2, align 4
  br label %if.end.343

if.end.343:                                       ; preds = %if.then.339, %if.end.336
  br label %if.end.369

if.else.344:                                      ; preds = %if.end.295
  %206 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio345 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %206, i32 0, i32 23
  %207 = load %struct._PerlIO**, %struct._PerlIO*** %fio345, align 8
  %tobool346 = icmp ne %struct._PerlIO** %207, null
  br i1 %tobool346, label %if.else.361, label %if.then.347

if.then.347:                                      ; preds = %if.else.344
  %208 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf348 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %208, i32 0, i32 21
  %aptr349 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf348, i32 0, i32 2
  %209 = load i8*, i8** %aptr349, align 8
  %210 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf350 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %210, i32 0, i32 21
  %aend351 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf350, i32 0, i32 3
  %211 = load i8*, i8** %aend351, align 8
  %cmp352 = icmp ult i8* %209, %211
  br i1 %cmp352, label %if.then.354, label %if.else.359

if.then.354:                                      ; preds = %if.then.347
  %212 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf355 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %212, i32 0, i32 21
  %aptr356 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf355, i32 0, i32 2
  %213 = load i8*, i8** %aptr356, align 8
  %incdec.ptr357 = getelementptr inbounds i8, i8* %213, i32 1
  store i8* %incdec.ptr357, i8** %aptr356, align 8
  %214 = load i8, i8* %213, align 1
  %conv358 = zext i8 %214 to i32
  store i32 %conv358, i32* %len2, align 4
  br label %if.end.360

if.else.359:                                      ; preds = %if.then.347
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.360:                                       ; preds = %if.then.354
  br label %if.end.368

if.else.361:                                      ; preds = %if.else.344
  %215 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio362 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %215, i32 0, i32 23
  %216 = load %struct._PerlIO**, %struct._PerlIO*** %fio362, align 8
  %call363 = call i32 @PerlIO_getc(%struct._PerlIO** %216)
  store i32 %call363, i32* %len2, align 4
  %cmp364 = icmp eq i32 %call363, -1
  br i1 %cmp364, label %if.then.366, label %if.end.367

if.then.366:                                      ; preds = %if.else.361
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.367:                                       ; preds = %if.else.361
  br label %if.end.368

if.end.368:                                       ; preds = %if.end.367, %if.end.360
  br label %if.end.369

if.end.369:                                       ; preds = %if.end.368, %if.end.343
  %217 = load i32, i32* %len2, align 4
  %conv370 = sext i32 %217 to i64
  %call371 = call %struct.sv* @Perl_newSV(i64 %conv370)
  store %struct.sv* %call371, %struct.sv** %frozen, align 8
  %218 = load i32, i32* %len2, align 4
  %tobool372 = icmp ne i32 %218, 0
  br i1 %tobool372, label %if.then.373, label %if.end.416

if.then.373:                                      ; preds = %if.end.369
  %219 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio374 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %219, i32 0, i32 23
  %220 = load %struct._PerlIO**, %struct._PerlIO*** %fio374, align 8
  %tobool375 = icmp ne %struct._PerlIO** %220, null
  br i1 %tobool375, label %if.else.397, label %if.then.376

if.then.376:                                      ; preds = %if.then.373
  %221 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf377 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %221, i32 0, i32 21
  %aptr378 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf377, i32 0, i32 2
  %222 = load i8*, i8** %aptr378, align 8
  %223 = load i32, i32* %len2, align 4
  %idx.ext379 = sext i32 %223 to i64
  %add.ptr380 = getelementptr inbounds i8, i8* %222, i64 %idx.ext379
  %224 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf381 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %224, i32 0, i32 21
  %aend382 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf381, i32 0, i32 3
  %225 = load i8*, i8** %aend382, align 8
  %cmp383 = icmp ule i8* %add.ptr380, %225
  br i1 %cmp383, label %if.then.385, label %if.else.395

if.then.385:                                      ; preds = %if.then.376
  %226 = load %struct.sv*, %struct.sv** %frozen, align 8
  %sv_any386 = getelementptr inbounds %struct.sv, %struct.sv* %226, i32 0, i32 0
  %227 = load i8*, i8** %sv_any386, align 8
  %228 = bitcast i8* %227 to %struct.xpv*
  %xpv_pv387 = getelementptr inbounds %struct.xpv, %struct.xpv* %228, i32 0, i32 0
  %229 = load i8*, i8** %xpv_pv387, align 8
  %230 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf388 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %230, i32 0, i32 21
  %aptr389 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf388, i32 0, i32 2
  %231 = load i8*, i8** %aptr389, align 8
  %232 = load i32, i32* %len2, align 4
  %conv390 = sext i32 %232 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %229, i8* %231, i64 %conv390, i32 1, i1 false)
  %233 = load i32, i32* %len2, align 4
  %234 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf391 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %234, i32 0, i32 21
  %aptr392 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf391, i32 0, i32 2
  %235 = load i8*, i8** %aptr392, align 8
  %idx.ext393 = sext i32 %233 to i64
  %add.ptr394 = getelementptr inbounds i8, i8* %235, i64 %idx.ext393
  store i8* %add.ptr394, i8** %aptr392, align 8
  br label %if.end.396

if.else.395:                                      ; preds = %if.then.376
  %236 = load %struct.sv*, %struct.sv** %frozen, align 8
  call void @Perl_sv_free(%struct.sv* %236)
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.396:                                       ; preds = %if.then.385
  br label %if.end.408

if.else.397:                                      ; preds = %if.then.373
  %237 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio398 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %237, i32 0, i32 23
  %238 = load %struct._PerlIO**, %struct._PerlIO*** %fio398, align 8
  %239 = load %struct.sv*, %struct.sv** %frozen, align 8
  %sv_any399 = getelementptr inbounds %struct.sv, %struct.sv* %239, i32 0, i32 0
  %240 = load i8*, i8** %sv_any399, align 8
  %241 = bitcast i8* %240 to %struct.xpv*
  %xpv_pv400 = getelementptr inbounds %struct.xpv, %struct.xpv* %241, i32 0, i32 0
  %242 = load i8*, i8** %xpv_pv400, align 8
  %243 = load i32, i32* %len2, align 4
  %conv401 = sext i32 %243 to i64
  %call402 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %238, i8* %242, i64 %conv401)
  %244 = load i32, i32* %len2, align 4
  %conv403 = sext i32 %244 to i64
  %cmp404 = icmp ne i64 %call402, %conv403
  br i1 %cmp404, label %if.then.406, label %if.end.407

if.then.406:                                      ; preds = %if.else.397
  %245 = load %struct.sv*, %struct.sv** %frozen, align 8
  call void @Perl_sv_free(%struct.sv* %245)
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.407:                                       ; preds = %if.else.397
  br label %if.end.408

if.end.408:                                       ; preds = %if.end.407, %if.end.396
  %246 = load i32, i32* %len2, align 4
  %conv409 = sext i32 %246 to i64
  %247 = load %struct.sv*, %struct.sv** %frozen, align 8
  %sv_any410 = getelementptr inbounds %struct.sv, %struct.sv* %247, i32 0, i32 0
  %248 = load i8*, i8** %sv_any410, align 8
  %249 = bitcast i8* %248 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %249, i32 0, i32 1
  store i64 %conv409, i64* %xpv_cur, align 8
  store i64 %conv409, i64* %tmp
  %250 = load i64, i64* %tmp
  %251 = load %struct.sv*, %struct.sv** %frozen, align 8
  %sv_any411 = getelementptr inbounds %struct.sv, %struct.sv* %251, i32 0, i32 0
  %252 = load i8*, i8** %sv_any411, align 8
  %253 = bitcast i8* %252 to %struct.xpv*
  %xpv_pv412 = getelementptr inbounds %struct.xpv, %struct.xpv* %253, i32 0, i32 0
  %254 = load i8*, i8** %xpv_pv412, align 8
  %255 = load %struct.sv*, %struct.sv** %frozen, align 8
  %sv_any413 = getelementptr inbounds %struct.sv, %struct.sv* %255, i32 0, i32 0
  %256 = load i8*, i8** %sv_any413, align 8
  %257 = bitcast i8* %256 to %struct.xpv*
  %xpv_cur414 = getelementptr inbounds %struct.xpv, %struct.xpv* %257, i32 0, i32 1
  %258 = load i64, i64* %xpv_cur414, align 8
  %add.ptr415 = getelementptr inbounds i8, i8* %254, i64 %258
  store i8 0, i8* %add.ptr415, align 1
  br label %if.end.416

if.end.416:                                       ; preds = %if.end.408, %if.end.369
  %259 = load %struct.sv*, %struct.sv** %frozen, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %259, i32 0, i32 2
  %260 = load i32, i32* %sv_flags, align 4
  %and417 = and i32 %260, 1223753727
  store i32 %and417, i32* %sv_flags, align 4
  %261 = load %struct.sv*, %struct.sv** %frozen, align 8
  %sv_flags418 = getelementptr inbounds %struct.sv, %struct.sv* %261, i32 0, i32 2
  %262 = load i32, i32* %sv_flags418, align 4
  %or = or i32 %262, 67371008
  store i32 %or, i32* %sv_flags418, align 4
  %263 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_tainted = getelementptr inbounds %struct.stcxt, %struct.stcxt* %263, i32 0, i32 12
  %264 = load i32, i32* %s_tainted, align 4
  %tobool419 = icmp ne i32 %264, 0
  br i1 %tobool419, label %if.then.420, label %if.end.430

if.then.420:                                      ; preds = %if.end.416
  %265 = load i8, i8* @PL_tainting, align 1
  %tobool421 = icmp ne i8 %265, 0
  br i1 %tobool421, label %if.then.422, label %if.end.429

if.then.422:                                      ; preds = %if.then.420
  %266 = load i8, i8* @PL_tainted, align 1
  %tobool423 = icmp ne i8 %266, 0
  br i1 %tobool423, label %if.then.424, label %if.end.428

if.then.424:                                      ; preds = %if.then.422
  %267 = load i8, i8* @PL_tainting, align 1
  %tobool425 = icmp ne i8 %267, 0
  br i1 %tobool425, label %if.then.426, label %if.end.427

if.then.426:                                      ; preds = %if.then.424
  %268 = load %struct.sv*, %struct.sv** %frozen, align 8
  call void @Perl_sv_taint(%struct.sv* %268)
  br label %if.end.427

if.end.427:                                       ; preds = %if.then.426, %if.then.424
  br label %if.end.428

if.end.428:                                       ; preds = %if.end.427, %if.then.422
  br label %if.end.429

if.end.429:                                       ; preds = %if.end.428, %if.then.420
  br label %if.end.430

if.end.430:                                       ; preds = %if.end.429, %if.end.416
  %269 = load i32, i32* %flags, align 4
  %and431 = and i32 %269, 128
  %tobool432 = icmp ne i32 %and431, 0
  br i1 %tobool432, label %if.then.433, label %if.end.515

if.then.433:                                      ; preds = %if.end.430
  %270 = load i32, i32* %flags, align 4
  %and434 = and i32 %270, 16
  %tobool435 = icmp ne i32 %and434, 0
  br i1 %tobool435, label %if.then.436, label %if.else.482

if.then.436:                                      ; preds = %if.then.433
  %271 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio437 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %271, i32 0, i32 23
  %272 = load %struct._PerlIO**, %struct._PerlIO*** %fio437, align 8
  %tobool438 = icmp ne %struct._PerlIO** %272, null
  br i1 %tobool438, label %if.else.467, label %if.then.439

if.then.439:                                      ; preds = %if.then.436
  %273 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf440 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %273, i32 0, i32 21
  %aptr441 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf440, i32 0, i32 2
  %274 = load i8*, i8** %aptr441, align 8
  %add.ptr442 = getelementptr inbounds i8, i8* %274, i64 4
  %275 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf443 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %275, i32 0, i32 21
  %aend444 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf443, i32 0, i32 3
  %276 = load i8*, i8** %aend444, align 8
  %cmp445 = icmp ule i8* %add.ptr442, %276
  br i1 %cmp445, label %if.then.447, label %if.else.465

if.then.447:                                      ; preds = %if.then.439
  %277 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf448 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %277, i32 0, i32 21
  %aptr449 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf448, i32 0, i32 2
  %278 = load i8*, i8** %aptr449, align 8
  %279 = ptrtoint i8* %278 to i64
  %280 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf450 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %280, i32 0, i32 21
  %aptr451 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf450, i32 0, i32 2
  %281 = load i8*, i8** %aptr451, align 8
  %282 = ptrtoint i8* %281 to i64
  %and452 = and i64 %282, -4
  %cmp453 = icmp eq i64 %279, %and452
  br i1 %cmp453, label %if.then.455, label %if.else.458

if.then.455:                                      ; preds = %if.then.447
  %283 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf456 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %283, i32 0, i32 21
  %aptr457 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf456, i32 0, i32 2
  %284 = load i8*, i8** %aptr457, align 8
  %285 = bitcast i8* %284 to i32*
  %286 = load i32, i32* %285, align 4
  store i32 %286, i32* %len3, align 4
  br label %if.end.461

if.else.458:                                      ; preds = %if.then.447
  %287 = bitcast i32* %len3 to i8*
  %288 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf459 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %288, i32 0, i32 21
  %aptr460 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf459, i32 0, i32 2
  %289 = load i8*, i8** %aptr460, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %287, i8* %289, i64 4, i32 1, i1 false)
  br label %if.end.461

if.end.461:                                       ; preds = %if.else.458, %if.then.455
  %290 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf462 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %290, i32 0, i32 21
  %aptr463 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf462, i32 0, i32 2
  %291 = load i8*, i8** %aptr463, align 8
  %add.ptr464 = getelementptr inbounds i8, i8* %291, i64 4
  store i8* %add.ptr464, i8** %aptr463, align 8
  br label %if.end.466

if.else.465:                                      ; preds = %if.then.439
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.466:                                       ; preds = %if.end.461
  br label %if.end.474

if.else.467:                                      ; preds = %if.then.436
  %292 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio468 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %292, i32 0, i32 23
  %293 = load %struct._PerlIO**, %struct._PerlIO*** %fio468, align 8
  %294 = bitcast i32* %len3 to i8*
  %call469 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %293, i8* %294, i64 4)
  %cmp470 = icmp ne i64 %call469, 4
  br i1 %cmp470, label %if.then.472, label %if.end.473

if.then.472:                                      ; preds = %if.else.467
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.473:                                       ; preds = %if.else.467
  br label %if.end.474

if.end.474:                                       ; preds = %if.end.473, %if.end.466
  %295 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder475 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %295, i32 0, i32 11
  %296 = load i32, i32* %netorder475, align 4
  %tobool476 = icmp ne i32 %296, 0
  br i1 %tobool476, label %if.then.477, label %if.end.481

if.then.477:                                      ; preds = %if.end.474
  %297 = load i32, i32* %len3, align 4
  %conv478 = sext i32 %297 to i64
  %call479 = call i64 @Perl_my_ntohl(i64 %conv478)
  %conv480 = trunc i64 %call479 to i32
  store i32 %conv480, i32* %len3, align 4
  br label %if.end.481

if.end.481:                                       ; preds = %if.then.477, %if.end.474
  br label %if.end.507

if.else.482:                                      ; preds = %if.then.433
  %298 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio483 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %298, i32 0, i32 23
  %299 = load %struct._PerlIO**, %struct._PerlIO*** %fio483, align 8
  %tobool484 = icmp ne %struct._PerlIO** %299, null
  br i1 %tobool484, label %if.else.499, label %if.then.485

if.then.485:                                      ; preds = %if.else.482
  %300 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf486 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %300, i32 0, i32 21
  %aptr487 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf486, i32 0, i32 2
  %301 = load i8*, i8** %aptr487, align 8
  %302 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf488 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %302, i32 0, i32 21
  %aend489 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf488, i32 0, i32 3
  %303 = load i8*, i8** %aend489, align 8
  %cmp490 = icmp ult i8* %301, %303
  br i1 %cmp490, label %if.then.492, label %if.else.497

if.then.492:                                      ; preds = %if.then.485
  %304 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf493 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %304, i32 0, i32 21
  %aptr494 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf493, i32 0, i32 2
  %305 = load i8*, i8** %aptr494, align 8
  %incdec.ptr495 = getelementptr inbounds i8, i8* %305, i32 1
  store i8* %incdec.ptr495, i8** %aptr494, align 8
  %306 = load i8, i8* %305, align 1
  %conv496 = zext i8 %306 to i32
  store i32 %conv496, i32* %len3, align 4
  br label %if.end.498

if.else.497:                                      ; preds = %if.then.485
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.498:                                       ; preds = %if.then.492
  br label %if.end.506

if.else.499:                                      ; preds = %if.else.482
  %307 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio500 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %307, i32 0, i32 23
  %308 = load %struct._PerlIO**, %struct._PerlIO*** %fio500, align 8
  %call501 = call i32 @PerlIO_getc(%struct._PerlIO** %308)
  store i32 %call501, i32* %len3, align 4
  %cmp502 = icmp eq i32 %call501, -1
  br i1 %cmp502, label %if.then.504, label %if.end.505

if.then.504:                                      ; preds = %if.else.499
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.505:                                       ; preds = %if.else.499
  br label %if.end.506

if.end.506:                                       ; preds = %if.end.505, %if.end.498
  br label %if.end.507

if.end.507:                                       ; preds = %if.end.506, %if.end.481
  %309 = load i32, i32* %len3, align 4
  %tobool508 = icmp ne i32 %309, 0
  br i1 %tobool508, label %if.then.509, label %if.end.514

if.then.509:                                      ; preds = %if.end.507
  %call510 = call %struct.av* @Perl_newAV()
  store %struct.av* %call510, %struct.av** %av, align 8
  %310 = load %struct.av*, %struct.av** %av, align 8
  %311 = load i32, i32* %len3, align 4
  %add511 = add nsw i32 %311, 1
  call void @Perl_av_extend(%struct.av* %310, i32 %add511)
  %312 = load i32, i32* %len3, align 4
  %conv512 = sext i32 %312 to i64
  %313 = load %struct.av*, %struct.av** %av, align 8
  %sv_any513 = getelementptr inbounds %struct.av, %struct.av* %313, i32 0, i32 0
  %314 = load %struct.xpvav*, %struct.xpvav** %sv_any513, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %314, i32 0, i32 1
  store i64 %conv512, i64* %xav_fill, align 8
  br label %if.end.514

if.end.514:                                       ; preds = %if.then.509, %if.end.507
  br label %if.end.515

if.end.515:                                       ; preds = %if.end.514, %if.end.430
  %315 = load %struct.av*, %struct.av** %av, align 8
  %tobool516 = icmp ne %struct.av* %315, null
  br i1 %tobool516, label %if.then.517, label %if.end.590

if.then.517:                                      ; preds = %if.end.515
  %316 = load %struct.av*, %struct.av** %av, align 8
  %sv_any519 = getelementptr inbounds %struct.av, %struct.av* %316, i32 0, i32 0
  %317 = load %struct.xpvav*, %struct.xpvav** %sv_any519, align 8
  %xav_array = getelementptr inbounds %struct.xpvav, %struct.xpvav* %317, i32 0, i32 0
  %318 = load i8*, i8** %xav_array, align 8
  %319 = bitcast i8* %318 to %struct.sv**
  store %struct.sv** %319, %struct.sv*** %ary, align 8
  store i32 1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.517
  %320 = load i32, i32* %i, align 4
  %321 = load i32, i32* %len3, align 4
  %cmp521 = icmp sle i32 %320, %321
  br i1 %cmp521, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %322 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio526 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %322, i32 0, i32 23
  %323 = load %struct._PerlIO**, %struct._PerlIO*** %fio526, align 8
  %tobool527 = icmp ne %struct._PerlIO** %323, null
  br i1 %tobool527, label %if.else.556, label %if.then.528

if.then.528:                                      ; preds = %for.body
  %324 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf529 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %324, i32 0, i32 21
  %aptr530 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf529, i32 0, i32 2
  %325 = load i8*, i8** %aptr530, align 8
  %add.ptr531 = getelementptr inbounds i8, i8* %325, i64 4
  %326 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf532 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %326, i32 0, i32 21
  %aend533 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf532, i32 0, i32 3
  %327 = load i8*, i8** %aend533, align 8
  %cmp534 = icmp ule i8* %add.ptr531, %327
  br i1 %cmp534, label %if.then.536, label %if.else.554

if.then.536:                                      ; preds = %if.then.528
  %328 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf537 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %328, i32 0, i32 21
  %aptr538 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf537, i32 0, i32 2
  %329 = load i8*, i8** %aptr538, align 8
  %330 = ptrtoint i8* %329 to i64
  %331 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf539 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %331, i32 0, i32 21
  %aptr540 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf539, i32 0, i32 2
  %332 = load i8*, i8** %aptr540, align 8
  %333 = ptrtoint i8* %332 to i64
  %and541 = and i64 %333, -4
  %cmp542 = icmp eq i64 %330, %and541
  br i1 %cmp542, label %if.then.544, label %if.else.547

if.then.544:                                      ; preds = %if.then.536
  %334 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf545 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %334, i32 0, i32 21
  %aptr546 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf545, i32 0, i32 2
  %335 = load i8*, i8** %aptr546, align 8
  %336 = bitcast i8* %335 to i32*
  %337 = load i32, i32* %336, align 4
  store i32 %337, i32* %tag, align 4
  br label %if.end.550

if.else.547:                                      ; preds = %if.then.536
  %338 = bitcast i32* %tag to i8*
  %339 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf548 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %339, i32 0, i32 21
  %aptr549 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf548, i32 0, i32 2
  %340 = load i8*, i8** %aptr549, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %338, i8* %340, i64 4, i32 1, i1 false)
  br label %if.end.550

if.end.550:                                       ; preds = %if.else.547, %if.then.544
  %341 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf551 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %341, i32 0, i32 21
  %aptr552 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf551, i32 0, i32 2
  %342 = load i8*, i8** %aptr552, align 8
  %add.ptr553 = getelementptr inbounds i8, i8* %342, i64 4
  store i8* %add.ptr553, i8** %aptr552, align 8
  br label %if.end.555

if.else.554:                                      ; preds = %if.then.528
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.555:                                       ; preds = %if.end.550
  br label %if.end.563

if.else.556:                                      ; preds = %for.body
  %343 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio557 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %343, i32 0, i32 23
  %344 = load %struct._PerlIO**, %struct._PerlIO*** %fio557, align 8
  %345 = bitcast i32* %tag to i8*
  %call558 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %344, i8* %345, i64 4)
  %cmp559 = icmp ne i64 %call558, 4
  br i1 %cmp559, label %if.then.561, label %if.end.562

if.then.561:                                      ; preds = %if.else.556
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.562:                                       ; preds = %if.else.556
  br label %if.end.563

if.end.563:                                       ; preds = %if.end.562, %if.end.555
  %346 = load i32, i32* %tag, align 4
  %conv564 = sext i32 %346 to i64
  %call565 = call i64 @Perl_my_ntohl(i64 %conv564)
  %conv566 = trunc i64 %call565 to i32
  store i32 %conv566, i32* %tag, align 4
  %347 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen567 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %347, i32 0, i32 4
  %348 = load %struct.av*, %struct.av** %aseen567, align 8
  %349 = load i32, i32* %tag, align 4
  %call568 = call %struct.sv** @Perl_av_fetch(%struct.av* %348, i32 %349, i32 0)
  store %struct.sv** %call568, %struct.sv*** %svh, align 8
  %350 = load %struct.sv**, %struct.sv*** %svh, align 8
  %tobool569 = icmp ne %struct.sv** %350, null
  br i1 %tobool569, label %if.end.579, label %if.then.570

if.then.570:                                      ; preds = %if.end.563
  %351 = load i32, i32* %tag, align 4
  %conv571 = sext i32 %351 to i64
  %352 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %where_is_undef = getelementptr inbounds %struct.stcxt, %struct.stcxt* %352, i32 0, i32 5
  %353 = load i64, i64* %where_is_undef, align 8
  %cmp572 = icmp eq i64 %conv571, %353
  br i1 %cmp572, label %if.then.574, label %if.else.575

if.then.574:                                      ; preds = %if.then.570
  store %struct.sv* @PL_sv_undef, %struct.sv** %xsv, align 8
  store %struct.sv** %xsv, %struct.sv*** %svh, align 8
  br label %if.end.578

if.else.575:                                      ; preds = %if.then.570
  %354 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty576 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %354, i32 0, i32 18
  store i32 1, i32* %s_dirty576, align 4
  %355 = load i32, i32* %tag, align 4
  %conv577 = sext i32 %355 to i64
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.72, i32 0, i32 0), i64 %conv577)
  br label %if.end.578

if.end.578:                                       ; preds = %if.else.575, %if.then.574
  br label %if.end.579

if.end.579:                                       ; preds = %if.end.578, %if.end.563
  %356 = load %struct.sv**, %struct.sv*** %svh, align 8
  %357 = load %struct.sv*, %struct.sv** %356, align 8
  store %struct.sv* %357, %struct.sv** %xsv, align 8
  %358 = load %struct.sv*, %struct.sv** %xsv, align 8
  store %struct.sv* %358, %struct.sv** @PL_Sv, align 8
  %359 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool580 = icmp ne %struct.sv* %359, null
  br i1 %tobool580, label %land.rhs.581, label %land.end.585

land.rhs.581:                                     ; preds = %if.end.579
  %360 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt582 = getelementptr inbounds %struct.sv, %struct.sv* %360, i32 0, i32 1
  %361 = load i32, i32* %sv_refcnt582, align 4
  %inc583 = add i32 %361, 1
  store i32 %inc583, i32* %sv_refcnt582, align 4
  %tobool584 = icmp ne i32 %inc583, 0
  br label %land.end.585

land.end.585:                                     ; preds = %land.rhs.581, %if.end.579
  %362 = phi i1 [ false, %if.end.579 ], [ %tobool584, %land.rhs.581 ]
  %land.ext586 = zext i1 %362 to i32
  %363 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %364 = load i32, i32* %i, align 4
  %idxprom587 = sext i32 %364 to i64
  %365 = load %struct.sv**, %struct.sv*** %ary, align 8
  %arrayidx588 = getelementptr inbounds %struct.sv*, %struct.sv** %365, i64 %idxprom587
  store %struct.sv* %363, %struct.sv** %arrayidx588, align 8
  br label %for.inc

for.inc:                                          ; preds = %land.end.585
  %366 = load i32, i32* %i, align 4
  %inc589 = add nsw i32 %366, 1
  store i32 %inc589, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.590

if.end.590:                                       ; preds = %for.end, %if.end.515
  %367 = load i8*, i8** %class, align 8
  %call593 = call %struct.hv* @Perl_gv_stashpv(i8* %367, i32 1)
  store %struct.hv* %call593, %struct.hv** %stash, align 8
  %368 = load %struct.sv*, %struct.sv** %sv, align 8
  %call594 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %368)
  store %struct.sv* %call594, %struct.sv** %Perl_ref, align 8
  %369 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %370 = load %struct.hv*, %struct.hv** %stash, align 8
  %call595 = call %struct.sv* @Perl_sv_bless(%struct.sv* %369, %struct.hv* %370)
  %371 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any596 = getelementptr inbounds %struct.sv, %struct.sv* %371, i32 0, i32 0
  %372 = load i8*, i8** %sv_any596, align 8
  %373 = bitcast i8* %372 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %373, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %374 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %374)
  %375 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook597 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %375, i32 0, i32 8
  %376 = load %struct.hv*, %struct.hv** %hook597, align 8
  %377 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any598 = getelementptr inbounds %struct.sv, %struct.sv* %377, i32 0, i32 0
  %378 = load i8*, i8** %sv_any598, align 8
  %379 = bitcast i8* %378 to %struct.xpvmg*
  %xmg_stash = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %379, i32 0, i32 6
  %380 = load %struct.hv*, %struct.hv** %xmg_stash, align 8
  %call599 = call %struct.sv* @pkg_can(%struct.hv* %376, %struct.hv* %380, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.73, i32 0, i32 0))
  store %struct.sv* %call599, %struct.sv** %hook, align 8
  %381 = load %struct.sv*, %struct.sv** %hook, align 8
  %tobool600 = icmp ne %struct.sv* %381, null
  br i1 %tobool600, label %if.end.616, label %if.then.601

if.then.601:                                      ; preds = %if.end.590
  %call603 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.74, i32 0, i32 0), i64 8)
  store %struct.sv* %call603, %struct.sv** %psv, align 8
  %382 = load %struct.sv*, %struct.sv** %psv, align 8
  %383 = load i8*, i8** %class, align 8
  call void @Perl_sv_catpv(%struct.sv* %382, i8* %383)
  %384 = load %struct.sv*, %struct.sv** %psv, align 8
  %call604 = call i32 @Perl_eval_sv(%struct.sv* %384, i32 2)
  %385 = load %struct.sv*, %struct.sv** %psv, align 8
  call void @Perl_sv_free(%struct.sv* %385)
  %386 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook605 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %386, i32 0, i32 8
  %387 = load %struct.hv*, %struct.hv** %hook605, align 8
  %388 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any606 = getelementptr inbounds %struct.sv, %struct.sv* %388, i32 0, i32 0
  %389 = load i8*, i8** %sv_any606, align 8
  %390 = bitcast i8* %389 to %struct.xpvmg*
  %xmg_stash607 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %390, i32 0, i32 6
  %391 = load %struct.hv*, %struct.hv** %xmg_stash607, align 8
  call void @pkg_uncache(%struct.hv* %387, %struct.hv* %391, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.73, i32 0, i32 0))
  %392 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %hook608 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %392, i32 0, i32 8
  %393 = load %struct.hv*, %struct.hv** %hook608, align 8
  %394 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any609 = getelementptr inbounds %struct.sv, %struct.sv* %394, i32 0, i32 0
  %395 = load i8*, i8** %sv_any609, align 8
  %396 = bitcast i8* %395 to %struct.xpvmg*
  %xmg_stash610 = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %396, i32 0, i32 6
  %397 = load %struct.hv*, %struct.hv** %xmg_stash610, align 8
  %call611 = call %struct.sv* @pkg_can(%struct.hv* %393, %struct.hv* %397, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.73, i32 0, i32 0))
  store %struct.sv* %call611, %struct.sv** %hook, align 8
  %398 = load %struct.sv*, %struct.sv** %hook, align 8
  %tobool612 = icmp ne %struct.sv* %398, null
  br i1 %tobool612, label %if.end.615, label %if.then.613

if.then.613:                                      ; preds = %if.then.601
  %399 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty614 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %399, i32 0, i32 18
  store i32 1, i32* %s_dirty614, align 4
  %400 = load i8*, i8** %class, align 8
  %401 = load i8*, i8** %class, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.75, i32 0, i32 0), i8* %400, i8* %401)
  br label %if.end.615

if.end.615:                                       ; preds = %if.then.613, %if.then.601
  br label %if.end.616

if.end.616:                                       ; preds = %if.end.615, %if.end.590
  %402 = load %struct.av*, %struct.av** %av, align 8
  %tobool617 = icmp ne %struct.av* %402, null
  br i1 %tobool617, label %if.end.622, label %if.then.618

if.then.618:                                      ; preds = %if.end.616
  %call619 = call %struct.av* @Perl_newAV()
  store %struct.av* %call619, %struct.av** %av, align 8
  %403 = load %struct.av*, %struct.av** %av, align 8
  call void @Perl_av_extend(%struct.av* %403, i32 1)
  %404 = load %struct.av*, %struct.av** %av, align 8
  %sv_any620 = getelementptr inbounds %struct.av, %struct.av* %404, i32 0, i32 0
  %405 = load %struct.xpvav*, %struct.xpvav** %sv_any620, align 8
  %xav_fill621 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %405, i32 0, i32 1
  store i64 0, i64* %xav_fill621, align 8
  br label %if.end.622

if.end.622:                                       ; preds = %if.then.618, %if.end.616
  %406 = load %struct.sv*, %struct.sv** %frozen, align 8
  store %struct.sv* %406, %struct.sv** @PL_Sv, align 8
  %407 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool623 = icmp ne %struct.sv* %407, null
  br i1 %tobool623, label %land.rhs.624, label %land.end.628

land.rhs.624:                                     ; preds = %if.end.622
  %408 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt625 = getelementptr inbounds %struct.sv, %struct.sv* %408, i32 0, i32 1
  %409 = load i32, i32* %sv_refcnt625, align 4
  %inc626 = add i32 %409, 1
  store i32 %inc626, i32* %sv_refcnt625, align 4
  %tobool627 = icmp ne i32 %inc626, 0
  br label %land.end.628

land.end.628:                                     ; preds = %land.rhs.624, %if.end.622
  %410 = phi i1 [ false, %if.end.622 ], [ %tobool627, %land.rhs.624 ]
  %land.ext629 = zext i1 %410 to i32
  %411 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %412 = load %struct.av*, %struct.av** %av, align 8
  %sv_any630 = getelementptr inbounds %struct.av, %struct.av* %412, i32 0, i32 0
  %413 = load %struct.xpvav*, %struct.xpvav** %sv_any630, align 8
  %xav_array631 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %413, i32 0, i32 0
  %414 = load i8*, i8** %xav_array631, align 8
  %415 = bitcast i8* %414 to %struct.sv**
  %arrayidx632 = getelementptr inbounds %struct.sv*, %struct.sv** %415, i64 0
  store %struct.sv* %411, %struct.sv** %arrayidx632, align 8
  %416 = load %struct.sv*, %struct.sv** %sv, align 8
  %call633 = call %struct.sv* @Perl_newRV(%struct.sv* %416)
  store %struct.sv* %call633, %struct.sv** %rv, align 8
  %417 = load %struct.sv*, %struct.sv** %rv, align 8
  %418 = load %struct.sv*, %struct.sv** %hook, align 8
  %419 = load i32, i32* %clone, align 4
  %420 = load %struct.av*, %struct.av** %av, align 8
  %call634 = call %struct.sv* @scalar_call(%struct.sv* %417, %struct.sv* %418, i32 %419, %struct.av* %420, i32 2)
  %421 = load %struct.sv*, %struct.sv** %rv, align 8
  call void @Perl_sv_free(%struct.sv* %421)
  %422 = load %struct.sv*, %struct.sv** %frozen, align 8
  call void @Perl_sv_free(%struct.sv* %422)
  %423 = load %struct.av*, %struct.av** %av, align 8
  call void @Perl_av_undef(%struct.av* %423)
  %424 = load %struct.av*, %struct.av** %av, align 8
  %425 = bitcast %struct.av* %424 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %425)
  %426 = load i32, i32* %flags, align 4
  %and635 = and i32 %426, 32
  %tobool636 = icmp ne i32 %and635, 0
  br i1 %tobool636, label %if.end.641, label %land.lhs.true

land.lhs.true:                                    ; preds = %land.end.628
  %427 = load i8*, i8** %class, align 8
  %arraydecay637 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i32 0, i32 0
  %cmp638 = icmp ne i8* %427, %arraydecay637
  br i1 %cmp638, label %if.then.640, label %if.end.641

if.then.640:                                      ; preds = %land.lhs.true
  %428 = load i8*, i8** %class, align 8
  call void @Perl_safesysfree(i8* %428)
  br label %if.end.641

if.end.641:                                       ; preds = %if.then.640, %land.lhs.true, %land.end.628
  %429 = load i32, i32* %extra_type, align 4
  %tobool642 = icmp ne i32 %429, 0
  br i1 %tobool642, label %if.end.644, label %if.then.643

if.then.643:                                      ; preds = %if.end.641
  %430 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %430, %struct.sv** %retval
  br label %return

if.end.644:                                       ; preds = %if.end.641
  %431 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call645 = call %struct.sv* @retrieve(%struct.stcxt* %431, i8* null)
  store %struct.sv* %call645, %struct.sv** %rv, align 8
  %432 = load i32, i32* %extra_type, align 4
  switch i32 %432, label %sw.default.656 [
    i32 4, label %sw.bb.646
    i32 5, label %sw.bb.648
    i32 6, label %sw.bb.654
  ]

sw.bb.646:                                        ; preds = %if.end.644
  %433 = load %struct.sv*, %struct.sv** %sv, align 8
  %call647 = call signext i8 @Perl_sv_upgrade(%struct.sv* %433, i32 7)
  br label %sw.epilog.658

sw.bb.648:                                        ; preds = %if.end.644
  %434 = load %struct.sv*, %struct.sv** %sv, align 8
  %call649 = call signext i8 @Perl_sv_upgrade(%struct.sv* %434, i32 10)
  %435 = load %struct.sv*, %struct.sv** %sv, align 8
  %436 = bitcast %struct.sv* %435 to %struct.av*
  %sv_any650 = getelementptr inbounds %struct.av, %struct.av* %436, i32 0, i32 0
  %437 = load %struct.xpvav*, %struct.xpvav** %sv_any650, align 8
  %xav_flags = getelementptr inbounds %struct.xpvav, %struct.xpvav* %437, i32 0, i32 9
  %438 = load i8, i8* %xav_flags, align 1
  %conv651 = zext i8 %438 to i32
  %and652 = and i32 %conv651, -2
  %conv653 = trunc i32 %and652 to i8
  store i8 %conv653, i8* %xav_flags, align 1
  br label %sw.epilog.658

sw.bb.654:                                        ; preds = %if.end.644
  %439 = load %struct.sv*, %struct.sv** %sv, align 8
  %call655 = call signext i8 @Perl_sv_upgrade(%struct.sv* %439, i32 11)
  br label %sw.epilog.658

sw.default.656:                                   ; preds = %if.end.644
  %440 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty657 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %440, i32 0, i32 18
  store i32 1, i32* %s_dirty657, align 4
  %441 = load i32, i32* %extra_type, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.76, i32 0, i32 0), i32 %441)
  br label %sw.epilog.658

sw.epilog.658:                                    ; preds = %sw.default.656, %sw.bb.654, %sw.bb.648, %sw.bb.646
  %442 = load %struct.sv*, %struct.sv** %sv, align 8
  %443 = load %struct.sv*, %struct.sv** %rv, align 8
  %444 = load i8, i8* %mtype, align 1
  %conv659 = sext i8 %444 to i32
  call void @Perl_sv_magic(%struct.sv* %442, %struct.sv* %443, i32 %conv659, i8* null, i32 0)
  %445 = load %struct.sv*, %struct.sv** %rv, align 8
  call void @Perl_sv_free(%struct.sv* %445)
  %446 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %446, %struct.sv** %retval
  br label %return

return:                                           ; preds = %sw.epilog.658, %if.then.643, %if.then.561, %if.else.554, %if.then.504, %if.else.497, %if.then.472, %if.else.465, %if.then.406, %if.else.395, %if.then.366, %if.else.359, %if.then.334, %if.else.327, %if.then.293, %if.then.283, %if.else.274, %if.then.246, %if.else.239, %if.then.214, %if.else.207, %if.then.166, %if.else.159, %if.then.135, %if.else.128, %if.then.92, %if.else.85, %if.then.69, %if.then.63, %if.then.54, %sw.default.50, %sw.default, %if.then.40, %if.else.33, %if.then.9, %if.else
  %447 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %447
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_overloaded(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %rv = alloca %struct.sv*, align 8
  %sv = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %Perl_ref = alloca %struct.sv*, align 8
  %stash10 = alloca %struct.hv*, align 8
  %psv = alloca %struct.sv*, align 8
  %Perl_package = alloca i8*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %call = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call, %struct.sv** %rv, align 8
  %0 = load %struct.sv*, %struct.sv** %rv, align 8
  %tobool = icmp ne %struct.sv* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 4
  %2 = load %struct.av*, %struct.av** %aseen, align 8
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 9
  %4 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %4, 1
  store i64 %inc, i64* %tagnum, align 8
  %conv = trunc i64 %4 to i32
  %5 = load %struct.sv*, %struct.sv** %rv, align 8
  store %struct.sv* %5, %struct.sv** @PL_Sv, align 8
  %6 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool1 = icmp ne %struct.sv* %6, null
  br i1 %tobool1, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end
  %7 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %7, i32 0, i32 1
  %8 = load i32, i32* %sv_refcnt, align 4
  %inc2 = add i32 %8, 1
  store i32 %inc2, i32* %sv_refcnt, align 4
  %tobool3 = icmp ne i32 %inc2, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %9 = phi i1 [ false, %if.end ], [ %tobool3, %land.rhs ]
  %land.ext = zext i1 %9 to i32
  %10 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call4 = call %struct.sv** @Perl_av_store(%struct.av* %2, i32 %conv, %struct.sv* %10)
  %cmp = icmp eq %struct.sv** %call4, null
  br i1 %cmp, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %land.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.7:                                         ; preds = %land.end
  %11 = load i8*, i8** %cname.addr, align 8
  %tobool8 = icmp ne i8* %11, null
  br i1 %tobool8, label %if.then.9, label %if.end.14

if.then.9:                                        ; preds = %if.end.7
  %12 = load i8*, i8** %cname.addr, align 8
  %call11 = call %struct.hv* @Perl_gv_stashpv(i8* %12, i32 1)
  store %struct.hv* %call11, %struct.hv** %stash10, align 8
  %13 = load %struct.sv*, %struct.sv** %rv, align 8
  %call12 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %13)
  store %struct.sv* %call12, %struct.sv** %Perl_ref, align 8
  %14 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %15 = load %struct.hv*, %struct.hv** %stash10, align 8
  %call13 = call %struct.sv* @Perl_sv_bless(%struct.sv* %14, %struct.hv* %15)
  %16 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 0
  %17 = load i8*, i8** %sv_any, align 8
  %18 = bitcast i8* %17 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %18, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %19 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %19)
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.9, %if.end.7
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call15 = call %struct.sv* @retrieve(%struct.stcxt* %20, i8* null)
  store %struct.sv* %call15, %struct.sv** %sv, align 8
  %21 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool16 = icmp ne %struct.sv* %21, null
  br i1 %tobool16, label %if.end.18, label %if.then.17

if.then.17:                                       ; preds = %if.end.14
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.18:                                        ; preds = %if.end.14
  %22 = load %struct.sv*, %struct.sv** %rv, align 8
  %call19 = call signext i8 @Perl_sv_upgrade(%struct.sv* %22, i32 3)
  %23 = load %struct.sv*, %struct.sv** %sv, align 8
  %24 = load %struct.sv*, %struct.sv** %rv, align 8
  %sv_any20 = getelementptr inbounds %struct.sv, %struct.sv* %24, i32 0, i32 0
  %25 = load i8*, i8** %sv_any20, align 8
  %26 = bitcast i8* %25 to %struct.xrv*
  %xrv_rv21 = getelementptr inbounds %struct.xrv, %struct.xrv* %26, i32 0, i32 0
  store %struct.sv* %23, %struct.sv** %xrv_rv21, align 8
  %27 = load %struct.sv*, %struct.sv** %rv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %27, i32 0, i32 2
  %28 = load i32, i32* %sv_flags, align 4
  %or = or i32 %28, 524288
  store i32 %or, i32* %sv_flags, align 4
  %29 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags22 = getelementptr inbounds %struct.sv, %struct.sv* %29, i32 0, i32 2
  %30 = load i32, i32* %sv_flags22, align 4
  %and = and i32 %30, 255
  %tobool23 = icmp ne i32 %and, 0
  br i1 %tobool23, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.18
  %31 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any24 = getelementptr inbounds %struct.sv, %struct.sv* %31, i32 0, i32 0
  %32 = load i8*, i8** %sv_any24, align 8
  %33 = bitcast i8* %32 to %struct.xpvmg*
  %xmg_stash = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %33, i32 0, i32 6
  %34 = load %struct.hv*, %struct.hv** %xmg_stash, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end.18
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hv* [ %34, %cond.true ], [ null, %cond.false ]
  store %struct.hv* %cond, %struct.hv** %stash, align 8
  %35 = load %struct.hv*, %struct.hv** %stash, align 8
  %tobool25 = icmp ne %struct.hv* %35, null
  br i1 %tobool25, label %if.end.28, label %if.then.26

if.then.26:                                       ; preds = %cond.end
  %36 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %36, i32 0, i32 18
  store i32 1, i32* %s_dirty, align 4
  %37 = load %struct.sv*, %struct.sv** %sv, align 8
  %call27 = call i8* @Perl_sv_reftype(%struct.sv* %37, i32 0)
  %38 = load %struct.sv*, %struct.sv** %sv, align 8
  %39 = ptrtoint %struct.sv* %38 to i64
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.77, i32 0, i32 0), i8* %call27, i64 %39)
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.26, %cond.end
  %40 = load i64, i64* @PL_amagic_generation, align 8
  %tobool29 = icmp ne i64 %40, 0
  br i1 %tobool29, label %land.lhs.true, label %if.then.33

land.lhs.true:                                    ; preds = %if.end.28
  %41 = load %struct.hv*, %struct.hv** %stash, align 8
  %call30 = call signext i8 @Perl_Gv_AMupdate(%struct.hv* %41)
  %conv31 = sext i8 %call30 to i32
  %tobool32 = icmp ne i32 %conv31, 0
  br i1 %tobool32, label %if.end.46, label %if.then.33

if.then.33:                                       ; preds = %land.lhs.true, %if.end.28
  %call34 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.74, i32 0, i32 0), i64 8)
  store %struct.sv* %call34, %struct.sv** %psv, align 8
  %42 = load %struct.hv*, %struct.hv** %stash, align 8
  %sv_any35 = getelementptr inbounds %struct.hv, %struct.hv* %42, i32 0, i32 0
  %43 = load %struct.xpvhv*, %struct.xpvhv** %sv_any35, align 8
  %xhv_name = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %43, i32 0, i32 10
  %44 = load i8*, i8** %xhv_name, align 8
  store i8* %44, i8** %Perl_package, align 8
  %45 = load %struct.sv*, %struct.sv** %psv, align 8
  %46 = load i8*, i8** %Perl_package, align 8
  call void @Perl_sv_catpv(%struct.sv* %45, i8* %46)
  %47 = load %struct.sv*, %struct.sv** %psv, align 8
  %call36 = call i32 @Perl_eval_sv(%struct.sv* %47, i32 2)
  %48 = load %struct.sv*, %struct.sv** %psv, align 8
  call void @Perl_sv_free(%struct.sv* %48)
  %49 = load i64, i64* @PL_amagic_generation, align 8
  %tobool37 = icmp ne i64 %49, 0
  br i1 %tobool37, label %land.lhs.true.38, label %if.then.42

land.lhs.true.38:                                 ; preds = %if.then.33
  %50 = load %struct.hv*, %struct.hv** %stash, align 8
  %call39 = call signext i8 @Perl_Gv_AMupdate(%struct.hv* %50)
  %conv40 = sext i8 %call39 to i32
  %tobool41 = icmp ne i32 %conv40, 0
  br i1 %tobool41, label %if.end.45, label %if.then.42

if.then.42:                                       ; preds = %land.lhs.true.38, %if.then.33
  %51 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty43 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %51, i32 0, i32 18
  store i32 1, i32* %s_dirty43, align 4
  %52 = load %struct.sv*, %struct.sv** %sv, align 8
  %call44 = call i8* @Perl_sv_reftype(%struct.sv* %52, i32 0)
  %53 = load %struct.sv*, %struct.sv** %sv, align 8
  %54 = ptrtoint %struct.sv* %53 to i64
  %55 = load i8*, i8** %Perl_package, align 8
  %56 = load i8*, i8** %Perl_package, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.78, i32 0, i32 0), i8* %call44, i64 %54, i8* %55, i8* %56)
  br label %if.end.45

if.end.45:                                        ; preds = %if.then.42, %land.lhs.true.38
  br label %if.end.46

if.end.46:                                        ; preds = %if.end.45, %land.lhs.true
  %57 = load %struct.sv*, %struct.sv** %rv, align 8
  %sv_flags47 = getelementptr inbounds %struct.sv, %struct.sv* %57, i32 0, i32 2
  %58 = load i32, i32* %sv_flags47, align 4
  %or48 = or i32 %58, 268435456
  store i32 %or48, i32* %sv_flags47, align 4
  %59 = load %struct.sv*, %struct.sv** %rv, align 8
  store %struct.sv* %59, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.46, %if.then.17, %if.then.6, %if.then
  %60 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %60
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_tied_key(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %tv = alloca %struct.sv*, align 8
  %sv = alloca %struct.sv*, align 8
  %key = alloca %struct.sv*, align 8
  %Perl_ref = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %call = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call, %struct.sv** %tv, align 8
  %0 = load %struct.sv*, %struct.sv** %tv, align 8
  %tobool = icmp ne %struct.sv* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 4
  %2 = load %struct.av*, %struct.av** %aseen, align 8
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 9
  %4 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %4, 1
  store i64 %inc, i64* %tagnum, align 8
  %conv = trunc i64 %4 to i32
  %5 = load %struct.sv*, %struct.sv** %tv, align 8
  store %struct.sv* %5, %struct.sv** @PL_Sv, align 8
  %6 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool1 = icmp ne %struct.sv* %6, null
  br i1 %tobool1, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end
  %7 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %7, i32 0, i32 1
  %8 = load i32, i32* %sv_refcnt, align 4
  %inc2 = add i32 %8, 1
  store i32 %inc2, i32* %sv_refcnt, align 4
  %tobool3 = icmp ne i32 %inc2, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %9 = phi i1 [ false, %if.end ], [ %tobool3, %land.rhs ]
  %land.ext = zext i1 %9 to i32
  %10 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call4 = call %struct.sv** @Perl_av_store(%struct.av* %2, i32 %conv, %struct.sv* %10)
  %cmp = icmp eq %struct.sv** %call4, null
  br i1 %cmp, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %land.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.7:                                         ; preds = %land.end
  %11 = load i8*, i8** %cname.addr, align 8
  %tobool8 = icmp ne i8* %11, null
  br i1 %tobool8, label %if.then.9, label %if.end.13

if.then.9:                                        ; preds = %if.end.7
  %12 = load i8*, i8** %cname.addr, align 8
  %call10 = call %struct.hv* @Perl_gv_stashpv(i8* %12, i32 1)
  store %struct.hv* %call10, %struct.hv** %stash, align 8
  %13 = load %struct.sv*, %struct.sv** %tv, align 8
  %call11 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %13)
  store %struct.sv* %call11, %struct.sv** %Perl_ref, align 8
  %14 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %15 = load %struct.hv*, %struct.hv** %stash, align 8
  %call12 = call %struct.sv* @Perl_sv_bless(%struct.sv* %14, %struct.hv* %15)
  %16 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 0
  %17 = load i8*, i8** %sv_any, align 8
  %18 = bitcast i8* %17 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %18, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %19 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %19)
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.9, %if.end.7
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call14 = call %struct.sv* @retrieve(%struct.stcxt* %20, i8* null)
  store %struct.sv* %call14, %struct.sv** %sv, align 8
  %21 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool15 = icmp ne %struct.sv* %21, null
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.end.13
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.17:                                        ; preds = %if.end.13
  %22 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call18 = call %struct.sv* @retrieve(%struct.stcxt* %22, i8* null)
  store %struct.sv* %call18, %struct.sv** %key, align 8
  %23 = load %struct.sv*, %struct.sv** %key, align 8
  %tobool19 = icmp ne %struct.sv* %23, null
  br i1 %tobool19, label %if.end.21, label %if.then.20

if.then.20:                                       ; preds = %if.end.17
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.21:                                        ; preds = %if.end.17
  %24 = load %struct.sv*, %struct.sv** %tv, align 8
  %call22 = call signext i8 @Perl_sv_upgrade(%struct.sv* %24, i32 7)
  %25 = load %struct.sv*, %struct.sv** %tv, align 8
  %26 = load %struct.sv*, %struct.sv** %sv, align 8
  %27 = load %struct.sv*, %struct.sv** %key, align 8
  %28 = bitcast %struct.sv* %27 to i8*
  call void @Perl_sv_magic(%struct.sv* %25, %struct.sv* %26, i32 112, i8* %28, i32 -2)
  %29 = load %struct.sv*, %struct.sv** %key, align 8
  call void @Perl_sv_free(%struct.sv* %29)
  %30 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_free(%struct.sv* %30)
  %31 = load %struct.sv*, %struct.sv** %tv, align 8
  store %struct.sv* %31, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.21, %if.then.20, %if.then.16, %if.then.6, %if.then
  %32 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %32
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_tied_idx(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %tv = alloca %struct.sv*, align 8
  %sv = alloca %struct.sv*, align 8
  %idx = alloca i32, align 4
  %Perl_ref = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %call = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call, %struct.sv** %tv, align 8
  %0 = load %struct.sv*, %struct.sv** %tv, align 8
  %tobool = icmp ne %struct.sv* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 4
  %2 = load %struct.av*, %struct.av** %aseen, align 8
  %3 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %3, i32 0, i32 9
  %4 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %4, 1
  store i64 %inc, i64* %tagnum, align 8
  %conv = trunc i64 %4 to i32
  %5 = load %struct.sv*, %struct.sv** %tv, align 8
  store %struct.sv* %5, %struct.sv** @PL_Sv, align 8
  %6 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool1 = icmp ne %struct.sv* %6, null
  br i1 %tobool1, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end
  %7 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %7, i32 0, i32 1
  %8 = load i32, i32* %sv_refcnt, align 4
  %inc2 = add i32 %8, 1
  store i32 %inc2, i32* %sv_refcnt, align 4
  %tobool3 = icmp ne i32 %inc2, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %9 = phi i1 [ false, %if.end ], [ %tobool3, %land.rhs ]
  %land.ext = zext i1 %9 to i32
  %10 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call4 = call %struct.sv** @Perl_av_store(%struct.av* %2, i32 %conv, %struct.sv* %10)
  %cmp = icmp eq %struct.sv** %call4, null
  br i1 %cmp, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %land.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.7:                                         ; preds = %land.end
  %11 = load i8*, i8** %cname.addr, align 8
  %tobool8 = icmp ne i8* %11, null
  br i1 %tobool8, label %if.then.9, label %if.end.13

if.then.9:                                        ; preds = %if.end.7
  %12 = load i8*, i8** %cname.addr, align 8
  %call10 = call %struct.hv* @Perl_gv_stashpv(i8* %12, i32 1)
  store %struct.hv* %call10, %struct.hv** %stash, align 8
  %13 = load %struct.sv*, %struct.sv** %tv, align 8
  %call11 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %13)
  store %struct.sv* %call11, %struct.sv** %Perl_ref, align 8
  %14 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %15 = load %struct.hv*, %struct.hv** %stash, align 8
  %call12 = call %struct.sv* @Perl_sv_bless(%struct.sv* %14, %struct.hv* %15)
  %16 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 0
  %17 = load i8*, i8** %sv_any, align 8
  %18 = bitcast i8* %17 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %18, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %19 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %19)
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.9, %if.end.7
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call14 = call %struct.sv* @retrieve(%struct.stcxt* %20, i8* null)
  store %struct.sv* %call14, %struct.sv** %sv, align 8
  %21 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool15 = icmp ne %struct.sv* %21, null
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.end.13
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.17:                                        ; preds = %if.end.13
  %22 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %22, i32 0, i32 23
  %23 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool18 = icmp ne %struct._PerlIO** %23, null
  br i1 %tobool18, label %if.else.41, label %if.then.19

if.then.19:                                       ; preds = %if.end.17
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %25 = load i8*, i8** %aptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 4
  %26 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf20 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %26, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf20, i32 0, i32 3
  %27 = load i8*, i8** %aend, align 8
  %cmp21 = icmp ule i8* %add.ptr, %27
  br i1 %cmp21, label %if.then.23, label %if.else.39

if.then.23:                                       ; preds = %if.then.19
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf24 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 21
  %aptr25 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf24, i32 0, i32 2
  %29 = load i8*, i8** %aptr25, align 8
  %30 = ptrtoint i8* %29 to i64
  %31 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf26 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %31, i32 0, i32 21
  %aptr27 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf26, i32 0, i32 2
  %32 = load i8*, i8** %aptr27, align 8
  %33 = ptrtoint i8* %32 to i64
  %and = and i64 %33, -4
  %cmp28 = icmp eq i64 %30, %and
  br i1 %cmp28, label %if.then.30, label %if.else

if.then.30:                                       ; preds = %if.then.23
  %34 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf31 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %34, i32 0, i32 21
  %aptr32 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf31, i32 0, i32 2
  %35 = load i8*, i8** %aptr32, align 8
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %idx, align 4
  br label %if.end.35

if.else:                                          ; preds = %if.then.23
  %38 = bitcast i32* %idx to i8*
  %39 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf33 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %39, i32 0, i32 21
  %aptr34 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf33, i32 0, i32 2
  %40 = load i8*, i8** %aptr34, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %40, i64 4, i32 1, i1 false)
  br label %if.end.35

if.end.35:                                        ; preds = %if.else, %if.then.30
  %41 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf36 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %41, i32 0, i32 21
  %aptr37 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf36, i32 0, i32 2
  %42 = load i8*, i8** %aptr37, align 8
  %add.ptr38 = getelementptr inbounds i8, i8* %42, i64 4
  store i8* %add.ptr38, i8** %aptr37, align 8
  br label %if.end.40

if.else.39:                                       ; preds = %if.then.19
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.40:                                        ; preds = %if.end.35
  br label %if.end.48

if.else.41:                                       ; preds = %if.end.17
  %43 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio42 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %43, i32 0, i32 23
  %44 = load %struct._PerlIO**, %struct._PerlIO*** %fio42, align 8
  %45 = bitcast i32* %idx to i8*
  %call43 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %44, i8* %45, i64 4)
  %cmp44 = icmp ne i64 %call43, 4
  br i1 %cmp44, label %if.then.46, label %if.end.47

if.then.46:                                       ; preds = %if.else.41
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.47:                                        ; preds = %if.else.41
  br label %if.end.48

if.end.48:                                        ; preds = %if.end.47, %if.end.40
  %46 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %46, i32 0, i32 11
  %47 = load i32, i32* %netorder, align 4
  %tobool49 = icmp ne i32 %47, 0
  br i1 %tobool49, label %if.then.50, label %if.end.54

if.then.50:                                       ; preds = %if.end.48
  %48 = load i32, i32* %idx, align 4
  %conv51 = sext i32 %48 to i64
  %call52 = call i64 @Perl_my_ntohl(i64 %conv51)
  %conv53 = trunc i64 %call52 to i32
  store i32 %conv53, i32* %idx, align 4
  br label %if.end.54

if.end.54:                                        ; preds = %if.then.50, %if.end.48
  %49 = load %struct.sv*, %struct.sv** %tv, align 8
  %call55 = call signext i8 @Perl_sv_upgrade(%struct.sv* %49, i32 7)
  %50 = load %struct.sv*, %struct.sv** %tv, align 8
  %51 = load %struct.sv*, %struct.sv** %sv, align 8
  %52 = load i32, i32* %idx, align 4
  call void @Perl_sv_magic(%struct.sv* %50, %struct.sv* %51, i32 112, i8* null, i32 %52)
  %53 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_free(%struct.sv* %53)
  %54 = load %struct.sv*, %struct.sv** %tv, align 8
  store %struct.sv* %54, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.54, %if.then.46, %if.else.39, %if.then.16, %if.then.6, %if.then
  %55 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %55
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_utf8str(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %1 = load i8*, i8** %cname.addr, align 8
  %call = call %struct.sv* @retrieve_scalar(%struct.stcxt* %0, i8* %1)
  store %struct.sv* %call, %struct.sv** %sv, align 8
  %2 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool = icmp ne %struct.sv* %2, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %3, i32 0, i32 2
  %4 = load i32, i32* %sv_flags, align 4
  %or = or i32 %4, 536870912
  store i32 %or, i32* %sv_flags, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.sv*, %struct.sv** %sv, align 8
  ret %struct.sv* %5
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_lutf8str(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %1 = load i8*, i8** %cname.addr, align 8
  %call = call %struct.sv* @retrieve_lscalar(%struct.stcxt* %0, i8* %1)
  store %struct.sv* %call, %struct.sv** %sv, align 8
  %2 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool = icmp ne %struct.sv* %2, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %3, i32 0, i32 2
  %4 = load i32, i32* %sv_flags, align 4
  %or = or i32 %4, 536870912
  store i32 %or, i32* %sv_flags, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.sv*, %struct.sv** %sv, align 8
  ret %struct.sv* %5
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_flag_hash(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  %size = alloca i32, align 4
  %i = alloca i32, align 4
  %hv = alloca %struct.hv*, align 8
  %sv = alloca %struct.sv*, align 8
  %hash_flags = alloca i32, align 4
  %Perl_ref = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %flags = alloca i32, align 4
  %store_flags = alloca i32, align 4
  %keysv = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 23
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else.5, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ult i8* %3, %5
  br i1 %cmp, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.then
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 21
  %aptr4 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf3, i32 0, i32 2
  %7 = load i8*, i8** %aptr4, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %aptr4, align 8
  %8 = load i8, i8* %7, align 1
  %conv = zext i8 %8 to i32
  store i32 %conv, i32* %hash_flags, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %if.then.2
  br label %if.end.11

if.else.5:                                        ; preds = %entry
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio6 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 23
  %10 = load %struct._PerlIO**, %struct._PerlIO*** %fio6, align 8
  %call = call i32 @PerlIO_getc(%struct._PerlIO** %10)
  store i32 %call, i32* %hash_flags, align 4
  %cmp7 = icmp eq i32 %call, -1
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.else.5
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.10:                                        ; preds = %if.else.5
  br label %if.end.11

if.end.11:                                        ; preds = %if.end.10, %if.end
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio12 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 23
  %12 = load %struct._PerlIO**, %struct._PerlIO*** %fio12, align 8
  %tobool13 = icmp ne %struct._PerlIO** %12, null
  br i1 %tobool13, label %if.else.40, label %if.then.14

if.then.14:                                       ; preds = %if.end.11
  %13 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf15 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %13, i32 0, i32 21
  %aptr16 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf15, i32 0, i32 2
  %14 = load i8*, i8** %aptr16, align 8
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 4
  %15 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf17 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %15, i32 0, i32 21
  %aend18 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf17, i32 0, i32 3
  %16 = load i8*, i8** %aend18, align 8
  %cmp19 = icmp ule i8* %add.ptr, %16
  br i1 %cmp19, label %if.then.21, label %if.else.38

if.then.21:                                       ; preds = %if.then.14
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf22 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 21
  %aptr23 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf22, i32 0, i32 2
  %18 = load i8*, i8** %aptr23, align 8
  %19 = ptrtoint i8* %18 to i64
  %20 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf24 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %20, i32 0, i32 21
  %aptr25 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf24, i32 0, i32 2
  %21 = load i8*, i8** %aptr25, align 8
  %22 = ptrtoint i8* %21 to i64
  %and = and i64 %22, -4
  %cmp26 = icmp eq i64 %19, %and
  br i1 %cmp26, label %if.then.28, label %if.else.31

if.then.28:                                       ; preds = %if.then.21
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf29 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 21
  %aptr30 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf29, i32 0, i32 2
  %24 = load i8*, i8** %aptr30, align 8
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %len, align 4
  br label %if.end.34

if.else.31:                                       ; preds = %if.then.21
  %27 = bitcast i32* %len to i8*
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf32 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 21
  %aptr33 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf32, i32 0, i32 2
  %29 = load i8*, i8** %aptr33, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %29, i64 4, i32 1, i1 false)
  br label %if.end.34

if.end.34:                                        ; preds = %if.else.31, %if.then.28
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf35 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 21
  %aptr36 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf35, i32 0, i32 2
  %31 = load i8*, i8** %aptr36, align 8
  %add.ptr37 = getelementptr inbounds i8, i8* %31, i64 4
  store i8* %add.ptr37, i8** %aptr36, align 8
  br label %if.end.39

if.else.38:                                       ; preds = %if.then.14
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.39:                                        ; preds = %if.end.34
  br label %if.end.47

if.else.40:                                       ; preds = %if.end.11
  %32 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio41 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %32, i32 0, i32 23
  %33 = load %struct._PerlIO**, %struct._PerlIO*** %fio41, align 8
  %34 = bitcast i32* %len to i8*
  %call42 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %33, i8* %34, i64 4)
  %cmp43 = icmp ne i64 %call42, 4
  br i1 %cmp43, label %if.then.45, label %if.end.46

if.then.45:                                       ; preds = %if.else.40
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.46:                                        ; preds = %if.else.40
  br label %if.end.47

if.end.47:                                        ; preds = %if.end.46, %if.end.39
  %35 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %35, i32 0, i32 11
  %36 = load i32, i32* %netorder, align 4
  %tobool48 = icmp ne i32 %36, 0
  br i1 %tobool48, label %if.then.49, label %if.end.53

if.then.49:                                       ; preds = %if.end.47
  %37 = load i32, i32* %len, align 4
  %conv50 = sext i32 %37 to i64
  %call51 = call i64 @Perl_my_ntohl(i64 %conv50)
  %conv52 = trunc i64 %call51 to i32
  store i32 %conv52, i32* %len, align 4
  br label %if.end.53

if.end.53:                                        ; preds = %if.then.49, %if.end.47
  %call54 = call %struct.hv* @Perl_newHV()
  store %struct.hv* %call54, %struct.hv** %hv, align 8
  %38 = load %struct.hv*, %struct.hv** %hv, align 8
  %tobool55 = icmp ne %struct.hv* %38, null
  br i1 %tobool55, label %if.end.57, label %if.then.56

if.then.56:                                       ; preds = %if.end.53
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.57:                                        ; preds = %if.end.53
  %39 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %39, i32 0, i32 4
  %40 = load %struct.av*, %struct.av** %aseen, align 8
  %41 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %41, i32 0, i32 9
  %42 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %42, 1
  store i64 %inc, i64* %tagnum, align 8
  %conv58 = trunc i64 %42 to i32
  %43 = load %struct.hv*, %struct.hv** %hv, align 8
  %44 = bitcast %struct.hv* %43 to %struct.sv*
  store %struct.sv* %44, %struct.sv** @PL_Sv, align 8
  %45 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool59 = icmp ne %struct.sv* %45, null
  br i1 %tobool59, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end.57
  %46 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %46, i32 0, i32 1
  %47 = load i32, i32* %sv_refcnt, align 4
  %inc60 = add i32 %47, 1
  store i32 %inc60, i32* %sv_refcnt, align 4
  %tobool61 = icmp ne i32 %inc60, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.57
  %48 = phi i1 [ false, %if.end.57 ], [ %tobool61, %land.rhs ]
  %land.ext = zext i1 %48 to i32
  %49 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call62 = call %struct.sv** @Perl_av_store(%struct.av* %40, i32 %conv58, %struct.sv* %49)
  %cmp63 = icmp eq %struct.sv** %call62, null
  br i1 %cmp63, label %if.then.65, label %if.end.66

if.then.65:                                       ; preds = %land.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.66:                                        ; preds = %land.end
  %50 = load i8*, i8** %cname.addr, align 8
  %tobool67 = icmp ne i8* %50, null
  br i1 %tobool67, label %if.then.68, label %if.end.72

if.then.68:                                       ; preds = %if.end.66
  %51 = load i8*, i8** %cname.addr, align 8
  %call69 = call %struct.hv* @Perl_gv_stashpv(i8* %51, i32 1)
  store %struct.hv* %call69, %struct.hv** %stash, align 8
  %52 = load %struct.hv*, %struct.hv** %hv, align 8
  %53 = bitcast %struct.hv* %52 to %struct.sv*
  %call70 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %53)
  store %struct.sv* %call70, %struct.sv** %Perl_ref, align 8
  %54 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %55 = load %struct.hv*, %struct.hv** %stash, align 8
  %call71 = call %struct.sv* @Perl_sv_bless(%struct.sv* %54, %struct.hv* %55)
  %56 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %56, i32 0, i32 0
  %57 = load i8*, i8** %sv_any, align 8
  %58 = bitcast i8* %57 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %58, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %59 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %59)
  br label %if.end.72

if.end.72:                                        ; preds = %if.then.68, %if.end.66
  %60 = load i32, i32* %len, align 4
  %cmp73 = icmp eq i32 %60, 0
  br i1 %cmp73, label %if.then.75, label %if.end.76

if.then.75:                                       ; preds = %if.end.72
  %61 = load %struct.hv*, %struct.hv** %hv, align 8
  %62 = bitcast %struct.hv* %61 to %struct.sv*
  store %struct.sv* %62, %struct.sv** %retval
  br label %return

if.end.76:                                        ; preds = %if.end.72
  %63 = load %struct.hv*, %struct.hv** %hv, align 8
  %64 = load i32, i32* %len, align 4
  %conv77 = sext i32 %64 to i64
  call void @Perl_hv_ksplit(%struct.hv* %63, i64 %conv77)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.76
  %65 = load i32, i32* %i, align 4
  %66 = load i32, i32* %len, align 4
  %cmp78 = icmp slt i32 %65, %66
  br i1 %cmp78, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %store_flags, align 4
  %67 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call80 = call %struct.sv* @retrieve(%struct.stcxt* %67, i8* null)
  store %struct.sv* %call80, %struct.sv** %sv, align 8
  %68 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool81 = icmp ne %struct.sv* %68, null
  br i1 %tobool81, label %if.end.83, label %if.then.82

if.then.82:                                       ; preds = %for.body
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.83:                                        ; preds = %for.body
  %69 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio84 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %69, i32 0, i32 23
  %70 = load %struct._PerlIO**, %struct._PerlIO*** %fio84, align 8
  %tobool85 = icmp ne %struct._PerlIO** %70, null
  br i1 %tobool85, label %if.else.100, label %if.then.86

if.then.86:                                       ; preds = %if.end.83
  %71 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf87 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %71, i32 0, i32 21
  %aptr88 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf87, i32 0, i32 2
  %72 = load i8*, i8** %aptr88, align 8
  %73 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf89 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %73, i32 0, i32 21
  %aend90 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf89, i32 0, i32 3
  %74 = load i8*, i8** %aend90, align 8
  %cmp91 = icmp ult i8* %72, %74
  br i1 %cmp91, label %if.then.93, label %if.else.98

if.then.93:                                       ; preds = %if.then.86
  %75 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf94 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %75, i32 0, i32 21
  %aptr95 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf94, i32 0, i32 2
  %76 = load i8*, i8** %aptr95, align 8
  %incdec.ptr96 = getelementptr inbounds i8, i8* %76, i32 1
  store i8* %incdec.ptr96, i8** %aptr95, align 8
  %77 = load i8, i8* %76, align 1
  %conv97 = zext i8 %77 to i32
  store i32 %conv97, i32* %flags, align 4
  br label %if.end.99

if.else.98:                                       ; preds = %if.then.86
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.99:                                        ; preds = %if.then.93
  br label %if.end.107

if.else.100:                                      ; preds = %if.end.83
  %78 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio101 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %78, i32 0, i32 23
  %79 = load %struct._PerlIO**, %struct._PerlIO*** %fio101, align 8
  %call102 = call i32 @PerlIO_getc(%struct._PerlIO** %79)
  store i32 %call102, i32* %flags, align 4
  %cmp103 = icmp eq i32 %call102, -1
  br i1 %cmp103, label %if.then.105, label %if.end.106

if.then.105:                                      ; preds = %if.else.100
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.106:                                       ; preds = %if.else.100
  br label %if.end.107

if.end.107:                                       ; preds = %if.end.106, %if.end.99
  %80 = load i32, i32* %hash_flags, align 4
  %and108 = and i32 %80, 1
  %tobool109 = icmp ne i32 %and108, 0
  br i1 %tobool109, label %land.lhs.true, label %if.end.113

land.lhs.true:                                    ; preds = %if.end.107
  %81 = load i32, i32* %flags, align 4
  %and110 = and i32 %81, 4
  %tobool111 = icmp ne i32 %and110, 0
  br i1 %tobool111, label %if.then.112, label %if.end.113

if.then.112:                                      ; preds = %land.lhs.true
  %82 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %82, i32 0, i32 2
  %83 = load i32, i32* %sv_flags, align 4
  %or = or i32 %83, 8388608
  store i32 %or, i32* %sv_flags, align 4
  br label %if.end.113

if.end.113:                                       ; preds = %if.then.112, %land.lhs.true, %if.end.107
  %84 = load i32, i32* %flags, align 4
  %and114 = and i32 %84, 8
  %tobool115 = icmp ne i32 %and114, 0
  br i1 %tobool115, label %if.then.116, label %if.else.125

if.then.116:                                      ; preds = %if.end.113
  %85 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call117 = call %struct.sv* @retrieve(%struct.stcxt* %85, i8* null)
  store %struct.sv* %call117, %struct.sv** %keysv, align 8
  %86 = load %struct.sv*, %struct.sv** %keysv, align 8
  %tobool118 = icmp ne %struct.sv* %86, null
  br i1 %tobool118, label %if.end.120, label %if.then.119

if.then.119:                                      ; preds = %if.then.116
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.120:                                       ; preds = %if.then.116
  %87 = load %struct.hv*, %struct.hv** %hv, align 8
  %88 = load %struct.sv*, %struct.sv** %keysv, align 8
  %89 = load %struct.sv*, %struct.sv** %sv, align 8
  %call121 = call %struct.he* @Perl_hv_store_ent(%struct.hv* %87, %struct.sv* %88, %struct.sv* %89, i32 0)
  %tobool122 = icmp ne %struct.he* %call121, null
  br i1 %tobool122, label %if.end.124, label %if.then.123

if.then.123:                                      ; preds = %if.end.120
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.124:                                       ; preds = %if.end.120
  br label %if.end.246

if.else.125:                                      ; preds = %if.end.113
  %90 = load i32, i32* %flags, align 4
  %and126 = and i32 %90, 16
  %tobool127 = icmp ne i32 %and126, 0
  br i1 %tobool127, label %if.then.128, label %if.end.130

if.then.128:                                      ; preds = %if.else.125
  %91 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_free(%struct.sv* %91)
  store %struct.sv* @PL_sv_placeholder, %struct.sv** %sv, align 8
  %92 = load i32, i32* %store_flags, align 4
  %or129 = or i32 %92, 512
  store i32 %or129, i32* %store_flags, align 4
  br label %if.end.130

if.end.130:                                       ; preds = %if.then.128, %if.else.125
  %93 = load i32, i32* %flags, align 4
  %and131 = and i32 %93, 1
  %tobool132 = icmp ne i32 %and131, 0
  br i1 %tobool132, label %if.then.133, label %if.end.135

if.then.133:                                      ; preds = %if.end.130
  %94 = load i32, i32* %store_flags, align 4
  %or134 = or i32 %94, 1
  store i32 %or134, i32* %store_flags, align 4
  br label %if.end.135

if.end.135:                                       ; preds = %if.then.133, %if.end.130
  %95 = load i32, i32* %flags, align 4
  %and136 = and i32 %95, 2
  %tobool137 = icmp ne i32 %and136, 0
  br i1 %tobool137, label %if.then.138, label %if.end.140

if.then.138:                                      ; preds = %if.end.135
  %96 = load i32, i32* %store_flags, align 4
  %or139 = or i32 %96, 2
  store i32 %or139, i32* %store_flags, align 4
  br label %if.end.140

if.end.140:                                       ; preds = %if.then.138, %if.end.135
  %97 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio141 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %97, i32 0, i32 23
  %98 = load %struct._PerlIO**, %struct._PerlIO*** %fio141, align 8
  %tobool142 = icmp ne %struct._PerlIO** %98, null
  br i1 %tobool142, label %if.else.171, label %if.then.143

if.then.143:                                      ; preds = %if.end.140
  %99 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf144 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %99, i32 0, i32 21
  %aptr145 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf144, i32 0, i32 2
  %100 = load i8*, i8** %aptr145, align 8
  %add.ptr146 = getelementptr inbounds i8, i8* %100, i64 4
  %101 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf147 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %101, i32 0, i32 21
  %aend148 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf147, i32 0, i32 3
  %102 = load i8*, i8** %aend148, align 8
  %cmp149 = icmp ule i8* %add.ptr146, %102
  br i1 %cmp149, label %if.then.151, label %if.else.169

if.then.151:                                      ; preds = %if.then.143
  %103 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf152 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %103, i32 0, i32 21
  %aptr153 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf152, i32 0, i32 2
  %104 = load i8*, i8** %aptr153, align 8
  %105 = ptrtoint i8* %104 to i64
  %106 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf154 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %106, i32 0, i32 21
  %aptr155 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf154, i32 0, i32 2
  %107 = load i8*, i8** %aptr155, align 8
  %108 = ptrtoint i8* %107 to i64
  %and156 = and i64 %108, -4
  %cmp157 = icmp eq i64 %105, %and156
  br i1 %cmp157, label %if.then.159, label %if.else.162

if.then.159:                                      ; preds = %if.then.151
  %109 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf160 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %109, i32 0, i32 21
  %aptr161 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf160, i32 0, i32 2
  %110 = load i8*, i8** %aptr161, align 8
  %111 = bitcast i8* %110 to i32*
  %112 = load i32, i32* %111, align 4
  store i32 %112, i32* %size, align 4
  br label %if.end.165

if.else.162:                                      ; preds = %if.then.151
  %113 = bitcast i32* %size to i8*
  %114 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf163 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %114, i32 0, i32 21
  %aptr164 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf163, i32 0, i32 2
  %115 = load i8*, i8** %aptr164, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %113, i8* %115, i64 4, i32 1, i1 false)
  br label %if.end.165

if.end.165:                                       ; preds = %if.else.162, %if.then.159
  %116 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf166 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %116, i32 0, i32 21
  %aptr167 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf166, i32 0, i32 2
  %117 = load i8*, i8** %aptr167, align 8
  %add.ptr168 = getelementptr inbounds i8, i8* %117, i64 4
  store i8* %add.ptr168, i8** %aptr167, align 8
  br label %if.end.170

if.else.169:                                      ; preds = %if.then.143
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.170:                                       ; preds = %if.end.165
  br label %if.end.178

if.else.171:                                      ; preds = %if.end.140
  %118 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio172 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %118, i32 0, i32 23
  %119 = load %struct._PerlIO**, %struct._PerlIO*** %fio172, align 8
  %120 = bitcast i32* %size to i8*
  %call173 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %119, i8* %120, i64 4)
  %cmp174 = icmp ne i64 %call173, 4
  br i1 %cmp174, label %if.then.176, label %if.end.177

if.then.176:                                      ; preds = %if.else.171
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.177:                                       ; preds = %if.else.171
  br label %if.end.178

if.end.178:                                       ; preds = %if.end.177, %if.end.170
  %121 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder179 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %121, i32 0, i32 11
  %122 = load i32, i32* %netorder179, align 4
  %tobool180 = icmp ne i32 %122, 0
  br i1 %tobool180, label %if.then.181, label %if.end.185

if.then.181:                                      ; preds = %if.end.178
  %123 = load i32, i32* %size, align 4
  %conv182 = sext i32 %123 to i64
  %call183 = call i64 @Perl_my_ntohl(i64 %conv182)
  %conv184 = trunc i64 %call183 to i32
  store i32 %conv184, i32* %size, align 4
  br label %if.end.185

if.end.185:                                       ; preds = %if.then.181, %if.end.178
  %124 = load i32, i32* %size, align 4
  %conv186 = sext i32 %124 to i64
  %125 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %125, i32 0, i32 20
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf, i32 0, i32 1
  %126 = load i64, i64* %asiz, align 8
  %cmp187 = icmp uge i64 %conv186, %126
  br i1 %cmp187, label %if.then.189, label %if.end.199

if.then.189:                                      ; preds = %if.end.185
  %127 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf190 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %127, i32 0, i32 20
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf190, i32 0, i32 0
  %128 = load i8*, i8** %arena, align 8
  %129 = load i32, i32* %size, align 4
  %conv191 = sext i32 %129 to i64
  %add = add i64 %conv191, 1
  %mul = mul i64 %add, 1
  %call192 = call i8* @Perl_safesysrealloc(i8* %128, i64 %mul)
  %130 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf193 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %130, i32 0, i32 20
  %arena194 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf193, i32 0, i32 0
  store i8* %call192, i8** %arena194, align 8
  %131 = load i32, i32* %size, align 4
  %conv195 = sext i32 %131 to i64
  %add196 = add i64 %conv195, 1
  %132 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf197 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %132, i32 0, i32 20
  %asiz198 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf197, i32 0, i32 1
  store i64 %add196, i64* %asiz198, align 8
  br label %if.end.199

if.end.199:                                       ; preds = %if.then.189, %if.end.185
  %133 = load i32, i32* %size, align 4
  %tobool200 = icmp ne i32 %133, 0
  br i1 %tobool200, label %if.then.201, label %if.end.236

if.then.201:                                      ; preds = %if.end.199
  %134 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio202 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %134, i32 0, i32 23
  %135 = load %struct._PerlIO**, %struct._PerlIO*** %fio202, align 8
  %tobool203 = icmp ne %struct._PerlIO** %135, null
  br i1 %tobool203, label %if.else.224, label %if.then.204

if.then.204:                                      ; preds = %if.then.201
  %136 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf205 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %136, i32 0, i32 21
  %aptr206 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf205, i32 0, i32 2
  %137 = load i8*, i8** %aptr206, align 8
  %138 = load i32, i32* %size, align 4
  %idx.ext = sext i32 %138 to i64
  %add.ptr207 = getelementptr inbounds i8, i8* %137, i64 %idx.ext
  %139 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf208 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %139, i32 0, i32 21
  %aend209 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf208, i32 0, i32 3
  %140 = load i8*, i8** %aend209, align 8
  %cmp210 = icmp ule i8* %add.ptr207, %140
  br i1 %cmp210, label %if.then.212, label %if.else.222

if.then.212:                                      ; preds = %if.then.204
  %141 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf213 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %141, i32 0, i32 20
  %arena214 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf213, i32 0, i32 0
  %142 = load i8*, i8** %arena214, align 8
  %143 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf215 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %143, i32 0, i32 21
  %aptr216 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf215, i32 0, i32 2
  %144 = load i8*, i8** %aptr216, align 8
  %145 = load i32, i32* %size, align 4
  %conv217 = sext i32 %145 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %142, i8* %144, i64 %conv217, i32 1, i1 false)
  %146 = load i32, i32* %size, align 4
  %147 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf218 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %147, i32 0, i32 21
  %aptr219 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf218, i32 0, i32 2
  %148 = load i8*, i8** %aptr219, align 8
  %idx.ext220 = sext i32 %146 to i64
  %add.ptr221 = getelementptr inbounds i8, i8* %148, i64 %idx.ext220
  store i8* %add.ptr221, i8** %aptr219, align 8
  br label %if.end.223

if.else.222:                                      ; preds = %if.then.204
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.223:                                       ; preds = %if.then.212
  br label %if.end.235

if.else.224:                                      ; preds = %if.then.201
  %149 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio225 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %149, i32 0, i32 23
  %150 = load %struct._PerlIO**, %struct._PerlIO*** %fio225, align 8
  %151 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf226 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %151, i32 0, i32 20
  %arena227 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf226, i32 0, i32 0
  %152 = load i8*, i8** %arena227, align 8
  %153 = load i32, i32* %size, align 4
  %conv228 = sext i32 %153 to i64
  %call229 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %150, i8* %152, i64 %conv228)
  %154 = load i32, i32* %size, align 4
  %conv230 = sext i32 %154 to i64
  %cmp231 = icmp ne i64 %call229, %conv230
  br i1 %cmp231, label %if.then.233, label %if.end.234

if.then.233:                                      ; preds = %if.else.224
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.234:                                       ; preds = %if.else.224
  br label %if.end.235

if.end.235:                                       ; preds = %if.end.234, %if.end.223
  br label %if.end.236

if.end.236:                                       ; preds = %if.end.235, %if.end.199
  %155 = load i32, i32* %size, align 4
  %idxprom = sext i32 %155 to i64
  %156 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf237 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %156, i32 0, i32 20
  %arena238 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf237, i32 0, i32 0
  %157 = load i8*, i8** %arena238, align 8
  %arrayidx = getelementptr inbounds i8, i8* %157, i64 %idxprom
  store i8 0, i8* %arrayidx, align 1
  %158 = load %struct.hv*, %struct.hv** %hv, align 8
  %159 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf239 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %159, i32 0, i32 20
  %arena240 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf239, i32 0, i32 0
  %160 = load i8*, i8** %arena240, align 8
  %161 = load i32, i32* %size, align 4
  %162 = load %struct.sv*, %struct.sv** %sv, align 8
  %163 = load i32, i32* %store_flags, align 4
  %call241 = call %struct.sv** @Perl_hv_store_flags(%struct.hv* %158, i8* %160, i32 %161, %struct.sv* %162, i32 0, i32 %163)
  %cmp242 = icmp eq %struct.sv** %call241, null
  br i1 %cmp242, label %if.then.244, label %if.end.245

if.then.244:                                      ; preds = %if.end.236
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.245:                                       ; preds = %if.end.236
  br label %if.end.246

if.end.246:                                       ; preds = %if.end.245, %if.end.124
  br label %for.inc

for.inc:                                          ; preds = %if.end.246
  %164 = load i32, i32* %i, align 4
  %inc247 = add nsw i32 %164, 1
  store i32 %inc247, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %165 = load i32, i32* %hash_flags, align 4
  %and248 = and i32 %165, 1
  %tobool249 = icmp ne i32 %and248, 0
  br i1 %tobool249, label %if.then.250, label %if.end.253

if.then.250:                                      ; preds = %for.end
  %166 = load %struct.hv*, %struct.hv** %hv, align 8
  %sv_flags251 = getelementptr inbounds %struct.hv, %struct.hv* %166, i32 0, i32 2
  %167 = load i32, i32* %sv_flags251, align 4
  %or252 = or i32 %167, 8388608
  store i32 %or252, i32* %sv_flags251, align 4
  br label %if.end.253

if.end.253:                                       ; preds = %if.then.250, %for.end
  %168 = load %struct.hv*, %struct.hv** %hv, align 8
  %169 = bitcast %struct.hv* %168 to %struct.sv*
  store %struct.sv* %169, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.253, %if.then.244, %if.then.233, %if.else.222, %if.then.176, %if.else.169, %if.then.123, %if.then.119, %if.then.105, %if.else.98, %if.then.82, %if.then.75, %if.then.65, %if.then.56, %if.then.45, %if.else.38, %if.then.9, %if.else
  %170 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %170
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_code(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %sp = alloca %struct.sv**, align 8
  %type = alloca i32, align 4
  %count = alloca i32, align 4
  %tagnum = alloca i32, align 4
  %cv = alloca %struct.sv*, align 8
  %sv = alloca %struct.sv*, align 8
  %text = alloca %struct.sv*, align 8
  %sub = alloca %struct.sv*, align 8
  %Perl_ref = alloca %struct.sv*, align 8
  %stash = alloca %struct.hv*, align 8
  %errsv = alloca %struct.sv*, align 8
  %tmp = alloca i32, align 4
  %tmp223 = alloca %struct.sv*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %1, i32 0, i32 9
  %2 = load i64, i64* %tagnum1, align 8
  %conv = trunc i64 %2 to i32
  store i32 %conv, i32* %tagnum, align 4
  %call = call %struct.sv* @Perl_newSViv(i64 0)
  store %struct.sv* %call, %struct.sv** %sv, align 8
  %3 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool = icmp ne %struct.sv* %3, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 4
  %5 = load %struct.av*, %struct.av** %aseen, align 8
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 9
  %7 = load i64, i64* %tagnum2, align 8
  %inc = add nsw i64 %7, 1
  store i64 %inc, i64* %tagnum2, align 8
  %conv3 = trunc i64 %7 to i32
  %8 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %8, %struct.sv** @PL_Sv, align 8
  %9 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool4 = icmp ne %struct.sv* %9, null
  br i1 %tobool4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end
  %10 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %10, i32 0, i32 1
  %11 = load i32, i32* %sv_refcnt, align 4
  %inc5 = add i32 %11, 1
  store i32 %inc5, i32* %sv_refcnt, align 4
  %tobool6 = icmp ne i32 %inc5, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %12 = phi i1 [ false, %if.end ], [ %tobool6, %land.rhs ]
  %land.ext = zext i1 %12 to i32
  %13 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call7 = call %struct.sv** @Perl_av_store(%struct.av* %5, i32 %conv3, %struct.sv* %13)
  %cmp = icmp eq %struct.sv** %call7, null
  br i1 %cmp, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %land.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.10:                                        ; preds = %land.end
  %14 = load i8*, i8** %cname.addr, align 8
  %tobool11 = icmp ne i8* %14, null
  br i1 %tobool11, label %if.then.12, label %if.end.16

if.then.12:                                       ; preds = %if.end.10
  %15 = load i8*, i8** %cname.addr, align 8
  %call13 = call %struct.hv* @Perl_gv_stashpv(i8* %15, i32 1)
  store %struct.hv* %call13, %struct.hv** %stash, align 8
  %16 = load %struct.sv*, %struct.sv** %sv, align 8
  %call14 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %16)
  store %struct.sv* %call14, %struct.sv** %Perl_ref, align 8
  %17 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %18 = load %struct.hv*, %struct.hv** %stash, align 8
  %call15 = call %struct.sv* @Perl_sv_bless(%struct.sv* %17, %struct.hv* %18)
  %19 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %19, i32 0, i32 0
  %20 = load i8*, i8** %sv_any, align 8
  %21 = bitcast i8* %20 to %struct.xrv*
  %xrv_rv = getelementptr inbounds %struct.xrv, %struct.xrv* %21, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8
  %22 = load %struct.sv*, %struct.sv** %Perl_ref, align 8
  call void @Perl_sv_free(%struct.sv* %22)
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.12, %if.end.10
  %23 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %23, i32 0, i32 23
  %24 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool17 = icmp ne %struct._PerlIO** %24, null
  br i1 %tobool17, label %if.else.27, label %if.then.18

if.then.18:                                       ; preds = %if.end.16
  %25 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %25, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %26 = load i8*, i8** %aptr, align 8
  %27 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %27, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf19, i32 0, i32 3
  %28 = load i8*, i8** %aend, align 8
  %cmp20 = icmp ult i8* %26, %28
  br i1 %cmp20, label %if.then.22, label %if.else

if.then.22:                                       ; preds = %if.then.18
  %29 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf23 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %29, i32 0, i32 21
  %aptr24 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf23, i32 0, i32 2
  %30 = load i8*, i8** %aptr24, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr, i8** %aptr24, align 8
  %31 = load i8, i8* %30, align 1
  %conv25 = zext i8 %31 to i32
  store i32 %conv25, i32* %type, align 4
  br label %if.end.26

if.else:                                          ; preds = %if.then.18
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.26:                                        ; preds = %if.then.22
  br label %if.end.34

if.else.27:                                       ; preds = %if.end.16
  %32 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio28 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %32, i32 0, i32 23
  %33 = load %struct._PerlIO**, %struct._PerlIO*** %fio28, align 8
  %call29 = call i32 @PerlIO_getc(%struct._PerlIO** %33)
  store i32 %call29, i32* %type, align 4
  %cmp30 = icmp eq i32 %call29, -1
  br i1 %cmp30, label %if.then.32, label %if.end.33

if.then.32:                                       ; preds = %if.else.27
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.33:                                        ; preds = %if.else.27
  br label %if.end.34

if.end.34:                                        ; preds = %if.end.33, %if.end.26
  %34 = load i32, i32* %type, align 4
  switch i32 %34, label %sw.default [
    i32 10, label %sw.bb
    i32 1, label %sw.bb.36
  ]

sw.bb:                                            ; preds = %if.end.34
  %35 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %36 = load i8*, i8** %cname.addr, align 8
  %call35 = call %struct.sv* @retrieve_scalar(%struct.stcxt* %35, i8* %36)
  store %struct.sv* %call35, %struct.sv** %text, align 8
  br label %sw.epilog

sw.bb.36:                                         ; preds = %if.end.34
  %37 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %38 = load i8*, i8** %cname.addr, align 8
  %call37 = call %struct.sv* @retrieve_lscalar(%struct.stcxt* %37, i8* %38)
  store %struct.sv* %call37, %struct.sv** %text, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.34
  %39 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %39, i32 0, i32 18
  store i32 1, i32* %s_dirty, align 4
  %40 = load i32, i32* %type, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.79, i32 0, i32 0), i32 %40)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.36, %sw.bb
  %call38 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80, i32 0, i32 0), i64 4)
  store %struct.sv* %call38, %struct.sv** %sub, align 8
  %41 = load %struct.sv*, %struct.sv** %sub, align 8
  %42 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %42, i32 0, i32 2
  %43 = load i32, i32* %sv_flags, align 4
  %and = and i32 %43, 262144
  %cmp39 = icmp eq i32 %and, 262144
  br i1 %cmp39, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.epilog
  %44 = load %struct.sv*, %struct.sv** %text, align 8
  %sv_any41 = getelementptr inbounds %struct.sv, %struct.sv* %44, i32 0, i32 0
  %45 = load i8*, i8** %sv_any41, align 8
  %46 = bitcast i8* %45 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %46, i32 0, i32 0
  %47 = load i8*, i8** %xpv_pv, align 8
  br label %cond.end

cond.false:                                       ; preds = %sw.epilog
  %48 = load %struct.sv*, %struct.sv** %text, align 8
  %call42 = call i8* @Perl_sv_2pv_nolen(%struct.sv* %48)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %47, %cond.true ], [ %call42, %cond.false ]
  call void @Perl_sv_catpv(%struct.sv* %41, i8* %cond)
  %49 = load %struct.sv*, %struct.sv** %text, align 8
  call void @Perl_sv_free(%struct.sv* %49)
  %50 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval = getelementptr inbounds %struct.stcxt, %struct.stcxt* %50, i32 0, i32 15
  %51 = load %struct.sv*, %struct.sv** %eval, align 8
  %cmp43 = icmp eq %struct.sv* %51, null
  br i1 %cmp43, label %if.then.45, label %if.end.56

if.then.45:                                       ; preds = %cond.end
  %call46 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.81, i32 0, i32 0), i32 1)
  %52 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval47 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %52, i32 0, i32 15
  store %struct.sv* %call46, %struct.sv** %eval47, align 8
  %53 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval48 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %53, i32 0, i32 15
  %54 = load %struct.sv*, %struct.sv** %eval48, align 8
  store %struct.sv* %54, %struct.sv** @PL_Sv, align 8
  %55 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool49 = icmp ne %struct.sv* %55, null
  br i1 %tobool49, label %land.rhs.50, label %land.end.54

land.rhs.50:                                      ; preds = %if.then.45
  %56 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt51 = getelementptr inbounds %struct.sv, %struct.sv* %56, i32 0, i32 1
  %57 = load i32, i32* %sv_refcnt51, align 4
  %inc52 = add i32 %57, 1
  store i32 %inc52, i32* %sv_refcnt51, align 4
  %tobool53 = icmp ne i32 %inc52, 0
  br label %land.end.54

land.end.54:                                      ; preds = %land.rhs.50, %if.then.45
  %58 = phi i1 [ false, %if.then.45 ], [ %tobool53, %land.rhs.50 ]
  %land.ext55 = zext i1 %58 to i32
  %59 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  br label %if.end.56

if.end.56:                                        ; preds = %land.end.54, %cond.end
  %60 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval57 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %60, i32 0, i32 15
  %61 = load %struct.sv*, %struct.sv** %eval57, align 8
  %tobool58 = icmp ne %struct.sv* %61, null
  br i1 %tobool58, label %cond.false.60, label %cond.true.59

cond.true.59:                                     ; preds = %if.end.56
  br i1 false, label %if.end.193, label %if.then.105

cond.false.60:                                    ; preds = %if.end.56
  %62 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval61 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %62, i32 0, i32 15
  %63 = load %struct.sv*, %struct.sv** %eval61, align 8
  %sv_flags62 = getelementptr inbounds %struct.sv, %struct.sv* %63, i32 0, i32 2
  %64 = load i32, i32* %sv_flags62, align 4
  %and63 = and i32 %64, 262144
  %tobool64 = icmp ne i32 %and63, 0
  br i1 %tobool64, label %cond.true.65, label %cond.false.80

cond.true.65:                                     ; preds = %cond.false.60
  %65 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval66 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %65, i32 0, i32 15
  %66 = load %struct.sv*, %struct.sv** %eval66, align 8
  %sv_any67 = getelementptr inbounds %struct.sv, %struct.sv* %66, i32 0, i32 0
  %67 = load i8*, i8** %sv_any67, align 8
  %68 = bitcast i8* %67 to %struct.xpv*
  store %struct.xpv* %68, %struct.xpv** @PL_Xpv, align 8
  %tobool68 = icmp ne %struct.xpv* %68, null
  br i1 %tobool68, label %land.lhs.true, label %cond.false.79

land.lhs.true:                                    ; preds = %cond.true.65
  %69 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %69, i32 0, i32 1
  %70 = load i64, i64* %xpv_cur, align 8
  %cmp69 = icmp ugt i64 %70, 1
  br i1 %cmp69, label %cond.true.78, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %71 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_cur71 = getelementptr inbounds %struct.xpv, %struct.xpv* %71, i32 0, i32 1
  %72 = load i64, i64* %xpv_cur71, align 8
  %tobool72 = icmp ne i64 %72, 0
  br i1 %tobool72, label %land.lhs.true.73, label %cond.false.79

land.lhs.true.73:                                 ; preds = %lor.lhs.false
  %73 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_pv74 = getelementptr inbounds %struct.xpv, %struct.xpv* %73, i32 0, i32 0
  %74 = load i8*, i8** %xpv_pv74, align 8
  %75 = load i8, i8* %74, align 1
  %conv75 = sext i8 %75 to i32
  %cmp76 = icmp ne i32 %conv75, 48
  br i1 %cmp76, label %cond.true.78, label %cond.false.79

cond.true.78:                                     ; preds = %land.lhs.true.73, %land.lhs.true
  br i1 true, label %if.end.193, label %if.then.105

cond.false.79:                                    ; preds = %land.lhs.true.73, %lor.lhs.false, %cond.true.65
  br i1 false, label %if.end.193, label %if.then.105

cond.false.80:                                    ; preds = %cond.false.60
  %76 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval81 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %76, i32 0, i32 15
  %77 = load %struct.sv*, %struct.sv** %eval81, align 8
  %sv_flags82 = getelementptr inbounds %struct.sv, %struct.sv* %77, i32 0, i32 2
  %78 = load i32, i32* %sv_flags82, align 4
  %and83 = and i32 %78, 65536
  %tobool84 = icmp ne i32 %and83, 0
  br i1 %tobool84, label %cond.true.85, label %cond.false.90

cond.true.85:                                     ; preds = %cond.false.80
  %79 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval86 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %79, i32 0, i32 15
  %80 = load %struct.sv*, %struct.sv** %eval86, align 8
  %sv_any87 = getelementptr inbounds %struct.sv, %struct.sv* %80, i32 0, i32 0
  %81 = load i8*, i8** %sv_any87, align 8
  %82 = bitcast i8* %81 to %struct.xpviv*
  %xiv_iv = getelementptr inbounds %struct.xpviv, %struct.xpviv* %82, i32 0, i32 3
  %83 = load i64, i64* %xiv_iv, align 8
  %cmp88 = icmp ne i64 %83, 0
  br i1 %cmp88, label %if.end.193, label %if.then.105

cond.false.90:                                    ; preds = %cond.false.80
  %84 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval91 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %84, i32 0, i32 15
  %85 = load %struct.sv*, %struct.sv** %eval91, align 8
  %sv_flags92 = getelementptr inbounds %struct.sv, %struct.sv* %85, i32 0, i32 2
  %86 = load i32, i32* %sv_flags92, align 4
  %and93 = and i32 %86, 131072
  %tobool94 = icmp ne i32 %and93, 0
  br i1 %tobool94, label %cond.true.95, label %cond.false.100

cond.true.95:                                     ; preds = %cond.false.90
  %87 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval96 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %87, i32 0, i32 15
  %88 = load %struct.sv*, %struct.sv** %eval96, align 8
  %sv_any97 = getelementptr inbounds %struct.sv, %struct.sv* %88, i32 0, i32 0
  %89 = load i8*, i8** %sv_any97, align 8
  %90 = bitcast i8* %89 to %struct.xpvnv*
  %xnv_nv = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %90, i32 0, i32 4
  %91 = load double, double* %xnv_nv, align 8
  %cmp98 = fcmp une double %91, 0.000000e+00
  br i1 %cmp98, label %if.end.193, label %if.then.105

cond.false.100:                                   ; preds = %cond.false.90
  %92 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval101 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %92, i32 0, i32 15
  %93 = load %struct.sv*, %struct.sv** %eval101, align 8
  %call102 = call signext i8 @Perl_sv_2bool(%struct.sv* %93)
  %conv103 = sext i8 %call102 to i32
  %tobool104 = icmp ne i32 %conv103, 0
  br i1 %tobool104, label %if.end.193, label %if.then.105

if.then.105:                                      ; preds = %cond.false.100, %cond.true.95, %cond.true.85, %cond.false.79, %cond.true.78, %cond.true.59
  %94 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %forgive_me = getelementptr inbounds %struct.stcxt, %struct.stcxt* %94, i32 0, i32 13
  %95 = load i32, i32* %forgive_me, align 4
  %cmp106 = icmp eq i32 %95, 0
  br i1 %cmp106, label %if.then.179, label %lor.lhs.false.108

lor.lhs.false.108:                                ; preds = %if.then.105
  %96 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %forgive_me109 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %96, i32 0, i32 13
  %97 = load i32, i32* %forgive_me109, align 4
  %cmp110 = icmp slt i32 %97, 0
  br i1 %cmp110, label %land.lhs.true.112, label %if.else.181

land.lhs.true.112:                                ; preds = %lor.lhs.false.108
  %call113 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i32 0, i32 0), i32 1)
  %tobool114 = icmp ne %struct.sv* %call113, null
  br i1 %tobool114, label %cond.false.116, label %cond.true.115

cond.true.115:                                    ; preds = %land.lhs.true.112
  br label %cond.end.173

cond.false.116:                                   ; preds = %land.lhs.true.112
  %call117 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i32 0, i32 0), i32 1)
  %sv_flags118 = getelementptr inbounds %struct.sv, %struct.sv* %call117, i32 0, i32 2
  %98 = load i32, i32* %sv_flags118, align 4
  %and119 = and i32 %98, 262144
  %tobool120 = icmp ne i32 %and119, 0
  br i1 %tobool120, label %cond.true.121, label %cond.false.141

cond.true.121:                                    ; preds = %cond.false.116
  %call122 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i32 0, i32 0), i32 1)
  %sv_any123 = getelementptr inbounds %struct.sv, %struct.sv* %call122, i32 0, i32 0
  %99 = load i8*, i8** %sv_any123, align 8
  %100 = bitcast i8* %99 to %struct.xpv*
  store %struct.xpv* %100, %struct.xpv** @PL_Xpv, align 8
  %tobool124 = icmp ne %struct.xpv* %100, null
  br i1 %tobool124, label %land.rhs.125, label %land.end.138

land.rhs.125:                                     ; preds = %cond.true.121
  %101 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_cur126 = getelementptr inbounds %struct.xpv, %struct.xpv* %101, i32 0, i32 1
  %102 = load i64, i64* %xpv_cur126, align 8
  %cmp127 = icmp ugt i64 %102, 1
  br i1 %cmp127, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs.125
  %103 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_cur129 = getelementptr inbounds %struct.xpv, %struct.xpv* %103, i32 0, i32 1
  %104 = load i64, i64* %xpv_cur129, align 8
  %tobool130 = icmp ne i64 %104, 0
  br i1 %tobool130, label %land.rhs.131, label %land.end.136

land.rhs.131:                                     ; preds = %lor.rhs
  %105 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_pv132 = getelementptr inbounds %struct.xpv, %struct.xpv* %105, i32 0, i32 0
  %106 = load i8*, i8** %xpv_pv132, align 8
  %107 = load i8, i8* %106, align 1
  %conv133 = sext i8 %107 to i32
  %cmp134 = icmp ne i32 %conv133, 48
  br label %land.end.136

land.end.136:                                     ; preds = %land.rhs.131, %lor.rhs
  %108 = phi i1 [ false, %lor.rhs ], [ %cmp134, %land.rhs.131 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end.136, %land.rhs.125
  %109 = phi i1 [ true, %land.rhs.125 ], [ %108, %land.end.136 ]
  br label %land.end.138

land.end.138:                                     ; preds = %lor.end, %cond.true.121
  %110 = phi i1 [ false, %cond.true.121 ], [ %109, %lor.end ]
  %cond140 = select i1 %110, i32 1, i32 0
  br label %cond.end.171

cond.false.141:                                   ; preds = %cond.false.116
  %call142 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i32 0, i32 0), i32 1)
  %sv_flags143 = getelementptr inbounds %struct.sv, %struct.sv* %call142, i32 0, i32 2
  %111 = load i32, i32* %sv_flags143, align 4
  %and144 = and i32 %111, 65536
  %tobool145 = icmp ne i32 %and144, 0
  br i1 %tobool145, label %cond.true.146, label %cond.false.152

cond.true.146:                                    ; preds = %cond.false.141
  %call147 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i32 0, i32 0), i32 1)
  %sv_any148 = getelementptr inbounds %struct.sv, %struct.sv* %call147, i32 0, i32 0
  %112 = load i8*, i8** %sv_any148, align 8
  %113 = bitcast i8* %112 to %struct.xpviv*
  %xiv_iv149 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %113, i32 0, i32 3
  %114 = load i64, i64* %xiv_iv149, align 8
  %cmp150 = icmp ne i64 %114, 0
  %conv151 = zext i1 %cmp150 to i32
  br label %cond.end.169

cond.false.152:                                   ; preds = %cond.false.141
  %call153 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i32 0, i32 0), i32 1)
  %sv_flags154 = getelementptr inbounds %struct.sv, %struct.sv* %call153, i32 0, i32 2
  %115 = load i32, i32* %sv_flags154, align 4
  %and155 = and i32 %115, 131072
  %tobool156 = icmp ne i32 %and155, 0
  br i1 %tobool156, label %cond.true.157, label %cond.false.163

cond.true.157:                                    ; preds = %cond.false.152
  %call158 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i32 0, i32 0), i32 1)
  %sv_any159 = getelementptr inbounds %struct.sv, %struct.sv* %call158, i32 0, i32 0
  %116 = load i8*, i8** %sv_any159, align 8
  %117 = bitcast i8* %116 to %struct.xpvnv*
  %xnv_nv160 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %117, i32 0, i32 4
  %118 = load double, double* %xnv_nv160, align 8
  %cmp161 = fcmp une double %118, 0.000000e+00
  %conv162 = zext i1 %cmp161 to i32
  br label %cond.end.167

cond.false.163:                                   ; preds = %cond.false.152
  %call164 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i32 0, i32 0), i32 1)
  %call165 = call signext i8 @Perl_sv_2bool(%struct.sv* %call164)
  %conv166 = sext i8 %call165 to i32
  br label %cond.end.167

cond.end.167:                                     ; preds = %cond.false.163, %cond.true.157
  %cond168 = phi i32 [ %conv162, %cond.true.157 ], [ %conv166, %cond.false.163 ]
  br label %cond.end.169

cond.end.169:                                     ; preds = %cond.end.167, %cond.true.146
  %cond170 = phi i32 [ %conv151, %cond.true.146 ], [ %cond168, %cond.end.167 ]
  br label %cond.end.171

cond.end.171:                                     ; preds = %cond.end.169, %land.end.138
  %cond172 = phi i32 [ %cond140, %land.end.138 ], [ %cond170, %cond.end.169 ]
  br label %cond.end.173

cond.end.173:                                     ; preds = %cond.end.171, %cond.true.115
  %cond174 = phi i32 [ 0, %cond.true.115 ], [ %cond172, %cond.end.171 ]
  %tobool175 = icmp ne i32 %cond174, 0
  %cond176 = select i1 %tobool175, i32 1, i32 0
  %119 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %forgive_me177 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %119, i32 0, i32 13
  store i32 %cond176, i32* %forgive_me177, align 4
  %tobool178 = icmp ne i32 %cond176, 0
  br i1 %tobool178, label %if.else.181, label %if.then.179

if.then.179:                                      ; preds = %cond.end.173, %if.then.105
  %120 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty180 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %120, i32 0, i32 18
  store i32 1, i32* %s_dirty180, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.82, i32 0, i32 0))
  br label %if.end.192

if.else.181:                                      ; preds = %cond.end.173, %lor.lhs.false.108
  %121 = load %struct.sv*, %struct.sv** %sub, align 8
  %call182 = call %struct.sv* @Perl_newSVsv(%struct.sv* %121)
  store %struct.sv* %call182, %struct.sv** %sv, align 8
  %122 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen183 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %122, i32 0, i32 4
  %123 = load %struct.av*, %struct.av** %aseen183, align 8
  %124 = load i32, i32* %tagnum, align 4
  %125 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %125, %struct.sv** @PL_Sv, align 8
  %126 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool184 = icmp ne %struct.sv* %126, null
  br i1 %tobool184, label %land.rhs.185, label %land.end.189

land.rhs.185:                                     ; preds = %if.else.181
  %127 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt186 = getelementptr inbounds %struct.sv, %struct.sv* %127, i32 0, i32 1
  %128 = load i32, i32* %sv_refcnt186, align 4
  %inc187 = add i32 %128, 1
  store i32 %inc187, i32* %sv_refcnt186, align 4
  %tobool188 = icmp ne i32 %inc187, 0
  br label %land.end.189

land.end.189:                                     ; preds = %land.rhs.185, %if.else.181
  %129 = phi i1 [ false, %if.else.181 ], [ %tobool188, %land.rhs.185 ]
  %land.ext190 = zext i1 %129 to i32
  %130 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call191 = call %struct.sv** @Perl_av_store(%struct.av* %123, i32 %124, %struct.sv* %130)
  %131 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %131, %struct.sv** %retval
  br label %return

if.end.192:                                       ; preds = %if.then.179
  br label %if.end.193

if.end.193:                                       ; preds = %if.end.192, %cond.false.100, %cond.true.95, %cond.true.85, %cond.false.79, %cond.true.78, %cond.true.59
  call void @Perl_push_scope()
  call void @Perl_save_int(i32* @PL_tmps_floor)
  %132 = load i32, i32* @PL_tmps_ix, align 4
  store i32 %132, i32* @PL_tmps_floor, align 4
  %133 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval194 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %133, i32 0, i32 15
  %134 = load %struct.sv*, %struct.sv** %eval194, align 8
  %sv_flags195 = getelementptr inbounds %struct.sv, %struct.sv* %134, i32 0, i32 2
  %135 = load i32, i32* %sv_flags195, align 4
  %and196 = and i32 %135, 524288
  %tobool197 = icmp ne i32 %and196, 0
  br i1 %tobool197, label %land.lhs.true.198, label %if.else.305

land.lhs.true.198:                                ; preds = %if.end.193
  %136 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval199 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %136, i32 0, i32 15
  %137 = load %struct.sv*, %struct.sv** %eval199, align 8
  %sv_any200 = getelementptr inbounds %struct.sv, %struct.sv* %137, i32 0, i32 0
  %138 = load i8*, i8** %sv_any200, align 8
  %139 = bitcast i8* %138 to %struct.xrv*
  %xrv_rv201 = getelementptr inbounds %struct.xrv, %struct.xrv* %139, i32 0, i32 0
  %140 = load %struct.sv*, %struct.sv** %xrv_rv201, align 8
  %sv_flags202 = getelementptr inbounds %struct.sv, %struct.sv* %140, i32 0, i32 2
  %141 = load i32, i32* %sv_flags202, align 4
  %and203 = and i32 %141, 255
  %cmp204 = icmp eq i32 %and203, 12
  br i1 %cmp204, label %if.then.206, label %if.else.305

if.then.206:                                      ; preds = %land.lhs.true.198
  %call207 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0), i32 1)
  store %struct.sv* %call207, %struct.sv** %errsv, align 8
  %142 = load %struct.sv*, %struct.sv** %errsv, align 8
  call void @Perl_sv_setpv(%struct.sv* %142, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i32 0, i32 0))
  %143 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr208 = getelementptr inbounds i32, i32* %143, i32 1
  store i32* %incdec.ptr208, i32** @PL_markstack_ptr, align 8
  %144 = load i32*, i32** @PL_markstack_max, align 8
  %cmp209 = icmp eq i32* %incdec.ptr208, %144
  br i1 %cmp209, label %if.then.211, label %if.end.212

if.then.211:                                      ; preds = %if.then.206
  call void @Perl_markstack_grow()
  br label %if.end.212

if.end.212:                                       ; preds = %if.then.211, %if.then.206
  %145 = load %struct.sv**, %struct.sv*** %sp, align 8
  %146 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %145 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %146 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv213 = trunc i64 %sub.ptr.div to i32
  %147 = load i32*, i32** @PL_markstack_ptr, align 8
  store i32 %conv213, i32* %147, align 4
  store i32 %conv213, i32* %tmp
  %148 = load i32, i32* %tmp
  %149 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %150 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast214 = ptrtoint %struct.sv** %149 to i64
  %sub.ptr.rhs.cast215 = ptrtoint %struct.sv** %150 to i64
  %sub.ptr.sub216 = sub i64 %sub.ptr.lhs.cast214, %sub.ptr.rhs.cast215
  %sub.ptr.div217 = sdiv exact i64 %sub.ptr.sub216, 8
  %cmp218 = icmp slt i64 %sub.ptr.div217, 1
  br i1 %cmp218, label %if.then.220, label %if.end.222

if.then.220:                                      ; preds = %if.end.212
  %151 = load %struct.sv**, %struct.sv*** %sp, align 8
  %152 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call221 = call %struct.sv** @Perl_stack_grow(%struct.sv** %151, %struct.sv** %152, i32 1)
  store %struct.sv** %call221, %struct.sv*** %sp, align 8
  br label %if.end.222

if.end.222:                                       ; preds = %if.then.220, %if.end.212
  %153 = load %struct.sv*, %struct.sv** %sub, align 8
  %call224 = call %struct.sv* @Perl_newSVsv(%struct.sv* %153)
  %call225 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call224)
  %154 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr226 = getelementptr inbounds %struct.sv*, %struct.sv** %154, i32 1
  store %struct.sv** %incdec.ptr226, %struct.sv*** %sp, align 8
  store %struct.sv* %call225, %struct.sv** %incdec.ptr226, align 8
  store %struct.sv* %call225, %struct.sv** %tmp223
  %155 = load %struct.sv*, %struct.sv** %tmp223
  %156 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %156, %struct.sv*** @PL_stack_sp, align 8
  %157 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %eval227 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %157, i32 0, i32 15
  %158 = load %struct.sv*, %struct.sv** %eval227, align 8
  %call228 = call i32 @Perl_call_sv(%struct.sv* %158, i32 0)
  store i32 %call228, i32* %count, align 4
  %159 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %159, %struct.sv*** %sp, align 8
  %160 = load i32, i32* %count, align 4
  %cmp229 = icmp ne i32 %160, 1
  br i1 %cmp229, label %if.then.231, label %if.end.233

if.then.231:                                      ; preds = %if.end.222
  %161 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty232 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %161, i32 0, i32 18
  store i32 1, i32* %s_dirty232, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.84, i32 0, i32 0))
  br label %if.end.233

if.end.233:                                       ; preds = %if.then.231, %if.end.222
  %162 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr234 = getelementptr inbounds %struct.sv*, %struct.sv** %162, i32 -1
  store %struct.sv** %incdec.ptr234, %struct.sv*** %sp, align 8
  %163 = load %struct.sv*, %struct.sv** %162, align 8
  store %struct.sv* %163, %struct.sv** %cv, align 8
  %164 = load %struct.sv*, %struct.sv** %errsv, align 8
  %tobool235 = icmp ne %struct.sv* %164, null
  br i1 %tobool235, label %cond.false.237, label %cond.true.236

cond.true.236:                                    ; preds = %if.end.233
  br i1 false, label %if.then.280, label %if.end.304

cond.false.237:                                   ; preds = %if.end.233
  %165 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags238 = getelementptr inbounds %struct.sv, %struct.sv* %165, i32 0, i32 2
  %166 = load i32, i32* %sv_flags238, align 4
  %and239 = and i32 %166, 262144
  %tobool240 = icmp ne i32 %and239, 0
  br i1 %tobool240, label %cond.true.241, label %cond.false.258

cond.true.241:                                    ; preds = %cond.false.237
  %167 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_any242 = getelementptr inbounds %struct.sv, %struct.sv* %167, i32 0, i32 0
  %168 = load i8*, i8** %sv_any242, align 8
  %169 = bitcast i8* %168 to %struct.xpv*
  store %struct.xpv* %169, %struct.xpv** @PL_Xpv, align 8
  %tobool243 = icmp ne %struct.xpv* %169, null
  br i1 %tobool243, label %land.lhs.true.244, label %cond.false.257

land.lhs.true.244:                                ; preds = %cond.true.241
  %170 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_cur245 = getelementptr inbounds %struct.xpv, %struct.xpv* %170, i32 0, i32 1
  %171 = load i64, i64* %xpv_cur245, align 8
  %cmp246 = icmp ugt i64 %171, 1
  br i1 %cmp246, label %cond.true.256, label %lor.lhs.false.248

lor.lhs.false.248:                                ; preds = %land.lhs.true.244
  %172 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_cur249 = getelementptr inbounds %struct.xpv, %struct.xpv* %172, i32 0, i32 1
  %173 = load i64, i64* %xpv_cur249, align 8
  %tobool250 = icmp ne i64 %173, 0
  br i1 %tobool250, label %land.lhs.true.251, label %cond.false.257

land.lhs.true.251:                                ; preds = %lor.lhs.false.248
  %174 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_pv252 = getelementptr inbounds %struct.xpv, %struct.xpv* %174, i32 0, i32 0
  %175 = load i8*, i8** %xpv_pv252, align 8
  %176 = load i8, i8* %175, align 1
  %conv253 = sext i8 %176 to i32
  %cmp254 = icmp ne i32 %conv253, 48
  br i1 %cmp254, label %cond.true.256, label %cond.false.257

cond.true.256:                                    ; preds = %land.lhs.true.251, %land.lhs.true.244
  br i1 true, label %if.then.280, label %if.end.304

cond.false.257:                                   ; preds = %land.lhs.true.251, %lor.lhs.false.248, %cond.true.241
  br i1 false, label %if.then.280, label %if.end.304

cond.false.258:                                   ; preds = %cond.false.237
  %177 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags259 = getelementptr inbounds %struct.sv, %struct.sv* %177, i32 0, i32 2
  %178 = load i32, i32* %sv_flags259, align 4
  %and260 = and i32 %178, 65536
  %tobool261 = icmp ne i32 %and260, 0
  br i1 %tobool261, label %cond.true.262, label %cond.false.267

cond.true.262:                                    ; preds = %cond.false.258
  %179 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_any263 = getelementptr inbounds %struct.sv, %struct.sv* %179, i32 0, i32 0
  %180 = load i8*, i8** %sv_any263, align 8
  %181 = bitcast i8* %180 to %struct.xpviv*
  %xiv_iv264 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %181, i32 0, i32 3
  %182 = load i64, i64* %xiv_iv264, align 8
  %cmp265 = icmp ne i64 %182, 0
  br i1 %cmp265, label %if.then.280, label %if.end.304

cond.false.267:                                   ; preds = %cond.false.258
  %183 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags268 = getelementptr inbounds %struct.sv, %struct.sv* %183, i32 0, i32 2
  %184 = load i32, i32* %sv_flags268, align 4
  %and269 = and i32 %184, 131072
  %tobool270 = icmp ne i32 %and269, 0
  br i1 %tobool270, label %cond.true.271, label %cond.false.276

cond.true.271:                                    ; preds = %cond.false.267
  %185 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_any272 = getelementptr inbounds %struct.sv, %struct.sv* %185, i32 0, i32 0
  %186 = load i8*, i8** %sv_any272, align 8
  %187 = bitcast i8* %186 to %struct.xpvnv*
  %xnv_nv273 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %187, i32 0, i32 4
  %188 = load double, double* %xnv_nv273, align 8
  %cmp274 = fcmp une double %188, 0.000000e+00
  br i1 %cmp274, label %if.then.280, label %if.end.304

cond.false.276:                                   ; preds = %cond.false.267
  %189 = load %struct.sv*, %struct.sv** %errsv, align 8
  %call277 = call signext i8 @Perl_sv_2bool(%struct.sv* %189)
  %conv278 = sext i8 %call277 to i32
  %tobool279 = icmp ne i32 %conv278, 0
  br i1 %tobool279, label %if.then.280, label %if.end.304

if.then.280:                                      ; preds = %cond.false.276, %cond.true.271, %cond.true.262, %cond.false.257, %cond.true.256, %cond.true.236
  %190 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty281 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %190, i32 0, i32 18
  store i32 1, i32* %s_dirty281, align 4
  %191 = load %struct.sv*, %struct.sv** %sub, align 8
  %sv_flags282 = getelementptr inbounds %struct.sv, %struct.sv* %191, i32 0, i32 2
  %192 = load i32, i32* %sv_flags282, align 4
  %and283 = and i32 %192, 262144
  %cmp284 = icmp eq i32 %and283, 262144
  br i1 %cmp284, label %cond.true.286, label %cond.false.289

cond.true.286:                                    ; preds = %if.then.280
  %193 = load %struct.sv*, %struct.sv** %sub, align 8
  %sv_any287 = getelementptr inbounds %struct.sv, %struct.sv* %193, i32 0, i32 0
  %194 = load i8*, i8** %sv_any287, align 8
  %195 = bitcast i8* %194 to %struct.xpv*
  %xpv_pv288 = getelementptr inbounds %struct.xpv, %struct.xpv* %195, i32 0, i32 0
  %196 = load i8*, i8** %xpv_pv288, align 8
  br label %cond.end.291

cond.false.289:                                   ; preds = %if.then.280
  %197 = load %struct.sv*, %struct.sv** %sub, align 8
  %call290 = call i8* @Perl_sv_2pv_nolen(%struct.sv* %197)
  br label %cond.end.291

cond.end.291:                                     ; preds = %cond.false.289, %cond.true.286
  %cond292 = phi i8* [ %196, %cond.true.286 ], [ %call290, %cond.false.289 ]
  %198 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_flags293 = getelementptr inbounds %struct.sv, %struct.sv* %198, i32 0, i32 2
  %199 = load i32, i32* %sv_flags293, align 4
  %and294 = and i32 %199, 262144
  %cmp295 = icmp eq i32 %and294, 262144
  br i1 %cmp295, label %cond.true.297, label %cond.false.300

cond.true.297:                                    ; preds = %cond.end.291
  %200 = load %struct.sv*, %struct.sv** %errsv, align 8
  %sv_any298 = getelementptr inbounds %struct.sv, %struct.sv* %200, i32 0, i32 0
  %201 = load i8*, i8** %sv_any298, align 8
  %202 = bitcast i8* %201 to %struct.xpv*
  %xpv_pv299 = getelementptr inbounds %struct.xpv, %struct.xpv* %202, i32 0, i32 0
  %203 = load i8*, i8** %xpv_pv299, align 8
  br label %cond.end.302

cond.false.300:                                   ; preds = %cond.end.291
  %204 = load %struct.sv*, %struct.sv** %errsv, align 8
  %call301 = call i8* @Perl_sv_2pv_nolen(%struct.sv* %204)
  br label %cond.end.302

cond.end.302:                                     ; preds = %cond.false.300, %cond.true.297
  %cond303 = phi i8* [ %203, %cond.true.297 ], [ %call301, %cond.false.300 ]
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.85, i32 0, i32 0), i8* %cond292, i8* %cond303)
  br label %if.end.304

if.end.304:                                       ; preds = %cond.end.302, %cond.false.276, %cond.true.271, %cond.true.262, %cond.false.257, %cond.true.256, %cond.true.236
  %205 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %205, %struct.sv*** @PL_stack_sp, align 8
  br label %if.end.318

if.else.305:                                      ; preds = %land.lhs.true.198, %if.end.193
  %206 = load %struct.sv*, %struct.sv** %sub, align 8
  %sv_flags306 = getelementptr inbounds %struct.sv, %struct.sv* %206, i32 0, i32 2
  %207 = load i32, i32* %sv_flags306, align 4
  %and307 = and i32 %207, 262144
  %cmp308 = icmp eq i32 %and307, 262144
  br i1 %cmp308, label %cond.true.310, label %cond.false.313

cond.true.310:                                    ; preds = %if.else.305
  %208 = load %struct.sv*, %struct.sv** %sub, align 8
  %sv_any311 = getelementptr inbounds %struct.sv, %struct.sv* %208, i32 0, i32 0
  %209 = load i8*, i8** %sv_any311, align 8
  %210 = bitcast i8* %209 to %struct.xpv*
  %xpv_pv312 = getelementptr inbounds %struct.xpv, %struct.xpv* %210, i32 0, i32 0
  %211 = load i8*, i8** %xpv_pv312, align 8
  br label %cond.end.315

cond.false.313:                                   ; preds = %if.else.305
  %212 = load %struct.sv*, %struct.sv** %sub, align 8
  %call314 = call i8* @Perl_sv_2pv_nolen(%struct.sv* %212)
  br label %cond.end.315

cond.end.315:                                     ; preds = %cond.false.313, %cond.true.310
  %cond316 = phi i8* [ %211, %cond.true.310 ], [ %call314, %cond.false.313 ]
  %call317 = call %struct.sv* @Perl_eval_pv(i8* %cond316, i32 1)
  store %struct.sv* %call317, %struct.sv** %cv, align 8
  br label %if.end.318

if.end.318:                                       ; preds = %cond.end.315, %if.end.304
  %213 = load %struct.sv*, %struct.sv** %cv, align 8
  %tobool319 = icmp ne %struct.sv* %213, null
  br i1 %tobool319, label %land.lhs.true.320, label %if.else.334

land.lhs.true.320:                                ; preds = %if.end.318
  %214 = load %struct.sv*, %struct.sv** %cv, align 8
  %sv_flags321 = getelementptr inbounds %struct.sv, %struct.sv* %214, i32 0, i32 2
  %215 = load i32, i32* %sv_flags321, align 4
  %and322 = and i32 %215, 524288
  %tobool323 = icmp ne i32 %and322, 0
  br i1 %tobool323, label %land.lhs.true.324, label %if.else.334

land.lhs.true.324:                                ; preds = %land.lhs.true.320
  %216 = load %struct.sv*, %struct.sv** %cv, align 8
  %sv_any325 = getelementptr inbounds %struct.sv, %struct.sv* %216, i32 0, i32 0
  %217 = load i8*, i8** %sv_any325, align 8
  %218 = bitcast i8* %217 to %struct.xrv*
  %xrv_rv326 = getelementptr inbounds %struct.xrv, %struct.xrv* %218, i32 0, i32 0
  %219 = load %struct.sv*, %struct.sv** %xrv_rv326, align 8
  %sv_flags327 = getelementptr inbounds %struct.sv, %struct.sv* %219, i32 0, i32 2
  %220 = load i32, i32* %sv_flags327, align 4
  %and328 = and i32 %220, 255
  %cmp329 = icmp eq i32 %and328, 12
  br i1 %cmp329, label %if.then.331, label %if.else.334

if.then.331:                                      ; preds = %land.lhs.true.324
  %221 = load %struct.sv*, %struct.sv** %cv, align 8
  %sv_any332 = getelementptr inbounds %struct.sv, %struct.sv* %221, i32 0, i32 0
  %222 = load i8*, i8** %sv_any332, align 8
  %223 = bitcast i8* %222 to %struct.xrv*
  %xrv_rv333 = getelementptr inbounds %struct.xrv, %struct.xrv* %223, i32 0, i32 0
  %224 = load %struct.sv*, %struct.sv** %xrv_rv333, align 8
  store %struct.sv* %224, %struct.sv** %sv, align 8
  br label %if.end.347

if.else.334:                                      ; preds = %land.lhs.true.324, %land.lhs.true.320, %if.end.318
  %225 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty335 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %225, i32 0, i32 18
  store i32 1, i32* %s_dirty335, align 4
  %226 = load %struct.sv*, %struct.sv** %sub, align 8
  %sv_flags336 = getelementptr inbounds %struct.sv, %struct.sv* %226, i32 0, i32 2
  %227 = load i32, i32* %sv_flags336, align 4
  %and337 = and i32 %227, 262144
  %cmp338 = icmp eq i32 %and337, 262144
  br i1 %cmp338, label %cond.true.340, label %cond.false.343

cond.true.340:                                    ; preds = %if.else.334
  %228 = load %struct.sv*, %struct.sv** %sub, align 8
  %sv_any341 = getelementptr inbounds %struct.sv, %struct.sv* %228, i32 0, i32 0
  %229 = load i8*, i8** %sv_any341, align 8
  %230 = bitcast i8* %229 to %struct.xpv*
  %xpv_pv342 = getelementptr inbounds %struct.xpv, %struct.xpv* %230, i32 0, i32 0
  %231 = load i8*, i8** %xpv_pv342, align 8
  br label %cond.end.345

cond.false.343:                                   ; preds = %if.else.334
  %232 = load %struct.sv*, %struct.sv** %sub, align 8
  %call344 = call i8* @Perl_sv_2pv_nolen(%struct.sv* %232)
  br label %cond.end.345

cond.end.345:                                     ; preds = %cond.false.343, %cond.true.340
  %cond346 = phi i8* [ %231, %cond.true.340 ], [ %call344, %cond.false.343 ]
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.86, i32 0, i32 0), i8* %cond346)
  br label %if.end.347

if.end.347:                                       ; preds = %cond.end.345, %if.then.331
  %233 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %233, %struct.sv** @PL_Sv, align 8
  %234 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool348 = icmp ne %struct.sv* %234, null
  br i1 %tobool348, label %land.rhs.349, label %land.end.353

land.rhs.349:                                     ; preds = %if.end.347
  %235 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt350 = getelementptr inbounds %struct.sv, %struct.sv* %235, i32 0, i32 1
  %236 = load i32, i32* %sv_refcnt350, align 4
  %inc351 = add i32 %236, 1
  store i32 %inc351, i32* %sv_refcnt350, align 4
  %tobool352 = icmp ne i32 %inc351, 0
  br label %land.end.353

land.end.353:                                     ; preds = %land.rhs.349, %if.end.347
  %237 = phi i1 [ false, %if.end.347 ], [ %tobool352, %land.rhs.349 ]
  %land.ext354 = zext i1 %237 to i32
  %238 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %239 = load %struct.sv*, %struct.sv** %sub, align 8
  call void @Perl_sv_free(%struct.sv* %239)
  %240 = load i32, i32* @PL_tmps_ix, align 4
  %241 = load i32, i32* @PL_tmps_floor, align 4
  %cmp355 = icmp sgt i32 %240, %241
  br i1 %cmp355, label %if.then.357, label %if.end.358

if.then.357:                                      ; preds = %land.end.353
  call void @Perl_free_tmps()
  br label %if.end.358

if.end.358:                                       ; preds = %if.then.357, %land.end.353
  call void @Perl_pop_scope()
  %242 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen359 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %242, i32 0, i32 4
  %243 = load %struct.av*, %struct.av** %aseen359, align 8
  %244 = load i32, i32* %tagnum, align 4
  %245 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %245, %struct.sv** @PL_Sv, align 8
  %246 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool360 = icmp ne %struct.sv* %246, null
  br i1 %tobool360, label %land.rhs.361, label %land.end.365

land.rhs.361:                                     ; preds = %if.end.358
  %247 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt362 = getelementptr inbounds %struct.sv, %struct.sv* %247, i32 0, i32 1
  %248 = load i32, i32* %sv_refcnt362, align 4
  %inc363 = add i32 %248, 1
  store i32 %inc363, i32* %sv_refcnt362, align 4
  %tobool364 = icmp ne i32 %inc363, 0
  br label %land.end.365

land.end.365:                                     ; preds = %land.rhs.361, %if.end.358
  %249 = phi i1 [ false, %if.end.358 ], [ %tobool364, %land.rhs.361 ]
  %land.ext366 = zext i1 %249 to i32
  %250 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call367 = call %struct.sv** @Perl_av_store(%struct.av* %243, i32 %244, %struct.sv* %250)
  %251 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %251, %struct.sv** %retval
  br label %return

return:                                           ; preds = %land.end.365, %land.end.189, %if.then.32, %if.else, %if.then.9, %if.then
  %252 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %252
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @retrieve_other(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_major = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 24
  %1 = load i32, i32* %ver_major, align 4
  %cmp = icmp ne i32 %1, 2
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_minor = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 25
  %3 = load i32, i32* %ver_minor, align 4
  %cmp1 = icmp ne i32 %3, 6
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 18
  store i32 1, i32* %s_dirty, align 4
  %5 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %5, i32 0, i32 23
  %6 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %6, null
  %cond = select i1 %tobool, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.62, i32 0, i32 0)
  %7 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_major2 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %7, i32 0, i32 24
  %8 = load i32, i32* %ver_major2, align 4
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_minor3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 25
  %10 = load i32, i32* %ver_minor3, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.87, i32 0, i32 0), i8* %cond, i32 %8, i32 %10, i32 2, i32 6)
  br label %if.end

if.else:                                          ; preds = %land.lhs.true, %entry
  %11 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %s_dirty4 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %11, i32 0, i32 18
  store i32 1, i32* %s_dirty4, align 4
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 23
  %13 = load %struct._PerlIO**, %struct._PerlIO*** %fio5, align 8
  %tobool6 = icmp ne %struct._PerlIO** %13, null
  %cond7 = select i1 %tobool6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.62, i32 0, i32 0)
  %14 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_major8 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %14, i32 0, i32 24
  %15 = load i32, i32* %ver_major8, align 4
  %16 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %ver_minor9 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %16, i32 0, i32 25
  %17 = load i32, i32* %ver_minor9, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.88, i32 0, i32 0), i8* %cond7, i32 %15, i32 %17)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret %struct.sv* null
}

declare i64 @Perl_my_ntohl(i64) #1

declare void @Perl_sv_taint(%struct.sv*) #1

declare void @Perl_av_extend(%struct.av*, i32) #1

declare void @Perl_hv_ksplit(%struct.hv*, i64) #1

declare i8* @Perl_sv_grow(%struct.sv*, i64) #1

declare void @Perl_sv_magic(%struct.sv*, %struct.sv*, i32, i8*, i32) #1

declare void @Perl_sv_catpv(%struct.sv*, i8*) #1

declare i32 @Perl_eval_sv(%struct.sv*, i32) #1

; Function Attrs: nounwind uwtable
define internal void @pkg_uncache(%struct.hv* %cache, %struct.hv* %pkg, i8* %method) #0 {
entry:
  %cache.addr = alloca %struct.hv*, align 8
  %pkg.addr = alloca %struct.hv*, align 8
  %method.addr = alloca i8*, align 8
  store %struct.hv* %cache, %struct.hv** %cache.addr, align 8
  store %struct.hv* %pkg, %struct.hv** %pkg.addr, align 8
  store i8* %method, i8** %method.addr, align 8
  %0 = load %struct.hv*, %struct.hv** %cache.addr, align 8
  %1 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any = getelementptr inbounds %struct.hv, %struct.hv* %1, i32 0, i32 0
  %2 = load %struct.xpvhv*, %struct.xpvhv** %sv_any, align 8
  %xhv_name = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %2, i32 0, i32 10
  %3 = load i8*, i8** %xhv_name, align 8
  %4 = load %struct.hv*, %struct.hv** %pkg.addr, align 8
  %sv_any1 = getelementptr inbounds %struct.hv, %struct.hv* %4, i32 0, i32 0
  %5 = load %struct.xpvhv*, %struct.xpvhv** %sv_any1, align 8
  %xhv_name2 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %5, i32 0, i32 10
  %6 = load i8*, i8** %xhv_name2, align 8
  %call = call i64 @strlen(i8* %6)
  %conv = trunc i64 %call to i32
  %call3 = call %struct.sv* @Perl_hv_delete(%struct.hv* %0, i8* %3, i32 %conv, i32 2)
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @scalar_call(%struct.sv* %obj, %struct.sv* %hook, i32 %cloning, %struct.av* %av, i32 %flags) #0 {
entry:
  %obj.addr = alloca %struct.sv*, align 8
  %hook.addr = alloca %struct.sv*, align 8
  %cloning.addr = alloca i32, align 4
  %av.addr = alloca %struct.av*, align 8
  %flags.addr = alloca i32, align 4
  %sp = alloca %struct.sv**, align 8
  %count = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  %tmp = alloca i32, align 4
  %tmp9 = alloca %struct.sv*, align 8
  %tmp20 = alloca %struct.sv*, align 8
  %ary = alloca %struct.sv**, align 8
  %cnt = alloca i32, align 4
  %i = alloca i32, align 4
  %tmp40 = alloca %struct.sv*, align 8
  %tmp53 = alloca %struct.sv*, align 8
  store %struct.sv* %obj, %struct.sv** %obj.addr, align 8
  store %struct.sv* %hook, %struct.sv** %hook.addr, align 8
  store i32 %cloning, i32* %cloning.addr, align 4
  store %struct.av* %av, %struct.av** %av.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  store %struct.sv* null, %struct.sv** %sv, align 8
  call void @Perl_push_scope()
  call void @Perl_save_int(i32* @PL_tmps_floor)
  %1 = load i32, i32* @PL_tmps_ix, align 4
  store i32 %1, i32* @PL_tmps_floor, align 4
  %2 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %2, i32 1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %3 = load i32*, i32** @PL_markstack_max, align 8
  %cmp = icmp eq i32* %incdec.ptr, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @Perl_markstack_grow()
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.sv**, %struct.sv*** %sp, align 8
  %5 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %4 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv = trunc i64 %sub.ptr.div to i32
  %6 = load i32*, i32** @PL_markstack_ptr, align 8
  store i32 %conv, i32* %6, align 4
  store i32 %conv, i32* %tmp
  %7 = load i32, i32* %tmp
  %8 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %9 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %8 to i64
  %sub.ptr.rhs.cast2 = ptrtoint %struct.sv** %9 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2
  %sub.ptr.div4 = sdiv exact i64 %sub.ptr.sub3, 8
  %cmp5 = icmp slt i64 %sub.ptr.div4, 1
  br i1 %cmp5, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.end
  %10 = load %struct.sv**, %struct.sv*** %sp, align 8
  %11 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call = call %struct.sv** @Perl_stack_grow(%struct.sv** %10, %struct.sv** %11, i32 1)
  store %struct.sv** %call, %struct.sv*** %sp, align 8
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.7, %if.end
  %12 = load %struct.sv*, %struct.sv** %obj.addr, align 8
  %13 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr10 = getelementptr inbounds %struct.sv*, %struct.sv** %13, i32 1
  store %struct.sv** %incdec.ptr10, %struct.sv*** %sp, align 8
  store %struct.sv* %12, %struct.sv** %incdec.ptr10, align 8
  store %struct.sv* %12, %struct.sv** %tmp9
  %14 = load %struct.sv*, %struct.sv** %tmp9
  %15 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %16 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast11 = ptrtoint %struct.sv** %15 to i64
  %sub.ptr.rhs.cast12 = ptrtoint %struct.sv** %16 to i64
  %sub.ptr.sub13 = sub i64 %sub.ptr.lhs.cast11, %sub.ptr.rhs.cast12
  %sub.ptr.div14 = sdiv exact i64 %sub.ptr.sub13, 8
  %cmp15 = icmp slt i64 %sub.ptr.div14, 1
  br i1 %cmp15, label %if.then.17, label %if.end.19

if.then.17:                                       ; preds = %if.end.8
  %17 = load %struct.sv**, %struct.sv*** %sp, align 8
  %18 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call18 = call %struct.sv** @Perl_stack_grow(%struct.sv** %17, %struct.sv** %18, i32 1)
  store %struct.sv** %call18, %struct.sv*** %sp, align 8
  br label %if.end.19

if.end.19:                                        ; preds = %if.then.17, %if.end.8
  %19 = load i32, i32* %cloning.addr, align 4
  %conv21 = sext i32 %19 to i64
  %call22 = call %struct.sv* @Perl_newSViv(i64 %conv21)
  %call23 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call22)
  %20 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr24 = getelementptr inbounds %struct.sv*, %struct.sv** %20, i32 1
  store %struct.sv** %incdec.ptr24, %struct.sv*** %sp, align 8
  store %struct.sv* %call23, %struct.sv** %incdec.ptr24, align 8
  store %struct.sv* %call23, %struct.sv** %tmp20
  %21 = load %struct.sv*, %struct.sv** %tmp20
  %22 = load %struct.av*, %struct.av** %av.addr, align 8
  %tobool = icmp ne %struct.av* %22, null
  br i1 %tobool, label %if.then.25, label %if.end.58

if.then.25:                                       ; preds = %if.end.19
  %23 = load %struct.av*, %struct.av** %av.addr, align 8
  %sv_any = getelementptr inbounds %struct.av, %struct.av* %23, i32 0, i32 0
  %24 = load %struct.xpvav*, %struct.xpvav** %sv_any, align 8
  %xav_array = getelementptr inbounds %struct.xpvav, %struct.xpvav* %24, i32 0, i32 0
  %25 = load i8*, i8** %xav_array, align 8
  %26 = bitcast i8* %25 to %struct.sv**
  store %struct.sv** %26, %struct.sv*** %ary, align 8
  %27 = load %struct.av*, %struct.av** %av.addr, align 8
  %sv_any28 = getelementptr inbounds %struct.av, %struct.av* %27, i32 0, i32 0
  %28 = load %struct.xpvav*, %struct.xpvav** %sv_any28, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %28, i32 0, i32 1
  %29 = load i64, i64* %xav_fill, align 8
  %add = add nsw i64 %29, 1
  %conv29 = trunc i64 %add to i32
  store i32 %conv29, i32* %cnt, align 4
  %30 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %31 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast31 = ptrtoint %struct.sv** %30 to i64
  %sub.ptr.rhs.cast32 = ptrtoint %struct.sv** %31 to i64
  %sub.ptr.sub33 = sub i64 %sub.ptr.lhs.cast31, %sub.ptr.rhs.cast32
  %sub.ptr.div34 = sdiv exact i64 %sub.ptr.sub33, 8
  %cmp35 = icmp slt i64 %sub.ptr.div34, 1
  br i1 %cmp35, label %if.then.37, label %if.end.39

if.then.37:                                       ; preds = %if.then.25
  %32 = load %struct.sv**, %struct.sv*** %sp, align 8
  %33 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call38 = call %struct.sv** @Perl_stack_grow(%struct.sv** %32, %struct.sv** %33, i32 1)
  store %struct.sv** %call38, %struct.sv*** %sp, align 8
  br label %if.end.39

if.end.39:                                        ; preds = %if.then.37, %if.then.25
  %34 = load %struct.sv**, %struct.sv*** %ary, align 8
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %34, i64 0
  %35 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  %36 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr41 = getelementptr inbounds %struct.sv*, %struct.sv** %36, i32 1
  store %struct.sv** %incdec.ptr41, %struct.sv*** %sp, align 8
  store %struct.sv* %35, %struct.sv** %incdec.ptr41, align 8
  store %struct.sv* %35, %struct.sv** %tmp40
  %37 = load %struct.sv*, %struct.sv** %tmp40
  store i32 1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.39
  %38 = load i32, i32* %i, align 4
  %39 = load i32, i32* %cnt, align 4
  %cmp42 = icmp slt i32 %38, %39
  br i1 %cmp42, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %40 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %41 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast44 = ptrtoint %struct.sv** %40 to i64
  %sub.ptr.rhs.cast45 = ptrtoint %struct.sv** %41 to i64
  %sub.ptr.sub46 = sub i64 %sub.ptr.lhs.cast44, %sub.ptr.rhs.cast45
  %sub.ptr.div47 = sdiv exact i64 %sub.ptr.sub46, 8
  %cmp48 = icmp slt i64 %sub.ptr.div47, 1
  br i1 %cmp48, label %if.then.50, label %if.end.52

if.then.50:                                       ; preds = %for.body
  %42 = load %struct.sv**, %struct.sv*** %sp, align 8
  %43 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call51 = call %struct.sv** @Perl_stack_grow(%struct.sv** %42, %struct.sv** %43, i32 1)
  store %struct.sv** %call51, %struct.sv*** %sp, align 8
  br label %if.end.52

if.end.52:                                        ; preds = %if.then.50, %for.body
  %44 = load i32, i32* %i, align 4
  %idxprom = sext i32 %44 to i64
  %45 = load %struct.sv**, %struct.sv*** %ary, align 8
  %arrayidx54 = getelementptr inbounds %struct.sv*, %struct.sv** %45, i64 %idxprom
  %46 = load %struct.sv*, %struct.sv** %arrayidx54, align 8
  %call55 = call %struct.sv* @Perl_newRV(%struct.sv* %46)
  %call56 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call55)
  %47 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr57 = getelementptr inbounds %struct.sv*, %struct.sv** %47, i32 1
  store %struct.sv** %incdec.ptr57, %struct.sv*** %sp, align 8
  store %struct.sv* %call56, %struct.sv** %incdec.ptr57, align 8
  store %struct.sv* %call56, %struct.sv** %tmp53
  %48 = load %struct.sv*, %struct.sv** %tmp53
  br label %for.inc

for.inc:                                          ; preds = %if.end.52
  %49 = load i32, i32* %i, align 4
  %inc = add nsw i32 %49, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.58

if.end.58:                                        ; preds = %for.end, %if.end.19
  %50 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %50, %struct.sv*** @PL_stack_sp, align 8
  %51 = load %struct.sv*, %struct.sv** %hook.addr, align 8
  %52 = load i32, i32* %flags.addr, align 4
  %call59 = call i32 @Perl_call_sv(%struct.sv* %51, i32 %52)
  store i32 %call59, i32* %count, align 4
  %53 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %53, %struct.sv*** %sp, align 8
  %54 = load i32, i32* %count, align 4
  %tobool60 = icmp ne i32 %54, 0
  br i1 %tobool60, label %if.then.61, label %if.end.66

if.then.61:                                       ; preds = %if.end.58
  %55 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr62 = getelementptr inbounds %struct.sv*, %struct.sv** %55, i32 -1
  store %struct.sv** %incdec.ptr62, %struct.sv*** %sp, align 8
  %56 = load %struct.sv*, %struct.sv** %55, align 8
  store %struct.sv* %56, %struct.sv** %sv, align 8
  %57 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %57, %struct.sv** @PL_Sv, align 8
  %58 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool63 = icmp ne %struct.sv* %58, null
  br i1 %tobool63, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then.61
  %59 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %59, i32 0, i32 1
  %60 = load i32, i32* %sv_refcnt, align 4
  %inc64 = add i32 %60, 1
  store i32 %inc64, i32* %sv_refcnt, align 4
  %tobool65 = icmp ne i32 %inc64, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then.61
  %61 = phi i1 [ false, %if.then.61 ], [ %tobool65, %land.rhs ]
  %land.ext = zext i1 %61 to i32
  %62 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  br label %if.end.66

if.end.66:                                        ; preds = %land.end, %if.end.58
  %63 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %63, %struct.sv*** @PL_stack_sp, align 8
  %64 = load i32, i32* @PL_tmps_ix, align 4
  %65 = load i32, i32* @PL_tmps_floor, align 4
  %cmp67 = icmp sgt i32 %64, %65
  br i1 %cmp67, label %if.then.69, label %if.end.70

if.then.69:                                       ; preds = %if.end.66
  call void @Perl_free_tmps()
  br label %if.end.70

if.end.70:                                        ; preds = %if.then.69, %if.end.66
  call void @Perl_pop_scope()
  %66 = load %struct.sv*, %struct.sv** %sv, align 8
  ret %struct.sv* %66
}

declare %struct.sv* @Perl_hv_delete(%struct.hv*, i8*, i32, i32) #1

declare %struct.he* @Perl_hv_store_ent(%struct.hv*, %struct.sv*, %struct.sv*, i32) #1

declare %struct.sv** @Perl_hv_store_flags(%struct.hv*, i8*, i32, %struct.sv*, i32, i32) #1

declare %struct.sv* @Perl_eval_pv(i8*, i32) #1

; Function Attrs: nounwind uwtable
define internal %struct.sv* @old_retrieve_array(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %av = alloca %struct.av*, align 8
  %sv = alloca %struct.sv*, align 8
  %c = alloca i32, align 4
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 23
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else.18, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 4
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ule i8* %add.ptr, %5
  br i1 %cmp, label %if.then.2, label %if.else.16

if.then.2:                                        ; preds = %if.then
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 21
  %aptr4 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf3, i32 0, i32 2
  %7 = load i8*, i8** %aptr4, align 8
  %8 = ptrtoint i8* %7 to i64
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 21
  %aptr6 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf5, i32 0, i32 2
  %10 = load i8*, i8** %aptr6, align 8
  %11 = ptrtoint i8* %10 to i64
  %and = and i64 %11, -4
  %cmp7 = icmp eq i64 %8, %and
  br i1 %cmp7, label %if.then.8, label %if.else

if.then.8:                                        ; preds = %if.then.2
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf9 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 21
  %aptr10 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf9, i32 0, i32 2
  %13 = load i8*, i8** %aptr10, align 8
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %len, align 4
  br label %if.end

if.else:                                          ; preds = %if.then.2
  %16 = bitcast i32* %len to i8*
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf11 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 21
  %aptr12 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf11, i32 0, i32 2
  %18 = load i8*, i8** %aptr12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %18, i64 4, i32 1, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.8
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf13 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 21
  %aptr14 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf13, i32 0, i32 2
  %20 = load i8*, i8** %aptr14, align 8
  %add.ptr15 = getelementptr inbounds i8, i8* %20, i64 4
  store i8* %add.ptr15, i8** %aptr14, align 8
  br label %if.end.17

if.else.16:                                       ; preds = %if.then
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.17:                                        ; preds = %if.end
  br label %if.end.23

if.else.18:                                       ; preds = %entry
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 23
  %22 = load %struct._PerlIO**, %struct._PerlIO*** %fio19, align 8
  %23 = bitcast i32* %len to i8*
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %22, i8* %23, i64 4)
  %cmp20 = icmp ne i64 %call, 4
  br i1 %cmp20, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %if.else.18
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.22:                                        ; preds = %if.else.18
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.22, %if.end.17
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 11
  %25 = load i32, i32* %netorder, align 4
  %tobool24 = icmp ne i32 %25, 0
  br i1 %tobool24, label %if.then.25, label %if.end.28

if.then.25:                                       ; preds = %if.end.23
  %26 = load i32, i32* %len, align 4
  %conv = sext i32 %26 to i64
  %call26 = call i64 @Perl_my_ntohl(i64 %conv)
  %conv27 = trunc i64 %call26 to i32
  store i32 %conv27, i32* %len, align 4
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.25, %if.end.23
  %call29 = call %struct.av* @Perl_newAV()
  store %struct.av* %call29, %struct.av** %av, align 8
  %27 = load %struct.av*, %struct.av** %av, align 8
  %tobool30 = icmp ne %struct.av* %27, null
  br i1 %tobool30, label %if.end.32, label %if.then.31

if.then.31:                                       ; preds = %if.end.28
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.32:                                        ; preds = %if.end.28
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 4
  %29 = load %struct.av*, %struct.av** %aseen, align 8
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 9
  %31 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %31, 1
  store i64 %inc, i64* %tagnum, align 8
  %conv33 = trunc i64 %31 to i32
  %32 = load %struct.av*, %struct.av** %av, align 8
  %33 = bitcast %struct.av* %32 to %struct.sv*
  store %struct.sv* %33, %struct.sv** @PL_Sv, align 8
  %34 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool34 = icmp ne %struct.sv* %34, null
  br i1 %tobool34, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end.32
  %35 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %35, i32 0, i32 1
  %36 = load i32, i32* %sv_refcnt, align 4
  %inc35 = add i32 %36, 1
  store i32 %inc35, i32* %sv_refcnt, align 4
  %tobool36 = icmp ne i32 %inc35, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.32
  %37 = phi i1 [ false, %if.end.32 ], [ %tobool36, %land.rhs ]
  %land.ext = zext i1 %37 to i32
  %38 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call37 = call %struct.sv** @Perl_av_store(%struct.av* %29, i32 %conv33, %struct.sv* %38)
  %cmp38 = icmp eq %struct.sv** %call37, null
  br i1 %cmp38, label %if.then.40, label %if.end.41

if.then.40:                                       ; preds = %land.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.41:                                        ; preds = %land.end
  %39 = load i32, i32* %len, align 4
  %tobool42 = icmp ne i32 %39, 0
  br i1 %tobool42, label %if.then.43, label %if.else.44

if.then.43:                                       ; preds = %if.end.41
  %40 = load %struct.av*, %struct.av** %av, align 8
  %41 = load i32, i32* %len, align 4
  call void @Perl_av_extend(%struct.av* %40, i32 %41)
  br label %if.end.45

if.else.44:                                       ; preds = %if.end.41
  %42 = load %struct.av*, %struct.av** %av, align 8
  %43 = bitcast %struct.av* %42 to %struct.sv*
  store %struct.sv* %43, %struct.sv** %retval
  br label %return

if.end.45:                                        ; preds = %if.then.43
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.45
  %44 = load i32, i32* %i, align 4
  %45 = load i32, i32* %len, align 4
  %cmp46 = icmp slt i32 %44, %45
  br i1 %cmp46, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %46 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio48 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %46, i32 0, i32 23
  %47 = load %struct._PerlIO**, %struct._PerlIO*** %fio48, align 8
  %tobool49 = icmp ne %struct._PerlIO** %47, null
  br i1 %tobool49, label %if.else.63, label %if.then.50

if.then.50:                                       ; preds = %for.body
  %48 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf51 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %48, i32 0, i32 21
  %aptr52 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf51, i32 0, i32 2
  %49 = load i8*, i8** %aptr52, align 8
  %50 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf53 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %50, i32 0, i32 21
  %aend54 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf53, i32 0, i32 3
  %51 = load i8*, i8** %aend54, align 8
  %cmp55 = icmp ult i8* %49, %51
  br i1 %cmp55, label %if.then.57, label %if.else.61

if.then.57:                                       ; preds = %if.then.50
  %52 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf58 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %52, i32 0, i32 21
  %aptr59 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf58, i32 0, i32 2
  %53 = load i8*, i8** %aptr59, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %53, i32 1
  store i8* %incdec.ptr, i8** %aptr59, align 8
  %54 = load i8, i8* %53, align 1
  %conv60 = zext i8 %54 to i32
  store i32 %conv60, i32* %c, align 4
  br label %if.end.62

if.else.61:                                       ; preds = %if.then.50
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.62:                                        ; preds = %if.then.57
  br label %if.end.70

if.else.63:                                       ; preds = %for.body
  %55 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio64 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %55, i32 0, i32 23
  %56 = load %struct._PerlIO**, %struct._PerlIO*** %fio64, align 8
  %call65 = call i32 @PerlIO_getc(%struct._PerlIO** %56)
  store i32 %call65, i32* %c, align 4
  %cmp66 = icmp eq i32 %call65, -1
  br i1 %cmp66, label %if.then.68, label %if.end.69

if.then.68:                                       ; preds = %if.else.63
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.69:                                        ; preds = %if.else.63
  br label %if.end.70

if.end.70:                                        ; preds = %if.end.69, %if.end.62
  %57 = load i32, i32* %c, align 4
  %cmp71 = icmp eq i32 %57, 73
  br i1 %cmp71, label %if.then.73, label %if.end.74

if.then.73:                                       ; preds = %if.end.70
  br label %for.inc

if.end.74:                                        ; preds = %if.end.70
  %58 = load i32, i32* %c, align 4
  %cmp75 = icmp ne i32 %58, 105
  br i1 %cmp75, label %if.then.77, label %if.end.79

if.then.77:                                       ; preds = %if.end.74
  %call78 = call %struct.sv* @retrieve_other(%struct.stcxt* null, i8* null)
  br label %if.end.79

if.end.79:                                        ; preds = %if.then.77, %if.end.74
  %59 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call80 = call %struct.sv* @retrieve(%struct.stcxt* %59, i8* null)
  store %struct.sv* %call80, %struct.sv** %sv, align 8
  %60 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool81 = icmp ne %struct.sv* %60, null
  br i1 %tobool81, label %if.end.83, label %if.then.82

if.then.82:                                       ; preds = %if.end.79
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.83:                                        ; preds = %if.end.79
  %61 = load %struct.av*, %struct.av** %av, align 8
  %62 = load i32, i32* %i, align 4
  %63 = load %struct.sv*, %struct.sv** %sv, align 8
  %call84 = call %struct.sv** @Perl_av_store(%struct.av* %61, i32 %62, %struct.sv* %63)
  %cmp85 = icmp eq %struct.sv** %call84, null
  br i1 %cmp85, label %if.then.87, label %if.end.88

if.then.87:                                       ; preds = %if.end.83
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.88:                                        ; preds = %if.end.83
  br label %for.inc

for.inc:                                          ; preds = %if.end.88, %if.then.73
  %64 = load i32, i32* %i, align 4
  %inc89 = add nsw i32 %64, 1
  store i32 %inc89, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %65 = load %struct.av*, %struct.av** %av, align 8
  %66 = bitcast %struct.av* %65 to %struct.sv*
  store %struct.sv* %66, %struct.sv** %retval
  br label %return

return:                                           ; preds = %for.end, %if.then.87, %if.then.82, %if.then.68, %if.else.61, %if.else.44, %if.then.40, %if.then.31, %if.then.21, %if.else.16
  %67 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %67
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @old_retrieve_hash(%struct.stcxt* %cxt, i8* %cname) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %cxt.addr = alloca %struct.stcxt*, align 8
  %cname.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  %size = alloca i32, align 4
  %i = alloca i32, align 4
  %hv = alloca %struct.hv*, align 8
  %sv = alloca %struct.sv*, align 8
  %c = alloca i32, align 4
  store %struct.stcxt* %cxt, %struct.stcxt** %cxt.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  store %struct.sv* null, %struct.sv** %sv, align 8
  %0 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio = getelementptr inbounds %struct.stcxt, %struct.stcxt* %0, i32 0, i32 23
  %1 = load %struct._PerlIO**, %struct._PerlIO*** %fio, align 8
  %tobool = icmp ne %struct._PerlIO** %1, null
  br i1 %tobool, label %if.else.18, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %2, i32 0, i32 21
  %aptr = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf, i32 0, i32 2
  %3 = load i8*, i8** %aptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 4
  %4 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf1 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %4, i32 0, i32 21
  %aend = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf1, i32 0, i32 3
  %5 = load i8*, i8** %aend, align 8
  %cmp = icmp ule i8* %add.ptr, %5
  br i1 %cmp, label %if.then.2, label %if.else.16

if.then.2:                                        ; preds = %if.then
  %6 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf3 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %6, i32 0, i32 21
  %aptr4 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf3, i32 0, i32 2
  %7 = load i8*, i8** %aptr4, align 8
  %8 = ptrtoint i8* %7 to i64
  %9 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf5 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %9, i32 0, i32 21
  %aptr6 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf5, i32 0, i32 2
  %10 = load i8*, i8** %aptr6, align 8
  %11 = ptrtoint i8* %10 to i64
  %and = and i64 %11, -4
  %cmp7 = icmp eq i64 %8, %and
  br i1 %cmp7, label %if.then.8, label %if.else

if.then.8:                                        ; preds = %if.then.2
  %12 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf9 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %12, i32 0, i32 21
  %aptr10 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf9, i32 0, i32 2
  %13 = load i8*, i8** %aptr10, align 8
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %len, align 4
  br label %if.end

if.else:                                          ; preds = %if.then.2
  %16 = bitcast i32* %len to i8*
  %17 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf11 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %17, i32 0, i32 21
  %aptr12 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf11, i32 0, i32 2
  %18 = load i8*, i8** %aptr12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %18, i64 4, i32 1, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.8
  %19 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf13 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %19, i32 0, i32 21
  %aptr14 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf13, i32 0, i32 2
  %20 = load i8*, i8** %aptr14, align 8
  %add.ptr15 = getelementptr inbounds i8, i8* %20, i64 4
  store i8* %add.ptr15, i8** %aptr14, align 8
  br label %if.end.17

if.else.16:                                       ; preds = %if.then
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.17:                                        ; preds = %if.end
  br label %if.end.23

if.else.18:                                       ; preds = %entry
  %21 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio19 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %21, i32 0, i32 23
  %22 = load %struct._PerlIO**, %struct._PerlIO*** %fio19, align 8
  %23 = bitcast i32* %len to i8*
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %22, i8* %23, i64 4)
  %cmp20 = icmp ne i64 %call, 4
  br i1 %cmp20, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %if.else.18
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.22:                                        ; preds = %if.else.18
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.22, %if.end.17
  %24 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder = getelementptr inbounds %struct.stcxt, %struct.stcxt* %24, i32 0, i32 11
  %25 = load i32, i32* %netorder, align 4
  %tobool24 = icmp ne i32 %25, 0
  br i1 %tobool24, label %if.then.25, label %if.end.28

if.then.25:                                       ; preds = %if.end.23
  %26 = load i32, i32* %len, align 4
  %conv = sext i32 %26 to i64
  %call26 = call i64 @Perl_my_ntohl(i64 %conv)
  %conv27 = trunc i64 %call26 to i32
  store i32 %conv27, i32* %len, align 4
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.25, %if.end.23
  %call29 = call %struct.hv* @Perl_newHV()
  store %struct.hv* %call29, %struct.hv** %hv, align 8
  %27 = load %struct.hv*, %struct.hv** %hv, align 8
  %tobool30 = icmp ne %struct.hv* %27, null
  br i1 %tobool30, label %if.end.32, label %if.then.31

if.then.31:                                       ; preds = %if.end.28
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.32:                                        ; preds = %if.end.28
  %28 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %aseen = getelementptr inbounds %struct.stcxt, %struct.stcxt* %28, i32 0, i32 4
  %29 = load %struct.av*, %struct.av** %aseen, align 8
  %30 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %tagnum = getelementptr inbounds %struct.stcxt, %struct.stcxt* %30, i32 0, i32 9
  %31 = load i64, i64* %tagnum, align 8
  %inc = add nsw i64 %31, 1
  store i64 %inc, i64* %tagnum, align 8
  %conv33 = trunc i64 %31 to i32
  %32 = load %struct.hv*, %struct.hv** %hv, align 8
  %33 = bitcast %struct.hv* %32 to %struct.sv*
  store %struct.sv* %33, %struct.sv** @PL_Sv, align 8
  %34 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool34 = icmp ne %struct.sv* %34, null
  br i1 %tobool34, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end.32
  %35 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %35, i32 0, i32 1
  %36 = load i32, i32* %sv_refcnt, align 4
  %inc35 = add i32 %36, 1
  store i32 %inc35, i32* %sv_refcnt, align 4
  %tobool36 = icmp ne i32 %inc35, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.32
  %37 = phi i1 [ false, %if.end.32 ], [ %tobool36, %land.rhs ]
  %land.ext = zext i1 %37 to i32
  %38 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call37 = call %struct.sv** @Perl_av_store(%struct.av* %29, i32 %conv33, %struct.sv* %38)
  %cmp38 = icmp eq %struct.sv** %call37, null
  br i1 %cmp38, label %if.then.40, label %if.end.41

if.then.40:                                       ; preds = %land.end
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.41:                                        ; preds = %land.end
  %39 = load i32, i32* %len, align 4
  %cmp42 = icmp eq i32 %39, 0
  br i1 %cmp42, label %if.then.44, label %if.end.45

if.then.44:                                       ; preds = %if.end.41
  %40 = load %struct.hv*, %struct.hv** %hv, align 8
  %41 = bitcast %struct.hv* %40 to %struct.sv*
  store %struct.sv* %41, %struct.sv** %retval
  br label %return

if.end.45:                                        ; preds = %if.end.41
  %42 = load %struct.hv*, %struct.hv** %hv, align 8
  %43 = load i32, i32* %len, align 4
  %conv46 = sext i32 %43 to i64
  call void @Perl_hv_ksplit(%struct.hv* %42, i64 %conv46)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.45
  %44 = load i32, i32* %i, align 4
  %45 = load i32, i32* %len, align 4
  %cmp47 = icmp slt i32 %44, %45
  br i1 %cmp47, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %46 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio49 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %46, i32 0, i32 23
  %47 = load %struct._PerlIO**, %struct._PerlIO*** %fio49, align 8
  %tobool50 = icmp ne %struct._PerlIO** %47, null
  br i1 %tobool50, label %if.else.64, label %if.then.51

if.then.51:                                       ; preds = %for.body
  %48 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf52 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %48, i32 0, i32 21
  %aptr53 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf52, i32 0, i32 2
  %49 = load i8*, i8** %aptr53, align 8
  %50 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf54 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %50, i32 0, i32 21
  %aend55 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf54, i32 0, i32 3
  %51 = load i8*, i8** %aend55, align 8
  %cmp56 = icmp ult i8* %49, %51
  br i1 %cmp56, label %if.then.58, label %if.else.62

if.then.58:                                       ; preds = %if.then.51
  %52 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf59 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %52, i32 0, i32 21
  %aptr60 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf59, i32 0, i32 2
  %53 = load i8*, i8** %aptr60, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %53, i32 1
  store i8* %incdec.ptr, i8** %aptr60, align 8
  %54 = load i8, i8* %53, align 1
  %conv61 = zext i8 %54 to i32
  store i32 %conv61, i32* %c, align 4
  br label %if.end.63

if.else.62:                                       ; preds = %if.then.51
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.63:                                        ; preds = %if.then.58
  br label %if.end.71

if.else.64:                                       ; preds = %for.body
  %55 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio65 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %55, i32 0, i32 23
  %56 = load %struct._PerlIO**, %struct._PerlIO*** %fio65, align 8
  %call66 = call i32 @PerlIO_getc(%struct._PerlIO** %56)
  store i32 %call66, i32* %c, align 4
  %cmp67 = icmp eq i32 %call66, -1
  br i1 %cmp67, label %if.then.69, label %if.end.70

if.then.69:                                       ; preds = %if.else.64
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.70:                                        ; preds = %if.else.64
  br label %if.end.71

if.end.71:                                        ; preds = %if.end.70, %if.end.63
  %57 = load i32, i32* %c, align 4
  %cmp72 = icmp eq i32 %57, 86
  br i1 %cmp72, label %if.then.74, label %if.else.86

if.then.74:                                       ; preds = %if.end.71
  %58 = load %struct.sv*, %struct.sv** @old_retrieve_hash.sv_h_undef, align 8
  %tobool75 = icmp ne %struct.sv* %58, null
  br i1 %tobool75, label %if.end.78, label %if.then.76

if.then.76:                                       ; preds = %if.then.74
  %call77 = call %struct.sv* @Perl_newSVsv(%struct.sv* @PL_sv_undef)
  store %struct.sv* %call77, %struct.sv** @old_retrieve_hash.sv_h_undef, align 8
  br label %if.end.78

if.end.78:                                        ; preds = %if.then.76, %if.then.74
  %59 = load %struct.sv*, %struct.sv** @old_retrieve_hash.sv_h_undef, align 8
  store %struct.sv* %59, %struct.sv** @PL_Sv, align 8
  %60 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool79 = icmp ne %struct.sv* %60, null
  br i1 %tobool79, label %land.rhs.80, label %land.end.84

land.rhs.80:                                      ; preds = %if.end.78
  %61 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt81 = getelementptr inbounds %struct.sv, %struct.sv* %61, i32 0, i32 1
  %62 = load i32, i32* %sv_refcnt81, align 4
  %inc82 = add i32 %62, 1
  store i32 %inc82, i32* %sv_refcnt81, align 4
  %tobool83 = icmp ne i32 %inc82, 0
  br label %land.end.84

land.end.84:                                      ; preds = %land.rhs.80, %if.end.78
  %63 = phi i1 [ false, %if.end.78 ], [ %tobool83, %land.rhs.80 ]
  %land.ext85 = zext i1 %63 to i32
  %64 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  store %struct.sv* %64, %struct.sv** %sv, align 8
  br label %if.end.97

if.else.86:                                       ; preds = %if.end.71
  %65 = load i32, i32* %c, align 4
  %cmp87 = icmp eq i32 %65, 118
  br i1 %cmp87, label %if.then.89, label %if.else.94

if.then.89:                                       ; preds = %if.else.86
  %66 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %call90 = call %struct.sv* @retrieve(%struct.stcxt* %66, i8* null)
  store %struct.sv* %call90, %struct.sv** %sv, align 8
  %67 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool91 = icmp ne %struct.sv* %67, null
  br i1 %tobool91, label %if.end.93, label %if.then.92

if.then.92:                                       ; preds = %if.then.89
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.93:                                        ; preds = %if.then.89
  br label %if.end.96

if.else.94:                                       ; preds = %if.else.86
  %call95 = call %struct.sv* @retrieve_other(%struct.stcxt* null, i8* null)
  br label %if.end.96

if.end.96:                                        ; preds = %if.else.94, %if.end.93
  br label %if.end.97

if.end.97:                                        ; preds = %if.end.96, %land.end.84
  %68 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio98 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %68, i32 0, i32 23
  %69 = load %struct._PerlIO**, %struct._PerlIO*** %fio98, align 8
  %tobool99 = icmp ne %struct._PerlIO** %69, null
  br i1 %tobool99, label %if.else.114, label %if.then.100

if.then.100:                                      ; preds = %if.end.97
  %70 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf101 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %70, i32 0, i32 21
  %aptr102 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf101, i32 0, i32 2
  %71 = load i8*, i8** %aptr102, align 8
  %72 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf103 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %72, i32 0, i32 21
  %aend104 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf103, i32 0, i32 3
  %73 = load i8*, i8** %aend104, align 8
  %cmp105 = icmp ult i8* %71, %73
  br i1 %cmp105, label %if.then.107, label %if.else.112

if.then.107:                                      ; preds = %if.then.100
  %74 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf108 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %74, i32 0, i32 21
  %aptr109 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf108, i32 0, i32 2
  %75 = load i8*, i8** %aptr109, align 8
  %incdec.ptr110 = getelementptr inbounds i8, i8* %75, i32 1
  store i8* %incdec.ptr110, i8** %aptr109, align 8
  %76 = load i8, i8* %75, align 1
  %conv111 = zext i8 %76 to i32
  store i32 %conv111, i32* %c, align 4
  br label %if.end.113

if.else.112:                                      ; preds = %if.then.100
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.113:                                       ; preds = %if.then.107
  br label %if.end.121

if.else.114:                                      ; preds = %if.end.97
  %77 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio115 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %77, i32 0, i32 23
  %78 = load %struct._PerlIO**, %struct._PerlIO*** %fio115, align 8
  %call116 = call i32 @PerlIO_getc(%struct._PerlIO** %78)
  store i32 %call116, i32* %c, align 4
  %cmp117 = icmp eq i32 %call116, -1
  br i1 %cmp117, label %if.then.119, label %if.end.120

if.then.119:                                      ; preds = %if.else.114
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.120:                                       ; preds = %if.else.114
  br label %if.end.121

if.end.121:                                       ; preds = %if.end.120, %if.end.113
  %79 = load i32, i32* %c, align 4
  %cmp122 = icmp ne i32 %79, 107
  br i1 %cmp122, label %if.then.124, label %if.end.126

if.then.124:                                      ; preds = %if.end.121
  %call125 = call %struct.sv* @retrieve_other(%struct.stcxt* null, i8* null)
  br label %if.end.126

if.end.126:                                       ; preds = %if.then.124, %if.end.121
  %80 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio127 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %80, i32 0, i32 23
  %81 = load %struct._PerlIO**, %struct._PerlIO*** %fio127, align 8
  %tobool128 = icmp ne %struct._PerlIO** %81, null
  br i1 %tobool128, label %if.else.157, label %if.then.129

if.then.129:                                      ; preds = %if.end.126
  %82 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf130 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %82, i32 0, i32 21
  %aptr131 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf130, i32 0, i32 2
  %83 = load i8*, i8** %aptr131, align 8
  %add.ptr132 = getelementptr inbounds i8, i8* %83, i64 4
  %84 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf133 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %84, i32 0, i32 21
  %aend134 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf133, i32 0, i32 3
  %85 = load i8*, i8** %aend134, align 8
  %cmp135 = icmp ule i8* %add.ptr132, %85
  br i1 %cmp135, label %if.then.137, label %if.else.155

if.then.137:                                      ; preds = %if.then.129
  %86 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf138 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %86, i32 0, i32 21
  %aptr139 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf138, i32 0, i32 2
  %87 = load i8*, i8** %aptr139, align 8
  %88 = ptrtoint i8* %87 to i64
  %89 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf140 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %89, i32 0, i32 21
  %aptr141 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf140, i32 0, i32 2
  %90 = load i8*, i8** %aptr141, align 8
  %91 = ptrtoint i8* %90 to i64
  %and142 = and i64 %91, -4
  %cmp143 = icmp eq i64 %88, %and142
  br i1 %cmp143, label %if.then.145, label %if.else.148

if.then.145:                                      ; preds = %if.then.137
  %92 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf146 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %92, i32 0, i32 21
  %aptr147 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf146, i32 0, i32 2
  %93 = load i8*, i8** %aptr147, align 8
  %94 = bitcast i8* %93 to i32*
  %95 = load i32, i32* %94, align 4
  store i32 %95, i32* %size, align 4
  br label %if.end.151

if.else.148:                                      ; preds = %if.then.137
  %96 = bitcast i32* %size to i8*
  %97 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf149 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %97, i32 0, i32 21
  %aptr150 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf149, i32 0, i32 2
  %98 = load i8*, i8** %aptr150, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %96, i8* %98, i64 4, i32 1, i1 false)
  br label %if.end.151

if.end.151:                                       ; preds = %if.else.148, %if.then.145
  %99 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf152 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %99, i32 0, i32 21
  %aptr153 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf152, i32 0, i32 2
  %100 = load i8*, i8** %aptr153, align 8
  %add.ptr154 = getelementptr inbounds i8, i8* %100, i64 4
  store i8* %add.ptr154, i8** %aptr153, align 8
  br label %if.end.156

if.else.155:                                      ; preds = %if.then.129
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.156:                                       ; preds = %if.end.151
  br label %if.end.164

if.else.157:                                      ; preds = %if.end.126
  %101 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio158 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %101, i32 0, i32 23
  %102 = load %struct._PerlIO**, %struct._PerlIO*** %fio158, align 8
  %103 = bitcast i32* %size to i8*
  %call159 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %102, i8* %103, i64 4)
  %cmp160 = icmp ne i64 %call159, 4
  br i1 %cmp160, label %if.then.162, label %if.end.163

if.then.162:                                      ; preds = %if.else.157
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.163:                                       ; preds = %if.else.157
  br label %if.end.164

if.end.164:                                       ; preds = %if.end.163, %if.end.156
  %104 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %netorder165 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %104, i32 0, i32 11
  %105 = load i32, i32* %netorder165, align 4
  %tobool166 = icmp ne i32 %105, 0
  br i1 %tobool166, label %if.then.167, label %if.end.171

if.then.167:                                      ; preds = %if.end.164
  %106 = load i32, i32* %size, align 4
  %conv168 = sext i32 %106 to i64
  %call169 = call i64 @Perl_my_ntohl(i64 %conv168)
  %conv170 = trunc i64 %call169 to i32
  store i32 %conv170, i32* %size, align 4
  br label %if.end.171

if.end.171:                                       ; preds = %if.then.167, %if.end.164
  %107 = load i32, i32* %size, align 4
  %conv172 = sext i32 %107 to i64
  %108 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf = getelementptr inbounds %struct.stcxt, %struct.stcxt* %108, i32 0, i32 20
  %asiz = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf, i32 0, i32 1
  %109 = load i64, i64* %asiz, align 8
  %cmp173 = icmp uge i64 %conv172, %109
  br i1 %cmp173, label %if.then.175, label %if.end.185

if.then.175:                                      ; preds = %if.end.171
  %110 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf176 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %110, i32 0, i32 20
  %arena = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf176, i32 0, i32 0
  %111 = load i8*, i8** %arena, align 8
  %112 = load i32, i32* %size, align 4
  %conv177 = sext i32 %112 to i64
  %add = add i64 %conv177, 1
  %mul = mul i64 %add, 1
  %call178 = call i8* @Perl_safesysrealloc(i8* %111, i64 %mul)
  %113 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf179 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %113, i32 0, i32 20
  %arena180 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf179, i32 0, i32 0
  store i8* %call178, i8** %arena180, align 8
  %114 = load i32, i32* %size, align 4
  %conv181 = sext i32 %114 to i64
  %add182 = add i64 %conv181, 1
  %115 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf183 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %115, i32 0, i32 20
  %asiz184 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf183, i32 0, i32 1
  store i64 %add182, i64* %asiz184, align 8
  br label %if.end.185

if.end.185:                                       ; preds = %if.then.175, %if.end.171
  %116 = load i32, i32* %size, align 4
  %tobool186 = icmp ne i32 %116, 0
  br i1 %tobool186, label %if.then.187, label %if.end.222

if.then.187:                                      ; preds = %if.end.185
  %117 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio188 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %117, i32 0, i32 23
  %118 = load %struct._PerlIO**, %struct._PerlIO*** %fio188, align 8
  %tobool189 = icmp ne %struct._PerlIO** %118, null
  br i1 %tobool189, label %if.else.210, label %if.then.190

if.then.190:                                      ; preds = %if.then.187
  %119 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf191 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %119, i32 0, i32 21
  %aptr192 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf191, i32 0, i32 2
  %120 = load i8*, i8** %aptr192, align 8
  %121 = load i32, i32* %size, align 4
  %idx.ext = sext i32 %121 to i64
  %add.ptr193 = getelementptr inbounds i8, i8* %120, i64 %idx.ext
  %122 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf194 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %122, i32 0, i32 21
  %aend195 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf194, i32 0, i32 3
  %123 = load i8*, i8** %aend195, align 8
  %cmp196 = icmp ule i8* %add.ptr193, %123
  br i1 %cmp196, label %if.then.198, label %if.else.208

if.then.198:                                      ; preds = %if.then.190
  %124 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf199 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %124, i32 0, i32 20
  %arena200 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf199, i32 0, i32 0
  %125 = load i8*, i8** %arena200, align 8
  %126 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf201 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %126, i32 0, i32 21
  %aptr202 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf201, i32 0, i32 2
  %127 = load i8*, i8** %aptr202, align 8
  %128 = load i32, i32* %size, align 4
  %conv203 = sext i32 %128 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %125, i8* %127, i64 %conv203, i32 1, i1 false)
  %129 = load i32, i32* %size, align 4
  %130 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %membuf204 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %130, i32 0, i32 21
  %aptr205 = getelementptr inbounds %struct.extendable, %struct.extendable* %membuf204, i32 0, i32 2
  %131 = load i8*, i8** %aptr205, align 8
  %idx.ext206 = sext i32 %129 to i64
  %add.ptr207 = getelementptr inbounds i8, i8* %131, i64 %idx.ext206
  store i8* %add.ptr207, i8** %aptr205, align 8
  br label %if.end.209

if.else.208:                                      ; preds = %if.then.190
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.209:                                       ; preds = %if.then.198
  br label %if.end.221

if.else.210:                                      ; preds = %if.then.187
  %132 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %fio211 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %132, i32 0, i32 23
  %133 = load %struct._PerlIO**, %struct._PerlIO*** %fio211, align 8
  %134 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf212 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %134, i32 0, i32 20
  %arena213 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf212, i32 0, i32 0
  %135 = load i8*, i8** %arena213, align 8
  %136 = load i32, i32* %size, align 4
  %conv214 = sext i32 %136 to i64
  %call215 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %133, i8* %135, i64 %conv214)
  %137 = load i32, i32* %size, align 4
  %conv216 = sext i32 %137 to i64
  %cmp217 = icmp ne i64 %call215, %conv216
  br i1 %cmp217, label %if.then.219, label %if.end.220

if.then.219:                                      ; preds = %if.else.210
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.220:                                       ; preds = %if.else.210
  br label %if.end.221

if.end.221:                                       ; preds = %if.end.220, %if.end.209
  br label %if.end.222

if.end.222:                                       ; preds = %if.end.221, %if.end.185
  %138 = load i32, i32* %size, align 4
  %idxprom = sext i32 %138 to i64
  %139 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf223 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %139, i32 0, i32 20
  %arena224 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf223, i32 0, i32 0
  %140 = load i8*, i8** %arena224, align 8
  %arrayidx = getelementptr inbounds i8, i8* %140, i64 %idxprom
  store i8 0, i8* %arrayidx, align 1
  %141 = load %struct.hv*, %struct.hv** %hv, align 8
  %142 = load %struct.stcxt*, %struct.stcxt** %cxt.addr, align 8
  %keybuf225 = getelementptr inbounds %struct.stcxt, %struct.stcxt* %142, i32 0, i32 20
  %arena226 = getelementptr inbounds %struct.extendable, %struct.extendable* %keybuf225, i32 0, i32 0
  %143 = load i8*, i8** %arena226, align 8
  %144 = load i32, i32* %size, align 4
  %145 = load %struct.sv*, %struct.sv** %sv, align 8
  %call227 = call %struct.sv** @Perl_hv_store(%struct.hv* %141, i8* %143, i32 %144, %struct.sv* %145, i32 0)
  %cmp228 = icmp eq %struct.sv** %call227, null
  br i1 %cmp228, label %if.then.230, label %if.end.231

if.then.230:                                      ; preds = %if.end.222
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end.231:                                       ; preds = %if.end.222
  br label %for.inc

for.inc:                                          ; preds = %if.end.231
  %146 = load i32, i32* %i, align 4
  %inc232 = add nsw i32 %146, 1
  store i32 %inc232, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %147 = load %struct.hv*, %struct.hv** %hv, align 8
  %148 = bitcast %struct.hv* %147 to %struct.sv*
  store %struct.sv* %148, %struct.sv** %retval
  br label %return

return:                                           ; preds = %for.end, %if.then.230, %if.then.219, %if.else.208, %if.then.162, %if.else.155, %if.then.119, %if.else.112, %if.then.92, %if.then.69, %if.else.62, %if.then.44, %if.then.40, %if.then.31, %if.then.21, %if.else.16
  %149 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %149
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
